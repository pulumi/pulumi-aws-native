// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2.Inputs
{

    public sealed class SpotFleetLaunchSpecificationArgs : global::Pulumi.ResourceArgs
    {
        [Input("blockDeviceMappings")]
        private InputList<Inputs.SpotFleetBlockDeviceMappingArgs>? _blockDeviceMappings;

        /// <summary>
        /// Specifies a block device mapping.
        /// 
        /// You can specify `Ebs` or `VirtualName` , but not both.
        /// </summary>
        public InputList<Inputs.SpotFleetBlockDeviceMappingArgs> BlockDeviceMappings
        {
            get => _blockDeviceMappings ?? (_blockDeviceMappings = new InputList<Inputs.SpotFleetBlockDeviceMappingArgs>());
            set => _blockDeviceMappings = value;
        }

        /// <summary>
        /// Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
        /// 
        /// Default: `false`
        /// </summary>
        [Input("ebsOptimized")]
        public Input<bool>? EbsOptimized { get; set; }

        /// <summary>
        /// Describes an IAM instance profile.
        /// </summary>
        [Input("iamInstanceProfile")]
        public Input<Inputs.SpotFleetIamInstanceProfileSpecificationArgs>? IamInstanceProfile { get; set; }

        /// <summary>
        /// The ID of the AMI.
        /// </summary>
        [Input("imageId", required: true)]
        public Input<string> ImageId { get; set; } = null!;

        /// <summary>
        /// The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.
        /// 
        /// You must specify `VCpuCount` and `MemoryMiB` . All other attributes are optional. Any unspecified optional attribute is set to its default.
        /// 
        /// When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.
        /// 
        /// To limit the list of instance types from which Amazon EC2 can identify matching instance types, you can use one of the following parameters, but not both in the same request:
        /// 
        /// - `AllowedInstanceTypes` - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.
        /// - `ExcludedInstanceTypes` - The instance types to exclude from the list, even if they match your specified attributes.
        /// 
        /// &gt; If you specify `InstanceRequirements` , you can't specify `InstanceType` .
        /// &gt; 
        /// &gt; Attribute-based instance type selection is only supported when using Auto Scaling groups, EC2 Fleet, and Spot Fleet to launch instances. If you plan to use the launch template in the [launch instance wizard](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-instance-wizard.html) , or with the [RunInstances](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html) API or [AWS::EC2::Instance](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-instance.html) AWS CloudFormation resource, you can't specify `InstanceRequirements` . 
        /// 
        /// For more information, see [Attribute-based instance type selection for EC2 Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html) , [Attribute-based instance type selection for Spot Fleet](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html) , and [Spot placement score](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html) in the *Amazon EC2 User Guide* .
        /// </summary>
        [Input("instanceRequirements")]
        public Input<Inputs.SpotFleetInstanceRequirementsRequestArgs>? InstanceRequirements { get; set; }

        /// <summary>
        /// The instance type.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// The ID of the kernel.
        /// </summary>
        [Input("kernelId")]
        public Input<string>? KernelId { get; set; }

        /// <summary>
        /// The name of the key pair.
        /// </summary>
        [Input("keyName")]
        public Input<string>? KeyName { get; set; }

        /// <summary>
        /// Describes whether monitoring is enabled.
        /// </summary>
        [Input("monitoring")]
        public Input<Inputs.SpotFleetMonitoringArgs>? Monitoring { get; set; }

        [Input("networkInterfaces")]
        private InputList<Inputs.SpotFleetInstanceNetworkInterfaceSpecificationArgs>? _networkInterfaces;

        /// <summary>
        /// Describes a network interface.
        /// </summary>
        public InputList<Inputs.SpotFleetInstanceNetworkInterfaceSpecificationArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.SpotFleetInstanceNetworkInterfaceSpecificationArgs>());
            set => _networkInterfaces = value;
        }

        /// <summary>
        /// Describes Spot Instance placement.
        /// </summary>
        [Input("placement")]
        public Input<Inputs.SpotFleetSpotPlacementArgs>? Placement { get; set; }

        /// <summary>
        /// The ID of the RAM disk. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.
        /// </summary>
        [Input("ramdiskId")]
        public Input<string>? RamdiskId { get; set; }

        [Input("securityGroups")]
        private InputList<Inputs.SpotFleetGroupIdentifierArgs>? _securityGroups;

        /// <summary>
        /// Describes a security group.
        /// </summary>
        public InputList<Inputs.SpotFleetGroupIdentifierArgs> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<Inputs.SpotFleetGroupIdentifierArgs>());
            set => _securityGroups = value;
        }

        /// <summary>
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price.
        /// 
        /// &gt; If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify this parameter.
        /// </summary>
        [Input("spotPrice")]
        public Input<string>? SpotPrice { get; set; }

        /// <summary>
        /// The IDs of the subnets in which to launch the instances. To specify multiple subnets, separate them using commas; for example, "subnet-1234abcdeexample1, subnet-0987cdef6example2".
        /// 
        /// If you specify a network interface, you must specify any subnets as part of the network interface instead of using this parameter.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tagSpecifications")]
        private InputList<Inputs.SpotFleetTagSpecificationArgs>? _tagSpecifications;

        /// <summary>
        /// The tags for a Spot Fleet resource.
        /// </summary>
        public InputList<Inputs.SpotFleetTagSpecificationArgs> TagSpecifications
        {
            get => _tagSpecifications ?? (_tagSpecifications = new InputList<Inputs.SpotFleetTagSpecificationArgs>());
            set => _tagSpecifications = value;
        }

        /// <summary>
        /// The base64-encoded user data that instances use when starting up. User data is limited to 16 KB.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        /// <summary>
        /// The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms of instances, or a performance characteristic such as vCPUs, memory, or I/O.
        /// 
        /// If the target capacity divided by this value is not a whole number, Amazon EC2 rounds the number of instances to the next whole number. If this value is not specified, the default is 1.
        /// </summary>
        [Input("weightedCapacity")]
        public Input<double>? WeightedCapacity { get; set; }

        public SpotFleetLaunchSpecificationArgs()
        {
        }
        public static new SpotFleetLaunchSpecificationArgs Empty => new SpotFleetLaunchSpecificationArgs();
    }
}
