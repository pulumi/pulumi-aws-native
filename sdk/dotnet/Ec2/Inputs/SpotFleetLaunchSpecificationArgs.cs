// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2.Inputs
{

    public sealed class SpotFleetLaunchSpecificationArgs : global::Pulumi.ResourceArgs
    {
        [Input("blockDeviceMappings")]
        private InputList<Inputs.SpotFleetBlockDeviceMappingArgs>? _blockDeviceMappings;

        /// <summary>
        /// One or more block devices that are mapped to the Spot Instances. You can't specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.
        /// </summary>
        public InputList<Inputs.SpotFleetBlockDeviceMappingArgs> BlockDeviceMappings
        {
            get => _blockDeviceMappings ?? (_blockDeviceMappings = new InputList<Inputs.SpotFleetBlockDeviceMappingArgs>());
            set => _blockDeviceMappings = value;
        }

        /// <summary>
        /// Indicates whether the instances are optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
        /// 
        /// Default: `false`
        /// </summary>
        [Input("ebsOptimized")]
        public Input<bool>? EbsOptimized { get; set; }

        /// <summary>
        /// The IAM instance profile.
        /// </summary>
        [Input("iamInstanceProfile")]
        public Input<Inputs.SpotFleetIamInstanceProfileSpecificationArgs>? IamInstanceProfile { get; set; }

        /// <summary>
        /// The ID of the AMI.
        /// </summary>
        [Input("imageId", required: true)]
        public Input<string> ImageId { get; set; } = null!;

        /// <summary>
        /// The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.
        /// 
        /// &gt; If you specify `InstanceRequirements` , you can't specify `InstanceType` .
        /// </summary>
        [Input("instanceRequirements")]
        public Input<Inputs.SpotFleetInstanceRequirementsRequestArgs>? InstanceRequirements { get; set; }

        /// <summary>
        /// The instance type.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// The ID of the kernel.
        /// </summary>
        [Input("kernelId")]
        public Input<string>? KernelId { get; set; }

        /// <summary>
        /// The name of the key pair.
        /// </summary>
        [Input("keyName")]
        public Input<string>? KeyName { get; set; }

        /// <summary>
        /// Enable or disable monitoring for the instances.
        /// </summary>
        [Input("monitoring")]
        public Input<Inputs.SpotFleetMonitoringArgs>? Monitoring { get; set; }

        [Input("networkInterfaces")]
        private InputList<Inputs.SpotFleetInstanceNetworkInterfaceSpecificationArgs>? _networkInterfaces;

        /// <summary>
        /// The network interfaces.
        /// </summary>
        public InputList<Inputs.SpotFleetInstanceNetworkInterfaceSpecificationArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.SpotFleetInstanceNetworkInterfaceSpecificationArgs>());
            set => _networkInterfaces = value;
        }

        /// <summary>
        /// The placement information.
        /// </summary>
        [Input("placement")]
        public Input<Inputs.SpotFleetSpotPlacementArgs>? Placement { get; set; }

        /// <summary>
        /// The ID of the RAM disk. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, refer to the AWS Resource Center and search for the kernel ID.
        /// </summary>
        [Input("ramdiskId")]
        public Input<string>? RamdiskId { get; set; }

        [Input("securityGroups")]
        private InputList<Inputs.SpotFleetGroupIdentifierArgs>? _securityGroups;

        /// <summary>
        /// The security groups.
        /// 
        /// If you specify a network interface, you must specify any security groups as part of the network interface instead of using this parameter.
        /// </summary>
        public InputList<Inputs.SpotFleetGroupIdentifierArgs> SecurityGroups
        {
            get => _securityGroups ?? (_securityGroups = new InputList<Inputs.SpotFleetGroupIdentifierArgs>());
            set => _securityGroups = value;
        }

        /// <summary>
        /// The maximum price per unit hour that you are willing to pay for a Spot Instance. We do not recommend using this parameter because it can lead to increased interruptions. If you do not specify this parameter, you will pay the current Spot price.
        /// 
        /// &gt; If you specify a maximum price, your instances will be interrupted more frequently than if you do not specify this parameter.
        /// </summary>
        [Input("spotPrice")]
        public Input<string>? SpotPrice { get; set; }

        /// <summary>
        /// The IDs of the subnets in which to launch the instances. To specify multiple subnets, separate them using commas; for example, "subnet-1234abcdeexample1, subnet-0987cdef6example2".
        /// 
        /// If you specify a network interface, you must specify any subnets as part of the network interface instead of using this parameter.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tagSpecifications")]
        private InputList<Inputs.SpotFleetTagSpecificationArgs>? _tagSpecifications;

        /// <summary>
        /// The tags to apply during creation.
        /// </summary>
        public InputList<Inputs.SpotFleetTagSpecificationArgs> TagSpecifications
        {
            get => _tagSpecifications ?? (_tagSpecifications = new InputList<Inputs.SpotFleetTagSpecificationArgs>());
            set => _tagSpecifications = value;
        }

        /// <summary>
        /// The base64-encoded user data that instances use when starting up. User data is limited to 16 KB.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        /// <summary>
        /// The number of units provided by the specified instance type. These are the same units that you chose to set the target capacity in terms of instances, or a performance characteristic such as vCPUs, memory, or I/O.
        /// 
        /// If the target capacity divided by this value is not a whole number, Amazon EC2 rounds the number of instances to the next whole number. If this value is not specified, the default is 1.
        /// </summary>
        [Input("weightedCapacity")]
        public Input<double>? WeightedCapacity { get; set; }

        public SpotFleetLaunchSpecificationArgs()
        {
        }
        public static new SpotFleetLaunchSpecificationArgs Empty => new SpotFleetLaunchSpecificationArgs();
    }
}
