// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2.Inputs
{

    public sealed class Ec2FleetCapacityReservationOptionsRequestArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether to use unused Capacity Reservations for fulfilling On-Demand capacity.
        /// 
        /// If you specify `use-capacity-reservations-first` , the fleet uses unused Capacity Reservations to fulfill On-Demand capacity up to the target On-Demand capacity. If multiple instance pools have unused Capacity Reservations, the On-Demand allocation strategy ( `lowest-price` or `prioritized` ) is applied. If the number of unused Capacity Reservations is less than the On-Demand target capacity, the remaining On-Demand target capacity is launched according to the On-Demand allocation strategy ( `lowest-price` or `prioritized` ).
        /// 
        /// If you do not specify a value, the fleet fulfils the On-Demand capacity according to the chosen On-Demand allocation strategy.
        /// </summary>
        [Input("usageStrategy")]
        public Input<Pulumi.AwsNative.Ec2.Ec2FleetCapacityReservationOptionsRequestUsageStrategy>? UsageStrategy { get; set; }

        public Ec2FleetCapacityReservationOptionsRequestArgs()
        {
        }
        public static new Ec2FleetCapacityReservationOptionsRequestArgs Empty => new Ec2FleetCapacityReservationOptionsRequestArgs();
    }
}
