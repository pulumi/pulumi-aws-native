// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    public static class GetVerifiedAccessGroup
    {
        /// <summary>
        /// The AWS::EC2::VerifiedAccessGroup resource creates an AWS EC2 Verified Access Group.
        /// </summary>
        public static Task<GetVerifiedAccessGroupResult> InvokeAsync(GetVerifiedAccessGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVerifiedAccessGroupResult>("aws-native:ec2:getVerifiedAccessGroup", args ?? new GetVerifiedAccessGroupArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::EC2::VerifiedAccessGroup resource creates an AWS EC2 Verified Access Group.
        /// </summary>
        public static Output<GetVerifiedAccessGroupResult> Invoke(GetVerifiedAccessGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVerifiedAccessGroupResult>("aws-native:ec2:getVerifiedAccessGroup", args ?? new GetVerifiedAccessGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVerifiedAccessGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the AWS Verified Access group.
        /// </summary>
        [Input("verifiedAccessGroupId", required: true)]
        public string VerifiedAccessGroupId { get; set; } = null!;

        public GetVerifiedAccessGroupArgs()
        {
        }
        public static new GetVerifiedAccessGroupArgs Empty => new GetVerifiedAccessGroupArgs();
    }

    public sealed class GetVerifiedAccessGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the AWS Verified Access group.
        /// </summary>
        [Input("verifiedAccessGroupId", required: true)]
        public Input<string> VerifiedAccessGroupId { get; set; } = null!;

        public GetVerifiedAccessGroupInvokeArgs()
        {
        }
        public static new GetVerifiedAccessGroupInvokeArgs Empty => new GetVerifiedAccessGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetVerifiedAccessGroupResult
    {
        /// <summary>
        /// Time this Verified Access Group was created.
        /// </summary>
        public readonly string? CreationTime;
        /// <summary>
        /// A description for the AWS Verified Access group.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Time this Verified Access Group was last updated.
        /// </summary>
        public readonly string? LastUpdatedTime;
        /// <summary>
        /// The AWS account number that owns the group.
        /// </summary>
        public readonly string? Owner;
        /// <summary>
        /// The AWS Verified Access policy document.
        /// </summary>
        public readonly string? PolicyDocument;
        /// <summary>
        /// The status of the Verified Access policy.
        /// </summary>
        public readonly bool? PolicyEnabled;
        /// <summary>
        /// The configuration options for customer provided KMS encryption.
        /// </summary>
        public readonly Outputs.VerifiedAccessGroupSseSpecification? SseSpecification;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.VerifiedAccessGroupTag> Tags;
        /// <summary>
        /// The ARN of the Verified Access group.
        /// </summary>
        public readonly string? VerifiedAccessGroupArn;
        /// <summary>
        /// The ID of the AWS Verified Access group.
        /// </summary>
        public readonly string? VerifiedAccessGroupId;
        /// <summary>
        /// The ID of the AWS Verified Access instance.
        /// </summary>
        public readonly string? VerifiedAccessInstanceId;

        [OutputConstructor]
        private GetVerifiedAccessGroupResult(
            string? creationTime,

            string? description,

            string? lastUpdatedTime,

            string? owner,

            string? policyDocument,

            bool? policyEnabled,

            Outputs.VerifiedAccessGroupSseSpecification? sseSpecification,

            ImmutableArray<Outputs.VerifiedAccessGroupTag> tags,

            string? verifiedAccessGroupArn,

            string? verifiedAccessGroupId,

            string? verifiedAccessInstanceId)
        {
            CreationTime = creationTime;
            Description = description;
            LastUpdatedTime = lastUpdatedTime;
            Owner = owner;
            PolicyDocument = policyDocument;
            PolicyEnabled = policyEnabled;
            SseSpecification = sseSpecification;
            Tags = tags;
            VerifiedAccessGroupArn = verifiedAccessGroupArn;
            VerifiedAccessGroupId = verifiedAccessGroupId;
            VerifiedAccessInstanceId = verifiedAccessInstanceId;
        }
    }
}
