// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Ec2
{
    public static class GetTransitGateway
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::TransitGateway
        /// </summary>
        public static Task<GetTransitGatewayResult> InvokeAsync(GetTransitGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTransitGatewayResult>("aws-native:ec2:getTransitGateway", args ?? new GetTransitGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::TransitGateway
        /// </summary>
        public static Output<GetTransitGatewayResult> Invoke(GetTransitGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransitGatewayResult>("aws-native:ec2:getTransitGateway", args ?? new GetTransitGatewayInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::TransitGateway
        /// </summary>
        public static Output<GetTransitGatewayResult> Invoke(GetTransitGatewayInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTransitGatewayResult>("aws-native:ec2:getTransitGateway", args ?? new GetTransitGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransitGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the transit gateway.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetTransitGatewayArgs()
        {
        }
        public static new GetTransitGatewayArgs Empty => new GetTransitGatewayArgs();
    }

    public sealed class GetTransitGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the transit gateway.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetTransitGatewayInvokeArgs()
        {
        }
        public static new GetTransitGatewayInvokeArgs Empty => new GetTransitGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetTransitGatewayResult
    {
        /// <summary>
        /// The ID of the default association route table.
        /// </summary>
        public readonly string? AssociationDefaultRouteTableId;
        /// <summary>
        /// Enable or disable automatic acceptance of attachment requests. Disabled by default.
        /// </summary>
        public readonly string? AutoAcceptSharedAttachments;
        /// <summary>
        /// Enable or disable automatic association with the default association route table. Enabled by default.
        /// </summary>
        public readonly string? DefaultRouteTableAssociation;
        /// <summary>
        /// Enable or disable automatic propagation of routes to the default propagation route table. Enabled by default.
        /// </summary>
        public readonly string? DefaultRouteTablePropagation;
        /// <summary>
        /// The description of the transit gateway.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Enable or disable DNS support. Enabled by default.
        /// </summary>
        public readonly string? DnsSupport;
        /// <summary>
        /// The ID of the transit gateway.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The ID of the default propagation route table.
        /// </summary>
        public readonly string? PropagationDefaultRouteTableId;
        /// <summary>
        /// Enables you to reference a security group across VPCs attached to a transit gateway (TGW). Use this option to simplify security group management and control of instance-to-instance traffic across VPCs that are connected by transit gateway. You can also use this option to migrate from VPC peering (which was the only option that supported security group referencing) to transit gateways (which now also support security group referencing). This option is disabled by default and there are no additional costs to use this feature.
        /// 
        /// For important information about this feature, see [Create a transit gateway](https://docs.aws.amazon.com/vpc/latest/tgw/tgw-transit-gateways.html#create-tgw) in the *AWS Transit Gateway Guide* .
        /// </summary>
        public readonly string? SecurityGroupReferencingSupport;
        /// <summary>
        /// The tags for the transit gateway.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        public readonly string? TransitGatewayArn;
        /// <summary>
        /// The transit gateway CIDR blocks.
        /// </summary>
        public readonly ImmutableArray<string> TransitGatewayCidrBlocks;
        /// <summary>
        /// Enable or disable Equal Cost Multipath Protocol support. Enabled by default.
        /// </summary>
        public readonly string? VpnEcmpSupport;

        [OutputConstructor]
        private GetTransitGatewayResult(
            string? associationDefaultRouteTableId,

            string? autoAcceptSharedAttachments,

            string? defaultRouteTableAssociation,

            string? defaultRouteTablePropagation,

            string? description,

            string? dnsSupport,

            string? id,

            string? propagationDefaultRouteTableId,

            string? securityGroupReferencingSupport,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            string? transitGatewayArn,

            ImmutableArray<string> transitGatewayCidrBlocks,

            string? vpnEcmpSupport)
        {
            AssociationDefaultRouteTableId = associationDefaultRouteTableId;
            AutoAcceptSharedAttachments = autoAcceptSharedAttachments;
            DefaultRouteTableAssociation = defaultRouteTableAssociation;
            DefaultRouteTablePropagation = defaultRouteTablePropagation;
            Description = description;
            DnsSupport = dnsSupport;
            Id = id;
            PropagationDefaultRouteTableId = propagationDefaultRouteTableId;
            SecurityGroupReferencingSupport = securityGroupReferencingSupport;
            Tags = tags;
            TransitGatewayArn = transitGatewayArn;
            TransitGatewayCidrBlocks = transitGatewayCidrBlocks;
            VpnEcmpSupport = vpnEcmpSupport;
        }
    }
}
