// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.GameLiftStreams
{
    public static class GetApplication
    {
        /// <summary>
        /// Definition of AWS::GameLiftStreams::Application Resource Type
        /// </summary>
        public static Task<GetApplicationResult> InvokeAsync(GetApplicationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResult>("aws-native:gameliftstreams:getApplication", args ?? new GetApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::GameLiftStreams::Application Resource Type
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("aws-native:gameliftstreams:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::GameLiftStreams::Application Resource Type
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("aws-native:gameliftstreams:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// An [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html) that uniquely identifies the application resource across all AWS Regions. For example:
        /// 
        /// `arn:aws:gameliftstreams:us-west-2:123456789012:application/a-9ZY8X7Wv6` .
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetApplicationArgs()
        {
        }
        public static new GetApplicationArgs Empty => new GetApplicationArgs();
    }

    public sealed class GetApplicationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// An [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html) that uniquely identifies the application resource across all AWS Regions. For example:
        /// 
        /// `arn:aws:gameliftstreams:us-west-2:123456789012:application/a-9ZY8X7Wv6` .
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetApplicationInvokeArgs()
        {
        }
        public static new GetApplicationInvokeArgs Empty => new GetApplicationInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationResult
    {
        /// <summary>
        /// An Amazon S3 URI to a bucket where you would like Amazon GameLift Streams to save application logs. Required if you specify one or more `ApplicationLogPaths` .
        /// </summary>
        public readonly string? ApplicationLogOutputUri;
        /// <summary>
        /// Locations of log files that your content generates during a stream session. Enter path values that are relative to the `ApplicationSourceUri` location. You can specify up to 10 log paths. Amazon GameLift Streams uploads designated log files to the Amazon S3 bucket that you specify in `ApplicationLogOutputUri` at the end of a stream session. To retrieve stored log files, call [GetStreamSession](https://docs.aws.amazon.com/gameliftstreams/latest/apireference/API_GetStreamSession.html) and get the `LogFileLocationUri` .
        /// </summary>
        public readonly ImmutableArray<string> ApplicationLogPaths;
        /// <summary>
        /// An [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html) that uniquely identifies the application resource across all AWS Regions. For example:
        /// 
        /// `arn:aws:gameliftstreams:us-west-2:123456789012:application/a-9ZY8X7Wv6` .
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// A human-readable label for the application. You can update this value later.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// An ID that uniquely identifies the application resource. For example: `a-9ZY8X7Wv6` .
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// A list of labels to assign to the new application resource. Tags are developer-defined key-value pairs. Tagging AWS resources is useful for resource management, access management and cost allocation. See [Tagging AWS Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the *AWS General Reference* .
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetApplicationResult(
            string? applicationLogOutputUri,

            ImmutableArray<string> applicationLogPaths,

            string? arn,

            string? description,

            string? id,

            ImmutableDictionary<string, string>? tags)
        {
            ApplicationLogOutputUri = applicationLogOutputUri;
            ApplicationLogPaths = applicationLogPaths;
            Arn = arn;
            Description = description;
            Id = id;
            Tags = tags;
        }
    }
}
