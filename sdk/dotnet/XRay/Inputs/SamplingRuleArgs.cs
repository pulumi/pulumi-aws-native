// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.XRay.Inputs
{

    public sealed class SamplingRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Matches attributes derived from the request.
        /// </summary>
        [Input("attributes")]
        public Input<object>? Attributes { get; set; }

        /// <summary>
        /// The percentage of matching requests to instrument, after the reservoir is exhausted.
        /// </summary>
        [Input("fixedRate", required: true)]
        public Input<double> FixedRate { get; set; } = null!;

        /// <summary>
        /// Matches the HTTP method from a request URL.
        /// </summary>
        [Input("hTTPMethod", required: true)]
        public Input<string> HTTPMethod { get; set; } = null!;

        /// <summary>
        /// Matches the hostname from a request URL.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        /// <summary>
        /// The priority of the sampling rule.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// A fixed number of matching requests to instrument per second, prior to applying the fixed rate. The reservoir is not used directly by services, but applies to all services using the rule collectively.
        /// </summary>
        [Input("reservoirSize", required: true)]
        public Input<int> ReservoirSize { get; set; } = null!;

        /// <summary>
        /// Matches the ARN of the AWS resource on which the service runs.
        /// </summary>
        [Input("resourceARN", required: true)]
        public Input<string> ResourceARN { get; set; } = null!;

        [Input("ruleARN")]
        public Input<string>? RuleARN { get; set; }

        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// Matches the name that the service uses to identify itself in segments.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Matches the origin that the service uses to identify its type in segments.
        /// </summary>
        [Input("serviceType", required: true)]
        public Input<string> ServiceType { get; set; } = null!;

        /// <summary>
        /// Matches the path from a request URL.
        /// </summary>
        [Input("uRLPath", required: true)]
        public Input<string> URLPath { get; set; } = null!;

        /// <summary>
        /// The version of the sampling rule format (1)
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public SamplingRuleArgs()
        {
        }
        public static new SamplingRuleArgs Empty => new SamplingRuleArgs();
    }
}
