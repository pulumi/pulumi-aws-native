// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SNS
{
    public static class GetSubscription
    {
        /// <summary>
        /// Resource Type definition for AWS::SNS::Subscription
        /// </summary>
        public static Task<GetSubscriptionResult> InvokeAsync(GetSubscriptionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionResult>("aws-native:sns:getSubscription", args ?? new GetSubscriptionArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SNS::Subscription
        /// </summary>
        public static Output<GetSubscriptionResult> Invoke(GetSubscriptionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSubscriptionResult>("aws-native:sns:getSubscription", args ?? new GetSubscriptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSubscriptionArgs()
        {
        }
    }

    public sealed class GetSubscriptionInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSubscriptionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSubscriptionResult
    {
        public readonly object? DeliveryPolicy;
        public readonly object? FilterPolicy;
        public readonly string? Id;
        public readonly bool? RawMessageDelivery;
        public readonly object? RedrivePolicy;
        public readonly string? Region;
        public readonly string? SubscriptionRoleArn;

        [OutputConstructor]
        private GetSubscriptionResult(
            object? deliveryPolicy,

            object? filterPolicy,

            string? id,

            bool? rawMessageDelivery,

            object? redrivePolicy,

            string? region,

            string? subscriptionRoleArn)
        {
            DeliveryPolicy = deliveryPolicy;
            FilterPolicy = filterPolicy;
            Id = id;
            RawMessageDelivery = rawMessageDelivery;
            RedrivePolicy = redrivePolicy;
            Region = region;
            SubscriptionRoleArn = subscriptionRoleArn;
        }
    }
}
