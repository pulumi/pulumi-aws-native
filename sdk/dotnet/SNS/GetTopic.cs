// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SNS
{
    public static class GetTopic
    {
        /// <summary>
        /// Resource Type definition for AWS::SNS::Topic
        /// </summary>
        public static Task<GetTopicResult> InvokeAsync(GetTopicArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTopicResult>("aws-native:sns:getTopic", args ?? new GetTopicArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SNS::Topic
        /// </summary>
        public static Output<GetTopicResult> Invoke(GetTopicInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTopicResult>("aws-native:sns:getTopic", args ?? new GetTopicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTopicArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetTopicArgs()
        {
        }
    }

    public sealed class GetTopicInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetTopicInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTopicResult
    {
        public readonly bool? ContentBasedDeduplication;
        public readonly string? DisplayName;
        public readonly string? Id;
        public readonly string? KmsMasterKeyId;
        public readonly ImmutableArray<Outputs.TopicSubscription> Subscription;
        public readonly ImmutableArray<Outputs.TopicTag> Tags;

        [OutputConstructor]
        private GetTopicResult(
            bool? contentBasedDeduplication,

            string? displayName,

            string? id,

            string? kmsMasterKeyId,

            ImmutableArray<Outputs.TopicSubscription> subscription,

            ImmutableArray<Outputs.TopicTag> tags)
        {
            ContentBasedDeduplication = contentBasedDeduplication;
            DisplayName = displayName;
            Id = id;
            KmsMasterKeyId = kmsMasterKeyId;
            Subscription = subscription;
            Tags = tags;
        }
    }
}
