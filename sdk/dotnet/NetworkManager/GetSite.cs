// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.NetworkManager
{
    public static class GetSite
    {
        /// <summary>
        /// The AWS::NetworkManager::Site type describes a site.
        /// </summary>
        public static Task<GetSiteResult> InvokeAsync(GetSiteArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSiteResult>("aws-native:networkmanager:getSite", args ?? new GetSiteArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::NetworkManager::Site type describes a site.
        /// </summary>
        public static Output<GetSiteResult> Invoke(GetSiteInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSiteResult>("aws-native:networkmanager:getSite", args ?? new GetSiteInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSiteArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Input("globalNetworkId", required: true)]
        public string GlobalNetworkId { get; set; } = null!;

        /// <summary>
        /// The ID of the site.
        /// </summary>
        [Input("siteId", required: true)]
        public string SiteId { get; set; } = null!;

        public GetSiteArgs()
        {
        }
    }

    public sealed class GetSiteInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Input("globalNetworkId", required: true)]
        public Input<string> GlobalNetworkId { get; set; } = null!;

        /// <summary>
        /// The ID of the site.
        /// </summary>
        [Input("siteId", required: true)]
        public Input<string> SiteId { get; set; } = null!;

        public GetSiteInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSiteResult
    {
        /// <summary>
        /// The description of the site.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The location of the site.
        /// </summary>
        public readonly Outputs.SiteLocation? Location;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the site.
        /// </summary>
        public readonly string? SiteArn;
        /// <summary>
        /// The ID of the site.
        /// </summary>
        public readonly string? SiteId;
        /// <summary>
        /// The tags for the site.
        /// </summary>
        public readonly ImmutableArray<Outputs.SiteTag> Tags;

        [OutputConstructor]
        private GetSiteResult(
            string? description,

            Outputs.SiteLocation? location,

            string? siteArn,

            string? siteId,

            ImmutableArray<Outputs.SiteTag> tags)
        {
            Description = description;
            Location = location;
            SiteArn = siteArn;
            SiteId = siteId;
            Tags = tags;
        }
    }
}
