// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.NetworkManager
{
    /// <summary>
    /// The AWS::NetworkManager::Link type describes a link.
    /// </summary>
    [AwsNativeResourceType("aws-native:networkmanager:Link")]
    public partial class Link : Pulumi.CustomResource
    {
        /// <summary>
        /// The Bandwidth for the link.
        /// </summary>
        [Output("bandwidth")]
        public Output<Outputs.LinkBandwidth> Bandwidth { get; private set; } = null!;

        /// <summary>
        /// The description of the link.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Output("globalNetworkId")]
        public Output<string> GlobalNetworkId { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the link.
        /// </summary>
        [Output("linkArn")]
        public Output<string> LinkArn { get; private set; } = null!;

        /// <summary>
        /// The ID of the link.
        /// </summary>
        [Output("linkId")]
        public Output<string> LinkId { get; private set; } = null!;

        /// <summary>
        /// The provider of the link.
        /// </summary>
        [Output("provider")]
        public Output<string?> Provider { get; private set; } = null!;

        /// <summary>
        /// The ID of the site
        /// </summary>
        [Output("siteId")]
        public Output<string> SiteId { get; private set; } = null!;

        /// <summary>
        /// The tags for the link.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.LinkTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The type of the link.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Link resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Link(string name, LinkArgs args, CustomResourceOptions? options = null)
            : base("aws-native:networkmanager:Link", name, args ?? new LinkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Link(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:networkmanager:Link", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Link resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Link Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Link(name, id, options);
        }
    }

    public sealed class LinkArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Bandwidth for the link.
        /// </summary>
        [Input("bandwidth", required: true)]
        public Input<Inputs.LinkBandwidthArgs> Bandwidth { get; set; } = null!;

        /// <summary>
        /// The description of the link.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Input("globalNetworkId", required: true)]
        public Input<string> GlobalNetworkId { get; set; } = null!;

        /// <summary>
        /// The provider of the link.
        /// </summary>
        [Input("provider")]
        public Input<string>? Provider { get; set; }

        /// <summary>
        /// The ID of the site
        /// </summary>
        [Input("siteId", required: true)]
        public Input<string> SiteId { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.LinkTagArgs>? _tags;

        /// <summary>
        /// The tags for the link.
        /// </summary>
        public InputList<Inputs.LinkTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.LinkTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The type of the link.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public LinkArgs()
        {
        }
    }
}
