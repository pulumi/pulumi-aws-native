// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.NetworkManager
{
    public static class GetDevice
    {
        /// <summary>
        /// The AWS::NetworkManager::Device type describes a device.
        /// </summary>
        public static Task<GetDeviceResult> InvokeAsync(GetDeviceArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDeviceResult>("aws-native:networkmanager:getDevice", args ?? new GetDeviceArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::NetworkManager::Device type describes a device.
        /// </summary>
        public static Output<GetDeviceResult> Invoke(GetDeviceInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDeviceResult>("aws-native:networkmanager:getDevice", args ?? new GetDeviceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeviceArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the device.
        /// </summary>
        [Input("deviceId")]
        public string? DeviceId { get; set; }

        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Input("globalNetworkId")]
        public string? GlobalNetworkId { get; set; }

        public GetDeviceArgs()
        {
        }
    }

    public sealed class GetDeviceInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the device.
        /// </summary>
        [Input("deviceId")]
        public Input<string>? DeviceId { get; set; }

        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Input("globalNetworkId")]
        public Input<string>? GlobalNetworkId { get; set; }

        public GetDeviceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDeviceResult
    {
        /// <summary>
        /// The description of the device.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the device.
        /// </summary>
        public readonly string? DeviceArn;
        /// <summary>
        /// The ID of the device.
        /// </summary>
        public readonly string? DeviceId;
        /// <summary>
        /// The site location.
        /// </summary>
        public readonly Outputs.DeviceLocation? Location;
        /// <summary>
        /// The device model
        /// </summary>
        public readonly string? Model;
        /// <summary>
        /// The device serial number.
        /// </summary>
        public readonly string? SerialNumber;
        /// <summary>
        /// The site ID.
        /// </summary>
        public readonly string? SiteId;
        /// <summary>
        /// The tags for the device.
        /// </summary>
        public readonly ImmutableArray<Outputs.DeviceTag> Tags;
        /// <summary>
        /// The device type.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// The device vendor.
        /// </summary>
        public readonly string? Vendor;

        [OutputConstructor]
        private GetDeviceResult(
            string? description,

            string? deviceArn,

            string? deviceId,

            Outputs.DeviceLocation? location,

            string? model,

            string? serialNumber,

            string? siteId,

            ImmutableArray<Outputs.DeviceTag> tags,

            string? type,

            string? vendor)
        {
            Description = description;
            DeviceArn = deviceArn;
            DeviceId = deviceId;
            Location = location;
            Model = model;
            SerialNumber = serialNumber;
            SiteId = siteId;
            Tags = tags;
            Type = type;
            Vendor = vendor;
        }
    }
}
