// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.NetworkManager
{
    public static class GetLink
    {
        /// <summary>
        /// The AWS::NetworkManager::Link type describes a link.
        /// </summary>
        public static Task<GetLinkResult> InvokeAsync(GetLinkArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLinkResult>("aws-native:networkmanager:getLink", args ?? new GetLinkArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::NetworkManager::Link type describes a link.
        /// </summary>
        public static Output<GetLinkResult> Invoke(GetLinkInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetLinkResult>("aws-native:networkmanager:getLink", args ?? new GetLinkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLinkArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Input("globalNetworkId")]
        public string? GlobalNetworkId { get; set; }

        /// <summary>
        /// The ID of the link.
        /// </summary>
        [Input("linkId")]
        public string? LinkId { get; set; }

        public GetLinkArgs()
        {
        }
    }

    public sealed class GetLinkInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the global network.
        /// </summary>
        [Input("globalNetworkId")]
        public Input<string>? GlobalNetworkId { get; set; }

        /// <summary>
        /// The ID of the link.
        /// </summary>
        [Input("linkId")]
        public Input<string>? LinkId { get; set; }

        public GetLinkInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLinkResult
    {
        /// <summary>
        /// The Bandwidth for the link.
        /// </summary>
        public readonly Outputs.LinkBandwidth? Bandwidth;
        /// <summary>
        /// The description of the link.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the link.
        /// </summary>
        public readonly string? LinkArn;
        /// <summary>
        /// The ID of the link.
        /// </summary>
        public readonly string? LinkId;
        /// <summary>
        /// The provider of the link.
        /// </summary>
        public readonly string? Provider;
        /// <summary>
        /// The tags for the link.
        /// </summary>
        public readonly ImmutableArray<Outputs.LinkTag> Tags;
        /// <summary>
        /// The type of the link.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetLinkResult(
            Outputs.LinkBandwidth? bandwidth,

            string? description,

            string? linkArn,

            string? linkId,

            string? provider,

            ImmutableArray<Outputs.LinkTag> tags,

            string? type)
        {
            Bandwidth = bandwidth;
            Description = description;
            LinkArn = linkArn;
            LinkId = linkId;
            Provider = provider;
            Tags = tags;
            Type = type;
        }
    }
}
