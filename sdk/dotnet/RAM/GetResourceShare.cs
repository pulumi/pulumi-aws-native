// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RAM
{
    public static class GetResourceShare
    {
        /// <summary>
        /// Resource Type definition for AWS::RAM::ResourceShare
        /// </summary>
        public static Task<GetResourceShareResult> InvokeAsync(GetResourceShareArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetResourceShareResult>("aws-native:ram:getResourceShare", args ?? new GetResourceShareArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::RAM::ResourceShare
        /// </summary>
        public static Output<GetResourceShareResult> Invoke(GetResourceShareInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetResourceShareResult>("aws-native:ram:getResourceShare", args ?? new GetResourceShareInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetResourceShareArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetResourceShareArgs()
        {
        }
    }

    public sealed class GetResourceShareInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetResourceShareInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetResourceShareResult
    {
        public readonly bool? AllowExternalPrincipals;
        public readonly string? Arn;
        public readonly string? Id;
        public readonly string? Name;
        public readonly ImmutableArray<string> PermissionArns;
        public readonly ImmutableArray<string> Principals;
        public readonly ImmutableArray<string> ResourceArns;
        public readonly ImmutableArray<Outputs.ResourceShareTag> Tags;

        [OutputConstructor]
        private GetResourceShareResult(
            bool? allowExternalPrincipals,

            string? arn,

            string? id,

            string? name,

            ImmutableArray<string> permissionArns,

            ImmutableArray<string> principals,

            ImmutableArray<string> resourceArns,

            ImmutableArray<Outputs.ResourceShareTag> tags)
        {
            AllowExternalPrincipals = allowExternalPrincipals;
            Arn = arn;
            Id = id;
            Name = name;
            PermissionArns = permissionArns;
            Principals = principals;
            ResourceArns = resourceArns;
            Tags = tags;
        }
    }
}
