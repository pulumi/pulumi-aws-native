// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Location
{
    public static class GetTracker
    {
        /// <summary>
        /// Definition of AWS::Location::Tracker Resource Type
        /// </summary>
        public static Task<GetTrackerResult> InvokeAsync(GetTrackerArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTrackerResult>("aws-native:location:getTracker", args ?? new GetTrackerArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Location::Tracker Resource Type
        /// </summary>
        public static Output<GetTrackerResult> Invoke(GetTrackerInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTrackerResult>("aws-native:location:getTracker", args ?? new GetTrackerInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTrackerArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name for the tracker resource.
        /// 
        /// Requirements:
        /// 
        /// - Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens (-), periods (.), and underscores (_).
        /// - Must be a unique tracker resource name.
        /// - No spaces allowed. For example, `ExampleTracker` .
        /// </summary>
        [Input("trackerName", required: true)]
        public string TrackerName { get; set; } = null!;

        public GetTrackerArgs()
        {
        }
        public static new GetTrackerArgs Empty => new GetTrackerArgs();
    }

    public sealed class GetTrackerInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name for the tracker resource.
        /// 
        /// Requirements:
        /// 
        /// - Contain only alphanumeric characters (A-Z, a-z, 0-9) , hyphens (-), periods (.), and underscores (_).
        /// - Must be a unique tracker resource name.
        /// - No spaces allowed. For example, `ExampleTracker` .
        /// </summary>
        [Input("trackerName", required: true)]
        public Input<string> TrackerName { get; set; } = null!;

        public GetTrackerInvokeArgs()
        {
        }
        public static new GetTrackerInvokeArgs Empty => new GetTrackerInvokeArgs();
    }


    [OutputType]
    public sealed class GetTrackerResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the tracker resource. Used when you need to specify a resource across all AWS .
        /// 
        /// - Format example: `arn:aws:geo:region:account-id:tracker/ExampleTracker`
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The timestamp for when the tracker resource was created in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
        /// </summary>
        public readonly string? CreateTime;
        /// <summary>
        /// An optional description for the tracker resource.
        /// </summary>
        public readonly string? Description;
        public readonly bool? EventBridgeEnabled;
        public readonly bool? KmsKeyEnableGeospatialQueries;
        /// <summary>
        /// Specifies the position filtering for the tracker resource.
        /// 
        /// Valid values:
        /// 
        /// - `TimeBased` - Location updates are evaluated against linked geofence collections, but not every location update is stored. If your update frequency is more often than 30 seconds, only one update per 30 seconds is stored for each unique device ID.
        /// - `DistanceBased` - If the device has moved less than 30 m (98.4 ft), location updates are ignored. Location updates within this area are neither evaluated against linked geofence collections, nor stored. This helps control costs by reducing the number of geofence evaluations and historical device positions to paginate through. Distance-based filtering can also reduce the effects of GPS noise when displaying device trajectories on a map.
        /// - `AccuracyBased` - If the device has moved less than the measured accuracy, location updates are ignored. For example, if two consecutive updates from a device have a horizontal accuracy of 5 m and 10 m, the second update is ignored if the device has moved less than 15 m. Ignored location updates are neither evaluated against linked geofence collections, nor stored. This can reduce the effects of GPS noise when displaying device trajectories on a map, and can help control your costs by reducing the number of geofence evaluations.
        /// 
        /// This field is optional. If not specified, the default value is `TimeBased` .
        /// </summary>
        public readonly Pulumi.AwsNative.Location.TrackerPositionFiltering? PositionFiltering;
        public readonly Pulumi.AwsNative.Location.TrackerPricingPlan? PricingPlan;
        /// <summary>
        /// This shape is deprecated since 2022-02-01: Deprecated. No longer allowed.
        /// </summary>
        public readonly string? PricingPlanDataSource;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// Synonym for `Arn` . The Amazon Resource Name (ARN) for the tracker resource. Used when you need to specify a resource across all AWS .
        /// 
        /// - Format example: `arn:aws:geo:region:account-id:tracker/ExampleTracker`
        /// </summary>
        public readonly string? TrackerArn;
        /// <summary>
        /// The timestamp for when the tracker resource was last updated in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
        /// </summary>
        public readonly string? UpdateTime;

        [OutputConstructor]
        private GetTrackerResult(
            string? arn,

            string? createTime,

            string? description,

            bool? eventBridgeEnabled,

            bool? kmsKeyEnableGeospatialQueries,

            Pulumi.AwsNative.Location.TrackerPositionFiltering? positionFiltering,

            Pulumi.AwsNative.Location.TrackerPricingPlan? pricingPlan,

            string? pricingPlanDataSource,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            string? trackerArn,

            string? updateTime)
        {
            Arn = arn;
            CreateTime = createTime;
            Description = description;
            EventBridgeEnabled = eventBridgeEnabled;
            KmsKeyEnableGeospatialQueries = kmsKeyEnableGeospatialQueries;
            PositionFiltering = positionFiltering;
            PricingPlan = pricingPlan;
            PricingPlanDataSource = pricingPlanDataSource;
            Tags = tags;
            TrackerArn = trackerArn;
            UpdateTime = updateTime;
        }
    }
}
