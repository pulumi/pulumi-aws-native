// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Location
{
    /// <summary>
    /// Definition of AWS::Location::Map Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:location:Map")]
    public partial class Map : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) for the map resource. Used to specify a resource across all AWS .
        /// 
        /// - Format example: `arn:aws:geo:region:account-id:maps/ExampleMap`
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Specifies the map tile style selected from an available provider.
        /// </summary>
        [Output("configuration")]
        public Output<Outputs.MapConfiguration> Configuration { get; private set; } = null!;

        /// <summary>
        /// The timestamp for when the map resource was created in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// An optional description for the map resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Synonym for `Arn` . The Amazon Resource Name (ARN) for the map resource. Used to specify a resource across all AWS .
        /// 
        /// - Format example: `arn:aws:geo:region:account-id:maps/ExampleMap`
        /// </summary>
        [Output("mapArn")]
        public Output<string> MapArn { get; private set; } = null!;

        /// <summary>
        /// The name for the map resource.
        /// 
        /// Requirements:
        /// 
        /// - Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_).
        /// - Must be a unique map resource name.
        /// - No spaces allowed. For example, `ExampleMap` .
        /// </summary>
        [Output("mapName")]
        public Output<string> MapName { get; private set; } = null!;

        /// <summary>
        /// No longer used. If included, the only allowed value is `RequestBasedUsage` .
        /// 
        /// *Allowed Values* : `RequestBasedUsage`
        /// </summary>
        [Output("pricingPlan")]
        public Output<Pulumi.AwsNative.Location.MapPricingPlan?> PricingPlan { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The timestamp for when the map resource was last updated in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Map resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Map(string name, MapArgs args, CustomResourceOptions? options = null)
            : base("aws-native:location:Map", name, args ?? new MapArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Map(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:location:Map", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "configuration",
                    "mapName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Map resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Map Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Map(name, id, options);
        }
    }

    public sealed class MapArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the map tile style selected from an available provider.
        /// </summary>
        [Input("configuration", required: true)]
        public Input<Inputs.MapConfigurationArgs> Configuration { get; set; } = null!;

        /// <summary>
        /// An optional description for the map resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name for the map resource.
        /// 
        /// Requirements:
        /// 
        /// - Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_).
        /// - Must be a unique map resource name.
        /// - No spaces allowed. For example, `ExampleMap` .
        /// </summary>
        [Input("mapName")]
        public Input<string>? MapName { get; set; }

        /// <summary>
        /// No longer used. If included, the only allowed value is `RequestBasedUsage` .
        /// 
        /// *Allowed Values* : `RequestBasedUsage`
        /// </summary>
        [Input("pricingPlan")]
        public Input<Pulumi.AwsNative.Location.MapPricingPlan>? PricingPlan { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public MapArgs()
        {
        }
        public static new MapArgs Empty => new MapArgs();
    }
}
