// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ResourceGroups.Outputs
{

    [OutputType]
    public sealed class GroupResourceQuery
    {
        /// <summary>
        /// The query that defines the membership of the group. This is a structure with properties that depend on the `Type` .
        /// 
        /// The `Query` structure must be included in the following scenarios:
        /// 
        /// - When the `Type` is `TAG_FILTERS_1_0` , you must specify a `Query` structure that contains a `TagFilters` list of tags. Resources with tags that match those in the `TagFilter` list become members of the resource group.
        /// - When the `Type` is `CLOUDFORMATION_STACK_1_0` then this field is required only when you must specify a CloudFormation stack other than the one you are defining. To do this, the `Query` structure must contain the `StackIdentifier` property. If you don't specify either a `Query` structure or a `StackIdentifier` within that `Query` , then it defaults to the CloudFormation stack that you're currently constructing.
        /// </summary>
        public readonly Outputs.GroupQuery? Query;
        /// <summary>
        /// Specifies the type of resource query that determines this group's membership. There are two valid query types:
        /// 
        /// - `TAG_FILTERS_1_0` indicates that the group is a tag-based group. To complete the group membership, you must include the `TagFilters` property to specify the tag filters to use in the query.
        /// - `CLOUDFORMATION_STACK_1_0` , the default, indicates that the group is a CloudFormation stack-based group. Group membership is based on the CloudFormation stack. You must specify the `StackIdentifier` property in the query to define which stack to associate the group with, or leave it empty to default to the stack where the group is defined.
        /// </summary>
        public readonly Pulumi.AwsNative.ResourceGroups.GroupResourceQueryType? Type;

        [OutputConstructor]
        private GroupResourceQuery(
            Outputs.GroupQuery? query,

            Pulumi.AwsNative.ResourceGroups.GroupResourceQueryType? type)
        {
            Query = query;
            Type = type;
        }
    }
}
