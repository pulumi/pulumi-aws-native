// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ResourceGroups
{
    public static class GetGroup
    {
        /// <summary>
        /// Schema for ResourceGroups::Group
        /// </summary>
        public static Task<GetGroupResult> InvokeAsync(GetGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupResult>("aws-native:resourcegroups:getGroup", args ?? new GetGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Schema for ResourceGroups::Group
        /// </summary>
        public static Output<GetGroupResult> Invoke(GetGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupResult>("aws-native:resourcegroups:getGroup", args ?? new GetGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetGroupArgs()
        {
        }
        public static new GetGroupArgs Empty => new GetGroupArgs();
    }

    public sealed class GetGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the resource group
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetGroupInvokeArgs()
        {
        }
        public static new GetGroupInvokeArgs Empty => new GetGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupResult
    {
        /// <summary>
        /// The Resource Group ARN.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The service configuration currently associated with the resource group and in effect for the members of the resource group. A `Configuration` consists of one or more `ConfigurationItem` entries. For information about service configurations for resource groups and how to construct them, see [Service configurations for resource groups](https://docs.aws.amazon.com//ARG/latest/APIReference/about-slg.html) in the *AWS Resource Groups User Guide* .
        /// 
        /// &gt; You can include either a `Configuration` or a `ResourceQuery` , but not both.
        /// </summary>
        public readonly ImmutableArray<Outputs.GroupConfigurationItem> Configuration;
        /// <summary>
        /// The description of the resource group
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The resource query structure that is used to dynamically determine which AWS resources are members of the associated resource group. For more information about queries and how to construct them, see [Build queries and groups in AWS Resource Groups](https://docs.aws.amazon.com//ARG/latest/userguide/gettingstarted-query.html) in the *AWS Resource Groups User Guide*
        /// 
        /// &gt; - You can include either a `ResourceQuery` or a `Configuration` , but not both.
        /// &gt; - You can specify the group's membership either by using a `ResourceQuery` or by using a list of `Resources` , but not both.
        /// </summary>
        public readonly Outputs.GroupResourceQuery? ResourceQuery;
        /// <summary>
        /// A list of the Amazon Resource Names (ARNs) of AWS resources that you want to add to the specified group.
        /// 
        /// &gt; - You can specify the group membership either by using a list of `Resources` or by using a `ResourceQuery` , but not both.
        /// &gt; - You can include a `Resources` property only if you also specify a `Configuration` property.
        /// </summary>
        public readonly ImmutableArray<string> Resources;
        /// <summary>
        /// The tag key and value pairs that are attached to the resource group.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetGroupResult(
            string? arn,

            ImmutableArray<Outputs.GroupConfigurationItem> configuration,

            string? description,

            Outputs.GroupResourceQuery? resourceQuery,

            ImmutableArray<string> resources,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Arn = arn;
            Configuration = configuration;
            Description = description;
            ResourceQuery = resourceQuery;
            Resources = resources;
            Tags = tags;
        }
    }
}
