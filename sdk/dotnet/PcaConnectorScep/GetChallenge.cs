// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.PcaConnectorScep
{
    public static class GetChallenge
    {
        /// <summary>
        /// Represents a SCEP Challenge that is used for certificate enrollment
        /// </summary>
        public static Task<GetChallengeResult> InvokeAsync(GetChallengeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetChallengeResult>("aws-native:pcaconnectorscep:getChallenge", args ?? new GetChallengeArgs(), options.WithDefaults());

        /// <summary>
        /// Represents a SCEP Challenge that is used for certificate enrollment
        /// </summary>
        public static Output<GetChallengeResult> Invoke(GetChallengeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetChallengeResult>("aws-native:pcaconnectorscep:getChallenge", args ?? new GetChallengeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetChallengeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the challenge.
        /// </summary>
        [Input("challengeArn", required: true)]
        public string ChallengeArn { get; set; } = null!;

        public GetChallengeArgs()
        {
        }
        public static new GetChallengeArgs Empty => new GetChallengeArgs();
    }

    public sealed class GetChallengeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the challenge.
        /// </summary>
        [Input("challengeArn", required: true)]
        public Input<string> ChallengeArn { get; set; } = null!;

        public GetChallengeInvokeArgs()
        {
        }
        public static new GetChallengeInvokeArgs Empty => new GetChallengeInvokeArgs();
    }


    [OutputType]
    public sealed class GetChallengeResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the challenge.
        /// </summary>
        public readonly string? ChallengeArn;
        public readonly ImmutableDictionary<string, string>? Tags;

        [OutputConstructor]
        private GetChallengeResult(
            string? challengeArn,

            ImmutableDictionary<string, string>? tags)
        {
            ChallengeArn = challengeArn;
            Tags = tags;
        }
    }
}
