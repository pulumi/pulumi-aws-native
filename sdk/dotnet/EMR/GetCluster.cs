// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EMR
{
    public static class GetCluster
    {
        /// <summary>
        /// Resource Type definition for AWS::EMR::Cluster
        /// </summary>
        public static Task<GetClusterResult> InvokeAsync(GetClusterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClusterResult>("aws-native:emr:getCluster", args ?? new GetClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EMR::Cluster
        /// </summary>
        public static Output<GetClusterResult> Invoke(GetClusterInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClusterResult>("aws-native:emr:getCluster", args ?? new GetClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetClusterArgs()
        {
        }
    }

    public sealed class GetClusterInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetClusterInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClusterResult
    {
        public readonly string? Id;
        public readonly Outputs.ClusterJobFlowInstancesConfig? Instances;
        public readonly Outputs.ClusterManagedScalingPolicy? ManagedScalingPolicy;
        public readonly string? MasterPublicDNS;
        public readonly int? StepConcurrencyLevel;
        public readonly ImmutableArray<Outputs.ClusterTag> Tags;
        public readonly bool? VisibleToAllUsers;

        [OutputConstructor]
        private GetClusterResult(
            string? id,

            Outputs.ClusterJobFlowInstancesConfig? instances,

            Outputs.ClusterManagedScalingPolicy? managedScalingPolicy,

            string? masterPublicDNS,

            int? stepConcurrencyLevel,

            ImmutableArray<Outputs.ClusterTag> tags,

            bool? visibleToAllUsers)
        {
            Id = id;
            Instances = instances;
            ManagedScalingPolicy = managedScalingPolicy;
            MasterPublicDNS = masterPublicDNS;
            StepConcurrencyLevel = stepConcurrencyLevel;
            Tags = tags;
            VisibleToAllUsers = visibleToAllUsers;
        }
    }
}
