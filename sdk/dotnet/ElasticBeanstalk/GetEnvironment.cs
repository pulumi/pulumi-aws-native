// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ElasticBeanstalk
{
    public static class GetEnvironment
    {
        /// <summary>
        /// Resource Type definition for AWS::ElasticBeanstalk::Environment
        /// </summary>
        public static Task<GetEnvironmentResult> InvokeAsync(GetEnvironmentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEnvironmentResult>("aws-native:elasticbeanstalk:getEnvironment", args ?? new GetEnvironmentArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ElasticBeanstalk::Environment
        /// </summary>
        public static Output<GetEnvironmentResult> Invoke(GetEnvironmentInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEnvironmentResult>("aws-native:elasticbeanstalk:getEnvironment", args ?? new GetEnvironmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnvironmentArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetEnvironmentArgs()
        {
        }
    }

    public sealed class GetEnvironmentInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetEnvironmentInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEnvironmentResult
    {
        public readonly string? Description;
        public readonly string? EndpointURL;
        public readonly string? Id;
        public readonly string? OperationsRole;
        public readonly ImmutableArray<Outputs.EnvironmentOptionSetting> OptionSettings;
        public readonly string? PlatformArn;
        public readonly ImmutableArray<Outputs.EnvironmentTag> Tags;
        public readonly string? TemplateName;
        public readonly Outputs.EnvironmentTier? Tier;
        public readonly string? VersionLabel;

        [OutputConstructor]
        private GetEnvironmentResult(
            string? description,

            string? endpointURL,

            string? id,

            string? operationsRole,

            ImmutableArray<Outputs.EnvironmentOptionSetting> optionSettings,

            string? platformArn,

            ImmutableArray<Outputs.EnvironmentTag> tags,

            string? templateName,

            Outputs.EnvironmentTier? tier,

            string? versionLabel)
        {
            Description = description;
            EndpointURL = endpointURL;
            Id = id;
            OperationsRole = operationsRole;
            OptionSettings = optionSettings;
            PlatformArn = platformArn;
            Tags = tags;
            TemplateName = templateName;
            Tier = tier;
            VersionLabel = versionLabel;
        }
    }
}
