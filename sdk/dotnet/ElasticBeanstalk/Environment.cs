// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ElasticBeanstalk
{
    /// <summary>
    /// Resource Type definition for AWS::ElasticBeanstalk::Environment
    /// </summary>
    [AwsNativeResourceType("aws-native:elasticbeanstalk:Environment")]
    public partial class Environment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the application that is associated with this environment.
        /// </summary>
        [Output("applicationName")]
        public Output<string> ApplicationName { get; private set; } = null!;

        /// <summary>
        /// If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name.
        /// </summary>
        [Output("cnamePrefix")]
        public Output<string?> CnamePrefix { get; private set; } = null!;

        /// <summary>
        /// Your description for this environment.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("endpointUrl")]
        public Output<string> EndpointUrl { get; private set; } = null!;

        /// <summary>
        /// A unique name for the environment.
        /// </summary>
        [Output("environmentName")]
        public Output<string?> EnvironmentName { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment's operations role.
        /// </summary>
        [Output("operationsRole")]
        public Output<string?> OperationsRole { get; private set; } = null!;

        /// <summary>
        /// Key-value pairs defining configuration options for this environment, such as the instance type.
        /// </summary>
        [Output("optionSettings")]
        public Output<ImmutableArray<Outputs.EnvironmentOptionSetting>> OptionSettings { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the custom platform to use with the environment.
        /// </summary>
        [Output("platformArn")]
        public Output<string?> PlatformArn { get; private set; } = null!;

        /// <summary>
        /// The name of an Elastic Beanstalk solution stack (platform version) to use with the environment.
        /// </summary>
        [Output("solutionStackName")]
        public Output<string?> SolutionStackName { get; private set; } = null!;

        /// <summary>
        /// Specifies the tags applied to resources in the environment.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.EnvironmentTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The name of the Elastic Beanstalk configuration template to use with the environment.
        /// </summary>
        [Output("templateName")]
        public Output<string?> TemplateName { get; private set; } = null!;

        /// <summary>
        /// Specifies the tier to use in creating this environment. The environment tier that you choose determines whether Elastic Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles background-processing tasks.
        /// </summary>
        [Output("tier")]
        public Output<Outputs.EnvironmentTier?> Tier { get; private set; } = null!;

        /// <summary>
        /// The name of the application version to deploy.
        /// </summary>
        [Output("versionLabel")]
        public Output<string?> VersionLabel { get; private set; } = null!;


        /// <summary>
        /// Create a Environment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Environment(string name, EnvironmentArgs args, CustomResourceOptions? options = null)
            : base("aws-native:elasticbeanstalk:Environment", name, args ?? new EnvironmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Environment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:elasticbeanstalk:Environment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Environment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Environment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Environment(name, id, options);
        }
    }

    public sealed class EnvironmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the application that is associated with this environment.
        /// </summary>
        [Input("applicationName", required: true)]
        public Input<string> ApplicationName { get; set; } = null!;

        /// <summary>
        /// If specified, the environment attempts to use this value as the prefix for the CNAME in your Elastic Beanstalk environment URL. If not specified, the CNAME is generated automatically by appending a random alphanumeric string to the environment name.
        /// </summary>
        [Input("cnamePrefix")]
        public Input<string>? CnamePrefix { get; set; }

        /// <summary>
        /// Your description for this environment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A unique name for the environment.
        /// </summary>
        [Input("environmentName")]
        public Input<string>? EnvironmentName { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) of an existing IAM role to be used as the environment's operations role.
        /// </summary>
        [Input("operationsRole")]
        public Input<string>? OperationsRole { get; set; }

        [Input("optionSettings")]
        private InputList<Inputs.EnvironmentOptionSettingArgs>? _optionSettings;

        /// <summary>
        /// Key-value pairs defining configuration options for this environment, such as the instance type.
        /// </summary>
        public InputList<Inputs.EnvironmentOptionSettingArgs> OptionSettings
        {
            get => _optionSettings ?? (_optionSettings = new InputList<Inputs.EnvironmentOptionSettingArgs>());
            set => _optionSettings = value;
        }

        /// <summary>
        /// The Amazon Resource Name (ARN) of the custom platform to use with the environment.
        /// </summary>
        [Input("platformArn")]
        public Input<string>? PlatformArn { get; set; }

        /// <summary>
        /// The name of an Elastic Beanstalk solution stack (platform version) to use with the environment.
        /// </summary>
        [Input("solutionStackName")]
        public Input<string>? SolutionStackName { get; set; }

        [Input("tags")]
        private InputList<Inputs.EnvironmentTagArgs>? _tags;

        /// <summary>
        /// Specifies the tags applied to resources in the environment.
        /// </summary>
        public InputList<Inputs.EnvironmentTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.EnvironmentTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The name of the Elastic Beanstalk configuration template to use with the environment.
        /// </summary>
        [Input("templateName")]
        public Input<string>? TemplateName { get; set; }

        /// <summary>
        /// Specifies the tier to use in creating this environment. The environment tier that you choose determines whether Elastic Beanstalk provisions resources to support a web application that handles HTTP(S) requests or a web application that handles background-processing tasks.
        /// </summary>
        [Input("tier")]
        public Input<Inputs.EnvironmentTierArgs>? Tier { get; set; }

        /// <summary>
        /// The name of the application version to deploy.
        /// </summary>
        [Input("versionLabel")]
        public Input<string>? VersionLabel { get; set; }

        public EnvironmentArgs()
        {
        }
        public static new EnvironmentArgs Empty => new EnvironmentArgs();
    }
}
