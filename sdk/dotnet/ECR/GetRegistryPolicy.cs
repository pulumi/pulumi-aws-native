// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ECR
{
    public static class GetRegistryPolicy
    {
        /// <summary>
        /// The AWS::ECR::RegistryPolicy is used to specify permissions for another AWS account and is used when configuring cross-account replication. For more information, see Registry permissions in the Amazon Elastic Container Registry User Guide: https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html
        /// </summary>
        public static Task<GetRegistryPolicyResult> InvokeAsync(GetRegistryPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegistryPolicyResult>("aws-native:ecr:getRegistryPolicy", args ?? new GetRegistryPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::ECR::RegistryPolicy is used to specify permissions for another AWS account and is used when configuring cross-account replication. For more information, see Registry permissions in the Amazon Elastic Container Registry User Guide: https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html
        /// </summary>
        public static Output<GetRegistryPolicyResult> Invoke(GetRegistryPolicyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRegistryPolicyResult>("aws-native:ecr:getRegistryPolicy", args ?? new GetRegistryPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegistryPolicyArgs : Pulumi.InvokeArgs
    {
        [Input("registryId", required: true)]
        public string RegistryId { get; set; } = null!;

        public GetRegistryPolicyArgs()
        {
        }
    }

    public sealed class GetRegistryPolicyInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("registryId", required: true)]
        public Input<string> RegistryId { get; set; } = null!;

        public GetRegistryPolicyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRegistryPolicyResult
    {
        /// <summary>
        /// The JSON policy text to apply to your registry. The policy text follows the same format as IAM policy text. For more information, see Registry permissions (https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry-permissions.html) in the Amazon Elastic Container Registry User Guide.
        /// </summary>
        public readonly object? PolicyText;
        public readonly string? RegistryId;

        [OutputConstructor]
        private GetRegistryPolicyResult(
            object? policyText,

            string? registryId)
        {
            PolicyText = policyText;
            RegistryId = registryId;
        }
    }
}
