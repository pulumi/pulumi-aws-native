// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ECR
{
    /// <summary>
    /// The AWS::ECR::PullThroughCacheRule resource configures the upstream registry configuration details for an Amazon Elastic Container Registry (Amazon Private ECR) pull-through cache.
    /// </summary>
    [AwsNativeResourceType("aws-native:ecr:PullThroughCacheRule")]
    public partial class PullThroughCacheRule : Pulumi.CustomResource
    {
        /// <summary>
        /// The ECRRepositoryPrefix is a custom alias for upstream registry url.
        /// </summary>
        [Output("ecrRepositoryPrefix")]
        public Output<string?> EcrRepositoryPrefix { get; private set; } = null!;

        /// <summary>
        /// The upstreamRegistryUrl is the endpoint of upstream registry url of the public repository to be cached
        /// </summary>
        [Output("upstreamRegistryUrl")]
        public Output<string?> UpstreamRegistryUrl { get; private set; } = null!;


        /// <summary>
        /// Create a PullThroughCacheRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PullThroughCacheRule(string name, PullThroughCacheRuleArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:ecr:PullThroughCacheRule", name, args ?? new PullThroughCacheRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PullThroughCacheRule(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ecr:PullThroughCacheRule", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PullThroughCacheRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PullThroughCacheRule Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PullThroughCacheRule(name, id, options);
        }
    }

    public sealed class PullThroughCacheRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ECRRepositoryPrefix is a custom alias for upstream registry url.
        /// </summary>
        [Input("ecrRepositoryPrefix")]
        public Input<string>? EcrRepositoryPrefix { get; set; }

        /// <summary>
        /// The upstreamRegistryUrl is the endpoint of upstream registry url of the public repository to be cached
        /// </summary>
        [Input("upstreamRegistryUrl")]
        public Input<string>? UpstreamRegistryUrl { get; set; }

        public PullThroughCacheRuleArgs()
        {
        }
    }
}
