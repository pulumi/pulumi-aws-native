// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Route53Profiles
{
    public static class GetProfile
    {
        /// <summary>
        /// Resource Type definition for AWS::Route53Profiles::Profile
        /// </summary>
        public static Task<GetProfileResult> InvokeAsync(GetProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProfileResult>("aws-native:route53profiles:getProfile", args ?? new GetProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Route53Profiles::Profile
        /// </summary>
        public static Output<GetProfileResult> Invoke(GetProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProfileResult>("aws-native:route53profiles:getProfile", args ?? new GetProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the profile.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetProfileArgs()
        {
        }
        public static new GetProfileArgs Empty => new GetProfileArgs();
    }

    public sealed class GetProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the profile.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetProfileInvokeArgs()
        {
        }
        public static new GetProfileInvokeArgs Empty => new GetProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetProfileResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the resolver profile.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The id of the creator request
        /// </summary>
        public readonly string? ClientToken;
        /// <summary>
        /// The ID of the profile.
        /// </summary>
        public readonly string? Id;

        [OutputConstructor]
        private GetProfileResult(
            string? arn,

            string? clientToken,

            string? id)
        {
            Arn = arn;
            ClientToken = clientToken;
            Id = id;
        }
    }
}
