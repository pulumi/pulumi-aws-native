// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ControlTower
{
    public static class GetEnabledControl
    {
        /// <summary>
        /// Enables a control on a specified target.
        /// </summary>
        public static Task<GetEnabledControlResult> InvokeAsync(GetEnabledControlArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEnabledControlResult>("aws-native:controltower:getEnabledControl", args ?? new GetEnabledControlArgs(), options.WithDefaults());

        /// <summary>
        /// Enables a control on a specified target.
        /// </summary>
        public static Output<GetEnabledControlResult> Invoke(GetEnabledControlInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEnabledControlResult>("aws-native:controltower:getEnabledControl", args ?? new GetEnabledControlInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEnabledControlArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Arn of the control.
        /// </summary>
        [Input("controlIdentifier", required: true)]
        public string ControlIdentifier { get; set; } = null!;

        /// <summary>
        /// Arn for Organizational unit to which the control needs to be applied
        /// </summary>
        [Input("targetIdentifier", required: true)]
        public string TargetIdentifier { get; set; } = null!;

        public GetEnabledControlArgs()
        {
        }
        public static new GetEnabledControlArgs Empty => new GetEnabledControlArgs();
    }

    public sealed class GetEnabledControlInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Arn of the control.
        /// </summary>
        [Input("controlIdentifier", required: true)]
        public Input<string> ControlIdentifier { get; set; } = null!;

        /// <summary>
        /// Arn for Organizational unit to which the control needs to be applied
        /// </summary>
        [Input("targetIdentifier", required: true)]
        public Input<string> TargetIdentifier { get; set; } = null!;

        public GetEnabledControlInvokeArgs()
        {
        }
        public static new GetEnabledControlInvokeArgs Empty => new GetEnabledControlInvokeArgs();
    }


    [OutputType]
    public sealed class GetEnabledControlResult
    {
        /// <summary>
        /// Parameters to configure the enabled control behavior.
        /// </summary>
        public readonly ImmutableArray<Outputs.EnabledControlParameter> Parameters;

        [OutputConstructor]
        private GetEnabledControlResult(ImmutableArray<Outputs.EnabledControlParameter> parameters)
        {
            Parameters = parameters;
        }
    }
}
