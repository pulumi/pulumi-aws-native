// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DeviceFarm
{
    /// <summary>
    /// AWS::DeviceFarm::VPCEConfiguration creates a new Device Farm VPCE Configuration
    /// </summary>
    [AwsNativeResourceType("aws-native:devicefarm:VPCEConfiguration")]
    public partial class VPCEConfiguration : Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("serviceDnsName")]
        public Output<string> ServiceDnsName { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.VPCEConfigurationTag>> Tags { get; private set; } = null!;

        [Output("vpceConfigurationDescription")]
        public Output<string?> VpceConfigurationDescription { get; private set; } = null!;

        [Output("vpceConfigurationName")]
        public Output<string> VpceConfigurationName { get; private set; } = null!;

        [Output("vpceServiceName")]
        public Output<string> VpceServiceName { get; private set; } = null!;


        /// <summary>
        /// Create a VPCEConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VPCEConfiguration(string name, VPCEConfigurationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:devicefarm:VPCEConfiguration", name, args ?? new VPCEConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VPCEConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:devicefarm:VPCEConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VPCEConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VPCEConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VPCEConfiguration(name, id, options);
        }
    }

    public sealed class VPCEConfigurationArgs : Pulumi.ResourceArgs
    {
        [Input("serviceDnsName", required: true)]
        public Input<string> ServiceDnsName { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.VPCEConfigurationTagArgs>? _tags;
        public InputList<Inputs.VPCEConfigurationTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.VPCEConfigurationTagArgs>());
            set => _tags = value;
        }

        [Input("vpceConfigurationDescription")]
        public Input<string>? VpceConfigurationDescription { get; set; }

        [Input("vpceConfigurationName", required: true)]
        public Input<string> VpceConfigurationName { get; set; } = null!;

        [Input("vpceServiceName", required: true)]
        public Input<string> VpceServiceName { get; set; } = null!;

        public VPCEConfigurationArgs()
        {
        }
    }
}
