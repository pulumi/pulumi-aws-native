// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.CodeArtifact
{
    [EnumType]
    public readonly struct PackageGroupRestrictionTypeRestrictionMode : IEquatable<PackageGroupRestrictionTypeRestrictionMode>
    {
        private readonly string _value;

        private PackageGroupRestrictionTypeRestrictionMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static PackageGroupRestrictionTypeRestrictionMode Allow { get; } = new PackageGroupRestrictionTypeRestrictionMode("ALLOW");
        public static PackageGroupRestrictionTypeRestrictionMode Block { get; } = new PackageGroupRestrictionTypeRestrictionMode("BLOCK");
        public static PackageGroupRestrictionTypeRestrictionMode AllowSpecificRepositories { get; } = new PackageGroupRestrictionTypeRestrictionMode("ALLOW_SPECIFIC_REPOSITORIES");
        public static PackageGroupRestrictionTypeRestrictionMode Inherit { get; } = new PackageGroupRestrictionTypeRestrictionMode("INHERIT");

        public static bool operator ==(PackageGroupRestrictionTypeRestrictionMode left, PackageGroupRestrictionTypeRestrictionMode right) => left.Equals(right);
        public static bool operator !=(PackageGroupRestrictionTypeRestrictionMode left, PackageGroupRestrictionTypeRestrictionMode right) => !left.Equals(right);

        public static explicit operator string(PackageGroupRestrictionTypeRestrictionMode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is PackageGroupRestrictionTypeRestrictionMode other && Equals(other);
        public bool Equals(PackageGroupRestrictionTypeRestrictionMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
