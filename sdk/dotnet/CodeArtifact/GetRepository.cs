// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CodeArtifact
{
    public static class GetRepository
    {
        /// <summary>
        /// The resource schema to create a CodeArtifact repository.
        /// </summary>
        public static Task<GetRepositoryResult> InvokeAsync(GetRepositoryArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRepositoryResult>("aws-native:codeartifact:getRepository", args ?? new GetRepositoryArgs(), options.WithDefaults());

        /// <summary>
        /// The resource schema to create a CodeArtifact repository.
        /// </summary>
        public static Output<GetRepositoryResult> Invoke(GetRepositoryInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetRepositoryResult>("aws-native:codeartifact:getRepository", args ?? new GetRepositoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRepositoryArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the repository.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetRepositoryArgs()
        {
        }
    }

    public sealed class GetRepositoryInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the repository.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetRepositoryInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRepositoryResult
    {
        /// <summary>
        /// The ARN of the repository.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// A text description of the repository.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A list of external connections associated with the repository.
        /// </summary>
        public readonly ImmutableArray<string> ExternalConnections;
        /// <summary>
        /// The name of the repository. This is used for GetAtt
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The access control resource policy on the provided repository.
        /// </summary>
        public readonly object? PermissionsPolicyDocument;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.RepositoryTag> Tags;
        /// <summary>
        /// A list of upstream repositories associated with the repository.
        /// </summary>
        public readonly ImmutableArray<string> Upstreams;

        [OutputConstructor]
        private GetRepositoryResult(
            string? arn,

            string? description,

            ImmutableArray<string> externalConnections,

            string? name,

            object? permissionsPolicyDocument,

            ImmutableArray<Outputs.RepositoryTag> tags,

            ImmutableArray<string> upstreams)
        {
            Arn = arn;
            Description = description;
            ExternalConnections = externalConnections;
            Name = name;
            PermissionsPolicyDocument = permissionsPolicyDocument;
            Tags = tags;
            Upstreams = upstreams;
        }
    }
}
