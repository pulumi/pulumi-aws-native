// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.InspectorV2
{
    [EnumType]
    public readonly struct CisScanConfigurationCisSecurityLevel : IEquatable<CisScanConfigurationCisSecurityLevel>
    {
        private readonly string _value;

        private CisScanConfigurationCisSecurityLevel(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static CisScanConfigurationCisSecurityLevel Level1 { get; } = new CisScanConfigurationCisSecurityLevel("LEVEL_1");
        public static CisScanConfigurationCisSecurityLevel Level2 { get; } = new CisScanConfigurationCisSecurityLevel("LEVEL_2");

        public static bool operator ==(CisScanConfigurationCisSecurityLevel left, CisScanConfigurationCisSecurityLevel right) => left.Equals(right);
        public static bool operator !=(CisScanConfigurationCisSecurityLevel left, CisScanConfigurationCisSecurityLevel right) => !left.Equals(right);

        public static explicit operator string(CisScanConfigurationCisSecurityLevel value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is CisScanConfigurationCisSecurityLevel other && Equals(other);
        public bool Equals(CisScanConfigurationCisSecurityLevel other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct CisScanConfigurationDay : IEquatable<CisScanConfigurationDay>
    {
        private readonly string _value;

        private CisScanConfigurationDay(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static CisScanConfigurationDay Mon { get; } = new CisScanConfigurationDay("MON");
        public static CisScanConfigurationDay Tue { get; } = new CisScanConfigurationDay("TUE");
        public static CisScanConfigurationDay Wed { get; } = new CisScanConfigurationDay("WED");
        public static CisScanConfigurationDay Thu { get; } = new CisScanConfigurationDay("THU");
        public static CisScanConfigurationDay Fri { get; } = new CisScanConfigurationDay("FRI");
        public static CisScanConfigurationDay Sat { get; } = new CisScanConfigurationDay("SAT");
        public static CisScanConfigurationDay Sun { get; } = new CisScanConfigurationDay("SUN");

        public static bool operator ==(CisScanConfigurationDay left, CisScanConfigurationDay right) => left.Equals(right);
        public static bool operator !=(CisScanConfigurationDay left, CisScanConfigurationDay right) => !left.Equals(right);

        public static explicit operator string(CisScanConfigurationDay value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is CisScanConfigurationDay other && Equals(other);
        public bool Equals(CisScanConfigurationDay other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct FilterAction : IEquatable<FilterAction>
    {
        private readonly string _value;

        private FilterAction(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static FilterAction None { get; } = new FilterAction("NONE");
        public static FilterAction Suppress { get; } = new FilterAction("SUPPRESS");

        public static bool operator ==(FilterAction left, FilterAction right) => left.Equals(right);
        public static bool operator !=(FilterAction left, FilterAction right) => !left.Equals(right);

        public static explicit operator string(FilterAction value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is FilterAction other && Equals(other);
        public bool Equals(FilterAction other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct FilterMapComparison : IEquatable<FilterMapComparison>
    {
        private readonly string _value;

        private FilterMapComparison(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static FilterMapComparison EqualsValue { get; } = new FilterMapComparison("EQUALS");

        public static bool operator ==(FilterMapComparison left, FilterMapComparison right) => left.Equals(right);
        public static bool operator !=(FilterMapComparison left, FilterMapComparison right) => !left.Equals(right);

        public static explicit operator string(FilterMapComparison value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is FilterMapComparison other && Equals(other);
        public bool Equals(FilterMapComparison other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct FilterStringComparison : IEquatable<FilterStringComparison>
    {
        private readonly string _value;

        private FilterStringComparison(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static FilterStringComparison EqualsValue { get; } = new FilterStringComparison("EQUALS");
        public static FilterStringComparison Prefix { get; } = new FilterStringComparison("PREFIX");
        public static FilterStringComparison NotEquals { get; } = new FilterStringComparison("NOT_EQUALS");

        public static bool operator ==(FilterStringComparison left, FilterStringComparison right) => left.Equals(right);
        public static bool operator !=(FilterStringComparison left, FilterStringComparison right) => !left.Equals(right);

        public static explicit operator string(FilterStringComparison value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is FilterStringComparison other && Equals(other);
        public bool Equals(FilterStringComparison other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
