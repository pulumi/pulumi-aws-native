// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.InspectorV2.Inputs
{

    public sealed class FilterCriteriaArgs : global::Pulumi.ResourceArgs
    {
        [Input("awsAccountId")]
        private InputList<Inputs.FilterStringFilterArgs>? _awsAccountId;

        /// <summary>
        /// Details of the AWS account IDs used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> AwsAccountId
        {
            get => _awsAccountId ?? (_awsAccountId = new InputList<Inputs.FilterStringFilterArgs>());
            set => _awsAccountId = value;
        }

        [Input("codeVulnerabilityDetectorName")]
        private InputList<Inputs.FilterStringFilterArgs>? _codeVulnerabilityDetectorName;
        public InputList<Inputs.FilterStringFilterArgs> CodeVulnerabilityDetectorName
        {
            get => _codeVulnerabilityDetectorName ?? (_codeVulnerabilityDetectorName = new InputList<Inputs.FilterStringFilterArgs>());
            set => _codeVulnerabilityDetectorName = value;
        }

        [Input("codeVulnerabilityDetectorTags")]
        private InputList<Inputs.FilterStringFilterArgs>? _codeVulnerabilityDetectorTags;
        public InputList<Inputs.FilterStringFilterArgs> CodeVulnerabilityDetectorTags
        {
            get => _codeVulnerabilityDetectorTags ?? (_codeVulnerabilityDetectorTags = new InputList<Inputs.FilterStringFilterArgs>());
            set => _codeVulnerabilityDetectorTags = value;
        }

        [Input("codeVulnerabilityFilePath")]
        private InputList<Inputs.FilterStringFilterArgs>? _codeVulnerabilityFilePath;
        public InputList<Inputs.FilterStringFilterArgs> CodeVulnerabilityFilePath
        {
            get => _codeVulnerabilityFilePath ?? (_codeVulnerabilityFilePath = new InputList<Inputs.FilterStringFilterArgs>());
            set => _codeVulnerabilityFilePath = value;
        }

        [Input("componentId")]
        private InputList<Inputs.FilterStringFilterArgs>? _componentId;

        /// <summary>
        /// Details of the component IDs used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> ComponentId
        {
            get => _componentId ?? (_componentId = new InputList<Inputs.FilterStringFilterArgs>());
            set => _componentId = value;
        }

        [Input("componentType")]
        private InputList<Inputs.FilterStringFilterArgs>? _componentType;

        /// <summary>
        /// Details of the component types used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> ComponentType
        {
            get => _componentType ?? (_componentType = new InputList<Inputs.FilterStringFilterArgs>());
            set => _componentType = value;
        }

        [Input("ec2InstanceImageId")]
        private InputList<Inputs.FilterStringFilterArgs>? _ec2InstanceImageId;

        /// <summary>
        /// Details of the Amazon EC2 instance image IDs used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> Ec2InstanceImageId
        {
            get => _ec2InstanceImageId ?? (_ec2InstanceImageId = new InputList<Inputs.FilterStringFilterArgs>());
            set => _ec2InstanceImageId = value;
        }

        [Input("ec2InstanceSubnetId")]
        private InputList<Inputs.FilterStringFilterArgs>? _ec2InstanceSubnetId;

        /// <summary>
        /// Details of the Amazon EC2 instance subnet IDs used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> Ec2InstanceSubnetId
        {
            get => _ec2InstanceSubnetId ?? (_ec2InstanceSubnetId = new InputList<Inputs.FilterStringFilterArgs>());
            set => _ec2InstanceSubnetId = value;
        }

        [Input("ec2InstanceVpcId")]
        private InputList<Inputs.FilterStringFilterArgs>? _ec2InstanceVpcId;

        /// <summary>
        /// Details of the Amazon EC2 instance VPC IDs used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> Ec2InstanceVpcId
        {
            get => _ec2InstanceVpcId ?? (_ec2InstanceVpcId = new InputList<Inputs.FilterStringFilterArgs>());
            set => _ec2InstanceVpcId = value;
        }

        [Input("ecrImageArchitecture")]
        private InputList<Inputs.FilterStringFilterArgs>? _ecrImageArchitecture;

        /// <summary>
        /// Details of the Amazon ECR image architecture types used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> EcrImageArchitecture
        {
            get => _ecrImageArchitecture ?? (_ecrImageArchitecture = new InputList<Inputs.FilterStringFilterArgs>());
            set => _ecrImageArchitecture = value;
        }

        [Input("ecrImageHash")]
        private InputList<Inputs.FilterStringFilterArgs>? _ecrImageHash;

        /// <summary>
        /// Details of the Amazon ECR image hashes used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> EcrImageHash
        {
            get => _ecrImageHash ?? (_ecrImageHash = new InputList<Inputs.FilterStringFilterArgs>());
            set => _ecrImageHash = value;
        }

        [Input("ecrImagePushedAt")]
        private InputList<Inputs.FilterDateFilterArgs>? _ecrImagePushedAt;

        /// <summary>
        /// Details on the Amazon ECR image push date and time used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterDateFilterArgs> EcrImagePushedAt
        {
            get => _ecrImagePushedAt ?? (_ecrImagePushedAt = new InputList<Inputs.FilterDateFilterArgs>());
            set => _ecrImagePushedAt = value;
        }

        [Input("ecrImageRegistry")]
        private InputList<Inputs.FilterStringFilterArgs>? _ecrImageRegistry;

        /// <summary>
        /// Details on the Amazon ECR registry used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> EcrImageRegistry
        {
            get => _ecrImageRegistry ?? (_ecrImageRegistry = new InputList<Inputs.FilterStringFilterArgs>());
            set => _ecrImageRegistry = value;
        }

        [Input("ecrImageRepositoryName")]
        private InputList<Inputs.FilterStringFilterArgs>? _ecrImageRepositoryName;

        /// <summary>
        /// Details on the name of the Amazon ECR repository used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> EcrImageRepositoryName
        {
            get => _ecrImageRepositoryName ?? (_ecrImageRepositoryName = new InputList<Inputs.FilterStringFilterArgs>());
            set => _ecrImageRepositoryName = value;
        }

        [Input("ecrImageTags")]
        private InputList<Inputs.FilterStringFilterArgs>? _ecrImageTags;

        /// <summary>
        /// The tags attached to the Amazon ECR container image.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> EcrImageTags
        {
            get => _ecrImageTags ?? (_ecrImageTags = new InputList<Inputs.FilterStringFilterArgs>());
            set => _ecrImageTags = value;
        }

        [Input("epssScore")]
        private InputList<Inputs.FilterNumberFilterArgs>? _epssScore;
        public InputList<Inputs.FilterNumberFilterArgs> EpssScore
        {
            get => _epssScore ?? (_epssScore = new InputList<Inputs.FilterNumberFilterArgs>());
            set => _epssScore = value;
        }

        [Input("exploitAvailable")]
        private InputList<Inputs.FilterStringFilterArgs>? _exploitAvailable;
        public InputList<Inputs.FilterStringFilterArgs> ExploitAvailable
        {
            get => _exploitAvailable ?? (_exploitAvailable = new InputList<Inputs.FilterStringFilterArgs>());
            set => _exploitAvailable = value;
        }

        [Input("findingArn")]
        private InputList<Inputs.FilterStringFilterArgs>? _findingArn;

        /// <summary>
        /// Details on the finding ARNs used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> FindingArn
        {
            get => _findingArn ?? (_findingArn = new InputList<Inputs.FilterStringFilterArgs>());
            set => _findingArn = value;
        }

        [Input("findingStatus")]
        private InputList<Inputs.FilterStringFilterArgs>? _findingStatus;

        /// <summary>
        /// Details on the finding status types used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> FindingStatus
        {
            get => _findingStatus ?? (_findingStatus = new InputList<Inputs.FilterStringFilterArgs>());
            set => _findingStatus = value;
        }

        [Input("findingType")]
        private InputList<Inputs.FilterStringFilterArgs>? _findingType;

        /// <summary>
        /// Details on the finding types used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> FindingType
        {
            get => _findingType ?? (_findingType = new InputList<Inputs.FilterStringFilterArgs>());
            set => _findingType = value;
        }

        [Input("firstObservedAt")]
        private InputList<Inputs.FilterDateFilterArgs>? _firstObservedAt;

        /// <summary>
        /// Details on the date and time a finding was first seen used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterDateFilterArgs> FirstObservedAt
        {
            get => _firstObservedAt ?? (_firstObservedAt = new InputList<Inputs.FilterDateFilterArgs>());
            set => _firstObservedAt = value;
        }

        [Input("fixAvailable")]
        private InputList<Inputs.FilterStringFilterArgs>? _fixAvailable;
        public InputList<Inputs.FilterStringFilterArgs> FixAvailable
        {
            get => _fixAvailable ?? (_fixAvailable = new InputList<Inputs.FilterStringFilterArgs>());
            set => _fixAvailable = value;
        }

        [Input("inspectorScore")]
        private InputList<Inputs.FilterNumberFilterArgs>? _inspectorScore;

        /// <summary>
        /// The Amazon Inspector score to filter on.
        /// </summary>
        public InputList<Inputs.FilterNumberFilterArgs> InspectorScore
        {
            get => _inspectorScore ?? (_inspectorScore = new InputList<Inputs.FilterNumberFilterArgs>());
            set => _inspectorScore = value;
        }

        [Input("lambdaFunctionExecutionRoleArn")]
        private InputList<Inputs.FilterStringFilterArgs>? _lambdaFunctionExecutionRoleArn;
        public InputList<Inputs.FilterStringFilterArgs> LambdaFunctionExecutionRoleArn
        {
            get => _lambdaFunctionExecutionRoleArn ?? (_lambdaFunctionExecutionRoleArn = new InputList<Inputs.FilterStringFilterArgs>());
            set => _lambdaFunctionExecutionRoleArn = value;
        }

        [Input("lambdaFunctionLastModifiedAt")]
        private InputList<Inputs.FilterDateFilterArgs>? _lambdaFunctionLastModifiedAt;
        public InputList<Inputs.FilterDateFilterArgs> LambdaFunctionLastModifiedAt
        {
            get => _lambdaFunctionLastModifiedAt ?? (_lambdaFunctionLastModifiedAt = new InputList<Inputs.FilterDateFilterArgs>());
            set => _lambdaFunctionLastModifiedAt = value;
        }

        [Input("lambdaFunctionLayers")]
        private InputList<Inputs.FilterStringFilterArgs>? _lambdaFunctionLayers;
        public InputList<Inputs.FilterStringFilterArgs> LambdaFunctionLayers
        {
            get => _lambdaFunctionLayers ?? (_lambdaFunctionLayers = new InputList<Inputs.FilterStringFilterArgs>());
            set => _lambdaFunctionLayers = value;
        }

        [Input("lambdaFunctionName")]
        private InputList<Inputs.FilterStringFilterArgs>? _lambdaFunctionName;
        public InputList<Inputs.FilterStringFilterArgs> LambdaFunctionName
        {
            get => _lambdaFunctionName ?? (_lambdaFunctionName = new InputList<Inputs.FilterStringFilterArgs>());
            set => _lambdaFunctionName = value;
        }

        [Input("lambdaFunctionRuntime")]
        private InputList<Inputs.FilterStringFilterArgs>? _lambdaFunctionRuntime;
        public InputList<Inputs.FilterStringFilterArgs> LambdaFunctionRuntime
        {
            get => _lambdaFunctionRuntime ?? (_lambdaFunctionRuntime = new InputList<Inputs.FilterStringFilterArgs>());
            set => _lambdaFunctionRuntime = value;
        }

        [Input("lastObservedAt")]
        private InputList<Inputs.FilterDateFilterArgs>? _lastObservedAt;

        /// <summary>
        /// Details on the date and time a finding was last seen used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterDateFilterArgs> LastObservedAt
        {
            get => _lastObservedAt ?? (_lastObservedAt = new InputList<Inputs.FilterDateFilterArgs>());
            set => _lastObservedAt = value;
        }

        [Input("networkProtocol")]
        private InputList<Inputs.FilterStringFilterArgs>? _networkProtocol;

        /// <summary>
        /// Details on network protocol used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> NetworkProtocol
        {
            get => _networkProtocol ?? (_networkProtocol = new InputList<Inputs.FilterStringFilterArgs>());
            set => _networkProtocol = value;
        }

        [Input("portRange")]
        private InputList<Inputs.FilterPortRangeFilterArgs>? _portRange;

        /// <summary>
        /// Details on the port ranges used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterPortRangeFilterArgs> PortRange
        {
            get => _portRange ?? (_portRange = new InputList<Inputs.FilterPortRangeFilterArgs>());
            set => _portRange = value;
        }

        [Input("relatedVulnerabilities")]
        private InputList<Inputs.FilterStringFilterArgs>? _relatedVulnerabilities;

        /// <summary>
        /// Details on the related vulnerabilities used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> RelatedVulnerabilities
        {
            get => _relatedVulnerabilities ?? (_relatedVulnerabilities = new InputList<Inputs.FilterStringFilterArgs>());
            set => _relatedVulnerabilities = value;
        }

        [Input("resourceId")]
        private InputList<Inputs.FilterStringFilterArgs>? _resourceId;

        /// <summary>
        /// Details on the resource IDs used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> ResourceId
        {
            get => _resourceId ?? (_resourceId = new InputList<Inputs.FilterStringFilterArgs>());
            set => _resourceId = value;
        }

        [Input("resourceTags")]
        private InputList<Inputs.FilterMapFilterArgs>? _resourceTags;

        /// <summary>
        /// Details on the resource tags used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterMapFilterArgs> ResourceTags
        {
            get => _resourceTags ?? (_resourceTags = new InputList<Inputs.FilterMapFilterArgs>());
            set => _resourceTags = value;
        }

        [Input("resourceType")]
        private InputList<Inputs.FilterStringFilterArgs>? _resourceType;

        /// <summary>
        /// Details on the resource types used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> ResourceType
        {
            get => _resourceType ?? (_resourceType = new InputList<Inputs.FilterStringFilterArgs>());
            set => _resourceType = value;
        }

        [Input("severity")]
        private InputList<Inputs.FilterStringFilterArgs>? _severity;

        /// <summary>
        /// Details on the severity used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> Severity
        {
            get => _severity ?? (_severity = new InputList<Inputs.FilterStringFilterArgs>());
            set => _severity = value;
        }

        [Input("title")]
        private InputList<Inputs.FilterStringFilterArgs>? _title;

        /// <summary>
        /// Details on the finding title used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> Title
        {
            get => _title ?? (_title = new InputList<Inputs.FilterStringFilterArgs>());
            set => _title = value;
        }

        [Input("updatedAt")]
        private InputList<Inputs.FilterDateFilterArgs>? _updatedAt;

        /// <summary>
        /// Details on the date and time a finding was last updated at used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterDateFilterArgs> UpdatedAt
        {
            get => _updatedAt ?? (_updatedAt = new InputList<Inputs.FilterDateFilterArgs>());
            set => _updatedAt = value;
        }

        [Input("vendorSeverity")]
        private InputList<Inputs.FilterStringFilterArgs>? _vendorSeverity;

        /// <summary>
        /// Details on the vendor severity used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> VendorSeverity
        {
            get => _vendorSeverity ?? (_vendorSeverity = new InputList<Inputs.FilterStringFilterArgs>());
            set => _vendorSeverity = value;
        }

        [Input("vulnerabilityId")]
        private InputList<Inputs.FilterStringFilterArgs>? _vulnerabilityId;

        /// <summary>
        /// Details on the vulnerability ID used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> VulnerabilityId
        {
            get => _vulnerabilityId ?? (_vulnerabilityId = new InputList<Inputs.FilterStringFilterArgs>());
            set => _vulnerabilityId = value;
        }

        [Input("vulnerabilitySource")]
        private InputList<Inputs.FilterStringFilterArgs>? _vulnerabilitySource;

        /// <summary>
        /// Details on the vulnerability score to filter findings by.
        /// </summary>
        public InputList<Inputs.FilterStringFilterArgs> VulnerabilitySource
        {
            get => _vulnerabilitySource ?? (_vulnerabilitySource = new InputList<Inputs.FilterStringFilterArgs>());
            set => _vulnerabilitySource = value;
        }

        [Input("vulnerablePackages")]
        private InputList<Inputs.FilterPackageFilterArgs>? _vulnerablePackages;

        /// <summary>
        /// Details on the vulnerable packages used to filter findings.
        /// </summary>
        public InputList<Inputs.FilterPackageFilterArgs> VulnerablePackages
        {
            get => _vulnerablePackages ?? (_vulnerablePackages = new InputList<Inputs.FilterPackageFilterArgs>());
            set => _vulnerablePackages = value;
        }

        public FilterCriteriaArgs()
        {
        }
        public static new FilterCriteriaArgs Empty => new FilterCriteriaArgs();
    }
}
