// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.InspectorV2
{
    /// <summary>
    /// CIS Scan Configuration resource schema
    /// </summary>
    [AwsNativeResourceType("aws-native:inspectorv2:CisScanConfiguration")]
    public partial class CisScanConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// CIS Scan configuration unique identifier
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// Name of the scan
        /// </summary>
        [Output("scanName")]
        public Output<string?> ScanName { get; private set; } = null!;

        [Output("schedule")]
        public Output<Outputs.CisScanConfigurationSchedule?> Schedule { get; private set; } = null!;

        [Output("securityLevel")]
        public Output<Pulumi.AwsNative.InspectorV2.CisScanConfigurationCisSecurityLevel?> SecurityLevel { get; private set; } = null!;

        [Output("tags")]
        public Output<Outputs.CisScanConfigurationCisTagMap?> Tags { get; private set; } = null!;

        [Output("targets")]
        public Output<Outputs.CisScanConfigurationCisTargets?> Targets { get; private set; } = null!;


        /// <summary>
        /// Create a CisScanConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CisScanConfiguration(string name, CisScanConfigurationArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:inspectorv2:CisScanConfiguration", name, args ?? new CisScanConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CisScanConfiguration(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:inspectorv2:CisScanConfiguration", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CisScanConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CisScanConfiguration Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new CisScanConfiguration(name, id, options);
        }
    }

    public sealed class CisScanConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the scan
        /// </summary>
        [Input("scanName")]
        public Input<string>? ScanName { get; set; }

        [Input("schedule")]
        public Input<Inputs.CisScanConfigurationScheduleArgs>? Schedule { get; set; }

        [Input("securityLevel")]
        public Input<Pulumi.AwsNative.InspectorV2.CisScanConfigurationCisSecurityLevel>? SecurityLevel { get; set; }

        [Input("tags")]
        public Input<Inputs.CisScanConfigurationCisTagMapArgs>? Tags { get; set; }

        [Input("targets")]
        public Input<Inputs.CisScanConfigurationCisTargetsArgs>? Targets { get; set; }

        public CisScanConfigurationArgs()
        {
        }
        public static new CisScanConfigurationArgs Empty => new CisScanConfigurationArgs();
    }
}
