// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Aps
{
    public static class GetAnomalyDetector
    {
        /// <summary>
        /// AnomalyDetector schema for cloudformation.
        /// </summary>
        public static Task<GetAnomalyDetectorResult> InvokeAsync(GetAnomalyDetectorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAnomalyDetectorResult>("aws-native:aps:getAnomalyDetector", args ?? new GetAnomalyDetectorArgs(), options.WithDefaults());

        /// <summary>
        /// AnomalyDetector schema for cloudformation.
        /// </summary>
        public static Output<GetAnomalyDetectorResult> Invoke(GetAnomalyDetectorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAnomalyDetectorResult>("aws-native:aps:getAnomalyDetector", args ?? new GetAnomalyDetectorInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// AnomalyDetector schema for cloudformation.
        /// </summary>
        public static Output<GetAnomalyDetectorResult> Invoke(GetAnomalyDetectorInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAnomalyDetectorResult>("aws-native:aps:getAnomalyDetector", args ?? new GetAnomalyDetectorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAnomalyDetectorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The AnomalyDetector ARN.
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetAnomalyDetectorArgs()
        {
        }
        public static new GetAnomalyDetectorArgs Empty => new GetAnomalyDetectorArgs();
    }

    public sealed class GetAnomalyDetectorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The AnomalyDetector ARN.
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetAnomalyDetectorInvokeArgs()
        {
        }
        public static new GetAnomalyDetectorInvokeArgs Empty => new GetAnomalyDetectorInvokeArgs();
    }


    [OutputType]
    public sealed class GetAnomalyDetectorResult
    {
        /// <summary>
        /// The AnomalyDetector ARN.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Determines the anomaly detector's algorithm and its configuration.
        /// </summary>
        public readonly Outputs.AnomalyDetectorConfiguration? Configuration;
        /// <summary>
        /// The AnomalyDetector period of detection and metric generation.
        /// </summary>
        public readonly int? EvaluationIntervalInSeconds;
        /// <summary>
        /// An array of key-value pairs to provide meta-data.
        /// </summary>
        public readonly ImmutableArray<Outputs.AnomalyDetectorLabel> Labels;
        /// <summary>
        /// The action to perform when running the expression returns no data.
        /// </summary>
        public readonly Outputs.AnomalyDetectorMissingDataAction? MissingDataAction;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetAnomalyDetectorResult(
            string? arn,

            Outputs.AnomalyDetectorConfiguration? configuration,

            int? evaluationIntervalInSeconds,

            ImmutableArray<Outputs.AnomalyDetectorLabel> labels,

            Outputs.AnomalyDetectorMissingDataAction? missingDataAction,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Arn = arn;
            Configuration = configuration;
            EvaluationIntervalInSeconds = evaluationIntervalInSeconds;
            Labels = labels;
            MissingDataAction = missingDataAction;
            Tags = tags;
        }
    }
}
