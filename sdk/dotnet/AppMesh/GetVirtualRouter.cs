// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AppMesh
{
    public static class GetVirtualRouter
    {
        /// <summary>
        /// Resource Type definition for AWS::AppMesh::VirtualRouter
        /// </summary>
        public static Task<GetVirtualRouterResult> InvokeAsync(GetVirtualRouterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVirtualRouterResult>("aws-native:appmesh:getVirtualRouter", args ?? new GetVirtualRouterArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::AppMesh::VirtualRouter
        /// </summary>
        public static Output<GetVirtualRouterResult> Invoke(GetVirtualRouterInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetVirtualRouterResult>("aws-native:appmesh:getVirtualRouter", args ?? new GetVirtualRouterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVirtualRouterArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetVirtualRouterArgs()
        {
        }
    }

    public sealed class GetVirtualRouterInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetVirtualRouterInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVirtualRouterResult
    {
        public readonly string? Arn;
        public readonly string? Id;
        public readonly string? ResourceOwner;
        public readonly Outputs.VirtualRouterSpec? Spec;
        public readonly ImmutableArray<Outputs.VirtualRouterTag> Tags;
        public readonly string? Uid;

        [OutputConstructor]
        private GetVirtualRouterResult(
            string? arn,

            string? id,

            string? resourceOwner,

            Outputs.VirtualRouterSpec? spec,

            ImmutableArray<Outputs.VirtualRouterTag> tags,

            string? uid)
        {
            Arn = arn;
            Id = id;
            ResourceOwner = resourceOwner;
            Spec = spec;
            Tags = tags;
            Uid = uid;
        }
    }
}
