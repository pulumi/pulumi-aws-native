// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.DataPipeline
{
    /// <summary>
    /// An example resource schema demonstrating some basic constructs and validation rules.
    /// </summary>
    [AwsNativeResourceType("aws-native:datapipeline:Pipeline")]
    public partial class Pipeline : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Indicates whether to validate and start the pipeline or stop an active pipeline. By default, the value is set to true.
        /// </summary>
        [Output("activate")]
        public Output<bool?> Activate { get; private set; } = null!;

        /// <summary>
        /// A description of the pipeline.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The parameter objects used with the pipeline.
        /// </summary>
        [Output("parameterObjects")]
        public Output<ImmutableArray<Outputs.PipelineParameterObject>> ParameterObjects { get; private set; } = null!;

        /// <summary>
        /// The parameter values used with the pipeline.
        /// </summary>
        [Output("parameterValues")]
        public Output<ImmutableArray<Outputs.PipelineParameterValue>> ParameterValues { get; private set; } = null!;

        [Output("pipelineId")]
        public Output<string> PipelineId { get; private set; } = null!;

        /// <summary>
        /// The objects that define the pipeline. These objects overwrite the existing pipeline definition. Not all objects, fields, and values can be updated. For information about restrictions, see Editing Your Pipeline in the AWS Data Pipeline Developer Guide.
        /// </summary>
        [Output("pipelineObjects")]
        public Output<ImmutableArray<Outputs.PipelineObject>> PipelineObjects { get; private set; } = null!;

        /// <summary>
        /// A list of arbitrary tags (key-value pairs) to associate with the pipeline, which you can use to control permissions. For more information, see Controlling Access to Pipelines and Resources in the AWS Data Pipeline Developer Guide.
        /// </summary>
        [Output("pipelineTags")]
        public Output<ImmutableArray<Outputs.PipelineTag>> PipelineTags { get; private set; } = null!;


        /// <summary>
        /// Create a Pipeline resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Pipeline(string name, PipelineArgs? args = null, CustomResourceOptions? options = null)
            : base("aws-native:datapipeline:Pipeline", name, args ?? new PipelineArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Pipeline(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:datapipeline:Pipeline", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Pipeline resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Pipeline Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Pipeline(name, id, options);
        }
    }

    public sealed class PipelineArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates whether to validate and start the pipeline or stop an active pipeline. By default, the value is set to true.
        /// </summary>
        [Input("activate")]
        public Input<bool>? Activate { get; set; }

        /// <summary>
        /// A description of the pipeline.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the pipeline.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameterObjects")]
        private InputList<Inputs.PipelineParameterObjectArgs>? _parameterObjects;

        /// <summary>
        /// The parameter objects used with the pipeline.
        /// </summary>
        public InputList<Inputs.PipelineParameterObjectArgs> ParameterObjects
        {
            get => _parameterObjects ?? (_parameterObjects = new InputList<Inputs.PipelineParameterObjectArgs>());
            set => _parameterObjects = value;
        }

        [Input("parameterValues")]
        private InputList<Inputs.PipelineParameterValueArgs>? _parameterValues;

        /// <summary>
        /// The parameter values used with the pipeline.
        /// </summary>
        public InputList<Inputs.PipelineParameterValueArgs> ParameterValues
        {
            get => _parameterValues ?? (_parameterValues = new InputList<Inputs.PipelineParameterValueArgs>());
            set => _parameterValues = value;
        }

        [Input("pipelineObjects")]
        private InputList<Inputs.PipelineObjectArgs>? _pipelineObjects;

        /// <summary>
        /// The objects that define the pipeline. These objects overwrite the existing pipeline definition. Not all objects, fields, and values can be updated. For information about restrictions, see Editing Your Pipeline in the AWS Data Pipeline Developer Guide.
        /// </summary>
        public InputList<Inputs.PipelineObjectArgs> PipelineObjects
        {
            get => _pipelineObjects ?? (_pipelineObjects = new InputList<Inputs.PipelineObjectArgs>());
            set => _pipelineObjects = value;
        }

        [Input("pipelineTags")]
        private InputList<Inputs.PipelineTagArgs>? _pipelineTags;

        /// <summary>
        /// A list of arbitrary tags (key-value pairs) to associate with the pipeline, which you can use to control permissions. For more information, see Controlling Access to Pipelines and Resources in the AWS Data Pipeline Developer Guide.
        /// </summary>
        public InputList<Inputs.PipelineTagArgs> PipelineTags
        {
            get => _pipelineTags ?? (_pipelineTags = new InputList<Inputs.PipelineTagArgs>());
            set => _pipelineTags = value;
        }

        public PipelineArgs()
        {
        }
        public static new PipelineArgs Empty => new PipelineArgs();
    }
}
