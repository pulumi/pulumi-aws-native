// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    /// <summary>
    /// Resource Schema of AWS::EC2::IPAMScope Type
    /// </summary>
    [AwsNativeResourceType("aws-native:ec2:IPAMScope")]
    public partial class IPAMScope : Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IPAM scope.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IPAM this scope is a part of.
        /// </summary>
        [Output("ipamArn")]
        public Output<string> IpamArn { get; private set; } = null!;

        /// <summary>
        /// The Id of the IPAM this scope is a part of.
        /// </summary>
        [Output("ipamId")]
        public Output<string> IpamId { get; private set; } = null!;

        /// <summary>
        /// Id of the IPAM scope.
        /// </summary>
        [Output("ipamScopeId")]
        public Output<string> IpamScopeId { get; private set; } = null!;

        /// <summary>
        /// Determines whether this scope contains publicly routable space or space for a private network
        /// </summary>
        [Output("ipamScopeType")]
        public Output<Pulumi.AwsNative.EC2.IPAMScopeIpamScopeType> IpamScopeType { get; private set; } = null!;

        /// <summary>
        /// Is this one of the default scopes created with the IPAM.
        /// </summary>
        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        /// <summary>
        /// The number of pools that currently exist in this scope.
        /// </summary>
        [Output("poolCount")]
        public Output<int> PoolCount { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.IPAMScopeTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a IPAMScope resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IPAMScope(string name, IPAMScopeArgs args, CustomResourceOptions? options = null)
            : base("aws-native:ec2:IPAMScope", name, args ?? new IPAMScopeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IPAMScope(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ec2:IPAMScope", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IPAMScope resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IPAMScope Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new IPAMScope(name, id, options);
        }
    }

    public sealed class IPAMScopeArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Id of the IPAM this scope is a part of.
        /// </summary>
        [Input("ipamId", required: true)]
        public Input<string> IpamId { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.IPAMScopeTagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Inputs.IPAMScopeTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.IPAMScopeTagArgs>());
            set => _tags = value;
        }

        public IPAMScopeArgs()
        {
        }
    }
}
