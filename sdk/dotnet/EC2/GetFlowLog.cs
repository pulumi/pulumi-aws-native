// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetFlowLog
    {
        /// <summary>
        /// Specifies a VPC flow log, which enables you to capture IP traffic for a specific network interface, subnet, or VPC.
        /// </summary>
        public static Task<GetFlowLogResult> InvokeAsync(GetFlowLogArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFlowLogResult>("aws-native:ec2:getFlowLog", args ?? new GetFlowLogArgs(), options.WithDefaults());

        /// <summary>
        /// Specifies a VPC flow log, which enables you to capture IP traffic for a specific network interface, subnet, or VPC.
        /// </summary>
        public static Output<GetFlowLogResult> Invoke(GetFlowLogInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetFlowLogResult>("aws-native:ec2:getFlowLog", args ?? new GetFlowLogInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFlowLogArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Flow Log ID
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetFlowLogArgs()
        {
        }
    }

    public sealed class GetFlowLogInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Flow Log ID
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetFlowLogInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetFlowLogResult
    {
        /// <summary>
        /// The Flow Log ID
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The tags to apply to the flow logs.
        /// </summary>
        public readonly ImmutableArray<Outputs.FlowLogTag> Tags;

        [OutputConstructor]
        private GetFlowLogResult(
            string? id,

            ImmutableArray<Outputs.FlowLogTag> tags)
        {
            Id = id;
            Tags = tags;
        }
    }
}
