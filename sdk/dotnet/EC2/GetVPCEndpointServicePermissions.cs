// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetVPCEndpointServicePermissions
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::VPCEndpointServicePermissions
        /// </summary>
        public static Task<GetVPCEndpointServicePermissionsResult> InvokeAsync(GetVPCEndpointServicePermissionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVPCEndpointServicePermissionsResult>("aws-native:ec2:getVPCEndpointServicePermissions", args ?? new GetVPCEndpointServicePermissionsArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::VPCEndpointServicePermissions
        /// </summary>
        public static Output<GetVPCEndpointServicePermissionsResult> Invoke(GetVPCEndpointServicePermissionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVPCEndpointServicePermissionsResult>("aws-native:ec2:getVPCEndpointServicePermissions", args ?? new GetVPCEndpointServicePermissionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVPCEndpointServicePermissionsArgs : global::Pulumi.InvokeArgs
    {
        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetVPCEndpointServicePermissionsArgs()
        {
        }
        public static new GetVPCEndpointServicePermissionsArgs Empty => new GetVPCEndpointServicePermissionsArgs();
    }

    public sealed class GetVPCEndpointServicePermissionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetVPCEndpointServicePermissionsInvokeArgs()
        {
        }
        public static new GetVPCEndpointServicePermissionsInvokeArgs Empty => new GetVPCEndpointServicePermissionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetVPCEndpointServicePermissionsResult
    {
        public readonly ImmutableArray<string> AllowedPrincipals;

        [OutputConstructor]
        private GetVPCEndpointServicePermissionsResult(ImmutableArray<string> allowedPrincipals)
        {
            AllowedPrincipals = allowedPrincipals;
        }
    }
}
