// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetEIPAssociation
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::EIPAssociation
        /// </summary>
        public static Task<GetEIPAssociationResult> InvokeAsync(GetEIPAssociationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEIPAssociationResult>("aws-native:ec2:getEIPAssociation", args ?? new GetEIPAssociationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::EIPAssociation
        /// </summary>
        public static Output<GetEIPAssociationResult> Invoke(GetEIPAssociationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEIPAssociationResult>("aws-native:ec2:getEIPAssociation", args ?? new GetEIPAssociationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEIPAssociationArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetEIPAssociationArgs()
        {
        }
    }

    public sealed class GetEIPAssociationInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetEIPAssociationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEIPAssociationResult
    {
        public readonly string? AllocationId;
        public readonly string? EIP;
        public readonly string? Id;
        public readonly string? InstanceId;
        public readonly string? NetworkInterfaceId;
        public readonly string? PrivateIpAddress;

        [OutputConstructor]
        private GetEIPAssociationResult(
            string? allocationId,

            string? eIP,

            string? id,

            string? instanceId,

            string? networkInterfaceId,

            string? privateIpAddress)
        {
            AllocationId = allocationId;
            EIP = eIP;
            Id = id;
            InstanceId = instanceId;
            NetworkInterfaceId = networkInterfaceId;
            PrivateIpAddress = privateIpAddress;
        }
    }
}
