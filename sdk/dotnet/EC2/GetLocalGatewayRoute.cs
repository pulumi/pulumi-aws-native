// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetLocalGatewayRoute
    {
        /// <summary>
        /// Describes a route for a local gateway route table.
        /// </summary>
        public static Task<GetLocalGatewayRouteResult> InvokeAsync(GetLocalGatewayRouteArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLocalGatewayRouteResult>("aws-native:ec2:getLocalGatewayRoute", args ?? new GetLocalGatewayRouteArgs(), options.WithDefaults());

        /// <summary>
        /// Describes a route for a local gateway route table.
        /// </summary>
        public static Output<GetLocalGatewayRouteResult> Invoke(GetLocalGatewayRouteInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLocalGatewayRouteResult>("aws-native:ec2:getLocalGatewayRoute", args ?? new GetLocalGatewayRouteInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLocalGatewayRouteArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The CIDR block used for destination matches.
        /// </summary>
        [Input("destinationCidrBlock", required: true)]
        public string DestinationCidrBlock { get; set; } = null!;

        /// <summary>
        /// The ID of the local gateway route table.
        /// </summary>
        [Input("localGatewayRouteTableId", required: true)]
        public string LocalGatewayRouteTableId { get; set; } = null!;

        public GetLocalGatewayRouteArgs()
        {
        }
        public static new GetLocalGatewayRouteArgs Empty => new GetLocalGatewayRouteArgs();
    }

    public sealed class GetLocalGatewayRouteInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The CIDR block used for destination matches.
        /// </summary>
        [Input("destinationCidrBlock", required: true)]
        public Input<string> DestinationCidrBlock { get; set; } = null!;

        /// <summary>
        /// The ID of the local gateway route table.
        /// </summary>
        [Input("localGatewayRouteTableId", required: true)]
        public Input<string> LocalGatewayRouteTableId { get; set; } = null!;

        public GetLocalGatewayRouteInvokeArgs()
        {
        }
        public static new GetLocalGatewayRouteInvokeArgs Empty => new GetLocalGatewayRouteInvokeArgs();
    }


    [OutputType]
    public sealed class GetLocalGatewayRouteResult
    {
        /// <summary>
        /// The ID of the virtual interface group.
        /// </summary>
        public readonly string? LocalGatewayVirtualInterfaceGroupId;
        /// <summary>
        /// The ID of the network interface.
        /// </summary>
        public readonly string? NetworkInterfaceId;
        /// <summary>
        /// The state of the route.
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The route type.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetLocalGatewayRouteResult(
            string? localGatewayVirtualInterfaceGroupId,

            string? networkInterfaceId,

            string? state,

            string? type)
        {
            LocalGatewayVirtualInterfaceGroupId = localGatewayVirtualInterfaceGroupId;
            NetworkInterfaceId = networkInterfaceId;
            State = state;
            Type = type;
        }
    }
}
