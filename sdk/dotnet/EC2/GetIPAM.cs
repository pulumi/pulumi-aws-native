// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetIPAM
    {
        /// <summary>
        /// Resource Schema of AWS::EC2::IPAM Type
        /// </summary>
        public static Task<GetIPAMResult> InvokeAsync(GetIPAMArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIPAMResult>("aws-native:ec2:getIPAM", args ?? new GetIPAMArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Schema of AWS::EC2::IPAM Type
        /// </summary>
        public static Output<GetIPAMResult> Invoke(GetIPAMInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetIPAMResult>("aws-native:ec2:getIPAM", args ?? new GetIPAMInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIPAMArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Id of the IPAM.
        /// </summary>
        [Input("ipamId", required: true)]
        public string IpamId { get; set; } = null!;

        public GetIPAMArgs()
        {
        }
    }

    public sealed class GetIPAMInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Id of the IPAM.
        /// </summary>
        [Input("ipamId", required: true)]
        public Input<string> IpamId { get; set; } = null!;

        public GetIPAMInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetIPAMResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IPAM.
        /// </summary>
        public readonly string? Arn;
        public readonly string? Description;
        /// <summary>
        /// Id of the IPAM.
        /// </summary>
        public readonly string? IpamId;
        /// <summary>
        /// The regions IPAM is enabled for. Allows pools to be created in these regions, as well as enabling monitoring
        /// </summary>
        public readonly ImmutableArray<Outputs.IPAMIpamOperatingRegion> OperatingRegions;
        /// <summary>
        /// The Id of the default scope for publicly routable IP space, created with this IPAM.
        /// </summary>
        public readonly string? PrivateDefaultScopeId;
        /// <summary>
        /// The Id of the default scope for publicly routable IP space, created with this IPAM.
        /// </summary>
        public readonly string? PublicDefaultScopeId;
        /// <summary>
        /// The number of scopes that currently exist in this IPAM.
        /// </summary>
        public readonly int? ScopeCount;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.IPAMTag> Tags;

        [OutputConstructor]
        private GetIPAMResult(
            string? arn,

            string? description,

            string? ipamId,

            ImmutableArray<Outputs.IPAMIpamOperatingRegion> operatingRegions,

            string? privateDefaultScopeId,

            string? publicDefaultScopeId,

            int? scopeCount,

            ImmutableArray<Outputs.IPAMTag> tags)
        {
            Arn = arn;
            Description = description;
            IpamId = ipamId;
            OperatingRegions = operatingRegions;
            PrivateDefaultScopeId = privateDefaultScopeId;
            PublicDefaultScopeId = publicDefaultScopeId;
            ScopeCount = scopeCount;
            Tags = tags;
        }
    }
}
