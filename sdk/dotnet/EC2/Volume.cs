// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    /// <summary>
    /// Resource Type definition for AWS::EC2::Volume
    /// </summary>
    [Obsolete(@"Volume is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:ec2:Volume")]
    public partial class Volume : Pulumi.CustomResource
    {
        [Output("autoEnableIO")]
        public Output<bool?> AutoEnableIO { get; private set; } = null!;

        [Output("availabilityZone")]
        public Output<string> AvailabilityZone { get; private set; } = null!;

        [Output("encrypted")]
        public Output<bool?> Encrypted { get; private set; } = null!;

        [Output("iops")]
        public Output<int?> Iops { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        [Output("multiAttachEnabled")]
        public Output<bool?> MultiAttachEnabled { get; private set; } = null!;

        [Output("outpostArn")]
        public Output<string?> OutpostArn { get; private set; } = null!;

        [Output("size")]
        public Output<int?> Size { get; private set; } = null!;

        [Output("snapshotId")]
        public Output<string?> SnapshotId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.VolumeTag>> Tags { get; private set; } = null!;

        [Output("throughput")]
        public Output<int?> Throughput { get; private set; } = null!;

        [Output("volumeType")]
        public Output<string?> VolumeType { get; private set; } = null!;


        /// <summary>
        /// Create a Volume resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Volume(string name, VolumeArgs args, CustomResourceOptions? options = null)
            : base("aws-native:ec2:Volume", name, args ?? new VolumeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Volume(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ec2:Volume", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Volume resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Volume Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Volume(name, id, options);
        }
    }

    public sealed class VolumeArgs : Pulumi.ResourceArgs
    {
        [Input("autoEnableIO")]
        public Input<bool>? AutoEnableIO { get; set; }

        [Input("availabilityZone", required: true)]
        public Input<string> AvailabilityZone { get; set; } = null!;

        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        [Input("iops")]
        public Input<int>? Iops { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("multiAttachEnabled")]
        public Input<bool>? MultiAttachEnabled { get; set; }

        [Input("outpostArn")]
        public Input<string>? OutpostArn { get; set; }

        [Input("size")]
        public Input<int>? Size { get; set; }

        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        [Input("tags")]
        private InputList<Inputs.VolumeTagArgs>? _tags;
        public InputList<Inputs.VolumeTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.VolumeTagArgs>());
            set => _tags = value;
        }

        [Input("throughput")]
        public Input<int>? Throughput { get; set; }

        [Input("volumeType")]
        public Input<string>? VolumeType { get; set; }

        public VolumeArgs()
        {
        }
    }
}
