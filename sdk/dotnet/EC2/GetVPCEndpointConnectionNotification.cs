// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetVPCEndpointConnectionNotification
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::VPCEndpointConnectionNotification
        /// </summary>
        public static Task<GetVPCEndpointConnectionNotificationResult> InvokeAsync(GetVPCEndpointConnectionNotificationArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVPCEndpointConnectionNotificationResult>("aws-native:ec2:getVPCEndpointConnectionNotification", args ?? new GetVPCEndpointConnectionNotificationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::VPCEndpointConnectionNotification
        /// </summary>
        public static Output<GetVPCEndpointConnectionNotificationResult> Invoke(GetVPCEndpointConnectionNotificationInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetVPCEndpointConnectionNotificationResult>("aws-native:ec2:getVPCEndpointConnectionNotification", args ?? new GetVPCEndpointConnectionNotificationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVPCEndpointConnectionNotificationArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        public GetVPCEndpointConnectionNotificationArgs()
        {
        }
    }

    public sealed class GetVPCEndpointConnectionNotificationInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        public GetVPCEndpointConnectionNotificationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVPCEndpointConnectionNotificationResult
    {
        public readonly ImmutableArray<string> ConnectionEvents;
        public readonly string? ConnectionNotificationArn;
        public readonly string? Id;

        [OutputConstructor]
        private GetVPCEndpointConnectionNotificationResult(
            ImmutableArray<string> connectionEvents,

            string? connectionNotificationArn,

            string? id)
        {
            ConnectionEvents = connectionEvents;
            ConnectionNotificationArn = connectionNotificationArn;
            Id = id;
        }
    }
}
