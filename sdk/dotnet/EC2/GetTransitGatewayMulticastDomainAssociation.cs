// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetTransitGatewayMulticastDomainAssociation
    {
        /// <summary>
        /// The AWS::EC2::TransitGatewayMulticastDomainAssociation type
        /// </summary>
        public static Task<GetTransitGatewayMulticastDomainAssociationResult> InvokeAsync(GetTransitGatewayMulticastDomainAssociationArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTransitGatewayMulticastDomainAssociationResult>("aws-native:ec2:getTransitGatewayMulticastDomainAssociation", args ?? new GetTransitGatewayMulticastDomainAssociationArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::EC2::TransitGatewayMulticastDomainAssociation type
        /// </summary>
        public static Output<GetTransitGatewayMulticastDomainAssociationResult> Invoke(GetTransitGatewayMulticastDomainAssociationInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTransitGatewayMulticastDomainAssociationResult>("aws-native:ec2:getTransitGatewayMulticastDomainAssociation", args ?? new GetTransitGatewayMulticastDomainAssociationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransitGatewayMulticastDomainAssociationArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IDs of the subnets to associate with the transit gateway multicast domain.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId { get; set; }

        /// <summary>
        /// The ID of the transit gateway attachment.
        /// </summary>
        [Input("transitGatewayAttachmentId")]
        public string? TransitGatewayAttachmentId { get; set; }

        /// <summary>
        /// The ID of the transit gateway multicast domain.
        /// </summary>
        [Input("transitGatewayMulticastDomainId")]
        public string? TransitGatewayMulticastDomainId { get; set; }

        public GetTransitGatewayMulticastDomainAssociationArgs()
        {
        }
    }

    public sealed class GetTransitGatewayMulticastDomainAssociationInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IDs of the subnets to associate with the transit gateway multicast domain.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// The ID of the transit gateway attachment.
        /// </summary>
        [Input("transitGatewayAttachmentId")]
        public Input<string>? TransitGatewayAttachmentId { get; set; }

        /// <summary>
        /// The ID of the transit gateway multicast domain.
        /// </summary>
        [Input("transitGatewayMulticastDomainId")]
        public Input<string>? TransitGatewayMulticastDomainId { get; set; }

        public GetTransitGatewayMulticastDomainAssociationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTransitGatewayMulticastDomainAssociationResult
    {
        /// <summary>
        /// The ID of the resource.
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// The type of resource, for example a VPC attachment.
        /// </summary>
        public readonly string? ResourceType;
        /// <summary>
        /// The state of the subnet association.
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private GetTransitGatewayMulticastDomainAssociationResult(
            string? resourceId,

            string? resourceType,

            string? state)
        {
            ResourceId = resourceId;
            ResourceType = resourceType;
            State = state;
        }
    }
}
