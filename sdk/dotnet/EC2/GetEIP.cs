// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetEIP
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::EIP
        /// </summary>
        public static Task<GetEIPResult> InvokeAsync(GetEIPArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEIPResult>("aws-native:ec2:getEIP", args ?? new GetEIPArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::EIP
        /// </summary>
        public static Output<GetEIPResult> Invoke(GetEIPInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEIPResult>("aws-native:ec2:getEIP", args ?? new GetEIPInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEIPArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetEIPArgs()
        {
        }
    }

    public sealed class GetEIPInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetEIPInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEIPResult
    {
        public readonly string? AllocationId;
        public readonly string? Id;
        public readonly string? InstanceId;
        public readonly string? PublicIpv4Pool;
        public readonly ImmutableArray<Outputs.EIPTag> Tags;

        [OutputConstructor]
        private GetEIPResult(
            string? allocationId,

            string? id,

            string? instanceId,

            string? publicIpv4Pool,

            ImmutableArray<Outputs.EIPTag> tags)
        {
            AllocationId = allocationId;
            Id = id;
            InstanceId = instanceId;
            PublicIpv4Pool = publicIpv4Pool;
            Tags = tags;
        }
    }
}
