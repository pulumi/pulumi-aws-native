// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    /// <summary>
    /// The AWS::EC2::VerifiedAccessGroup resource creates an AWS EC2 Verified Access Group.
    /// </summary>
    [AwsNativeResourceType("aws-native:ec2:VerifiedAccessGroup")]
    public partial class VerifiedAccessGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Time this Verified Access Group was created.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// A description for the AWS Verified Access group.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Time this Verified Access Group was last updated.
        /// </summary>
        [Output("lastUpdatedTime")]
        public Output<string> LastUpdatedTime { get; private set; } = null!;

        /// <summary>
        /// The AWS account number that owns the group.
        /// </summary>
        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        /// <summary>
        /// The AWS Verified Access policy document.
        /// </summary>
        [Output("policyDocument")]
        public Output<string?> PolicyDocument { get; private set; } = null!;

        /// <summary>
        /// The status of the Verified Access policy.
        /// </summary>
        [Output("policyEnabled")]
        public Output<bool?> PolicyEnabled { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.VerifiedAccessGroupTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The ARN of the Verified Access group.
        /// </summary>
        [Output("verifiedAccessGroupArn")]
        public Output<string> VerifiedAccessGroupArn { get; private set; } = null!;

        /// <summary>
        /// The ID of the AWS Verified Access group.
        /// </summary>
        [Output("verifiedAccessGroupId")]
        public Output<string> VerifiedAccessGroupId { get; private set; } = null!;

        /// <summary>
        /// The ID of the AWS Verified Access instance.
        /// </summary>
        [Output("verifiedAccessInstanceId")]
        public Output<string> VerifiedAccessInstanceId { get; private set; } = null!;


        /// <summary>
        /// Create a VerifiedAccessGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VerifiedAccessGroup(string name, VerifiedAccessGroupArgs args, CustomResourceOptions? options = null)
            : base("aws-native:ec2:VerifiedAccessGroup", name, args ?? new VerifiedAccessGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VerifiedAccessGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ec2:VerifiedAccessGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VerifiedAccessGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VerifiedAccessGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new VerifiedAccessGroup(name, id, options);
        }
    }

    public sealed class VerifiedAccessGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description for the AWS Verified Access group.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The AWS Verified Access policy document.
        /// </summary>
        [Input("policyDocument")]
        public Input<string>? PolicyDocument { get; set; }

        /// <summary>
        /// The status of the Verified Access policy.
        /// </summary>
        [Input("policyEnabled")]
        public Input<bool>? PolicyEnabled { get; set; }

        [Input("tags")]
        private InputList<Inputs.VerifiedAccessGroupTagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Inputs.VerifiedAccessGroupTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.VerifiedAccessGroupTagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the AWS Verified Access instance.
        /// </summary>
        [Input("verifiedAccessInstanceId", required: true)]
        public Input<string> VerifiedAccessInstanceId { get; set; } = null!;

        public VerifiedAccessGroupArgs()
        {
        }
        public static new VerifiedAccessGroupArgs Empty => new VerifiedAccessGroupArgs();
    }
}
