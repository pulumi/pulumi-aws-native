// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetTransitGatewayMulticastGroupMember
    {
        /// <summary>
        /// The AWS::EC2::TransitGatewayMulticastGroupMember registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
        /// </summary>
        public static Task<GetTransitGatewayMulticastGroupMemberResult> InvokeAsync(GetTransitGatewayMulticastGroupMemberArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTransitGatewayMulticastGroupMemberResult>("aws-native:ec2:getTransitGatewayMulticastGroupMember", args ?? new GetTransitGatewayMulticastGroupMemberArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::EC2::TransitGatewayMulticastGroupMember registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
        /// </summary>
        public static Output<GetTransitGatewayMulticastGroupMemberResult> Invoke(GetTransitGatewayMulticastGroupMemberInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTransitGatewayMulticastGroupMemberResult>("aws-native:ec2:getTransitGatewayMulticastGroupMember", args ?? new GetTransitGatewayMulticastGroupMemberInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTransitGatewayMulticastGroupMemberArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IP address assigned to the transit gateway multicast group.
        /// </summary>
        [Input("groupIpAddress", required: true)]
        public string GroupIpAddress { get; set; } = null!;

        /// <summary>
        /// The ID of the transit gateway attachment.
        /// </summary>
        [Input("networkInterfaceId", required: true)]
        public string NetworkInterfaceId { get; set; } = null!;

        /// <summary>
        /// The ID of the transit gateway multicast domain.
        /// </summary>
        [Input("transitGatewayMulticastDomainId", required: true)]
        public string TransitGatewayMulticastDomainId { get; set; } = null!;

        public GetTransitGatewayMulticastGroupMemberArgs()
        {
        }
    }

    public sealed class GetTransitGatewayMulticastGroupMemberInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The IP address assigned to the transit gateway multicast group.
        /// </summary>
        [Input("groupIpAddress", required: true)]
        public Input<string> GroupIpAddress { get; set; } = null!;

        /// <summary>
        /// The ID of the transit gateway attachment.
        /// </summary>
        [Input("networkInterfaceId", required: true)]
        public Input<string> NetworkInterfaceId { get; set; } = null!;

        /// <summary>
        /// The ID of the transit gateway multicast domain.
        /// </summary>
        [Input("transitGatewayMulticastDomainId", required: true)]
        public Input<string> TransitGatewayMulticastDomainId { get; set; } = null!;

        public GetTransitGatewayMulticastGroupMemberInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTransitGatewayMulticastGroupMemberResult
    {
        /// <summary>
        /// Indicates that the resource is a transit gateway multicast group member.
        /// </summary>
        public readonly bool? GroupMember;
        /// <summary>
        /// Indicates that the resource is a transit gateway multicast group member.
        /// </summary>
        public readonly bool? GroupSource;
        /// <summary>
        /// The member type (for example, static).
        /// </summary>
        public readonly string? MemberType;
        /// <summary>
        /// The ID of the resource.
        /// </summary>
        public readonly string? ResourceId;
        /// <summary>
        /// The type of resource, for example a VPC attachment.
        /// </summary>
        public readonly string? ResourceType;
        /// <summary>
        /// The source type.
        /// </summary>
        public readonly string? SourceType;
        /// <summary>
        /// The ID of the subnet.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The ID of the transit gateway attachment.
        /// </summary>
        public readonly string? TransitGatewayAttachmentId;

        [OutputConstructor]
        private GetTransitGatewayMulticastGroupMemberResult(
            bool? groupMember,

            bool? groupSource,

            string? memberType,

            string? resourceId,

            string? resourceType,

            string? sourceType,

            string? subnetId,

            string? transitGatewayAttachmentId)
        {
            GroupMember = groupMember;
            GroupSource = groupSource;
            MemberType = memberType;
            ResourceId = resourceId;
            ResourceType = resourceType;
            SourceType = sourceType;
            SubnetId = subnetId;
            TransitGatewayAttachmentId = transitGatewayAttachmentId;
        }
    }
}
