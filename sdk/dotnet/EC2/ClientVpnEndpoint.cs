// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    /// <summary>
    /// Resource Type definition for AWS::EC2::ClientVpnEndpoint
    /// </summary>
    [Obsolete(@"ClientVpnEndpoint is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:ec2:ClientVpnEndpoint")]
    public partial class ClientVpnEndpoint : Pulumi.CustomResource
    {
        [Output("authenticationOptions")]
        public Output<ImmutableArray<Outputs.ClientVpnEndpointClientAuthenticationRequest>> AuthenticationOptions { get; private set; } = null!;

        [Output("clientCidrBlock")]
        public Output<string> ClientCidrBlock { get; private set; } = null!;

        [Output("clientConnectOptions")]
        public Output<Outputs.ClientVpnEndpointClientConnectOptions?> ClientConnectOptions { get; private set; } = null!;

        [Output("connectionLogOptions")]
        public Output<Outputs.ClientVpnEndpointConnectionLogOptions> ConnectionLogOptions { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("dnsServers")]
        public Output<ImmutableArray<string>> DnsServers { get; private set; } = null!;

        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        [Output("selfServicePortal")]
        public Output<string?> SelfServicePortal { get; private set; } = null!;

        [Output("serverCertificateArn")]
        public Output<string> ServerCertificateArn { get; private set; } = null!;

        [Output("splitTunnel")]
        public Output<bool?> SplitTunnel { get; private set; } = null!;

        [Output("tagSpecifications")]
        public Output<ImmutableArray<Outputs.ClientVpnEndpointTagSpecification>> TagSpecifications { get; private set; } = null!;

        [Output("transportProtocol")]
        public Output<string?> TransportProtocol { get; private set; } = null!;

        [Output("vpcId")]
        public Output<string?> VpcId { get; private set; } = null!;

        [Output("vpnPort")]
        public Output<int?> VpnPort { get; private set; } = null!;


        /// <summary>
        /// Create a ClientVpnEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClientVpnEndpoint(string name, ClientVpnEndpointArgs args, CustomResourceOptions? options = null)
            : base("aws-native:ec2:ClientVpnEndpoint", name, args ?? new ClientVpnEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClientVpnEndpoint(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:ec2:ClientVpnEndpoint", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClientVpnEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClientVpnEndpoint Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ClientVpnEndpoint(name, id, options);
        }
    }

    public sealed class ClientVpnEndpointArgs : Pulumi.ResourceArgs
    {
        [Input("authenticationOptions", required: true)]
        private InputList<Inputs.ClientVpnEndpointClientAuthenticationRequestArgs>? _authenticationOptions;
        public InputList<Inputs.ClientVpnEndpointClientAuthenticationRequestArgs> AuthenticationOptions
        {
            get => _authenticationOptions ?? (_authenticationOptions = new InputList<Inputs.ClientVpnEndpointClientAuthenticationRequestArgs>());
            set => _authenticationOptions = value;
        }

        [Input("clientCidrBlock", required: true)]
        public Input<string> ClientCidrBlock { get; set; } = null!;

        [Input("clientConnectOptions")]
        public Input<Inputs.ClientVpnEndpointClientConnectOptionsArgs>? ClientConnectOptions { get; set; }

        [Input("connectionLogOptions", required: true)]
        public Input<Inputs.ClientVpnEndpointConnectionLogOptionsArgs> ConnectionLogOptions { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("dnsServers")]
        private InputList<string>? _dnsServers;
        public InputList<string> DnsServers
        {
            get => _dnsServers ?? (_dnsServers = new InputList<string>());
            set => _dnsServers = value;
        }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("selfServicePortal")]
        public Input<string>? SelfServicePortal { get; set; }

        [Input("serverCertificateArn", required: true)]
        public Input<string> ServerCertificateArn { get; set; } = null!;

        [Input("splitTunnel")]
        public Input<bool>? SplitTunnel { get; set; }

        [Input("tagSpecifications")]
        private InputList<Inputs.ClientVpnEndpointTagSpecificationArgs>? _tagSpecifications;
        public InputList<Inputs.ClientVpnEndpointTagSpecificationArgs> TagSpecifications
        {
            get => _tagSpecifications ?? (_tagSpecifications = new InputList<Inputs.ClientVpnEndpointTagSpecificationArgs>());
            set => _tagSpecifications = value;
        }

        [Input("transportProtocol")]
        public Input<string>? TransportProtocol { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        [Input("vpnPort")]
        public Input<int>? VpnPort { get; set; }

        public ClientVpnEndpointArgs()
        {
        }
    }
}
