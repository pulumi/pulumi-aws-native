// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetNetworkInsightsAccessScope
    {
        /// <summary>
        /// Resource schema for AWS::EC2::NetworkInsightsAccessScope
        /// </summary>
        public static Task<GetNetworkInsightsAccessScopeResult> InvokeAsync(GetNetworkInsightsAccessScopeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNetworkInsightsAccessScopeResult>("aws-native:ec2:getNetworkInsightsAccessScope", args ?? new GetNetworkInsightsAccessScopeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::EC2::NetworkInsightsAccessScope
        /// </summary>
        public static Output<GetNetworkInsightsAccessScopeResult> Invoke(GetNetworkInsightsAccessScopeInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNetworkInsightsAccessScopeResult>("aws-native:ec2:getNetworkInsightsAccessScope", args ?? new GetNetworkInsightsAccessScopeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkInsightsAccessScopeArgs : Pulumi.InvokeArgs
    {
        [Input("networkInsightsAccessScopeId", required: true)]
        public string NetworkInsightsAccessScopeId { get; set; } = null!;

        public GetNetworkInsightsAccessScopeArgs()
        {
        }
    }

    public sealed class GetNetworkInsightsAccessScopeInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("networkInsightsAccessScopeId", required: true)]
        public Input<string> NetworkInsightsAccessScopeId { get; set; } = null!;

        public GetNetworkInsightsAccessScopeInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNetworkInsightsAccessScopeResult
    {
        public readonly string? CreatedDate;
        public readonly string? NetworkInsightsAccessScopeArn;
        public readonly string? NetworkInsightsAccessScopeId;
        public readonly ImmutableArray<Outputs.NetworkInsightsAccessScopeTag> Tags;
        public readonly string? UpdatedDate;

        [OutputConstructor]
        private GetNetworkInsightsAccessScopeResult(
            string? createdDate,

            string? networkInsightsAccessScopeArn,

            string? networkInsightsAccessScopeId,

            ImmutableArray<Outputs.NetworkInsightsAccessScopeTag> tags,

            string? updatedDate)
        {
            CreatedDate = createdDate;
            NetworkInsightsAccessScopeArn = networkInsightsAccessScopeArn;
            NetworkInsightsAccessScopeId = networkInsightsAccessScopeId;
            Tags = tags;
            UpdatedDate = updatedDate;
        }
    }
}
