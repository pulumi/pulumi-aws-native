// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetVPNGateway
    {
        /// <summary>
        /// Schema for EC2 VPN Gateway
        /// </summary>
        public static Task<GetVPNGatewayResult> InvokeAsync(GetVPNGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVPNGatewayResult>("aws-native:ec2:getVPNGateway", args ?? new GetVPNGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Schema for EC2 VPN Gateway
        /// </summary>
        public static Output<GetVPNGatewayResult> Invoke(GetVPNGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVPNGatewayResult>("aws-native:ec2:getVPNGateway", args ?? new GetVPNGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVPNGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// VPN Gateway ID generated by service
        /// </summary>
        [Input("vpnGatewayId", required: true)]
        public string VpnGatewayId { get; set; } = null!;

        public GetVPNGatewayArgs()
        {
        }
        public static new GetVPNGatewayArgs Empty => new GetVPNGatewayArgs();
    }

    public sealed class GetVPNGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// VPN Gateway ID generated by service
        /// </summary>
        [Input("vpnGatewayId", required: true)]
        public Input<string> VpnGatewayId { get; set; } = null!;

        public GetVPNGatewayInvokeArgs()
        {
        }
        public static new GetVPNGatewayInvokeArgs Empty => new GetVPNGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetVPNGatewayResult
    {
        /// <summary>
        /// Any tags assigned to the virtual private gateway.
        /// </summary>
        public readonly ImmutableArray<Outputs.VPNGatewayTag> Tags;
        /// <summary>
        /// VPN Gateway ID generated by service
        /// </summary>
        public readonly string? VpnGatewayId;

        [OutputConstructor]
        private GetVPNGatewayResult(
            ImmutableArray<Outputs.VPNGatewayTag> tags,

            string? vpnGatewayId)
        {
            Tags = tags;
            VpnGatewayId = vpnGatewayId;
        }
    }
}
