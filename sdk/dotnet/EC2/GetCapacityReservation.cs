// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetCapacityReservation
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::CapacityReservation
        /// </summary>
        public static Task<GetCapacityReservationResult> InvokeAsync(GetCapacityReservationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCapacityReservationResult>("aws-native:ec2:getCapacityReservation", args ?? new GetCapacityReservationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::CapacityReservation
        /// </summary>
        public static Output<GetCapacityReservationResult> Invoke(GetCapacityReservationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCapacityReservationResult>("aws-native:ec2:getCapacityReservation", args ?? new GetCapacityReservationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCapacityReservationArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetCapacityReservationArgs()
        {
        }
    }

    public sealed class GetCapacityReservationInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetCapacityReservationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCapacityReservationResult
    {
        public readonly int? AvailableInstanceCount;
        public readonly string? EndDate;
        public readonly string? EndDateType;
        public readonly string? Id;
        public readonly int? InstanceCount;
        public readonly int? TotalInstanceCount;

        [OutputConstructor]
        private GetCapacityReservationResult(
            int? availableInstanceCount,

            string? endDate,

            string? endDateType,

            string? id,

            int? instanceCount,

            int? totalInstanceCount)
        {
            AvailableInstanceCount = availableInstanceCount;
            EndDate = endDate;
            EndDateType = endDateType;
            Id = id;
            InstanceCount = instanceCount;
            TotalInstanceCount = totalInstanceCount;
        }
    }
}
