// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetVerifiedAccessEndpoint
    {
        /// <summary>
        /// The AWS::EC2::VerifiedAccessEndpoint resource creates an AWS EC2 Verified Access Endpoint.
        /// </summary>
        public static Task<GetVerifiedAccessEndpointResult> InvokeAsync(GetVerifiedAccessEndpointArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVerifiedAccessEndpointResult>("aws-native:ec2:getVerifiedAccessEndpoint", args ?? new GetVerifiedAccessEndpointArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::EC2::VerifiedAccessEndpoint resource creates an AWS EC2 Verified Access Endpoint.
        /// </summary>
        public static Output<GetVerifiedAccessEndpointResult> Invoke(GetVerifiedAccessEndpointInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVerifiedAccessEndpointResult>("aws-native:ec2:getVerifiedAccessEndpoint", args ?? new GetVerifiedAccessEndpointInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVerifiedAccessEndpointArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the AWS Verified Access endpoint.
        /// </summary>
        [Input("verifiedAccessEndpointId", required: true)]
        public string VerifiedAccessEndpointId { get; set; } = null!;

        public GetVerifiedAccessEndpointArgs()
        {
        }
        public static new GetVerifiedAccessEndpointArgs Empty => new GetVerifiedAccessEndpointArgs();
    }

    public sealed class GetVerifiedAccessEndpointInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the AWS Verified Access endpoint.
        /// </summary>
        [Input("verifiedAccessEndpointId", required: true)]
        public Input<string> VerifiedAccessEndpointId { get; set; } = null!;

        public GetVerifiedAccessEndpointInvokeArgs()
        {
        }
        public static new GetVerifiedAccessEndpointInvokeArgs Empty => new GetVerifiedAccessEndpointInvokeArgs();
    }


    [OutputType]
    public sealed class GetVerifiedAccessEndpointResult
    {
        /// <summary>
        /// The creation time.
        /// </summary>
        public readonly string? CreationTime;
        /// <summary>
        /// A description for the AWS Verified Access endpoint.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Returned if endpoint has a device trust provider attached.
        /// </summary>
        public readonly string? DeviceValidationDomain;
        /// <summary>
        /// A DNS name that is generated for the endpoint.
        /// </summary>
        public readonly string? EndpointDomain;
        /// <summary>
        /// The last updated time.
        /// </summary>
        public readonly string? LastUpdatedTime;
        /// <summary>
        /// The load balancer details if creating the AWS Verified Access endpoint as load-balancer type.
        /// </summary>
        public readonly Outputs.VerifiedAccessEndpointLoadBalancerOptions? LoadBalancerOptions;
        /// <summary>
        /// The options for network-interface type endpoint.
        /// </summary>
        public readonly Outputs.VerifiedAccessEndpointNetworkInterfaceOptions? NetworkInterfaceOptions;
        /// <summary>
        /// The AWS Verified Access policy document.
        /// </summary>
        public readonly string? PolicyDocument;
        /// <summary>
        /// The status of the Verified Access policy.
        /// </summary>
        public readonly bool? PolicyEnabled;
        /// <summary>
        /// The endpoint status.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.VerifiedAccessEndpointTag> Tags;
        /// <summary>
        /// The ID of the AWS Verified Access endpoint.
        /// </summary>
        public readonly string? VerifiedAccessEndpointId;
        /// <summary>
        /// The ID of the AWS Verified Access group.
        /// </summary>
        public readonly string? VerifiedAccessGroupId;
        /// <summary>
        /// The ID of the AWS Verified Access instance.
        /// </summary>
        public readonly string? VerifiedAccessInstanceId;

        [OutputConstructor]
        private GetVerifiedAccessEndpointResult(
            string? creationTime,

            string? description,

            string? deviceValidationDomain,

            string? endpointDomain,

            string? lastUpdatedTime,

            Outputs.VerifiedAccessEndpointLoadBalancerOptions? loadBalancerOptions,

            Outputs.VerifiedAccessEndpointNetworkInterfaceOptions? networkInterfaceOptions,

            string? policyDocument,

            bool? policyEnabled,

            string? status,

            ImmutableArray<Outputs.VerifiedAccessEndpointTag> tags,

            string? verifiedAccessEndpointId,

            string? verifiedAccessGroupId,

            string? verifiedAccessInstanceId)
        {
            CreationTime = creationTime;
            Description = description;
            DeviceValidationDomain = deviceValidationDomain;
            EndpointDomain = endpointDomain;
            LastUpdatedTime = lastUpdatedTime;
            LoadBalancerOptions = loadBalancerOptions;
            NetworkInterfaceOptions = networkInterfaceOptions;
            PolicyDocument = policyDocument;
            PolicyEnabled = policyEnabled;
            Status = status;
            Tags = tags;
            VerifiedAccessEndpointId = verifiedAccessEndpointId;
            VerifiedAccessGroupId = verifiedAccessGroupId;
            VerifiedAccessInstanceId = verifiedAccessInstanceId;
        }
    }
}
