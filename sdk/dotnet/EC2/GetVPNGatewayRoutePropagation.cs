// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2
{
    public static class GetVPNGatewayRoutePropagation
    {
        /// <summary>
        /// Resource Type definition for AWS::EC2::VPNGatewayRoutePropagation
        /// </summary>
        public static Task<GetVPNGatewayRoutePropagationResult> InvokeAsync(GetVPNGatewayRoutePropagationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetVPNGatewayRoutePropagationResult>("aws-native:ec2:getVPNGatewayRoutePropagation", args ?? new GetVPNGatewayRoutePropagationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::EC2::VPNGatewayRoutePropagation
        /// </summary>
        public static Output<GetVPNGatewayRoutePropagationResult> Invoke(GetVPNGatewayRoutePropagationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetVPNGatewayRoutePropagationResult>("aws-native:ec2:getVPNGatewayRoutePropagation", args ?? new GetVPNGatewayRoutePropagationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVPNGatewayRoutePropagationArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetVPNGatewayRoutePropagationArgs()
        {
        }
    }

    public sealed class GetVPNGatewayRoutePropagationInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetVPNGatewayRoutePropagationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetVPNGatewayRoutePropagationResult
    {
        public readonly string? Id;
        /// <summary>
        /// The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to
        /// </summary>
        public readonly ImmutableArray<string> RouteTableIds;
        /// <summary>
        /// The ID of the virtual private gateway that is attached to a VPC. The virtual private gateway must be attached to the same VPC that the routing tables are associated with
        /// </summary>
        public readonly string? VpnGatewayId;

        [OutputConstructor]
        private GetVPNGatewayRoutePropagationResult(
            string? id,

            ImmutableArray<string> routeTableIds,

            string? vpnGatewayId)
        {
            Id = id;
            RouteTableIds = routeTableIds;
            VpnGatewayId = vpnGatewayId;
        }
    }
}
