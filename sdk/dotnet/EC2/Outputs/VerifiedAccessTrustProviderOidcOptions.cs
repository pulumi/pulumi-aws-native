// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2.Outputs
{

    /// <summary>
    /// The OpenID Connect details for an oidc -type, user-identity based trust provider.
    /// </summary>
    [OutputType]
    public sealed class VerifiedAccessTrustProviderOidcOptions
    {
        /// <summary>
        /// The OIDC authorization endpoint.
        /// </summary>
        public readonly string? AuthorizationEndpoint;
        /// <summary>
        /// The client identifier.
        /// </summary>
        public readonly string? ClientId;
        /// <summary>
        /// The client secret.
        /// </summary>
        public readonly string? ClientSecret;
        /// <summary>
        /// The OIDC issuer.
        /// </summary>
        public readonly string? Issuer;
        /// <summary>
        /// OpenID Connect (OIDC) scopes are used by an application during authentication to authorize access to details of a user. Each scope returns a specific set of user attributes.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// The OIDC token endpoint.
        /// </summary>
        public readonly string? TokenEndpoint;
        /// <summary>
        /// The OIDC user info endpoint.
        /// </summary>
        public readonly string? UserInfoEndpoint;

        [OutputConstructor]
        private VerifiedAccessTrustProviderOidcOptions(
            string? authorizationEndpoint,

            string? clientId,

            string? clientSecret,

            string? issuer,

            string? scope,

            string? tokenEndpoint,

            string? userInfoEndpoint)
        {
            AuthorizationEndpoint = authorizationEndpoint;
            ClientId = clientId;
            ClientSecret = clientSecret;
            Issuer = issuer;
            Scope = scope;
            TokenEndpoint = tokenEndpoint;
            UserInfoEndpoint = userInfoEndpoint;
        }
    }
}
