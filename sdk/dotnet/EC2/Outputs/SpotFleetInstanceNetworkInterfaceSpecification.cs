// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2.Outputs
{

    [OutputType]
    public sealed class SpotFleetInstanceNetworkInterfaceSpecification
    {
        public readonly bool? AssociatePublicIpAddress;
        public readonly bool? DeleteOnTermination;
        public readonly string? Description;
        public readonly int? DeviceIndex;
        public readonly ImmutableArray<string> Groups;
        public readonly int? Ipv6AddressCount;
        public readonly ImmutableArray<Outputs.SpotFleetInstanceIpv6Address> Ipv6Addresses;
        public readonly string? NetworkInterfaceId;
        public readonly ImmutableArray<Outputs.SpotFleetPrivateIpAddressSpecification> PrivateIpAddresses;
        public readonly int? SecondaryPrivateIpAddressCount;
        public readonly string? SubnetId;

        [OutputConstructor]
        private SpotFleetInstanceNetworkInterfaceSpecification(
            bool? associatePublicIpAddress,

            bool? deleteOnTermination,

            string? description,

            int? deviceIndex,

            ImmutableArray<string> groups,

            int? ipv6AddressCount,

            ImmutableArray<Outputs.SpotFleetInstanceIpv6Address> ipv6Addresses,

            string? networkInterfaceId,

            ImmutableArray<Outputs.SpotFleetPrivateIpAddressSpecification> privateIpAddresses,

            int? secondaryPrivateIpAddressCount,

            string? subnetId)
        {
            AssociatePublicIpAddress = associatePublicIpAddress;
            DeleteOnTermination = deleteOnTermination;
            Description = description;
            DeviceIndex = deviceIndex;
            Groups = groups;
            Ipv6AddressCount = ipv6AddressCount;
            Ipv6Addresses = ipv6Addresses;
            NetworkInterfaceId = networkInterfaceId;
            PrivateIpAddresses = privateIpAddresses;
            SecondaryPrivateIpAddressCount = secondaryPrivateIpAddressCount;
            SubnetId = subnetId;
        }
    }
}
