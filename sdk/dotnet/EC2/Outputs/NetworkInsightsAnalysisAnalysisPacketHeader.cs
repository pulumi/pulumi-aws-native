// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2.Outputs
{

    [OutputType]
    public sealed class NetworkInsightsAnalysisAnalysisPacketHeader
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-destinationaddresses
        /// </summary>
        public readonly ImmutableArray<string> DestinationAddresses;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-destinationportranges
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisPortRange> DestinationPortRanges;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-protocol
        /// </summary>
        public readonly string? Protocol;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-sourceaddresses
        /// </summary>
        public readonly ImmutableArray<string> SourceAddresses;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysispacketheader.html#cfn-ec2-networkinsightsanalysis-analysispacketheader-sourceportranges
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkInsightsAnalysisPortRange> SourcePortRanges;

        [OutputConstructor]
        private NetworkInsightsAnalysisAnalysisPacketHeader(
            ImmutableArray<string> destinationAddresses,

            ImmutableArray<Outputs.NetworkInsightsAnalysisPortRange> destinationPortRanges,

            string? protocol,

            ImmutableArray<string> sourceAddresses,

            ImmutableArray<Outputs.NetworkInsightsAnalysisPortRange> sourcePortRanges)
        {
            DestinationAddresses = destinationAddresses;
            DestinationPortRanges = destinationPortRanges;
            Protocol = protocol;
            SourceAddresses = sourceAddresses;
            SourcePortRanges = sourcePortRanges;
        }
    }
}
