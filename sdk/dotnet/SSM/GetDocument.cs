// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SSM
{
    public static class GetDocument
    {
        /// <summary>
        /// The AWS::SSM::Document resource is an SSM document in AWS Systems Manager that defines the actions that Systems Manager performs, which can be used to set up and run commands on your instances.
        /// </summary>
        public static Task<GetDocumentResult> InvokeAsync(GetDocumentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDocumentResult>("aws-native:ssm:getDocument", args ?? new GetDocumentArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::SSM::Document resource is an SSM document in AWS Systems Manager that defines the actions that Systems Manager performs, which can be used to set up and run commands on your instances.
        /// </summary>
        public static Output<GetDocumentResult> Invoke(GetDocumentInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDocumentResult>("aws-native:ssm:getDocument", args ?? new GetDocumentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDocumentArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A name for the Systems Manager document.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetDocumentArgs()
        {
        }
    }

    public sealed class GetDocumentInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A name for the Systems Manager document.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetDocumentInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDocumentResult
    {
        /// <summary>
        /// Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment.
        /// </summary>
        public readonly ImmutableArray<Outputs.DocumentTag> Tags;

        [OutputConstructor]
        private GetDocumentResult(ImmutableArray<Outputs.DocumentTag> tags)
        {
            Tags = tags;
        }
    }
}
