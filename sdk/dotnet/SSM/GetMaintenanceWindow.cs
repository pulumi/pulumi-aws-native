// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SSM
{
    public static class GetMaintenanceWindow
    {
        /// <summary>
        /// Resource Type definition for AWS::SSM::MaintenanceWindow
        /// </summary>
        public static Task<GetMaintenanceWindowResult> InvokeAsync(GetMaintenanceWindowArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMaintenanceWindowResult>("aws-native:ssm:getMaintenanceWindow", args ?? new GetMaintenanceWindowArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SSM::MaintenanceWindow
        /// </summary>
        public static Output<GetMaintenanceWindowResult> Invoke(GetMaintenanceWindowInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetMaintenanceWindowResult>("aws-native:ssm:getMaintenanceWindow", args ?? new GetMaintenanceWindowInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMaintenanceWindowArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetMaintenanceWindowArgs()
        {
        }
    }

    public sealed class GetMaintenanceWindowInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetMaintenanceWindowInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMaintenanceWindowResult
    {
        public readonly bool? AllowUnassociatedTargets;
        public readonly int? Cutoff;
        public readonly string? Description;
        public readonly int? Duration;
        public readonly string? EndDate;
        public readonly string? Id;
        public readonly string? Name;
        public readonly string? Schedule;
        public readonly int? ScheduleOffset;
        public readonly string? ScheduleTimezone;
        public readonly string? StartDate;
        public readonly ImmutableArray<Outputs.MaintenanceWindowTag> Tags;

        [OutputConstructor]
        private GetMaintenanceWindowResult(
            bool? allowUnassociatedTargets,

            int? cutoff,

            string? description,

            int? duration,

            string? endDate,

            string? id,

            string? name,

            string? schedule,

            int? scheduleOffset,

            string? scheduleTimezone,

            string? startDate,

            ImmutableArray<Outputs.MaintenanceWindowTag> tags)
        {
            AllowUnassociatedTargets = allowUnassociatedTargets;
            Cutoff = cutoff;
            Description = description;
            Duration = duration;
            EndDate = endDate;
            Id = id;
            Name = name;
            Schedule = schedule;
            ScheduleOffset = scheduleOffset;
            ScheduleTimezone = scheduleTimezone;
            StartDate = startDate;
            Tags = tags;
        }
    }
}
