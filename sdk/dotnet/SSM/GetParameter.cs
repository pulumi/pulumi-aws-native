// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SSM
{
    public static class GetParameter
    {
        /// <summary>
        /// Resource Type definition for AWS::SSM::Parameter
        /// </summary>
        public static Task<GetParameterResult> InvokeAsync(GetParameterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetParameterResult>("aws-native:ssm:getParameter", args ?? new GetParameterArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SSM::Parameter
        /// </summary>
        public static Output<GetParameterResult> Invoke(GetParameterInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetParameterResult>("aws-native:ssm:getParameter", args ?? new GetParameterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetParameterArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetParameterArgs()
        {
        }
    }

    public sealed class GetParameterInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetParameterInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetParameterResult
    {
        public readonly string? AllowedPattern;
        public readonly string? DataType;
        public readonly string? Description;
        public readonly string? Id;
        public readonly string? Policies;
        public readonly object? Tags;
        public readonly string? Tier;
        public readonly string? Type;
        public readonly string? Value;

        [OutputConstructor]
        private GetParameterResult(
            string? allowedPattern,

            string? dataType,

            string? description,

            string? id,

            string? policies,

            object? tags,

            string? tier,

            string? type,

            string? value)
        {
            AllowedPattern = allowedPattern;
            DataType = dataType;
            Description = description;
            Id = id;
            Policies = policies;
            Tags = tags;
            Tier = tier;
            Type = type;
            Value = value;
        }
    }
}
