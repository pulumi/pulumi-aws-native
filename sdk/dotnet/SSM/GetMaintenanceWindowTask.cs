// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.SSM
{
    public static class GetMaintenanceWindowTask
    {
        /// <summary>
        /// Resource Type definition for AWS::SSM::MaintenanceWindowTask
        /// </summary>
        public static Task<GetMaintenanceWindowTaskResult> InvokeAsync(GetMaintenanceWindowTaskArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMaintenanceWindowTaskResult>("aws-native:ssm:getMaintenanceWindowTask", args ?? new GetMaintenanceWindowTaskArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::SSM::MaintenanceWindowTask
        /// </summary>
        public static Output<GetMaintenanceWindowTaskResult> Invoke(GetMaintenanceWindowTaskInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetMaintenanceWindowTaskResult>("aws-native:ssm:getMaintenanceWindowTask", args ?? new GetMaintenanceWindowTaskInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMaintenanceWindowTaskArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetMaintenanceWindowTaskArgs()
        {
        }
    }

    public sealed class GetMaintenanceWindowTaskInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetMaintenanceWindowTaskInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMaintenanceWindowTaskResult
    {
        public readonly string? CutoffBehavior;
        public readonly string? Description;
        public readonly string? Id;
        public readonly Outputs.MaintenanceWindowTaskLoggingInfo? LoggingInfo;
        public readonly string? MaxConcurrency;
        public readonly string? MaxErrors;
        public readonly string? Name;
        public readonly int? Priority;
        public readonly string? ServiceRoleArn;
        public readonly ImmutableArray<Outputs.MaintenanceWindowTaskTarget> Targets;
        public readonly string? TaskArn;
        public readonly Outputs.MaintenanceWindowTaskTaskInvocationParameters? TaskInvocationParameters;
        public readonly object? TaskParameters;

        [OutputConstructor]
        private GetMaintenanceWindowTaskResult(
            string? cutoffBehavior,

            string? description,

            string? id,

            Outputs.MaintenanceWindowTaskLoggingInfo? loggingInfo,

            string? maxConcurrency,

            string? maxErrors,

            string? name,

            int? priority,

            string? serviceRoleArn,

            ImmutableArray<Outputs.MaintenanceWindowTaskTarget> targets,

            string? taskArn,

            Outputs.MaintenanceWindowTaskTaskInvocationParameters? taskInvocationParameters,

            object? taskParameters)
        {
            CutoffBehavior = cutoffBehavior;
            Description = description;
            Id = id;
            LoggingInfo = loggingInfo;
            MaxConcurrency = maxConcurrency;
            MaxErrors = maxErrors;
            Name = name;
            Priority = priority;
            ServiceRoleArn = serviceRoleArn;
            Targets = targets;
            TaskArn = taskArn;
            TaskInvocationParameters = taskInvocationParameters;
            TaskParameters = taskParameters;
        }
    }
}
