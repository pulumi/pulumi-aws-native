// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoT
{
    public static class GetProvisioningTemplate
    {
        /// <summary>
        /// Creates a fleet provisioning template.
        /// </summary>
        public static Task<GetProvisioningTemplateResult> InvokeAsync(GetProvisioningTemplateArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetProvisioningTemplateResult>("aws-native:iot:getProvisioningTemplate", args ?? new GetProvisioningTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// Creates a fleet provisioning template.
        /// </summary>
        public static Output<GetProvisioningTemplateResult> Invoke(GetProvisioningTemplateInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetProvisioningTemplateResult>("aws-native:iot:getProvisioningTemplate", args ?? new GetProvisioningTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProvisioningTemplateArgs : Pulumi.InvokeArgs
    {
        [Input("templateName", required: true)]
        public string TemplateName { get; set; } = null!;

        public GetProvisioningTemplateArgs()
        {
        }
    }

    public sealed class GetProvisioningTemplateInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("templateName", required: true)]
        public Input<string> TemplateName { get; set; } = null!;

        public GetProvisioningTemplateInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetProvisioningTemplateResult
    {
        public readonly string? Description;
        public readonly bool? Enabled;
        public readonly Outputs.ProvisioningTemplateProvisioningHook? PreProvisioningHook;
        public readonly string? ProvisioningRoleArn;
        public readonly ImmutableArray<Outputs.ProvisioningTemplateTag> Tags;
        public readonly string? TemplateArn;
        public readonly string? TemplateBody;

        [OutputConstructor]
        private GetProvisioningTemplateResult(
            string? description,

            bool? enabled,

            Outputs.ProvisioningTemplateProvisioningHook? preProvisioningHook,

            string? provisioningRoleArn,

            ImmutableArray<Outputs.ProvisioningTemplateTag> tags,

            string? templateArn,

            string? templateBody)
        {
            Description = description;
            Enabled = enabled;
            PreProvisioningHook = preProvisioningHook;
            ProvisioningRoleArn = provisioningRoleArn;
            Tags = tags;
            TemplateArn = templateArn;
            TemplateBody = templateBody;
        }
    }
}
