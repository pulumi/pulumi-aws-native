// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoT.Outputs
{

    [OutputType]
    public sealed class TopicRuleS3Action
    {
        /// <summary>
        /// The Amazon S3 bucket.
        /// </summary>
        public readonly string BucketName;
        /// <summary>
        /// The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see [S3 canned ACLs](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) .
        /// </summary>
        public readonly Pulumi.AwsNative.IoT.TopicRuleCannedAccessControlList? CannedAcl;
        /// <summary>
        /// The object key. For more information, see [Actions, resources, and condition keys for Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html) .
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// The ARN of the IAM role that grants access.
        /// </summary>
        public readonly string RoleArn;

        [OutputConstructor]
        private TopicRuleS3Action(
            string bucketName,

            Pulumi.AwsNative.IoT.TopicRuleCannedAccessControlList? cannedAcl,

            string key,

            string roleArn)
        {
            BucketName = bucketName;
            CannedAcl = cannedAcl;
            Key = key;
            RoleArn = roleArn;
        }
    }
}
