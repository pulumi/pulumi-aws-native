// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoT.Outputs
{

    /// <summary>
    /// Specifies which audit checks are enabled and disabled for this account.
    /// </summary>
    [OutputType]
    public sealed class AccountAuditConfigurationAuditCheckConfigurations
    {
        /// <summary>
        /// Checks the permissiveness of an authenticated Amazon Cognito identity pool role. For this check, AWS IoT Device Defender audits all Amazon Cognito identity pools that have been used to connect to the AWS IoT message broker during the 31 days before the audit is performed.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? AuthenticatedCognitoRoleOverlyPermissiveCheck;
        /// <summary>
        /// Checks if a CA certificate is expiring. This check applies to CA certificates expiring within 30 days or that have expired.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? CaCertificateExpiringCheck;
        /// <summary>
        /// Checks the quality of the CA certificate key. The quality checks if the key is in a valid format, not expired, and if the key meets a minimum required size. This check applies to CA certificates that are `ACTIVE` or `PENDING_TRANSFER` .
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? CaCertificateKeyQualityCheck;
        /// <summary>
        /// Checks if multiple devices connect using the same client ID.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? ConflictingClientIdsCheck;
        /// <summary>
        /// Checks when a device certificate has been active for a number of days greater than or equal to the number you specify.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationDeviceCertAgeAuditCheckConfiguration? DeviceCertificateAgeCheck;
        /// <summary>
        /// Checks if a device certificate is expiring. By default, this check applies to device certificates expiring within 30 days or that have expired. You can modify this threshold by configuring the DeviceCertExpirationAuditCheckConfiguration.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationDeviceCertExpirationAuditCheckConfiguration? DeviceCertificateExpiringCheck;
        /// <summary>
        /// Checks the quality of the device certificate key. The quality checks if the key is in a valid format, not expired, signed by a registered certificate authority, and if the key meets a minimum required size.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? DeviceCertificateKeyQualityCheck;
        /// <summary>
        /// Checks if multiple concurrent connections use the same X.509 certificate to authenticate with AWS IoT .
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? DeviceCertificateSharedCheck;
        /// <summary>
        /// Checks if device certificates are still active despite being revoked by an intermediate CA.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? IntermediateCaRevokedForActiveDeviceCertificatesCheck;
        /// <summary>
        /// Checks if an AWS IoT policy is potentially misconfigured. Misconfigured policies, including overly permissive policies, can cause security incidents like allowing devices access to unintended resources. This check is a warning for you to make sure that only intended actions are allowed before updating the policy.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? IoTPolicyPotentialMisConfigurationCheck;
        /// <summary>
        /// Checks the permissiveness of a policy attached to an authenticated Amazon Cognito identity pool role.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? IotPolicyOverlyPermissiveCheck;
        /// <summary>
        /// Checks if a role alias has access to services that haven't been used for the AWS IoT device in the last year.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? IotRoleAliasAllowsAccessToUnusedServicesCheck;
        /// <summary>
        /// Checks if the temporary credentials provided by AWS IoT role aliases are overly permissive.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? IotRoleAliasOverlyPermissiveCheck;
        /// <summary>
        /// Checks if AWS IoT logs are disabled.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? LoggingDisabledCheck;
        /// <summary>
        /// Checks if a revoked CA certificate is still active.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? RevokedCaCertificateStillActiveCheck;
        /// <summary>
        /// Checks if a revoked device certificate is still active.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? RevokedDeviceCertificateStillActiveCheck;
        /// <summary>
        /// Checks if policy attached to an unauthenticated Amazon Cognito identity pool role is too permissive.
        /// </summary>
        public readonly Outputs.AccountAuditConfigurationAuditCheckConfiguration? UnauthenticatedCognitoRoleOverlyPermissiveCheck;

        [OutputConstructor]
        private AccountAuditConfigurationAuditCheckConfigurations(
            Outputs.AccountAuditConfigurationAuditCheckConfiguration? authenticatedCognitoRoleOverlyPermissiveCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? caCertificateExpiringCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? caCertificateKeyQualityCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? conflictingClientIdsCheck,

            Outputs.AccountAuditConfigurationDeviceCertAgeAuditCheckConfiguration? deviceCertificateAgeCheck,

            Outputs.AccountAuditConfigurationDeviceCertExpirationAuditCheckConfiguration? deviceCertificateExpiringCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? deviceCertificateKeyQualityCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? deviceCertificateSharedCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? intermediateCaRevokedForActiveDeviceCertificatesCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? ioTPolicyPotentialMisConfigurationCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? iotPolicyOverlyPermissiveCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? iotRoleAliasAllowsAccessToUnusedServicesCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? iotRoleAliasOverlyPermissiveCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? loggingDisabledCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? revokedCaCertificateStillActiveCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? revokedDeviceCertificateStillActiveCheck,

            Outputs.AccountAuditConfigurationAuditCheckConfiguration? unauthenticatedCognitoRoleOverlyPermissiveCheck)
        {
            AuthenticatedCognitoRoleOverlyPermissiveCheck = authenticatedCognitoRoleOverlyPermissiveCheck;
            CaCertificateExpiringCheck = caCertificateExpiringCheck;
            CaCertificateKeyQualityCheck = caCertificateKeyQualityCheck;
            ConflictingClientIdsCheck = conflictingClientIdsCheck;
            DeviceCertificateAgeCheck = deviceCertificateAgeCheck;
            DeviceCertificateExpiringCheck = deviceCertificateExpiringCheck;
            DeviceCertificateKeyQualityCheck = deviceCertificateKeyQualityCheck;
            DeviceCertificateSharedCheck = deviceCertificateSharedCheck;
            IntermediateCaRevokedForActiveDeviceCertificatesCheck = intermediateCaRevokedForActiveDeviceCertificatesCheck;
            IoTPolicyPotentialMisConfigurationCheck = ioTPolicyPotentialMisConfigurationCheck;
            IotPolicyOverlyPermissiveCheck = iotPolicyOverlyPermissiveCheck;
            IotRoleAliasAllowsAccessToUnusedServicesCheck = iotRoleAliasAllowsAccessToUnusedServicesCheck;
            IotRoleAliasOverlyPermissiveCheck = iotRoleAliasOverlyPermissiveCheck;
            LoggingDisabledCheck = loggingDisabledCheck;
            RevokedCaCertificateStillActiveCheck = revokedCaCertificateStillActiveCheck;
            RevokedDeviceCertificateStillActiveCheck = revokedDeviceCertificateStillActiveCheck;
            UnauthenticatedCognitoRoleOverlyPermissiveCheck = unauthenticatedCognitoRoleOverlyPermissiveCheck;
        }
    }
}
