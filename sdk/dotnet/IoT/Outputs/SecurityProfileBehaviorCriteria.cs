// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoT.Outputs
{

    /// <summary>
    /// The criteria by which the behavior is determined to be normal.
    /// </summary>
    [OutputType]
    public sealed class SecurityProfileBehaviorCriteria
    {
        /// <summary>
        /// The operator that relates the thing measured (metric) to the criteria (containing a value or statisticalThreshold).
        /// </summary>
        public readonly string? ComparisonOperator;
        /// <summary>
        /// If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.
        /// </summary>
        public readonly int? ConsecutiveDatapointsToAlarm;
        /// <summary>
        /// If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.
        /// </summary>
        public readonly int? ConsecutiveDatapointsToClear;
        /// <summary>
        /// Use this to specify the time duration over which the behavior is evaluated.
        /// </summary>
        public readonly int? DurationSeconds;
        public readonly Outputs.SecurityProfileMachineLearningDetectionConfig? MlDetectionConfig;
        public readonly Outputs.SecurityProfileStatisticalThreshold? StatisticalThreshold;
        public readonly Outputs.SecurityProfileMetricValue? Value;

        [OutputConstructor]
        private SecurityProfileBehaviorCriteria(
            string? comparisonOperator,

            int? consecutiveDatapointsToAlarm,

            int? consecutiveDatapointsToClear,

            int? durationSeconds,

            Outputs.SecurityProfileMachineLearningDetectionConfig? mlDetectionConfig,

            Outputs.SecurityProfileStatisticalThreshold? statisticalThreshold,

            Outputs.SecurityProfileMetricValue? value)
        {
            ComparisonOperator = comparisonOperator;
            ConsecutiveDatapointsToAlarm = consecutiveDatapointsToAlarm;
            ConsecutiveDatapointsToClear = consecutiveDatapointsToClear;
            DurationSeconds = durationSeconds;
            MlDetectionConfig = mlDetectionConfig;
            StatisticalThreshold = statisticalThreshold;
            Value = value;
        }
    }
}
