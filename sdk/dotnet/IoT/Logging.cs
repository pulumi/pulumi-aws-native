// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoT
{
    /// <summary>
    /// Logging Options enable you to configure your IoT V2 logging role and default logging level so that you can monitor progress events logs as it passes from your devices through Iot core service.
    /// </summary>
    [AwsNativeResourceType("aws-native:iot:Logging")]
    public partial class Logging : Pulumi.CustomResource
    {
        /// <summary>
        /// Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// The log level to use. Valid values are: ERROR, WARN, INFO, DEBUG, or DISABLED.
        /// </summary>
        [Output("defaultLogLevel")]
        public Output<Pulumi.AwsNative.IoT.LoggingDefaultLogLevel> DefaultLogLevel { get; private set; } = null!;

        /// <summary>
        /// The ARN of the role that allows IoT to write to Cloudwatch logs.
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;


        /// <summary>
        /// Create a Logging resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Logging(string name, LoggingArgs args, CustomResourceOptions? options = null)
            : base("aws-native:iot:Logging", name, args ?? new LoggingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Logging(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:iot:Logging", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Logging resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Logging Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Logging(name, id, options);
        }
    }

    public sealed class LoggingArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Your 12-digit account ID (used as the primary identifier for the CloudFormation resource).
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// The log level to use. Valid values are: ERROR, WARN, INFO, DEBUG, or DISABLED.
        /// </summary>
        [Input("defaultLogLevel", required: true)]
        public Input<Pulumi.AwsNative.IoT.LoggingDefaultLogLevel> DefaultLogLevel { get; set; } = null!;

        /// <summary>
        /// The ARN of the role that allows IoT to write to Cloudwatch logs.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        public LoggingArgs()
        {
        }
    }
}
