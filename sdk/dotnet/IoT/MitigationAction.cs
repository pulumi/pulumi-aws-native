// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoT
{
    /// <summary>
    /// Mitigation actions can be used to take actions to mitigate issues that were found in an Audit finding or Detect violation.
    /// </summary>
    [AwsNativeResourceType("aws-native:iot:MitigationAction")]
    public partial class MitigationAction : Pulumi.CustomResource
    {
        /// <summary>
        /// A unique identifier for the mitigation action.
        /// </summary>
        [Output("actionName")]
        public Output<string?> ActionName { get; private set; } = null!;

        [Output("actionParams")]
        public Output<Outputs.MitigationActionActionParams> ActionParams { get; private set; } = null!;

        [Output("mitigationActionArn")]
        public Output<string> MitigationActionArn { get; private set; } = null!;

        [Output("mitigationActionId")]
        public Output<string> MitigationActionId { get; private set; } = null!;

        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.MitigationActionTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a MitigationAction resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MitigationAction(string name, MitigationActionArgs args, CustomResourceOptions? options = null)
            : base("aws-native:iot:MitigationAction", name, args ?? new MitigationActionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MitigationAction(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:iot:MitigationAction", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MitigationAction resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MitigationAction Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new MitigationAction(name, id, options);
        }
    }

    public sealed class MitigationActionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A unique identifier for the mitigation action.
        /// </summary>
        [Input("actionName")]
        public Input<string>? ActionName { get; set; }

        [Input("actionParams", required: true)]
        public Input<Inputs.MitigationActionActionParamsArgs> ActionParams { get; set; } = null!;

        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.MitigationActionTagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public InputList<Inputs.MitigationActionTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.MitigationActionTagArgs>());
            set => _tags = value;
        }

        public MitigationActionArgs()
        {
        }
    }
}
