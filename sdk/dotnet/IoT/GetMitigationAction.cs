// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoT
{
    public static class GetMitigationAction
    {
        /// <summary>
        /// Mitigation actions can be used to take actions to mitigate issues that were found in an Audit finding or Detect violation.
        /// </summary>
        public static Task<GetMitigationActionResult> InvokeAsync(GetMitigationActionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMitigationActionResult>("aws-native:iot:getMitigationAction", args ?? new GetMitigationActionArgs(), options.WithDefaults());

        /// <summary>
        /// Mitigation actions can be used to take actions to mitigate issues that were found in an Audit finding or Detect violation.
        /// </summary>
        public static Output<GetMitigationActionResult> Invoke(GetMitigationActionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetMitigationActionResult>("aws-native:iot:getMitigationAction", args ?? new GetMitigationActionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMitigationActionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for the mitigation action.
        /// </summary>
        [Input("actionName", required: true)]
        public string ActionName { get; set; } = null!;

        public GetMitigationActionArgs()
        {
        }
        public static new GetMitigationActionArgs Empty => new GetMitigationActionArgs();
    }

    public sealed class GetMitigationActionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique identifier for the mitigation action.
        /// </summary>
        [Input("actionName", required: true)]
        public Input<string> ActionName { get; set; } = null!;

        public GetMitigationActionInvokeArgs()
        {
        }
        public static new GetMitigationActionInvokeArgs Empty => new GetMitigationActionInvokeArgs();
    }


    [OutputType]
    public sealed class GetMitigationActionResult
    {
        public readonly Outputs.MitigationActionActionParams? ActionParams;
        public readonly string? MitigationActionArn;
        public readonly string? MitigationActionId;
        public readonly string? RoleArn;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.MitigationActionTag> Tags;

        [OutputConstructor]
        private GetMitigationActionResult(
            Outputs.MitigationActionActionParams? actionParams,

            string? mitigationActionArn,

            string? mitigationActionId,

            string? roleArn,

            ImmutableArray<Outputs.MitigationActionTag> tags)
        {
            ActionParams = actionParams;
            MitigationActionArn = mitigationActionArn;
            MitigationActionId = mitigationActionId;
            RoleArn = roleArn;
            Tags = tags;
        }
    }
}
