// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoT
{
    public static class GetDomainConfiguration
    {
        /// <summary>
        /// Create and manage a Domain Configuration
        /// </summary>
        public static Task<GetDomainConfigurationResult> InvokeAsync(GetDomainConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainConfigurationResult>("aws-native:iot:getDomainConfiguration", args ?? new GetDomainConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Create and manage a Domain Configuration
        /// </summary>
        public static Output<GetDomainConfigurationResult> Invoke(GetDomainConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainConfigurationResult>("aws-native:iot:getDomainConfiguration", args ?? new GetDomainConfigurationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Create and manage a Domain Configuration
        /// </summary>
        public static Output<GetDomainConfigurationResult> Invoke(GetDomainConfigurationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainConfigurationResult>("aws-native:iot:getDomainConfiguration", args ?? new GetDomainConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the domain configuration. This value must be unique to a region.
        /// </summary>
        [Input("domainConfigurationName", required: true)]
        public string DomainConfigurationName { get; set; } = null!;

        public GetDomainConfigurationArgs()
        {
        }
        public static new GetDomainConfigurationArgs Empty => new GetDomainConfigurationArgs();
    }

    public sealed class GetDomainConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the domain configuration. This value must be unique to a region.
        /// </summary>
        [Input("domainConfigurationName", required: true)]
        public Input<string> DomainConfigurationName { get; set; } = null!;

        public GetDomainConfigurationInvokeArgs()
        {
        }
        public static new GetDomainConfigurationInvokeArgs Empty => new GetDomainConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainConfigurationResult
    {
        /// <summary>
        /// An enumerated string that speciﬁes the application-layer protocol.
        /// </summary>
        public readonly Pulumi.AwsNative.IoT.DomainConfigurationApplicationProtocol? ApplicationProtocol;
        /// <summary>
        /// The Amazon Resource Name (ARN) of the domain configuration.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// An enumerated string that speciﬁes the authentication type.
        /// </summary>
        public readonly Pulumi.AwsNative.IoT.DomainConfigurationAuthenticationType? AuthenticationType;
        /// <summary>
        /// An object that specifies the authorization service for a domain.
        /// </summary>
        public readonly Outputs.DomainConfigurationAuthorizerConfig? AuthorizerConfig;
        /// <summary>
        /// An object that speciﬁes the client certificate conﬁguration for a domain.
        /// </summary>
        public readonly Outputs.DomainConfigurationClientCertificateConfig? ClientCertificateConfig;
        /// <summary>
        /// The status to which the domain configuration should be updated.
        /// 
        /// Valid values: `ENABLED` | `DISABLED`
        /// </summary>
        public readonly Pulumi.AwsNative.IoT.DomainConfigurationStatus? DomainConfigurationStatus;
        /// <summary>
        /// The type of service delivered by the domain.
        /// </summary>
        public readonly Pulumi.AwsNative.IoT.DomainConfigurationDomainType? DomainType;
        /// <summary>
        /// The server certificate configuration.
        /// 
        /// For more information, see [Configurable endpoints](https://docs.aws.amazon.com//iot/latest/developerguide/iot-custom-endpoints-configurable.html) from the AWS IoT Core Developer Guide.
        /// </summary>
        public readonly Outputs.DomainConfigurationServerCertificateConfig? ServerCertificateConfig;
        /// <summary>
        /// The ARNs of the certificates that AWS IoT passes to the device during the TLS handshake. Currently you can specify only one certificate ARN. This value is not required for AWS -managed domains.
        /// </summary>
        public readonly ImmutableArray<Outputs.DomainConfigurationServerCertificateSummary> ServerCertificates;
        /// <summary>
        /// Metadata which can be used to manage the domain configuration.
        /// 
        /// &gt; For URI Request parameters use format: ...key1=value1&amp;key2=value2...
        /// &gt; 
        /// &gt; For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."
        /// &gt; 
        /// &gt; For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// An object that specifies the TLS configuration for a domain.
        /// </summary>
        public readonly Outputs.DomainConfigurationTlsConfig? TlsConfig;

        [OutputConstructor]
        private GetDomainConfigurationResult(
            Pulumi.AwsNative.IoT.DomainConfigurationApplicationProtocol? applicationProtocol,

            string? arn,

            Pulumi.AwsNative.IoT.DomainConfigurationAuthenticationType? authenticationType,

            Outputs.DomainConfigurationAuthorizerConfig? authorizerConfig,

            Outputs.DomainConfigurationClientCertificateConfig? clientCertificateConfig,

            Pulumi.AwsNative.IoT.DomainConfigurationStatus? domainConfigurationStatus,

            Pulumi.AwsNative.IoT.DomainConfigurationDomainType? domainType,

            Outputs.DomainConfigurationServerCertificateConfig? serverCertificateConfig,

            ImmutableArray<Outputs.DomainConfigurationServerCertificateSummary> serverCertificates,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            Outputs.DomainConfigurationTlsConfig? tlsConfig)
        {
            ApplicationProtocol = applicationProtocol;
            Arn = arn;
            AuthenticationType = authenticationType;
            AuthorizerConfig = authorizerConfig;
            ClientCertificateConfig = clientCertificateConfig;
            DomainConfigurationStatus = domainConfigurationStatus;
            DomainType = domainType;
            ServerCertificateConfig = serverCertificateConfig;
            ServerCertificates = serverCertificates;
            Tags = tags;
            TlsConfig = tlsConfig;
        }
    }
}
