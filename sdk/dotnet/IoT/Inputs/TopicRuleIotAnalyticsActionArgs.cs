// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoT.Inputs
{

    public sealed class TopicRuleIotAnalyticsActionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to process the action as a batch. The default value is `false` .
        /// 
        /// When `batchMode` is `true` and the rule SQL statement evaluates to an Array, each Array element is delivered as a separate message when passed by [`BatchPutMessage`](https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_BatchPutMessage.html) The resulting array can't have more than 100 messages.
        /// </summary>
        [Input("batchMode")]
        public Input<bool>? BatchMode { get; set; }

        /// <summary>
        /// The name of the IoT Analytics channel to which message data will be sent.
        /// </summary>
        [Input("channelName", required: true)]
        public Input<string> ChannelName { get; set; } = null!;

        /// <summary>
        /// The ARN of the role which has a policy that grants IoT Analytics permission to send message data via IoT Analytics (iotanalytics:BatchPutMessage).
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        public TopicRuleIotAnalyticsActionArgs()
        {
        }
        public static new TopicRuleIotAnalyticsActionArgs Empty => new TopicRuleIotAnalyticsActionArgs();
    }
}
