// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoT.Inputs
{

    public sealed class TopicRuleIotEventsActionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to process the event actions as a batch. The default value is `false` .
        /// 
        /// When `batchMode` is `true` , you can't specify a `messageId` .
        /// 
        /// When `batchMode` is `true` and the rule SQL statement evaluates to an Array, each Array element is treated as a separate message when Events by calling [`BatchPutMessage`](https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchPutMessage.html) . The resulting array can't have more than 10 messages.
        /// </summary>
        [Input("batchMode")]
        public Input<bool>? BatchMode { get; set; }

        /// <summary>
        /// The name of the AWS IoT Events input.
        /// </summary>
        [Input("inputName", required: true)]
        public Input<string> InputName { get; set; } = null!;

        /// <summary>
        /// The ID of the message. The default `messageId` is a new UUID value.
        /// 
        /// When `batchMode` is `true` , you can't specify a `messageId` --a new UUID value will be assigned.
        /// 
        /// Assign a value to this property to ensure that only one input (message) with a given `messageId` will be processed by an AWS IoT Events detector.
        /// </summary>
        [Input("messageId")]
        public Input<string>? MessageId { get; set; }

        /// <summary>
        /// The ARN of the role that grants AWS IoT permission to send an input to an AWS IoT Events detector. ("Action":"iotevents:BatchPutMessage").
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        public TopicRuleIotEventsActionArgs()
        {
        }
        public static new TopicRuleIotEventsActionArgs Empty => new TopicRuleIotEventsActionArgs();
    }
}
