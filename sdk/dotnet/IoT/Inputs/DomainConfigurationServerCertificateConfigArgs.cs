// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoT.Inputs
{

    public sealed class DomainConfigurationServerCertificateConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A Boolean value that indicates whether Online Certificate Status Protocol (OCSP) server certificate check is enabled or not. For more information, see [Configurable endpoints](https://docs.aws.amazon.com//iot/latest/developerguide/iot-custom-endpoints-configurable.html) from the AWS IoT Core Developer Guide.
        /// </summary>
        [Input("enableOcspCheck")]
        public Input<bool>? EnableOcspCheck { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) for an X.509 certificate stored in ACM. If provided, AWS IoT Core will use this certificate to validate the signature of the received OCSP response. The OCSP responder must sign responses using either this authorized responder certificate or the issuing certificate, depending on whether the ARN is provided or not. The certificate must be in the same account and region as the domain configuration.
        /// </summary>
        [Input("ocspAuthorizedResponderArn")]
        public Input<string>? OcspAuthorizedResponderArn { get; set; }

        /// <summary>
        /// The Amazon Resource Name (ARN) for a Lambda function that acts as a Request for Comments (RFC) 6960-compliant Online Certificate Status Protocol (OCSP) responder, supporting basic OCSP responses. The Lambda function accepts a base64-encoding of the OCSP request in the Distinguished Encoding Rules (DER) format. The Lambda function's response is also a base64-encoded OCSP response in the DER format. The response size must not exceed 4 kilobytes (KiB). The Lambda function must be in the same account and region as the domain configuration.
        /// </summary>
        [Input("ocspLambdaArn")]
        public Input<string>? OcspLambdaArn { get; set; }

        public DomainConfigurationServerCertificateConfigArgs()
        {
        }
        public static new DomainConfigurationServerCertificateConfigArgs Empty => new DomainConfigurationServerCertificateConfigArgs();
    }
}
