// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.IoT.Inputs
{

    public sealed class TopicRuleFirehoseActionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to deliver the Kinesis Data Firehose stream as a batch by using [`PutRecordBatch`](https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html) . The default value is `false` .
        /// 
        /// When `batchMode` is `true` and the rule's SQL statement evaluates to an Array, each Array element forms one record in the [`PutRecordBatch`](https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html) request. The resulting array can't have more than 500 records.
        /// </summary>
        [Input("batchMode")]
        public Input<bool>? BatchMode { get; set; }

        /// <summary>
        /// The delivery stream name.
        /// </summary>
        [Input("deliveryStreamName", required: true)]
        public Input<string> DeliveryStreamName { get; set; } = null!;

        /// <summary>
        /// The IAM role that grants access to the Amazon Kinesis Firehose stream.
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\n' (newline), '\t' (tab), '\r\n' (Windows newline), ',' (comma).
        /// </summary>
        [Input("separator")]
        public Input<string>? Separator { get; set; }

        public TopicRuleFirehoseActionArgs()
        {
        }
        public static new TopicRuleFirehoseActionArgs Empty => new TopicRuleFirehoseActionArgs();
    }
}
