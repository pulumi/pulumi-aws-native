// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Redshift
{
    public static class GetEndpointAccess
    {
        /// <summary>
        /// Resource schema for a Redshift-managed VPC endpoint.
        /// </summary>
        public static Task<GetEndpointAccessResult> InvokeAsync(GetEndpointAccessArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetEndpointAccessResult>("aws-native:redshift:getEndpointAccess", args ?? new GetEndpointAccessArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for a Redshift-managed VPC endpoint.
        /// </summary>
        public static Output<GetEndpointAccessResult> Invoke(GetEndpointAccessInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetEndpointAccessResult>("aws-native:redshift:getEndpointAccess", args ?? new GetEndpointAccessInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEndpointAccessArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the endpoint.
        /// </summary>
        [Input("endpointName", required: true)]
        public string EndpointName { get; set; } = null!;

        public GetEndpointAccessArgs()
        {
        }
    }

    public sealed class GetEndpointAccessInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the endpoint.
        /// </summary>
        [Input("endpointName", required: true)]
        public Input<string> EndpointName { get; set; } = null!;

        public GetEndpointAccessInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetEndpointAccessResult
    {
        /// <summary>
        /// The DNS address of the endpoint.
        /// </summary>
        public readonly string? Address;
        /// <summary>
        /// The time (UTC) that the endpoint was created.
        /// </summary>
        public readonly string? EndpointCreateTime;
        /// <summary>
        /// The status of the endpoint.
        /// </summary>
        public readonly string? EndpointStatus;
        /// <summary>
        /// The port number on which the cluster accepts incoming connections.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// The connection endpoint for connecting to an Amazon Redshift cluster through the proxy.
        /// </summary>
        public readonly Outputs.VpcEndpointProperties? VpcEndpoint;
        /// <summary>
        /// A list of vpc security group ids to apply to the created endpoint access.
        /// </summary>
        public readonly ImmutableArray<string> VpcSecurityGroupIds;
        /// <summary>
        /// A list of Virtual Private Cloud (VPC) security groups to be associated with the endpoint.
        /// </summary>
        public readonly ImmutableArray<Outputs.EndpointAccessVpcSecurityGroup> VpcSecurityGroups;

        [OutputConstructor]
        private GetEndpointAccessResult(
            string? address,

            string? endpointCreateTime,

            string? endpointStatus,

            int? port,

            Outputs.VpcEndpointProperties? vpcEndpoint,

            ImmutableArray<string> vpcSecurityGroupIds,

            ImmutableArray<Outputs.EndpointAccessVpcSecurityGroup> vpcSecurityGroups)
        {
            Address = address;
            EndpointCreateTime = endpointCreateTime;
            EndpointStatus = endpointStatus;
            Port = port;
            VpcEndpoint = vpcEndpoint;
            VpcSecurityGroupIds = vpcSecurityGroupIds;
            VpcSecurityGroups = vpcSecurityGroups;
        }
    }
}
