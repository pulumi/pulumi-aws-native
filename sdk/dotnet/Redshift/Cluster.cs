// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Redshift
{
    /// <summary>
    /// An example resource schema demonstrating some basic constructs and validation rules.
    /// </summary>
    [AwsNativeResourceType("aws-native:redshift:Cluster")]
    public partial class Cluster : Pulumi.CustomResource
    {
        /// <summary>
        /// Major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default value is True
        /// </summary>
        [Output("allowVersionUpgrade")]
        public Output<bool?> AllowVersionUpgrade { get; private set; } = null!;

        /// <summary>
        /// The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored. Possible values include the following.
        /// 
        /// enabled - Use AQUA if it is available for the current Region and Amazon Redshift node type.
        /// disabled - Don't use AQUA.
        /// auto - Amazon Redshift determines whether to use AQUA.
        /// </summary>
        [Output("aquaConfigurationStatus")]
        public Output<string?> AquaConfigurationStatus { get; private set; } = null!;

        /// <summary>
        /// The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Default value is 1
        /// </summary>
        [Output("automatedSnapshotRetentionPeriod")]
        public Output<int?> AutomatedSnapshotRetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. Default: A random, system-chosen Availability Zone in the region that is specified by the endpoint
        /// </summary>
        [Output("availabilityZone")]
        public Output<string?> AvailabilityZone { get; private set; } = null!;

        /// <summary>
        /// The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster modification is complete.
        /// </summary>
        [Output("availabilityZoneRelocation")]
        public Output<bool?> AvailabilityZoneRelocation { get; private set; } = null!;

        /// <summary>
        /// The availability zone relocation status of the cluster
        /// </summary>
        [Output("availabilityZoneRelocationStatus")]
        public Output<string?> AvailabilityZoneRelocationStatus { get; private set; } = null!;

        /// <summary>
        /// A boolean value indicating whether the resize operation is using the classic resize process. If you don't provide this parameter or set the value to false , the resize type is elastic.
        /// </summary>
        [Output("classic")]
        public Output<bool?> Classic { get; private set; } = null!;

        /// <summary>
        /// A unique identifier for the cluster. You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. All alphabetical characters must be lower case, no hypens at the end, no two consecutive hyphens. Cluster name should be unique for all clusters within an AWS account
        /// </summary>
        [Output("clusterIdentifier")]
        public Output<string?> ClusterIdentifier { get; private set; } = null!;

        /// <summary>
        /// The name of the parameter group to be associated with this cluster.
        /// </summary>
        [Output("clusterParameterGroupName")]
        public Output<string?> ClusterParameterGroupName { get; private set; } = null!;

        /// <summary>
        /// A list of security groups to be associated with this cluster.
        /// </summary>
        [Output("clusterSecurityGroups")]
        public Output<ImmutableArray<string>> ClusterSecurityGroups { get; private set; } = null!;

        /// <summary>
        /// The name of a cluster subnet group to be associated with this cluster.
        /// </summary>
        [Output("clusterSubnetGroupName")]
        public Output<string?> ClusterSubnetGroupName { get; private set; } = null!;

        /// <summary>
        /// The type of the cluster. When cluster type is specified as single-node, the NumberOfNodes parameter is not required and if multi-node, the NumberOfNodes parameter is required
        /// </summary>
        [Output("clusterType")]
        public Output<string> ClusterType { get; private set; } = null!;

        /// <summary>
        /// The version of the Amazon Redshift engine software that you want to deploy on the cluster.The version selected runs on all the nodes in the cluster.
        /// </summary>
        [Output("clusterVersion")]
        public Output<string?> ClusterVersion { get; private set; } = null!;

        /// <summary>
        /// The name of the first database to be created when the cluster is created. To create additional databases after the cluster is created, connect to the cluster with a SQL client and use SQL commands to create a database.
        /// </summary>
        [Output("dBName")]
        public Output<string> DBName { get; private set; } = null!;

        /// <summary>
        /// A boolean indicating whether to enable the deferred maintenance window.
        /// </summary>
        [Output("deferMaintenance")]
        public Output<bool?> DeferMaintenance { get; private set; } = null!;

        /// <summary>
        /// An integer indicating the duration of the maintenance window in days. If you specify a duration, you can't specify an end time. The duration must be 45 days or less.
        /// </summary>
        [Output("deferMaintenanceDuration")]
        public Output<int?> DeferMaintenanceDuration { get; private set; } = null!;

        /// <summary>
        /// A timestamp indicating end time for the deferred maintenance window. If you specify an end time, you can't specify a duration.
        /// </summary>
        [Output("deferMaintenanceEndTime")]
        public Output<string?> DeferMaintenanceEndTime { get; private set; } = null!;

        /// <summary>
        /// A unique identifier for the deferred maintenance window.
        /// </summary>
        [Output("deferMaintenanceIdentifier")]
        public Output<string> DeferMaintenanceIdentifier { get; private set; } = null!;

        /// <summary>
        /// A timestamp indicating the start time for the deferred maintenance window.
        /// </summary>
        [Output("deferMaintenanceStartTime")]
        public Output<string?> DeferMaintenanceStartTime { get; private set; } = null!;

        /// <summary>
        /// The destination AWS Region that you want to copy snapshots to. Constraints: Must be the name of a valid AWS Region. For more information, see Regions and Endpoints in the Amazon Web Services [https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region] General Reference
        /// </summary>
        [Output("destinationRegion")]
        public Output<string?> DestinationRegion { get; private set; } = null!;

        /// <summary>
        /// The Elastic IP (EIP) address for the cluster.
        /// </summary>
        [Output("elasticIp")]
        public Output<string?> ElasticIp { get; private set; } = null!;

        /// <summary>
        /// If true, the data in the cluster is encrypted at rest.
        /// </summary>
        [Output("encrypted")]
        public Output<bool?> Encrypted { get; private set; } = null!;

        [Output("endpoint")]
        public Output<Outputs.ClusterEndpoint?> Endpoint { get; private set; } = null!;

        /// <summary>
        /// An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see Enhanced VPC Routing in the Amazon Redshift Cluster Management Guide.
        /// 
        /// If this option is true , enhanced VPC routing is enabled.
        /// 
        /// Default: false
        /// </summary>
        [Output("enhancedVpcRouting")]
        public Output<bool?> EnhancedVpcRouting { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM
        /// </summary>
        [Output("hsmClientCertificateIdentifier")]
        public Output<string?> HsmClientCertificateIdentifier { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
        /// </summary>
        [Output("hsmConfigurationIdentifier")]
        public Output<string?> HsmConfigurationIdentifier { get; private set; } = null!;

        /// <summary>
        /// A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. You can supply up to 10 IAM roles in a single request
        /// </summary>
        [Output("iamRoles")]
        public Output<ImmutableArray<string>> IamRoles { get; private set; } = null!;

        /// <summary>
        /// The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        [Output("loggingProperties")]
        public Output<Outputs.ClusterLoggingProperties?> LoggingProperties { get; private set; } = null!;

        /// <summary>
        /// The name for the maintenance track that you want to assign for the cluster. This name change is asynchronous. The new track name stays in the PendingModifiedValues for the cluster until the next maintenance window. When the maintenance track changes, the cluster is switched to the latest cluster release available for the maintenance track. At this point, the maintenance track name is applied.
        /// </summary>
        [Output("maintenanceTrackName")]
        public Output<string?> MaintenanceTrackName { get; private set; } = null!;

        /// <summary>
        /// The number of days to retain newly copied snapshots in the destination AWS Region after they are copied from the source AWS Region. If the value is -1, the manual snapshot is retained indefinitely.
        /// 
        /// The value must be either -1 or an integer between 1 and 3,653.
        /// </summary>
        [Output("manualSnapshotRetentionPeriod")]
        public Output<int?> ManualSnapshotRetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// The password associated with the master user account for the cluster that is being created. Password must be between 8 and 64 characters in length, should have at least one uppercase letter.Must contain at least one lowercase letter.Must contain one number.Can be any printable ASCII character.
        /// </summary>
        [Output("masterUserPassword")]
        public Output<string> MasterUserPassword { get; private set; } = null!;

        /// <summary>
        /// The user name associated with the master user account for the cluster that is being created. The user name can't be PUBLIC and first character must be a letter.
        /// </summary>
        [Output("masterUsername")]
        public Output<string> MasterUsername { get; private set; } = null!;

        /// <summary>
        /// The node type to be provisioned for the cluster.Valid Values: ds2.xlarge | ds2.8xlarge | dc1.large | dc1.8xlarge | dc2.large | dc2.8xlarge | ra3.4xlarge | ra3.16xlarge
        /// </summary>
        [Output("nodeType")]
        public Output<string> NodeType { get; private set; } = null!;

        /// <summary>
        /// The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node.
        /// </summary>
        [Output("numberOfNodes")]
        public Output<int?> NumberOfNodes { get; private set; } = null!;

        [Output("ownerAccount")]
        public Output<string?> OwnerAccount { get; private set; } = null!;

        /// <summary>
        /// The port number on which the cluster accepts incoming connections. The cluster is accessible only via the JDBC and ODBC connection strings
        /// </summary>
        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        /// <summary>
        /// The weekly time range (in UTC) during which automated cluster maintenance can occur.
        /// </summary>
        [Output("preferredMaintenanceWindow")]
        public Output<string?> PreferredMaintenanceWindow { get; private set; } = null!;

        /// <summary>
        /// If true, the cluster can be accessed from a public network.
        /// </summary>
        [Output("publiclyAccessible")]
        public Output<bool?> PubliclyAccessible { get; private set; } = null!;

        /// <summary>
        /// The Redshift operation to be performed. Resource Action supports pause-cluster, resume-cluster APIs
        /// </summary>
        [Output("resourceAction")]
        public Output<string?> ResourceAction { get; private set; } = null!;

        /// <summary>
        /// The identifier of the database revision. You can retrieve this value from the response to the DescribeClusterDbRevisions request.
        /// </summary>
        [Output("revisionTarget")]
        public Output<string?> RevisionTarget { get; private set; } = null!;

        /// <summary>
        /// A boolean indicating if we want to rotate Encryption Keys.
        /// </summary>
        [Output("rotateEncryptionKey")]
        public Output<bool?> RotateEncryptionKey { get; private set; } = null!;

        /// <summary>
        /// The name of the cluster the source snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.
        /// </summary>
        [Output("snapshotClusterIdentifier")]
        public Output<string?> SnapshotClusterIdentifier { get; private set; } = null!;

        /// <summary>
        /// The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region.
        /// </summary>
        [Output("snapshotCopyGrantName")]
        public Output<string?> SnapshotCopyGrantName { get; private set; } = null!;

        /// <summary>
        /// Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots.
        /// </summary>
        [Output("snapshotCopyManual")]
        public Output<bool?> SnapshotCopyManual { get; private set; } = null!;

        /// <summary>
        /// The number of days to retain automated snapshots in the destination region after they are copied from the source region. 
        /// 
        ///  Default is 7. 
        /// 
        ///  Constraints: Must be at least 1 and no more than 35.
        /// </summary>
        [Output("snapshotCopyRetentionPeriod")]
        public Output<int?> SnapshotCopyRetentionPeriod { get; private set; } = null!;

        /// <summary>
        /// The name of the snapshot from which to create the new cluster. This parameter isn't case sensitive.
        /// </summary>
        [Output("snapshotIdentifier")]
        public Output<string?> SnapshotIdentifier { get; private set; } = null!;

        /// <summary>
        /// The list of tags for the cluster parameter group.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.ClusterTag>> Tags { get; private set; } = null!;

        /// <summary>
        /// A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.
        /// </summary>
        [Output("vpcSecurityGroupIds")]
        public Output<ImmutableArray<string>> VpcSecurityGroupIds { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("aws-native:redshift:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:redshift:Cluster", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, options);
        }
    }

    public sealed class ClusterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default value is True
        /// </summary>
        [Input("allowVersionUpgrade")]
        public Input<bool>? AllowVersionUpgrade { get; set; }

        /// <summary>
        /// The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored. Possible values include the following.
        /// 
        /// enabled - Use AQUA if it is available for the current Region and Amazon Redshift node type.
        /// disabled - Don't use AQUA.
        /// auto - Amazon Redshift determines whether to use AQUA.
        /// </summary>
        [Input("aquaConfigurationStatus")]
        public Input<string>? AquaConfigurationStatus { get; set; }

        /// <summary>
        /// The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Default value is 1
        /// </summary>
        [Input("automatedSnapshotRetentionPeriod")]
        public Input<int>? AutomatedSnapshotRetentionPeriod { get; set; }

        /// <summary>
        /// The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. Default: A random, system-chosen Availability Zone in the region that is specified by the endpoint
        /// </summary>
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        /// <summary>
        /// The option to enable relocation for an Amazon Redshift cluster between Availability Zones after the cluster modification is complete.
        /// </summary>
        [Input("availabilityZoneRelocation")]
        public Input<bool>? AvailabilityZoneRelocation { get; set; }

        /// <summary>
        /// The availability zone relocation status of the cluster
        /// </summary>
        [Input("availabilityZoneRelocationStatus")]
        public Input<string>? AvailabilityZoneRelocationStatus { get; set; }

        /// <summary>
        /// A boolean value indicating whether the resize operation is using the classic resize process. If you don't provide this parameter or set the value to false , the resize type is elastic.
        /// </summary>
        [Input("classic")]
        public Input<bool>? Classic { get; set; }

        /// <summary>
        /// A unique identifier for the cluster. You use this identifier to refer to the cluster for any subsequent cluster operations such as deleting or modifying. All alphabetical characters must be lower case, no hypens at the end, no two consecutive hyphens. Cluster name should be unique for all clusters within an AWS account
        /// </summary>
        [Input("clusterIdentifier")]
        public Input<string>? ClusterIdentifier { get; set; }

        /// <summary>
        /// The name of the parameter group to be associated with this cluster.
        /// </summary>
        [Input("clusterParameterGroupName")]
        public Input<string>? ClusterParameterGroupName { get; set; }

        [Input("clusterSecurityGroups")]
        private InputList<string>? _clusterSecurityGroups;

        /// <summary>
        /// A list of security groups to be associated with this cluster.
        /// </summary>
        public InputList<string> ClusterSecurityGroups
        {
            get => _clusterSecurityGroups ?? (_clusterSecurityGroups = new InputList<string>());
            set => _clusterSecurityGroups = value;
        }

        /// <summary>
        /// The name of a cluster subnet group to be associated with this cluster.
        /// </summary>
        [Input("clusterSubnetGroupName")]
        public Input<string>? ClusterSubnetGroupName { get; set; }

        /// <summary>
        /// The type of the cluster. When cluster type is specified as single-node, the NumberOfNodes parameter is not required and if multi-node, the NumberOfNodes parameter is required
        /// </summary>
        [Input("clusterType", required: true)]
        public Input<string> ClusterType { get; set; } = null!;

        /// <summary>
        /// The version of the Amazon Redshift engine software that you want to deploy on the cluster.The version selected runs on all the nodes in the cluster.
        /// </summary>
        [Input("clusterVersion")]
        public Input<string>? ClusterVersion { get; set; }

        /// <summary>
        /// The name of the first database to be created when the cluster is created. To create additional databases after the cluster is created, connect to the cluster with a SQL client and use SQL commands to create a database.
        /// </summary>
        [Input("dBName", required: true)]
        public Input<string> DBName { get; set; } = null!;

        /// <summary>
        /// A boolean indicating whether to enable the deferred maintenance window.
        /// </summary>
        [Input("deferMaintenance")]
        public Input<bool>? DeferMaintenance { get; set; }

        /// <summary>
        /// An integer indicating the duration of the maintenance window in days. If you specify a duration, you can't specify an end time. The duration must be 45 days or less.
        /// </summary>
        [Input("deferMaintenanceDuration")]
        public Input<int>? DeferMaintenanceDuration { get; set; }

        /// <summary>
        /// A timestamp indicating end time for the deferred maintenance window. If you specify an end time, you can't specify a duration.
        /// </summary>
        [Input("deferMaintenanceEndTime")]
        public Input<string>? DeferMaintenanceEndTime { get; set; }

        /// <summary>
        /// A timestamp indicating the start time for the deferred maintenance window.
        /// </summary>
        [Input("deferMaintenanceStartTime")]
        public Input<string>? DeferMaintenanceStartTime { get; set; }

        /// <summary>
        /// The destination AWS Region that you want to copy snapshots to. Constraints: Must be the name of a valid AWS Region. For more information, see Regions and Endpoints in the Amazon Web Services [https://docs.aws.amazon.com/general/latest/gr/rande.html#redshift_region] General Reference
        /// </summary>
        [Input("destinationRegion")]
        public Input<string>? DestinationRegion { get; set; }

        /// <summary>
        /// The Elastic IP (EIP) address for the cluster.
        /// </summary>
        [Input("elasticIp")]
        public Input<string>? ElasticIp { get; set; }

        /// <summary>
        /// If true, the data in the cluster is encrypted at rest.
        /// </summary>
        [Input("encrypted")]
        public Input<bool>? Encrypted { get; set; }

        [Input("endpoint")]
        public Input<Inputs.ClusterEndpointArgs>? Endpoint { get; set; }

        /// <summary>
        /// An option that specifies whether to create the cluster with enhanced VPC routing enabled. To create a cluster that uses enhanced VPC routing, the cluster must be in a VPC. For more information, see Enhanced VPC Routing in the Amazon Redshift Cluster Management Guide.
        /// 
        /// If this option is true , enhanced VPC routing is enabled.
        /// 
        /// Default: false
        /// </summary>
        [Input("enhancedVpcRouting")]
        public Input<bool>? EnhancedVpcRouting { get; set; }

        /// <summary>
        /// Specifies the name of the HSM client certificate the Amazon Redshift cluster uses to retrieve the data encryption keys stored in an HSM
        /// </summary>
        [Input("hsmClientCertificateIdentifier")]
        public Input<string>? HsmClientCertificateIdentifier { get; set; }

        /// <summary>
        /// Specifies the name of the HSM configuration that contains the information the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
        /// </summary>
        [Input("hsmConfigurationIdentifier")]
        public Input<string>? HsmConfigurationIdentifier { get; set; }

        [Input("iamRoles")]
        private InputList<string>? _iamRoles;

        /// <summary>
        /// A list of AWS Identity and Access Management (IAM) roles that can be used by the cluster to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. You can supply up to 10 IAM roles in a single request
        /// </summary>
        public InputList<string> IamRoles
        {
            get => _iamRoles ?? (_iamRoles = new InputList<string>());
            set => _iamRoles = value;
        }

        /// <summary>
        /// The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the cluster.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("loggingProperties")]
        public Input<Inputs.ClusterLoggingPropertiesArgs>? LoggingProperties { get; set; }

        /// <summary>
        /// The name for the maintenance track that you want to assign for the cluster. This name change is asynchronous. The new track name stays in the PendingModifiedValues for the cluster until the next maintenance window. When the maintenance track changes, the cluster is switched to the latest cluster release available for the maintenance track. At this point, the maintenance track name is applied.
        /// </summary>
        [Input("maintenanceTrackName")]
        public Input<string>? MaintenanceTrackName { get; set; }

        /// <summary>
        /// The number of days to retain newly copied snapshots in the destination AWS Region after they are copied from the source AWS Region. If the value is -1, the manual snapshot is retained indefinitely.
        /// 
        /// The value must be either -1 or an integer between 1 and 3,653.
        /// </summary>
        [Input("manualSnapshotRetentionPeriod")]
        public Input<int>? ManualSnapshotRetentionPeriod { get; set; }

        /// <summary>
        /// The password associated with the master user account for the cluster that is being created. Password must be between 8 and 64 characters in length, should have at least one uppercase letter.Must contain at least one lowercase letter.Must contain one number.Can be any printable ASCII character.
        /// </summary>
        [Input("masterUserPassword", required: true)]
        public Input<string> MasterUserPassword { get; set; } = null!;

        /// <summary>
        /// The user name associated with the master user account for the cluster that is being created. The user name can't be PUBLIC and first character must be a letter.
        /// </summary>
        [Input("masterUsername", required: true)]
        public Input<string> MasterUsername { get; set; } = null!;

        /// <summary>
        /// The node type to be provisioned for the cluster.Valid Values: ds2.xlarge | ds2.8xlarge | dc1.large | dc1.8xlarge | dc2.large | dc2.8xlarge | ra3.4xlarge | ra3.16xlarge
        /// </summary>
        [Input("nodeType", required: true)]
        public Input<string> NodeType { get; set; } = null!;

        /// <summary>
        /// The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node.
        /// </summary>
        [Input("numberOfNodes")]
        public Input<int>? NumberOfNodes { get; set; }

        [Input("ownerAccount")]
        public Input<string>? OwnerAccount { get; set; }

        /// <summary>
        /// The port number on which the cluster accepts incoming connections. The cluster is accessible only via the JDBC and ODBC connection strings
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The weekly time range (in UTC) during which automated cluster maintenance can occur.
        /// </summary>
        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        /// <summary>
        /// If true, the cluster can be accessed from a public network.
        /// </summary>
        [Input("publiclyAccessible")]
        public Input<bool>? PubliclyAccessible { get; set; }

        /// <summary>
        /// The Redshift operation to be performed. Resource Action supports pause-cluster, resume-cluster APIs
        /// </summary>
        [Input("resourceAction")]
        public Input<string>? ResourceAction { get; set; }

        /// <summary>
        /// The identifier of the database revision. You can retrieve this value from the response to the DescribeClusterDbRevisions request.
        /// </summary>
        [Input("revisionTarget")]
        public Input<string>? RevisionTarget { get; set; }

        /// <summary>
        /// A boolean indicating if we want to rotate Encryption Keys.
        /// </summary>
        [Input("rotateEncryptionKey")]
        public Input<bool>? RotateEncryptionKey { get; set; }

        /// <summary>
        /// The name of the cluster the source snapshot was created from. This parameter is required if your IAM user has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.
        /// </summary>
        [Input("snapshotClusterIdentifier")]
        public Input<string>? SnapshotClusterIdentifier { get; set; }

        /// <summary>
        /// The name of the snapshot copy grant to use when snapshots of an AWS KMS-encrypted cluster are copied to the destination region.
        /// </summary>
        [Input("snapshotCopyGrantName")]
        public Input<string>? SnapshotCopyGrantName { get; set; }

        /// <summary>
        /// Indicates whether to apply the snapshot retention period to newly copied manual snapshots instead of automated snapshots.
        /// </summary>
        [Input("snapshotCopyManual")]
        public Input<bool>? SnapshotCopyManual { get; set; }

        /// <summary>
        /// The number of days to retain automated snapshots in the destination region after they are copied from the source region. 
        /// 
        ///  Default is 7. 
        /// 
        ///  Constraints: Must be at least 1 and no more than 35.
        /// </summary>
        [Input("snapshotCopyRetentionPeriod")]
        public Input<int>? SnapshotCopyRetentionPeriod { get; set; }

        /// <summary>
        /// The name of the snapshot from which to create the new cluster. This parameter isn't case sensitive.
        /// </summary>
        [Input("snapshotIdentifier")]
        public Input<string>? SnapshotIdentifier { get; set; }

        [Input("tags")]
        private InputList<Inputs.ClusterTagArgs>? _tags;

        /// <summary>
        /// The list of tags for the cluster parameter group.
        /// </summary>
        public InputList<Inputs.ClusterTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.ClusterTagArgs>());
            set => _tags = value;
        }

        [Input("vpcSecurityGroupIds")]
        private InputList<string>? _vpcSecurityGroupIds;

        /// <summary>
        /// A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.
        /// </summary>
        public InputList<string> VpcSecurityGroupIds
        {
            get => _vpcSecurityGroupIds ?? (_vpcSecurityGroupIds = new InputList<string>());
            set => _vpcSecurityGroupIds = value;
        }

        public ClusterArgs()
        {
        }
    }
}
