// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Redshift
{
    public static class GetClusterParameterGroup
    {
        /// <summary>
        /// Resource Type definition for AWS::Redshift::ClusterParameterGroup
        /// </summary>
        public static Task<GetClusterParameterGroupResult> InvokeAsync(GetClusterParameterGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClusterParameterGroupResult>("aws-native:redshift:getClusterParameterGroup", args ?? new GetClusterParameterGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Redshift::ClusterParameterGroup
        /// </summary>
        public static Output<GetClusterParameterGroupResult> Invoke(GetClusterParameterGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClusterParameterGroupResult>("aws-native:redshift:getClusterParameterGroup", args ?? new GetClusterParameterGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterParameterGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cloudformation will generate a unique group name.
        /// </summary>
        [Input("parameterGroupName", required: true)]
        public string ParameterGroupName { get; set; } = null!;

        public GetClusterParameterGroupArgs()
        {
        }
        public static new GetClusterParameterGroupArgs Empty => new GetClusterParameterGroupArgs();
    }

    public sealed class GetClusterParameterGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Cloudformation will generate a unique group name.
        /// </summary>
        [Input("parameterGroupName", required: true)]
        public Input<string> ParameterGroupName { get; set; } = null!;

        public GetClusterParameterGroupInvokeArgs()
        {
        }
        public static new GetClusterParameterGroupInvokeArgs Empty => new GetClusterParameterGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterParameterGroupResult
    {
        /// <summary>
        /// Cloudformation will generate a unique group name.
        /// </summary>
        public readonly string? ParameterGroupName;
        public readonly ImmutableArray<Outputs.ClusterParameterGroupTag> Tags;

        [OutputConstructor]
        private GetClusterParameterGroupResult(
            string? parameterGroupName,

            ImmutableArray<Outputs.ClusterParameterGroupTag> tags)
        {
            ParameterGroupName = parameterGroupName;
            Tags = tags;
        }
    }
}
