// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Redshift
{
    public static class GetClusterParameterGroup
    {
        /// <summary>
        /// Resource Type definition for AWS::Redshift::ClusterParameterGroup
        /// </summary>
        public static Task<GetClusterParameterGroupResult> InvokeAsync(GetClusterParameterGroupArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClusterParameterGroupResult>("aws-native:redshift:getClusterParameterGroup", args ?? new GetClusterParameterGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Redshift::ClusterParameterGroup
        /// </summary>
        public static Output<GetClusterParameterGroupResult> Invoke(GetClusterParameterGroupInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClusterParameterGroupResult>("aws-native:redshift:getClusterParameterGroup", args ?? new GetClusterParameterGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterParameterGroupArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetClusterParameterGroupArgs()
        {
        }
    }

    public sealed class GetClusterParameterGroupInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetClusterParameterGroupInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClusterParameterGroupResult
    {
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.ClusterParameterGroupParameter> Parameters;
        public readonly ImmutableArray<Outputs.ClusterParameterGroupTag> Tags;

        [OutputConstructor]
        private GetClusterParameterGroupResult(
            string? id,

            ImmutableArray<Outputs.ClusterParameterGroupParameter> parameters,

            ImmutableArray<Outputs.ClusterParameterGroupTag> tags)
        {
            Id = id;
            Parameters = parameters;
            Tags = tags;
        }
    }
}
