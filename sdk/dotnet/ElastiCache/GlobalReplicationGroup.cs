// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ElastiCache
{
    /// <summary>
    /// The AWS::ElastiCache::GlobalReplicationGroup resource creates an Amazon ElastiCache Global Replication Group.
    /// </summary>
    [AwsNativeResourceType("aws-native:elasticache:GlobalReplicationGroup")]
    public partial class GlobalReplicationGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// AutomaticFailoverEnabled
        /// </summary>
        [Output("automaticFailoverEnabled")]
        public Output<bool?> AutomaticFailoverEnabled { get; private set; } = null!;

        /// <summary>
        /// The cache node type of the Global Datastore
        /// </summary>
        [Output("cacheNodeType")]
        public Output<string?> CacheNodeType { get; private set; } = null!;

        /// <summary>
        /// Cache parameter group name to use for the new engine version. This parameter cannot be modified independently.
        /// </summary>
        [Output("cacheParameterGroupName")]
        public Output<string?> CacheParameterGroupName { get; private set; } = null!;

        /// <summary>
        /// The engine version of the Global Datastore.
        /// </summary>
        [Output("engineVersion")]
        public Output<string?> EngineVersion { get; private set; } = null!;

        /// <summary>
        /// Indicates the number of node groups in the Global Datastore.
        /// </summary>
        [Output("globalNodeGroupCount")]
        public Output<int?> GlobalNodeGroupCount { get; private set; } = null!;

        /// <summary>
        /// The optional description of the Global Datastore
        /// </summary>
        [Output("globalReplicationGroupDescription")]
        public Output<string?> GlobalReplicationGroupDescription { get; private set; } = null!;

        /// <summary>
        /// The name of the Global Datastore, it is generated by ElastiCache adding a prefix to GlobalReplicationGroupIdSuffix.
        /// </summary>
        [Output("globalReplicationGroupId")]
        public Output<string> GlobalReplicationGroupId { get; private set; } = null!;

        /// <summary>
        /// The suffix name of a Global Datastore. Amazon ElastiCache automatically applies a prefix to the Global Datastore ID when it is created. Each AWS Region has its own prefix. 
        /// </summary>
        [Output("globalReplicationGroupIdSuffix")]
        public Output<string?> GlobalReplicationGroupIdSuffix { get; private set; } = null!;

        /// <summary>
        /// The replication groups that comprise the Global Datastore.
        /// </summary>
        [Output("members")]
        public Output<ImmutableArray<Outputs.GlobalReplicationGroupGlobalReplicationGroupMember>> Members { get; private set; } = null!;

        /// <summary>
        /// Describes the replication group IDs, the AWS regions where they are stored and the shard configuration for each that comprise the Global Datastore 
        /// </summary>
        [Output("regionalConfigurations")]
        public Output<ImmutableArray<Outputs.GlobalReplicationGroupRegionalConfiguration>> RegionalConfigurations { get; private set; } = null!;

        /// <summary>
        /// The status of the Global Datastore
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;


        /// <summary>
        /// Create a GlobalReplicationGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlobalReplicationGroup(string name, GlobalReplicationGroupArgs args, CustomResourceOptions? options = null)
            : base("aws-native:elasticache:GlobalReplicationGroup", name, args ?? new GlobalReplicationGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GlobalReplicationGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:elasticache:GlobalReplicationGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlobalReplicationGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlobalReplicationGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new GlobalReplicationGroup(name, id, options);
        }
    }

    public sealed class GlobalReplicationGroupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// AutomaticFailoverEnabled
        /// </summary>
        [Input("automaticFailoverEnabled")]
        public Input<bool>? AutomaticFailoverEnabled { get; set; }

        /// <summary>
        /// The cache node type of the Global Datastore
        /// </summary>
        [Input("cacheNodeType")]
        public Input<string>? CacheNodeType { get; set; }

        /// <summary>
        /// Cache parameter group name to use for the new engine version. This parameter cannot be modified independently.
        /// </summary>
        [Input("cacheParameterGroupName")]
        public Input<string>? CacheParameterGroupName { get; set; }

        /// <summary>
        /// The engine version of the Global Datastore.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// Indicates the number of node groups in the Global Datastore.
        /// </summary>
        [Input("globalNodeGroupCount")]
        public Input<int>? GlobalNodeGroupCount { get; set; }

        /// <summary>
        /// The optional description of the Global Datastore
        /// </summary>
        [Input("globalReplicationGroupDescription")]
        public Input<string>? GlobalReplicationGroupDescription { get; set; }

        /// <summary>
        /// The suffix name of a Global Datastore. Amazon ElastiCache automatically applies a prefix to the Global Datastore ID when it is created. Each AWS Region has its own prefix. 
        /// </summary>
        [Input("globalReplicationGroupIdSuffix")]
        public Input<string>? GlobalReplicationGroupIdSuffix { get; set; }

        [Input("members", required: true)]
        private InputList<Inputs.GlobalReplicationGroupGlobalReplicationGroupMemberArgs>? _members;

        /// <summary>
        /// The replication groups that comprise the Global Datastore.
        /// </summary>
        public InputList<Inputs.GlobalReplicationGroupGlobalReplicationGroupMemberArgs> Members
        {
            get => _members ?? (_members = new InputList<Inputs.GlobalReplicationGroupGlobalReplicationGroupMemberArgs>());
            set => _members = value;
        }

        [Input("regionalConfigurations")]
        private InputList<Inputs.GlobalReplicationGroupRegionalConfigurationArgs>? _regionalConfigurations;

        /// <summary>
        /// Describes the replication group IDs, the AWS regions where they are stored and the shard configuration for each that comprise the Global Datastore 
        /// </summary>
        public InputList<Inputs.GlobalReplicationGroupRegionalConfigurationArgs> RegionalConfigurations
        {
            get => _regionalConfigurations ?? (_regionalConfigurations = new InputList<Inputs.GlobalReplicationGroupRegionalConfigurationArgs>());
            set => _regionalConfigurations = value;
        }

        public GlobalReplicationGroupArgs()
        {
        }
    }
}
