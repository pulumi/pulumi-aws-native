// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ElastiCache
{
    public static class GetSecurityGroupIngress
    {
        /// <summary>
        /// Resource Type definition for AWS::ElastiCache::SecurityGroupIngress
        /// </summary>
        public static Task<GetSecurityGroupIngressResult> InvokeAsync(GetSecurityGroupIngressArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecurityGroupIngressResult>("aws-native:elasticache:getSecurityGroupIngress", args ?? new GetSecurityGroupIngressArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::ElastiCache::SecurityGroupIngress
        /// </summary>
        public static Output<GetSecurityGroupIngressResult> Invoke(GetSecurityGroupIngressInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSecurityGroupIngressResult>("aws-native:elasticache:getSecurityGroupIngress", args ?? new GetSecurityGroupIngressInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityGroupIngressArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSecurityGroupIngressArgs()
        {
        }
    }

    public sealed class GetSecurityGroupIngressInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSecurityGroupIngressInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSecurityGroupIngressResult
    {
        public readonly string? CacheSecurityGroupName;
        public readonly string? EC2SecurityGroupName;
        public readonly string? EC2SecurityGroupOwnerId;
        public readonly string? Id;

        [OutputConstructor]
        private GetSecurityGroupIngressResult(
            string? cacheSecurityGroupName,

            string? eC2SecurityGroupName,

            string? eC2SecurityGroupOwnerId,

            string? id)
        {
            CacheSecurityGroupName = cacheSecurityGroupName;
            EC2SecurityGroupName = eC2SecurityGroupName;
            EC2SecurityGroupOwnerId = eC2SecurityGroupOwnerId;
            Id = id;
        }
    }
}
