// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.ElastiCache
{
    /// <summary>
    /// Resource Type definition for AWS::ElastiCache::ReplicationGroup
    /// </summary>
    [Obsolete(@"ReplicationGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:elasticache:ReplicationGroup")]
    public partial class ReplicationGroup : Pulumi.CustomResource
    {
        [Output("atRestEncryptionEnabled")]
        public Output<bool?> AtRestEncryptionEnabled { get; private set; } = null!;

        [Output("authToken")]
        public Output<string?> AuthToken { get; private set; } = null!;

        [Output("autoMinorVersionUpgrade")]
        public Output<bool?> AutoMinorVersionUpgrade { get; private set; } = null!;

        [Output("automaticFailoverEnabled")]
        public Output<bool?> AutomaticFailoverEnabled { get; private set; } = null!;

        [Output("cacheNodeType")]
        public Output<string?> CacheNodeType { get; private set; } = null!;

        [Output("cacheParameterGroupName")]
        public Output<string?> CacheParameterGroupName { get; private set; } = null!;

        [Output("cacheSecurityGroupNames")]
        public Output<ImmutableArray<string>> CacheSecurityGroupNames { get; private set; } = null!;

        [Output("cacheSubnetGroupName")]
        public Output<string?> CacheSubnetGroupName { get; private set; } = null!;

        [Output("configurationEndPointAddress")]
        public Output<string?> ConfigurationEndPointAddress { get; private set; } = null!;

        [Output("configurationEndPointPort")]
        public Output<string?> ConfigurationEndPointPort { get; private set; } = null!;

        [Output("engine")]
        public Output<string?> Engine { get; private set; } = null!;

        [Output("engineVersion")]
        public Output<string?> EngineVersion { get; private set; } = null!;

        [Output("globalReplicationGroupId")]
        public Output<string?> GlobalReplicationGroupId { get; private set; } = null!;

        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        [Output("logDeliveryConfigurations")]
        public Output<ImmutableArray<Outputs.ReplicationGroupLogDeliveryConfigurationRequest>> LogDeliveryConfigurations { get; private set; } = null!;

        [Output("multiAZEnabled")]
        public Output<bool?> MultiAZEnabled { get; private set; } = null!;

        [Output("nodeGroupConfiguration")]
        public Output<ImmutableArray<Outputs.ReplicationGroupNodeGroupConfiguration>> NodeGroupConfiguration { get; private set; } = null!;

        [Output("notificationTopicArn")]
        public Output<string?> NotificationTopicArn { get; private set; } = null!;

        [Output("numCacheClusters")]
        public Output<int?> NumCacheClusters { get; private set; } = null!;

        [Output("numNodeGroups")]
        public Output<int?> NumNodeGroups { get; private set; } = null!;

        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        [Output("preferredCacheClusterAZs")]
        public Output<ImmutableArray<string>> PreferredCacheClusterAZs { get; private set; } = null!;

        [Output("preferredMaintenanceWindow")]
        public Output<string?> PreferredMaintenanceWindow { get; private set; } = null!;

        [Output("primaryClusterId")]
        public Output<string?> PrimaryClusterId { get; private set; } = null!;

        [Output("primaryEndPointAddress")]
        public Output<string?> PrimaryEndPointAddress { get; private set; } = null!;

        [Output("primaryEndPointPort")]
        public Output<string?> PrimaryEndPointPort { get; private set; } = null!;

        [Output("readEndPointAddresses")]
        public Output<string?> ReadEndPointAddresses { get; private set; } = null!;

        [Output("readEndPointAddressesList")]
        public Output<ImmutableArray<string>> ReadEndPointAddressesList { get; private set; } = null!;

        [Output("readEndPointPorts")]
        public Output<string?> ReadEndPointPorts { get; private set; } = null!;

        [Output("readEndPointPortsList")]
        public Output<ImmutableArray<string>> ReadEndPointPortsList { get; private set; } = null!;

        [Output("readerEndPointAddress")]
        public Output<string?> ReaderEndPointAddress { get; private set; } = null!;

        [Output("readerEndPointPort")]
        public Output<string?> ReaderEndPointPort { get; private set; } = null!;

        [Output("replicasPerNodeGroup")]
        public Output<int?> ReplicasPerNodeGroup { get; private set; } = null!;

        [Output("replicationGroupDescription")]
        public Output<string> ReplicationGroupDescription { get; private set; } = null!;

        [Output("replicationGroupId")]
        public Output<string> ReplicationGroupId { get; private set; } = null!;

        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        [Output("snapshotArns")]
        public Output<ImmutableArray<string>> SnapshotArns { get; private set; } = null!;

        [Output("snapshotName")]
        public Output<string?> SnapshotName { get; private set; } = null!;

        [Output("snapshotRetentionLimit")]
        public Output<int?> SnapshotRetentionLimit { get; private set; } = null!;

        [Output("snapshotWindow")]
        public Output<string?> SnapshotWindow { get; private set; } = null!;

        [Output("snapshottingClusterId")]
        public Output<string?> SnapshottingClusterId { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<Outputs.ReplicationGroupTag>> Tags { get; private set; } = null!;

        [Output("transitEncryptionEnabled")]
        public Output<bool?> TransitEncryptionEnabled { get; private set; } = null!;

        [Output("userGroupIds")]
        public Output<ImmutableArray<string>> UserGroupIds { get; private set; } = null!;


        /// <summary>
        /// Create a ReplicationGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ReplicationGroup(string name, ReplicationGroupArgs args, CustomResourceOptions? options = null)
            : base("aws-native:elasticache:ReplicationGroup", name, args ?? new ReplicationGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ReplicationGroup(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:elasticache:ReplicationGroup", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ReplicationGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ReplicationGroup Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new ReplicationGroup(name, id, options);
        }
    }

    public sealed class ReplicationGroupArgs : Pulumi.ResourceArgs
    {
        [Input("atRestEncryptionEnabled")]
        public Input<bool>? AtRestEncryptionEnabled { get; set; }

        [Input("authToken")]
        public Input<string>? AuthToken { get; set; }

        [Input("autoMinorVersionUpgrade")]
        public Input<bool>? AutoMinorVersionUpgrade { get; set; }

        [Input("automaticFailoverEnabled")]
        public Input<bool>? AutomaticFailoverEnabled { get; set; }

        [Input("cacheNodeType")]
        public Input<string>? CacheNodeType { get; set; }

        [Input("cacheParameterGroupName")]
        public Input<string>? CacheParameterGroupName { get; set; }

        [Input("cacheSecurityGroupNames")]
        private InputList<string>? _cacheSecurityGroupNames;
        public InputList<string> CacheSecurityGroupNames
        {
            get => _cacheSecurityGroupNames ?? (_cacheSecurityGroupNames = new InputList<string>());
            set => _cacheSecurityGroupNames = value;
        }

        [Input("cacheSubnetGroupName")]
        public Input<string>? CacheSubnetGroupName { get; set; }

        [Input("configurationEndPointAddress")]
        public Input<string>? ConfigurationEndPointAddress { get; set; }

        [Input("configurationEndPointPort")]
        public Input<string>? ConfigurationEndPointPort { get; set; }

        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        [Input("globalReplicationGroupId")]
        public Input<string>? GlobalReplicationGroupId { get; set; }

        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        [Input("logDeliveryConfigurations")]
        private InputList<Inputs.ReplicationGroupLogDeliveryConfigurationRequestArgs>? _logDeliveryConfigurations;
        public InputList<Inputs.ReplicationGroupLogDeliveryConfigurationRequestArgs> LogDeliveryConfigurations
        {
            get => _logDeliveryConfigurations ?? (_logDeliveryConfigurations = new InputList<Inputs.ReplicationGroupLogDeliveryConfigurationRequestArgs>());
            set => _logDeliveryConfigurations = value;
        }

        [Input("multiAZEnabled")]
        public Input<bool>? MultiAZEnabled { get; set; }

        [Input("nodeGroupConfiguration")]
        private InputList<Inputs.ReplicationGroupNodeGroupConfigurationArgs>? _nodeGroupConfiguration;
        public InputList<Inputs.ReplicationGroupNodeGroupConfigurationArgs> NodeGroupConfiguration
        {
            get => _nodeGroupConfiguration ?? (_nodeGroupConfiguration = new InputList<Inputs.ReplicationGroupNodeGroupConfigurationArgs>());
            set => _nodeGroupConfiguration = value;
        }

        [Input("notificationTopicArn")]
        public Input<string>? NotificationTopicArn { get; set; }

        [Input("numCacheClusters")]
        public Input<int>? NumCacheClusters { get; set; }

        [Input("numNodeGroups")]
        public Input<int>? NumNodeGroups { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("preferredCacheClusterAZs")]
        private InputList<string>? _preferredCacheClusterAZs;
        public InputList<string> PreferredCacheClusterAZs
        {
            get => _preferredCacheClusterAZs ?? (_preferredCacheClusterAZs = new InputList<string>());
            set => _preferredCacheClusterAZs = value;
        }

        [Input("preferredMaintenanceWindow")]
        public Input<string>? PreferredMaintenanceWindow { get; set; }

        [Input("primaryClusterId")]
        public Input<string>? PrimaryClusterId { get; set; }

        [Input("primaryEndPointAddress")]
        public Input<string>? PrimaryEndPointAddress { get; set; }

        [Input("primaryEndPointPort")]
        public Input<string>? PrimaryEndPointPort { get; set; }

        [Input("readEndPointAddresses")]
        public Input<string>? ReadEndPointAddresses { get; set; }

        [Input("readEndPointAddressesList")]
        private InputList<string>? _readEndPointAddressesList;
        public InputList<string> ReadEndPointAddressesList
        {
            get => _readEndPointAddressesList ?? (_readEndPointAddressesList = new InputList<string>());
            set => _readEndPointAddressesList = value;
        }

        [Input("readEndPointPorts")]
        public Input<string>? ReadEndPointPorts { get; set; }

        [Input("readEndPointPortsList")]
        private InputList<string>? _readEndPointPortsList;
        public InputList<string> ReadEndPointPortsList
        {
            get => _readEndPointPortsList ?? (_readEndPointPortsList = new InputList<string>());
            set => _readEndPointPortsList = value;
        }

        [Input("readerEndPointAddress")]
        public Input<string>? ReaderEndPointAddress { get; set; }

        [Input("readerEndPointPort")]
        public Input<string>? ReaderEndPointPort { get; set; }

        [Input("replicasPerNodeGroup")]
        public Input<int>? ReplicasPerNodeGroup { get; set; }

        [Input("replicationGroupDescription", required: true)]
        public Input<string> ReplicationGroupDescription { get; set; } = null!;

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        [Input("snapshotArns")]
        private InputList<string>? _snapshotArns;
        public InputList<string> SnapshotArns
        {
            get => _snapshotArns ?? (_snapshotArns = new InputList<string>());
            set => _snapshotArns = value;
        }

        [Input("snapshotName")]
        public Input<string>? SnapshotName { get; set; }

        [Input("snapshotRetentionLimit")]
        public Input<int>? SnapshotRetentionLimit { get; set; }

        [Input("snapshotWindow")]
        public Input<string>? SnapshotWindow { get; set; }

        [Input("snapshottingClusterId")]
        public Input<string>? SnapshottingClusterId { get; set; }

        [Input("tags")]
        private InputList<Inputs.ReplicationGroupTagArgs>? _tags;
        public InputList<Inputs.ReplicationGroupTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.ReplicationGroupTagArgs>());
            set => _tags = value;
        }

        [Input("transitEncryptionEnabled")]
        public Input<bool>? TransitEncryptionEnabled { get; set; }

        [Input("userGroupIds")]
        private InputList<string>? _userGroupIds;
        public InputList<string> UserGroupIds
        {
            get => _userGroupIds ?? (_userGroupIds = new InputList<string>());
            set => _userGroupIds = value;
        }

        public ReplicationGroupArgs()
        {
        }
    }
}
