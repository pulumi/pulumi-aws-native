// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.Panorama
{
    [EnumType]
    public readonly struct ApplicationInstanceHealthStatus : IEquatable<ApplicationInstanceHealthStatus>
    {
        private readonly string _value;

        private ApplicationInstanceHealthStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ApplicationInstanceHealthStatus Running { get; } = new ApplicationInstanceHealthStatus("RUNNING");
        public static ApplicationInstanceHealthStatus Error { get; } = new ApplicationInstanceHealthStatus("ERROR");
        public static ApplicationInstanceHealthStatus NotAvailable { get; } = new ApplicationInstanceHealthStatus("NOT_AVAILABLE");

        public static bool operator ==(ApplicationInstanceHealthStatus left, ApplicationInstanceHealthStatus right) => left.Equals(right);
        public static bool operator !=(ApplicationInstanceHealthStatus left, ApplicationInstanceHealthStatus right) => !left.Equals(right);

        public static explicit operator string(ApplicationInstanceHealthStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ApplicationInstanceHealthStatus other && Equals(other);
        public bool Equals(ApplicationInstanceHealthStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct ApplicationInstanceStatus : IEquatable<ApplicationInstanceStatus>
    {
        private readonly string _value;

        private ApplicationInstanceStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ApplicationInstanceStatus DeploymentPending { get; } = new ApplicationInstanceStatus("DEPLOYMENT_PENDING");
        public static ApplicationInstanceStatus DeploymentRequested { get; } = new ApplicationInstanceStatus("DEPLOYMENT_REQUESTED");
        public static ApplicationInstanceStatus DeploymentInProgress { get; } = new ApplicationInstanceStatus("DEPLOYMENT_IN_PROGRESS");
        public static ApplicationInstanceStatus DeploymentError { get; } = new ApplicationInstanceStatus("DEPLOYMENT_ERROR");
        public static ApplicationInstanceStatus DeploymentSucceeded { get; } = new ApplicationInstanceStatus("DEPLOYMENT_SUCCEEDED");
        public static ApplicationInstanceStatus RemovalPending { get; } = new ApplicationInstanceStatus("REMOVAL_PENDING");
        public static ApplicationInstanceStatus RemovalRequested { get; } = new ApplicationInstanceStatus("REMOVAL_REQUESTED");
        public static ApplicationInstanceStatus RemovalInProgress { get; } = new ApplicationInstanceStatus("REMOVAL_IN_PROGRESS");
        public static ApplicationInstanceStatus RemovalFailed { get; } = new ApplicationInstanceStatus("REMOVAL_FAILED");
        public static ApplicationInstanceStatus RemovalSucceeded { get; } = new ApplicationInstanceStatus("REMOVAL_SUCCEEDED");

        public static bool operator ==(ApplicationInstanceStatus left, ApplicationInstanceStatus right) => left.Equals(right);
        public static bool operator !=(ApplicationInstanceStatus left, ApplicationInstanceStatus right) => !left.Equals(right);

        public static explicit operator string(ApplicationInstanceStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ApplicationInstanceStatus other && Equals(other);
        public bool Equals(ApplicationInstanceStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct ApplicationInstanceStatusFilter : IEquatable<ApplicationInstanceStatusFilter>
    {
        private readonly string _value;

        private ApplicationInstanceStatusFilter(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ApplicationInstanceStatusFilter DeploymentSucceeded { get; } = new ApplicationInstanceStatusFilter("DEPLOYMENT_SUCCEEDED");
        public static ApplicationInstanceStatusFilter DeploymentError { get; } = new ApplicationInstanceStatusFilter("DEPLOYMENT_ERROR");
        public static ApplicationInstanceStatusFilter RemovalSucceeded { get; } = new ApplicationInstanceStatusFilter("REMOVAL_SUCCEEDED");
        public static ApplicationInstanceStatusFilter RemovalFailed { get; } = new ApplicationInstanceStatusFilter("REMOVAL_FAILED");
        public static ApplicationInstanceStatusFilter ProcessingDeployment { get; } = new ApplicationInstanceStatusFilter("PROCESSING_DEPLOYMENT");
        public static ApplicationInstanceStatusFilter ProcessingRemoval { get; } = new ApplicationInstanceStatusFilter("PROCESSING_REMOVAL");

        public static bool operator ==(ApplicationInstanceStatusFilter left, ApplicationInstanceStatusFilter right) => left.Equals(right);
        public static bool operator !=(ApplicationInstanceStatusFilter left, ApplicationInstanceStatusFilter right) => !left.Equals(right);

        public static explicit operator string(ApplicationInstanceStatusFilter value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ApplicationInstanceStatusFilter other && Equals(other);
        public bool Equals(ApplicationInstanceStatusFilter other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct PackageVersionStatus : IEquatable<PackageVersionStatus>
    {
        private readonly string _value;

        private PackageVersionStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static PackageVersionStatus RegisterPending { get; } = new PackageVersionStatus("REGISTER_PENDING");
        public static PackageVersionStatus RegisterCompleted { get; } = new PackageVersionStatus("REGISTER_COMPLETED");
        public static PackageVersionStatus Failed { get; } = new PackageVersionStatus("FAILED");
        public static PackageVersionStatus Deleting { get; } = new PackageVersionStatus("DELETING");

        public static bool operator ==(PackageVersionStatus left, PackageVersionStatus right) => left.Equals(right);
        public static bool operator !=(PackageVersionStatus left, PackageVersionStatus right) => !left.Equals(right);

        public static explicit operator string(PackageVersionStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is PackageVersionStatus other && Equals(other);
        public bool Equals(PackageVersionStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
