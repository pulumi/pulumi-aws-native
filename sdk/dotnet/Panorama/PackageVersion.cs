// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Panorama
{
    /// <summary>
    /// Schema for PackageVersion Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:panorama:PackageVersion")]
    public partial class PackageVersion : Pulumi.CustomResource
    {
        [Output("isLatestPatch")]
        public Output<bool> IsLatestPatch { get; private set; } = null!;

        [Output("markLatest")]
        public Output<bool?> MarkLatest { get; private set; } = null!;

        [Output("ownerAccount")]
        public Output<string?> OwnerAccount { get; private set; } = null!;

        [Output("packageArn")]
        public Output<string> PackageArn { get; private set; } = null!;

        [Output("packageId")]
        public Output<string> PackageId { get; private set; } = null!;

        [Output("packageName")]
        public Output<string> PackageName { get; private set; } = null!;

        [Output("packageVersion")]
        public Output<string> PackageVersionValue { get; private set; } = null!;

        [Output("patchVersion")]
        public Output<string> PatchVersion { get; private set; } = null!;

        [Output("registeredTime")]
        public Output<int> RegisteredTime { get; private set; } = null!;

        [Output("status")]
        public Output<Pulumi.AwsNative.Panorama.PackageVersionStatus> Status { get; private set; } = null!;

        [Output("statusDescription")]
        public Output<string> StatusDescription { get; private set; } = null!;

        [Output("updatedLatestPatchVersion")]
        public Output<string?> UpdatedLatestPatchVersion { get; private set; } = null!;


        /// <summary>
        /// Create a PackageVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PackageVersion(string name, PackageVersionArgs args, CustomResourceOptions? options = null)
            : base("aws-native:panorama:PackageVersion", name, args ?? new PackageVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PackageVersion(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:panorama:PackageVersion", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PackageVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PackageVersion Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PackageVersion(name, id, options);
        }
    }

    public sealed class PackageVersionArgs : Pulumi.ResourceArgs
    {
        [Input("markLatest")]
        public Input<bool>? MarkLatest { get; set; }

        [Input("ownerAccount")]
        public Input<string>? OwnerAccount { get; set; }

        [Input("packageId", required: true)]
        public Input<string> PackageId { get; set; } = null!;

        [Input("packageVersion", required: true)]
        public Input<string> PackageVersionValue { get; set; } = null!;

        [Input("patchVersion", required: true)]
        public Input<string> PatchVersion { get; set; } = null!;

        [Input("updatedLatestPatchVersion")]
        public Input<string>? UpdatedLatestPatchVersion { get; set; }

        public PackageVersionArgs()
        {
        }
    }
}
