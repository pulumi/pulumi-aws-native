// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.CloudTrail
{
    /// <summary>
    /// Specify if you want your trail to log read-only events, write-only events, or all. For example, the EC2 GetConsoleOutput is a read-only API operation and RunInstances is a write-only API operation.
    /// </summary>
    [EnumType]
    public readonly struct TrailEventSelectorReadWriteType : IEquatable<TrailEventSelectorReadWriteType>
    {
        private readonly string _value;

        private TrailEventSelectorReadWriteType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static TrailEventSelectorReadWriteType All { get; } = new TrailEventSelectorReadWriteType("All");
        public static TrailEventSelectorReadWriteType ReadOnly { get; } = new TrailEventSelectorReadWriteType("ReadOnly");
        public static TrailEventSelectorReadWriteType WriteOnly { get; } = new TrailEventSelectorReadWriteType("WriteOnly");

        public static bool operator ==(TrailEventSelectorReadWriteType left, TrailEventSelectorReadWriteType right) => left.Equals(right);
        public static bool operator !=(TrailEventSelectorReadWriteType left, TrailEventSelectorReadWriteType right) => !left.Equals(right);

        public static explicit operator string(TrailEventSelectorReadWriteType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is TrailEventSelectorReadWriteType other && Equals(other);
        public bool Equals(TrailEventSelectorReadWriteType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
