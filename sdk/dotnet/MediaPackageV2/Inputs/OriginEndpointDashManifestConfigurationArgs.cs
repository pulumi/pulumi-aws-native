// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaPackageV2.Inputs
{

    /// <summary>
    /// &lt;p&gt;Retrieve the DASH manifest configuration.&lt;/p&gt;
    /// </summary>
    public sealed class OriginEndpointDashManifestConfigurationArgs : global::Pulumi.ResourceArgs
    {
        [Input("drmSignaling")]
        public Input<Pulumi.AwsNative.MediaPackageV2.OriginEndpointDashDrmSignaling>? DrmSignaling { get; set; }

        [Input("filterConfiguration")]
        public Input<Inputs.OriginEndpointFilterConfigurationArgs>? FilterConfiguration { get; set; }

        /// <summary>
        /// &lt;p&gt;A short string that's appended to the endpoint URL. The manifest name creates a unique path to this endpoint. If you don't enter a value, MediaPackage uses the default manifest name, index. &lt;/p&gt;
        /// </summary>
        [Input("manifestName", required: true)]
        public Input<string> ManifestName { get; set; } = null!;

        /// <summary>
        /// &lt;p&gt;The total duration (in seconds) of the manifest's content.&lt;/p&gt;
        /// </summary>
        [Input("manifestWindowSeconds")]
        public Input<int>? ManifestWindowSeconds { get; set; }

        /// <summary>
        /// &lt;p&gt;Minimum amount of content (in seconds) that a player must keep available in the buffer.&lt;/p&gt;
        /// </summary>
        [Input("minBufferTimeSeconds")]
        public Input<int>? MinBufferTimeSeconds { get; set; }

        /// <summary>
        /// &lt;p&gt;Minimum amount of time (in seconds) that the player should wait before requesting updates to the manifest.&lt;/p&gt;
        /// </summary>
        [Input("minUpdatePeriodSeconds")]
        public Input<int>? MinUpdatePeriodSeconds { get; set; }

        [Input("periodTriggers")]
        private InputList<Pulumi.AwsNative.MediaPackageV2.OriginEndpointDashPeriodTrigger>? _periodTriggers;

        /// <summary>
        /// &lt;p&gt;A list of triggers that controls when AWS Elemental MediaPackage separates the MPEG-DASH manifest into multiple periods. Leave this value empty to indicate that the manifest is contained all in one period.
        ///          For more information about periods in the DASH manifest, see &lt;a href="https://docs.aws.amazon.com/mediapackage/latest/userguide/multi-period.html"&gt;Multi-period DASH in AWS Elemental MediaPackage&lt;/a&gt;.&lt;/p&gt;
        /// </summary>
        public InputList<Pulumi.AwsNative.MediaPackageV2.OriginEndpointDashPeriodTrigger> PeriodTriggers
        {
            get => _periodTriggers ?? (_periodTriggers = new InputList<Pulumi.AwsNative.MediaPackageV2.OriginEndpointDashPeriodTrigger>());
            set => _periodTriggers = value;
        }

        [Input("scteDash")]
        public Input<Inputs.OriginEndpointScteDashArgs>? ScteDash { get; set; }

        [Input("segmentTemplateFormat")]
        public Input<Pulumi.AwsNative.MediaPackageV2.OriginEndpointDashSegmentTemplateFormat>? SegmentTemplateFormat { get; set; }

        /// <summary>
        /// &lt;p&gt;The amount of time (in seconds) that the player should be from the end of the manifest.&lt;/p&gt;
        /// </summary>
        [Input("suggestedPresentationDelaySeconds")]
        public Input<int>? SuggestedPresentationDelaySeconds { get; set; }

        [Input("utcTiming")]
        public Input<Inputs.OriginEndpointDashUtcTimingArgs>? UtcTiming { get; set; }

        public OriginEndpointDashManifestConfigurationArgs()
        {
        }
        public static new OriginEndpointDashManifestConfigurationArgs Empty => new OriginEndpointDashManifestConfigurationArgs();
    }
}
