// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaPackageV2.Outputs
{

    /// <summary>
    /// &lt;p&gt;The parameters for encrypting content.&lt;/p&gt;
    /// </summary>
    [OutputType]
    public sealed class OriginEndpointEncryption
    {
        /// <summary>
        /// &lt;p&gt;A 128-bit, 16-byte hex value represented by a 32-character string, used in conjunction with the key for encrypting content. If you don't specify a value, then MediaPackage creates the constant initialization vector (IV).&lt;/p&gt;
        /// </summary>
        public readonly string? ConstantInitializationVector;
        public readonly Outputs.OriginEndpointEncryptionMethod EncryptionMethod;
        /// <summary>
        /// &lt;p&gt;The frequency (in seconds) of key changes for live workflows, in which content is streamed real time. The service retrieves content keys before the live content begins streaming, and then retrieves them as needed over the lifetime of the workflow. By default, key rotation is set to 300 seconds (5 minutes), the minimum rotation interval, which is equivalent to setting it to 300. If you don't enter an interval, content keys aren't rotated.&lt;/p&gt;
        ///          &lt;p&gt;The following example setting causes the service to rotate keys every thirty minutes: &lt;code&gt;1800&lt;/code&gt;
        ///          &lt;/p&gt;
        /// </summary>
        public readonly int? KeyRotationIntervalSeconds;
        public readonly Outputs.OriginEndpointSpekeKeyProvider SpekeKeyProvider;

        [OutputConstructor]
        private OriginEndpointEncryption(
            string? constantInitializationVector,

            Outputs.OriginEndpointEncryptionMethod encryptionMethod,

            int? keyRotationIntervalSeconds,

            Outputs.OriginEndpointSpekeKeyProvider spekeKeyProvider)
        {
            ConstantInitializationVector = constantInitializationVector;
            EncryptionMethod = encryptionMethod;
            KeyRotationIntervalSeconds = keyRotationIntervalSeconds;
            SpekeKeyProvider = spekeKeyProvider;
        }
    }
}
