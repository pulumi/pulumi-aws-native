// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.MediaPackageV2
{
    [EnumType]
    public readonly struct ChannelInputType : IEquatable<ChannelInputType>
    {
        private readonly string _value;

        private ChannelInputType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ChannelInputType Hls { get; } = new ChannelInputType("HLS");
        public static ChannelInputType Cmaf { get; } = new ChannelInputType("CMAF");

        public static bool operator ==(ChannelInputType left, ChannelInputType right) => left.Equals(right);
        public static bool operator !=(ChannelInputType left, ChannelInputType right) => !left.Equals(right);

        public static explicit operator string(ChannelInputType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ChannelInputType other && Equals(other);
        public bool Equals(ChannelInputType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointAdMarkerDash : IEquatable<OriginEndpointAdMarkerDash>
    {
        private readonly string _value;

        private OriginEndpointAdMarkerDash(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointAdMarkerDash Binary { get; } = new OriginEndpointAdMarkerDash("BINARY");
        public static OriginEndpointAdMarkerDash Xml { get; } = new OriginEndpointAdMarkerDash("XML");

        public static bool operator ==(OriginEndpointAdMarkerDash left, OriginEndpointAdMarkerDash right) => left.Equals(right);
        public static bool operator !=(OriginEndpointAdMarkerDash left, OriginEndpointAdMarkerDash right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointAdMarkerDash value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointAdMarkerDash other && Equals(other);
        public bool Equals(OriginEndpointAdMarkerDash other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointAdMarkerHls : IEquatable<OriginEndpointAdMarkerHls>
    {
        private readonly string _value;

        private OriginEndpointAdMarkerHls(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointAdMarkerHls Daterange { get; } = new OriginEndpointAdMarkerHls("DATERANGE");
        public static OriginEndpointAdMarkerHls Scte35Enhanced { get; } = new OriginEndpointAdMarkerHls("SCTE35_ENHANCED");

        public static bool operator ==(OriginEndpointAdMarkerHls left, OriginEndpointAdMarkerHls right) => left.Equals(right);
        public static bool operator !=(OriginEndpointAdMarkerHls left, OriginEndpointAdMarkerHls right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointAdMarkerHls value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointAdMarkerHls other && Equals(other);
        public bool Equals(OriginEndpointAdMarkerHls other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointCmafEncryptionMethod : IEquatable<OriginEndpointCmafEncryptionMethod>
    {
        private readonly string _value;

        private OriginEndpointCmafEncryptionMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointCmafEncryptionMethod Cenc { get; } = new OriginEndpointCmafEncryptionMethod("CENC");
        public static OriginEndpointCmafEncryptionMethod Cbcs { get; } = new OriginEndpointCmafEncryptionMethod("CBCS");

        public static bool operator ==(OriginEndpointCmafEncryptionMethod left, OriginEndpointCmafEncryptionMethod right) => left.Equals(right);
        public static bool operator !=(OriginEndpointCmafEncryptionMethod left, OriginEndpointCmafEncryptionMethod right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointCmafEncryptionMethod value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointCmafEncryptionMethod other && Equals(other);
        public bool Equals(OriginEndpointCmafEncryptionMethod other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointContainerType : IEquatable<OriginEndpointContainerType>
    {
        private readonly string _value;

        private OriginEndpointContainerType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointContainerType Ts { get; } = new OriginEndpointContainerType("TS");
        public static OriginEndpointContainerType Cmaf { get; } = new OriginEndpointContainerType("CMAF");
        public static OriginEndpointContainerType Ism { get; } = new OriginEndpointContainerType("ISM");

        public static bool operator ==(OriginEndpointContainerType left, OriginEndpointContainerType right) => left.Equals(right);
        public static bool operator !=(OriginEndpointContainerType left, OriginEndpointContainerType right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointContainerType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointContainerType other && Equals(other);
        public bool Equals(OriginEndpointContainerType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointDashCompactness : IEquatable<OriginEndpointDashCompactness>
    {
        private readonly string _value;

        private OriginEndpointDashCompactness(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointDashCompactness Standard { get; } = new OriginEndpointDashCompactness("STANDARD");
        public static OriginEndpointDashCompactness None { get; } = new OriginEndpointDashCompactness("NONE");

        public static bool operator ==(OriginEndpointDashCompactness left, OriginEndpointDashCompactness right) => left.Equals(right);
        public static bool operator !=(OriginEndpointDashCompactness left, OriginEndpointDashCompactness right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointDashCompactness value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointDashCompactness other && Equals(other);
        public bool Equals(OriginEndpointDashCompactness other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointDashDrmSignaling : IEquatable<OriginEndpointDashDrmSignaling>
    {
        private readonly string _value;

        private OriginEndpointDashDrmSignaling(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointDashDrmSignaling Individual { get; } = new OriginEndpointDashDrmSignaling("INDIVIDUAL");
        public static OriginEndpointDashDrmSignaling Referenced { get; } = new OriginEndpointDashDrmSignaling("REFERENCED");

        public static bool operator ==(OriginEndpointDashDrmSignaling left, OriginEndpointDashDrmSignaling right) => left.Equals(right);
        public static bool operator !=(OriginEndpointDashDrmSignaling left, OriginEndpointDashDrmSignaling right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointDashDrmSignaling value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointDashDrmSignaling other && Equals(other);
        public bool Equals(OriginEndpointDashDrmSignaling other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointDashPeriodTrigger : IEquatable<OriginEndpointDashPeriodTrigger>
    {
        private readonly string _value;

        private OriginEndpointDashPeriodTrigger(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointDashPeriodTrigger Avails { get; } = new OriginEndpointDashPeriodTrigger("AVAILS");
        public static OriginEndpointDashPeriodTrigger DrmKeyRotation { get; } = new OriginEndpointDashPeriodTrigger("DRM_KEY_ROTATION");
        public static OriginEndpointDashPeriodTrigger SourceChanges { get; } = new OriginEndpointDashPeriodTrigger("SOURCE_CHANGES");
        public static OriginEndpointDashPeriodTrigger SourceDisruptions { get; } = new OriginEndpointDashPeriodTrigger("SOURCE_DISRUPTIONS");
        public static OriginEndpointDashPeriodTrigger None { get; } = new OriginEndpointDashPeriodTrigger("NONE");

        public static bool operator ==(OriginEndpointDashPeriodTrigger left, OriginEndpointDashPeriodTrigger right) => left.Equals(right);
        public static bool operator !=(OriginEndpointDashPeriodTrigger left, OriginEndpointDashPeriodTrigger right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointDashPeriodTrigger value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointDashPeriodTrigger other && Equals(other);
        public bool Equals(OriginEndpointDashPeriodTrigger other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointDashProfile : IEquatable<OriginEndpointDashProfile>
    {
        private readonly string _value;

        private OriginEndpointDashProfile(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointDashProfile DvbDash { get; } = new OriginEndpointDashProfile("DVB_DASH");

        public static bool operator ==(OriginEndpointDashProfile left, OriginEndpointDashProfile right) => left.Equals(right);
        public static bool operator !=(OriginEndpointDashProfile left, OriginEndpointDashProfile right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointDashProfile value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointDashProfile other && Equals(other);
        public bool Equals(OriginEndpointDashProfile other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointDashSegmentTemplateFormat : IEquatable<OriginEndpointDashSegmentTemplateFormat>
    {
        private readonly string _value;

        private OriginEndpointDashSegmentTemplateFormat(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointDashSegmentTemplateFormat NumberWithTimeline { get; } = new OriginEndpointDashSegmentTemplateFormat("NUMBER_WITH_TIMELINE");

        public static bool operator ==(OriginEndpointDashSegmentTemplateFormat left, OriginEndpointDashSegmentTemplateFormat right) => left.Equals(right);
        public static bool operator !=(OriginEndpointDashSegmentTemplateFormat left, OriginEndpointDashSegmentTemplateFormat right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointDashSegmentTemplateFormat value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointDashSegmentTemplateFormat other && Equals(other);
        public bool Equals(OriginEndpointDashSegmentTemplateFormat other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointDashTtmlProfile : IEquatable<OriginEndpointDashTtmlProfile>
    {
        private readonly string _value;

        private OriginEndpointDashTtmlProfile(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointDashTtmlProfile Imsc1 { get; } = new OriginEndpointDashTtmlProfile("IMSC_1");
        public static OriginEndpointDashTtmlProfile EbuTtD101 { get; } = new OriginEndpointDashTtmlProfile("EBU_TT_D_101");

        public static bool operator ==(OriginEndpointDashTtmlProfile left, OriginEndpointDashTtmlProfile right) => left.Equals(right);
        public static bool operator !=(OriginEndpointDashTtmlProfile left, OriginEndpointDashTtmlProfile right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointDashTtmlProfile value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointDashTtmlProfile other && Equals(other);
        public bool Equals(OriginEndpointDashTtmlProfile other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointDashUtcTimingMode : IEquatable<OriginEndpointDashUtcTimingMode>
    {
        private readonly string _value;

        private OriginEndpointDashUtcTimingMode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointDashUtcTimingMode HttpHead { get; } = new OriginEndpointDashUtcTimingMode("HTTP_HEAD");
        public static OriginEndpointDashUtcTimingMode HttpIso { get; } = new OriginEndpointDashUtcTimingMode("HTTP_ISO");
        public static OriginEndpointDashUtcTimingMode HttpXsdate { get; } = new OriginEndpointDashUtcTimingMode("HTTP_XSDATE");
        public static OriginEndpointDashUtcTimingMode UtcDirect { get; } = new OriginEndpointDashUtcTimingMode("UTC_DIRECT");

        public static bool operator ==(OriginEndpointDashUtcTimingMode left, OriginEndpointDashUtcTimingMode right) => left.Equals(right);
        public static bool operator !=(OriginEndpointDashUtcTimingMode left, OriginEndpointDashUtcTimingMode right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointDashUtcTimingMode value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointDashUtcTimingMode other && Equals(other);
        public bool Equals(OriginEndpointDashUtcTimingMode other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointDrmSystem : IEquatable<OriginEndpointDrmSystem>
    {
        private readonly string _value;

        private OriginEndpointDrmSystem(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointDrmSystem ClearKeyAes128 { get; } = new OriginEndpointDrmSystem("CLEAR_KEY_AES_128");
        public static OriginEndpointDrmSystem Fairplay { get; } = new OriginEndpointDrmSystem("FAIRPLAY");
        public static OriginEndpointDrmSystem Playready { get; } = new OriginEndpointDrmSystem("PLAYREADY");
        public static OriginEndpointDrmSystem Widevine { get; } = new OriginEndpointDrmSystem("WIDEVINE");
        public static OriginEndpointDrmSystem Irdeto { get; } = new OriginEndpointDrmSystem("IRDETO");

        public static bool operator ==(OriginEndpointDrmSystem left, OriginEndpointDrmSystem right) => left.Equals(right);
        public static bool operator !=(OriginEndpointDrmSystem left, OriginEndpointDrmSystem right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointDrmSystem value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointDrmSystem other && Equals(other);
        public bool Equals(OriginEndpointDrmSystem other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointEndpointErrorCondition : IEquatable<OriginEndpointEndpointErrorCondition>
    {
        private readonly string _value;

        private OriginEndpointEndpointErrorCondition(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointEndpointErrorCondition StaleManifest { get; } = new OriginEndpointEndpointErrorCondition("STALE_MANIFEST");
        public static OriginEndpointEndpointErrorCondition IncompleteManifest { get; } = new OriginEndpointEndpointErrorCondition("INCOMPLETE_MANIFEST");
        public static OriginEndpointEndpointErrorCondition MissingDrmKey { get; } = new OriginEndpointEndpointErrorCondition("MISSING_DRM_KEY");
        public static OriginEndpointEndpointErrorCondition SlateInput { get; } = new OriginEndpointEndpointErrorCondition("SLATE_INPUT");

        public static bool operator ==(OriginEndpointEndpointErrorCondition left, OriginEndpointEndpointErrorCondition right) => left.Equals(right);
        public static bool operator !=(OriginEndpointEndpointErrorCondition left, OriginEndpointEndpointErrorCondition right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointEndpointErrorCondition value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointEndpointErrorCondition other && Equals(other);
        public bool Equals(OriginEndpointEndpointErrorCondition other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointIsmEncryptionMethod : IEquatable<OriginEndpointIsmEncryptionMethod>
    {
        private readonly string _value;

        private OriginEndpointIsmEncryptionMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointIsmEncryptionMethod Cenc { get; } = new OriginEndpointIsmEncryptionMethod("CENC");

        public static bool operator ==(OriginEndpointIsmEncryptionMethod left, OriginEndpointIsmEncryptionMethod right) => left.Equals(right);
        public static bool operator !=(OriginEndpointIsmEncryptionMethod left, OriginEndpointIsmEncryptionMethod right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointIsmEncryptionMethod value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointIsmEncryptionMethod other && Equals(other);
        public bool Equals(OriginEndpointIsmEncryptionMethod other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointMssManifestLayout : IEquatable<OriginEndpointMssManifestLayout>
    {
        private readonly string _value;

        private OriginEndpointMssManifestLayout(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointMssManifestLayout Full { get; } = new OriginEndpointMssManifestLayout("FULL");
        public static OriginEndpointMssManifestLayout Compact { get; } = new OriginEndpointMssManifestLayout("COMPACT");

        public static bool operator ==(OriginEndpointMssManifestLayout left, OriginEndpointMssManifestLayout right) => left.Equals(right);
        public static bool operator !=(OriginEndpointMssManifestLayout left, OriginEndpointMssManifestLayout right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointMssManifestLayout value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointMssManifestLayout other && Equals(other);
        public bool Equals(OriginEndpointMssManifestLayout other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointPresetSpeke20Audio : IEquatable<OriginEndpointPresetSpeke20Audio>
    {
        private readonly string _value;

        private OriginEndpointPresetSpeke20Audio(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointPresetSpeke20Audio PresetAudio1 { get; } = new OriginEndpointPresetSpeke20Audio("PRESET_AUDIO_1");
        public static OriginEndpointPresetSpeke20Audio PresetAudio2 { get; } = new OriginEndpointPresetSpeke20Audio("PRESET_AUDIO_2");
        public static OriginEndpointPresetSpeke20Audio PresetAudio3 { get; } = new OriginEndpointPresetSpeke20Audio("PRESET_AUDIO_3");
        public static OriginEndpointPresetSpeke20Audio Shared { get; } = new OriginEndpointPresetSpeke20Audio("SHARED");
        public static OriginEndpointPresetSpeke20Audio Unencrypted { get; } = new OriginEndpointPresetSpeke20Audio("UNENCRYPTED");

        public static bool operator ==(OriginEndpointPresetSpeke20Audio left, OriginEndpointPresetSpeke20Audio right) => left.Equals(right);
        public static bool operator !=(OriginEndpointPresetSpeke20Audio left, OriginEndpointPresetSpeke20Audio right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointPresetSpeke20Audio value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointPresetSpeke20Audio other && Equals(other);
        public bool Equals(OriginEndpointPresetSpeke20Audio other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointPresetSpeke20Video : IEquatable<OriginEndpointPresetSpeke20Video>
    {
        private readonly string _value;

        private OriginEndpointPresetSpeke20Video(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointPresetSpeke20Video PresetVideo1 { get; } = new OriginEndpointPresetSpeke20Video("PRESET_VIDEO_1");
        public static OriginEndpointPresetSpeke20Video PresetVideo2 { get; } = new OriginEndpointPresetSpeke20Video("PRESET_VIDEO_2");
        public static OriginEndpointPresetSpeke20Video PresetVideo3 { get; } = new OriginEndpointPresetSpeke20Video("PRESET_VIDEO_3");
        public static OriginEndpointPresetSpeke20Video PresetVideo4 { get; } = new OriginEndpointPresetSpeke20Video("PRESET_VIDEO_4");
        public static OriginEndpointPresetSpeke20Video PresetVideo5 { get; } = new OriginEndpointPresetSpeke20Video("PRESET_VIDEO_5");
        public static OriginEndpointPresetSpeke20Video PresetVideo6 { get; } = new OriginEndpointPresetSpeke20Video("PRESET_VIDEO_6");
        public static OriginEndpointPresetSpeke20Video PresetVideo7 { get; } = new OriginEndpointPresetSpeke20Video("PRESET_VIDEO_7");
        public static OriginEndpointPresetSpeke20Video PresetVideo8 { get; } = new OriginEndpointPresetSpeke20Video("PRESET_VIDEO_8");
        public static OriginEndpointPresetSpeke20Video Shared { get; } = new OriginEndpointPresetSpeke20Video("SHARED");
        public static OriginEndpointPresetSpeke20Video Unencrypted { get; } = new OriginEndpointPresetSpeke20Video("UNENCRYPTED");

        public static bool operator ==(OriginEndpointPresetSpeke20Video left, OriginEndpointPresetSpeke20Video right) => left.Equals(right);
        public static bool operator !=(OriginEndpointPresetSpeke20Video left, OriginEndpointPresetSpeke20Video right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointPresetSpeke20Video value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointPresetSpeke20Video other && Equals(other);
        public bool Equals(OriginEndpointPresetSpeke20Video other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointScteFilter : IEquatable<OriginEndpointScteFilter>
    {
        private readonly string _value;

        private OriginEndpointScteFilter(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointScteFilter SpliceInsert { get; } = new OriginEndpointScteFilter("SPLICE_INSERT");
        public static OriginEndpointScteFilter Break { get; } = new OriginEndpointScteFilter("BREAK");
        public static OriginEndpointScteFilter ProviderAdvertisement { get; } = new OriginEndpointScteFilter("PROVIDER_ADVERTISEMENT");
        public static OriginEndpointScteFilter DistributorAdvertisement { get; } = new OriginEndpointScteFilter("DISTRIBUTOR_ADVERTISEMENT");
        public static OriginEndpointScteFilter ProviderPlacementOpportunity { get; } = new OriginEndpointScteFilter("PROVIDER_PLACEMENT_OPPORTUNITY");
        public static OriginEndpointScteFilter DistributorPlacementOpportunity { get; } = new OriginEndpointScteFilter("DISTRIBUTOR_PLACEMENT_OPPORTUNITY");
        public static OriginEndpointScteFilter ProviderOverlayPlacementOpportunity { get; } = new OriginEndpointScteFilter("PROVIDER_OVERLAY_PLACEMENT_OPPORTUNITY");
        public static OriginEndpointScteFilter DistributorOverlayPlacementOpportunity { get; } = new OriginEndpointScteFilter("DISTRIBUTOR_OVERLAY_PLACEMENT_OPPORTUNITY");
        public static OriginEndpointScteFilter Program { get; } = new OriginEndpointScteFilter("PROGRAM");

        public static bool operator ==(OriginEndpointScteFilter left, OriginEndpointScteFilter right) => left.Equals(right);
        public static bool operator !=(OriginEndpointScteFilter left, OriginEndpointScteFilter right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointScteFilter value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointScteFilter other && Equals(other);
        public bool Equals(OriginEndpointScteFilter other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct OriginEndpointTsEncryptionMethod : IEquatable<OriginEndpointTsEncryptionMethod>
    {
        private readonly string _value;

        private OriginEndpointTsEncryptionMethod(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static OriginEndpointTsEncryptionMethod Aes128 { get; } = new OriginEndpointTsEncryptionMethod("AES_128");
        public static OriginEndpointTsEncryptionMethod SampleAes { get; } = new OriginEndpointTsEncryptionMethod("SAMPLE_AES");

        public static bool operator ==(OriginEndpointTsEncryptionMethod left, OriginEndpointTsEncryptionMethod right) => left.Equals(right);
        public static bool operator !=(OriginEndpointTsEncryptionMethod left, OriginEndpointTsEncryptionMethod right) => !left.Equals(right);

        public static explicit operator string(OriginEndpointTsEncryptionMethod value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is OriginEndpointTsEncryptionMethod other && Equals(other);
        public bool Equals(OriginEndpointTsEncryptionMethod other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
