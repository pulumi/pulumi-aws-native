// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.Backup
{
    [EnumType]
    public readonly struct RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm : IEquatable<RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm>
    {
        private readonly string _value;

        private RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm LatestWithinWindow { get; } = new RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm("LATEST_WITHIN_WINDOW");
        public static RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm RandomWithinWindow { get; } = new RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm("RANDOM_WITHIN_WINDOW");

        public static bool operator ==(RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm left, RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm right) => left.Equals(right);
        public static bool operator !=(RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm left, RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm right) => !left.Equals(right);

        public static explicit operator string(RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm other && Equals(other);
        public bool Equals(RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct RestoreTestingPlanRestoreTestingRecoveryPointType : IEquatable<RestoreTestingPlanRestoreTestingRecoveryPointType>
    {
        private readonly string _value;

        private RestoreTestingPlanRestoreTestingRecoveryPointType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static RestoreTestingPlanRestoreTestingRecoveryPointType Snapshot { get; } = new RestoreTestingPlanRestoreTestingRecoveryPointType("SNAPSHOT");
        public static RestoreTestingPlanRestoreTestingRecoveryPointType Continuous { get; } = new RestoreTestingPlanRestoreTestingRecoveryPointType("CONTINUOUS");

        public static bool operator ==(RestoreTestingPlanRestoreTestingRecoveryPointType left, RestoreTestingPlanRestoreTestingRecoveryPointType right) => left.Equals(right);
        public static bool operator !=(RestoreTestingPlanRestoreTestingRecoveryPointType left, RestoreTestingPlanRestoreTestingRecoveryPointType right) => !left.Equals(right);

        public static explicit operator string(RestoreTestingPlanRestoreTestingRecoveryPointType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is RestoreTestingPlanRestoreTestingRecoveryPointType other && Equals(other);
        public bool Equals(RestoreTestingPlanRestoreTestingRecoveryPointType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
