// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Backup
{
    public static class GetBackupPlan
    {
        /// <summary>
        /// Resource Type definition for AWS::Backup::BackupPlan
        /// </summary>
        public static Task<GetBackupPlanResult> InvokeAsync(GetBackupPlanArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupPlanResult>("aws-native:backup:getBackupPlan", args ?? new GetBackupPlanArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Backup::BackupPlan
        /// </summary>
        public static Output<GetBackupPlanResult> Invoke(GetBackupPlanInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupPlanResult>("aws-native:backup:getBackupPlan", args ?? new GetBackupPlanInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Backup::BackupPlan
        /// </summary>
        public static Output<GetBackupPlanResult> Invoke(GetBackupPlanInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupPlanResult>("aws-native:backup:getBackupPlan", args ?? new GetBackupPlanInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupPlanArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies a backup plan.
        /// </summary>
        [Input("backupPlanId", required: true)]
        public string BackupPlanId { get; set; } = null!;

        public GetBackupPlanArgs()
        {
        }
        public static new GetBackupPlanArgs Empty => new GetBackupPlanArgs();
    }

    public sealed class GetBackupPlanInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Uniquely identifies a backup plan.
        /// </summary>
        [Input("backupPlanId", required: true)]
        public Input<string> BackupPlanId { get; set; } = null!;

        public GetBackupPlanInvokeArgs()
        {
        }
        public static new GetBackupPlanInvokeArgs Empty => new GetBackupPlanInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupPlanResult
    {
        /// <summary>
        /// Uniquely identifies the backup plan to be associated with the selection of resources.
        /// </summary>
        public readonly Outputs.BackupPlanResourceType? BackupPlanValue;
        /// <summary>
        /// An Amazon Resource Name (ARN) that uniquely identifies a backup plan; for example, `arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50` .
        /// </summary>
        public readonly string? BackupPlanArn;
        /// <summary>
        /// Uniquely identifies a backup plan.
        /// </summary>
        public readonly string? BackupPlanId;
        /// <summary>
        /// The tags to assign to the backup plan.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? BackupPlanTags;
        /// <summary>
        /// Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version Ids cannot be edited.
        /// </summary>
        public readonly string? VersionId;

        [OutputConstructor]
        private GetBackupPlanResult(
            Outputs.BackupPlanResourceType? backupPlan,

            string? backupPlanArn,

            string? backupPlanId,

            ImmutableDictionary<string, string>? backupPlanTags,

            string? versionId)
        {
            BackupPlanValue = backupPlan;
            BackupPlanArn = backupPlanArn;
            BackupPlanId = backupPlanId;
            BackupPlanTags = backupPlanTags;
            VersionId = versionId;
        }
    }
}
