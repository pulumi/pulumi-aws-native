// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Backup.Outputs
{

    /// <summary>
    /// A list of conditions that you define to assign resources to your backup plans using tags. For example, `"StringEquals": { "ConditionKey": "aws:ResourceTag/CreatedByCryo", "ConditionValue": "true" },` . Condition operators are case sensitive.
    /// 
    /// `Conditions` differs from `ListOfTags` as follows:
    /// 
    /// - When you specify more than one condition, you only assign the resources that match ALL conditions (using AND logic).
    /// - `Conditions` supports `StringEquals` , `StringLike` , `StringNotEquals` , and `StringNotLike` . `ListOfTags` only supports `StringEquals` .
    /// </summary>
    [OutputType]
    public sealed class BackupSelectionResourceTypeConditionsProperties
    {
        public readonly ImmutableArray<Outputs.BackupSelectionConditionParameter> StringEquals;
        public readonly ImmutableArray<Outputs.BackupSelectionConditionParameter> StringLike;
        public readonly ImmutableArray<Outputs.BackupSelectionConditionParameter> StringNotEquals;
        public readonly ImmutableArray<Outputs.BackupSelectionConditionParameter> StringNotLike;

        [OutputConstructor]
        private BackupSelectionResourceTypeConditionsProperties(
            ImmutableArray<Outputs.BackupSelectionConditionParameter> stringEquals,

            ImmutableArray<Outputs.BackupSelectionConditionParameter> stringLike,

            ImmutableArray<Outputs.BackupSelectionConditionParameter> stringNotEquals,

            ImmutableArray<Outputs.BackupSelectionConditionParameter> stringNotLike)
        {
            StringEquals = stringEquals;
            StringLike = stringLike;
            StringNotEquals = stringNotEquals;
            StringNotLike = stringNotLike;
        }
    }
}
