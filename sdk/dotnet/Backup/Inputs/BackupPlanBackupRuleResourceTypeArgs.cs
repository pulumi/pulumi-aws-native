// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Backup.Inputs
{

    public sealed class BackupPlanBackupRuleResourceTypeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A value in minutes after a backup job is successfully started before it must be completed or it is canceled by AWS Backup .
        /// </summary>
        [Input("completionWindowMinutes")]
        public Input<double>? CompletionWindowMinutes { get; set; }

        [Input("copyActions")]
        private InputList<Inputs.BackupPlanCopyActionResourceTypeArgs>? _copyActions;

        /// <summary>
        /// Copies backups created by a backup rule to another vault.
        /// </summary>
        public InputList<Inputs.BackupPlanCopyActionResourceTypeArgs> CopyActions
        {
            get => _copyActions ?? (_copyActions = new InputList<Inputs.BackupPlanCopyActionResourceTypeArgs>());
            set => _copyActions = value;
        }

        /// <summary>
        /// Enables continuous backup and point-in-time restores (PITR).
        /// </summary>
        [Input("enableContinuousBackup")]
        public Input<bool>? EnableContinuousBackup { get; set; }

        /// <summary>
        /// Specifies an object containing an array of `Transition` objects that determine how long in days before a recovery point transitions to cold storage or is deleted.
        /// </summary>
        [Input("lifecycle")]
        public Input<Inputs.BackupPlanLifecycleResourceTypeArgs>? Lifecycle { get; set; }

        [Input("recoveryPointTags")]
        private InputMap<string>? _recoveryPointTags;

        /// <summary>
        /// The tags to assign to the resources.
        /// </summary>
        public InputMap<string> RecoveryPointTags
        {
            get => _recoveryPointTags ?? (_recoveryPointTags = new InputMap<string>());
            set => _recoveryPointTags = value;
        }

        /// <summary>
        /// A display name for a backup rule.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        /// <summary>
        /// A CRON expression specifying when AWS Backup initiates a backup job.
        /// </summary>
        [Input("scheduleExpression")]
        public Input<string>? ScheduleExpression { get; set; }

        /// <summary>
        /// This is the timezone in which the schedule expression is set. By default, ScheduleExpressions are in UTC. You can modify this to a specified timezone.
        /// </summary>
        [Input("scheduleExpressionTimezone")]
        public Input<string>? ScheduleExpressionTimezone { get; set; }

        /// <summary>
        /// An optional value that specifies a period of time in minutes after a backup is scheduled before a job is canceled if it doesn't start successfully.
        /// 
        /// If this value is included, it must be at least 60 minutes to avoid errors.
        /// </summary>
        [Input("startWindowMinutes")]
        public Input<double>? StartWindowMinutes { get; set; }

        /// <summary>
        /// The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created. They consist of letters, numbers, and hyphens.
        /// </summary>
        [Input("targetBackupVault", required: true)]
        public Input<string> TargetBackupVault { get; set; } = null!;

        public BackupPlanBackupRuleResourceTypeArgs()
        {
        }
        public static new BackupPlanBackupRuleResourceTypeArgs Empty => new BackupPlanBackupRuleResourceTypeArgs();
    }
}
