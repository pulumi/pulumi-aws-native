// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Backup.Inputs
{

    public sealed class BackupSelectionResourceTypeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A list of conditions that you define to assign resources to your backup plans using tags. For example, `"StringEquals": { "ConditionKey": "aws:ResourceTag/CreatedByCryo", "ConditionValue": "true" },` . Condition operators are case sensitive.
        /// 
        /// `Conditions` differs from `ListOfTags` as follows:
        /// 
        /// - When you specify more than one condition, you only assign the resources that match ALL conditions (using AND logic).
        /// - `Conditions` supports `StringEquals` , `StringLike` , `StringNotEquals` , and `StringNotLike` . `ListOfTags` only supports `StringEquals` .
        /// </summary>
        [Input("conditions")]
        public Input<Inputs.BackupSelectionResourceTypeConditionsPropertiesArgs>? Conditions { get; set; }

        /// <summary>
        /// The ARN of the IAM role that AWS Backup uses to authenticate when backing up the target resource; for example, `arn:aws:iam::123456789012:role/S3Access` .
        /// </summary>
        [Input("iamRoleArn", required: true)]
        public Input<string> IamRoleArn { get; set; } = null!;

        [Input("listOfTags")]
        private InputList<Inputs.BackupSelectionConditionResourceTypeArgs>? _listOfTags;

        /// <summary>
        /// Specifies an object that contains an array of triplets made up of a condition type (such as `STRINGEQUALS` ), a key, and a value. Conditions are used to filter resources in a selection that is assigned to a backup plan.
        /// </summary>
        public InputList<Inputs.BackupSelectionConditionResourceTypeArgs> ListOfTags
        {
            get => _listOfTags ?? (_listOfTags = new InputList<Inputs.BackupSelectionConditionResourceTypeArgs>());
            set => _listOfTags = value;
        }

        [Input("notResources")]
        private InputList<string>? _notResources;

        /// <summary>
        /// A list of Amazon Resource Names (ARNs) to exclude from a backup plan. The maximum number of ARNs is 500 without wildcards, or 30 ARNs with wildcards.
        /// 
        /// If you need to exclude many resources from a backup plan, consider a different resource selection strategy, such as assigning only one or a few resource types or refining your resource selection using tags.
        /// </summary>
        public InputList<string> NotResources
        {
            get => _notResources ?? (_notResources = new InputList<string>());
            set => _notResources = value;
        }

        [Input("resources")]
        private InputList<string>? _resources;

        /// <summary>
        /// An array of strings that contain Amazon Resource Names (ARNs) of resources to assign to a backup plan.
        /// </summary>
        public InputList<string> Resources
        {
            get => _resources ?? (_resources = new InputList<string>());
            set => _resources = value;
        }

        /// <summary>
        /// The display name of a resource selection document.
        /// </summary>
        [Input("selectionName", required: true)]
        public Input<string> SelectionName { get; set; } = null!;

        public BackupSelectionResourceTypeArgs()
        {
        }
        public static new BackupSelectionResourceTypeArgs Empty => new BackupSelectionResourceTypeArgs();
    }
}
