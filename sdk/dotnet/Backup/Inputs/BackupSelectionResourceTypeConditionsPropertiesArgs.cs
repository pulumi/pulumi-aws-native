// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Backup.Inputs
{

    /// <summary>
    /// A list of conditions that you define to assign resources to your backup plans using tags. For example, `"StringEquals": { "ConditionKey": "aws:ResourceTag/CreatedByCryo", "ConditionValue": "true" },` . Condition operators are case sensitive.
    /// 
    /// `Conditions` differs from `ListOfTags` as follows:
    /// 
    /// - When you specify more than one condition, you only assign the resources that match ALL conditions (using AND logic).
    /// - `Conditions` supports `StringEquals` , `StringLike` , `StringNotEquals` , and `StringNotLike` . `ListOfTags` only supports `StringEquals` .
    /// </summary>
    public sealed class BackupSelectionResourceTypeConditionsPropertiesArgs : global::Pulumi.ResourceArgs
    {
        [Input("stringEquals")]
        private InputList<Inputs.BackupSelectionConditionParameterArgs>? _stringEquals;
        public InputList<Inputs.BackupSelectionConditionParameterArgs> StringEquals
        {
            get => _stringEquals ?? (_stringEquals = new InputList<Inputs.BackupSelectionConditionParameterArgs>());
            set => _stringEquals = value;
        }

        [Input("stringLike")]
        private InputList<Inputs.BackupSelectionConditionParameterArgs>? _stringLike;
        public InputList<Inputs.BackupSelectionConditionParameterArgs> StringLike
        {
            get => _stringLike ?? (_stringLike = new InputList<Inputs.BackupSelectionConditionParameterArgs>());
            set => _stringLike = value;
        }

        [Input("stringNotEquals")]
        private InputList<Inputs.BackupSelectionConditionParameterArgs>? _stringNotEquals;
        public InputList<Inputs.BackupSelectionConditionParameterArgs> StringNotEquals
        {
            get => _stringNotEquals ?? (_stringNotEquals = new InputList<Inputs.BackupSelectionConditionParameterArgs>());
            set => _stringNotEquals = value;
        }

        [Input("stringNotLike")]
        private InputList<Inputs.BackupSelectionConditionParameterArgs>? _stringNotLike;
        public InputList<Inputs.BackupSelectionConditionParameterArgs> StringNotLike
        {
            get => _stringNotLike ?? (_stringNotLike = new InputList<Inputs.BackupSelectionConditionParameterArgs>());
            set => _stringNotLike = value;
        }

        public BackupSelectionResourceTypeConditionsPropertiesArgs()
        {
        }
        public static new BackupSelectionResourceTypeConditionsPropertiesArgs Empty => new BackupSelectionResourceTypeConditionsPropertiesArgs();
    }
}
