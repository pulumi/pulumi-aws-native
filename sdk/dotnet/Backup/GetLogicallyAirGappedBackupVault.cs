// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Backup
{
    public static class GetLogicallyAirGappedBackupVault
    {
        /// <summary>
        /// Resource Type definition for AWS::Backup::LogicallyAirGappedBackupVault
        /// </summary>
        public static Task<GetLogicallyAirGappedBackupVaultResult> InvokeAsync(GetLogicallyAirGappedBackupVaultArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogicallyAirGappedBackupVaultResult>("aws-native:backup:getLogicallyAirGappedBackupVault", args ?? new GetLogicallyAirGappedBackupVaultArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Backup::LogicallyAirGappedBackupVault
        /// </summary>
        public static Output<GetLogicallyAirGappedBackupVaultResult> Invoke(GetLogicallyAirGappedBackupVaultInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogicallyAirGappedBackupVaultResult>("aws-native:backup:getLogicallyAirGappedBackupVault", args ?? new GetLogicallyAirGappedBackupVaultInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogicallyAirGappedBackupVaultArgs : global::Pulumi.InvokeArgs
    {
        [Input("backupVaultName", required: true)]
        public string BackupVaultName { get; set; } = null!;

        public GetLogicallyAirGappedBackupVaultArgs()
        {
        }
        public static new GetLogicallyAirGappedBackupVaultArgs Empty => new GetLogicallyAirGappedBackupVaultArgs();
    }

    public sealed class GetLogicallyAirGappedBackupVaultInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("backupVaultName", required: true)]
        public Input<string> BackupVaultName { get; set; } = null!;

        public GetLogicallyAirGappedBackupVaultInvokeArgs()
        {
        }
        public static new GetLogicallyAirGappedBackupVaultInvokeArgs Empty => new GetLogicallyAirGappedBackupVaultInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogicallyAirGappedBackupVaultResult
    {
        /// <summary>
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Backup::LogicallyAirGappedBackupVault` for more information about the expected schema for this property.
        /// </summary>
        public readonly object? AccessPolicy;
        public readonly string? BackupVaultArn;
        public readonly ImmutableDictionary<string, string>? BackupVaultTags;
        public readonly string? EncryptionKeyArn;
        public readonly Outputs.LogicallyAirGappedBackupVaultNotificationObjectType? Notifications;
        public readonly string? VaultState;
        public readonly string? VaultType;

        [OutputConstructor]
        private GetLogicallyAirGappedBackupVaultResult(
            object? accessPolicy,

            string? backupVaultArn,

            ImmutableDictionary<string, string>? backupVaultTags,

            string? encryptionKeyArn,

            Outputs.LogicallyAirGappedBackupVaultNotificationObjectType? notifications,

            string? vaultState,

            string? vaultType)
        {
            AccessPolicy = accessPolicy;
            BackupVaultArn = backupVaultArn;
            BackupVaultTags = backupVaultTags;
            EncryptionKeyArn = encryptionKeyArn;
            Notifications = notifications;
            VaultState = vaultState;
            VaultType = vaultType;
        }
    }
}
