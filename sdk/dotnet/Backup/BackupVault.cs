// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Backup
{
    /// <summary>
    /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html
    /// </summary>
    [AwsNativeResourceType("aws-native:Backup:BackupVault")]
    public partial class BackupVault : Pulumi.CustomResource
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-accesspolicy
        /// </summary>
        [Output("accessPolicy")]
        public Output<Union<System.Text.Json.JsonElement, string>?> AccessPolicy { get; private set; } = null!;

        [Output("backupVaultArn")]
        public Output<string> BackupVaultArn { get; private set; } = null!;

        [Output("backupVaultName")]
        public Output<string> BackupVaultName { get; private set; } = null!;

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaulttags
        /// </summary>
        [Output("backupVaultTags")]
        public Output<Union<System.Text.Json.JsonElement, string>?> BackupVaultTags { get; private set; } = null!;

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-encryptionkeyarn
        /// </summary>
        [Output("encryptionKeyArn")]
        public Output<string?> EncryptionKeyArn { get; private set; } = null!;

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-notifications
        /// </summary>
        [Output("notifications")]
        public Output<Outputs.BackupVaultNotificationObjectType?> Notifications { get; private set; } = null!;


        /// <summary>
        /// Create a BackupVault resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupVault(string name, BackupVaultArgs args, CustomResourceOptions? options = null)
            : base("aws-native:Backup:BackupVault", name, args ?? new BackupVaultArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupVault(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:Backup:BackupVault", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupVault resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupVault Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new BackupVault(name, id, options);
        }
    }

    public sealed class BackupVaultArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-accesspolicy
        /// </summary>
        [Input("accessPolicy")]
        public InputUnion<System.Text.Json.JsonElement, string>? AccessPolicy { get; set; }

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaultname
        /// </summary>
        [Input("backupVaultName", required: true)]
        public Input<string> BackupVaultName { get; set; } = null!;

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaulttags
        /// </summary>
        [Input("backupVaultTags")]
        public InputUnion<System.Text.Json.JsonElement, string>? BackupVaultTags { get; set; }

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-encryptionkeyarn
        /// </summary>
        [Input("encryptionKeyArn")]
        public Input<string>? EncryptionKeyArn { get; set; }

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-notifications
        /// </summary>
        [Input("notifications")]
        public Input<Inputs.BackupVaultNotificationObjectTypeArgs>? Notifications { get; set; }

        public BackupVaultArgs()
        {
        }
    }
}
