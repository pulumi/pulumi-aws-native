// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RefactorSpaces
{
    public static class GetApplication
    {
        /// <summary>
        /// Definition of AWS::RefactorSpaces::Application Resource Type
        /// </summary>
        public static Task<GetApplicationResult> InvokeAsync(GetApplicationArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetApplicationResult>("aws-native:refactorspaces:getApplication", args ?? new GetApplicationArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::RefactorSpaces::Application Resource Type
        /// </summary>
        public static Output<GetApplicationResult> Invoke(GetApplicationInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetApplicationResult>("aws-native:refactorspaces:getApplication", args ?? new GetApplicationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationArgs : Pulumi.InvokeArgs
    {
        [Input("applicationIdentifier", required: true)]
        public string ApplicationIdentifier { get; set; } = null!;

        [Input("environmentIdentifier", required: true)]
        public string EnvironmentIdentifier { get; set; } = null!;

        public GetApplicationArgs()
        {
        }
    }

    public sealed class GetApplicationInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("applicationIdentifier", required: true)]
        public Input<string> ApplicationIdentifier { get; set; } = null!;

        [Input("environmentIdentifier", required: true)]
        public Input<string> EnvironmentIdentifier { get; set; } = null!;

        public GetApplicationInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetApplicationResult
    {
        public readonly string? ApiGatewayId;
        public readonly string? ApplicationIdentifier;
        public readonly string? Arn;
        public readonly string? NlbArn;
        public readonly string? NlbName;
        public readonly string? ProxyUrl;
        public readonly string? StageName;
        /// <summary>
        /// Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
        /// </summary>
        public readonly ImmutableArray<Outputs.ApplicationTag> Tags;
        public readonly string? VpcLinkId;

        [OutputConstructor]
        private GetApplicationResult(
            string? apiGatewayId,

            string? applicationIdentifier,

            string? arn,

            string? nlbArn,

            string? nlbName,

            string? proxyUrl,

            string? stageName,

            ImmutableArray<Outputs.ApplicationTag> tags,

            string? vpcLinkId)
        {
            ApiGatewayId = apiGatewayId;
            ApplicationIdentifier = applicationIdentifier;
            Arn = arn;
            NlbArn = nlbArn;
            NlbName = nlbName;
            ProxyUrl = proxyUrl;
            StageName = stageName;
            Tags = tags;
            VpcLinkId = vpcLinkId;
        }
    }
}
