// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RefactorSpaces
{
    public static class GetService
    {
        /// <summary>
        /// Definition of AWS::RefactorSpaces::Service Resource Type
        /// </summary>
        public static Task<GetServiceResult> InvokeAsync(GetServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceResult>("aws-native:refactorspaces:getService", args ?? new GetServiceArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::RefactorSpaces::Service Resource Type
        /// </summary>
        public static Output<GetServiceResult> Invoke(GetServiceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServiceResult>("aws-native:refactorspaces:getService", args ?? new GetServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceArgs : Pulumi.InvokeArgs
    {
        [Input("applicationIdentifier", required: true)]
        public string ApplicationIdentifier { get; set; } = null!;

        [Input("environmentIdentifier", required: true)]
        public string EnvironmentIdentifier { get; set; } = null!;

        [Input("serviceIdentifier", required: true)]
        public string ServiceIdentifier { get; set; } = null!;

        public GetServiceArgs()
        {
        }
    }

    public sealed class GetServiceInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("applicationIdentifier", required: true)]
        public Input<string> ApplicationIdentifier { get; set; } = null!;

        [Input("environmentIdentifier", required: true)]
        public Input<string> EnvironmentIdentifier { get; set; } = null!;

        [Input("serviceIdentifier", required: true)]
        public Input<string> ServiceIdentifier { get; set; } = null!;

        public GetServiceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceResult
    {
        public readonly string? Arn;
        public readonly string? ServiceIdentifier;
        /// <summary>
        /// Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceTag> Tags;

        [OutputConstructor]
        private GetServiceResult(
            string? arn,

            string? serviceIdentifier,

            ImmutableArray<Outputs.ServiceTag> tags)
        {
            Arn = arn;
            ServiceIdentifier = serviceIdentifier;
            Tags = tags;
        }
    }
}
