// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cognito
{
    /// <summary>
    /// Resource Type definition for AWS::Cognito::UserPoolClient
    /// </summary>
    [Obsolete(@"UserPoolClient is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:cognito:UserPoolClient")]
    public partial class UserPoolClient : Pulumi.CustomResource
    {
        [Output("accessTokenValidity")]
        public Output<int?> AccessTokenValidity { get; private set; } = null!;

        [Output("allowedOAuthFlows")]
        public Output<ImmutableArray<string>> AllowedOAuthFlows { get; private set; } = null!;

        [Output("allowedOAuthFlowsUserPoolClient")]
        public Output<bool?> AllowedOAuthFlowsUserPoolClient { get; private set; } = null!;

        [Output("allowedOAuthScopes")]
        public Output<ImmutableArray<string>> AllowedOAuthScopes { get; private set; } = null!;

        [Output("analyticsConfiguration")]
        public Output<Outputs.UserPoolClientAnalyticsConfiguration?> AnalyticsConfiguration { get; private set; } = null!;

        [Output("callbackURLs")]
        public Output<ImmutableArray<string>> CallbackURLs { get; private set; } = null!;

        [Output("clientName")]
        public Output<string?> ClientName { get; private set; } = null!;

        [Output("clientSecret")]
        public Output<string> ClientSecret { get; private set; } = null!;

        [Output("defaultRedirectURI")]
        public Output<string?> DefaultRedirectURI { get; private set; } = null!;

        [Output("enableTokenRevocation")]
        public Output<bool?> EnableTokenRevocation { get; private set; } = null!;

        [Output("explicitAuthFlows")]
        public Output<ImmutableArray<string>> ExplicitAuthFlows { get; private set; } = null!;

        [Output("generateSecret")]
        public Output<bool?> GenerateSecret { get; private set; } = null!;

        [Output("idTokenValidity")]
        public Output<int?> IdTokenValidity { get; private set; } = null!;

        [Output("logoutURLs")]
        public Output<ImmutableArray<string>> LogoutURLs { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("preventUserExistenceErrors")]
        public Output<string?> PreventUserExistenceErrors { get; private set; } = null!;

        [Output("readAttributes")]
        public Output<ImmutableArray<string>> ReadAttributes { get; private set; } = null!;

        [Output("refreshTokenValidity")]
        public Output<int?> RefreshTokenValidity { get; private set; } = null!;

        [Output("supportedIdentityProviders")]
        public Output<ImmutableArray<string>> SupportedIdentityProviders { get; private set; } = null!;

        [Output("tokenValidityUnits")]
        public Output<Outputs.UserPoolClientTokenValidityUnits?> TokenValidityUnits { get; private set; } = null!;

        [Output("userPoolId")]
        public Output<string> UserPoolId { get; private set; } = null!;

        [Output("writeAttributes")]
        public Output<ImmutableArray<string>> WriteAttributes { get; private set; } = null!;


        /// <summary>
        /// Create a UserPoolClient resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserPoolClient(string name, UserPoolClientArgs args, CustomResourceOptions? options = null)
            : base("aws-native:cognito:UserPoolClient", name, args ?? new UserPoolClientArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserPoolClient(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:cognito:UserPoolClient", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserPoolClient resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserPoolClient Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new UserPoolClient(name, id, options);
        }
    }

    public sealed class UserPoolClientArgs : Pulumi.ResourceArgs
    {
        [Input("accessTokenValidity")]
        public Input<int>? AccessTokenValidity { get; set; }

        [Input("allowedOAuthFlows")]
        private InputList<string>? _allowedOAuthFlows;
        public InputList<string> AllowedOAuthFlows
        {
            get => _allowedOAuthFlows ?? (_allowedOAuthFlows = new InputList<string>());
            set => _allowedOAuthFlows = value;
        }

        [Input("allowedOAuthFlowsUserPoolClient")]
        public Input<bool>? AllowedOAuthFlowsUserPoolClient { get; set; }

        [Input("allowedOAuthScopes")]
        private InputList<string>? _allowedOAuthScopes;
        public InputList<string> AllowedOAuthScopes
        {
            get => _allowedOAuthScopes ?? (_allowedOAuthScopes = new InputList<string>());
            set => _allowedOAuthScopes = value;
        }

        [Input("analyticsConfiguration")]
        public Input<Inputs.UserPoolClientAnalyticsConfigurationArgs>? AnalyticsConfiguration { get; set; }

        [Input("callbackURLs")]
        private InputList<string>? _callbackURLs;
        public InputList<string> CallbackURLs
        {
            get => _callbackURLs ?? (_callbackURLs = new InputList<string>());
            set => _callbackURLs = value;
        }

        [Input("clientName")]
        public Input<string>? ClientName { get; set; }

        [Input("defaultRedirectURI")]
        public Input<string>? DefaultRedirectURI { get; set; }

        [Input("enableTokenRevocation")]
        public Input<bool>? EnableTokenRevocation { get; set; }

        [Input("explicitAuthFlows")]
        private InputList<string>? _explicitAuthFlows;
        public InputList<string> ExplicitAuthFlows
        {
            get => _explicitAuthFlows ?? (_explicitAuthFlows = new InputList<string>());
            set => _explicitAuthFlows = value;
        }

        [Input("generateSecret")]
        public Input<bool>? GenerateSecret { get; set; }

        [Input("idTokenValidity")]
        public Input<int>? IdTokenValidity { get; set; }

        [Input("logoutURLs")]
        private InputList<string>? _logoutURLs;
        public InputList<string> LogoutURLs
        {
            get => _logoutURLs ?? (_logoutURLs = new InputList<string>());
            set => _logoutURLs = value;
        }

        [Input("preventUserExistenceErrors")]
        public Input<string>? PreventUserExistenceErrors { get; set; }

        [Input("readAttributes")]
        private InputList<string>? _readAttributes;
        public InputList<string> ReadAttributes
        {
            get => _readAttributes ?? (_readAttributes = new InputList<string>());
            set => _readAttributes = value;
        }

        [Input("refreshTokenValidity")]
        public Input<int>? RefreshTokenValidity { get; set; }

        [Input("supportedIdentityProviders")]
        private InputList<string>? _supportedIdentityProviders;
        public InputList<string> SupportedIdentityProviders
        {
            get => _supportedIdentityProviders ?? (_supportedIdentityProviders = new InputList<string>());
            set => _supportedIdentityProviders = value;
        }

        [Input("tokenValidityUnits")]
        public Input<Inputs.UserPoolClientTokenValidityUnitsArgs>? TokenValidityUnits { get; set; }

        [Input("userPoolId", required: true)]
        public Input<string> UserPoolId { get; set; } = null!;

        [Input("writeAttributes")]
        private InputList<string>? _writeAttributes;
        public InputList<string> WriteAttributes
        {
            get => _writeAttributes ?? (_writeAttributes = new InputList<string>());
            set => _writeAttributes = value;
        }

        public UserPoolClientArgs()
        {
        }
    }
}
