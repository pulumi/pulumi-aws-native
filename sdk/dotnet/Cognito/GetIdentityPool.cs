// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cognito
{
    public static class GetIdentityPool
    {
        /// <summary>
        /// Resource Type definition for AWS::Cognito::IdentityPool
        /// </summary>
        public static Task<GetIdentityPoolResult> InvokeAsync(GetIdentityPoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIdentityPoolResult>("aws-native:cognito:getIdentityPool", args ?? new GetIdentityPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Cognito::IdentityPool
        /// </summary>
        public static Output<GetIdentityPoolResult> Invoke(GetIdentityPoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIdentityPoolResult>("aws-native:cognito:getIdentityPool", args ?? new GetIdentityPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIdentityPoolArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetIdentityPoolArgs()
        {
        }
        public static new GetIdentityPoolArgs Empty => new GetIdentityPoolArgs();
    }

    public sealed class GetIdentityPoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetIdentityPoolInvokeArgs()
        {
        }
        public static new GetIdentityPoolInvokeArgs Empty => new GetIdentityPoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetIdentityPoolResult
    {
        /// <summary>
        /// Enables the Basic (Classic) authentication flow.
        /// </summary>
        public readonly bool? AllowClassicFlow;
        /// <summary>
        /// Specifies whether the identity pool supports unauthenticated logins.
        /// </summary>
        public readonly bool? AllowUnauthenticatedIdentities;
        /// <summary>
        /// The Amazon Cognito user pools and their client IDs.
        /// </summary>
        public readonly ImmutableArray<Outputs.IdentityPoolCognitoIdentityProvider> CognitoIdentityProviders;
        /// <summary>
        /// The "domain" Amazon Cognito uses when referencing your users. This name acts as a placeholder that allows your backend and the Amazon Cognito service to communicate about the developer provider. For the `DeveloperProviderName` , you can use letters and periods (.), underscores (_), and dashes (-).
        /// 
        /// *Minimum length* : 1
        /// 
        /// *Maximum length* : 100
        /// </summary>
        public readonly string? DeveloperProviderName;
        public readonly string? Id;
        /// <summary>
        /// The name of your Amazon Cognito identity pool.
        /// 
        /// *Minimum length* : 1
        /// 
        /// *Maximum length* : 128
        /// 
        /// *Pattern* : `[\w\s+=,.@-]+`
        /// </summary>
        public readonly string? IdentityPoolName;
        /// <summary>
        /// The name of the Amazon Cognito identity pool, returned as a string.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The Amazon Resource Names (ARNs) of the OpenID connect providers.
        /// </summary>
        public readonly ImmutableArray<string> OpenIdConnectProviderArns;
        /// <summary>
        /// The Amazon Resource Names (ARNs) of the Security Assertion Markup Language (SAML) providers.
        /// </summary>
        public readonly ImmutableArray<string> SamlProviderArns;
        /// <summary>
        /// Key-value pairs that map provider names to provider app IDs.
        /// 
        /// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Cognito::IdentityPool` for more information about the expected schema for this property.
        /// </summary>
        public readonly object? SupportedLoginProviders;

        [OutputConstructor]
        private GetIdentityPoolResult(
            bool? allowClassicFlow,

            bool? allowUnauthenticatedIdentities,

            ImmutableArray<Outputs.IdentityPoolCognitoIdentityProvider> cognitoIdentityProviders,

            string? developerProviderName,

            string? id,

            string? identityPoolName,

            string? name,

            ImmutableArray<string> openIdConnectProviderArns,

            ImmutableArray<string> samlProviderArns,

            object? supportedLoginProviders)
        {
            AllowClassicFlow = allowClassicFlow;
            AllowUnauthenticatedIdentities = allowUnauthenticatedIdentities;
            CognitoIdentityProviders = cognitoIdentityProviders;
            DeveloperProviderName = developerProviderName;
            Id = id;
            IdentityPoolName = identityPoolName;
            Name = name;
            OpenIdConnectProviderArns = openIdConnectProviderArns;
            SamlProviderArns = samlProviderArns;
            SupportedLoginProviders = supportedLoginProviders;
        }
    }
}
