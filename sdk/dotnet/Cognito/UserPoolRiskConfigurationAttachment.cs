// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cognito
{
    /// <summary>
    /// Resource Type definition for AWS::Cognito::UserPoolRiskConfigurationAttachment
    /// </summary>
    [AwsNativeResourceType("aws-native:cognito:UserPoolRiskConfigurationAttachment")]
    public partial class UserPoolRiskConfigurationAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The settings for automated responses and notification templates for adaptive authentication with threat protection.
        /// </summary>
        [Output("accountTakeoverRiskConfiguration")]
        public Output<Outputs.UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationType?> AccountTakeoverRiskConfiguration { get; private set; } = null!;

        /// <summary>
        /// The app client where this configuration is applied. When this parameter isn't present, the risk configuration applies to all user pool app clients that don't have client-level settings.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// Settings for compromised-credentials actions and authentication types with threat protection in full-function `ENFORCED` mode.
        /// </summary>
        [Output("compromisedCredentialsRiskConfiguration")]
        public Output<Outputs.UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationType?> CompromisedCredentialsRiskConfiguration { get; private set; } = null!;

        /// <summary>
        /// Exceptions to the risk evaluation configuration, including always-allow and always-block IP address ranges.
        /// </summary>
        [Output("riskExceptionConfiguration")]
        public Output<Outputs.UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationType?> RiskExceptionConfiguration { get; private set; } = null!;

        /// <summary>
        /// The ID of the user pool that has the risk configuration applied.
        /// </summary>
        [Output("userPoolId")]
        public Output<string> UserPoolId { get; private set; } = null!;


        /// <summary>
        /// Create a UserPoolRiskConfigurationAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserPoolRiskConfigurationAttachment(string name, UserPoolRiskConfigurationAttachmentArgs args, CustomResourceOptions? options = null)
            : base("aws-native:cognito:UserPoolRiskConfigurationAttachment", name, args ?? new UserPoolRiskConfigurationAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserPoolRiskConfigurationAttachment(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:cognito:UserPoolRiskConfigurationAttachment", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "clientId",
                    "userPoolId",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserPoolRiskConfigurationAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserPoolRiskConfigurationAttachment Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new UserPoolRiskConfigurationAttachment(name, id, options);
        }
    }

    public sealed class UserPoolRiskConfigurationAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The settings for automated responses and notification templates for adaptive authentication with threat protection.
        /// </summary>
        [Input("accountTakeoverRiskConfiguration")]
        public Input<Inputs.UserPoolRiskConfigurationAttachmentAccountTakeoverRiskConfigurationTypeArgs>? AccountTakeoverRiskConfiguration { get; set; }

        /// <summary>
        /// The app client where this configuration is applied. When this parameter isn't present, the risk configuration applies to all user pool app clients that don't have client-level settings.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// Settings for compromised-credentials actions and authentication types with threat protection in full-function `ENFORCED` mode.
        /// </summary>
        [Input("compromisedCredentialsRiskConfiguration")]
        public Input<Inputs.UserPoolRiskConfigurationAttachmentCompromisedCredentialsRiskConfigurationTypeArgs>? CompromisedCredentialsRiskConfiguration { get; set; }

        /// <summary>
        /// Exceptions to the risk evaluation configuration, including always-allow and always-block IP address ranges.
        /// </summary>
        [Input("riskExceptionConfiguration")]
        public Input<Inputs.UserPoolRiskConfigurationAttachmentRiskExceptionConfigurationTypeArgs>? RiskExceptionConfiguration { get; set; }

        /// <summary>
        /// The ID of the user pool that has the risk configuration applied.
        /// </summary>
        [Input("userPoolId", required: true)]
        public Input<string> UserPoolId { get; set; } = null!;

        public UserPoolRiskConfigurationAttachmentArgs()
        {
        }
        public static new UserPoolRiskConfigurationAttachmentArgs Empty => new UserPoolRiskConfigurationAttachmentArgs();
    }
}
