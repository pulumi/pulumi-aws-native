// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cognito
{
    public static class GetUserPoolGroup
    {
        /// <summary>
        /// Resource Type definition for AWS::Cognito::UserPoolGroup
        /// </summary>
        public static Task<GetUserPoolGroupResult> InvokeAsync(GetUserPoolGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserPoolGroupResult>("aws-native:cognito:getUserPoolGroup", args ?? new GetUserPoolGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Cognito::UserPoolGroup
        /// </summary>
        public static Output<GetUserPoolGroupResult> Invoke(GetUserPoolGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserPoolGroupResult>("aws-native:cognito:getUserPoolGroup", args ?? new GetUserPoolGroupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Cognito::UserPoolGroup
        /// </summary>
        public static Output<GetUserPoolGroupResult> Invoke(GetUserPoolGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserPoolGroupResult>("aws-native:cognito:getUserPoolGroup", args ?? new GetUserPoolGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserPoolGroupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A name for the group. This name must be unique in your user pool.
        /// </summary>
        [Input("groupName", required: true)]
        public string GroupName { get; set; } = null!;

        /// <summary>
        /// The ID of the user pool where you want to create a user group.
        /// </summary>
        [Input("userPoolId", required: true)]
        public string UserPoolId { get; set; } = null!;

        public GetUserPoolGroupArgs()
        {
        }
        public static new GetUserPoolGroupArgs Empty => new GetUserPoolGroupArgs();
    }

    public sealed class GetUserPoolGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A name for the group. This name must be unique in your user pool.
        /// </summary>
        [Input("groupName", required: true)]
        public Input<string> GroupName { get; set; } = null!;

        /// <summary>
        /// The ID of the user pool where you want to create a user group.
        /// </summary>
        [Input("userPoolId", required: true)]
        public Input<string> UserPoolId { get; set; } = null!;

        public GetUserPoolGroupInvokeArgs()
        {
        }
        public static new GetUserPoolGroupInvokeArgs Empty => new GetUserPoolGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserPoolGroupResult
    {
        /// <summary>
        /// A description of the group that you're creating.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A non-negative integer value that specifies the precedence of this group relative to the other groups that a user can belong to in the user pool. Zero is the highest precedence value. Groups with lower `Precedence` values take precedence over groups with higher or null `Precedence` values. If a user belongs to two or more groups, it is the group with the lowest precedence value whose role ARN is given in the user's tokens for the `cognito:roles` and `cognito:preferred_role` claims.
        /// 
        /// Two groups can have the same `Precedence` value. If this happens, neither group takes precedence over the other. If two groups with the same `Precedence` have the same role ARN, that role is used in the `cognito:preferred_role` claim in tokens for users in each group. If the two groups have different role ARNs, the `cognito:preferred_role` claim isn't set in users' tokens.
        /// 
        /// The default `Precedence` value is null. The maximum `Precedence` value is `2^31-1` .
        /// </summary>
        public readonly int? Precedence;
        /// <summary>
        /// The Amazon Resource Name (ARN) for the IAM role that you want to associate with the group. A group role primarily declares a preferred role for the credentials that you get from an identity pool. Amazon Cognito ID tokens have a `cognito:preferred_role` claim that presents the highest-precedence group that a user belongs to. Both ID and access tokens also contain a `cognito:groups` claim that list all the groups that a user is a member of.
        /// </summary>
        public readonly string? RoleArn;

        [OutputConstructor]
        private GetUserPoolGroupResult(
            string? description,

            int? precedence,

            string? roleArn)
        {
            Description = description;
            Precedence = precedence;
            RoleArn = roleArn;
        }
    }
}
