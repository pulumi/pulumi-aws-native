// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cognito.Outputs
{

    [OutputType]
    public sealed class UserPoolLambdaConfig
    {
        /// <summary>
        /// The configuration of a create auth challenge Lambda trigger, one of three triggers in the sequence of the [custom authentication challenge triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html) .
        /// </summary>
        public readonly string? CreateAuthChallenge;
        /// <summary>
        /// The configuration of a custom email sender Lambda trigger. This trigger routes all email notifications from a user pool to a Lambda function that delivers the message using custom logic.
        /// </summary>
        public readonly Outputs.UserPoolCustomEmailSender? CustomEmailSender;
        /// <summary>
        /// A custom message Lambda trigger. This trigger is an opportunity to customize all SMS and email messages from your user pool. When a custom message trigger is active, your user pool routes all messages to a Lambda function that returns a runtime-customized message subject and body for your user pool to deliver to a user.
        /// </summary>
        public readonly string? CustomMessage;
        /// <summary>
        /// The configuration of a custom SMS sender Lambda trigger. This trigger routes all SMS notifications from a user pool to a Lambda function that delivers the message using custom logic.
        /// </summary>
        public readonly Outputs.UserPoolCustomSmsSender? CustomSmsSender;
        /// <summary>
        /// The configuration of a define auth challenge Lambda trigger, one of three triggers in the sequence of the [custom authentication challenge triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html) .
        /// </summary>
        public readonly string? DefineAuthChallenge;
        /// <summary>
        /// The ARN of an [KMS key](https://docs.aws.amazon.com//kms/latest/developerguide/concepts.html#master_keys) . Amazon Cognito uses the key to encrypt codes and temporary passwords sent to custom sender Lambda triggers.
        /// </summary>
        public readonly string? KmsKeyId;
        /// <summary>
        /// The configuration of a [post authentication Lambda trigger](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-authentication.html) in a user pool. This trigger can take custom actions after a user signs in.
        /// </summary>
        public readonly string? PostAuthentication;
        /// <summary>
        /// The configuration of a [post confirmation Lambda trigger](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html) in a user pool. This trigger can take custom actions after a user confirms their user account and their email address or phone number.
        /// </summary>
        public readonly string? PostConfirmation;
        /// <summary>
        /// The configuration of a [pre authentication trigger](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-authentication.html) in a user pool. This trigger can evaluate and modify user sign-in events.
        /// </summary>
        public readonly string? PreAuthentication;
        /// <summary>
        /// The configuration of a [pre sign-up Lambda trigger](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-sign-up.html) in a user pool. This trigger evaluates new users and can bypass confirmation, [link a federated user profile](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-identity-federation-consolidate-users.html) , or block sign-up requests.
        /// </summary>
        public readonly string? PreSignUp;
        /// <summary>
        /// The legacy configuration of a [pre token generation Lambda trigger](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html) in a user pool.
        /// 
        /// Set this parameter for legacy purposes. If you also set an ARN in `PreTokenGenerationConfig` , its value must be identical to `PreTokenGeneration` . For new instances of pre token generation triggers, set the `LambdaArn` of `PreTokenGenerationConfig` .
        /// </summary>
        public readonly string? PreTokenGeneration;
        /// <summary>
        /// The detailed configuration of a [pre token generation Lambda trigger](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html) in a user pool. If you also set an ARN in `PreTokenGeneration` , its value must be identical to `PreTokenGenerationConfig` .
        /// </summary>
        public readonly Outputs.UserPoolPreTokenGenerationConfig? PreTokenGenerationConfig;
        /// <summary>
        /// The configuration of a [migrate user Lambda trigger](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-migrate-user.html) in a user pool. This trigger can create user profiles when users sign in or attempt to reset their password with credentials that don't exist yet.
        /// </summary>
        public readonly string? UserMigration;
        /// <summary>
        /// The configuration of a verify auth challenge Lambda trigger, one of three triggers in the sequence of the [custom authentication challenge triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-challenge.html) .
        /// </summary>
        public readonly string? VerifyAuthChallengeResponse;

        [OutputConstructor]
        private UserPoolLambdaConfig(
            string? createAuthChallenge,

            Outputs.UserPoolCustomEmailSender? customEmailSender,

            string? customMessage,

            Outputs.UserPoolCustomSmsSender? customSmsSender,

            string? defineAuthChallenge,

            string? kmsKeyId,

            string? postAuthentication,

            string? postConfirmation,

            string? preAuthentication,

            string? preSignUp,

            string? preTokenGeneration,

            Outputs.UserPoolPreTokenGenerationConfig? preTokenGenerationConfig,

            string? userMigration,

            string? verifyAuthChallengeResponse)
        {
            CreateAuthChallenge = createAuthChallenge;
            CustomEmailSender = customEmailSender;
            CustomMessage = customMessage;
            CustomSmsSender = customSmsSender;
            DefineAuthChallenge = defineAuthChallenge;
            KmsKeyId = kmsKeyId;
            PostAuthentication = postAuthentication;
            PostConfirmation = postConfirmation;
            PreAuthentication = preAuthentication;
            PreSignUp = preSignUp;
            PreTokenGeneration = preTokenGeneration;
            PreTokenGenerationConfig = preTokenGenerationConfig;
            UserMigration = userMigration;
            VerifyAuthChallengeResponse = verifyAuthChallengeResponse;
        }
    }
}
