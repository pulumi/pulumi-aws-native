// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cognito.Outputs
{

    [OutputType]
    public sealed class UserPoolPasswordPolicy
    {
        /// <summary>
        /// The minimum length of the password in the policy that you have set. This value can't be less than 6.
        /// </summary>
        public readonly int? MinimumLength;
        /// <summary>
        /// The number of previous passwords that you want Amazon Cognito to restrict each user from reusing. Users can't set a password that matches any of `n` previous passwords, where `n` is the value of `PasswordHistorySize` .
        /// </summary>
        public readonly int? PasswordHistorySize;
        /// <summary>
        /// The requirement in a password policy that users must include at least one lowercase letter in their password.
        /// </summary>
        public readonly bool? RequireLowercase;
        /// <summary>
        /// The requirement in a password policy that users must include at least one number in their password.
        /// </summary>
        public readonly bool? RequireNumbers;
        /// <summary>
        /// The requirement in a password policy that users must include at least one symbol in their password.
        /// </summary>
        public readonly bool? RequireSymbols;
        /// <summary>
        /// The requirement in a password policy that users must include at least one uppercase letter in their password.
        /// </summary>
        public readonly bool? RequireUppercase;
        /// <summary>
        /// The number of days a temporary password is valid in the password policy. If the user doesn't sign in during this time, an administrator must reset their password. Defaults to `7` . If you submit a value of `0` , Amazon Cognito treats it as a null value and sets `TemporaryPasswordValidityDays` to its default value.
        /// 
        /// &gt; When you set `TemporaryPasswordValidityDays` for a user pool, you can no longer set a value for the legacy `UnusedAccountValidityDays` parameter in that user pool.
        /// </summary>
        public readonly int? TemporaryPasswordValidityDays;

        [OutputConstructor]
        private UserPoolPasswordPolicy(
            int? minimumLength,

            int? passwordHistorySize,

            bool? requireLowercase,

            bool? requireNumbers,

            bool? requireSymbols,

            bool? requireUppercase,

            int? temporaryPasswordValidityDays)
        {
            MinimumLength = minimumLength;
            PasswordHistorySize = passwordHistorySize;
            RequireLowercase = requireLowercase;
            RequireNumbers = requireNumbers;
            RequireSymbols = requireSymbols;
            RequireUppercase = requireUppercase;
            TemporaryPasswordValidityDays = temporaryPasswordValidityDays;
        }
    }
}
