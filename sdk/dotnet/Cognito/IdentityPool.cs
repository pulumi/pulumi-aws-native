// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cognito
{
    /// <summary>
    /// Resource Type definition for AWS::Cognito::IdentityPool
    /// </summary>
    [Obsolete(@"IdentityPool is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.")]
    [AwsNativeResourceType("aws-native:cognito:IdentityPool")]
    public partial class IdentityPool : Pulumi.CustomResource
    {
        [Output("allowClassicFlow")]
        public Output<bool?> AllowClassicFlow { get; private set; } = null!;

        [Output("allowUnauthenticatedIdentities")]
        public Output<bool> AllowUnauthenticatedIdentities { get; private set; } = null!;

        [Output("cognitoEvents")]
        public Output<object?> CognitoEvents { get; private set; } = null!;

        [Output("cognitoIdentityProviders")]
        public Output<ImmutableArray<Outputs.IdentityPoolCognitoIdentityProvider>> CognitoIdentityProviders { get; private set; } = null!;

        [Output("cognitoStreams")]
        public Output<Outputs.IdentityPoolCognitoStreams?> CognitoStreams { get; private set; } = null!;

        [Output("developerProviderName")]
        public Output<string?> DeveloperProviderName { get; private set; } = null!;

        [Output("identityPoolName")]
        public Output<string?> IdentityPoolName { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("openIdConnectProviderARNs")]
        public Output<ImmutableArray<string>> OpenIdConnectProviderARNs { get; private set; } = null!;

        [Output("pushSync")]
        public Output<Outputs.IdentityPoolPushSync?> PushSync { get; private set; } = null!;

        [Output("samlProviderARNs")]
        public Output<ImmutableArray<string>> SamlProviderARNs { get; private set; } = null!;

        [Output("supportedLoginProviders")]
        public Output<object?> SupportedLoginProviders { get; private set; } = null!;


        /// <summary>
        /// Create a IdentityPool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IdentityPool(string name, IdentityPoolArgs args, CustomResourceOptions? options = null)
            : base("aws-native:cognito:IdentityPool", name, args ?? new IdentityPoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IdentityPool(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:cognito:IdentityPool", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IdentityPool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IdentityPool Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new IdentityPool(name, id, options);
        }
    }

    public sealed class IdentityPoolArgs : Pulumi.ResourceArgs
    {
        [Input("allowClassicFlow")]
        public Input<bool>? AllowClassicFlow { get; set; }

        [Input("allowUnauthenticatedIdentities", required: true)]
        public Input<bool> AllowUnauthenticatedIdentities { get; set; } = null!;

        [Input("cognitoEvents")]
        public Input<object>? CognitoEvents { get; set; }

        [Input("cognitoIdentityProviders")]
        private InputList<Inputs.IdentityPoolCognitoIdentityProviderArgs>? _cognitoIdentityProviders;
        public InputList<Inputs.IdentityPoolCognitoIdentityProviderArgs> CognitoIdentityProviders
        {
            get => _cognitoIdentityProviders ?? (_cognitoIdentityProviders = new InputList<Inputs.IdentityPoolCognitoIdentityProviderArgs>());
            set => _cognitoIdentityProviders = value;
        }

        [Input("cognitoStreams")]
        public Input<Inputs.IdentityPoolCognitoStreamsArgs>? CognitoStreams { get; set; }

        [Input("developerProviderName")]
        public Input<string>? DeveloperProviderName { get; set; }

        [Input("identityPoolName")]
        public Input<string>? IdentityPoolName { get; set; }

        [Input("openIdConnectProviderARNs")]
        private InputList<string>? _openIdConnectProviderARNs;
        public InputList<string> OpenIdConnectProviderARNs
        {
            get => _openIdConnectProviderARNs ?? (_openIdConnectProviderARNs = new InputList<string>());
            set => _openIdConnectProviderARNs = value;
        }

        [Input("pushSync")]
        public Input<Inputs.IdentityPoolPushSyncArgs>? PushSync { get; set; }

        [Input("samlProviderARNs")]
        private InputList<string>? _samlProviderARNs;
        public InputList<string> SamlProviderARNs
        {
            get => _samlProviderARNs ?? (_samlProviderARNs = new InputList<string>());
            set => _samlProviderARNs = value;
        }

        [Input("supportedLoginProviders")]
        public Input<object>? SupportedLoginProviders { get; set; }

        public IdentityPoolArgs()
        {
        }
    }
}
