// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AutoScaling.Outputs
{

    /// <summary>
    /// BlockDevice is a subproperty of BlockDeviceMapping that describes an Amazon EBS volume.
    /// </summary>
    [OutputType]
    public sealed class LaunchConfigurationBlockDevice
    {
        /// <summary>
        /// Indicates whether the volume is deleted on instance termination. 
        /// </summary>
        public readonly bool? DeleteOnTermination;
        /// <summary>
        /// Specifies whether the volume should be encrypted. 
        /// </summary>
        public readonly bool? Encrypted;
        /// <summary>
        /// The number of input/output (I/O) operations per second (IOPS) to provision for the volume. 
        /// </summary>
        public readonly int? Iops;
        /// <summary>
        /// The snapshot ID of the volume to use.
        /// </summary>
        public readonly string? SnapshotId;
        /// <summary>
        /// The throughput (MiBps) to provision for a gp3 volume.
        /// </summary>
        public readonly int? Throughput;
        /// <summary>
        /// The volume size, in GiBs.
        /// </summary>
        public readonly int? VolumeSize;
        /// <summary>
        /// The volume type.
        /// </summary>
        public readonly string? VolumeType;

        [OutputConstructor]
        private LaunchConfigurationBlockDevice(
            bool? deleteOnTermination,

            bool? encrypted,

            int? iops,

            string? snapshotId,

            int? throughput,

            int? volumeSize,

            string? volumeType)
        {
            DeleteOnTermination = deleteOnTermination;
            Encrypted = encrypted;
            Iops = iops;
            SnapshotId = snapshotId;
            Throughput = throughput;
            VolumeSize = volumeSize;
            VolumeType = volumeType;
        }
    }
}
