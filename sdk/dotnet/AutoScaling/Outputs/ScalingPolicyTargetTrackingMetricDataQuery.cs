// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AutoScaling.Outputs
{

    [OutputType]
    public sealed class ScalingPolicyTargetTrackingMetricDataQuery
    {
        /// <summary>
        /// The math expression to perform on the returned data, if this object is performing a math expression. This expression can use the `Id` of the other metrics to refer to those metrics, and can also use the `Id` of other expressions to use the result of those expressions.
        /// 
        /// Conditional: Within each `TargetTrackingMetricDataQuery` object, you must specify either `Expression` or `MetricStat` , but not both.
        /// </summary>
        public readonly string? Expression;
        /// <summary>
        /// A short name that identifies the object's results in the response. This name must be unique among all `TargetTrackingMetricDataQuery` objects specified for a single scaling policy. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscores. The first character must be a lowercase letter.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A human-readable label for this metric or expression. This is especially useful if this is a math expression, so that you know what the value represents.
        /// </summary>
        public readonly string? Label;
        /// <summary>
        /// Information about the metric data to return.
        /// 
        /// Conditional: Within each `TargetTrackingMetricDataQuery` object, you must specify either `Expression` or `MetricStat` , but not both.
        /// </summary>
        public readonly Outputs.ScalingPolicyTargetTrackingMetricStat? MetricStat;
        /// <summary>
        /// The period of the metric in seconds. The default value is 60. Accepted values are 10, 30, and 60. For high resolution metric, set the value to less than 60. For more information, see [Create a target tracking policy using high-resolution metrics for faster response](https://docs.aws.amazon.com/autoscaling/ec2/userguide/policy-creating-high-resolution-metrics.html) .
        /// </summary>
        public readonly int? Period;
        /// <summary>
        /// Indicates whether to return the timestamps and raw data values of this metric.
        /// 
        /// If you use any math expressions, specify `true` for this value for only the final math expression that the metric specification is based on. You must specify `false` for `ReturnData` for all the other metrics and expressions used in the metric specification.
        /// 
        /// If you are only retrieving metrics and not performing any math expressions, do not specify anything for `ReturnData` . This sets it to its default ( `true` ).
        /// </summary>
        public readonly bool? ReturnData;

        [OutputConstructor]
        private ScalingPolicyTargetTrackingMetricDataQuery(
            string? expression,

            string id,

            string? label,

            Outputs.ScalingPolicyTargetTrackingMetricStat? metricStat,

            int? period,

            bool? returnData)
        {
            Expression = expression;
            Id = id;
            Label = label;
            MetricStat = metricStat;
            Period = period;
            ReturnData = returnData;
        }
    }
}
