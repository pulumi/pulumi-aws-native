// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AutoScaling.Outputs
{

    [OutputType]
    public sealed class ScalingPolicyCustomizedMetricSpecification
    {
        /// <summary>
        /// The dimensions of the metric.
        /// 
        /// Conditional: If you published your metric with dimensions, you must specify the same dimensions in your scaling policy.
        /// </summary>
        public readonly ImmutableArray<Outputs.ScalingPolicyMetricDimension> Dimensions;
        /// <summary>
        /// The name of the metric. To get the exact metric name, namespace, and dimensions, inspect the [Metric](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_Metric.html) object that is returned by a call to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html) .
        /// </summary>
        public readonly string MetricName;
        /// <summary>
        /// The namespace of the metric.
        /// </summary>
        public readonly string Namespace;
        /// <summary>
        /// The statistic of the metric.
        /// </summary>
        public readonly string Statistic;
        /// <summary>
        /// The unit of the metric. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference* .
        /// </summary>
        public readonly string? Unit;

        [OutputConstructor]
        private ScalingPolicyCustomizedMetricSpecification(
            ImmutableArray<Outputs.ScalingPolicyMetricDimension> dimensions,

            string metricName,

            string @namespace,

            string statistic,

            string? unit)
        {
            Dimensions = dimensions;
            MetricName = metricName;
            Namespace = @namespace;
            Statistic = statistic;
            Unit = unit;
        }
    }
}
