// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AutoScaling.Outputs
{

    [OutputType]
    public sealed class ScalingPolicyTargetTrackingMetricStat
    {
        /// <summary>
        /// The metric to use.
        /// </summary>
        public readonly Outputs.ScalingPolicyMetric Metric;
        /// <summary>
        /// The period of the metric in seconds. The default value is 60. Accepted values are 10, 30, and 60. For high resolution metric, set the value to less than 60. For more information, see [Create a target tracking policy using high-resolution metrics for faster response](https://docs.aws.amazon.com/autoscaling/ec2/userguide/policy-creating-high-resolution-metrics.html) .
        /// </summary>
        public readonly int? Period;
        /// <summary>
        /// The statistic to return. It can include any CloudWatch statistic or extended statistic. For a list of valid values, see the table in [Statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Statistic) in the *Amazon CloudWatch User Guide* .
        /// 
        /// The most commonly used metric for scaling is `Average` .
        /// </summary>
        public readonly string Stat;
        /// <summary>
        /// The unit to use for the returned data points. For a complete list of the units that CloudWatch supports, see the [MetricDatum](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html) data type in the *Amazon CloudWatch API Reference* .
        /// </summary>
        public readonly string? Unit;

        [OutputConstructor]
        private ScalingPolicyTargetTrackingMetricStat(
            Outputs.ScalingPolicyMetric metric,

            int? period,

            string stat,

            string? unit)
        {
            Metric = metric;
            Period = period;
            Stat = stat;
            Unit = unit;
        }
    }
}
