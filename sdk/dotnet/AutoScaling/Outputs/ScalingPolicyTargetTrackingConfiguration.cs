// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AutoScaling.Outputs
{

    [OutputType]
    public sealed class ScalingPolicyTargetTrackingConfiguration
    {
        /// <summary>
        /// Contains customized metric specification information for a target tracking scaling policy for Amazon EC2 Auto Scaling.
        /// 
        /// To create your customized metric specification:
        /// 
        /// - Add values for each required property from CloudWatch. You can use an existing metric, or a new metric that you create. To use your own metric, you must first publish the metric to CloudWatch. For more information, see [Publish Custom Metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html) in the *Amazon CloudWatch User Guide* .
        /// - Choose a metric that changes proportionally with capacity. The value of the metric should increase or decrease in inverse proportion to the number of capacity units. That is, the value of the metric should decrease when capacity increases.
        /// 
        /// For more information about CloudWatch, see [Amazon CloudWatch Concepts](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html) .
        /// 
        /// `CustomizedMetricSpecification` is a property of the [AWS::AutoScaling::ScalingPolicy TargetTrackingConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html) property type.
        /// </summary>
        public readonly Outputs.ScalingPolicyCustomizedMetricSpecification? CustomizedMetricSpecification;
        /// <summary>
        /// Indicates whether scaling in by the target tracking scaling policy is disabled. If scaling in is disabled, the target tracking scaling policy doesn't remove instances from the Auto Scaling group. Otherwise, the target tracking scaling policy can remove instances from the Auto Scaling group. The default is `false` .
        /// </summary>
        public readonly bool? DisableScaleIn;
        /// <summary>
        /// Contains predefined metric specification information for a target tracking scaling policy for Amazon EC2 Auto Scaling.
        /// 
        /// `PredefinedMetricSpecification` is a property of the [AWS::AutoScaling::ScalingPolicy TargetTrackingConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html) property type.
        /// </summary>
        public readonly Outputs.ScalingPolicyPredefinedMetricSpecification? PredefinedMetricSpecification;
        /// <summary>
        /// The target value for the metric.
        /// 
        /// &gt; Some metrics are based on a count instead of a percentage, such as the request count for an Application Load Balancer or the number of messages in an SQS queue. If the scaling policy specifies one of these metrics, specify the target utilization as the optimal average request or message count per instance during any one-minute interval.
        /// </summary>
        public readonly double TargetValue;

        [OutputConstructor]
        private ScalingPolicyTargetTrackingConfiguration(
            Outputs.ScalingPolicyCustomizedMetricSpecification? customizedMetricSpecification,

            bool? disableScaleIn,

            Outputs.ScalingPolicyPredefinedMetricSpecification? predefinedMetricSpecification,

            double targetValue)
        {
            CustomizedMetricSpecification = customizedMetricSpecification;
            DisableScaleIn = disableScaleIn;
            PredefinedMetricSpecification = predefinedMetricSpecification;
            TargetValue = targetValue;
        }
    }
}
