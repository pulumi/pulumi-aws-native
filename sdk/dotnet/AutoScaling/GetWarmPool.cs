// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AutoScaling
{
    public static class GetWarmPool
    {
        /// <summary>
        /// Resource schema for AWS::AutoScaling::WarmPool.
        /// </summary>
        public static Task<GetWarmPoolResult> InvokeAsync(GetWarmPoolArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWarmPoolResult>("aws-native:autoscaling:getWarmPool", args ?? new GetWarmPoolArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::AutoScaling::WarmPool.
        /// </summary>
        public static Output<GetWarmPoolResult> Invoke(GetWarmPoolInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWarmPoolResult>("aws-native:autoscaling:getWarmPool", args ?? new GetWarmPoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWarmPoolArgs : Pulumi.InvokeArgs
    {
        [Input("autoScalingGroupName", required: true)]
        public string AutoScalingGroupName { get; set; } = null!;

        public GetWarmPoolArgs()
        {
        }
    }

    public sealed class GetWarmPoolInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("autoScalingGroupName", required: true)]
        public Input<string> AutoScalingGroupName { get; set; } = null!;

        public GetWarmPoolInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWarmPoolResult
    {
        public readonly Outputs.WarmPoolInstanceReusePolicy? InstanceReusePolicy;
        public readonly int? MaxGroupPreparedCapacity;
        public readonly int? MinSize;
        public readonly string? PoolState;

        [OutputConstructor]
        private GetWarmPoolResult(
            Outputs.WarmPoolInstanceReusePolicy? instanceReusePolicy,

            int? maxGroupPreparedCapacity,

            int? minSize,

            string? poolState)
        {
            InstanceReusePolicy = instanceReusePolicy;
            MaxGroupPreparedCapacity = maxGroupPreparedCapacity;
            MinSize = minSize;
            PoolState = poolState;
        }
    }
}
