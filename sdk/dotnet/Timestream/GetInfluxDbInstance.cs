// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Timestream
{
    public static class GetInfluxDbInstance
    {
        /// <summary>
        /// The AWS::Timestream::InfluxDBInstance resource creates an InfluxDB instance.
        /// </summary>
        public static Task<GetInfluxDbInstanceResult> InvokeAsync(GetInfluxDbInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInfluxDbInstanceResult>("aws-native:timestream:getInfluxDbInstance", args ?? new GetInfluxDbInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::Timestream::InfluxDBInstance resource creates an InfluxDB instance.
        /// </summary>
        public static Output<GetInfluxDbInstanceResult> Invoke(GetInfluxDbInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInfluxDbInstanceResult>("aws-native:timestream:getInfluxDbInstance", args ?? new GetInfluxDbInstanceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The AWS::Timestream::InfluxDBInstance resource creates an InfluxDB instance.
        /// </summary>
        public static Output<GetInfluxDbInstanceResult> Invoke(GetInfluxDbInstanceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInfluxDbInstanceResult>("aws-native:timestream:getInfluxDbInstance", args ?? new GetInfluxDbInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInfluxDbInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The service generated unique identifier for InfluxDB instance.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetInfluxDbInstanceArgs()
        {
        }
        public static new GetInfluxDbInstanceArgs Empty => new GetInfluxDbInstanceArgs();
    }

    public sealed class GetInfluxDbInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The service generated unique identifier for InfluxDB instance.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetInfluxDbInstanceInvokeArgs()
        {
        }
        public static new GetInfluxDbInstanceInvokeArgs Empty => new GetInfluxDbInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetInfluxDbInstanceResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) that is associated with the InfluxDB instance.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The Availability Zone (AZ) where the InfluxDB instance is created.
        /// </summary>
        public readonly string? AvailabilityZone;
        /// <summary>
        /// The compute instance of the InfluxDB instance.
        /// </summary>
        public readonly Pulumi.AwsNative.Timestream.InfluxDbInstanceDbInstanceType? DbInstanceType;
        /// <summary>
        /// The name of an existing InfluxDB parameter group.
        /// </summary>
        public readonly string? DbParameterGroupIdentifier;
        /// <summary>
        /// Deployment type of the InfluxDB Instance.
        /// </summary>
        public readonly Pulumi.AwsNative.Timestream.InfluxDbInstanceDeploymentType? DeploymentType;
        /// <summary>
        /// The connection endpoint for the InfluxDB instance.
        /// </summary>
        public readonly string? Endpoint;
        /// <summary>
        /// The service generated unique identifier for InfluxDB instance.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The Auth parameters secret Amazon Resource name (ARN) that is associated with the InfluxDB instance.
        /// </summary>
        public readonly string? InfluxAuthParametersSecretArn;
        /// <summary>
        /// Configuration for sending logs to customer account from the InfluxDB instance.
        /// </summary>
        public readonly Outputs.LogDeliveryConfigurationProperties? LogDeliveryConfiguration;
        /// <summary>
        /// The port number on which InfluxDB accepts connections.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// The Secondary Availability Zone (AZ) where the InfluxDB instance is created, if DeploymentType is set as WITH_MULTIAZ_STANDBY.
        /// </summary>
        public readonly string? SecondaryAvailabilityZone;
        /// <summary>
        /// Status of the InfluxDB Instance.
        /// </summary>
        public readonly Pulumi.AwsNative.Timestream.InfluxDbInstanceStatus? Status;
        /// <summary>
        /// An arbitrary set of tags (key-value pairs) for this DB instance.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetInfluxDbInstanceResult(
            string? arn,

            string? availabilityZone,

            Pulumi.AwsNative.Timestream.InfluxDbInstanceDbInstanceType? dbInstanceType,

            string? dbParameterGroupIdentifier,

            Pulumi.AwsNative.Timestream.InfluxDbInstanceDeploymentType? deploymentType,

            string? endpoint,

            string? id,

            string? influxAuthParametersSecretArn,

            Outputs.LogDeliveryConfigurationProperties? logDeliveryConfiguration,

            int? port,

            string? secondaryAvailabilityZone,

            Pulumi.AwsNative.Timestream.InfluxDbInstanceStatus? status,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Arn = arn;
            AvailabilityZone = availabilityZone;
            DbInstanceType = dbInstanceType;
            DbParameterGroupIdentifier = dbParameterGroupIdentifier;
            DeploymentType = deploymentType;
            Endpoint = endpoint;
            Id = id;
            InfluxAuthParametersSecretArn = influxAuthParametersSecretArn;
            LogDeliveryConfiguration = logDeliveryConfiguration;
            Port = port;
            SecondaryAvailabilityZone = secondaryAvailabilityZone;
            Status = status;
            Tags = tags;
        }
    }
}
