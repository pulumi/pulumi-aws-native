// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Timestream.Inputs
{

    /// <summary>
    /// Configuration needed to write data into the Timestream database and table.
    /// </summary>
    public sealed class ScheduledQueryTimestreamConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of Timestream database to which the query result will be written.
        /// </summary>
        [Input("databaseName", required: true)]
        public Input<string> DatabaseName { get; set; } = null!;

        [Input("dimensionMappings", required: true)]
        private InputList<Inputs.ScheduledQueryDimensionMappingArgs>? _dimensionMappings;

        /// <summary>
        /// This is to allow mapping column(s) from the query result to the dimension in the destination table.
        /// </summary>
        public InputList<Inputs.ScheduledQueryDimensionMappingArgs> DimensionMappings
        {
            get => _dimensionMappings ?? (_dimensionMappings = new InputList<Inputs.ScheduledQueryDimensionMappingArgs>());
            set => _dimensionMappings = value;
        }

        /// <summary>
        /// Name of the measure column. Also see `MultiMeasureMappings` and `MixedMeasureMappings` for how measure name properties on those relate to `MeasureNameColumn` .
        /// </summary>
        [Input("measureNameColumn")]
        public Input<string>? MeasureNameColumn { get; set; }

        [Input("mixedMeasureMappings")]
        private InputList<Inputs.ScheduledQueryMixedMeasureMappingArgs>? _mixedMeasureMappings;

        /// <summary>
        /// Specifies how to map measures to multi-measure records.
        /// </summary>
        public InputList<Inputs.ScheduledQueryMixedMeasureMappingArgs> MixedMeasureMappings
        {
            get => _mixedMeasureMappings ?? (_mixedMeasureMappings = new InputList<Inputs.ScheduledQueryMixedMeasureMappingArgs>());
            set => _mixedMeasureMappings = value;
        }

        /// <summary>
        /// Multi-measure mappings.
        /// </summary>
        [Input("multiMeasureMappings")]
        public Input<Inputs.ScheduledQueryMultiMeasureMappingsArgs>? MultiMeasureMappings { get; set; }

        /// <summary>
        /// Name of Timestream table that the query result will be written to. The table should be within the same database that is provided in Timestream configuration.
        /// </summary>
        [Input("tableName", required: true)]
        public Input<string> TableName { get; set; } = null!;

        /// <summary>
        /// Column from query result that should be used as the time column in destination table. Column type for this should be TIMESTAMP.
        /// </summary>
        [Input("timeColumn", required: true)]
        public Input<string> TimeColumn { get; set; } = null!;

        public ScheduledQueryTimestreamConfigurationArgs()
        {
        }
        public static new ScheduledQueryTimestreamConfigurationArgs Empty => new ScheduledQueryTimestreamConfigurationArgs();
    }
}
