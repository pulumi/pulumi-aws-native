// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Comprehend
{
    /// <summary>
    /// Document Classifier enables training document classifier models.
    /// </summary>
    [AwsNativeResourceType("aws-native:comprehend:DocumentClassifier")]
    public partial class DocumentClassifier : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the document classifier.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role that grants Amazon Comprehend read access to your input data.
        /// </summary>
        [Output("dataAccessRoleArn")]
        public Output<string> DataAccessRoleArn { get; private set; } = null!;

        /// <summary>
        /// The name of the document classifier.
        /// </summary>
        [Output("documentClassifierName")]
        public Output<string> DocumentClassifierName { get; private set; } = null!;

        /// <summary>
        /// Specifies the format and location of the input data for the job.
        /// </summary>
        [Output("inputDataConfig")]
        public Output<Outputs.DocumentClassifierInputDataConfig> InputDataConfig { get; private set; } = null!;

        /// <summary>
        /// The language of the input documents. You can specify any of the languages supported by Amazon Comprehend. All documents must be in the same language.
        /// </summary>
        [Output("languageCode")]
        public Output<Pulumi.AwsNative.Comprehend.DocumentClassifierLanguageCode> LanguageCode { get; private set; } = null!;

        /// <summary>
        /// Indicates the mode in which the classifier will be trained. The classifier can be trained in multi-class (single-label) mode or multi-label mode. Multi-class mode identifies a single class label for each document and multi-label mode identifies one or more class labels for each document. Multiple labels for an individual document are separated by a delimiter. The default delimiter between labels is a pipe (|).
        /// </summary>
        [Output("mode")]
        public Output<Pulumi.AwsNative.Comprehend.DocumentClassifierMode?> Mode { get; private set; } = null!;

        /// <summary>
        /// ID for the AWS KMS key that Amazon Comprehend uses to encrypt trained custom models. The ModelKmsKeyId can be either of the following formats:
        /// 
        /// - KMS Key ID: `"1234abcd-12ab-34cd-56ef-1234567890ab"`
        /// - Amazon Resource Name (ARN) of a KMS Key: `"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"`
        /// </summary>
        [Output("modelKmsKeyId")]
        public Output<string?> ModelKmsKeyId { get; private set; } = null!;

        /// <summary>
        /// The resource-based policy to attach to your custom document classifier model. You can use this policy to allow another AWS account to import your custom model.
        /// 
        /// Provide your policy as a JSON body that you enter as a UTF-8 encoded string without line breaks. To provide valid JSON, enclose the attribute names and values in double quotes. If the JSON body is also enclosed in double quotes, then you must escape the double quotes that are inside the policy:
        /// 
        /// `"{\"attribute\": \"value\", \"attribute\": [\"value\"]}"`
        /// 
        /// To avoid escaping quotes, you can use single quotes to enclose the policy and double quotes to enclose the JSON names and values:
        /// 
        /// `'{"attribute": "value", "attribute": ["value"]}'`
        /// </summary>
        [Output("modelPolicy")]
        public Output<string?> ModelPolicy { get; private set; } = null!;

        /// <summary>
        /// Provides output results configuration parameters for custom classifier jobs.
        /// </summary>
        [Output("outputDataConfig")]
        public Output<Outputs.DocumentClassifierOutputDataConfig?> OutputDataConfig { get; private set; } = null!;

        /// <summary>
        /// Tags to associate with the document classifier. A tag is a key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with "Sales" as the key might be added to a resource to indicate its use by the sales department.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;

        /// <summary>
        /// The version name given to the newly created classifier. Version names can have a maximum of 256 characters. Alphanumeric characters, hyphens (-) and underscores (_) are allowed. The version name must be unique among all models with the same classifier name in the AWS account / AWS Region .
        /// </summary>
        [Output("versionName")]
        public Output<string?> VersionName { get; private set; } = null!;

        /// <summary>
        /// ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:
        /// 
        /// - KMS Key ID: `"1234abcd-12ab-34cd-56ef-1234567890ab"`
        /// - Amazon Resource Name (ARN) of a KMS Key: `"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"`
        /// </summary>
        [Output("volumeKmsKeyId")]
        public Output<string?> VolumeKmsKeyId { get; private set; } = null!;

        /// <summary>
        /// Configuration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your custom classifier. For more information, see [Amazon VPC](https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html) .
        /// </summary>
        [Output("vpcConfig")]
        public Output<Outputs.DocumentClassifierVpcConfig?> VpcConfig { get; private set; } = null!;


        /// <summary>
        /// Create a DocumentClassifier resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DocumentClassifier(string name, DocumentClassifierArgs args, CustomResourceOptions? options = null)
            : base("aws-native:comprehend:DocumentClassifier", name, args ?? new DocumentClassifierArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DocumentClassifier(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:comprehend:DocumentClassifier", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "dataAccessRoleArn",
                    "documentClassifierName",
                    "inputDataConfig",
                    "languageCode",
                    "mode",
                    "modelKmsKeyId",
                    "outputDataConfig",
                    "versionName",
                    "volumeKmsKeyId",
                    "vpcConfig",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DocumentClassifier resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DocumentClassifier Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new DocumentClassifier(name, id, options);
        }
    }

    public sealed class DocumentClassifierArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the IAM role that grants Amazon Comprehend read access to your input data.
        /// </summary>
        [Input("dataAccessRoleArn", required: true)]
        public Input<string> DataAccessRoleArn { get; set; } = null!;

        /// <summary>
        /// The name of the document classifier.
        /// </summary>
        [Input("documentClassifierName")]
        public Input<string>? DocumentClassifierName { get; set; }

        /// <summary>
        /// Specifies the format and location of the input data for the job.
        /// </summary>
        [Input("inputDataConfig", required: true)]
        public Input<Inputs.DocumentClassifierInputDataConfigArgs> InputDataConfig { get; set; } = null!;

        /// <summary>
        /// The language of the input documents. You can specify any of the languages supported by Amazon Comprehend. All documents must be in the same language.
        /// </summary>
        [Input("languageCode", required: true)]
        public Input<Pulumi.AwsNative.Comprehend.DocumentClassifierLanguageCode> LanguageCode { get; set; } = null!;

        /// <summary>
        /// Indicates the mode in which the classifier will be trained. The classifier can be trained in multi-class (single-label) mode or multi-label mode. Multi-class mode identifies a single class label for each document and multi-label mode identifies one or more class labels for each document. Multiple labels for an individual document are separated by a delimiter. The default delimiter between labels is a pipe (|).
        /// </summary>
        [Input("mode")]
        public Input<Pulumi.AwsNative.Comprehend.DocumentClassifierMode>? Mode { get; set; }

        /// <summary>
        /// ID for the AWS KMS key that Amazon Comprehend uses to encrypt trained custom models. The ModelKmsKeyId can be either of the following formats:
        /// 
        /// - KMS Key ID: `"1234abcd-12ab-34cd-56ef-1234567890ab"`
        /// - Amazon Resource Name (ARN) of a KMS Key: `"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"`
        /// </summary>
        [Input("modelKmsKeyId")]
        public Input<string>? ModelKmsKeyId { get; set; }

        /// <summary>
        /// The resource-based policy to attach to your custom document classifier model. You can use this policy to allow another AWS account to import your custom model.
        /// 
        /// Provide your policy as a JSON body that you enter as a UTF-8 encoded string without line breaks. To provide valid JSON, enclose the attribute names and values in double quotes. If the JSON body is also enclosed in double quotes, then you must escape the double quotes that are inside the policy:
        /// 
        /// `"{\"attribute\": \"value\", \"attribute\": [\"value\"]}"`
        /// 
        /// To avoid escaping quotes, you can use single quotes to enclose the policy and double quotes to enclose the JSON names and values:
        /// 
        /// `'{"attribute": "value", "attribute": ["value"]}'`
        /// </summary>
        [Input("modelPolicy")]
        public Input<string>? ModelPolicy { get; set; }

        /// <summary>
        /// Provides output results configuration parameters for custom classifier jobs.
        /// </summary>
        [Input("outputDataConfig")]
        public Input<Inputs.DocumentClassifierOutputDataConfigArgs>? OutputDataConfig { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// Tags to associate with the document classifier. A tag is a key-value pair that adds as a metadata to a resource used by Amazon Comprehend. For example, a tag with "Sales" as the key might be added to a resource to indicate its use by the sales department.
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        /// <summary>
        /// The version name given to the newly created classifier. Version names can have a maximum of 256 characters. Alphanumeric characters, hyphens (-) and underscores (_) are allowed. The version name must be unique among all models with the same classifier name in the AWS account / AWS Region .
        /// </summary>
        [Input("versionName")]
        public Input<string>? VersionName { get; set; }

        /// <summary>
        /// ID for the AWS Key Management Service (KMS) key that Amazon Comprehend uses to encrypt data on the storage volume attached to the ML compute instance(s) that process the analysis job. The VolumeKmsKeyId can be either of the following formats:
        /// 
        /// - KMS Key ID: `"1234abcd-12ab-34cd-56ef-1234567890ab"`
        /// - Amazon Resource Name (ARN) of a KMS Key: `"arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab"`
        /// </summary>
        [Input("volumeKmsKeyId")]
        public Input<string>? VolumeKmsKeyId { get; set; }

        /// <summary>
        /// Configuration parameters for a private Virtual Private Cloud (VPC) containing the resources you are using for your custom classifier. For more information, see [Amazon VPC](https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html) .
        /// </summary>
        [Input("vpcConfig")]
        public Input<Inputs.DocumentClassifierVpcConfigArgs>? VpcConfig { get; set; }

        public DocumentClassifierArgs()
        {
        }
        public static new DocumentClassifierArgs Empty => new DocumentClassifierArgs();
    }
}
