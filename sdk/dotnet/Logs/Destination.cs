// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Logs
{
    /// <summary>
    /// The AWS::Logs::Destination resource specifies a CloudWatch Logs destination. A destination encapsulates a physical resource (such as an Amazon Kinesis data stream) and enables you to subscribe that resource to a stream of log events.
    /// </summary>
    [AwsNativeResourceType("aws-native:logs:Destination")]
    public partial class Destination : global::Pulumi.CustomResource
    {
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The name of the destination resource
        /// </summary>
        [Output("destinationName")]
        public Output<string> DestinationName { get; private set; } = null!;

        /// <summary>
        /// An IAM policy document that governs which AWS accounts can create subscription filters against this destination.
        /// </summary>
        [Output("destinationPolicy")]
        public Output<string?> DestinationPolicy { get; private set; } = null!;

        /// <summary>
        /// The ARN of an IAM role that permits CloudWatch Logs to send data to the specified AWS resource
        /// </summary>
        [Output("roleArn")]
        public Output<string> RoleArn { get; private set; } = null!;

        /// <summary>
        /// The ARN of the physical target where the log events are delivered (for example, a Kinesis stream)
        /// </summary>
        [Output("targetArn")]
        public Output<string> TargetArn { get; private set; } = null!;


        /// <summary>
        /// Create a Destination resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Destination(string name, DestinationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:logs:Destination", name, args ?? new DestinationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Destination(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:logs:Destination", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "destinationName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Destination resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Destination Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Destination(name, id, options);
        }
    }

    public sealed class DestinationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the destination resource
        /// </summary>
        [Input("destinationName")]
        public Input<string>? DestinationName { get; set; }

        /// <summary>
        /// An IAM policy document that governs which AWS accounts can create subscription filters against this destination.
        /// </summary>
        [Input("destinationPolicy")]
        public Input<string>? DestinationPolicy { get; set; }

        /// <summary>
        /// The ARN of an IAM role that permits CloudWatch Logs to send data to the specified AWS resource
        /// </summary>
        [Input("roleArn", required: true)]
        public Input<string> RoleArn { get; set; } = null!;

        /// <summary>
        /// The ARN of the physical target where the log events are delivered (for example, a Kinesis stream)
        /// </summary>
        [Input("targetArn", required: true)]
        public Input<string> TargetArn { get; set; } = null!;

        public DestinationArgs()
        {
        }
        public static new DestinationArgs Empty => new DestinationArgs();
    }
}
