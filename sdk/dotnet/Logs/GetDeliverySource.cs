// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Logs
{
    public static class GetDeliverySource
    {
        /// <summary>
        /// Resource Type definition for AWS::Logs::DeliverySource.
        /// </summary>
        public static Task<GetDeliverySourceResult> InvokeAsync(GetDeliverySourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDeliverySourceResult>("aws-native:logs:getDeliverySource", args ?? new GetDeliverySourceArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Logs::DeliverySource.
        /// </summary>
        public static Output<GetDeliverySourceResult> Invoke(GetDeliverySourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDeliverySourceResult>("aws-native:logs:getDeliverySource", args ?? new GetDeliverySourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDeliverySourceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique name of the Log source.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetDeliverySourceArgs()
        {
        }
        public static new GetDeliverySourceArgs Empty => new GetDeliverySourceArgs();
    }

    public sealed class GetDeliverySourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The unique name of the Log source.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetDeliverySourceInvokeArgs()
        {
        }
        public static new GetDeliverySourceInvokeArgs Empty => new GetDeliverySourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetDeliverySourceResult
    {
        /// <summary>
        /// The ARN of the Aqueduct Source.
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The type of logs being delivered. Only mandatory when the resourceArn could match more than one. In such a case, the error message will contain all the possible options.
        /// </summary>
        public readonly string? LogType;
        /// <summary>
        /// List of ARN of the resource that will be sending the logs
        /// </summary>
        public readonly ImmutableArray<string> ResourceArns;
        /// <summary>
        /// The service generating the log
        /// </summary>
        public readonly string? Service;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// </summary>
        public readonly ImmutableArray<Outputs.DeliverySourceTag> Tags;

        [OutputConstructor]
        private GetDeliverySourceResult(
            string? arn,

            string? logType,

            ImmutableArray<string> resourceArns,

            string? service,

            ImmutableArray<Outputs.DeliverySourceTag> tags)
        {
            Arn = arn;
            LogType = logType;
            ResourceArns = resourceArns;
            Service = service;
            Tags = tags;
        }
    }
}
