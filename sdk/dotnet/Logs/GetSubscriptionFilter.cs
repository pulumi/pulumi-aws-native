// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Logs
{
    public static class GetSubscriptionFilter
    {
        /// <summary>
        /// Subscription filters allow you to subscribe to a real-time stream of log events and have them delivered to a specific destination.
        /// </summary>
        public static Task<GetSubscriptionFilterResult> InvokeAsync(GetSubscriptionFilterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionFilterResult>("aws-native:logs:getSubscriptionFilter", args ?? new GetSubscriptionFilterArgs(), options.WithDefaults());

        /// <summary>
        /// Subscription filters allow you to subscribe to a real-time stream of log events and have them delivered to a specific destination.
        /// </summary>
        public static Output<GetSubscriptionFilterResult> Invoke(GetSubscriptionFilterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionFilterResult>("aws-native:logs:getSubscriptionFilter", args ?? new GetSubscriptionFilterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionFilterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the filter generated by resource.
        /// </summary>
        [Input("filterName", required: true)]
        public string FilterName { get; set; } = null!;

        /// <summary>
        /// Existing log group that you want to associate with this filter.
        /// </summary>
        [Input("logGroupName", required: true)]
        public string LogGroupName { get; set; } = null!;

        public GetSubscriptionFilterArgs()
        {
        }
        public static new GetSubscriptionFilterArgs Empty => new GetSubscriptionFilterArgs();
    }

    public sealed class GetSubscriptionFilterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the filter generated by resource.
        /// </summary>
        [Input("filterName", required: true)]
        public Input<string> FilterName { get; set; } = null!;

        /// <summary>
        /// Existing log group that you want to associate with this filter.
        /// </summary>
        [Input("logGroupName", required: true)]
        public Input<string> LogGroupName { get; set; } = null!;

        public GetSubscriptionFilterInvokeArgs()
        {
        }
        public static new GetSubscriptionFilterInvokeArgs Empty => new GetSubscriptionFilterInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionFilterResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the destination.
        /// </summary>
        public readonly string? DestinationArn;
        /// <summary>
        /// The method used to distribute log data to the destination. By default, log data is grouped by log stream, but the grouping can be set to random for a more even distribution. This property is only applicable when the destination is an Amazon Kinesis stream.
        /// </summary>
        public readonly Pulumi.AwsNative.Logs.SubscriptionFilterDistribution? Distribution;
        /// <summary>
        /// The filtering expressions that restrict what gets delivered to the destination AWS resource.
        /// </summary>
        public readonly string? FilterPattern;
        /// <summary>
        /// The ARN of an IAM role that grants CloudWatch Logs permissions to deliver ingested log events to the destination stream. You don't need to provide the ARN when you are working with a logical destination for cross-account delivery.
        /// </summary>
        public readonly string? RoleArn;

        [OutputConstructor]
        private GetSubscriptionFilterResult(
            string? destinationArn,

            Pulumi.AwsNative.Logs.SubscriptionFilterDistribution? distribution,

            string? filterPattern,

            string? roleArn)
        {
            DestinationArn = destinationArn;
            Distribution = distribution;
            FilterPattern = filterPattern;
            RoleArn = roleArn;
        }
    }
}
