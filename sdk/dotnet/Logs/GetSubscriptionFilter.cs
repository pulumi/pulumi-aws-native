// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Logs
{
    public static class GetSubscriptionFilter
    {
        /// <summary>
        /// The ``AWS::Logs::SubscriptionFilter`` resource specifies a subscription filter and associates it with the specified log group. Subscription filters allow you to subscribe to a real-time stream of log events and have them delivered to a specific destination. Currently, the supported destinations are:
        ///   +  An Amazon Kinesis data stream belonging to the same account as the subscription filter, for same-account delivery.
        ///   +  A logical destination that belongs to a different account, for cross-account delivery.
        ///   +  An Amazon Kinesis Firehose delivery stream that belongs to the same account as the subscription filter, for same-account delivery.
        ///   +  An LAMlong function that belongs to the same account as the subscription filter, for same-account delivery.
        ///   
        ///  There can be as many as two subscription filters associated with a log group.
        /// </summary>
        public static Task<GetSubscriptionFilterResult> InvokeAsync(GetSubscriptionFilterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionFilterResult>("aws-native:logs:getSubscriptionFilter", args ?? new GetSubscriptionFilterArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::Logs::SubscriptionFilter`` resource specifies a subscription filter and associates it with the specified log group. Subscription filters allow you to subscribe to a real-time stream of log events and have them delivered to a specific destination. Currently, the supported destinations are:
        ///   +  An Amazon Kinesis data stream belonging to the same account as the subscription filter, for same-account delivery.
        ///   +  A logical destination that belongs to a different account, for cross-account delivery.
        ///   +  An Amazon Kinesis Firehose delivery stream that belongs to the same account as the subscription filter, for same-account delivery.
        ///   +  An LAMlong function that belongs to the same account as the subscription filter, for same-account delivery.
        ///   
        ///  There can be as many as two subscription filters associated with a log group.
        /// </summary>
        public static Output<GetSubscriptionFilterResult> Invoke(GetSubscriptionFilterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionFilterResult>("aws-native:logs:getSubscriptionFilter", args ?? new GetSubscriptionFilterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::Logs::SubscriptionFilter`` resource specifies a subscription filter and associates it with the specified log group. Subscription filters allow you to subscribe to a real-time stream of log events and have them delivered to a specific destination. Currently, the supported destinations are:
        ///   +  An Amazon Kinesis data stream belonging to the same account as the subscription filter, for same-account delivery.
        ///   +  A logical destination that belongs to a different account, for cross-account delivery.
        ///   +  An Amazon Kinesis Firehose delivery stream that belongs to the same account as the subscription filter, for same-account delivery.
        ///   +  An LAMlong function that belongs to the same account as the subscription filter, for same-account delivery.
        ///   
        ///  There can be as many as two subscription filters associated with a log group.
        /// </summary>
        public static Output<GetSubscriptionFilterResult> Invoke(GetSubscriptionFilterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionFilterResult>("aws-native:logs:getSubscriptionFilter", args ?? new GetSubscriptionFilterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionFilterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the subscription filter.
        /// </summary>
        [Input("filterName", required: true)]
        public string FilterName { get; set; } = null!;

        /// <summary>
        /// The log group to associate with the subscription filter. All log events that are uploaded to this log group are filtered and delivered to the specified AWS resource if the filter pattern matches the log events.
        /// </summary>
        [Input("logGroupName", required: true)]
        public string LogGroupName { get; set; } = null!;

        public GetSubscriptionFilterArgs()
        {
        }
        public static new GetSubscriptionFilterArgs Empty => new GetSubscriptionFilterArgs();
    }

    public sealed class GetSubscriptionFilterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the subscription filter.
        /// </summary>
        [Input("filterName", required: true)]
        public Input<string> FilterName { get; set; } = null!;

        /// <summary>
        /// The log group to associate with the subscription filter. All log events that are uploaded to this log group are filtered and delivered to the specified AWS resource if the filter pattern matches the log events.
        /// </summary>
        [Input("logGroupName", required: true)]
        public Input<string> LogGroupName { get; set; } = null!;

        public GetSubscriptionFilterInvokeArgs()
        {
        }
        public static new GetSubscriptionFilterInvokeArgs Empty => new GetSubscriptionFilterInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionFilterResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the destination.
        /// </summary>
        public readonly string? DestinationArn;
        /// <summary>
        /// The method used to distribute log data to the destination, which can be either random or grouped by log stream.
        /// </summary>
        public readonly Pulumi.AwsNative.Logs.SubscriptionFilterDistribution? Distribution;
        /// <summary>
        /// The filtering expressions that restrict what gets delivered to the destination AWS resource. For more information about the filter pattern syntax, see [Filter and Pattern Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html).
        /// </summary>
        public readonly string? FilterPattern;
        /// <summary>
        /// The ARN of an IAM role that grants CWL permissions to deliver ingested log events to the destination stream. You don't need to provide the ARN when you are working with a logical destination for cross-account delivery.
        /// </summary>
        public readonly string? RoleArn;

        [OutputConstructor]
        private GetSubscriptionFilterResult(
            string? destinationArn,

            Pulumi.AwsNative.Logs.SubscriptionFilterDistribution? distribution,

            string? filterPattern,

            string? roleArn)
        {
            DestinationArn = destinationArn;
            Distribution = distribution;
            FilterPattern = filterPattern;
            RoleArn = roleArn;
        }
    }
}
