// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Logs
{
    public static class GetMetricFilter
    {
        /// <summary>
        /// Resource Type definition for AWS::Logs::MetricFilter
        /// </summary>
        public static Task<GetMetricFilterResult> InvokeAsync(GetMetricFilterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMetricFilterResult>("aws-native:logs:getMetricFilter", args ?? new GetMetricFilterArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::Logs::MetricFilter
        /// </summary>
        public static Output<GetMetricFilterResult> Invoke(GetMetricFilterInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetMetricFilterResult>("aws-native:logs:getMetricFilter", args ?? new GetMetricFilterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMetricFilterArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetMetricFilterArgs()
        {
        }
    }

    public sealed class GetMetricFilterInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetMetricFilterInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMetricFilterResult
    {
        public readonly string? FilterPattern;
        public readonly string? Id;
        public readonly ImmutableArray<Outputs.MetricFilterMetricTransformation> MetricTransformations;

        [OutputConstructor]
        private GetMetricFilterResult(
            string? filterPattern,

            string? id,

            ImmutableArray<Outputs.MetricFilterMetricTransformation> metricTransformations)
        {
            FilterPattern = filterPattern;
            Id = id;
            MetricTransformations = metricTransformations;
        }
    }
}
