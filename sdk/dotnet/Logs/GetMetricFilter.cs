// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Logs
{
    public static class GetMetricFilter
    {
        /// <summary>
        /// The ``AWS::Logs::MetricFilter`` resource specifies a metric filter that describes how CWL extracts information from logs and transforms it into Amazon CloudWatch metrics. If you have multiple metric filters that are associated with a log group, all the filters are applied to the log streams in that group.
        ///  The maximum number of metric filters that can be associated with a log group is 100.
        /// </summary>
        public static Task<GetMetricFilterResult> InvokeAsync(GetMetricFilterArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMetricFilterResult>("aws-native:logs:getMetricFilter", args ?? new GetMetricFilterArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::Logs::MetricFilter`` resource specifies a metric filter that describes how CWL extracts information from logs and transforms it into Amazon CloudWatch metrics. If you have multiple metric filters that are associated with a log group, all the filters are applied to the log streams in that group.
        ///  The maximum number of metric filters that can be associated with a log group is 100.
        /// </summary>
        public static Output<GetMetricFilterResult> Invoke(GetMetricFilterInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMetricFilterResult>("aws-native:logs:getMetricFilter", args ?? new GetMetricFilterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The ``AWS::Logs::MetricFilter`` resource specifies a metric filter that describes how CWL extracts information from logs and transforms it into Amazon CloudWatch metrics. If you have multiple metric filters that are associated with a log group, all the filters are applied to the log streams in that group.
        ///  The maximum number of metric filters that can be associated with a log group is 100.
        /// </summary>
        public static Output<GetMetricFilterResult> Invoke(GetMetricFilterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMetricFilterResult>("aws-native:logs:getMetricFilter", args ?? new GetMetricFilterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMetricFilterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the metric filter.
        /// </summary>
        [Input("filterName", required: true)]
        public string FilterName { get; set; } = null!;

        /// <summary>
        /// The name of an existing log group that you want to associate with this metric filter.
        /// </summary>
        [Input("logGroupName", required: true)]
        public string LogGroupName { get; set; } = null!;

        public GetMetricFilterArgs()
        {
        }
        public static new GetMetricFilterArgs Empty => new GetMetricFilterArgs();
    }

    public sealed class GetMetricFilterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the metric filter.
        /// </summary>
        [Input("filterName", required: true)]
        public Input<string> FilterName { get; set; } = null!;

        /// <summary>
        /// The name of an existing log group that you want to associate with this metric filter.
        /// </summary>
        [Input("logGroupName", required: true)]
        public Input<string> LogGroupName { get; set; } = null!;

        public GetMetricFilterInvokeArgs()
        {
        }
        public static new GetMetricFilterInvokeArgs Empty => new GetMetricFilterInvokeArgs();
    }


    [OutputType]
    public sealed class GetMetricFilterResult
    {
        /// <summary>
        /// This parameter is valid only for log groups that have an active log transformer. For more information about log transformers, see [PutTransformer](https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutTransformer.html).
        ///  If this value is ``true``, the metric filter is applied on the transformed version of the log events instead of the original ingested log events.
        /// </summary>
        public readonly bool? ApplyOnTransformedLogs;
        /// <summary>
        /// A filter pattern for extracting metric data out of ingested log events. For more information, see [Filter and Pattern Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html).
        /// </summary>
        public readonly string? FilterPattern;
        /// <summary>
        /// The metric transformations.
        /// </summary>
        public readonly ImmutableArray<Outputs.MetricFilterMetricTransformation> MetricTransformations;

        [OutputConstructor]
        private GetMetricFilterResult(
            bool? applyOnTransformedLogs,

            string? filterPattern,

            ImmutableArray<Outputs.MetricFilterMetricTransformation> metricTransformations)
        {
            ApplyOnTransformedLogs = applyOnTransformedLogs;
            FilterPattern = filterPattern;
            MetricTransformations = metricTransformations;
        }
    }
}
