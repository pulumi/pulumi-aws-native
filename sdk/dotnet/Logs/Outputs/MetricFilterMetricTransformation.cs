// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Logs.Outputs
{

    /// <summary>
    /// ``MetricTransformation`` is a property of the ``AWS::Logs::MetricFilter`` resource that describes how to transform log streams into a CloudWatch metric.
    /// </summary>
    [OutputType]
    public sealed class MetricFilterMetricTransformation
    {
        /// <summary>
        /// (Optional) The value to emit when a filter pattern does not match a log event. This value can be null.
        /// </summary>
        public readonly double? DefaultValue;
        /// <summary>
        /// The fields to use as dimensions for the metric. One metric filter can include as many as three dimensions.
        ///   Metrics extracted from log events are charged as custom metrics. To prevent unexpected high charges, do not specify high-cardinality fields such as ``IPAddress`` or ``requestID`` as dimensions. Each different value found for a dimension is treated as a separate metric and accrues charges as a separate custom metric. 
        ///  CloudWatch Logs disables a metric filter if it generates 1000 different name/value pairs for your specified dimensions within a certain amount of time. This helps to prevent accidental high charges.
        ///  You can also set up a billing alarm to alert you if your charges are higher than expected. For more information, see [Creating a Billing Alarm to Monitor Your Estimated Charges](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/monitor_estimated_charges_with_cloudwatch.html).
        /// </summary>
        public readonly ImmutableArray<Outputs.MetricFilterDimension> Dimensions;
        /// <summary>
        /// The name of the CloudWatch metric.
        /// </summary>
        public readonly string MetricName;
        /// <summary>
        /// A custom namespace to contain your metric in CloudWatch. Use namespaces to group together metrics that are similar. For more information, see [Namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Namespace).
        /// </summary>
        public readonly string MetricNamespace;
        /// <summary>
        /// The value that is published to the CloudWatch metric. For example, if you're counting the occurrences of a particular term like ``Error``, specify 1 for the metric value. If you're counting the number of bytes transferred, reference the value that is in the log event by using $. followed by the name of the field that you specified in the filter pattern, such as ``$.size``.
        /// </summary>
        public readonly string MetricValue;
        /// <summary>
        /// The unit to assign to the metric. If you omit this, the unit is set as ``None``.
        /// </summary>
        public readonly Pulumi.AwsNative.Logs.MetricFilterMetricTransformationUnit? Unit;

        [OutputConstructor]
        private MetricFilterMetricTransformation(
            double? defaultValue,

            ImmutableArray<Outputs.MetricFilterDimension> dimensions,

            string metricName,

            string metricNamespace,

            string metricValue,

            Pulumi.AwsNative.Logs.MetricFilterMetricTransformationUnit? unit)
        {
            DefaultValue = defaultValue;
            Dimensions = dimensions;
            MetricName = metricName;
            MetricNamespace = metricNamespace;
            MetricValue = metricValue;
            Unit = unit;
        }
    }
}
