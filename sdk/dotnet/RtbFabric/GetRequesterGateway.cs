// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.RtbFabric
{
    public static class GetRequesterGateway
    {
        /// <summary>
        /// Resource Type definition for AWS::RTBFabric::RequesterGateway Resource Type.
        /// </summary>
        public static Task<GetRequesterGatewayResult> InvokeAsync(GetRequesterGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRequesterGatewayResult>("aws-native:rtbfabric:getRequesterGateway", args ?? new GetRequesterGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::RTBFabric::RequesterGateway Resource Type.
        /// </summary>
        public static Output<GetRequesterGatewayResult> Invoke(GetRequesterGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRequesterGatewayResult>("aws-native:rtbfabric:getRequesterGateway", args ?? new GetRequesterGatewayInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::RTBFabric::RequesterGateway Resource Type.
        /// </summary>
        public static Output<GetRequesterGatewayResult> Invoke(GetRequesterGatewayInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRequesterGatewayResult>("aws-native:rtbfabric:getRequesterGateway", args ?? new GetRequesterGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRequesterGatewayArgs : global::Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetRequesterGatewayArgs()
        {
        }
        public static new GetRequesterGatewayArgs Empty => new GetRequesterGatewayArgs();
    }

    public sealed class GetRequesterGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetRequesterGatewayInvokeArgs()
        {
        }
        public static new GetRequesterGatewayInvokeArgs Empty => new GetRequesterGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetRequesterGatewayResult
    {
        public readonly int? ActiveLinksCount;
        public readonly string? Arn;
        public readonly string? CreatedTimestamp;
        public readonly string? Description;
        public readonly string? DomainName;
        public readonly string? GatewayId;
        public readonly Pulumi.AwsNative.RtbFabric.RequesterGatewayStatus? RequesterGatewayStatus;
        public readonly ImmutableArray<string> SecurityGroupIds;
        public readonly ImmutableArray<string> SubnetIds;
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        public readonly int? TotalLinksCount;
        public readonly string? UpdatedTimestamp;
        public readonly string? VpcId;

        [OutputConstructor]
        private GetRequesterGatewayResult(
            int? activeLinksCount,

            string? arn,

            string? createdTimestamp,

            string? description,

            string? domainName,

            string? gatewayId,

            Pulumi.AwsNative.RtbFabric.RequesterGatewayStatus? requesterGatewayStatus,

            ImmutableArray<string> securityGroupIds,

            ImmutableArray<string> subnetIds,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags,

            int? totalLinksCount,

            string? updatedTimestamp,

            string? vpcId)
        {
            ActiveLinksCount = activeLinksCount;
            Arn = arn;
            CreatedTimestamp = createdTimestamp;
            Description = description;
            DomainName = domainName;
            GatewayId = gatewayId;
            RequesterGatewayStatus = requesterGatewayStatus;
            SecurityGroupIds = securityGroupIds;
            SubnetIds = subnetIds;
            Tags = tags;
            TotalLinksCount = totalLinksCount;
            UpdatedTimestamp = updatedTimestamp;
            VpcId = vpcId;
        }
    }
}
