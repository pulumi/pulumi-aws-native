// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.RtbFabric
{
    [EnumType]
    public readonly struct RequesterGatewayStatus : IEquatable<RequesterGatewayStatus>
    {
        private readonly string _value;

        private RequesterGatewayStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static RequesterGatewayStatus PendingCreation { get; } = new RequesterGatewayStatus("PENDING_CREATION");
        public static RequesterGatewayStatus Active { get; } = new RequesterGatewayStatus("ACTIVE");
        public static RequesterGatewayStatus PendingDeletion { get; } = new RequesterGatewayStatus("PENDING_DELETION");
        public static RequesterGatewayStatus Deleted { get; } = new RequesterGatewayStatus("DELETED");
        public static RequesterGatewayStatus Error { get; } = new RequesterGatewayStatus("ERROR");
        public static RequesterGatewayStatus PendingUpdate { get; } = new RequesterGatewayStatus("PENDING_UPDATE");
        public static RequesterGatewayStatus Isolated { get; } = new RequesterGatewayStatus("ISOLATED");
        public static RequesterGatewayStatus PendingIsolation { get; } = new RequesterGatewayStatus("PENDING_ISOLATION");
        public static RequesterGatewayStatus PendingRestoration { get; } = new RequesterGatewayStatus("PENDING_RESTORATION");

        public static bool operator ==(RequesterGatewayStatus left, RequesterGatewayStatus right) => left.Equals(right);
        public static bool operator !=(RequesterGatewayStatus left, RequesterGatewayStatus right) => !left.Equals(right);

        public static explicit operator string(RequesterGatewayStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is RequesterGatewayStatus other && Equals(other);
        public bool Equals(RequesterGatewayStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct ResponderGatewayProtocol : IEquatable<ResponderGatewayProtocol>
    {
        private readonly string _value;

        private ResponderGatewayProtocol(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ResponderGatewayProtocol Http { get; } = new ResponderGatewayProtocol("HTTP");
        public static ResponderGatewayProtocol Https { get; } = new ResponderGatewayProtocol("HTTPS");

        public static bool operator ==(ResponderGatewayProtocol left, ResponderGatewayProtocol right) => left.Equals(right);
        public static bool operator !=(ResponderGatewayProtocol left, ResponderGatewayProtocol right) => !left.Equals(right);

        public static explicit operator string(ResponderGatewayProtocol value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ResponderGatewayProtocol other && Equals(other);
        public bool Equals(ResponderGatewayProtocol other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct ResponderGatewayStatus : IEquatable<ResponderGatewayStatus>
    {
        private readonly string _value;

        private ResponderGatewayStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static ResponderGatewayStatus PendingCreation { get; } = new ResponderGatewayStatus("PENDING_CREATION");
        public static ResponderGatewayStatus Active { get; } = new ResponderGatewayStatus("ACTIVE");
        public static ResponderGatewayStatus PendingDeletion { get; } = new ResponderGatewayStatus("PENDING_DELETION");
        public static ResponderGatewayStatus Deleted { get; } = new ResponderGatewayStatus("DELETED");
        public static ResponderGatewayStatus Error { get; } = new ResponderGatewayStatus("ERROR");
        public static ResponderGatewayStatus PendingUpdate { get; } = new ResponderGatewayStatus("PENDING_UPDATE");
        public static ResponderGatewayStatus Isolated { get; } = new ResponderGatewayStatus("ISOLATED");
        public static ResponderGatewayStatus PendingIsolation { get; } = new ResponderGatewayStatus("PENDING_ISOLATION");
        public static ResponderGatewayStatus PendingRestoration { get; } = new ResponderGatewayStatus("PENDING_RESTORATION");

        public static bool operator ==(ResponderGatewayStatus left, ResponderGatewayStatus right) => left.Equals(right);
        public static bool operator !=(ResponderGatewayStatus left, ResponderGatewayStatus right) => !left.Equals(right);

        public static explicit operator string(ResponderGatewayStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is ResponderGatewayStatus other && Equals(other);
        public bool Equals(ResponderGatewayStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
