// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cassandra
{
    /// <summary>
    /// Resource schema for AWS::Cassandra::Table
    /// 
    /// ## Example Usage
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myNewTable = new AwsNative.Cassandra.Table("myNewTable", new()
    ///     {
    ///         KeyspaceName = "my_keyspace",
    ///         TableName = "my_table",
    ///         PartitionKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "Message",
    ///                 ColumnType = "ASCII",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myNewTable = new AwsNative.Cassandra.Table("myNewTable", new()
    ///     {
    ///         KeyspaceName = "my_keyspace",
    ///         TableName = "my_table",
    ///         PartitionKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "Message",
    ///                 ColumnType = "ASCII",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myNewTable = new AwsNative.Cassandra.Table("myNewTable", new()
    ///     {
    ///         KeyspaceName = "my_keyspace",
    ///         TableName = "my_table",
    ///         PartitionKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "id",
    ///                 ColumnType = "ASCII",
    ///             },
    ///         },
    ///         ClusteringKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableClusteringKeyColumnArgs
    ///             {
    ///                 Column = new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///                 {
    ///                     ColumnName = "division",
    ///                     ColumnType = "ASCII",
    ///                 },
    ///                 OrderBy = AwsNative.Cassandra.TableClusteringKeyColumnOrderBy.Asc,
    ///             },
    ///         },
    ///         RegularColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "name",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "region",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "project",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "role",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "pay_scale",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "vacation_hrs",
    ///                 ColumnType = "FLOAT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "manager_id",
    ///                 ColumnType = "TEXT",
    ///             },
    ///         },
    ///         BillingMode = new AwsNative.Cassandra.Inputs.TableBillingModeArgs
    ///         {
    ///             Mode = AwsNative.Cassandra.TableMode.Provisioned,
    ///             ProvisionedThroughput = new AwsNative.Cassandra.Inputs.TableProvisionedThroughputArgs
    ///             {
    ///                 ReadCapacityUnits = 5,
    ///                 WriteCapacityUnits = 5,
    ///             },
    ///         },
    ///         ClientSideTimestampsEnabled = true,
    ///         DefaultTimeToLive = 63072000,
    ///         PointInTimeRecoveryEnabled = true,
    ///         Tags = new[]
    ///         {
    ///             new AwsNative.Inputs.TagArgs
    ///             {
    ///                 Key = "tag1",
    ///                 Value = "val1",
    ///             },
    ///             new AwsNative.Inputs.TagArgs
    ///             {
    ///                 Key = "tag2",
    ///                 Value = "val2",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myNewTable = new AwsNative.Cassandra.Table("myNewTable", new()
    ///     {
    ///         KeyspaceName = "my_keyspace",
    ///         TableName = "my_table",
    ///         PartitionKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "id",
    ///                 ColumnType = "ASCII",
    ///             },
    ///         },
    ///         ClusteringKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableClusteringKeyColumnArgs
    ///             {
    ///                 Column = new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///                 {
    ///                     ColumnName = "division",
    ///                     ColumnType = "ASCII",
    ///                 },
    ///                 OrderBy = AwsNative.Cassandra.TableClusteringKeyColumnOrderBy.Asc,
    ///             },
    ///         },
    ///         RegularColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "name",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "region",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "project",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "role",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "pay_scale",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "vacation_hrs",
    ///                 ColumnType = "FLOAT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "manager_id",
    ///                 ColumnType = "TEXT",
    ///             },
    ///         },
    ///         BillingMode = new AwsNative.Cassandra.Inputs.TableBillingModeArgs
    ///         {
    ///             Mode = AwsNative.Cassandra.TableMode.Provisioned,
    ///             ProvisionedThroughput = new AwsNative.Cassandra.Inputs.TableProvisionedThroughputArgs
    ///             {
    ///                 ReadCapacityUnits = 5,
    ///                 WriteCapacityUnits = 5,
    ///             },
    ///         },
    ///         ClientSideTimestampsEnabled = true,
    ///         DefaultTimeToLive = 63072000,
    ///         PointInTimeRecoveryEnabled = true,
    ///         Tags = new[]
    ///         {
    ///             new AwsNative.Inputs.TagArgs
    ///             {
    ///                 Key = "tag1",
    ///                 Value = "val1",
    ///             },
    ///             new AwsNative.Inputs.TagArgs
    ///             {
    ///                 Key = "tag2",
    ///                 Value = "val2",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myNewTable = new AwsNative.Cassandra.Table("myNewTable", new()
    ///     {
    ///         KeyspaceName = "my_keyspace",
    ///         TableName = "my_table",
    ///         PartitionKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "id",
    ///                 ColumnType = "ASCII",
    ///             },
    ///         },
    ///         ClusteringKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableClusteringKeyColumnArgs
    ///             {
    ///                 Column = new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///                 {
    ///                     ColumnName = "division",
    ///                     ColumnType = "ASCII",
    ///                 },
    ///                 OrderBy = AwsNative.Cassandra.TableClusteringKeyColumnOrderBy.Asc,
    ///             },
    ///         },
    ///         RegularColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "name",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "region",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "project",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "role",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "pay_scale",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "vacation_hrs",
    ///                 ColumnType = "FLOAT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "manager_id",
    ///                 ColumnType = "TEXT",
    ///             },
    ///         },
    ///         BillingMode = new AwsNative.Cassandra.Inputs.TableBillingModeArgs
    ///         {
    ///             Mode = AwsNative.Cassandra.TableMode.Provisioned,
    ///             ProvisionedThroughput = new AwsNative.Cassandra.Inputs.TableProvisionedThroughputArgs
    ///             {
    ///                 ReadCapacityUnits = 5,
    ///                 WriteCapacityUnits = 5,
    ///             },
    ///         },
    ///         DefaultTimeToLive = 63072000,
    ///         EncryptionSpecification = new AwsNative.Cassandra.Inputs.TableEncryptionSpecificationArgs
    ///         {
    ///             EncryptionType = AwsNative.Cassandra.TableEncryptionType.CustomerManagedKmsKey,
    ///             KmsKeyIdentifier = "arn:aws:kms:eu-west-1:5555555555555:key/11111111-1111-111-1111-111111111111",
    ///         },
    ///         PointInTimeRecoveryEnabled = true,
    ///         Tags = new[]
    ///         {
    ///             new AwsNative.Inputs.TagArgs
    ///             {
    ///                 Key = "tag1",
    ///                 Value = "val1",
    ///             },
    ///             new AwsNative.Inputs.TagArgs
    ///             {
    ///                 Key = "tag2",
    ///                 Value = "val2",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myNewTable = new AwsNative.Cassandra.Table("myNewTable", new()
    ///     {
    ///         KeyspaceName = "my_keyspace",
    ///         TableName = "my_table",
    ///         PartitionKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "id",
    ///                 ColumnType = "ASCII",
    ///             },
    ///         },
    ///         ClusteringKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableClusteringKeyColumnArgs
    ///             {
    ///                 Column = new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///                 {
    ///                     ColumnName = "division",
    ///                     ColumnType = "ASCII",
    ///                 },
    ///                 OrderBy = AwsNative.Cassandra.TableClusteringKeyColumnOrderBy.Asc,
    ///             },
    ///         },
    ///         RegularColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "name",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "region",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "project",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "role",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "pay_scale",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "vacation_hrs",
    ///                 ColumnType = "FLOAT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "manager_id",
    ///                 ColumnType = "TEXT",
    ///             },
    ///         },
    ///         BillingMode = new AwsNative.Cassandra.Inputs.TableBillingModeArgs
    ///         {
    ///             Mode = AwsNative.Cassandra.TableMode.Provisioned,
    ///             ProvisionedThroughput = new AwsNative.Cassandra.Inputs.TableProvisionedThroughputArgs
    ///             {
    ///                 ReadCapacityUnits = 5,
    ///                 WriteCapacityUnits = 5,
    ///             },
    ///         },
    ///         DefaultTimeToLive = 63072000,
    ///         EncryptionSpecification = new AwsNative.Cassandra.Inputs.TableEncryptionSpecificationArgs
    ///         {
    ///             EncryptionType = AwsNative.Cassandra.TableEncryptionType.CustomerManagedKmsKey,
    ///             KmsKeyIdentifier = "arn:aws:kms:eu-west-1:5555555555555:key/11111111-1111-111-1111-111111111111",
    ///         },
    ///         PointInTimeRecoveryEnabled = true,
    ///         Tags = new[]
    ///         {
    ///             new AwsNative.Inputs.TagArgs
    ///             {
    ///                 Key = "tag1",
    ///                 Value = "val1",
    ///             },
    ///             new AwsNative.Inputs.TagArgs
    ///             {
    ///                 Key = "tag2",
    ///                 Value = "val2",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myTable = new AwsNative.Cassandra.Table("myTable", new()
    ///     {
    ///         KeyspaceName = "my_keyspace",
    ///         TableName = "my_table",
    ///         PartitionKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "Message",
    ///                 ColumnType = "ASCII",
    ///             },
    ///         },
    ///         RegularColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "name",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "region",
    ///                 ColumnType = "TEXT",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myTable = new AwsNative.Cassandra.Table("myTable", new()
    ///     {
    ///         KeyspaceName = "my_keyspace",
    ///         TableName = "my_table",
    ///         PartitionKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "Message",
    ///                 ColumnType = "ASCII",
    ///             },
    ///         },
    ///         RegularColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "name",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "region",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "project",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "role",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "pay_scale",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "vacation_hrs",
    ///                 ColumnType = "FLOAT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "manager_id",
    ///                 ColumnType = "TEXT",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myTable = new AwsNative.Cassandra.Table("myTable", new()
    ///     {
    ///         KeyspaceName = "my_keyspace",
    ///         TableName = "my_table",
    ///         PartitionKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "Message",
    ///                 ColumnType = "ASCII",
    ///             },
    ///         },
    ///         RegularColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "name",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "region",
    ///                 ColumnType = "TEXT",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// ### Example
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AwsNative = Pulumi.AwsNative;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myTable = new AwsNative.Cassandra.Table("myTable", new()
    ///     {
    ///         KeyspaceName = "my_keyspace",
    ///         TableName = "my_table",
    ///         PartitionKeyColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "Message",
    ///                 ColumnType = "ASCII",
    ///             },
    ///         },
    ///         RegularColumns = new[]
    ///         {
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "name",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "region",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "project",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "role",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "pay_scale",
    ///                 ColumnType = "TEXT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "vacation_hrs",
    ///                 ColumnType = "FLOAT",
    ///             },
    ///             new AwsNative.Cassandra.Inputs.TableColumnArgs
    ///             {
    ///                 ColumnName = "manager_id",
    ///                 ColumnType = "TEXT",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// 
    /// 
    /// ```
    /// </summary>
    [AwsNativeResourceType("aws-native:cassandra:Table")]
    public partial class Table : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The optional auto scaling capacity settings for a table in provisioned capacity mode.
        /// </summary>
        [Output("autoScalingSpecifications")]
        public Output<Outputs.TableAutoScalingSpecification?> AutoScalingSpecifications { get; private set; } = null!;

        /// <summary>
        /// The billing mode for the table, which determines how you'll be charged for reads and writes:
        /// 
        /// - *On-demand mode* (default) - You pay based on the actual reads and writes your application performs.
        /// - *Provisioned mode* - Lets you specify the number of reads and writes per second that you need for your application.
        /// 
        /// If you don't specify a value for this property, then the table will use on-demand mode.
        /// </summary>
        [Output("billingMode")]
        public Output<Outputs.TableBillingMode?> BillingMode { get; private set; } = null!;

        [Output("cdcSpecification")]
        public Output<Outputs.TableCdcSpecification?> CdcSpecification { get; private set; } = null!;

        /// <summary>
        /// Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it is enabled it cannot be disabled again.
        /// </summary>
        [Output("clientSideTimestampsEnabled")]
        public Output<bool?> ClientSideTimestampsEnabled { get; private set; } = null!;

        /// <summary>
        /// Clustering key columns of the table
        /// </summary>
        [Output("clusteringKeyColumns")]
        public Output<ImmutableArray<Outputs.TableClusteringKeyColumn>> ClusteringKeyColumns { get; private set; } = null!;

        /// <summary>
        /// Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
        /// </summary>
        [Output("defaultTimeToLive")]
        public Output<int?> DefaultTimeToLive { get; private set; } = null!;

        /// <summary>
        /// The encryption at rest options for the table.
        /// 
        /// - *AWS owned key* (default) - The key is owned by Amazon Keyspaces .
        /// - *Customer managed key* - The key is stored in your account and is created, owned, and managed by you.
        /// 
        /// &gt; If you choose encryption with a customer managed key, you must specify a valid customer managed KMS key with permissions granted to Amazon Keyspaces.
        /// 
        /// For more information, see [Encryption at rest in Amazon Keyspaces](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html) in the *Amazon Keyspaces Developer Guide* .
        /// </summary>
        [Output("encryptionSpecification")]
        public Output<Outputs.TableEncryptionSpecification?> EncryptionSpecification { get; private set; } = null!;

        /// <summary>
        /// Name for Cassandra keyspace
        /// </summary>
        [Output("keyspaceName")]
        public Output<string> KeyspaceName { get; private set; } = null!;

        /// <summary>
        /// Partition key columns of the table
        /// </summary>
        [Output("partitionKeyColumns")]
        public Output<ImmutableArray<Outputs.TableColumn>> PartitionKeyColumns { get; private set; } = null!;

        /// <summary>
        /// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
        /// </summary>
        [Output("pointInTimeRecoveryEnabled")]
        public Output<bool?> PointInTimeRecoveryEnabled { get; private set; } = null!;

        /// <summary>
        /// Non-key columns of the table
        /// </summary>
        [Output("regularColumns")]
        public Output<ImmutableArray<Outputs.TableColumn>> RegularColumns { get; private set; } = null!;

        /// <summary>
        /// The AWS Region specific settings of a multi-Region table.
        /// 
        /// For a multi-Region table, you can configure the table's read capacity differently per AWS Region. You can do this by configuring the following parameters.
        /// 
        /// - `region` : The Region where these settings are applied. (Required)
        /// - `readCapacityUnits` : The provisioned read capacity units. (Optional)
        /// - `readCapacityAutoScaling` : The read capacity auto scaling settings for the table. (Optional)
        /// </summary>
        [Output("replicaSpecifications")]
        public Output<ImmutableArray<Outputs.TableReplicaSpecification>> ReplicaSpecifications { get; private set; } = null!;

        /// <summary>
        /// Name for Cassandra table
        /// </summary>
        [Output("tableName")]
        public Output<string?> TableName { get; private set; } = null!;

        /// <summary>
        /// An array of key-value pairs to apply to this resource
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Pulumi.AwsNative.Outputs.Tag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Table resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Table(string name, TableArgs args, CustomResourceOptions? options = null)
            : base("aws-native:cassandra:Table", name, args ?? new TableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Table(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:cassandra:Table", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "clientSideTimestampsEnabled",
                    "clusteringKeyColumns[*]",
                    "keyspaceName",
                    "partitionKeyColumns[*]",
                    "tableName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Table resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Table Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Table(name, id, options);
        }
    }

    public sealed class TableArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The optional auto scaling capacity settings for a table in provisioned capacity mode.
        /// </summary>
        [Input("autoScalingSpecifications")]
        public Input<Inputs.TableAutoScalingSpecificationArgs>? AutoScalingSpecifications { get; set; }

        /// <summary>
        /// The billing mode for the table, which determines how you'll be charged for reads and writes:
        /// 
        /// - *On-demand mode* (default) - You pay based on the actual reads and writes your application performs.
        /// - *Provisioned mode* - Lets you specify the number of reads and writes per second that you need for your application.
        /// 
        /// If you don't specify a value for this property, then the table will use on-demand mode.
        /// </summary>
        [Input("billingMode")]
        public Input<Inputs.TableBillingModeArgs>? BillingMode { get; set; }

        [Input("cdcSpecification")]
        public Input<Inputs.TableCdcSpecificationArgs>? CdcSpecification { get; set; }

        /// <summary>
        /// Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it is enabled it cannot be disabled again.
        /// </summary>
        [Input("clientSideTimestampsEnabled")]
        public Input<bool>? ClientSideTimestampsEnabled { get; set; }

        [Input("clusteringKeyColumns")]
        private InputList<Inputs.TableClusteringKeyColumnArgs>? _clusteringKeyColumns;

        /// <summary>
        /// Clustering key columns of the table
        /// </summary>
        public InputList<Inputs.TableClusteringKeyColumnArgs> ClusteringKeyColumns
        {
            get => _clusteringKeyColumns ?? (_clusteringKeyColumns = new InputList<Inputs.TableClusteringKeyColumnArgs>());
            set => _clusteringKeyColumns = value;
        }

        /// <summary>
        /// Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
        /// </summary>
        [Input("defaultTimeToLive")]
        public Input<int>? DefaultTimeToLive { get; set; }

        /// <summary>
        /// The encryption at rest options for the table.
        /// 
        /// - *AWS owned key* (default) - The key is owned by Amazon Keyspaces .
        /// - *Customer managed key* - The key is stored in your account and is created, owned, and managed by you.
        /// 
        /// &gt; If you choose encryption with a customer managed key, you must specify a valid customer managed KMS key with permissions granted to Amazon Keyspaces.
        /// 
        /// For more information, see [Encryption at rest in Amazon Keyspaces](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html) in the *Amazon Keyspaces Developer Guide* .
        /// </summary>
        [Input("encryptionSpecification")]
        public Input<Inputs.TableEncryptionSpecificationArgs>? EncryptionSpecification { get; set; }

        /// <summary>
        /// Name for Cassandra keyspace
        /// </summary>
        [Input("keyspaceName", required: true)]
        public Input<string> KeyspaceName { get; set; } = null!;

        [Input("partitionKeyColumns", required: true)]
        private InputList<Inputs.TableColumnArgs>? _partitionKeyColumns;

        /// <summary>
        /// Partition key columns of the table
        /// </summary>
        public InputList<Inputs.TableColumnArgs> PartitionKeyColumns
        {
            get => _partitionKeyColumns ?? (_partitionKeyColumns = new InputList<Inputs.TableColumnArgs>());
            set => _partitionKeyColumns = value;
        }

        /// <summary>
        /// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
        /// </summary>
        [Input("pointInTimeRecoveryEnabled")]
        public Input<bool>? PointInTimeRecoveryEnabled { get; set; }

        [Input("regularColumns")]
        private InputList<Inputs.TableColumnArgs>? _regularColumns;

        /// <summary>
        /// Non-key columns of the table
        /// </summary>
        public InputList<Inputs.TableColumnArgs> RegularColumns
        {
            get => _regularColumns ?? (_regularColumns = new InputList<Inputs.TableColumnArgs>());
            set => _regularColumns = value;
        }

        [Input("replicaSpecifications")]
        private InputList<Inputs.TableReplicaSpecificationArgs>? _replicaSpecifications;

        /// <summary>
        /// The AWS Region specific settings of a multi-Region table.
        /// 
        /// For a multi-Region table, you can configure the table's read capacity differently per AWS Region. You can do this by configuring the following parameters.
        /// 
        /// - `region` : The Region where these settings are applied. (Required)
        /// - `readCapacityUnits` : The provisioned read capacity units. (Optional)
        /// - `readCapacityAutoScaling` : The read capacity auto scaling settings for the table. (Optional)
        /// </summary>
        public InputList<Inputs.TableReplicaSpecificationArgs> ReplicaSpecifications
        {
            get => _replicaSpecifications ?? (_replicaSpecifications = new InputList<Inputs.TableReplicaSpecificationArgs>());
            set => _replicaSpecifications = value;
        }

        /// <summary>
        /// Name for Cassandra table
        /// </summary>
        [Input("tableName")]
        public Input<string>? TableName { get; set; }

        [Input("tags")]
        private InputList<Pulumi.AwsNative.Inputs.TagArgs>? _tags;

        /// <summary>
        /// An array of key-value pairs to apply to this resource
        /// </summary>
        public InputList<Pulumi.AwsNative.Inputs.TagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Pulumi.AwsNative.Inputs.TagArgs>());
            set => _tags = value;
        }

        public TableArgs()
        {
        }
        public static new TableArgs Empty => new TableArgs();
    }
}
