// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cassandra.Inputs
{

    /// <summary>
    /// Represents configuration for target tracking scaling policy.
    /// </summary>
    public sealed class TableTargetTrackingScalingPolicyConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies if `scale-in` is enabled.
        /// 
        /// When auto scaling automatically decreases capacity for a table, the table *scales in* . When scaling policies are set, they can't scale in the table lower than its minimum capacity.
        /// </summary>
        [Input("disableScaleIn")]
        public Input<bool>? DisableScaleIn { get; set; }

        /// <summary>
        /// Specifies a `scale-in` cool down period.
        /// 
        /// A cooldown period in seconds between scaling activities that lets the table stabilize before another scaling activity starts.
        /// </summary>
        [Input("scaleInCooldown")]
        public Input<int>? ScaleInCooldown { get; set; }

        /// <summary>
        /// Specifies a scale out cool down period.
        /// 
        /// A cooldown period in seconds between scaling activities that lets the table stabilize before another scaling activity starts.
        /// </summary>
        [Input("scaleOutCooldown")]
        public Input<int>? ScaleOutCooldown { get; set; }

        /// <summary>
        /// Specifies the target value for the target tracking auto scaling policy.
        /// 
        /// Amazon Keyspaces auto scaling scales up capacity automatically when traffic exceeds this target utilization rate, and then back down when it falls below the target. This ensures that the ratio of consumed capacity to provisioned capacity stays at or near this value. You define `targetValue` as a percentage. An `integer` between 20 and 90.
        /// </summary>
        [Input("targetValue", required: true)]
        public Input<int> TargetValue { get; set; } = null!;

        public TableTargetTrackingScalingPolicyConfigurationArgs()
        {
        }
        public static new TableTargetTrackingScalingPolicyConfigurationArgs Empty => new TableTargetTrackingScalingPolicyConfigurationArgs();
    }
}
