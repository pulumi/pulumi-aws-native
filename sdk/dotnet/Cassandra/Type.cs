// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cassandra
{
    /// <summary>
    /// Resource schema for AWS::Cassandra::Type
    /// </summary>
    [AwsNativeResourceType("aws-native:cassandra:Type")]
    public partial class Type : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of parent User-Defined Types that directly reference the User-Defined Type in their fields.
        /// </summary>
        [Output("directParentTypes")]
        public Output<ImmutableArray<string>> DirectParentTypes { get; private set; } = null!;

        /// <summary>
        /// List of Tables that directly reference the User-Defined Type in their columns.
        /// </summary>
        [Output("directReferringTables")]
        public Output<ImmutableArray<string>> DirectReferringTables { get; private set; } = null!;

        /// <summary>
        /// Field definitions of the User-Defined Type
        /// </summary>
        [Output("fields")]
        public Output<ImmutableArray<Outputs.TypeField>> Fields { get; private set; } = null!;

        /// <summary>
        /// ARN of the Keyspace which contains the User-Defined Type.
        /// </summary>
        [Output("keyspaceArn")]
        public Output<string> KeyspaceArn { get; private set; } = null!;

        /// <summary>
        /// Name of the Keyspace which contains the User-Defined Type.
        /// </summary>
        [Output("keyspaceName")]
        public Output<string> KeyspaceName { get; private set; } = null!;

        /// <summary>
        /// Timestamp of the last time the User-Defined Type's meta data was modified.
        /// </summary>
        [Output("lastModifiedTimestamp")]
        public Output<double> LastModifiedTimestamp { get; private set; } = null!;

        /// <summary>
        /// Maximum nesting depth of the User-Defined Type across the field types.
        /// </summary>
        [Output("maxNestingDepth")]
        public Output<int> MaxNestingDepth { get; private set; } = null!;

        /// <summary>
        /// Name of the User-Defined Type.
        /// </summary>
        [Output("typeName")]
        public Output<string> TypeName { get; private set; } = null!;


        /// <summary>
        /// Create a Type resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Type(string name, TypeArgs args, CustomResourceOptions? options = null)
            : base("aws-native:cassandra:Type", name, args ?? new TypeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Type(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:cassandra:Type", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "fields[*]",
                    "keyspaceName",
                    "typeName",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Type resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Type Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Type(name, id, options);
        }
    }

    public sealed class TypeArgs : global::Pulumi.ResourceArgs
    {
        [Input("fields", required: true)]
        private InputList<Inputs.TypeFieldArgs>? _fields;

        /// <summary>
        /// Field definitions of the User-Defined Type
        /// </summary>
        public InputList<Inputs.TypeFieldArgs> Fields
        {
            get => _fields ?? (_fields = new InputList<Inputs.TypeFieldArgs>());
            set => _fields = value;
        }

        /// <summary>
        /// Name of the Keyspace which contains the User-Defined Type.
        /// </summary>
        [Input("keyspaceName", required: true)]
        public Input<string> KeyspaceName { get; set; } = null!;

        /// <summary>
        /// Name of the User-Defined Type.
        /// </summary>
        [Input("typeName")]
        public Input<string>? TypeName { get; set; }

        public TypeArgs()
        {
        }
        public static new TypeArgs Empty => new TypeArgs();
    }
}
