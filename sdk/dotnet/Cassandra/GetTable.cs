// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cassandra
{
    public static class GetTable
    {
        /// <summary>
        /// Resource schema for AWS::Cassandra::Table
        /// </summary>
        public static Task<GetTableResult> InvokeAsync(GetTableArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTableResult>("aws-native:cassandra:getTable", args ?? new GetTableArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Cassandra::Table
        /// </summary>
        public static Output<GetTableResult> Invoke(GetTableInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableResult>("aws-native:cassandra:getTable", args ?? new GetTableInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Cassandra::Table
        /// </summary>
        public static Output<GetTableResult> Invoke(GetTableInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTableResult>("aws-native:cassandra:getTable", args ?? new GetTableInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTableArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for Cassandra keyspace
        /// </summary>
        [Input("keyspaceName", required: true)]
        public string KeyspaceName { get; set; } = null!;

        /// <summary>
        /// Name for Cassandra table
        /// </summary>
        [Input("tableName", required: true)]
        public string TableName { get; set; } = null!;

        public GetTableArgs()
        {
        }
        public static new GetTableArgs Empty => new GetTableArgs();
    }

    public sealed class GetTableInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for Cassandra keyspace
        /// </summary>
        [Input("keyspaceName", required: true)]
        public Input<string> KeyspaceName { get; set; } = null!;

        /// <summary>
        /// Name for Cassandra table
        /// </summary>
        [Input("tableName", required: true)]
        public Input<string> TableName { get; set; } = null!;

        public GetTableInvokeArgs()
        {
        }
        public static new GetTableInvokeArgs Empty => new GetTableInvokeArgs();
    }


    [OutputType]
    public sealed class GetTableResult
    {
        /// <summary>
        /// The billing mode for the table, which determines how you'll be charged for reads and writes:
        /// 
        /// - *On-demand mode* (default) - You pay based on the actual reads and writes your application performs.
        /// - *Provisioned mode* - Lets you specify the number of reads and writes per second that you need for your application.
        /// 
        /// If you don't specify a value for this property, then the table will use on-demand mode.
        /// </summary>
        public readonly Outputs.TableBillingMode? BillingMode;
        /// <summary>
        /// Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
        /// </summary>
        public readonly int? DefaultTimeToLive;
        /// <summary>
        /// The encryption at rest options for the table.
        /// 
        /// - *AWS owned key* (default) - The key is owned by Amazon Keyspaces .
        /// - *Customer managed key* - The key is stored in your account and is created, owned, and managed by you.
        /// 
        /// &gt; If you choose encryption with a customer managed key, you must specify a valid customer managed KMS key with permissions granted to Amazon Keyspaces.
        /// 
        /// For more information, see [Encryption at rest in Amazon Keyspaces](https://docs.aws.amazon.com/keyspaces/latest/devguide/EncryptionAtRest.html) in the *Amazon Keyspaces Developer Guide* .
        /// </summary>
        public readonly Outputs.TableEncryptionSpecification? EncryptionSpecification;
        /// <summary>
        /// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
        /// </summary>
        public readonly bool? PointInTimeRecoveryEnabled;
        /// <summary>
        /// Non-key columns of the table
        /// </summary>
        public readonly ImmutableArray<Outputs.TableColumn> RegularColumns;
        /// <summary>
        /// An array of key-value pairs to apply to this resource
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetTableResult(
            Outputs.TableBillingMode? billingMode,

            int? defaultTimeToLive,

            Outputs.TableEncryptionSpecification? encryptionSpecification,

            bool? pointInTimeRecoveryEnabled,

            ImmutableArray<Outputs.TableColumn> regularColumns,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            BillingMode = billingMode;
            DefaultTimeToLive = defaultTimeToLive;
            EncryptionSpecification = encryptionSpecification;
            PointInTimeRecoveryEnabled = pointInTimeRecoveryEnabled;
            RegularColumns = regularColumns;
            Tags = tags;
        }
    }
}
