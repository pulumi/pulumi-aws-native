// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cassandra
{
    public static class GetType
    {
        /// <summary>
        /// Resource schema for AWS::Cassandra::Type
        /// </summary>
        public static Task<GetTypeResult> InvokeAsync(GetTypeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTypeResult>("aws-native:cassandra:getType", args ?? new GetTypeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Cassandra::Type
        /// </summary>
        public static Output<GetTypeResult> Invoke(GetTypeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTypeResult>("aws-native:cassandra:getType", args ?? new GetTypeInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Cassandra::Type
        /// </summary>
        public static Output<GetTypeResult> Invoke(GetTypeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTypeResult>("aws-native:cassandra:getType", args ?? new GetTypeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTypeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Keyspace which contains the User-Defined Type.
        /// </summary>
        [Input("keyspaceName", required: true)]
        public string KeyspaceName { get; set; } = null!;

        /// <summary>
        /// Name of the User-Defined Type.
        /// </summary>
        [Input("typeName", required: true)]
        public string TypeName { get; set; } = null!;

        public GetTypeArgs()
        {
        }
        public static new GetTypeArgs Empty => new GetTypeArgs();
    }

    public sealed class GetTypeInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Keyspace which contains the User-Defined Type.
        /// </summary>
        [Input("keyspaceName", required: true)]
        public Input<string> KeyspaceName { get; set; } = null!;

        /// <summary>
        /// Name of the User-Defined Type.
        /// </summary>
        [Input("typeName", required: true)]
        public Input<string> TypeName { get; set; } = null!;

        public GetTypeInvokeArgs()
        {
        }
        public static new GetTypeInvokeArgs Empty => new GetTypeInvokeArgs();
    }


    [OutputType]
    public sealed class GetTypeResult
    {
        /// <summary>
        /// List of parent User-Defined Types that directly reference the User-Defined Type in their fields.
        /// </summary>
        public readonly ImmutableArray<string> DirectParentTypes;
        /// <summary>
        /// List of Tables that directly reference the User-Defined Type in their columns.
        /// </summary>
        public readonly ImmutableArray<string> DirectReferringTables;
        /// <summary>
        /// ARN of the Keyspace which contains the User-Defined Type.
        /// </summary>
        public readonly string? KeyspaceArn;
        /// <summary>
        /// Timestamp of the last time the User-Defined Type's meta data was modified.
        /// </summary>
        public readonly double? LastModifiedTimestamp;
        /// <summary>
        /// Maximum nesting depth of the User-Defined Type across the field types.
        /// </summary>
        public readonly int? MaxNestingDepth;

        [OutputConstructor]
        private GetTypeResult(
            ImmutableArray<string> directParentTypes,

            ImmutableArray<string> directReferringTables,

            string? keyspaceArn,

            double? lastModifiedTimestamp,

            int? maxNestingDepth)
        {
            DirectParentTypes = directParentTypes;
            DirectReferringTables = directReferringTables;
            KeyspaceArn = keyspaceArn;
            LastModifiedTimestamp = lastModifiedTimestamp;
            MaxNestingDepth = maxNestingDepth;
        }
    }
}
