// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cassandra
{
    public static class GetKeyspace
    {
        /// <summary>
        /// Resource schema for AWS::Cassandra::Keyspace
        /// </summary>
        public static Task<GetKeyspaceResult> InvokeAsync(GetKeyspaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKeyspaceResult>("aws-native:cassandra:getKeyspace", args ?? new GetKeyspaceArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Cassandra::Keyspace
        /// </summary>
        public static Output<GetKeyspaceResult> Invoke(GetKeyspaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKeyspaceResult>("aws-native:cassandra:getKeyspace", args ?? new GetKeyspaceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Cassandra::Keyspace
        /// </summary>
        public static Output<GetKeyspaceResult> Invoke(GetKeyspaceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetKeyspaceResult>("aws-native:cassandra:getKeyspace", args ?? new GetKeyspaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKeyspaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for Cassandra keyspace
        /// </summary>
        [Input("keyspaceName", required: true)]
        public string KeyspaceName { get; set; } = null!;

        public GetKeyspaceArgs()
        {
        }
        public static new GetKeyspaceArgs Empty => new GetKeyspaceArgs();
    }

    public sealed class GetKeyspaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for Cassandra keyspace
        /// </summary>
        [Input("keyspaceName", required: true)]
        public Input<string> KeyspaceName { get; set; } = null!;

        public GetKeyspaceInvokeArgs()
        {
        }
        public static new GetKeyspaceInvokeArgs Empty => new GetKeyspaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetKeyspaceResult
    {
        /// <summary>
        /// Indicates whether client-side timestamps are enabled (true) or disabled (false) for all tables in the keyspace. To add a Region to a single-Region keyspace with at least one table, the value must be set to true. After you enabled client-side timestamps for a table, you canâ€™t disable it again.
        /// </summary>
        public readonly bool? ClientSideTimestampsEnabled;
        /// <summary>
        /// Specifies the `ReplicationStrategy` of a keyspace. The options are:
        /// 
        /// - `SINGLE_REGION` for a single Region keyspace (optional) or
        /// - `MULTI_REGION` for a multi-Region keyspace
        /// 
        /// If no `ReplicationStrategy` is provided, the default is `SINGLE_REGION` . If you choose `MULTI_REGION` , you must also provide a `RegionList` with the AWS Regions that the keyspace is replicated in.
        /// </summary>
        public readonly Outputs.KeyspaceReplicationSpecification? ReplicationSpecification;
        /// <summary>
        /// An array of key-value pairs to apply to this resource.
        /// 
        /// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetKeyspaceResult(
            bool? clientSideTimestampsEnabled,

            Outputs.KeyspaceReplicationSpecification? replicationSpecification,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            ClientSideTimestampsEnabled = clientSideTimestampsEnabled;
            ReplicationSpecification = replicationSpecification;
            Tags = tags;
        }
    }
}
