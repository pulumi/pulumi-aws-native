// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Cassandra
{
    public static class GetKeyspace
    {
        /// <summary>
        /// Resource schema for AWS::Cassandra::Keyspace
        /// </summary>
        public static Task<GetKeyspaceResult> InvokeAsync(GetKeyspaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKeyspaceResult>("aws-native:cassandra:getKeyspace", args ?? new GetKeyspaceArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Cassandra::Keyspace
        /// </summary>
        public static Output<GetKeyspaceResult> Invoke(GetKeyspaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKeyspaceResult>("aws-native:cassandra:getKeyspace", args ?? new GetKeyspaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKeyspaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for Cassandra keyspace
        /// </summary>
        [Input("keyspaceName", required: true)]
        public string KeyspaceName { get; set; } = null!;

        public GetKeyspaceArgs()
        {
        }
        public static new GetKeyspaceArgs Empty => new GetKeyspaceArgs();
    }

    public sealed class GetKeyspaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name for Cassandra keyspace
        /// </summary>
        [Input("keyspaceName", required: true)]
        public Input<string> KeyspaceName { get; set; } = null!;

        public GetKeyspaceInvokeArgs()
        {
        }
        public static new GetKeyspaceInvokeArgs Empty => new GetKeyspaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetKeyspaceResult
    {
        /// <summary>
        /// Describes a tag. A tag is a key-value pair. You can add up to 50 tags to a single Amazon Keyspaces resource.
        /// 
        /// AWS -assigned tag names and values are automatically assigned the `aws:` prefix, which the user cannot assign. AWS -assigned tag names do not count towards the tag limit of 50. User-assigned tag names have the prefix `user:` in the Cost Allocation Report. You cannot backdate the application of a tag.
        /// 
        /// For more information, see [Adding tags and labels to Amazon Keyspaces resources](https://docs.aws.amazon.com/keyspaces/latest/devguide/tagging-keyspaces.html) in the *Amazon Keyspaces Developer Guide* .
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetKeyspaceResult(ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Tags = tags;
        }
    }
}
