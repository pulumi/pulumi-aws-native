// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Grafana
{
    public static class GetWorkspace
    {
        /// <summary>
        /// Definition of AWS::Grafana::Workspace Resource Type
        /// </summary>
        public static Task<GetWorkspaceResult> InvokeAsync(GetWorkspaceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWorkspaceResult>("aws-native:grafana:getWorkspace", args ?? new GetWorkspaceArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Grafana::Workspace Resource Type
        /// </summary>
        public static Output<GetWorkspaceResult> Invoke(GetWorkspaceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceResult>("aws-native:grafana:getWorkspace", args ?? new GetWorkspaceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Definition of AWS::Grafana::Workspace Resource Type
        /// </summary>
        public static Output<GetWorkspaceResult> Invoke(GetWorkspaceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetWorkspaceResult>("aws-native:grafana:getWorkspace", args ?? new GetWorkspaceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWorkspaceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id that uniquely identifies a Grafana workspace.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetWorkspaceArgs()
        {
        }
        public static new GetWorkspaceArgs Empty => new GetWorkspaceArgs();
    }

    public sealed class GetWorkspaceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id that uniquely identifies a Grafana workspace.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetWorkspaceInvokeArgs()
        {
        }
        public static new GetWorkspaceInvokeArgs Empty => new GetWorkspaceInvokeArgs();
    }


    [OutputType]
    public sealed class GetWorkspaceResult
    {
        /// <summary>
        /// Specifies whether the workspace can access AWS resources in this AWS account only, or whether it can also access AWS resources in other accounts in the same organization. If this is `ORGANIZATION` , the `OrganizationalUnits` parameter specifies which organizational units the workspace can access.
        /// </summary>
        public readonly Pulumi.AwsNative.Grafana.WorkspaceAccountAccessType? AccountAccessType;
        /// <summary>
        /// List of authentication providers to enable.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Grafana.WorkspaceAuthenticationProviderTypes> AuthenticationProviders;
        /// <summary>
        /// Timestamp when the workspace was created.
        /// </summary>
        public readonly string? CreationTimestamp;
        /// <summary>
        /// List of data sources on the service managed IAM role.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Grafana.WorkspaceDataSourceType> DataSources;
        /// <summary>
        /// Description of a workspace.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Endpoint for the Grafana workspace.
        /// </summary>
        public readonly string? Endpoint;
        /// <summary>
        /// The version of Grafana to support in your workspace.
        /// </summary>
        public readonly string? GrafanaVersion;
        /// <summary>
        /// The id that uniquely identifies a Grafana workspace.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Timestamp when the workspace was last modified
        /// </summary>
        public readonly string? ModificationTimestamp;
        /// <summary>
        /// The user friendly name of a workspace.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The configuration settings for network access to your workspace.
        /// </summary>
        public readonly Outputs.WorkspaceNetworkAccessControl? NetworkAccessControl;
        /// <summary>
        /// List of notification destinations on the customers service managed IAM role that the Grafana workspace can query.
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Grafana.WorkspaceNotificationDestinationType> NotificationDestinations;
        /// <summary>
        /// The name of an IAM role that already exists to use with AWS Organizations to access AWS data sources and notification channels in other accounts in an organization.
        /// </summary>
        public readonly string? OrganizationRoleName;
        /// <summary>
        /// List of Organizational Units containing AWS accounts the Grafana workspace can pull data from.
        /// </summary>
        public readonly ImmutableArray<string> OrganizationalUnits;
        /// <summary>
        /// If this is `SERVICE_MANAGED` , and the workplace was created through the Amazon Managed Grafana console, then Amazon Managed Grafana automatically creates the IAM roles and provisions the permissions that the workspace needs to use AWS data sources and notification channels.
        /// 
        /// If this is `CUSTOMER_MANAGED` , you must manage those roles and permissions yourself.
        /// 
        /// If you are working with a workspace in a member account of an organization and that account is not a delegated administrator account, and you want the workspace to access data sources in other AWS accounts in the organization, this parameter must be set to `CUSTOMER_MANAGED` .
        /// 
        /// For more information about converting between customer and service managed, see [Managing permissions for data sources and notification channels](https://docs.aws.amazon.com/grafana/latest/userguide/AMG-datasource-and-notification.html) . For more information about the roles and permissions that must be managed for customer managed workspaces, see [Amazon Managed Grafana permissions and policies for AWS data sources and notification channels](https://docs.aws.amazon.com/grafana/latest/userguide/AMG-manage-permissions.html)
        /// </summary>
        public readonly Pulumi.AwsNative.Grafana.WorkspacePermissionType? PermissionType;
        /// <summary>
        /// Allow workspace admins to install plugins
        /// </summary>
        public readonly bool? PluginAdminEnabled;
        /// <summary>
        /// IAM Role that will be used to grant the Grafana workspace access to a customers AWS resources.
        /// </summary>
        public readonly string? RoleArn;
        /// <summary>
        /// If the workspace uses SAML, use this structure to map SAML assertion attributes to workspace user information and define which groups in the assertion attribute are to have the `Admin` and `Editor` roles in the workspace.
        /// </summary>
        public readonly Outputs.WorkspaceSamlConfiguration? SamlConfiguration;
        /// <summary>
        /// Specifies whether the workspace's SAML configuration is complete.
        /// 
        /// Valid values: `CONFIGURED | NOT_CONFIGURED`
        /// 
        /// Type: String
        /// </summary>
        public readonly Pulumi.AwsNative.Grafana.WorkspaceSamlConfigurationStatus? SamlConfigurationStatus;
        /// <summary>
        /// The client ID of the AWS SSO Managed Application.
        /// </summary>
        public readonly string? SsoClientId;
        /// <summary>
        /// The name of the AWS CloudFormation stack set to use to generate IAM roles to be used for this workspace.
        /// </summary>
        public readonly string? StackSetName;
        /// <summary>
        /// The current status of the workspace.
        /// 
        /// Valid values: `ACTIVE | CREATING | DELETING | FAILED | UPDATING | UPGRADING | DELETION_FAILED | CREATION_FAILED | UPDATE_FAILED | UPGRADE_FAILED | LICENSE_REMOVAL_FAILED`
        /// 
        /// Type: String
        /// </summary>
        public readonly Pulumi.AwsNative.Grafana.WorkspaceStatus? Status;
        /// <summary>
        /// The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to.
        /// 
        /// &gt; Connecting to a private VPC is not yet available in the Asia Pacific (Seoul) Region (ap-northeast-2).
        /// </summary>
        public readonly Outputs.WorkspaceVpcConfiguration? VpcConfiguration;

        [OutputConstructor]
        private GetWorkspaceResult(
            Pulumi.AwsNative.Grafana.WorkspaceAccountAccessType? accountAccessType,

            ImmutableArray<Pulumi.AwsNative.Grafana.WorkspaceAuthenticationProviderTypes> authenticationProviders,

            string? creationTimestamp,

            ImmutableArray<Pulumi.AwsNative.Grafana.WorkspaceDataSourceType> dataSources,

            string? description,

            string? endpoint,

            string? grafanaVersion,

            string? id,

            string? modificationTimestamp,

            string? name,

            Outputs.WorkspaceNetworkAccessControl? networkAccessControl,

            ImmutableArray<Pulumi.AwsNative.Grafana.WorkspaceNotificationDestinationType> notificationDestinations,

            string? organizationRoleName,

            ImmutableArray<string> organizationalUnits,

            Pulumi.AwsNative.Grafana.WorkspacePermissionType? permissionType,

            bool? pluginAdminEnabled,

            string? roleArn,

            Outputs.WorkspaceSamlConfiguration? samlConfiguration,

            Pulumi.AwsNative.Grafana.WorkspaceSamlConfigurationStatus? samlConfigurationStatus,

            string? ssoClientId,

            string? stackSetName,

            Pulumi.AwsNative.Grafana.WorkspaceStatus? status,

            Outputs.WorkspaceVpcConfiguration? vpcConfiguration)
        {
            AccountAccessType = accountAccessType;
            AuthenticationProviders = authenticationProviders;
            CreationTimestamp = creationTimestamp;
            DataSources = dataSources;
            Description = description;
            Endpoint = endpoint;
            GrafanaVersion = grafanaVersion;
            Id = id;
            ModificationTimestamp = modificationTimestamp;
            Name = name;
            NetworkAccessControl = networkAccessControl;
            NotificationDestinations = notificationDestinations;
            OrganizationRoleName = organizationRoleName;
            OrganizationalUnits = organizationalUnits;
            PermissionType = permissionType;
            PluginAdminEnabled = pluginAdminEnabled;
            RoleArn = roleArn;
            SamlConfiguration = samlConfiguration;
            SamlConfigurationStatus = samlConfigurationStatus;
            SsoClientId = ssoClientId;
            StackSetName = stackSetName;
            Status = status;
            VpcConfiguration = vpcConfiguration;
        }
    }
}
