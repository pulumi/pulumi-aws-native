// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.ComponentModel;
using Pulumi;

namespace Pulumi.AwsNative.ManagedBlockchain
{
    [EnumType]
    public readonly struct AccessorStatus : IEquatable<AccessorStatus>
    {
        private readonly string _value;

        private AccessorStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static AccessorStatus Available { get; } = new AccessorStatus("AVAILABLE");
        public static AccessorStatus PendingDeletion { get; } = new AccessorStatus("PENDING_DELETION");
        public static AccessorStatus Deleted { get; } = new AccessorStatus("DELETED");

        public static bool operator ==(AccessorStatus left, AccessorStatus right) => left.Equals(right);
        public static bool operator !=(AccessorStatus left, AccessorStatus right) => !left.Equals(right);

        public static explicit operator string(AccessorStatus value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AccessorStatus other && Equals(other);
        public bool Equals(AccessorStatus other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }

    [EnumType]
    public readonly struct AccessorType : IEquatable<AccessorType>
    {
        private readonly string _value;

        private AccessorType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        public static AccessorType BillingToken { get; } = new AccessorType("BILLING_TOKEN");

        public static bool operator ==(AccessorType left, AccessorType right) => left.Equals(right);
        public static bool operator !=(AccessorType left, AccessorType right) => !left.Equals(right);

        public static explicit operator string(AccessorType value) => value._value;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object? obj) => obj is AccessorType other && Equals(other);
        public bool Equals(AccessorType other) => string.Equals(_value, other._value, StringComparison.Ordinal);

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;

        public override string ToString() => _value;
    }
}
