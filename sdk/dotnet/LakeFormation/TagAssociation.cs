// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.LakeFormation
{
    /// <summary>
    /// A resource schema representing a Lake Formation Tag Association. While tag associations are not explicit Lake Formation resources, this CloudFormation resource can be used to associate tags with Lake Formation entities.
    /// </summary>
    [AwsNativeResourceType("aws-native:lakeformation:TagAssociation")]
    public partial class TagAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of Lake Formation Tags to associate with the Lake Formation Resource
        /// </summary>
        [Output("lfTags")]
        public Output<ImmutableArray<Outputs.TagAssociationLFTagPair>> LfTags { get; private set; } = null!;

        /// <summary>
        /// Resource to tag with the Lake Formation Tags
        /// </summary>
        [Output("resource")]
        public Output<Outputs.TagAssociationResource> Resource { get; private set; } = null!;

        /// <summary>
        /// Unique string identifying the resource. Used as primary identifier, which ideally should be a string
        /// </summary>
        [Output("resourceIdentifier")]
        public Output<string> ResourceIdentifier { get; private set; } = null!;

        /// <summary>
        /// Unique string identifying the resource's tags. Used as primary identifier, which ideally should be a string
        /// </summary>
        [Output("tagsIdentifier")]
        public Output<string> TagsIdentifier { get; private set; } = null!;


        /// <summary>
        /// Create a TagAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TagAssociation(string name, TagAssociationArgs args, CustomResourceOptions? options = null)
            : base("aws-native:lakeformation:TagAssociation", name, args ?? new TagAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TagAssociation(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:lakeformation:TagAssociation", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TagAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TagAssociation Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new TagAssociation(name, id, options);
        }
    }

    public sealed class TagAssociationArgs : global::Pulumi.ResourceArgs
    {
        [Input("lfTags", required: true)]
        private InputList<Inputs.TagAssociationLFTagPairArgs>? _lfTags;

        /// <summary>
        /// List of Lake Formation Tags to associate with the Lake Formation Resource
        /// </summary>
        public InputList<Inputs.TagAssociationLFTagPairArgs> LfTags
        {
            get => _lfTags ?? (_lfTags = new InputList<Inputs.TagAssociationLFTagPairArgs>());
            set => _lfTags = value;
        }

        /// <summary>
        /// Resource to tag with the Lake Formation Tags
        /// </summary>
        [Input("resource", required: true)]
        public Input<Inputs.TagAssociationResourceArgs> Resource { get; set; } = null!;

        public TagAssociationArgs()
        {
        }
        public static new TagAssociationArgs Empty => new TagAssociationArgs();
    }
}
