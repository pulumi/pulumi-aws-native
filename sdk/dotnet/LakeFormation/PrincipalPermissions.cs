// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.LakeFormation
{
    /// <summary>
    /// The ``AWS::LakeFormation::PrincipalPermissions`` resource represents the permissions that a principal has on a GLUDC resource (such as GLUlong databases or GLUlong tables). When you create a ``PrincipalPermissions`` resource, the permissions are granted via the LFlong ``GrantPermissions`` API operation. When you delete a ``PrincipalPermissions`` resource, the permissions on principal-resource pair are revoked via the LFlong ``RevokePermissions`` API operation.
    /// </summary>
    [AwsNativeResourceType("aws-native:lakeformation:PrincipalPermissions")]
    public partial class PrincipalPermissions : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The identifier for the GLUDC. By default, the account ID. The GLUDC is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
        /// </summary>
        [Output("catalog")]
        public Output<string?> Catalog { get; private set; } = null!;

        /// <summary>
        /// The permissions granted or revoked.
        /// </summary>
        [Output("permissions")]
        public Output<ImmutableArray<Pulumi.AwsNative.LakeFormation.PrincipalPermissionsPermission>> Permissions { get; private set; } = null!;

        /// <summary>
        /// Indicates the ability to grant permissions (as a subset of permissions granted).
        /// </summary>
        [Output("permissionsWithGrantOption")]
        public Output<ImmutableArray<Pulumi.AwsNative.LakeFormation.PrincipalPermissionsPermission>> PermissionsWithGrantOption { get; private set; } = null!;

        /// <summary>
        /// The principal to be granted a permission.
        /// </summary>
        [Output("principal")]
        public Output<Outputs.PrincipalPermissionsDataLakePrincipal> Principal { get; private set; } = null!;

        /// <summary>
        /// Json encoding of the input principal. For example: `{"DataLakePrincipalIdentifier":"arn:aws:iam::123456789012:role/ExampleRole"}`
        /// </summary>
        [Output("principalIdentifier")]
        public Output<string> PrincipalIdentifier { get; private set; } = null!;

        /// <summary>
        /// The resource to be granted or revoked permissions.
        /// </summary>
        [Output("resource")]
        public Output<Outputs.PrincipalPermissionsResource> Resource { get; private set; } = null!;

        /// <summary>
        /// Json encoding of the input resource. For example: `{"Catalog":null,"Database":null,"Table":null,"TableWithColumns":null,"DataLocation":null,"DataCellsFilter":{"TableCatalogId":"123456789012","DatabaseName":"ExampleDatabase","TableName":"ExampleTable","Name":"ExampleFilter"},"LFTag":null,"LFTagPolicy":null}`
        /// </summary>
        [Output("resourceIdentifier")]
        public Output<string> ResourceIdentifier { get; private set; } = null!;


        /// <summary>
        /// Create a PrincipalPermissions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PrincipalPermissions(string name, PrincipalPermissionsArgs args, CustomResourceOptions? options = null)
            : base("aws-native:lakeformation:PrincipalPermissions", name, args ?? new PrincipalPermissionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PrincipalPermissions(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:lakeformation:PrincipalPermissions", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "catalog",
                    "permissions[*]",
                    "permissionsWithGrantOption[*]",
                    "principal",
                    "resource",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PrincipalPermissions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PrincipalPermissions Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new PrincipalPermissions(name, id, options);
        }
    }

    public sealed class PrincipalPermissionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The identifier for the GLUDC. By default, the account ID. The GLUDC is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
        /// </summary>
        [Input("catalog")]
        public Input<string>? Catalog { get; set; }

        [Input("permissions", required: true)]
        private InputList<Pulumi.AwsNative.LakeFormation.PrincipalPermissionsPermission>? _permissions;

        /// <summary>
        /// The permissions granted or revoked.
        /// </summary>
        public InputList<Pulumi.AwsNative.LakeFormation.PrincipalPermissionsPermission> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Pulumi.AwsNative.LakeFormation.PrincipalPermissionsPermission>());
            set => _permissions = value;
        }

        [Input("permissionsWithGrantOption", required: true)]
        private InputList<Pulumi.AwsNative.LakeFormation.PrincipalPermissionsPermission>? _permissionsWithGrantOption;

        /// <summary>
        /// Indicates the ability to grant permissions (as a subset of permissions granted).
        /// </summary>
        public InputList<Pulumi.AwsNative.LakeFormation.PrincipalPermissionsPermission> PermissionsWithGrantOption
        {
            get => _permissionsWithGrantOption ?? (_permissionsWithGrantOption = new InputList<Pulumi.AwsNative.LakeFormation.PrincipalPermissionsPermission>());
            set => _permissionsWithGrantOption = value;
        }

        /// <summary>
        /// The principal to be granted a permission.
        /// </summary>
        [Input("principal", required: true)]
        public Input<Inputs.PrincipalPermissionsDataLakePrincipalArgs> Principal { get; set; } = null!;

        /// <summary>
        /// The resource to be granted or revoked permissions.
        /// </summary>
        [Input("resource", required: true)]
        public Input<Inputs.PrincipalPermissionsResourceArgs> Resource { get; set; } = null!;

        public PrincipalPermissionsArgs()
        {
        }
        public static new PrincipalPermissionsArgs Empty => new PrincipalPermissionsArgs();
    }
}
