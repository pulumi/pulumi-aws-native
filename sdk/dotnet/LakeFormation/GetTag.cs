// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.LakeFormation
{
    public static class GetTag
    {
        /// <summary>
        /// A resource schema representing a Lake Formation Tag.
        /// </summary>
        public static Task<GetTagResult> InvokeAsync(GetTagArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTagResult>("aws-native:lakeformation:getTag", args ?? new GetTagArgs(), options.WithDefaults());

        /// <summary>
        /// A resource schema representing a Lake Formation Tag.
        /// </summary>
        public static Output<GetTagResult> Invoke(GetTagInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTagResult>("aws-native:lakeformation:getTag", args ?? new GetTagInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTagArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The key-name for the LF-tag.
        /// </summary>
        [Input("tagKey", required: true)]
        public string TagKey { get; set; } = null!;

        public GetTagArgs()
        {
        }
        public static new GetTagArgs Empty => new GetTagArgs();
    }

    public sealed class GetTagInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The key-name for the LF-tag.
        /// </summary>
        [Input("tagKey", required: true)]
        public Input<string> TagKey { get; set; } = null!;

        public GetTagInvokeArgs()
        {
        }
        public static new GetTagInvokeArgs Empty => new GetTagInvokeArgs();
    }


    [OutputType]
    public sealed class GetTagResult
    {
        /// <summary>
        /// A list of possible values an attribute can take.
        /// </summary>
        public readonly ImmutableArray<string> TagValues;

        [OutputConstructor]
        private GetTagResult(ImmutableArray<string> tagValues)
        {
            TagValues = tagValues;
        }
    }
}
