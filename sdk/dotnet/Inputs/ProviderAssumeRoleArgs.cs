// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Inputs
{

    /// <summary>
    /// The configuration for a Provider to assume a role.
    /// </summary>
    public sealed class ProviderAssumeRoleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of seconds to restrict the assume role session duration.
        /// </summary>
        [Input("durationSeconds")]
        public Input<int>? DurationSeconds { get; set; }

        /// <summary>
        /// External identifier to use when assuming the role.
        /// </summary>
        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// IAM Policy JSON describing further restricting permissions for the IAM Role being assumed.
        /// </summary>
        [Input("policy")]
        public Input<string>? Policy { get; set; }

        [Input("policyArns")]
        private InputList<string>? _policyArns;

        /// <summary>
        /// Set of Amazon Resource Names (ARNs) of IAM Policies describing further restricting permissions for the role.
        /// </summary>
        public InputList<string> PolicyArns
        {
            get => _policyArns ?? (_policyArns = new InputList<string>());
            set => _policyArns = value;
        }

        /// <summary>
        /// Amazon Resource Name (ARN) of the IAM Role to assume.
        /// </summary>
        [Input("roleArn")]
        public Input<string>? RoleArn { get; set; }

        /// <summary>
        /// Session name to use when assuming the role.
        /// </summary>
        [Input("sessionName")]
        public Input<string>? SessionName { get; set; }

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Map of assume role session tags.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        [Input("transitiveTagKeys")]
        private InputList<string>? _transitiveTagKeys;

        /// <summary>
        /// A list of keys for session tags that you want to set as transitive. If you set a tag key as transitive, the corresponding key and value passes to subsequent sessions in a role chain.
        /// </summary>
        public InputList<string> TransitiveTagKeys
        {
            get => _transitiveTagKeys ?? (_transitiveTagKeys = new InputList<string>());
            set => _transitiveTagKeys = value;
        }

        public ProviderAssumeRoleArgs()
        {
        }
    }
}
