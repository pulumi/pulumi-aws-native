// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.Chatbot
{
    public static class GetMicrosoftTeamsChannelConfiguration
    {
        /// <summary>
        /// Resource schema for AWS::Chatbot::MicrosoftTeamsChannelConfiguration.
        /// </summary>
        public static Task<GetMicrosoftTeamsChannelConfigurationResult> InvokeAsync(GetMicrosoftTeamsChannelConfigurationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMicrosoftTeamsChannelConfigurationResult>("aws-native:chatbot:getMicrosoftTeamsChannelConfiguration", args ?? new GetMicrosoftTeamsChannelConfigurationArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::Chatbot::MicrosoftTeamsChannelConfiguration.
        /// </summary>
        public static Output<GetMicrosoftTeamsChannelConfigurationResult> Invoke(GetMicrosoftTeamsChannelConfigurationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMicrosoftTeamsChannelConfigurationResult>("aws-native:chatbot:getMicrosoftTeamsChannelConfiguration", args ?? new GetMicrosoftTeamsChannelConfigurationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMicrosoftTeamsChannelConfigurationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the configuration
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetMicrosoftTeamsChannelConfigurationArgs()
        {
        }
        public static new GetMicrosoftTeamsChannelConfigurationArgs Empty => new GetMicrosoftTeamsChannelConfigurationArgs();
    }

    public sealed class GetMicrosoftTeamsChannelConfigurationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the configuration
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetMicrosoftTeamsChannelConfigurationInvokeArgs()
        {
        }
        public static new GetMicrosoftTeamsChannelConfigurationInvokeArgs Empty => new GetMicrosoftTeamsChannelConfigurationInvokeArgs();
    }


    [OutputType]
    public sealed class GetMicrosoftTeamsChannelConfigurationResult
    {
        /// <summary>
        /// Amazon Resource Name (ARN) of the configuration
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// The list of IAM policy ARNs that are applied as channel guardrails. The AWS managed 'AdministratorAccess' policy is applied as a default if this is not set.
        /// </summary>
        public readonly ImmutableArray<string> GuardrailPolicies;
        /// <summary>
        /// The ARN of the IAM role that defines the permissions for AWS Chatbot
        /// </summary>
        public readonly string? IamRoleArn;
        /// <summary>
        /// Specifies the logging level for this configuration:ERROR,INFO or NONE. This property affects the log entries pushed to Amazon CloudWatch logs
        /// </summary>
        public readonly string? LoggingLevel;
        /// <summary>
        /// ARNs of SNS topics which delivers notifications to AWS Chatbot, for example CloudWatch alarm notifications.
        /// </summary>
        public readonly ImmutableArray<string> SnsTopicArns;
        /// <summary>
        /// The id of the Microsoft Teams channel
        /// </summary>
        public readonly string? TeamsChannelId;
        /// <summary>
        /// Enables use of a user role requirement in your chat configuration
        /// </summary>
        public readonly bool? UserRoleRequired;

        [OutputConstructor]
        private GetMicrosoftTeamsChannelConfigurationResult(
            string? arn,

            ImmutableArray<string> guardrailPolicies,

            string? iamRoleArn,

            string? loggingLevel,

            ImmutableArray<string> snsTopicArns,

            string? teamsChannelId,

            bool? userRoleRequired)
        {
            Arn = arn;
            GuardrailPolicies = guardrailPolicies;
            IamRoleArn = iamRoleArn;
            LoggingLevel = loggingLevel;
            SnsTopicArns = snsTopicArns;
            TeamsChannelId = teamsChannelId;
            UserRoleRequired = userRoleRequired;
        }
    }
}
