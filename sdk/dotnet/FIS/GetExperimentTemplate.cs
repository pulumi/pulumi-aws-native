// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.FIS
{
    public static class GetExperimentTemplate
    {
        /// <summary>
        /// Resource schema for AWS::FIS::ExperimentTemplate
        /// </summary>
        public static Task<GetExperimentTemplateResult> InvokeAsync(GetExperimentTemplateArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetExperimentTemplateResult>("aws-native:fis:getExperimentTemplate", args ?? new GetExperimentTemplateArgs(), options.WithDefaults());

        /// <summary>
        /// Resource schema for AWS::FIS::ExperimentTemplate
        /// </summary>
        public static Output<GetExperimentTemplateResult> Invoke(GetExperimentTemplateInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetExperimentTemplateResult>("aws-native:fis:getExperimentTemplate", args ?? new GetExperimentTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExperimentTemplateArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetExperimentTemplateArgs()
        {
        }
    }

    public sealed class GetExperimentTemplateInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetExperimentTemplateInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetExperimentTemplateResult
    {
        public readonly Outputs.ExperimentTemplateActionMap? Actions;
        public readonly string? Description;
        public readonly string? Id;
        public readonly Outputs.ExperimentTemplateLogConfiguration? LogConfiguration;
        public readonly string? RoleArn;
        public readonly ImmutableArray<Outputs.ExperimentTemplateStopCondition> StopConditions;
        public readonly Outputs.ExperimentTemplateTargetMap? Targets;

        [OutputConstructor]
        private GetExperimentTemplateResult(
            Outputs.ExperimentTemplateActionMap? actions,

            string? description,

            string? id,

            Outputs.ExperimentTemplateLogConfiguration? logConfiguration,

            string? roleArn,

            ImmutableArray<Outputs.ExperimentTemplateStopCondition> stopConditions,

            Outputs.ExperimentTemplateTargetMap? targets)
        {
            Actions = actions;
            Description = description;
            Id = id;
            LogConfiguration = logConfiguration;
            RoleArn = roleArn;
            StopConditions = stopConditions;
            Targets = targets;
        }
    }
}
