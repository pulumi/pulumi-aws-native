// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFront
{
    public static class GetKeyValueStore
    {
        /// <summary>
        /// Resource Type definition for AWS::CloudFront::KeyValueStore
        /// </summary>
        public static Task<GetKeyValueStoreResult> InvokeAsync(GetKeyValueStoreArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKeyValueStoreResult>("aws-native:cloudfront:getKeyValueStore", args ?? new GetKeyValueStoreArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::CloudFront::KeyValueStore
        /// </summary>
        public static Output<GetKeyValueStoreResult> Invoke(GetKeyValueStoreInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKeyValueStoreResult>("aws-native:cloudfront:getKeyValueStore", args ?? new GetKeyValueStoreInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKeyValueStoreArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetKeyValueStoreArgs()
        {
        }
        public static new GetKeyValueStoreArgs Empty => new GetKeyValueStoreArgs();
    }

    public sealed class GetKeyValueStoreInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetKeyValueStoreInvokeArgs()
        {
        }
        public static new GetKeyValueStoreInvokeArgs Empty => new GetKeyValueStoreInvokeArgs();
    }


    [OutputType]
    public sealed class GetKeyValueStoreResult
    {
        public readonly string? Arn;
        public readonly string? Comment;
        public readonly string? Id;
        public readonly string? Status;

        [OutputConstructor]
        private GetKeyValueStoreResult(
            string? arn,

            string? comment,

            string? id,

            string? status)
        {
            Arn = arn;
            Comment = comment;
            Id = id;
            Status = status;
        }
    }
}
