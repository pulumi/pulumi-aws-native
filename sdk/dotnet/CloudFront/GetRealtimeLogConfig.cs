// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFront
{
    public static class GetRealtimeLogConfig
    {
        /// <summary>
        /// Resource Type definition for AWS::CloudFront::RealtimeLogConfig
        /// </summary>
        public static Task<GetRealtimeLogConfigResult> InvokeAsync(GetRealtimeLogConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRealtimeLogConfigResult>("aws-native:cloudfront:getRealtimeLogConfig", args ?? new GetRealtimeLogConfigArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::CloudFront::RealtimeLogConfig
        /// </summary>
        public static Output<GetRealtimeLogConfigResult> Invoke(GetRealtimeLogConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRealtimeLogConfigResult>("aws-native:cloudfront:getRealtimeLogConfig", args ?? new GetRealtimeLogConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRealtimeLogConfigArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the real-time log configuration. For example: `arn:aws:cloudfront::111122223333:realtime-log-config/ExampleNameForRealtimeLogConfig` .
        /// </summary>
        [Input("arn", required: true)]
        public string Arn { get; set; } = null!;

        public GetRealtimeLogConfigArgs()
        {
        }
        public static new GetRealtimeLogConfigArgs Empty => new GetRealtimeLogConfigArgs();
    }

    public sealed class GetRealtimeLogConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the real-time log configuration. For example: `arn:aws:cloudfront::111122223333:realtime-log-config/ExampleNameForRealtimeLogConfig` .
        /// </summary>
        [Input("arn", required: true)]
        public Input<string> Arn { get; set; } = null!;

        public GetRealtimeLogConfigInvokeArgs()
        {
        }
        public static new GetRealtimeLogConfigInvokeArgs Empty => new GetRealtimeLogConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetRealtimeLogConfigResult
    {
        /// <summary>
        /// The Amazon Resource Name (ARN) of the real-time log configuration. For example: `arn:aws:cloudfront::111122223333:realtime-log-config/ExampleNameForRealtimeLogConfig` .
        /// </summary>
        public readonly string? Arn;
        /// <summary>
        /// Contains information about the Amazon Kinesis data stream where you are sending real-time log data in a real-time log configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.RealtimeLogConfigEndPoint> EndPoints;
        /// <summary>
        /// A list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.
        /// 
        /// For more information about fields, see [Real-time log configuration fields](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) in the *Amazon CloudFront Developer Guide* .
        /// </summary>
        public readonly ImmutableArray<string> Fields;
        /// <summary>
        /// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.
        /// </summary>
        public readonly double? SamplingRate;

        [OutputConstructor]
        private GetRealtimeLogConfigResult(
            string? arn,

            ImmutableArray<Outputs.RealtimeLogConfigEndPoint> endPoints,

            ImmutableArray<string> fields,

            double? samplingRate)
        {
            Arn = arn;
            EndPoints = endPoints;
            Fields = fields;
            SamplingRate = samplingRate;
        }
    }
}
