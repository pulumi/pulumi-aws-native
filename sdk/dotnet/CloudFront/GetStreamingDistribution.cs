// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFront
{
    public static class GetStreamingDistribution
    {
        /// <summary>
        /// Resource Type definition for AWS::CloudFront::StreamingDistribution
        /// </summary>
        public static Task<GetStreamingDistributionResult> InvokeAsync(GetStreamingDistributionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetStreamingDistributionResult>("aws-native:cloudfront:getStreamingDistribution", args ?? new GetStreamingDistributionArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::CloudFront::StreamingDistribution
        /// </summary>
        public static Output<GetStreamingDistributionResult> Invoke(GetStreamingDistributionInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetStreamingDistributionResult>("aws-native:cloudfront:getStreamingDistribution", args ?? new GetStreamingDistributionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamingDistributionArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetStreamingDistributionArgs()
        {
        }
    }

    public sealed class GetStreamingDistributionInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetStreamingDistributionInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetStreamingDistributionResult
    {
        public readonly string? DomainName;
        public readonly string? Id;
        public readonly Outputs.StreamingDistributionConfig? StreamingDistributionConfig;
        public readonly ImmutableArray<Outputs.StreamingDistributionTag> Tags;

        [OutputConstructor]
        private GetStreamingDistributionResult(
            string? domainName,

            string? id,

            Outputs.StreamingDistributionConfig? streamingDistributionConfig,

            ImmutableArray<Outputs.StreamingDistributionTag> tags)
        {
            DomainName = domainName;
            Id = id;
            StreamingDistributionConfig = streamingDistributionConfig;
            Tags = tags;
        }
    }
}
