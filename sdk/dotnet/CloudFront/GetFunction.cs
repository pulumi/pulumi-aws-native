// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFront
{
    public static class GetFunction
    {
        /// <summary>
        /// Resource Type definition for AWS::CloudFront::Function
        /// </summary>
        public static Task<GetFunctionResult> InvokeAsync(GetFunctionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFunctionResult>("aws-native:cloudfront:getFunction", args ?? new GetFunctionArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::CloudFront::Function
        /// </summary>
        public static Output<GetFunctionResult> Invoke(GetFunctionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFunctionResult>("aws-native:cloudfront:getFunction", args ?? new GetFunctionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFunctionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the function. For example:
        /// 
        /// `arn:aws:cloudfront::123456789012:function/ExampleFunction` .
        /// 
        /// To get the function ARN, use the following syntax:
        /// 
        /// `!GetAtt *Function_Logical_ID* .FunctionMetadata.FunctionARN`
        /// </summary>
        [Input("functionArn", required: true)]
        public string FunctionArn { get; set; } = null!;

        public GetFunctionArgs()
        {
        }
        public static new GetFunctionArgs Empty => new GetFunctionArgs();
    }

    public sealed class GetFunctionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ARN of the function. For example:
        /// 
        /// `arn:aws:cloudfront::123456789012:function/ExampleFunction` .
        /// 
        /// To get the function ARN, use the following syntax:
        /// 
        /// `!GetAtt *Function_Logical_ID* .FunctionMetadata.FunctionARN`
        /// </summary>
        [Input("functionArn", required: true)]
        public Input<string> FunctionArn { get; set; } = null!;

        public GetFunctionInvokeArgs()
        {
        }
        public static new GetFunctionInvokeArgs Empty => new GetFunctionInvokeArgs();
    }


    [OutputType]
    public sealed class GetFunctionResult
    {
        /// <summary>
        /// The ARN of the function. For example:
        /// 
        /// `arn:aws:cloudfront::123456789012:function/ExampleFunction` .
        /// 
        /// To get the function ARN, use the following syntax:
        /// 
        /// `!GetAtt *Function_Logical_ID* .FunctionMetadata.FunctionARN`
        /// </summary>
        public readonly string? FunctionArn;
        /// <summary>
        /// The function code. For more information about writing a CloudFront function, see [Writing function code for CloudFront Functions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html) in the *Amazon CloudFront Developer Guide* .
        /// </summary>
        public readonly string? FunctionCode;
        /// <summary>
        /// Contains configuration information about a CloudFront function.
        /// </summary>
        public readonly Outputs.FunctionConfig? FunctionConfig;
        /// <summary>
        /// Contains metadata about a CloudFront function.
        /// </summary>
        public readonly Outputs.FunctionMetadata? FunctionMetadata;
        /// <summary>
        /// A name to identify the function.
        /// </summary>
        public readonly string? Name;
        public readonly string? Stage;

        [OutputConstructor]
        private GetFunctionResult(
            string? functionArn,

            string? functionCode,

            Outputs.FunctionConfig? functionConfig,

            Outputs.FunctionMetadata? functionMetadata,

            string? name,

            string? stage)
        {
            FunctionArn = functionArn;
            FunctionCode = functionCode;
            FunctionConfig = functionConfig;
            FunctionMetadata = functionMetadata;
            Name = name;
            Stage = stage;
        }
    }
}
