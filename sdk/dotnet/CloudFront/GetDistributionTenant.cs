// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFront
{
    public static class GetDistributionTenant
    {
        /// <summary>
        /// Resource Type definition for AWS::CloudFront::DistributionTenant
        /// </summary>
        public static Task<GetDistributionTenantResult> InvokeAsync(GetDistributionTenantArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDistributionTenantResult>("aws-native:cloudfront:getDistributionTenant", args ?? new GetDistributionTenantArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::CloudFront::DistributionTenant
        /// </summary>
        public static Output<GetDistributionTenantResult> Invoke(GetDistributionTenantInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDistributionTenantResult>("aws-native:cloudfront:getDistributionTenant", args ?? new GetDistributionTenantInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::CloudFront::DistributionTenant
        /// </summary>
        public static Output<GetDistributionTenantResult> Invoke(GetDistributionTenantInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDistributionTenantResult>("aws-native:cloudfront:getDistributionTenant", args ?? new GetDistributionTenantInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDistributionTenantArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetDistributionTenantArgs()
        {
        }
        public static new GetDistributionTenantArgs Empty => new GetDistributionTenantArgs();
    }

    public sealed class GetDistributionTenantInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetDistributionTenantInvokeArgs()
        {
        }
        public static new GetDistributionTenantInvokeArgs Empty => new GetDistributionTenantInvokeArgs();
    }


    [OutputType]
    public sealed class GetDistributionTenantResult
    {
        public readonly string? Arn;
        public readonly string? ConnectionGroupId;
        public readonly string? CreatedTime;
        public readonly Outputs.DistributionTenantCustomizations? Customizations;
        public readonly string? DistributionId;
        public readonly ImmutableArray<Outputs.DistributionTenantDomainResult> DomainResults;
        public readonly ImmutableArray<string> Domains;
        public readonly string? ETag;
        public readonly bool? Enabled;
        public readonly string? Id;
        public readonly string? LastModifiedTime;
        public readonly ImmutableArray<Outputs.DistributionTenantParameter> Parameters;
        public readonly string? Status;
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;

        [OutputConstructor]
        private GetDistributionTenantResult(
            string? arn,

            string? connectionGroupId,

            string? createdTime,

            Outputs.DistributionTenantCustomizations? customizations,

            string? distributionId,

            ImmutableArray<Outputs.DistributionTenantDomainResult> domainResults,

            ImmutableArray<string> domains,

            string? eTag,

            bool? enabled,

            string? id,

            string? lastModifiedTime,

            ImmutableArray<Outputs.DistributionTenantParameter> parameters,

            string? status,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> tags)
        {
            Arn = arn;
            ConnectionGroupId = connectionGroupId;
            CreatedTime = createdTime;
            Customizations = customizations;
            DistributionId = distributionId;
            DomainResults = domainResults;
            Domains = domains;
            ETag = eTag;
            Enabled = enabled;
            Id = id;
            LastModifiedTime = lastModifiedTime;
            Parameters = parameters;
            Status = status;
            Tags = tags;
        }
    }
}
