// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFront
{
    /// <summary>
    /// Definition of AWS::CloudFront::AnycastIpList Resource Type
    /// </summary>
    [AwsNativeResourceType("aws-native:cloudfront:AnycastIpList")]
    public partial class AnycastIpList : global::Pulumi.CustomResource
    {
        [Output("anycastIpList")]
        public Output<Outputs.AnycastIpList> AnycastIpListValue { get; private set; } = null!;

        /// <summary>
        /// The ID of the Anycast static IP list.
        /// </summary>
        [Output("awsId")]
        public Output<string> AwsId { get; private set; } = null!;

        /// <summary>
        /// A complex type that contains `Tag` key and `Tag` value.
        /// </summary>
        [Output("eTag")]
        public Output<string> ETag { get; private set; } = null!;

        /// <summary>
        /// The number of IP addresses in the Anycast static IP list.
        /// </summary>
        [Output("ipCount")]
        public Output<int> IpCount { get; private set; } = null!;

        /// <summary>
        /// The name of the Anycast static IP list.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A complex type that contains zero or more `Tag` elements.
        /// </summary>
        [Output("tags")]
        public Output<Outputs.AnycastIpListTags?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a AnycastIpList resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AnycastIpList(string name, AnycastIpListArgs args, CustomResourceOptions? options = null)
            : base("aws-native:cloudfront:AnycastIpList", name, args ?? new AnycastIpListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AnycastIpList(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("aws-native:cloudfront:AnycastIpList", name, null, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                ReplaceOnChanges =
                {
                    "ipCount",
                    "name",
                    "tags",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AnycastIpList resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AnycastIpList Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new AnycastIpList(name, id, options);
        }
    }

    public sealed class AnycastIpListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of IP addresses in the Anycast static IP list.
        /// </summary>
        [Input("ipCount", required: true)]
        public Input<int> IpCount { get; set; } = null!;

        /// <summary>
        /// The name of the Anycast static IP list.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A complex type that contains zero or more `Tag` elements.
        /// </summary>
        [Input("tags")]
        public Input<Inputs.AnycastIpListTagsArgs>? Tags { get; set; }

        public AnycastIpListArgs()
        {
        }
        public static new AnycastIpListArgs Empty => new AnycastIpListArgs();
    }
}
