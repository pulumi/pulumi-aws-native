// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFront.Outputs
{

    /// <summary>
    /// Creates a new origin access control in CloudFront. After you create an origin access control, you can add it to an origin in a CloudFront distribution so that CloudFront sends authenticated (signed) requests to the origin.
    ///  This makes it possible to block public access to the origin, allowing viewers (users) to access the origin's content only through CloudFront.
    ///  For more information about using a CloudFront origin access control, see [Restricting access to an origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-origin.html) in the *Amazon CloudFront Developer Guide*.
    /// </summary>
    [OutputType]
    public sealed class OriginAccessControlConfig
    {
        /// <summary>
        /// A description of the origin access control.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A name to identify the origin access control. You can specify up to 64 characters.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The type of origin that this origin access control is for.
        /// </summary>
        public readonly string OriginAccessControlOriginType;
        /// <summary>
        /// Specifies which requests CloudFront signs (adds authentication information to). Specify ``always`` for the most common use case. For more information, see [origin access control advanced settings](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html#oac-advanced-settings) in the *Amazon CloudFront Developer Guide*.
        ///  This field can have one of the following values:
        ///   +  ``always`` – CloudFront signs all origin requests, overwriting the ``Authorization`` header from the viewer request if one exists.
        ///   +  ``never`` – CloudFront doesn't sign any origin requests. This value turns off origin access control for all origins in all distributions that use this origin access control.
        ///   +  ``no-override`` – If the viewer request doesn't contain the ``Authorization`` header, then CloudFront signs the origin request. If the viewer request contains the ``Authorization`` header, then CloudFront doesn't sign the origin request and instead passes along the ``Authorization`` header from the viewer request. *WARNING: To pass along the Authorization header from the viewer request, you must add the Authorization header to a cache policy for all cache behaviors that use origins associated with this origin access control.*
        /// </summary>
        public readonly string SigningBehavior;
        /// <summary>
        /// The signing protocol of the origin access control, which determines how CloudFront signs (authenticates) requests. The only valid value is ``sigv4``.
        /// </summary>
        public readonly string SigningProtocol;

        [OutputConstructor]
        private OriginAccessControlConfig(
            string? description,

            string name,

            string originAccessControlOriginType,

            string signingBehavior,

            string signingProtocol)
        {
            Description = description;
            Name = name;
            OriginAccessControlOriginType = originAccessControlOriginType;
            SigningBehavior = signingBehavior;
            SigningProtocol = signingProtocol;
        }
    }
}
