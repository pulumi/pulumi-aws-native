// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFront.Outputs
{

    [OutputType]
    public sealed class DistributionLegacyCustomOrigin
    {
        /// <summary>
        /// The domain name assigned to your CloudFront distribution.
        /// </summary>
        public readonly string DnsName;
        /// <summary>
        /// The HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.
        /// </summary>
        public readonly int? HttpPort;
        /// <summary>
        /// The HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.
        /// </summary>
        public readonly int? HttpsPort;
        /// <summary>
        /// Specifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin.
        /// </summary>
        public readonly string OriginProtocolPolicy;
        /// <summary>
        /// The minimum SSL/TLS protocol version that CloudFront uses when communicating with your origin server over HTTPs.
        /// 
        /// For more information, see [Minimum Origin SSL Protocol](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginSSLProtocols) in the *Amazon CloudFront Developer Guide* .
        /// </summary>
        public readonly ImmutableArray<string> OriginSslProtocols;

        [OutputConstructor]
        private DistributionLegacyCustomOrigin(
            string dnsName,

            int? httpPort,

            int? httpsPort,

            string originProtocolPolicy,

            ImmutableArray<string> originSslProtocols)
        {
            DnsName = dnsName;
            HttpPort = httpPort;
            HttpsPort = httpsPort;
            OriginProtocolPolicy = originProtocolPolicy;
            OriginSslProtocols = originSslProtocols;
        }
    }
}
