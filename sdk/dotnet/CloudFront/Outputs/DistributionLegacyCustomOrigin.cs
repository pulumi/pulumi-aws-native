// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFront.Outputs
{

    /// <summary>
    /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html
    /// </summary>
    [OutputType]
    public sealed class DistributionLegacyCustomOrigin
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-dnsname
        /// </summary>
        public readonly string DNSName;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-httpport
        /// </summary>
        public readonly int? HTTPPort;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-httpsport
        /// </summary>
        public readonly int? HTTPSPort;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-originprotocolpolicy
        /// </summary>
        public readonly string OriginProtocolPolicy;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-legacycustomorigin.html#cfn-cloudfront-distribution-legacycustomorigin-originsslprotocols
        /// </summary>
        public readonly ImmutableArray<string> OriginSSLProtocols;

        [OutputConstructor]
        private DistributionLegacyCustomOrigin(
            string dNSName,

            int? hTTPPort,

            int? hTTPSPort,

            string originProtocolPolicy,

            ImmutableArray<string> originSSLProtocols)
        {
            DNSName = dNSName;
            HTTPPort = hTTPPort;
            HTTPSPort = hTTPSPort;
            OriginProtocolPolicy = originProtocolPolicy;
            OriginSSLProtocols = originSSLProtocols;
        }
    }
}
