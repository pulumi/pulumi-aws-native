// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFront
{
    public static class GetPublicKey
    {
        /// <summary>
        /// Resource Type definition for AWS::CloudFront::PublicKey
        /// </summary>
        public static Task<GetPublicKeyResult> InvokeAsync(GetPublicKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPublicKeyResult>("aws-native:cloudfront:getPublicKey", args ?? new GetPublicKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Resource Type definition for AWS::CloudFront::PublicKey
        /// </summary>
        public static Output<GetPublicKeyResult> Invoke(GetPublicKeyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPublicKeyResult>("aws-native:cloudfront:getPublicKey", args ?? new GetPublicKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPublicKeyArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetPublicKeyArgs()
        {
        }
    }

    public sealed class GetPublicKeyInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetPublicKeyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetPublicKeyResult
    {
        public readonly string? CreatedTime;
        public readonly string? Id;
        public readonly Outputs.PublicKeyConfig? PublicKeyConfig;

        [OutputConstructor]
        private GetPublicKeyResult(
            string? createdTime,

            string? id,

            Outputs.PublicKeyConfig? publicKeyConfig)
        {
            CreatedTime = createdTime;
            Id = id;
            PublicKeyConfig = publicKeyConfig;
        }
    }
}
