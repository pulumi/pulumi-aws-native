// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFront.Inputs
{

    public sealed class OriginAccessControlConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the origin access control.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A name to identify the origin access control. You can specify up to 64 characters.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The type of origin that this origin access control is for.
        /// </summary>
        [Input("originAccessControlOriginType", required: true)]
        public Input<string> OriginAccessControlOriginType { get; set; } = null!;

        /// <summary>
        /// Specifies which requests CloudFront signs (adds authentication information to). Specify `always` for the most common use case. For more information, see [origin access control advanced settings](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html#oac-advanced-settings) in the *Amazon CloudFront Developer Guide* .
        /// 
        /// This field can have one of the following values:
        /// 
        /// - `always` – CloudFront signs all origin requests, overwriting the `Authorization` header from the viewer request if one exists.
        /// - `never` – CloudFront doesn't sign any origin requests. This value turns off origin access control for all origins in all distributions that use this origin access control.
        /// - `no-override` – If the viewer request doesn't contain the `Authorization` header, then CloudFront signs the origin request. If the viewer request contains the `Authorization` header, then CloudFront doesn't sign the origin request and instead passes along the `Authorization` header from the viewer request. *WARNING: To pass along the `Authorization` header from the viewer request, you *must* add the `Authorization` header to a [cache policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html) for all cache behaviors that use origins associated with this origin access control.*
        /// </summary>
        [Input("signingBehavior", required: true)]
        public Input<string> SigningBehavior { get; set; } = null!;

        /// <summary>
        /// The signing protocol of the origin access control, which determines how CloudFront signs (authenticates) requests. The only valid value is `sigv4` .
        /// </summary>
        [Input("signingProtocol", required: true)]
        public Input<string> SigningProtocol { get; set; } = null!;

        public OriginAccessControlConfigArgs()
        {
        }
        public static new OriginAccessControlConfigArgs Empty => new OriginAccessControlConfigArgs();
    }
}
