// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.CloudFront.Inputs
{

    /// <summary>
    /// Session stickiness provides the ability to define multiple requests from a single viewer as a single session. This prevents the potentially inconsistent experience of sending some of a given user's requests to your staging distribution, while others are sent to your primary distribution. Define the session duration using TTL values.
    /// </summary>
    public sealed class ContinuousDeploymentPolicySessionStickinessConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The amount of time after which you want sessions to cease if no requests are received. Allowed values are 300–3600 seconds (5–60 minutes).
        /// </summary>
        [Input("idleTtl", required: true)]
        public Input<int> IdleTtl { get; set; } = null!;

        /// <summary>
        /// The maximum amount of time to consider requests from the viewer as being part of the same session. Allowed values are 300–3600 seconds (5–60 minutes).
        /// </summary>
        [Input("maximumTtl", required: true)]
        public Input<int> MaximumTtl { get; set; } = null!;

        public ContinuousDeploymentPolicySessionStickinessConfigArgs()
        {
        }
        public static new ContinuousDeploymentPolicySessionStickinessConfigArgs Empty => new ContinuousDeploymentPolicySessionStickinessConfigArgs();
    }
}
