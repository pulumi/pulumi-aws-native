// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package events

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApiDestinationHttpMethod string

const (
	ApiDestinationHttpMethodGet     = ApiDestinationHttpMethod("GET")
	ApiDestinationHttpMethodHead    = ApiDestinationHttpMethod("HEAD")
	ApiDestinationHttpMethodPost    = ApiDestinationHttpMethod("POST")
	ApiDestinationHttpMethodOptions = ApiDestinationHttpMethod("OPTIONS")
	ApiDestinationHttpMethodPut     = ApiDestinationHttpMethod("PUT")
	ApiDestinationHttpMethodDelete  = ApiDestinationHttpMethod("DELETE")
	ApiDestinationHttpMethodPatch   = ApiDestinationHttpMethod("PATCH")
)

func (ApiDestinationHttpMethod) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDestinationHttpMethod)(nil)).Elem()
}

func (e ApiDestinationHttpMethod) ToApiDestinationHttpMethodOutput() ApiDestinationHttpMethodOutput {
	return pulumi.ToOutput(e).(ApiDestinationHttpMethodOutput)
}

func (e ApiDestinationHttpMethod) ToApiDestinationHttpMethodOutputWithContext(ctx context.Context) ApiDestinationHttpMethodOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ApiDestinationHttpMethodOutput)
}

func (e ApiDestinationHttpMethod) ToApiDestinationHttpMethodPtrOutput() ApiDestinationHttpMethodPtrOutput {
	return e.ToApiDestinationHttpMethodPtrOutputWithContext(context.Background())
}

func (e ApiDestinationHttpMethod) ToApiDestinationHttpMethodPtrOutputWithContext(ctx context.Context) ApiDestinationHttpMethodPtrOutput {
	return ApiDestinationHttpMethod(e).ToApiDestinationHttpMethodOutputWithContext(ctx).ToApiDestinationHttpMethodPtrOutputWithContext(ctx)
}

func (e ApiDestinationHttpMethod) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApiDestinationHttpMethod) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ApiDestinationHttpMethod) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ApiDestinationHttpMethod) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ApiDestinationHttpMethodOutput struct{ *pulumi.OutputState }

func (ApiDestinationHttpMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiDestinationHttpMethod)(nil)).Elem()
}

func (o ApiDestinationHttpMethodOutput) ToApiDestinationHttpMethodOutput() ApiDestinationHttpMethodOutput {
	return o
}

func (o ApiDestinationHttpMethodOutput) ToApiDestinationHttpMethodOutputWithContext(ctx context.Context) ApiDestinationHttpMethodOutput {
	return o
}

func (o ApiDestinationHttpMethodOutput) ToApiDestinationHttpMethodPtrOutput() ApiDestinationHttpMethodPtrOutput {
	return o.ToApiDestinationHttpMethodPtrOutputWithContext(context.Background())
}

func (o ApiDestinationHttpMethodOutput) ToApiDestinationHttpMethodPtrOutputWithContext(ctx context.Context) ApiDestinationHttpMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiDestinationHttpMethod) *ApiDestinationHttpMethod {
		return &v
	}).(ApiDestinationHttpMethodPtrOutput)
}

func (o ApiDestinationHttpMethodOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ApiDestinationHttpMethodOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApiDestinationHttpMethod) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ApiDestinationHttpMethodOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApiDestinationHttpMethodOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ApiDestinationHttpMethod) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ApiDestinationHttpMethodPtrOutput struct{ *pulumi.OutputState }

func (ApiDestinationHttpMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiDestinationHttpMethod)(nil)).Elem()
}

func (o ApiDestinationHttpMethodPtrOutput) ToApiDestinationHttpMethodPtrOutput() ApiDestinationHttpMethodPtrOutput {
	return o
}

func (o ApiDestinationHttpMethodPtrOutput) ToApiDestinationHttpMethodPtrOutputWithContext(ctx context.Context) ApiDestinationHttpMethodPtrOutput {
	return o
}

func (o ApiDestinationHttpMethodPtrOutput) Elem() ApiDestinationHttpMethodOutput {
	return o.ApplyT(func(v *ApiDestinationHttpMethod) ApiDestinationHttpMethod {
		if v != nil {
			return *v
		}
		var ret ApiDestinationHttpMethod
		return ret
	}).(ApiDestinationHttpMethodOutput)
}

func (o ApiDestinationHttpMethodPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ApiDestinationHttpMethodPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ApiDestinationHttpMethod) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ApiDestinationHttpMethodInput is an input type that accepts ApiDestinationHttpMethodArgs and ApiDestinationHttpMethodOutput values.
// You can construct a concrete instance of `ApiDestinationHttpMethodInput` via:
//
//          ApiDestinationHttpMethodArgs{...}
type ApiDestinationHttpMethodInput interface {
	pulumi.Input

	ToApiDestinationHttpMethodOutput() ApiDestinationHttpMethodOutput
	ToApiDestinationHttpMethodOutputWithContext(context.Context) ApiDestinationHttpMethodOutput
}

var apiDestinationHttpMethodPtrType = reflect.TypeOf((**ApiDestinationHttpMethod)(nil)).Elem()

type ApiDestinationHttpMethodPtrInput interface {
	pulumi.Input

	ToApiDestinationHttpMethodPtrOutput() ApiDestinationHttpMethodPtrOutput
	ToApiDestinationHttpMethodPtrOutputWithContext(context.Context) ApiDestinationHttpMethodPtrOutput
}

type apiDestinationHttpMethodPtr string

func ApiDestinationHttpMethodPtr(v string) ApiDestinationHttpMethodPtrInput {
	return (*apiDestinationHttpMethodPtr)(&v)
}

func (*apiDestinationHttpMethodPtr) ElementType() reflect.Type {
	return apiDestinationHttpMethodPtrType
}

func (in *apiDestinationHttpMethodPtr) ToApiDestinationHttpMethodPtrOutput() ApiDestinationHttpMethodPtrOutput {
	return pulumi.ToOutput(in).(ApiDestinationHttpMethodPtrOutput)
}

func (in *apiDestinationHttpMethodPtr) ToApiDestinationHttpMethodPtrOutputWithContext(ctx context.Context) ApiDestinationHttpMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ApiDestinationHttpMethodPtrOutput)
}

type ConnectionAuthorizationType string

const (
	ConnectionAuthorizationTypeApiKey                 = ConnectionAuthorizationType("API_KEY")
	ConnectionAuthorizationTypeBasic                  = ConnectionAuthorizationType("BASIC")
	ConnectionAuthorizationTypeOauthClientCredentials = ConnectionAuthorizationType("OAUTH_CLIENT_CREDENTIALS")
)

func (ConnectionAuthorizationType) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthorizationType)(nil)).Elem()
}

func (e ConnectionAuthorizationType) ToConnectionAuthorizationTypeOutput() ConnectionAuthorizationTypeOutput {
	return pulumi.ToOutput(e).(ConnectionAuthorizationTypeOutput)
}

func (e ConnectionAuthorizationType) ToConnectionAuthorizationTypeOutputWithContext(ctx context.Context) ConnectionAuthorizationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ConnectionAuthorizationTypeOutput)
}

func (e ConnectionAuthorizationType) ToConnectionAuthorizationTypePtrOutput() ConnectionAuthorizationTypePtrOutput {
	return e.ToConnectionAuthorizationTypePtrOutputWithContext(context.Background())
}

func (e ConnectionAuthorizationType) ToConnectionAuthorizationTypePtrOutputWithContext(ctx context.Context) ConnectionAuthorizationTypePtrOutput {
	return ConnectionAuthorizationType(e).ToConnectionAuthorizationTypeOutputWithContext(ctx).ToConnectionAuthorizationTypePtrOutputWithContext(ctx)
}

func (e ConnectionAuthorizationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionAuthorizationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ConnectionAuthorizationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ConnectionAuthorizationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ConnectionAuthorizationTypeOutput struct{ *pulumi.OutputState }

func (ConnectionAuthorizationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAuthorizationType)(nil)).Elem()
}

func (o ConnectionAuthorizationTypeOutput) ToConnectionAuthorizationTypeOutput() ConnectionAuthorizationTypeOutput {
	return o
}

func (o ConnectionAuthorizationTypeOutput) ToConnectionAuthorizationTypeOutputWithContext(ctx context.Context) ConnectionAuthorizationTypeOutput {
	return o
}

func (o ConnectionAuthorizationTypeOutput) ToConnectionAuthorizationTypePtrOutput() ConnectionAuthorizationTypePtrOutput {
	return o.ToConnectionAuthorizationTypePtrOutputWithContext(context.Background())
}

func (o ConnectionAuthorizationTypeOutput) ToConnectionAuthorizationTypePtrOutputWithContext(ctx context.Context) ConnectionAuthorizationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionAuthorizationType) *ConnectionAuthorizationType {
		return &v
	}).(ConnectionAuthorizationTypePtrOutput)
}

func (o ConnectionAuthorizationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ConnectionAuthorizationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionAuthorizationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ConnectionAuthorizationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthorizationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ConnectionAuthorizationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ConnectionAuthorizationTypePtrOutput struct{ *pulumi.OutputState }

func (ConnectionAuthorizationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionAuthorizationType)(nil)).Elem()
}

func (o ConnectionAuthorizationTypePtrOutput) ToConnectionAuthorizationTypePtrOutput() ConnectionAuthorizationTypePtrOutput {
	return o
}

func (o ConnectionAuthorizationTypePtrOutput) ToConnectionAuthorizationTypePtrOutputWithContext(ctx context.Context) ConnectionAuthorizationTypePtrOutput {
	return o
}

func (o ConnectionAuthorizationTypePtrOutput) Elem() ConnectionAuthorizationTypeOutput {
	return o.ApplyT(func(v *ConnectionAuthorizationType) ConnectionAuthorizationType {
		if v != nil {
			return *v
		}
		var ret ConnectionAuthorizationType
		return ret
	}).(ConnectionAuthorizationTypeOutput)
}

func (o ConnectionAuthorizationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ConnectionAuthorizationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ConnectionAuthorizationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ConnectionAuthorizationTypeInput is an input type that accepts ConnectionAuthorizationTypeArgs and ConnectionAuthorizationTypeOutput values.
// You can construct a concrete instance of `ConnectionAuthorizationTypeInput` via:
//
//          ConnectionAuthorizationTypeArgs{...}
type ConnectionAuthorizationTypeInput interface {
	pulumi.Input

	ToConnectionAuthorizationTypeOutput() ConnectionAuthorizationTypeOutput
	ToConnectionAuthorizationTypeOutputWithContext(context.Context) ConnectionAuthorizationTypeOutput
}

var connectionAuthorizationTypePtrType = reflect.TypeOf((**ConnectionAuthorizationType)(nil)).Elem()

type ConnectionAuthorizationTypePtrInput interface {
	pulumi.Input

	ToConnectionAuthorizationTypePtrOutput() ConnectionAuthorizationTypePtrOutput
	ToConnectionAuthorizationTypePtrOutputWithContext(context.Context) ConnectionAuthorizationTypePtrOutput
}

type connectionAuthorizationTypePtr string

func ConnectionAuthorizationTypePtr(v string) ConnectionAuthorizationTypePtrInput {
	return (*connectionAuthorizationTypePtr)(&v)
}

func (*connectionAuthorizationTypePtr) ElementType() reflect.Type {
	return connectionAuthorizationTypePtrType
}

func (in *connectionAuthorizationTypePtr) ToConnectionAuthorizationTypePtrOutput() ConnectionAuthorizationTypePtrOutput {
	return pulumi.ToOutput(in).(ConnectionAuthorizationTypePtrOutput)
}

func (in *connectionAuthorizationTypePtr) ToConnectionAuthorizationTypePtrOutputWithContext(ctx context.Context) ConnectionAuthorizationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ConnectionAuthorizationTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiDestinationHttpMethodOutput{})
	pulumi.RegisterOutputType(ApiDestinationHttpMethodPtrOutput{})
	pulumi.RegisterOutputType(ConnectionAuthorizationTypeOutput{})
	pulumi.RegisterOutputType(ConnectionAuthorizationTypePtrOutput{})
}
