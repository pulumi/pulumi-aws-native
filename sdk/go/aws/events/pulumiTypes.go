// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package events

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AuthParametersProperties struct {
	ApiKeyAuthParameters     *ConnectionApiKeyAuthParameters `pulumi:"apiKeyAuthParameters"`
	BasicAuthParameters      *ConnectionBasicAuthParameters  `pulumi:"basicAuthParameters"`
	InvocationHttpParameters *ConnectionHttpParameters       `pulumi:"invocationHttpParameters"`
	OAuthParameters          *ConnectionOAuthParameters      `pulumi:"oAuthParameters"`
}

// AuthParametersPropertiesInput is an input type that accepts AuthParametersPropertiesArgs and AuthParametersPropertiesOutput values.
// You can construct a concrete instance of `AuthParametersPropertiesInput` via:
//
//          AuthParametersPropertiesArgs{...}
type AuthParametersPropertiesInput interface {
	pulumi.Input

	ToAuthParametersPropertiesOutput() AuthParametersPropertiesOutput
	ToAuthParametersPropertiesOutputWithContext(context.Context) AuthParametersPropertiesOutput
}

type AuthParametersPropertiesArgs struct {
	ApiKeyAuthParameters     ConnectionApiKeyAuthParametersPtrInput `pulumi:"apiKeyAuthParameters"`
	BasicAuthParameters      ConnectionBasicAuthParametersPtrInput  `pulumi:"basicAuthParameters"`
	InvocationHttpParameters ConnectionHttpParametersPtrInput       `pulumi:"invocationHttpParameters"`
	OAuthParameters          ConnectionOAuthParametersPtrInput      `pulumi:"oAuthParameters"`
}

func (AuthParametersPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthParametersProperties)(nil)).Elem()
}

func (i AuthParametersPropertiesArgs) ToAuthParametersPropertiesOutput() AuthParametersPropertiesOutput {
	return i.ToAuthParametersPropertiesOutputWithContext(context.Background())
}

func (i AuthParametersPropertiesArgs) ToAuthParametersPropertiesOutputWithContext(ctx context.Context) AuthParametersPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthParametersPropertiesOutput)
}

func (i AuthParametersPropertiesArgs) ToAuthParametersPropertiesPtrOutput() AuthParametersPropertiesPtrOutput {
	return i.ToAuthParametersPropertiesPtrOutputWithContext(context.Background())
}

func (i AuthParametersPropertiesArgs) ToAuthParametersPropertiesPtrOutputWithContext(ctx context.Context) AuthParametersPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthParametersPropertiesOutput).ToAuthParametersPropertiesPtrOutputWithContext(ctx)
}

// AuthParametersPropertiesPtrInput is an input type that accepts AuthParametersPropertiesArgs, AuthParametersPropertiesPtr and AuthParametersPropertiesPtrOutput values.
// You can construct a concrete instance of `AuthParametersPropertiesPtrInput` via:
//
//          AuthParametersPropertiesArgs{...}
//
//  or:
//
//          nil
type AuthParametersPropertiesPtrInput interface {
	pulumi.Input

	ToAuthParametersPropertiesPtrOutput() AuthParametersPropertiesPtrOutput
	ToAuthParametersPropertiesPtrOutputWithContext(context.Context) AuthParametersPropertiesPtrOutput
}

type authParametersPropertiesPtrType AuthParametersPropertiesArgs

func AuthParametersPropertiesPtr(v *AuthParametersPropertiesArgs) AuthParametersPropertiesPtrInput {
	return (*authParametersPropertiesPtrType)(v)
}

func (*authParametersPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthParametersProperties)(nil)).Elem()
}

func (i *authParametersPropertiesPtrType) ToAuthParametersPropertiesPtrOutput() AuthParametersPropertiesPtrOutput {
	return i.ToAuthParametersPropertiesPtrOutputWithContext(context.Background())
}

func (i *authParametersPropertiesPtrType) ToAuthParametersPropertiesPtrOutputWithContext(ctx context.Context) AuthParametersPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthParametersPropertiesPtrOutput)
}

type AuthParametersPropertiesOutput struct{ *pulumi.OutputState }

func (AuthParametersPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthParametersProperties)(nil)).Elem()
}

func (o AuthParametersPropertiesOutput) ToAuthParametersPropertiesOutput() AuthParametersPropertiesOutput {
	return o
}

func (o AuthParametersPropertiesOutput) ToAuthParametersPropertiesOutputWithContext(ctx context.Context) AuthParametersPropertiesOutput {
	return o
}

func (o AuthParametersPropertiesOutput) ToAuthParametersPropertiesPtrOutput() AuthParametersPropertiesPtrOutput {
	return o.ToAuthParametersPropertiesPtrOutputWithContext(context.Background())
}

func (o AuthParametersPropertiesOutput) ToAuthParametersPropertiesPtrOutputWithContext(ctx context.Context) AuthParametersPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthParametersProperties) *AuthParametersProperties {
		return &v
	}).(AuthParametersPropertiesPtrOutput)
}

func (o AuthParametersPropertiesOutput) ApiKeyAuthParameters() ConnectionApiKeyAuthParametersPtrOutput {
	return o.ApplyT(func(v AuthParametersProperties) *ConnectionApiKeyAuthParameters { return v.ApiKeyAuthParameters }).(ConnectionApiKeyAuthParametersPtrOutput)
}

func (o AuthParametersPropertiesOutput) BasicAuthParameters() ConnectionBasicAuthParametersPtrOutput {
	return o.ApplyT(func(v AuthParametersProperties) *ConnectionBasicAuthParameters { return v.BasicAuthParameters }).(ConnectionBasicAuthParametersPtrOutput)
}

func (o AuthParametersPropertiesOutput) InvocationHttpParameters() ConnectionHttpParametersPtrOutput {
	return o.ApplyT(func(v AuthParametersProperties) *ConnectionHttpParameters { return v.InvocationHttpParameters }).(ConnectionHttpParametersPtrOutput)
}

func (o AuthParametersPropertiesOutput) OAuthParameters() ConnectionOAuthParametersPtrOutput {
	return o.ApplyT(func(v AuthParametersProperties) *ConnectionOAuthParameters { return v.OAuthParameters }).(ConnectionOAuthParametersPtrOutput)
}

type AuthParametersPropertiesPtrOutput struct{ *pulumi.OutputState }

func (AuthParametersPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthParametersProperties)(nil)).Elem()
}

func (o AuthParametersPropertiesPtrOutput) ToAuthParametersPropertiesPtrOutput() AuthParametersPropertiesPtrOutput {
	return o
}

func (o AuthParametersPropertiesPtrOutput) ToAuthParametersPropertiesPtrOutputWithContext(ctx context.Context) AuthParametersPropertiesPtrOutput {
	return o
}

func (o AuthParametersPropertiesPtrOutput) Elem() AuthParametersPropertiesOutput {
	return o.ApplyT(func(v *AuthParametersProperties) AuthParametersProperties {
		if v != nil {
			return *v
		}
		var ret AuthParametersProperties
		return ret
	}).(AuthParametersPropertiesOutput)
}

func (o AuthParametersPropertiesPtrOutput) ApiKeyAuthParameters() ConnectionApiKeyAuthParametersPtrOutput {
	return o.ApplyT(func(v *AuthParametersProperties) *ConnectionApiKeyAuthParameters {
		if v == nil {
			return nil
		}
		return v.ApiKeyAuthParameters
	}).(ConnectionApiKeyAuthParametersPtrOutput)
}

func (o AuthParametersPropertiesPtrOutput) BasicAuthParameters() ConnectionBasicAuthParametersPtrOutput {
	return o.ApplyT(func(v *AuthParametersProperties) *ConnectionBasicAuthParameters {
		if v == nil {
			return nil
		}
		return v.BasicAuthParameters
	}).(ConnectionBasicAuthParametersPtrOutput)
}

func (o AuthParametersPropertiesPtrOutput) InvocationHttpParameters() ConnectionHttpParametersPtrOutput {
	return o.ApplyT(func(v *AuthParametersProperties) *ConnectionHttpParameters {
		if v == nil {
			return nil
		}
		return v.InvocationHttpParameters
	}).(ConnectionHttpParametersPtrOutput)
}

func (o AuthParametersPropertiesPtrOutput) OAuthParameters() ConnectionOAuthParametersPtrOutput {
	return o.ApplyT(func(v *AuthParametersProperties) *ConnectionOAuthParameters {
		if v == nil {
			return nil
		}
		return v.OAuthParameters
	}).(ConnectionOAuthParametersPtrOutput)
}

type ConnectionApiKeyAuthParameters struct {
	ApiKeyName  string `pulumi:"apiKeyName"`
	ApiKeyValue string `pulumi:"apiKeyValue"`
}

// ConnectionApiKeyAuthParametersInput is an input type that accepts ConnectionApiKeyAuthParametersArgs and ConnectionApiKeyAuthParametersOutput values.
// You can construct a concrete instance of `ConnectionApiKeyAuthParametersInput` via:
//
//          ConnectionApiKeyAuthParametersArgs{...}
type ConnectionApiKeyAuthParametersInput interface {
	pulumi.Input

	ToConnectionApiKeyAuthParametersOutput() ConnectionApiKeyAuthParametersOutput
	ToConnectionApiKeyAuthParametersOutputWithContext(context.Context) ConnectionApiKeyAuthParametersOutput
}

type ConnectionApiKeyAuthParametersArgs struct {
	ApiKeyName  pulumi.StringInput `pulumi:"apiKeyName"`
	ApiKeyValue pulumi.StringInput `pulumi:"apiKeyValue"`
}

func (ConnectionApiKeyAuthParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionApiKeyAuthParameters)(nil)).Elem()
}

func (i ConnectionApiKeyAuthParametersArgs) ToConnectionApiKeyAuthParametersOutput() ConnectionApiKeyAuthParametersOutput {
	return i.ToConnectionApiKeyAuthParametersOutputWithContext(context.Background())
}

func (i ConnectionApiKeyAuthParametersArgs) ToConnectionApiKeyAuthParametersOutputWithContext(ctx context.Context) ConnectionApiKeyAuthParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionApiKeyAuthParametersOutput)
}

func (i ConnectionApiKeyAuthParametersArgs) ToConnectionApiKeyAuthParametersPtrOutput() ConnectionApiKeyAuthParametersPtrOutput {
	return i.ToConnectionApiKeyAuthParametersPtrOutputWithContext(context.Background())
}

func (i ConnectionApiKeyAuthParametersArgs) ToConnectionApiKeyAuthParametersPtrOutputWithContext(ctx context.Context) ConnectionApiKeyAuthParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionApiKeyAuthParametersOutput).ToConnectionApiKeyAuthParametersPtrOutputWithContext(ctx)
}

// ConnectionApiKeyAuthParametersPtrInput is an input type that accepts ConnectionApiKeyAuthParametersArgs, ConnectionApiKeyAuthParametersPtr and ConnectionApiKeyAuthParametersPtrOutput values.
// You can construct a concrete instance of `ConnectionApiKeyAuthParametersPtrInput` via:
//
//          ConnectionApiKeyAuthParametersArgs{...}
//
//  or:
//
//          nil
type ConnectionApiKeyAuthParametersPtrInput interface {
	pulumi.Input

	ToConnectionApiKeyAuthParametersPtrOutput() ConnectionApiKeyAuthParametersPtrOutput
	ToConnectionApiKeyAuthParametersPtrOutputWithContext(context.Context) ConnectionApiKeyAuthParametersPtrOutput
}

type connectionApiKeyAuthParametersPtrType ConnectionApiKeyAuthParametersArgs

func ConnectionApiKeyAuthParametersPtr(v *ConnectionApiKeyAuthParametersArgs) ConnectionApiKeyAuthParametersPtrInput {
	return (*connectionApiKeyAuthParametersPtrType)(v)
}

func (*connectionApiKeyAuthParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionApiKeyAuthParameters)(nil)).Elem()
}

func (i *connectionApiKeyAuthParametersPtrType) ToConnectionApiKeyAuthParametersPtrOutput() ConnectionApiKeyAuthParametersPtrOutput {
	return i.ToConnectionApiKeyAuthParametersPtrOutputWithContext(context.Background())
}

func (i *connectionApiKeyAuthParametersPtrType) ToConnectionApiKeyAuthParametersPtrOutputWithContext(ctx context.Context) ConnectionApiKeyAuthParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionApiKeyAuthParametersPtrOutput)
}

type ConnectionApiKeyAuthParametersOutput struct{ *pulumi.OutputState }

func (ConnectionApiKeyAuthParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionApiKeyAuthParameters)(nil)).Elem()
}

func (o ConnectionApiKeyAuthParametersOutput) ToConnectionApiKeyAuthParametersOutput() ConnectionApiKeyAuthParametersOutput {
	return o
}

func (o ConnectionApiKeyAuthParametersOutput) ToConnectionApiKeyAuthParametersOutputWithContext(ctx context.Context) ConnectionApiKeyAuthParametersOutput {
	return o
}

func (o ConnectionApiKeyAuthParametersOutput) ToConnectionApiKeyAuthParametersPtrOutput() ConnectionApiKeyAuthParametersPtrOutput {
	return o.ToConnectionApiKeyAuthParametersPtrOutputWithContext(context.Background())
}

func (o ConnectionApiKeyAuthParametersOutput) ToConnectionApiKeyAuthParametersPtrOutputWithContext(ctx context.Context) ConnectionApiKeyAuthParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionApiKeyAuthParameters) *ConnectionApiKeyAuthParameters {
		return &v
	}).(ConnectionApiKeyAuthParametersPtrOutput)
}

func (o ConnectionApiKeyAuthParametersOutput) ApiKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionApiKeyAuthParameters) string { return v.ApiKeyName }).(pulumi.StringOutput)
}

func (o ConnectionApiKeyAuthParametersOutput) ApiKeyValue() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionApiKeyAuthParameters) string { return v.ApiKeyValue }).(pulumi.StringOutput)
}

type ConnectionApiKeyAuthParametersPtrOutput struct{ *pulumi.OutputState }

func (ConnectionApiKeyAuthParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionApiKeyAuthParameters)(nil)).Elem()
}

func (o ConnectionApiKeyAuthParametersPtrOutput) ToConnectionApiKeyAuthParametersPtrOutput() ConnectionApiKeyAuthParametersPtrOutput {
	return o
}

func (o ConnectionApiKeyAuthParametersPtrOutput) ToConnectionApiKeyAuthParametersPtrOutputWithContext(ctx context.Context) ConnectionApiKeyAuthParametersPtrOutput {
	return o
}

func (o ConnectionApiKeyAuthParametersPtrOutput) Elem() ConnectionApiKeyAuthParametersOutput {
	return o.ApplyT(func(v *ConnectionApiKeyAuthParameters) ConnectionApiKeyAuthParameters {
		if v != nil {
			return *v
		}
		var ret ConnectionApiKeyAuthParameters
		return ret
	}).(ConnectionApiKeyAuthParametersOutput)
}

func (o ConnectionApiKeyAuthParametersPtrOutput) ApiKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionApiKeyAuthParameters) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKeyName
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionApiKeyAuthParametersPtrOutput) ApiKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionApiKeyAuthParameters) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKeyValue
	}).(pulumi.StringPtrOutput)
}

type ConnectionBasicAuthParameters struct {
	Password string `pulumi:"password"`
	Username string `pulumi:"username"`
}

// ConnectionBasicAuthParametersInput is an input type that accepts ConnectionBasicAuthParametersArgs and ConnectionBasicAuthParametersOutput values.
// You can construct a concrete instance of `ConnectionBasicAuthParametersInput` via:
//
//          ConnectionBasicAuthParametersArgs{...}
type ConnectionBasicAuthParametersInput interface {
	pulumi.Input

	ToConnectionBasicAuthParametersOutput() ConnectionBasicAuthParametersOutput
	ToConnectionBasicAuthParametersOutputWithContext(context.Context) ConnectionBasicAuthParametersOutput
}

type ConnectionBasicAuthParametersArgs struct {
	Password pulumi.StringInput `pulumi:"password"`
	Username pulumi.StringInput `pulumi:"username"`
}

func (ConnectionBasicAuthParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionBasicAuthParameters)(nil)).Elem()
}

func (i ConnectionBasicAuthParametersArgs) ToConnectionBasicAuthParametersOutput() ConnectionBasicAuthParametersOutput {
	return i.ToConnectionBasicAuthParametersOutputWithContext(context.Background())
}

func (i ConnectionBasicAuthParametersArgs) ToConnectionBasicAuthParametersOutputWithContext(ctx context.Context) ConnectionBasicAuthParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionBasicAuthParametersOutput)
}

func (i ConnectionBasicAuthParametersArgs) ToConnectionBasicAuthParametersPtrOutput() ConnectionBasicAuthParametersPtrOutput {
	return i.ToConnectionBasicAuthParametersPtrOutputWithContext(context.Background())
}

func (i ConnectionBasicAuthParametersArgs) ToConnectionBasicAuthParametersPtrOutputWithContext(ctx context.Context) ConnectionBasicAuthParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionBasicAuthParametersOutput).ToConnectionBasicAuthParametersPtrOutputWithContext(ctx)
}

// ConnectionBasicAuthParametersPtrInput is an input type that accepts ConnectionBasicAuthParametersArgs, ConnectionBasicAuthParametersPtr and ConnectionBasicAuthParametersPtrOutput values.
// You can construct a concrete instance of `ConnectionBasicAuthParametersPtrInput` via:
//
//          ConnectionBasicAuthParametersArgs{...}
//
//  or:
//
//          nil
type ConnectionBasicAuthParametersPtrInput interface {
	pulumi.Input

	ToConnectionBasicAuthParametersPtrOutput() ConnectionBasicAuthParametersPtrOutput
	ToConnectionBasicAuthParametersPtrOutputWithContext(context.Context) ConnectionBasicAuthParametersPtrOutput
}

type connectionBasicAuthParametersPtrType ConnectionBasicAuthParametersArgs

func ConnectionBasicAuthParametersPtr(v *ConnectionBasicAuthParametersArgs) ConnectionBasicAuthParametersPtrInput {
	return (*connectionBasicAuthParametersPtrType)(v)
}

func (*connectionBasicAuthParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionBasicAuthParameters)(nil)).Elem()
}

func (i *connectionBasicAuthParametersPtrType) ToConnectionBasicAuthParametersPtrOutput() ConnectionBasicAuthParametersPtrOutput {
	return i.ToConnectionBasicAuthParametersPtrOutputWithContext(context.Background())
}

func (i *connectionBasicAuthParametersPtrType) ToConnectionBasicAuthParametersPtrOutputWithContext(ctx context.Context) ConnectionBasicAuthParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionBasicAuthParametersPtrOutput)
}

type ConnectionBasicAuthParametersOutput struct{ *pulumi.OutputState }

func (ConnectionBasicAuthParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionBasicAuthParameters)(nil)).Elem()
}

func (o ConnectionBasicAuthParametersOutput) ToConnectionBasicAuthParametersOutput() ConnectionBasicAuthParametersOutput {
	return o
}

func (o ConnectionBasicAuthParametersOutput) ToConnectionBasicAuthParametersOutputWithContext(ctx context.Context) ConnectionBasicAuthParametersOutput {
	return o
}

func (o ConnectionBasicAuthParametersOutput) ToConnectionBasicAuthParametersPtrOutput() ConnectionBasicAuthParametersPtrOutput {
	return o.ToConnectionBasicAuthParametersPtrOutputWithContext(context.Background())
}

func (o ConnectionBasicAuthParametersOutput) ToConnectionBasicAuthParametersPtrOutputWithContext(ctx context.Context) ConnectionBasicAuthParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionBasicAuthParameters) *ConnectionBasicAuthParameters {
		return &v
	}).(ConnectionBasicAuthParametersPtrOutput)
}

func (o ConnectionBasicAuthParametersOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionBasicAuthParameters) string { return v.Password }).(pulumi.StringOutput)
}

func (o ConnectionBasicAuthParametersOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionBasicAuthParameters) string { return v.Username }).(pulumi.StringOutput)
}

type ConnectionBasicAuthParametersPtrOutput struct{ *pulumi.OutputState }

func (ConnectionBasicAuthParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionBasicAuthParameters)(nil)).Elem()
}

func (o ConnectionBasicAuthParametersPtrOutput) ToConnectionBasicAuthParametersPtrOutput() ConnectionBasicAuthParametersPtrOutput {
	return o
}

func (o ConnectionBasicAuthParametersPtrOutput) ToConnectionBasicAuthParametersPtrOutputWithContext(ctx context.Context) ConnectionBasicAuthParametersPtrOutput {
	return o
}

func (o ConnectionBasicAuthParametersPtrOutput) Elem() ConnectionBasicAuthParametersOutput {
	return o.ApplyT(func(v *ConnectionBasicAuthParameters) ConnectionBasicAuthParameters {
		if v != nil {
			return *v
		}
		var ret ConnectionBasicAuthParameters
		return ret
	}).(ConnectionBasicAuthParametersOutput)
}

func (o ConnectionBasicAuthParametersPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionBasicAuthParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionBasicAuthParametersPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionBasicAuthParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ConnectionClientParameters struct {
	ClientID     string `pulumi:"clientID"`
	ClientSecret string `pulumi:"clientSecret"`
}

// ConnectionClientParametersInput is an input type that accepts ConnectionClientParametersArgs and ConnectionClientParametersOutput values.
// You can construct a concrete instance of `ConnectionClientParametersInput` via:
//
//          ConnectionClientParametersArgs{...}
type ConnectionClientParametersInput interface {
	pulumi.Input

	ToConnectionClientParametersOutput() ConnectionClientParametersOutput
	ToConnectionClientParametersOutputWithContext(context.Context) ConnectionClientParametersOutput
}

type ConnectionClientParametersArgs struct {
	ClientID     pulumi.StringInput `pulumi:"clientID"`
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
}

func (ConnectionClientParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionClientParameters)(nil)).Elem()
}

func (i ConnectionClientParametersArgs) ToConnectionClientParametersOutput() ConnectionClientParametersOutput {
	return i.ToConnectionClientParametersOutputWithContext(context.Background())
}

func (i ConnectionClientParametersArgs) ToConnectionClientParametersOutputWithContext(ctx context.Context) ConnectionClientParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionClientParametersOutput)
}

func (i ConnectionClientParametersArgs) ToConnectionClientParametersPtrOutput() ConnectionClientParametersPtrOutput {
	return i.ToConnectionClientParametersPtrOutputWithContext(context.Background())
}

func (i ConnectionClientParametersArgs) ToConnectionClientParametersPtrOutputWithContext(ctx context.Context) ConnectionClientParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionClientParametersOutput).ToConnectionClientParametersPtrOutputWithContext(ctx)
}

// ConnectionClientParametersPtrInput is an input type that accepts ConnectionClientParametersArgs, ConnectionClientParametersPtr and ConnectionClientParametersPtrOutput values.
// You can construct a concrete instance of `ConnectionClientParametersPtrInput` via:
//
//          ConnectionClientParametersArgs{...}
//
//  or:
//
//          nil
type ConnectionClientParametersPtrInput interface {
	pulumi.Input

	ToConnectionClientParametersPtrOutput() ConnectionClientParametersPtrOutput
	ToConnectionClientParametersPtrOutputWithContext(context.Context) ConnectionClientParametersPtrOutput
}

type connectionClientParametersPtrType ConnectionClientParametersArgs

func ConnectionClientParametersPtr(v *ConnectionClientParametersArgs) ConnectionClientParametersPtrInput {
	return (*connectionClientParametersPtrType)(v)
}

func (*connectionClientParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionClientParameters)(nil)).Elem()
}

func (i *connectionClientParametersPtrType) ToConnectionClientParametersPtrOutput() ConnectionClientParametersPtrOutput {
	return i.ToConnectionClientParametersPtrOutputWithContext(context.Background())
}

func (i *connectionClientParametersPtrType) ToConnectionClientParametersPtrOutputWithContext(ctx context.Context) ConnectionClientParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionClientParametersPtrOutput)
}

type ConnectionClientParametersOutput struct{ *pulumi.OutputState }

func (ConnectionClientParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionClientParameters)(nil)).Elem()
}

func (o ConnectionClientParametersOutput) ToConnectionClientParametersOutput() ConnectionClientParametersOutput {
	return o
}

func (o ConnectionClientParametersOutput) ToConnectionClientParametersOutputWithContext(ctx context.Context) ConnectionClientParametersOutput {
	return o
}

func (o ConnectionClientParametersOutput) ToConnectionClientParametersPtrOutput() ConnectionClientParametersPtrOutput {
	return o.ToConnectionClientParametersPtrOutputWithContext(context.Background())
}

func (o ConnectionClientParametersOutput) ToConnectionClientParametersPtrOutputWithContext(ctx context.Context) ConnectionClientParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionClientParameters) *ConnectionClientParameters {
		return &v
	}).(ConnectionClientParametersPtrOutput)
}

func (o ConnectionClientParametersOutput) ClientID() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionClientParameters) string { return v.ClientID }).(pulumi.StringOutput)
}

func (o ConnectionClientParametersOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionClientParameters) string { return v.ClientSecret }).(pulumi.StringOutput)
}

type ConnectionClientParametersPtrOutput struct{ *pulumi.OutputState }

func (ConnectionClientParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionClientParameters)(nil)).Elem()
}

func (o ConnectionClientParametersPtrOutput) ToConnectionClientParametersPtrOutput() ConnectionClientParametersPtrOutput {
	return o
}

func (o ConnectionClientParametersPtrOutput) ToConnectionClientParametersPtrOutputWithContext(ctx context.Context) ConnectionClientParametersPtrOutput {
	return o
}

func (o ConnectionClientParametersPtrOutput) Elem() ConnectionClientParametersOutput {
	return o.ApplyT(func(v *ConnectionClientParameters) ConnectionClientParameters {
		if v != nil {
			return *v
		}
		var ret ConnectionClientParameters
		return ret
	}).(ConnectionClientParametersOutput)
}

func (o ConnectionClientParametersPtrOutput) ClientID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionClientParameters) *string {
		if v == nil {
			return nil
		}
		return &v.ClientID
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionClientParametersPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionClientParameters) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type ConnectionHttpParameters struct {
	BodyParameters        []ConnectionParameter `pulumi:"bodyParameters"`
	HeaderParameters      []ConnectionParameter `pulumi:"headerParameters"`
	QueryStringParameters []ConnectionParameter `pulumi:"queryStringParameters"`
}

// ConnectionHttpParametersInput is an input type that accepts ConnectionHttpParametersArgs and ConnectionHttpParametersOutput values.
// You can construct a concrete instance of `ConnectionHttpParametersInput` via:
//
//          ConnectionHttpParametersArgs{...}
type ConnectionHttpParametersInput interface {
	pulumi.Input

	ToConnectionHttpParametersOutput() ConnectionHttpParametersOutput
	ToConnectionHttpParametersOutputWithContext(context.Context) ConnectionHttpParametersOutput
}

type ConnectionHttpParametersArgs struct {
	BodyParameters        ConnectionParameterArrayInput `pulumi:"bodyParameters"`
	HeaderParameters      ConnectionParameterArrayInput `pulumi:"headerParameters"`
	QueryStringParameters ConnectionParameterArrayInput `pulumi:"queryStringParameters"`
}

func (ConnectionHttpParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionHttpParameters)(nil)).Elem()
}

func (i ConnectionHttpParametersArgs) ToConnectionHttpParametersOutput() ConnectionHttpParametersOutput {
	return i.ToConnectionHttpParametersOutputWithContext(context.Background())
}

func (i ConnectionHttpParametersArgs) ToConnectionHttpParametersOutputWithContext(ctx context.Context) ConnectionHttpParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionHttpParametersOutput)
}

func (i ConnectionHttpParametersArgs) ToConnectionHttpParametersPtrOutput() ConnectionHttpParametersPtrOutput {
	return i.ToConnectionHttpParametersPtrOutputWithContext(context.Background())
}

func (i ConnectionHttpParametersArgs) ToConnectionHttpParametersPtrOutputWithContext(ctx context.Context) ConnectionHttpParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionHttpParametersOutput).ToConnectionHttpParametersPtrOutputWithContext(ctx)
}

// ConnectionHttpParametersPtrInput is an input type that accepts ConnectionHttpParametersArgs, ConnectionHttpParametersPtr and ConnectionHttpParametersPtrOutput values.
// You can construct a concrete instance of `ConnectionHttpParametersPtrInput` via:
//
//          ConnectionHttpParametersArgs{...}
//
//  or:
//
//          nil
type ConnectionHttpParametersPtrInput interface {
	pulumi.Input

	ToConnectionHttpParametersPtrOutput() ConnectionHttpParametersPtrOutput
	ToConnectionHttpParametersPtrOutputWithContext(context.Context) ConnectionHttpParametersPtrOutput
}

type connectionHttpParametersPtrType ConnectionHttpParametersArgs

func ConnectionHttpParametersPtr(v *ConnectionHttpParametersArgs) ConnectionHttpParametersPtrInput {
	return (*connectionHttpParametersPtrType)(v)
}

func (*connectionHttpParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionHttpParameters)(nil)).Elem()
}

func (i *connectionHttpParametersPtrType) ToConnectionHttpParametersPtrOutput() ConnectionHttpParametersPtrOutput {
	return i.ToConnectionHttpParametersPtrOutputWithContext(context.Background())
}

func (i *connectionHttpParametersPtrType) ToConnectionHttpParametersPtrOutputWithContext(ctx context.Context) ConnectionHttpParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionHttpParametersPtrOutput)
}

type ConnectionHttpParametersOutput struct{ *pulumi.OutputState }

func (ConnectionHttpParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionHttpParameters)(nil)).Elem()
}

func (o ConnectionHttpParametersOutput) ToConnectionHttpParametersOutput() ConnectionHttpParametersOutput {
	return o
}

func (o ConnectionHttpParametersOutput) ToConnectionHttpParametersOutputWithContext(ctx context.Context) ConnectionHttpParametersOutput {
	return o
}

func (o ConnectionHttpParametersOutput) ToConnectionHttpParametersPtrOutput() ConnectionHttpParametersPtrOutput {
	return o.ToConnectionHttpParametersPtrOutputWithContext(context.Background())
}

func (o ConnectionHttpParametersOutput) ToConnectionHttpParametersPtrOutputWithContext(ctx context.Context) ConnectionHttpParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionHttpParameters) *ConnectionHttpParameters {
		return &v
	}).(ConnectionHttpParametersPtrOutput)
}

func (o ConnectionHttpParametersOutput) BodyParameters() ConnectionParameterArrayOutput {
	return o.ApplyT(func(v ConnectionHttpParameters) []ConnectionParameter { return v.BodyParameters }).(ConnectionParameterArrayOutput)
}

func (o ConnectionHttpParametersOutput) HeaderParameters() ConnectionParameterArrayOutput {
	return o.ApplyT(func(v ConnectionHttpParameters) []ConnectionParameter { return v.HeaderParameters }).(ConnectionParameterArrayOutput)
}

func (o ConnectionHttpParametersOutput) QueryStringParameters() ConnectionParameterArrayOutput {
	return o.ApplyT(func(v ConnectionHttpParameters) []ConnectionParameter { return v.QueryStringParameters }).(ConnectionParameterArrayOutput)
}

type ConnectionHttpParametersPtrOutput struct{ *pulumi.OutputState }

func (ConnectionHttpParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionHttpParameters)(nil)).Elem()
}

func (o ConnectionHttpParametersPtrOutput) ToConnectionHttpParametersPtrOutput() ConnectionHttpParametersPtrOutput {
	return o
}

func (o ConnectionHttpParametersPtrOutput) ToConnectionHttpParametersPtrOutputWithContext(ctx context.Context) ConnectionHttpParametersPtrOutput {
	return o
}

func (o ConnectionHttpParametersPtrOutput) Elem() ConnectionHttpParametersOutput {
	return o.ApplyT(func(v *ConnectionHttpParameters) ConnectionHttpParameters {
		if v != nil {
			return *v
		}
		var ret ConnectionHttpParameters
		return ret
	}).(ConnectionHttpParametersOutput)
}

func (o ConnectionHttpParametersPtrOutput) BodyParameters() ConnectionParameterArrayOutput {
	return o.ApplyT(func(v *ConnectionHttpParameters) []ConnectionParameter {
		if v == nil {
			return nil
		}
		return v.BodyParameters
	}).(ConnectionParameterArrayOutput)
}

func (o ConnectionHttpParametersPtrOutput) HeaderParameters() ConnectionParameterArrayOutput {
	return o.ApplyT(func(v *ConnectionHttpParameters) []ConnectionParameter {
		if v == nil {
			return nil
		}
		return v.HeaderParameters
	}).(ConnectionParameterArrayOutput)
}

func (o ConnectionHttpParametersPtrOutput) QueryStringParameters() ConnectionParameterArrayOutput {
	return o.ApplyT(func(v *ConnectionHttpParameters) []ConnectionParameter {
		if v == nil {
			return nil
		}
		return v.QueryStringParameters
	}).(ConnectionParameterArrayOutput)
}

type ConnectionOAuthParameters struct {
	AuthorizationEndpoint string                              `pulumi:"authorizationEndpoint"`
	ClientParameters      ConnectionClientParameters          `pulumi:"clientParameters"`
	HttpMethod            ConnectionOAuthParametersHttpMethod `pulumi:"httpMethod"`
	OAuthHttpParameters   *ConnectionHttpParameters           `pulumi:"oAuthHttpParameters"`
}

// ConnectionOAuthParametersInput is an input type that accepts ConnectionOAuthParametersArgs and ConnectionOAuthParametersOutput values.
// You can construct a concrete instance of `ConnectionOAuthParametersInput` via:
//
//          ConnectionOAuthParametersArgs{...}
type ConnectionOAuthParametersInput interface {
	pulumi.Input

	ToConnectionOAuthParametersOutput() ConnectionOAuthParametersOutput
	ToConnectionOAuthParametersOutputWithContext(context.Context) ConnectionOAuthParametersOutput
}

type ConnectionOAuthParametersArgs struct {
	AuthorizationEndpoint pulumi.StringInput                       `pulumi:"authorizationEndpoint"`
	ClientParameters      ConnectionClientParametersInput          `pulumi:"clientParameters"`
	HttpMethod            ConnectionOAuthParametersHttpMethodInput `pulumi:"httpMethod"`
	OAuthHttpParameters   ConnectionHttpParametersPtrInput         `pulumi:"oAuthHttpParameters"`
}

func (ConnectionOAuthParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOAuthParameters)(nil)).Elem()
}

func (i ConnectionOAuthParametersArgs) ToConnectionOAuthParametersOutput() ConnectionOAuthParametersOutput {
	return i.ToConnectionOAuthParametersOutputWithContext(context.Background())
}

func (i ConnectionOAuthParametersArgs) ToConnectionOAuthParametersOutputWithContext(ctx context.Context) ConnectionOAuthParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOAuthParametersOutput)
}

func (i ConnectionOAuthParametersArgs) ToConnectionOAuthParametersPtrOutput() ConnectionOAuthParametersPtrOutput {
	return i.ToConnectionOAuthParametersPtrOutputWithContext(context.Background())
}

func (i ConnectionOAuthParametersArgs) ToConnectionOAuthParametersPtrOutputWithContext(ctx context.Context) ConnectionOAuthParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOAuthParametersOutput).ToConnectionOAuthParametersPtrOutputWithContext(ctx)
}

// ConnectionOAuthParametersPtrInput is an input type that accepts ConnectionOAuthParametersArgs, ConnectionOAuthParametersPtr and ConnectionOAuthParametersPtrOutput values.
// You can construct a concrete instance of `ConnectionOAuthParametersPtrInput` via:
//
//          ConnectionOAuthParametersArgs{...}
//
//  or:
//
//          nil
type ConnectionOAuthParametersPtrInput interface {
	pulumi.Input

	ToConnectionOAuthParametersPtrOutput() ConnectionOAuthParametersPtrOutput
	ToConnectionOAuthParametersPtrOutputWithContext(context.Context) ConnectionOAuthParametersPtrOutput
}

type connectionOAuthParametersPtrType ConnectionOAuthParametersArgs

func ConnectionOAuthParametersPtr(v *ConnectionOAuthParametersArgs) ConnectionOAuthParametersPtrInput {
	return (*connectionOAuthParametersPtrType)(v)
}

func (*connectionOAuthParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOAuthParameters)(nil)).Elem()
}

func (i *connectionOAuthParametersPtrType) ToConnectionOAuthParametersPtrOutput() ConnectionOAuthParametersPtrOutput {
	return i.ToConnectionOAuthParametersPtrOutputWithContext(context.Background())
}

func (i *connectionOAuthParametersPtrType) ToConnectionOAuthParametersPtrOutputWithContext(ctx context.Context) ConnectionOAuthParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOAuthParametersPtrOutput)
}

type ConnectionOAuthParametersOutput struct{ *pulumi.OutputState }

func (ConnectionOAuthParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOAuthParameters)(nil)).Elem()
}

func (o ConnectionOAuthParametersOutput) ToConnectionOAuthParametersOutput() ConnectionOAuthParametersOutput {
	return o
}

func (o ConnectionOAuthParametersOutput) ToConnectionOAuthParametersOutputWithContext(ctx context.Context) ConnectionOAuthParametersOutput {
	return o
}

func (o ConnectionOAuthParametersOutput) ToConnectionOAuthParametersPtrOutput() ConnectionOAuthParametersPtrOutput {
	return o.ToConnectionOAuthParametersPtrOutputWithContext(context.Background())
}

func (o ConnectionOAuthParametersOutput) ToConnectionOAuthParametersPtrOutputWithContext(ctx context.Context) ConnectionOAuthParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOAuthParameters) *ConnectionOAuthParameters {
		return &v
	}).(ConnectionOAuthParametersPtrOutput)
}

func (o ConnectionOAuthParametersOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionOAuthParameters) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

func (o ConnectionOAuthParametersOutput) ClientParameters() ConnectionClientParametersOutput {
	return o.ApplyT(func(v ConnectionOAuthParameters) ConnectionClientParameters { return v.ClientParameters }).(ConnectionClientParametersOutput)
}

func (o ConnectionOAuthParametersOutput) HttpMethod() ConnectionOAuthParametersHttpMethodOutput {
	return o.ApplyT(func(v ConnectionOAuthParameters) ConnectionOAuthParametersHttpMethod { return v.HttpMethod }).(ConnectionOAuthParametersHttpMethodOutput)
}

func (o ConnectionOAuthParametersOutput) OAuthHttpParameters() ConnectionHttpParametersPtrOutput {
	return o.ApplyT(func(v ConnectionOAuthParameters) *ConnectionHttpParameters { return v.OAuthHttpParameters }).(ConnectionHttpParametersPtrOutput)
}

type ConnectionOAuthParametersPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOAuthParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOAuthParameters)(nil)).Elem()
}

func (o ConnectionOAuthParametersPtrOutput) ToConnectionOAuthParametersPtrOutput() ConnectionOAuthParametersPtrOutput {
	return o
}

func (o ConnectionOAuthParametersPtrOutput) ToConnectionOAuthParametersPtrOutputWithContext(ctx context.Context) ConnectionOAuthParametersPtrOutput {
	return o
}

func (o ConnectionOAuthParametersPtrOutput) Elem() ConnectionOAuthParametersOutput {
	return o.ApplyT(func(v *ConnectionOAuthParameters) ConnectionOAuthParameters {
		if v != nil {
			return *v
		}
		var ret ConnectionOAuthParameters
		return ret
	}).(ConnectionOAuthParametersOutput)
}

func (o ConnectionOAuthParametersPtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuthParameters) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOAuthParametersPtrOutput) ClientParameters() ConnectionClientParametersPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuthParameters) *ConnectionClientParameters {
		if v == nil {
			return nil
		}
		return &v.ClientParameters
	}).(ConnectionClientParametersPtrOutput)
}

func (o ConnectionOAuthParametersPtrOutput) HttpMethod() ConnectionOAuthParametersHttpMethodPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuthParameters) *ConnectionOAuthParametersHttpMethod {
		if v == nil {
			return nil
		}
		return &v.HttpMethod
	}).(ConnectionOAuthParametersHttpMethodPtrOutput)
}

func (o ConnectionOAuthParametersPtrOutput) OAuthHttpParameters() ConnectionHttpParametersPtrOutput {
	return o.ApplyT(func(v *ConnectionOAuthParameters) *ConnectionHttpParameters {
		if v == nil {
			return nil
		}
		return v.OAuthHttpParameters
	}).(ConnectionHttpParametersPtrOutput)
}

type ConnectionParameter struct {
	IsValueSecret *bool  `pulumi:"isValueSecret"`
	Key           string `pulumi:"key"`
	Value         string `pulumi:"value"`
}

// ConnectionParameterInput is an input type that accepts ConnectionParameterArgs and ConnectionParameterOutput values.
// You can construct a concrete instance of `ConnectionParameterInput` via:
//
//          ConnectionParameterArgs{...}
type ConnectionParameterInput interface {
	pulumi.Input

	ToConnectionParameterOutput() ConnectionParameterOutput
	ToConnectionParameterOutputWithContext(context.Context) ConnectionParameterOutput
}

type ConnectionParameterArgs struct {
	IsValueSecret pulumi.BoolPtrInput `pulumi:"isValueSecret"`
	Key           pulumi.StringInput  `pulumi:"key"`
	Value         pulumi.StringInput  `pulumi:"value"`
}

func (ConnectionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionParameter)(nil)).Elem()
}

func (i ConnectionParameterArgs) ToConnectionParameterOutput() ConnectionParameterOutput {
	return i.ToConnectionParameterOutputWithContext(context.Background())
}

func (i ConnectionParameterArgs) ToConnectionParameterOutputWithContext(ctx context.Context) ConnectionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionParameterOutput)
}

// ConnectionParameterArrayInput is an input type that accepts ConnectionParameterArray and ConnectionParameterArrayOutput values.
// You can construct a concrete instance of `ConnectionParameterArrayInput` via:
//
//          ConnectionParameterArray{ ConnectionParameterArgs{...} }
type ConnectionParameterArrayInput interface {
	pulumi.Input

	ToConnectionParameterArrayOutput() ConnectionParameterArrayOutput
	ToConnectionParameterArrayOutputWithContext(context.Context) ConnectionParameterArrayOutput
}

type ConnectionParameterArray []ConnectionParameterInput

func (ConnectionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionParameter)(nil)).Elem()
}

func (i ConnectionParameterArray) ToConnectionParameterArrayOutput() ConnectionParameterArrayOutput {
	return i.ToConnectionParameterArrayOutputWithContext(context.Background())
}

func (i ConnectionParameterArray) ToConnectionParameterArrayOutputWithContext(ctx context.Context) ConnectionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionParameterArrayOutput)
}

type ConnectionParameterOutput struct{ *pulumi.OutputState }

func (ConnectionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionParameter)(nil)).Elem()
}

func (o ConnectionParameterOutput) ToConnectionParameterOutput() ConnectionParameterOutput {
	return o
}

func (o ConnectionParameterOutput) ToConnectionParameterOutputWithContext(ctx context.Context) ConnectionParameterOutput {
	return o
}

func (o ConnectionParameterOutput) IsValueSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionParameter) *bool { return v.IsValueSecret }).(pulumi.BoolPtrOutput)
}

func (o ConnectionParameterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionParameter) string { return v.Key }).(pulumi.StringOutput)
}

func (o ConnectionParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ConnectionParameterArrayOutput struct{ *pulumi.OutputState }

func (ConnectionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionParameter)(nil)).Elem()
}

func (o ConnectionParameterArrayOutput) ToConnectionParameterArrayOutput() ConnectionParameterArrayOutput {
	return o
}

func (o ConnectionParameterArrayOutput) ToConnectionParameterArrayOutputWithContext(ctx context.Context) ConnectionParameterArrayOutput {
	return o
}

func (o ConnectionParameterArrayOutput) Index(i pulumi.IntInput) ConnectionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionParameter {
		return vs[0].([]ConnectionParameter)[vs[1].(int)]
	}).(ConnectionParameterOutput)
}

type EventBusPolicyCondition struct {
	Key   *string `pulumi:"key"`
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// EventBusPolicyConditionInput is an input type that accepts EventBusPolicyConditionArgs and EventBusPolicyConditionOutput values.
// You can construct a concrete instance of `EventBusPolicyConditionInput` via:
//
//          EventBusPolicyConditionArgs{...}
type EventBusPolicyConditionInput interface {
	pulumi.Input

	ToEventBusPolicyConditionOutput() EventBusPolicyConditionOutput
	ToEventBusPolicyConditionOutputWithContext(context.Context) EventBusPolicyConditionOutput
}

type EventBusPolicyConditionArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EventBusPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventBusPolicyCondition)(nil)).Elem()
}

func (i EventBusPolicyConditionArgs) ToEventBusPolicyConditionOutput() EventBusPolicyConditionOutput {
	return i.ToEventBusPolicyConditionOutputWithContext(context.Background())
}

func (i EventBusPolicyConditionArgs) ToEventBusPolicyConditionOutputWithContext(ctx context.Context) EventBusPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventBusPolicyConditionOutput)
}

func (i EventBusPolicyConditionArgs) ToEventBusPolicyConditionPtrOutput() EventBusPolicyConditionPtrOutput {
	return i.ToEventBusPolicyConditionPtrOutputWithContext(context.Background())
}

func (i EventBusPolicyConditionArgs) ToEventBusPolicyConditionPtrOutputWithContext(ctx context.Context) EventBusPolicyConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventBusPolicyConditionOutput).ToEventBusPolicyConditionPtrOutputWithContext(ctx)
}

// EventBusPolicyConditionPtrInput is an input type that accepts EventBusPolicyConditionArgs, EventBusPolicyConditionPtr and EventBusPolicyConditionPtrOutput values.
// You can construct a concrete instance of `EventBusPolicyConditionPtrInput` via:
//
//          EventBusPolicyConditionArgs{...}
//
//  or:
//
//          nil
type EventBusPolicyConditionPtrInput interface {
	pulumi.Input

	ToEventBusPolicyConditionPtrOutput() EventBusPolicyConditionPtrOutput
	ToEventBusPolicyConditionPtrOutputWithContext(context.Context) EventBusPolicyConditionPtrOutput
}

type eventBusPolicyConditionPtrType EventBusPolicyConditionArgs

func EventBusPolicyConditionPtr(v *EventBusPolicyConditionArgs) EventBusPolicyConditionPtrInput {
	return (*eventBusPolicyConditionPtrType)(v)
}

func (*eventBusPolicyConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventBusPolicyCondition)(nil)).Elem()
}

func (i *eventBusPolicyConditionPtrType) ToEventBusPolicyConditionPtrOutput() EventBusPolicyConditionPtrOutput {
	return i.ToEventBusPolicyConditionPtrOutputWithContext(context.Background())
}

func (i *eventBusPolicyConditionPtrType) ToEventBusPolicyConditionPtrOutputWithContext(ctx context.Context) EventBusPolicyConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventBusPolicyConditionPtrOutput)
}

type EventBusPolicyConditionOutput struct{ *pulumi.OutputState }

func (EventBusPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventBusPolicyCondition)(nil)).Elem()
}

func (o EventBusPolicyConditionOutput) ToEventBusPolicyConditionOutput() EventBusPolicyConditionOutput {
	return o
}

func (o EventBusPolicyConditionOutput) ToEventBusPolicyConditionOutputWithContext(ctx context.Context) EventBusPolicyConditionOutput {
	return o
}

func (o EventBusPolicyConditionOutput) ToEventBusPolicyConditionPtrOutput() EventBusPolicyConditionPtrOutput {
	return o.ToEventBusPolicyConditionPtrOutputWithContext(context.Background())
}

func (o EventBusPolicyConditionOutput) ToEventBusPolicyConditionPtrOutputWithContext(ctx context.Context) EventBusPolicyConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventBusPolicyCondition) *EventBusPolicyCondition {
		return &v
	}).(EventBusPolicyConditionPtrOutput)
}

func (o EventBusPolicyConditionOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventBusPolicyCondition) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o EventBusPolicyConditionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventBusPolicyCondition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o EventBusPolicyConditionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventBusPolicyCondition) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EventBusPolicyConditionPtrOutput struct{ *pulumi.OutputState }

func (EventBusPolicyConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventBusPolicyCondition)(nil)).Elem()
}

func (o EventBusPolicyConditionPtrOutput) ToEventBusPolicyConditionPtrOutput() EventBusPolicyConditionPtrOutput {
	return o
}

func (o EventBusPolicyConditionPtrOutput) ToEventBusPolicyConditionPtrOutputWithContext(ctx context.Context) EventBusPolicyConditionPtrOutput {
	return o
}

func (o EventBusPolicyConditionPtrOutput) Elem() EventBusPolicyConditionOutput {
	return o.ApplyT(func(v *EventBusPolicyCondition) EventBusPolicyCondition {
		if v != nil {
			return *v
		}
		var ret EventBusPolicyCondition
		return ret
	}).(EventBusPolicyConditionOutput)
}

func (o EventBusPolicyConditionPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventBusPolicyCondition) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

func (o EventBusPolicyConditionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventBusPolicyCondition) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o EventBusPolicyConditionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventBusPolicyCondition) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type RuleAwsVpcConfiguration struct {
	AssignPublicIp *string  `pulumi:"assignPublicIp"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Subnets        []string `pulumi:"subnets"`
}

// RuleAwsVpcConfigurationInput is an input type that accepts RuleAwsVpcConfigurationArgs and RuleAwsVpcConfigurationOutput values.
// You can construct a concrete instance of `RuleAwsVpcConfigurationInput` via:
//
//          RuleAwsVpcConfigurationArgs{...}
type RuleAwsVpcConfigurationInput interface {
	pulumi.Input

	ToRuleAwsVpcConfigurationOutput() RuleAwsVpcConfigurationOutput
	ToRuleAwsVpcConfigurationOutputWithContext(context.Context) RuleAwsVpcConfigurationOutput
}

type RuleAwsVpcConfigurationArgs struct {
	AssignPublicIp pulumi.StringPtrInput   `pulumi:"assignPublicIp"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Subnets        pulumi.StringArrayInput `pulumi:"subnets"`
}

func (RuleAwsVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleAwsVpcConfiguration)(nil)).Elem()
}

func (i RuleAwsVpcConfigurationArgs) ToRuleAwsVpcConfigurationOutput() RuleAwsVpcConfigurationOutput {
	return i.ToRuleAwsVpcConfigurationOutputWithContext(context.Background())
}

func (i RuleAwsVpcConfigurationArgs) ToRuleAwsVpcConfigurationOutputWithContext(ctx context.Context) RuleAwsVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleAwsVpcConfigurationOutput)
}

func (i RuleAwsVpcConfigurationArgs) ToRuleAwsVpcConfigurationPtrOutput() RuleAwsVpcConfigurationPtrOutput {
	return i.ToRuleAwsVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i RuleAwsVpcConfigurationArgs) ToRuleAwsVpcConfigurationPtrOutputWithContext(ctx context.Context) RuleAwsVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleAwsVpcConfigurationOutput).ToRuleAwsVpcConfigurationPtrOutputWithContext(ctx)
}

// RuleAwsVpcConfigurationPtrInput is an input type that accepts RuleAwsVpcConfigurationArgs, RuleAwsVpcConfigurationPtr and RuleAwsVpcConfigurationPtrOutput values.
// You can construct a concrete instance of `RuleAwsVpcConfigurationPtrInput` via:
//
//          RuleAwsVpcConfigurationArgs{...}
//
//  or:
//
//          nil
type RuleAwsVpcConfigurationPtrInput interface {
	pulumi.Input

	ToRuleAwsVpcConfigurationPtrOutput() RuleAwsVpcConfigurationPtrOutput
	ToRuleAwsVpcConfigurationPtrOutputWithContext(context.Context) RuleAwsVpcConfigurationPtrOutput
}

type ruleAwsVpcConfigurationPtrType RuleAwsVpcConfigurationArgs

func RuleAwsVpcConfigurationPtr(v *RuleAwsVpcConfigurationArgs) RuleAwsVpcConfigurationPtrInput {
	return (*ruleAwsVpcConfigurationPtrType)(v)
}

func (*ruleAwsVpcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleAwsVpcConfiguration)(nil)).Elem()
}

func (i *ruleAwsVpcConfigurationPtrType) ToRuleAwsVpcConfigurationPtrOutput() RuleAwsVpcConfigurationPtrOutput {
	return i.ToRuleAwsVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i *ruleAwsVpcConfigurationPtrType) ToRuleAwsVpcConfigurationPtrOutputWithContext(ctx context.Context) RuleAwsVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleAwsVpcConfigurationPtrOutput)
}

type RuleAwsVpcConfigurationOutput struct{ *pulumi.OutputState }

func (RuleAwsVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleAwsVpcConfiguration)(nil)).Elem()
}

func (o RuleAwsVpcConfigurationOutput) ToRuleAwsVpcConfigurationOutput() RuleAwsVpcConfigurationOutput {
	return o
}

func (o RuleAwsVpcConfigurationOutput) ToRuleAwsVpcConfigurationOutputWithContext(ctx context.Context) RuleAwsVpcConfigurationOutput {
	return o
}

func (o RuleAwsVpcConfigurationOutput) ToRuleAwsVpcConfigurationPtrOutput() RuleAwsVpcConfigurationPtrOutput {
	return o.ToRuleAwsVpcConfigurationPtrOutputWithContext(context.Background())
}

func (o RuleAwsVpcConfigurationOutput) ToRuleAwsVpcConfigurationPtrOutputWithContext(ctx context.Context) RuleAwsVpcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleAwsVpcConfiguration) *RuleAwsVpcConfiguration {
		return &v
	}).(RuleAwsVpcConfigurationPtrOutput)
}

func (o RuleAwsVpcConfigurationOutput) AssignPublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleAwsVpcConfiguration) *string { return v.AssignPublicIp }).(pulumi.StringPtrOutput)
}

func (o RuleAwsVpcConfigurationOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleAwsVpcConfiguration) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o RuleAwsVpcConfigurationOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleAwsVpcConfiguration) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type RuleAwsVpcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RuleAwsVpcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleAwsVpcConfiguration)(nil)).Elem()
}

func (o RuleAwsVpcConfigurationPtrOutput) ToRuleAwsVpcConfigurationPtrOutput() RuleAwsVpcConfigurationPtrOutput {
	return o
}

func (o RuleAwsVpcConfigurationPtrOutput) ToRuleAwsVpcConfigurationPtrOutputWithContext(ctx context.Context) RuleAwsVpcConfigurationPtrOutput {
	return o
}

func (o RuleAwsVpcConfigurationPtrOutput) Elem() RuleAwsVpcConfigurationOutput {
	return o.ApplyT(func(v *RuleAwsVpcConfiguration) RuleAwsVpcConfiguration {
		if v != nil {
			return *v
		}
		var ret RuleAwsVpcConfiguration
		return ret
	}).(RuleAwsVpcConfigurationOutput)
}

func (o RuleAwsVpcConfigurationPtrOutput) AssignPublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleAwsVpcConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AssignPublicIp
	}).(pulumi.StringPtrOutput)
}

func (o RuleAwsVpcConfigurationPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RuleAwsVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

func (o RuleAwsVpcConfigurationPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RuleAwsVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

type RuleBatchArrayProperties struct {
	Size *int `pulumi:"size"`
}

// RuleBatchArrayPropertiesInput is an input type that accepts RuleBatchArrayPropertiesArgs and RuleBatchArrayPropertiesOutput values.
// You can construct a concrete instance of `RuleBatchArrayPropertiesInput` via:
//
//          RuleBatchArrayPropertiesArgs{...}
type RuleBatchArrayPropertiesInput interface {
	pulumi.Input

	ToRuleBatchArrayPropertiesOutput() RuleBatchArrayPropertiesOutput
	ToRuleBatchArrayPropertiesOutputWithContext(context.Context) RuleBatchArrayPropertiesOutput
}

type RuleBatchArrayPropertiesArgs struct {
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (RuleBatchArrayPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleBatchArrayProperties)(nil)).Elem()
}

func (i RuleBatchArrayPropertiesArgs) ToRuleBatchArrayPropertiesOutput() RuleBatchArrayPropertiesOutput {
	return i.ToRuleBatchArrayPropertiesOutputWithContext(context.Background())
}

func (i RuleBatchArrayPropertiesArgs) ToRuleBatchArrayPropertiesOutputWithContext(ctx context.Context) RuleBatchArrayPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleBatchArrayPropertiesOutput)
}

func (i RuleBatchArrayPropertiesArgs) ToRuleBatchArrayPropertiesPtrOutput() RuleBatchArrayPropertiesPtrOutput {
	return i.ToRuleBatchArrayPropertiesPtrOutputWithContext(context.Background())
}

func (i RuleBatchArrayPropertiesArgs) ToRuleBatchArrayPropertiesPtrOutputWithContext(ctx context.Context) RuleBatchArrayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleBatchArrayPropertiesOutput).ToRuleBatchArrayPropertiesPtrOutputWithContext(ctx)
}

// RuleBatchArrayPropertiesPtrInput is an input type that accepts RuleBatchArrayPropertiesArgs, RuleBatchArrayPropertiesPtr and RuleBatchArrayPropertiesPtrOutput values.
// You can construct a concrete instance of `RuleBatchArrayPropertiesPtrInput` via:
//
//          RuleBatchArrayPropertiesArgs{...}
//
//  or:
//
//          nil
type RuleBatchArrayPropertiesPtrInput interface {
	pulumi.Input

	ToRuleBatchArrayPropertiesPtrOutput() RuleBatchArrayPropertiesPtrOutput
	ToRuleBatchArrayPropertiesPtrOutputWithContext(context.Context) RuleBatchArrayPropertiesPtrOutput
}

type ruleBatchArrayPropertiesPtrType RuleBatchArrayPropertiesArgs

func RuleBatchArrayPropertiesPtr(v *RuleBatchArrayPropertiesArgs) RuleBatchArrayPropertiesPtrInput {
	return (*ruleBatchArrayPropertiesPtrType)(v)
}

func (*ruleBatchArrayPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleBatchArrayProperties)(nil)).Elem()
}

func (i *ruleBatchArrayPropertiesPtrType) ToRuleBatchArrayPropertiesPtrOutput() RuleBatchArrayPropertiesPtrOutput {
	return i.ToRuleBatchArrayPropertiesPtrOutputWithContext(context.Background())
}

func (i *ruleBatchArrayPropertiesPtrType) ToRuleBatchArrayPropertiesPtrOutputWithContext(ctx context.Context) RuleBatchArrayPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleBatchArrayPropertiesPtrOutput)
}

type RuleBatchArrayPropertiesOutput struct{ *pulumi.OutputState }

func (RuleBatchArrayPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleBatchArrayProperties)(nil)).Elem()
}

func (o RuleBatchArrayPropertiesOutput) ToRuleBatchArrayPropertiesOutput() RuleBatchArrayPropertiesOutput {
	return o
}

func (o RuleBatchArrayPropertiesOutput) ToRuleBatchArrayPropertiesOutputWithContext(ctx context.Context) RuleBatchArrayPropertiesOutput {
	return o
}

func (o RuleBatchArrayPropertiesOutput) ToRuleBatchArrayPropertiesPtrOutput() RuleBatchArrayPropertiesPtrOutput {
	return o.ToRuleBatchArrayPropertiesPtrOutputWithContext(context.Background())
}

func (o RuleBatchArrayPropertiesOutput) ToRuleBatchArrayPropertiesPtrOutputWithContext(ctx context.Context) RuleBatchArrayPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleBatchArrayProperties) *RuleBatchArrayProperties {
		return &v
	}).(RuleBatchArrayPropertiesPtrOutput)
}

func (o RuleBatchArrayPropertiesOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleBatchArrayProperties) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type RuleBatchArrayPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RuleBatchArrayPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleBatchArrayProperties)(nil)).Elem()
}

func (o RuleBatchArrayPropertiesPtrOutput) ToRuleBatchArrayPropertiesPtrOutput() RuleBatchArrayPropertiesPtrOutput {
	return o
}

func (o RuleBatchArrayPropertiesPtrOutput) ToRuleBatchArrayPropertiesPtrOutputWithContext(ctx context.Context) RuleBatchArrayPropertiesPtrOutput {
	return o
}

func (o RuleBatchArrayPropertiesPtrOutput) Elem() RuleBatchArrayPropertiesOutput {
	return o.ApplyT(func(v *RuleBatchArrayProperties) RuleBatchArrayProperties {
		if v != nil {
			return *v
		}
		var ret RuleBatchArrayProperties
		return ret
	}).(RuleBatchArrayPropertiesOutput)
}

func (o RuleBatchArrayPropertiesPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RuleBatchArrayProperties) *int {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.IntPtrOutput)
}

type RuleBatchParameters struct {
	ArrayProperties *RuleBatchArrayProperties `pulumi:"arrayProperties"`
	JobDefinition   string                    `pulumi:"jobDefinition"`
	JobName         string                    `pulumi:"jobName"`
	RetryStrategy   *RuleBatchRetryStrategy   `pulumi:"retryStrategy"`
}

// RuleBatchParametersInput is an input type that accepts RuleBatchParametersArgs and RuleBatchParametersOutput values.
// You can construct a concrete instance of `RuleBatchParametersInput` via:
//
//          RuleBatchParametersArgs{...}
type RuleBatchParametersInput interface {
	pulumi.Input

	ToRuleBatchParametersOutput() RuleBatchParametersOutput
	ToRuleBatchParametersOutputWithContext(context.Context) RuleBatchParametersOutput
}

type RuleBatchParametersArgs struct {
	ArrayProperties RuleBatchArrayPropertiesPtrInput `pulumi:"arrayProperties"`
	JobDefinition   pulumi.StringInput               `pulumi:"jobDefinition"`
	JobName         pulumi.StringInput               `pulumi:"jobName"`
	RetryStrategy   RuleBatchRetryStrategyPtrInput   `pulumi:"retryStrategy"`
}

func (RuleBatchParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleBatchParameters)(nil)).Elem()
}

func (i RuleBatchParametersArgs) ToRuleBatchParametersOutput() RuleBatchParametersOutput {
	return i.ToRuleBatchParametersOutputWithContext(context.Background())
}

func (i RuleBatchParametersArgs) ToRuleBatchParametersOutputWithContext(ctx context.Context) RuleBatchParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleBatchParametersOutput)
}

func (i RuleBatchParametersArgs) ToRuleBatchParametersPtrOutput() RuleBatchParametersPtrOutput {
	return i.ToRuleBatchParametersPtrOutputWithContext(context.Background())
}

func (i RuleBatchParametersArgs) ToRuleBatchParametersPtrOutputWithContext(ctx context.Context) RuleBatchParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleBatchParametersOutput).ToRuleBatchParametersPtrOutputWithContext(ctx)
}

// RuleBatchParametersPtrInput is an input type that accepts RuleBatchParametersArgs, RuleBatchParametersPtr and RuleBatchParametersPtrOutput values.
// You can construct a concrete instance of `RuleBatchParametersPtrInput` via:
//
//          RuleBatchParametersArgs{...}
//
//  or:
//
//          nil
type RuleBatchParametersPtrInput interface {
	pulumi.Input

	ToRuleBatchParametersPtrOutput() RuleBatchParametersPtrOutput
	ToRuleBatchParametersPtrOutputWithContext(context.Context) RuleBatchParametersPtrOutput
}

type ruleBatchParametersPtrType RuleBatchParametersArgs

func RuleBatchParametersPtr(v *RuleBatchParametersArgs) RuleBatchParametersPtrInput {
	return (*ruleBatchParametersPtrType)(v)
}

func (*ruleBatchParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleBatchParameters)(nil)).Elem()
}

func (i *ruleBatchParametersPtrType) ToRuleBatchParametersPtrOutput() RuleBatchParametersPtrOutput {
	return i.ToRuleBatchParametersPtrOutputWithContext(context.Background())
}

func (i *ruleBatchParametersPtrType) ToRuleBatchParametersPtrOutputWithContext(ctx context.Context) RuleBatchParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleBatchParametersPtrOutput)
}

type RuleBatchParametersOutput struct{ *pulumi.OutputState }

func (RuleBatchParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleBatchParameters)(nil)).Elem()
}

func (o RuleBatchParametersOutput) ToRuleBatchParametersOutput() RuleBatchParametersOutput {
	return o
}

func (o RuleBatchParametersOutput) ToRuleBatchParametersOutputWithContext(ctx context.Context) RuleBatchParametersOutput {
	return o
}

func (o RuleBatchParametersOutput) ToRuleBatchParametersPtrOutput() RuleBatchParametersPtrOutput {
	return o.ToRuleBatchParametersPtrOutputWithContext(context.Background())
}

func (o RuleBatchParametersOutput) ToRuleBatchParametersPtrOutputWithContext(ctx context.Context) RuleBatchParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleBatchParameters) *RuleBatchParameters {
		return &v
	}).(RuleBatchParametersPtrOutput)
}

func (o RuleBatchParametersOutput) ArrayProperties() RuleBatchArrayPropertiesPtrOutput {
	return o.ApplyT(func(v RuleBatchParameters) *RuleBatchArrayProperties { return v.ArrayProperties }).(RuleBatchArrayPropertiesPtrOutput)
}

func (o RuleBatchParametersOutput) JobDefinition() pulumi.StringOutput {
	return o.ApplyT(func(v RuleBatchParameters) string { return v.JobDefinition }).(pulumi.StringOutput)
}

func (o RuleBatchParametersOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v RuleBatchParameters) string { return v.JobName }).(pulumi.StringOutput)
}

func (o RuleBatchParametersOutput) RetryStrategy() RuleBatchRetryStrategyPtrOutput {
	return o.ApplyT(func(v RuleBatchParameters) *RuleBatchRetryStrategy { return v.RetryStrategy }).(RuleBatchRetryStrategyPtrOutput)
}

type RuleBatchParametersPtrOutput struct{ *pulumi.OutputState }

func (RuleBatchParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleBatchParameters)(nil)).Elem()
}

func (o RuleBatchParametersPtrOutput) ToRuleBatchParametersPtrOutput() RuleBatchParametersPtrOutput {
	return o
}

func (o RuleBatchParametersPtrOutput) ToRuleBatchParametersPtrOutputWithContext(ctx context.Context) RuleBatchParametersPtrOutput {
	return o
}

func (o RuleBatchParametersPtrOutput) Elem() RuleBatchParametersOutput {
	return o.ApplyT(func(v *RuleBatchParameters) RuleBatchParameters {
		if v != nil {
			return *v
		}
		var ret RuleBatchParameters
		return ret
	}).(RuleBatchParametersOutput)
}

func (o RuleBatchParametersPtrOutput) ArrayProperties() RuleBatchArrayPropertiesPtrOutput {
	return o.ApplyT(func(v *RuleBatchParameters) *RuleBatchArrayProperties {
		if v == nil {
			return nil
		}
		return v.ArrayProperties
	}).(RuleBatchArrayPropertiesPtrOutput)
}

func (o RuleBatchParametersPtrOutput) JobDefinition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleBatchParameters) *string {
		if v == nil {
			return nil
		}
		return &v.JobDefinition
	}).(pulumi.StringPtrOutput)
}

func (o RuleBatchParametersPtrOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleBatchParameters) *string {
		if v == nil {
			return nil
		}
		return &v.JobName
	}).(pulumi.StringPtrOutput)
}

func (o RuleBatchParametersPtrOutput) RetryStrategy() RuleBatchRetryStrategyPtrOutput {
	return o.ApplyT(func(v *RuleBatchParameters) *RuleBatchRetryStrategy {
		if v == nil {
			return nil
		}
		return v.RetryStrategy
	}).(RuleBatchRetryStrategyPtrOutput)
}

type RuleBatchRetryStrategy struct {
	Attempts *int `pulumi:"attempts"`
}

// RuleBatchRetryStrategyInput is an input type that accepts RuleBatchRetryStrategyArgs and RuleBatchRetryStrategyOutput values.
// You can construct a concrete instance of `RuleBatchRetryStrategyInput` via:
//
//          RuleBatchRetryStrategyArgs{...}
type RuleBatchRetryStrategyInput interface {
	pulumi.Input

	ToRuleBatchRetryStrategyOutput() RuleBatchRetryStrategyOutput
	ToRuleBatchRetryStrategyOutputWithContext(context.Context) RuleBatchRetryStrategyOutput
}

type RuleBatchRetryStrategyArgs struct {
	Attempts pulumi.IntPtrInput `pulumi:"attempts"`
}

func (RuleBatchRetryStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleBatchRetryStrategy)(nil)).Elem()
}

func (i RuleBatchRetryStrategyArgs) ToRuleBatchRetryStrategyOutput() RuleBatchRetryStrategyOutput {
	return i.ToRuleBatchRetryStrategyOutputWithContext(context.Background())
}

func (i RuleBatchRetryStrategyArgs) ToRuleBatchRetryStrategyOutputWithContext(ctx context.Context) RuleBatchRetryStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleBatchRetryStrategyOutput)
}

func (i RuleBatchRetryStrategyArgs) ToRuleBatchRetryStrategyPtrOutput() RuleBatchRetryStrategyPtrOutput {
	return i.ToRuleBatchRetryStrategyPtrOutputWithContext(context.Background())
}

func (i RuleBatchRetryStrategyArgs) ToRuleBatchRetryStrategyPtrOutputWithContext(ctx context.Context) RuleBatchRetryStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleBatchRetryStrategyOutput).ToRuleBatchRetryStrategyPtrOutputWithContext(ctx)
}

// RuleBatchRetryStrategyPtrInput is an input type that accepts RuleBatchRetryStrategyArgs, RuleBatchRetryStrategyPtr and RuleBatchRetryStrategyPtrOutput values.
// You can construct a concrete instance of `RuleBatchRetryStrategyPtrInput` via:
//
//          RuleBatchRetryStrategyArgs{...}
//
//  or:
//
//          nil
type RuleBatchRetryStrategyPtrInput interface {
	pulumi.Input

	ToRuleBatchRetryStrategyPtrOutput() RuleBatchRetryStrategyPtrOutput
	ToRuleBatchRetryStrategyPtrOutputWithContext(context.Context) RuleBatchRetryStrategyPtrOutput
}

type ruleBatchRetryStrategyPtrType RuleBatchRetryStrategyArgs

func RuleBatchRetryStrategyPtr(v *RuleBatchRetryStrategyArgs) RuleBatchRetryStrategyPtrInput {
	return (*ruleBatchRetryStrategyPtrType)(v)
}

func (*ruleBatchRetryStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleBatchRetryStrategy)(nil)).Elem()
}

func (i *ruleBatchRetryStrategyPtrType) ToRuleBatchRetryStrategyPtrOutput() RuleBatchRetryStrategyPtrOutput {
	return i.ToRuleBatchRetryStrategyPtrOutputWithContext(context.Background())
}

func (i *ruleBatchRetryStrategyPtrType) ToRuleBatchRetryStrategyPtrOutputWithContext(ctx context.Context) RuleBatchRetryStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleBatchRetryStrategyPtrOutput)
}

type RuleBatchRetryStrategyOutput struct{ *pulumi.OutputState }

func (RuleBatchRetryStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleBatchRetryStrategy)(nil)).Elem()
}

func (o RuleBatchRetryStrategyOutput) ToRuleBatchRetryStrategyOutput() RuleBatchRetryStrategyOutput {
	return o
}

func (o RuleBatchRetryStrategyOutput) ToRuleBatchRetryStrategyOutputWithContext(ctx context.Context) RuleBatchRetryStrategyOutput {
	return o
}

func (o RuleBatchRetryStrategyOutput) ToRuleBatchRetryStrategyPtrOutput() RuleBatchRetryStrategyPtrOutput {
	return o.ToRuleBatchRetryStrategyPtrOutputWithContext(context.Background())
}

func (o RuleBatchRetryStrategyOutput) ToRuleBatchRetryStrategyPtrOutputWithContext(ctx context.Context) RuleBatchRetryStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleBatchRetryStrategy) *RuleBatchRetryStrategy {
		return &v
	}).(RuleBatchRetryStrategyPtrOutput)
}

func (o RuleBatchRetryStrategyOutput) Attempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleBatchRetryStrategy) *int { return v.Attempts }).(pulumi.IntPtrOutput)
}

type RuleBatchRetryStrategyPtrOutput struct{ *pulumi.OutputState }

func (RuleBatchRetryStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleBatchRetryStrategy)(nil)).Elem()
}

func (o RuleBatchRetryStrategyPtrOutput) ToRuleBatchRetryStrategyPtrOutput() RuleBatchRetryStrategyPtrOutput {
	return o
}

func (o RuleBatchRetryStrategyPtrOutput) ToRuleBatchRetryStrategyPtrOutputWithContext(ctx context.Context) RuleBatchRetryStrategyPtrOutput {
	return o
}

func (o RuleBatchRetryStrategyPtrOutput) Elem() RuleBatchRetryStrategyOutput {
	return o.ApplyT(func(v *RuleBatchRetryStrategy) RuleBatchRetryStrategy {
		if v != nil {
			return *v
		}
		var ret RuleBatchRetryStrategy
		return ret
	}).(RuleBatchRetryStrategyOutput)
}

func (o RuleBatchRetryStrategyPtrOutput) Attempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RuleBatchRetryStrategy) *int {
		if v == nil {
			return nil
		}
		return v.Attempts
	}).(pulumi.IntPtrOutput)
}

type RuleCapacityProviderStrategyItem struct {
	Base             *int   `pulumi:"base"`
	CapacityProvider string `pulumi:"capacityProvider"`
	Weight           *int   `pulumi:"weight"`
}

// RuleCapacityProviderStrategyItemInput is an input type that accepts RuleCapacityProviderStrategyItemArgs and RuleCapacityProviderStrategyItemOutput values.
// You can construct a concrete instance of `RuleCapacityProviderStrategyItemInput` via:
//
//          RuleCapacityProviderStrategyItemArgs{...}
type RuleCapacityProviderStrategyItemInput interface {
	pulumi.Input

	ToRuleCapacityProviderStrategyItemOutput() RuleCapacityProviderStrategyItemOutput
	ToRuleCapacityProviderStrategyItemOutputWithContext(context.Context) RuleCapacityProviderStrategyItemOutput
}

type RuleCapacityProviderStrategyItemArgs struct {
	Base             pulumi.IntPtrInput `pulumi:"base"`
	CapacityProvider pulumi.StringInput `pulumi:"capacityProvider"`
	Weight           pulumi.IntPtrInput `pulumi:"weight"`
}

func (RuleCapacityProviderStrategyItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleCapacityProviderStrategyItem)(nil)).Elem()
}

func (i RuleCapacityProviderStrategyItemArgs) ToRuleCapacityProviderStrategyItemOutput() RuleCapacityProviderStrategyItemOutput {
	return i.ToRuleCapacityProviderStrategyItemOutputWithContext(context.Background())
}

func (i RuleCapacityProviderStrategyItemArgs) ToRuleCapacityProviderStrategyItemOutputWithContext(ctx context.Context) RuleCapacityProviderStrategyItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleCapacityProviderStrategyItemOutput)
}

// RuleCapacityProviderStrategyItemArrayInput is an input type that accepts RuleCapacityProviderStrategyItemArray and RuleCapacityProviderStrategyItemArrayOutput values.
// You can construct a concrete instance of `RuleCapacityProviderStrategyItemArrayInput` via:
//
//          RuleCapacityProviderStrategyItemArray{ RuleCapacityProviderStrategyItemArgs{...} }
type RuleCapacityProviderStrategyItemArrayInput interface {
	pulumi.Input

	ToRuleCapacityProviderStrategyItemArrayOutput() RuleCapacityProviderStrategyItemArrayOutput
	ToRuleCapacityProviderStrategyItemArrayOutputWithContext(context.Context) RuleCapacityProviderStrategyItemArrayOutput
}

type RuleCapacityProviderStrategyItemArray []RuleCapacityProviderStrategyItemInput

func (RuleCapacityProviderStrategyItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleCapacityProviderStrategyItem)(nil)).Elem()
}

func (i RuleCapacityProviderStrategyItemArray) ToRuleCapacityProviderStrategyItemArrayOutput() RuleCapacityProviderStrategyItemArrayOutput {
	return i.ToRuleCapacityProviderStrategyItemArrayOutputWithContext(context.Background())
}

func (i RuleCapacityProviderStrategyItemArray) ToRuleCapacityProviderStrategyItemArrayOutputWithContext(ctx context.Context) RuleCapacityProviderStrategyItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleCapacityProviderStrategyItemArrayOutput)
}

type RuleCapacityProviderStrategyItemOutput struct{ *pulumi.OutputState }

func (RuleCapacityProviderStrategyItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleCapacityProviderStrategyItem)(nil)).Elem()
}

func (o RuleCapacityProviderStrategyItemOutput) ToRuleCapacityProviderStrategyItemOutput() RuleCapacityProviderStrategyItemOutput {
	return o
}

func (o RuleCapacityProviderStrategyItemOutput) ToRuleCapacityProviderStrategyItemOutputWithContext(ctx context.Context) RuleCapacityProviderStrategyItemOutput {
	return o
}

func (o RuleCapacityProviderStrategyItemOutput) Base() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleCapacityProviderStrategyItem) *int { return v.Base }).(pulumi.IntPtrOutput)
}

func (o RuleCapacityProviderStrategyItemOutput) CapacityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v RuleCapacityProviderStrategyItem) string { return v.CapacityProvider }).(pulumi.StringOutput)
}

func (o RuleCapacityProviderStrategyItemOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleCapacityProviderStrategyItem) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type RuleCapacityProviderStrategyItemArrayOutput struct{ *pulumi.OutputState }

func (RuleCapacityProviderStrategyItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleCapacityProviderStrategyItem)(nil)).Elem()
}

func (o RuleCapacityProviderStrategyItemArrayOutput) ToRuleCapacityProviderStrategyItemArrayOutput() RuleCapacityProviderStrategyItemArrayOutput {
	return o
}

func (o RuleCapacityProviderStrategyItemArrayOutput) ToRuleCapacityProviderStrategyItemArrayOutputWithContext(ctx context.Context) RuleCapacityProviderStrategyItemArrayOutput {
	return o
}

func (o RuleCapacityProviderStrategyItemArrayOutput) Index(i pulumi.IntInput) RuleCapacityProviderStrategyItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleCapacityProviderStrategyItem {
		return vs[0].([]RuleCapacityProviderStrategyItem)[vs[1].(int)]
	}).(RuleCapacityProviderStrategyItemOutput)
}

type RuleDeadLetterConfig struct {
	Arn *string `pulumi:"arn"`
}

// RuleDeadLetterConfigInput is an input type that accepts RuleDeadLetterConfigArgs and RuleDeadLetterConfigOutput values.
// You can construct a concrete instance of `RuleDeadLetterConfigInput` via:
//
//          RuleDeadLetterConfigArgs{...}
type RuleDeadLetterConfigInput interface {
	pulumi.Input

	ToRuleDeadLetterConfigOutput() RuleDeadLetterConfigOutput
	ToRuleDeadLetterConfigOutputWithContext(context.Context) RuleDeadLetterConfigOutput
}

type RuleDeadLetterConfigArgs struct {
	Arn pulumi.StringPtrInput `pulumi:"arn"`
}

func (RuleDeadLetterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleDeadLetterConfig)(nil)).Elem()
}

func (i RuleDeadLetterConfigArgs) ToRuleDeadLetterConfigOutput() RuleDeadLetterConfigOutput {
	return i.ToRuleDeadLetterConfigOutputWithContext(context.Background())
}

func (i RuleDeadLetterConfigArgs) ToRuleDeadLetterConfigOutputWithContext(ctx context.Context) RuleDeadLetterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleDeadLetterConfigOutput)
}

func (i RuleDeadLetterConfigArgs) ToRuleDeadLetterConfigPtrOutput() RuleDeadLetterConfigPtrOutput {
	return i.ToRuleDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (i RuleDeadLetterConfigArgs) ToRuleDeadLetterConfigPtrOutputWithContext(ctx context.Context) RuleDeadLetterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleDeadLetterConfigOutput).ToRuleDeadLetterConfigPtrOutputWithContext(ctx)
}

// RuleDeadLetterConfigPtrInput is an input type that accepts RuleDeadLetterConfigArgs, RuleDeadLetterConfigPtr and RuleDeadLetterConfigPtrOutput values.
// You can construct a concrete instance of `RuleDeadLetterConfigPtrInput` via:
//
//          RuleDeadLetterConfigArgs{...}
//
//  or:
//
//          nil
type RuleDeadLetterConfigPtrInput interface {
	pulumi.Input

	ToRuleDeadLetterConfigPtrOutput() RuleDeadLetterConfigPtrOutput
	ToRuleDeadLetterConfigPtrOutputWithContext(context.Context) RuleDeadLetterConfigPtrOutput
}

type ruleDeadLetterConfigPtrType RuleDeadLetterConfigArgs

func RuleDeadLetterConfigPtr(v *RuleDeadLetterConfigArgs) RuleDeadLetterConfigPtrInput {
	return (*ruleDeadLetterConfigPtrType)(v)
}

func (*ruleDeadLetterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleDeadLetterConfig)(nil)).Elem()
}

func (i *ruleDeadLetterConfigPtrType) ToRuleDeadLetterConfigPtrOutput() RuleDeadLetterConfigPtrOutput {
	return i.ToRuleDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (i *ruleDeadLetterConfigPtrType) ToRuleDeadLetterConfigPtrOutputWithContext(ctx context.Context) RuleDeadLetterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleDeadLetterConfigPtrOutput)
}

type RuleDeadLetterConfigOutput struct{ *pulumi.OutputState }

func (RuleDeadLetterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleDeadLetterConfig)(nil)).Elem()
}

func (o RuleDeadLetterConfigOutput) ToRuleDeadLetterConfigOutput() RuleDeadLetterConfigOutput {
	return o
}

func (o RuleDeadLetterConfigOutput) ToRuleDeadLetterConfigOutputWithContext(ctx context.Context) RuleDeadLetterConfigOutput {
	return o
}

func (o RuleDeadLetterConfigOutput) ToRuleDeadLetterConfigPtrOutput() RuleDeadLetterConfigPtrOutput {
	return o.ToRuleDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (o RuleDeadLetterConfigOutput) ToRuleDeadLetterConfigPtrOutputWithContext(ctx context.Context) RuleDeadLetterConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleDeadLetterConfig) *RuleDeadLetterConfig {
		return &v
	}).(RuleDeadLetterConfigPtrOutput)
}

func (o RuleDeadLetterConfigOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleDeadLetterConfig) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

type RuleDeadLetterConfigPtrOutput struct{ *pulumi.OutputState }

func (RuleDeadLetterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleDeadLetterConfig)(nil)).Elem()
}

func (o RuleDeadLetterConfigPtrOutput) ToRuleDeadLetterConfigPtrOutput() RuleDeadLetterConfigPtrOutput {
	return o
}

func (o RuleDeadLetterConfigPtrOutput) ToRuleDeadLetterConfigPtrOutputWithContext(ctx context.Context) RuleDeadLetterConfigPtrOutput {
	return o
}

func (o RuleDeadLetterConfigPtrOutput) Elem() RuleDeadLetterConfigOutput {
	return o.ApplyT(func(v *RuleDeadLetterConfig) RuleDeadLetterConfig {
		if v != nil {
			return *v
		}
		var ret RuleDeadLetterConfig
		return ret
	}).(RuleDeadLetterConfigOutput)
}

func (o RuleDeadLetterConfigPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleDeadLetterConfig) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

type RuleEcsParameters struct {
	CapacityProviderStrategy []RuleCapacityProviderStrategyItem `pulumi:"capacityProviderStrategy"`
	EnableECSManagedTags     *bool                              `pulumi:"enableECSManagedTags"`
	EnableExecuteCommand     *bool                              `pulumi:"enableExecuteCommand"`
	Group                    *string                            `pulumi:"group"`
	LaunchType               *string                            `pulumi:"launchType"`
	NetworkConfiguration     *RuleNetworkConfiguration          `pulumi:"networkConfiguration"`
	PlacementConstraints     []RulePlacementConstraint          `pulumi:"placementConstraints"`
	PlacementStrategies      []RulePlacementStrategy            `pulumi:"placementStrategies"`
	PlatformVersion          *string                            `pulumi:"platformVersion"`
	PropagateTags            *string                            `pulumi:"propagateTags"`
	ReferenceId              *string                            `pulumi:"referenceId"`
	TagList                  []RuleTag                          `pulumi:"tagList"`
	TaskCount                *int                               `pulumi:"taskCount"`
	TaskDefinitionArn        string                             `pulumi:"taskDefinitionArn"`
}

// RuleEcsParametersInput is an input type that accepts RuleEcsParametersArgs and RuleEcsParametersOutput values.
// You can construct a concrete instance of `RuleEcsParametersInput` via:
//
//          RuleEcsParametersArgs{...}
type RuleEcsParametersInput interface {
	pulumi.Input

	ToRuleEcsParametersOutput() RuleEcsParametersOutput
	ToRuleEcsParametersOutputWithContext(context.Context) RuleEcsParametersOutput
}

type RuleEcsParametersArgs struct {
	CapacityProviderStrategy RuleCapacityProviderStrategyItemArrayInput `pulumi:"capacityProviderStrategy"`
	EnableECSManagedTags     pulumi.BoolPtrInput                        `pulumi:"enableECSManagedTags"`
	EnableExecuteCommand     pulumi.BoolPtrInput                        `pulumi:"enableExecuteCommand"`
	Group                    pulumi.StringPtrInput                      `pulumi:"group"`
	LaunchType               pulumi.StringPtrInput                      `pulumi:"launchType"`
	NetworkConfiguration     RuleNetworkConfigurationPtrInput           `pulumi:"networkConfiguration"`
	PlacementConstraints     RulePlacementConstraintArrayInput          `pulumi:"placementConstraints"`
	PlacementStrategies      RulePlacementStrategyArrayInput            `pulumi:"placementStrategies"`
	PlatformVersion          pulumi.StringPtrInput                      `pulumi:"platformVersion"`
	PropagateTags            pulumi.StringPtrInput                      `pulumi:"propagateTags"`
	ReferenceId              pulumi.StringPtrInput                      `pulumi:"referenceId"`
	TagList                  RuleTagArrayInput                          `pulumi:"tagList"`
	TaskCount                pulumi.IntPtrInput                         `pulumi:"taskCount"`
	TaskDefinitionArn        pulumi.StringInput                         `pulumi:"taskDefinitionArn"`
}

func (RuleEcsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEcsParameters)(nil)).Elem()
}

func (i RuleEcsParametersArgs) ToRuleEcsParametersOutput() RuleEcsParametersOutput {
	return i.ToRuleEcsParametersOutputWithContext(context.Background())
}

func (i RuleEcsParametersArgs) ToRuleEcsParametersOutputWithContext(ctx context.Context) RuleEcsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEcsParametersOutput)
}

func (i RuleEcsParametersArgs) ToRuleEcsParametersPtrOutput() RuleEcsParametersPtrOutput {
	return i.ToRuleEcsParametersPtrOutputWithContext(context.Background())
}

func (i RuleEcsParametersArgs) ToRuleEcsParametersPtrOutputWithContext(ctx context.Context) RuleEcsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEcsParametersOutput).ToRuleEcsParametersPtrOutputWithContext(ctx)
}

// RuleEcsParametersPtrInput is an input type that accepts RuleEcsParametersArgs, RuleEcsParametersPtr and RuleEcsParametersPtrOutput values.
// You can construct a concrete instance of `RuleEcsParametersPtrInput` via:
//
//          RuleEcsParametersArgs{...}
//
//  or:
//
//          nil
type RuleEcsParametersPtrInput interface {
	pulumi.Input

	ToRuleEcsParametersPtrOutput() RuleEcsParametersPtrOutput
	ToRuleEcsParametersPtrOutputWithContext(context.Context) RuleEcsParametersPtrOutput
}

type ruleEcsParametersPtrType RuleEcsParametersArgs

func RuleEcsParametersPtr(v *RuleEcsParametersArgs) RuleEcsParametersPtrInput {
	return (*ruleEcsParametersPtrType)(v)
}

func (*ruleEcsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEcsParameters)(nil)).Elem()
}

func (i *ruleEcsParametersPtrType) ToRuleEcsParametersPtrOutput() RuleEcsParametersPtrOutput {
	return i.ToRuleEcsParametersPtrOutputWithContext(context.Background())
}

func (i *ruleEcsParametersPtrType) ToRuleEcsParametersPtrOutputWithContext(ctx context.Context) RuleEcsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEcsParametersPtrOutput)
}

type RuleEcsParametersOutput struct{ *pulumi.OutputState }

func (RuleEcsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEcsParameters)(nil)).Elem()
}

func (o RuleEcsParametersOutput) ToRuleEcsParametersOutput() RuleEcsParametersOutput {
	return o
}

func (o RuleEcsParametersOutput) ToRuleEcsParametersOutputWithContext(ctx context.Context) RuleEcsParametersOutput {
	return o
}

func (o RuleEcsParametersOutput) ToRuleEcsParametersPtrOutput() RuleEcsParametersPtrOutput {
	return o.ToRuleEcsParametersPtrOutputWithContext(context.Background())
}

func (o RuleEcsParametersOutput) ToRuleEcsParametersPtrOutputWithContext(ctx context.Context) RuleEcsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEcsParameters) *RuleEcsParameters {
		return &v
	}).(RuleEcsParametersPtrOutput)
}

func (o RuleEcsParametersOutput) CapacityProviderStrategy() RuleCapacityProviderStrategyItemArrayOutput {
	return o.ApplyT(func(v RuleEcsParameters) []RuleCapacityProviderStrategyItem { return v.CapacityProviderStrategy }).(RuleCapacityProviderStrategyItemArrayOutput)
}

func (o RuleEcsParametersOutput) EnableECSManagedTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RuleEcsParameters) *bool { return v.EnableECSManagedTags }).(pulumi.BoolPtrOutput)
}

func (o RuleEcsParametersOutput) EnableExecuteCommand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RuleEcsParameters) *bool { return v.EnableExecuteCommand }).(pulumi.BoolPtrOutput)
}

func (o RuleEcsParametersOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleEcsParameters) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o RuleEcsParametersOutput) LaunchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleEcsParameters) *string { return v.LaunchType }).(pulumi.StringPtrOutput)
}

func (o RuleEcsParametersOutput) NetworkConfiguration() RuleNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v RuleEcsParameters) *RuleNetworkConfiguration { return v.NetworkConfiguration }).(RuleNetworkConfigurationPtrOutput)
}

func (o RuleEcsParametersOutput) PlacementConstraints() RulePlacementConstraintArrayOutput {
	return o.ApplyT(func(v RuleEcsParameters) []RulePlacementConstraint { return v.PlacementConstraints }).(RulePlacementConstraintArrayOutput)
}

func (o RuleEcsParametersOutput) PlacementStrategies() RulePlacementStrategyArrayOutput {
	return o.ApplyT(func(v RuleEcsParameters) []RulePlacementStrategy { return v.PlacementStrategies }).(RulePlacementStrategyArrayOutput)
}

func (o RuleEcsParametersOutput) PlatformVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleEcsParameters) *string { return v.PlatformVersion }).(pulumi.StringPtrOutput)
}

func (o RuleEcsParametersOutput) PropagateTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleEcsParameters) *string { return v.PropagateTags }).(pulumi.StringPtrOutput)
}

func (o RuleEcsParametersOutput) ReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleEcsParameters) *string { return v.ReferenceId }).(pulumi.StringPtrOutput)
}

func (o RuleEcsParametersOutput) TagList() RuleTagArrayOutput {
	return o.ApplyT(func(v RuleEcsParameters) []RuleTag { return v.TagList }).(RuleTagArrayOutput)
}

func (o RuleEcsParametersOutput) TaskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleEcsParameters) *int { return v.TaskCount }).(pulumi.IntPtrOutput)
}

func (o RuleEcsParametersOutput) TaskDefinitionArn() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEcsParameters) string { return v.TaskDefinitionArn }).(pulumi.StringOutput)
}

type RuleEcsParametersPtrOutput struct{ *pulumi.OutputState }

func (RuleEcsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEcsParameters)(nil)).Elem()
}

func (o RuleEcsParametersPtrOutput) ToRuleEcsParametersPtrOutput() RuleEcsParametersPtrOutput {
	return o
}

func (o RuleEcsParametersPtrOutput) ToRuleEcsParametersPtrOutputWithContext(ctx context.Context) RuleEcsParametersPtrOutput {
	return o
}

func (o RuleEcsParametersPtrOutput) Elem() RuleEcsParametersOutput {
	return o.ApplyT(func(v *RuleEcsParameters) RuleEcsParameters {
		if v != nil {
			return *v
		}
		var ret RuleEcsParameters
		return ret
	}).(RuleEcsParametersOutput)
}

func (o RuleEcsParametersPtrOutput) CapacityProviderStrategy() RuleCapacityProviderStrategyItemArrayOutput {
	return o.ApplyT(func(v *RuleEcsParameters) []RuleCapacityProviderStrategyItem {
		if v == nil {
			return nil
		}
		return v.CapacityProviderStrategy
	}).(RuleCapacityProviderStrategyItemArrayOutput)
}

func (o RuleEcsParametersPtrOutput) EnableECSManagedTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RuleEcsParameters) *bool {
		if v == nil {
			return nil
		}
		return v.EnableECSManagedTags
	}).(pulumi.BoolPtrOutput)
}

func (o RuleEcsParametersPtrOutput) EnableExecuteCommand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RuleEcsParameters) *bool {
		if v == nil {
			return nil
		}
		return v.EnableExecuteCommand
	}).(pulumi.BoolPtrOutput)
}

func (o RuleEcsParametersPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEcsParameters) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

func (o RuleEcsParametersPtrOutput) LaunchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEcsParameters) *string {
		if v == nil {
			return nil
		}
		return v.LaunchType
	}).(pulumi.StringPtrOutput)
}

func (o RuleEcsParametersPtrOutput) NetworkConfiguration() RuleNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v *RuleEcsParameters) *RuleNetworkConfiguration {
		if v == nil {
			return nil
		}
		return v.NetworkConfiguration
	}).(RuleNetworkConfigurationPtrOutput)
}

func (o RuleEcsParametersPtrOutput) PlacementConstraints() RulePlacementConstraintArrayOutput {
	return o.ApplyT(func(v *RuleEcsParameters) []RulePlacementConstraint {
		if v == nil {
			return nil
		}
		return v.PlacementConstraints
	}).(RulePlacementConstraintArrayOutput)
}

func (o RuleEcsParametersPtrOutput) PlacementStrategies() RulePlacementStrategyArrayOutput {
	return o.ApplyT(func(v *RuleEcsParameters) []RulePlacementStrategy {
		if v == nil {
			return nil
		}
		return v.PlacementStrategies
	}).(RulePlacementStrategyArrayOutput)
}

func (o RuleEcsParametersPtrOutput) PlatformVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEcsParameters) *string {
		if v == nil {
			return nil
		}
		return v.PlatformVersion
	}).(pulumi.StringPtrOutput)
}

func (o RuleEcsParametersPtrOutput) PropagateTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEcsParameters) *string {
		if v == nil {
			return nil
		}
		return v.PropagateTags
	}).(pulumi.StringPtrOutput)
}

func (o RuleEcsParametersPtrOutput) ReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEcsParameters) *string {
		if v == nil {
			return nil
		}
		return v.ReferenceId
	}).(pulumi.StringPtrOutput)
}

func (o RuleEcsParametersPtrOutput) TagList() RuleTagArrayOutput {
	return o.ApplyT(func(v *RuleEcsParameters) []RuleTag {
		if v == nil {
			return nil
		}
		return v.TagList
	}).(RuleTagArrayOutput)
}

func (o RuleEcsParametersPtrOutput) TaskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RuleEcsParameters) *int {
		if v == nil {
			return nil
		}
		return v.TaskCount
	}).(pulumi.IntPtrOutput)
}

func (o RuleEcsParametersPtrOutput) TaskDefinitionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEcsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.TaskDefinitionArn
	}).(pulumi.StringPtrOutput)
}

type RuleHttpParameters struct {
	HeaderParameters      interface{} `pulumi:"headerParameters"`
	PathParameterValues   []string    `pulumi:"pathParameterValues"`
	QueryStringParameters interface{} `pulumi:"queryStringParameters"`
}

// RuleHttpParametersInput is an input type that accepts RuleHttpParametersArgs and RuleHttpParametersOutput values.
// You can construct a concrete instance of `RuleHttpParametersInput` via:
//
//          RuleHttpParametersArgs{...}
type RuleHttpParametersInput interface {
	pulumi.Input

	ToRuleHttpParametersOutput() RuleHttpParametersOutput
	ToRuleHttpParametersOutputWithContext(context.Context) RuleHttpParametersOutput
}

type RuleHttpParametersArgs struct {
	HeaderParameters      pulumi.Input            `pulumi:"headerParameters"`
	PathParameterValues   pulumi.StringArrayInput `pulumi:"pathParameterValues"`
	QueryStringParameters pulumi.Input            `pulumi:"queryStringParameters"`
}

func (RuleHttpParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleHttpParameters)(nil)).Elem()
}

func (i RuleHttpParametersArgs) ToRuleHttpParametersOutput() RuleHttpParametersOutput {
	return i.ToRuleHttpParametersOutputWithContext(context.Background())
}

func (i RuleHttpParametersArgs) ToRuleHttpParametersOutputWithContext(ctx context.Context) RuleHttpParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleHttpParametersOutput)
}

func (i RuleHttpParametersArgs) ToRuleHttpParametersPtrOutput() RuleHttpParametersPtrOutput {
	return i.ToRuleHttpParametersPtrOutputWithContext(context.Background())
}

func (i RuleHttpParametersArgs) ToRuleHttpParametersPtrOutputWithContext(ctx context.Context) RuleHttpParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleHttpParametersOutput).ToRuleHttpParametersPtrOutputWithContext(ctx)
}

// RuleHttpParametersPtrInput is an input type that accepts RuleHttpParametersArgs, RuleHttpParametersPtr and RuleHttpParametersPtrOutput values.
// You can construct a concrete instance of `RuleHttpParametersPtrInput` via:
//
//          RuleHttpParametersArgs{...}
//
//  or:
//
//          nil
type RuleHttpParametersPtrInput interface {
	pulumi.Input

	ToRuleHttpParametersPtrOutput() RuleHttpParametersPtrOutput
	ToRuleHttpParametersPtrOutputWithContext(context.Context) RuleHttpParametersPtrOutput
}

type ruleHttpParametersPtrType RuleHttpParametersArgs

func RuleHttpParametersPtr(v *RuleHttpParametersArgs) RuleHttpParametersPtrInput {
	return (*ruleHttpParametersPtrType)(v)
}

func (*ruleHttpParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleHttpParameters)(nil)).Elem()
}

func (i *ruleHttpParametersPtrType) ToRuleHttpParametersPtrOutput() RuleHttpParametersPtrOutput {
	return i.ToRuleHttpParametersPtrOutputWithContext(context.Background())
}

func (i *ruleHttpParametersPtrType) ToRuleHttpParametersPtrOutputWithContext(ctx context.Context) RuleHttpParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleHttpParametersPtrOutput)
}

type RuleHttpParametersOutput struct{ *pulumi.OutputState }

func (RuleHttpParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleHttpParameters)(nil)).Elem()
}

func (o RuleHttpParametersOutput) ToRuleHttpParametersOutput() RuleHttpParametersOutput {
	return o
}

func (o RuleHttpParametersOutput) ToRuleHttpParametersOutputWithContext(ctx context.Context) RuleHttpParametersOutput {
	return o
}

func (o RuleHttpParametersOutput) ToRuleHttpParametersPtrOutput() RuleHttpParametersPtrOutput {
	return o.ToRuleHttpParametersPtrOutputWithContext(context.Background())
}

func (o RuleHttpParametersOutput) ToRuleHttpParametersPtrOutputWithContext(ctx context.Context) RuleHttpParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleHttpParameters) *RuleHttpParameters {
		return &v
	}).(RuleHttpParametersPtrOutput)
}

func (o RuleHttpParametersOutput) HeaderParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleHttpParameters) interface{} { return v.HeaderParameters }).(pulumi.AnyOutput)
}

func (o RuleHttpParametersOutput) PathParameterValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleHttpParameters) []string { return v.PathParameterValues }).(pulumi.StringArrayOutput)
}

func (o RuleHttpParametersOutput) QueryStringParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleHttpParameters) interface{} { return v.QueryStringParameters }).(pulumi.AnyOutput)
}

type RuleHttpParametersPtrOutput struct{ *pulumi.OutputState }

func (RuleHttpParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleHttpParameters)(nil)).Elem()
}

func (o RuleHttpParametersPtrOutput) ToRuleHttpParametersPtrOutput() RuleHttpParametersPtrOutput {
	return o
}

func (o RuleHttpParametersPtrOutput) ToRuleHttpParametersPtrOutputWithContext(ctx context.Context) RuleHttpParametersPtrOutput {
	return o
}

func (o RuleHttpParametersPtrOutput) Elem() RuleHttpParametersOutput {
	return o.ApplyT(func(v *RuleHttpParameters) RuleHttpParameters {
		if v != nil {
			return *v
		}
		var ret RuleHttpParameters
		return ret
	}).(RuleHttpParametersOutput)
}

func (o RuleHttpParametersPtrOutput) HeaderParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleHttpParameters) interface{} {
		if v == nil {
			return nil
		}
		return v.HeaderParameters
	}).(pulumi.AnyOutput)
}

func (o RuleHttpParametersPtrOutput) PathParameterValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RuleHttpParameters) []string {
		if v == nil {
			return nil
		}
		return v.PathParameterValues
	}).(pulumi.StringArrayOutput)
}

func (o RuleHttpParametersPtrOutput) QueryStringParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleHttpParameters) interface{} {
		if v == nil {
			return nil
		}
		return v.QueryStringParameters
	}).(pulumi.AnyOutput)
}

type RuleInputTransformer struct {
	InputPathsMap interface{} `pulumi:"inputPathsMap"`
	InputTemplate string      `pulumi:"inputTemplate"`
}

// RuleInputTransformerInput is an input type that accepts RuleInputTransformerArgs and RuleInputTransformerOutput values.
// You can construct a concrete instance of `RuleInputTransformerInput` via:
//
//          RuleInputTransformerArgs{...}
type RuleInputTransformerInput interface {
	pulumi.Input

	ToRuleInputTransformerOutput() RuleInputTransformerOutput
	ToRuleInputTransformerOutputWithContext(context.Context) RuleInputTransformerOutput
}

type RuleInputTransformerArgs struct {
	InputPathsMap pulumi.Input       `pulumi:"inputPathsMap"`
	InputTemplate pulumi.StringInput `pulumi:"inputTemplate"`
}

func (RuleInputTransformerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleInputTransformer)(nil)).Elem()
}

func (i RuleInputTransformerArgs) ToRuleInputTransformerOutput() RuleInputTransformerOutput {
	return i.ToRuleInputTransformerOutputWithContext(context.Background())
}

func (i RuleInputTransformerArgs) ToRuleInputTransformerOutputWithContext(ctx context.Context) RuleInputTransformerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleInputTransformerOutput)
}

func (i RuleInputTransformerArgs) ToRuleInputTransformerPtrOutput() RuleInputTransformerPtrOutput {
	return i.ToRuleInputTransformerPtrOutputWithContext(context.Background())
}

func (i RuleInputTransformerArgs) ToRuleInputTransformerPtrOutputWithContext(ctx context.Context) RuleInputTransformerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleInputTransformerOutput).ToRuleInputTransformerPtrOutputWithContext(ctx)
}

// RuleInputTransformerPtrInput is an input type that accepts RuleInputTransformerArgs, RuleInputTransformerPtr and RuleInputTransformerPtrOutput values.
// You can construct a concrete instance of `RuleInputTransformerPtrInput` via:
//
//          RuleInputTransformerArgs{...}
//
//  or:
//
//          nil
type RuleInputTransformerPtrInput interface {
	pulumi.Input

	ToRuleInputTransformerPtrOutput() RuleInputTransformerPtrOutput
	ToRuleInputTransformerPtrOutputWithContext(context.Context) RuleInputTransformerPtrOutput
}

type ruleInputTransformerPtrType RuleInputTransformerArgs

func RuleInputTransformerPtr(v *RuleInputTransformerArgs) RuleInputTransformerPtrInput {
	return (*ruleInputTransformerPtrType)(v)
}

func (*ruleInputTransformerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleInputTransformer)(nil)).Elem()
}

func (i *ruleInputTransformerPtrType) ToRuleInputTransformerPtrOutput() RuleInputTransformerPtrOutput {
	return i.ToRuleInputTransformerPtrOutputWithContext(context.Background())
}

func (i *ruleInputTransformerPtrType) ToRuleInputTransformerPtrOutputWithContext(ctx context.Context) RuleInputTransformerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleInputTransformerPtrOutput)
}

type RuleInputTransformerOutput struct{ *pulumi.OutputState }

func (RuleInputTransformerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleInputTransformer)(nil)).Elem()
}

func (o RuleInputTransformerOutput) ToRuleInputTransformerOutput() RuleInputTransformerOutput {
	return o
}

func (o RuleInputTransformerOutput) ToRuleInputTransformerOutputWithContext(ctx context.Context) RuleInputTransformerOutput {
	return o
}

func (o RuleInputTransformerOutput) ToRuleInputTransformerPtrOutput() RuleInputTransformerPtrOutput {
	return o.ToRuleInputTransformerPtrOutputWithContext(context.Background())
}

func (o RuleInputTransformerOutput) ToRuleInputTransformerPtrOutputWithContext(ctx context.Context) RuleInputTransformerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleInputTransformer) *RuleInputTransformer {
		return &v
	}).(RuleInputTransformerPtrOutput)
}

func (o RuleInputTransformerOutput) InputPathsMap() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleInputTransformer) interface{} { return v.InputPathsMap }).(pulumi.AnyOutput)
}

func (o RuleInputTransformerOutput) InputTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v RuleInputTransformer) string { return v.InputTemplate }).(pulumi.StringOutput)
}

type RuleInputTransformerPtrOutput struct{ *pulumi.OutputState }

func (RuleInputTransformerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleInputTransformer)(nil)).Elem()
}

func (o RuleInputTransformerPtrOutput) ToRuleInputTransformerPtrOutput() RuleInputTransformerPtrOutput {
	return o
}

func (o RuleInputTransformerPtrOutput) ToRuleInputTransformerPtrOutputWithContext(ctx context.Context) RuleInputTransformerPtrOutput {
	return o
}

func (o RuleInputTransformerPtrOutput) Elem() RuleInputTransformerOutput {
	return o.ApplyT(func(v *RuleInputTransformer) RuleInputTransformer {
		if v != nil {
			return *v
		}
		var ret RuleInputTransformer
		return ret
	}).(RuleInputTransformerOutput)
}

func (o RuleInputTransformerPtrOutput) InputPathsMap() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleInputTransformer) interface{} {
		if v == nil {
			return nil
		}
		return v.InputPathsMap
	}).(pulumi.AnyOutput)
}

func (o RuleInputTransformerPtrOutput) InputTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleInputTransformer) *string {
		if v == nil {
			return nil
		}
		return &v.InputTemplate
	}).(pulumi.StringPtrOutput)
}

type RuleKinesisParameters struct {
	PartitionKeyPath string `pulumi:"partitionKeyPath"`
}

// RuleKinesisParametersInput is an input type that accepts RuleKinesisParametersArgs and RuleKinesisParametersOutput values.
// You can construct a concrete instance of `RuleKinesisParametersInput` via:
//
//          RuleKinesisParametersArgs{...}
type RuleKinesisParametersInput interface {
	pulumi.Input

	ToRuleKinesisParametersOutput() RuleKinesisParametersOutput
	ToRuleKinesisParametersOutputWithContext(context.Context) RuleKinesisParametersOutput
}

type RuleKinesisParametersArgs struct {
	PartitionKeyPath pulumi.StringInput `pulumi:"partitionKeyPath"`
}

func (RuleKinesisParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleKinesisParameters)(nil)).Elem()
}

func (i RuleKinesisParametersArgs) ToRuleKinesisParametersOutput() RuleKinesisParametersOutput {
	return i.ToRuleKinesisParametersOutputWithContext(context.Background())
}

func (i RuleKinesisParametersArgs) ToRuleKinesisParametersOutputWithContext(ctx context.Context) RuleKinesisParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleKinesisParametersOutput)
}

func (i RuleKinesisParametersArgs) ToRuleKinesisParametersPtrOutput() RuleKinesisParametersPtrOutput {
	return i.ToRuleKinesisParametersPtrOutputWithContext(context.Background())
}

func (i RuleKinesisParametersArgs) ToRuleKinesisParametersPtrOutputWithContext(ctx context.Context) RuleKinesisParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleKinesisParametersOutput).ToRuleKinesisParametersPtrOutputWithContext(ctx)
}

// RuleKinesisParametersPtrInput is an input type that accepts RuleKinesisParametersArgs, RuleKinesisParametersPtr and RuleKinesisParametersPtrOutput values.
// You can construct a concrete instance of `RuleKinesisParametersPtrInput` via:
//
//          RuleKinesisParametersArgs{...}
//
//  or:
//
//          nil
type RuleKinesisParametersPtrInput interface {
	pulumi.Input

	ToRuleKinesisParametersPtrOutput() RuleKinesisParametersPtrOutput
	ToRuleKinesisParametersPtrOutputWithContext(context.Context) RuleKinesisParametersPtrOutput
}

type ruleKinesisParametersPtrType RuleKinesisParametersArgs

func RuleKinesisParametersPtr(v *RuleKinesisParametersArgs) RuleKinesisParametersPtrInput {
	return (*ruleKinesisParametersPtrType)(v)
}

func (*ruleKinesisParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleKinesisParameters)(nil)).Elem()
}

func (i *ruleKinesisParametersPtrType) ToRuleKinesisParametersPtrOutput() RuleKinesisParametersPtrOutput {
	return i.ToRuleKinesisParametersPtrOutputWithContext(context.Background())
}

func (i *ruleKinesisParametersPtrType) ToRuleKinesisParametersPtrOutputWithContext(ctx context.Context) RuleKinesisParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleKinesisParametersPtrOutput)
}

type RuleKinesisParametersOutput struct{ *pulumi.OutputState }

func (RuleKinesisParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleKinesisParameters)(nil)).Elem()
}

func (o RuleKinesisParametersOutput) ToRuleKinesisParametersOutput() RuleKinesisParametersOutput {
	return o
}

func (o RuleKinesisParametersOutput) ToRuleKinesisParametersOutputWithContext(ctx context.Context) RuleKinesisParametersOutput {
	return o
}

func (o RuleKinesisParametersOutput) ToRuleKinesisParametersPtrOutput() RuleKinesisParametersPtrOutput {
	return o.ToRuleKinesisParametersPtrOutputWithContext(context.Background())
}

func (o RuleKinesisParametersOutput) ToRuleKinesisParametersPtrOutputWithContext(ctx context.Context) RuleKinesisParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleKinesisParameters) *RuleKinesisParameters {
		return &v
	}).(RuleKinesisParametersPtrOutput)
}

func (o RuleKinesisParametersOutput) PartitionKeyPath() pulumi.StringOutput {
	return o.ApplyT(func(v RuleKinesisParameters) string { return v.PartitionKeyPath }).(pulumi.StringOutput)
}

type RuleKinesisParametersPtrOutput struct{ *pulumi.OutputState }

func (RuleKinesisParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleKinesisParameters)(nil)).Elem()
}

func (o RuleKinesisParametersPtrOutput) ToRuleKinesisParametersPtrOutput() RuleKinesisParametersPtrOutput {
	return o
}

func (o RuleKinesisParametersPtrOutput) ToRuleKinesisParametersPtrOutputWithContext(ctx context.Context) RuleKinesisParametersPtrOutput {
	return o
}

func (o RuleKinesisParametersPtrOutput) Elem() RuleKinesisParametersOutput {
	return o.ApplyT(func(v *RuleKinesisParameters) RuleKinesisParameters {
		if v != nil {
			return *v
		}
		var ret RuleKinesisParameters
		return ret
	}).(RuleKinesisParametersOutput)
}

func (o RuleKinesisParametersPtrOutput) PartitionKeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleKinesisParameters) *string {
		if v == nil {
			return nil
		}
		return &v.PartitionKeyPath
	}).(pulumi.StringPtrOutput)
}

type RuleNetworkConfiguration struct {
	AwsVpcConfiguration *RuleAwsVpcConfiguration `pulumi:"awsVpcConfiguration"`
}

// RuleNetworkConfigurationInput is an input type that accepts RuleNetworkConfigurationArgs and RuleNetworkConfigurationOutput values.
// You can construct a concrete instance of `RuleNetworkConfigurationInput` via:
//
//          RuleNetworkConfigurationArgs{...}
type RuleNetworkConfigurationInput interface {
	pulumi.Input

	ToRuleNetworkConfigurationOutput() RuleNetworkConfigurationOutput
	ToRuleNetworkConfigurationOutputWithContext(context.Context) RuleNetworkConfigurationOutput
}

type RuleNetworkConfigurationArgs struct {
	AwsVpcConfiguration RuleAwsVpcConfigurationPtrInput `pulumi:"awsVpcConfiguration"`
}

func (RuleNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleNetworkConfiguration)(nil)).Elem()
}

func (i RuleNetworkConfigurationArgs) ToRuleNetworkConfigurationOutput() RuleNetworkConfigurationOutput {
	return i.ToRuleNetworkConfigurationOutputWithContext(context.Background())
}

func (i RuleNetworkConfigurationArgs) ToRuleNetworkConfigurationOutputWithContext(ctx context.Context) RuleNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleNetworkConfigurationOutput)
}

func (i RuleNetworkConfigurationArgs) ToRuleNetworkConfigurationPtrOutput() RuleNetworkConfigurationPtrOutput {
	return i.ToRuleNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i RuleNetworkConfigurationArgs) ToRuleNetworkConfigurationPtrOutputWithContext(ctx context.Context) RuleNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleNetworkConfigurationOutput).ToRuleNetworkConfigurationPtrOutputWithContext(ctx)
}

// RuleNetworkConfigurationPtrInput is an input type that accepts RuleNetworkConfigurationArgs, RuleNetworkConfigurationPtr and RuleNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `RuleNetworkConfigurationPtrInput` via:
//
//          RuleNetworkConfigurationArgs{...}
//
//  or:
//
//          nil
type RuleNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToRuleNetworkConfigurationPtrOutput() RuleNetworkConfigurationPtrOutput
	ToRuleNetworkConfigurationPtrOutputWithContext(context.Context) RuleNetworkConfigurationPtrOutput
}

type ruleNetworkConfigurationPtrType RuleNetworkConfigurationArgs

func RuleNetworkConfigurationPtr(v *RuleNetworkConfigurationArgs) RuleNetworkConfigurationPtrInput {
	return (*ruleNetworkConfigurationPtrType)(v)
}

func (*ruleNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleNetworkConfiguration)(nil)).Elem()
}

func (i *ruleNetworkConfigurationPtrType) ToRuleNetworkConfigurationPtrOutput() RuleNetworkConfigurationPtrOutput {
	return i.ToRuleNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *ruleNetworkConfigurationPtrType) ToRuleNetworkConfigurationPtrOutputWithContext(ctx context.Context) RuleNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleNetworkConfigurationPtrOutput)
}

type RuleNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (RuleNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleNetworkConfiguration)(nil)).Elem()
}

func (o RuleNetworkConfigurationOutput) ToRuleNetworkConfigurationOutput() RuleNetworkConfigurationOutput {
	return o
}

func (o RuleNetworkConfigurationOutput) ToRuleNetworkConfigurationOutputWithContext(ctx context.Context) RuleNetworkConfigurationOutput {
	return o
}

func (o RuleNetworkConfigurationOutput) ToRuleNetworkConfigurationPtrOutput() RuleNetworkConfigurationPtrOutput {
	return o.ToRuleNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o RuleNetworkConfigurationOutput) ToRuleNetworkConfigurationPtrOutputWithContext(ctx context.Context) RuleNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleNetworkConfiguration) *RuleNetworkConfiguration {
		return &v
	}).(RuleNetworkConfigurationPtrOutput)
}

func (o RuleNetworkConfigurationOutput) AwsVpcConfiguration() RuleAwsVpcConfigurationPtrOutput {
	return o.ApplyT(func(v RuleNetworkConfiguration) *RuleAwsVpcConfiguration { return v.AwsVpcConfiguration }).(RuleAwsVpcConfigurationPtrOutput)
}

type RuleNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RuleNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleNetworkConfiguration)(nil)).Elem()
}

func (o RuleNetworkConfigurationPtrOutput) ToRuleNetworkConfigurationPtrOutput() RuleNetworkConfigurationPtrOutput {
	return o
}

func (o RuleNetworkConfigurationPtrOutput) ToRuleNetworkConfigurationPtrOutputWithContext(ctx context.Context) RuleNetworkConfigurationPtrOutput {
	return o
}

func (o RuleNetworkConfigurationPtrOutput) Elem() RuleNetworkConfigurationOutput {
	return o.ApplyT(func(v *RuleNetworkConfiguration) RuleNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret RuleNetworkConfiguration
		return ret
	}).(RuleNetworkConfigurationOutput)
}

func (o RuleNetworkConfigurationPtrOutput) AwsVpcConfiguration() RuleAwsVpcConfigurationPtrOutput {
	return o.ApplyT(func(v *RuleNetworkConfiguration) *RuleAwsVpcConfiguration {
		if v == nil {
			return nil
		}
		return v.AwsVpcConfiguration
	}).(RuleAwsVpcConfigurationPtrOutput)
}

type RulePlacementConstraint struct {
	Expression *string `pulumi:"expression"`
	Type       *string `pulumi:"type"`
}

// RulePlacementConstraintInput is an input type that accepts RulePlacementConstraintArgs and RulePlacementConstraintOutput values.
// You can construct a concrete instance of `RulePlacementConstraintInput` via:
//
//          RulePlacementConstraintArgs{...}
type RulePlacementConstraintInput interface {
	pulumi.Input

	ToRulePlacementConstraintOutput() RulePlacementConstraintOutput
	ToRulePlacementConstraintOutputWithContext(context.Context) RulePlacementConstraintOutput
}

type RulePlacementConstraintArgs struct {
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	Type       pulumi.StringPtrInput `pulumi:"type"`
}

func (RulePlacementConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulePlacementConstraint)(nil)).Elem()
}

func (i RulePlacementConstraintArgs) ToRulePlacementConstraintOutput() RulePlacementConstraintOutput {
	return i.ToRulePlacementConstraintOutputWithContext(context.Background())
}

func (i RulePlacementConstraintArgs) ToRulePlacementConstraintOutputWithContext(ctx context.Context) RulePlacementConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulePlacementConstraintOutput)
}

// RulePlacementConstraintArrayInput is an input type that accepts RulePlacementConstraintArray and RulePlacementConstraintArrayOutput values.
// You can construct a concrete instance of `RulePlacementConstraintArrayInput` via:
//
//          RulePlacementConstraintArray{ RulePlacementConstraintArgs{...} }
type RulePlacementConstraintArrayInput interface {
	pulumi.Input

	ToRulePlacementConstraintArrayOutput() RulePlacementConstraintArrayOutput
	ToRulePlacementConstraintArrayOutputWithContext(context.Context) RulePlacementConstraintArrayOutput
}

type RulePlacementConstraintArray []RulePlacementConstraintInput

func (RulePlacementConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulePlacementConstraint)(nil)).Elem()
}

func (i RulePlacementConstraintArray) ToRulePlacementConstraintArrayOutput() RulePlacementConstraintArrayOutput {
	return i.ToRulePlacementConstraintArrayOutputWithContext(context.Background())
}

func (i RulePlacementConstraintArray) ToRulePlacementConstraintArrayOutputWithContext(ctx context.Context) RulePlacementConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulePlacementConstraintArrayOutput)
}

type RulePlacementConstraintOutput struct{ *pulumi.OutputState }

func (RulePlacementConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulePlacementConstraint)(nil)).Elem()
}

func (o RulePlacementConstraintOutput) ToRulePlacementConstraintOutput() RulePlacementConstraintOutput {
	return o
}

func (o RulePlacementConstraintOutput) ToRulePlacementConstraintOutputWithContext(ctx context.Context) RulePlacementConstraintOutput {
	return o
}

func (o RulePlacementConstraintOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulePlacementConstraint) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

func (o RulePlacementConstraintOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulePlacementConstraint) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RulePlacementConstraintArrayOutput struct{ *pulumi.OutputState }

func (RulePlacementConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulePlacementConstraint)(nil)).Elem()
}

func (o RulePlacementConstraintArrayOutput) ToRulePlacementConstraintArrayOutput() RulePlacementConstraintArrayOutput {
	return o
}

func (o RulePlacementConstraintArrayOutput) ToRulePlacementConstraintArrayOutputWithContext(ctx context.Context) RulePlacementConstraintArrayOutput {
	return o
}

func (o RulePlacementConstraintArrayOutput) Index(i pulumi.IntInput) RulePlacementConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulePlacementConstraint {
		return vs[0].([]RulePlacementConstraint)[vs[1].(int)]
	}).(RulePlacementConstraintOutput)
}

type RulePlacementStrategy struct {
	Field *string `pulumi:"field"`
	Type  *string `pulumi:"type"`
}

// RulePlacementStrategyInput is an input type that accepts RulePlacementStrategyArgs and RulePlacementStrategyOutput values.
// You can construct a concrete instance of `RulePlacementStrategyInput` via:
//
//          RulePlacementStrategyArgs{...}
type RulePlacementStrategyInput interface {
	pulumi.Input

	ToRulePlacementStrategyOutput() RulePlacementStrategyOutput
	ToRulePlacementStrategyOutputWithContext(context.Context) RulePlacementStrategyOutput
}

type RulePlacementStrategyArgs struct {
	Field pulumi.StringPtrInput `pulumi:"field"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
}

func (RulePlacementStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RulePlacementStrategy)(nil)).Elem()
}

func (i RulePlacementStrategyArgs) ToRulePlacementStrategyOutput() RulePlacementStrategyOutput {
	return i.ToRulePlacementStrategyOutputWithContext(context.Background())
}

func (i RulePlacementStrategyArgs) ToRulePlacementStrategyOutputWithContext(ctx context.Context) RulePlacementStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulePlacementStrategyOutput)
}

// RulePlacementStrategyArrayInput is an input type that accepts RulePlacementStrategyArray and RulePlacementStrategyArrayOutput values.
// You can construct a concrete instance of `RulePlacementStrategyArrayInput` via:
//
//          RulePlacementStrategyArray{ RulePlacementStrategyArgs{...} }
type RulePlacementStrategyArrayInput interface {
	pulumi.Input

	ToRulePlacementStrategyArrayOutput() RulePlacementStrategyArrayOutput
	ToRulePlacementStrategyArrayOutputWithContext(context.Context) RulePlacementStrategyArrayOutput
}

type RulePlacementStrategyArray []RulePlacementStrategyInput

func (RulePlacementStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulePlacementStrategy)(nil)).Elem()
}

func (i RulePlacementStrategyArray) ToRulePlacementStrategyArrayOutput() RulePlacementStrategyArrayOutput {
	return i.ToRulePlacementStrategyArrayOutputWithContext(context.Background())
}

func (i RulePlacementStrategyArray) ToRulePlacementStrategyArrayOutputWithContext(ctx context.Context) RulePlacementStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RulePlacementStrategyArrayOutput)
}

type RulePlacementStrategyOutput struct{ *pulumi.OutputState }

func (RulePlacementStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RulePlacementStrategy)(nil)).Elem()
}

func (o RulePlacementStrategyOutput) ToRulePlacementStrategyOutput() RulePlacementStrategyOutput {
	return o
}

func (o RulePlacementStrategyOutput) ToRulePlacementStrategyOutputWithContext(ctx context.Context) RulePlacementStrategyOutput {
	return o
}

func (o RulePlacementStrategyOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulePlacementStrategy) *string { return v.Field }).(pulumi.StringPtrOutput)
}

func (o RulePlacementStrategyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RulePlacementStrategy) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type RulePlacementStrategyArrayOutput struct{ *pulumi.OutputState }

func (RulePlacementStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RulePlacementStrategy)(nil)).Elem()
}

func (o RulePlacementStrategyArrayOutput) ToRulePlacementStrategyArrayOutput() RulePlacementStrategyArrayOutput {
	return o
}

func (o RulePlacementStrategyArrayOutput) ToRulePlacementStrategyArrayOutputWithContext(ctx context.Context) RulePlacementStrategyArrayOutput {
	return o
}

func (o RulePlacementStrategyArrayOutput) Index(i pulumi.IntInput) RulePlacementStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RulePlacementStrategy {
		return vs[0].([]RulePlacementStrategy)[vs[1].(int)]
	}).(RulePlacementStrategyOutput)
}

type RuleRedshiftDataParameters struct {
	Database         string  `pulumi:"database"`
	DbUser           *string `pulumi:"dbUser"`
	SecretManagerArn *string `pulumi:"secretManagerArn"`
	Sql              string  `pulumi:"sql"`
	StatementName    *string `pulumi:"statementName"`
	WithEvent        *bool   `pulumi:"withEvent"`
}

// RuleRedshiftDataParametersInput is an input type that accepts RuleRedshiftDataParametersArgs and RuleRedshiftDataParametersOutput values.
// You can construct a concrete instance of `RuleRedshiftDataParametersInput` via:
//
//          RuleRedshiftDataParametersArgs{...}
type RuleRedshiftDataParametersInput interface {
	pulumi.Input

	ToRuleRedshiftDataParametersOutput() RuleRedshiftDataParametersOutput
	ToRuleRedshiftDataParametersOutputWithContext(context.Context) RuleRedshiftDataParametersOutput
}

type RuleRedshiftDataParametersArgs struct {
	Database         pulumi.StringInput    `pulumi:"database"`
	DbUser           pulumi.StringPtrInput `pulumi:"dbUser"`
	SecretManagerArn pulumi.StringPtrInput `pulumi:"secretManagerArn"`
	Sql              pulumi.StringInput    `pulumi:"sql"`
	StatementName    pulumi.StringPtrInput `pulumi:"statementName"`
	WithEvent        pulumi.BoolPtrInput   `pulumi:"withEvent"`
}

func (RuleRedshiftDataParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleRedshiftDataParameters)(nil)).Elem()
}

func (i RuleRedshiftDataParametersArgs) ToRuleRedshiftDataParametersOutput() RuleRedshiftDataParametersOutput {
	return i.ToRuleRedshiftDataParametersOutputWithContext(context.Background())
}

func (i RuleRedshiftDataParametersArgs) ToRuleRedshiftDataParametersOutputWithContext(ctx context.Context) RuleRedshiftDataParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRedshiftDataParametersOutput)
}

func (i RuleRedshiftDataParametersArgs) ToRuleRedshiftDataParametersPtrOutput() RuleRedshiftDataParametersPtrOutput {
	return i.ToRuleRedshiftDataParametersPtrOutputWithContext(context.Background())
}

func (i RuleRedshiftDataParametersArgs) ToRuleRedshiftDataParametersPtrOutputWithContext(ctx context.Context) RuleRedshiftDataParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRedshiftDataParametersOutput).ToRuleRedshiftDataParametersPtrOutputWithContext(ctx)
}

// RuleRedshiftDataParametersPtrInput is an input type that accepts RuleRedshiftDataParametersArgs, RuleRedshiftDataParametersPtr and RuleRedshiftDataParametersPtrOutput values.
// You can construct a concrete instance of `RuleRedshiftDataParametersPtrInput` via:
//
//          RuleRedshiftDataParametersArgs{...}
//
//  or:
//
//          nil
type RuleRedshiftDataParametersPtrInput interface {
	pulumi.Input

	ToRuleRedshiftDataParametersPtrOutput() RuleRedshiftDataParametersPtrOutput
	ToRuleRedshiftDataParametersPtrOutputWithContext(context.Context) RuleRedshiftDataParametersPtrOutput
}

type ruleRedshiftDataParametersPtrType RuleRedshiftDataParametersArgs

func RuleRedshiftDataParametersPtr(v *RuleRedshiftDataParametersArgs) RuleRedshiftDataParametersPtrInput {
	return (*ruleRedshiftDataParametersPtrType)(v)
}

func (*ruleRedshiftDataParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleRedshiftDataParameters)(nil)).Elem()
}

func (i *ruleRedshiftDataParametersPtrType) ToRuleRedshiftDataParametersPtrOutput() RuleRedshiftDataParametersPtrOutput {
	return i.ToRuleRedshiftDataParametersPtrOutputWithContext(context.Background())
}

func (i *ruleRedshiftDataParametersPtrType) ToRuleRedshiftDataParametersPtrOutputWithContext(ctx context.Context) RuleRedshiftDataParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRedshiftDataParametersPtrOutput)
}

type RuleRedshiftDataParametersOutput struct{ *pulumi.OutputState }

func (RuleRedshiftDataParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleRedshiftDataParameters)(nil)).Elem()
}

func (o RuleRedshiftDataParametersOutput) ToRuleRedshiftDataParametersOutput() RuleRedshiftDataParametersOutput {
	return o
}

func (o RuleRedshiftDataParametersOutput) ToRuleRedshiftDataParametersOutputWithContext(ctx context.Context) RuleRedshiftDataParametersOutput {
	return o
}

func (o RuleRedshiftDataParametersOutput) ToRuleRedshiftDataParametersPtrOutput() RuleRedshiftDataParametersPtrOutput {
	return o.ToRuleRedshiftDataParametersPtrOutputWithContext(context.Background())
}

func (o RuleRedshiftDataParametersOutput) ToRuleRedshiftDataParametersPtrOutputWithContext(ctx context.Context) RuleRedshiftDataParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleRedshiftDataParameters) *RuleRedshiftDataParameters {
		return &v
	}).(RuleRedshiftDataParametersPtrOutput)
}

func (o RuleRedshiftDataParametersOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v RuleRedshiftDataParameters) string { return v.Database }).(pulumi.StringOutput)
}

func (o RuleRedshiftDataParametersOutput) DbUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleRedshiftDataParameters) *string { return v.DbUser }).(pulumi.StringPtrOutput)
}

func (o RuleRedshiftDataParametersOutput) SecretManagerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleRedshiftDataParameters) *string { return v.SecretManagerArn }).(pulumi.StringPtrOutput)
}

func (o RuleRedshiftDataParametersOutput) Sql() pulumi.StringOutput {
	return o.ApplyT(func(v RuleRedshiftDataParameters) string { return v.Sql }).(pulumi.StringOutput)
}

func (o RuleRedshiftDataParametersOutput) StatementName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleRedshiftDataParameters) *string { return v.StatementName }).(pulumi.StringPtrOutput)
}

func (o RuleRedshiftDataParametersOutput) WithEvent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RuleRedshiftDataParameters) *bool { return v.WithEvent }).(pulumi.BoolPtrOutput)
}

type RuleRedshiftDataParametersPtrOutput struct{ *pulumi.OutputState }

func (RuleRedshiftDataParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleRedshiftDataParameters)(nil)).Elem()
}

func (o RuleRedshiftDataParametersPtrOutput) ToRuleRedshiftDataParametersPtrOutput() RuleRedshiftDataParametersPtrOutput {
	return o
}

func (o RuleRedshiftDataParametersPtrOutput) ToRuleRedshiftDataParametersPtrOutputWithContext(ctx context.Context) RuleRedshiftDataParametersPtrOutput {
	return o
}

func (o RuleRedshiftDataParametersPtrOutput) Elem() RuleRedshiftDataParametersOutput {
	return o.ApplyT(func(v *RuleRedshiftDataParameters) RuleRedshiftDataParameters {
		if v != nil {
			return *v
		}
		var ret RuleRedshiftDataParameters
		return ret
	}).(RuleRedshiftDataParametersOutput)
}

func (o RuleRedshiftDataParametersPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleRedshiftDataParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

func (o RuleRedshiftDataParametersPtrOutput) DbUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleRedshiftDataParameters) *string {
		if v == nil {
			return nil
		}
		return v.DbUser
	}).(pulumi.StringPtrOutput)
}

func (o RuleRedshiftDataParametersPtrOutput) SecretManagerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleRedshiftDataParameters) *string {
		if v == nil {
			return nil
		}
		return v.SecretManagerArn
	}).(pulumi.StringPtrOutput)
}

func (o RuleRedshiftDataParametersPtrOutput) Sql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleRedshiftDataParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Sql
	}).(pulumi.StringPtrOutput)
}

func (o RuleRedshiftDataParametersPtrOutput) StatementName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleRedshiftDataParameters) *string {
		if v == nil {
			return nil
		}
		return v.StatementName
	}).(pulumi.StringPtrOutput)
}

func (o RuleRedshiftDataParametersPtrOutput) WithEvent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RuleRedshiftDataParameters) *bool {
		if v == nil {
			return nil
		}
		return v.WithEvent
	}).(pulumi.BoolPtrOutput)
}

type RuleRetryPolicy struct {
	MaximumEventAgeInSeconds *int `pulumi:"maximumEventAgeInSeconds"`
	MaximumRetryAttempts     *int `pulumi:"maximumRetryAttempts"`
}

// RuleRetryPolicyInput is an input type that accepts RuleRetryPolicyArgs and RuleRetryPolicyOutput values.
// You can construct a concrete instance of `RuleRetryPolicyInput` via:
//
//          RuleRetryPolicyArgs{...}
type RuleRetryPolicyInput interface {
	pulumi.Input

	ToRuleRetryPolicyOutput() RuleRetryPolicyOutput
	ToRuleRetryPolicyOutputWithContext(context.Context) RuleRetryPolicyOutput
}

type RuleRetryPolicyArgs struct {
	MaximumEventAgeInSeconds pulumi.IntPtrInput `pulumi:"maximumEventAgeInSeconds"`
	MaximumRetryAttempts     pulumi.IntPtrInput `pulumi:"maximumRetryAttempts"`
}

func (RuleRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleRetryPolicy)(nil)).Elem()
}

func (i RuleRetryPolicyArgs) ToRuleRetryPolicyOutput() RuleRetryPolicyOutput {
	return i.ToRuleRetryPolicyOutputWithContext(context.Background())
}

func (i RuleRetryPolicyArgs) ToRuleRetryPolicyOutputWithContext(ctx context.Context) RuleRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRetryPolicyOutput)
}

func (i RuleRetryPolicyArgs) ToRuleRetryPolicyPtrOutput() RuleRetryPolicyPtrOutput {
	return i.ToRuleRetryPolicyPtrOutputWithContext(context.Background())
}

func (i RuleRetryPolicyArgs) ToRuleRetryPolicyPtrOutputWithContext(ctx context.Context) RuleRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRetryPolicyOutput).ToRuleRetryPolicyPtrOutputWithContext(ctx)
}

// RuleRetryPolicyPtrInput is an input type that accepts RuleRetryPolicyArgs, RuleRetryPolicyPtr and RuleRetryPolicyPtrOutput values.
// You can construct a concrete instance of `RuleRetryPolicyPtrInput` via:
//
//          RuleRetryPolicyArgs{...}
//
//  or:
//
//          nil
type RuleRetryPolicyPtrInput interface {
	pulumi.Input

	ToRuleRetryPolicyPtrOutput() RuleRetryPolicyPtrOutput
	ToRuleRetryPolicyPtrOutputWithContext(context.Context) RuleRetryPolicyPtrOutput
}

type ruleRetryPolicyPtrType RuleRetryPolicyArgs

func RuleRetryPolicyPtr(v *RuleRetryPolicyArgs) RuleRetryPolicyPtrInput {
	return (*ruleRetryPolicyPtrType)(v)
}

func (*ruleRetryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleRetryPolicy)(nil)).Elem()
}

func (i *ruleRetryPolicyPtrType) ToRuleRetryPolicyPtrOutput() RuleRetryPolicyPtrOutput {
	return i.ToRuleRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *ruleRetryPolicyPtrType) ToRuleRetryPolicyPtrOutputWithContext(ctx context.Context) RuleRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRetryPolicyPtrOutput)
}

type RuleRetryPolicyOutput struct{ *pulumi.OutputState }

func (RuleRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleRetryPolicy)(nil)).Elem()
}

func (o RuleRetryPolicyOutput) ToRuleRetryPolicyOutput() RuleRetryPolicyOutput {
	return o
}

func (o RuleRetryPolicyOutput) ToRuleRetryPolicyOutputWithContext(ctx context.Context) RuleRetryPolicyOutput {
	return o
}

func (o RuleRetryPolicyOutput) ToRuleRetryPolicyPtrOutput() RuleRetryPolicyPtrOutput {
	return o.ToRuleRetryPolicyPtrOutputWithContext(context.Background())
}

func (o RuleRetryPolicyOutput) ToRuleRetryPolicyPtrOutputWithContext(ctx context.Context) RuleRetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleRetryPolicy) *RuleRetryPolicy {
		return &v
	}).(RuleRetryPolicyPtrOutput)
}

func (o RuleRetryPolicyOutput) MaximumEventAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleRetryPolicy) *int { return v.MaximumEventAgeInSeconds }).(pulumi.IntPtrOutput)
}

func (o RuleRetryPolicyOutput) MaximumRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RuleRetryPolicy) *int { return v.MaximumRetryAttempts }).(pulumi.IntPtrOutput)
}

type RuleRetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (RuleRetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleRetryPolicy)(nil)).Elem()
}

func (o RuleRetryPolicyPtrOutput) ToRuleRetryPolicyPtrOutput() RuleRetryPolicyPtrOutput {
	return o
}

func (o RuleRetryPolicyPtrOutput) ToRuleRetryPolicyPtrOutputWithContext(ctx context.Context) RuleRetryPolicyPtrOutput {
	return o
}

func (o RuleRetryPolicyPtrOutput) Elem() RuleRetryPolicyOutput {
	return o.ApplyT(func(v *RuleRetryPolicy) RuleRetryPolicy {
		if v != nil {
			return *v
		}
		var ret RuleRetryPolicy
		return ret
	}).(RuleRetryPolicyOutput)
}

func (o RuleRetryPolicyPtrOutput) MaximumEventAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RuleRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaximumEventAgeInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o RuleRetryPolicyPtrOutput) MaximumRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RuleRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaximumRetryAttempts
	}).(pulumi.IntPtrOutput)
}

type RuleRunCommandParameters struct {
	RunCommandTargets []RuleRunCommandTarget `pulumi:"runCommandTargets"`
}

// RuleRunCommandParametersInput is an input type that accepts RuleRunCommandParametersArgs and RuleRunCommandParametersOutput values.
// You can construct a concrete instance of `RuleRunCommandParametersInput` via:
//
//          RuleRunCommandParametersArgs{...}
type RuleRunCommandParametersInput interface {
	pulumi.Input

	ToRuleRunCommandParametersOutput() RuleRunCommandParametersOutput
	ToRuleRunCommandParametersOutputWithContext(context.Context) RuleRunCommandParametersOutput
}

type RuleRunCommandParametersArgs struct {
	RunCommandTargets RuleRunCommandTargetArrayInput `pulumi:"runCommandTargets"`
}

func (RuleRunCommandParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleRunCommandParameters)(nil)).Elem()
}

func (i RuleRunCommandParametersArgs) ToRuleRunCommandParametersOutput() RuleRunCommandParametersOutput {
	return i.ToRuleRunCommandParametersOutputWithContext(context.Background())
}

func (i RuleRunCommandParametersArgs) ToRuleRunCommandParametersOutputWithContext(ctx context.Context) RuleRunCommandParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRunCommandParametersOutput)
}

func (i RuleRunCommandParametersArgs) ToRuleRunCommandParametersPtrOutput() RuleRunCommandParametersPtrOutput {
	return i.ToRuleRunCommandParametersPtrOutputWithContext(context.Background())
}

func (i RuleRunCommandParametersArgs) ToRuleRunCommandParametersPtrOutputWithContext(ctx context.Context) RuleRunCommandParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRunCommandParametersOutput).ToRuleRunCommandParametersPtrOutputWithContext(ctx)
}

// RuleRunCommandParametersPtrInput is an input type that accepts RuleRunCommandParametersArgs, RuleRunCommandParametersPtr and RuleRunCommandParametersPtrOutput values.
// You can construct a concrete instance of `RuleRunCommandParametersPtrInput` via:
//
//          RuleRunCommandParametersArgs{...}
//
//  or:
//
//          nil
type RuleRunCommandParametersPtrInput interface {
	pulumi.Input

	ToRuleRunCommandParametersPtrOutput() RuleRunCommandParametersPtrOutput
	ToRuleRunCommandParametersPtrOutputWithContext(context.Context) RuleRunCommandParametersPtrOutput
}

type ruleRunCommandParametersPtrType RuleRunCommandParametersArgs

func RuleRunCommandParametersPtr(v *RuleRunCommandParametersArgs) RuleRunCommandParametersPtrInput {
	return (*ruleRunCommandParametersPtrType)(v)
}

func (*ruleRunCommandParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleRunCommandParameters)(nil)).Elem()
}

func (i *ruleRunCommandParametersPtrType) ToRuleRunCommandParametersPtrOutput() RuleRunCommandParametersPtrOutput {
	return i.ToRuleRunCommandParametersPtrOutputWithContext(context.Background())
}

func (i *ruleRunCommandParametersPtrType) ToRuleRunCommandParametersPtrOutputWithContext(ctx context.Context) RuleRunCommandParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRunCommandParametersPtrOutput)
}

type RuleRunCommandParametersOutput struct{ *pulumi.OutputState }

func (RuleRunCommandParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleRunCommandParameters)(nil)).Elem()
}

func (o RuleRunCommandParametersOutput) ToRuleRunCommandParametersOutput() RuleRunCommandParametersOutput {
	return o
}

func (o RuleRunCommandParametersOutput) ToRuleRunCommandParametersOutputWithContext(ctx context.Context) RuleRunCommandParametersOutput {
	return o
}

func (o RuleRunCommandParametersOutput) ToRuleRunCommandParametersPtrOutput() RuleRunCommandParametersPtrOutput {
	return o.ToRuleRunCommandParametersPtrOutputWithContext(context.Background())
}

func (o RuleRunCommandParametersOutput) ToRuleRunCommandParametersPtrOutputWithContext(ctx context.Context) RuleRunCommandParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleRunCommandParameters) *RuleRunCommandParameters {
		return &v
	}).(RuleRunCommandParametersPtrOutput)
}

func (o RuleRunCommandParametersOutput) RunCommandTargets() RuleRunCommandTargetArrayOutput {
	return o.ApplyT(func(v RuleRunCommandParameters) []RuleRunCommandTarget { return v.RunCommandTargets }).(RuleRunCommandTargetArrayOutput)
}

type RuleRunCommandParametersPtrOutput struct{ *pulumi.OutputState }

func (RuleRunCommandParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleRunCommandParameters)(nil)).Elem()
}

func (o RuleRunCommandParametersPtrOutput) ToRuleRunCommandParametersPtrOutput() RuleRunCommandParametersPtrOutput {
	return o
}

func (o RuleRunCommandParametersPtrOutput) ToRuleRunCommandParametersPtrOutputWithContext(ctx context.Context) RuleRunCommandParametersPtrOutput {
	return o
}

func (o RuleRunCommandParametersPtrOutput) Elem() RuleRunCommandParametersOutput {
	return o.ApplyT(func(v *RuleRunCommandParameters) RuleRunCommandParameters {
		if v != nil {
			return *v
		}
		var ret RuleRunCommandParameters
		return ret
	}).(RuleRunCommandParametersOutput)
}

func (o RuleRunCommandParametersPtrOutput) RunCommandTargets() RuleRunCommandTargetArrayOutput {
	return o.ApplyT(func(v *RuleRunCommandParameters) []RuleRunCommandTarget {
		if v == nil {
			return nil
		}
		return v.RunCommandTargets
	}).(RuleRunCommandTargetArrayOutput)
}

type RuleRunCommandTarget struct {
	Key    string   `pulumi:"key"`
	Values []string `pulumi:"values"`
}

// RuleRunCommandTargetInput is an input type that accepts RuleRunCommandTargetArgs and RuleRunCommandTargetOutput values.
// You can construct a concrete instance of `RuleRunCommandTargetInput` via:
//
//          RuleRunCommandTargetArgs{...}
type RuleRunCommandTargetInput interface {
	pulumi.Input

	ToRuleRunCommandTargetOutput() RuleRunCommandTargetOutput
	ToRuleRunCommandTargetOutputWithContext(context.Context) RuleRunCommandTargetOutput
}

type RuleRunCommandTargetArgs struct {
	Key    pulumi.StringInput      `pulumi:"key"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleRunCommandTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleRunCommandTarget)(nil)).Elem()
}

func (i RuleRunCommandTargetArgs) ToRuleRunCommandTargetOutput() RuleRunCommandTargetOutput {
	return i.ToRuleRunCommandTargetOutputWithContext(context.Background())
}

func (i RuleRunCommandTargetArgs) ToRuleRunCommandTargetOutputWithContext(ctx context.Context) RuleRunCommandTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRunCommandTargetOutput)
}

// RuleRunCommandTargetArrayInput is an input type that accepts RuleRunCommandTargetArray and RuleRunCommandTargetArrayOutput values.
// You can construct a concrete instance of `RuleRunCommandTargetArrayInput` via:
//
//          RuleRunCommandTargetArray{ RuleRunCommandTargetArgs{...} }
type RuleRunCommandTargetArrayInput interface {
	pulumi.Input

	ToRuleRunCommandTargetArrayOutput() RuleRunCommandTargetArrayOutput
	ToRuleRunCommandTargetArrayOutputWithContext(context.Context) RuleRunCommandTargetArrayOutput
}

type RuleRunCommandTargetArray []RuleRunCommandTargetInput

func (RuleRunCommandTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleRunCommandTarget)(nil)).Elem()
}

func (i RuleRunCommandTargetArray) ToRuleRunCommandTargetArrayOutput() RuleRunCommandTargetArrayOutput {
	return i.ToRuleRunCommandTargetArrayOutputWithContext(context.Background())
}

func (i RuleRunCommandTargetArray) ToRuleRunCommandTargetArrayOutputWithContext(ctx context.Context) RuleRunCommandTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleRunCommandTargetArrayOutput)
}

type RuleRunCommandTargetOutput struct{ *pulumi.OutputState }

func (RuleRunCommandTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleRunCommandTarget)(nil)).Elem()
}

func (o RuleRunCommandTargetOutput) ToRuleRunCommandTargetOutput() RuleRunCommandTargetOutput {
	return o
}

func (o RuleRunCommandTargetOutput) ToRuleRunCommandTargetOutputWithContext(ctx context.Context) RuleRunCommandTargetOutput {
	return o
}

func (o RuleRunCommandTargetOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RuleRunCommandTarget) string { return v.Key }).(pulumi.StringOutput)
}

func (o RuleRunCommandTargetOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleRunCommandTarget) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleRunCommandTargetArrayOutput struct{ *pulumi.OutputState }

func (RuleRunCommandTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleRunCommandTarget)(nil)).Elem()
}

func (o RuleRunCommandTargetArrayOutput) ToRuleRunCommandTargetArrayOutput() RuleRunCommandTargetArrayOutput {
	return o
}

func (o RuleRunCommandTargetArrayOutput) ToRuleRunCommandTargetArrayOutputWithContext(ctx context.Context) RuleRunCommandTargetArrayOutput {
	return o
}

func (o RuleRunCommandTargetArrayOutput) Index(i pulumi.IntInput) RuleRunCommandTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleRunCommandTarget {
		return vs[0].([]RuleRunCommandTarget)[vs[1].(int)]
	}).(RuleRunCommandTargetOutput)
}

type RuleSqsParameters struct {
	MessageGroupId string `pulumi:"messageGroupId"`
}

// RuleSqsParametersInput is an input type that accepts RuleSqsParametersArgs and RuleSqsParametersOutput values.
// You can construct a concrete instance of `RuleSqsParametersInput` via:
//
//          RuleSqsParametersArgs{...}
type RuleSqsParametersInput interface {
	pulumi.Input

	ToRuleSqsParametersOutput() RuleSqsParametersOutput
	ToRuleSqsParametersOutputWithContext(context.Context) RuleSqsParametersOutput
}

type RuleSqsParametersArgs struct {
	MessageGroupId pulumi.StringInput `pulumi:"messageGroupId"`
}

func (RuleSqsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSqsParameters)(nil)).Elem()
}

func (i RuleSqsParametersArgs) ToRuleSqsParametersOutput() RuleSqsParametersOutput {
	return i.ToRuleSqsParametersOutputWithContext(context.Background())
}

func (i RuleSqsParametersArgs) ToRuleSqsParametersOutputWithContext(ctx context.Context) RuleSqsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSqsParametersOutput)
}

func (i RuleSqsParametersArgs) ToRuleSqsParametersPtrOutput() RuleSqsParametersPtrOutput {
	return i.ToRuleSqsParametersPtrOutputWithContext(context.Background())
}

func (i RuleSqsParametersArgs) ToRuleSqsParametersPtrOutputWithContext(ctx context.Context) RuleSqsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSqsParametersOutput).ToRuleSqsParametersPtrOutputWithContext(ctx)
}

// RuleSqsParametersPtrInput is an input type that accepts RuleSqsParametersArgs, RuleSqsParametersPtr and RuleSqsParametersPtrOutput values.
// You can construct a concrete instance of `RuleSqsParametersPtrInput` via:
//
//          RuleSqsParametersArgs{...}
//
//  or:
//
//          nil
type RuleSqsParametersPtrInput interface {
	pulumi.Input

	ToRuleSqsParametersPtrOutput() RuleSqsParametersPtrOutput
	ToRuleSqsParametersPtrOutputWithContext(context.Context) RuleSqsParametersPtrOutput
}

type ruleSqsParametersPtrType RuleSqsParametersArgs

func RuleSqsParametersPtr(v *RuleSqsParametersArgs) RuleSqsParametersPtrInput {
	return (*ruleSqsParametersPtrType)(v)
}

func (*ruleSqsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSqsParameters)(nil)).Elem()
}

func (i *ruleSqsParametersPtrType) ToRuleSqsParametersPtrOutput() RuleSqsParametersPtrOutput {
	return i.ToRuleSqsParametersPtrOutputWithContext(context.Background())
}

func (i *ruleSqsParametersPtrType) ToRuleSqsParametersPtrOutputWithContext(ctx context.Context) RuleSqsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSqsParametersPtrOutput)
}

type RuleSqsParametersOutput struct{ *pulumi.OutputState }

func (RuleSqsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSqsParameters)(nil)).Elem()
}

func (o RuleSqsParametersOutput) ToRuleSqsParametersOutput() RuleSqsParametersOutput {
	return o
}

func (o RuleSqsParametersOutput) ToRuleSqsParametersOutputWithContext(ctx context.Context) RuleSqsParametersOutput {
	return o
}

func (o RuleSqsParametersOutput) ToRuleSqsParametersPtrOutput() RuleSqsParametersPtrOutput {
	return o.ToRuleSqsParametersPtrOutputWithContext(context.Background())
}

func (o RuleSqsParametersOutput) ToRuleSqsParametersPtrOutputWithContext(ctx context.Context) RuleSqsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleSqsParameters) *RuleSqsParameters {
		return &v
	}).(RuleSqsParametersPtrOutput)
}

func (o RuleSqsParametersOutput) MessageGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v RuleSqsParameters) string { return v.MessageGroupId }).(pulumi.StringOutput)
}

type RuleSqsParametersPtrOutput struct{ *pulumi.OutputState }

func (RuleSqsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSqsParameters)(nil)).Elem()
}

func (o RuleSqsParametersPtrOutput) ToRuleSqsParametersPtrOutput() RuleSqsParametersPtrOutput {
	return o
}

func (o RuleSqsParametersPtrOutput) ToRuleSqsParametersPtrOutputWithContext(ctx context.Context) RuleSqsParametersPtrOutput {
	return o
}

func (o RuleSqsParametersPtrOutput) Elem() RuleSqsParametersOutput {
	return o.ApplyT(func(v *RuleSqsParameters) RuleSqsParameters {
		if v != nil {
			return *v
		}
		var ret RuleSqsParameters
		return ret
	}).(RuleSqsParametersOutput)
}

func (o RuleSqsParametersPtrOutput) MessageGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleSqsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.MessageGroupId
	}).(pulumi.StringPtrOutput)
}

type RuleTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// RuleTagInput is an input type that accepts RuleTagArgs and RuleTagOutput values.
// You can construct a concrete instance of `RuleTagInput` via:
//
//          RuleTagArgs{...}
type RuleTagInput interface {
	pulumi.Input

	ToRuleTagOutput() RuleTagOutput
	ToRuleTagOutputWithContext(context.Context) RuleTagOutput
}

type RuleTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTag)(nil)).Elem()
}

func (i RuleTagArgs) ToRuleTagOutput() RuleTagOutput {
	return i.ToRuleTagOutputWithContext(context.Background())
}

func (i RuleTagArgs) ToRuleTagOutputWithContext(ctx context.Context) RuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleTagOutput)
}

// RuleTagArrayInput is an input type that accepts RuleTagArray and RuleTagArrayOutput values.
// You can construct a concrete instance of `RuleTagArrayInput` via:
//
//          RuleTagArray{ RuleTagArgs{...} }
type RuleTagArrayInput interface {
	pulumi.Input

	ToRuleTagArrayOutput() RuleTagArrayOutput
	ToRuleTagArrayOutputWithContext(context.Context) RuleTagArrayOutput
}

type RuleTagArray []RuleTagInput

func (RuleTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleTag)(nil)).Elem()
}

func (i RuleTagArray) ToRuleTagArrayOutput() RuleTagArrayOutput {
	return i.ToRuleTagArrayOutputWithContext(context.Background())
}

func (i RuleTagArray) ToRuleTagArrayOutputWithContext(ctx context.Context) RuleTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleTagArrayOutput)
}

type RuleTagOutput struct{ *pulumi.OutputState }

func (RuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTag)(nil)).Elem()
}

func (o RuleTagOutput) ToRuleTagOutput() RuleTagOutput {
	return o
}

func (o RuleTagOutput) ToRuleTagOutputWithContext(ctx context.Context) RuleTagOutput {
	return o
}

func (o RuleTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o RuleTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RuleTagArrayOutput struct{ *pulumi.OutputState }

func (RuleTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleTag)(nil)).Elem()
}

func (o RuleTagArrayOutput) ToRuleTagArrayOutput() RuleTagArrayOutput {
	return o
}

func (o RuleTagArrayOutput) ToRuleTagArrayOutputWithContext(ctx context.Context) RuleTagArrayOutput {
	return o
}

func (o RuleTagArrayOutput) Index(i pulumi.IntInput) RuleTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleTag {
		return vs[0].([]RuleTag)[vs[1].(int)]
	}).(RuleTagOutput)
}

type RuleTarget struct {
	Arn                    string                      `pulumi:"arn"`
	BatchParameters        *RuleBatchParameters        `pulumi:"batchParameters"`
	DeadLetterConfig       *RuleDeadLetterConfig       `pulumi:"deadLetterConfig"`
	EcsParameters          *RuleEcsParameters          `pulumi:"ecsParameters"`
	HttpParameters         *RuleHttpParameters         `pulumi:"httpParameters"`
	Id                     string                      `pulumi:"id"`
	Input                  *string                     `pulumi:"input"`
	InputPath              *string                     `pulumi:"inputPath"`
	InputTransformer       *RuleInputTransformer       `pulumi:"inputTransformer"`
	KinesisParameters      *RuleKinesisParameters      `pulumi:"kinesisParameters"`
	RedshiftDataParameters *RuleRedshiftDataParameters `pulumi:"redshiftDataParameters"`
	RetryPolicy            *RuleRetryPolicy            `pulumi:"retryPolicy"`
	RoleArn                *string                     `pulumi:"roleArn"`
	RunCommandParameters   *RuleRunCommandParameters   `pulumi:"runCommandParameters"`
	SqsParameters          *RuleSqsParameters          `pulumi:"sqsParameters"`
}

// RuleTargetInput is an input type that accepts RuleTargetArgs and RuleTargetOutput values.
// You can construct a concrete instance of `RuleTargetInput` via:
//
//          RuleTargetArgs{...}
type RuleTargetInput interface {
	pulumi.Input

	ToRuleTargetOutput() RuleTargetOutput
	ToRuleTargetOutputWithContext(context.Context) RuleTargetOutput
}

type RuleTargetArgs struct {
	Arn                    pulumi.StringInput                 `pulumi:"arn"`
	BatchParameters        RuleBatchParametersPtrInput        `pulumi:"batchParameters"`
	DeadLetterConfig       RuleDeadLetterConfigPtrInput       `pulumi:"deadLetterConfig"`
	EcsParameters          RuleEcsParametersPtrInput          `pulumi:"ecsParameters"`
	HttpParameters         RuleHttpParametersPtrInput         `pulumi:"httpParameters"`
	Id                     pulumi.StringInput                 `pulumi:"id"`
	Input                  pulumi.StringPtrInput              `pulumi:"input"`
	InputPath              pulumi.StringPtrInput              `pulumi:"inputPath"`
	InputTransformer       RuleInputTransformerPtrInput       `pulumi:"inputTransformer"`
	KinesisParameters      RuleKinesisParametersPtrInput      `pulumi:"kinesisParameters"`
	RedshiftDataParameters RuleRedshiftDataParametersPtrInput `pulumi:"redshiftDataParameters"`
	RetryPolicy            RuleRetryPolicyPtrInput            `pulumi:"retryPolicy"`
	RoleArn                pulumi.StringPtrInput              `pulumi:"roleArn"`
	RunCommandParameters   RuleRunCommandParametersPtrInput   `pulumi:"runCommandParameters"`
	SqsParameters          RuleSqsParametersPtrInput          `pulumi:"sqsParameters"`
}

func (RuleTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTarget)(nil)).Elem()
}

func (i RuleTargetArgs) ToRuleTargetOutput() RuleTargetOutput {
	return i.ToRuleTargetOutputWithContext(context.Background())
}

func (i RuleTargetArgs) ToRuleTargetOutputWithContext(ctx context.Context) RuleTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleTargetOutput)
}

// RuleTargetArrayInput is an input type that accepts RuleTargetArray and RuleTargetArrayOutput values.
// You can construct a concrete instance of `RuleTargetArrayInput` via:
//
//          RuleTargetArray{ RuleTargetArgs{...} }
type RuleTargetArrayInput interface {
	pulumi.Input

	ToRuleTargetArrayOutput() RuleTargetArrayOutput
	ToRuleTargetArrayOutputWithContext(context.Context) RuleTargetArrayOutput
}

type RuleTargetArray []RuleTargetInput

func (RuleTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleTarget)(nil)).Elem()
}

func (i RuleTargetArray) ToRuleTargetArrayOutput() RuleTargetArrayOutput {
	return i.ToRuleTargetArrayOutputWithContext(context.Background())
}

func (i RuleTargetArray) ToRuleTargetArrayOutputWithContext(ctx context.Context) RuleTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleTargetArrayOutput)
}

type RuleTargetOutput struct{ *pulumi.OutputState }

func (RuleTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleTarget)(nil)).Elem()
}

func (o RuleTargetOutput) ToRuleTargetOutput() RuleTargetOutput {
	return o
}

func (o RuleTargetOutput) ToRuleTargetOutputWithContext(ctx context.Context) RuleTargetOutput {
	return o
}

func (o RuleTargetOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v RuleTarget) string { return v.Arn }).(pulumi.StringOutput)
}

func (o RuleTargetOutput) BatchParameters() RuleBatchParametersPtrOutput {
	return o.ApplyT(func(v RuleTarget) *RuleBatchParameters { return v.BatchParameters }).(RuleBatchParametersPtrOutput)
}

func (o RuleTargetOutput) DeadLetterConfig() RuleDeadLetterConfigPtrOutput {
	return o.ApplyT(func(v RuleTarget) *RuleDeadLetterConfig { return v.DeadLetterConfig }).(RuleDeadLetterConfigPtrOutput)
}

func (o RuleTargetOutput) EcsParameters() RuleEcsParametersPtrOutput {
	return o.ApplyT(func(v RuleTarget) *RuleEcsParameters { return v.EcsParameters }).(RuleEcsParametersPtrOutput)
}

func (o RuleTargetOutput) HttpParameters() RuleHttpParametersPtrOutput {
	return o.ApplyT(func(v RuleTarget) *RuleHttpParameters { return v.HttpParameters }).(RuleHttpParametersPtrOutput)
}

func (o RuleTargetOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v RuleTarget) string { return v.Id }).(pulumi.StringOutput)
}

func (o RuleTargetOutput) Input() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleTarget) *string { return v.Input }).(pulumi.StringPtrOutput)
}

func (o RuleTargetOutput) InputPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleTarget) *string { return v.InputPath }).(pulumi.StringPtrOutput)
}

func (o RuleTargetOutput) InputTransformer() RuleInputTransformerPtrOutput {
	return o.ApplyT(func(v RuleTarget) *RuleInputTransformer { return v.InputTransformer }).(RuleInputTransformerPtrOutput)
}

func (o RuleTargetOutput) KinesisParameters() RuleKinesisParametersPtrOutput {
	return o.ApplyT(func(v RuleTarget) *RuleKinesisParameters { return v.KinesisParameters }).(RuleKinesisParametersPtrOutput)
}

func (o RuleTargetOutput) RedshiftDataParameters() RuleRedshiftDataParametersPtrOutput {
	return o.ApplyT(func(v RuleTarget) *RuleRedshiftDataParameters { return v.RedshiftDataParameters }).(RuleRedshiftDataParametersPtrOutput)
}

func (o RuleTargetOutput) RetryPolicy() RuleRetryPolicyPtrOutput {
	return o.ApplyT(func(v RuleTarget) *RuleRetryPolicy { return v.RetryPolicy }).(RuleRetryPolicyPtrOutput)
}

func (o RuleTargetOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleTarget) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o RuleTargetOutput) RunCommandParameters() RuleRunCommandParametersPtrOutput {
	return o.ApplyT(func(v RuleTarget) *RuleRunCommandParameters { return v.RunCommandParameters }).(RuleRunCommandParametersPtrOutput)
}

func (o RuleTargetOutput) SqsParameters() RuleSqsParametersPtrOutput {
	return o.ApplyT(func(v RuleTarget) *RuleSqsParameters { return v.SqsParameters }).(RuleSqsParametersPtrOutput)
}

type RuleTargetArrayOutput struct{ *pulumi.OutputState }

func (RuleTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleTarget)(nil)).Elem()
}

func (o RuleTargetArrayOutput) ToRuleTargetArrayOutput() RuleTargetArrayOutput {
	return o
}

func (o RuleTargetArrayOutput) ToRuleTargetArrayOutputWithContext(ctx context.Context) RuleTargetArrayOutput {
	return o
}

func (o RuleTargetArrayOutput) Index(i pulumi.IntInput) RuleTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleTarget {
		return vs[0].([]RuleTarget)[vs[1].(int)]
	}).(RuleTargetOutput)
}

func init() {
	pulumi.RegisterOutputType(AuthParametersPropertiesOutput{})
	pulumi.RegisterOutputType(AuthParametersPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConnectionApiKeyAuthParametersOutput{})
	pulumi.RegisterOutputType(ConnectionApiKeyAuthParametersPtrOutput{})
	pulumi.RegisterOutputType(ConnectionBasicAuthParametersOutput{})
	pulumi.RegisterOutputType(ConnectionBasicAuthParametersPtrOutput{})
	pulumi.RegisterOutputType(ConnectionClientParametersOutput{})
	pulumi.RegisterOutputType(ConnectionClientParametersPtrOutput{})
	pulumi.RegisterOutputType(ConnectionHttpParametersOutput{})
	pulumi.RegisterOutputType(ConnectionHttpParametersPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOAuthParametersOutput{})
	pulumi.RegisterOutputType(ConnectionOAuthParametersPtrOutput{})
	pulumi.RegisterOutputType(ConnectionParameterOutput{})
	pulumi.RegisterOutputType(ConnectionParameterArrayOutput{})
	pulumi.RegisterOutputType(EventBusPolicyConditionOutput{})
	pulumi.RegisterOutputType(EventBusPolicyConditionPtrOutput{})
	pulumi.RegisterOutputType(RuleAwsVpcConfigurationOutput{})
	pulumi.RegisterOutputType(RuleAwsVpcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RuleBatchArrayPropertiesOutput{})
	pulumi.RegisterOutputType(RuleBatchArrayPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RuleBatchParametersOutput{})
	pulumi.RegisterOutputType(RuleBatchParametersPtrOutput{})
	pulumi.RegisterOutputType(RuleBatchRetryStrategyOutput{})
	pulumi.RegisterOutputType(RuleBatchRetryStrategyPtrOutput{})
	pulumi.RegisterOutputType(RuleCapacityProviderStrategyItemOutput{})
	pulumi.RegisterOutputType(RuleCapacityProviderStrategyItemArrayOutput{})
	pulumi.RegisterOutputType(RuleDeadLetterConfigOutput{})
	pulumi.RegisterOutputType(RuleDeadLetterConfigPtrOutput{})
	pulumi.RegisterOutputType(RuleEcsParametersOutput{})
	pulumi.RegisterOutputType(RuleEcsParametersPtrOutput{})
	pulumi.RegisterOutputType(RuleHttpParametersOutput{})
	pulumi.RegisterOutputType(RuleHttpParametersPtrOutput{})
	pulumi.RegisterOutputType(RuleInputTransformerOutput{})
	pulumi.RegisterOutputType(RuleInputTransformerPtrOutput{})
	pulumi.RegisterOutputType(RuleKinesisParametersOutput{})
	pulumi.RegisterOutputType(RuleKinesisParametersPtrOutput{})
	pulumi.RegisterOutputType(RuleNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(RuleNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RulePlacementConstraintOutput{})
	pulumi.RegisterOutputType(RulePlacementConstraintArrayOutput{})
	pulumi.RegisterOutputType(RulePlacementStrategyOutput{})
	pulumi.RegisterOutputType(RulePlacementStrategyArrayOutput{})
	pulumi.RegisterOutputType(RuleRedshiftDataParametersOutput{})
	pulumi.RegisterOutputType(RuleRedshiftDataParametersPtrOutput{})
	pulumi.RegisterOutputType(RuleRetryPolicyOutput{})
	pulumi.RegisterOutputType(RuleRetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(RuleRunCommandParametersOutput{})
	pulumi.RegisterOutputType(RuleRunCommandParametersPtrOutput{})
	pulumi.RegisterOutputType(RuleRunCommandTargetOutput{})
	pulumi.RegisterOutputType(RuleRunCommandTargetArrayOutput{})
	pulumi.RegisterOutputType(RuleSqsParametersOutput{})
	pulumi.RegisterOutputType(RuleSqsParametersPtrOutput{})
	pulumi.RegisterOutputType(RuleTagOutput{})
	pulumi.RegisterOutputType(RuleTagArrayOutput{})
	pulumi.RegisterOutputType(RuleTargetOutput{})
	pulumi.RegisterOutputType(RuleTargetArrayOutput{})
}
