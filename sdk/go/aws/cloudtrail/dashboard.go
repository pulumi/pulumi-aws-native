// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudtrail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Amazon CloudTrail dashboard resource allows customers to manage managed dashboards and create custom dashboards. You can manually refresh custom and managed dashboards. For custom dashboards, you can also set up an automatic refresh schedule and modify dashboard widgets.
type Dashboard struct {
	pulumi.CustomResourceState

	// The timestamp of the dashboard creation.
	CreatedTimestamp pulumi.StringOutput `pulumi:"createdTimestamp"`
	// The ARN of the dashboard.
	DashboardArn pulumi.StringOutput `pulumi:"dashboardArn"`
	// The name of the dashboard.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Configures the automatic refresh schedule for the dashboard. Includes the frequency unit (DAYS or HOURS) and value, as well as the status (ENABLED or DISABLED) of the refresh schedule.
	RefreshSchedule DashboardRefreshSchedulePtrOutput `pulumi:"refreshSchedule"`
	// The status of the dashboard. Values are CREATING, CREATED, UPDATING, UPDATED and DELETING.
	Status DashboardStatusOutput `pulumi:"status"`
	// A list of tags.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// Indicates whether the dashboard is protected from termination.
	TerminationProtectionEnabled pulumi.BoolPtrOutput `pulumi:"terminationProtectionEnabled"`
	// The type of the dashboard. Values are CUSTOM and MANAGED.
	Type DashboardTypeOutput `pulumi:"type"`
	// The timestamp showing when the dashboard was updated, if applicable. UpdatedTimestamp is always either the same or newer than the time shown in CreatedTimestamp.
	UpdatedTimestamp pulumi.StringOutput `pulumi:"updatedTimestamp"`
	// List of widgets on the dashboard
	Widgets DashboardWidgetArrayOutput `pulumi:"widgets"`
}

// NewDashboard registers a new resource with the given unique name, arguments, and options.
func NewDashboard(ctx *pulumi.Context,
	name string, args *DashboardArgs, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	if args == nil {
		args = &DashboardArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Dashboard
	err := ctx.RegisterResource("aws-native:cloudtrail:Dashboard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDashboard gets an existing Dashboard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDashboard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DashboardState, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	var resource Dashboard
	err := ctx.ReadResource("aws-native:cloudtrail:Dashboard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dashboard resources.
type dashboardState struct {
}

type DashboardState struct {
}

func (DashboardState) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardState)(nil)).Elem()
}

type dashboardArgs struct {
	// The name of the dashboard.
	Name *string `pulumi:"name"`
	// Configures the automatic refresh schedule for the dashboard. Includes the frequency unit (DAYS or HOURS) and value, as well as the status (ENABLED or DISABLED) of the refresh schedule.
	RefreshSchedule *DashboardRefreshSchedule `pulumi:"refreshSchedule"`
	// A list of tags.
	Tags []aws.Tag `pulumi:"tags"`
	// Indicates whether the dashboard is protected from termination.
	TerminationProtectionEnabled *bool `pulumi:"terminationProtectionEnabled"`
	// List of widgets on the dashboard
	Widgets []DashboardWidget `pulumi:"widgets"`
}

// The set of arguments for constructing a Dashboard resource.
type DashboardArgs struct {
	// The name of the dashboard.
	Name pulumi.StringPtrInput
	// Configures the automatic refresh schedule for the dashboard. Includes the frequency unit (DAYS or HOURS) and value, as well as the status (ENABLED or DISABLED) of the refresh schedule.
	RefreshSchedule DashboardRefreshSchedulePtrInput
	// A list of tags.
	Tags aws.TagArrayInput
	// Indicates whether the dashboard is protected from termination.
	TerminationProtectionEnabled pulumi.BoolPtrInput
	// List of widgets on the dashboard
	Widgets DashboardWidgetArrayInput
}

func (DashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardArgs)(nil)).Elem()
}

type DashboardInput interface {
	pulumi.Input

	ToDashboardOutput() DashboardOutput
	ToDashboardOutputWithContext(ctx context.Context) DashboardOutput
}

func (*Dashboard) ElementType() reflect.Type {
	return reflect.TypeOf((**Dashboard)(nil)).Elem()
}

func (i *Dashboard) ToDashboardOutput() DashboardOutput {
	return i.ToDashboardOutputWithContext(context.Background())
}

func (i *Dashboard) ToDashboardOutputWithContext(ctx context.Context) DashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardOutput)
}

type DashboardOutput struct{ *pulumi.OutputState }

func (DashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Dashboard)(nil)).Elem()
}

func (o DashboardOutput) ToDashboardOutput() DashboardOutput {
	return o
}

func (o DashboardOutput) ToDashboardOutputWithContext(ctx context.Context) DashboardOutput {
	return o
}

// The timestamp of the dashboard creation.
func (o DashboardOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringOutput { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

// The ARN of the dashboard.
func (o DashboardOutput) DashboardArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringOutput { return v.DashboardArn }).(pulumi.StringOutput)
}

// The name of the dashboard.
func (o DashboardOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// Configures the automatic refresh schedule for the dashboard. Includes the frequency unit (DAYS or HOURS) and value, as well as the status (ENABLED or DISABLED) of the refresh schedule.
func (o DashboardOutput) RefreshSchedule() DashboardRefreshSchedulePtrOutput {
	return o.ApplyT(func(v *Dashboard) DashboardRefreshSchedulePtrOutput { return v.RefreshSchedule }).(DashboardRefreshSchedulePtrOutput)
}

// The status of the dashboard. Values are CREATING, CREATED, UPDATING, UPDATED and DELETING.
func (o DashboardOutput) Status() DashboardStatusOutput {
	return o.ApplyT(func(v *Dashboard) DashboardStatusOutput { return v.Status }).(DashboardStatusOutput)
}

// A list of tags.
func (o DashboardOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Dashboard) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// Indicates whether the dashboard is protected from termination.
func (o DashboardOutput) TerminationProtectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.BoolPtrOutput { return v.TerminationProtectionEnabled }).(pulumi.BoolPtrOutput)
}

// The type of the dashboard. Values are CUSTOM and MANAGED.
func (o DashboardOutput) Type() DashboardTypeOutput {
	return o.ApplyT(func(v *Dashboard) DashboardTypeOutput { return v.Type }).(DashboardTypeOutput)
}

// The timestamp showing when the dashboard was updated, if applicable. UpdatedTimestamp is always either the same or newer than the time shown in CreatedTimestamp.
func (o DashboardOutput) UpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringOutput { return v.UpdatedTimestamp }).(pulumi.StringOutput)
}

// List of widgets on the dashboard
func (o DashboardOutput) Widgets() DashboardWidgetArrayOutput {
	return o.ApplyT(func(v *Dashboard) DashboardWidgetArrayOutput { return v.Widgets }).(DashboardWidgetArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardInput)(nil)).Elem(), &Dashboard{})
	pulumi.RegisterOutputType(DashboardOutput{})
}
