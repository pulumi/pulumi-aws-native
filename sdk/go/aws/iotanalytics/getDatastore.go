// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotanalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IoTAnalytics::Datastore
func LookupDatastore(ctx *pulumi.Context, args *LookupDatastoreArgs, opts ...pulumi.InvokeOption) (*LookupDatastoreResult, error) {
	var rv LookupDatastoreResult
	err := ctx.Invoke("aws-native:iotanalytics:getDatastore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDatastoreArgs struct {
	DatastoreName string `pulumi:"datastoreName"`
}

type LookupDatastoreResult struct {
	DatastorePartitions     *DatastorePartitions              `pulumi:"datastorePartitions"`
	DatastoreStorage        *DatastoreStorage                 `pulumi:"datastoreStorage"`
	FileFormatConfiguration *DatastoreFileFormatConfiguration `pulumi:"fileFormatConfiguration"`
	Id                      *string                           `pulumi:"id"`
	RetentionPeriod         *DatastoreRetentionPeriod         `pulumi:"retentionPeriod"`
	Tags                    []DatastoreTag                    `pulumi:"tags"`
}

func LookupDatastoreOutput(ctx *pulumi.Context, args LookupDatastoreOutputArgs, opts ...pulumi.InvokeOption) LookupDatastoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatastoreResult, error) {
			args := v.(LookupDatastoreArgs)
			r, err := LookupDatastore(ctx, &args, opts...)
			var s LookupDatastoreResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatastoreResultOutput)
}

type LookupDatastoreOutputArgs struct {
	DatastoreName pulumi.StringInput `pulumi:"datastoreName"`
}

func (LookupDatastoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatastoreArgs)(nil)).Elem()
}

type LookupDatastoreResultOutput struct{ *pulumi.OutputState }

func (LookupDatastoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatastoreResult)(nil)).Elem()
}

func (o LookupDatastoreResultOutput) ToLookupDatastoreResultOutput() LookupDatastoreResultOutput {
	return o
}

func (o LookupDatastoreResultOutput) ToLookupDatastoreResultOutputWithContext(ctx context.Context) LookupDatastoreResultOutput {
	return o
}

func (o LookupDatastoreResultOutput) DatastorePartitions() DatastorePartitionsPtrOutput {
	return o.ApplyT(func(v LookupDatastoreResult) *DatastorePartitions { return v.DatastorePartitions }).(DatastorePartitionsPtrOutput)
}

func (o LookupDatastoreResultOutput) DatastoreStorage() DatastoreStoragePtrOutput {
	return o.ApplyT(func(v LookupDatastoreResult) *DatastoreStorage { return v.DatastoreStorage }).(DatastoreStoragePtrOutput)
}

func (o LookupDatastoreResultOutput) FileFormatConfiguration() DatastoreFileFormatConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDatastoreResult) *DatastoreFileFormatConfiguration { return v.FileFormatConfiguration }).(DatastoreFileFormatConfigurationPtrOutput)
}

func (o LookupDatastoreResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatastoreResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupDatastoreResultOutput) RetentionPeriod() DatastoreRetentionPeriodPtrOutput {
	return o.ApplyT(func(v LookupDatastoreResult) *DatastoreRetentionPeriod { return v.RetentionPeriod }).(DatastoreRetentionPeriodPtrOutput)
}

func (o LookupDatastoreResultOutput) Tags() DatastoreTagArrayOutput {
	return o.ApplyT(func(v LookupDatastoreResult) []DatastoreTag { return v.Tags }).(DatastoreTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatastoreResultOutput{})
}
