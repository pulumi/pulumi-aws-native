// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotanalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IoTAnalytics::Datastore
func LookupDatastore(ctx *pulumi.Context, args *LookupDatastoreArgs, opts ...pulumi.InvokeOption) (*LookupDatastoreResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDatastoreResult
	err := ctx.Invoke("aws-native:iotanalytics:getDatastore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDatastoreArgs struct {
	// The name of the data store.
	DatastoreName string `pulumi:"datastoreName"`
}

type LookupDatastoreResult struct {
	// Information about the partition dimensions in a data store.
	DatastorePartitions *DatastorePartitions `pulumi:"datastorePartitions"`
	// Where data store data is stored.
	DatastoreStorage *DatastoreStorage `pulumi:"datastoreStorage"`
	// Contains the configuration information of file formats. AWS IoT Analytics data stores support JSON and [Parquet](https://docs.aws.amazon.com/https://parquet.apache.org/) .
	//
	// The default file format is JSON. You can specify only one format.
	//
	// You can't change the file format after you create the data store.
	FileFormatConfiguration *DatastoreFileFormatConfiguration `pulumi:"fileFormatConfiguration"`
	Id                      *string                           `pulumi:"id"`
	// How long, in days, message data is kept for the data store. When `customerManagedS3` storage is selected, this parameter is ignored.
	RetentionPeriod *DatastoreRetentionPeriod `pulumi:"retentionPeriod"`
	// Metadata which can be used to manage the data store.
	//
	// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDatastoreOutput(ctx *pulumi.Context, args LookupDatastoreOutputArgs, opts ...pulumi.InvokeOption) LookupDatastoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatastoreResult, error) {
			args := v.(LookupDatastoreArgs)
			r, err := LookupDatastore(ctx, &args, opts...)
			var s LookupDatastoreResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatastoreResultOutput)
}

type LookupDatastoreOutputArgs struct {
	// The name of the data store.
	DatastoreName pulumi.StringInput `pulumi:"datastoreName"`
}

func (LookupDatastoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatastoreArgs)(nil)).Elem()
}

type LookupDatastoreResultOutput struct{ *pulumi.OutputState }

func (LookupDatastoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatastoreResult)(nil)).Elem()
}

func (o LookupDatastoreResultOutput) ToLookupDatastoreResultOutput() LookupDatastoreResultOutput {
	return o
}

func (o LookupDatastoreResultOutput) ToLookupDatastoreResultOutputWithContext(ctx context.Context) LookupDatastoreResultOutput {
	return o
}

// Information about the partition dimensions in a data store.
func (o LookupDatastoreResultOutput) DatastorePartitions() DatastorePartitionsPtrOutput {
	return o.ApplyT(func(v LookupDatastoreResult) *DatastorePartitions { return v.DatastorePartitions }).(DatastorePartitionsPtrOutput)
}

// Where data store data is stored.
func (o LookupDatastoreResultOutput) DatastoreStorage() DatastoreStoragePtrOutput {
	return o.ApplyT(func(v LookupDatastoreResult) *DatastoreStorage { return v.DatastoreStorage }).(DatastoreStoragePtrOutput)
}

// Contains the configuration information of file formats. AWS IoT Analytics data stores support JSON and [Parquet](https://docs.aws.amazon.com/https://parquet.apache.org/) .
//
// The default file format is JSON. You can specify only one format.
//
// You can't change the file format after you create the data store.
func (o LookupDatastoreResultOutput) FileFormatConfiguration() DatastoreFileFormatConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDatastoreResult) *DatastoreFileFormatConfiguration { return v.FileFormatConfiguration }).(DatastoreFileFormatConfigurationPtrOutput)
}

func (o LookupDatastoreResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatastoreResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// How long, in days, message data is kept for the data store. When `customerManagedS3` storage is selected, this parameter is ignored.
func (o LookupDatastoreResultOutput) RetentionPeriod() DatastoreRetentionPeriodPtrOutput {
	return o.ApplyT(func(v LookupDatastoreResult) *DatastoreRetentionPeriod { return v.RetentionPeriod }).(DatastoreRetentionPeriodPtrOutput)
}

// Metadata which can be used to manage the data store.
//
// For more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html) .
func (o LookupDatastoreResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDatastoreResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatastoreResultOutput{})
}
