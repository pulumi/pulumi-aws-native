// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotanalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ChannelCustomerManagedS3 struct {
	// The name of the S3 bucket in which channel data is stored.
	Bucket string `pulumi:"bucket"`
	// (Optional) The prefix used to create the keys of the channel data objects. Each object in an S3 bucket has a key that is its unique identifier within the bucket (each object in a bucket has exactly one key). The prefix must end with a forward slash (/).
	KeyPrefix *string `pulumi:"keyPrefix"`
	// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 resources.
	RoleArn string `pulumi:"roleArn"`
}

// ChannelCustomerManagedS3Input is an input type that accepts ChannelCustomerManagedS3Args and ChannelCustomerManagedS3Output values.
// You can construct a concrete instance of `ChannelCustomerManagedS3Input` via:
//
//	ChannelCustomerManagedS3Args{...}
type ChannelCustomerManagedS3Input interface {
	pulumi.Input

	ToChannelCustomerManagedS3Output() ChannelCustomerManagedS3Output
	ToChannelCustomerManagedS3OutputWithContext(context.Context) ChannelCustomerManagedS3Output
}

type ChannelCustomerManagedS3Args struct {
	// The name of the S3 bucket in which channel data is stored.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// (Optional) The prefix used to create the keys of the channel data objects. Each object in an S3 bucket has a key that is its unique identifier within the bucket (each object in a bucket has exactly one key). The prefix must end with a forward slash (/).
	KeyPrefix pulumi.StringPtrInput `pulumi:"keyPrefix"`
	// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 resources.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (ChannelCustomerManagedS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCustomerManagedS3)(nil)).Elem()
}

func (i ChannelCustomerManagedS3Args) ToChannelCustomerManagedS3Output() ChannelCustomerManagedS3Output {
	return i.ToChannelCustomerManagedS3OutputWithContext(context.Background())
}

func (i ChannelCustomerManagedS3Args) ToChannelCustomerManagedS3OutputWithContext(ctx context.Context) ChannelCustomerManagedS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCustomerManagedS3Output)
}

func (i ChannelCustomerManagedS3Args) ToChannelCustomerManagedS3PtrOutput() ChannelCustomerManagedS3PtrOutput {
	return i.ToChannelCustomerManagedS3PtrOutputWithContext(context.Background())
}

func (i ChannelCustomerManagedS3Args) ToChannelCustomerManagedS3PtrOutputWithContext(ctx context.Context) ChannelCustomerManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCustomerManagedS3Output).ToChannelCustomerManagedS3PtrOutputWithContext(ctx)
}

// ChannelCustomerManagedS3PtrInput is an input type that accepts ChannelCustomerManagedS3Args, ChannelCustomerManagedS3Ptr and ChannelCustomerManagedS3PtrOutput values.
// You can construct a concrete instance of `ChannelCustomerManagedS3PtrInput` via:
//
//	        ChannelCustomerManagedS3Args{...}
//
//	or:
//
//	        nil
type ChannelCustomerManagedS3PtrInput interface {
	pulumi.Input

	ToChannelCustomerManagedS3PtrOutput() ChannelCustomerManagedS3PtrOutput
	ToChannelCustomerManagedS3PtrOutputWithContext(context.Context) ChannelCustomerManagedS3PtrOutput
}

type channelCustomerManagedS3PtrType ChannelCustomerManagedS3Args

func ChannelCustomerManagedS3Ptr(v *ChannelCustomerManagedS3Args) ChannelCustomerManagedS3PtrInput {
	return (*channelCustomerManagedS3PtrType)(v)
}

func (*channelCustomerManagedS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCustomerManagedS3)(nil)).Elem()
}

func (i *channelCustomerManagedS3PtrType) ToChannelCustomerManagedS3PtrOutput() ChannelCustomerManagedS3PtrOutput {
	return i.ToChannelCustomerManagedS3PtrOutputWithContext(context.Background())
}

func (i *channelCustomerManagedS3PtrType) ToChannelCustomerManagedS3PtrOutputWithContext(ctx context.Context) ChannelCustomerManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCustomerManagedS3PtrOutput)
}

type ChannelCustomerManagedS3Output struct{ *pulumi.OutputState }

func (ChannelCustomerManagedS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCustomerManagedS3)(nil)).Elem()
}

func (o ChannelCustomerManagedS3Output) ToChannelCustomerManagedS3Output() ChannelCustomerManagedS3Output {
	return o
}

func (o ChannelCustomerManagedS3Output) ToChannelCustomerManagedS3OutputWithContext(ctx context.Context) ChannelCustomerManagedS3Output {
	return o
}

func (o ChannelCustomerManagedS3Output) ToChannelCustomerManagedS3PtrOutput() ChannelCustomerManagedS3PtrOutput {
	return o.ToChannelCustomerManagedS3PtrOutputWithContext(context.Background())
}

func (o ChannelCustomerManagedS3Output) ToChannelCustomerManagedS3PtrOutputWithContext(ctx context.Context) ChannelCustomerManagedS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelCustomerManagedS3) *ChannelCustomerManagedS3 {
		return &v
	}).(ChannelCustomerManagedS3PtrOutput)
}

// The name of the S3 bucket in which channel data is stored.
func (o ChannelCustomerManagedS3Output) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelCustomerManagedS3) string { return v.Bucket }).(pulumi.StringOutput)
}

// (Optional) The prefix used to create the keys of the channel data objects. Each object in an S3 bucket has a key that is its unique identifier within the bucket (each object in a bucket has exactly one key). The prefix must end with a forward slash (/).
func (o ChannelCustomerManagedS3Output) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelCustomerManagedS3) *string { return v.KeyPrefix }).(pulumi.StringPtrOutput)
}

// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 resources.
func (o ChannelCustomerManagedS3Output) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelCustomerManagedS3) string { return v.RoleArn }).(pulumi.StringOutput)
}

type ChannelCustomerManagedS3PtrOutput struct{ *pulumi.OutputState }

func (ChannelCustomerManagedS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCustomerManagedS3)(nil)).Elem()
}

func (o ChannelCustomerManagedS3PtrOutput) ToChannelCustomerManagedS3PtrOutput() ChannelCustomerManagedS3PtrOutput {
	return o
}

func (o ChannelCustomerManagedS3PtrOutput) ToChannelCustomerManagedS3PtrOutputWithContext(ctx context.Context) ChannelCustomerManagedS3PtrOutput {
	return o
}

func (o ChannelCustomerManagedS3PtrOutput) Elem() ChannelCustomerManagedS3Output {
	return o.ApplyT(func(v *ChannelCustomerManagedS3) ChannelCustomerManagedS3 {
		if v != nil {
			return *v
		}
		var ret ChannelCustomerManagedS3
		return ret
	}).(ChannelCustomerManagedS3Output)
}

// The name of the S3 bucket in which channel data is stored.
func (o ChannelCustomerManagedS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelCustomerManagedS3) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// (Optional) The prefix used to create the keys of the channel data objects. Each object in an S3 bucket has a key that is its unique identifier within the bucket (each object in a bucket has exactly one key). The prefix must end with a forward slash (/).
func (o ChannelCustomerManagedS3PtrOutput) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelCustomerManagedS3) *string {
		if v == nil {
			return nil
		}
		return v.KeyPrefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 resources.
func (o ChannelCustomerManagedS3PtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelCustomerManagedS3) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type ChannelRetentionPeriod struct {
	// The number of days that message data is kept. The `unlimited` parameter must be false.
	NumberOfDays *int `pulumi:"numberOfDays"`
	// If true, message data is kept indefinitely.
	Unlimited *bool `pulumi:"unlimited"`
}

// ChannelRetentionPeriodInput is an input type that accepts ChannelRetentionPeriodArgs and ChannelRetentionPeriodOutput values.
// You can construct a concrete instance of `ChannelRetentionPeriodInput` via:
//
//	ChannelRetentionPeriodArgs{...}
type ChannelRetentionPeriodInput interface {
	pulumi.Input

	ToChannelRetentionPeriodOutput() ChannelRetentionPeriodOutput
	ToChannelRetentionPeriodOutputWithContext(context.Context) ChannelRetentionPeriodOutput
}

type ChannelRetentionPeriodArgs struct {
	// The number of days that message data is kept. The `unlimited` parameter must be false.
	NumberOfDays pulumi.IntPtrInput `pulumi:"numberOfDays"`
	// If true, message data is kept indefinitely.
	Unlimited pulumi.BoolPtrInput `pulumi:"unlimited"`
}

func (ChannelRetentionPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRetentionPeriod)(nil)).Elem()
}

func (i ChannelRetentionPeriodArgs) ToChannelRetentionPeriodOutput() ChannelRetentionPeriodOutput {
	return i.ToChannelRetentionPeriodOutputWithContext(context.Background())
}

func (i ChannelRetentionPeriodArgs) ToChannelRetentionPeriodOutputWithContext(ctx context.Context) ChannelRetentionPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRetentionPeriodOutput)
}

func (i ChannelRetentionPeriodArgs) ToChannelRetentionPeriodPtrOutput() ChannelRetentionPeriodPtrOutput {
	return i.ToChannelRetentionPeriodPtrOutputWithContext(context.Background())
}

func (i ChannelRetentionPeriodArgs) ToChannelRetentionPeriodPtrOutputWithContext(ctx context.Context) ChannelRetentionPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRetentionPeriodOutput).ToChannelRetentionPeriodPtrOutputWithContext(ctx)
}

// ChannelRetentionPeriodPtrInput is an input type that accepts ChannelRetentionPeriodArgs, ChannelRetentionPeriodPtr and ChannelRetentionPeriodPtrOutput values.
// You can construct a concrete instance of `ChannelRetentionPeriodPtrInput` via:
//
//	        ChannelRetentionPeriodArgs{...}
//
//	or:
//
//	        nil
type ChannelRetentionPeriodPtrInput interface {
	pulumi.Input

	ToChannelRetentionPeriodPtrOutput() ChannelRetentionPeriodPtrOutput
	ToChannelRetentionPeriodPtrOutputWithContext(context.Context) ChannelRetentionPeriodPtrOutput
}

type channelRetentionPeriodPtrType ChannelRetentionPeriodArgs

func ChannelRetentionPeriodPtr(v *ChannelRetentionPeriodArgs) ChannelRetentionPeriodPtrInput {
	return (*channelRetentionPeriodPtrType)(v)
}

func (*channelRetentionPeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRetentionPeriod)(nil)).Elem()
}

func (i *channelRetentionPeriodPtrType) ToChannelRetentionPeriodPtrOutput() ChannelRetentionPeriodPtrOutput {
	return i.ToChannelRetentionPeriodPtrOutputWithContext(context.Background())
}

func (i *channelRetentionPeriodPtrType) ToChannelRetentionPeriodPtrOutputWithContext(ctx context.Context) ChannelRetentionPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRetentionPeriodPtrOutput)
}

type ChannelRetentionPeriodOutput struct{ *pulumi.OutputState }

func (ChannelRetentionPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRetentionPeriod)(nil)).Elem()
}

func (o ChannelRetentionPeriodOutput) ToChannelRetentionPeriodOutput() ChannelRetentionPeriodOutput {
	return o
}

func (o ChannelRetentionPeriodOutput) ToChannelRetentionPeriodOutputWithContext(ctx context.Context) ChannelRetentionPeriodOutput {
	return o
}

func (o ChannelRetentionPeriodOutput) ToChannelRetentionPeriodPtrOutput() ChannelRetentionPeriodPtrOutput {
	return o.ToChannelRetentionPeriodPtrOutputWithContext(context.Background())
}

func (o ChannelRetentionPeriodOutput) ToChannelRetentionPeriodPtrOutputWithContext(ctx context.Context) ChannelRetentionPeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelRetentionPeriod) *ChannelRetentionPeriod {
		return &v
	}).(ChannelRetentionPeriodPtrOutput)
}

// The number of days that message data is kept. The `unlimited` parameter must be false.
func (o ChannelRetentionPeriodOutput) NumberOfDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelRetentionPeriod) *int { return v.NumberOfDays }).(pulumi.IntPtrOutput)
}

// If true, message data is kept indefinitely.
func (o ChannelRetentionPeriodOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ChannelRetentionPeriod) *bool { return v.Unlimited }).(pulumi.BoolPtrOutput)
}

type ChannelRetentionPeriodPtrOutput struct{ *pulumi.OutputState }

func (ChannelRetentionPeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRetentionPeriod)(nil)).Elem()
}

func (o ChannelRetentionPeriodPtrOutput) ToChannelRetentionPeriodPtrOutput() ChannelRetentionPeriodPtrOutput {
	return o
}

func (o ChannelRetentionPeriodPtrOutput) ToChannelRetentionPeriodPtrOutputWithContext(ctx context.Context) ChannelRetentionPeriodPtrOutput {
	return o
}

func (o ChannelRetentionPeriodPtrOutput) Elem() ChannelRetentionPeriodOutput {
	return o.ApplyT(func(v *ChannelRetentionPeriod) ChannelRetentionPeriod {
		if v != nil {
			return *v
		}
		var ret ChannelRetentionPeriod
		return ret
	}).(ChannelRetentionPeriodOutput)
}

// The number of days that message data is kept. The `unlimited` parameter must be false.
func (o ChannelRetentionPeriodPtrOutput) NumberOfDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelRetentionPeriod) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfDays
	}).(pulumi.IntPtrOutput)
}

// If true, message data is kept indefinitely.
func (o ChannelRetentionPeriodPtrOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ChannelRetentionPeriod) *bool {
		if v == nil {
			return nil
		}
		return v.Unlimited
	}).(pulumi.BoolPtrOutput)
}

type ChannelServiceManagedS3 struct {
}

// ChannelServiceManagedS3Input is an input type that accepts ChannelServiceManagedS3Args and ChannelServiceManagedS3Output values.
// You can construct a concrete instance of `ChannelServiceManagedS3Input` via:
//
//	ChannelServiceManagedS3Args{...}
type ChannelServiceManagedS3Input interface {
	pulumi.Input

	ToChannelServiceManagedS3Output() ChannelServiceManagedS3Output
	ToChannelServiceManagedS3OutputWithContext(context.Context) ChannelServiceManagedS3Output
}

type ChannelServiceManagedS3Args struct {
}

func (ChannelServiceManagedS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelServiceManagedS3)(nil)).Elem()
}

func (i ChannelServiceManagedS3Args) ToChannelServiceManagedS3Output() ChannelServiceManagedS3Output {
	return i.ToChannelServiceManagedS3OutputWithContext(context.Background())
}

func (i ChannelServiceManagedS3Args) ToChannelServiceManagedS3OutputWithContext(ctx context.Context) ChannelServiceManagedS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelServiceManagedS3Output)
}

func (i ChannelServiceManagedS3Args) ToChannelServiceManagedS3PtrOutput() ChannelServiceManagedS3PtrOutput {
	return i.ToChannelServiceManagedS3PtrOutputWithContext(context.Background())
}

func (i ChannelServiceManagedS3Args) ToChannelServiceManagedS3PtrOutputWithContext(ctx context.Context) ChannelServiceManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelServiceManagedS3Output).ToChannelServiceManagedS3PtrOutputWithContext(ctx)
}

// ChannelServiceManagedS3PtrInput is an input type that accepts ChannelServiceManagedS3Args, ChannelServiceManagedS3Ptr and ChannelServiceManagedS3PtrOutput values.
// You can construct a concrete instance of `ChannelServiceManagedS3PtrInput` via:
//
//	        ChannelServiceManagedS3Args{...}
//
//	or:
//
//	        nil
type ChannelServiceManagedS3PtrInput interface {
	pulumi.Input

	ToChannelServiceManagedS3PtrOutput() ChannelServiceManagedS3PtrOutput
	ToChannelServiceManagedS3PtrOutputWithContext(context.Context) ChannelServiceManagedS3PtrOutput
}

type channelServiceManagedS3PtrType ChannelServiceManagedS3Args

func ChannelServiceManagedS3Ptr(v *ChannelServiceManagedS3Args) ChannelServiceManagedS3PtrInput {
	return (*channelServiceManagedS3PtrType)(v)
}

func (*channelServiceManagedS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelServiceManagedS3)(nil)).Elem()
}

func (i *channelServiceManagedS3PtrType) ToChannelServiceManagedS3PtrOutput() ChannelServiceManagedS3PtrOutput {
	return i.ToChannelServiceManagedS3PtrOutputWithContext(context.Background())
}

func (i *channelServiceManagedS3PtrType) ToChannelServiceManagedS3PtrOutputWithContext(ctx context.Context) ChannelServiceManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelServiceManagedS3PtrOutput)
}

type ChannelServiceManagedS3Output struct{ *pulumi.OutputState }

func (ChannelServiceManagedS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelServiceManagedS3)(nil)).Elem()
}

func (o ChannelServiceManagedS3Output) ToChannelServiceManagedS3Output() ChannelServiceManagedS3Output {
	return o
}

func (o ChannelServiceManagedS3Output) ToChannelServiceManagedS3OutputWithContext(ctx context.Context) ChannelServiceManagedS3Output {
	return o
}

func (o ChannelServiceManagedS3Output) ToChannelServiceManagedS3PtrOutput() ChannelServiceManagedS3PtrOutput {
	return o.ToChannelServiceManagedS3PtrOutputWithContext(context.Background())
}

func (o ChannelServiceManagedS3Output) ToChannelServiceManagedS3PtrOutputWithContext(ctx context.Context) ChannelServiceManagedS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelServiceManagedS3) *ChannelServiceManagedS3 {
		return &v
	}).(ChannelServiceManagedS3PtrOutput)
}

type ChannelServiceManagedS3PtrOutput struct{ *pulumi.OutputState }

func (ChannelServiceManagedS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelServiceManagedS3)(nil)).Elem()
}

func (o ChannelServiceManagedS3PtrOutput) ToChannelServiceManagedS3PtrOutput() ChannelServiceManagedS3PtrOutput {
	return o
}

func (o ChannelServiceManagedS3PtrOutput) ToChannelServiceManagedS3PtrOutputWithContext(ctx context.Context) ChannelServiceManagedS3PtrOutput {
	return o
}

func (o ChannelServiceManagedS3PtrOutput) Elem() ChannelServiceManagedS3Output {
	return o.ApplyT(func(v *ChannelServiceManagedS3) ChannelServiceManagedS3 {
		if v != nil {
			return *v
		}
		var ret ChannelServiceManagedS3
		return ret
	}).(ChannelServiceManagedS3Output)
}

type ChannelStorage struct {
	// Used to store channel data in an S3 bucket that you manage. If customer managed storage is selected, the `retentionPeriod` parameter is ignored. You can't change the choice of S3 storage after the data store is created.
	CustomerManagedS3 *ChannelCustomerManagedS3 `pulumi:"customerManagedS3"`
	// Used to store channel data in an S3 bucket managed by AWS IoT Analytics . You can't change the choice of S3 storage after the data store is created.
	ServiceManagedS3 *ChannelServiceManagedS3 `pulumi:"serviceManagedS3"`
}

// ChannelStorageInput is an input type that accepts ChannelStorageArgs and ChannelStorageOutput values.
// You can construct a concrete instance of `ChannelStorageInput` via:
//
//	ChannelStorageArgs{...}
type ChannelStorageInput interface {
	pulumi.Input

	ToChannelStorageOutput() ChannelStorageOutput
	ToChannelStorageOutputWithContext(context.Context) ChannelStorageOutput
}

type ChannelStorageArgs struct {
	// Used to store channel data in an S3 bucket that you manage. If customer managed storage is selected, the `retentionPeriod` parameter is ignored. You can't change the choice of S3 storage after the data store is created.
	CustomerManagedS3 ChannelCustomerManagedS3PtrInput `pulumi:"customerManagedS3"`
	// Used to store channel data in an S3 bucket managed by AWS IoT Analytics . You can't change the choice of S3 storage after the data store is created.
	ServiceManagedS3 ChannelServiceManagedS3PtrInput `pulumi:"serviceManagedS3"`
}

func (ChannelStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelStorage)(nil)).Elem()
}

func (i ChannelStorageArgs) ToChannelStorageOutput() ChannelStorageOutput {
	return i.ToChannelStorageOutputWithContext(context.Background())
}

func (i ChannelStorageArgs) ToChannelStorageOutputWithContext(ctx context.Context) ChannelStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelStorageOutput)
}

func (i ChannelStorageArgs) ToChannelStoragePtrOutput() ChannelStoragePtrOutput {
	return i.ToChannelStoragePtrOutputWithContext(context.Background())
}

func (i ChannelStorageArgs) ToChannelStoragePtrOutputWithContext(ctx context.Context) ChannelStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelStorageOutput).ToChannelStoragePtrOutputWithContext(ctx)
}

// ChannelStoragePtrInput is an input type that accepts ChannelStorageArgs, ChannelStoragePtr and ChannelStoragePtrOutput values.
// You can construct a concrete instance of `ChannelStoragePtrInput` via:
//
//	        ChannelStorageArgs{...}
//
//	or:
//
//	        nil
type ChannelStoragePtrInput interface {
	pulumi.Input

	ToChannelStoragePtrOutput() ChannelStoragePtrOutput
	ToChannelStoragePtrOutputWithContext(context.Context) ChannelStoragePtrOutput
}

type channelStoragePtrType ChannelStorageArgs

func ChannelStoragePtr(v *ChannelStorageArgs) ChannelStoragePtrInput {
	return (*channelStoragePtrType)(v)
}

func (*channelStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelStorage)(nil)).Elem()
}

func (i *channelStoragePtrType) ToChannelStoragePtrOutput() ChannelStoragePtrOutput {
	return i.ToChannelStoragePtrOutputWithContext(context.Background())
}

func (i *channelStoragePtrType) ToChannelStoragePtrOutputWithContext(ctx context.Context) ChannelStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelStoragePtrOutput)
}

type ChannelStorageOutput struct{ *pulumi.OutputState }

func (ChannelStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelStorage)(nil)).Elem()
}

func (o ChannelStorageOutput) ToChannelStorageOutput() ChannelStorageOutput {
	return o
}

func (o ChannelStorageOutput) ToChannelStorageOutputWithContext(ctx context.Context) ChannelStorageOutput {
	return o
}

func (o ChannelStorageOutput) ToChannelStoragePtrOutput() ChannelStoragePtrOutput {
	return o.ToChannelStoragePtrOutputWithContext(context.Background())
}

func (o ChannelStorageOutput) ToChannelStoragePtrOutputWithContext(ctx context.Context) ChannelStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelStorage) *ChannelStorage {
		return &v
	}).(ChannelStoragePtrOutput)
}

// Used to store channel data in an S3 bucket that you manage. If customer managed storage is selected, the `retentionPeriod` parameter is ignored. You can't change the choice of S3 storage after the data store is created.
func (o ChannelStorageOutput) CustomerManagedS3() ChannelCustomerManagedS3PtrOutput {
	return o.ApplyT(func(v ChannelStorage) *ChannelCustomerManagedS3 { return v.CustomerManagedS3 }).(ChannelCustomerManagedS3PtrOutput)
}

// Used to store channel data in an S3 bucket managed by AWS IoT Analytics . You can't change the choice of S3 storage after the data store is created.
func (o ChannelStorageOutput) ServiceManagedS3() ChannelServiceManagedS3PtrOutput {
	return o.ApplyT(func(v ChannelStorage) *ChannelServiceManagedS3 { return v.ServiceManagedS3 }).(ChannelServiceManagedS3PtrOutput)
}

type ChannelStoragePtrOutput struct{ *pulumi.OutputState }

func (ChannelStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelStorage)(nil)).Elem()
}

func (o ChannelStoragePtrOutput) ToChannelStoragePtrOutput() ChannelStoragePtrOutput {
	return o
}

func (o ChannelStoragePtrOutput) ToChannelStoragePtrOutputWithContext(ctx context.Context) ChannelStoragePtrOutput {
	return o
}

func (o ChannelStoragePtrOutput) Elem() ChannelStorageOutput {
	return o.ApplyT(func(v *ChannelStorage) ChannelStorage {
		if v != nil {
			return *v
		}
		var ret ChannelStorage
		return ret
	}).(ChannelStorageOutput)
}

// Used to store channel data in an S3 bucket that you manage. If customer managed storage is selected, the `retentionPeriod` parameter is ignored. You can't change the choice of S3 storage after the data store is created.
func (o ChannelStoragePtrOutput) CustomerManagedS3() ChannelCustomerManagedS3PtrOutput {
	return o.ApplyT(func(v *ChannelStorage) *ChannelCustomerManagedS3 {
		if v == nil {
			return nil
		}
		return v.CustomerManagedS3
	}).(ChannelCustomerManagedS3PtrOutput)
}

// Used to store channel data in an S3 bucket managed by AWS IoT Analytics . You can't change the choice of S3 storage after the data store is created.
func (o ChannelStoragePtrOutput) ServiceManagedS3() ChannelServiceManagedS3PtrOutput {
	return o.ApplyT(func(v *ChannelStorage) *ChannelServiceManagedS3 {
		if v == nil {
			return nil
		}
		return v.ServiceManagedS3
	}).(ChannelServiceManagedS3PtrOutput)
}

type ChannelTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

type DatasetAction struct {
	// The name of the data set action by which data set contents are automatically created.
	ActionName string `pulumi:"actionName"`
	// Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.
	ContainerAction *DatasetContainerAction `pulumi:"containerAction"`
	// An "SqlQueryDatasetAction" object that uses an SQL query to automatically create data set contents.
	QueryAction *DatasetQueryAction `pulumi:"queryAction"`
}

// DatasetActionInput is an input type that accepts DatasetActionArgs and DatasetActionOutput values.
// You can construct a concrete instance of `DatasetActionInput` via:
//
//	DatasetActionArgs{...}
type DatasetActionInput interface {
	pulumi.Input

	ToDatasetActionOutput() DatasetActionOutput
	ToDatasetActionOutputWithContext(context.Context) DatasetActionOutput
}

type DatasetActionArgs struct {
	// The name of the data set action by which data set contents are automatically created.
	ActionName pulumi.StringInput `pulumi:"actionName"`
	// Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.
	ContainerAction DatasetContainerActionPtrInput `pulumi:"containerAction"`
	// An "SqlQueryDatasetAction" object that uses an SQL query to automatically create data set contents.
	QueryAction DatasetQueryActionPtrInput `pulumi:"queryAction"`
}

func (DatasetActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetAction)(nil)).Elem()
}

func (i DatasetActionArgs) ToDatasetActionOutput() DatasetActionOutput {
	return i.ToDatasetActionOutputWithContext(context.Background())
}

func (i DatasetActionArgs) ToDatasetActionOutputWithContext(ctx context.Context) DatasetActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetActionOutput)
}

// DatasetActionArrayInput is an input type that accepts DatasetActionArray and DatasetActionArrayOutput values.
// You can construct a concrete instance of `DatasetActionArrayInput` via:
//
//	DatasetActionArray{ DatasetActionArgs{...} }
type DatasetActionArrayInput interface {
	pulumi.Input

	ToDatasetActionArrayOutput() DatasetActionArrayOutput
	ToDatasetActionArrayOutputWithContext(context.Context) DatasetActionArrayOutput
}

type DatasetActionArray []DatasetActionInput

func (DatasetActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetAction)(nil)).Elem()
}

func (i DatasetActionArray) ToDatasetActionArrayOutput() DatasetActionArrayOutput {
	return i.ToDatasetActionArrayOutputWithContext(context.Background())
}

func (i DatasetActionArray) ToDatasetActionArrayOutputWithContext(ctx context.Context) DatasetActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetActionArrayOutput)
}

type DatasetActionOutput struct{ *pulumi.OutputState }

func (DatasetActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetAction)(nil)).Elem()
}

func (o DatasetActionOutput) ToDatasetActionOutput() DatasetActionOutput {
	return o
}

func (o DatasetActionOutput) ToDatasetActionOutputWithContext(ctx context.Context) DatasetActionOutput {
	return o
}

// The name of the data set action by which data set contents are automatically created.
func (o DatasetActionOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetAction) string { return v.ActionName }).(pulumi.StringOutput)
}

// Information which allows the system to run a containerized application in order to create the data set contents. The application must be in a Docker container along with any needed support libraries.
func (o DatasetActionOutput) ContainerAction() DatasetContainerActionPtrOutput {
	return o.ApplyT(func(v DatasetAction) *DatasetContainerAction { return v.ContainerAction }).(DatasetContainerActionPtrOutput)
}

// An "SqlQueryDatasetAction" object that uses an SQL query to automatically create data set contents.
func (o DatasetActionOutput) QueryAction() DatasetQueryActionPtrOutput {
	return o.ApplyT(func(v DatasetAction) *DatasetQueryAction { return v.QueryAction }).(DatasetQueryActionPtrOutput)
}

type DatasetActionArrayOutput struct{ *pulumi.OutputState }

func (DatasetActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetAction)(nil)).Elem()
}

func (o DatasetActionArrayOutput) ToDatasetActionArrayOutput() DatasetActionArrayOutput {
	return o
}

func (o DatasetActionArrayOutput) ToDatasetActionArrayOutputWithContext(ctx context.Context) DatasetActionArrayOutput {
	return o
}

func (o DatasetActionArrayOutput) Index(i pulumi.IntInput) DatasetActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetAction {
		return vs[0].([]DatasetAction)[vs[1].(int)]
	}).(DatasetActionOutput)
}

type DatasetContainerAction struct {
	// The ARN of the role which gives permission to the system to access needed resources in order to run the "containerAction". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.
	ExecutionRoleArn string `pulumi:"executionRoleArn"`
	// The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.
	Image string `pulumi:"image"`
	// Configuration of the resource which executes the "containerAction".
	ResourceConfiguration DatasetResourceConfiguration `pulumi:"resourceConfiguration"`
	// The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of "stringValue", "datasetContentVersionValue", or "outputFileUriValue".
	Variables []DatasetVariable `pulumi:"variables"`
}

// DatasetContainerActionInput is an input type that accepts DatasetContainerActionArgs and DatasetContainerActionOutput values.
// You can construct a concrete instance of `DatasetContainerActionInput` via:
//
//	DatasetContainerActionArgs{...}
type DatasetContainerActionInput interface {
	pulumi.Input

	ToDatasetContainerActionOutput() DatasetContainerActionOutput
	ToDatasetContainerActionOutputWithContext(context.Context) DatasetContainerActionOutput
}

type DatasetContainerActionArgs struct {
	// The ARN of the role which gives permission to the system to access needed resources in order to run the "containerAction". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.
	ExecutionRoleArn pulumi.StringInput `pulumi:"executionRoleArn"`
	// The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.
	Image pulumi.StringInput `pulumi:"image"`
	// Configuration of the resource which executes the "containerAction".
	ResourceConfiguration DatasetResourceConfigurationInput `pulumi:"resourceConfiguration"`
	// The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of "stringValue", "datasetContentVersionValue", or "outputFileUriValue".
	Variables DatasetVariableArrayInput `pulumi:"variables"`
}

func (DatasetContainerActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContainerAction)(nil)).Elem()
}

func (i DatasetContainerActionArgs) ToDatasetContainerActionOutput() DatasetContainerActionOutput {
	return i.ToDatasetContainerActionOutputWithContext(context.Background())
}

func (i DatasetContainerActionArgs) ToDatasetContainerActionOutputWithContext(ctx context.Context) DatasetContainerActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContainerActionOutput)
}

func (i DatasetContainerActionArgs) ToDatasetContainerActionPtrOutput() DatasetContainerActionPtrOutput {
	return i.ToDatasetContainerActionPtrOutputWithContext(context.Background())
}

func (i DatasetContainerActionArgs) ToDatasetContainerActionPtrOutputWithContext(ctx context.Context) DatasetContainerActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContainerActionOutput).ToDatasetContainerActionPtrOutputWithContext(ctx)
}

// DatasetContainerActionPtrInput is an input type that accepts DatasetContainerActionArgs, DatasetContainerActionPtr and DatasetContainerActionPtrOutput values.
// You can construct a concrete instance of `DatasetContainerActionPtrInput` via:
//
//	        DatasetContainerActionArgs{...}
//
//	or:
//
//	        nil
type DatasetContainerActionPtrInput interface {
	pulumi.Input

	ToDatasetContainerActionPtrOutput() DatasetContainerActionPtrOutput
	ToDatasetContainerActionPtrOutputWithContext(context.Context) DatasetContainerActionPtrOutput
}

type datasetContainerActionPtrType DatasetContainerActionArgs

func DatasetContainerActionPtr(v *DatasetContainerActionArgs) DatasetContainerActionPtrInput {
	return (*datasetContainerActionPtrType)(v)
}

func (*datasetContainerActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetContainerAction)(nil)).Elem()
}

func (i *datasetContainerActionPtrType) ToDatasetContainerActionPtrOutput() DatasetContainerActionPtrOutput {
	return i.ToDatasetContainerActionPtrOutputWithContext(context.Background())
}

func (i *datasetContainerActionPtrType) ToDatasetContainerActionPtrOutputWithContext(ctx context.Context) DatasetContainerActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContainerActionPtrOutput)
}

type DatasetContainerActionOutput struct{ *pulumi.OutputState }

func (DatasetContainerActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContainerAction)(nil)).Elem()
}

func (o DatasetContainerActionOutput) ToDatasetContainerActionOutput() DatasetContainerActionOutput {
	return o
}

func (o DatasetContainerActionOutput) ToDatasetContainerActionOutputWithContext(ctx context.Context) DatasetContainerActionOutput {
	return o
}

func (o DatasetContainerActionOutput) ToDatasetContainerActionPtrOutput() DatasetContainerActionPtrOutput {
	return o.ToDatasetContainerActionPtrOutputWithContext(context.Background())
}

func (o DatasetContainerActionOutput) ToDatasetContainerActionPtrOutputWithContext(ctx context.Context) DatasetContainerActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetContainerAction) *DatasetContainerAction {
		return &v
	}).(DatasetContainerActionPtrOutput)
}

// The ARN of the role which gives permission to the system to access needed resources in order to run the "containerAction". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.
func (o DatasetContainerActionOutput) ExecutionRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetContainerAction) string { return v.ExecutionRoleArn }).(pulumi.StringOutput)
}

// The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.
func (o DatasetContainerActionOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetContainerAction) string { return v.Image }).(pulumi.StringOutput)
}

// Configuration of the resource which executes the "containerAction".
func (o DatasetContainerActionOutput) ResourceConfiguration() DatasetResourceConfigurationOutput {
	return o.ApplyT(func(v DatasetContainerAction) DatasetResourceConfiguration { return v.ResourceConfiguration }).(DatasetResourceConfigurationOutput)
}

// The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of "stringValue", "datasetContentVersionValue", or "outputFileUriValue".
func (o DatasetContainerActionOutput) Variables() DatasetVariableArrayOutput {
	return o.ApplyT(func(v DatasetContainerAction) []DatasetVariable { return v.Variables }).(DatasetVariableArrayOutput)
}

type DatasetContainerActionPtrOutput struct{ *pulumi.OutputState }

func (DatasetContainerActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetContainerAction)(nil)).Elem()
}

func (o DatasetContainerActionPtrOutput) ToDatasetContainerActionPtrOutput() DatasetContainerActionPtrOutput {
	return o
}

func (o DatasetContainerActionPtrOutput) ToDatasetContainerActionPtrOutputWithContext(ctx context.Context) DatasetContainerActionPtrOutput {
	return o
}

func (o DatasetContainerActionPtrOutput) Elem() DatasetContainerActionOutput {
	return o.ApplyT(func(v *DatasetContainerAction) DatasetContainerAction {
		if v != nil {
			return *v
		}
		var ret DatasetContainerAction
		return ret
	}).(DatasetContainerActionOutput)
}

// The ARN of the role which gives permission to the system to access needed resources in order to run the "containerAction". This includes, at minimum, permission to retrieve the data set contents which are the input to the containerized application.
func (o DatasetContainerActionPtrOutput) ExecutionRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetContainerAction) *string {
		if v == nil {
			return nil
		}
		return &v.ExecutionRoleArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the Docker container stored in your account. The Docker container contains an application and needed support libraries and is used to generate data set contents.
func (o DatasetContainerActionPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetContainerAction) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

// Configuration of the resource which executes the "containerAction".
func (o DatasetContainerActionPtrOutput) ResourceConfiguration() DatasetResourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DatasetContainerAction) *DatasetResourceConfiguration {
		if v == nil {
			return nil
		}
		return &v.ResourceConfiguration
	}).(DatasetResourceConfigurationPtrOutput)
}

// The values of variables used within the context of the execution of the containerized application (basically, parameters passed to the application). Each variable must have a name and a value given by one of "stringValue", "datasetContentVersionValue", or "outputFileUriValue".
func (o DatasetContainerActionPtrOutput) Variables() DatasetVariableArrayOutput {
	return o.ApplyT(func(v *DatasetContainerAction) []DatasetVariable {
		if v == nil {
			return nil
		}
		return v.Variables
	}).(DatasetVariableArrayOutput)
}

type DatasetContentDeliveryRule struct {
	// The destination to which dataset contents are delivered.
	Destination DatasetContentDeliveryRuleDestination `pulumi:"destination"`
	// The name of the dataset content delivery rules entry.
	EntryName *string `pulumi:"entryName"`
}

// DatasetContentDeliveryRuleInput is an input type that accepts DatasetContentDeliveryRuleArgs and DatasetContentDeliveryRuleOutput values.
// You can construct a concrete instance of `DatasetContentDeliveryRuleInput` via:
//
//	DatasetContentDeliveryRuleArgs{...}
type DatasetContentDeliveryRuleInput interface {
	pulumi.Input

	ToDatasetContentDeliveryRuleOutput() DatasetContentDeliveryRuleOutput
	ToDatasetContentDeliveryRuleOutputWithContext(context.Context) DatasetContentDeliveryRuleOutput
}

type DatasetContentDeliveryRuleArgs struct {
	// The destination to which dataset contents are delivered.
	Destination DatasetContentDeliveryRuleDestinationInput `pulumi:"destination"`
	// The name of the dataset content delivery rules entry.
	EntryName pulumi.StringPtrInput `pulumi:"entryName"`
}

func (DatasetContentDeliveryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContentDeliveryRule)(nil)).Elem()
}

func (i DatasetContentDeliveryRuleArgs) ToDatasetContentDeliveryRuleOutput() DatasetContentDeliveryRuleOutput {
	return i.ToDatasetContentDeliveryRuleOutputWithContext(context.Background())
}

func (i DatasetContentDeliveryRuleArgs) ToDatasetContentDeliveryRuleOutputWithContext(ctx context.Context) DatasetContentDeliveryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContentDeliveryRuleOutput)
}

// DatasetContentDeliveryRuleArrayInput is an input type that accepts DatasetContentDeliveryRuleArray and DatasetContentDeliveryRuleArrayOutput values.
// You can construct a concrete instance of `DatasetContentDeliveryRuleArrayInput` via:
//
//	DatasetContentDeliveryRuleArray{ DatasetContentDeliveryRuleArgs{...} }
type DatasetContentDeliveryRuleArrayInput interface {
	pulumi.Input

	ToDatasetContentDeliveryRuleArrayOutput() DatasetContentDeliveryRuleArrayOutput
	ToDatasetContentDeliveryRuleArrayOutputWithContext(context.Context) DatasetContentDeliveryRuleArrayOutput
}

type DatasetContentDeliveryRuleArray []DatasetContentDeliveryRuleInput

func (DatasetContentDeliveryRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetContentDeliveryRule)(nil)).Elem()
}

func (i DatasetContentDeliveryRuleArray) ToDatasetContentDeliveryRuleArrayOutput() DatasetContentDeliveryRuleArrayOutput {
	return i.ToDatasetContentDeliveryRuleArrayOutputWithContext(context.Background())
}

func (i DatasetContentDeliveryRuleArray) ToDatasetContentDeliveryRuleArrayOutputWithContext(ctx context.Context) DatasetContentDeliveryRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContentDeliveryRuleArrayOutput)
}

type DatasetContentDeliveryRuleOutput struct{ *pulumi.OutputState }

func (DatasetContentDeliveryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContentDeliveryRule)(nil)).Elem()
}

func (o DatasetContentDeliveryRuleOutput) ToDatasetContentDeliveryRuleOutput() DatasetContentDeliveryRuleOutput {
	return o
}

func (o DatasetContentDeliveryRuleOutput) ToDatasetContentDeliveryRuleOutputWithContext(ctx context.Context) DatasetContentDeliveryRuleOutput {
	return o
}

// The destination to which dataset contents are delivered.
func (o DatasetContentDeliveryRuleOutput) Destination() DatasetContentDeliveryRuleDestinationOutput {
	return o.ApplyT(func(v DatasetContentDeliveryRule) DatasetContentDeliveryRuleDestination { return v.Destination }).(DatasetContentDeliveryRuleDestinationOutput)
}

// The name of the dataset content delivery rules entry.
func (o DatasetContentDeliveryRuleOutput) EntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetContentDeliveryRule) *string { return v.EntryName }).(pulumi.StringPtrOutput)
}

type DatasetContentDeliveryRuleArrayOutput struct{ *pulumi.OutputState }

func (DatasetContentDeliveryRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetContentDeliveryRule)(nil)).Elem()
}

func (o DatasetContentDeliveryRuleArrayOutput) ToDatasetContentDeliveryRuleArrayOutput() DatasetContentDeliveryRuleArrayOutput {
	return o
}

func (o DatasetContentDeliveryRuleArrayOutput) ToDatasetContentDeliveryRuleArrayOutputWithContext(ctx context.Context) DatasetContentDeliveryRuleArrayOutput {
	return o
}

func (o DatasetContentDeliveryRuleArrayOutput) Index(i pulumi.IntInput) DatasetContentDeliveryRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetContentDeliveryRule {
		return vs[0].([]DatasetContentDeliveryRule)[vs[1].(int)]
	}).(DatasetContentDeliveryRuleOutput)
}

type DatasetContentDeliveryRuleDestination struct {
	// Configuration information for delivery of dataset contents to AWS IoT Events .
	IotEventsDestinationConfiguration *DatasetIotEventsDestinationConfiguration `pulumi:"iotEventsDestinationConfiguration"`
	// Configuration information for delivery of dataset contents to Amazon S3.
	S3DestinationConfiguration *DatasetS3DestinationConfiguration `pulumi:"s3DestinationConfiguration"`
}

// DatasetContentDeliveryRuleDestinationInput is an input type that accepts DatasetContentDeliveryRuleDestinationArgs and DatasetContentDeliveryRuleDestinationOutput values.
// You can construct a concrete instance of `DatasetContentDeliveryRuleDestinationInput` via:
//
//	DatasetContentDeliveryRuleDestinationArgs{...}
type DatasetContentDeliveryRuleDestinationInput interface {
	pulumi.Input

	ToDatasetContentDeliveryRuleDestinationOutput() DatasetContentDeliveryRuleDestinationOutput
	ToDatasetContentDeliveryRuleDestinationOutputWithContext(context.Context) DatasetContentDeliveryRuleDestinationOutput
}

type DatasetContentDeliveryRuleDestinationArgs struct {
	// Configuration information for delivery of dataset contents to AWS IoT Events .
	IotEventsDestinationConfiguration DatasetIotEventsDestinationConfigurationPtrInput `pulumi:"iotEventsDestinationConfiguration"`
	// Configuration information for delivery of dataset contents to Amazon S3.
	S3DestinationConfiguration DatasetS3DestinationConfigurationPtrInput `pulumi:"s3DestinationConfiguration"`
}

func (DatasetContentDeliveryRuleDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContentDeliveryRuleDestination)(nil)).Elem()
}

func (i DatasetContentDeliveryRuleDestinationArgs) ToDatasetContentDeliveryRuleDestinationOutput() DatasetContentDeliveryRuleDestinationOutput {
	return i.ToDatasetContentDeliveryRuleDestinationOutputWithContext(context.Background())
}

func (i DatasetContentDeliveryRuleDestinationArgs) ToDatasetContentDeliveryRuleDestinationOutputWithContext(ctx context.Context) DatasetContentDeliveryRuleDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContentDeliveryRuleDestinationOutput)
}

type DatasetContentDeliveryRuleDestinationOutput struct{ *pulumi.OutputState }

func (DatasetContentDeliveryRuleDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContentDeliveryRuleDestination)(nil)).Elem()
}

func (o DatasetContentDeliveryRuleDestinationOutput) ToDatasetContentDeliveryRuleDestinationOutput() DatasetContentDeliveryRuleDestinationOutput {
	return o
}

func (o DatasetContentDeliveryRuleDestinationOutput) ToDatasetContentDeliveryRuleDestinationOutputWithContext(ctx context.Context) DatasetContentDeliveryRuleDestinationOutput {
	return o
}

// Configuration information for delivery of dataset contents to AWS IoT Events .
func (o DatasetContentDeliveryRuleDestinationOutput) IotEventsDestinationConfiguration() DatasetIotEventsDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v DatasetContentDeliveryRuleDestination) *DatasetIotEventsDestinationConfiguration {
		return v.IotEventsDestinationConfiguration
	}).(DatasetIotEventsDestinationConfigurationPtrOutput)
}

// Configuration information for delivery of dataset contents to Amazon S3.
func (o DatasetContentDeliveryRuleDestinationOutput) S3DestinationConfiguration() DatasetS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v DatasetContentDeliveryRuleDestination) *DatasetS3DestinationConfiguration {
		return v.S3DestinationConfiguration
	}).(DatasetS3DestinationConfigurationPtrOutput)
}

type DatasetContentVersionValue struct {
	// The name of the dataset whose latest contents are used as input to the notebook or application.
	DatasetName string `pulumi:"datasetName"`
}

// DatasetContentVersionValueInput is an input type that accepts DatasetContentVersionValueArgs and DatasetContentVersionValueOutput values.
// You can construct a concrete instance of `DatasetContentVersionValueInput` via:
//
//	DatasetContentVersionValueArgs{...}
type DatasetContentVersionValueInput interface {
	pulumi.Input

	ToDatasetContentVersionValueOutput() DatasetContentVersionValueOutput
	ToDatasetContentVersionValueOutputWithContext(context.Context) DatasetContentVersionValueOutput
}

type DatasetContentVersionValueArgs struct {
	// The name of the dataset whose latest contents are used as input to the notebook or application.
	DatasetName pulumi.StringInput `pulumi:"datasetName"`
}

func (DatasetContentVersionValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContentVersionValue)(nil)).Elem()
}

func (i DatasetContentVersionValueArgs) ToDatasetContentVersionValueOutput() DatasetContentVersionValueOutput {
	return i.ToDatasetContentVersionValueOutputWithContext(context.Background())
}

func (i DatasetContentVersionValueArgs) ToDatasetContentVersionValueOutputWithContext(ctx context.Context) DatasetContentVersionValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContentVersionValueOutput)
}

func (i DatasetContentVersionValueArgs) ToDatasetContentVersionValuePtrOutput() DatasetContentVersionValuePtrOutput {
	return i.ToDatasetContentVersionValuePtrOutputWithContext(context.Background())
}

func (i DatasetContentVersionValueArgs) ToDatasetContentVersionValuePtrOutputWithContext(ctx context.Context) DatasetContentVersionValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContentVersionValueOutput).ToDatasetContentVersionValuePtrOutputWithContext(ctx)
}

// DatasetContentVersionValuePtrInput is an input type that accepts DatasetContentVersionValueArgs, DatasetContentVersionValuePtr and DatasetContentVersionValuePtrOutput values.
// You can construct a concrete instance of `DatasetContentVersionValuePtrInput` via:
//
//	        DatasetContentVersionValueArgs{...}
//
//	or:
//
//	        nil
type DatasetContentVersionValuePtrInput interface {
	pulumi.Input

	ToDatasetContentVersionValuePtrOutput() DatasetContentVersionValuePtrOutput
	ToDatasetContentVersionValuePtrOutputWithContext(context.Context) DatasetContentVersionValuePtrOutput
}

type datasetContentVersionValuePtrType DatasetContentVersionValueArgs

func DatasetContentVersionValuePtr(v *DatasetContentVersionValueArgs) DatasetContentVersionValuePtrInput {
	return (*datasetContentVersionValuePtrType)(v)
}

func (*datasetContentVersionValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetContentVersionValue)(nil)).Elem()
}

func (i *datasetContentVersionValuePtrType) ToDatasetContentVersionValuePtrOutput() DatasetContentVersionValuePtrOutput {
	return i.ToDatasetContentVersionValuePtrOutputWithContext(context.Background())
}

func (i *datasetContentVersionValuePtrType) ToDatasetContentVersionValuePtrOutputWithContext(ctx context.Context) DatasetContentVersionValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContentVersionValuePtrOutput)
}

type DatasetContentVersionValueOutput struct{ *pulumi.OutputState }

func (DatasetContentVersionValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContentVersionValue)(nil)).Elem()
}

func (o DatasetContentVersionValueOutput) ToDatasetContentVersionValueOutput() DatasetContentVersionValueOutput {
	return o
}

func (o DatasetContentVersionValueOutput) ToDatasetContentVersionValueOutputWithContext(ctx context.Context) DatasetContentVersionValueOutput {
	return o
}

func (o DatasetContentVersionValueOutput) ToDatasetContentVersionValuePtrOutput() DatasetContentVersionValuePtrOutput {
	return o.ToDatasetContentVersionValuePtrOutputWithContext(context.Background())
}

func (o DatasetContentVersionValueOutput) ToDatasetContentVersionValuePtrOutputWithContext(ctx context.Context) DatasetContentVersionValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetContentVersionValue) *DatasetContentVersionValue {
		return &v
	}).(DatasetContentVersionValuePtrOutput)
}

// The name of the dataset whose latest contents are used as input to the notebook or application.
func (o DatasetContentVersionValueOutput) DatasetName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetContentVersionValue) string { return v.DatasetName }).(pulumi.StringOutput)
}

type DatasetContentVersionValuePtrOutput struct{ *pulumi.OutputState }

func (DatasetContentVersionValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetContentVersionValue)(nil)).Elem()
}

func (o DatasetContentVersionValuePtrOutput) ToDatasetContentVersionValuePtrOutput() DatasetContentVersionValuePtrOutput {
	return o
}

func (o DatasetContentVersionValuePtrOutput) ToDatasetContentVersionValuePtrOutputWithContext(ctx context.Context) DatasetContentVersionValuePtrOutput {
	return o
}

func (o DatasetContentVersionValuePtrOutput) Elem() DatasetContentVersionValueOutput {
	return o.ApplyT(func(v *DatasetContentVersionValue) DatasetContentVersionValue {
		if v != nil {
			return *v
		}
		var ret DatasetContentVersionValue
		return ret
	}).(DatasetContentVersionValueOutput)
}

// The name of the dataset whose latest contents are used as input to the notebook or application.
func (o DatasetContentVersionValuePtrOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetContentVersionValue) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetName
	}).(pulumi.StringPtrOutput)
}

type DatasetDeltaTime struct {
	// The number of seconds of estimated in-flight lag time of message data. When you create dataset contents using message data from a specified timeframe, some message data might still be in flight when processing begins, and so do not arrive in time to be processed. Use this field to make allowances for the in flight time of your message data, so that data not processed from a previous timeframe is included with the next timeframe. Otherwise, missed message data would be excluded from processing during the next timeframe too, because its timestamp places it within the previous timeframe.
	OffsetSeconds int `pulumi:"offsetSeconds"`
	// An expression by which the time of the message data might be determined. This can be the name of a timestamp field or a SQL expression that is used to derive the time the message data was generated.
	TimeExpression string `pulumi:"timeExpression"`
}

// DatasetDeltaTimeInput is an input type that accepts DatasetDeltaTimeArgs and DatasetDeltaTimeOutput values.
// You can construct a concrete instance of `DatasetDeltaTimeInput` via:
//
//	DatasetDeltaTimeArgs{...}
type DatasetDeltaTimeInput interface {
	pulumi.Input

	ToDatasetDeltaTimeOutput() DatasetDeltaTimeOutput
	ToDatasetDeltaTimeOutputWithContext(context.Context) DatasetDeltaTimeOutput
}

type DatasetDeltaTimeArgs struct {
	// The number of seconds of estimated in-flight lag time of message data. When you create dataset contents using message data from a specified timeframe, some message data might still be in flight when processing begins, and so do not arrive in time to be processed. Use this field to make allowances for the in flight time of your message data, so that data not processed from a previous timeframe is included with the next timeframe. Otherwise, missed message data would be excluded from processing during the next timeframe too, because its timestamp places it within the previous timeframe.
	OffsetSeconds pulumi.IntInput `pulumi:"offsetSeconds"`
	// An expression by which the time of the message data might be determined. This can be the name of a timestamp field or a SQL expression that is used to derive the time the message data was generated.
	TimeExpression pulumi.StringInput `pulumi:"timeExpression"`
}

func (DatasetDeltaTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDeltaTime)(nil)).Elem()
}

func (i DatasetDeltaTimeArgs) ToDatasetDeltaTimeOutput() DatasetDeltaTimeOutput {
	return i.ToDatasetDeltaTimeOutputWithContext(context.Background())
}

func (i DatasetDeltaTimeArgs) ToDatasetDeltaTimeOutputWithContext(ctx context.Context) DatasetDeltaTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeltaTimeOutput)
}

func (i DatasetDeltaTimeArgs) ToDatasetDeltaTimePtrOutput() DatasetDeltaTimePtrOutput {
	return i.ToDatasetDeltaTimePtrOutputWithContext(context.Background())
}

func (i DatasetDeltaTimeArgs) ToDatasetDeltaTimePtrOutputWithContext(ctx context.Context) DatasetDeltaTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeltaTimeOutput).ToDatasetDeltaTimePtrOutputWithContext(ctx)
}

// DatasetDeltaTimePtrInput is an input type that accepts DatasetDeltaTimeArgs, DatasetDeltaTimePtr and DatasetDeltaTimePtrOutput values.
// You can construct a concrete instance of `DatasetDeltaTimePtrInput` via:
//
//	        DatasetDeltaTimeArgs{...}
//
//	or:
//
//	        nil
type DatasetDeltaTimePtrInput interface {
	pulumi.Input

	ToDatasetDeltaTimePtrOutput() DatasetDeltaTimePtrOutput
	ToDatasetDeltaTimePtrOutputWithContext(context.Context) DatasetDeltaTimePtrOutput
}

type datasetDeltaTimePtrType DatasetDeltaTimeArgs

func DatasetDeltaTimePtr(v *DatasetDeltaTimeArgs) DatasetDeltaTimePtrInput {
	return (*datasetDeltaTimePtrType)(v)
}

func (*datasetDeltaTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDeltaTime)(nil)).Elem()
}

func (i *datasetDeltaTimePtrType) ToDatasetDeltaTimePtrOutput() DatasetDeltaTimePtrOutput {
	return i.ToDatasetDeltaTimePtrOutputWithContext(context.Background())
}

func (i *datasetDeltaTimePtrType) ToDatasetDeltaTimePtrOutputWithContext(ctx context.Context) DatasetDeltaTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeltaTimePtrOutput)
}

type DatasetDeltaTimeOutput struct{ *pulumi.OutputState }

func (DatasetDeltaTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDeltaTime)(nil)).Elem()
}

func (o DatasetDeltaTimeOutput) ToDatasetDeltaTimeOutput() DatasetDeltaTimeOutput {
	return o
}

func (o DatasetDeltaTimeOutput) ToDatasetDeltaTimeOutputWithContext(ctx context.Context) DatasetDeltaTimeOutput {
	return o
}

func (o DatasetDeltaTimeOutput) ToDatasetDeltaTimePtrOutput() DatasetDeltaTimePtrOutput {
	return o.ToDatasetDeltaTimePtrOutputWithContext(context.Background())
}

func (o DatasetDeltaTimeOutput) ToDatasetDeltaTimePtrOutputWithContext(ctx context.Context) DatasetDeltaTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetDeltaTime) *DatasetDeltaTime {
		return &v
	}).(DatasetDeltaTimePtrOutput)
}

// The number of seconds of estimated in-flight lag time of message data. When you create dataset contents using message data from a specified timeframe, some message data might still be in flight when processing begins, and so do not arrive in time to be processed. Use this field to make allowances for the in flight time of your message data, so that data not processed from a previous timeframe is included with the next timeframe. Otherwise, missed message data would be excluded from processing during the next timeframe too, because its timestamp places it within the previous timeframe.
func (o DatasetDeltaTimeOutput) OffsetSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v DatasetDeltaTime) int { return v.OffsetSeconds }).(pulumi.IntOutput)
}

// An expression by which the time of the message data might be determined. This can be the name of a timestamp field or a SQL expression that is used to derive the time the message data was generated.
func (o DatasetDeltaTimeOutput) TimeExpression() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetDeltaTime) string { return v.TimeExpression }).(pulumi.StringOutput)
}

type DatasetDeltaTimePtrOutput struct{ *pulumi.OutputState }

func (DatasetDeltaTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDeltaTime)(nil)).Elem()
}

func (o DatasetDeltaTimePtrOutput) ToDatasetDeltaTimePtrOutput() DatasetDeltaTimePtrOutput {
	return o
}

func (o DatasetDeltaTimePtrOutput) ToDatasetDeltaTimePtrOutputWithContext(ctx context.Context) DatasetDeltaTimePtrOutput {
	return o
}

func (o DatasetDeltaTimePtrOutput) Elem() DatasetDeltaTimeOutput {
	return o.ApplyT(func(v *DatasetDeltaTime) DatasetDeltaTime {
		if v != nil {
			return *v
		}
		var ret DatasetDeltaTime
		return ret
	}).(DatasetDeltaTimeOutput)
}

// The number of seconds of estimated in-flight lag time of message data. When you create dataset contents using message data from a specified timeframe, some message data might still be in flight when processing begins, and so do not arrive in time to be processed. Use this field to make allowances for the in flight time of your message data, so that data not processed from a previous timeframe is included with the next timeframe. Otherwise, missed message data would be excluded from processing during the next timeframe too, because its timestamp places it within the previous timeframe.
func (o DatasetDeltaTimePtrOutput) OffsetSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatasetDeltaTime) *int {
		if v == nil {
			return nil
		}
		return &v.OffsetSeconds
	}).(pulumi.IntPtrOutput)
}

// An expression by which the time of the message data might be determined. This can be the name of a timestamp field or a SQL expression that is used to derive the time the message data was generated.
func (o DatasetDeltaTimePtrOutput) TimeExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetDeltaTime) *string {
		if v == nil {
			return nil
		}
		return &v.TimeExpression
	}).(pulumi.StringPtrOutput)
}

type DatasetDeltaTimeSessionWindowConfiguration struct {
	// A time interval. You can use `timeoutInMinutes` so that AWS IoT Analytics can batch up late data notifications that have been generated since the last execution. AWS IoT Analytics sends one batch of notifications to Amazon CloudWatch Events at one time.
	//
	// For more information about how to write a timestamp expression, see [Date and Time Functions and Operators](https://docs.aws.amazon.com/https://prestodb.io/docs/current/functions/datetime.html) , in the *Presto 0.172 Documentation* .
	TimeoutInMinutes int `pulumi:"timeoutInMinutes"`
}

// DatasetDeltaTimeSessionWindowConfigurationInput is an input type that accepts DatasetDeltaTimeSessionWindowConfigurationArgs and DatasetDeltaTimeSessionWindowConfigurationOutput values.
// You can construct a concrete instance of `DatasetDeltaTimeSessionWindowConfigurationInput` via:
//
//	DatasetDeltaTimeSessionWindowConfigurationArgs{...}
type DatasetDeltaTimeSessionWindowConfigurationInput interface {
	pulumi.Input

	ToDatasetDeltaTimeSessionWindowConfigurationOutput() DatasetDeltaTimeSessionWindowConfigurationOutput
	ToDatasetDeltaTimeSessionWindowConfigurationOutputWithContext(context.Context) DatasetDeltaTimeSessionWindowConfigurationOutput
}

type DatasetDeltaTimeSessionWindowConfigurationArgs struct {
	// A time interval. You can use `timeoutInMinutes` so that AWS IoT Analytics can batch up late data notifications that have been generated since the last execution. AWS IoT Analytics sends one batch of notifications to Amazon CloudWatch Events at one time.
	//
	// For more information about how to write a timestamp expression, see [Date and Time Functions and Operators](https://docs.aws.amazon.com/https://prestodb.io/docs/current/functions/datetime.html) , in the *Presto 0.172 Documentation* .
	TimeoutInMinutes pulumi.IntInput `pulumi:"timeoutInMinutes"`
}

func (DatasetDeltaTimeSessionWindowConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDeltaTimeSessionWindowConfiguration)(nil)).Elem()
}

func (i DatasetDeltaTimeSessionWindowConfigurationArgs) ToDatasetDeltaTimeSessionWindowConfigurationOutput() DatasetDeltaTimeSessionWindowConfigurationOutput {
	return i.ToDatasetDeltaTimeSessionWindowConfigurationOutputWithContext(context.Background())
}

func (i DatasetDeltaTimeSessionWindowConfigurationArgs) ToDatasetDeltaTimeSessionWindowConfigurationOutputWithContext(ctx context.Context) DatasetDeltaTimeSessionWindowConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeltaTimeSessionWindowConfigurationOutput)
}

func (i DatasetDeltaTimeSessionWindowConfigurationArgs) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutput() DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return i.ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(context.Background())
}

func (i DatasetDeltaTimeSessionWindowConfigurationArgs) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(ctx context.Context) DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeltaTimeSessionWindowConfigurationOutput).ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(ctx)
}

// DatasetDeltaTimeSessionWindowConfigurationPtrInput is an input type that accepts DatasetDeltaTimeSessionWindowConfigurationArgs, DatasetDeltaTimeSessionWindowConfigurationPtr and DatasetDeltaTimeSessionWindowConfigurationPtrOutput values.
// You can construct a concrete instance of `DatasetDeltaTimeSessionWindowConfigurationPtrInput` via:
//
//	        DatasetDeltaTimeSessionWindowConfigurationArgs{...}
//
//	or:
//
//	        nil
type DatasetDeltaTimeSessionWindowConfigurationPtrInput interface {
	pulumi.Input

	ToDatasetDeltaTimeSessionWindowConfigurationPtrOutput() DatasetDeltaTimeSessionWindowConfigurationPtrOutput
	ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(context.Context) DatasetDeltaTimeSessionWindowConfigurationPtrOutput
}

type datasetDeltaTimeSessionWindowConfigurationPtrType DatasetDeltaTimeSessionWindowConfigurationArgs

func DatasetDeltaTimeSessionWindowConfigurationPtr(v *DatasetDeltaTimeSessionWindowConfigurationArgs) DatasetDeltaTimeSessionWindowConfigurationPtrInput {
	return (*datasetDeltaTimeSessionWindowConfigurationPtrType)(v)
}

func (*datasetDeltaTimeSessionWindowConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDeltaTimeSessionWindowConfiguration)(nil)).Elem()
}

func (i *datasetDeltaTimeSessionWindowConfigurationPtrType) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutput() DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return i.ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(context.Background())
}

func (i *datasetDeltaTimeSessionWindowConfigurationPtrType) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(ctx context.Context) DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeltaTimeSessionWindowConfigurationPtrOutput)
}

type DatasetDeltaTimeSessionWindowConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetDeltaTimeSessionWindowConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDeltaTimeSessionWindowConfiguration)(nil)).Elem()
}

func (o DatasetDeltaTimeSessionWindowConfigurationOutput) ToDatasetDeltaTimeSessionWindowConfigurationOutput() DatasetDeltaTimeSessionWindowConfigurationOutput {
	return o
}

func (o DatasetDeltaTimeSessionWindowConfigurationOutput) ToDatasetDeltaTimeSessionWindowConfigurationOutputWithContext(ctx context.Context) DatasetDeltaTimeSessionWindowConfigurationOutput {
	return o
}

func (o DatasetDeltaTimeSessionWindowConfigurationOutput) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutput() DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return o.ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(context.Background())
}

func (o DatasetDeltaTimeSessionWindowConfigurationOutput) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(ctx context.Context) DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetDeltaTimeSessionWindowConfiguration) *DatasetDeltaTimeSessionWindowConfiguration {
		return &v
	}).(DatasetDeltaTimeSessionWindowConfigurationPtrOutput)
}

// A time interval. You can use `timeoutInMinutes` so that AWS IoT Analytics can batch up late data notifications that have been generated since the last execution. AWS IoT Analytics sends one batch of notifications to Amazon CloudWatch Events at one time.
//
// For more information about how to write a timestamp expression, see [Date and Time Functions and Operators](https://docs.aws.amazon.com/https://prestodb.io/docs/current/functions/datetime.html) , in the *Presto 0.172 Documentation* .
func (o DatasetDeltaTimeSessionWindowConfigurationOutput) TimeoutInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v DatasetDeltaTimeSessionWindowConfiguration) int { return v.TimeoutInMinutes }).(pulumi.IntOutput)
}

type DatasetDeltaTimeSessionWindowConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatasetDeltaTimeSessionWindowConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDeltaTimeSessionWindowConfiguration)(nil)).Elem()
}

func (o DatasetDeltaTimeSessionWindowConfigurationPtrOutput) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutput() DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return o
}

func (o DatasetDeltaTimeSessionWindowConfigurationPtrOutput) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(ctx context.Context) DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return o
}

func (o DatasetDeltaTimeSessionWindowConfigurationPtrOutput) Elem() DatasetDeltaTimeSessionWindowConfigurationOutput {
	return o.ApplyT(func(v *DatasetDeltaTimeSessionWindowConfiguration) DatasetDeltaTimeSessionWindowConfiguration {
		if v != nil {
			return *v
		}
		var ret DatasetDeltaTimeSessionWindowConfiguration
		return ret
	}).(DatasetDeltaTimeSessionWindowConfigurationOutput)
}

// A time interval. You can use `timeoutInMinutes` so that AWS IoT Analytics can batch up late data notifications that have been generated since the last execution. AWS IoT Analytics sends one batch of notifications to Amazon CloudWatch Events at one time.
//
// For more information about how to write a timestamp expression, see [Date and Time Functions and Operators](https://docs.aws.amazon.com/https://prestodb.io/docs/current/functions/datetime.html) , in the *Presto 0.172 Documentation* .
func (o DatasetDeltaTimeSessionWindowConfigurationPtrOutput) TimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatasetDeltaTimeSessionWindowConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

type DatasetFilter struct {
	// Used to limit data to that which has arrived since the last execution of the action.
	DeltaTime *DatasetDeltaTime `pulumi:"deltaTime"`
}

// DatasetFilterInput is an input type that accepts DatasetFilterArgs and DatasetFilterOutput values.
// You can construct a concrete instance of `DatasetFilterInput` via:
//
//	DatasetFilterArgs{...}
type DatasetFilterInput interface {
	pulumi.Input

	ToDatasetFilterOutput() DatasetFilterOutput
	ToDatasetFilterOutputWithContext(context.Context) DatasetFilterOutput
}

type DatasetFilterArgs struct {
	// Used to limit data to that which has arrived since the last execution of the action.
	DeltaTime DatasetDeltaTimePtrInput `pulumi:"deltaTime"`
}

func (DatasetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetFilter)(nil)).Elem()
}

func (i DatasetFilterArgs) ToDatasetFilterOutput() DatasetFilterOutput {
	return i.ToDatasetFilterOutputWithContext(context.Background())
}

func (i DatasetFilterArgs) ToDatasetFilterOutputWithContext(ctx context.Context) DatasetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetFilterOutput)
}

// DatasetFilterArrayInput is an input type that accepts DatasetFilterArray and DatasetFilterArrayOutput values.
// You can construct a concrete instance of `DatasetFilterArrayInput` via:
//
//	DatasetFilterArray{ DatasetFilterArgs{...} }
type DatasetFilterArrayInput interface {
	pulumi.Input

	ToDatasetFilterArrayOutput() DatasetFilterArrayOutput
	ToDatasetFilterArrayOutputWithContext(context.Context) DatasetFilterArrayOutput
}

type DatasetFilterArray []DatasetFilterInput

func (DatasetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetFilter)(nil)).Elem()
}

func (i DatasetFilterArray) ToDatasetFilterArrayOutput() DatasetFilterArrayOutput {
	return i.ToDatasetFilterArrayOutputWithContext(context.Background())
}

func (i DatasetFilterArray) ToDatasetFilterArrayOutputWithContext(ctx context.Context) DatasetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetFilterArrayOutput)
}

type DatasetFilterOutput struct{ *pulumi.OutputState }

func (DatasetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetFilter)(nil)).Elem()
}

func (o DatasetFilterOutput) ToDatasetFilterOutput() DatasetFilterOutput {
	return o
}

func (o DatasetFilterOutput) ToDatasetFilterOutputWithContext(ctx context.Context) DatasetFilterOutput {
	return o
}

// Used to limit data to that which has arrived since the last execution of the action.
func (o DatasetFilterOutput) DeltaTime() DatasetDeltaTimePtrOutput {
	return o.ApplyT(func(v DatasetFilter) *DatasetDeltaTime { return v.DeltaTime }).(DatasetDeltaTimePtrOutput)
}

type DatasetFilterArrayOutput struct{ *pulumi.OutputState }

func (DatasetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetFilter)(nil)).Elem()
}

func (o DatasetFilterArrayOutput) ToDatasetFilterArrayOutput() DatasetFilterArrayOutput {
	return o
}

func (o DatasetFilterArrayOutput) ToDatasetFilterArrayOutputWithContext(ctx context.Context) DatasetFilterArrayOutput {
	return o
}

func (o DatasetFilterArrayOutput) Index(i pulumi.IntInput) DatasetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetFilter {
		return vs[0].([]DatasetFilter)[vs[1].(int)]
	}).(DatasetFilterOutput)
}

type DatasetGlueConfiguration struct {
	// The name of the database in your AWS Glue Data Catalog in which the table is located. An AWS Glue Data Catalog database contains metadata tables.
	DatabaseName string `pulumi:"databaseName"`
	// The name of the table in your AWS Glue Data Catalog that is used to perform the ETL operations. An AWS Glue Data Catalog table contains partitioned data and descriptions of data sources and targets.
	TableName string `pulumi:"tableName"`
}

// DatasetGlueConfigurationInput is an input type that accepts DatasetGlueConfigurationArgs and DatasetGlueConfigurationOutput values.
// You can construct a concrete instance of `DatasetGlueConfigurationInput` via:
//
//	DatasetGlueConfigurationArgs{...}
type DatasetGlueConfigurationInput interface {
	pulumi.Input

	ToDatasetGlueConfigurationOutput() DatasetGlueConfigurationOutput
	ToDatasetGlueConfigurationOutputWithContext(context.Context) DatasetGlueConfigurationOutput
}

type DatasetGlueConfigurationArgs struct {
	// The name of the database in your AWS Glue Data Catalog in which the table is located. An AWS Glue Data Catalog database contains metadata tables.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// The name of the table in your AWS Glue Data Catalog that is used to perform the ETL operations. An AWS Glue Data Catalog table contains partitioned data and descriptions of data sources and targets.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (DatasetGlueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetGlueConfiguration)(nil)).Elem()
}

func (i DatasetGlueConfigurationArgs) ToDatasetGlueConfigurationOutput() DatasetGlueConfigurationOutput {
	return i.ToDatasetGlueConfigurationOutputWithContext(context.Background())
}

func (i DatasetGlueConfigurationArgs) ToDatasetGlueConfigurationOutputWithContext(ctx context.Context) DatasetGlueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetGlueConfigurationOutput)
}

func (i DatasetGlueConfigurationArgs) ToDatasetGlueConfigurationPtrOutput() DatasetGlueConfigurationPtrOutput {
	return i.ToDatasetGlueConfigurationPtrOutputWithContext(context.Background())
}

func (i DatasetGlueConfigurationArgs) ToDatasetGlueConfigurationPtrOutputWithContext(ctx context.Context) DatasetGlueConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetGlueConfigurationOutput).ToDatasetGlueConfigurationPtrOutputWithContext(ctx)
}

// DatasetGlueConfigurationPtrInput is an input type that accepts DatasetGlueConfigurationArgs, DatasetGlueConfigurationPtr and DatasetGlueConfigurationPtrOutput values.
// You can construct a concrete instance of `DatasetGlueConfigurationPtrInput` via:
//
//	        DatasetGlueConfigurationArgs{...}
//
//	or:
//
//	        nil
type DatasetGlueConfigurationPtrInput interface {
	pulumi.Input

	ToDatasetGlueConfigurationPtrOutput() DatasetGlueConfigurationPtrOutput
	ToDatasetGlueConfigurationPtrOutputWithContext(context.Context) DatasetGlueConfigurationPtrOutput
}

type datasetGlueConfigurationPtrType DatasetGlueConfigurationArgs

func DatasetGlueConfigurationPtr(v *DatasetGlueConfigurationArgs) DatasetGlueConfigurationPtrInput {
	return (*datasetGlueConfigurationPtrType)(v)
}

func (*datasetGlueConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetGlueConfiguration)(nil)).Elem()
}

func (i *datasetGlueConfigurationPtrType) ToDatasetGlueConfigurationPtrOutput() DatasetGlueConfigurationPtrOutput {
	return i.ToDatasetGlueConfigurationPtrOutputWithContext(context.Background())
}

func (i *datasetGlueConfigurationPtrType) ToDatasetGlueConfigurationPtrOutputWithContext(ctx context.Context) DatasetGlueConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetGlueConfigurationPtrOutput)
}

type DatasetGlueConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetGlueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetGlueConfiguration)(nil)).Elem()
}

func (o DatasetGlueConfigurationOutput) ToDatasetGlueConfigurationOutput() DatasetGlueConfigurationOutput {
	return o
}

func (o DatasetGlueConfigurationOutput) ToDatasetGlueConfigurationOutputWithContext(ctx context.Context) DatasetGlueConfigurationOutput {
	return o
}

func (o DatasetGlueConfigurationOutput) ToDatasetGlueConfigurationPtrOutput() DatasetGlueConfigurationPtrOutput {
	return o.ToDatasetGlueConfigurationPtrOutputWithContext(context.Background())
}

func (o DatasetGlueConfigurationOutput) ToDatasetGlueConfigurationPtrOutputWithContext(ctx context.Context) DatasetGlueConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetGlueConfiguration) *DatasetGlueConfiguration {
		return &v
	}).(DatasetGlueConfigurationPtrOutput)
}

// The name of the database in your AWS Glue Data Catalog in which the table is located. An AWS Glue Data Catalog database contains metadata tables.
func (o DatasetGlueConfigurationOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetGlueConfiguration) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// The name of the table in your AWS Glue Data Catalog that is used to perform the ETL operations. An AWS Glue Data Catalog table contains partitioned data and descriptions of data sources and targets.
func (o DatasetGlueConfigurationOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetGlueConfiguration) string { return v.TableName }).(pulumi.StringOutput)
}

type DatasetGlueConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatasetGlueConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetGlueConfiguration)(nil)).Elem()
}

func (o DatasetGlueConfigurationPtrOutput) ToDatasetGlueConfigurationPtrOutput() DatasetGlueConfigurationPtrOutput {
	return o
}

func (o DatasetGlueConfigurationPtrOutput) ToDatasetGlueConfigurationPtrOutputWithContext(ctx context.Context) DatasetGlueConfigurationPtrOutput {
	return o
}

func (o DatasetGlueConfigurationPtrOutput) Elem() DatasetGlueConfigurationOutput {
	return o.ApplyT(func(v *DatasetGlueConfiguration) DatasetGlueConfiguration {
		if v != nil {
			return *v
		}
		var ret DatasetGlueConfiguration
		return ret
	}).(DatasetGlueConfigurationOutput)
}

// The name of the database in your AWS Glue Data Catalog in which the table is located. An AWS Glue Data Catalog database contains metadata tables.
func (o DatasetGlueConfigurationPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetGlueConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// The name of the table in your AWS Glue Data Catalog that is used to perform the ETL operations. An AWS Glue Data Catalog table contains partitioned data and descriptions of data sources and targets.
func (o DatasetGlueConfigurationPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetGlueConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

type DatasetIotEventsDestinationConfiguration struct {
	// The name of the AWS IoT Events input to which dataset contents are delivered.
	InputName string `pulumi:"inputName"`
	// The ARN of the role that grants AWS IoT Analytics permission to deliver dataset contents to an AWS IoT Events input.
	RoleArn string `pulumi:"roleArn"`
}

// DatasetIotEventsDestinationConfigurationInput is an input type that accepts DatasetIotEventsDestinationConfigurationArgs and DatasetIotEventsDestinationConfigurationOutput values.
// You can construct a concrete instance of `DatasetIotEventsDestinationConfigurationInput` via:
//
//	DatasetIotEventsDestinationConfigurationArgs{...}
type DatasetIotEventsDestinationConfigurationInput interface {
	pulumi.Input

	ToDatasetIotEventsDestinationConfigurationOutput() DatasetIotEventsDestinationConfigurationOutput
	ToDatasetIotEventsDestinationConfigurationOutputWithContext(context.Context) DatasetIotEventsDestinationConfigurationOutput
}

type DatasetIotEventsDestinationConfigurationArgs struct {
	// The name of the AWS IoT Events input to which dataset contents are delivered.
	InputName pulumi.StringInput `pulumi:"inputName"`
	// The ARN of the role that grants AWS IoT Analytics permission to deliver dataset contents to an AWS IoT Events input.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (DatasetIotEventsDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetIotEventsDestinationConfiguration)(nil)).Elem()
}

func (i DatasetIotEventsDestinationConfigurationArgs) ToDatasetIotEventsDestinationConfigurationOutput() DatasetIotEventsDestinationConfigurationOutput {
	return i.ToDatasetIotEventsDestinationConfigurationOutputWithContext(context.Background())
}

func (i DatasetIotEventsDestinationConfigurationArgs) ToDatasetIotEventsDestinationConfigurationOutputWithContext(ctx context.Context) DatasetIotEventsDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetIotEventsDestinationConfigurationOutput)
}

func (i DatasetIotEventsDestinationConfigurationArgs) ToDatasetIotEventsDestinationConfigurationPtrOutput() DatasetIotEventsDestinationConfigurationPtrOutput {
	return i.ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DatasetIotEventsDestinationConfigurationArgs) ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetIotEventsDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetIotEventsDestinationConfigurationOutput).ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(ctx)
}

// DatasetIotEventsDestinationConfigurationPtrInput is an input type that accepts DatasetIotEventsDestinationConfigurationArgs, DatasetIotEventsDestinationConfigurationPtr and DatasetIotEventsDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DatasetIotEventsDestinationConfigurationPtrInput` via:
//
//	        DatasetIotEventsDestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DatasetIotEventsDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDatasetIotEventsDestinationConfigurationPtrOutput() DatasetIotEventsDestinationConfigurationPtrOutput
	ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(context.Context) DatasetIotEventsDestinationConfigurationPtrOutput
}

type datasetIotEventsDestinationConfigurationPtrType DatasetIotEventsDestinationConfigurationArgs

func DatasetIotEventsDestinationConfigurationPtr(v *DatasetIotEventsDestinationConfigurationArgs) DatasetIotEventsDestinationConfigurationPtrInput {
	return (*datasetIotEventsDestinationConfigurationPtrType)(v)
}

func (*datasetIotEventsDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetIotEventsDestinationConfiguration)(nil)).Elem()
}

func (i *datasetIotEventsDestinationConfigurationPtrType) ToDatasetIotEventsDestinationConfigurationPtrOutput() DatasetIotEventsDestinationConfigurationPtrOutput {
	return i.ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *datasetIotEventsDestinationConfigurationPtrType) ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetIotEventsDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetIotEventsDestinationConfigurationPtrOutput)
}

type DatasetIotEventsDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetIotEventsDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetIotEventsDestinationConfiguration)(nil)).Elem()
}

func (o DatasetIotEventsDestinationConfigurationOutput) ToDatasetIotEventsDestinationConfigurationOutput() DatasetIotEventsDestinationConfigurationOutput {
	return o
}

func (o DatasetIotEventsDestinationConfigurationOutput) ToDatasetIotEventsDestinationConfigurationOutputWithContext(ctx context.Context) DatasetIotEventsDestinationConfigurationOutput {
	return o
}

func (o DatasetIotEventsDestinationConfigurationOutput) ToDatasetIotEventsDestinationConfigurationPtrOutput() DatasetIotEventsDestinationConfigurationPtrOutput {
	return o.ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DatasetIotEventsDestinationConfigurationOutput) ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetIotEventsDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetIotEventsDestinationConfiguration) *DatasetIotEventsDestinationConfiguration {
		return &v
	}).(DatasetIotEventsDestinationConfigurationPtrOutput)
}

// The name of the AWS IoT Events input to which dataset contents are delivered.
func (o DatasetIotEventsDestinationConfigurationOutput) InputName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetIotEventsDestinationConfiguration) string { return v.InputName }).(pulumi.StringOutput)
}

// The ARN of the role that grants AWS IoT Analytics permission to deliver dataset contents to an AWS IoT Events input.
func (o DatasetIotEventsDestinationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetIotEventsDestinationConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DatasetIotEventsDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatasetIotEventsDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetIotEventsDestinationConfiguration)(nil)).Elem()
}

func (o DatasetIotEventsDestinationConfigurationPtrOutput) ToDatasetIotEventsDestinationConfigurationPtrOutput() DatasetIotEventsDestinationConfigurationPtrOutput {
	return o
}

func (o DatasetIotEventsDestinationConfigurationPtrOutput) ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetIotEventsDestinationConfigurationPtrOutput {
	return o
}

func (o DatasetIotEventsDestinationConfigurationPtrOutput) Elem() DatasetIotEventsDestinationConfigurationOutput {
	return o.ApplyT(func(v *DatasetIotEventsDestinationConfiguration) DatasetIotEventsDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DatasetIotEventsDestinationConfiguration
		return ret
	}).(DatasetIotEventsDestinationConfigurationOutput)
}

// The name of the AWS IoT Events input to which dataset contents are delivered.
func (o DatasetIotEventsDestinationConfigurationPtrOutput) InputName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetIotEventsDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.InputName
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that grants AWS IoT Analytics permission to deliver dataset contents to an AWS IoT Events input.
func (o DatasetIotEventsDestinationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetIotEventsDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type DatasetLateDataRule struct {
	// The information needed to configure the late data rule.
	RuleConfiguration DatasetLateDataRuleConfiguration `pulumi:"ruleConfiguration"`
	// The name of the late data rule.
	RuleName *string `pulumi:"ruleName"`
}

// DatasetLateDataRuleInput is an input type that accepts DatasetLateDataRuleArgs and DatasetLateDataRuleOutput values.
// You can construct a concrete instance of `DatasetLateDataRuleInput` via:
//
//	DatasetLateDataRuleArgs{...}
type DatasetLateDataRuleInput interface {
	pulumi.Input

	ToDatasetLateDataRuleOutput() DatasetLateDataRuleOutput
	ToDatasetLateDataRuleOutputWithContext(context.Context) DatasetLateDataRuleOutput
}

type DatasetLateDataRuleArgs struct {
	// The information needed to configure the late data rule.
	RuleConfiguration DatasetLateDataRuleConfigurationInput `pulumi:"ruleConfiguration"`
	// The name of the late data rule.
	RuleName pulumi.StringPtrInput `pulumi:"ruleName"`
}

func (DatasetLateDataRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetLateDataRule)(nil)).Elem()
}

func (i DatasetLateDataRuleArgs) ToDatasetLateDataRuleOutput() DatasetLateDataRuleOutput {
	return i.ToDatasetLateDataRuleOutputWithContext(context.Background())
}

func (i DatasetLateDataRuleArgs) ToDatasetLateDataRuleOutputWithContext(ctx context.Context) DatasetLateDataRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetLateDataRuleOutput)
}

// DatasetLateDataRuleArrayInput is an input type that accepts DatasetLateDataRuleArray and DatasetLateDataRuleArrayOutput values.
// You can construct a concrete instance of `DatasetLateDataRuleArrayInput` via:
//
//	DatasetLateDataRuleArray{ DatasetLateDataRuleArgs{...} }
type DatasetLateDataRuleArrayInput interface {
	pulumi.Input

	ToDatasetLateDataRuleArrayOutput() DatasetLateDataRuleArrayOutput
	ToDatasetLateDataRuleArrayOutputWithContext(context.Context) DatasetLateDataRuleArrayOutput
}

type DatasetLateDataRuleArray []DatasetLateDataRuleInput

func (DatasetLateDataRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetLateDataRule)(nil)).Elem()
}

func (i DatasetLateDataRuleArray) ToDatasetLateDataRuleArrayOutput() DatasetLateDataRuleArrayOutput {
	return i.ToDatasetLateDataRuleArrayOutputWithContext(context.Background())
}

func (i DatasetLateDataRuleArray) ToDatasetLateDataRuleArrayOutputWithContext(ctx context.Context) DatasetLateDataRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetLateDataRuleArrayOutput)
}

type DatasetLateDataRuleOutput struct{ *pulumi.OutputState }

func (DatasetLateDataRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetLateDataRule)(nil)).Elem()
}

func (o DatasetLateDataRuleOutput) ToDatasetLateDataRuleOutput() DatasetLateDataRuleOutput {
	return o
}

func (o DatasetLateDataRuleOutput) ToDatasetLateDataRuleOutputWithContext(ctx context.Context) DatasetLateDataRuleOutput {
	return o
}

// The information needed to configure the late data rule.
func (o DatasetLateDataRuleOutput) RuleConfiguration() DatasetLateDataRuleConfigurationOutput {
	return o.ApplyT(func(v DatasetLateDataRule) DatasetLateDataRuleConfiguration { return v.RuleConfiguration }).(DatasetLateDataRuleConfigurationOutput)
}

// The name of the late data rule.
func (o DatasetLateDataRuleOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetLateDataRule) *string { return v.RuleName }).(pulumi.StringPtrOutput)
}

type DatasetLateDataRuleArrayOutput struct{ *pulumi.OutputState }

func (DatasetLateDataRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetLateDataRule)(nil)).Elem()
}

func (o DatasetLateDataRuleArrayOutput) ToDatasetLateDataRuleArrayOutput() DatasetLateDataRuleArrayOutput {
	return o
}

func (o DatasetLateDataRuleArrayOutput) ToDatasetLateDataRuleArrayOutputWithContext(ctx context.Context) DatasetLateDataRuleArrayOutput {
	return o
}

func (o DatasetLateDataRuleArrayOutput) Index(i pulumi.IntInput) DatasetLateDataRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetLateDataRule {
		return vs[0].([]DatasetLateDataRule)[vs[1].(int)]
	}).(DatasetLateDataRuleOutput)
}

type DatasetLateDataRuleConfiguration struct {
	// The information needed to configure a delta time session window.
	DeltaTimeSessionWindowConfiguration *DatasetDeltaTimeSessionWindowConfiguration `pulumi:"deltaTimeSessionWindowConfiguration"`
}

// DatasetLateDataRuleConfigurationInput is an input type that accepts DatasetLateDataRuleConfigurationArgs and DatasetLateDataRuleConfigurationOutput values.
// You can construct a concrete instance of `DatasetLateDataRuleConfigurationInput` via:
//
//	DatasetLateDataRuleConfigurationArgs{...}
type DatasetLateDataRuleConfigurationInput interface {
	pulumi.Input

	ToDatasetLateDataRuleConfigurationOutput() DatasetLateDataRuleConfigurationOutput
	ToDatasetLateDataRuleConfigurationOutputWithContext(context.Context) DatasetLateDataRuleConfigurationOutput
}

type DatasetLateDataRuleConfigurationArgs struct {
	// The information needed to configure a delta time session window.
	DeltaTimeSessionWindowConfiguration DatasetDeltaTimeSessionWindowConfigurationPtrInput `pulumi:"deltaTimeSessionWindowConfiguration"`
}

func (DatasetLateDataRuleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetLateDataRuleConfiguration)(nil)).Elem()
}

func (i DatasetLateDataRuleConfigurationArgs) ToDatasetLateDataRuleConfigurationOutput() DatasetLateDataRuleConfigurationOutput {
	return i.ToDatasetLateDataRuleConfigurationOutputWithContext(context.Background())
}

func (i DatasetLateDataRuleConfigurationArgs) ToDatasetLateDataRuleConfigurationOutputWithContext(ctx context.Context) DatasetLateDataRuleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetLateDataRuleConfigurationOutput)
}

type DatasetLateDataRuleConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetLateDataRuleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetLateDataRuleConfiguration)(nil)).Elem()
}

func (o DatasetLateDataRuleConfigurationOutput) ToDatasetLateDataRuleConfigurationOutput() DatasetLateDataRuleConfigurationOutput {
	return o
}

func (o DatasetLateDataRuleConfigurationOutput) ToDatasetLateDataRuleConfigurationOutputWithContext(ctx context.Context) DatasetLateDataRuleConfigurationOutput {
	return o
}

// The information needed to configure a delta time session window.
func (o DatasetLateDataRuleConfigurationOutput) DeltaTimeSessionWindowConfiguration() DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return o.ApplyT(func(v DatasetLateDataRuleConfiguration) *DatasetDeltaTimeSessionWindowConfiguration {
		return v.DeltaTimeSessionWindowConfiguration
	}).(DatasetDeltaTimeSessionWindowConfigurationPtrOutput)
}

type DatasetOutputFileUriValue struct {
	// The URI of the location where dataset contents are stored, usually the URI of a file in an S3 bucket.
	FileName string `pulumi:"fileName"`
}

// DatasetOutputFileUriValueInput is an input type that accepts DatasetOutputFileUriValueArgs and DatasetOutputFileUriValueOutput values.
// You can construct a concrete instance of `DatasetOutputFileUriValueInput` via:
//
//	DatasetOutputFileUriValueArgs{...}
type DatasetOutputFileUriValueInput interface {
	pulumi.Input

	ToDatasetOutputFileUriValueOutput() DatasetOutputFileUriValueOutput
	ToDatasetOutputFileUriValueOutputWithContext(context.Context) DatasetOutputFileUriValueOutput
}

type DatasetOutputFileUriValueArgs struct {
	// The URI of the location where dataset contents are stored, usually the URI of a file in an S3 bucket.
	FileName pulumi.StringInput `pulumi:"fileName"`
}

func (DatasetOutputFileUriValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetOutputFileUriValue)(nil)).Elem()
}

func (i DatasetOutputFileUriValueArgs) ToDatasetOutputFileUriValueOutput() DatasetOutputFileUriValueOutput {
	return i.ToDatasetOutputFileUriValueOutputWithContext(context.Background())
}

func (i DatasetOutputFileUriValueArgs) ToDatasetOutputFileUriValueOutputWithContext(ctx context.Context) DatasetOutputFileUriValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetOutputFileUriValueOutput)
}

func (i DatasetOutputFileUriValueArgs) ToDatasetOutputFileUriValuePtrOutput() DatasetOutputFileUriValuePtrOutput {
	return i.ToDatasetOutputFileUriValuePtrOutputWithContext(context.Background())
}

func (i DatasetOutputFileUriValueArgs) ToDatasetOutputFileUriValuePtrOutputWithContext(ctx context.Context) DatasetOutputFileUriValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetOutputFileUriValueOutput).ToDatasetOutputFileUriValuePtrOutputWithContext(ctx)
}

// DatasetOutputFileUriValuePtrInput is an input type that accepts DatasetOutputFileUriValueArgs, DatasetOutputFileUriValuePtr and DatasetOutputFileUriValuePtrOutput values.
// You can construct a concrete instance of `DatasetOutputFileUriValuePtrInput` via:
//
//	        DatasetOutputFileUriValueArgs{...}
//
//	or:
//
//	        nil
type DatasetOutputFileUriValuePtrInput interface {
	pulumi.Input

	ToDatasetOutputFileUriValuePtrOutput() DatasetOutputFileUriValuePtrOutput
	ToDatasetOutputFileUriValuePtrOutputWithContext(context.Context) DatasetOutputFileUriValuePtrOutput
}

type datasetOutputFileUriValuePtrType DatasetOutputFileUriValueArgs

func DatasetOutputFileUriValuePtr(v *DatasetOutputFileUriValueArgs) DatasetOutputFileUriValuePtrInput {
	return (*datasetOutputFileUriValuePtrType)(v)
}

func (*datasetOutputFileUriValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetOutputFileUriValue)(nil)).Elem()
}

func (i *datasetOutputFileUriValuePtrType) ToDatasetOutputFileUriValuePtrOutput() DatasetOutputFileUriValuePtrOutput {
	return i.ToDatasetOutputFileUriValuePtrOutputWithContext(context.Background())
}

func (i *datasetOutputFileUriValuePtrType) ToDatasetOutputFileUriValuePtrOutputWithContext(ctx context.Context) DatasetOutputFileUriValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetOutputFileUriValuePtrOutput)
}

type DatasetOutputFileUriValueOutput struct{ *pulumi.OutputState }

func (DatasetOutputFileUriValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetOutputFileUriValue)(nil)).Elem()
}

func (o DatasetOutputFileUriValueOutput) ToDatasetOutputFileUriValueOutput() DatasetOutputFileUriValueOutput {
	return o
}

func (o DatasetOutputFileUriValueOutput) ToDatasetOutputFileUriValueOutputWithContext(ctx context.Context) DatasetOutputFileUriValueOutput {
	return o
}

func (o DatasetOutputFileUriValueOutput) ToDatasetOutputFileUriValuePtrOutput() DatasetOutputFileUriValuePtrOutput {
	return o.ToDatasetOutputFileUriValuePtrOutputWithContext(context.Background())
}

func (o DatasetOutputFileUriValueOutput) ToDatasetOutputFileUriValuePtrOutputWithContext(ctx context.Context) DatasetOutputFileUriValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetOutputFileUriValue) *DatasetOutputFileUriValue {
		return &v
	}).(DatasetOutputFileUriValuePtrOutput)
}

// The URI of the location where dataset contents are stored, usually the URI of a file in an S3 bucket.
func (o DatasetOutputFileUriValueOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetOutputFileUriValue) string { return v.FileName }).(pulumi.StringOutput)
}

type DatasetOutputFileUriValuePtrOutput struct{ *pulumi.OutputState }

func (DatasetOutputFileUriValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetOutputFileUriValue)(nil)).Elem()
}

func (o DatasetOutputFileUriValuePtrOutput) ToDatasetOutputFileUriValuePtrOutput() DatasetOutputFileUriValuePtrOutput {
	return o
}

func (o DatasetOutputFileUriValuePtrOutput) ToDatasetOutputFileUriValuePtrOutputWithContext(ctx context.Context) DatasetOutputFileUriValuePtrOutput {
	return o
}

func (o DatasetOutputFileUriValuePtrOutput) Elem() DatasetOutputFileUriValueOutput {
	return o.ApplyT(func(v *DatasetOutputFileUriValue) DatasetOutputFileUriValue {
		if v != nil {
			return *v
		}
		var ret DatasetOutputFileUriValue
		return ret
	}).(DatasetOutputFileUriValueOutput)
}

// The URI of the location where dataset contents are stored, usually the URI of a file in an S3 bucket.
func (o DatasetOutputFileUriValuePtrOutput) FileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetOutputFileUriValue) *string {
		if v == nil {
			return nil
		}
		return &v.FileName
	}).(pulumi.StringPtrOutput)
}

type DatasetQueryAction struct {
	// Pre-filters applied to message data.
	Filters []DatasetFilter `pulumi:"filters"`
	// An "SqlQueryDatasetAction" object that uses an SQL query to automatically create data set contents.
	SqlQuery string `pulumi:"sqlQuery"`
}

// DatasetQueryActionInput is an input type that accepts DatasetQueryActionArgs and DatasetQueryActionOutput values.
// You can construct a concrete instance of `DatasetQueryActionInput` via:
//
//	DatasetQueryActionArgs{...}
type DatasetQueryActionInput interface {
	pulumi.Input

	ToDatasetQueryActionOutput() DatasetQueryActionOutput
	ToDatasetQueryActionOutputWithContext(context.Context) DatasetQueryActionOutput
}

type DatasetQueryActionArgs struct {
	// Pre-filters applied to message data.
	Filters DatasetFilterArrayInput `pulumi:"filters"`
	// An "SqlQueryDatasetAction" object that uses an SQL query to automatically create data set contents.
	SqlQuery pulumi.StringInput `pulumi:"sqlQuery"`
}

func (DatasetQueryActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetQueryAction)(nil)).Elem()
}

func (i DatasetQueryActionArgs) ToDatasetQueryActionOutput() DatasetQueryActionOutput {
	return i.ToDatasetQueryActionOutputWithContext(context.Background())
}

func (i DatasetQueryActionArgs) ToDatasetQueryActionOutputWithContext(ctx context.Context) DatasetQueryActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetQueryActionOutput)
}

func (i DatasetQueryActionArgs) ToDatasetQueryActionPtrOutput() DatasetQueryActionPtrOutput {
	return i.ToDatasetQueryActionPtrOutputWithContext(context.Background())
}

func (i DatasetQueryActionArgs) ToDatasetQueryActionPtrOutputWithContext(ctx context.Context) DatasetQueryActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetQueryActionOutput).ToDatasetQueryActionPtrOutputWithContext(ctx)
}

// DatasetQueryActionPtrInput is an input type that accepts DatasetQueryActionArgs, DatasetQueryActionPtr and DatasetQueryActionPtrOutput values.
// You can construct a concrete instance of `DatasetQueryActionPtrInput` via:
//
//	        DatasetQueryActionArgs{...}
//
//	or:
//
//	        nil
type DatasetQueryActionPtrInput interface {
	pulumi.Input

	ToDatasetQueryActionPtrOutput() DatasetQueryActionPtrOutput
	ToDatasetQueryActionPtrOutputWithContext(context.Context) DatasetQueryActionPtrOutput
}

type datasetQueryActionPtrType DatasetQueryActionArgs

func DatasetQueryActionPtr(v *DatasetQueryActionArgs) DatasetQueryActionPtrInput {
	return (*datasetQueryActionPtrType)(v)
}

func (*datasetQueryActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetQueryAction)(nil)).Elem()
}

func (i *datasetQueryActionPtrType) ToDatasetQueryActionPtrOutput() DatasetQueryActionPtrOutput {
	return i.ToDatasetQueryActionPtrOutputWithContext(context.Background())
}

func (i *datasetQueryActionPtrType) ToDatasetQueryActionPtrOutputWithContext(ctx context.Context) DatasetQueryActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetQueryActionPtrOutput)
}

type DatasetQueryActionOutput struct{ *pulumi.OutputState }

func (DatasetQueryActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetQueryAction)(nil)).Elem()
}

func (o DatasetQueryActionOutput) ToDatasetQueryActionOutput() DatasetQueryActionOutput {
	return o
}

func (o DatasetQueryActionOutput) ToDatasetQueryActionOutputWithContext(ctx context.Context) DatasetQueryActionOutput {
	return o
}

func (o DatasetQueryActionOutput) ToDatasetQueryActionPtrOutput() DatasetQueryActionPtrOutput {
	return o.ToDatasetQueryActionPtrOutputWithContext(context.Background())
}

func (o DatasetQueryActionOutput) ToDatasetQueryActionPtrOutputWithContext(ctx context.Context) DatasetQueryActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetQueryAction) *DatasetQueryAction {
		return &v
	}).(DatasetQueryActionPtrOutput)
}

// Pre-filters applied to message data.
func (o DatasetQueryActionOutput) Filters() DatasetFilterArrayOutput {
	return o.ApplyT(func(v DatasetQueryAction) []DatasetFilter { return v.Filters }).(DatasetFilterArrayOutput)
}

// An "SqlQueryDatasetAction" object that uses an SQL query to automatically create data set contents.
func (o DatasetQueryActionOutput) SqlQuery() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetQueryAction) string { return v.SqlQuery }).(pulumi.StringOutput)
}

type DatasetQueryActionPtrOutput struct{ *pulumi.OutputState }

func (DatasetQueryActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetQueryAction)(nil)).Elem()
}

func (o DatasetQueryActionPtrOutput) ToDatasetQueryActionPtrOutput() DatasetQueryActionPtrOutput {
	return o
}

func (o DatasetQueryActionPtrOutput) ToDatasetQueryActionPtrOutputWithContext(ctx context.Context) DatasetQueryActionPtrOutput {
	return o
}

func (o DatasetQueryActionPtrOutput) Elem() DatasetQueryActionOutput {
	return o.ApplyT(func(v *DatasetQueryAction) DatasetQueryAction {
		if v != nil {
			return *v
		}
		var ret DatasetQueryAction
		return ret
	}).(DatasetQueryActionOutput)
}

// Pre-filters applied to message data.
func (o DatasetQueryActionPtrOutput) Filters() DatasetFilterArrayOutput {
	return o.ApplyT(func(v *DatasetQueryAction) []DatasetFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(DatasetFilterArrayOutput)
}

// An "SqlQueryDatasetAction" object that uses an SQL query to automatically create data set contents.
func (o DatasetQueryActionPtrOutput) SqlQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetQueryAction) *string {
		if v == nil {
			return nil
		}
		return &v.SqlQuery
	}).(pulumi.StringPtrOutput)
}

type DatasetResourceConfiguration struct {
	// The type of the compute resource used to execute the `containerAction` . Possible values are: `ACU_1` (vCPU=4, memory=16 GiB) or `ACU_2` (vCPU=8, memory=32 GiB).
	ComputeType DatasetResourceConfigurationComputeType `pulumi:"computeType"`
	// The size, in GB, of the persistent storage available to the resource instance used to execute the `containerAction` (min: 1, max: 50).
	VolumeSizeInGb int `pulumi:"volumeSizeInGb"`
}

// DatasetResourceConfigurationInput is an input type that accepts DatasetResourceConfigurationArgs and DatasetResourceConfigurationOutput values.
// You can construct a concrete instance of `DatasetResourceConfigurationInput` via:
//
//	DatasetResourceConfigurationArgs{...}
type DatasetResourceConfigurationInput interface {
	pulumi.Input

	ToDatasetResourceConfigurationOutput() DatasetResourceConfigurationOutput
	ToDatasetResourceConfigurationOutputWithContext(context.Context) DatasetResourceConfigurationOutput
}

type DatasetResourceConfigurationArgs struct {
	// The type of the compute resource used to execute the `containerAction` . Possible values are: `ACU_1` (vCPU=4, memory=16 GiB) or `ACU_2` (vCPU=8, memory=32 GiB).
	ComputeType DatasetResourceConfigurationComputeTypeInput `pulumi:"computeType"`
	// The size, in GB, of the persistent storage available to the resource instance used to execute the `containerAction` (min: 1, max: 50).
	VolumeSizeInGb pulumi.IntInput `pulumi:"volumeSizeInGb"`
}

func (DatasetResourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetResourceConfiguration)(nil)).Elem()
}

func (i DatasetResourceConfigurationArgs) ToDatasetResourceConfigurationOutput() DatasetResourceConfigurationOutput {
	return i.ToDatasetResourceConfigurationOutputWithContext(context.Background())
}

func (i DatasetResourceConfigurationArgs) ToDatasetResourceConfigurationOutputWithContext(ctx context.Context) DatasetResourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResourceConfigurationOutput)
}

func (i DatasetResourceConfigurationArgs) ToDatasetResourceConfigurationPtrOutput() DatasetResourceConfigurationPtrOutput {
	return i.ToDatasetResourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DatasetResourceConfigurationArgs) ToDatasetResourceConfigurationPtrOutputWithContext(ctx context.Context) DatasetResourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResourceConfigurationOutput).ToDatasetResourceConfigurationPtrOutputWithContext(ctx)
}

// DatasetResourceConfigurationPtrInput is an input type that accepts DatasetResourceConfigurationArgs, DatasetResourceConfigurationPtr and DatasetResourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DatasetResourceConfigurationPtrInput` via:
//
//	        DatasetResourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DatasetResourceConfigurationPtrInput interface {
	pulumi.Input

	ToDatasetResourceConfigurationPtrOutput() DatasetResourceConfigurationPtrOutput
	ToDatasetResourceConfigurationPtrOutputWithContext(context.Context) DatasetResourceConfigurationPtrOutput
}

type datasetResourceConfigurationPtrType DatasetResourceConfigurationArgs

func DatasetResourceConfigurationPtr(v *DatasetResourceConfigurationArgs) DatasetResourceConfigurationPtrInput {
	return (*datasetResourceConfigurationPtrType)(v)
}

func (*datasetResourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetResourceConfiguration)(nil)).Elem()
}

func (i *datasetResourceConfigurationPtrType) ToDatasetResourceConfigurationPtrOutput() DatasetResourceConfigurationPtrOutput {
	return i.ToDatasetResourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *datasetResourceConfigurationPtrType) ToDatasetResourceConfigurationPtrOutputWithContext(ctx context.Context) DatasetResourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResourceConfigurationPtrOutput)
}

type DatasetResourceConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetResourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetResourceConfiguration)(nil)).Elem()
}

func (o DatasetResourceConfigurationOutput) ToDatasetResourceConfigurationOutput() DatasetResourceConfigurationOutput {
	return o
}

func (o DatasetResourceConfigurationOutput) ToDatasetResourceConfigurationOutputWithContext(ctx context.Context) DatasetResourceConfigurationOutput {
	return o
}

func (o DatasetResourceConfigurationOutput) ToDatasetResourceConfigurationPtrOutput() DatasetResourceConfigurationPtrOutput {
	return o.ToDatasetResourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DatasetResourceConfigurationOutput) ToDatasetResourceConfigurationPtrOutputWithContext(ctx context.Context) DatasetResourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetResourceConfiguration) *DatasetResourceConfiguration {
		return &v
	}).(DatasetResourceConfigurationPtrOutput)
}

// The type of the compute resource used to execute the `containerAction` . Possible values are: `ACU_1` (vCPU=4, memory=16 GiB) or `ACU_2` (vCPU=8, memory=32 GiB).
func (o DatasetResourceConfigurationOutput) ComputeType() DatasetResourceConfigurationComputeTypeOutput {
	return o.ApplyT(func(v DatasetResourceConfiguration) DatasetResourceConfigurationComputeType { return v.ComputeType }).(DatasetResourceConfigurationComputeTypeOutput)
}

// The size, in GB, of the persistent storage available to the resource instance used to execute the `containerAction` (min: 1, max: 50).
func (o DatasetResourceConfigurationOutput) VolumeSizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v DatasetResourceConfiguration) int { return v.VolumeSizeInGb }).(pulumi.IntOutput)
}

type DatasetResourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatasetResourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetResourceConfiguration)(nil)).Elem()
}

func (o DatasetResourceConfigurationPtrOutput) ToDatasetResourceConfigurationPtrOutput() DatasetResourceConfigurationPtrOutput {
	return o
}

func (o DatasetResourceConfigurationPtrOutput) ToDatasetResourceConfigurationPtrOutputWithContext(ctx context.Context) DatasetResourceConfigurationPtrOutput {
	return o
}

func (o DatasetResourceConfigurationPtrOutput) Elem() DatasetResourceConfigurationOutput {
	return o.ApplyT(func(v *DatasetResourceConfiguration) DatasetResourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DatasetResourceConfiguration
		return ret
	}).(DatasetResourceConfigurationOutput)
}

// The type of the compute resource used to execute the `containerAction` . Possible values are: `ACU_1` (vCPU=4, memory=16 GiB) or `ACU_2` (vCPU=8, memory=32 GiB).
func (o DatasetResourceConfigurationPtrOutput) ComputeType() DatasetResourceConfigurationComputeTypePtrOutput {
	return o.ApplyT(func(v *DatasetResourceConfiguration) *DatasetResourceConfigurationComputeType {
		if v == nil {
			return nil
		}
		return &v.ComputeType
	}).(DatasetResourceConfigurationComputeTypePtrOutput)
}

// The size, in GB, of the persistent storage available to the resource instance used to execute the `containerAction` (min: 1, max: 50).
func (o DatasetResourceConfigurationPtrOutput) VolumeSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatasetResourceConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.VolumeSizeInGb
	}).(pulumi.IntPtrOutput)
}

type DatasetRetentionPeriod struct {
	// The number of days that message data is kept. The `unlimited` parameter must be false.
	NumberOfDays *int `pulumi:"numberOfDays"`
	// If true, message data is kept indefinitely.
	Unlimited *bool `pulumi:"unlimited"`
}

// DatasetRetentionPeriodInput is an input type that accepts DatasetRetentionPeriodArgs and DatasetRetentionPeriodOutput values.
// You can construct a concrete instance of `DatasetRetentionPeriodInput` via:
//
//	DatasetRetentionPeriodArgs{...}
type DatasetRetentionPeriodInput interface {
	pulumi.Input

	ToDatasetRetentionPeriodOutput() DatasetRetentionPeriodOutput
	ToDatasetRetentionPeriodOutputWithContext(context.Context) DatasetRetentionPeriodOutput
}

type DatasetRetentionPeriodArgs struct {
	// The number of days that message data is kept. The `unlimited` parameter must be false.
	NumberOfDays pulumi.IntPtrInput `pulumi:"numberOfDays"`
	// If true, message data is kept indefinitely.
	Unlimited pulumi.BoolPtrInput `pulumi:"unlimited"`
}

func (DatasetRetentionPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetRetentionPeriod)(nil)).Elem()
}

func (i DatasetRetentionPeriodArgs) ToDatasetRetentionPeriodOutput() DatasetRetentionPeriodOutput {
	return i.ToDatasetRetentionPeriodOutputWithContext(context.Background())
}

func (i DatasetRetentionPeriodArgs) ToDatasetRetentionPeriodOutputWithContext(ctx context.Context) DatasetRetentionPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetRetentionPeriodOutput)
}

func (i DatasetRetentionPeriodArgs) ToDatasetRetentionPeriodPtrOutput() DatasetRetentionPeriodPtrOutput {
	return i.ToDatasetRetentionPeriodPtrOutputWithContext(context.Background())
}

func (i DatasetRetentionPeriodArgs) ToDatasetRetentionPeriodPtrOutputWithContext(ctx context.Context) DatasetRetentionPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetRetentionPeriodOutput).ToDatasetRetentionPeriodPtrOutputWithContext(ctx)
}

// DatasetRetentionPeriodPtrInput is an input type that accepts DatasetRetentionPeriodArgs, DatasetRetentionPeriodPtr and DatasetRetentionPeriodPtrOutput values.
// You can construct a concrete instance of `DatasetRetentionPeriodPtrInput` via:
//
//	        DatasetRetentionPeriodArgs{...}
//
//	or:
//
//	        nil
type DatasetRetentionPeriodPtrInput interface {
	pulumi.Input

	ToDatasetRetentionPeriodPtrOutput() DatasetRetentionPeriodPtrOutput
	ToDatasetRetentionPeriodPtrOutputWithContext(context.Context) DatasetRetentionPeriodPtrOutput
}

type datasetRetentionPeriodPtrType DatasetRetentionPeriodArgs

func DatasetRetentionPeriodPtr(v *DatasetRetentionPeriodArgs) DatasetRetentionPeriodPtrInput {
	return (*datasetRetentionPeriodPtrType)(v)
}

func (*datasetRetentionPeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetRetentionPeriod)(nil)).Elem()
}

func (i *datasetRetentionPeriodPtrType) ToDatasetRetentionPeriodPtrOutput() DatasetRetentionPeriodPtrOutput {
	return i.ToDatasetRetentionPeriodPtrOutputWithContext(context.Background())
}

func (i *datasetRetentionPeriodPtrType) ToDatasetRetentionPeriodPtrOutputWithContext(ctx context.Context) DatasetRetentionPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetRetentionPeriodPtrOutput)
}

type DatasetRetentionPeriodOutput struct{ *pulumi.OutputState }

func (DatasetRetentionPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetRetentionPeriod)(nil)).Elem()
}

func (o DatasetRetentionPeriodOutput) ToDatasetRetentionPeriodOutput() DatasetRetentionPeriodOutput {
	return o
}

func (o DatasetRetentionPeriodOutput) ToDatasetRetentionPeriodOutputWithContext(ctx context.Context) DatasetRetentionPeriodOutput {
	return o
}

func (o DatasetRetentionPeriodOutput) ToDatasetRetentionPeriodPtrOutput() DatasetRetentionPeriodPtrOutput {
	return o.ToDatasetRetentionPeriodPtrOutputWithContext(context.Background())
}

func (o DatasetRetentionPeriodOutput) ToDatasetRetentionPeriodPtrOutputWithContext(ctx context.Context) DatasetRetentionPeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetRetentionPeriod) *DatasetRetentionPeriod {
		return &v
	}).(DatasetRetentionPeriodPtrOutput)
}

// The number of days that message data is kept. The `unlimited` parameter must be false.
func (o DatasetRetentionPeriodOutput) NumberOfDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatasetRetentionPeriod) *int { return v.NumberOfDays }).(pulumi.IntPtrOutput)
}

// If true, message data is kept indefinitely.
func (o DatasetRetentionPeriodOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetRetentionPeriod) *bool { return v.Unlimited }).(pulumi.BoolPtrOutput)
}

type DatasetRetentionPeriodPtrOutput struct{ *pulumi.OutputState }

func (DatasetRetentionPeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetRetentionPeriod)(nil)).Elem()
}

func (o DatasetRetentionPeriodPtrOutput) ToDatasetRetentionPeriodPtrOutput() DatasetRetentionPeriodPtrOutput {
	return o
}

func (o DatasetRetentionPeriodPtrOutput) ToDatasetRetentionPeriodPtrOutputWithContext(ctx context.Context) DatasetRetentionPeriodPtrOutput {
	return o
}

func (o DatasetRetentionPeriodPtrOutput) Elem() DatasetRetentionPeriodOutput {
	return o.ApplyT(func(v *DatasetRetentionPeriod) DatasetRetentionPeriod {
		if v != nil {
			return *v
		}
		var ret DatasetRetentionPeriod
		return ret
	}).(DatasetRetentionPeriodOutput)
}

// The number of days that message data is kept. The `unlimited` parameter must be false.
func (o DatasetRetentionPeriodPtrOutput) NumberOfDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatasetRetentionPeriod) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfDays
	}).(pulumi.IntPtrOutput)
}

// If true, message data is kept indefinitely.
func (o DatasetRetentionPeriodPtrOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetRetentionPeriod) *bool {
		if v == nil {
			return nil
		}
		return v.Unlimited
	}).(pulumi.BoolPtrOutput)
}

type DatasetS3DestinationConfiguration struct {
	// The name of the S3 bucket to which dataset contents are delivered.
	Bucket string `pulumi:"bucket"`
	// Configuration information for coordination with AWS Glue , a fully managed extract, transform and load (ETL) service.
	GlueConfiguration *DatasetGlueConfiguration `pulumi:"glueConfiguration"`
	// The key of the dataset contents object in an S3 bucket. Each object has a key that is a unique identifier. Each object has exactly one key.
	//
	// You can create a unique key with the following options:
	//
	// - Use `!{iotanalytics:scheduleTime}` to insert the time of a scheduled SQL query run.
	// - Use `!{iotanalytics:versionId}` to insert a unique hash that identifies a dataset content.
	// - Use `!{iotanalytics:creationTime}` to insert the creation time of a dataset content.
	//
	// The following example creates a unique key for a CSV file: `dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv`
	//
	// > If you don't use `!{iotanalytics:versionId}` to specify the key, you might get duplicate keys. For example, you might have two dataset contents with the same `scheduleTime` but different `versionId` s. This means that one dataset content overwrites the other.
	Key string `pulumi:"key"`
	// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 and AWS Glue resources.
	RoleArn string `pulumi:"roleArn"`
}

// DatasetS3DestinationConfigurationInput is an input type that accepts DatasetS3DestinationConfigurationArgs and DatasetS3DestinationConfigurationOutput values.
// You can construct a concrete instance of `DatasetS3DestinationConfigurationInput` via:
//
//	DatasetS3DestinationConfigurationArgs{...}
type DatasetS3DestinationConfigurationInput interface {
	pulumi.Input

	ToDatasetS3DestinationConfigurationOutput() DatasetS3DestinationConfigurationOutput
	ToDatasetS3DestinationConfigurationOutputWithContext(context.Context) DatasetS3DestinationConfigurationOutput
}

type DatasetS3DestinationConfigurationArgs struct {
	// The name of the S3 bucket to which dataset contents are delivered.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Configuration information for coordination with AWS Glue , a fully managed extract, transform and load (ETL) service.
	GlueConfiguration DatasetGlueConfigurationPtrInput `pulumi:"glueConfiguration"`
	// The key of the dataset contents object in an S3 bucket. Each object has a key that is a unique identifier. Each object has exactly one key.
	//
	// You can create a unique key with the following options:
	//
	// - Use `!{iotanalytics:scheduleTime}` to insert the time of a scheduled SQL query run.
	// - Use `!{iotanalytics:versionId}` to insert a unique hash that identifies a dataset content.
	// - Use `!{iotanalytics:creationTime}` to insert the creation time of a dataset content.
	//
	// The following example creates a unique key for a CSV file: `dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv`
	//
	// > If you don't use `!{iotanalytics:versionId}` to specify the key, you might get duplicate keys. For example, you might have two dataset contents with the same `scheduleTime` but different `versionId` s. This means that one dataset content overwrites the other.
	Key pulumi.StringInput `pulumi:"key"`
	// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 and AWS Glue resources.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (DatasetS3DestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetS3DestinationConfiguration)(nil)).Elem()
}

func (i DatasetS3DestinationConfigurationArgs) ToDatasetS3DestinationConfigurationOutput() DatasetS3DestinationConfigurationOutput {
	return i.ToDatasetS3DestinationConfigurationOutputWithContext(context.Background())
}

func (i DatasetS3DestinationConfigurationArgs) ToDatasetS3DestinationConfigurationOutputWithContext(ctx context.Context) DatasetS3DestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetS3DestinationConfigurationOutput)
}

func (i DatasetS3DestinationConfigurationArgs) ToDatasetS3DestinationConfigurationPtrOutput() DatasetS3DestinationConfigurationPtrOutput {
	return i.ToDatasetS3DestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DatasetS3DestinationConfigurationArgs) ToDatasetS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetS3DestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetS3DestinationConfigurationOutput).ToDatasetS3DestinationConfigurationPtrOutputWithContext(ctx)
}

// DatasetS3DestinationConfigurationPtrInput is an input type that accepts DatasetS3DestinationConfigurationArgs, DatasetS3DestinationConfigurationPtr and DatasetS3DestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DatasetS3DestinationConfigurationPtrInput` via:
//
//	        DatasetS3DestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DatasetS3DestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDatasetS3DestinationConfigurationPtrOutput() DatasetS3DestinationConfigurationPtrOutput
	ToDatasetS3DestinationConfigurationPtrOutputWithContext(context.Context) DatasetS3DestinationConfigurationPtrOutput
}

type datasetS3DestinationConfigurationPtrType DatasetS3DestinationConfigurationArgs

func DatasetS3DestinationConfigurationPtr(v *DatasetS3DestinationConfigurationArgs) DatasetS3DestinationConfigurationPtrInput {
	return (*datasetS3DestinationConfigurationPtrType)(v)
}

func (*datasetS3DestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetS3DestinationConfiguration)(nil)).Elem()
}

func (i *datasetS3DestinationConfigurationPtrType) ToDatasetS3DestinationConfigurationPtrOutput() DatasetS3DestinationConfigurationPtrOutput {
	return i.ToDatasetS3DestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *datasetS3DestinationConfigurationPtrType) ToDatasetS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetS3DestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetS3DestinationConfigurationPtrOutput)
}

type DatasetS3DestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetS3DestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetS3DestinationConfiguration)(nil)).Elem()
}

func (o DatasetS3DestinationConfigurationOutput) ToDatasetS3DestinationConfigurationOutput() DatasetS3DestinationConfigurationOutput {
	return o
}

func (o DatasetS3DestinationConfigurationOutput) ToDatasetS3DestinationConfigurationOutputWithContext(ctx context.Context) DatasetS3DestinationConfigurationOutput {
	return o
}

func (o DatasetS3DestinationConfigurationOutput) ToDatasetS3DestinationConfigurationPtrOutput() DatasetS3DestinationConfigurationPtrOutput {
	return o.ToDatasetS3DestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DatasetS3DestinationConfigurationOutput) ToDatasetS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetS3DestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetS3DestinationConfiguration) *DatasetS3DestinationConfiguration {
		return &v
	}).(DatasetS3DestinationConfigurationPtrOutput)
}

// The name of the S3 bucket to which dataset contents are delivered.
func (o DatasetS3DestinationConfigurationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetS3DestinationConfiguration) string { return v.Bucket }).(pulumi.StringOutput)
}

// Configuration information for coordination with AWS Glue , a fully managed extract, transform and load (ETL) service.
func (o DatasetS3DestinationConfigurationOutput) GlueConfiguration() DatasetGlueConfigurationPtrOutput {
	return o.ApplyT(func(v DatasetS3DestinationConfiguration) *DatasetGlueConfiguration { return v.GlueConfiguration }).(DatasetGlueConfigurationPtrOutput)
}

// The key of the dataset contents object in an S3 bucket. Each object has a key that is a unique identifier. Each object has exactly one key.
//
// You can create a unique key with the following options:
//
// - Use `!{iotanalytics:scheduleTime}` to insert the time of a scheduled SQL query run.
// - Use `!{iotanalytics:versionId}` to insert a unique hash that identifies a dataset content.
// - Use `!{iotanalytics:creationTime}` to insert the creation time of a dataset content.
//
// The following example creates a unique key for a CSV file: `dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv`
//
// > If you don't use `!{iotanalytics:versionId}` to specify the key, you might get duplicate keys. For example, you might have two dataset contents with the same `scheduleTime` but different `versionId` s. This means that one dataset content overwrites the other.
func (o DatasetS3DestinationConfigurationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetS3DestinationConfiguration) string { return v.Key }).(pulumi.StringOutput)
}

// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 and AWS Glue resources.
func (o DatasetS3DestinationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetS3DestinationConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DatasetS3DestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatasetS3DestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetS3DestinationConfiguration)(nil)).Elem()
}

func (o DatasetS3DestinationConfigurationPtrOutput) ToDatasetS3DestinationConfigurationPtrOutput() DatasetS3DestinationConfigurationPtrOutput {
	return o
}

func (o DatasetS3DestinationConfigurationPtrOutput) ToDatasetS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetS3DestinationConfigurationPtrOutput {
	return o
}

func (o DatasetS3DestinationConfigurationPtrOutput) Elem() DatasetS3DestinationConfigurationOutput {
	return o.ApplyT(func(v *DatasetS3DestinationConfiguration) DatasetS3DestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DatasetS3DestinationConfiguration
		return ret
	}).(DatasetS3DestinationConfigurationOutput)
}

// The name of the S3 bucket to which dataset contents are delivered.
func (o DatasetS3DestinationConfigurationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Configuration information for coordination with AWS Glue , a fully managed extract, transform and load (ETL) service.
func (o DatasetS3DestinationConfigurationPtrOutput) GlueConfiguration() DatasetGlueConfigurationPtrOutput {
	return o.ApplyT(func(v *DatasetS3DestinationConfiguration) *DatasetGlueConfiguration {
		if v == nil {
			return nil
		}
		return v.GlueConfiguration
	}).(DatasetGlueConfigurationPtrOutput)
}

// The key of the dataset contents object in an S3 bucket. Each object has a key that is a unique identifier. Each object has exactly one key.
//
// You can create a unique key with the following options:
//
// - Use `!{iotanalytics:scheduleTime}` to insert the time of a scheduled SQL query run.
// - Use `!{iotanalytics:versionId}` to insert a unique hash that identifies a dataset content.
// - Use `!{iotanalytics:creationTime}` to insert the creation time of a dataset content.
//
// The following example creates a unique key for a CSV file: `dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv`
//
// > If you don't use `!{iotanalytics:versionId}` to specify the key, you might get duplicate keys. For example, you might have two dataset contents with the same `scheduleTime` but different `versionId` s. This means that one dataset content overwrites the other.
func (o DatasetS3DestinationConfigurationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 and AWS Glue resources.
func (o DatasetS3DestinationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type DatasetSchedule struct {
	// The expression that defines when to trigger an update. For more information, see [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html) in the Amazon CloudWatch documentation.
	ScheduleExpression string `pulumi:"scheduleExpression"`
}

// DatasetScheduleInput is an input type that accepts DatasetScheduleArgs and DatasetScheduleOutput values.
// You can construct a concrete instance of `DatasetScheduleInput` via:
//
//	DatasetScheduleArgs{...}
type DatasetScheduleInput interface {
	pulumi.Input

	ToDatasetScheduleOutput() DatasetScheduleOutput
	ToDatasetScheduleOutputWithContext(context.Context) DatasetScheduleOutput
}

type DatasetScheduleArgs struct {
	// The expression that defines when to trigger an update. For more information, see [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html) in the Amazon CloudWatch documentation.
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
}

func (DatasetScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetSchedule)(nil)).Elem()
}

func (i DatasetScheduleArgs) ToDatasetScheduleOutput() DatasetScheduleOutput {
	return i.ToDatasetScheduleOutputWithContext(context.Background())
}

func (i DatasetScheduleArgs) ToDatasetScheduleOutputWithContext(ctx context.Context) DatasetScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetScheduleOutput)
}

func (i DatasetScheduleArgs) ToDatasetSchedulePtrOutput() DatasetSchedulePtrOutput {
	return i.ToDatasetSchedulePtrOutputWithContext(context.Background())
}

func (i DatasetScheduleArgs) ToDatasetSchedulePtrOutputWithContext(ctx context.Context) DatasetSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetScheduleOutput).ToDatasetSchedulePtrOutputWithContext(ctx)
}

// DatasetSchedulePtrInput is an input type that accepts DatasetScheduleArgs, DatasetSchedulePtr and DatasetSchedulePtrOutput values.
// You can construct a concrete instance of `DatasetSchedulePtrInput` via:
//
//	        DatasetScheduleArgs{...}
//
//	or:
//
//	        nil
type DatasetSchedulePtrInput interface {
	pulumi.Input

	ToDatasetSchedulePtrOutput() DatasetSchedulePtrOutput
	ToDatasetSchedulePtrOutputWithContext(context.Context) DatasetSchedulePtrOutput
}

type datasetSchedulePtrType DatasetScheduleArgs

func DatasetSchedulePtr(v *DatasetScheduleArgs) DatasetSchedulePtrInput {
	return (*datasetSchedulePtrType)(v)
}

func (*datasetSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetSchedule)(nil)).Elem()
}

func (i *datasetSchedulePtrType) ToDatasetSchedulePtrOutput() DatasetSchedulePtrOutput {
	return i.ToDatasetSchedulePtrOutputWithContext(context.Background())
}

func (i *datasetSchedulePtrType) ToDatasetSchedulePtrOutputWithContext(ctx context.Context) DatasetSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetSchedulePtrOutput)
}

type DatasetScheduleOutput struct{ *pulumi.OutputState }

func (DatasetScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetSchedule)(nil)).Elem()
}

func (o DatasetScheduleOutput) ToDatasetScheduleOutput() DatasetScheduleOutput {
	return o
}

func (o DatasetScheduleOutput) ToDatasetScheduleOutputWithContext(ctx context.Context) DatasetScheduleOutput {
	return o
}

func (o DatasetScheduleOutput) ToDatasetSchedulePtrOutput() DatasetSchedulePtrOutput {
	return o.ToDatasetSchedulePtrOutputWithContext(context.Background())
}

func (o DatasetScheduleOutput) ToDatasetSchedulePtrOutputWithContext(ctx context.Context) DatasetSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetSchedule) *DatasetSchedule {
		return &v
	}).(DatasetSchedulePtrOutput)
}

// The expression that defines when to trigger an update. For more information, see [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html) in the Amazon CloudWatch documentation.
func (o DatasetScheduleOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetSchedule) string { return v.ScheduleExpression }).(pulumi.StringOutput)
}

type DatasetSchedulePtrOutput struct{ *pulumi.OutputState }

func (DatasetSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetSchedule)(nil)).Elem()
}

func (o DatasetSchedulePtrOutput) ToDatasetSchedulePtrOutput() DatasetSchedulePtrOutput {
	return o
}

func (o DatasetSchedulePtrOutput) ToDatasetSchedulePtrOutputWithContext(ctx context.Context) DatasetSchedulePtrOutput {
	return o
}

func (o DatasetSchedulePtrOutput) Elem() DatasetScheduleOutput {
	return o.ApplyT(func(v *DatasetSchedule) DatasetSchedule {
		if v != nil {
			return *v
		}
		var ret DatasetSchedule
		return ret
	}).(DatasetScheduleOutput)
}

// The expression that defines when to trigger an update. For more information, see [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html) in the Amazon CloudWatch documentation.
func (o DatasetSchedulePtrOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleExpression
	}).(pulumi.StringPtrOutput)
}

type DatasetTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

type DatasetTrigger struct {
	// The "Schedule" when the trigger is initiated.
	Schedule *DatasetSchedule `pulumi:"schedule"`
	// Information about the data set whose content generation triggers the new data set content generation.
	TriggeringDataset *DatasetTriggeringDataset `pulumi:"triggeringDataset"`
}

// DatasetTriggerInput is an input type that accepts DatasetTriggerArgs and DatasetTriggerOutput values.
// You can construct a concrete instance of `DatasetTriggerInput` via:
//
//	DatasetTriggerArgs{...}
type DatasetTriggerInput interface {
	pulumi.Input

	ToDatasetTriggerOutput() DatasetTriggerOutput
	ToDatasetTriggerOutputWithContext(context.Context) DatasetTriggerOutput
}

type DatasetTriggerArgs struct {
	// The "Schedule" when the trigger is initiated.
	Schedule DatasetSchedulePtrInput `pulumi:"schedule"`
	// Information about the data set whose content generation triggers the new data set content generation.
	TriggeringDataset DatasetTriggeringDatasetPtrInput `pulumi:"triggeringDataset"`
}

func (DatasetTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetTrigger)(nil)).Elem()
}

func (i DatasetTriggerArgs) ToDatasetTriggerOutput() DatasetTriggerOutput {
	return i.ToDatasetTriggerOutputWithContext(context.Background())
}

func (i DatasetTriggerArgs) ToDatasetTriggerOutputWithContext(ctx context.Context) DatasetTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetTriggerOutput)
}

// DatasetTriggerArrayInput is an input type that accepts DatasetTriggerArray and DatasetTriggerArrayOutput values.
// You can construct a concrete instance of `DatasetTriggerArrayInput` via:
//
//	DatasetTriggerArray{ DatasetTriggerArgs{...} }
type DatasetTriggerArrayInput interface {
	pulumi.Input

	ToDatasetTriggerArrayOutput() DatasetTriggerArrayOutput
	ToDatasetTriggerArrayOutputWithContext(context.Context) DatasetTriggerArrayOutput
}

type DatasetTriggerArray []DatasetTriggerInput

func (DatasetTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetTrigger)(nil)).Elem()
}

func (i DatasetTriggerArray) ToDatasetTriggerArrayOutput() DatasetTriggerArrayOutput {
	return i.ToDatasetTriggerArrayOutputWithContext(context.Background())
}

func (i DatasetTriggerArray) ToDatasetTriggerArrayOutputWithContext(ctx context.Context) DatasetTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetTriggerArrayOutput)
}

type DatasetTriggerOutput struct{ *pulumi.OutputState }

func (DatasetTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetTrigger)(nil)).Elem()
}

func (o DatasetTriggerOutput) ToDatasetTriggerOutput() DatasetTriggerOutput {
	return o
}

func (o DatasetTriggerOutput) ToDatasetTriggerOutputWithContext(ctx context.Context) DatasetTriggerOutput {
	return o
}

// The "Schedule" when the trigger is initiated.
func (o DatasetTriggerOutput) Schedule() DatasetSchedulePtrOutput {
	return o.ApplyT(func(v DatasetTrigger) *DatasetSchedule { return v.Schedule }).(DatasetSchedulePtrOutput)
}

// Information about the data set whose content generation triggers the new data set content generation.
func (o DatasetTriggerOutput) TriggeringDataset() DatasetTriggeringDatasetPtrOutput {
	return o.ApplyT(func(v DatasetTrigger) *DatasetTriggeringDataset { return v.TriggeringDataset }).(DatasetTriggeringDatasetPtrOutput)
}

type DatasetTriggerArrayOutput struct{ *pulumi.OutputState }

func (DatasetTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetTrigger)(nil)).Elem()
}

func (o DatasetTriggerArrayOutput) ToDatasetTriggerArrayOutput() DatasetTriggerArrayOutput {
	return o
}

func (o DatasetTriggerArrayOutput) ToDatasetTriggerArrayOutputWithContext(ctx context.Context) DatasetTriggerArrayOutput {
	return o
}

func (o DatasetTriggerArrayOutput) Index(i pulumi.IntInput) DatasetTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetTrigger {
		return vs[0].([]DatasetTrigger)[vs[1].(int)]
	}).(DatasetTriggerOutput)
}

type DatasetTriggeringDataset struct {
	// The name of the data set whose content generation triggers the new data set content generation.
	DatasetName string `pulumi:"datasetName"`
}

// DatasetTriggeringDatasetInput is an input type that accepts DatasetTriggeringDatasetArgs and DatasetTriggeringDatasetOutput values.
// You can construct a concrete instance of `DatasetTriggeringDatasetInput` via:
//
//	DatasetTriggeringDatasetArgs{...}
type DatasetTriggeringDatasetInput interface {
	pulumi.Input

	ToDatasetTriggeringDatasetOutput() DatasetTriggeringDatasetOutput
	ToDatasetTriggeringDatasetOutputWithContext(context.Context) DatasetTriggeringDatasetOutput
}

type DatasetTriggeringDatasetArgs struct {
	// The name of the data set whose content generation triggers the new data set content generation.
	DatasetName pulumi.StringInput `pulumi:"datasetName"`
}

func (DatasetTriggeringDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetTriggeringDataset)(nil)).Elem()
}

func (i DatasetTriggeringDatasetArgs) ToDatasetTriggeringDatasetOutput() DatasetTriggeringDatasetOutput {
	return i.ToDatasetTriggeringDatasetOutputWithContext(context.Background())
}

func (i DatasetTriggeringDatasetArgs) ToDatasetTriggeringDatasetOutputWithContext(ctx context.Context) DatasetTriggeringDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetTriggeringDatasetOutput)
}

func (i DatasetTriggeringDatasetArgs) ToDatasetTriggeringDatasetPtrOutput() DatasetTriggeringDatasetPtrOutput {
	return i.ToDatasetTriggeringDatasetPtrOutputWithContext(context.Background())
}

func (i DatasetTriggeringDatasetArgs) ToDatasetTriggeringDatasetPtrOutputWithContext(ctx context.Context) DatasetTriggeringDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetTriggeringDatasetOutput).ToDatasetTriggeringDatasetPtrOutputWithContext(ctx)
}

// DatasetTriggeringDatasetPtrInput is an input type that accepts DatasetTriggeringDatasetArgs, DatasetTriggeringDatasetPtr and DatasetTriggeringDatasetPtrOutput values.
// You can construct a concrete instance of `DatasetTriggeringDatasetPtrInput` via:
//
//	        DatasetTriggeringDatasetArgs{...}
//
//	or:
//
//	        nil
type DatasetTriggeringDatasetPtrInput interface {
	pulumi.Input

	ToDatasetTriggeringDatasetPtrOutput() DatasetTriggeringDatasetPtrOutput
	ToDatasetTriggeringDatasetPtrOutputWithContext(context.Context) DatasetTriggeringDatasetPtrOutput
}

type datasetTriggeringDatasetPtrType DatasetTriggeringDatasetArgs

func DatasetTriggeringDatasetPtr(v *DatasetTriggeringDatasetArgs) DatasetTriggeringDatasetPtrInput {
	return (*datasetTriggeringDatasetPtrType)(v)
}

func (*datasetTriggeringDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetTriggeringDataset)(nil)).Elem()
}

func (i *datasetTriggeringDatasetPtrType) ToDatasetTriggeringDatasetPtrOutput() DatasetTriggeringDatasetPtrOutput {
	return i.ToDatasetTriggeringDatasetPtrOutputWithContext(context.Background())
}

func (i *datasetTriggeringDatasetPtrType) ToDatasetTriggeringDatasetPtrOutputWithContext(ctx context.Context) DatasetTriggeringDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetTriggeringDatasetPtrOutput)
}

type DatasetTriggeringDatasetOutput struct{ *pulumi.OutputState }

func (DatasetTriggeringDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetTriggeringDataset)(nil)).Elem()
}

func (o DatasetTriggeringDatasetOutput) ToDatasetTriggeringDatasetOutput() DatasetTriggeringDatasetOutput {
	return o
}

func (o DatasetTriggeringDatasetOutput) ToDatasetTriggeringDatasetOutputWithContext(ctx context.Context) DatasetTriggeringDatasetOutput {
	return o
}

func (o DatasetTriggeringDatasetOutput) ToDatasetTriggeringDatasetPtrOutput() DatasetTriggeringDatasetPtrOutput {
	return o.ToDatasetTriggeringDatasetPtrOutputWithContext(context.Background())
}

func (o DatasetTriggeringDatasetOutput) ToDatasetTriggeringDatasetPtrOutputWithContext(ctx context.Context) DatasetTriggeringDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetTriggeringDataset) *DatasetTriggeringDataset {
		return &v
	}).(DatasetTriggeringDatasetPtrOutput)
}

// The name of the data set whose content generation triggers the new data set content generation.
func (o DatasetTriggeringDatasetOutput) DatasetName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetTriggeringDataset) string { return v.DatasetName }).(pulumi.StringOutput)
}

type DatasetTriggeringDatasetPtrOutput struct{ *pulumi.OutputState }

func (DatasetTriggeringDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetTriggeringDataset)(nil)).Elem()
}

func (o DatasetTriggeringDatasetPtrOutput) ToDatasetTriggeringDatasetPtrOutput() DatasetTriggeringDatasetPtrOutput {
	return o
}

func (o DatasetTriggeringDatasetPtrOutput) ToDatasetTriggeringDatasetPtrOutputWithContext(ctx context.Context) DatasetTriggeringDatasetPtrOutput {
	return o
}

func (o DatasetTriggeringDatasetPtrOutput) Elem() DatasetTriggeringDatasetOutput {
	return o.ApplyT(func(v *DatasetTriggeringDataset) DatasetTriggeringDataset {
		if v != nil {
			return *v
		}
		var ret DatasetTriggeringDataset
		return ret
	}).(DatasetTriggeringDatasetOutput)
}

// The name of the data set whose content generation triggers the new data set content generation.
func (o DatasetTriggeringDatasetPtrOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetTriggeringDataset) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetName
	}).(pulumi.StringPtrOutput)
}

type DatasetVariable struct {
	// The value of the variable as a structure that specifies a dataset content version.
	DatasetContentVersionValue *DatasetContentVersionValue `pulumi:"datasetContentVersionValue"`
	// The value of the variable as a double (numeric).
	DoubleValue *float64 `pulumi:"doubleValue"`
	// The value of the variable as a structure that specifies an output file URI.
	OutputFileUriValue *DatasetOutputFileUriValue `pulumi:"outputFileUriValue"`
	// The value of the variable as a string.
	StringValue *string `pulumi:"stringValue"`
	// The name of the variable.
	VariableName string `pulumi:"variableName"`
}

// DatasetVariableInput is an input type that accepts DatasetVariableArgs and DatasetVariableOutput values.
// You can construct a concrete instance of `DatasetVariableInput` via:
//
//	DatasetVariableArgs{...}
type DatasetVariableInput interface {
	pulumi.Input

	ToDatasetVariableOutput() DatasetVariableOutput
	ToDatasetVariableOutputWithContext(context.Context) DatasetVariableOutput
}

type DatasetVariableArgs struct {
	// The value of the variable as a structure that specifies a dataset content version.
	DatasetContentVersionValue DatasetContentVersionValuePtrInput `pulumi:"datasetContentVersionValue"`
	// The value of the variable as a double (numeric).
	DoubleValue pulumi.Float64PtrInput `pulumi:"doubleValue"`
	// The value of the variable as a structure that specifies an output file URI.
	OutputFileUriValue DatasetOutputFileUriValuePtrInput `pulumi:"outputFileUriValue"`
	// The value of the variable as a string.
	StringValue pulumi.StringPtrInput `pulumi:"stringValue"`
	// The name of the variable.
	VariableName pulumi.StringInput `pulumi:"variableName"`
}

func (DatasetVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetVariable)(nil)).Elem()
}

func (i DatasetVariableArgs) ToDatasetVariableOutput() DatasetVariableOutput {
	return i.ToDatasetVariableOutputWithContext(context.Background())
}

func (i DatasetVariableArgs) ToDatasetVariableOutputWithContext(ctx context.Context) DatasetVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetVariableOutput)
}

// DatasetVariableArrayInput is an input type that accepts DatasetVariableArray and DatasetVariableArrayOutput values.
// You can construct a concrete instance of `DatasetVariableArrayInput` via:
//
//	DatasetVariableArray{ DatasetVariableArgs{...} }
type DatasetVariableArrayInput interface {
	pulumi.Input

	ToDatasetVariableArrayOutput() DatasetVariableArrayOutput
	ToDatasetVariableArrayOutputWithContext(context.Context) DatasetVariableArrayOutput
}

type DatasetVariableArray []DatasetVariableInput

func (DatasetVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetVariable)(nil)).Elem()
}

func (i DatasetVariableArray) ToDatasetVariableArrayOutput() DatasetVariableArrayOutput {
	return i.ToDatasetVariableArrayOutputWithContext(context.Background())
}

func (i DatasetVariableArray) ToDatasetVariableArrayOutputWithContext(ctx context.Context) DatasetVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetVariableArrayOutput)
}

type DatasetVariableOutput struct{ *pulumi.OutputState }

func (DatasetVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetVariable)(nil)).Elem()
}

func (o DatasetVariableOutput) ToDatasetVariableOutput() DatasetVariableOutput {
	return o
}

func (o DatasetVariableOutput) ToDatasetVariableOutputWithContext(ctx context.Context) DatasetVariableOutput {
	return o
}

// The value of the variable as a structure that specifies a dataset content version.
func (o DatasetVariableOutput) DatasetContentVersionValue() DatasetContentVersionValuePtrOutput {
	return o.ApplyT(func(v DatasetVariable) *DatasetContentVersionValue { return v.DatasetContentVersionValue }).(DatasetContentVersionValuePtrOutput)
}

// The value of the variable as a double (numeric).
func (o DatasetVariableOutput) DoubleValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DatasetVariable) *float64 { return v.DoubleValue }).(pulumi.Float64PtrOutput)
}

// The value of the variable as a structure that specifies an output file URI.
func (o DatasetVariableOutput) OutputFileUriValue() DatasetOutputFileUriValuePtrOutput {
	return o.ApplyT(func(v DatasetVariable) *DatasetOutputFileUriValue { return v.OutputFileUriValue }).(DatasetOutputFileUriValuePtrOutput)
}

// The value of the variable as a string.
func (o DatasetVariableOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetVariable) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

// The name of the variable.
func (o DatasetVariableOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetVariable) string { return v.VariableName }).(pulumi.StringOutput)
}

type DatasetVariableArrayOutput struct{ *pulumi.OutputState }

func (DatasetVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetVariable)(nil)).Elem()
}

func (o DatasetVariableArrayOutput) ToDatasetVariableArrayOutput() DatasetVariableArrayOutput {
	return o
}

func (o DatasetVariableArrayOutput) ToDatasetVariableArrayOutputWithContext(ctx context.Context) DatasetVariableArrayOutput {
	return o
}

func (o DatasetVariableArrayOutput) Index(i pulumi.IntInput) DatasetVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetVariable {
		return vs[0].([]DatasetVariable)[vs[1].(int)]
	}).(DatasetVariableOutput)
}

type DatasetVersioningConfiguration struct {
	// How many versions of dataset contents are kept. The `unlimited` parameter must be `false` .
	MaxVersions *int `pulumi:"maxVersions"`
	// If true, unlimited versions of dataset contents are kept.
	Unlimited *bool `pulumi:"unlimited"`
}

// DatasetVersioningConfigurationInput is an input type that accepts DatasetVersioningConfigurationArgs and DatasetVersioningConfigurationOutput values.
// You can construct a concrete instance of `DatasetVersioningConfigurationInput` via:
//
//	DatasetVersioningConfigurationArgs{...}
type DatasetVersioningConfigurationInput interface {
	pulumi.Input

	ToDatasetVersioningConfigurationOutput() DatasetVersioningConfigurationOutput
	ToDatasetVersioningConfigurationOutputWithContext(context.Context) DatasetVersioningConfigurationOutput
}

type DatasetVersioningConfigurationArgs struct {
	// How many versions of dataset contents are kept. The `unlimited` parameter must be `false` .
	MaxVersions pulumi.IntPtrInput `pulumi:"maxVersions"`
	// If true, unlimited versions of dataset contents are kept.
	Unlimited pulumi.BoolPtrInput `pulumi:"unlimited"`
}

func (DatasetVersioningConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetVersioningConfiguration)(nil)).Elem()
}

func (i DatasetVersioningConfigurationArgs) ToDatasetVersioningConfigurationOutput() DatasetVersioningConfigurationOutput {
	return i.ToDatasetVersioningConfigurationOutputWithContext(context.Background())
}

func (i DatasetVersioningConfigurationArgs) ToDatasetVersioningConfigurationOutputWithContext(ctx context.Context) DatasetVersioningConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetVersioningConfigurationOutput)
}

func (i DatasetVersioningConfigurationArgs) ToDatasetVersioningConfigurationPtrOutput() DatasetVersioningConfigurationPtrOutput {
	return i.ToDatasetVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (i DatasetVersioningConfigurationArgs) ToDatasetVersioningConfigurationPtrOutputWithContext(ctx context.Context) DatasetVersioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetVersioningConfigurationOutput).ToDatasetVersioningConfigurationPtrOutputWithContext(ctx)
}

// DatasetVersioningConfigurationPtrInput is an input type that accepts DatasetVersioningConfigurationArgs, DatasetVersioningConfigurationPtr and DatasetVersioningConfigurationPtrOutput values.
// You can construct a concrete instance of `DatasetVersioningConfigurationPtrInput` via:
//
//	        DatasetVersioningConfigurationArgs{...}
//
//	or:
//
//	        nil
type DatasetVersioningConfigurationPtrInput interface {
	pulumi.Input

	ToDatasetVersioningConfigurationPtrOutput() DatasetVersioningConfigurationPtrOutput
	ToDatasetVersioningConfigurationPtrOutputWithContext(context.Context) DatasetVersioningConfigurationPtrOutput
}

type datasetVersioningConfigurationPtrType DatasetVersioningConfigurationArgs

func DatasetVersioningConfigurationPtr(v *DatasetVersioningConfigurationArgs) DatasetVersioningConfigurationPtrInput {
	return (*datasetVersioningConfigurationPtrType)(v)
}

func (*datasetVersioningConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetVersioningConfiguration)(nil)).Elem()
}

func (i *datasetVersioningConfigurationPtrType) ToDatasetVersioningConfigurationPtrOutput() DatasetVersioningConfigurationPtrOutput {
	return i.ToDatasetVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (i *datasetVersioningConfigurationPtrType) ToDatasetVersioningConfigurationPtrOutputWithContext(ctx context.Context) DatasetVersioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetVersioningConfigurationPtrOutput)
}

type DatasetVersioningConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetVersioningConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetVersioningConfiguration)(nil)).Elem()
}

func (o DatasetVersioningConfigurationOutput) ToDatasetVersioningConfigurationOutput() DatasetVersioningConfigurationOutput {
	return o
}

func (o DatasetVersioningConfigurationOutput) ToDatasetVersioningConfigurationOutputWithContext(ctx context.Context) DatasetVersioningConfigurationOutput {
	return o
}

func (o DatasetVersioningConfigurationOutput) ToDatasetVersioningConfigurationPtrOutput() DatasetVersioningConfigurationPtrOutput {
	return o.ToDatasetVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (o DatasetVersioningConfigurationOutput) ToDatasetVersioningConfigurationPtrOutputWithContext(ctx context.Context) DatasetVersioningConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetVersioningConfiguration) *DatasetVersioningConfiguration {
		return &v
	}).(DatasetVersioningConfigurationPtrOutput)
}

// How many versions of dataset contents are kept. The `unlimited` parameter must be `false` .
func (o DatasetVersioningConfigurationOutput) MaxVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatasetVersioningConfiguration) *int { return v.MaxVersions }).(pulumi.IntPtrOutput)
}

// If true, unlimited versions of dataset contents are kept.
func (o DatasetVersioningConfigurationOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetVersioningConfiguration) *bool { return v.Unlimited }).(pulumi.BoolPtrOutput)
}

type DatasetVersioningConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatasetVersioningConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetVersioningConfiguration)(nil)).Elem()
}

func (o DatasetVersioningConfigurationPtrOutput) ToDatasetVersioningConfigurationPtrOutput() DatasetVersioningConfigurationPtrOutput {
	return o
}

func (o DatasetVersioningConfigurationPtrOutput) ToDatasetVersioningConfigurationPtrOutputWithContext(ctx context.Context) DatasetVersioningConfigurationPtrOutput {
	return o
}

func (o DatasetVersioningConfigurationPtrOutput) Elem() DatasetVersioningConfigurationOutput {
	return o.ApplyT(func(v *DatasetVersioningConfiguration) DatasetVersioningConfiguration {
		if v != nil {
			return *v
		}
		var ret DatasetVersioningConfiguration
		return ret
	}).(DatasetVersioningConfigurationOutput)
}

// How many versions of dataset contents are kept. The `unlimited` parameter must be `false` .
func (o DatasetVersioningConfigurationPtrOutput) MaxVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatasetVersioningConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxVersions
	}).(pulumi.IntPtrOutput)
}

// If true, unlimited versions of dataset contents are kept.
func (o DatasetVersioningConfigurationPtrOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetVersioningConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Unlimited
	}).(pulumi.BoolPtrOutput)
}

type DatastoreColumn struct {
	// The name of the column.
	Name string `pulumi:"name"`
	// The type of data. For more information about the supported data types, see [Common data types](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-common.html) in the *AWS Glue Developer Guide* .
	Type string `pulumi:"type"`
}

// DatastoreColumnInput is an input type that accepts DatastoreColumnArgs and DatastoreColumnOutput values.
// You can construct a concrete instance of `DatastoreColumnInput` via:
//
//	DatastoreColumnArgs{...}
type DatastoreColumnInput interface {
	pulumi.Input

	ToDatastoreColumnOutput() DatastoreColumnOutput
	ToDatastoreColumnOutputWithContext(context.Context) DatastoreColumnOutput
}

type DatastoreColumnArgs struct {
	// The name of the column.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of data. For more information about the supported data types, see [Common data types](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-common.html) in the *AWS Glue Developer Guide* .
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatastoreColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreColumn)(nil)).Elem()
}

func (i DatastoreColumnArgs) ToDatastoreColumnOutput() DatastoreColumnOutput {
	return i.ToDatastoreColumnOutputWithContext(context.Background())
}

func (i DatastoreColumnArgs) ToDatastoreColumnOutputWithContext(ctx context.Context) DatastoreColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreColumnOutput)
}

// DatastoreColumnArrayInput is an input type that accepts DatastoreColumnArray and DatastoreColumnArrayOutput values.
// You can construct a concrete instance of `DatastoreColumnArrayInput` via:
//
//	DatastoreColumnArray{ DatastoreColumnArgs{...} }
type DatastoreColumnArrayInput interface {
	pulumi.Input

	ToDatastoreColumnArrayOutput() DatastoreColumnArrayOutput
	ToDatastoreColumnArrayOutputWithContext(context.Context) DatastoreColumnArrayOutput
}

type DatastoreColumnArray []DatastoreColumnInput

func (DatastoreColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastoreColumn)(nil)).Elem()
}

func (i DatastoreColumnArray) ToDatastoreColumnArrayOutput() DatastoreColumnArrayOutput {
	return i.ToDatastoreColumnArrayOutputWithContext(context.Background())
}

func (i DatastoreColumnArray) ToDatastoreColumnArrayOutputWithContext(ctx context.Context) DatastoreColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreColumnArrayOutput)
}

type DatastoreColumnOutput struct{ *pulumi.OutputState }

func (DatastoreColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreColumn)(nil)).Elem()
}

func (o DatastoreColumnOutput) ToDatastoreColumnOutput() DatastoreColumnOutput {
	return o
}

func (o DatastoreColumnOutput) ToDatastoreColumnOutputWithContext(ctx context.Context) DatastoreColumnOutput {
	return o
}

// The name of the column.
func (o DatastoreColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreColumn) string { return v.Name }).(pulumi.StringOutput)
}

// The type of data. For more information about the supported data types, see [Common data types](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-common.html) in the *AWS Glue Developer Guide* .
func (o DatastoreColumnOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreColumn) string { return v.Type }).(pulumi.StringOutput)
}

type DatastoreColumnArrayOutput struct{ *pulumi.OutputState }

func (DatastoreColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastoreColumn)(nil)).Elem()
}

func (o DatastoreColumnArrayOutput) ToDatastoreColumnArrayOutput() DatastoreColumnArrayOutput {
	return o
}

func (o DatastoreColumnArrayOutput) ToDatastoreColumnArrayOutputWithContext(ctx context.Context) DatastoreColumnArrayOutput {
	return o
}

func (o DatastoreColumnArrayOutput) Index(i pulumi.IntInput) DatastoreColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatastoreColumn {
		return vs[0].([]DatastoreColumn)[vs[1].(int)]
	}).(DatastoreColumnOutput)
}

type DatastoreCustomerManagedS3 struct {
	// The name of the Amazon S3 bucket where your data is stored.
	Bucket string `pulumi:"bucket"`
	// (Optional) The prefix used to create the keys of the data store data objects. Each object in an Amazon S3 bucket has a key that is its unique identifier in the bucket. Each object in a bucket has exactly one key. The prefix must end with a forward slash (/).
	KeyPrefix *string `pulumi:"keyPrefix"`
	// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 resources.
	RoleArn string `pulumi:"roleArn"`
}

// DatastoreCustomerManagedS3Input is an input type that accepts DatastoreCustomerManagedS3Args and DatastoreCustomerManagedS3Output values.
// You can construct a concrete instance of `DatastoreCustomerManagedS3Input` via:
//
//	DatastoreCustomerManagedS3Args{...}
type DatastoreCustomerManagedS3Input interface {
	pulumi.Input

	ToDatastoreCustomerManagedS3Output() DatastoreCustomerManagedS3Output
	ToDatastoreCustomerManagedS3OutputWithContext(context.Context) DatastoreCustomerManagedS3Output
}

type DatastoreCustomerManagedS3Args struct {
	// The name of the Amazon S3 bucket where your data is stored.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// (Optional) The prefix used to create the keys of the data store data objects. Each object in an Amazon S3 bucket has a key that is its unique identifier in the bucket. Each object in a bucket has exactly one key. The prefix must end with a forward slash (/).
	KeyPrefix pulumi.StringPtrInput `pulumi:"keyPrefix"`
	// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 resources.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (DatastoreCustomerManagedS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreCustomerManagedS3)(nil)).Elem()
}

func (i DatastoreCustomerManagedS3Args) ToDatastoreCustomerManagedS3Output() DatastoreCustomerManagedS3Output {
	return i.ToDatastoreCustomerManagedS3OutputWithContext(context.Background())
}

func (i DatastoreCustomerManagedS3Args) ToDatastoreCustomerManagedS3OutputWithContext(ctx context.Context) DatastoreCustomerManagedS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreCustomerManagedS3Output)
}

func (i DatastoreCustomerManagedS3Args) ToDatastoreCustomerManagedS3PtrOutput() DatastoreCustomerManagedS3PtrOutput {
	return i.ToDatastoreCustomerManagedS3PtrOutputWithContext(context.Background())
}

func (i DatastoreCustomerManagedS3Args) ToDatastoreCustomerManagedS3PtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreCustomerManagedS3Output).ToDatastoreCustomerManagedS3PtrOutputWithContext(ctx)
}

// DatastoreCustomerManagedS3PtrInput is an input type that accepts DatastoreCustomerManagedS3Args, DatastoreCustomerManagedS3Ptr and DatastoreCustomerManagedS3PtrOutput values.
// You can construct a concrete instance of `DatastoreCustomerManagedS3PtrInput` via:
//
//	        DatastoreCustomerManagedS3Args{...}
//
//	or:
//
//	        nil
type DatastoreCustomerManagedS3PtrInput interface {
	pulumi.Input

	ToDatastoreCustomerManagedS3PtrOutput() DatastoreCustomerManagedS3PtrOutput
	ToDatastoreCustomerManagedS3PtrOutputWithContext(context.Context) DatastoreCustomerManagedS3PtrOutput
}

type datastoreCustomerManagedS3PtrType DatastoreCustomerManagedS3Args

func DatastoreCustomerManagedS3Ptr(v *DatastoreCustomerManagedS3Args) DatastoreCustomerManagedS3PtrInput {
	return (*datastoreCustomerManagedS3PtrType)(v)
}

func (*datastoreCustomerManagedS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreCustomerManagedS3)(nil)).Elem()
}

func (i *datastoreCustomerManagedS3PtrType) ToDatastoreCustomerManagedS3PtrOutput() DatastoreCustomerManagedS3PtrOutput {
	return i.ToDatastoreCustomerManagedS3PtrOutputWithContext(context.Background())
}

func (i *datastoreCustomerManagedS3PtrType) ToDatastoreCustomerManagedS3PtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreCustomerManagedS3PtrOutput)
}

type DatastoreCustomerManagedS3Output struct{ *pulumi.OutputState }

func (DatastoreCustomerManagedS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreCustomerManagedS3)(nil)).Elem()
}

func (o DatastoreCustomerManagedS3Output) ToDatastoreCustomerManagedS3Output() DatastoreCustomerManagedS3Output {
	return o
}

func (o DatastoreCustomerManagedS3Output) ToDatastoreCustomerManagedS3OutputWithContext(ctx context.Context) DatastoreCustomerManagedS3Output {
	return o
}

func (o DatastoreCustomerManagedS3Output) ToDatastoreCustomerManagedS3PtrOutput() DatastoreCustomerManagedS3PtrOutput {
	return o.ToDatastoreCustomerManagedS3PtrOutputWithContext(context.Background())
}

func (o DatastoreCustomerManagedS3Output) ToDatastoreCustomerManagedS3PtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreCustomerManagedS3) *DatastoreCustomerManagedS3 {
		return &v
	}).(DatastoreCustomerManagedS3PtrOutput)
}

// The name of the Amazon S3 bucket where your data is stored.
func (o DatastoreCustomerManagedS3Output) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreCustomerManagedS3) string { return v.Bucket }).(pulumi.StringOutput)
}

// (Optional) The prefix used to create the keys of the data store data objects. Each object in an Amazon S3 bucket has a key that is its unique identifier in the bucket. Each object in a bucket has exactly one key. The prefix must end with a forward slash (/).
func (o DatastoreCustomerManagedS3Output) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatastoreCustomerManagedS3) *string { return v.KeyPrefix }).(pulumi.StringPtrOutput)
}

// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 resources.
func (o DatastoreCustomerManagedS3Output) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreCustomerManagedS3) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DatastoreCustomerManagedS3PtrOutput struct{ *pulumi.OutputState }

func (DatastoreCustomerManagedS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreCustomerManagedS3)(nil)).Elem()
}

func (o DatastoreCustomerManagedS3PtrOutput) ToDatastoreCustomerManagedS3PtrOutput() DatastoreCustomerManagedS3PtrOutput {
	return o
}

func (o DatastoreCustomerManagedS3PtrOutput) ToDatastoreCustomerManagedS3PtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3PtrOutput {
	return o
}

func (o DatastoreCustomerManagedS3PtrOutput) Elem() DatastoreCustomerManagedS3Output {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3) DatastoreCustomerManagedS3 {
		if v != nil {
			return *v
		}
		var ret DatastoreCustomerManagedS3
		return ret
	}).(DatastoreCustomerManagedS3Output)
}

// The name of the Amazon S3 bucket where your data is stored.
func (o DatastoreCustomerManagedS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// (Optional) The prefix used to create the keys of the data store data objects. Each object in an Amazon S3 bucket has a key that is its unique identifier in the bucket. Each object in a bucket has exactly one key. The prefix must end with a forward slash (/).
func (o DatastoreCustomerManagedS3PtrOutput) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3) *string {
		if v == nil {
			return nil
		}
		return v.KeyPrefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that grants AWS IoT Analytics permission to interact with your Amazon S3 resources.
func (o DatastoreCustomerManagedS3PtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type DatastoreCustomerManagedS3Storage struct {
	// The name of the Amazon S3 bucket where your data is stored.
	Bucket string `pulumi:"bucket"`
	// (Optional) The prefix used to create the keys of the data store data objects. Each object in an Amazon S3 bucket has a key that is its unique identifier in the bucket. Each object in a bucket has exactly one key. The prefix must end with a forward slash (/).
	KeyPrefix *string `pulumi:"keyPrefix"`
}

// DatastoreCustomerManagedS3StorageInput is an input type that accepts DatastoreCustomerManagedS3StorageArgs and DatastoreCustomerManagedS3StorageOutput values.
// You can construct a concrete instance of `DatastoreCustomerManagedS3StorageInput` via:
//
//	DatastoreCustomerManagedS3StorageArgs{...}
type DatastoreCustomerManagedS3StorageInput interface {
	pulumi.Input

	ToDatastoreCustomerManagedS3StorageOutput() DatastoreCustomerManagedS3StorageOutput
	ToDatastoreCustomerManagedS3StorageOutputWithContext(context.Context) DatastoreCustomerManagedS3StorageOutput
}

type DatastoreCustomerManagedS3StorageArgs struct {
	// The name of the Amazon S3 bucket where your data is stored.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// (Optional) The prefix used to create the keys of the data store data objects. Each object in an Amazon S3 bucket has a key that is its unique identifier in the bucket. Each object in a bucket has exactly one key. The prefix must end with a forward slash (/).
	KeyPrefix pulumi.StringPtrInput `pulumi:"keyPrefix"`
}

func (DatastoreCustomerManagedS3StorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreCustomerManagedS3Storage)(nil)).Elem()
}

func (i DatastoreCustomerManagedS3StorageArgs) ToDatastoreCustomerManagedS3StorageOutput() DatastoreCustomerManagedS3StorageOutput {
	return i.ToDatastoreCustomerManagedS3StorageOutputWithContext(context.Background())
}

func (i DatastoreCustomerManagedS3StorageArgs) ToDatastoreCustomerManagedS3StorageOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3StorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreCustomerManagedS3StorageOutput)
}

func (i DatastoreCustomerManagedS3StorageArgs) ToDatastoreCustomerManagedS3StoragePtrOutput() DatastoreCustomerManagedS3StoragePtrOutput {
	return i.ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(context.Background())
}

func (i DatastoreCustomerManagedS3StorageArgs) ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3StoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreCustomerManagedS3StorageOutput).ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(ctx)
}

// DatastoreCustomerManagedS3StoragePtrInput is an input type that accepts DatastoreCustomerManagedS3StorageArgs, DatastoreCustomerManagedS3StoragePtr and DatastoreCustomerManagedS3StoragePtrOutput values.
// You can construct a concrete instance of `DatastoreCustomerManagedS3StoragePtrInput` via:
//
//	        DatastoreCustomerManagedS3StorageArgs{...}
//
//	or:
//
//	        nil
type DatastoreCustomerManagedS3StoragePtrInput interface {
	pulumi.Input

	ToDatastoreCustomerManagedS3StoragePtrOutput() DatastoreCustomerManagedS3StoragePtrOutput
	ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(context.Context) DatastoreCustomerManagedS3StoragePtrOutput
}

type datastoreCustomerManagedS3StoragePtrType DatastoreCustomerManagedS3StorageArgs

func DatastoreCustomerManagedS3StoragePtr(v *DatastoreCustomerManagedS3StorageArgs) DatastoreCustomerManagedS3StoragePtrInput {
	return (*datastoreCustomerManagedS3StoragePtrType)(v)
}

func (*datastoreCustomerManagedS3StoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreCustomerManagedS3Storage)(nil)).Elem()
}

func (i *datastoreCustomerManagedS3StoragePtrType) ToDatastoreCustomerManagedS3StoragePtrOutput() DatastoreCustomerManagedS3StoragePtrOutput {
	return i.ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(context.Background())
}

func (i *datastoreCustomerManagedS3StoragePtrType) ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3StoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreCustomerManagedS3StoragePtrOutput)
}

type DatastoreCustomerManagedS3StorageOutput struct{ *pulumi.OutputState }

func (DatastoreCustomerManagedS3StorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreCustomerManagedS3Storage)(nil)).Elem()
}

func (o DatastoreCustomerManagedS3StorageOutput) ToDatastoreCustomerManagedS3StorageOutput() DatastoreCustomerManagedS3StorageOutput {
	return o
}

func (o DatastoreCustomerManagedS3StorageOutput) ToDatastoreCustomerManagedS3StorageOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3StorageOutput {
	return o
}

func (o DatastoreCustomerManagedS3StorageOutput) ToDatastoreCustomerManagedS3StoragePtrOutput() DatastoreCustomerManagedS3StoragePtrOutput {
	return o.ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(context.Background())
}

func (o DatastoreCustomerManagedS3StorageOutput) ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3StoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreCustomerManagedS3Storage) *DatastoreCustomerManagedS3Storage {
		return &v
	}).(DatastoreCustomerManagedS3StoragePtrOutput)
}

// The name of the Amazon S3 bucket where your data is stored.
func (o DatastoreCustomerManagedS3StorageOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreCustomerManagedS3Storage) string { return v.Bucket }).(pulumi.StringOutput)
}

// (Optional) The prefix used to create the keys of the data store data objects. Each object in an Amazon S3 bucket has a key that is its unique identifier in the bucket. Each object in a bucket has exactly one key. The prefix must end with a forward slash (/).
func (o DatastoreCustomerManagedS3StorageOutput) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatastoreCustomerManagedS3Storage) *string { return v.KeyPrefix }).(pulumi.StringPtrOutput)
}

type DatastoreCustomerManagedS3StoragePtrOutput struct{ *pulumi.OutputState }

func (DatastoreCustomerManagedS3StoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreCustomerManagedS3Storage)(nil)).Elem()
}

func (o DatastoreCustomerManagedS3StoragePtrOutput) ToDatastoreCustomerManagedS3StoragePtrOutput() DatastoreCustomerManagedS3StoragePtrOutput {
	return o
}

func (o DatastoreCustomerManagedS3StoragePtrOutput) ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3StoragePtrOutput {
	return o
}

func (o DatastoreCustomerManagedS3StoragePtrOutput) Elem() DatastoreCustomerManagedS3StorageOutput {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3Storage) DatastoreCustomerManagedS3Storage {
		if v != nil {
			return *v
		}
		var ret DatastoreCustomerManagedS3Storage
		return ret
	}).(DatastoreCustomerManagedS3StorageOutput)
}

// The name of the Amazon S3 bucket where your data is stored.
func (o DatastoreCustomerManagedS3StoragePtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3Storage) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// (Optional) The prefix used to create the keys of the data store data objects. Each object in an Amazon S3 bucket has a key that is its unique identifier in the bucket. Each object in a bucket has exactly one key. The prefix must end with a forward slash (/).
func (o DatastoreCustomerManagedS3StoragePtrOutput) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3Storage) *string {
		if v == nil {
			return nil
		}
		return v.KeyPrefix
	}).(pulumi.StringPtrOutput)
}

type DatastoreFileFormatConfiguration struct {
	// Contains the configuration information of the JSON format.
	JsonConfiguration *DatastoreJsonConfiguration `pulumi:"jsonConfiguration"`
	// Contains the configuration information of the Parquet format.
	ParquetConfiguration *DatastoreParquetConfiguration `pulumi:"parquetConfiguration"`
}

// DatastoreFileFormatConfigurationInput is an input type that accepts DatastoreFileFormatConfigurationArgs and DatastoreFileFormatConfigurationOutput values.
// You can construct a concrete instance of `DatastoreFileFormatConfigurationInput` via:
//
//	DatastoreFileFormatConfigurationArgs{...}
type DatastoreFileFormatConfigurationInput interface {
	pulumi.Input

	ToDatastoreFileFormatConfigurationOutput() DatastoreFileFormatConfigurationOutput
	ToDatastoreFileFormatConfigurationOutputWithContext(context.Context) DatastoreFileFormatConfigurationOutput
}

type DatastoreFileFormatConfigurationArgs struct {
	// Contains the configuration information of the JSON format.
	JsonConfiguration DatastoreJsonConfigurationPtrInput `pulumi:"jsonConfiguration"`
	// Contains the configuration information of the Parquet format.
	ParquetConfiguration DatastoreParquetConfigurationPtrInput `pulumi:"parquetConfiguration"`
}

func (DatastoreFileFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreFileFormatConfiguration)(nil)).Elem()
}

func (i DatastoreFileFormatConfigurationArgs) ToDatastoreFileFormatConfigurationOutput() DatastoreFileFormatConfigurationOutput {
	return i.ToDatastoreFileFormatConfigurationOutputWithContext(context.Background())
}

func (i DatastoreFileFormatConfigurationArgs) ToDatastoreFileFormatConfigurationOutputWithContext(ctx context.Context) DatastoreFileFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreFileFormatConfigurationOutput)
}

func (i DatastoreFileFormatConfigurationArgs) ToDatastoreFileFormatConfigurationPtrOutput() DatastoreFileFormatConfigurationPtrOutput {
	return i.ToDatastoreFileFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DatastoreFileFormatConfigurationArgs) ToDatastoreFileFormatConfigurationPtrOutputWithContext(ctx context.Context) DatastoreFileFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreFileFormatConfigurationOutput).ToDatastoreFileFormatConfigurationPtrOutputWithContext(ctx)
}

// DatastoreFileFormatConfigurationPtrInput is an input type that accepts DatastoreFileFormatConfigurationArgs, DatastoreFileFormatConfigurationPtr and DatastoreFileFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DatastoreFileFormatConfigurationPtrInput` via:
//
//	        DatastoreFileFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DatastoreFileFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDatastoreFileFormatConfigurationPtrOutput() DatastoreFileFormatConfigurationPtrOutput
	ToDatastoreFileFormatConfigurationPtrOutputWithContext(context.Context) DatastoreFileFormatConfigurationPtrOutput
}

type datastoreFileFormatConfigurationPtrType DatastoreFileFormatConfigurationArgs

func DatastoreFileFormatConfigurationPtr(v *DatastoreFileFormatConfigurationArgs) DatastoreFileFormatConfigurationPtrInput {
	return (*datastoreFileFormatConfigurationPtrType)(v)
}

func (*datastoreFileFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreFileFormatConfiguration)(nil)).Elem()
}

func (i *datastoreFileFormatConfigurationPtrType) ToDatastoreFileFormatConfigurationPtrOutput() DatastoreFileFormatConfigurationPtrOutput {
	return i.ToDatastoreFileFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *datastoreFileFormatConfigurationPtrType) ToDatastoreFileFormatConfigurationPtrOutputWithContext(ctx context.Context) DatastoreFileFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreFileFormatConfigurationPtrOutput)
}

type DatastoreFileFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DatastoreFileFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreFileFormatConfiguration)(nil)).Elem()
}

func (o DatastoreFileFormatConfigurationOutput) ToDatastoreFileFormatConfigurationOutput() DatastoreFileFormatConfigurationOutput {
	return o
}

func (o DatastoreFileFormatConfigurationOutput) ToDatastoreFileFormatConfigurationOutputWithContext(ctx context.Context) DatastoreFileFormatConfigurationOutput {
	return o
}

func (o DatastoreFileFormatConfigurationOutput) ToDatastoreFileFormatConfigurationPtrOutput() DatastoreFileFormatConfigurationPtrOutput {
	return o.ToDatastoreFileFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DatastoreFileFormatConfigurationOutput) ToDatastoreFileFormatConfigurationPtrOutputWithContext(ctx context.Context) DatastoreFileFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreFileFormatConfiguration) *DatastoreFileFormatConfiguration {
		return &v
	}).(DatastoreFileFormatConfigurationPtrOutput)
}

// Contains the configuration information of the JSON format.
func (o DatastoreFileFormatConfigurationOutput) JsonConfiguration() DatastoreJsonConfigurationPtrOutput {
	return o.ApplyT(func(v DatastoreFileFormatConfiguration) *DatastoreJsonConfiguration { return v.JsonConfiguration }).(DatastoreJsonConfigurationPtrOutput)
}

// Contains the configuration information of the Parquet format.
func (o DatastoreFileFormatConfigurationOutput) ParquetConfiguration() DatastoreParquetConfigurationPtrOutput {
	return o.ApplyT(func(v DatastoreFileFormatConfiguration) *DatastoreParquetConfiguration { return v.ParquetConfiguration }).(DatastoreParquetConfigurationPtrOutput)
}

type DatastoreFileFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatastoreFileFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreFileFormatConfiguration)(nil)).Elem()
}

func (o DatastoreFileFormatConfigurationPtrOutput) ToDatastoreFileFormatConfigurationPtrOutput() DatastoreFileFormatConfigurationPtrOutput {
	return o
}

func (o DatastoreFileFormatConfigurationPtrOutput) ToDatastoreFileFormatConfigurationPtrOutputWithContext(ctx context.Context) DatastoreFileFormatConfigurationPtrOutput {
	return o
}

func (o DatastoreFileFormatConfigurationPtrOutput) Elem() DatastoreFileFormatConfigurationOutput {
	return o.ApplyT(func(v *DatastoreFileFormatConfiguration) DatastoreFileFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DatastoreFileFormatConfiguration
		return ret
	}).(DatastoreFileFormatConfigurationOutput)
}

// Contains the configuration information of the JSON format.
func (o DatastoreFileFormatConfigurationPtrOutput) JsonConfiguration() DatastoreJsonConfigurationPtrOutput {
	return o.ApplyT(func(v *DatastoreFileFormatConfiguration) *DatastoreJsonConfiguration {
		if v == nil {
			return nil
		}
		return v.JsonConfiguration
	}).(DatastoreJsonConfigurationPtrOutput)
}

// Contains the configuration information of the Parquet format.
func (o DatastoreFileFormatConfigurationPtrOutput) ParquetConfiguration() DatastoreParquetConfigurationPtrOutput {
	return o.ApplyT(func(v *DatastoreFileFormatConfiguration) *DatastoreParquetConfiguration {
		if v == nil {
			return nil
		}
		return v.ParquetConfiguration
	}).(DatastoreParquetConfigurationPtrOutput)
}

type DatastoreIotSiteWiseMultiLayerStorage struct {
	// Stores data used by AWS IoT SiteWise in an Amazon S3 bucket that you manage.
	CustomerManagedS3Storage *DatastoreCustomerManagedS3Storage `pulumi:"customerManagedS3Storage"`
}

// DatastoreIotSiteWiseMultiLayerStorageInput is an input type that accepts DatastoreIotSiteWiseMultiLayerStorageArgs and DatastoreIotSiteWiseMultiLayerStorageOutput values.
// You can construct a concrete instance of `DatastoreIotSiteWiseMultiLayerStorageInput` via:
//
//	DatastoreIotSiteWiseMultiLayerStorageArgs{...}
type DatastoreIotSiteWiseMultiLayerStorageInput interface {
	pulumi.Input

	ToDatastoreIotSiteWiseMultiLayerStorageOutput() DatastoreIotSiteWiseMultiLayerStorageOutput
	ToDatastoreIotSiteWiseMultiLayerStorageOutputWithContext(context.Context) DatastoreIotSiteWiseMultiLayerStorageOutput
}

type DatastoreIotSiteWiseMultiLayerStorageArgs struct {
	// Stores data used by AWS IoT SiteWise in an Amazon S3 bucket that you manage.
	CustomerManagedS3Storage DatastoreCustomerManagedS3StoragePtrInput `pulumi:"customerManagedS3Storage"`
}

func (DatastoreIotSiteWiseMultiLayerStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreIotSiteWiseMultiLayerStorage)(nil)).Elem()
}

func (i DatastoreIotSiteWiseMultiLayerStorageArgs) ToDatastoreIotSiteWiseMultiLayerStorageOutput() DatastoreIotSiteWiseMultiLayerStorageOutput {
	return i.ToDatastoreIotSiteWiseMultiLayerStorageOutputWithContext(context.Background())
}

func (i DatastoreIotSiteWiseMultiLayerStorageArgs) ToDatastoreIotSiteWiseMultiLayerStorageOutputWithContext(ctx context.Context) DatastoreIotSiteWiseMultiLayerStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreIotSiteWiseMultiLayerStorageOutput)
}

func (i DatastoreIotSiteWiseMultiLayerStorageArgs) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutput() DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return i.ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(context.Background())
}

func (i DatastoreIotSiteWiseMultiLayerStorageArgs) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(ctx context.Context) DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreIotSiteWiseMultiLayerStorageOutput).ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(ctx)
}

// DatastoreIotSiteWiseMultiLayerStoragePtrInput is an input type that accepts DatastoreIotSiteWiseMultiLayerStorageArgs, DatastoreIotSiteWiseMultiLayerStoragePtr and DatastoreIotSiteWiseMultiLayerStoragePtrOutput values.
// You can construct a concrete instance of `DatastoreIotSiteWiseMultiLayerStoragePtrInput` via:
//
//	        DatastoreIotSiteWiseMultiLayerStorageArgs{...}
//
//	or:
//
//	        nil
type DatastoreIotSiteWiseMultiLayerStoragePtrInput interface {
	pulumi.Input

	ToDatastoreIotSiteWiseMultiLayerStoragePtrOutput() DatastoreIotSiteWiseMultiLayerStoragePtrOutput
	ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(context.Context) DatastoreIotSiteWiseMultiLayerStoragePtrOutput
}

type datastoreIotSiteWiseMultiLayerStoragePtrType DatastoreIotSiteWiseMultiLayerStorageArgs

func DatastoreIotSiteWiseMultiLayerStoragePtr(v *DatastoreIotSiteWiseMultiLayerStorageArgs) DatastoreIotSiteWiseMultiLayerStoragePtrInput {
	return (*datastoreIotSiteWiseMultiLayerStoragePtrType)(v)
}

func (*datastoreIotSiteWiseMultiLayerStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreIotSiteWiseMultiLayerStorage)(nil)).Elem()
}

func (i *datastoreIotSiteWiseMultiLayerStoragePtrType) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutput() DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return i.ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(context.Background())
}

func (i *datastoreIotSiteWiseMultiLayerStoragePtrType) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(ctx context.Context) DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreIotSiteWiseMultiLayerStoragePtrOutput)
}

type DatastoreIotSiteWiseMultiLayerStorageOutput struct{ *pulumi.OutputState }

func (DatastoreIotSiteWiseMultiLayerStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreIotSiteWiseMultiLayerStorage)(nil)).Elem()
}

func (o DatastoreIotSiteWiseMultiLayerStorageOutput) ToDatastoreIotSiteWiseMultiLayerStorageOutput() DatastoreIotSiteWiseMultiLayerStorageOutput {
	return o
}

func (o DatastoreIotSiteWiseMultiLayerStorageOutput) ToDatastoreIotSiteWiseMultiLayerStorageOutputWithContext(ctx context.Context) DatastoreIotSiteWiseMultiLayerStorageOutput {
	return o
}

func (o DatastoreIotSiteWiseMultiLayerStorageOutput) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutput() DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return o.ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(context.Background())
}

func (o DatastoreIotSiteWiseMultiLayerStorageOutput) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(ctx context.Context) DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreIotSiteWiseMultiLayerStorage) *DatastoreIotSiteWiseMultiLayerStorage {
		return &v
	}).(DatastoreIotSiteWiseMultiLayerStoragePtrOutput)
}

// Stores data used by AWS IoT SiteWise in an Amazon S3 bucket that you manage.
func (o DatastoreIotSiteWiseMultiLayerStorageOutput) CustomerManagedS3Storage() DatastoreCustomerManagedS3StoragePtrOutput {
	return o.ApplyT(func(v DatastoreIotSiteWiseMultiLayerStorage) *DatastoreCustomerManagedS3Storage {
		return v.CustomerManagedS3Storage
	}).(DatastoreCustomerManagedS3StoragePtrOutput)
}

type DatastoreIotSiteWiseMultiLayerStoragePtrOutput struct{ *pulumi.OutputState }

func (DatastoreIotSiteWiseMultiLayerStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreIotSiteWiseMultiLayerStorage)(nil)).Elem()
}

func (o DatastoreIotSiteWiseMultiLayerStoragePtrOutput) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutput() DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return o
}

func (o DatastoreIotSiteWiseMultiLayerStoragePtrOutput) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(ctx context.Context) DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return o
}

func (o DatastoreIotSiteWiseMultiLayerStoragePtrOutput) Elem() DatastoreIotSiteWiseMultiLayerStorageOutput {
	return o.ApplyT(func(v *DatastoreIotSiteWiseMultiLayerStorage) DatastoreIotSiteWiseMultiLayerStorage {
		if v != nil {
			return *v
		}
		var ret DatastoreIotSiteWiseMultiLayerStorage
		return ret
	}).(DatastoreIotSiteWiseMultiLayerStorageOutput)
}

// Stores data used by AWS IoT SiteWise in an Amazon S3 bucket that you manage.
func (o DatastoreIotSiteWiseMultiLayerStoragePtrOutput) CustomerManagedS3Storage() DatastoreCustomerManagedS3StoragePtrOutput {
	return o.ApplyT(func(v *DatastoreIotSiteWiseMultiLayerStorage) *DatastoreCustomerManagedS3Storage {
		if v == nil {
			return nil
		}
		return v.CustomerManagedS3Storage
	}).(DatastoreCustomerManagedS3StoragePtrOutput)
}

type DatastoreJsonConfiguration struct {
}

// DatastoreJsonConfigurationInput is an input type that accepts DatastoreJsonConfigurationArgs and DatastoreJsonConfigurationOutput values.
// You can construct a concrete instance of `DatastoreJsonConfigurationInput` via:
//
//	DatastoreJsonConfigurationArgs{...}
type DatastoreJsonConfigurationInput interface {
	pulumi.Input

	ToDatastoreJsonConfigurationOutput() DatastoreJsonConfigurationOutput
	ToDatastoreJsonConfigurationOutputWithContext(context.Context) DatastoreJsonConfigurationOutput
}

type DatastoreJsonConfigurationArgs struct {
}

func (DatastoreJsonConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreJsonConfiguration)(nil)).Elem()
}

func (i DatastoreJsonConfigurationArgs) ToDatastoreJsonConfigurationOutput() DatastoreJsonConfigurationOutput {
	return i.ToDatastoreJsonConfigurationOutputWithContext(context.Background())
}

func (i DatastoreJsonConfigurationArgs) ToDatastoreJsonConfigurationOutputWithContext(ctx context.Context) DatastoreJsonConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreJsonConfigurationOutput)
}

func (i DatastoreJsonConfigurationArgs) ToDatastoreJsonConfigurationPtrOutput() DatastoreJsonConfigurationPtrOutput {
	return i.ToDatastoreJsonConfigurationPtrOutputWithContext(context.Background())
}

func (i DatastoreJsonConfigurationArgs) ToDatastoreJsonConfigurationPtrOutputWithContext(ctx context.Context) DatastoreJsonConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreJsonConfigurationOutput).ToDatastoreJsonConfigurationPtrOutputWithContext(ctx)
}

// DatastoreJsonConfigurationPtrInput is an input type that accepts DatastoreJsonConfigurationArgs, DatastoreJsonConfigurationPtr and DatastoreJsonConfigurationPtrOutput values.
// You can construct a concrete instance of `DatastoreJsonConfigurationPtrInput` via:
//
//	        DatastoreJsonConfigurationArgs{...}
//
//	or:
//
//	        nil
type DatastoreJsonConfigurationPtrInput interface {
	pulumi.Input

	ToDatastoreJsonConfigurationPtrOutput() DatastoreJsonConfigurationPtrOutput
	ToDatastoreJsonConfigurationPtrOutputWithContext(context.Context) DatastoreJsonConfigurationPtrOutput
}

type datastoreJsonConfigurationPtrType DatastoreJsonConfigurationArgs

func DatastoreJsonConfigurationPtr(v *DatastoreJsonConfigurationArgs) DatastoreJsonConfigurationPtrInput {
	return (*datastoreJsonConfigurationPtrType)(v)
}

func (*datastoreJsonConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreJsonConfiguration)(nil)).Elem()
}

func (i *datastoreJsonConfigurationPtrType) ToDatastoreJsonConfigurationPtrOutput() DatastoreJsonConfigurationPtrOutput {
	return i.ToDatastoreJsonConfigurationPtrOutputWithContext(context.Background())
}

func (i *datastoreJsonConfigurationPtrType) ToDatastoreJsonConfigurationPtrOutputWithContext(ctx context.Context) DatastoreJsonConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreJsonConfigurationPtrOutput)
}

type DatastoreJsonConfigurationOutput struct{ *pulumi.OutputState }

func (DatastoreJsonConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreJsonConfiguration)(nil)).Elem()
}

func (o DatastoreJsonConfigurationOutput) ToDatastoreJsonConfigurationOutput() DatastoreJsonConfigurationOutput {
	return o
}

func (o DatastoreJsonConfigurationOutput) ToDatastoreJsonConfigurationOutputWithContext(ctx context.Context) DatastoreJsonConfigurationOutput {
	return o
}

func (o DatastoreJsonConfigurationOutput) ToDatastoreJsonConfigurationPtrOutput() DatastoreJsonConfigurationPtrOutput {
	return o.ToDatastoreJsonConfigurationPtrOutputWithContext(context.Background())
}

func (o DatastoreJsonConfigurationOutput) ToDatastoreJsonConfigurationPtrOutputWithContext(ctx context.Context) DatastoreJsonConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreJsonConfiguration) *DatastoreJsonConfiguration {
		return &v
	}).(DatastoreJsonConfigurationPtrOutput)
}

type DatastoreJsonConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatastoreJsonConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreJsonConfiguration)(nil)).Elem()
}

func (o DatastoreJsonConfigurationPtrOutput) ToDatastoreJsonConfigurationPtrOutput() DatastoreJsonConfigurationPtrOutput {
	return o
}

func (o DatastoreJsonConfigurationPtrOutput) ToDatastoreJsonConfigurationPtrOutputWithContext(ctx context.Context) DatastoreJsonConfigurationPtrOutput {
	return o
}

func (o DatastoreJsonConfigurationPtrOutput) Elem() DatastoreJsonConfigurationOutput {
	return o.ApplyT(func(v *DatastoreJsonConfiguration) DatastoreJsonConfiguration {
		if v != nil {
			return *v
		}
		var ret DatastoreJsonConfiguration
		return ret
	}).(DatastoreJsonConfigurationOutput)
}

type DatastoreParquetConfiguration struct {
	// Information needed to define a schema.
	SchemaDefinition *DatastoreSchemaDefinition `pulumi:"schemaDefinition"`
}

// DatastoreParquetConfigurationInput is an input type that accepts DatastoreParquetConfigurationArgs and DatastoreParquetConfigurationOutput values.
// You can construct a concrete instance of `DatastoreParquetConfigurationInput` via:
//
//	DatastoreParquetConfigurationArgs{...}
type DatastoreParquetConfigurationInput interface {
	pulumi.Input

	ToDatastoreParquetConfigurationOutput() DatastoreParquetConfigurationOutput
	ToDatastoreParquetConfigurationOutputWithContext(context.Context) DatastoreParquetConfigurationOutput
}

type DatastoreParquetConfigurationArgs struct {
	// Information needed to define a schema.
	SchemaDefinition DatastoreSchemaDefinitionPtrInput `pulumi:"schemaDefinition"`
}

func (DatastoreParquetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreParquetConfiguration)(nil)).Elem()
}

func (i DatastoreParquetConfigurationArgs) ToDatastoreParquetConfigurationOutput() DatastoreParquetConfigurationOutput {
	return i.ToDatastoreParquetConfigurationOutputWithContext(context.Background())
}

func (i DatastoreParquetConfigurationArgs) ToDatastoreParquetConfigurationOutputWithContext(ctx context.Context) DatastoreParquetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreParquetConfigurationOutput)
}

func (i DatastoreParquetConfigurationArgs) ToDatastoreParquetConfigurationPtrOutput() DatastoreParquetConfigurationPtrOutput {
	return i.ToDatastoreParquetConfigurationPtrOutputWithContext(context.Background())
}

func (i DatastoreParquetConfigurationArgs) ToDatastoreParquetConfigurationPtrOutputWithContext(ctx context.Context) DatastoreParquetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreParquetConfigurationOutput).ToDatastoreParquetConfigurationPtrOutputWithContext(ctx)
}

// DatastoreParquetConfigurationPtrInput is an input type that accepts DatastoreParquetConfigurationArgs, DatastoreParquetConfigurationPtr and DatastoreParquetConfigurationPtrOutput values.
// You can construct a concrete instance of `DatastoreParquetConfigurationPtrInput` via:
//
//	        DatastoreParquetConfigurationArgs{...}
//
//	or:
//
//	        nil
type DatastoreParquetConfigurationPtrInput interface {
	pulumi.Input

	ToDatastoreParquetConfigurationPtrOutput() DatastoreParquetConfigurationPtrOutput
	ToDatastoreParquetConfigurationPtrOutputWithContext(context.Context) DatastoreParquetConfigurationPtrOutput
}

type datastoreParquetConfigurationPtrType DatastoreParquetConfigurationArgs

func DatastoreParquetConfigurationPtr(v *DatastoreParquetConfigurationArgs) DatastoreParquetConfigurationPtrInput {
	return (*datastoreParquetConfigurationPtrType)(v)
}

func (*datastoreParquetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreParquetConfiguration)(nil)).Elem()
}

func (i *datastoreParquetConfigurationPtrType) ToDatastoreParquetConfigurationPtrOutput() DatastoreParquetConfigurationPtrOutput {
	return i.ToDatastoreParquetConfigurationPtrOutputWithContext(context.Background())
}

func (i *datastoreParquetConfigurationPtrType) ToDatastoreParquetConfigurationPtrOutputWithContext(ctx context.Context) DatastoreParquetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreParquetConfigurationPtrOutput)
}

type DatastoreParquetConfigurationOutput struct{ *pulumi.OutputState }

func (DatastoreParquetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreParquetConfiguration)(nil)).Elem()
}

func (o DatastoreParquetConfigurationOutput) ToDatastoreParquetConfigurationOutput() DatastoreParquetConfigurationOutput {
	return o
}

func (o DatastoreParquetConfigurationOutput) ToDatastoreParquetConfigurationOutputWithContext(ctx context.Context) DatastoreParquetConfigurationOutput {
	return o
}

func (o DatastoreParquetConfigurationOutput) ToDatastoreParquetConfigurationPtrOutput() DatastoreParquetConfigurationPtrOutput {
	return o.ToDatastoreParquetConfigurationPtrOutputWithContext(context.Background())
}

func (o DatastoreParquetConfigurationOutput) ToDatastoreParquetConfigurationPtrOutputWithContext(ctx context.Context) DatastoreParquetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreParquetConfiguration) *DatastoreParquetConfiguration {
		return &v
	}).(DatastoreParquetConfigurationPtrOutput)
}

// Information needed to define a schema.
func (o DatastoreParquetConfigurationOutput) SchemaDefinition() DatastoreSchemaDefinitionPtrOutput {
	return o.ApplyT(func(v DatastoreParquetConfiguration) *DatastoreSchemaDefinition { return v.SchemaDefinition }).(DatastoreSchemaDefinitionPtrOutput)
}

type DatastoreParquetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatastoreParquetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreParquetConfiguration)(nil)).Elem()
}

func (o DatastoreParquetConfigurationPtrOutput) ToDatastoreParquetConfigurationPtrOutput() DatastoreParquetConfigurationPtrOutput {
	return o
}

func (o DatastoreParquetConfigurationPtrOutput) ToDatastoreParquetConfigurationPtrOutputWithContext(ctx context.Context) DatastoreParquetConfigurationPtrOutput {
	return o
}

func (o DatastoreParquetConfigurationPtrOutput) Elem() DatastoreParquetConfigurationOutput {
	return o.ApplyT(func(v *DatastoreParquetConfiguration) DatastoreParquetConfiguration {
		if v != nil {
			return *v
		}
		var ret DatastoreParquetConfiguration
		return ret
	}).(DatastoreParquetConfigurationOutput)
}

// Information needed to define a schema.
func (o DatastoreParquetConfigurationPtrOutput) SchemaDefinition() DatastoreSchemaDefinitionPtrOutput {
	return o.ApplyT(func(v *DatastoreParquetConfiguration) *DatastoreSchemaDefinition {
		if v == nil {
			return nil
		}
		return v.SchemaDefinition
	}).(DatastoreSchemaDefinitionPtrOutput)
}

type DatastorePartition struct {
	// A partition dimension defined by an attribute.
	Partition *Partition `pulumi:"partition"`
	// A partition dimension defined by a timestamp attribute.
	TimestampPartition *DatastoreTimestampPartition `pulumi:"timestampPartition"`
}

// DatastorePartitionInput is an input type that accepts DatastorePartitionArgs and DatastorePartitionOutput values.
// You can construct a concrete instance of `DatastorePartitionInput` via:
//
//	DatastorePartitionArgs{...}
type DatastorePartitionInput interface {
	pulumi.Input

	ToDatastorePartitionOutput() DatastorePartitionOutput
	ToDatastorePartitionOutputWithContext(context.Context) DatastorePartitionOutput
}

type DatastorePartitionArgs struct {
	// A partition dimension defined by an attribute.
	Partition PartitionPtrInput `pulumi:"partition"`
	// A partition dimension defined by a timestamp attribute.
	TimestampPartition DatastoreTimestampPartitionPtrInput `pulumi:"timestampPartition"`
}

func (DatastorePartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastorePartition)(nil)).Elem()
}

func (i DatastorePartitionArgs) ToDatastorePartitionOutput() DatastorePartitionOutput {
	return i.ToDatastorePartitionOutputWithContext(context.Background())
}

func (i DatastorePartitionArgs) ToDatastorePartitionOutputWithContext(ctx context.Context) DatastorePartitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePartitionOutput)
}

// DatastorePartitionArrayInput is an input type that accepts DatastorePartitionArray and DatastorePartitionArrayOutput values.
// You can construct a concrete instance of `DatastorePartitionArrayInput` via:
//
//	DatastorePartitionArray{ DatastorePartitionArgs{...} }
type DatastorePartitionArrayInput interface {
	pulumi.Input

	ToDatastorePartitionArrayOutput() DatastorePartitionArrayOutput
	ToDatastorePartitionArrayOutputWithContext(context.Context) DatastorePartitionArrayOutput
}

type DatastorePartitionArray []DatastorePartitionInput

func (DatastorePartitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastorePartition)(nil)).Elem()
}

func (i DatastorePartitionArray) ToDatastorePartitionArrayOutput() DatastorePartitionArrayOutput {
	return i.ToDatastorePartitionArrayOutputWithContext(context.Background())
}

func (i DatastorePartitionArray) ToDatastorePartitionArrayOutputWithContext(ctx context.Context) DatastorePartitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePartitionArrayOutput)
}

type DatastorePartitionOutput struct{ *pulumi.OutputState }

func (DatastorePartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastorePartition)(nil)).Elem()
}

func (o DatastorePartitionOutput) ToDatastorePartitionOutput() DatastorePartitionOutput {
	return o
}

func (o DatastorePartitionOutput) ToDatastorePartitionOutputWithContext(ctx context.Context) DatastorePartitionOutput {
	return o
}

// A partition dimension defined by an attribute.
func (o DatastorePartitionOutput) Partition() PartitionPtrOutput {
	return o.ApplyT(func(v DatastorePartition) *Partition { return v.Partition }).(PartitionPtrOutput)
}

// A partition dimension defined by a timestamp attribute.
func (o DatastorePartitionOutput) TimestampPartition() DatastoreTimestampPartitionPtrOutput {
	return o.ApplyT(func(v DatastorePartition) *DatastoreTimestampPartition { return v.TimestampPartition }).(DatastoreTimestampPartitionPtrOutput)
}

type DatastorePartitionArrayOutput struct{ *pulumi.OutputState }

func (DatastorePartitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastorePartition)(nil)).Elem()
}

func (o DatastorePartitionArrayOutput) ToDatastorePartitionArrayOutput() DatastorePartitionArrayOutput {
	return o
}

func (o DatastorePartitionArrayOutput) ToDatastorePartitionArrayOutputWithContext(ctx context.Context) DatastorePartitionArrayOutput {
	return o
}

func (o DatastorePartitionArrayOutput) Index(i pulumi.IntInput) DatastorePartitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatastorePartition {
		return vs[0].([]DatastorePartition)[vs[1].(int)]
	}).(DatastorePartitionOutput)
}

type DatastorePartitions struct {
	// A list of partition dimensions in a data store.
	Partitions []DatastorePartition `pulumi:"partitions"`
}

// DatastorePartitionsInput is an input type that accepts DatastorePartitionsArgs and DatastorePartitionsOutput values.
// You can construct a concrete instance of `DatastorePartitionsInput` via:
//
//	DatastorePartitionsArgs{...}
type DatastorePartitionsInput interface {
	pulumi.Input

	ToDatastorePartitionsOutput() DatastorePartitionsOutput
	ToDatastorePartitionsOutputWithContext(context.Context) DatastorePartitionsOutput
}

type DatastorePartitionsArgs struct {
	// A list of partition dimensions in a data store.
	Partitions DatastorePartitionArrayInput `pulumi:"partitions"`
}

func (DatastorePartitionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastorePartitions)(nil)).Elem()
}

func (i DatastorePartitionsArgs) ToDatastorePartitionsOutput() DatastorePartitionsOutput {
	return i.ToDatastorePartitionsOutputWithContext(context.Background())
}

func (i DatastorePartitionsArgs) ToDatastorePartitionsOutputWithContext(ctx context.Context) DatastorePartitionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePartitionsOutput)
}

func (i DatastorePartitionsArgs) ToDatastorePartitionsPtrOutput() DatastorePartitionsPtrOutput {
	return i.ToDatastorePartitionsPtrOutputWithContext(context.Background())
}

func (i DatastorePartitionsArgs) ToDatastorePartitionsPtrOutputWithContext(ctx context.Context) DatastorePartitionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePartitionsOutput).ToDatastorePartitionsPtrOutputWithContext(ctx)
}

// DatastorePartitionsPtrInput is an input type that accepts DatastorePartitionsArgs, DatastorePartitionsPtr and DatastorePartitionsPtrOutput values.
// You can construct a concrete instance of `DatastorePartitionsPtrInput` via:
//
//	        DatastorePartitionsArgs{...}
//
//	or:
//
//	        nil
type DatastorePartitionsPtrInput interface {
	pulumi.Input

	ToDatastorePartitionsPtrOutput() DatastorePartitionsPtrOutput
	ToDatastorePartitionsPtrOutputWithContext(context.Context) DatastorePartitionsPtrOutput
}

type datastorePartitionsPtrType DatastorePartitionsArgs

func DatastorePartitionsPtr(v *DatastorePartitionsArgs) DatastorePartitionsPtrInput {
	return (*datastorePartitionsPtrType)(v)
}

func (*datastorePartitionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastorePartitions)(nil)).Elem()
}

func (i *datastorePartitionsPtrType) ToDatastorePartitionsPtrOutput() DatastorePartitionsPtrOutput {
	return i.ToDatastorePartitionsPtrOutputWithContext(context.Background())
}

func (i *datastorePartitionsPtrType) ToDatastorePartitionsPtrOutputWithContext(ctx context.Context) DatastorePartitionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePartitionsPtrOutput)
}

type DatastorePartitionsOutput struct{ *pulumi.OutputState }

func (DatastorePartitionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastorePartitions)(nil)).Elem()
}

func (o DatastorePartitionsOutput) ToDatastorePartitionsOutput() DatastorePartitionsOutput {
	return o
}

func (o DatastorePartitionsOutput) ToDatastorePartitionsOutputWithContext(ctx context.Context) DatastorePartitionsOutput {
	return o
}

func (o DatastorePartitionsOutput) ToDatastorePartitionsPtrOutput() DatastorePartitionsPtrOutput {
	return o.ToDatastorePartitionsPtrOutputWithContext(context.Background())
}

func (o DatastorePartitionsOutput) ToDatastorePartitionsPtrOutputWithContext(ctx context.Context) DatastorePartitionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastorePartitions) *DatastorePartitions {
		return &v
	}).(DatastorePartitionsPtrOutput)
}

// A list of partition dimensions in a data store.
func (o DatastorePartitionsOutput) Partitions() DatastorePartitionArrayOutput {
	return o.ApplyT(func(v DatastorePartitions) []DatastorePartition { return v.Partitions }).(DatastorePartitionArrayOutput)
}

type DatastorePartitionsPtrOutput struct{ *pulumi.OutputState }

func (DatastorePartitionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastorePartitions)(nil)).Elem()
}

func (o DatastorePartitionsPtrOutput) ToDatastorePartitionsPtrOutput() DatastorePartitionsPtrOutput {
	return o
}

func (o DatastorePartitionsPtrOutput) ToDatastorePartitionsPtrOutputWithContext(ctx context.Context) DatastorePartitionsPtrOutput {
	return o
}

func (o DatastorePartitionsPtrOutput) Elem() DatastorePartitionsOutput {
	return o.ApplyT(func(v *DatastorePartitions) DatastorePartitions {
		if v != nil {
			return *v
		}
		var ret DatastorePartitions
		return ret
	}).(DatastorePartitionsOutput)
}

// A list of partition dimensions in a data store.
func (o DatastorePartitionsPtrOutput) Partitions() DatastorePartitionArrayOutput {
	return o.ApplyT(func(v *DatastorePartitions) []DatastorePartition {
		if v == nil {
			return nil
		}
		return v.Partitions
	}).(DatastorePartitionArrayOutput)
}

type DatastoreRetentionPeriod struct {
	// The number of days that message data is kept. The `unlimited` parameter must be false.
	NumberOfDays *int `pulumi:"numberOfDays"`
	// If true, message data is kept indefinitely.
	Unlimited *bool `pulumi:"unlimited"`
}

// DatastoreRetentionPeriodInput is an input type that accepts DatastoreRetentionPeriodArgs and DatastoreRetentionPeriodOutput values.
// You can construct a concrete instance of `DatastoreRetentionPeriodInput` via:
//
//	DatastoreRetentionPeriodArgs{...}
type DatastoreRetentionPeriodInput interface {
	pulumi.Input

	ToDatastoreRetentionPeriodOutput() DatastoreRetentionPeriodOutput
	ToDatastoreRetentionPeriodOutputWithContext(context.Context) DatastoreRetentionPeriodOutput
}

type DatastoreRetentionPeriodArgs struct {
	// The number of days that message data is kept. The `unlimited` parameter must be false.
	NumberOfDays pulumi.IntPtrInput `pulumi:"numberOfDays"`
	// If true, message data is kept indefinitely.
	Unlimited pulumi.BoolPtrInput `pulumi:"unlimited"`
}

func (DatastoreRetentionPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreRetentionPeriod)(nil)).Elem()
}

func (i DatastoreRetentionPeriodArgs) ToDatastoreRetentionPeriodOutput() DatastoreRetentionPeriodOutput {
	return i.ToDatastoreRetentionPeriodOutputWithContext(context.Background())
}

func (i DatastoreRetentionPeriodArgs) ToDatastoreRetentionPeriodOutputWithContext(ctx context.Context) DatastoreRetentionPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreRetentionPeriodOutput)
}

func (i DatastoreRetentionPeriodArgs) ToDatastoreRetentionPeriodPtrOutput() DatastoreRetentionPeriodPtrOutput {
	return i.ToDatastoreRetentionPeriodPtrOutputWithContext(context.Background())
}

func (i DatastoreRetentionPeriodArgs) ToDatastoreRetentionPeriodPtrOutputWithContext(ctx context.Context) DatastoreRetentionPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreRetentionPeriodOutput).ToDatastoreRetentionPeriodPtrOutputWithContext(ctx)
}

// DatastoreRetentionPeriodPtrInput is an input type that accepts DatastoreRetentionPeriodArgs, DatastoreRetentionPeriodPtr and DatastoreRetentionPeriodPtrOutput values.
// You can construct a concrete instance of `DatastoreRetentionPeriodPtrInput` via:
//
//	        DatastoreRetentionPeriodArgs{...}
//
//	or:
//
//	        nil
type DatastoreRetentionPeriodPtrInput interface {
	pulumi.Input

	ToDatastoreRetentionPeriodPtrOutput() DatastoreRetentionPeriodPtrOutput
	ToDatastoreRetentionPeriodPtrOutputWithContext(context.Context) DatastoreRetentionPeriodPtrOutput
}

type datastoreRetentionPeriodPtrType DatastoreRetentionPeriodArgs

func DatastoreRetentionPeriodPtr(v *DatastoreRetentionPeriodArgs) DatastoreRetentionPeriodPtrInput {
	return (*datastoreRetentionPeriodPtrType)(v)
}

func (*datastoreRetentionPeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreRetentionPeriod)(nil)).Elem()
}

func (i *datastoreRetentionPeriodPtrType) ToDatastoreRetentionPeriodPtrOutput() DatastoreRetentionPeriodPtrOutput {
	return i.ToDatastoreRetentionPeriodPtrOutputWithContext(context.Background())
}

func (i *datastoreRetentionPeriodPtrType) ToDatastoreRetentionPeriodPtrOutputWithContext(ctx context.Context) DatastoreRetentionPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreRetentionPeriodPtrOutput)
}

type DatastoreRetentionPeriodOutput struct{ *pulumi.OutputState }

func (DatastoreRetentionPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreRetentionPeriod)(nil)).Elem()
}

func (o DatastoreRetentionPeriodOutput) ToDatastoreRetentionPeriodOutput() DatastoreRetentionPeriodOutput {
	return o
}

func (o DatastoreRetentionPeriodOutput) ToDatastoreRetentionPeriodOutputWithContext(ctx context.Context) DatastoreRetentionPeriodOutput {
	return o
}

func (o DatastoreRetentionPeriodOutput) ToDatastoreRetentionPeriodPtrOutput() DatastoreRetentionPeriodPtrOutput {
	return o.ToDatastoreRetentionPeriodPtrOutputWithContext(context.Background())
}

func (o DatastoreRetentionPeriodOutput) ToDatastoreRetentionPeriodPtrOutputWithContext(ctx context.Context) DatastoreRetentionPeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreRetentionPeriod) *DatastoreRetentionPeriod {
		return &v
	}).(DatastoreRetentionPeriodPtrOutput)
}

// The number of days that message data is kept. The `unlimited` parameter must be false.
func (o DatastoreRetentionPeriodOutput) NumberOfDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatastoreRetentionPeriod) *int { return v.NumberOfDays }).(pulumi.IntPtrOutput)
}

// If true, message data is kept indefinitely.
func (o DatastoreRetentionPeriodOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatastoreRetentionPeriod) *bool { return v.Unlimited }).(pulumi.BoolPtrOutput)
}

type DatastoreRetentionPeriodPtrOutput struct{ *pulumi.OutputState }

func (DatastoreRetentionPeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreRetentionPeriod)(nil)).Elem()
}

func (o DatastoreRetentionPeriodPtrOutput) ToDatastoreRetentionPeriodPtrOutput() DatastoreRetentionPeriodPtrOutput {
	return o
}

func (o DatastoreRetentionPeriodPtrOutput) ToDatastoreRetentionPeriodPtrOutputWithContext(ctx context.Context) DatastoreRetentionPeriodPtrOutput {
	return o
}

func (o DatastoreRetentionPeriodPtrOutput) Elem() DatastoreRetentionPeriodOutput {
	return o.ApplyT(func(v *DatastoreRetentionPeriod) DatastoreRetentionPeriod {
		if v != nil {
			return *v
		}
		var ret DatastoreRetentionPeriod
		return ret
	}).(DatastoreRetentionPeriodOutput)
}

// The number of days that message data is kept. The `unlimited` parameter must be false.
func (o DatastoreRetentionPeriodPtrOutput) NumberOfDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatastoreRetentionPeriod) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfDays
	}).(pulumi.IntPtrOutput)
}

// If true, message data is kept indefinitely.
func (o DatastoreRetentionPeriodPtrOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatastoreRetentionPeriod) *bool {
		if v == nil {
			return nil
		}
		return v.Unlimited
	}).(pulumi.BoolPtrOutput)
}

type DatastoreSchemaDefinition struct {
	// Specifies one or more columns that store your data.
	//
	// Each schema can have up to 100 columns. Each column can have up to 100 nested types.
	Columns []DatastoreColumn `pulumi:"columns"`
}

// DatastoreSchemaDefinitionInput is an input type that accepts DatastoreSchemaDefinitionArgs and DatastoreSchemaDefinitionOutput values.
// You can construct a concrete instance of `DatastoreSchemaDefinitionInput` via:
//
//	DatastoreSchemaDefinitionArgs{...}
type DatastoreSchemaDefinitionInput interface {
	pulumi.Input

	ToDatastoreSchemaDefinitionOutput() DatastoreSchemaDefinitionOutput
	ToDatastoreSchemaDefinitionOutputWithContext(context.Context) DatastoreSchemaDefinitionOutput
}

type DatastoreSchemaDefinitionArgs struct {
	// Specifies one or more columns that store your data.
	//
	// Each schema can have up to 100 columns. Each column can have up to 100 nested types.
	Columns DatastoreColumnArrayInput `pulumi:"columns"`
}

func (DatastoreSchemaDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreSchemaDefinition)(nil)).Elem()
}

func (i DatastoreSchemaDefinitionArgs) ToDatastoreSchemaDefinitionOutput() DatastoreSchemaDefinitionOutput {
	return i.ToDatastoreSchemaDefinitionOutputWithContext(context.Background())
}

func (i DatastoreSchemaDefinitionArgs) ToDatastoreSchemaDefinitionOutputWithContext(ctx context.Context) DatastoreSchemaDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreSchemaDefinitionOutput)
}

func (i DatastoreSchemaDefinitionArgs) ToDatastoreSchemaDefinitionPtrOutput() DatastoreSchemaDefinitionPtrOutput {
	return i.ToDatastoreSchemaDefinitionPtrOutputWithContext(context.Background())
}

func (i DatastoreSchemaDefinitionArgs) ToDatastoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) DatastoreSchemaDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreSchemaDefinitionOutput).ToDatastoreSchemaDefinitionPtrOutputWithContext(ctx)
}

// DatastoreSchemaDefinitionPtrInput is an input type that accepts DatastoreSchemaDefinitionArgs, DatastoreSchemaDefinitionPtr and DatastoreSchemaDefinitionPtrOutput values.
// You can construct a concrete instance of `DatastoreSchemaDefinitionPtrInput` via:
//
//	        DatastoreSchemaDefinitionArgs{...}
//
//	or:
//
//	        nil
type DatastoreSchemaDefinitionPtrInput interface {
	pulumi.Input

	ToDatastoreSchemaDefinitionPtrOutput() DatastoreSchemaDefinitionPtrOutput
	ToDatastoreSchemaDefinitionPtrOutputWithContext(context.Context) DatastoreSchemaDefinitionPtrOutput
}

type datastoreSchemaDefinitionPtrType DatastoreSchemaDefinitionArgs

func DatastoreSchemaDefinitionPtr(v *DatastoreSchemaDefinitionArgs) DatastoreSchemaDefinitionPtrInput {
	return (*datastoreSchemaDefinitionPtrType)(v)
}

func (*datastoreSchemaDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreSchemaDefinition)(nil)).Elem()
}

func (i *datastoreSchemaDefinitionPtrType) ToDatastoreSchemaDefinitionPtrOutput() DatastoreSchemaDefinitionPtrOutput {
	return i.ToDatastoreSchemaDefinitionPtrOutputWithContext(context.Background())
}

func (i *datastoreSchemaDefinitionPtrType) ToDatastoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) DatastoreSchemaDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreSchemaDefinitionPtrOutput)
}

type DatastoreSchemaDefinitionOutput struct{ *pulumi.OutputState }

func (DatastoreSchemaDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreSchemaDefinition)(nil)).Elem()
}

func (o DatastoreSchemaDefinitionOutput) ToDatastoreSchemaDefinitionOutput() DatastoreSchemaDefinitionOutput {
	return o
}

func (o DatastoreSchemaDefinitionOutput) ToDatastoreSchemaDefinitionOutputWithContext(ctx context.Context) DatastoreSchemaDefinitionOutput {
	return o
}

func (o DatastoreSchemaDefinitionOutput) ToDatastoreSchemaDefinitionPtrOutput() DatastoreSchemaDefinitionPtrOutput {
	return o.ToDatastoreSchemaDefinitionPtrOutputWithContext(context.Background())
}

func (o DatastoreSchemaDefinitionOutput) ToDatastoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) DatastoreSchemaDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreSchemaDefinition) *DatastoreSchemaDefinition {
		return &v
	}).(DatastoreSchemaDefinitionPtrOutput)
}

// Specifies one or more columns that store your data.
//
// Each schema can have up to 100 columns. Each column can have up to 100 nested types.
func (o DatastoreSchemaDefinitionOutput) Columns() DatastoreColumnArrayOutput {
	return o.ApplyT(func(v DatastoreSchemaDefinition) []DatastoreColumn { return v.Columns }).(DatastoreColumnArrayOutput)
}

type DatastoreSchemaDefinitionPtrOutput struct{ *pulumi.OutputState }

func (DatastoreSchemaDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreSchemaDefinition)(nil)).Elem()
}

func (o DatastoreSchemaDefinitionPtrOutput) ToDatastoreSchemaDefinitionPtrOutput() DatastoreSchemaDefinitionPtrOutput {
	return o
}

func (o DatastoreSchemaDefinitionPtrOutput) ToDatastoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) DatastoreSchemaDefinitionPtrOutput {
	return o
}

func (o DatastoreSchemaDefinitionPtrOutput) Elem() DatastoreSchemaDefinitionOutput {
	return o.ApplyT(func(v *DatastoreSchemaDefinition) DatastoreSchemaDefinition {
		if v != nil {
			return *v
		}
		var ret DatastoreSchemaDefinition
		return ret
	}).(DatastoreSchemaDefinitionOutput)
}

// Specifies one or more columns that store your data.
//
// Each schema can have up to 100 columns. Each column can have up to 100 nested types.
func (o DatastoreSchemaDefinitionPtrOutput) Columns() DatastoreColumnArrayOutput {
	return o.ApplyT(func(v *DatastoreSchemaDefinition) []DatastoreColumn {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(DatastoreColumnArrayOutput)
}

type DatastoreServiceManagedS3 struct {
}

// DatastoreServiceManagedS3Input is an input type that accepts DatastoreServiceManagedS3Args and DatastoreServiceManagedS3Output values.
// You can construct a concrete instance of `DatastoreServiceManagedS3Input` via:
//
//	DatastoreServiceManagedS3Args{...}
type DatastoreServiceManagedS3Input interface {
	pulumi.Input

	ToDatastoreServiceManagedS3Output() DatastoreServiceManagedS3Output
	ToDatastoreServiceManagedS3OutputWithContext(context.Context) DatastoreServiceManagedS3Output
}

type DatastoreServiceManagedS3Args struct {
}

func (DatastoreServiceManagedS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreServiceManagedS3)(nil)).Elem()
}

func (i DatastoreServiceManagedS3Args) ToDatastoreServiceManagedS3Output() DatastoreServiceManagedS3Output {
	return i.ToDatastoreServiceManagedS3OutputWithContext(context.Background())
}

func (i DatastoreServiceManagedS3Args) ToDatastoreServiceManagedS3OutputWithContext(ctx context.Context) DatastoreServiceManagedS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreServiceManagedS3Output)
}

func (i DatastoreServiceManagedS3Args) ToDatastoreServiceManagedS3PtrOutput() DatastoreServiceManagedS3PtrOutput {
	return i.ToDatastoreServiceManagedS3PtrOutputWithContext(context.Background())
}

func (i DatastoreServiceManagedS3Args) ToDatastoreServiceManagedS3PtrOutputWithContext(ctx context.Context) DatastoreServiceManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreServiceManagedS3Output).ToDatastoreServiceManagedS3PtrOutputWithContext(ctx)
}

// DatastoreServiceManagedS3PtrInput is an input type that accepts DatastoreServiceManagedS3Args, DatastoreServiceManagedS3Ptr and DatastoreServiceManagedS3PtrOutput values.
// You can construct a concrete instance of `DatastoreServiceManagedS3PtrInput` via:
//
//	        DatastoreServiceManagedS3Args{...}
//
//	or:
//
//	        nil
type DatastoreServiceManagedS3PtrInput interface {
	pulumi.Input

	ToDatastoreServiceManagedS3PtrOutput() DatastoreServiceManagedS3PtrOutput
	ToDatastoreServiceManagedS3PtrOutputWithContext(context.Context) DatastoreServiceManagedS3PtrOutput
}

type datastoreServiceManagedS3PtrType DatastoreServiceManagedS3Args

func DatastoreServiceManagedS3Ptr(v *DatastoreServiceManagedS3Args) DatastoreServiceManagedS3PtrInput {
	return (*datastoreServiceManagedS3PtrType)(v)
}

func (*datastoreServiceManagedS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreServiceManagedS3)(nil)).Elem()
}

func (i *datastoreServiceManagedS3PtrType) ToDatastoreServiceManagedS3PtrOutput() DatastoreServiceManagedS3PtrOutput {
	return i.ToDatastoreServiceManagedS3PtrOutputWithContext(context.Background())
}

func (i *datastoreServiceManagedS3PtrType) ToDatastoreServiceManagedS3PtrOutputWithContext(ctx context.Context) DatastoreServiceManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreServiceManagedS3PtrOutput)
}

type DatastoreServiceManagedS3Output struct{ *pulumi.OutputState }

func (DatastoreServiceManagedS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreServiceManagedS3)(nil)).Elem()
}

func (o DatastoreServiceManagedS3Output) ToDatastoreServiceManagedS3Output() DatastoreServiceManagedS3Output {
	return o
}

func (o DatastoreServiceManagedS3Output) ToDatastoreServiceManagedS3OutputWithContext(ctx context.Context) DatastoreServiceManagedS3Output {
	return o
}

func (o DatastoreServiceManagedS3Output) ToDatastoreServiceManagedS3PtrOutput() DatastoreServiceManagedS3PtrOutput {
	return o.ToDatastoreServiceManagedS3PtrOutputWithContext(context.Background())
}

func (o DatastoreServiceManagedS3Output) ToDatastoreServiceManagedS3PtrOutputWithContext(ctx context.Context) DatastoreServiceManagedS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreServiceManagedS3) *DatastoreServiceManagedS3 {
		return &v
	}).(DatastoreServiceManagedS3PtrOutput)
}

type DatastoreServiceManagedS3PtrOutput struct{ *pulumi.OutputState }

func (DatastoreServiceManagedS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreServiceManagedS3)(nil)).Elem()
}

func (o DatastoreServiceManagedS3PtrOutput) ToDatastoreServiceManagedS3PtrOutput() DatastoreServiceManagedS3PtrOutput {
	return o
}

func (o DatastoreServiceManagedS3PtrOutput) ToDatastoreServiceManagedS3PtrOutputWithContext(ctx context.Context) DatastoreServiceManagedS3PtrOutput {
	return o
}

func (o DatastoreServiceManagedS3PtrOutput) Elem() DatastoreServiceManagedS3Output {
	return o.ApplyT(func(v *DatastoreServiceManagedS3) DatastoreServiceManagedS3 {
		if v != nil {
			return *v
		}
		var ret DatastoreServiceManagedS3
		return ret
	}).(DatastoreServiceManagedS3Output)
}

type DatastoreStorage struct {
	// Use this to store data store data in an S3 bucket that you manage. The choice of service-managed or customer-managed S3 storage cannot be changed after creation of the data store.
	CustomerManagedS3 *DatastoreCustomerManagedS3 `pulumi:"customerManagedS3"`
	// Use this to store data used by AWS IoT SiteWise in an Amazon S3 bucket that you manage. You can't change the choice of Amazon S3 storage after your data store is created.
	IotSiteWiseMultiLayerStorage *DatastoreIotSiteWiseMultiLayerStorage `pulumi:"iotSiteWiseMultiLayerStorage"`
	// Use this to store data store data in an S3 bucket managed by the AWS IoT Analytics service. The choice of service-managed or customer-managed S3 storage cannot be changed after creation of the data store.
	ServiceManagedS3 *DatastoreServiceManagedS3 `pulumi:"serviceManagedS3"`
}

// DatastoreStorageInput is an input type that accepts DatastoreStorageArgs and DatastoreStorageOutput values.
// You can construct a concrete instance of `DatastoreStorageInput` via:
//
//	DatastoreStorageArgs{...}
type DatastoreStorageInput interface {
	pulumi.Input

	ToDatastoreStorageOutput() DatastoreStorageOutput
	ToDatastoreStorageOutputWithContext(context.Context) DatastoreStorageOutput
}

type DatastoreStorageArgs struct {
	// Use this to store data store data in an S3 bucket that you manage. The choice of service-managed or customer-managed S3 storage cannot be changed after creation of the data store.
	CustomerManagedS3 DatastoreCustomerManagedS3PtrInput `pulumi:"customerManagedS3"`
	// Use this to store data used by AWS IoT SiteWise in an Amazon S3 bucket that you manage. You can't change the choice of Amazon S3 storage after your data store is created.
	IotSiteWiseMultiLayerStorage DatastoreIotSiteWiseMultiLayerStoragePtrInput `pulumi:"iotSiteWiseMultiLayerStorage"`
	// Use this to store data store data in an S3 bucket managed by the AWS IoT Analytics service. The choice of service-managed or customer-managed S3 storage cannot be changed after creation of the data store.
	ServiceManagedS3 DatastoreServiceManagedS3PtrInput `pulumi:"serviceManagedS3"`
}

func (DatastoreStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreStorage)(nil)).Elem()
}

func (i DatastoreStorageArgs) ToDatastoreStorageOutput() DatastoreStorageOutput {
	return i.ToDatastoreStorageOutputWithContext(context.Background())
}

func (i DatastoreStorageArgs) ToDatastoreStorageOutputWithContext(ctx context.Context) DatastoreStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreStorageOutput)
}

func (i DatastoreStorageArgs) ToDatastoreStoragePtrOutput() DatastoreStoragePtrOutput {
	return i.ToDatastoreStoragePtrOutputWithContext(context.Background())
}

func (i DatastoreStorageArgs) ToDatastoreStoragePtrOutputWithContext(ctx context.Context) DatastoreStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreStorageOutput).ToDatastoreStoragePtrOutputWithContext(ctx)
}

// DatastoreStoragePtrInput is an input type that accepts DatastoreStorageArgs, DatastoreStoragePtr and DatastoreStoragePtrOutput values.
// You can construct a concrete instance of `DatastoreStoragePtrInput` via:
//
//	        DatastoreStorageArgs{...}
//
//	or:
//
//	        nil
type DatastoreStoragePtrInput interface {
	pulumi.Input

	ToDatastoreStoragePtrOutput() DatastoreStoragePtrOutput
	ToDatastoreStoragePtrOutputWithContext(context.Context) DatastoreStoragePtrOutput
}

type datastoreStoragePtrType DatastoreStorageArgs

func DatastoreStoragePtr(v *DatastoreStorageArgs) DatastoreStoragePtrInput {
	return (*datastoreStoragePtrType)(v)
}

func (*datastoreStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreStorage)(nil)).Elem()
}

func (i *datastoreStoragePtrType) ToDatastoreStoragePtrOutput() DatastoreStoragePtrOutput {
	return i.ToDatastoreStoragePtrOutputWithContext(context.Background())
}

func (i *datastoreStoragePtrType) ToDatastoreStoragePtrOutputWithContext(ctx context.Context) DatastoreStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreStoragePtrOutput)
}

type DatastoreStorageOutput struct{ *pulumi.OutputState }

func (DatastoreStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreStorage)(nil)).Elem()
}

func (o DatastoreStorageOutput) ToDatastoreStorageOutput() DatastoreStorageOutput {
	return o
}

func (o DatastoreStorageOutput) ToDatastoreStorageOutputWithContext(ctx context.Context) DatastoreStorageOutput {
	return o
}

func (o DatastoreStorageOutput) ToDatastoreStoragePtrOutput() DatastoreStoragePtrOutput {
	return o.ToDatastoreStoragePtrOutputWithContext(context.Background())
}

func (o DatastoreStorageOutput) ToDatastoreStoragePtrOutputWithContext(ctx context.Context) DatastoreStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreStorage) *DatastoreStorage {
		return &v
	}).(DatastoreStoragePtrOutput)
}

// Use this to store data store data in an S3 bucket that you manage. The choice of service-managed or customer-managed S3 storage cannot be changed after creation of the data store.
func (o DatastoreStorageOutput) CustomerManagedS3() DatastoreCustomerManagedS3PtrOutput {
	return o.ApplyT(func(v DatastoreStorage) *DatastoreCustomerManagedS3 { return v.CustomerManagedS3 }).(DatastoreCustomerManagedS3PtrOutput)
}

// Use this to store data used by AWS IoT SiteWise in an Amazon S3 bucket that you manage. You can't change the choice of Amazon S3 storage after your data store is created.
func (o DatastoreStorageOutput) IotSiteWiseMultiLayerStorage() DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return o.ApplyT(func(v DatastoreStorage) *DatastoreIotSiteWiseMultiLayerStorage { return v.IotSiteWiseMultiLayerStorage }).(DatastoreIotSiteWiseMultiLayerStoragePtrOutput)
}

// Use this to store data store data in an S3 bucket managed by the AWS IoT Analytics service. The choice of service-managed or customer-managed S3 storage cannot be changed after creation of the data store.
func (o DatastoreStorageOutput) ServiceManagedS3() DatastoreServiceManagedS3PtrOutput {
	return o.ApplyT(func(v DatastoreStorage) *DatastoreServiceManagedS3 { return v.ServiceManagedS3 }).(DatastoreServiceManagedS3PtrOutput)
}

type DatastoreStoragePtrOutput struct{ *pulumi.OutputState }

func (DatastoreStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreStorage)(nil)).Elem()
}

func (o DatastoreStoragePtrOutput) ToDatastoreStoragePtrOutput() DatastoreStoragePtrOutput {
	return o
}

func (o DatastoreStoragePtrOutput) ToDatastoreStoragePtrOutputWithContext(ctx context.Context) DatastoreStoragePtrOutput {
	return o
}

func (o DatastoreStoragePtrOutput) Elem() DatastoreStorageOutput {
	return o.ApplyT(func(v *DatastoreStorage) DatastoreStorage {
		if v != nil {
			return *v
		}
		var ret DatastoreStorage
		return ret
	}).(DatastoreStorageOutput)
}

// Use this to store data store data in an S3 bucket that you manage. The choice of service-managed or customer-managed S3 storage cannot be changed after creation of the data store.
func (o DatastoreStoragePtrOutput) CustomerManagedS3() DatastoreCustomerManagedS3PtrOutput {
	return o.ApplyT(func(v *DatastoreStorage) *DatastoreCustomerManagedS3 {
		if v == nil {
			return nil
		}
		return v.CustomerManagedS3
	}).(DatastoreCustomerManagedS3PtrOutput)
}

// Use this to store data used by AWS IoT SiteWise in an Amazon S3 bucket that you manage. You can't change the choice of Amazon S3 storage after your data store is created.
func (o DatastoreStoragePtrOutput) IotSiteWiseMultiLayerStorage() DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return o.ApplyT(func(v *DatastoreStorage) *DatastoreIotSiteWiseMultiLayerStorage {
		if v == nil {
			return nil
		}
		return v.IotSiteWiseMultiLayerStorage
	}).(DatastoreIotSiteWiseMultiLayerStoragePtrOutput)
}

// Use this to store data store data in an S3 bucket managed by the AWS IoT Analytics service. The choice of service-managed or customer-managed S3 storage cannot be changed after creation of the data store.
func (o DatastoreStoragePtrOutput) ServiceManagedS3() DatastoreServiceManagedS3PtrOutput {
	return o.ApplyT(func(v *DatastoreStorage) *DatastoreServiceManagedS3 {
		if v == nil {
			return nil
		}
		return v.ServiceManagedS3
	}).(DatastoreServiceManagedS3PtrOutput)
}

type DatastoreTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

type DatastoreTimestampPartition struct {
	// The attribute name of the partition defined by a timestamp.
	AttributeName string `pulumi:"attributeName"`
	// The timestamp format of a partition defined by a timestamp. The default format is seconds since epoch (January 1, 1970 at midnight UTC time).
	TimestampFormat *string `pulumi:"timestampFormat"`
}

// DatastoreTimestampPartitionInput is an input type that accepts DatastoreTimestampPartitionArgs and DatastoreTimestampPartitionOutput values.
// You can construct a concrete instance of `DatastoreTimestampPartitionInput` via:
//
//	DatastoreTimestampPartitionArgs{...}
type DatastoreTimestampPartitionInput interface {
	pulumi.Input

	ToDatastoreTimestampPartitionOutput() DatastoreTimestampPartitionOutput
	ToDatastoreTimestampPartitionOutputWithContext(context.Context) DatastoreTimestampPartitionOutput
}

type DatastoreTimestampPartitionArgs struct {
	// The attribute name of the partition defined by a timestamp.
	AttributeName pulumi.StringInput `pulumi:"attributeName"`
	// The timestamp format of a partition defined by a timestamp. The default format is seconds since epoch (January 1, 1970 at midnight UTC time).
	TimestampFormat pulumi.StringPtrInput `pulumi:"timestampFormat"`
}

func (DatastoreTimestampPartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreTimestampPartition)(nil)).Elem()
}

func (i DatastoreTimestampPartitionArgs) ToDatastoreTimestampPartitionOutput() DatastoreTimestampPartitionOutput {
	return i.ToDatastoreTimestampPartitionOutputWithContext(context.Background())
}

func (i DatastoreTimestampPartitionArgs) ToDatastoreTimestampPartitionOutputWithContext(ctx context.Context) DatastoreTimestampPartitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreTimestampPartitionOutput)
}

func (i DatastoreTimestampPartitionArgs) ToDatastoreTimestampPartitionPtrOutput() DatastoreTimestampPartitionPtrOutput {
	return i.ToDatastoreTimestampPartitionPtrOutputWithContext(context.Background())
}

func (i DatastoreTimestampPartitionArgs) ToDatastoreTimestampPartitionPtrOutputWithContext(ctx context.Context) DatastoreTimestampPartitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreTimestampPartitionOutput).ToDatastoreTimestampPartitionPtrOutputWithContext(ctx)
}

// DatastoreTimestampPartitionPtrInput is an input type that accepts DatastoreTimestampPartitionArgs, DatastoreTimestampPartitionPtr and DatastoreTimestampPartitionPtrOutput values.
// You can construct a concrete instance of `DatastoreTimestampPartitionPtrInput` via:
//
//	        DatastoreTimestampPartitionArgs{...}
//
//	or:
//
//	        nil
type DatastoreTimestampPartitionPtrInput interface {
	pulumi.Input

	ToDatastoreTimestampPartitionPtrOutput() DatastoreTimestampPartitionPtrOutput
	ToDatastoreTimestampPartitionPtrOutputWithContext(context.Context) DatastoreTimestampPartitionPtrOutput
}

type datastoreTimestampPartitionPtrType DatastoreTimestampPartitionArgs

func DatastoreTimestampPartitionPtr(v *DatastoreTimestampPartitionArgs) DatastoreTimestampPartitionPtrInput {
	return (*datastoreTimestampPartitionPtrType)(v)
}

func (*datastoreTimestampPartitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreTimestampPartition)(nil)).Elem()
}

func (i *datastoreTimestampPartitionPtrType) ToDatastoreTimestampPartitionPtrOutput() DatastoreTimestampPartitionPtrOutput {
	return i.ToDatastoreTimestampPartitionPtrOutputWithContext(context.Background())
}

func (i *datastoreTimestampPartitionPtrType) ToDatastoreTimestampPartitionPtrOutputWithContext(ctx context.Context) DatastoreTimestampPartitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreTimestampPartitionPtrOutput)
}

type DatastoreTimestampPartitionOutput struct{ *pulumi.OutputState }

func (DatastoreTimestampPartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreTimestampPartition)(nil)).Elem()
}

func (o DatastoreTimestampPartitionOutput) ToDatastoreTimestampPartitionOutput() DatastoreTimestampPartitionOutput {
	return o
}

func (o DatastoreTimestampPartitionOutput) ToDatastoreTimestampPartitionOutputWithContext(ctx context.Context) DatastoreTimestampPartitionOutput {
	return o
}

func (o DatastoreTimestampPartitionOutput) ToDatastoreTimestampPartitionPtrOutput() DatastoreTimestampPartitionPtrOutput {
	return o.ToDatastoreTimestampPartitionPtrOutputWithContext(context.Background())
}

func (o DatastoreTimestampPartitionOutput) ToDatastoreTimestampPartitionPtrOutputWithContext(ctx context.Context) DatastoreTimestampPartitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreTimestampPartition) *DatastoreTimestampPartition {
		return &v
	}).(DatastoreTimestampPartitionPtrOutput)
}

// The attribute name of the partition defined by a timestamp.
func (o DatastoreTimestampPartitionOutput) AttributeName() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreTimestampPartition) string { return v.AttributeName }).(pulumi.StringOutput)
}

// The timestamp format of a partition defined by a timestamp. The default format is seconds since epoch (January 1, 1970 at midnight UTC time).
func (o DatastoreTimestampPartitionOutput) TimestampFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatastoreTimestampPartition) *string { return v.TimestampFormat }).(pulumi.StringPtrOutput)
}

type DatastoreTimestampPartitionPtrOutput struct{ *pulumi.OutputState }

func (DatastoreTimestampPartitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreTimestampPartition)(nil)).Elem()
}

func (o DatastoreTimestampPartitionPtrOutput) ToDatastoreTimestampPartitionPtrOutput() DatastoreTimestampPartitionPtrOutput {
	return o
}

func (o DatastoreTimestampPartitionPtrOutput) ToDatastoreTimestampPartitionPtrOutputWithContext(ctx context.Context) DatastoreTimestampPartitionPtrOutput {
	return o
}

func (o DatastoreTimestampPartitionPtrOutput) Elem() DatastoreTimestampPartitionOutput {
	return o.ApplyT(func(v *DatastoreTimestampPartition) DatastoreTimestampPartition {
		if v != nil {
			return *v
		}
		var ret DatastoreTimestampPartition
		return ret
	}).(DatastoreTimestampPartitionOutput)
}

// The attribute name of the partition defined by a timestamp.
func (o DatastoreTimestampPartitionPtrOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreTimestampPartition) *string {
		if v == nil {
			return nil
		}
		return &v.AttributeName
	}).(pulumi.StringPtrOutput)
}

// The timestamp format of a partition defined by a timestamp. The default format is seconds since epoch (January 1, 1970 at midnight UTC time).
func (o DatastoreTimestampPartitionPtrOutput) TimestampFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreTimestampPartition) *string {
		if v == nil {
			return nil
		}
		return v.TimestampFormat
	}).(pulumi.StringPtrOutput)
}

type Partition struct {
	// The name of the attribute that defines a partition dimension.
	AttributeName string `pulumi:"attributeName"`
}

// PartitionInput is an input type that accepts PartitionArgs and PartitionOutput values.
// You can construct a concrete instance of `PartitionInput` via:
//
//	PartitionArgs{...}
type PartitionInput interface {
	pulumi.Input

	ToPartitionOutput() PartitionOutput
	ToPartitionOutputWithContext(context.Context) PartitionOutput
}

type PartitionArgs struct {
	// The name of the attribute that defines a partition dimension.
	AttributeName pulumi.StringInput `pulumi:"attributeName"`
}

func (PartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Partition)(nil)).Elem()
}

func (i PartitionArgs) ToPartitionOutput() PartitionOutput {
	return i.ToPartitionOutputWithContext(context.Background())
}

func (i PartitionArgs) ToPartitionOutputWithContext(ctx context.Context) PartitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartitionOutput)
}

func (i PartitionArgs) ToPartitionPtrOutput() PartitionPtrOutput {
	return i.ToPartitionPtrOutputWithContext(context.Background())
}

func (i PartitionArgs) ToPartitionPtrOutputWithContext(ctx context.Context) PartitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartitionOutput).ToPartitionPtrOutputWithContext(ctx)
}

// PartitionPtrInput is an input type that accepts PartitionArgs, PartitionPtr and PartitionPtrOutput values.
// You can construct a concrete instance of `PartitionPtrInput` via:
//
//	        PartitionArgs{...}
//
//	or:
//
//	        nil
type PartitionPtrInput interface {
	pulumi.Input

	ToPartitionPtrOutput() PartitionPtrOutput
	ToPartitionPtrOutputWithContext(context.Context) PartitionPtrOutput
}

type partitionPtrType PartitionArgs

func PartitionPtr(v *PartitionArgs) PartitionPtrInput {
	return (*partitionPtrType)(v)
}

func (*partitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Partition)(nil)).Elem()
}

func (i *partitionPtrType) ToPartitionPtrOutput() PartitionPtrOutput {
	return i.ToPartitionPtrOutputWithContext(context.Background())
}

func (i *partitionPtrType) ToPartitionPtrOutputWithContext(ctx context.Context) PartitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PartitionPtrOutput)
}

type PartitionOutput struct{ *pulumi.OutputState }

func (PartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Partition)(nil)).Elem()
}

func (o PartitionOutput) ToPartitionOutput() PartitionOutput {
	return o
}

func (o PartitionOutput) ToPartitionOutputWithContext(ctx context.Context) PartitionOutput {
	return o
}

func (o PartitionOutput) ToPartitionPtrOutput() PartitionPtrOutput {
	return o.ToPartitionPtrOutputWithContext(context.Background())
}

func (o PartitionOutput) ToPartitionPtrOutputWithContext(ctx context.Context) PartitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Partition) *Partition {
		return &v
	}).(PartitionPtrOutput)
}

// The name of the attribute that defines a partition dimension.
func (o PartitionOutput) AttributeName() pulumi.StringOutput {
	return o.ApplyT(func(v Partition) string { return v.AttributeName }).(pulumi.StringOutput)
}

type PartitionPtrOutput struct{ *pulumi.OutputState }

func (PartitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Partition)(nil)).Elem()
}

func (o PartitionPtrOutput) ToPartitionPtrOutput() PartitionPtrOutput {
	return o
}

func (o PartitionPtrOutput) ToPartitionPtrOutputWithContext(ctx context.Context) PartitionPtrOutput {
	return o
}

func (o PartitionPtrOutput) Elem() PartitionOutput {
	return o.ApplyT(func(v *Partition) Partition {
		if v != nil {
			return *v
		}
		var ret Partition
		return ret
	}).(PartitionOutput)
}

// The name of the attribute that defines a partition dimension.
func (o PartitionPtrOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Partition) *string {
		if v == nil {
			return nil
		}
		return &v.AttributeName
	}).(pulumi.StringPtrOutput)
}

type PipelineActivity struct {
	// Adds other attributes based on existing attributes in the message.
	AddAttributes *PipelineAddAttributes `pulumi:"addAttributes"`
	// Determines the source of the messages to be processed.
	Channel *PipelineChannel `pulumi:"channel"`
	// Specifies where to store the processed message data.
	Datastore *PipelineDatastore `pulumi:"datastore"`
	// Adds data from the AWS IoT device registry to your message.
	DeviceRegistryEnrich *PipelineDeviceRegistryEnrich `pulumi:"deviceRegistryEnrich"`
	// Adds information from the AWS IoT Device Shadows service to a message.
	DeviceShadowEnrich *PipelineDeviceShadowEnrich `pulumi:"deviceShadowEnrich"`
	// Filters a message based on its attributes.
	Filter *PipelineFilter `pulumi:"filter"`
	// Runs a Lambda function to modify the message.
	Lambda *PipelineLambda `pulumi:"lambda"`
	// Computes an arithmetic expression using the message's attributes and adds it to the message.
	Math *PipelineMath `pulumi:"math"`
	// Removes attributes from a message.
	RemoveAttributes *PipelineRemoveAttributes `pulumi:"removeAttributes"`
	// Creates a new message using only the specified attributes from the original message.
	SelectAttributes *PipelineSelectAttributes `pulumi:"selectAttributes"`
}

// PipelineActivityInput is an input type that accepts PipelineActivityArgs and PipelineActivityOutput values.
// You can construct a concrete instance of `PipelineActivityInput` via:
//
//	PipelineActivityArgs{...}
type PipelineActivityInput interface {
	pulumi.Input

	ToPipelineActivityOutput() PipelineActivityOutput
	ToPipelineActivityOutputWithContext(context.Context) PipelineActivityOutput
}

type PipelineActivityArgs struct {
	// Adds other attributes based on existing attributes in the message.
	AddAttributes PipelineAddAttributesPtrInput `pulumi:"addAttributes"`
	// Determines the source of the messages to be processed.
	Channel PipelineChannelPtrInput `pulumi:"channel"`
	// Specifies where to store the processed message data.
	Datastore PipelineDatastorePtrInput `pulumi:"datastore"`
	// Adds data from the AWS IoT device registry to your message.
	DeviceRegistryEnrich PipelineDeviceRegistryEnrichPtrInput `pulumi:"deviceRegistryEnrich"`
	// Adds information from the AWS IoT Device Shadows service to a message.
	DeviceShadowEnrich PipelineDeviceShadowEnrichPtrInput `pulumi:"deviceShadowEnrich"`
	// Filters a message based on its attributes.
	Filter PipelineFilterPtrInput `pulumi:"filter"`
	// Runs a Lambda function to modify the message.
	Lambda PipelineLambdaPtrInput `pulumi:"lambda"`
	// Computes an arithmetic expression using the message's attributes and adds it to the message.
	Math PipelineMathPtrInput `pulumi:"math"`
	// Removes attributes from a message.
	RemoveAttributes PipelineRemoveAttributesPtrInput `pulumi:"removeAttributes"`
	// Creates a new message using only the specified attributes from the original message.
	SelectAttributes PipelineSelectAttributesPtrInput `pulumi:"selectAttributes"`
}

func (PipelineActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActivity)(nil)).Elem()
}

func (i PipelineActivityArgs) ToPipelineActivityOutput() PipelineActivityOutput {
	return i.ToPipelineActivityOutputWithContext(context.Background())
}

func (i PipelineActivityArgs) ToPipelineActivityOutputWithContext(ctx context.Context) PipelineActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineActivityOutput)
}

// PipelineActivityArrayInput is an input type that accepts PipelineActivityArray and PipelineActivityArrayOutput values.
// You can construct a concrete instance of `PipelineActivityArrayInput` via:
//
//	PipelineActivityArray{ PipelineActivityArgs{...} }
type PipelineActivityArrayInput interface {
	pulumi.Input

	ToPipelineActivityArrayOutput() PipelineActivityArrayOutput
	ToPipelineActivityArrayOutputWithContext(context.Context) PipelineActivityArrayOutput
}

type PipelineActivityArray []PipelineActivityInput

func (PipelineActivityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineActivity)(nil)).Elem()
}

func (i PipelineActivityArray) ToPipelineActivityArrayOutput() PipelineActivityArrayOutput {
	return i.ToPipelineActivityArrayOutputWithContext(context.Background())
}

func (i PipelineActivityArray) ToPipelineActivityArrayOutputWithContext(ctx context.Context) PipelineActivityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineActivityArrayOutput)
}

type PipelineActivityOutput struct{ *pulumi.OutputState }

func (PipelineActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActivity)(nil)).Elem()
}

func (o PipelineActivityOutput) ToPipelineActivityOutput() PipelineActivityOutput {
	return o
}

func (o PipelineActivityOutput) ToPipelineActivityOutputWithContext(ctx context.Context) PipelineActivityOutput {
	return o
}

// Adds other attributes based on existing attributes in the message.
func (o PipelineActivityOutput) AddAttributes() PipelineAddAttributesPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineAddAttributes { return v.AddAttributes }).(PipelineAddAttributesPtrOutput)
}

// Determines the source of the messages to be processed.
func (o PipelineActivityOutput) Channel() PipelineChannelPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineChannel { return v.Channel }).(PipelineChannelPtrOutput)
}

// Specifies where to store the processed message data.
func (o PipelineActivityOutput) Datastore() PipelineDatastorePtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineDatastore { return v.Datastore }).(PipelineDatastorePtrOutput)
}

// Adds data from the AWS IoT device registry to your message.
func (o PipelineActivityOutput) DeviceRegistryEnrich() PipelineDeviceRegistryEnrichPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineDeviceRegistryEnrich { return v.DeviceRegistryEnrich }).(PipelineDeviceRegistryEnrichPtrOutput)
}

// Adds information from the AWS IoT Device Shadows service to a message.
func (o PipelineActivityOutput) DeviceShadowEnrich() PipelineDeviceShadowEnrichPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineDeviceShadowEnrich { return v.DeviceShadowEnrich }).(PipelineDeviceShadowEnrichPtrOutput)
}

// Filters a message based on its attributes.
func (o PipelineActivityOutput) Filter() PipelineFilterPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineFilter { return v.Filter }).(PipelineFilterPtrOutput)
}

// Runs a Lambda function to modify the message.
func (o PipelineActivityOutput) Lambda() PipelineLambdaPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineLambda { return v.Lambda }).(PipelineLambdaPtrOutput)
}

// Computes an arithmetic expression using the message's attributes and adds it to the message.
func (o PipelineActivityOutput) Math() PipelineMathPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineMath { return v.Math }).(PipelineMathPtrOutput)
}

// Removes attributes from a message.
func (o PipelineActivityOutput) RemoveAttributes() PipelineRemoveAttributesPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineRemoveAttributes { return v.RemoveAttributes }).(PipelineRemoveAttributesPtrOutput)
}

// Creates a new message using only the specified attributes from the original message.
func (o PipelineActivityOutput) SelectAttributes() PipelineSelectAttributesPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineSelectAttributes { return v.SelectAttributes }).(PipelineSelectAttributesPtrOutput)
}

type PipelineActivityArrayOutput struct{ *pulumi.OutputState }

func (PipelineActivityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineActivity)(nil)).Elem()
}

func (o PipelineActivityArrayOutput) ToPipelineActivityArrayOutput() PipelineActivityArrayOutput {
	return o
}

func (o PipelineActivityArrayOutput) ToPipelineActivityArrayOutputWithContext(ctx context.Context) PipelineActivityArrayOutput {
	return o
}

func (o PipelineActivityArrayOutput) Index(i pulumi.IntInput) PipelineActivityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineActivity {
		return vs[0].([]PipelineActivity)[vs[1].(int)]
	}).(PipelineActivityOutput)
}

type PipelineAddAttributes struct {
	// A list of 1-50 "AttributeNameMapping" objects that map an existing attribute to a new attribute.
	//
	// > The existing attributes remain in the message, so if you want to remove the originals, use "RemoveAttributeActivity".
	Attributes map[string]string `pulumi:"attributes"`
	// The name of the 'addAttributes' activity.
	Name string `pulumi:"name"`
	// The next activity in the pipeline.
	Next *string `pulumi:"next"`
}

// PipelineAddAttributesInput is an input type that accepts PipelineAddAttributesArgs and PipelineAddAttributesOutput values.
// You can construct a concrete instance of `PipelineAddAttributesInput` via:
//
//	PipelineAddAttributesArgs{...}
type PipelineAddAttributesInput interface {
	pulumi.Input

	ToPipelineAddAttributesOutput() PipelineAddAttributesOutput
	ToPipelineAddAttributesOutputWithContext(context.Context) PipelineAddAttributesOutput
}

type PipelineAddAttributesArgs struct {
	// A list of 1-50 "AttributeNameMapping" objects that map an existing attribute to a new attribute.
	//
	// > The existing attributes remain in the message, so if you want to remove the originals, use "RemoveAttributeActivity".
	Attributes pulumi.StringMapInput `pulumi:"attributes"`
	// The name of the 'addAttributes' activity.
	Name pulumi.StringInput `pulumi:"name"`
	// The next activity in the pipeline.
	Next pulumi.StringPtrInput `pulumi:"next"`
}

func (PipelineAddAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineAddAttributes)(nil)).Elem()
}

func (i PipelineAddAttributesArgs) ToPipelineAddAttributesOutput() PipelineAddAttributesOutput {
	return i.ToPipelineAddAttributesOutputWithContext(context.Background())
}

func (i PipelineAddAttributesArgs) ToPipelineAddAttributesOutputWithContext(ctx context.Context) PipelineAddAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineAddAttributesOutput)
}

func (i PipelineAddAttributesArgs) ToPipelineAddAttributesPtrOutput() PipelineAddAttributesPtrOutput {
	return i.ToPipelineAddAttributesPtrOutputWithContext(context.Background())
}

func (i PipelineAddAttributesArgs) ToPipelineAddAttributesPtrOutputWithContext(ctx context.Context) PipelineAddAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineAddAttributesOutput).ToPipelineAddAttributesPtrOutputWithContext(ctx)
}

// PipelineAddAttributesPtrInput is an input type that accepts PipelineAddAttributesArgs, PipelineAddAttributesPtr and PipelineAddAttributesPtrOutput values.
// You can construct a concrete instance of `PipelineAddAttributesPtrInput` via:
//
//	        PipelineAddAttributesArgs{...}
//
//	or:
//
//	        nil
type PipelineAddAttributesPtrInput interface {
	pulumi.Input

	ToPipelineAddAttributesPtrOutput() PipelineAddAttributesPtrOutput
	ToPipelineAddAttributesPtrOutputWithContext(context.Context) PipelineAddAttributesPtrOutput
}

type pipelineAddAttributesPtrType PipelineAddAttributesArgs

func PipelineAddAttributesPtr(v *PipelineAddAttributesArgs) PipelineAddAttributesPtrInput {
	return (*pipelineAddAttributesPtrType)(v)
}

func (*pipelineAddAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineAddAttributes)(nil)).Elem()
}

func (i *pipelineAddAttributesPtrType) ToPipelineAddAttributesPtrOutput() PipelineAddAttributesPtrOutput {
	return i.ToPipelineAddAttributesPtrOutputWithContext(context.Background())
}

func (i *pipelineAddAttributesPtrType) ToPipelineAddAttributesPtrOutputWithContext(ctx context.Context) PipelineAddAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineAddAttributesPtrOutput)
}

type PipelineAddAttributesOutput struct{ *pulumi.OutputState }

func (PipelineAddAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineAddAttributes)(nil)).Elem()
}

func (o PipelineAddAttributesOutput) ToPipelineAddAttributesOutput() PipelineAddAttributesOutput {
	return o
}

func (o PipelineAddAttributesOutput) ToPipelineAddAttributesOutputWithContext(ctx context.Context) PipelineAddAttributesOutput {
	return o
}

func (o PipelineAddAttributesOutput) ToPipelineAddAttributesPtrOutput() PipelineAddAttributesPtrOutput {
	return o.ToPipelineAddAttributesPtrOutputWithContext(context.Background())
}

func (o PipelineAddAttributesOutput) ToPipelineAddAttributesPtrOutputWithContext(ctx context.Context) PipelineAddAttributesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineAddAttributes) *PipelineAddAttributes {
		return &v
	}).(PipelineAddAttributesPtrOutput)
}

// A list of 1-50 "AttributeNameMapping" objects that map an existing attribute to a new attribute.
//
// > The existing attributes remain in the message, so if you want to remove the originals, use "RemoveAttributeActivity".
func (o PipelineAddAttributesOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v PipelineAddAttributes) map[string]string { return v.Attributes }).(pulumi.StringMapOutput)
}

// The name of the 'addAttributes' activity.
func (o PipelineAddAttributesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineAddAttributes) string { return v.Name }).(pulumi.StringOutput)
}

// The next activity in the pipeline.
func (o PipelineAddAttributesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineAddAttributes) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineAddAttributesPtrOutput struct{ *pulumi.OutputState }

func (PipelineAddAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineAddAttributes)(nil)).Elem()
}

func (o PipelineAddAttributesPtrOutput) ToPipelineAddAttributesPtrOutput() PipelineAddAttributesPtrOutput {
	return o
}

func (o PipelineAddAttributesPtrOutput) ToPipelineAddAttributesPtrOutputWithContext(ctx context.Context) PipelineAddAttributesPtrOutput {
	return o
}

func (o PipelineAddAttributesPtrOutput) Elem() PipelineAddAttributesOutput {
	return o.ApplyT(func(v *PipelineAddAttributes) PipelineAddAttributes {
		if v != nil {
			return *v
		}
		var ret PipelineAddAttributes
		return ret
	}).(PipelineAddAttributesOutput)
}

// A list of 1-50 "AttributeNameMapping" objects that map an existing attribute to a new attribute.
//
// > The existing attributes remain in the message, so if you want to remove the originals, use "RemoveAttributeActivity".
func (o PipelineAddAttributesPtrOutput) Attributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PipelineAddAttributes) map[string]string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringMapOutput)
}

// The name of the 'addAttributes' activity.
func (o PipelineAddAttributesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineAddAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The next activity in the pipeline.
func (o PipelineAddAttributesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineAddAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineChannel struct {
	// The name of the channel from which the messages are processed.
	ChannelName string `pulumi:"channelName"`
	// The name of the 'channel' activity.
	Name string `pulumi:"name"`
	// The next activity in the pipeline.
	Next *string `pulumi:"next"`
}

// PipelineChannelInput is an input type that accepts PipelineChannelArgs and PipelineChannelOutput values.
// You can construct a concrete instance of `PipelineChannelInput` via:
//
//	PipelineChannelArgs{...}
type PipelineChannelInput interface {
	pulumi.Input

	ToPipelineChannelOutput() PipelineChannelOutput
	ToPipelineChannelOutputWithContext(context.Context) PipelineChannelOutput
}

type PipelineChannelArgs struct {
	// The name of the channel from which the messages are processed.
	ChannelName pulumi.StringInput `pulumi:"channelName"`
	// The name of the 'channel' activity.
	Name pulumi.StringInput `pulumi:"name"`
	// The next activity in the pipeline.
	Next pulumi.StringPtrInput `pulumi:"next"`
}

func (PipelineChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineChannel)(nil)).Elem()
}

func (i PipelineChannelArgs) ToPipelineChannelOutput() PipelineChannelOutput {
	return i.ToPipelineChannelOutputWithContext(context.Background())
}

func (i PipelineChannelArgs) ToPipelineChannelOutputWithContext(ctx context.Context) PipelineChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineChannelOutput)
}

func (i PipelineChannelArgs) ToPipelineChannelPtrOutput() PipelineChannelPtrOutput {
	return i.ToPipelineChannelPtrOutputWithContext(context.Background())
}

func (i PipelineChannelArgs) ToPipelineChannelPtrOutputWithContext(ctx context.Context) PipelineChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineChannelOutput).ToPipelineChannelPtrOutputWithContext(ctx)
}

// PipelineChannelPtrInput is an input type that accepts PipelineChannelArgs, PipelineChannelPtr and PipelineChannelPtrOutput values.
// You can construct a concrete instance of `PipelineChannelPtrInput` via:
//
//	        PipelineChannelArgs{...}
//
//	or:
//
//	        nil
type PipelineChannelPtrInput interface {
	pulumi.Input

	ToPipelineChannelPtrOutput() PipelineChannelPtrOutput
	ToPipelineChannelPtrOutputWithContext(context.Context) PipelineChannelPtrOutput
}

type pipelineChannelPtrType PipelineChannelArgs

func PipelineChannelPtr(v *PipelineChannelArgs) PipelineChannelPtrInput {
	return (*pipelineChannelPtrType)(v)
}

func (*pipelineChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineChannel)(nil)).Elem()
}

func (i *pipelineChannelPtrType) ToPipelineChannelPtrOutput() PipelineChannelPtrOutput {
	return i.ToPipelineChannelPtrOutputWithContext(context.Background())
}

func (i *pipelineChannelPtrType) ToPipelineChannelPtrOutputWithContext(ctx context.Context) PipelineChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineChannelPtrOutput)
}

type PipelineChannelOutput struct{ *pulumi.OutputState }

func (PipelineChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineChannel)(nil)).Elem()
}

func (o PipelineChannelOutput) ToPipelineChannelOutput() PipelineChannelOutput {
	return o
}

func (o PipelineChannelOutput) ToPipelineChannelOutputWithContext(ctx context.Context) PipelineChannelOutput {
	return o
}

func (o PipelineChannelOutput) ToPipelineChannelPtrOutput() PipelineChannelPtrOutput {
	return o.ToPipelineChannelPtrOutputWithContext(context.Background())
}

func (o PipelineChannelOutput) ToPipelineChannelPtrOutputWithContext(ctx context.Context) PipelineChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineChannel) *PipelineChannel {
		return &v
	}).(PipelineChannelPtrOutput)
}

// The name of the channel from which the messages are processed.
func (o PipelineChannelOutput) ChannelName() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineChannel) string { return v.ChannelName }).(pulumi.StringOutput)
}

// The name of the 'channel' activity.
func (o PipelineChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineChannel) string { return v.Name }).(pulumi.StringOutput)
}

// The next activity in the pipeline.
func (o PipelineChannelOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineChannel) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineChannelPtrOutput struct{ *pulumi.OutputState }

func (PipelineChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineChannel)(nil)).Elem()
}

func (o PipelineChannelPtrOutput) ToPipelineChannelPtrOutput() PipelineChannelPtrOutput {
	return o
}

func (o PipelineChannelPtrOutput) ToPipelineChannelPtrOutputWithContext(ctx context.Context) PipelineChannelPtrOutput {
	return o
}

func (o PipelineChannelPtrOutput) Elem() PipelineChannelOutput {
	return o.ApplyT(func(v *PipelineChannel) PipelineChannel {
		if v != nil {
			return *v
		}
		var ret PipelineChannel
		return ret
	}).(PipelineChannelOutput)
}

// The name of the channel from which the messages are processed.
func (o PipelineChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineChannel) *string {
		if v == nil {
			return nil
		}
		return &v.ChannelName
	}).(pulumi.StringPtrOutput)
}

// The name of the 'channel' activity.
func (o PipelineChannelPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineChannel) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The next activity in the pipeline.
func (o PipelineChannelPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineChannel) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineDatastore struct {
	// The name of the data store where processed messages are stored.
	DatastoreName string `pulumi:"datastoreName"`
	// The name of the datastore activity.
	Name string `pulumi:"name"`
}

// PipelineDatastoreInput is an input type that accepts PipelineDatastoreArgs and PipelineDatastoreOutput values.
// You can construct a concrete instance of `PipelineDatastoreInput` via:
//
//	PipelineDatastoreArgs{...}
type PipelineDatastoreInput interface {
	pulumi.Input

	ToPipelineDatastoreOutput() PipelineDatastoreOutput
	ToPipelineDatastoreOutputWithContext(context.Context) PipelineDatastoreOutput
}

type PipelineDatastoreArgs struct {
	// The name of the data store where processed messages are stored.
	DatastoreName pulumi.StringInput `pulumi:"datastoreName"`
	// The name of the datastore activity.
	Name pulumi.StringInput `pulumi:"name"`
}

func (PipelineDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDatastore)(nil)).Elem()
}

func (i PipelineDatastoreArgs) ToPipelineDatastoreOutput() PipelineDatastoreOutput {
	return i.ToPipelineDatastoreOutputWithContext(context.Background())
}

func (i PipelineDatastoreArgs) ToPipelineDatastoreOutputWithContext(ctx context.Context) PipelineDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDatastoreOutput)
}

func (i PipelineDatastoreArgs) ToPipelineDatastorePtrOutput() PipelineDatastorePtrOutput {
	return i.ToPipelineDatastorePtrOutputWithContext(context.Background())
}

func (i PipelineDatastoreArgs) ToPipelineDatastorePtrOutputWithContext(ctx context.Context) PipelineDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDatastoreOutput).ToPipelineDatastorePtrOutputWithContext(ctx)
}

// PipelineDatastorePtrInput is an input type that accepts PipelineDatastoreArgs, PipelineDatastorePtr and PipelineDatastorePtrOutput values.
// You can construct a concrete instance of `PipelineDatastorePtrInput` via:
//
//	        PipelineDatastoreArgs{...}
//
//	or:
//
//	        nil
type PipelineDatastorePtrInput interface {
	pulumi.Input

	ToPipelineDatastorePtrOutput() PipelineDatastorePtrOutput
	ToPipelineDatastorePtrOutputWithContext(context.Context) PipelineDatastorePtrOutput
}

type pipelineDatastorePtrType PipelineDatastoreArgs

func PipelineDatastorePtr(v *PipelineDatastoreArgs) PipelineDatastorePtrInput {
	return (*pipelineDatastorePtrType)(v)
}

func (*pipelineDatastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDatastore)(nil)).Elem()
}

func (i *pipelineDatastorePtrType) ToPipelineDatastorePtrOutput() PipelineDatastorePtrOutput {
	return i.ToPipelineDatastorePtrOutputWithContext(context.Background())
}

func (i *pipelineDatastorePtrType) ToPipelineDatastorePtrOutputWithContext(ctx context.Context) PipelineDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDatastorePtrOutput)
}

type PipelineDatastoreOutput struct{ *pulumi.OutputState }

func (PipelineDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDatastore)(nil)).Elem()
}

func (o PipelineDatastoreOutput) ToPipelineDatastoreOutput() PipelineDatastoreOutput {
	return o
}

func (o PipelineDatastoreOutput) ToPipelineDatastoreOutputWithContext(ctx context.Context) PipelineDatastoreOutput {
	return o
}

func (o PipelineDatastoreOutput) ToPipelineDatastorePtrOutput() PipelineDatastorePtrOutput {
	return o.ToPipelineDatastorePtrOutputWithContext(context.Background())
}

func (o PipelineDatastoreOutput) ToPipelineDatastorePtrOutputWithContext(ctx context.Context) PipelineDatastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineDatastore) *PipelineDatastore {
		return &v
	}).(PipelineDatastorePtrOutput)
}

// The name of the data store where processed messages are stored.
func (o PipelineDatastoreOutput) DatastoreName() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDatastore) string { return v.DatastoreName }).(pulumi.StringOutput)
}

// The name of the datastore activity.
func (o PipelineDatastoreOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDatastore) string { return v.Name }).(pulumi.StringOutput)
}

type PipelineDatastorePtrOutput struct{ *pulumi.OutputState }

func (PipelineDatastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDatastore)(nil)).Elem()
}

func (o PipelineDatastorePtrOutput) ToPipelineDatastorePtrOutput() PipelineDatastorePtrOutput {
	return o
}

func (o PipelineDatastorePtrOutput) ToPipelineDatastorePtrOutputWithContext(ctx context.Context) PipelineDatastorePtrOutput {
	return o
}

func (o PipelineDatastorePtrOutput) Elem() PipelineDatastoreOutput {
	return o.ApplyT(func(v *PipelineDatastore) PipelineDatastore {
		if v != nil {
			return *v
		}
		var ret PipelineDatastore
		return ret
	}).(PipelineDatastoreOutput)
}

// The name of the data store where processed messages are stored.
func (o PipelineDatastorePtrOutput) DatastoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.DatastoreName
	}).(pulumi.StringPtrOutput)
}

// The name of the datastore activity.
func (o PipelineDatastorePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDatastore) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type PipelineDeviceRegistryEnrich struct {
	// The name of the attribute that is added to the message.
	Attribute string `pulumi:"attribute"`
	// The name of the 'deviceRegistryEnrich' activity.
	Name string `pulumi:"name"`
	// The next activity in the pipeline.
	Next *string `pulumi:"next"`
	// The ARN of the role that allows access to the device's registry information.
	RoleArn string `pulumi:"roleArn"`
	// The name of the IoT device whose registry information is added to the message.
	ThingName string `pulumi:"thingName"`
}

// PipelineDeviceRegistryEnrichInput is an input type that accepts PipelineDeviceRegistryEnrichArgs and PipelineDeviceRegistryEnrichOutput values.
// You can construct a concrete instance of `PipelineDeviceRegistryEnrichInput` via:
//
//	PipelineDeviceRegistryEnrichArgs{...}
type PipelineDeviceRegistryEnrichInput interface {
	pulumi.Input

	ToPipelineDeviceRegistryEnrichOutput() PipelineDeviceRegistryEnrichOutput
	ToPipelineDeviceRegistryEnrichOutputWithContext(context.Context) PipelineDeviceRegistryEnrichOutput
}

type PipelineDeviceRegistryEnrichArgs struct {
	// The name of the attribute that is added to the message.
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// The name of the 'deviceRegistryEnrich' activity.
	Name pulumi.StringInput `pulumi:"name"`
	// The next activity in the pipeline.
	Next pulumi.StringPtrInput `pulumi:"next"`
	// The ARN of the role that allows access to the device's registry information.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the IoT device whose registry information is added to the message.
	ThingName pulumi.StringInput `pulumi:"thingName"`
}

func (PipelineDeviceRegistryEnrichArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDeviceRegistryEnrich)(nil)).Elem()
}

func (i PipelineDeviceRegistryEnrichArgs) ToPipelineDeviceRegistryEnrichOutput() PipelineDeviceRegistryEnrichOutput {
	return i.ToPipelineDeviceRegistryEnrichOutputWithContext(context.Background())
}

func (i PipelineDeviceRegistryEnrichArgs) ToPipelineDeviceRegistryEnrichOutputWithContext(ctx context.Context) PipelineDeviceRegistryEnrichOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDeviceRegistryEnrichOutput)
}

func (i PipelineDeviceRegistryEnrichArgs) ToPipelineDeviceRegistryEnrichPtrOutput() PipelineDeviceRegistryEnrichPtrOutput {
	return i.ToPipelineDeviceRegistryEnrichPtrOutputWithContext(context.Background())
}

func (i PipelineDeviceRegistryEnrichArgs) ToPipelineDeviceRegistryEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceRegistryEnrichPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDeviceRegistryEnrichOutput).ToPipelineDeviceRegistryEnrichPtrOutputWithContext(ctx)
}

// PipelineDeviceRegistryEnrichPtrInput is an input type that accepts PipelineDeviceRegistryEnrichArgs, PipelineDeviceRegistryEnrichPtr and PipelineDeviceRegistryEnrichPtrOutput values.
// You can construct a concrete instance of `PipelineDeviceRegistryEnrichPtrInput` via:
//
//	        PipelineDeviceRegistryEnrichArgs{...}
//
//	or:
//
//	        nil
type PipelineDeviceRegistryEnrichPtrInput interface {
	pulumi.Input

	ToPipelineDeviceRegistryEnrichPtrOutput() PipelineDeviceRegistryEnrichPtrOutput
	ToPipelineDeviceRegistryEnrichPtrOutputWithContext(context.Context) PipelineDeviceRegistryEnrichPtrOutput
}

type pipelineDeviceRegistryEnrichPtrType PipelineDeviceRegistryEnrichArgs

func PipelineDeviceRegistryEnrichPtr(v *PipelineDeviceRegistryEnrichArgs) PipelineDeviceRegistryEnrichPtrInput {
	return (*pipelineDeviceRegistryEnrichPtrType)(v)
}

func (*pipelineDeviceRegistryEnrichPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDeviceRegistryEnrich)(nil)).Elem()
}

func (i *pipelineDeviceRegistryEnrichPtrType) ToPipelineDeviceRegistryEnrichPtrOutput() PipelineDeviceRegistryEnrichPtrOutput {
	return i.ToPipelineDeviceRegistryEnrichPtrOutputWithContext(context.Background())
}

func (i *pipelineDeviceRegistryEnrichPtrType) ToPipelineDeviceRegistryEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceRegistryEnrichPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDeviceRegistryEnrichPtrOutput)
}

type PipelineDeviceRegistryEnrichOutput struct{ *pulumi.OutputState }

func (PipelineDeviceRegistryEnrichOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDeviceRegistryEnrich)(nil)).Elem()
}

func (o PipelineDeviceRegistryEnrichOutput) ToPipelineDeviceRegistryEnrichOutput() PipelineDeviceRegistryEnrichOutput {
	return o
}

func (o PipelineDeviceRegistryEnrichOutput) ToPipelineDeviceRegistryEnrichOutputWithContext(ctx context.Context) PipelineDeviceRegistryEnrichOutput {
	return o
}

func (o PipelineDeviceRegistryEnrichOutput) ToPipelineDeviceRegistryEnrichPtrOutput() PipelineDeviceRegistryEnrichPtrOutput {
	return o.ToPipelineDeviceRegistryEnrichPtrOutputWithContext(context.Background())
}

func (o PipelineDeviceRegistryEnrichOutput) ToPipelineDeviceRegistryEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceRegistryEnrichPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineDeviceRegistryEnrich) *PipelineDeviceRegistryEnrich {
		return &v
	}).(PipelineDeviceRegistryEnrichPtrOutput)
}

// The name of the attribute that is added to the message.
func (o PipelineDeviceRegistryEnrichOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDeviceRegistryEnrich) string { return v.Attribute }).(pulumi.StringOutput)
}

// The name of the 'deviceRegistryEnrich' activity.
func (o PipelineDeviceRegistryEnrichOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDeviceRegistryEnrich) string { return v.Name }).(pulumi.StringOutput)
}

// The next activity in the pipeline.
func (o PipelineDeviceRegistryEnrichOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDeviceRegistryEnrich) *string { return v.Next }).(pulumi.StringPtrOutput)
}

// The ARN of the role that allows access to the device's registry information.
func (o PipelineDeviceRegistryEnrichOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDeviceRegistryEnrich) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the IoT device whose registry information is added to the message.
func (o PipelineDeviceRegistryEnrichOutput) ThingName() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDeviceRegistryEnrich) string { return v.ThingName }).(pulumi.StringOutput)
}

type PipelineDeviceRegistryEnrichPtrOutput struct{ *pulumi.OutputState }

func (PipelineDeviceRegistryEnrichPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDeviceRegistryEnrich)(nil)).Elem()
}

func (o PipelineDeviceRegistryEnrichPtrOutput) ToPipelineDeviceRegistryEnrichPtrOutput() PipelineDeviceRegistryEnrichPtrOutput {
	return o
}

func (o PipelineDeviceRegistryEnrichPtrOutput) ToPipelineDeviceRegistryEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceRegistryEnrichPtrOutput {
	return o
}

func (o PipelineDeviceRegistryEnrichPtrOutput) Elem() PipelineDeviceRegistryEnrichOutput {
	return o.ApplyT(func(v *PipelineDeviceRegistryEnrich) PipelineDeviceRegistryEnrich {
		if v != nil {
			return *v
		}
		var ret PipelineDeviceRegistryEnrich
		return ret
	}).(PipelineDeviceRegistryEnrichOutput)
}

// The name of the attribute that is added to the message.
func (o PipelineDeviceRegistryEnrichPtrOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceRegistryEnrich) *string {
		if v == nil {
			return nil
		}
		return &v.Attribute
	}).(pulumi.StringPtrOutput)
}

// The name of the 'deviceRegistryEnrich' activity.
func (o PipelineDeviceRegistryEnrichPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceRegistryEnrich) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The next activity in the pipeline.
func (o PipelineDeviceRegistryEnrichPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceRegistryEnrich) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that allows access to the device's registry information.
func (o PipelineDeviceRegistryEnrichPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceRegistryEnrich) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of the IoT device whose registry information is added to the message.
func (o PipelineDeviceRegistryEnrichPtrOutput) ThingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceRegistryEnrich) *string {
		if v == nil {
			return nil
		}
		return &v.ThingName
	}).(pulumi.StringPtrOutput)
}

type PipelineDeviceShadowEnrich struct {
	// The name of the attribute that is added to the message.
	Attribute string `pulumi:"attribute"`
	// The name of the 'deviceShadowEnrich' activity.
	Name string `pulumi:"name"`
	// The next activity in the pipeline.
	Next *string `pulumi:"next"`
	// The ARN of the role that allows access to the device's shadow.
	RoleArn string `pulumi:"roleArn"`
	// The name of the IoT device whose shadow information is added to the message.
	ThingName string `pulumi:"thingName"`
}

// PipelineDeviceShadowEnrichInput is an input type that accepts PipelineDeviceShadowEnrichArgs and PipelineDeviceShadowEnrichOutput values.
// You can construct a concrete instance of `PipelineDeviceShadowEnrichInput` via:
//
//	PipelineDeviceShadowEnrichArgs{...}
type PipelineDeviceShadowEnrichInput interface {
	pulumi.Input

	ToPipelineDeviceShadowEnrichOutput() PipelineDeviceShadowEnrichOutput
	ToPipelineDeviceShadowEnrichOutputWithContext(context.Context) PipelineDeviceShadowEnrichOutput
}

type PipelineDeviceShadowEnrichArgs struct {
	// The name of the attribute that is added to the message.
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// The name of the 'deviceShadowEnrich' activity.
	Name pulumi.StringInput `pulumi:"name"`
	// The next activity in the pipeline.
	Next pulumi.StringPtrInput `pulumi:"next"`
	// The ARN of the role that allows access to the device's shadow.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The name of the IoT device whose shadow information is added to the message.
	ThingName pulumi.StringInput `pulumi:"thingName"`
}

func (PipelineDeviceShadowEnrichArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDeviceShadowEnrich)(nil)).Elem()
}

func (i PipelineDeviceShadowEnrichArgs) ToPipelineDeviceShadowEnrichOutput() PipelineDeviceShadowEnrichOutput {
	return i.ToPipelineDeviceShadowEnrichOutputWithContext(context.Background())
}

func (i PipelineDeviceShadowEnrichArgs) ToPipelineDeviceShadowEnrichOutputWithContext(ctx context.Context) PipelineDeviceShadowEnrichOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDeviceShadowEnrichOutput)
}

func (i PipelineDeviceShadowEnrichArgs) ToPipelineDeviceShadowEnrichPtrOutput() PipelineDeviceShadowEnrichPtrOutput {
	return i.ToPipelineDeviceShadowEnrichPtrOutputWithContext(context.Background())
}

func (i PipelineDeviceShadowEnrichArgs) ToPipelineDeviceShadowEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceShadowEnrichPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDeviceShadowEnrichOutput).ToPipelineDeviceShadowEnrichPtrOutputWithContext(ctx)
}

// PipelineDeviceShadowEnrichPtrInput is an input type that accepts PipelineDeviceShadowEnrichArgs, PipelineDeviceShadowEnrichPtr and PipelineDeviceShadowEnrichPtrOutput values.
// You can construct a concrete instance of `PipelineDeviceShadowEnrichPtrInput` via:
//
//	        PipelineDeviceShadowEnrichArgs{...}
//
//	or:
//
//	        nil
type PipelineDeviceShadowEnrichPtrInput interface {
	pulumi.Input

	ToPipelineDeviceShadowEnrichPtrOutput() PipelineDeviceShadowEnrichPtrOutput
	ToPipelineDeviceShadowEnrichPtrOutputWithContext(context.Context) PipelineDeviceShadowEnrichPtrOutput
}

type pipelineDeviceShadowEnrichPtrType PipelineDeviceShadowEnrichArgs

func PipelineDeviceShadowEnrichPtr(v *PipelineDeviceShadowEnrichArgs) PipelineDeviceShadowEnrichPtrInput {
	return (*pipelineDeviceShadowEnrichPtrType)(v)
}

func (*pipelineDeviceShadowEnrichPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDeviceShadowEnrich)(nil)).Elem()
}

func (i *pipelineDeviceShadowEnrichPtrType) ToPipelineDeviceShadowEnrichPtrOutput() PipelineDeviceShadowEnrichPtrOutput {
	return i.ToPipelineDeviceShadowEnrichPtrOutputWithContext(context.Background())
}

func (i *pipelineDeviceShadowEnrichPtrType) ToPipelineDeviceShadowEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceShadowEnrichPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDeviceShadowEnrichPtrOutput)
}

type PipelineDeviceShadowEnrichOutput struct{ *pulumi.OutputState }

func (PipelineDeviceShadowEnrichOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDeviceShadowEnrich)(nil)).Elem()
}

func (o PipelineDeviceShadowEnrichOutput) ToPipelineDeviceShadowEnrichOutput() PipelineDeviceShadowEnrichOutput {
	return o
}

func (o PipelineDeviceShadowEnrichOutput) ToPipelineDeviceShadowEnrichOutputWithContext(ctx context.Context) PipelineDeviceShadowEnrichOutput {
	return o
}

func (o PipelineDeviceShadowEnrichOutput) ToPipelineDeviceShadowEnrichPtrOutput() PipelineDeviceShadowEnrichPtrOutput {
	return o.ToPipelineDeviceShadowEnrichPtrOutputWithContext(context.Background())
}

func (o PipelineDeviceShadowEnrichOutput) ToPipelineDeviceShadowEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceShadowEnrichPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineDeviceShadowEnrich) *PipelineDeviceShadowEnrich {
		return &v
	}).(PipelineDeviceShadowEnrichPtrOutput)
}

// The name of the attribute that is added to the message.
func (o PipelineDeviceShadowEnrichOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDeviceShadowEnrich) string { return v.Attribute }).(pulumi.StringOutput)
}

// The name of the 'deviceShadowEnrich' activity.
func (o PipelineDeviceShadowEnrichOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDeviceShadowEnrich) string { return v.Name }).(pulumi.StringOutput)
}

// The next activity in the pipeline.
func (o PipelineDeviceShadowEnrichOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDeviceShadowEnrich) *string { return v.Next }).(pulumi.StringPtrOutput)
}

// The ARN of the role that allows access to the device's shadow.
func (o PipelineDeviceShadowEnrichOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDeviceShadowEnrich) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The name of the IoT device whose shadow information is added to the message.
func (o PipelineDeviceShadowEnrichOutput) ThingName() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDeviceShadowEnrich) string { return v.ThingName }).(pulumi.StringOutput)
}

type PipelineDeviceShadowEnrichPtrOutput struct{ *pulumi.OutputState }

func (PipelineDeviceShadowEnrichPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDeviceShadowEnrich)(nil)).Elem()
}

func (o PipelineDeviceShadowEnrichPtrOutput) ToPipelineDeviceShadowEnrichPtrOutput() PipelineDeviceShadowEnrichPtrOutput {
	return o
}

func (o PipelineDeviceShadowEnrichPtrOutput) ToPipelineDeviceShadowEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceShadowEnrichPtrOutput {
	return o
}

func (o PipelineDeviceShadowEnrichPtrOutput) Elem() PipelineDeviceShadowEnrichOutput {
	return o.ApplyT(func(v *PipelineDeviceShadowEnrich) PipelineDeviceShadowEnrich {
		if v != nil {
			return *v
		}
		var ret PipelineDeviceShadowEnrich
		return ret
	}).(PipelineDeviceShadowEnrichOutput)
}

// The name of the attribute that is added to the message.
func (o PipelineDeviceShadowEnrichPtrOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceShadowEnrich) *string {
		if v == nil {
			return nil
		}
		return &v.Attribute
	}).(pulumi.StringPtrOutput)
}

// The name of the 'deviceShadowEnrich' activity.
func (o PipelineDeviceShadowEnrichPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceShadowEnrich) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The next activity in the pipeline.
func (o PipelineDeviceShadowEnrichPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceShadowEnrich) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that allows access to the device's shadow.
func (o PipelineDeviceShadowEnrichPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceShadowEnrich) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The name of the IoT device whose shadow information is added to the message.
func (o PipelineDeviceShadowEnrichPtrOutput) ThingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceShadowEnrich) *string {
		if v == nil {
			return nil
		}
		return &v.ThingName
	}).(pulumi.StringPtrOutput)
}

type PipelineFilter struct {
	// An expression that looks like an SQL WHERE clause that must return a Boolean value.
	Filter string `pulumi:"filter"`
	// The name of the 'filter' activity.
	Name string `pulumi:"name"`
	// The next activity in the pipeline.
	Next *string `pulumi:"next"`
}

// PipelineFilterInput is an input type that accepts PipelineFilterArgs and PipelineFilterOutput values.
// You can construct a concrete instance of `PipelineFilterInput` via:
//
//	PipelineFilterArgs{...}
type PipelineFilterInput interface {
	pulumi.Input

	ToPipelineFilterOutput() PipelineFilterOutput
	ToPipelineFilterOutputWithContext(context.Context) PipelineFilterOutput
}

type PipelineFilterArgs struct {
	// An expression that looks like an SQL WHERE clause that must return a Boolean value.
	Filter pulumi.StringInput `pulumi:"filter"`
	// The name of the 'filter' activity.
	Name pulumi.StringInput `pulumi:"name"`
	// The next activity in the pipeline.
	Next pulumi.StringPtrInput `pulumi:"next"`
}

func (PipelineFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFilter)(nil)).Elem()
}

func (i PipelineFilterArgs) ToPipelineFilterOutput() PipelineFilterOutput {
	return i.ToPipelineFilterOutputWithContext(context.Background())
}

func (i PipelineFilterArgs) ToPipelineFilterOutputWithContext(ctx context.Context) PipelineFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFilterOutput)
}

func (i PipelineFilterArgs) ToPipelineFilterPtrOutput() PipelineFilterPtrOutput {
	return i.ToPipelineFilterPtrOutputWithContext(context.Background())
}

func (i PipelineFilterArgs) ToPipelineFilterPtrOutputWithContext(ctx context.Context) PipelineFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFilterOutput).ToPipelineFilterPtrOutputWithContext(ctx)
}

// PipelineFilterPtrInput is an input type that accepts PipelineFilterArgs, PipelineFilterPtr and PipelineFilterPtrOutput values.
// You can construct a concrete instance of `PipelineFilterPtrInput` via:
//
//	        PipelineFilterArgs{...}
//
//	or:
//
//	        nil
type PipelineFilterPtrInput interface {
	pulumi.Input

	ToPipelineFilterPtrOutput() PipelineFilterPtrOutput
	ToPipelineFilterPtrOutputWithContext(context.Context) PipelineFilterPtrOutput
}

type pipelineFilterPtrType PipelineFilterArgs

func PipelineFilterPtr(v *PipelineFilterArgs) PipelineFilterPtrInput {
	return (*pipelineFilterPtrType)(v)
}

func (*pipelineFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFilter)(nil)).Elem()
}

func (i *pipelineFilterPtrType) ToPipelineFilterPtrOutput() PipelineFilterPtrOutput {
	return i.ToPipelineFilterPtrOutputWithContext(context.Background())
}

func (i *pipelineFilterPtrType) ToPipelineFilterPtrOutputWithContext(ctx context.Context) PipelineFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFilterPtrOutput)
}

type PipelineFilterOutput struct{ *pulumi.OutputState }

func (PipelineFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFilter)(nil)).Elem()
}

func (o PipelineFilterOutput) ToPipelineFilterOutput() PipelineFilterOutput {
	return o
}

func (o PipelineFilterOutput) ToPipelineFilterOutputWithContext(ctx context.Context) PipelineFilterOutput {
	return o
}

func (o PipelineFilterOutput) ToPipelineFilterPtrOutput() PipelineFilterPtrOutput {
	return o.ToPipelineFilterPtrOutputWithContext(context.Background())
}

func (o PipelineFilterOutput) ToPipelineFilterPtrOutputWithContext(ctx context.Context) PipelineFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineFilter) *PipelineFilter {
		return &v
	}).(PipelineFilterPtrOutput)
}

// An expression that looks like an SQL WHERE clause that must return a Boolean value.
func (o PipelineFilterOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineFilter) string { return v.Filter }).(pulumi.StringOutput)
}

// The name of the 'filter' activity.
func (o PipelineFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineFilter) string { return v.Name }).(pulumi.StringOutput)
}

// The next activity in the pipeline.
func (o PipelineFilterOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFilter) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineFilterPtrOutput struct{ *pulumi.OutputState }

func (PipelineFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFilter)(nil)).Elem()
}

func (o PipelineFilterPtrOutput) ToPipelineFilterPtrOutput() PipelineFilterPtrOutput {
	return o
}

func (o PipelineFilterPtrOutput) ToPipelineFilterPtrOutputWithContext(ctx context.Context) PipelineFilterPtrOutput {
	return o
}

func (o PipelineFilterPtrOutput) Elem() PipelineFilterOutput {
	return o.ApplyT(func(v *PipelineFilter) PipelineFilter {
		if v != nil {
			return *v
		}
		var ret PipelineFilter
		return ret
	}).(PipelineFilterOutput)
}

// An expression that looks like an SQL WHERE clause that must return a Boolean value.
func (o PipelineFilterPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Filter
	}).(pulumi.StringPtrOutput)
}

// The name of the 'filter' activity.
func (o PipelineFilterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The next activity in the pipeline.
func (o PipelineFilterPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFilter) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineLambda struct {
	// The number of messages passed to the Lambda function for processing.
	//
	// The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.
	BatchSize int `pulumi:"batchSize"`
	// The name of the Lambda function that is run on the message.
	LambdaName string `pulumi:"lambdaName"`
	// The name of the 'lambda' activity.
	Name string `pulumi:"name"`
	// The next activity in the pipeline.
	Next *string `pulumi:"next"`
}

// PipelineLambdaInput is an input type that accepts PipelineLambdaArgs and PipelineLambdaOutput values.
// You can construct a concrete instance of `PipelineLambdaInput` via:
//
//	PipelineLambdaArgs{...}
type PipelineLambdaInput interface {
	pulumi.Input

	ToPipelineLambdaOutput() PipelineLambdaOutput
	ToPipelineLambdaOutputWithContext(context.Context) PipelineLambdaOutput
}

type PipelineLambdaArgs struct {
	// The number of messages passed to the Lambda function for processing.
	//
	// The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.
	BatchSize pulumi.IntInput `pulumi:"batchSize"`
	// The name of the Lambda function that is run on the message.
	LambdaName pulumi.StringInput `pulumi:"lambdaName"`
	// The name of the 'lambda' activity.
	Name pulumi.StringInput `pulumi:"name"`
	// The next activity in the pipeline.
	Next pulumi.StringPtrInput `pulumi:"next"`
}

func (PipelineLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLambda)(nil)).Elem()
}

func (i PipelineLambdaArgs) ToPipelineLambdaOutput() PipelineLambdaOutput {
	return i.ToPipelineLambdaOutputWithContext(context.Background())
}

func (i PipelineLambdaArgs) ToPipelineLambdaOutputWithContext(ctx context.Context) PipelineLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLambdaOutput)
}

func (i PipelineLambdaArgs) ToPipelineLambdaPtrOutput() PipelineLambdaPtrOutput {
	return i.ToPipelineLambdaPtrOutputWithContext(context.Background())
}

func (i PipelineLambdaArgs) ToPipelineLambdaPtrOutputWithContext(ctx context.Context) PipelineLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLambdaOutput).ToPipelineLambdaPtrOutputWithContext(ctx)
}

// PipelineLambdaPtrInput is an input type that accepts PipelineLambdaArgs, PipelineLambdaPtr and PipelineLambdaPtrOutput values.
// You can construct a concrete instance of `PipelineLambdaPtrInput` via:
//
//	        PipelineLambdaArgs{...}
//
//	or:
//
//	        nil
type PipelineLambdaPtrInput interface {
	pulumi.Input

	ToPipelineLambdaPtrOutput() PipelineLambdaPtrOutput
	ToPipelineLambdaPtrOutputWithContext(context.Context) PipelineLambdaPtrOutput
}

type pipelineLambdaPtrType PipelineLambdaArgs

func PipelineLambdaPtr(v *PipelineLambdaArgs) PipelineLambdaPtrInput {
	return (*pipelineLambdaPtrType)(v)
}

func (*pipelineLambdaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineLambda)(nil)).Elem()
}

func (i *pipelineLambdaPtrType) ToPipelineLambdaPtrOutput() PipelineLambdaPtrOutput {
	return i.ToPipelineLambdaPtrOutputWithContext(context.Background())
}

func (i *pipelineLambdaPtrType) ToPipelineLambdaPtrOutputWithContext(ctx context.Context) PipelineLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLambdaPtrOutput)
}

type PipelineLambdaOutput struct{ *pulumi.OutputState }

func (PipelineLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLambda)(nil)).Elem()
}

func (o PipelineLambdaOutput) ToPipelineLambdaOutput() PipelineLambdaOutput {
	return o
}

func (o PipelineLambdaOutput) ToPipelineLambdaOutputWithContext(ctx context.Context) PipelineLambdaOutput {
	return o
}

func (o PipelineLambdaOutput) ToPipelineLambdaPtrOutput() PipelineLambdaPtrOutput {
	return o.ToPipelineLambdaPtrOutputWithContext(context.Background())
}

func (o PipelineLambdaOutput) ToPipelineLambdaPtrOutputWithContext(ctx context.Context) PipelineLambdaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineLambda) *PipelineLambda {
		return &v
	}).(PipelineLambdaPtrOutput)
}

// The number of messages passed to the Lambda function for processing.
//
// The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.
func (o PipelineLambdaOutput) BatchSize() pulumi.IntOutput {
	return o.ApplyT(func(v PipelineLambda) int { return v.BatchSize }).(pulumi.IntOutput)
}

// The name of the Lambda function that is run on the message.
func (o PipelineLambdaOutput) LambdaName() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineLambda) string { return v.LambdaName }).(pulumi.StringOutput)
}

// The name of the 'lambda' activity.
func (o PipelineLambdaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineLambda) string { return v.Name }).(pulumi.StringOutput)
}

// The next activity in the pipeline.
func (o PipelineLambdaOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineLambda) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineLambdaPtrOutput struct{ *pulumi.OutputState }

func (PipelineLambdaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineLambda)(nil)).Elem()
}

func (o PipelineLambdaPtrOutput) ToPipelineLambdaPtrOutput() PipelineLambdaPtrOutput {
	return o
}

func (o PipelineLambdaPtrOutput) ToPipelineLambdaPtrOutputWithContext(ctx context.Context) PipelineLambdaPtrOutput {
	return o
}

func (o PipelineLambdaPtrOutput) Elem() PipelineLambdaOutput {
	return o.ApplyT(func(v *PipelineLambda) PipelineLambda {
		if v != nil {
			return *v
		}
		var ret PipelineLambda
		return ret
	}).(PipelineLambdaOutput)
}

// The number of messages passed to the Lambda function for processing.
//
// The AWS Lambda function must be able to process all of these messages within five minutes, which is the maximum timeout duration for Lambda functions.
func (o PipelineLambdaPtrOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PipelineLambda) *int {
		if v == nil {
			return nil
		}
		return &v.BatchSize
	}).(pulumi.IntPtrOutput)
}

// The name of the Lambda function that is run on the message.
func (o PipelineLambdaPtrOutput) LambdaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineLambda) *string {
		if v == nil {
			return nil
		}
		return &v.LambdaName
	}).(pulumi.StringPtrOutput)
}

// The name of the 'lambda' activity.
func (o PipelineLambdaPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineLambda) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The next activity in the pipeline.
func (o PipelineLambdaPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineLambda) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineMath struct {
	// The name of the attribute that contains the result of the math operation.
	Attribute string `pulumi:"attribute"`
	// An expression that uses one or more existing attributes and must return an integer value.
	Math string `pulumi:"math"`
	// The name of the 'math' activity.
	Name string `pulumi:"name"`
	// The next activity in the pipeline.
	Next *string `pulumi:"next"`
}

// PipelineMathInput is an input type that accepts PipelineMathArgs and PipelineMathOutput values.
// You can construct a concrete instance of `PipelineMathInput` via:
//
//	PipelineMathArgs{...}
type PipelineMathInput interface {
	pulumi.Input

	ToPipelineMathOutput() PipelineMathOutput
	ToPipelineMathOutputWithContext(context.Context) PipelineMathOutput
}

type PipelineMathArgs struct {
	// The name of the attribute that contains the result of the math operation.
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// An expression that uses one or more existing attributes and must return an integer value.
	Math pulumi.StringInput `pulumi:"math"`
	// The name of the 'math' activity.
	Name pulumi.StringInput `pulumi:"name"`
	// The next activity in the pipeline.
	Next pulumi.StringPtrInput `pulumi:"next"`
}

func (PipelineMathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineMath)(nil)).Elem()
}

func (i PipelineMathArgs) ToPipelineMathOutput() PipelineMathOutput {
	return i.ToPipelineMathOutputWithContext(context.Background())
}

func (i PipelineMathArgs) ToPipelineMathOutputWithContext(ctx context.Context) PipelineMathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineMathOutput)
}

func (i PipelineMathArgs) ToPipelineMathPtrOutput() PipelineMathPtrOutput {
	return i.ToPipelineMathPtrOutputWithContext(context.Background())
}

func (i PipelineMathArgs) ToPipelineMathPtrOutputWithContext(ctx context.Context) PipelineMathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineMathOutput).ToPipelineMathPtrOutputWithContext(ctx)
}

// PipelineMathPtrInput is an input type that accepts PipelineMathArgs, PipelineMathPtr and PipelineMathPtrOutput values.
// You can construct a concrete instance of `PipelineMathPtrInput` via:
//
//	        PipelineMathArgs{...}
//
//	or:
//
//	        nil
type PipelineMathPtrInput interface {
	pulumi.Input

	ToPipelineMathPtrOutput() PipelineMathPtrOutput
	ToPipelineMathPtrOutputWithContext(context.Context) PipelineMathPtrOutput
}

type pipelineMathPtrType PipelineMathArgs

func PipelineMathPtr(v *PipelineMathArgs) PipelineMathPtrInput {
	return (*pipelineMathPtrType)(v)
}

func (*pipelineMathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineMath)(nil)).Elem()
}

func (i *pipelineMathPtrType) ToPipelineMathPtrOutput() PipelineMathPtrOutput {
	return i.ToPipelineMathPtrOutputWithContext(context.Background())
}

func (i *pipelineMathPtrType) ToPipelineMathPtrOutputWithContext(ctx context.Context) PipelineMathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineMathPtrOutput)
}

type PipelineMathOutput struct{ *pulumi.OutputState }

func (PipelineMathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineMath)(nil)).Elem()
}

func (o PipelineMathOutput) ToPipelineMathOutput() PipelineMathOutput {
	return o
}

func (o PipelineMathOutput) ToPipelineMathOutputWithContext(ctx context.Context) PipelineMathOutput {
	return o
}

func (o PipelineMathOutput) ToPipelineMathPtrOutput() PipelineMathPtrOutput {
	return o.ToPipelineMathPtrOutputWithContext(context.Background())
}

func (o PipelineMathOutput) ToPipelineMathPtrOutputWithContext(ctx context.Context) PipelineMathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineMath) *PipelineMath {
		return &v
	}).(PipelineMathPtrOutput)
}

// The name of the attribute that contains the result of the math operation.
func (o PipelineMathOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineMath) string { return v.Attribute }).(pulumi.StringOutput)
}

// An expression that uses one or more existing attributes and must return an integer value.
func (o PipelineMathOutput) Math() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineMath) string { return v.Math }).(pulumi.StringOutput)
}

// The name of the 'math' activity.
func (o PipelineMathOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineMath) string { return v.Name }).(pulumi.StringOutput)
}

// The next activity in the pipeline.
func (o PipelineMathOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineMath) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineMathPtrOutput struct{ *pulumi.OutputState }

func (PipelineMathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineMath)(nil)).Elem()
}

func (o PipelineMathPtrOutput) ToPipelineMathPtrOutput() PipelineMathPtrOutput {
	return o
}

func (o PipelineMathPtrOutput) ToPipelineMathPtrOutputWithContext(ctx context.Context) PipelineMathPtrOutput {
	return o
}

func (o PipelineMathPtrOutput) Elem() PipelineMathOutput {
	return o.ApplyT(func(v *PipelineMath) PipelineMath {
		if v != nil {
			return *v
		}
		var ret PipelineMath
		return ret
	}).(PipelineMathOutput)
}

// The name of the attribute that contains the result of the math operation.
func (o PipelineMathPtrOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineMath) *string {
		if v == nil {
			return nil
		}
		return &v.Attribute
	}).(pulumi.StringPtrOutput)
}

// An expression that uses one or more existing attributes and must return an integer value.
func (o PipelineMathPtrOutput) Math() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineMath) *string {
		if v == nil {
			return nil
		}
		return &v.Math
	}).(pulumi.StringPtrOutput)
}

// The name of the 'math' activity.
func (o PipelineMathPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineMath) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The next activity in the pipeline.
func (o PipelineMathPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineMath) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineRemoveAttributes struct {
	// A list of 1-50 attributes to remove from the message.
	Attributes []string `pulumi:"attributes"`
	// The name of the 'removeAttributes' activity.
	Name string `pulumi:"name"`
	// The next activity in the pipeline.
	Next *string `pulumi:"next"`
}

// PipelineRemoveAttributesInput is an input type that accepts PipelineRemoveAttributesArgs and PipelineRemoveAttributesOutput values.
// You can construct a concrete instance of `PipelineRemoveAttributesInput` via:
//
//	PipelineRemoveAttributesArgs{...}
type PipelineRemoveAttributesInput interface {
	pulumi.Input

	ToPipelineRemoveAttributesOutput() PipelineRemoveAttributesOutput
	ToPipelineRemoveAttributesOutputWithContext(context.Context) PipelineRemoveAttributesOutput
}

type PipelineRemoveAttributesArgs struct {
	// A list of 1-50 attributes to remove from the message.
	Attributes pulumi.StringArrayInput `pulumi:"attributes"`
	// The name of the 'removeAttributes' activity.
	Name pulumi.StringInput `pulumi:"name"`
	// The next activity in the pipeline.
	Next pulumi.StringPtrInput `pulumi:"next"`
}

func (PipelineRemoveAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineRemoveAttributes)(nil)).Elem()
}

func (i PipelineRemoveAttributesArgs) ToPipelineRemoveAttributesOutput() PipelineRemoveAttributesOutput {
	return i.ToPipelineRemoveAttributesOutputWithContext(context.Background())
}

func (i PipelineRemoveAttributesArgs) ToPipelineRemoveAttributesOutputWithContext(ctx context.Context) PipelineRemoveAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineRemoveAttributesOutput)
}

func (i PipelineRemoveAttributesArgs) ToPipelineRemoveAttributesPtrOutput() PipelineRemoveAttributesPtrOutput {
	return i.ToPipelineRemoveAttributesPtrOutputWithContext(context.Background())
}

func (i PipelineRemoveAttributesArgs) ToPipelineRemoveAttributesPtrOutputWithContext(ctx context.Context) PipelineRemoveAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineRemoveAttributesOutput).ToPipelineRemoveAttributesPtrOutputWithContext(ctx)
}

// PipelineRemoveAttributesPtrInput is an input type that accepts PipelineRemoveAttributesArgs, PipelineRemoveAttributesPtr and PipelineRemoveAttributesPtrOutput values.
// You can construct a concrete instance of `PipelineRemoveAttributesPtrInput` via:
//
//	        PipelineRemoveAttributesArgs{...}
//
//	or:
//
//	        nil
type PipelineRemoveAttributesPtrInput interface {
	pulumi.Input

	ToPipelineRemoveAttributesPtrOutput() PipelineRemoveAttributesPtrOutput
	ToPipelineRemoveAttributesPtrOutputWithContext(context.Context) PipelineRemoveAttributesPtrOutput
}

type pipelineRemoveAttributesPtrType PipelineRemoveAttributesArgs

func PipelineRemoveAttributesPtr(v *PipelineRemoveAttributesArgs) PipelineRemoveAttributesPtrInput {
	return (*pipelineRemoveAttributesPtrType)(v)
}

func (*pipelineRemoveAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineRemoveAttributes)(nil)).Elem()
}

func (i *pipelineRemoveAttributesPtrType) ToPipelineRemoveAttributesPtrOutput() PipelineRemoveAttributesPtrOutput {
	return i.ToPipelineRemoveAttributesPtrOutputWithContext(context.Background())
}

func (i *pipelineRemoveAttributesPtrType) ToPipelineRemoveAttributesPtrOutputWithContext(ctx context.Context) PipelineRemoveAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineRemoveAttributesPtrOutput)
}

type PipelineRemoveAttributesOutput struct{ *pulumi.OutputState }

func (PipelineRemoveAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineRemoveAttributes)(nil)).Elem()
}

func (o PipelineRemoveAttributesOutput) ToPipelineRemoveAttributesOutput() PipelineRemoveAttributesOutput {
	return o
}

func (o PipelineRemoveAttributesOutput) ToPipelineRemoveAttributesOutputWithContext(ctx context.Context) PipelineRemoveAttributesOutput {
	return o
}

func (o PipelineRemoveAttributesOutput) ToPipelineRemoveAttributesPtrOutput() PipelineRemoveAttributesPtrOutput {
	return o.ToPipelineRemoveAttributesPtrOutputWithContext(context.Background())
}

func (o PipelineRemoveAttributesOutput) ToPipelineRemoveAttributesPtrOutputWithContext(ctx context.Context) PipelineRemoveAttributesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineRemoveAttributes) *PipelineRemoveAttributes {
		return &v
	}).(PipelineRemoveAttributesPtrOutput)
}

// A list of 1-50 attributes to remove from the message.
func (o PipelineRemoveAttributesOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineRemoveAttributes) []string { return v.Attributes }).(pulumi.StringArrayOutput)
}

// The name of the 'removeAttributes' activity.
func (o PipelineRemoveAttributesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineRemoveAttributes) string { return v.Name }).(pulumi.StringOutput)
}

// The next activity in the pipeline.
func (o PipelineRemoveAttributesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineRemoveAttributes) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineRemoveAttributesPtrOutput struct{ *pulumi.OutputState }

func (PipelineRemoveAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineRemoveAttributes)(nil)).Elem()
}

func (o PipelineRemoveAttributesPtrOutput) ToPipelineRemoveAttributesPtrOutput() PipelineRemoveAttributesPtrOutput {
	return o
}

func (o PipelineRemoveAttributesPtrOutput) ToPipelineRemoveAttributesPtrOutputWithContext(ctx context.Context) PipelineRemoveAttributesPtrOutput {
	return o
}

func (o PipelineRemoveAttributesPtrOutput) Elem() PipelineRemoveAttributesOutput {
	return o.ApplyT(func(v *PipelineRemoveAttributes) PipelineRemoveAttributes {
		if v != nil {
			return *v
		}
		var ret PipelineRemoveAttributes
		return ret
	}).(PipelineRemoveAttributesOutput)
}

// A list of 1-50 attributes to remove from the message.
func (o PipelineRemoveAttributesPtrOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineRemoveAttributes) []string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringArrayOutput)
}

// The name of the 'removeAttributes' activity.
func (o PipelineRemoveAttributesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineRemoveAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The next activity in the pipeline.
func (o PipelineRemoveAttributesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineRemoveAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineSelectAttributes struct {
	// A list of the attributes to select from the message.
	Attributes []string `pulumi:"attributes"`
	// The name of the 'selectAttributes' activity.
	Name string `pulumi:"name"`
	// The next activity in the pipeline.
	Next *string `pulumi:"next"`
}

// PipelineSelectAttributesInput is an input type that accepts PipelineSelectAttributesArgs and PipelineSelectAttributesOutput values.
// You can construct a concrete instance of `PipelineSelectAttributesInput` via:
//
//	PipelineSelectAttributesArgs{...}
type PipelineSelectAttributesInput interface {
	pulumi.Input

	ToPipelineSelectAttributesOutput() PipelineSelectAttributesOutput
	ToPipelineSelectAttributesOutputWithContext(context.Context) PipelineSelectAttributesOutput
}

type PipelineSelectAttributesArgs struct {
	// A list of the attributes to select from the message.
	Attributes pulumi.StringArrayInput `pulumi:"attributes"`
	// The name of the 'selectAttributes' activity.
	Name pulumi.StringInput `pulumi:"name"`
	// The next activity in the pipeline.
	Next pulumi.StringPtrInput `pulumi:"next"`
}

func (PipelineSelectAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineSelectAttributes)(nil)).Elem()
}

func (i PipelineSelectAttributesArgs) ToPipelineSelectAttributesOutput() PipelineSelectAttributesOutput {
	return i.ToPipelineSelectAttributesOutputWithContext(context.Background())
}

func (i PipelineSelectAttributesArgs) ToPipelineSelectAttributesOutputWithContext(ctx context.Context) PipelineSelectAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineSelectAttributesOutput)
}

func (i PipelineSelectAttributesArgs) ToPipelineSelectAttributesPtrOutput() PipelineSelectAttributesPtrOutput {
	return i.ToPipelineSelectAttributesPtrOutputWithContext(context.Background())
}

func (i PipelineSelectAttributesArgs) ToPipelineSelectAttributesPtrOutputWithContext(ctx context.Context) PipelineSelectAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineSelectAttributesOutput).ToPipelineSelectAttributesPtrOutputWithContext(ctx)
}

// PipelineSelectAttributesPtrInput is an input type that accepts PipelineSelectAttributesArgs, PipelineSelectAttributesPtr and PipelineSelectAttributesPtrOutput values.
// You can construct a concrete instance of `PipelineSelectAttributesPtrInput` via:
//
//	        PipelineSelectAttributesArgs{...}
//
//	or:
//
//	        nil
type PipelineSelectAttributesPtrInput interface {
	pulumi.Input

	ToPipelineSelectAttributesPtrOutput() PipelineSelectAttributesPtrOutput
	ToPipelineSelectAttributesPtrOutputWithContext(context.Context) PipelineSelectAttributesPtrOutput
}

type pipelineSelectAttributesPtrType PipelineSelectAttributesArgs

func PipelineSelectAttributesPtr(v *PipelineSelectAttributesArgs) PipelineSelectAttributesPtrInput {
	return (*pipelineSelectAttributesPtrType)(v)
}

func (*pipelineSelectAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineSelectAttributes)(nil)).Elem()
}

func (i *pipelineSelectAttributesPtrType) ToPipelineSelectAttributesPtrOutput() PipelineSelectAttributesPtrOutput {
	return i.ToPipelineSelectAttributesPtrOutputWithContext(context.Background())
}

func (i *pipelineSelectAttributesPtrType) ToPipelineSelectAttributesPtrOutputWithContext(ctx context.Context) PipelineSelectAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineSelectAttributesPtrOutput)
}

type PipelineSelectAttributesOutput struct{ *pulumi.OutputState }

func (PipelineSelectAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineSelectAttributes)(nil)).Elem()
}

func (o PipelineSelectAttributesOutput) ToPipelineSelectAttributesOutput() PipelineSelectAttributesOutput {
	return o
}

func (o PipelineSelectAttributesOutput) ToPipelineSelectAttributesOutputWithContext(ctx context.Context) PipelineSelectAttributesOutput {
	return o
}

func (o PipelineSelectAttributesOutput) ToPipelineSelectAttributesPtrOutput() PipelineSelectAttributesPtrOutput {
	return o.ToPipelineSelectAttributesPtrOutputWithContext(context.Background())
}

func (o PipelineSelectAttributesOutput) ToPipelineSelectAttributesPtrOutputWithContext(ctx context.Context) PipelineSelectAttributesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineSelectAttributes) *PipelineSelectAttributes {
		return &v
	}).(PipelineSelectAttributesPtrOutput)
}

// A list of the attributes to select from the message.
func (o PipelineSelectAttributesOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineSelectAttributes) []string { return v.Attributes }).(pulumi.StringArrayOutput)
}

// The name of the 'selectAttributes' activity.
func (o PipelineSelectAttributesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineSelectAttributes) string { return v.Name }).(pulumi.StringOutput)
}

// The next activity in the pipeline.
func (o PipelineSelectAttributesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineSelectAttributes) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineSelectAttributesPtrOutput struct{ *pulumi.OutputState }

func (PipelineSelectAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineSelectAttributes)(nil)).Elem()
}

func (o PipelineSelectAttributesPtrOutput) ToPipelineSelectAttributesPtrOutput() PipelineSelectAttributesPtrOutput {
	return o
}

func (o PipelineSelectAttributesPtrOutput) ToPipelineSelectAttributesPtrOutputWithContext(ctx context.Context) PipelineSelectAttributesPtrOutput {
	return o
}

func (o PipelineSelectAttributesPtrOutput) Elem() PipelineSelectAttributesOutput {
	return o.ApplyT(func(v *PipelineSelectAttributes) PipelineSelectAttributes {
		if v != nil {
			return *v
		}
		var ret PipelineSelectAttributes
		return ret
	}).(PipelineSelectAttributesOutput)
}

// A list of the attributes to select from the message.
func (o PipelineSelectAttributesPtrOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineSelectAttributes) []string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringArrayOutput)
}

// The name of the 'selectAttributes' activity.
func (o PipelineSelectAttributesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineSelectAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The next activity in the pipeline.
func (o PipelineSelectAttributesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineSelectAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineTag struct {
	// The tag's key.
	Key string `pulumi:"key"`
	// The tag's value.
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelCustomerManagedS3Input)(nil)).Elem(), ChannelCustomerManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelCustomerManagedS3PtrInput)(nil)).Elem(), ChannelCustomerManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelRetentionPeriodInput)(nil)).Elem(), ChannelRetentionPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelRetentionPeriodPtrInput)(nil)).Elem(), ChannelRetentionPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelServiceManagedS3Input)(nil)).Elem(), ChannelServiceManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelServiceManagedS3PtrInput)(nil)).Elem(), ChannelServiceManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelStorageInput)(nil)).Elem(), ChannelStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelStoragePtrInput)(nil)).Elem(), ChannelStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetActionInput)(nil)).Elem(), DatasetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetActionArrayInput)(nil)).Elem(), DatasetActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContainerActionInput)(nil)).Elem(), DatasetContainerActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContainerActionPtrInput)(nil)).Elem(), DatasetContainerActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContentDeliveryRuleInput)(nil)).Elem(), DatasetContentDeliveryRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContentDeliveryRuleArrayInput)(nil)).Elem(), DatasetContentDeliveryRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContentDeliveryRuleDestinationInput)(nil)).Elem(), DatasetContentDeliveryRuleDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContentVersionValueInput)(nil)).Elem(), DatasetContentVersionValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContentVersionValuePtrInput)(nil)).Elem(), DatasetContentVersionValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDeltaTimeInput)(nil)).Elem(), DatasetDeltaTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDeltaTimePtrInput)(nil)).Elem(), DatasetDeltaTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDeltaTimeSessionWindowConfigurationInput)(nil)).Elem(), DatasetDeltaTimeSessionWindowConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDeltaTimeSessionWindowConfigurationPtrInput)(nil)).Elem(), DatasetDeltaTimeSessionWindowConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetFilterInput)(nil)).Elem(), DatasetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetFilterArrayInput)(nil)).Elem(), DatasetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetGlueConfigurationInput)(nil)).Elem(), DatasetGlueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetGlueConfigurationPtrInput)(nil)).Elem(), DatasetGlueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetIotEventsDestinationConfigurationInput)(nil)).Elem(), DatasetIotEventsDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetIotEventsDestinationConfigurationPtrInput)(nil)).Elem(), DatasetIotEventsDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetLateDataRuleInput)(nil)).Elem(), DatasetLateDataRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetLateDataRuleArrayInput)(nil)).Elem(), DatasetLateDataRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetLateDataRuleConfigurationInput)(nil)).Elem(), DatasetLateDataRuleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetOutputFileUriValueInput)(nil)).Elem(), DatasetOutputFileUriValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetOutputFileUriValuePtrInput)(nil)).Elem(), DatasetOutputFileUriValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetQueryActionInput)(nil)).Elem(), DatasetQueryActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetQueryActionPtrInput)(nil)).Elem(), DatasetQueryActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetResourceConfigurationInput)(nil)).Elem(), DatasetResourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetResourceConfigurationPtrInput)(nil)).Elem(), DatasetResourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetRetentionPeriodInput)(nil)).Elem(), DatasetRetentionPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetRetentionPeriodPtrInput)(nil)).Elem(), DatasetRetentionPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetS3DestinationConfigurationInput)(nil)).Elem(), DatasetS3DestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetS3DestinationConfigurationPtrInput)(nil)).Elem(), DatasetS3DestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetScheduleInput)(nil)).Elem(), DatasetScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetSchedulePtrInput)(nil)).Elem(), DatasetScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetTriggerInput)(nil)).Elem(), DatasetTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetTriggerArrayInput)(nil)).Elem(), DatasetTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetTriggeringDatasetInput)(nil)).Elem(), DatasetTriggeringDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetTriggeringDatasetPtrInput)(nil)).Elem(), DatasetTriggeringDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetVariableInput)(nil)).Elem(), DatasetVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetVariableArrayInput)(nil)).Elem(), DatasetVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetVersioningConfigurationInput)(nil)).Elem(), DatasetVersioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetVersioningConfigurationPtrInput)(nil)).Elem(), DatasetVersioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreColumnInput)(nil)).Elem(), DatastoreColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreColumnArrayInput)(nil)).Elem(), DatastoreColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreCustomerManagedS3Input)(nil)).Elem(), DatastoreCustomerManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreCustomerManagedS3PtrInput)(nil)).Elem(), DatastoreCustomerManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreCustomerManagedS3StorageInput)(nil)).Elem(), DatastoreCustomerManagedS3StorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreCustomerManagedS3StoragePtrInput)(nil)).Elem(), DatastoreCustomerManagedS3StorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreFileFormatConfigurationInput)(nil)).Elem(), DatastoreFileFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreFileFormatConfigurationPtrInput)(nil)).Elem(), DatastoreFileFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreIotSiteWiseMultiLayerStorageInput)(nil)).Elem(), DatastoreIotSiteWiseMultiLayerStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreIotSiteWiseMultiLayerStoragePtrInput)(nil)).Elem(), DatastoreIotSiteWiseMultiLayerStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreJsonConfigurationInput)(nil)).Elem(), DatastoreJsonConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreJsonConfigurationPtrInput)(nil)).Elem(), DatastoreJsonConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreParquetConfigurationInput)(nil)).Elem(), DatastoreParquetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreParquetConfigurationPtrInput)(nil)).Elem(), DatastoreParquetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastorePartitionInput)(nil)).Elem(), DatastorePartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastorePartitionArrayInput)(nil)).Elem(), DatastorePartitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastorePartitionsInput)(nil)).Elem(), DatastorePartitionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastorePartitionsPtrInput)(nil)).Elem(), DatastorePartitionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreRetentionPeriodInput)(nil)).Elem(), DatastoreRetentionPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreRetentionPeriodPtrInput)(nil)).Elem(), DatastoreRetentionPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreSchemaDefinitionInput)(nil)).Elem(), DatastoreSchemaDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreSchemaDefinitionPtrInput)(nil)).Elem(), DatastoreSchemaDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreServiceManagedS3Input)(nil)).Elem(), DatastoreServiceManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreServiceManagedS3PtrInput)(nil)).Elem(), DatastoreServiceManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreStorageInput)(nil)).Elem(), DatastoreStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreStoragePtrInput)(nil)).Elem(), DatastoreStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreTimestampPartitionInput)(nil)).Elem(), DatastoreTimestampPartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreTimestampPartitionPtrInput)(nil)).Elem(), DatastoreTimestampPartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PartitionInput)(nil)).Elem(), PartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PartitionPtrInput)(nil)).Elem(), PartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineActivityInput)(nil)).Elem(), PipelineActivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineActivityArrayInput)(nil)).Elem(), PipelineActivityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineAddAttributesInput)(nil)).Elem(), PipelineAddAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineAddAttributesPtrInput)(nil)).Elem(), PipelineAddAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineChannelInput)(nil)).Elem(), PipelineChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineChannelPtrInput)(nil)).Elem(), PipelineChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDatastoreInput)(nil)).Elem(), PipelineDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDatastorePtrInput)(nil)).Elem(), PipelineDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDeviceRegistryEnrichInput)(nil)).Elem(), PipelineDeviceRegistryEnrichArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDeviceRegistryEnrichPtrInput)(nil)).Elem(), PipelineDeviceRegistryEnrichArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDeviceShadowEnrichInput)(nil)).Elem(), PipelineDeviceShadowEnrichArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDeviceShadowEnrichPtrInput)(nil)).Elem(), PipelineDeviceShadowEnrichArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFilterInput)(nil)).Elem(), PipelineFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFilterPtrInput)(nil)).Elem(), PipelineFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLambdaInput)(nil)).Elem(), PipelineLambdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLambdaPtrInput)(nil)).Elem(), PipelineLambdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineMathInput)(nil)).Elem(), PipelineMathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineMathPtrInput)(nil)).Elem(), PipelineMathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineRemoveAttributesInput)(nil)).Elem(), PipelineRemoveAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineRemoveAttributesPtrInput)(nil)).Elem(), PipelineRemoveAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineSelectAttributesInput)(nil)).Elem(), PipelineSelectAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineSelectAttributesPtrInput)(nil)).Elem(), PipelineSelectAttributesArgs{})
	pulumi.RegisterOutputType(ChannelCustomerManagedS3Output{})
	pulumi.RegisterOutputType(ChannelCustomerManagedS3PtrOutput{})
	pulumi.RegisterOutputType(ChannelRetentionPeriodOutput{})
	pulumi.RegisterOutputType(ChannelRetentionPeriodPtrOutput{})
	pulumi.RegisterOutputType(ChannelServiceManagedS3Output{})
	pulumi.RegisterOutputType(ChannelServiceManagedS3PtrOutput{})
	pulumi.RegisterOutputType(ChannelStorageOutput{})
	pulumi.RegisterOutputType(ChannelStoragePtrOutput{})
	pulumi.RegisterOutputType(DatasetActionOutput{})
	pulumi.RegisterOutputType(DatasetActionArrayOutput{})
	pulumi.RegisterOutputType(DatasetContainerActionOutput{})
	pulumi.RegisterOutputType(DatasetContainerActionPtrOutput{})
	pulumi.RegisterOutputType(DatasetContentDeliveryRuleOutput{})
	pulumi.RegisterOutputType(DatasetContentDeliveryRuleArrayOutput{})
	pulumi.RegisterOutputType(DatasetContentDeliveryRuleDestinationOutput{})
	pulumi.RegisterOutputType(DatasetContentVersionValueOutput{})
	pulumi.RegisterOutputType(DatasetContentVersionValuePtrOutput{})
	pulumi.RegisterOutputType(DatasetDeltaTimeOutput{})
	pulumi.RegisterOutputType(DatasetDeltaTimePtrOutput{})
	pulumi.RegisterOutputType(DatasetDeltaTimeSessionWindowConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetDeltaTimeSessionWindowConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatasetFilterOutput{})
	pulumi.RegisterOutputType(DatasetFilterArrayOutput{})
	pulumi.RegisterOutputType(DatasetGlueConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetGlueConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatasetIotEventsDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetIotEventsDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatasetLateDataRuleOutput{})
	pulumi.RegisterOutputType(DatasetLateDataRuleArrayOutput{})
	pulumi.RegisterOutputType(DatasetLateDataRuleConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetOutputFileUriValueOutput{})
	pulumi.RegisterOutputType(DatasetOutputFileUriValuePtrOutput{})
	pulumi.RegisterOutputType(DatasetQueryActionOutput{})
	pulumi.RegisterOutputType(DatasetQueryActionPtrOutput{})
	pulumi.RegisterOutputType(DatasetResourceConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetResourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatasetRetentionPeriodOutput{})
	pulumi.RegisterOutputType(DatasetRetentionPeriodPtrOutput{})
	pulumi.RegisterOutputType(DatasetS3DestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetS3DestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatasetScheduleOutput{})
	pulumi.RegisterOutputType(DatasetSchedulePtrOutput{})
	pulumi.RegisterOutputType(DatasetTriggerOutput{})
	pulumi.RegisterOutputType(DatasetTriggerArrayOutput{})
	pulumi.RegisterOutputType(DatasetTriggeringDatasetOutput{})
	pulumi.RegisterOutputType(DatasetTriggeringDatasetPtrOutput{})
	pulumi.RegisterOutputType(DatasetVariableOutput{})
	pulumi.RegisterOutputType(DatasetVariableArrayOutput{})
	pulumi.RegisterOutputType(DatasetVersioningConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetVersioningConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatastoreColumnOutput{})
	pulumi.RegisterOutputType(DatastoreColumnArrayOutput{})
	pulumi.RegisterOutputType(DatastoreCustomerManagedS3Output{})
	pulumi.RegisterOutputType(DatastoreCustomerManagedS3PtrOutput{})
	pulumi.RegisterOutputType(DatastoreCustomerManagedS3StorageOutput{})
	pulumi.RegisterOutputType(DatastoreCustomerManagedS3StoragePtrOutput{})
	pulumi.RegisterOutputType(DatastoreFileFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DatastoreFileFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatastoreIotSiteWiseMultiLayerStorageOutput{})
	pulumi.RegisterOutputType(DatastoreIotSiteWiseMultiLayerStoragePtrOutput{})
	pulumi.RegisterOutputType(DatastoreJsonConfigurationOutput{})
	pulumi.RegisterOutputType(DatastoreJsonConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatastoreParquetConfigurationOutput{})
	pulumi.RegisterOutputType(DatastoreParquetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatastorePartitionOutput{})
	pulumi.RegisterOutputType(DatastorePartitionArrayOutput{})
	pulumi.RegisterOutputType(DatastorePartitionsOutput{})
	pulumi.RegisterOutputType(DatastorePartitionsPtrOutput{})
	pulumi.RegisterOutputType(DatastoreRetentionPeriodOutput{})
	pulumi.RegisterOutputType(DatastoreRetentionPeriodPtrOutput{})
	pulumi.RegisterOutputType(DatastoreSchemaDefinitionOutput{})
	pulumi.RegisterOutputType(DatastoreSchemaDefinitionPtrOutput{})
	pulumi.RegisterOutputType(DatastoreServiceManagedS3Output{})
	pulumi.RegisterOutputType(DatastoreServiceManagedS3PtrOutput{})
	pulumi.RegisterOutputType(DatastoreStorageOutput{})
	pulumi.RegisterOutputType(DatastoreStoragePtrOutput{})
	pulumi.RegisterOutputType(DatastoreTimestampPartitionOutput{})
	pulumi.RegisterOutputType(DatastoreTimestampPartitionPtrOutput{})
	pulumi.RegisterOutputType(PartitionOutput{})
	pulumi.RegisterOutputType(PartitionPtrOutput{})
	pulumi.RegisterOutputType(PipelineActivityOutput{})
	pulumi.RegisterOutputType(PipelineActivityArrayOutput{})
	pulumi.RegisterOutputType(PipelineAddAttributesOutput{})
	pulumi.RegisterOutputType(PipelineAddAttributesPtrOutput{})
	pulumi.RegisterOutputType(PipelineChannelOutput{})
	pulumi.RegisterOutputType(PipelineChannelPtrOutput{})
	pulumi.RegisterOutputType(PipelineDatastoreOutput{})
	pulumi.RegisterOutputType(PipelineDatastorePtrOutput{})
	pulumi.RegisterOutputType(PipelineDeviceRegistryEnrichOutput{})
	pulumi.RegisterOutputType(PipelineDeviceRegistryEnrichPtrOutput{})
	pulumi.RegisterOutputType(PipelineDeviceShadowEnrichOutput{})
	pulumi.RegisterOutputType(PipelineDeviceShadowEnrichPtrOutput{})
	pulumi.RegisterOutputType(PipelineFilterOutput{})
	pulumi.RegisterOutputType(PipelineFilterPtrOutput{})
	pulumi.RegisterOutputType(PipelineLambdaOutput{})
	pulumi.RegisterOutputType(PipelineLambdaPtrOutput{})
	pulumi.RegisterOutputType(PipelineMathOutput{})
	pulumi.RegisterOutputType(PipelineMathPtrOutput{})
	pulumi.RegisterOutputType(PipelineRemoveAttributesOutput{})
	pulumi.RegisterOutputType(PipelineRemoveAttributesPtrOutput{})
	pulumi.RegisterOutputType(PipelineSelectAttributesOutput{})
	pulumi.RegisterOutputType(PipelineSelectAttributesPtrOutput{})
}
