// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotanalytics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ChannelCustomerManagedS3 struct {
	Bucket    string  `pulumi:"bucket"`
	KeyPrefix *string `pulumi:"keyPrefix"`
	RoleArn   string  `pulumi:"roleArn"`
}

// ChannelCustomerManagedS3Input is an input type that accepts ChannelCustomerManagedS3Args and ChannelCustomerManagedS3Output values.
// You can construct a concrete instance of `ChannelCustomerManagedS3Input` via:
//
//          ChannelCustomerManagedS3Args{...}
type ChannelCustomerManagedS3Input interface {
	pulumi.Input

	ToChannelCustomerManagedS3Output() ChannelCustomerManagedS3Output
	ToChannelCustomerManagedS3OutputWithContext(context.Context) ChannelCustomerManagedS3Output
}

type ChannelCustomerManagedS3Args struct {
	Bucket    pulumi.StringInput    `pulumi:"bucket"`
	KeyPrefix pulumi.StringPtrInput `pulumi:"keyPrefix"`
	RoleArn   pulumi.StringInput    `pulumi:"roleArn"`
}

func (ChannelCustomerManagedS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCustomerManagedS3)(nil)).Elem()
}

func (i ChannelCustomerManagedS3Args) ToChannelCustomerManagedS3Output() ChannelCustomerManagedS3Output {
	return i.ToChannelCustomerManagedS3OutputWithContext(context.Background())
}

func (i ChannelCustomerManagedS3Args) ToChannelCustomerManagedS3OutputWithContext(ctx context.Context) ChannelCustomerManagedS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCustomerManagedS3Output)
}

func (i ChannelCustomerManagedS3Args) ToChannelCustomerManagedS3PtrOutput() ChannelCustomerManagedS3PtrOutput {
	return i.ToChannelCustomerManagedS3PtrOutputWithContext(context.Background())
}

func (i ChannelCustomerManagedS3Args) ToChannelCustomerManagedS3PtrOutputWithContext(ctx context.Context) ChannelCustomerManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCustomerManagedS3Output).ToChannelCustomerManagedS3PtrOutputWithContext(ctx)
}

// ChannelCustomerManagedS3PtrInput is an input type that accepts ChannelCustomerManagedS3Args, ChannelCustomerManagedS3Ptr and ChannelCustomerManagedS3PtrOutput values.
// You can construct a concrete instance of `ChannelCustomerManagedS3PtrInput` via:
//
//          ChannelCustomerManagedS3Args{...}
//
//  or:
//
//          nil
type ChannelCustomerManagedS3PtrInput interface {
	pulumi.Input

	ToChannelCustomerManagedS3PtrOutput() ChannelCustomerManagedS3PtrOutput
	ToChannelCustomerManagedS3PtrOutputWithContext(context.Context) ChannelCustomerManagedS3PtrOutput
}

type channelCustomerManagedS3PtrType ChannelCustomerManagedS3Args

func ChannelCustomerManagedS3Ptr(v *ChannelCustomerManagedS3Args) ChannelCustomerManagedS3PtrInput {
	return (*channelCustomerManagedS3PtrType)(v)
}

func (*channelCustomerManagedS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCustomerManagedS3)(nil)).Elem()
}

func (i *channelCustomerManagedS3PtrType) ToChannelCustomerManagedS3PtrOutput() ChannelCustomerManagedS3PtrOutput {
	return i.ToChannelCustomerManagedS3PtrOutputWithContext(context.Background())
}

func (i *channelCustomerManagedS3PtrType) ToChannelCustomerManagedS3PtrOutputWithContext(ctx context.Context) ChannelCustomerManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelCustomerManagedS3PtrOutput)
}

type ChannelCustomerManagedS3Output struct{ *pulumi.OutputState }

func (ChannelCustomerManagedS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelCustomerManagedS3)(nil)).Elem()
}

func (o ChannelCustomerManagedS3Output) ToChannelCustomerManagedS3Output() ChannelCustomerManagedS3Output {
	return o
}

func (o ChannelCustomerManagedS3Output) ToChannelCustomerManagedS3OutputWithContext(ctx context.Context) ChannelCustomerManagedS3Output {
	return o
}

func (o ChannelCustomerManagedS3Output) ToChannelCustomerManagedS3PtrOutput() ChannelCustomerManagedS3PtrOutput {
	return o.ToChannelCustomerManagedS3PtrOutputWithContext(context.Background())
}

func (o ChannelCustomerManagedS3Output) ToChannelCustomerManagedS3PtrOutputWithContext(ctx context.Context) ChannelCustomerManagedS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelCustomerManagedS3) *ChannelCustomerManagedS3 {
		return &v
	}).(ChannelCustomerManagedS3PtrOutput)
}

func (o ChannelCustomerManagedS3Output) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelCustomerManagedS3) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o ChannelCustomerManagedS3Output) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelCustomerManagedS3) *string { return v.KeyPrefix }).(pulumi.StringPtrOutput)
}

func (o ChannelCustomerManagedS3Output) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelCustomerManagedS3) string { return v.RoleArn }).(pulumi.StringOutput)
}

type ChannelCustomerManagedS3PtrOutput struct{ *pulumi.OutputState }

func (ChannelCustomerManagedS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelCustomerManagedS3)(nil)).Elem()
}

func (o ChannelCustomerManagedS3PtrOutput) ToChannelCustomerManagedS3PtrOutput() ChannelCustomerManagedS3PtrOutput {
	return o
}

func (o ChannelCustomerManagedS3PtrOutput) ToChannelCustomerManagedS3PtrOutputWithContext(ctx context.Context) ChannelCustomerManagedS3PtrOutput {
	return o
}

func (o ChannelCustomerManagedS3PtrOutput) Elem() ChannelCustomerManagedS3Output {
	return o.ApplyT(func(v *ChannelCustomerManagedS3) ChannelCustomerManagedS3 {
		if v != nil {
			return *v
		}
		var ret ChannelCustomerManagedS3
		return ret
	}).(ChannelCustomerManagedS3Output)
}

func (o ChannelCustomerManagedS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelCustomerManagedS3) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o ChannelCustomerManagedS3PtrOutput) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelCustomerManagedS3) *string {
		if v == nil {
			return nil
		}
		return v.KeyPrefix
	}).(pulumi.StringPtrOutput)
}

func (o ChannelCustomerManagedS3PtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelCustomerManagedS3) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type ChannelRetentionPeriod struct {
	NumberOfDays *int  `pulumi:"numberOfDays"`
	Unlimited    *bool `pulumi:"unlimited"`
}

// ChannelRetentionPeriodInput is an input type that accepts ChannelRetentionPeriodArgs and ChannelRetentionPeriodOutput values.
// You can construct a concrete instance of `ChannelRetentionPeriodInput` via:
//
//          ChannelRetentionPeriodArgs{...}
type ChannelRetentionPeriodInput interface {
	pulumi.Input

	ToChannelRetentionPeriodOutput() ChannelRetentionPeriodOutput
	ToChannelRetentionPeriodOutputWithContext(context.Context) ChannelRetentionPeriodOutput
}

type ChannelRetentionPeriodArgs struct {
	NumberOfDays pulumi.IntPtrInput  `pulumi:"numberOfDays"`
	Unlimited    pulumi.BoolPtrInput `pulumi:"unlimited"`
}

func (ChannelRetentionPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRetentionPeriod)(nil)).Elem()
}

func (i ChannelRetentionPeriodArgs) ToChannelRetentionPeriodOutput() ChannelRetentionPeriodOutput {
	return i.ToChannelRetentionPeriodOutputWithContext(context.Background())
}

func (i ChannelRetentionPeriodArgs) ToChannelRetentionPeriodOutputWithContext(ctx context.Context) ChannelRetentionPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRetentionPeriodOutput)
}

func (i ChannelRetentionPeriodArgs) ToChannelRetentionPeriodPtrOutput() ChannelRetentionPeriodPtrOutput {
	return i.ToChannelRetentionPeriodPtrOutputWithContext(context.Background())
}

func (i ChannelRetentionPeriodArgs) ToChannelRetentionPeriodPtrOutputWithContext(ctx context.Context) ChannelRetentionPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRetentionPeriodOutput).ToChannelRetentionPeriodPtrOutputWithContext(ctx)
}

// ChannelRetentionPeriodPtrInput is an input type that accepts ChannelRetentionPeriodArgs, ChannelRetentionPeriodPtr and ChannelRetentionPeriodPtrOutput values.
// You can construct a concrete instance of `ChannelRetentionPeriodPtrInput` via:
//
//          ChannelRetentionPeriodArgs{...}
//
//  or:
//
//          nil
type ChannelRetentionPeriodPtrInput interface {
	pulumi.Input

	ToChannelRetentionPeriodPtrOutput() ChannelRetentionPeriodPtrOutput
	ToChannelRetentionPeriodPtrOutputWithContext(context.Context) ChannelRetentionPeriodPtrOutput
}

type channelRetentionPeriodPtrType ChannelRetentionPeriodArgs

func ChannelRetentionPeriodPtr(v *ChannelRetentionPeriodArgs) ChannelRetentionPeriodPtrInput {
	return (*channelRetentionPeriodPtrType)(v)
}

func (*channelRetentionPeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRetentionPeriod)(nil)).Elem()
}

func (i *channelRetentionPeriodPtrType) ToChannelRetentionPeriodPtrOutput() ChannelRetentionPeriodPtrOutput {
	return i.ToChannelRetentionPeriodPtrOutputWithContext(context.Background())
}

func (i *channelRetentionPeriodPtrType) ToChannelRetentionPeriodPtrOutputWithContext(ctx context.Context) ChannelRetentionPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelRetentionPeriodPtrOutput)
}

type ChannelRetentionPeriodOutput struct{ *pulumi.OutputState }

func (ChannelRetentionPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelRetentionPeriod)(nil)).Elem()
}

func (o ChannelRetentionPeriodOutput) ToChannelRetentionPeriodOutput() ChannelRetentionPeriodOutput {
	return o
}

func (o ChannelRetentionPeriodOutput) ToChannelRetentionPeriodOutputWithContext(ctx context.Context) ChannelRetentionPeriodOutput {
	return o
}

func (o ChannelRetentionPeriodOutput) ToChannelRetentionPeriodPtrOutput() ChannelRetentionPeriodPtrOutput {
	return o.ToChannelRetentionPeriodPtrOutputWithContext(context.Background())
}

func (o ChannelRetentionPeriodOutput) ToChannelRetentionPeriodPtrOutputWithContext(ctx context.Context) ChannelRetentionPeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelRetentionPeriod) *ChannelRetentionPeriod {
		return &v
	}).(ChannelRetentionPeriodPtrOutput)
}

func (o ChannelRetentionPeriodOutput) NumberOfDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ChannelRetentionPeriod) *int { return v.NumberOfDays }).(pulumi.IntPtrOutput)
}

func (o ChannelRetentionPeriodOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ChannelRetentionPeriod) *bool { return v.Unlimited }).(pulumi.BoolPtrOutput)
}

type ChannelRetentionPeriodPtrOutput struct{ *pulumi.OutputState }

func (ChannelRetentionPeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelRetentionPeriod)(nil)).Elem()
}

func (o ChannelRetentionPeriodPtrOutput) ToChannelRetentionPeriodPtrOutput() ChannelRetentionPeriodPtrOutput {
	return o
}

func (o ChannelRetentionPeriodPtrOutput) ToChannelRetentionPeriodPtrOutputWithContext(ctx context.Context) ChannelRetentionPeriodPtrOutput {
	return o
}

func (o ChannelRetentionPeriodPtrOutput) Elem() ChannelRetentionPeriodOutput {
	return o.ApplyT(func(v *ChannelRetentionPeriod) ChannelRetentionPeriod {
		if v != nil {
			return *v
		}
		var ret ChannelRetentionPeriod
		return ret
	}).(ChannelRetentionPeriodOutput)
}

func (o ChannelRetentionPeriodPtrOutput) NumberOfDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ChannelRetentionPeriod) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfDays
	}).(pulumi.IntPtrOutput)
}

func (o ChannelRetentionPeriodPtrOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ChannelRetentionPeriod) *bool {
		if v == nil {
			return nil
		}
		return v.Unlimited
	}).(pulumi.BoolPtrOutput)
}

type ChannelServiceManagedS3 struct {
}

// ChannelServiceManagedS3Input is an input type that accepts ChannelServiceManagedS3Args and ChannelServiceManagedS3Output values.
// You can construct a concrete instance of `ChannelServiceManagedS3Input` via:
//
//          ChannelServiceManagedS3Args{...}
type ChannelServiceManagedS3Input interface {
	pulumi.Input

	ToChannelServiceManagedS3Output() ChannelServiceManagedS3Output
	ToChannelServiceManagedS3OutputWithContext(context.Context) ChannelServiceManagedS3Output
}

type ChannelServiceManagedS3Args struct {
}

func (ChannelServiceManagedS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelServiceManagedS3)(nil)).Elem()
}

func (i ChannelServiceManagedS3Args) ToChannelServiceManagedS3Output() ChannelServiceManagedS3Output {
	return i.ToChannelServiceManagedS3OutputWithContext(context.Background())
}

func (i ChannelServiceManagedS3Args) ToChannelServiceManagedS3OutputWithContext(ctx context.Context) ChannelServiceManagedS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelServiceManagedS3Output)
}

func (i ChannelServiceManagedS3Args) ToChannelServiceManagedS3PtrOutput() ChannelServiceManagedS3PtrOutput {
	return i.ToChannelServiceManagedS3PtrOutputWithContext(context.Background())
}

func (i ChannelServiceManagedS3Args) ToChannelServiceManagedS3PtrOutputWithContext(ctx context.Context) ChannelServiceManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelServiceManagedS3Output).ToChannelServiceManagedS3PtrOutputWithContext(ctx)
}

// ChannelServiceManagedS3PtrInput is an input type that accepts ChannelServiceManagedS3Args, ChannelServiceManagedS3Ptr and ChannelServiceManagedS3PtrOutput values.
// You can construct a concrete instance of `ChannelServiceManagedS3PtrInput` via:
//
//          ChannelServiceManagedS3Args{...}
//
//  or:
//
//          nil
type ChannelServiceManagedS3PtrInput interface {
	pulumi.Input

	ToChannelServiceManagedS3PtrOutput() ChannelServiceManagedS3PtrOutput
	ToChannelServiceManagedS3PtrOutputWithContext(context.Context) ChannelServiceManagedS3PtrOutput
}

type channelServiceManagedS3PtrType ChannelServiceManagedS3Args

func ChannelServiceManagedS3Ptr(v *ChannelServiceManagedS3Args) ChannelServiceManagedS3PtrInput {
	return (*channelServiceManagedS3PtrType)(v)
}

func (*channelServiceManagedS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelServiceManagedS3)(nil)).Elem()
}

func (i *channelServiceManagedS3PtrType) ToChannelServiceManagedS3PtrOutput() ChannelServiceManagedS3PtrOutput {
	return i.ToChannelServiceManagedS3PtrOutputWithContext(context.Background())
}

func (i *channelServiceManagedS3PtrType) ToChannelServiceManagedS3PtrOutputWithContext(ctx context.Context) ChannelServiceManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelServiceManagedS3PtrOutput)
}

type ChannelServiceManagedS3Output struct{ *pulumi.OutputState }

func (ChannelServiceManagedS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelServiceManagedS3)(nil)).Elem()
}

func (o ChannelServiceManagedS3Output) ToChannelServiceManagedS3Output() ChannelServiceManagedS3Output {
	return o
}

func (o ChannelServiceManagedS3Output) ToChannelServiceManagedS3OutputWithContext(ctx context.Context) ChannelServiceManagedS3Output {
	return o
}

func (o ChannelServiceManagedS3Output) ToChannelServiceManagedS3PtrOutput() ChannelServiceManagedS3PtrOutput {
	return o.ToChannelServiceManagedS3PtrOutputWithContext(context.Background())
}

func (o ChannelServiceManagedS3Output) ToChannelServiceManagedS3PtrOutputWithContext(ctx context.Context) ChannelServiceManagedS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelServiceManagedS3) *ChannelServiceManagedS3 {
		return &v
	}).(ChannelServiceManagedS3PtrOutput)
}

type ChannelServiceManagedS3PtrOutput struct{ *pulumi.OutputState }

func (ChannelServiceManagedS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelServiceManagedS3)(nil)).Elem()
}

func (o ChannelServiceManagedS3PtrOutput) ToChannelServiceManagedS3PtrOutput() ChannelServiceManagedS3PtrOutput {
	return o
}

func (o ChannelServiceManagedS3PtrOutput) ToChannelServiceManagedS3PtrOutputWithContext(ctx context.Context) ChannelServiceManagedS3PtrOutput {
	return o
}

func (o ChannelServiceManagedS3PtrOutput) Elem() ChannelServiceManagedS3Output {
	return o.ApplyT(func(v *ChannelServiceManagedS3) ChannelServiceManagedS3 {
		if v != nil {
			return *v
		}
		var ret ChannelServiceManagedS3
		return ret
	}).(ChannelServiceManagedS3Output)
}

type ChannelStorage struct {
	CustomerManagedS3 *ChannelCustomerManagedS3 `pulumi:"customerManagedS3"`
	ServiceManagedS3  *ChannelServiceManagedS3  `pulumi:"serviceManagedS3"`
}

// ChannelStorageInput is an input type that accepts ChannelStorageArgs and ChannelStorageOutput values.
// You can construct a concrete instance of `ChannelStorageInput` via:
//
//          ChannelStorageArgs{...}
type ChannelStorageInput interface {
	pulumi.Input

	ToChannelStorageOutput() ChannelStorageOutput
	ToChannelStorageOutputWithContext(context.Context) ChannelStorageOutput
}

type ChannelStorageArgs struct {
	CustomerManagedS3 ChannelCustomerManagedS3PtrInput `pulumi:"customerManagedS3"`
	ServiceManagedS3  ChannelServiceManagedS3PtrInput  `pulumi:"serviceManagedS3"`
}

func (ChannelStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelStorage)(nil)).Elem()
}

func (i ChannelStorageArgs) ToChannelStorageOutput() ChannelStorageOutput {
	return i.ToChannelStorageOutputWithContext(context.Background())
}

func (i ChannelStorageArgs) ToChannelStorageOutputWithContext(ctx context.Context) ChannelStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelStorageOutput)
}

func (i ChannelStorageArgs) ToChannelStoragePtrOutput() ChannelStoragePtrOutput {
	return i.ToChannelStoragePtrOutputWithContext(context.Background())
}

func (i ChannelStorageArgs) ToChannelStoragePtrOutputWithContext(ctx context.Context) ChannelStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelStorageOutput).ToChannelStoragePtrOutputWithContext(ctx)
}

// ChannelStoragePtrInput is an input type that accepts ChannelStorageArgs, ChannelStoragePtr and ChannelStoragePtrOutput values.
// You can construct a concrete instance of `ChannelStoragePtrInput` via:
//
//          ChannelStorageArgs{...}
//
//  or:
//
//          nil
type ChannelStoragePtrInput interface {
	pulumi.Input

	ToChannelStoragePtrOutput() ChannelStoragePtrOutput
	ToChannelStoragePtrOutputWithContext(context.Context) ChannelStoragePtrOutput
}

type channelStoragePtrType ChannelStorageArgs

func ChannelStoragePtr(v *ChannelStorageArgs) ChannelStoragePtrInput {
	return (*channelStoragePtrType)(v)
}

func (*channelStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelStorage)(nil)).Elem()
}

func (i *channelStoragePtrType) ToChannelStoragePtrOutput() ChannelStoragePtrOutput {
	return i.ToChannelStoragePtrOutputWithContext(context.Background())
}

func (i *channelStoragePtrType) ToChannelStoragePtrOutputWithContext(ctx context.Context) ChannelStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelStoragePtrOutput)
}

type ChannelStorageOutput struct{ *pulumi.OutputState }

func (ChannelStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelStorage)(nil)).Elem()
}

func (o ChannelStorageOutput) ToChannelStorageOutput() ChannelStorageOutput {
	return o
}

func (o ChannelStorageOutput) ToChannelStorageOutputWithContext(ctx context.Context) ChannelStorageOutput {
	return o
}

func (o ChannelStorageOutput) ToChannelStoragePtrOutput() ChannelStoragePtrOutput {
	return o.ToChannelStoragePtrOutputWithContext(context.Background())
}

func (o ChannelStorageOutput) ToChannelStoragePtrOutputWithContext(ctx context.Context) ChannelStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelStorage) *ChannelStorage {
		return &v
	}).(ChannelStoragePtrOutput)
}

func (o ChannelStorageOutput) CustomerManagedS3() ChannelCustomerManagedS3PtrOutput {
	return o.ApplyT(func(v ChannelStorage) *ChannelCustomerManagedS3 { return v.CustomerManagedS3 }).(ChannelCustomerManagedS3PtrOutput)
}

func (o ChannelStorageOutput) ServiceManagedS3() ChannelServiceManagedS3PtrOutput {
	return o.ApplyT(func(v ChannelStorage) *ChannelServiceManagedS3 { return v.ServiceManagedS3 }).(ChannelServiceManagedS3PtrOutput)
}

type ChannelStoragePtrOutput struct{ *pulumi.OutputState }

func (ChannelStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelStorage)(nil)).Elem()
}

func (o ChannelStoragePtrOutput) ToChannelStoragePtrOutput() ChannelStoragePtrOutput {
	return o
}

func (o ChannelStoragePtrOutput) ToChannelStoragePtrOutputWithContext(ctx context.Context) ChannelStoragePtrOutput {
	return o
}

func (o ChannelStoragePtrOutput) Elem() ChannelStorageOutput {
	return o.ApplyT(func(v *ChannelStorage) ChannelStorage {
		if v != nil {
			return *v
		}
		var ret ChannelStorage
		return ret
	}).(ChannelStorageOutput)
}

func (o ChannelStoragePtrOutput) CustomerManagedS3() ChannelCustomerManagedS3PtrOutput {
	return o.ApplyT(func(v *ChannelStorage) *ChannelCustomerManagedS3 {
		if v == nil {
			return nil
		}
		return v.CustomerManagedS3
	}).(ChannelCustomerManagedS3PtrOutput)
}

func (o ChannelStoragePtrOutput) ServiceManagedS3() ChannelServiceManagedS3PtrOutput {
	return o.ApplyT(func(v *ChannelStorage) *ChannelServiceManagedS3 {
		if v == nil {
			return nil
		}
		return v.ServiceManagedS3
	}).(ChannelServiceManagedS3PtrOutput)
}

type ChannelTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ChannelTagInput is an input type that accepts ChannelTagArgs and ChannelTagOutput values.
// You can construct a concrete instance of `ChannelTagInput` via:
//
//          ChannelTagArgs{...}
type ChannelTagInput interface {
	pulumi.Input

	ToChannelTagOutput() ChannelTagOutput
	ToChannelTagOutputWithContext(context.Context) ChannelTagOutput
}

type ChannelTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ChannelTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTag)(nil)).Elem()
}

func (i ChannelTagArgs) ToChannelTagOutput() ChannelTagOutput {
	return i.ToChannelTagOutputWithContext(context.Background())
}

func (i ChannelTagArgs) ToChannelTagOutputWithContext(ctx context.Context) ChannelTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTagOutput)
}

// ChannelTagArrayInput is an input type that accepts ChannelTagArray and ChannelTagArrayOutput values.
// You can construct a concrete instance of `ChannelTagArrayInput` via:
//
//          ChannelTagArray{ ChannelTagArgs{...} }
type ChannelTagArrayInput interface {
	pulumi.Input

	ToChannelTagArrayOutput() ChannelTagArrayOutput
	ToChannelTagArrayOutputWithContext(context.Context) ChannelTagArrayOutput
}

type ChannelTagArray []ChannelTagInput

func (ChannelTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelTag)(nil)).Elem()
}

func (i ChannelTagArray) ToChannelTagArrayOutput() ChannelTagArrayOutput {
	return i.ToChannelTagArrayOutputWithContext(context.Background())
}

func (i ChannelTagArray) ToChannelTagArrayOutputWithContext(ctx context.Context) ChannelTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelTagArrayOutput)
}

type ChannelTagOutput struct{ *pulumi.OutputState }

func (ChannelTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelTag)(nil)).Elem()
}

func (o ChannelTagOutput) ToChannelTagOutput() ChannelTagOutput {
	return o
}

func (o ChannelTagOutput) ToChannelTagOutputWithContext(ctx context.Context) ChannelTagOutput {
	return o
}

func (o ChannelTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ChannelTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelTag) string { return v.Value }).(pulumi.StringOutput)
}

type ChannelTagArrayOutput struct{ *pulumi.OutputState }

func (ChannelTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelTag)(nil)).Elem()
}

func (o ChannelTagArrayOutput) ToChannelTagArrayOutput() ChannelTagArrayOutput {
	return o
}

func (o ChannelTagArrayOutput) ToChannelTagArrayOutputWithContext(ctx context.Context) ChannelTagArrayOutput {
	return o
}

func (o ChannelTagArrayOutput) Index(i pulumi.IntInput) ChannelTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelTag {
		return vs[0].([]ChannelTag)[vs[1].(int)]
	}).(ChannelTagOutput)
}

type DatasetAction struct {
	ActionName      string                  `pulumi:"actionName"`
	ContainerAction *DatasetContainerAction `pulumi:"containerAction"`
	QueryAction     *DatasetQueryAction     `pulumi:"queryAction"`
}

// DatasetActionInput is an input type that accepts DatasetActionArgs and DatasetActionOutput values.
// You can construct a concrete instance of `DatasetActionInput` via:
//
//          DatasetActionArgs{...}
type DatasetActionInput interface {
	pulumi.Input

	ToDatasetActionOutput() DatasetActionOutput
	ToDatasetActionOutputWithContext(context.Context) DatasetActionOutput
}

type DatasetActionArgs struct {
	ActionName      pulumi.StringInput             `pulumi:"actionName"`
	ContainerAction DatasetContainerActionPtrInput `pulumi:"containerAction"`
	QueryAction     DatasetQueryActionPtrInput     `pulumi:"queryAction"`
}

func (DatasetActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetAction)(nil)).Elem()
}

func (i DatasetActionArgs) ToDatasetActionOutput() DatasetActionOutput {
	return i.ToDatasetActionOutputWithContext(context.Background())
}

func (i DatasetActionArgs) ToDatasetActionOutputWithContext(ctx context.Context) DatasetActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetActionOutput)
}

// DatasetActionArrayInput is an input type that accepts DatasetActionArray and DatasetActionArrayOutput values.
// You can construct a concrete instance of `DatasetActionArrayInput` via:
//
//          DatasetActionArray{ DatasetActionArgs{...} }
type DatasetActionArrayInput interface {
	pulumi.Input

	ToDatasetActionArrayOutput() DatasetActionArrayOutput
	ToDatasetActionArrayOutputWithContext(context.Context) DatasetActionArrayOutput
}

type DatasetActionArray []DatasetActionInput

func (DatasetActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetAction)(nil)).Elem()
}

func (i DatasetActionArray) ToDatasetActionArrayOutput() DatasetActionArrayOutput {
	return i.ToDatasetActionArrayOutputWithContext(context.Background())
}

func (i DatasetActionArray) ToDatasetActionArrayOutputWithContext(ctx context.Context) DatasetActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetActionArrayOutput)
}

type DatasetActionOutput struct{ *pulumi.OutputState }

func (DatasetActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetAction)(nil)).Elem()
}

func (o DatasetActionOutput) ToDatasetActionOutput() DatasetActionOutput {
	return o
}

func (o DatasetActionOutput) ToDatasetActionOutputWithContext(ctx context.Context) DatasetActionOutput {
	return o
}

func (o DatasetActionOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetAction) string { return v.ActionName }).(pulumi.StringOutput)
}

func (o DatasetActionOutput) ContainerAction() DatasetContainerActionPtrOutput {
	return o.ApplyT(func(v DatasetAction) *DatasetContainerAction { return v.ContainerAction }).(DatasetContainerActionPtrOutput)
}

func (o DatasetActionOutput) QueryAction() DatasetQueryActionPtrOutput {
	return o.ApplyT(func(v DatasetAction) *DatasetQueryAction { return v.QueryAction }).(DatasetQueryActionPtrOutput)
}

type DatasetActionArrayOutput struct{ *pulumi.OutputState }

func (DatasetActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetAction)(nil)).Elem()
}

func (o DatasetActionArrayOutput) ToDatasetActionArrayOutput() DatasetActionArrayOutput {
	return o
}

func (o DatasetActionArrayOutput) ToDatasetActionArrayOutputWithContext(ctx context.Context) DatasetActionArrayOutput {
	return o
}

func (o DatasetActionArrayOutput) Index(i pulumi.IntInput) DatasetActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetAction {
		return vs[0].([]DatasetAction)[vs[1].(int)]
	}).(DatasetActionOutput)
}

type DatasetContainerAction struct {
	ExecutionRoleArn      string                       `pulumi:"executionRoleArn"`
	Image                 string                       `pulumi:"image"`
	ResourceConfiguration DatasetResourceConfiguration `pulumi:"resourceConfiguration"`
	Variables             []DatasetVariable            `pulumi:"variables"`
}

// DatasetContainerActionInput is an input type that accepts DatasetContainerActionArgs and DatasetContainerActionOutput values.
// You can construct a concrete instance of `DatasetContainerActionInput` via:
//
//          DatasetContainerActionArgs{...}
type DatasetContainerActionInput interface {
	pulumi.Input

	ToDatasetContainerActionOutput() DatasetContainerActionOutput
	ToDatasetContainerActionOutputWithContext(context.Context) DatasetContainerActionOutput
}

type DatasetContainerActionArgs struct {
	ExecutionRoleArn      pulumi.StringInput                `pulumi:"executionRoleArn"`
	Image                 pulumi.StringInput                `pulumi:"image"`
	ResourceConfiguration DatasetResourceConfigurationInput `pulumi:"resourceConfiguration"`
	Variables             DatasetVariableArrayInput         `pulumi:"variables"`
}

func (DatasetContainerActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContainerAction)(nil)).Elem()
}

func (i DatasetContainerActionArgs) ToDatasetContainerActionOutput() DatasetContainerActionOutput {
	return i.ToDatasetContainerActionOutputWithContext(context.Background())
}

func (i DatasetContainerActionArgs) ToDatasetContainerActionOutputWithContext(ctx context.Context) DatasetContainerActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContainerActionOutput)
}

func (i DatasetContainerActionArgs) ToDatasetContainerActionPtrOutput() DatasetContainerActionPtrOutput {
	return i.ToDatasetContainerActionPtrOutputWithContext(context.Background())
}

func (i DatasetContainerActionArgs) ToDatasetContainerActionPtrOutputWithContext(ctx context.Context) DatasetContainerActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContainerActionOutput).ToDatasetContainerActionPtrOutputWithContext(ctx)
}

// DatasetContainerActionPtrInput is an input type that accepts DatasetContainerActionArgs, DatasetContainerActionPtr and DatasetContainerActionPtrOutput values.
// You can construct a concrete instance of `DatasetContainerActionPtrInput` via:
//
//          DatasetContainerActionArgs{...}
//
//  or:
//
//          nil
type DatasetContainerActionPtrInput interface {
	pulumi.Input

	ToDatasetContainerActionPtrOutput() DatasetContainerActionPtrOutput
	ToDatasetContainerActionPtrOutputWithContext(context.Context) DatasetContainerActionPtrOutput
}

type datasetContainerActionPtrType DatasetContainerActionArgs

func DatasetContainerActionPtr(v *DatasetContainerActionArgs) DatasetContainerActionPtrInput {
	return (*datasetContainerActionPtrType)(v)
}

func (*datasetContainerActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetContainerAction)(nil)).Elem()
}

func (i *datasetContainerActionPtrType) ToDatasetContainerActionPtrOutput() DatasetContainerActionPtrOutput {
	return i.ToDatasetContainerActionPtrOutputWithContext(context.Background())
}

func (i *datasetContainerActionPtrType) ToDatasetContainerActionPtrOutputWithContext(ctx context.Context) DatasetContainerActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContainerActionPtrOutput)
}

type DatasetContainerActionOutput struct{ *pulumi.OutputState }

func (DatasetContainerActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContainerAction)(nil)).Elem()
}

func (o DatasetContainerActionOutput) ToDatasetContainerActionOutput() DatasetContainerActionOutput {
	return o
}

func (o DatasetContainerActionOutput) ToDatasetContainerActionOutputWithContext(ctx context.Context) DatasetContainerActionOutput {
	return o
}

func (o DatasetContainerActionOutput) ToDatasetContainerActionPtrOutput() DatasetContainerActionPtrOutput {
	return o.ToDatasetContainerActionPtrOutputWithContext(context.Background())
}

func (o DatasetContainerActionOutput) ToDatasetContainerActionPtrOutputWithContext(ctx context.Context) DatasetContainerActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetContainerAction) *DatasetContainerAction {
		return &v
	}).(DatasetContainerActionPtrOutput)
}

func (o DatasetContainerActionOutput) ExecutionRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetContainerAction) string { return v.ExecutionRoleArn }).(pulumi.StringOutput)
}

func (o DatasetContainerActionOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetContainerAction) string { return v.Image }).(pulumi.StringOutput)
}

func (o DatasetContainerActionOutput) ResourceConfiguration() DatasetResourceConfigurationOutput {
	return o.ApplyT(func(v DatasetContainerAction) DatasetResourceConfiguration { return v.ResourceConfiguration }).(DatasetResourceConfigurationOutput)
}

func (o DatasetContainerActionOutput) Variables() DatasetVariableArrayOutput {
	return o.ApplyT(func(v DatasetContainerAction) []DatasetVariable { return v.Variables }).(DatasetVariableArrayOutput)
}

type DatasetContainerActionPtrOutput struct{ *pulumi.OutputState }

func (DatasetContainerActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetContainerAction)(nil)).Elem()
}

func (o DatasetContainerActionPtrOutput) ToDatasetContainerActionPtrOutput() DatasetContainerActionPtrOutput {
	return o
}

func (o DatasetContainerActionPtrOutput) ToDatasetContainerActionPtrOutputWithContext(ctx context.Context) DatasetContainerActionPtrOutput {
	return o
}

func (o DatasetContainerActionPtrOutput) Elem() DatasetContainerActionOutput {
	return o.ApplyT(func(v *DatasetContainerAction) DatasetContainerAction {
		if v != nil {
			return *v
		}
		var ret DatasetContainerAction
		return ret
	}).(DatasetContainerActionOutput)
}

func (o DatasetContainerActionPtrOutput) ExecutionRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetContainerAction) *string {
		if v == nil {
			return nil
		}
		return &v.ExecutionRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o DatasetContainerActionPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetContainerAction) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

func (o DatasetContainerActionPtrOutput) ResourceConfiguration() DatasetResourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DatasetContainerAction) *DatasetResourceConfiguration {
		if v == nil {
			return nil
		}
		return &v.ResourceConfiguration
	}).(DatasetResourceConfigurationPtrOutput)
}

func (o DatasetContainerActionPtrOutput) Variables() DatasetVariableArrayOutput {
	return o.ApplyT(func(v *DatasetContainerAction) []DatasetVariable {
		if v == nil {
			return nil
		}
		return v.Variables
	}).(DatasetVariableArrayOutput)
}

type DatasetContentDeliveryRule struct {
	Destination DatasetContentDeliveryRuleDestination `pulumi:"destination"`
	EntryName   *string                               `pulumi:"entryName"`
}

// DatasetContentDeliveryRuleInput is an input type that accepts DatasetContentDeliveryRuleArgs and DatasetContentDeliveryRuleOutput values.
// You can construct a concrete instance of `DatasetContentDeliveryRuleInput` via:
//
//          DatasetContentDeliveryRuleArgs{...}
type DatasetContentDeliveryRuleInput interface {
	pulumi.Input

	ToDatasetContentDeliveryRuleOutput() DatasetContentDeliveryRuleOutput
	ToDatasetContentDeliveryRuleOutputWithContext(context.Context) DatasetContentDeliveryRuleOutput
}

type DatasetContentDeliveryRuleArgs struct {
	Destination DatasetContentDeliveryRuleDestinationInput `pulumi:"destination"`
	EntryName   pulumi.StringPtrInput                      `pulumi:"entryName"`
}

func (DatasetContentDeliveryRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContentDeliveryRule)(nil)).Elem()
}

func (i DatasetContentDeliveryRuleArgs) ToDatasetContentDeliveryRuleOutput() DatasetContentDeliveryRuleOutput {
	return i.ToDatasetContentDeliveryRuleOutputWithContext(context.Background())
}

func (i DatasetContentDeliveryRuleArgs) ToDatasetContentDeliveryRuleOutputWithContext(ctx context.Context) DatasetContentDeliveryRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContentDeliveryRuleOutput)
}

// DatasetContentDeliveryRuleArrayInput is an input type that accepts DatasetContentDeliveryRuleArray and DatasetContentDeliveryRuleArrayOutput values.
// You can construct a concrete instance of `DatasetContentDeliveryRuleArrayInput` via:
//
//          DatasetContentDeliveryRuleArray{ DatasetContentDeliveryRuleArgs{...} }
type DatasetContentDeliveryRuleArrayInput interface {
	pulumi.Input

	ToDatasetContentDeliveryRuleArrayOutput() DatasetContentDeliveryRuleArrayOutput
	ToDatasetContentDeliveryRuleArrayOutputWithContext(context.Context) DatasetContentDeliveryRuleArrayOutput
}

type DatasetContentDeliveryRuleArray []DatasetContentDeliveryRuleInput

func (DatasetContentDeliveryRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetContentDeliveryRule)(nil)).Elem()
}

func (i DatasetContentDeliveryRuleArray) ToDatasetContentDeliveryRuleArrayOutput() DatasetContentDeliveryRuleArrayOutput {
	return i.ToDatasetContentDeliveryRuleArrayOutputWithContext(context.Background())
}

func (i DatasetContentDeliveryRuleArray) ToDatasetContentDeliveryRuleArrayOutputWithContext(ctx context.Context) DatasetContentDeliveryRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContentDeliveryRuleArrayOutput)
}

type DatasetContentDeliveryRuleOutput struct{ *pulumi.OutputState }

func (DatasetContentDeliveryRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContentDeliveryRule)(nil)).Elem()
}

func (o DatasetContentDeliveryRuleOutput) ToDatasetContentDeliveryRuleOutput() DatasetContentDeliveryRuleOutput {
	return o
}

func (o DatasetContentDeliveryRuleOutput) ToDatasetContentDeliveryRuleOutputWithContext(ctx context.Context) DatasetContentDeliveryRuleOutput {
	return o
}

func (o DatasetContentDeliveryRuleOutput) Destination() DatasetContentDeliveryRuleDestinationOutput {
	return o.ApplyT(func(v DatasetContentDeliveryRule) DatasetContentDeliveryRuleDestination { return v.Destination }).(DatasetContentDeliveryRuleDestinationOutput)
}

func (o DatasetContentDeliveryRuleOutput) EntryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetContentDeliveryRule) *string { return v.EntryName }).(pulumi.StringPtrOutput)
}

type DatasetContentDeliveryRuleArrayOutput struct{ *pulumi.OutputState }

func (DatasetContentDeliveryRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetContentDeliveryRule)(nil)).Elem()
}

func (o DatasetContentDeliveryRuleArrayOutput) ToDatasetContentDeliveryRuleArrayOutput() DatasetContentDeliveryRuleArrayOutput {
	return o
}

func (o DatasetContentDeliveryRuleArrayOutput) ToDatasetContentDeliveryRuleArrayOutputWithContext(ctx context.Context) DatasetContentDeliveryRuleArrayOutput {
	return o
}

func (o DatasetContentDeliveryRuleArrayOutput) Index(i pulumi.IntInput) DatasetContentDeliveryRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetContentDeliveryRule {
		return vs[0].([]DatasetContentDeliveryRule)[vs[1].(int)]
	}).(DatasetContentDeliveryRuleOutput)
}

type DatasetContentDeliveryRuleDestination struct {
	IotEventsDestinationConfiguration *DatasetIotEventsDestinationConfiguration `pulumi:"iotEventsDestinationConfiguration"`
	S3DestinationConfiguration        *DatasetS3DestinationConfiguration        `pulumi:"s3DestinationConfiguration"`
}

// DatasetContentDeliveryRuleDestinationInput is an input type that accepts DatasetContentDeliveryRuleDestinationArgs and DatasetContentDeliveryRuleDestinationOutput values.
// You can construct a concrete instance of `DatasetContentDeliveryRuleDestinationInput` via:
//
//          DatasetContentDeliveryRuleDestinationArgs{...}
type DatasetContentDeliveryRuleDestinationInput interface {
	pulumi.Input

	ToDatasetContentDeliveryRuleDestinationOutput() DatasetContentDeliveryRuleDestinationOutput
	ToDatasetContentDeliveryRuleDestinationOutputWithContext(context.Context) DatasetContentDeliveryRuleDestinationOutput
}

type DatasetContentDeliveryRuleDestinationArgs struct {
	IotEventsDestinationConfiguration DatasetIotEventsDestinationConfigurationPtrInput `pulumi:"iotEventsDestinationConfiguration"`
	S3DestinationConfiguration        DatasetS3DestinationConfigurationPtrInput        `pulumi:"s3DestinationConfiguration"`
}

func (DatasetContentDeliveryRuleDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContentDeliveryRuleDestination)(nil)).Elem()
}

func (i DatasetContentDeliveryRuleDestinationArgs) ToDatasetContentDeliveryRuleDestinationOutput() DatasetContentDeliveryRuleDestinationOutput {
	return i.ToDatasetContentDeliveryRuleDestinationOutputWithContext(context.Background())
}

func (i DatasetContentDeliveryRuleDestinationArgs) ToDatasetContentDeliveryRuleDestinationOutputWithContext(ctx context.Context) DatasetContentDeliveryRuleDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContentDeliveryRuleDestinationOutput)
}

type DatasetContentDeliveryRuleDestinationOutput struct{ *pulumi.OutputState }

func (DatasetContentDeliveryRuleDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContentDeliveryRuleDestination)(nil)).Elem()
}

func (o DatasetContentDeliveryRuleDestinationOutput) ToDatasetContentDeliveryRuleDestinationOutput() DatasetContentDeliveryRuleDestinationOutput {
	return o
}

func (o DatasetContentDeliveryRuleDestinationOutput) ToDatasetContentDeliveryRuleDestinationOutputWithContext(ctx context.Context) DatasetContentDeliveryRuleDestinationOutput {
	return o
}

func (o DatasetContentDeliveryRuleDestinationOutput) IotEventsDestinationConfiguration() DatasetIotEventsDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v DatasetContentDeliveryRuleDestination) *DatasetIotEventsDestinationConfiguration {
		return v.IotEventsDestinationConfiguration
	}).(DatasetIotEventsDestinationConfigurationPtrOutput)
}

func (o DatasetContentDeliveryRuleDestinationOutput) S3DestinationConfiguration() DatasetS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v DatasetContentDeliveryRuleDestination) *DatasetS3DestinationConfiguration {
		return v.S3DestinationConfiguration
	}).(DatasetS3DestinationConfigurationPtrOutput)
}

type DatasetContentVersionValue struct {
	DatasetName *string `pulumi:"datasetName"`
}

// DatasetContentVersionValueInput is an input type that accepts DatasetContentVersionValueArgs and DatasetContentVersionValueOutput values.
// You can construct a concrete instance of `DatasetContentVersionValueInput` via:
//
//          DatasetContentVersionValueArgs{...}
type DatasetContentVersionValueInput interface {
	pulumi.Input

	ToDatasetContentVersionValueOutput() DatasetContentVersionValueOutput
	ToDatasetContentVersionValueOutputWithContext(context.Context) DatasetContentVersionValueOutput
}

type DatasetContentVersionValueArgs struct {
	DatasetName pulumi.StringPtrInput `pulumi:"datasetName"`
}

func (DatasetContentVersionValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContentVersionValue)(nil)).Elem()
}

func (i DatasetContentVersionValueArgs) ToDatasetContentVersionValueOutput() DatasetContentVersionValueOutput {
	return i.ToDatasetContentVersionValueOutputWithContext(context.Background())
}

func (i DatasetContentVersionValueArgs) ToDatasetContentVersionValueOutputWithContext(ctx context.Context) DatasetContentVersionValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContentVersionValueOutput)
}

func (i DatasetContentVersionValueArgs) ToDatasetContentVersionValuePtrOutput() DatasetContentVersionValuePtrOutput {
	return i.ToDatasetContentVersionValuePtrOutputWithContext(context.Background())
}

func (i DatasetContentVersionValueArgs) ToDatasetContentVersionValuePtrOutputWithContext(ctx context.Context) DatasetContentVersionValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContentVersionValueOutput).ToDatasetContentVersionValuePtrOutputWithContext(ctx)
}

// DatasetContentVersionValuePtrInput is an input type that accepts DatasetContentVersionValueArgs, DatasetContentVersionValuePtr and DatasetContentVersionValuePtrOutput values.
// You can construct a concrete instance of `DatasetContentVersionValuePtrInput` via:
//
//          DatasetContentVersionValueArgs{...}
//
//  or:
//
//          nil
type DatasetContentVersionValuePtrInput interface {
	pulumi.Input

	ToDatasetContentVersionValuePtrOutput() DatasetContentVersionValuePtrOutput
	ToDatasetContentVersionValuePtrOutputWithContext(context.Context) DatasetContentVersionValuePtrOutput
}

type datasetContentVersionValuePtrType DatasetContentVersionValueArgs

func DatasetContentVersionValuePtr(v *DatasetContentVersionValueArgs) DatasetContentVersionValuePtrInput {
	return (*datasetContentVersionValuePtrType)(v)
}

func (*datasetContentVersionValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetContentVersionValue)(nil)).Elem()
}

func (i *datasetContentVersionValuePtrType) ToDatasetContentVersionValuePtrOutput() DatasetContentVersionValuePtrOutput {
	return i.ToDatasetContentVersionValuePtrOutputWithContext(context.Background())
}

func (i *datasetContentVersionValuePtrType) ToDatasetContentVersionValuePtrOutputWithContext(ctx context.Context) DatasetContentVersionValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetContentVersionValuePtrOutput)
}

type DatasetContentVersionValueOutput struct{ *pulumi.OutputState }

func (DatasetContentVersionValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetContentVersionValue)(nil)).Elem()
}

func (o DatasetContentVersionValueOutput) ToDatasetContentVersionValueOutput() DatasetContentVersionValueOutput {
	return o
}

func (o DatasetContentVersionValueOutput) ToDatasetContentVersionValueOutputWithContext(ctx context.Context) DatasetContentVersionValueOutput {
	return o
}

func (o DatasetContentVersionValueOutput) ToDatasetContentVersionValuePtrOutput() DatasetContentVersionValuePtrOutput {
	return o.ToDatasetContentVersionValuePtrOutputWithContext(context.Background())
}

func (o DatasetContentVersionValueOutput) ToDatasetContentVersionValuePtrOutputWithContext(ctx context.Context) DatasetContentVersionValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetContentVersionValue) *DatasetContentVersionValue {
		return &v
	}).(DatasetContentVersionValuePtrOutput)
}

func (o DatasetContentVersionValueOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetContentVersionValue) *string { return v.DatasetName }).(pulumi.StringPtrOutput)
}

type DatasetContentVersionValuePtrOutput struct{ *pulumi.OutputState }

func (DatasetContentVersionValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetContentVersionValue)(nil)).Elem()
}

func (o DatasetContentVersionValuePtrOutput) ToDatasetContentVersionValuePtrOutput() DatasetContentVersionValuePtrOutput {
	return o
}

func (o DatasetContentVersionValuePtrOutput) ToDatasetContentVersionValuePtrOutputWithContext(ctx context.Context) DatasetContentVersionValuePtrOutput {
	return o
}

func (o DatasetContentVersionValuePtrOutput) Elem() DatasetContentVersionValueOutput {
	return o.ApplyT(func(v *DatasetContentVersionValue) DatasetContentVersionValue {
		if v != nil {
			return *v
		}
		var ret DatasetContentVersionValue
		return ret
	}).(DatasetContentVersionValueOutput)
}

func (o DatasetContentVersionValuePtrOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetContentVersionValue) *string {
		if v == nil {
			return nil
		}
		return v.DatasetName
	}).(pulumi.StringPtrOutput)
}

type DatasetDeltaTime struct {
	OffsetSeconds  int    `pulumi:"offsetSeconds"`
	TimeExpression string `pulumi:"timeExpression"`
}

// DatasetDeltaTimeInput is an input type that accepts DatasetDeltaTimeArgs and DatasetDeltaTimeOutput values.
// You can construct a concrete instance of `DatasetDeltaTimeInput` via:
//
//          DatasetDeltaTimeArgs{...}
type DatasetDeltaTimeInput interface {
	pulumi.Input

	ToDatasetDeltaTimeOutput() DatasetDeltaTimeOutput
	ToDatasetDeltaTimeOutputWithContext(context.Context) DatasetDeltaTimeOutput
}

type DatasetDeltaTimeArgs struct {
	OffsetSeconds  pulumi.IntInput    `pulumi:"offsetSeconds"`
	TimeExpression pulumi.StringInput `pulumi:"timeExpression"`
}

func (DatasetDeltaTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDeltaTime)(nil)).Elem()
}

func (i DatasetDeltaTimeArgs) ToDatasetDeltaTimeOutput() DatasetDeltaTimeOutput {
	return i.ToDatasetDeltaTimeOutputWithContext(context.Background())
}

func (i DatasetDeltaTimeArgs) ToDatasetDeltaTimeOutputWithContext(ctx context.Context) DatasetDeltaTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeltaTimeOutput)
}

func (i DatasetDeltaTimeArgs) ToDatasetDeltaTimePtrOutput() DatasetDeltaTimePtrOutput {
	return i.ToDatasetDeltaTimePtrOutputWithContext(context.Background())
}

func (i DatasetDeltaTimeArgs) ToDatasetDeltaTimePtrOutputWithContext(ctx context.Context) DatasetDeltaTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeltaTimeOutput).ToDatasetDeltaTimePtrOutputWithContext(ctx)
}

// DatasetDeltaTimePtrInput is an input type that accepts DatasetDeltaTimeArgs, DatasetDeltaTimePtr and DatasetDeltaTimePtrOutput values.
// You can construct a concrete instance of `DatasetDeltaTimePtrInput` via:
//
//          DatasetDeltaTimeArgs{...}
//
//  or:
//
//          nil
type DatasetDeltaTimePtrInput interface {
	pulumi.Input

	ToDatasetDeltaTimePtrOutput() DatasetDeltaTimePtrOutput
	ToDatasetDeltaTimePtrOutputWithContext(context.Context) DatasetDeltaTimePtrOutput
}

type datasetDeltaTimePtrType DatasetDeltaTimeArgs

func DatasetDeltaTimePtr(v *DatasetDeltaTimeArgs) DatasetDeltaTimePtrInput {
	return (*datasetDeltaTimePtrType)(v)
}

func (*datasetDeltaTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDeltaTime)(nil)).Elem()
}

func (i *datasetDeltaTimePtrType) ToDatasetDeltaTimePtrOutput() DatasetDeltaTimePtrOutput {
	return i.ToDatasetDeltaTimePtrOutputWithContext(context.Background())
}

func (i *datasetDeltaTimePtrType) ToDatasetDeltaTimePtrOutputWithContext(ctx context.Context) DatasetDeltaTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeltaTimePtrOutput)
}

type DatasetDeltaTimeOutput struct{ *pulumi.OutputState }

func (DatasetDeltaTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDeltaTime)(nil)).Elem()
}

func (o DatasetDeltaTimeOutput) ToDatasetDeltaTimeOutput() DatasetDeltaTimeOutput {
	return o
}

func (o DatasetDeltaTimeOutput) ToDatasetDeltaTimeOutputWithContext(ctx context.Context) DatasetDeltaTimeOutput {
	return o
}

func (o DatasetDeltaTimeOutput) ToDatasetDeltaTimePtrOutput() DatasetDeltaTimePtrOutput {
	return o.ToDatasetDeltaTimePtrOutputWithContext(context.Background())
}

func (o DatasetDeltaTimeOutput) ToDatasetDeltaTimePtrOutputWithContext(ctx context.Context) DatasetDeltaTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetDeltaTime) *DatasetDeltaTime {
		return &v
	}).(DatasetDeltaTimePtrOutput)
}

func (o DatasetDeltaTimeOutput) OffsetSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v DatasetDeltaTime) int { return v.OffsetSeconds }).(pulumi.IntOutput)
}

func (o DatasetDeltaTimeOutput) TimeExpression() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetDeltaTime) string { return v.TimeExpression }).(pulumi.StringOutput)
}

type DatasetDeltaTimePtrOutput struct{ *pulumi.OutputState }

func (DatasetDeltaTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDeltaTime)(nil)).Elem()
}

func (o DatasetDeltaTimePtrOutput) ToDatasetDeltaTimePtrOutput() DatasetDeltaTimePtrOutput {
	return o
}

func (o DatasetDeltaTimePtrOutput) ToDatasetDeltaTimePtrOutputWithContext(ctx context.Context) DatasetDeltaTimePtrOutput {
	return o
}

func (o DatasetDeltaTimePtrOutput) Elem() DatasetDeltaTimeOutput {
	return o.ApplyT(func(v *DatasetDeltaTime) DatasetDeltaTime {
		if v != nil {
			return *v
		}
		var ret DatasetDeltaTime
		return ret
	}).(DatasetDeltaTimeOutput)
}

func (o DatasetDeltaTimePtrOutput) OffsetSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatasetDeltaTime) *int {
		if v == nil {
			return nil
		}
		return &v.OffsetSeconds
	}).(pulumi.IntPtrOutput)
}

func (o DatasetDeltaTimePtrOutput) TimeExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetDeltaTime) *string {
		if v == nil {
			return nil
		}
		return &v.TimeExpression
	}).(pulumi.StringPtrOutput)
}

type DatasetDeltaTimeSessionWindowConfiguration struct {
	TimeoutInMinutes int `pulumi:"timeoutInMinutes"`
}

// DatasetDeltaTimeSessionWindowConfigurationInput is an input type that accepts DatasetDeltaTimeSessionWindowConfigurationArgs and DatasetDeltaTimeSessionWindowConfigurationOutput values.
// You can construct a concrete instance of `DatasetDeltaTimeSessionWindowConfigurationInput` via:
//
//          DatasetDeltaTimeSessionWindowConfigurationArgs{...}
type DatasetDeltaTimeSessionWindowConfigurationInput interface {
	pulumi.Input

	ToDatasetDeltaTimeSessionWindowConfigurationOutput() DatasetDeltaTimeSessionWindowConfigurationOutput
	ToDatasetDeltaTimeSessionWindowConfigurationOutputWithContext(context.Context) DatasetDeltaTimeSessionWindowConfigurationOutput
}

type DatasetDeltaTimeSessionWindowConfigurationArgs struct {
	TimeoutInMinutes pulumi.IntInput `pulumi:"timeoutInMinutes"`
}

func (DatasetDeltaTimeSessionWindowConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDeltaTimeSessionWindowConfiguration)(nil)).Elem()
}

func (i DatasetDeltaTimeSessionWindowConfigurationArgs) ToDatasetDeltaTimeSessionWindowConfigurationOutput() DatasetDeltaTimeSessionWindowConfigurationOutput {
	return i.ToDatasetDeltaTimeSessionWindowConfigurationOutputWithContext(context.Background())
}

func (i DatasetDeltaTimeSessionWindowConfigurationArgs) ToDatasetDeltaTimeSessionWindowConfigurationOutputWithContext(ctx context.Context) DatasetDeltaTimeSessionWindowConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeltaTimeSessionWindowConfigurationOutput)
}

func (i DatasetDeltaTimeSessionWindowConfigurationArgs) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutput() DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return i.ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(context.Background())
}

func (i DatasetDeltaTimeSessionWindowConfigurationArgs) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(ctx context.Context) DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeltaTimeSessionWindowConfigurationOutput).ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(ctx)
}

// DatasetDeltaTimeSessionWindowConfigurationPtrInput is an input type that accepts DatasetDeltaTimeSessionWindowConfigurationArgs, DatasetDeltaTimeSessionWindowConfigurationPtr and DatasetDeltaTimeSessionWindowConfigurationPtrOutput values.
// You can construct a concrete instance of `DatasetDeltaTimeSessionWindowConfigurationPtrInput` via:
//
//          DatasetDeltaTimeSessionWindowConfigurationArgs{...}
//
//  or:
//
//          nil
type DatasetDeltaTimeSessionWindowConfigurationPtrInput interface {
	pulumi.Input

	ToDatasetDeltaTimeSessionWindowConfigurationPtrOutput() DatasetDeltaTimeSessionWindowConfigurationPtrOutput
	ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(context.Context) DatasetDeltaTimeSessionWindowConfigurationPtrOutput
}

type datasetDeltaTimeSessionWindowConfigurationPtrType DatasetDeltaTimeSessionWindowConfigurationArgs

func DatasetDeltaTimeSessionWindowConfigurationPtr(v *DatasetDeltaTimeSessionWindowConfigurationArgs) DatasetDeltaTimeSessionWindowConfigurationPtrInput {
	return (*datasetDeltaTimeSessionWindowConfigurationPtrType)(v)
}

func (*datasetDeltaTimeSessionWindowConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDeltaTimeSessionWindowConfiguration)(nil)).Elem()
}

func (i *datasetDeltaTimeSessionWindowConfigurationPtrType) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutput() DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return i.ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(context.Background())
}

func (i *datasetDeltaTimeSessionWindowConfigurationPtrType) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(ctx context.Context) DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetDeltaTimeSessionWindowConfigurationPtrOutput)
}

type DatasetDeltaTimeSessionWindowConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetDeltaTimeSessionWindowConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDeltaTimeSessionWindowConfiguration)(nil)).Elem()
}

func (o DatasetDeltaTimeSessionWindowConfigurationOutput) ToDatasetDeltaTimeSessionWindowConfigurationOutput() DatasetDeltaTimeSessionWindowConfigurationOutput {
	return o
}

func (o DatasetDeltaTimeSessionWindowConfigurationOutput) ToDatasetDeltaTimeSessionWindowConfigurationOutputWithContext(ctx context.Context) DatasetDeltaTimeSessionWindowConfigurationOutput {
	return o
}

func (o DatasetDeltaTimeSessionWindowConfigurationOutput) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutput() DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return o.ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(context.Background())
}

func (o DatasetDeltaTimeSessionWindowConfigurationOutput) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(ctx context.Context) DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetDeltaTimeSessionWindowConfiguration) *DatasetDeltaTimeSessionWindowConfiguration {
		return &v
	}).(DatasetDeltaTimeSessionWindowConfigurationPtrOutput)
}

func (o DatasetDeltaTimeSessionWindowConfigurationOutput) TimeoutInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v DatasetDeltaTimeSessionWindowConfiguration) int { return v.TimeoutInMinutes }).(pulumi.IntOutput)
}

type DatasetDeltaTimeSessionWindowConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatasetDeltaTimeSessionWindowConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDeltaTimeSessionWindowConfiguration)(nil)).Elem()
}

func (o DatasetDeltaTimeSessionWindowConfigurationPtrOutput) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutput() DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return o
}

func (o DatasetDeltaTimeSessionWindowConfigurationPtrOutput) ToDatasetDeltaTimeSessionWindowConfigurationPtrOutputWithContext(ctx context.Context) DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return o
}

func (o DatasetDeltaTimeSessionWindowConfigurationPtrOutput) Elem() DatasetDeltaTimeSessionWindowConfigurationOutput {
	return o.ApplyT(func(v *DatasetDeltaTimeSessionWindowConfiguration) DatasetDeltaTimeSessionWindowConfiguration {
		if v != nil {
			return *v
		}
		var ret DatasetDeltaTimeSessionWindowConfiguration
		return ret
	}).(DatasetDeltaTimeSessionWindowConfigurationOutput)
}

func (o DatasetDeltaTimeSessionWindowConfigurationPtrOutput) TimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatasetDeltaTimeSessionWindowConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.TimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

type DatasetFilter struct {
	DeltaTime *DatasetDeltaTime `pulumi:"deltaTime"`
}

// DatasetFilterInput is an input type that accepts DatasetFilterArgs and DatasetFilterOutput values.
// You can construct a concrete instance of `DatasetFilterInput` via:
//
//          DatasetFilterArgs{...}
type DatasetFilterInput interface {
	pulumi.Input

	ToDatasetFilterOutput() DatasetFilterOutput
	ToDatasetFilterOutputWithContext(context.Context) DatasetFilterOutput
}

type DatasetFilterArgs struct {
	DeltaTime DatasetDeltaTimePtrInput `pulumi:"deltaTime"`
}

func (DatasetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetFilter)(nil)).Elem()
}

func (i DatasetFilterArgs) ToDatasetFilterOutput() DatasetFilterOutput {
	return i.ToDatasetFilterOutputWithContext(context.Background())
}

func (i DatasetFilterArgs) ToDatasetFilterOutputWithContext(ctx context.Context) DatasetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetFilterOutput)
}

// DatasetFilterArrayInput is an input type that accepts DatasetFilterArray and DatasetFilterArrayOutput values.
// You can construct a concrete instance of `DatasetFilterArrayInput` via:
//
//          DatasetFilterArray{ DatasetFilterArgs{...} }
type DatasetFilterArrayInput interface {
	pulumi.Input

	ToDatasetFilterArrayOutput() DatasetFilterArrayOutput
	ToDatasetFilterArrayOutputWithContext(context.Context) DatasetFilterArrayOutput
}

type DatasetFilterArray []DatasetFilterInput

func (DatasetFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetFilter)(nil)).Elem()
}

func (i DatasetFilterArray) ToDatasetFilterArrayOutput() DatasetFilterArrayOutput {
	return i.ToDatasetFilterArrayOutputWithContext(context.Background())
}

func (i DatasetFilterArray) ToDatasetFilterArrayOutputWithContext(ctx context.Context) DatasetFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetFilterArrayOutput)
}

type DatasetFilterOutput struct{ *pulumi.OutputState }

func (DatasetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetFilter)(nil)).Elem()
}

func (o DatasetFilterOutput) ToDatasetFilterOutput() DatasetFilterOutput {
	return o
}

func (o DatasetFilterOutput) ToDatasetFilterOutputWithContext(ctx context.Context) DatasetFilterOutput {
	return o
}

func (o DatasetFilterOutput) DeltaTime() DatasetDeltaTimePtrOutput {
	return o.ApplyT(func(v DatasetFilter) *DatasetDeltaTime { return v.DeltaTime }).(DatasetDeltaTimePtrOutput)
}

type DatasetFilterArrayOutput struct{ *pulumi.OutputState }

func (DatasetFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetFilter)(nil)).Elem()
}

func (o DatasetFilterArrayOutput) ToDatasetFilterArrayOutput() DatasetFilterArrayOutput {
	return o
}

func (o DatasetFilterArrayOutput) ToDatasetFilterArrayOutputWithContext(ctx context.Context) DatasetFilterArrayOutput {
	return o
}

func (o DatasetFilterArrayOutput) Index(i pulumi.IntInput) DatasetFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetFilter {
		return vs[0].([]DatasetFilter)[vs[1].(int)]
	}).(DatasetFilterOutput)
}

type DatasetGlueConfiguration struct {
	DatabaseName string `pulumi:"databaseName"`
	TableName    string `pulumi:"tableName"`
}

// DatasetGlueConfigurationInput is an input type that accepts DatasetGlueConfigurationArgs and DatasetGlueConfigurationOutput values.
// You can construct a concrete instance of `DatasetGlueConfigurationInput` via:
//
//          DatasetGlueConfigurationArgs{...}
type DatasetGlueConfigurationInput interface {
	pulumi.Input

	ToDatasetGlueConfigurationOutput() DatasetGlueConfigurationOutput
	ToDatasetGlueConfigurationOutputWithContext(context.Context) DatasetGlueConfigurationOutput
}

type DatasetGlueConfigurationArgs struct {
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	TableName    pulumi.StringInput `pulumi:"tableName"`
}

func (DatasetGlueConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetGlueConfiguration)(nil)).Elem()
}

func (i DatasetGlueConfigurationArgs) ToDatasetGlueConfigurationOutput() DatasetGlueConfigurationOutput {
	return i.ToDatasetGlueConfigurationOutputWithContext(context.Background())
}

func (i DatasetGlueConfigurationArgs) ToDatasetGlueConfigurationOutputWithContext(ctx context.Context) DatasetGlueConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetGlueConfigurationOutput)
}

func (i DatasetGlueConfigurationArgs) ToDatasetGlueConfigurationPtrOutput() DatasetGlueConfigurationPtrOutput {
	return i.ToDatasetGlueConfigurationPtrOutputWithContext(context.Background())
}

func (i DatasetGlueConfigurationArgs) ToDatasetGlueConfigurationPtrOutputWithContext(ctx context.Context) DatasetGlueConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetGlueConfigurationOutput).ToDatasetGlueConfigurationPtrOutputWithContext(ctx)
}

// DatasetGlueConfigurationPtrInput is an input type that accepts DatasetGlueConfigurationArgs, DatasetGlueConfigurationPtr and DatasetGlueConfigurationPtrOutput values.
// You can construct a concrete instance of `DatasetGlueConfigurationPtrInput` via:
//
//          DatasetGlueConfigurationArgs{...}
//
//  or:
//
//          nil
type DatasetGlueConfigurationPtrInput interface {
	pulumi.Input

	ToDatasetGlueConfigurationPtrOutput() DatasetGlueConfigurationPtrOutput
	ToDatasetGlueConfigurationPtrOutputWithContext(context.Context) DatasetGlueConfigurationPtrOutput
}

type datasetGlueConfigurationPtrType DatasetGlueConfigurationArgs

func DatasetGlueConfigurationPtr(v *DatasetGlueConfigurationArgs) DatasetGlueConfigurationPtrInput {
	return (*datasetGlueConfigurationPtrType)(v)
}

func (*datasetGlueConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetGlueConfiguration)(nil)).Elem()
}

func (i *datasetGlueConfigurationPtrType) ToDatasetGlueConfigurationPtrOutput() DatasetGlueConfigurationPtrOutput {
	return i.ToDatasetGlueConfigurationPtrOutputWithContext(context.Background())
}

func (i *datasetGlueConfigurationPtrType) ToDatasetGlueConfigurationPtrOutputWithContext(ctx context.Context) DatasetGlueConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetGlueConfigurationPtrOutput)
}

type DatasetGlueConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetGlueConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetGlueConfiguration)(nil)).Elem()
}

func (o DatasetGlueConfigurationOutput) ToDatasetGlueConfigurationOutput() DatasetGlueConfigurationOutput {
	return o
}

func (o DatasetGlueConfigurationOutput) ToDatasetGlueConfigurationOutputWithContext(ctx context.Context) DatasetGlueConfigurationOutput {
	return o
}

func (o DatasetGlueConfigurationOutput) ToDatasetGlueConfigurationPtrOutput() DatasetGlueConfigurationPtrOutput {
	return o.ToDatasetGlueConfigurationPtrOutputWithContext(context.Background())
}

func (o DatasetGlueConfigurationOutput) ToDatasetGlueConfigurationPtrOutputWithContext(ctx context.Context) DatasetGlueConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetGlueConfiguration) *DatasetGlueConfiguration {
		return &v
	}).(DatasetGlueConfigurationPtrOutput)
}

func (o DatasetGlueConfigurationOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetGlueConfiguration) string { return v.DatabaseName }).(pulumi.StringOutput)
}

func (o DatasetGlueConfigurationOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetGlueConfiguration) string { return v.TableName }).(pulumi.StringOutput)
}

type DatasetGlueConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatasetGlueConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetGlueConfiguration)(nil)).Elem()
}

func (o DatasetGlueConfigurationPtrOutput) ToDatasetGlueConfigurationPtrOutput() DatasetGlueConfigurationPtrOutput {
	return o
}

func (o DatasetGlueConfigurationPtrOutput) ToDatasetGlueConfigurationPtrOutputWithContext(ctx context.Context) DatasetGlueConfigurationPtrOutput {
	return o
}

func (o DatasetGlueConfigurationPtrOutput) Elem() DatasetGlueConfigurationOutput {
	return o.ApplyT(func(v *DatasetGlueConfiguration) DatasetGlueConfiguration {
		if v != nil {
			return *v
		}
		var ret DatasetGlueConfiguration
		return ret
	}).(DatasetGlueConfigurationOutput)
}

func (o DatasetGlueConfigurationPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetGlueConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o DatasetGlueConfigurationPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetGlueConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

type DatasetIotEventsDestinationConfiguration struct {
	InputName string `pulumi:"inputName"`
	RoleArn   string `pulumi:"roleArn"`
}

// DatasetIotEventsDestinationConfigurationInput is an input type that accepts DatasetIotEventsDestinationConfigurationArgs and DatasetIotEventsDestinationConfigurationOutput values.
// You can construct a concrete instance of `DatasetIotEventsDestinationConfigurationInput` via:
//
//          DatasetIotEventsDestinationConfigurationArgs{...}
type DatasetIotEventsDestinationConfigurationInput interface {
	pulumi.Input

	ToDatasetIotEventsDestinationConfigurationOutput() DatasetIotEventsDestinationConfigurationOutput
	ToDatasetIotEventsDestinationConfigurationOutputWithContext(context.Context) DatasetIotEventsDestinationConfigurationOutput
}

type DatasetIotEventsDestinationConfigurationArgs struct {
	InputName pulumi.StringInput `pulumi:"inputName"`
	RoleArn   pulumi.StringInput `pulumi:"roleArn"`
}

func (DatasetIotEventsDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetIotEventsDestinationConfiguration)(nil)).Elem()
}

func (i DatasetIotEventsDestinationConfigurationArgs) ToDatasetIotEventsDestinationConfigurationOutput() DatasetIotEventsDestinationConfigurationOutput {
	return i.ToDatasetIotEventsDestinationConfigurationOutputWithContext(context.Background())
}

func (i DatasetIotEventsDestinationConfigurationArgs) ToDatasetIotEventsDestinationConfigurationOutputWithContext(ctx context.Context) DatasetIotEventsDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetIotEventsDestinationConfigurationOutput)
}

func (i DatasetIotEventsDestinationConfigurationArgs) ToDatasetIotEventsDestinationConfigurationPtrOutput() DatasetIotEventsDestinationConfigurationPtrOutput {
	return i.ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DatasetIotEventsDestinationConfigurationArgs) ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetIotEventsDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetIotEventsDestinationConfigurationOutput).ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(ctx)
}

// DatasetIotEventsDestinationConfigurationPtrInput is an input type that accepts DatasetIotEventsDestinationConfigurationArgs, DatasetIotEventsDestinationConfigurationPtr and DatasetIotEventsDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DatasetIotEventsDestinationConfigurationPtrInput` via:
//
//          DatasetIotEventsDestinationConfigurationArgs{...}
//
//  or:
//
//          nil
type DatasetIotEventsDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDatasetIotEventsDestinationConfigurationPtrOutput() DatasetIotEventsDestinationConfigurationPtrOutput
	ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(context.Context) DatasetIotEventsDestinationConfigurationPtrOutput
}

type datasetIotEventsDestinationConfigurationPtrType DatasetIotEventsDestinationConfigurationArgs

func DatasetIotEventsDestinationConfigurationPtr(v *DatasetIotEventsDestinationConfigurationArgs) DatasetIotEventsDestinationConfigurationPtrInput {
	return (*datasetIotEventsDestinationConfigurationPtrType)(v)
}

func (*datasetIotEventsDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetIotEventsDestinationConfiguration)(nil)).Elem()
}

func (i *datasetIotEventsDestinationConfigurationPtrType) ToDatasetIotEventsDestinationConfigurationPtrOutput() DatasetIotEventsDestinationConfigurationPtrOutput {
	return i.ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *datasetIotEventsDestinationConfigurationPtrType) ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetIotEventsDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetIotEventsDestinationConfigurationPtrOutput)
}

type DatasetIotEventsDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetIotEventsDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetIotEventsDestinationConfiguration)(nil)).Elem()
}

func (o DatasetIotEventsDestinationConfigurationOutput) ToDatasetIotEventsDestinationConfigurationOutput() DatasetIotEventsDestinationConfigurationOutput {
	return o
}

func (o DatasetIotEventsDestinationConfigurationOutput) ToDatasetIotEventsDestinationConfigurationOutputWithContext(ctx context.Context) DatasetIotEventsDestinationConfigurationOutput {
	return o
}

func (o DatasetIotEventsDestinationConfigurationOutput) ToDatasetIotEventsDestinationConfigurationPtrOutput() DatasetIotEventsDestinationConfigurationPtrOutput {
	return o.ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DatasetIotEventsDestinationConfigurationOutput) ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetIotEventsDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetIotEventsDestinationConfiguration) *DatasetIotEventsDestinationConfiguration {
		return &v
	}).(DatasetIotEventsDestinationConfigurationPtrOutput)
}

func (o DatasetIotEventsDestinationConfigurationOutput) InputName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetIotEventsDestinationConfiguration) string { return v.InputName }).(pulumi.StringOutput)
}

func (o DatasetIotEventsDestinationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetIotEventsDestinationConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DatasetIotEventsDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatasetIotEventsDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetIotEventsDestinationConfiguration)(nil)).Elem()
}

func (o DatasetIotEventsDestinationConfigurationPtrOutput) ToDatasetIotEventsDestinationConfigurationPtrOutput() DatasetIotEventsDestinationConfigurationPtrOutput {
	return o
}

func (o DatasetIotEventsDestinationConfigurationPtrOutput) ToDatasetIotEventsDestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetIotEventsDestinationConfigurationPtrOutput {
	return o
}

func (o DatasetIotEventsDestinationConfigurationPtrOutput) Elem() DatasetIotEventsDestinationConfigurationOutput {
	return o.ApplyT(func(v *DatasetIotEventsDestinationConfiguration) DatasetIotEventsDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DatasetIotEventsDestinationConfiguration
		return ret
	}).(DatasetIotEventsDestinationConfigurationOutput)
}

func (o DatasetIotEventsDestinationConfigurationPtrOutput) InputName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetIotEventsDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.InputName
	}).(pulumi.StringPtrOutput)
}

func (o DatasetIotEventsDestinationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetIotEventsDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type DatasetLateDataRule struct {
	RuleConfiguration DatasetLateDataRuleConfiguration `pulumi:"ruleConfiguration"`
	RuleName          *string                          `pulumi:"ruleName"`
}

// DatasetLateDataRuleInput is an input type that accepts DatasetLateDataRuleArgs and DatasetLateDataRuleOutput values.
// You can construct a concrete instance of `DatasetLateDataRuleInput` via:
//
//          DatasetLateDataRuleArgs{...}
type DatasetLateDataRuleInput interface {
	pulumi.Input

	ToDatasetLateDataRuleOutput() DatasetLateDataRuleOutput
	ToDatasetLateDataRuleOutputWithContext(context.Context) DatasetLateDataRuleOutput
}

type DatasetLateDataRuleArgs struct {
	RuleConfiguration DatasetLateDataRuleConfigurationInput `pulumi:"ruleConfiguration"`
	RuleName          pulumi.StringPtrInput                 `pulumi:"ruleName"`
}

func (DatasetLateDataRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetLateDataRule)(nil)).Elem()
}

func (i DatasetLateDataRuleArgs) ToDatasetLateDataRuleOutput() DatasetLateDataRuleOutput {
	return i.ToDatasetLateDataRuleOutputWithContext(context.Background())
}

func (i DatasetLateDataRuleArgs) ToDatasetLateDataRuleOutputWithContext(ctx context.Context) DatasetLateDataRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetLateDataRuleOutput)
}

// DatasetLateDataRuleArrayInput is an input type that accepts DatasetLateDataRuleArray and DatasetLateDataRuleArrayOutput values.
// You can construct a concrete instance of `DatasetLateDataRuleArrayInput` via:
//
//          DatasetLateDataRuleArray{ DatasetLateDataRuleArgs{...} }
type DatasetLateDataRuleArrayInput interface {
	pulumi.Input

	ToDatasetLateDataRuleArrayOutput() DatasetLateDataRuleArrayOutput
	ToDatasetLateDataRuleArrayOutputWithContext(context.Context) DatasetLateDataRuleArrayOutput
}

type DatasetLateDataRuleArray []DatasetLateDataRuleInput

func (DatasetLateDataRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetLateDataRule)(nil)).Elem()
}

func (i DatasetLateDataRuleArray) ToDatasetLateDataRuleArrayOutput() DatasetLateDataRuleArrayOutput {
	return i.ToDatasetLateDataRuleArrayOutputWithContext(context.Background())
}

func (i DatasetLateDataRuleArray) ToDatasetLateDataRuleArrayOutputWithContext(ctx context.Context) DatasetLateDataRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetLateDataRuleArrayOutput)
}

type DatasetLateDataRuleOutput struct{ *pulumi.OutputState }

func (DatasetLateDataRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetLateDataRule)(nil)).Elem()
}

func (o DatasetLateDataRuleOutput) ToDatasetLateDataRuleOutput() DatasetLateDataRuleOutput {
	return o
}

func (o DatasetLateDataRuleOutput) ToDatasetLateDataRuleOutputWithContext(ctx context.Context) DatasetLateDataRuleOutput {
	return o
}

func (o DatasetLateDataRuleOutput) RuleConfiguration() DatasetLateDataRuleConfigurationOutput {
	return o.ApplyT(func(v DatasetLateDataRule) DatasetLateDataRuleConfiguration { return v.RuleConfiguration }).(DatasetLateDataRuleConfigurationOutput)
}

func (o DatasetLateDataRuleOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetLateDataRule) *string { return v.RuleName }).(pulumi.StringPtrOutput)
}

type DatasetLateDataRuleArrayOutput struct{ *pulumi.OutputState }

func (DatasetLateDataRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetLateDataRule)(nil)).Elem()
}

func (o DatasetLateDataRuleArrayOutput) ToDatasetLateDataRuleArrayOutput() DatasetLateDataRuleArrayOutput {
	return o
}

func (o DatasetLateDataRuleArrayOutput) ToDatasetLateDataRuleArrayOutputWithContext(ctx context.Context) DatasetLateDataRuleArrayOutput {
	return o
}

func (o DatasetLateDataRuleArrayOutput) Index(i pulumi.IntInput) DatasetLateDataRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetLateDataRule {
		return vs[0].([]DatasetLateDataRule)[vs[1].(int)]
	}).(DatasetLateDataRuleOutput)
}

type DatasetLateDataRuleConfiguration struct {
	DeltaTimeSessionWindowConfiguration *DatasetDeltaTimeSessionWindowConfiguration `pulumi:"deltaTimeSessionWindowConfiguration"`
}

// DatasetLateDataRuleConfigurationInput is an input type that accepts DatasetLateDataRuleConfigurationArgs and DatasetLateDataRuleConfigurationOutput values.
// You can construct a concrete instance of `DatasetLateDataRuleConfigurationInput` via:
//
//          DatasetLateDataRuleConfigurationArgs{...}
type DatasetLateDataRuleConfigurationInput interface {
	pulumi.Input

	ToDatasetLateDataRuleConfigurationOutput() DatasetLateDataRuleConfigurationOutput
	ToDatasetLateDataRuleConfigurationOutputWithContext(context.Context) DatasetLateDataRuleConfigurationOutput
}

type DatasetLateDataRuleConfigurationArgs struct {
	DeltaTimeSessionWindowConfiguration DatasetDeltaTimeSessionWindowConfigurationPtrInput `pulumi:"deltaTimeSessionWindowConfiguration"`
}

func (DatasetLateDataRuleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetLateDataRuleConfiguration)(nil)).Elem()
}

func (i DatasetLateDataRuleConfigurationArgs) ToDatasetLateDataRuleConfigurationOutput() DatasetLateDataRuleConfigurationOutput {
	return i.ToDatasetLateDataRuleConfigurationOutputWithContext(context.Background())
}

func (i DatasetLateDataRuleConfigurationArgs) ToDatasetLateDataRuleConfigurationOutputWithContext(ctx context.Context) DatasetLateDataRuleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetLateDataRuleConfigurationOutput)
}

type DatasetLateDataRuleConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetLateDataRuleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetLateDataRuleConfiguration)(nil)).Elem()
}

func (o DatasetLateDataRuleConfigurationOutput) ToDatasetLateDataRuleConfigurationOutput() DatasetLateDataRuleConfigurationOutput {
	return o
}

func (o DatasetLateDataRuleConfigurationOutput) ToDatasetLateDataRuleConfigurationOutputWithContext(ctx context.Context) DatasetLateDataRuleConfigurationOutput {
	return o
}

func (o DatasetLateDataRuleConfigurationOutput) DeltaTimeSessionWindowConfiguration() DatasetDeltaTimeSessionWindowConfigurationPtrOutput {
	return o.ApplyT(func(v DatasetLateDataRuleConfiguration) *DatasetDeltaTimeSessionWindowConfiguration {
		return v.DeltaTimeSessionWindowConfiguration
	}).(DatasetDeltaTimeSessionWindowConfigurationPtrOutput)
}

type DatasetOutputFileUriValue struct {
	FileName *string `pulumi:"fileName"`
}

// DatasetOutputFileUriValueInput is an input type that accepts DatasetOutputFileUriValueArgs and DatasetOutputFileUriValueOutput values.
// You can construct a concrete instance of `DatasetOutputFileUriValueInput` via:
//
//          DatasetOutputFileUriValueArgs{...}
type DatasetOutputFileUriValueInput interface {
	pulumi.Input

	ToDatasetOutputFileUriValueOutput() DatasetOutputFileUriValueOutput
	ToDatasetOutputFileUriValueOutputWithContext(context.Context) DatasetOutputFileUriValueOutput
}

type DatasetOutputFileUriValueArgs struct {
	FileName pulumi.StringPtrInput `pulumi:"fileName"`
}

func (DatasetOutputFileUriValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetOutputFileUriValue)(nil)).Elem()
}

func (i DatasetOutputFileUriValueArgs) ToDatasetOutputFileUriValueOutput() DatasetOutputFileUriValueOutput {
	return i.ToDatasetOutputFileUriValueOutputWithContext(context.Background())
}

func (i DatasetOutputFileUriValueArgs) ToDatasetOutputFileUriValueOutputWithContext(ctx context.Context) DatasetOutputFileUriValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetOutputFileUriValueOutput)
}

func (i DatasetOutputFileUriValueArgs) ToDatasetOutputFileUriValuePtrOutput() DatasetOutputFileUriValuePtrOutput {
	return i.ToDatasetOutputFileUriValuePtrOutputWithContext(context.Background())
}

func (i DatasetOutputFileUriValueArgs) ToDatasetOutputFileUriValuePtrOutputWithContext(ctx context.Context) DatasetOutputFileUriValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetOutputFileUriValueOutput).ToDatasetOutputFileUriValuePtrOutputWithContext(ctx)
}

// DatasetOutputFileUriValuePtrInput is an input type that accepts DatasetOutputFileUriValueArgs, DatasetOutputFileUriValuePtr and DatasetOutputFileUriValuePtrOutput values.
// You can construct a concrete instance of `DatasetOutputFileUriValuePtrInput` via:
//
//          DatasetOutputFileUriValueArgs{...}
//
//  or:
//
//          nil
type DatasetOutputFileUriValuePtrInput interface {
	pulumi.Input

	ToDatasetOutputFileUriValuePtrOutput() DatasetOutputFileUriValuePtrOutput
	ToDatasetOutputFileUriValuePtrOutputWithContext(context.Context) DatasetOutputFileUriValuePtrOutput
}

type datasetOutputFileUriValuePtrType DatasetOutputFileUriValueArgs

func DatasetOutputFileUriValuePtr(v *DatasetOutputFileUriValueArgs) DatasetOutputFileUriValuePtrInput {
	return (*datasetOutputFileUriValuePtrType)(v)
}

func (*datasetOutputFileUriValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetOutputFileUriValue)(nil)).Elem()
}

func (i *datasetOutputFileUriValuePtrType) ToDatasetOutputFileUriValuePtrOutput() DatasetOutputFileUriValuePtrOutput {
	return i.ToDatasetOutputFileUriValuePtrOutputWithContext(context.Background())
}

func (i *datasetOutputFileUriValuePtrType) ToDatasetOutputFileUriValuePtrOutputWithContext(ctx context.Context) DatasetOutputFileUriValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetOutputFileUriValuePtrOutput)
}

type DatasetOutputFileUriValueOutput struct{ *pulumi.OutputState }

func (DatasetOutputFileUriValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetOutputFileUriValue)(nil)).Elem()
}

func (o DatasetOutputFileUriValueOutput) ToDatasetOutputFileUriValueOutput() DatasetOutputFileUriValueOutput {
	return o
}

func (o DatasetOutputFileUriValueOutput) ToDatasetOutputFileUriValueOutputWithContext(ctx context.Context) DatasetOutputFileUriValueOutput {
	return o
}

func (o DatasetOutputFileUriValueOutput) ToDatasetOutputFileUriValuePtrOutput() DatasetOutputFileUriValuePtrOutput {
	return o.ToDatasetOutputFileUriValuePtrOutputWithContext(context.Background())
}

func (o DatasetOutputFileUriValueOutput) ToDatasetOutputFileUriValuePtrOutputWithContext(ctx context.Context) DatasetOutputFileUriValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetOutputFileUriValue) *DatasetOutputFileUriValue {
		return &v
	}).(DatasetOutputFileUriValuePtrOutput)
}

func (o DatasetOutputFileUriValueOutput) FileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetOutputFileUriValue) *string { return v.FileName }).(pulumi.StringPtrOutput)
}

type DatasetOutputFileUriValuePtrOutput struct{ *pulumi.OutputState }

func (DatasetOutputFileUriValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetOutputFileUriValue)(nil)).Elem()
}

func (o DatasetOutputFileUriValuePtrOutput) ToDatasetOutputFileUriValuePtrOutput() DatasetOutputFileUriValuePtrOutput {
	return o
}

func (o DatasetOutputFileUriValuePtrOutput) ToDatasetOutputFileUriValuePtrOutputWithContext(ctx context.Context) DatasetOutputFileUriValuePtrOutput {
	return o
}

func (o DatasetOutputFileUriValuePtrOutput) Elem() DatasetOutputFileUriValueOutput {
	return o.ApplyT(func(v *DatasetOutputFileUriValue) DatasetOutputFileUriValue {
		if v != nil {
			return *v
		}
		var ret DatasetOutputFileUriValue
		return ret
	}).(DatasetOutputFileUriValueOutput)
}

func (o DatasetOutputFileUriValuePtrOutput) FileName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetOutputFileUriValue) *string {
		if v == nil {
			return nil
		}
		return v.FileName
	}).(pulumi.StringPtrOutput)
}

type DatasetQueryAction struct {
	Filters  []DatasetFilter `pulumi:"filters"`
	SqlQuery string          `pulumi:"sqlQuery"`
}

// DatasetQueryActionInput is an input type that accepts DatasetQueryActionArgs and DatasetQueryActionOutput values.
// You can construct a concrete instance of `DatasetQueryActionInput` via:
//
//          DatasetQueryActionArgs{...}
type DatasetQueryActionInput interface {
	pulumi.Input

	ToDatasetQueryActionOutput() DatasetQueryActionOutput
	ToDatasetQueryActionOutputWithContext(context.Context) DatasetQueryActionOutput
}

type DatasetQueryActionArgs struct {
	Filters  DatasetFilterArrayInput `pulumi:"filters"`
	SqlQuery pulumi.StringInput      `pulumi:"sqlQuery"`
}

func (DatasetQueryActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetQueryAction)(nil)).Elem()
}

func (i DatasetQueryActionArgs) ToDatasetQueryActionOutput() DatasetQueryActionOutput {
	return i.ToDatasetQueryActionOutputWithContext(context.Background())
}

func (i DatasetQueryActionArgs) ToDatasetQueryActionOutputWithContext(ctx context.Context) DatasetQueryActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetQueryActionOutput)
}

func (i DatasetQueryActionArgs) ToDatasetQueryActionPtrOutput() DatasetQueryActionPtrOutput {
	return i.ToDatasetQueryActionPtrOutputWithContext(context.Background())
}

func (i DatasetQueryActionArgs) ToDatasetQueryActionPtrOutputWithContext(ctx context.Context) DatasetQueryActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetQueryActionOutput).ToDatasetQueryActionPtrOutputWithContext(ctx)
}

// DatasetQueryActionPtrInput is an input type that accepts DatasetQueryActionArgs, DatasetQueryActionPtr and DatasetQueryActionPtrOutput values.
// You can construct a concrete instance of `DatasetQueryActionPtrInput` via:
//
//          DatasetQueryActionArgs{...}
//
//  or:
//
//          nil
type DatasetQueryActionPtrInput interface {
	pulumi.Input

	ToDatasetQueryActionPtrOutput() DatasetQueryActionPtrOutput
	ToDatasetQueryActionPtrOutputWithContext(context.Context) DatasetQueryActionPtrOutput
}

type datasetQueryActionPtrType DatasetQueryActionArgs

func DatasetQueryActionPtr(v *DatasetQueryActionArgs) DatasetQueryActionPtrInput {
	return (*datasetQueryActionPtrType)(v)
}

func (*datasetQueryActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetQueryAction)(nil)).Elem()
}

func (i *datasetQueryActionPtrType) ToDatasetQueryActionPtrOutput() DatasetQueryActionPtrOutput {
	return i.ToDatasetQueryActionPtrOutputWithContext(context.Background())
}

func (i *datasetQueryActionPtrType) ToDatasetQueryActionPtrOutputWithContext(ctx context.Context) DatasetQueryActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetQueryActionPtrOutput)
}

type DatasetQueryActionOutput struct{ *pulumi.OutputState }

func (DatasetQueryActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetQueryAction)(nil)).Elem()
}

func (o DatasetQueryActionOutput) ToDatasetQueryActionOutput() DatasetQueryActionOutput {
	return o
}

func (o DatasetQueryActionOutput) ToDatasetQueryActionOutputWithContext(ctx context.Context) DatasetQueryActionOutput {
	return o
}

func (o DatasetQueryActionOutput) ToDatasetQueryActionPtrOutput() DatasetQueryActionPtrOutput {
	return o.ToDatasetQueryActionPtrOutputWithContext(context.Background())
}

func (o DatasetQueryActionOutput) ToDatasetQueryActionPtrOutputWithContext(ctx context.Context) DatasetQueryActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetQueryAction) *DatasetQueryAction {
		return &v
	}).(DatasetQueryActionPtrOutput)
}

func (o DatasetQueryActionOutput) Filters() DatasetFilterArrayOutput {
	return o.ApplyT(func(v DatasetQueryAction) []DatasetFilter { return v.Filters }).(DatasetFilterArrayOutput)
}

func (o DatasetQueryActionOutput) SqlQuery() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetQueryAction) string { return v.SqlQuery }).(pulumi.StringOutput)
}

type DatasetQueryActionPtrOutput struct{ *pulumi.OutputState }

func (DatasetQueryActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetQueryAction)(nil)).Elem()
}

func (o DatasetQueryActionPtrOutput) ToDatasetQueryActionPtrOutput() DatasetQueryActionPtrOutput {
	return o
}

func (o DatasetQueryActionPtrOutput) ToDatasetQueryActionPtrOutputWithContext(ctx context.Context) DatasetQueryActionPtrOutput {
	return o
}

func (o DatasetQueryActionPtrOutput) Elem() DatasetQueryActionOutput {
	return o.ApplyT(func(v *DatasetQueryAction) DatasetQueryAction {
		if v != nil {
			return *v
		}
		var ret DatasetQueryAction
		return ret
	}).(DatasetQueryActionOutput)
}

func (o DatasetQueryActionPtrOutput) Filters() DatasetFilterArrayOutput {
	return o.ApplyT(func(v *DatasetQueryAction) []DatasetFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(DatasetFilterArrayOutput)
}

func (o DatasetQueryActionPtrOutput) SqlQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetQueryAction) *string {
		if v == nil {
			return nil
		}
		return &v.SqlQuery
	}).(pulumi.StringPtrOutput)
}

type DatasetResourceConfiguration struct {
	ComputeType    string `pulumi:"computeType"`
	VolumeSizeInGB int    `pulumi:"volumeSizeInGB"`
}

// DatasetResourceConfigurationInput is an input type that accepts DatasetResourceConfigurationArgs and DatasetResourceConfigurationOutput values.
// You can construct a concrete instance of `DatasetResourceConfigurationInput` via:
//
//          DatasetResourceConfigurationArgs{...}
type DatasetResourceConfigurationInput interface {
	pulumi.Input

	ToDatasetResourceConfigurationOutput() DatasetResourceConfigurationOutput
	ToDatasetResourceConfigurationOutputWithContext(context.Context) DatasetResourceConfigurationOutput
}

type DatasetResourceConfigurationArgs struct {
	ComputeType    pulumi.StringInput `pulumi:"computeType"`
	VolumeSizeInGB pulumi.IntInput    `pulumi:"volumeSizeInGB"`
}

func (DatasetResourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetResourceConfiguration)(nil)).Elem()
}

func (i DatasetResourceConfigurationArgs) ToDatasetResourceConfigurationOutput() DatasetResourceConfigurationOutput {
	return i.ToDatasetResourceConfigurationOutputWithContext(context.Background())
}

func (i DatasetResourceConfigurationArgs) ToDatasetResourceConfigurationOutputWithContext(ctx context.Context) DatasetResourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResourceConfigurationOutput)
}

func (i DatasetResourceConfigurationArgs) ToDatasetResourceConfigurationPtrOutput() DatasetResourceConfigurationPtrOutput {
	return i.ToDatasetResourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DatasetResourceConfigurationArgs) ToDatasetResourceConfigurationPtrOutputWithContext(ctx context.Context) DatasetResourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResourceConfigurationOutput).ToDatasetResourceConfigurationPtrOutputWithContext(ctx)
}

// DatasetResourceConfigurationPtrInput is an input type that accepts DatasetResourceConfigurationArgs, DatasetResourceConfigurationPtr and DatasetResourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DatasetResourceConfigurationPtrInput` via:
//
//          DatasetResourceConfigurationArgs{...}
//
//  or:
//
//          nil
type DatasetResourceConfigurationPtrInput interface {
	pulumi.Input

	ToDatasetResourceConfigurationPtrOutput() DatasetResourceConfigurationPtrOutput
	ToDatasetResourceConfigurationPtrOutputWithContext(context.Context) DatasetResourceConfigurationPtrOutput
}

type datasetResourceConfigurationPtrType DatasetResourceConfigurationArgs

func DatasetResourceConfigurationPtr(v *DatasetResourceConfigurationArgs) DatasetResourceConfigurationPtrInput {
	return (*datasetResourceConfigurationPtrType)(v)
}

func (*datasetResourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetResourceConfiguration)(nil)).Elem()
}

func (i *datasetResourceConfigurationPtrType) ToDatasetResourceConfigurationPtrOutput() DatasetResourceConfigurationPtrOutput {
	return i.ToDatasetResourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *datasetResourceConfigurationPtrType) ToDatasetResourceConfigurationPtrOutputWithContext(ctx context.Context) DatasetResourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetResourceConfigurationPtrOutput)
}

type DatasetResourceConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetResourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetResourceConfiguration)(nil)).Elem()
}

func (o DatasetResourceConfigurationOutput) ToDatasetResourceConfigurationOutput() DatasetResourceConfigurationOutput {
	return o
}

func (o DatasetResourceConfigurationOutput) ToDatasetResourceConfigurationOutputWithContext(ctx context.Context) DatasetResourceConfigurationOutput {
	return o
}

func (o DatasetResourceConfigurationOutput) ToDatasetResourceConfigurationPtrOutput() DatasetResourceConfigurationPtrOutput {
	return o.ToDatasetResourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DatasetResourceConfigurationOutput) ToDatasetResourceConfigurationPtrOutputWithContext(ctx context.Context) DatasetResourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetResourceConfiguration) *DatasetResourceConfiguration {
		return &v
	}).(DatasetResourceConfigurationPtrOutput)
}

func (o DatasetResourceConfigurationOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetResourceConfiguration) string { return v.ComputeType }).(pulumi.StringOutput)
}

func (o DatasetResourceConfigurationOutput) VolumeSizeInGB() pulumi.IntOutput {
	return o.ApplyT(func(v DatasetResourceConfiguration) int { return v.VolumeSizeInGB }).(pulumi.IntOutput)
}

type DatasetResourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatasetResourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetResourceConfiguration)(nil)).Elem()
}

func (o DatasetResourceConfigurationPtrOutput) ToDatasetResourceConfigurationPtrOutput() DatasetResourceConfigurationPtrOutput {
	return o
}

func (o DatasetResourceConfigurationPtrOutput) ToDatasetResourceConfigurationPtrOutputWithContext(ctx context.Context) DatasetResourceConfigurationPtrOutput {
	return o
}

func (o DatasetResourceConfigurationPtrOutput) Elem() DatasetResourceConfigurationOutput {
	return o.ApplyT(func(v *DatasetResourceConfiguration) DatasetResourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DatasetResourceConfiguration
		return ret
	}).(DatasetResourceConfigurationOutput)
}

func (o DatasetResourceConfigurationPtrOutput) ComputeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetResourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ComputeType
	}).(pulumi.StringPtrOutput)
}

func (o DatasetResourceConfigurationPtrOutput) VolumeSizeInGB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatasetResourceConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.VolumeSizeInGB
	}).(pulumi.IntPtrOutput)
}

type DatasetRetentionPeriod struct {
	NumberOfDays int  `pulumi:"numberOfDays"`
	Unlimited    bool `pulumi:"unlimited"`
}

// DatasetRetentionPeriodInput is an input type that accepts DatasetRetentionPeriodArgs and DatasetRetentionPeriodOutput values.
// You can construct a concrete instance of `DatasetRetentionPeriodInput` via:
//
//          DatasetRetentionPeriodArgs{...}
type DatasetRetentionPeriodInput interface {
	pulumi.Input

	ToDatasetRetentionPeriodOutput() DatasetRetentionPeriodOutput
	ToDatasetRetentionPeriodOutputWithContext(context.Context) DatasetRetentionPeriodOutput
}

type DatasetRetentionPeriodArgs struct {
	NumberOfDays pulumi.IntInput  `pulumi:"numberOfDays"`
	Unlimited    pulumi.BoolInput `pulumi:"unlimited"`
}

func (DatasetRetentionPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetRetentionPeriod)(nil)).Elem()
}

func (i DatasetRetentionPeriodArgs) ToDatasetRetentionPeriodOutput() DatasetRetentionPeriodOutput {
	return i.ToDatasetRetentionPeriodOutputWithContext(context.Background())
}

func (i DatasetRetentionPeriodArgs) ToDatasetRetentionPeriodOutputWithContext(ctx context.Context) DatasetRetentionPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetRetentionPeriodOutput)
}

func (i DatasetRetentionPeriodArgs) ToDatasetRetentionPeriodPtrOutput() DatasetRetentionPeriodPtrOutput {
	return i.ToDatasetRetentionPeriodPtrOutputWithContext(context.Background())
}

func (i DatasetRetentionPeriodArgs) ToDatasetRetentionPeriodPtrOutputWithContext(ctx context.Context) DatasetRetentionPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetRetentionPeriodOutput).ToDatasetRetentionPeriodPtrOutputWithContext(ctx)
}

// DatasetRetentionPeriodPtrInput is an input type that accepts DatasetRetentionPeriodArgs, DatasetRetentionPeriodPtr and DatasetRetentionPeriodPtrOutput values.
// You can construct a concrete instance of `DatasetRetentionPeriodPtrInput` via:
//
//          DatasetRetentionPeriodArgs{...}
//
//  or:
//
//          nil
type DatasetRetentionPeriodPtrInput interface {
	pulumi.Input

	ToDatasetRetentionPeriodPtrOutput() DatasetRetentionPeriodPtrOutput
	ToDatasetRetentionPeriodPtrOutputWithContext(context.Context) DatasetRetentionPeriodPtrOutput
}

type datasetRetentionPeriodPtrType DatasetRetentionPeriodArgs

func DatasetRetentionPeriodPtr(v *DatasetRetentionPeriodArgs) DatasetRetentionPeriodPtrInput {
	return (*datasetRetentionPeriodPtrType)(v)
}

func (*datasetRetentionPeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetRetentionPeriod)(nil)).Elem()
}

func (i *datasetRetentionPeriodPtrType) ToDatasetRetentionPeriodPtrOutput() DatasetRetentionPeriodPtrOutput {
	return i.ToDatasetRetentionPeriodPtrOutputWithContext(context.Background())
}

func (i *datasetRetentionPeriodPtrType) ToDatasetRetentionPeriodPtrOutputWithContext(ctx context.Context) DatasetRetentionPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetRetentionPeriodPtrOutput)
}

type DatasetRetentionPeriodOutput struct{ *pulumi.OutputState }

func (DatasetRetentionPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetRetentionPeriod)(nil)).Elem()
}

func (o DatasetRetentionPeriodOutput) ToDatasetRetentionPeriodOutput() DatasetRetentionPeriodOutput {
	return o
}

func (o DatasetRetentionPeriodOutput) ToDatasetRetentionPeriodOutputWithContext(ctx context.Context) DatasetRetentionPeriodOutput {
	return o
}

func (o DatasetRetentionPeriodOutput) ToDatasetRetentionPeriodPtrOutput() DatasetRetentionPeriodPtrOutput {
	return o.ToDatasetRetentionPeriodPtrOutputWithContext(context.Background())
}

func (o DatasetRetentionPeriodOutput) ToDatasetRetentionPeriodPtrOutputWithContext(ctx context.Context) DatasetRetentionPeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetRetentionPeriod) *DatasetRetentionPeriod {
		return &v
	}).(DatasetRetentionPeriodPtrOutput)
}

func (o DatasetRetentionPeriodOutput) NumberOfDays() pulumi.IntOutput {
	return o.ApplyT(func(v DatasetRetentionPeriod) int { return v.NumberOfDays }).(pulumi.IntOutput)
}

func (o DatasetRetentionPeriodOutput) Unlimited() pulumi.BoolOutput {
	return o.ApplyT(func(v DatasetRetentionPeriod) bool { return v.Unlimited }).(pulumi.BoolOutput)
}

type DatasetRetentionPeriodPtrOutput struct{ *pulumi.OutputState }

func (DatasetRetentionPeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetRetentionPeriod)(nil)).Elem()
}

func (o DatasetRetentionPeriodPtrOutput) ToDatasetRetentionPeriodPtrOutput() DatasetRetentionPeriodPtrOutput {
	return o
}

func (o DatasetRetentionPeriodPtrOutput) ToDatasetRetentionPeriodPtrOutputWithContext(ctx context.Context) DatasetRetentionPeriodPtrOutput {
	return o
}

func (o DatasetRetentionPeriodPtrOutput) Elem() DatasetRetentionPeriodOutput {
	return o.ApplyT(func(v *DatasetRetentionPeriod) DatasetRetentionPeriod {
		if v != nil {
			return *v
		}
		var ret DatasetRetentionPeriod
		return ret
	}).(DatasetRetentionPeriodOutput)
}

func (o DatasetRetentionPeriodPtrOutput) NumberOfDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatasetRetentionPeriod) *int {
		if v == nil {
			return nil
		}
		return &v.NumberOfDays
	}).(pulumi.IntPtrOutput)
}

func (o DatasetRetentionPeriodPtrOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetRetentionPeriod) *bool {
		if v == nil {
			return nil
		}
		return &v.Unlimited
	}).(pulumi.BoolPtrOutput)
}

type DatasetS3DestinationConfiguration struct {
	Bucket            string                    `pulumi:"bucket"`
	GlueConfiguration *DatasetGlueConfiguration `pulumi:"glueConfiguration"`
	Key               string                    `pulumi:"key"`
	RoleArn           string                    `pulumi:"roleArn"`
}

// DatasetS3DestinationConfigurationInput is an input type that accepts DatasetS3DestinationConfigurationArgs and DatasetS3DestinationConfigurationOutput values.
// You can construct a concrete instance of `DatasetS3DestinationConfigurationInput` via:
//
//          DatasetS3DestinationConfigurationArgs{...}
type DatasetS3DestinationConfigurationInput interface {
	pulumi.Input

	ToDatasetS3DestinationConfigurationOutput() DatasetS3DestinationConfigurationOutput
	ToDatasetS3DestinationConfigurationOutputWithContext(context.Context) DatasetS3DestinationConfigurationOutput
}

type DatasetS3DestinationConfigurationArgs struct {
	Bucket            pulumi.StringInput               `pulumi:"bucket"`
	GlueConfiguration DatasetGlueConfigurationPtrInput `pulumi:"glueConfiguration"`
	Key               pulumi.StringInput               `pulumi:"key"`
	RoleArn           pulumi.StringInput               `pulumi:"roleArn"`
}

func (DatasetS3DestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetS3DestinationConfiguration)(nil)).Elem()
}

func (i DatasetS3DestinationConfigurationArgs) ToDatasetS3DestinationConfigurationOutput() DatasetS3DestinationConfigurationOutput {
	return i.ToDatasetS3DestinationConfigurationOutputWithContext(context.Background())
}

func (i DatasetS3DestinationConfigurationArgs) ToDatasetS3DestinationConfigurationOutputWithContext(ctx context.Context) DatasetS3DestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetS3DestinationConfigurationOutput)
}

func (i DatasetS3DestinationConfigurationArgs) ToDatasetS3DestinationConfigurationPtrOutput() DatasetS3DestinationConfigurationPtrOutput {
	return i.ToDatasetS3DestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DatasetS3DestinationConfigurationArgs) ToDatasetS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetS3DestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetS3DestinationConfigurationOutput).ToDatasetS3DestinationConfigurationPtrOutputWithContext(ctx)
}

// DatasetS3DestinationConfigurationPtrInput is an input type that accepts DatasetS3DestinationConfigurationArgs, DatasetS3DestinationConfigurationPtr and DatasetS3DestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DatasetS3DestinationConfigurationPtrInput` via:
//
//          DatasetS3DestinationConfigurationArgs{...}
//
//  or:
//
//          nil
type DatasetS3DestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDatasetS3DestinationConfigurationPtrOutput() DatasetS3DestinationConfigurationPtrOutput
	ToDatasetS3DestinationConfigurationPtrOutputWithContext(context.Context) DatasetS3DestinationConfigurationPtrOutput
}

type datasetS3DestinationConfigurationPtrType DatasetS3DestinationConfigurationArgs

func DatasetS3DestinationConfigurationPtr(v *DatasetS3DestinationConfigurationArgs) DatasetS3DestinationConfigurationPtrInput {
	return (*datasetS3DestinationConfigurationPtrType)(v)
}

func (*datasetS3DestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetS3DestinationConfiguration)(nil)).Elem()
}

func (i *datasetS3DestinationConfigurationPtrType) ToDatasetS3DestinationConfigurationPtrOutput() DatasetS3DestinationConfigurationPtrOutput {
	return i.ToDatasetS3DestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *datasetS3DestinationConfigurationPtrType) ToDatasetS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetS3DestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetS3DestinationConfigurationPtrOutput)
}

type DatasetS3DestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetS3DestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetS3DestinationConfiguration)(nil)).Elem()
}

func (o DatasetS3DestinationConfigurationOutput) ToDatasetS3DestinationConfigurationOutput() DatasetS3DestinationConfigurationOutput {
	return o
}

func (o DatasetS3DestinationConfigurationOutput) ToDatasetS3DestinationConfigurationOutputWithContext(ctx context.Context) DatasetS3DestinationConfigurationOutput {
	return o
}

func (o DatasetS3DestinationConfigurationOutput) ToDatasetS3DestinationConfigurationPtrOutput() DatasetS3DestinationConfigurationPtrOutput {
	return o.ToDatasetS3DestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DatasetS3DestinationConfigurationOutput) ToDatasetS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetS3DestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetS3DestinationConfiguration) *DatasetS3DestinationConfiguration {
		return &v
	}).(DatasetS3DestinationConfigurationPtrOutput)
}

func (o DatasetS3DestinationConfigurationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetS3DestinationConfiguration) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o DatasetS3DestinationConfigurationOutput) GlueConfiguration() DatasetGlueConfigurationPtrOutput {
	return o.ApplyT(func(v DatasetS3DestinationConfiguration) *DatasetGlueConfiguration { return v.GlueConfiguration }).(DatasetGlueConfigurationPtrOutput)
}

func (o DatasetS3DestinationConfigurationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetS3DestinationConfiguration) string { return v.Key }).(pulumi.StringOutput)
}

func (o DatasetS3DestinationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetS3DestinationConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DatasetS3DestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatasetS3DestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetS3DestinationConfiguration)(nil)).Elem()
}

func (o DatasetS3DestinationConfigurationPtrOutput) ToDatasetS3DestinationConfigurationPtrOutput() DatasetS3DestinationConfigurationPtrOutput {
	return o
}

func (o DatasetS3DestinationConfigurationPtrOutput) ToDatasetS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DatasetS3DestinationConfigurationPtrOutput {
	return o
}

func (o DatasetS3DestinationConfigurationPtrOutput) Elem() DatasetS3DestinationConfigurationOutput {
	return o.ApplyT(func(v *DatasetS3DestinationConfiguration) DatasetS3DestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DatasetS3DestinationConfiguration
		return ret
	}).(DatasetS3DestinationConfigurationOutput)
}

func (o DatasetS3DestinationConfigurationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o DatasetS3DestinationConfigurationPtrOutput) GlueConfiguration() DatasetGlueConfigurationPtrOutput {
	return o.ApplyT(func(v *DatasetS3DestinationConfiguration) *DatasetGlueConfiguration {
		if v == nil {
			return nil
		}
		return v.GlueConfiguration
	}).(DatasetGlueConfigurationPtrOutput)
}

func (o DatasetS3DestinationConfigurationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o DatasetS3DestinationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type DatasetSchedule struct {
	ScheduleExpression string `pulumi:"scheduleExpression"`
}

// DatasetScheduleInput is an input type that accepts DatasetScheduleArgs and DatasetScheduleOutput values.
// You can construct a concrete instance of `DatasetScheduleInput` via:
//
//          DatasetScheduleArgs{...}
type DatasetScheduleInput interface {
	pulumi.Input

	ToDatasetScheduleOutput() DatasetScheduleOutput
	ToDatasetScheduleOutputWithContext(context.Context) DatasetScheduleOutput
}

type DatasetScheduleArgs struct {
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
}

func (DatasetScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetSchedule)(nil)).Elem()
}

func (i DatasetScheduleArgs) ToDatasetScheduleOutput() DatasetScheduleOutput {
	return i.ToDatasetScheduleOutputWithContext(context.Background())
}

func (i DatasetScheduleArgs) ToDatasetScheduleOutputWithContext(ctx context.Context) DatasetScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetScheduleOutput)
}

func (i DatasetScheduleArgs) ToDatasetSchedulePtrOutput() DatasetSchedulePtrOutput {
	return i.ToDatasetSchedulePtrOutputWithContext(context.Background())
}

func (i DatasetScheduleArgs) ToDatasetSchedulePtrOutputWithContext(ctx context.Context) DatasetSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetScheduleOutput).ToDatasetSchedulePtrOutputWithContext(ctx)
}

// DatasetSchedulePtrInput is an input type that accepts DatasetScheduleArgs, DatasetSchedulePtr and DatasetSchedulePtrOutput values.
// You can construct a concrete instance of `DatasetSchedulePtrInput` via:
//
//          DatasetScheduleArgs{...}
//
//  or:
//
//          nil
type DatasetSchedulePtrInput interface {
	pulumi.Input

	ToDatasetSchedulePtrOutput() DatasetSchedulePtrOutput
	ToDatasetSchedulePtrOutputWithContext(context.Context) DatasetSchedulePtrOutput
}

type datasetSchedulePtrType DatasetScheduleArgs

func DatasetSchedulePtr(v *DatasetScheduleArgs) DatasetSchedulePtrInput {
	return (*datasetSchedulePtrType)(v)
}

func (*datasetSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetSchedule)(nil)).Elem()
}

func (i *datasetSchedulePtrType) ToDatasetSchedulePtrOutput() DatasetSchedulePtrOutput {
	return i.ToDatasetSchedulePtrOutputWithContext(context.Background())
}

func (i *datasetSchedulePtrType) ToDatasetSchedulePtrOutputWithContext(ctx context.Context) DatasetSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetSchedulePtrOutput)
}

type DatasetScheduleOutput struct{ *pulumi.OutputState }

func (DatasetScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetSchedule)(nil)).Elem()
}

func (o DatasetScheduleOutput) ToDatasetScheduleOutput() DatasetScheduleOutput {
	return o
}

func (o DatasetScheduleOutput) ToDatasetScheduleOutputWithContext(ctx context.Context) DatasetScheduleOutput {
	return o
}

func (o DatasetScheduleOutput) ToDatasetSchedulePtrOutput() DatasetSchedulePtrOutput {
	return o.ToDatasetSchedulePtrOutputWithContext(context.Background())
}

func (o DatasetScheduleOutput) ToDatasetSchedulePtrOutputWithContext(ctx context.Context) DatasetSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetSchedule) *DatasetSchedule {
		return &v
	}).(DatasetSchedulePtrOutput)
}

func (o DatasetScheduleOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetSchedule) string { return v.ScheduleExpression }).(pulumi.StringOutput)
}

type DatasetSchedulePtrOutput struct{ *pulumi.OutputState }

func (DatasetSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetSchedule)(nil)).Elem()
}

func (o DatasetSchedulePtrOutput) ToDatasetSchedulePtrOutput() DatasetSchedulePtrOutput {
	return o
}

func (o DatasetSchedulePtrOutput) ToDatasetSchedulePtrOutputWithContext(ctx context.Context) DatasetSchedulePtrOutput {
	return o
}

func (o DatasetSchedulePtrOutput) Elem() DatasetScheduleOutput {
	return o.ApplyT(func(v *DatasetSchedule) DatasetSchedule {
		if v != nil {
			return *v
		}
		var ret DatasetSchedule
		return ret
	}).(DatasetScheduleOutput)
}

func (o DatasetSchedulePtrOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleExpression
	}).(pulumi.StringPtrOutput)
}

type DatasetTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DatasetTagInput is an input type that accepts DatasetTagArgs and DatasetTagOutput values.
// You can construct a concrete instance of `DatasetTagInput` via:
//
//          DatasetTagArgs{...}
type DatasetTagInput interface {
	pulumi.Input

	ToDatasetTagOutput() DatasetTagOutput
	ToDatasetTagOutputWithContext(context.Context) DatasetTagOutput
}

type DatasetTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatasetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetTag)(nil)).Elem()
}

func (i DatasetTagArgs) ToDatasetTagOutput() DatasetTagOutput {
	return i.ToDatasetTagOutputWithContext(context.Background())
}

func (i DatasetTagArgs) ToDatasetTagOutputWithContext(ctx context.Context) DatasetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetTagOutput)
}

// DatasetTagArrayInput is an input type that accepts DatasetTagArray and DatasetTagArrayOutput values.
// You can construct a concrete instance of `DatasetTagArrayInput` via:
//
//          DatasetTagArray{ DatasetTagArgs{...} }
type DatasetTagArrayInput interface {
	pulumi.Input

	ToDatasetTagArrayOutput() DatasetTagArrayOutput
	ToDatasetTagArrayOutputWithContext(context.Context) DatasetTagArrayOutput
}

type DatasetTagArray []DatasetTagInput

func (DatasetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetTag)(nil)).Elem()
}

func (i DatasetTagArray) ToDatasetTagArrayOutput() DatasetTagArrayOutput {
	return i.ToDatasetTagArrayOutputWithContext(context.Background())
}

func (i DatasetTagArray) ToDatasetTagArrayOutputWithContext(ctx context.Context) DatasetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetTagArrayOutput)
}

type DatasetTagOutput struct{ *pulumi.OutputState }

func (DatasetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetTag)(nil)).Elem()
}

func (o DatasetTagOutput) ToDatasetTagOutput() DatasetTagOutput {
	return o
}

func (o DatasetTagOutput) ToDatasetTagOutputWithContext(ctx context.Context) DatasetTagOutput {
	return o
}

func (o DatasetTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DatasetTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetTag) string { return v.Value }).(pulumi.StringOutput)
}

type DatasetTagArrayOutput struct{ *pulumi.OutputState }

func (DatasetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetTag)(nil)).Elem()
}

func (o DatasetTagArrayOutput) ToDatasetTagArrayOutput() DatasetTagArrayOutput {
	return o
}

func (o DatasetTagArrayOutput) ToDatasetTagArrayOutputWithContext(ctx context.Context) DatasetTagArrayOutput {
	return o
}

func (o DatasetTagArrayOutput) Index(i pulumi.IntInput) DatasetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetTag {
		return vs[0].([]DatasetTag)[vs[1].(int)]
	}).(DatasetTagOutput)
}

type DatasetTrigger struct {
	Schedule          *DatasetSchedule          `pulumi:"schedule"`
	TriggeringDataset *DatasetTriggeringDataset `pulumi:"triggeringDataset"`
}

// DatasetTriggerInput is an input type that accepts DatasetTriggerArgs and DatasetTriggerOutput values.
// You can construct a concrete instance of `DatasetTriggerInput` via:
//
//          DatasetTriggerArgs{...}
type DatasetTriggerInput interface {
	pulumi.Input

	ToDatasetTriggerOutput() DatasetTriggerOutput
	ToDatasetTriggerOutputWithContext(context.Context) DatasetTriggerOutput
}

type DatasetTriggerArgs struct {
	Schedule          DatasetSchedulePtrInput          `pulumi:"schedule"`
	TriggeringDataset DatasetTriggeringDatasetPtrInput `pulumi:"triggeringDataset"`
}

func (DatasetTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetTrigger)(nil)).Elem()
}

func (i DatasetTriggerArgs) ToDatasetTriggerOutput() DatasetTriggerOutput {
	return i.ToDatasetTriggerOutputWithContext(context.Background())
}

func (i DatasetTriggerArgs) ToDatasetTriggerOutputWithContext(ctx context.Context) DatasetTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetTriggerOutput)
}

// DatasetTriggerArrayInput is an input type that accepts DatasetTriggerArray and DatasetTriggerArrayOutput values.
// You can construct a concrete instance of `DatasetTriggerArrayInput` via:
//
//          DatasetTriggerArray{ DatasetTriggerArgs{...} }
type DatasetTriggerArrayInput interface {
	pulumi.Input

	ToDatasetTriggerArrayOutput() DatasetTriggerArrayOutput
	ToDatasetTriggerArrayOutputWithContext(context.Context) DatasetTriggerArrayOutput
}

type DatasetTriggerArray []DatasetTriggerInput

func (DatasetTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetTrigger)(nil)).Elem()
}

func (i DatasetTriggerArray) ToDatasetTriggerArrayOutput() DatasetTriggerArrayOutput {
	return i.ToDatasetTriggerArrayOutputWithContext(context.Background())
}

func (i DatasetTriggerArray) ToDatasetTriggerArrayOutputWithContext(ctx context.Context) DatasetTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetTriggerArrayOutput)
}

type DatasetTriggerOutput struct{ *pulumi.OutputState }

func (DatasetTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetTrigger)(nil)).Elem()
}

func (o DatasetTriggerOutput) ToDatasetTriggerOutput() DatasetTriggerOutput {
	return o
}

func (o DatasetTriggerOutput) ToDatasetTriggerOutputWithContext(ctx context.Context) DatasetTriggerOutput {
	return o
}

func (o DatasetTriggerOutput) Schedule() DatasetSchedulePtrOutput {
	return o.ApplyT(func(v DatasetTrigger) *DatasetSchedule { return v.Schedule }).(DatasetSchedulePtrOutput)
}

func (o DatasetTriggerOutput) TriggeringDataset() DatasetTriggeringDatasetPtrOutput {
	return o.ApplyT(func(v DatasetTrigger) *DatasetTriggeringDataset { return v.TriggeringDataset }).(DatasetTriggeringDatasetPtrOutput)
}

type DatasetTriggerArrayOutput struct{ *pulumi.OutputState }

func (DatasetTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetTrigger)(nil)).Elem()
}

func (o DatasetTriggerArrayOutput) ToDatasetTriggerArrayOutput() DatasetTriggerArrayOutput {
	return o
}

func (o DatasetTriggerArrayOutput) ToDatasetTriggerArrayOutputWithContext(ctx context.Context) DatasetTriggerArrayOutput {
	return o
}

func (o DatasetTriggerArrayOutput) Index(i pulumi.IntInput) DatasetTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetTrigger {
		return vs[0].([]DatasetTrigger)[vs[1].(int)]
	}).(DatasetTriggerOutput)
}

type DatasetTriggeringDataset struct {
	DatasetName string `pulumi:"datasetName"`
}

// DatasetTriggeringDatasetInput is an input type that accepts DatasetTriggeringDatasetArgs and DatasetTriggeringDatasetOutput values.
// You can construct a concrete instance of `DatasetTriggeringDatasetInput` via:
//
//          DatasetTriggeringDatasetArgs{...}
type DatasetTriggeringDatasetInput interface {
	pulumi.Input

	ToDatasetTriggeringDatasetOutput() DatasetTriggeringDatasetOutput
	ToDatasetTriggeringDatasetOutputWithContext(context.Context) DatasetTriggeringDatasetOutput
}

type DatasetTriggeringDatasetArgs struct {
	DatasetName pulumi.StringInput `pulumi:"datasetName"`
}

func (DatasetTriggeringDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetTriggeringDataset)(nil)).Elem()
}

func (i DatasetTriggeringDatasetArgs) ToDatasetTriggeringDatasetOutput() DatasetTriggeringDatasetOutput {
	return i.ToDatasetTriggeringDatasetOutputWithContext(context.Background())
}

func (i DatasetTriggeringDatasetArgs) ToDatasetTriggeringDatasetOutputWithContext(ctx context.Context) DatasetTriggeringDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetTriggeringDatasetOutput)
}

func (i DatasetTriggeringDatasetArgs) ToDatasetTriggeringDatasetPtrOutput() DatasetTriggeringDatasetPtrOutput {
	return i.ToDatasetTriggeringDatasetPtrOutputWithContext(context.Background())
}

func (i DatasetTriggeringDatasetArgs) ToDatasetTriggeringDatasetPtrOutputWithContext(ctx context.Context) DatasetTriggeringDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetTriggeringDatasetOutput).ToDatasetTriggeringDatasetPtrOutputWithContext(ctx)
}

// DatasetTriggeringDatasetPtrInput is an input type that accepts DatasetTriggeringDatasetArgs, DatasetTriggeringDatasetPtr and DatasetTriggeringDatasetPtrOutput values.
// You can construct a concrete instance of `DatasetTriggeringDatasetPtrInput` via:
//
//          DatasetTriggeringDatasetArgs{...}
//
//  or:
//
//          nil
type DatasetTriggeringDatasetPtrInput interface {
	pulumi.Input

	ToDatasetTriggeringDatasetPtrOutput() DatasetTriggeringDatasetPtrOutput
	ToDatasetTriggeringDatasetPtrOutputWithContext(context.Context) DatasetTriggeringDatasetPtrOutput
}

type datasetTriggeringDatasetPtrType DatasetTriggeringDatasetArgs

func DatasetTriggeringDatasetPtr(v *DatasetTriggeringDatasetArgs) DatasetTriggeringDatasetPtrInput {
	return (*datasetTriggeringDatasetPtrType)(v)
}

func (*datasetTriggeringDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetTriggeringDataset)(nil)).Elem()
}

func (i *datasetTriggeringDatasetPtrType) ToDatasetTriggeringDatasetPtrOutput() DatasetTriggeringDatasetPtrOutput {
	return i.ToDatasetTriggeringDatasetPtrOutputWithContext(context.Background())
}

func (i *datasetTriggeringDatasetPtrType) ToDatasetTriggeringDatasetPtrOutputWithContext(ctx context.Context) DatasetTriggeringDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetTriggeringDatasetPtrOutput)
}

type DatasetTriggeringDatasetOutput struct{ *pulumi.OutputState }

func (DatasetTriggeringDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetTriggeringDataset)(nil)).Elem()
}

func (o DatasetTriggeringDatasetOutput) ToDatasetTriggeringDatasetOutput() DatasetTriggeringDatasetOutput {
	return o
}

func (o DatasetTriggeringDatasetOutput) ToDatasetTriggeringDatasetOutputWithContext(ctx context.Context) DatasetTriggeringDatasetOutput {
	return o
}

func (o DatasetTriggeringDatasetOutput) ToDatasetTriggeringDatasetPtrOutput() DatasetTriggeringDatasetPtrOutput {
	return o.ToDatasetTriggeringDatasetPtrOutputWithContext(context.Background())
}

func (o DatasetTriggeringDatasetOutput) ToDatasetTriggeringDatasetPtrOutputWithContext(ctx context.Context) DatasetTriggeringDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetTriggeringDataset) *DatasetTriggeringDataset {
		return &v
	}).(DatasetTriggeringDatasetPtrOutput)
}

func (o DatasetTriggeringDatasetOutput) DatasetName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetTriggeringDataset) string { return v.DatasetName }).(pulumi.StringOutput)
}

type DatasetTriggeringDatasetPtrOutput struct{ *pulumi.OutputState }

func (DatasetTriggeringDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetTriggeringDataset)(nil)).Elem()
}

func (o DatasetTriggeringDatasetPtrOutput) ToDatasetTriggeringDatasetPtrOutput() DatasetTriggeringDatasetPtrOutput {
	return o
}

func (o DatasetTriggeringDatasetPtrOutput) ToDatasetTriggeringDatasetPtrOutputWithContext(ctx context.Context) DatasetTriggeringDatasetPtrOutput {
	return o
}

func (o DatasetTriggeringDatasetPtrOutput) Elem() DatasetTriggeringDatasetOutput {
	return o.ApplyT(func(v *DatasetTriggeringDataset) DatasetTriggeringDataset {
		if v != nil {
			return *v
		}
		var ret DatasetTriggeringDataset
		return ret
	}).(DatasetTriggeringDatasetOutput)
}

func (o DatasetTriggeringDatasetPtrOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatasetTriggeringDataset) *string {
		if v == nil {
			return nil
		}
		return &v.DatasetName
	}).(pulumi.StringPtrOutput)
}

type DatasetVariable struct {
	DatasetContentVersionValue *DatasetContentVersionValue `pulumi:"datasetContentVersionValue"`
	DoubleValue                *float64                    `pulumi:"doubleValue"`
	OutputFileUriValue         *DatasetOutputFileUriValue  `pulumi:"outputFileUriValue"`
	StringValue                *string                     `pulumi:"stringValue"`
	VariableName               string                      `pulumi:"variableName"`
}

// DatasetVariableInput is an input type that accepts DatasetVariableArgs and DatasetVariableOutput values.
// You can construct a concrete instance of `DatasetVariableInput` via:
//
//          DatasetVariableArgs{...}
type DatasetVariableInput interface {
	pulumi.Input

	ToDatasetVariableOutput() DatasetVariableOutput
	ToDatasetVariableOutputWithContext(context.Context) DatasetVariableOutput
}

type DatasetVariableArgs struct {
	DatasetContentVersionValue DatasetContentVersionValuePtrInput `pulumi:"datasetContentVersionValue"`
	DoubleValue                pulumi.Float64PtrInput             `pulumi:"doubleValue"`
	OutputFileUriValue         DatasetOutputFileUriValuePtrInput  `pulumi:"outputFileUriValue"`
	StringValue                pulumi.StringPtrInput              `pulumi:"stringValue"`
	VariableName               pulumi.StringInput                 `pulumi:"variableName"`
}

func (DatasetVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetVariable)(nil)).Elem()
}

func (i DatasetVariableArgs) ToDatasetVariableOutput() DatasetVariableOutput {
	return i.ToDatasetVariableOutputWithContext(context.Background())
}

func (i DatasetVariableArgs) ToDatasetVariableOutputWithContext(ctx context.Context) DatasetVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetVariableOutput)
}

// DatasetVariableArrayInput is an input type that accepts DatasetVariableArray and DatasetVariableArrayOutput values.
// You can construct a concrete instance of `DatasetVariableArrayInput` via:
//
//          DatasetVariableArray{ DatasetVariableArgs{...} }
type DatasetVariableArrayInput interface {
	pulumi.Input

	ToDatasetVariableArrayOutput() DatasetVariableArrayOutput
	ToDatasetVariableArrayOutputWithContext(context.Context) DatasetVariableArrayOutput
}

type DatasetVariableArray []DatasetVariableInput

func (DatasetVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetVariable)(nil)).Elem()
}

func (i DatasetVariableArray) ToDatasetVariableArrayOutput() DatasetVariableArrayOutput {
	return i.ToDatasetVariableArrayOutputWithContext(context.Background())
}

func (i DatasetVariableArray) ToDatasetVariableArrayOutputWithContext(ctx context.Context) DatasetVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetVariableArrayOutput)
}

type DatasetVariableOutput struct{ *pulumi.OutputState }

func (DatasetVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetVariable)(nil)).Elem()
}

func (o DatasetVariableOutput) ToDatasetVariableOutput() DatasetVariableOutput {
	return o
}

func (o DatasetVariableOutput) ToDatasetVariableOutputWithContext(ctx context.Context) DatasetVariableOutput {
	return o
}

func (o DatasetVariableOutput) DatasetContentVersionValue() DatasetContentVersionValuePtrOutput {
	return o.ApplyT(func(v DatasetVariable) *DatasetContentVersionValue { return v.DatasetContentVersionValue }).(DatasetContentVersionValuePtrOutput)
}

func (o DatasetVariableOutput) DoubleValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DatasetVariable) *float64 { return v.DoubleValue }).(pulumi.Float64PtrOutput)
}

func (o DatasetVariableOutput) OutputFileUriValue() DatasetOutputFileUriValuePtrOutput {
	return o.ApplyT(func(v DatasetVariable) *DatasetOutputFileUriValue { return v.OutputFileUriValue }).(DatasetOutputFileUriValuePtrOutput)
}

func (o DatasetVariableOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatasetVariable) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

func (o DatasetVariableOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v DatasetVariable) string { return v.VariableName }).(pulumi.StringOutput)
}

type DatasetVariableArrayOutput struct{ *pulumi.OutputState }

func (DatasetVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatasetVariable)(nil)).Elem()
}

func (o DatasetVariableArrayOutput) ToDatasetVariableArrayOutput() DatasetVariableArrayOutput {
	return o
}

func (o DatasetVariableArrayOutput) ToDatasetVariableArrayOutputWithContext(ctx context.Context) DatasetVariableArrayOutput {
	return o
}

func (o DatasetVariableArrayOutput) Index(i pulumi.IntInput) DatasetVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatasetVariable {
		return vs[0].([]DatasetVariable)[vs[1].(int)]
	}).(DatasetVariableOutput)
}

type DatasetVersioningConfiguration struct {
	MaxVersions *int  `pulumi:"maxVersions"`
	Unlimited   *bool `pulumi:"unlimited"`
}

// DatasetVersioningConfigurationInput is an input type that accepts DatasetVersioningConfigurationArgs and DatasetVersioningConfigurationOutput values.
// You can construct a concrete instance of `DatasetVersioningConfigurationInput` via:
//
//          DatasetVersioningConfigurationArgs{...}
type DatasetVersioningConfigurationInput interface {
	pulumi.Input

	ToDatasetVersioningConfigurationOutput() DatasetVersioningConfigurationOutput
	ToDatasetVersioningConfigurationOutputWithContext(context.Context) DatasetVersioningConfigurationOutput
}

type DatasetVersioningConfigurationArgs struct {
	MaxVersions pulumi.IntPtrInput  `pulumi:"maxVersions"`
	Unlimited   pulumi.BoolPtrInput `pulumi:"unlimited"`
}

func (DatasetVersioningConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetVersioningConfiguration)(nil)).Elem()
}

func (i DatasetVersioningConfigurationArgs) ToDatasetVersioningConfigurationOutput() DatasetVersioningConfigurationOutput {
	return i.ToDatasetVersioningConfigurationOutputWithContext(context.Background())
}

func (i DatasetVersioningConfigurationArgs) ToDatasetVersioningConfigurationOutputWithContext(ctx context.Context) DatasetVersioningConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetVersioningConfigurationOutput)
}

func (i DatasetVersioningConfigurationArgs) ToDatasetVersioningConfigurationPtrOutput() DatasetVersioningConfigurationPtrOutput {
	return i.ToDatasetVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (i DatasetVersioningConfigurationArgs) ToDatasetVersioningConfigurationPtrOutputWithContext(ctx context.Context) DatasetVersioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetVersioningConfigurationOutput).ToDatasetVersioningConfigurationPtrOutputWithContext(ctx)
}

// DatasetVersioningConfigurationPtrInput is an input type that accepts DatasetVersioningConfigurationArgs, DatasetVersioningConfigurationPtr and DatasetVersioningConfigurationPtrOutput values.
// You can construct a concrete instance of `DatasetVersioningConfigurationPtrInput` via:
//
//          DatasetVersioningConfigurationArgs{...}
//
//  or:
//
//          nil
type DatasetVersioningConfigurationPtrInput interface {
	pulumi.Input

	ToDatasetVersioningConfigurationPtrOutput() DatasetVersioningConfigurationPtrOutput
	ToDatasetVersioningConfigurationPtrOutputWithContext(context.Context) DatasetVersioningConfigurationPtrOutput
}

type datasetVersioningConfigurationPtrType DatasetVersioningConfigurationArgs

func DatasetVersioningConfigurationPtr(v *DatasetVersioningConfigurationArgs) DatasetVersioningConfigurationPtrInput {
	return (*datasetVersioningConfigurationPtrType)(v)
}

func (*datasetVersioningConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetVersioningConfiguration)(nil)).Elem()
}

func (i *datasetVersioningConfigurationPtrType) ToDatasetVersioningConfigurationPtrOutput() DatasetVersioningConfigurationPtrOutput {
	return i.ToDatasetVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (i *datasetVersioningConfigurationPtrType) ToDatasetVersioningConfigurationPtrOutputWithContext(ctx context.Context) DatasetVersioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatasetVersioningConfigurationPtrOutput)
}

type DatasetVersioningConfigurationOutput struct{ *pulumi.OutputState }

func (DatasetVersioningConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetVersioningConfiguration)(nil)).Elem()
}

func (o DatasetVersioningConfigurationOutput) ToDatasetVersioningConfigurationOutput() DatasetVersioningConfigurationOutput {
	return o
}

func (o DatasetVersioningConfigurationOutput) ToDatasetVersioningConfigurationOutputWithContext(ctx context.Context) DatasetVersioningConfigurationOutput {
	return o
}

func (o DatasetVersioningConfigurationOutput) ToDatasetVersioningConfigurationPtrOutput() DatasetVersioningConfigurationPtrOutput {
	return o.ToDatasetVersioningConfigurationPtrOutputWithContext(context.Background())
}

func (o DatasetVersioningConfigurationOutput) ToDatasetVersioningConfigurationPtrOutputWithContext(ctx context.Context) DatasetVersioningConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetVersioningConfiguration) *DatasetVersioningConfiguration {
		return &v
	}).(DatasetVersioningConfigurationPtrOutput)
}

func (o DatasetVersioningConfigurationOutput) MaxVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatasetVersioningConfiguration) *int { return v.MaxVersions }).(pulumi.IntPtrOutput)
}

func (o DatasetVersioningConfigurationOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatasetVersioningConfiguration) *bool { return v.Unlimited }).(pulumi.BoolPtrOutput)
}

type DatasetVersioningConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatasetVersioningConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetVersioningConfiguration)(nil)).Elem()
}

func (o DatasetVersioningConfigurationPtrOutput) ToDatasetVersioningConfigurationPtrOutput() DatasetVersioningConfigurationPtrOutput {
	return o
}

func (o DatasetVersioningConfigurationPtrOutput) ToDatasetVersioningConfigurationPtrOutputWithContext(ctx context.Context) DatasetVersioningConfigurationPtrOutput {
	return o
}

func (o DatasetVersioningConfigurationPtrOutput) Elem() DatasetVersioningConfigurationOutput {
	return o.ApplyT(func(v *DatasetVersioningConfiguration) DatasetVersioningConfiguration {
		if v != nil {
			return *v
		}
		var ret DatasetVersioningConfiguration
		return ret
	}).(DatasetVersioningConfigurationOutput)
}

func (o DatasetVersioningConfigurationPtrOutput) MaxVersions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatasetVersioningConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxVersions
	}).(pulumi.IntPtrOutput)
}

func (o DatasetVersioningConfigurationPtrOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatasetVersioningConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Unlimited
	}).(pulumi.BoolPtrOutput)
}

type DatastoreColumn struct {
	Name string `pulumi:"name"`
	Type string `pulumi:"type"`
}

// DatastoreColumnInput is an input type that accepts DatastoreColumnArgs and DatastoreColumnOutput values.
// You can construct a concrete instance of `DatastoreColumnInput` via:
//
//          DatastoreColumnArgs{...}
type DatastoreColumnInput interface {
	pulumi.Input

	ToDatastoreColumnOutput() DatastoreColumnOutput
	ToDatastoreColumnOutputWithContext(context.Context) DatastoreColumnOutput
}

type DatastoreColumnArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (DatastoreColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreColumn)(nil)).Elem()
}

func (i DatastoreColumnArgs) ToDatastoreColumnOutput() DatastoreColumnOutput {
	return i.ToDatastoreColumnOutputWithContext(context.Background())
}

func (i DatastoreColumnArgs) ToDatastoreColumnOutputWithContext(ctx context.Context) DatastoreColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreColumnOutput)
}

// DatastoreColumnArrayInput is an input type that accepts DatastoreColumnArray and DatastoreColumnArrayOutput values.
// You can construct a concrete instance of `DatastoreColumnArrayInput` via:
//
//          DatastoreColumnArray{ DatastoreColumnArgs{...} }
type DatastoreColumnArrayInput interface {
	pulumi.Input

	ToDatastoreColumnArrayOutput() DatastoreColumnArrayOutput
	ToDatastoreColumnArrayOutputWithContext(context.Context) DatastoreColumnArrayOutput
}

type DatastoreColumnArray []DatastoreColumnInput

func (DatastoreColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastoreColumn)(nil)).Elem()
}

func (i DatastoreColumnArray) ToDatastoreColumnArrayOutput() DatastoreColumnArrayOutput {
	return i.ToDatastoreColumnArrayOutputWithContext(context.Background())
}

func (i DatastoreColumnArray) ToDatastoreColumnArrayOutputWithContext(ctx context.Context) DatastoreColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreColumnArrayOutput)
}

type DatastoreColumnOutput struct{ *pulumi.OutputState }

func (DatastoreColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreColumn)(nil)).Elem()
}

func (o DatastoreColumnOutput) ToDatastoreColumnOutput() DatastoreColumnOutput {
	return o
}

func (o DatastoreColumnOutput) ToDatastoreColumnOutputWithContext(ctx context.Context) DatastoreColumnOutput {
	return o
}

func (o DatastoreColumnOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreColumn) string { return v.Name }).(pulumi.StringOutput)
}

func (o DatastoreColumnOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreColumn) string { return v.Type }).(pulumi.StringOutput)
}

type DatastoreColumnArrayOutput struct{ *pulumi.OutputState }

func (DatastoreColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastoreColumn)(nil)).Elem()
}

func (o DatastoreColumnArrayOutput) ToDatastoreColumnArrayOutput() DatastoreColumnArrayOutput {
	return o
}

func (o DatastoreColumnArrayOutput) ToDatastoreColumnArrayOutputWithContext(ctx context.Context) DatastoreColumnArrayOutput {
	return o
}

func (o DatastoreColumnArrayOutput) Index(i pulumi.IntInput) DatastoreColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatastoreColumn {
		return vs[0].([]DatastoreColumn)[vs[1].(int)]
	}).(DatastoreColumnOutput)
}

type DatastoreCustomerManagedS3 struct {
	Bucket    string  `pulumi:"bucket"`
	KeyPrefix *string `pulumi:"keyPrefix"`
	RoleArn   string  `pulumi:"roleArn"`
}

// DatastoreCustomerManagedS3Input is an input type that accepts DatastoreCustomerManagedS3Args and DatastoreCustomerManagedS3Output values.
// You can construct a concrete instance of `DatastoreCustomerManagedS3Input` via:
//
//          DatastoreCustomerManagedS3Args{...}
type DatastoreCustomerManagedS3Input interface {
	pulumi.Input

	ToDatastoreCustomerManagedS3Output() DatastoreCustomerManagedS3Output
	ToDatastoreCustomerManagedS3OutputWithContext(context.Context) DatastoreCustomerManagedS3Output
}

type DatastoreCustomerManagedS3Args struct {
	Bucket    pulumi.StringInput    `pulumi:"bucket"`
	KeyPrefix pulumi.StringPtrInput `pulumi:"keyPrefix"`
	RoleArn   pulumi.StringInput    `pulumi:"roleArn"`
}

func (DatastoreCustomerManagedS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreCustomerManagedS3)(nil)).Elem()
}

func (i DatastoreCustomerManagedS3Args) ToDatastoreCustomerManagedS3Output() DatastoreCustomerManagedS3Output {
	return i.ToDatastoreCustomerManagedS3OutputWithContext(context.Background())
}

func (i DatastoreCustomerManagedS3Args) ToDatastoreCustomerManagedS3OutputWithContext(ctx context.Context) DatastoreCustomerManagedS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreCustomerManagedS3Output)
}

func (i DatastoreCustomerManagedS3Args) ToDatastoreCustomerManagedS3PtrOutput() DatastoreCustomerManagedS3PtrOutput {
	return i.ToDatastoreCustomerManagedS3PtrOutputWithContext(context.Background())
}

func (i DatastoreCustomerManagedS3Args) ToDatastoreCustomerManagedS3PtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreCustomerManagedS3Output).ToDatastoreCustomerManagedS3PtrOutputWithContext(ctx)
}

// DatastoreCustomerManagedS3PtrInput is an input type that accepts DatastoreCustomerManagedS3Args, DatastoreCustomerManagedS3Ptr and DatastoreCustomerManagedS3PtrOutput values.
// You can construct a concrete instance of `DatastoreCustomerManagedS3PtrInput` via:
//
//          DatastoreCustomerManagedS3Args{...}
//
//  or:
//
//          nil
type DatastoreCustomerManagedS3PtrInput interface {
	pulumi.Input

	ToDatastoreCustomerManagedS3PtrOutput() DatastoreCustomerManagedS3PtrOutput
	ToDatastoreCustomerManagedS3PtrOutputWithContext(context.Context) DatastoreCustomerManagedS3PtrOutput
}

type datastoreCustomerManagedS3PtrType DatastoreCustomerManagedS3Args

func DatastoreCustomerManagedS3Ptr(v *DatastoreCustomerManagedS3Args) DatastoreCustomerManagedS3PtrInput {
	return (*datastoreCustomerManagedS3PtrType)(v)
}

func (*datastoreCustomerManagedS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreCustomerManagedS3)(nil)).Elem()
}

func (i *datastoreCustomerManagedS3PtrType) ToDatastoreCustomerManagedS3PtrOutput() DatastoreCustomerManagedS3PtrOutput {
	return i.ToDatastoreCustomerManagedS3PtrOutputWithContext(context.Background())
}

func (i *datastoreCustomerManagedS3PtrType) ToDatastoreCustomerManagedS3PtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreCustomerManagedS3PtrOutput)
}

type DatastoreCustomerManagedS3Output struct{ *pulumi.OutputState }

func (DatastoreCustomerManagedS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreCustomerManagedS3)(nil)).Elem()
}

func (o DatastoreCustomerManagedS3Output) ToDatastoreCustomerManagedS3Output() DatastoreCustomerManagedS3Output {
	return o
}

func (o DatastoreCustomerManagedS3Output) ToDatastoreCustomerManagedS3OutputWithContext(ctx context.Context) DatastoreCustomerManagedS3Output {
	return o
}

func (o DatastoreCustomerManagedS3Output) ToDatastoreCustomerManagedS3PtrOutput() DatastoreCustomerManagedS3PtrOutput {
	return o.ToDatastoreCustomerManagedS3PtrOutputWithContext(context.Background())
}

func (o DatastoreCustomerManagedS3Output) ToDatastoreCustomerManagedS3PtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreCustomerManagedS3) *DatastoreCustomerManagedS3 {
		return &v
	}).(DatastoreCustomerManagedS3PtrOutput)
}

func (o DatastoreCustomerManagedS3Output) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreCustomerManagedS3) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o DatastoreCustomerManagedS3Output) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatastoreCustomerManagedS3) *string { return v.KeyPrefix }).(pulumi.StringPtrOutput)
}

func (o DatastoreCustomerManagedS3Output) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreCustomerManagedS3) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DatastoreCustomerManagedS3PtrOutput struct{ *pulumi.OutputState }

func (DatastoreCustomerManagedS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreCustomerManagedS3)(nil)).Elem()
}

func (o DatastoreCustomerManagedS3PtrOutput) ToDatastoreCustomerManagedS3PtrOutput() DatastoreCustomerManagedS3PtrOutput {
	return o
}

func (o DatastoreCustomerManagedS3PtrOutput) ToDatastoreCustomerManagedS3PtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3PtrOutput {
	return o
}

func (o DatastoreCustomerManagedS3PtrOutput) Elem() DatastoreCustomerManagedS3Output {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3) DatastoreCustomerManagedS3 {
		if v != nil {
			return *v
		}
		var ret DatastoreCustomerManagedS3
		return ret
	}).(DatastoreCustomerManagedS3Output)
}

func (o DatastoreCustomerManagedS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o DatastoreCustomerManagedS3PtrOutput) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3) *string {
		if v == nil {
			return nil
		}
		return v.KeyPrefix
	}).(pulumi.StringPtrOutput)
}

func (o DatastoreCustomerManagedS3PtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type DatastoreCustomerManagedS3Storage struct {
	Bucket    string  `pulumi:"bucket"`
	KeyPrefix *string `pulumi:"keyPrefix"`
}

// DatastoreCustomerManagedS3StorageInput is an input type that accepts DatastoreCustomerManagedS3StorageArgs and DatastoreCustomerManagedS3StorageOutput values.
// You can construct a concrete instance of `DatastoreCustomerManagedS3StorageInput` via:
//
//          DatastoreCustomerManagedS3StorageArgs{...}
type DatastoreCustomerManagedS3StorageInput interface {
	pulumi.Input

	ToDatastoreCustomerManagedS3StorageOutput() DatastoreCustomerManagedS3StorageOutput
	ToDatastoreCustomerManagedS3StorageOutputWithContext(context.Context) DatastoreCustomerManagedS3StorageOutput
}

type DatastoreCustomerManagedS3StorageArgs struct {
	Bucket    pulumi.StringInput    `pulumi:"bucket"`
	KeyPrefix pulumi.StringPtrInput `pulumi:"keyPrefix"`
}

func (DatastoreCustomerManagedS3StorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreCustomerManagedS3Storage)(nil)).Elem()
}

func (i DatastoreCustomerManagedS3StorageArgs) ToDatastoreCustomerManagedS3StorageOutput() DatastoreCustomerManagedS3StorageOutput {
	return i.ToDatastoreCustomerManagedS3StorageOutputWithContext(context.Background())
}

func (i DatastoreCustomerManagedS3StorageArgs) ToDatastoreCustomerManagedS3StorageOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3StorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreCustomerManagedS3StorageOutput)
}

func (i DatastoreCustomerManagedS3StorageArgs) ToDatastoreCustomerManagedS3StoragePtrOutput() DatastoreCustomerManagedS3StoragePtrOutput {
	return i.ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(context.Background())
}

func (i DatastoreCustomerManagedS3StorageArgs) ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3StoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreCustomerManagedS3StorageOutput).ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(ctx)
}

// DatastoreCustomerManagedS3StoragePtrInput is an input type that accepts DatastoreCustomerManagedS3StorageArgs, DatastoreCustomerManagedS3StoragePtr and DatastoreCustomerManagedS3StoragePtrOutput values.
// You can construct a concrete instance of `DatastoreCustomerManagedS3StoragePtrInput` via:
//
//          DatastoreCustomerManagedS3StorageArgs{...}
//
//  or:
//
//          nil
type DatastoreCustomerManagedS3StoragePtrInput interface {
	pulumi.Input

	ToDatastoreCustomerManagedS3StoragePtrOutput() DatastoreCustomerManagedS3StoragePtrOutput
	ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(context.Context) DatastoreCustomerManagedS3StoragePtrOutput
}

type datastoreCustomerManagedS3StoragePtrType DatastoreCustomerManagedS3StorageArgs

func DatastoreCustomerManagedS3StoragePtr(v *DatastoreCustomerManagedS3StorageArgs) DatastoreCustomerManagedS3StoragePtrInput {
	return (*datastoreCustomerManagedS3StoragePtrType)(v)
}

func (*datastoreCustomerManagedS3StoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreCustomerManagedS3Storage)(nil)).Elem()
}

func (i *datastoreCustomerManagedS3StoragePtrType) ToDatastoreCustomerManagedS3StoragePtrOutput() DatastoreCustomerManagedS3StoragePtrOutput {
	return i.ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(context.Background())
}

func (i *datastoreCustomerManagedS3StoragePtrType) ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3StoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreCustomerManagedS3StoragePtrOutput)
}

type DatastoreCustomerManagedS3StorageOutput struct{ *pulumi.OutputState }

func (DatastoreCustomerManagedS3StorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreCustomerManagedS3Storage)(nil)).Elem()
}

func (o DatastoreCustomerManagedS3StorageOutput) ToDatastoreCustomerManagedS3StorageOutput() DatastoreCustomerManagedS3StorageOutput {
	return o
}

func (o DatastoreCustomerManagedS3StorageOutput) ToDatastoreCustomerManagedS3StorageOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3StorageOutput {
	return o
}

func (o DatastoreCustomerManagedS3StorageOutput) ToDatastoreCustomerManagedS3StoragePtrOutput() DatastoreCustomerManagedS3StoragePtrOutput {
	return o.ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(context.Background())
}

func (o DatastoreCustomerManagedS3StorageOutput) ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3StoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreCustomerManagedS3Storage) *DatastoreCustomerManagedS3Storage {
		return &v
	}).(DatastoreCustomerManagedS3StoragePtrOutput)
}

func (o DatastoreCustomerManagedS3StorageOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreCustomerManagedS3Storage) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o DatastoreCustomerManagedS3StorageOutput) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatastoreCustomerManagedS3Storage) *string { return v.KeyPrefix }).(pulumi.StringPtrOutput)
}

type DatastoreCustomerManagedS3StoragePtrOutput struct{ *pulumi.OutputState }

func (DatastoreCustomerManagedS3StoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreCustomerManagedS3Storage)(nil)).Elem()
}

func (o DatastoreCustomerManagedS3StoragePtrOutput) ToDatastoreCustomerManagedS3StoragePtrOutput() DatastoreCustomerManagedS3StoragePtrOutput {
	return o
}

func (o DatastoreCustomerManagedS3StoragePtrOutput) ToDatastoreCustomerManagedS3StoragePtrOutputWithContext(ctx context.Context) DatastoreCustomerManagedS3StoragePtrOutput {
	return o
}

func (o DatastoreCustomerManagedS3StoragePtrOutput) Elem() DatastoreCustomerManagedS3StorageOutput {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3Storage) DatastoreCustomerManagedS3Storage {
		if v != nil {
			return *v
		}
		var ret DatastoreCustomerManagedS3Storage
		return ret
	}).(DatastoreCustomerManagedS3StorageOutput)
}

func (o DatastoreCustomerManagedS3StoragePtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3Storage) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o DatastoreCustomerManagedS3StoragePtrOutput) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreCustomerManagedS3Storage) *string {
		if v == nil {
			return nil
		}
		return v.KeyPrefix
	}).(pulumi.StringPtrOutput)
}

type DatastoreFileFormatConfiguration struct {
	JsonConfiguration    *DatastoreJsonConfiguration    `pulumi:"jsonConfiguration"`
	ParquetConfiguration *DatastoreParquetConfiguration `pulumi:"parquetConfiguration"`
}

// DatastoreFileFormatConfigurationInput is an input type that accepts DatastoreFileFormatConfigurationArgs and DatastoreFileFormatConfigurationOutput values.
// You can construct a concrete instance of `DatastoreFileFormatConfigurationInput` via:
//
//          DatastoreFileFormatConfigurationArgs{...}
type DatastoreFileFormatConfigurationInput interface {
	pulumi.Input

	ToDatastoreFileFormatConfigurationOutput() DatastoreFileFormatConfigurationOutput
	ToDatastoreFileFormatConfigurationOutputWithContext(context.Context) DatastoreFileFormatConfigurationOutput
}

type DatastoreFileFormatConfigurationArgs struct {
	JsonConfiguration    DatastoreJsonConfigurationPtrInput    `pulumi:"jsonConfiguration"`
	ParquetConfiguration DatastoreParquetConfigurationPtrInput `pulumi:"parquetConfiguration"`
}

func (DatastoreFileFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreFileFormatConfiguration)(nil)).Elem()
}

func (i DatastoreFileFormatConfigurationArgs) ToDatastoreFileFormatConfigurationOutput() DatastoreFileFormatConfigurationOutput {
	return i.ToDatastoreFileFormatConfigurationOutputWithContext(context.Background())
}

func (i DatastoreFileFormatConfigurationArgs) ToDatastoreFileFormatConfigurationOutputWithContext(ctx context.Context) DatastoreFileFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreFileFormatConfigurationOutput)
}

func (i DatastoreFileFormatConfigurationArgs) ToDatastoreFileFormatConfigurationPtrOutput() DatastoreFileFormatConfigurationPtrOutput {
	return i.ToDatastoreFileFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DatastoreFileFormatConfigurationArgs) ToDatastoreFileFormatConfigurationPtrOutputWithContext(ctx context.Context) DatastoreFileFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreFileFormatConfigurationOutput).ToDatastoreFileFormatConfigurationPtrOutputWithContext(ctx)
}

// DatastoreFileFormatConfigurationPtrInput is an input type that accepts DatastoreFileFormatConfigurationArgs, DatastoreFileFormatConfigurationPtr and DatastoreFileFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DatastoreFileFormatConfigurationPtrInput` via:
//
//          DatastoreFileFormatConfigurationArgs{...}
//
//  or:
//
//          nil
type DatastoreFileFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDatastoreFileFormatConfigurationPtrOutput() DatastoreFileFormatConfigurationPtrOutput
	ToDatastoreFileFormatConfigurationPtrOutputWithContext(context.Context) DatastoreFileFormatConfigurationPtrOutput
}

type datastoreFileFormatConfigurationPtrType DatastoreFileFormatConfigurationArgs

func DatastoreFileFormatConfigurationPtr(v *DatastoreFileFormatConfigurationArgs) DatastoreFileFormatConfigurationPtrInput {
	return (*datastoreFileFormatConfigurationPtrType)(v)
}

func (*datastoreFileFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreFileFormatConfiguration)(nil)).Elem()
}

func (i *datastoreFileFormatConfigurationPtrType) ToDatastoreFileFormatConfigurationPtrOutput() DatastoreFileFormatConfigurationPtrOutput {
	return i.ToDatastoreFileFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *datastoreFileFormatConfigurationPtrType) ToDatastoreFileFormatConfigurationPtrOutputWithContext(ctx context.Context) DatastoreFileFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreFileFormatConfigurationPtrOutput)
}

type DatastoreFileFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DatastoreFileFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreFileFormatConfiguration)(nil)).Elem()
}

func (o DatastoreFileFormatConfigurationOutput) ToDatastoreFileFormatConfigurationOutput() DatastoreFileFormatConfigurationOutput {
	return o
}

func (o DatastoreFileFormatConfigurationOutput) ToDatastoreFileFormatConfigurationOutputWithContext(ctx context.Context) DatastoreFileFormatConfigurationOutput {
	return o
}

func (o DatastoreFileFormatConfigurationOutput) ToDatastoreFileFormatConfigurationPtrOutput() DatastoreFileFormatConfigurationPtrOutput {
	return o.ToDatastoreFileFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DatastoreFileFormatConfigurationOutput) ToDatastoreFileFormatConfigurationPtrOutputWithContext(ctx context.Context) DatastoreFileFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreFileFormatConfiguration) *DatastoreFileFormatConfiguration {
		return &v
	}).(DatastoreFileFormatConfigurationPtrOutput)
}

func (o DatastoreFileFormatConfigurationOutput) JsonConfiguration() DatastoreJsonConfigurationPtrOutput {
	return o.ApplyT(func(v DatastoreFileFormatConfiguration) *DatastoreJsonConfiguration { return v.JsonConfiguration }).(DatastoreJsonConfigurationPtrOutput)
}

func (o DatastoreFileFormatConfigurationOutput) ParquetConfiguration() DatastoreParquetConfigurationPtrOutput {
	return o.ApplyT(func(v DatastoreFileFormatConfiguration) *DatastoreParquetConfiguration { return v.ParquetConfiguration }).(DatastoreParquetConfigurationPtrOutput)
}

type DatastoreFileFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatastoreFileFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreFileFormatConfiguration)(nil)).Elem()
}

func (o DatastoreFileFormatConfigurationPtrOutput) ToDatastoreFileFormatConfigurationPtrOutput() DatastoreFileFormatConfigurationPtrOutput {
	return o
}

func (o DatastoreFileFormatConfigurationPtrOutput) ToDatastoreFileFormatConfigurationPtrOutputWithContext(ctx context.Context) DatastoreFileFormatConfigurationPtrOutput {
	return o
}

func (o DatastoreFileFormatConfigurationPtrOutput) Elem() DatastoreFileFormatConfigurationOutput {
	return o.ApplyT(func(v *DatastoreFileFormatConfiguration) DatastoreFileFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DatastoreFileFormatConfiguration
		return ret
	}).(DatastoreFileFormatConfigurationOutput)
}

func (o DatastoreFileFormatConfigurationPtrOutput) JsonConfiguration() DatastoreJsonConfigurationPtrOutput {
	return o.ApplyT(func(v *DatastoreFileFormatConfiguration) *DatastoreJsonConfiguration {
		if v == nil {
			return nil
		}
		return v.JsonConfiguration
	}).(DatastoreJsonConfigurationPtrOutput)
}

func (o DatastoreFileFormatConfigurationPtrOutput) ParquetConfiguration() DatastoreParquetConfigurationPtrOutput {
	return o.ApplyT(func(v *DatastoreFileFormatConfiguration) *DatastoreParquetConfiguration {
		if v == nil {
			return nil
		}
		return v.ParquetConfiguration
	}).(DatastoreParquetConfigurationPtrOutput)
}

type DatastoreIotSiteWiseMultiLayerStorage struct {
	CustomerManagedS3Storage DatastoreCustomerManagedS3Storage `pulumi:"customerManagedS3Storage"`
}

// DatastoreIotSiteWiseMultiLayerStorageInput is an input type that accepts DatastoreIotSiteWiseMultiLayerStorageArgs and DatastoreIotSiteWiseMultiLayerStorageOutput values.
// You can construct a concrete instance of `DatastoreIotSiteWiseMultiLayerStorageInput` via:
//
//          DatastoreIotSiteWiseMultiLayerStorageArgs{...}
type DatastoreIotSiteWiseMultiLayerStorageInput interface {
	pulumi.Input

	ToDatastoreIotSiteWiseMultiLayerStorageOutput() DatastoreIotSiteWiseMultiLayerStorageOutput
	ToDatastoreIotSiteWiseMultiLayerStorageOutputWithContext(context.Context) DatastoreIotSiteWiseMultiLayerStorageOutput
}

type DatastoreIotSiteWiseMultiLayerStorageArgs struct {
	CustomerManagedS3Storage DatastoreCustomerManagedS3StorageInput `pulumi:"customerManagedS3Storage"`
}

func (DatastoreIotSiteWiseMultiLayerStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreIotSiteWiseMultiLayerStorage)(nil)).Elem()
}

func (i DatastoreIotSiteWiseMultiLayerStorageArgs) ToDatastoreIotSiteWiseMultiLayerStorageOutput() DatastoreIotSiteWiseMultiLayerStorageOutput {
	return i.ToDatastoreIotSiteWiseMultiLayerStorageOutputWithContext(context.Background())
}

func (i DatastoreIotSiteWiseMultiLayerStorageArgs) ToDatastoreIotSiteWiseMultiLayerStorageOutputWithContext(ctx context.Context) DatastoreIotSiteWiseMultiLayerStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreIotSiteWiseMultiLayerStorageOutput)
}

func (i DatastoreIotSiteWiseMultiLayerStorageArgs) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutput() DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return i.ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(context.Background())
}

func (i DatastoreIotSiteWiseMultiLayerStorageArgs) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(ctx context.Context) DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreIotSiteWiseMultiLayerStorageOutput).ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(ctx)
}

// DatastoreIotSiteWiseMultiLayerStoragePtrInput is an input type that accepts DatastoreIotSiteWiseMultiLayerStorageArgs, DatastoreIotSiteWiseMultiLayerStoragePtr and DatastoreIotSiteWiseMultiLayerStoragePtrOutput values.
// You can construct a concrete instance of `DatastoreIotSiteWiseMultiLayerStoragePtrInput` via:
//
//          DatastoreIotSiteWiseMultiLayerStorageArgs{...}
//
//  or:
//
//          nil
type DatastoreIotSiteWiseMultiLayerStoragePtrInput interface {
	pulumi.Input

	ToDatastoreIotSiteWiseMultiLayerStoragePtrOutput() DatastoreIotSiteWiseMultiLayerStoragePtrOutput
	ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(context.Context) DatastoreIotSiteWiseMultiLayerStoragePtrOutput
}

type datastoreIotSiteWiseMultiLayerStoragePtrType DatastoreIotSiteWiseMultiLayerStorageArgs

func DatastoreIotSiteWiseMultiLayerStoragePtr(v *DatastoreIotSiteWiseMultiLayerStorageArgs) DatastoreIotSiteWiseMultiLayerStoragePtrInput {
	return (*datastoreIotSiteWiseMultiLayerStoragePtrType)(v)
}

func (*datastoreIotSiteWiseMultiLayerStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreIotSiteWiseMultiLayerStorage)(nil)).Elem()
}

func (i *datastoreIotSiteWiseMultiLayerStoragePtrType) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutput() DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return i.ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(context.Background())
}

func (i *datastoreIotSiteWiseMultiLayerStoragePtrType) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(ctx context.Context) DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreIotSiteWiseMultiLayerStoragePtrOutput)
}

type DatastoreIotSiteWiseMultiLayerStorageOutput struct{ *pulumi.OutputState }

func (DatastoreIotSiteWiseMultiLayerStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreIotSiteWiseMultiLayerStorage)(nil)).Elem()
}

func (o DatastoreIotSiteWiseMultiLayerStorageOutput) ToDatastoreIotSiteWiseMultiLayerStorageOutput() DatastoreIotSiteWiseMultiLayerStorageOutput {
	return o
}

func (o DatastoreIotSiteWiseMultiLayerStorageOutput) ToDatastoreIotSiteWiseMultiLayerStorageOutputWithContext(ctx context.Context) DatastoreIotSiteWiseMultiLayerStorageOutput {
	return o
}

func (o DatastoreIotSiteWiseMultiLayerStorageOutput) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutput() DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return o.ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(context.Background())
}

func (o DatastoreIotSiteWiseMultiLayerStorageOutput) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(ctx context.Context) DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreIotSiteWiseMultiLayerStorage) *DatastoreIotSiteWiseMultiLayerStorage {
		return &v
	}).(DatastoreIotSiteWiseMultiLayerStoragePtrOutput)
}

func (o DatastoreIotSiteWiseMultiLayerStorageOutput) CustomerManagedS3Storage() DatastoreCustomerManagedS3StorageOutput {
	return o.ApplyT(func(v DatastoreIotSiteWiseMultiLayerStorage) DatastoreCustomerManagedS3Storage {
		return v.CustomerManagedS3Storage
	}).(DatastoreCustomerManagedS3StorageOutput)
}

type DatastoreIotSiteWiseMultiLayerStoragePtrOutput struct{ *pulumi.OutputState }

func (DatastoreIotSiteWiseMultiLayerStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreIotSiteWiseMultiLayerStorage)(nil)).Elem()
}

func (o DatastoreIotSiteWiseMultiLayerStoragePtrOutput) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutput() DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return o
}

func (o DatastoreIotSiteWiseMultiLayerStoragePtrOutput) ToDatastoreIotSiteWiseMultiLayerStoragePtrOutputWithContext(ctx context.Context) DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return o
}

func (o DatastoreIotSiteWiseMultiLayerStoragePtrOutput) Elem() DatastoreIotSiteWiseMultiLayerStorageOutput {
	return o.ApplyT(func(v *DatastoreIotSiteWiseMultiLayerStorage) DatastoreIotSiteWiseMultiLayerStorage {
		if v != nil {
			return *v
		}
		var ret DatastoreIotSiteWiseMultiLayerStorage
		return ret
	}).(DatastoreIotSiteWiseMultiLayerStorageOutput)
}

func (o DatastoreIotSiteWiseMultiLayerStoragePtrOutput) CustomerManagedS3Storage() DatastoreCustomerManagedS3StoragePtrOutput {
	return o.ApplyT(func(v *DatastoreIotSiteWiseMultiLayerStorage) *DatastoreCustomerManagedS3Storage {
		if v == nil {
			return nil
		}
		return &v.CustomerManagedS3Storage
	}).(DatastoreCustomerManagedS3StoragePtrOutput)
}

type DatastoreJsonConfiguration struct {
}

// DatastoreJsonConfigurationInput is an input type that accepts DatastoreJsonConfigurationArgs and DatastoreJsonConfigurationOutput values.
// You can construct a concrete instance of `DatastoreJsonConfigurationInput` via:
//
//          DatastoreJsonConfigurationArgs{...}
type DatastoreJsonConfigurationInput interface {
	pulumi.Input

	ToDatastoreJsonConfigurationOutput() DatastoreJsonConfigurationOutput
	ToDatastoreJsonConfigurationOutputWithContext(context.Context) DatastoreJsonConfigurationOutput
}

type DatastoreJsonConfigurationArgs struct {
}

func (DatastoreJsonConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreJsonConfiguration)(nil)).Elem()
}

func (i DatastoreJsonConfigurationArgs) ToDatastoreJsonConfigurationOutput() DatastoreJsonConfigurationOutput {
	return i.ToDatastoreJsonConfigurationOutputWithContext(context.Background())
}

func (i DatastoreJsonConfigurationArgs) ToDatastoreJsonConfigurationOutputWithContext(ctx context.Context) DatastoreJsonConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreJsonConfigurationOutput)
}

func (i DatastoreJsonConfigurationArgs) ToDatastoreJsonConfigurationPtrOutput() DatastoreJsonConfigurationPtrOutput {
	return i.ToDatastoreJsonConfigurationPtrOutputWithContext(context.Background())
}

func (i DatastoreJsonConfigurationArgs) ToDatastoreJsonConfigurationPtrOutputWithContext(ctx context.Context) DatastoreJsonConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreJsonConfigurationOutput).ToDatastoreJsonConfigurationPtrOutputWithContext(ctx)
}

// DatastoreJsonConfigurationPtrInput is an input type that accepts DatastoreJsonConfigurationArgs, DatastoreJsonConfigurationPtr and DatastoreJsonConfigurationPtrOutput values.
// You can construct a concrete instance of `DatastoreJsonConfigurationPtrInput` via:
//
//          DatastoreJsonConfigurationArgs{...}
//
//  or:
//
//          nil
type DatastoreJsonConfigurationPtrInput interface {
	pulumi.Input

	ToDatastoreJsonConfigurationPtrOutput() DatastoreJsonConfigurationPtrOutput
	ToDatastoreJsonConfigurationPtrOutputWithContext(context.Context) DatastoreJsonConfigurationPtrOutput
}

type datastoreJsonConfigurationPtrType DatastoreJsonConfigurationArgs

func DatastoreJsonConfigurationPtr(v *DatastoreJsonConfigurationArgs) DatastoreJsonConfigurationPtrInput {
	return (*datastoreJsonConfigurationPtrType)(v)
}

func (*datastoreJsonConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreJsonConfiguration)(nil)).Elem()
}

func (i *datastoreJsonConfigurationPtrType) ToDatastoreJsonConfigurationPtrOutput() DatastoreJsonConfigurationPtrOutput {
	return i.ToDatastoreJsonConfigurationPtrOutputWithContext(context.Background())
}

func (i *datastoreJsonConfigurationPtrType) ToDatastoreJsonConfigurationPtrOutputWithContext(ctx context.Context) DatastoreJsonConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreJsonConfigurationPtrOutput)
}

type DatastoreJsonConfigurationOutput struct{ *pulumi.OutputState }

func (DatastoreJsonConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreJsonConfiguration)(nil)).Elem()
}

func (o DatastoreJsonConfigurationOutput) ToDatastoreJsonConfigurationOutput() DatastoreJsonConfigurationOutput {
	return o
}

func (o DatastoreJsonConfigurationOutput) ToDatastoreJsonConfigurationOutputWithContext(ctx context.Context) DatastoreJsonConfigurationOutput {
	return o
}

func (o DatastoreJsonConfigurationOutput) ToDatastoreJsonConfigurationPtrOutput() DatastoreJsonConfigurationPtrOutput {
	return o.ToDatastoreJsonConfigurationPtrOutputWithContext(context.Background())
}

func (o DatastoreJsonConfigurationOutput) ToDatastoreJsonConfigurationPtrOutputWithContext(ctx context.Context) DatastoreJsonConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreJsonConfiguration) *DatastoreJsonConfiguration {
		return &v
	}).(DatastoreJsonConfigurationPtrOutput)
}

type DatastoreJsonConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatastoreJsonConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreJsonConfiguration)(nil)).Elem()
}

func (o DatastoreJsonConfigurationPtrOutput) ToDatastoreJsonConfigurationPtrOutput() DatastoreJsonConfigurationPtrOutput {
	return o
}

func (o DatastoreJsonConfigurationPtrOutput) ToDatastoreJsonConfigurationPtrOutputWithContext(ctx context.Context) DatastoreJsonConfigurationPtrOutput {
	return o
}

func (o DatastoreJsonConfigurationPtrOutput) Elem() DatastoreJsonConfigurationOutput {
	return o.ApplyT(func(v *DatastoreJsonConfiguration) DatastoreJsonConfiguration {
		if v != nil {
			return *v
		}
		var ret DatastoreJsonConfiguration
		return ret
	}).(DatastoreJsonConfigurationOutput)
}

type DatastoreParquetConfiguration struct {
	SchemaDefinition *DatastoreSchemaDefinition `pulumi:"schemaDefinition"`
}

// DatastoreParquetConfigurationInput is an input type that accepts DatastoreParquetConfigurationArgs and DatastoreParquetConfigurationOutput values.
// You can construct a concrete instance of `DatastoreParquetConfigurationInput` via:
//
//          DatastoreParquetConfigurationArgs{...}
type DatastoreParquetConfigurationInput interface {
	pulumi.Input

	ToDatastoreParquetConfigurationOutput() DatastoreParquetConfigurationOutput
	ToDatastoreParquetConfigurationOutputWithContext(context.Context) DatastoreParquetConfigurationOutput
}

type DatastoreParquetConfigurationArgs struct {
	SchemaDefinition DatastoreSchemaDefinitionPtrInput `pulumi:"schemaDefinition"`
}

func (DatastoreParquetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreParquetConfiguration)(nil)).Elem()
}

func (i DatastoreParquetConfigurationArgs) ToDatastoreParquetConfigurationOutput() DatastoreParquetConfigurationOutput {
	return i.ToDatastoreParquetConfigurationOutputWithContext(context.Background())
}

func (i DatastoreParquetConfigurationArgs) ToDatastoreParquetConfigurationOutputWithContext(ctx context.Context) DatastoreParquetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreParquetConfigurationOutput)
}

func (i DatastoreParquetConfigurationArgs) ToDatastoreParquetConfigurationPtrOutput() DatastoreParquetConfigurationPtrOutput {
	return i.ToDatastoreParquetConfigurationPtrOutputWithContext(context.Background())
}

func (i DatastoreParquetConfigurationArgs) ToDatastoreParquetConfigurationPtrOutputWithContext(ctx context.Context) DatastoreParquetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreParquetConfigurationOutput).ToDatastoreParquetConfigurationPtrOutputWithContext(ctx)
}

// DatastoreParquetConfigurationPtrInput is an input type that accepts DatastoreParquetConfigurationArgs, DatastoreParquetConfigurationPtr and DatastoreParquetConfigurationPtrOutput values.
// You can construct a concrete instance of `DatastoreParquetConfigurationPtrInput` via:
//
//          DatastoreParquetConfigurationArgs{...}
//
//  or:
//
//          nil
type DatastoreParquetConfigurationPtrInput interface {
	pulumi.Input

	ToDatastoreParquetConfigurationPtrOutput() DatastoreParquetConfigurationPtrOutput
	ToDatastoreParquetConfigurationPtrOutputWithContext(context.Context) DatastoreParquetConfigurationPtrOutput
}

type datastoreParquetConfigurationPtrType DatastoreParquetConfigurationArgs

func DatastoreParquetConfigurationPtr(v *DatastoreParquetConfigurationArgs) DatastoreParquetConfigurationPtrInput {
	return (*datastoreParquetConfigurationPtrType)(v)
}

func (*datastoreParquetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreParquetConfiguration)(nil)).Elem()
}

func (i *datastoreParquetConfigurationPtrType) ToDatastoreParquetConfigurationPtrOutput() DatastoreParquetConfigurationPtrOutput {
	return i.ToDatastoreParquetConfigurationPtrOutputWithContext(context.Background())
}

func (i *datastoreParquetConfigurationPtrType) ToDatastoreParquetConfigurationPtrOutputWithContext(ctx context.Context) DatastoreParquetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreParquetConfigurationPtrOutput)
}

type DatastoreParquetConfigurationOutput struct{ *pulumi.OutputState }

func (DatastoreParquetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreParquetConfiguration)(nil)).Elem()
}

func (o DatastoreParquetConfigurationOutput) ToDatastoreParquetConfigurationOutput() DatastoreParquetConfigurationOutput {
	return o
}

func (o DatastoreParquetConfigurationOutput) ToDatastoreParquetConfigurationOutputWithContext(ctx context.Context) DatastoreParquetConfigurationOutput {
	return o
}

func (o DatastoreParquetConfigurationOutput) ToDatastoreParquetConfigurationPtrOutput() DatastoreParquetConfigurationPtrOutput {
	return o.ToDatastoreParquetConfigurationPtrOutputWithContext(context.Background())
}

func (o DatastoreParquetConfigurationOutput) ToDatastoreParquetConfigurationPtrOutputWithContext(ctx context.Context) DatastoreParquetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreParquetConfiguration) *DatastoreParquetConfiguration {
		return &v
	}).(DatastoreParquetConfigurationPtrOutput)
}

func (o DatastoreParquetConfigurationOutput) SchemaDefinition() DatastoreSchemaDefinitionPtrOutput {
	return o.ApplyT(func(v DatastoreParquetConfiguration) *DatastoreSchemaDefinition { return v.SchemaDefinition }).(DatastoreSchemaDefinitionPtrOutput)
}

type DatastoreParquetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DatastoreParquetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreParquetConfiguration)(nil)).Elem()
}

func (o DatastoreParquetConfigurationPtrOutput) ToDatastoreParquetConfigurationPtrOutput() DatastoreParquetConfigurationPtrOutput {
	return o
}

func (o DatastoreParquetConfigurationPtrOutput) ToDatastoreParquetConfigurationPtrOutputWithContext(ctx context.Context) DatastoreParquetConfigurationPtrOutput {
	return o
}

func (o DatastoreParquetConfigurationPtrOutput) Elem() DatastoreParquetConfigurationOutput {
	return o.ApplyT(func(v *DatastoreParquetConfiguration) DatastoreParquetConfiguration {
		if v != nil {
			return *v
		}
		var ret DatastoreParquetConfiguration
		return ret
	}).(DatastoreParquetConfigurationOutput)
}

func (o DatastoreParquetConfigurationPtrOutput) SchemaDefinition() DatastoreSchemaDefinitionPtrOutput {
	return o.ApplyT(func(v *DatastoreParquetConfiguration) *DatastoreSchemaDefinition {
		if v == nil {
			return nil
		}
		return v.SchemaDefinition
	}).(DatastoreSchemaDefinitionPtrOutput)
}

type DatastorePartition struct {
	Partition          *DatastorePartition          `pulumi:"partition"`
	TimestampPartition *DatastoreTimestampPartition `pulumi:"timestampPartition"`
}

// DatastorePartitionInput is an input type that accepts DatastorePartitionArgs and DatastorePartitionOutput values.
// You can construct a concrete instance of `DatastorePartitionInput` via:
//
//          DatastorePartitionArgs{...}
type DatastorePartitionInput interface {
	pulumi.Input

	ToDatastorePartitionOutput() DatastorePartitionOutput
	ToDatastorePartitionOutputWithContext(context.Context) DatastorePartitionOutput
}

type DatastorePartitionArgs struct {
	Partition          DatastorePartitionPtrInput          `pulumi:"partition"`
	TimestampPartition DatastoreTimestampPartitionPtrInput `pulumi:"timestampPartition"`
}

func (DatastorePartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastorePartition)(nil)).Elem()
}

func (i DatastorePartitionArgs) ToDatastorePartitionOutput() DatastorePartitionOutput {
	return i.ToDatastorePartitionOutputWithContext(context.Background())
}

func (i DatastorePartitionArgs) ToDatastorePartitionOutputWithContext(ctx context.Context) DatastorePartitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePartitionOutput)
}

func (i DatastorePartitionArgs) ToDatastorePartitionPtrOutput() DatastorePartitionPtrOutput {
	return i.ToDatastorePartitionPtrOutputWithContext(context.Background())
}

func (i DatastorePartitionArgs) ToDatastorePartitionPtrOutputWithContext(ctx context.Context) DatastorePartitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePartitionOutput).ToDatastorePartitionPtrOutputWithContext(ctx)
}

// DatastorePartitionPtrInput is an input type that accepts DatastorePartitionArgs, DatastorePartitionPtr and DatastorePartitionPtrOutput values.
// You can construct a concrete instance of `DatastorePartitionPtrInput` via:
//
//          DatastorePartitionArgs{...}
//
//  or:
//
//          nil
type DatastorePartitionPtrInput interface {
	pulumi.Input

	ToDatastorePartitionPtrOutput() DatastorePartitionPtrOutput
	ToDatastorePartitionPtrOutputWithContext(context.Context) DatastorePartitionPtrOutput
}

type datastorePartitionPtrType DatastorePartitionArgs

func DatastorePartitionPtr(v *DatastorePartitionArgs) DatastorePartitionPtrInput {
	return (*datastorePartitionPtrType)(v)
}

func (*datastorePartitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastorePartition)(nil)).Elem()
}

func (i *datastorePartitionPtrType) ToDatastorePartitionPtrOutput() DatastorePartitionPtrOutput {
	return i.ToDatastorePartitionPtrOutputWithContext(context.Background())
}

func (i *datastorePartitionPtrType) ToDatastorePartitionPtrOutputWithContext(ctx context.Context) DatastorePartitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePartitionPtrOutput)
}

// DatastorePartitionArrayInput is an input type that accepts DatastorePartitionArray and DatastorePartitionArrayOutput values.
// You can construct a concrete instance of `DatastorePartitionArrayInput` via:
//
//          DatastorePartitionArray{ DatastorePartitionArgs{...} }
type DatastorePartitionArrayInput interface {
	pulumi.Input

	ToDatastorePartitionArrayOutput() DatastorePartitionArrayOutput
	ToDatastorePartitionArrayOutputWithContext(context.Context) DatastorePartitionArrayOutput
}

type DatastorePartitionArray []DatastorePartitionInput

func (DatastorePartitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastorePartition)(nil)).Elem()
}

func (i DatastorePartitionArray) ToDatastorePartitionArrayOutput() DatastorePartitionArrayOutput {
	return i.ToDatastorePartitionArrayOutputWithContext(context.Background())
}

func (i DatastorePartitionArray) ToDatastorePartitionArrayOutputWithContext(ctx context.Context) DatastorePartitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePartitionArrayOutput)
}

type DatastorePartitionOutput struct{ *pulumi.OutputState }

func (DatastorePartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastorePartition)(nil)).Elem()
}

func (o DatastorePartitionOutput) ToDatastorePartitionOutput() DatastorePartitionOutput {
	return o
}

func (o DatastorePartitionOutput) ToDatastorePartitionOutputWithContext(ctx context.Context) DatastorePartitionOutput {
	return o
}

func (o DatastorePartitionOutput) ToDatastorePartitionPtrOutput() DatastorePartitionPtrOutput {
	return o.ToDatastorePartitionPtrOutputWithContext(context.Background())
}

func (o DatastorePartitionOutput) ToDatastorePartitionPtrOutputWithContext(ctx context.Context) DatastorePartitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastorePartition) *DatastorePartition {
		return &v
	}).(DatastorePartitionPtrOutput)
}

func (o DatastorePartitionOutput) Partition() DatastorePartitionPtrOutput {
	return o.ApplyT(func(v DatastorePartition) *DatastorePartition { return v.Partition }).(DatastorePartitionPtrOutput)
}

func (o DatastorePartitionOutput) TimestampPartition() DatastoreTimestampPartitionPtrOutput {
	return o.ApplyT(func(v DatastorePartition) *DatastoreTimestampPartition { return v.TimestampPartition }).(DatastoreTimestampPartitionPtrOutput)
}

type DatastorePartitionPtrOutput struct{ *pulumi.OutputState }

func (DatastorePartitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastorePartition)(nil)).Elem()
}

func (o DatastorePartitionPtrOutput) ToDatastorePartitionPtrOutput() DatastorePartitionPtrOutput {
	return o
}

func (o DatastorePartitionPtrOutput) ToDatastorePartitionPtrOutputWithContext(ctx context.Context) DatastorePartitionPtrOutput {
	return o
}

func (o DatastorePartitionPtrOutput) Elem() DatastorePartitionOutput {
	return o.ApplyT(func(v *DatastorePartition) DatastorePartition {
		if v != nil {
			return *v
		}
		var ret DatastorePartition
		return ret
	}).(DatastorePartitionOutput)
}

func (o DatastorePartitionPtrOutput) Partition() DatastorePartitionPtrOutput {
	return o.ApplyT(func(v *DatastorePartition) *DatastorePartition {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(DatastorePartitionPtrOutput)
}

func (o DatastorePartitionPtrOutput) TimestampPartition() DatastoreTimestampPartitionPtrOutput {
	return o.ApplyT(func(v *DatastorePartition) *DatastoreTimestampPartition {
		if v == nil {
			return nil
		}
		return v.TimestampPartition
	}).(DatastoreTimestampPartitionPtrOutput)
}

type DatastorePartitionArrayOutput struct{ *pulumi.OutputState }

func (DatastorePartitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastorePartition)(nil)).Elem()
}

func (o DatastorePartitionArrayOutput) ToDatastorePartitionArrayOutput() DatastorePartitionArrayOutput {
	return o
}

func (o DatastorePartitionArrayOutput) ToDatastorePartitionArrayOutputWithContext(ctx context.Context) DatastorePartitionArrayOutput {
	return o
}

func (o DatastorePartitionArrayOutput) Index(i pulumi.IntInput) DatastorePartitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatastorePartition {
		return vs[0].([]DatastorePartition)[vs[1].(int)]
	}).(DatastorePartitionOutput)
}

type DatastorePartitions struct {
	Partitions []DatastorePartition `pulumi:"partitions"`
}

// DatastorePartitionsInput is an input type that accepts DatastorePartitionsArgs and DatastorePartitionsOutput values.
// You can construct a concrete instance of `DatastorePartitionsInput` via:
//
//          DatastorePartitionsArgs{...}
type DatastorePartitionsInput interface {
	pulumi.Input

	ToDatastorePartitionsOutput() DatastorePartitionsOutput
	ToDatastorePartitionsOutputWithContext(context.Context) DatastorePartitionsOutput
}

type DatastorePartitionsArgs struct {
	Partitions DatastorePartitionArrayInput `pulumi:"partitions"`
}

func (DatastorePartitionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastorePartitions)(nil)).Elem()
}

func (i DatastorePartitionsArgs) ToDatastorePartitionsOutput() DatastorePartitionsOutput {
	return i.ToDatastorePartitionsOutputWithContext(context.Background())
}

func (i DatastorePartitionsArgs) ToDatastorePartitionsOutputWithContext(ctx context.Context) DatastorePartitionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePartitionsOutput)
}

func (i DatastorePartitionsArgs) ToDatastorePartitionsPtrOutput() DatastorePartitionsPtrOutput {
	return i.ToDatastorePartitionsPtrOutputWithContext(context.Background())
}

func (i DatastorePartitionsArgs) ToDatastorePartitionsPtrOutputWithContext(ctx context.Context) DatastorePartitionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePartitionsOutput).ToDatastorePartitionsPtrOutputWithContext(ctx)
}

// DatastorePartitionsPtrInput is an input type that accepts DatastorePartitionsArgs, DatastorePartitionsPtr and DatastorePartitionsPtrOutput values.
// You can construct a concrete instance of `DatastorePartitionsPtrInput` via:
//
//          DatastorePartitionsArgs{...}
//
//  or:
//
//          nil
type DatastorePartitionsPtrInput interface {
	pulumi.Input

	ToDatastorePartitionsPtrOutput() DatastorePartitionsPtrOutput
	ToDatastorePartitionsPtrOutputWithContext(context.Context) DatastorePartitionsPtrOutput
}

type datastorePartitionsPtrType DatastorePartitionsArgs

func DatastorePartitionsPtr(v *DatastorePartitionsArgs) DatastorePartitionsPtrInput {
	return (*datastorePartitionsPtrType)(v)
}

func (*datastorePartitionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastorePartitions)(nil)).Elem()
}

func (i *datastorePartitionsPtrType) ToDatastorePartitionsPtrOutput() DatastorePartitionsPtrOutput {
	return i.ToDatastorePartitionsPtrOutputWithContext(context.Background())
}

func (i *datastorePartitionsPtrType) ToDatastorePartitionsPtrOutputWithContext(ctx context.Context) DatastorePartitionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastorePartitionsPtrOutput)
}

type DatastorePartitionsOutput struct{ *pulumi.OutputState }

func (DatastorePartitionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastorePartitions)(nil)).Elem()
}

func (o DatastorePartitionsOutput) ToDatastorePartitionsOutput() DatastorePartitionsOutput {
	return o
}

func (o DatastorePartitionsOutput) ToDatastorePartitionsOutputWithContext(ctx context.Context) DatastorePartitionsOutput {
	return o
}

func (o DatastorePartitionsOutput) ToDatastorePartitionsPtrOutput() DatastorePartitionsPtrOutput {
	return o.ToDatastorePartitionsPtrOutputWithContext(context.Background())
}

func (o DatastorePartitionsOutput) ToDatastorePartitionsPtrOutputWithContext(ctx context.Context) DatastorePartitionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastorePartitions) *DatastorePartitions {
		return &v
	}).(DatastorePartitionsPtrOutput)
}

func (o DatastorePartitionsOutput) Partitions() DatastorePartitionArrayOutput {
	return o.ApplyT(func(v DatastorePartitions) []DatastorePartition { return v.Partitions }).(DatastorePartitionArrayOutput)
}

type DatastorePartitionsPtrOutput struct{ *pulumi.OutputState }

func (DatastorePartitionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastorePartitions)(nil)).Elem()
}

func (o DatastorePartitionsPtrOutput) ToDatastorePartitionsPtrOutput() DatastorePartitionsPtrOutput {
	return o
}

func (o DatastorePartitionsPtrOutput) ToDatastorePartitionsPtrOutputWithContext(ctx context.Context) DatastorePartitionsPtrOutput {
	return o
}

func (o DatastorePartitionsPtrOutput) Elem() DatastorePartitionsOutput {
	return o.ApplyT(func(v *DatastorePartitions) DatastorePartitions {
		if v != nil {
			return *v
		}
		var ret DatastorePartitions
		return ret
	}).(DatastorePartitionsOutput)
}

func (o DatastorePartitionsPtrOutput) Partitions() DatastorePartitionArrayOutput {
	return o.ApplyT(func(v *DatastorePartitions) []DatastorePartition {
		if v == nil {
			return nil
		}
		return v.Partitions
	}).(DatastorePartitionArrayOutput)
}

type DatastoreRetentionPeriod struct {
	NumberOfDays *int  `pulumi:"numberOfDays"`
	Unlimited    *bool `pulumi:"unlimited"`
}

// DatastoreRetentionPeriodInput is an input type that accepts DatastoreRetentionPeriodArgs and DatastoreRetentionPeriodOutput values.
// You can construct a concrete instance of `DatastoreRetentionPeriodInput` via:
//
//          DatastoreRetentionPeriodArgs{...}
type DatastoreRetentionPeriodInput interface {
	pulumi.Input

	ToDatastoreRetentionPeriodOutput() DatastoreRetentionPeriodOutput
	ToDatastoreRetentionPeriodOutputWithContext(context.Context) DatastoreRetentionPeriodOutput
}

type DatastoreRetentionPeriodArgs struct {
	NumberOfDays pulumi.IntPtrInput  `pulumi:"numberOfDays"`
	Unlimited    pulumi.BoolPtrInput `pulumi:"unlimited"`
}

func (DatastoreRetentionPeriodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreRetentionPeriod)(nil)).Elem()
}

func (i DatastoreRetentionPeriodArgs) ToDatastoreRetentionPeriodOutput() DatastoreRetentionPeriodOutput {
	return i.ToDatastoreRetentionPeriodOutputWithContext(context.Background())
}

func (i DatastoreRetentionPeriodArgs) ToDatastoreRetentionPeriodOutputWithContext(ctx context.Context) DatastoreRetentionPeriodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreRetentionPeriodOutput)
}

func (i DatastoreRetentionPeriodArgs) ToDatastoreRetentionPeriodPtrOutput() DatastoreRetentionPeriodPtrOutput {
	return i.ToDatastoreRetentionPeriodPtrOutputWithContext(context.Background())
}

func (i DatastoreRetentionPeriodArgs) ToDatastoreRetentionPeriodPtrOutputWithContext(ctx context.Context) DatastoreRetentionPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreRetentionPeriodOutput).ToDatastoreRetentionPeriodPtrOutputWithContext(ctx)
}

// DatastoreRetentionPeriodPtrInput is an input type that accepts DatastoreRetentionPeriodArgs, DatastoreRetentionPeriodPtr and DatastoreRetentionPeriodPtrOutput values.
// You can construct a concrete instance of `DatastoreRetentionPeriodPtrInput` via:
//
//          DatastoreRetentionPeriodArgs{...}
//
//  or:
//
//          nil
type DatastoreRetentionPeriodPtrInput interface {
	pulumi.Input

	ToDatastoreRetentionPeriodPtrOutput() DatastoreRetentionPeriodPtrOutput
	ToDatastoreRetentionPeriodPtrOutputWithContext(context.Context) DatastoreRetentionPeriodPtrOutput
}

type datastoreRetentionPeriodPtrType DatastoreRetentionPeriodArgs

func DatastoreRetentionPeriodPtr(v *DatastoreRetentionPeriodArgs) DatastoreRetentionPeriodPtrInput {
	return (*datastoreRetentionPeriodPtrType)(v)
}

func (*datastoreRetentionPeriodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreRetentionPeriod)(nil)).Elem()
}

func (i *datastoreRetentionPeriodPtrType) ToDatastoreRetentionPeriodPtrOutput() DatastoreRetentionPeriodPtrOutput {
	return i.ToDatastoreRetentionPeriodPtrOutputWithContext(context.Background())
}

func (i *datastoreRetentionPeriodPtrType) ToDatastoreRetentionPeriodPtrOutputWithContext(ctx context.Context) DatastoreRetentionPeriodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreRetentionPeriodPtrOutput)
}

type DatastoreRetentionPeriodOutput struct{ *pulumi.OutputState }

func (DatastoreRetentionPeriodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreRetentionPeriod)(nil)).Elem()
}

func (o DatastoreRetentionPeriodOutput) ToDatastoreRetentionPeriodOutput() DatastoreRetentionPeriodOutput {
	return o
}

func (o DatastoreRetentionPeriodOutput) ToDatastoreRetentionPeriodOutputWithContext(ctx context.Context) DatastoreRetentionPeriodOutput {
	return o
}

func (o DatastoreRetentionPeriodOutput) ToDatastoreRetentionPeriodPtrOutput() DatastoreRetentionPeriodPtrOutput {
	return o.ToDatastoreRetentionPeriodPtrOutputWithContext(context.Background())
}

func (o DatastoreRetentionPeriodOutput) ToDatastoreRetentionPeriodPtrOutputWithContext(ctx context.Context) DatastoreRetentionPeriodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreRetentionPeriod) *DatastoreRetentionPeriod {
		return &v
	}).(DatastoreRetentionPeriodPtrOutput)
}

func (o DatastoreRetentionPeriodOutput) NumberOfDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DatastoreRetentionPeriod) *int { return v.NumberOfDays }).(pulumi.IntPtrOutput)
}

func (o DatastoreRetentionPeriodOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatastoreRetentionPeriod) *bool { return v.Unlimited }).(pulumi.BoolPtrOutput)
}

type DatastoreRetentionPeriodPtrOutput struct{ *pulumi.OutputState }

func (DatastoreRetentionPeriodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreRetentionPeriod)(nil)).Elem()
}

func (o DatastoreRetentionPeriodPtrOutput) ToDatastoreRetentionPeriodPtrOutput() DatastoreRetentionPeriodPtrOutput {
	return o
}

func (o DatastoreRetentionPeriodPtrOutput) ToDatastoreRetentionPeriodPtrOutputWithContext(ctx context.Context) DatastoreRetentionPeriodPtrOutput {
	return o
}

func (o DatastoreRetentionPeriodPtrOutput) Elem() DatastoreRetentionPeriodOutput {
	return o.ApplyT(func(v *DatastoreRetentionPeriod) DatastoreRetentionPeriod {
		if v != nil {
			return *v
		}
		var ret DatastoreRetentionPeriod
		return ret
	}).(DatastoreRetentionPeriodOutput)
}

func (o DatastoreRetentionPeriodPtrOutput) NumberOfDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DatastoreRetentionPeriod) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfDays
	}).(pulumi.IntPtrOutput)
}

func (o DatastoreRetentionPeriodPtrOutput) Unlimited() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DatastoreRetentionPeriod) *bool {
		if v == nil {
			return nil
		}
		return v.Unlimited
	}).(pulumi.BoolPtrOutput)
}

type DatastoreSchemaDefinition struct {
	Columns []DatastoreColumn `pulumi:"columns"`
}

// DatastoreSchemaDefinitionInput is an input type that accepts DatastoreSchemaDefinitionArgs and DatastoreSchemaDefinitionOutput values.
// You can construct a concrete instance of `DatastoreSchemaDefinitionInput` via:
//
//          DatastoreSchemaDefinitionArgs{...}
type DatastoreSchemaDefinitionInput interface {
	pulumi.Input

	ToDatastoreSchemaDefinitionOutput() DatastoreSchemaDefinitionOutput
	ToDatastoreSchemaDefinitionOutputWithContext(context.Context) DatastoreSchemaDefinitionOutput
}

type DatastoreSchemaDefinitionArgs struct {
	Columns DatastoreColumnArrayInput `pulumi:"columns"`
}

func (DatastoreSchemaDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreSchemaDefinition)(nil)).Elem()
}

func (i DatastoreSchemaDefinitionArgs) ToDatastoreSchemaDefinitionOutput() DatastoreSchemaDefinitionOutput {
	return i.ToDatastoreSchemaDefinitionOutputWithContext(context.Background())
}

func (i DatastoreSchemaDefinitionArgs) ToDatastoreSchemaDefinitionOutputWithContext(ctx context.Context) DatastoreSchemaDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreSchemaDefinitionOutput)
}

func (i DatastoreSchemaDefinitionArgs) ToDatastoreSchemaDefinitionPtrOutput() DatastoreSchemaDefinitionPtrOutput {
	return i.ToDatastoreSchemaDefinitionPtrOutputWithContext(context.Background())
}

func (i DatastoreSchemaDefinitionArgs) ToDatastoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) DatastoreSchemaDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreSchemaDefinitionOutput).ToDatastoreSchemaDefinitionPtrOutputWithContext(ctx)
}

// DatastoreSchemaDefinitionPtrInput is an input type that accepts DatastoreSchemaDefinitionArgs, DatastoreSchemaDefinitionPtr and DatastoreSchemaDefinitionPtrOutput values.
// You can construct a concrete instance of `DatastoreSchemaDefinitionPtrInput` via:
//
//          DatastoreSchemaDefinitionArgs{...}
//
//  or:
//
//          nil
type DatastoreSchemaDefinitionPtrInput interface {
	pulumi.Input

	ToDatastoreSchemaDefinitionPtrOutput() DatastoreSchemaDefinitionPtrOutput
	ToDatastoreSchemaDefinitionPtrOutputWithContext(context.Context) DatastoreSchemaDefinitionPtrOutput
}

type datastoreSchemaDefinitionPtrType DatastoreSchemaDefinitionArgs

func DatastoreSchemaDefinitionPtr(v *DatastoreSchemaDefinitionArgs) DatastoreSchemaDefinitionPtrInput {
	return (*datastoreSchemaDefinitionPtrType)(v)
}

func (*datastoreSchemaDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreSchemaDefinition)(nil)).Elem()
}

func (i *datastoreSchemaDefinitionPtrType) ToDatastoreSchemaDefinitionPtrOutput() DatastoreSchemaDefinitionPtrOutput {
	return i.ToDatastoreSchemaDefinitionPtrOutputWithContext(context.Background())
}

func (i *datastoreSchemaDefinitionPtrType) ToDatastoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) DatastoreSchemaDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreSchemaDefinitionPtrOutput)
}

type DatastoreSchemaDefinitionOutput struct{ *pulumi.OutputState }

func (DatastoreSchemaDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreSchemaDefinition)(nil)).Elem()
}

func (o DatastoreSchemaDefinitionOutput) ToDatastoreSchemaDefinitionOutput() DatastoreSchemaDefinitionOutput {
	return o
}

func (o DatastoreSchemaDefinitionOutput) ToDatastoreSchemaDefinitionOutputWithContext(ctx context.Context) DatastoreSchemaDefinitionOutput {
	return o
}

func (o DatastoreSchemaDefinitionOutput) ToDatastoreSchemaDefinitionPtrOutput() DatastoreSchemaDefinitionPtrOutput {
	return o.ToDatastoreSchemaDefinitionPtrOutputWithContext(context.Background())
}

func (o DatastoreSchemaDefinitionOutput) ToDatastoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) DatastoreSchemaDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreSchemaDefinition) *DatastoreSchemaDefinition {
		return &v
	}).(DatastoreSchemaDefinitionPtrOutput)
}

func (o DatastoreSchemaDefinitionOutput) Columns() DatastoreColumnArrayOutput {
	return o.ApplyT(func(v DatastoreSchemaDefinition) []DatastoreColumn { return v.Columns }).(DatastoreColumnArrayOutput)
}

type DatastoreSchemaDefinitionPtrOutput struct{ *pulumi.OutputState }

func (DatastoreSchemaDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreSchemaDefinition)(nil)).Elem()
}

func (o DatastoreSchemaDefinitionPtrOutput) ToDatastoreSchemaDefinitionPtrOutput() DatastoreSchemaDefinitionPtrOutput {
	return o
}

func (o DatastoreSchemaDefinitionPtrOutput) ToDatastoreSchemaDefinitionPtrOutputWithContext(ctx context.Context) DatastoreSchemaDefinitionPtrOutput {
	return o
}

func (o DatastoreSchemaDefinitionPtrOutput) Elem() DatastoreSchemaDefinitionOutput {
	return o.ApplyT(func(v *DatastoreSchemaDefinition) DatastoreSchemaDefinition {
		if v != nil {
			return *v
		}
		var ret DatastoreSchemaDefinition
		return ret
	}).(DatastoreSchemaDefinitionOutput)
}

func (o DatastoreSchemaDefinitionPtrOutput) Columns() DatastoreColumnArrayOutput {
	return o.ApplyT(func(v *DatastoreSchemaDefinition) []DatastoreColumn {
		if v == nil {
			return nil
		}
		return v.Columns
	}).(DatastoreColumnArrayOutput)
}

type DatastoreServiceManagedS3 struct {
}

// DatastoreServiceManagedS3Input is an input type that accepts DatastoreServiceManagedS3Args and DatastoreServiceManagedS3Output values.
// You can construct a concrete instance of `DatastoreServiceManagedS3Input` via:
//
//          DatastoreServiceManagedS3Args{...}
type DatastoreServiceManagedS3Input interface {
	pulumi.Input

	ToDatastoreServiceManagedS3Output() DatastoreServiceManagedS3Output
	ToDatastoreServiceManagedS3OutputWithContext(context.Context) DatastoreServiceManagedS3Output
}

type DatastoreServiceManagedS3Args struct {
}

func (DatastoreServiceManagedS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreServiceManagedS3)(nil)).Elem()
}

func (i DatastoreServiceManagedS3Args) ToDatastoreServiceManagedS3Output() DatastoreServiceManagedS3Output {
	return i.ToDatastoreServiceManagedS3OutputWithContext(context.Background())
}

func (i DatastoreServiceManagedS3Args) ToDatastoreServiceManagedS3OutputWithContext(ctx context.Context) DatastoreServiceManagedS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreServiceManagedS3Output)
}

func (i DatastoreServiceManagedS3Args) ToDatastoreServiceManagedS3PtrOutput() DatastoreServiceManagedS3PtrOutput {
	return i.ToDatastoreServiceManagedS3PtrOutputWithContext(context.Background())
}

func (i DatastoreServiceManagedS3Args) ToDatastoreServiceManagedS3PtrOutputWithContext(ctx context.Context) DatastoreServiceManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreServiceManagedS3Output).ToDatastoreServiceManagedS3PtrOutputWithContext(ctx)
}

// DatastoreServiceManagedS3PtrInput is an input type that accepts DatastoreServiceManagedS3Args, DatastoreServiceManagedS3Ptr and DatastoreServiceManagedS3PtrOutput values.
// You can construct a concrete instance of `DatastoreServiceManagedS3PtrInput` via:
//
//          DatastoreServiceManagedS3Args{...}
//
//  or:
//
//          nil
type DatastoreServiceManagedS3PtrInput interface {
	pulumi.Input

	ToDatastoreServiceManagedS3PtrOutput() DatastoreServiceManagedS3PtrOutput
	ToDatastoreServiceManagedS3PtrOutputWithContext(context.Context) DatastoreServiceManagedS3PtrOutput
}

type datastoreServiceManagedS3PtrType DatastoreServiceManagedS3Args

func DatastoreServiceManagedS3Ptr(v *DatastoreServiceManagedS3Args) DatastoreServiceManagedS3PtrInput {
	return (*datastoreServiceManagedS3PtrType)(v)
}

func (*datastoreServiceManagedS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreServiceManagedS3)(nil)).Elem()
}

func (i *datastoreServiceManagedS3PtrType) ToDatastoreServiceManagedS3PtrOutput() DatastoreServiceManagedS3PtrOutput {
	return i.ToDatastoreServiceManagedS3PtrOutputWithContext(context.Background())
}

func (i *datastoreServiceManagedS3PtrType) ToDatastoreServiceManagedS3PtrOutputWithContext(ctx context.Context) DatastoreServiceManagedS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreServiceManagedS3PtrOutput)
}

type DatastoreServiceManagedS3Output struct{ *pulumi.OutputState }

func (DatastoreServiceManagedS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreServiceManagedS3)(nil)).Elem()
}

func (o DatastoreServiceManagedS3Output) ToDatastoreServiceManagedS3Output() DatastoreServiceManagedS3Output {
	return o
}

func (o DatastoreServiceManagedS3Output) ToDatastoreServiceManagedS3OutputWithContext(ctx context.Context) DatastoreServiceManagedS3Output {
	return o
}

func (o DatastoreServiceManagedS3Output) ToDatastoreServiceManagedS3PtrOutput() DatastoreServiceManagedS3PtrOutput {
	return o.ToDatastoreServiceManagedS3PtrOutputWithContext(context.Background())
}

func (o DatastoreServiceManagedS3Output) ToDatastoreServiceManagedS3PtrOutputWithContext(ctx context.Context) DatastoreServiceManagedS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreServiceManagedS3) *DatastoreServiceManagedS3 {
		return &v
	}).(DatastoreServiceManagedS3PtrOutput)
}

type DatastoreServiceManagedS3PtrOutput struct{ *pulumi.OutputState }

func (DatastoreServiceManagedS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreServiceManagedS3)(nil)).Elem()
}

func (o DatastoreServiceManagedS3PtrOutput) ToDatastoreServiceManagedS3PtrOutput() DatastoreServiceManagedS3PtrOutput {
	return o
}

func (o DatastoreServiceManagedS3PtrOutput) ToDatastoreServiceManagedS3PtrOutputWithContext(ctx context.Context) DatastoreServiceManagedS3PtrOutput {
	return o
}

func (o DatastoreServiceManagedS3PtrOutput) Elem() DatastoreServiceManagedS3Output {
	return o.ApplyT(func(v *DatastoreServiceManagedS3) DatastoreServiceManagedS3 {
		if v != nil {
			return *v
		}
		var ret DatastoreServiceManagedS3
		return ret
	}).(DatastoreServiceManagedS3Output)
}

type DatastoreStorage struct {
	CustomerManagedS3            *DatastoreCustomerManagedS3            `pulumi:"customerManagedS3"`
	IotSiteWiseMultiLayerStorage *DatastoreIotSiteWiseMultiLayerStorage `pulumi:"iotSiteWiseMultiLayerStorage"`
	ServiceManagedS3             *DatastoreServiceManagedS3             `pulumi:"serviceManagedS3"`
}

// DatastoreStorageInput is an input type that accepts DatastoreStorageArgs and DatastoreStorageOutput values.
// You can construct a concrete instance of `DatastoreStorageInput` via:
//
//          DatastoreStorageArgs{...}
type DatastoreStorageInput interface {
	pulumi.Input

	ToDatastoreStorageOutput() DatastoreStorageOutput
	ToDatastoreStorageOutputWithContext(context.Context) DatastoreStorageOutput
}

type DatastoreStorageArgs struct {
	CustomerManagedS3            DatastoreCustomerManagedS3PtrInput            `pulumi:"customerManagedS3"`
	IotSiteWiseMultiLayerStorage DatastoreIotSiteWiseMultiLayerStoragePtrInput `pulumi:"iotSiteWiseMultiLayerStorage"`
	ServiceManagedS3             DatastoreServiceManagedS3PtrInput             `pulumi:"serviceManagedS3"`
}

func (DatastoreStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreStorage)(nil)).Elem()
}

func (i DatastoreStorageArgs) ToDatastoreStorageOutput() DatastoreStorageOutput {
	return i.ToDatastoreStorageOutputWithContext(context.Background())
}

func (i DatastoreStorageArgs) ToDatastoreStorageOutputWithContext(ctx context.Context) DatastoreStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreStorageOutput)
}

func (i DatastoreStorageArgs) ToDatastoreStoragePtrOutput() DatastoreStoragePtrOutput {
	return i.ToDatastoreStoragePtrOutputWithContext(context.Background())
}

func (i DatastoreStorageArgs) ToDatastoreStoragePtrOutputWithContext(ctx context.Context) DatastoreStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreStorageOutput).ToDatastoreStoragePtrOutputWithContext(ctx)
}

// DatastoreStoragePtrInput is an input type that accepts DatastoreStorageArgs, DatastoreStoragePtr and DatastoreStoragePtrOutput values.
// You can construct a concrete instance of `DatastoreStoragePtrInput` via:
//
//          DatastoreStorageArgs{...}
//
//  or:
//
//          nil
type DatastoreStoragePtrInput interface {
	pulumi.Input

	ToDatastoreStoragePtrOutput() DatastoreStoragePtrOutput
	ToDatastoreStoragePtrOutputWithContext(context.Context) DatastoreStoragePtrOutput
}

type datastoreStoragePtrType DatastoreStorageArgs

func DatastoreStoragePtr(v *DatastoreStorageArgs) DatastoreStoragePtrInput {
	return (*datastoreStoragePtrType)(v)
}

func (*datastoreStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreStorage)(nil)).Elem()
}

func (i *datastoreStoragePtrType) ToDatastoreStoragePtrOutput() DatastoreStoragePtrOutput {
	return i.ToDatastoreStoragePtrOutputWithContext(context.Background())
}

func (i *datastoreStoragePtrType) ToDatastoreStoragePtrOutputWithContext(ctx context.Context) DatastoreStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreStoragePtrOutput)
}

type DatastoreStorageOutput struct{ *pulumi.OutputState }

func (DatastoreStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreStorage)(nil)).Elem()
}

func (o DatastoreStorageOutput) ToDatastoreStorageOutput() DatastoreStorageOutput {
	return o
}

func (o DatastoreStorageOutput) ToDatastoreStorageOutputWithContext(ctx context.Context) DatastoreStorageOutput {
	return o
}

func (o DatastoreStorageOutput) ToDatastoreStoragePtrOutput() DatastoreStoragePtrOutput {
	return o.ToDatastoreStoragePtrOutputWithContext(context.Background())
}

func (o DatastoreStorageOutput) ToDatastoreStoragePtrOutputWithContext(ctx context.Context) DatastoreStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreStorage) *DatastoreStorage {
		return &v
	}).(DatastoreStoragePtrOutput)
}

func (o DatastoreStorageOutput) CustomerManagedS3() DatastoreCustomerManagedS3PtrOutput {
	return o.ApplyT(func(v DatastoreStorage) *DatastoreCustomerManagedS3 { return v.CustomerManagedS3 }).(DatastoreCustomerManagedS3PtrOutput)
}

func (o DatastoreStorageOutput) IotSiteWiseMultiLayerStorage() DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return o.ApplyT(func(v DatastoreStorage) *DatastoreIotSiteWiseMultiLayerStorage { return v.IotSiteWiseMultiLayerStorage }).(DatastoreIotSiteWiseMultiLayerStoragePtrOutput)
}

func (o DatastoreStorageOutput) ServiceManagedS3() DatastoreServiceManagedS3PtrOutput {
	return o.ApplyT(func(v DatastoreStorage) *DatastoreServiceManagedS3 { return v.ServiceManagedS3 }).(DatastoreServiceManagedS3PtrOutput)
}

type DatastoreStoragePtrOutput struct{ *pulumi.OutputState }

func (DatastoreStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreStorage)(nil)).Elem()
}

func (o DatastoreStoragePtrOutput) ToDatastoreStoragePtrOutput() DatastoreStoragePtrOutput {
	return o
}

func (o DatastoreStoragePtrOutput) ToDatastoreStoragePtrOutputWithContext(ctx context.Context) DatastoreStoragePtrOutput {
	return o
}

func (o DatastoreStoragePtrOutput) Elem() DatastoreStorageOutput {
	return o.ApplyT(func(v *DatastoreStorage) DatastoreStorage {
		if v != nil {
			return *v
		}
		var ret DatastoreStorage
		return ret
	}).(DatastoreStorageOutput)
}

func (o DatastoreStoragePtrOutput) CustomerManagedS3() DatastoreCustomerManagedS3PtrOutput {
	return o.ApplyT(func(v *DatastoreStorage) *DatastoreCustomerManagedS3 {
		if v == nil {
			return nil
		}
		return v.CustomerManagedS3
	}).(DatastoreCustomerManagedS3PtrOutput)
}

func (o DatastoreStoragePtrOutput) IotSiteWiseMultiLayerStorage() DatastoreIotSiteWiseMultiLayerStoragePtrOutput {
	return o.ApplyT(func(v *DatastoreStorage) *DatastoreIotSiteWiseMultiLayerStorage {
		if v == nil {
			return nil
		}
		return v.IotSiteWiseMultiLayerStorage
	}).(DatastoreIotSiteWiseMultiLayerStoragePtrOutput)
}

func (o DatastoreStoragePtrOutput) ServiceManagedS3() DatastoreServiceManagedS3PtrOutput {
	return o.ApplyT(func(v *DatastoreStorage) *DatastoreServiceManagedS3 {
		if v == nil {
			return nil
		}
		return v.ServiceManagedS3
	}).(DatastoreServiceManagedS3PtrOutput)
}

type DatastoreTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// DatastoreTagInput is an input type that accepts DatastoreTagArgs and DatastoreTagOutput values.
// You can construct a concrete instance of `DatastoreTagInput` via:
//
//          DatastoreTagArgs{...}
type DatastoreTagInput interface {
	pulumi.Input

	ToDatastoreTagOutput() DatastoreTagOutput
	ToDatastoreTagOutputWithContext(context.Context) DatastoreTagOutput
}

type DatastoreTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatastoreTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreTag)(nil)).Elem()
}

func (i DatastoreTagArgs) ToDatastoreTagOutput() DatastoreTagOutput {
	return i.ToDatastoreTagOutputWithContext(context.Background())
}

func (i DatastoreTagArgs) ToDatastoreTagOutputWithContext(ctx context.Context) DatastoreTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreTagOutput)
}

// DatastoreTagArrayInput is an input type that accepts DatastoreTagArray and DatastoreTagArrayOutput values.
// You can construct a concrete instance of `DatastoreTagArrayInput` via:
//
//          DatastoreTagArray{ DatastoreTagArgs{...} }
type DatastoreTagArrayInput interface {
	pulumi.Input

	ToDatastoreTagArrayOutput() DatastoreTagArrayOutput
	ToDatastoreTagArrayOutputWithContext(context.Context) DatastoreTagArrayOutput
}

type DatastoreTagArray []DatastoreTagInput

func (DatastoreTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastoreTag)(nil)).Elem()
}

func (i DatastoreTagArray) ToDatastoreTagArrayOutput() DatastoreTagArrayOutput {
	return i.ToDatastoreTagArrayOutputWithContext(context.Background())
}

func (i DatastoreTagArray) ToDatastoreTagArrayOutputWithContext(ctx context.Context) DatastoreTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreTagArrayOutput)
}

type DatastoreTagOutput struct{ *pulumi.OutputState }

func (DatastoreTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreTag)(nil)).Elem()
}

func (o DatastoreTagOutput) ToDatastoreTagOutput() DatastoreTagOutput {
	return o
}

func (o DatastoreTagOutput) ToDatastoreTagOutputWithContext(ctx context.Context) DatastoreTagOutput {
	return o
}

func (o DatastoreTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o DatastoreTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreTag) string { return v.Value }).(pulumi.StringOutput)
}

type DatastoreTagArrayOutput struct{ *pulumi.OutputState }

func (DatastoreTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatastoreTag)(nil)).Elem()
}

func (o DatastoreTagArrayOutput) ToDatastoreTagArrayOutput() DatastoreTagArrayOutput {
	return o
}

func (o DatastoreTagArrayOutput) ToDatastoreTagArrayOutputWithContext(ctx context.Context) DatastoreTagArrayOutput {
	return o
}

func (o DatastoreTagArrayOutput) Index(i pulumi.IntInput) DatastoreTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatastoreTag {
		return vs[0].([]DatastoreTag)[vs[1].(int)]
	}).(DatastoreTagOutput)
}

type DatastoreTimestampPartition struct {
	AttributeName   string  `pulumi:"attributeName"`
	TimestampFormat *string `pulumi:"timestampFormat"`
}

// DatastoreTimestampPartitionInput is an input type that accepts DatastoreTimestampPartitionArgs and DatastoreTimestampPartitionOutput values.
// You can construct a concrete instance of `DatastoreTimestampPartitionInput` via:
//
//          DatastoreTimestampPartitionArgs{...}
type DatastoreTimestampPartitionInput interface {
	pulumi.Input

	ToDatastoreTimestampPartitionOutput() DatastoreTimestampPartitionOutput
	ToDatastoreTimestampPartitionOutputWithContext(context.Context) DatastoreTimestampPartitionOutput
}

type DatastoreTimestampPartitionArgs struct {
	AttributeName   pulumi.StringInput    `pulumi:"attributeName"`
	TimestampFormat pulumi.StringPtrInput `pulumi:"timestampFormat"`
}

func (DatastoreTimestampPartitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreTimestampPartition)(nil)).Elem()
}

func (i DatastoreTimestampPartitionArgs) ToDatastoreTimestampPartitionOutput() DatastoreTimestampPartitionOutput {
	return i.ToDatastoreTimestampPartitionOutputWithContext(context.Background())
}

func (i DatastoreTimestampPartitionArgs) ToDatastoreTimestampPartitionOutputWithContext(ctx context.Context) DatastoreTimestampPartitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreTimestampPartitionOutput)
}

func (i DatastoreTimestampPartitionArgs) ToDatastoreTimestampPartitionPtrOutput() DatastoreTimestampPartitionPtrOutput {
	return i.ToDatastoreTimestampPartitionPtrOutputWithContext(context.Background())
}

func (i DatastoreTimestampPartitionArgs) ToDatastoreTimestampPartitionPtrOutputWithContext(ctx context.Context) DatastoreTimestampPartitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreTimestampPartitionOutput).ToDatastoreTimestampPartitionPtrOutputWithContext(ctx)
}

// DatastoreTimestampPartitionPtrInput is an input type that accepts DatastoreTimestampPartitionArgs, DatastoreTimestampPartitionPtr and DatastoreTimestampPartitionPtrOutput values.
// You can construct a concrete instance of `DatastoreTimestampPartitionPtrInput` via:
//
//          DatastoreTimestampPartitionArgs{...}
//
//  or:
//
//          nil
type DatastoreTimestampPartitionPtrInput interface {
	pulumi.Input

	ToDatastoreTimestampPartitionPtrOutput() DatastoreTimestampPartitionPtrOutput
	ToDatastoreTimestampPartitionPtrOutputWithContext(context.Context) DatastoreTimestampPartitionPtrOutput
}

type datastoreTimestampPartitionPtrType DatastoreTimestampPartitionArgs

func DatastoreTimestampPartitionPtr(v *DatastoreTimestampPartitionArgs) DatastoreTimestampPartitionPtrInput {
	return (*datastoreTimestampPartitionPtrType)(v)
}

func (*datastoreTimestampPartitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreTimestampPartition)(nil)).Elem()
}

func (i *datastoreTimestampPartitionPtrType) ToDatastoreTimestampPartitionPtrOutput() DatastoreTimestampPartitionPtrOutput {
	return i.ToDatastoreTimestampPartitionPtrOutputWithContext(context.Background())
}

func (i *datastoreTimestampPartitionPtrType) ToDatastoreTimestampPartitionPtrOutputWithContext(ctx context.Context) DatastoreTimestampPartitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatastoreTimestampPartitionPtrOutput)
}

type DatastoreTimestampPartitionOutput struct{ *pulumi.OutputState }

func (DatastoreTimestampPartitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatastoreTimestampPartition)(nil)).Elem()
}

func (o DatastoreTimestampPartitionOutput) ToDatastoreTimestampPartitionOutput() DatastoreTimestampPartitionOutput {
	return o
}

func (o DatastoreTimestampPartitionOutput) ToDatastoreTimestampPartitionOutputWithContext(ctx context.Context) DatastoreTimestampPartitionOutput {
	return o
}

func (o DatastoreTimestampPartitionOutput) ToDatastoreTimestampPartitionPtrOutput() DatastoreTimestampPartitionPtrOutput {
	return o.ToDatastoreTimestampPartitionPtrOutputWithContext(context.Background())
}

func (o DatastoreTimestampPartitionOutput) ToDatastoreTimestampPartitionPtrOutputWithContext(ctx context.Context) DatastoreTimestampPartitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatastoreTimestampPartition) *DatastoreTimestampPartition {
		return &v
	}).(DatastoreTimestampPartitionPtrOutput)
}

func (o DatastoreTimestampPartitionOutput) AttributeName() pulumi.StringOutput {
	return o.ApplyT(func(v DatastoreTimestampPartition) string { return v.AttributeName }).(pulumi.StringOutput)
}

func (o DatastoreTimestampPartitionOutput) TimestampFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatastoreTimestampPartition) *string { return v.TimestampFormat }).(pulumi.StringPtrOutput)
}

type DatastoreTimestampPartitionPtrOutput struct{ *pulumi.OutputState }

func (DatastoreTimestampPartitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatastoreTimestampPartition)(nil)).Elem()
}

func (o DatastoreTimestampPartitionPtrOutput) ToDatastoreTimestampPartitionPtrOutput() DatastoreTimestampPartitionPtrOutput {
	return o
}

func (o DatastoreTimestampPartitionPtrOutput) ToDatastoreTimestampPartitionPtrOutputWithContext(ctx context.Context) DatastoreTimestampPartitionPtrOutput {
	return o
}

func (o DatastoreTimestampPartitionPtrOutput) Elem() DatastoreTimestampPartitionOutput {
	return o.ApplyT(func(v *DatastoreTimestampPartition) DatastoreTimestampPartition {
		if v != nil {
			return *v
		}
		var ret DatastoreTimestampPartition
		return ret
	}).(DatastoreTimestampPartitionOutput)
}

func (o DatastoreTimestampPartitionPtrOutput) AttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreTimestampPartition) *string {
		if v == nil {
			return nil
		}
		return &v.AttributeName
	}).(pulumi.StringPtrOutput)
}

func (o DatastoreTimestampPartitionPtrOutput) TimestampFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DatastoreTimestampPartition) *string {
		if v == nil {
			return nil
		}
		return v.TimestampFormat
	}).(pulumi.StringPtrOutput)
}

type PipelineActivity struct {
	AddAttributes        *PipelineAddAttributes        `pulumi:"addAttributes"`
	Channel              *PipelineChannel              `pulumi:"channel"`
	Datastore            *PipelineDatastore            `pulumi:"datastore"`
	DeviceRegistryEnrich *PipelineDeviceRegistryEnrich `pulumi:"deviceRegistryEnrich"`
	DeviceShadowEnrich   *PipelineDeviceShadowEnrich   `pulumi:"deviceShadowEnrich"`
	Filter               *PipelineFilter               `pulumi:"filter"`
	Lambda               *PipelineLambda               `pulumi:"lambda"`
	Math                 *PipelineMath                 `pulumi:"math"`
	RemoveAttributes     *PipelineRemoveAttributes     `pulumi:"removeAttributes"`
	SelectAttributes     *PipelineSelectAttributes     `pulumi:"selectAttributes"`
}

// PipelineActivityInput is an input type that accepts PipelineActivityArgs and PipelineActivityOutput values.
// You can construct a concrete instance of `PipelineActivityInput` via:
//
//          PipelineActivityArgs{...}
type PipelineActivityInput interface {
	pulumi.Input

	ToPipelineActivityOutput() PipelineActivityOutput
	ToPipelineActivityOutputWithContext(context.Context) PipelineActivityOutput
}

type PipelineActivityArgs struct {
	AddAttributes        PipelineAddAttributesPtrInput        `pulumi:"addAttributes"`
	Channel              PipelineChannelPtrInput              `pulumi:"channel"`
	Datastore            PipelineDatastorePtrInput            `pulumi:"datastore"`
	DeviceRegistryEnrich PipelineDeviceRegistryEnrichPtrInput `pulumi:"deviceRegistryEnrich"`
	DeviceShadowEnrich   PipelineDeviceShadowEnrichPtrInput   `pulumi:"deviceShadowEnrich"`
	Filter               PipelineFilterPtrInput               `pulumi:"filter"`
	Lambda               PipelineLambdaPtrInput               `pulumi:"lambda"`
	Math                 PipelineMathPtrInput                 `pulumi:"math"`
	RemoveAttributes     PipelineRemoveAttributesPtrInput     `pulumi:"removeAttributes"`
	SelectAttributes     PipelineSelectAttributesPtrInput     `pulumi:"selectAttributes"`
}

func (PipelineActivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActivity)(nil)).Elem()
}

func (i PipelineActivityArgs) ToPipelineActivityOutput() PipelineActivityOutput {
	return i.ToPipelineActivityOutputWithContext(context.Background())
}

func (i PipelineActivityArgs) ToPipelineActivityOutputWithContext(ctx context.Context) PipelineActivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineActivityOutput)
}

// PipelineActivityArrayInput is an input type that accepts PipelineActivityArray and PipelineActivityArrayOutput values.
// You can construct a concrete instance of `PipelineActivityArrayInput` via:
//
//          PipelineActivityArray{ PipelineActivityArgs{...} }
type PipelineActivityArrayInput interface {
	pulumi.Input

	ToPipelineActivityArrayOutput() PipelineActivityArrayOutput
	ToPipelineActivityArrayOutputWithContext(context.Context) PipelineActivityArrayOutput
}

type PipelineActivityArray []PipelineActivityInput

func (PipelineActivityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineActivity)(nil)).Elem()
}

func (i PipelineActivityArray) ToPipelineActivityArrayOutput() PipelineActivityArrayOutput {
	return i.ToPipelineActivityArrayOutputWithContext(context.Background())
}

func (i PipelineActivityArray) ToPipelineActivityArrayOutputWithContext(ctx context.Context) PipelineActivityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineActivityArrayOutput)
}

type PipelineActivityOutput struct{ *pulumi.OutputState }

func (PipelineActivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActivity)(nil)).Elem()
}

func (o PipelineActivityOutput) ToPipelineActivityOutput() PipelineActivityOutput {
	return o
}

func (o PipelineActivityOutput) ToPipelineActivityOutputWithContext(ctx context.Context) PipelineActivityOutput {
	return o
}

func (o PipelineActivityOutput) AddAttributes() PipelineAddAttributesPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineAddAttributes { return v.AddAttributes }).(PipelineAddAttributesPtrOutput)
}

func (o PipelineActivityOutput) Channel() PipelineChannelPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineChannel { return v.Channel }).(PipelineChannelPtrOutput)
}

func (o PipelineActivityOutput) Datastore() PipelineDatastorePtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineDatastore { return v.Datastore }).(PipelineDatastorePtrOutput)
}

func (o PipelineActivityOutput) DeviceRegistryEnrich() PipelineDeviceRegistryEnrichPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineDeviceRegistryEnrich { return v.DeviceRegistryEnrich }).(PipelineDeviceRegistryEnrichPtrOutput)
}

func (o PipelineActivityOutput) DeviceShadowEnrich() PipelineDeviceShadowEnrichPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineDeviceShadowEnrich { return v.DeviceShadowEnrich }).(PipelineDeviceShadowEnrichPtrOutput)
}

func (o PipelineActivityOutput) Filter() PipelineFilterPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineFilter { return v.Filter }).(PipelineFilterPtrOutput)
}

func (o PipelineActivityOutput) Lambda() PipelineLambdaPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineLambda { return v.Lambda }).(PipelineLambdaPtrOutput)
}

func (o PipelineActivityOutput) Math() PipelineMathPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineMath { return v.Math }).(PipelineMathPtrOutput)
}

func (o PipelineActivityOutput) RemoveAttributes() PipelineRemoveAttributesPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineRemoveAttributes { return v.RemoveAttributes }).(PipelineRemoveAttributesPtrOutput)
}

func (o PipelineActivityOutput) SelectAttributes() PipelineSelectAttributesPtrOutput {
	return o.ApplyT(func(v PipelineActivity) *PipelineSelectAttributes { return v.SelectAttributes }).(PipelineSelectAttributesPtrOutput)
}

type PipelineActivityArrayOutput struct{ *pulumi.OutputState }

func (PipelineActivityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineActivity)(nil)).Elem()
}

func (o PipelineActivityArrayOutput) ToPipelineActivityArrayOutput() PipelineActivityArrayOutput {
	return o
}

func (o PipelineActivityArrayOutput) ToPipelineActivityArrayOutputWithContext(ctx context.Context) PipelineActivityArrayOutput {
	return o
}

func (o PipelineActivityArrayOutput) Index(i pulumi.IntInput) PipelineActivityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineActivity {
		return vs[0].([]PipelineActivity)[vs[1].(int)]
	}).(PipelineActivityOutput)
}

type PipelineAddAttributes struct {
	Attributes interface{} `pulumi:"attributes"`
	Name       *string     `pulumi:"name"`
	Next       *string     `pulumi:"next"`
}

// PipelineAddAttributesInput is an input type that accepts PipelineAddAttributesArgs and PipelineAddAttributesOutput values.
// You can construct a concrete instance of `PipelineAddAttributesInput` via:
//
//          PipelineAddAttributesArgs{...}
type PipelineAddAttributesInput interface {
	pulumi.Input

	ToPipelineAddAttributesOutput() PipelineAddAttributesOutput
	ToPipelineAddAttributesOutputWithContext(context.Context) PipelineAddAttributesOutput
}

type PipelineAddAttributesArgs struct {
	Attributes pulumi.Input          `pulumi:"attributes"`
	Name       pulumi.StringPtrInput `pulumi:"name"`
	Next       pulumi.StringPtrInput `pulumi:"next"`
}

func (PipelineAddAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineAddAttributes)(nil)).Elem()
}

func (i PipelineAddAttributesArgs) ToPipelineAddAttributesOutput() PipelineAddAttributesOutput {
	return i.ToPipelineAddAttributesOutputWithContext(context.Background())
}

func (i PipelineAddAttributesArgs) ToPipelineAddAttributesOutputWithContext(ctx context.Context) PipelineAddAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineAddAttributesOutput)
}

func (i PipelineAddAttributesArgs) ToPipelineAddAttributesPtrOutput() PipelineAddAttributesPtrOutput {
	return i.ToPipelineAddAttributesPtrOutputWithContext(context.Background())
}

func (i PipelineAddAttributesArgs) ToPipelineAddAttributesPtrOutputWithContext(ctx context.Context) PipelineAddAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineAddAttributesOutput).ToPipelineAddAttributesPtrOutputWithContext(ctx)
}

// PipelineAddAttributesPtrInput is an input type that accepts PipelineAddAttributesArgs, PipelineAddAttributesPtr and PipelineAddAttributesPtrOutput values.
// You can construct a concrete instance of `PipelineAddAttributesPtrInput` via:
//
//          PipelineAddAttributesArgs{...}
//
//  or:
//
//          nil
type PipelineAddAttributesPtrInput interface {
	pulumi.Input

	ToPipelineAddAttributesPtrOutput() PipelineAddAttributesPtrOutput
	ToPipelineAddAttributesPtrOutputWithContext(context.Context) PipelineAddAttributesPtrOutput
}

type pipelineAddAttributesPtrType PipelineAddAttributesArgs

func PipelineAddAttributesPtr(v *PipelineAddAttributesArgs) PipelineAddAttributesPtrInput {
	return (*pipelineAddAttributesPtrType)(v)
}

func (*pipelineAddAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineAddAttributes)(nil)).Elem()
}

func (i *pipelineAddAttributesPtrType) ToPipelineAddAttributesPtrOutput() PipelineAddAttributesPtrOutput {
	return i.ToPipelineAddAttributesPtrOutputWithContext(context.Background())
}

func (i *pipelineAddAttributesPtrType) ToPipelineAddAttributesPtrOutputWithContext(ctx context.Context) PipelineAddAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineAddAttributesPtrOutput)
}

type PipelineAddAttributesOutput struct{ *pulumi.OutputState }

func (PipelineAddAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineAddAttributes)(nil)).Elem()
}

func (o PipelineAddAttributesOutput) ToPipelineAddAttributesOutput() PipelineAddAttributesOutput {
	return o
}

func (o PipelineAddAttributesOutput) ToPipelineAddAttributesOutputWithContext(ctx context.Context) PipelineAddAttributesOutput {
	return o
}

func (o PipelineAddAttributesOutput) ToPipelineAddAttributesPtrOutput() PipelineAddAttributesPtrOutput {
	return o.ToPipelineAddAttributesPtrOutputWithContext(context.Background())
}

func (o PipelineAddAttributesOutput) ToPipelineAddAttributesPtrOutputWithContext(ctx context.Context) PipelineAddAttributesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineAddAttributes) *PipelineAddAttributes {
		return &v
	}).(PipelineAddAttributesPtrOutput)
}

func (o PipelineAddAttributesOutput) Attributes() pulumi.AnyOutput {
	return o.ApplyT(func(v PipelineAddAttributes) interface{} { return v.Attributes }).(pulumi.AnyOutput)
}

func (o PipelineAddAttributesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineAddAttributes) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PipelineAddAttributesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineAddAttributes) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineAddAttributesPtrOutput struct{ *pulumi.OutputState }

func (PipelineAddAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineAddAttributes)(nil)).Elem()
}

func (o PipelineAddAttributesPtrOutput) ToPipelineAddAttributesPtrOutput() PipelineAddAttributesPtrOutput {
	return o
}

func (o PipelineAddAttributesPtrOutput) ToPipelineAddAttributesPtrOutputWithContext(ctx context.Context) PipelineAddAttributesPtrOutput {
	return o
}

func (o PipelineAddAttributesPtrOutput) Elem() PipelineAddAttributesOutput {
	return o.ApplyT(func(v *PipelineAddAttributes) PipelineAddAttributes {
		if v != nil {
			return *v
		}
		var ret PipelineAddAttributes
		return ret
	}).(PipelineAddAttributesOutput)
}

func (o PipelineAddAttributesPtrOutput) Attributes() pulumi.AnyOutput {
	return o.ApplyT(func(v *PipelineAddAttributes) interface{} {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.AnyOutput)
}

func (o PipelineAddAttributesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineAddAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o PipelineAddAttributesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineAddAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineChannel struct {
	ChannelName *string `pulumi:"channelName"`
	Name        *string `pulumi:"name"`
	Next        *string `pulumi:"next"`
}

// PipelineChannelInput is an input type that accepts PipelineChannelArgs and PipelineChannelOutput values.
// You can construct a concrete instance of `PipelineChannelInput` via:
//
//          PipelineChannelArgs{...}
type PipelineChannelInput interface {
	pulumi.Input

	ToPipelineChannelOutput() PipelineChannelOutput
	ToPipelineChannelOutputWithContext(context.Context) PipelineChannelOutput
}

type PipelineChannelArgs struct {
	ChannelName pulumi.StringPtrInput `pulumi:"channelName"`
	Name        pulumi.StringPtrInput `pulumi:"name"`
	Next        pulumi.StringPtrInput `pulumi:"next"`
}

func (PipelineChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineChannel)(nil)).Elem()
}

func (i PipelineChannelArgs) ToPipelineChannelOutput() PipelineChannelOutput {
	return i.ToPipelineChannelOutputWithContext(context.Background())
}

func (i PipelineChannelArgs) ToPipelineChannelOutputWithContext(ctx context.Context) PipelineChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineChannelOutput)
}

func (i PipelineChannelArgs) ToPipelineChannelPtrOutput() PipelineChannelPtrOutput {
	return i.ToPipelineChannelPtrOutputWithContext(context.Background())
}

func (i PipelineChannelArgs) ToPipelineChannelPtrOutputWithContext(ctx context.Context) PipelineChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineChannelOutput).ToPipelineChannelPtrOutputWithContext(ctx)
}

// PipelineChannelPtrInput is an input type that accepts PipelineChannelArgs, PipelineChannelPtr and PipelineChannelPtrOutput values.
// You can construct a concrete instance of `PipelineChannelPtrInput` via:
//
//          PipelineChannelArgs{...}
//
//  or:
//
//          nil
type PipelineChannelPtrInput interface {
	pulumi.Input

	ToPipelineChannelPtrOutput() PipelineChannelPtrOutput
	ToPipelineChannelPtrOutputWithContext(context.Context) PipelineChannelPtrOutput
}

type pipelineChannelPtrType PipelineChannelArgs

func PipelineChannelPtr(v *PipelineChannelArgs) PipelineChannelPtrInput {
	return (*pipelineChannelPtrType)(v)
}

func (*pipelineChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineChannel)(nil)).Elem()
}

func (i *pipelineChannelPtrType) ToPipelineChannelPtrOutput() PipelineChannelPtrOutput {
	return i.ToPipelineChannelPtrOutputWithContext(context.Background())
}

func (i *pipelineChannelPtrType) ToPipelineChannelPtrOutputWithContext(ctx context.Context) PipelineChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineChannelPtrOutput)
}

type PipelineChannelOutput struct{ *pulumi.OutputState }

func (PipelineChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineChannel)(nil)).Elem()
}

func (o PipelineChannelOutput) ToPipelineChannelOutput() PipelineChannelOutput {
	return o
}

func (o PipelineChannelOutput) ToPipelineChannelOutputWithContext(ctx context.Context) PipelineChannelOutput {
	return o
}

func (o PipelineChannelOutput) ToPipelineChannelPtrOutput() PipelineChannelPtrOutput {
	return o.ToPipelineChannelPtrOutputWithContext(context.Background())
}

func (o PipelineChannelOutput) ToPipelineChannelPtrOutputWithContext(ctx context.Context) PipelineChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineChannel) *PipelineChannel {
		return &v
	}).(PipelineChannelPtrOutput)
}

func (o PipelineChannelOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineChannel) *string { return v.ChannelName }).(pulumi.StringPtrOutput)
}

func (o PipelineChannelOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineChannel) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PipelineChannelOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineChannel) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineChannelPtrOutput struct{ *pulumi.OutputState }

func (PipelineChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineChannel)(nil)).Elem()
}

func (o PipelineChannelPtrOutput) ToPipelineChannelPtrOutput() PipelineChannelPtrOutput {
	return o
}

func (o PipelineChannelPtrOutput) ToPipelineChannelPtrOutputWithContext(ctx context.Context) PipelineChannelPtrOutput {
	return o
}

func (o PipelineChannelPtrOutput) Elem() PipelineChannelOutput {
	return o.ApplyT(func(v *PipelineChannel) PipelineChannel {
		if v != nil {
			return *v
		}
		var ret PipelineChannel
		return ret
	}).(PipelineChannelOutput)
}

func (o PipelineChannelPtrOutput) ChannelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineChannel) *string {
		if v == nil {
			return nil
		}
		return v.ChannelName
	}).(pulumi.StringPtrOutput)
}

func (o PipelineChannelPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineChannel) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o PipelineChannelPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineChannel) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineDatastore struct {
	DatastoreName *string `pulumi:"datastoreName"`
	Name          *string `pulumi:"name"`
}

// PipelineDatastoreInput is an input type that accepts PipelineDatastoreArgs and PipelineDatastoreOutput values.
// You can construct a concrete instance of `PipelineDatastoreInput` via:
//
//          PipelineDatastoreArgs{...}
type PipelineDatastoreInput interface {
	pulumi.Input

	ToPipelineDatastoreOutput() PipelineDatastoreOutput
	ToPipelineDatastoreOutputWithContext(context.Context) PipelineDatastoreOutput
}

type PipelineDatastoreArgs struct {
	DatastoreName pulumi.StringPtrInput `pulumi:"datastoreName"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
}

func (PipelineDatastoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDatastore)(nil)).Elem()
}

func (i PipelineDatastoreArgs) ToPipelineDatastoreOutput() PipelineDatastoreOutput {
	return i.ToPipelineDatastoreOutputWithContext(context.Background())
}

func (i PipelineDatastoreArgs) ToPipelineDatastoreOutputWithContext(ctx context.Context) PipelineDatastoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDatastoreOutput)
}

func (i PipelineDatastoreArgs) ToPipelineDatastorePtrOutput() PipelineDatastorePtrOutput {
	return i.ToPipelineDatastorePtrOutputWithContext(context.Background())
}

func (i PipelineDatastoreArgs) ToPipelineDatastorePtrOutputWithContext(ctx context.Context) PipelineDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDatastoreOutput).ToPipelineDatastorePtrOutputWithContext(ctx)
}

// PipelineDatastorePtrInput is an input type that accepts PipelineDatastoreArgs, PipelineDatastorePtr and PipelineDatastorePtrOutput values.
// You can construct a concrete instance of `PipelineDatastorePtrInput` via:
//
//          PipelineDatastoreArgs{...}
//
//  or:
//
//          nil
type PipelineDatastorePtrInput interface {
	pulumi.Input

	ToPipelineDatastorePtrOutput() PipelineDatastorePtrOutput
	ToPipelineDatastorePtrOutputWithContext(context.Context) PipelineDatastorePtrOutput
}

type pipelineDatastorePtrType PipelineDatastoreArgs

func PipelineDatastorePtr(v *PipelineDatastoreArgs) PipelineDatastorePtrInput {
	return (*pipelineDatastorePtrType)(v)
}

func (*pipelineDatastorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDatastore)(nil)).Elem()
}

func (i *pipelineDatastorePtrType) ToPipelineDatastorePtrOutput() PipelineDatastorePtrOutput {
	return i.ToPipelineDatastorePtrOutputWithContext(context.Background())
}

func (i *pipelineDatastorePtrType) ToPipelineDatastorePtrOutputWithContext(ctx context.Context) PipelineDatastorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDatastorePtrOutput)
}

type PipelineDatastoreOutput struct{ *pulumi.OutputState }

func (PipelineDatastoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDatastore)(nil)).Elem()
}

func (o PipelineDatastoreOutput) ToPipelineDatastoreOutput() PipelineDatastoreOutput {
	return o
}

func (o PipelineDatastoreOutput) ToPipelineDatastoreOutputWithContext(ctx context.Context) PipelineDatastoreOutput {
	return o
}

func (o PipelineDatastoreOutput) ToPipelineDatastorePtrOutput() PipelineDatastorePtrOutput {
	return o.ToPipelineDatastorePtrOutputWithContext(context.Background())
}

func (o PipelineDatastoreOutput) ToPipelineDatastorePtrOutputWithContext(ctx context.Context) PipelineDatastorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineDatastore) *PipelineDatastore {
		return &v
	}).(PipelineDatastorePtrOutput)
}

func (o PipelineDatastoreOutput) DatastoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDatastore) *string { return v.DatastoreName }).(pulumi.StringPtrOutput)
}

func (o PipelineDatastoreOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDatastore) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PipelineDatastorePtrOutput struct{ *pulumi.OutputState }

func (PipelineDatastorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDatastore)(nil)).Elem()
}

func (o PipelineDatastorePtrOutput) ToPipelineDatastorePtrOutput() PipelineDatastorePtrOutput {
	return o
}

func (o PipelineDatastorePtrOutput) ToPipelineDatastorePtrOutputWithContext(ctx context.Context) PipelineDatastorePtrOutput {
	return o
}

func (o PipelineDatastorePtrOutput) Elem() PipelineDatastoreOutput {
	return o.ApplyT(func(v *PipelineDatastore) PipelineDatastore {
		if v != nil {
			return *v
		}
		var ret PipelineDatastore
		return ret
	}).(PipelineDatastoreOutput)
}

func (o PipelineDatastorePtrOutput) DatastoreName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDatastore) *string {
		if v == nil {
			return nil
		}
		return v.DatastoreName
	}).(pulumi.StringPtrOutput)
}

func (o PipelineDatastorePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDatastore) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type PipelineDeviceRegistryEnrich struct {
	Attribute *string `pulumi:"attribute"`
	Name      *string `pulumi:"name"`
	Next      *string `pulumi:"next"`
	RoleArn   *string `pulumi:"roleArn"`
	ThingName *string `pulumi:"thingName"`
}

// PipelineDeviceRegistryEnrichInput is an input type that accepts PipelineDeviceRegistryEnrichArgs and PipelineDeviceRegistryEnrichOutput values.
// You can construct a concrete instance of `PipelineDeviceRegistryEnrichInput` via:
//
//          PipelineDeviceRegistryEnrichArgs{...}
type PipelineDeviceRegistryEnrichInput interface {
	pulumi.Input

	ToPipelineDeviceRegistryEnrichOutput() PipelineDeviceRegistryEnrichOutput
	ToPipelineDeviceRegistryEnrichOutputWithContext(context.Context) PipelineDeviceRegistryEnrichOutput
}

type PipelineDeviceRegistryEnrichArgs struct {
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Next      pulumi.StringPtrInput `pulumi:"next"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	ThingName pulumi.StringPtrInput `pulumi:"thingName"`
}

func (PipelineDeviceRegistryEnrichArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDeviceRegistryEnrich)(nil)).Elem()
}

func (i PipelineDeviceRegistryEnrichArgs) ToPipelineDeviceRegistryEnrichOutput() PipelineDeviceRegistryEnrichOutput {
	return i.ToPipelineDeviceRegistryEnrichOutputWithContext(context.Background())
}

func (i PipelineDeviceRegistryEnrichArgs) ToPipelineDeviceRegistryEnrichOutputWithContext(ctx context.Context) PipelineDeviceRegistryEnrichOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDeviceRegistryEnrichOutput)
}

func (i PipelineDeviceRegistryEnrichArgs) ToPipelineDeviceRegistryEnrichPtrOutput() PipelineDeviceRegistryEnrichPtrOutput {
	return i.ToPipelineDeviceRegistryEnrichPtrOutputWithContext(context.Background())
}

func (i PipelineDeviceRegistryEnrichArgs) ToPipelineDeviceRegistryEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceRegistryEnrichPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDeviceRegistryEnrichOutput).ToPipelineDeviceRegistryEnrichPtrOutputWithContext(ctx)
}

// PipelineDeviceRegistryEnrichPtrInput is an input type that accepts PipelineDeviceRegistryEnrichArgs, PipelineDeviceRegistryEnrichPtr and PipelineDeviceRegistryEnrichPtrOutput values.
// You can construct a concrete instance of `PipelineDeviceRegistryEnrichPtrInput` via:
//
//          PipelineDeviceRegistryEnrichArgs{...}
//
//  or:
//
//          nil
type PipelineDeviceRegistryEnrichPtrInput interface {
	pulumi.Input

	ToPipelineDeviceRegistryEnrichPtrOutput() PipelineDeviceRegistryEnrichPtrOutput
	ToPipelineDeviceRegistryEnrichPtrOutputWithContext(context.Context) PipelineDeviceRegistryEnrichPtrOutput
}

type pipelineDeviceRegistryEnrichPtrType PipelineDeviceRegistryEnrichArgs

func PipelineDeviceRegistryEnrichPtr(v *PipelineDeviceRegistryEnrichArgs) PipelineDeviceRegistryEnrichPtrInput {
	return (*pipelineDeviceRegistryEnrichPtrType)(v)
}

func (*pipelineDeviceRegistryEnrichPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDeviceRegistryEnrich)(nil)).Elem()
}

func (i *pipelineDeviceRegistryEnrichPtrType) ToPipelineDeviceRegistryEnrichPtrOutput() PipelineDeviceRegistryEnrichPtrOutput {
	return i.ToPipelineDeviceRegistryEnrichPtrOutputWithContext(context.Background())
}

func (i *pipelineDeviceRegistryEnrichPtrType) ToPipelineDeviceRegistryEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceRegistryEnrichPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDeviceRegistryEnrichPtrOutput)
}

type PipelineDeviceRegistryEnrichOutput struct{ *pulumi.OutputState }

func (PipelineDeviceRegistryEnrichOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDeviceRegistryEnrich)(nil)).Elem()
}

func (o PipelineDeviceRegistryEnrichOutput) ToPipelineDeviceRegistryEnrichOutput() PipelineDeviceRegistryEnrichOutput {
	return o
}

func (o PipelineDeviceRegistryEnrichOutput) ToPipelineDeviceRegistryEnrichOutputWithContext(ctx context.Context) PipelineDeviceRegistryEnrichOutput {
	return o
}

func (o PipelineDeviceRegistryEnrichOutput) ToPipelineDeviceRegistryEnrichPtrOutput() PipelineDeviceRegistryEnrichPtrOutput {
	return o.ToPipelineDeviceRegistryEnrichPtrOutputWithContext(context.Background())
}

func (o PipelineDeviceRegistryEnrichOutput) ToPipelineDeviceRegistryEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceRegistryEnrichPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineDeviceRegistryEnrich) *PipelineDeviceRegistryEnrich {
		return &v
	}).(PipelineDeviceRegistryEnrichPtrOutput)
}

func (o PipelineDeviceRegistryEnrichOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDeviceRegistryEnrich) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceRegistryEnrichOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDeviceRegistryEnrich) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceRegistryEnrichOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDeviceRegistryEnrich) *string { return v.Next }).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceRegistryEnrichOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDeviceRegistryEnrich) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceRegistryEnrichOutput) ThingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDeviceRegistryEnrich) *string { return v.ThingName }).(pulumi.StringPtrOutput)
}

type PipelineDeviceRegistryEnrichPtrOutput struct{ *pulumi.OutputState }

func (PipelineDeviceRegistryEnrichPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDeviceRegistryEnrich)(nil)).Elem()
}

func (o PipelineDeviceRegistryEnrichPtrOutput) ToPipelineDeviceRegistryEnrichPtrOutput() PipelineDeviceRegistryEnrichPtrOutput {
	return o
}

func (o PipelineDeviceRegistryEnrichPtrOutput) ToPipelineDeviceRegistryEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceRegistryEnrichPtrOutput {
	return o
}

func (o PipelineDeviceRegistryEnrichPtrOutput) Elem() PipelineDeviceRegistryEnrichOutput {
	return o.ApplyT(func(v *PipelineDeviceRegistryEnrich) PipelineDeviceRegistryEnrich {
		if v != nil {
			return *v
		}
		var ret PipelineDeviceRegistryEnrich
		return ret
	}).(PipelineDeviceRegistryEnrichOutput)
}

func (o PipelineDeviceRegistryEnrichPtrOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceRegistryEnrich) *string {
		if v == nil {
			return nil
		}
		return v.Attribute
	}).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceRegistryEnrichPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceRegistryEnrich) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceRegistryEnrichPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceRegistryEnrich) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceRegistryEnrichPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceRegistryEnrich) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceRegistryEnrichPtrOutput) ThingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceRegistryEnrich) *string {
		if v == nil {
			return nil
		}
		return v.ThingName
	}).(pulumi.StringPtrOutput)
}

type PipelineDeviceShadowEnrich struct {
	Attribute *string `pulumi:"attribute"`
	Name      *string `pulumi:"name"`
	Next      *string `pulumi:"next"`
	RoleArn   *string `pulumi:"roleArn"`
	ThingName *string `pulumi:"thingName"`
}

// PipelineDeviceShadowEnrichInput is an input type that accepts PipelineDeviceShadowEnrichArgs and PipelineDeviceShadowEnrichOutput values.
// You can construct a concrete instance of `PipelineDeviceShadowEnrichInput` via:
//
//          PipelineDeviceShadowEnrichArgs{...}
type PipelineDeviceShadowEnrichInput interface {
	pulumi.Input

	ToPipelineDeviceShadowEnrichOutput() PipelineDeviceShadowEnrichOutput
	ToPipelineDeviceShadowEnrichOutputWithContext(context.Context) PipelineDeviceShadowEnrichOutput
}

type PipelineDeviceShadowEnrichArgs struct {
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Next      pulumi.StringPtrInput `pulumi:"next"`
	RoleArn   pulumi.StringPtrInput `pulumi:"roleArn"`
	ThingName pulumi.StringPtrInput `pulumi:"thingName"`
}

func (PipelineDeviceShadowEnrichArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDeviceShadowEnrich)(nil)).Elem()
}

func (i PipelineDeviceShadowEnrichArgs) ToPipelineDeviceShadowEnrichOutput() PipelineDeviceShadowEnrichOutput {
	return i.ToPipelineDeviceShadowEnrichOutputWithContext(context.Background())
}

func (i PipelineDeviceShadowEnrichArgs) ToPipelineDeviceShadowEnrichOutputWithContext(ctx context.Context) PipelineDeviceShadowEnrichOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDeviceShadowEnrichOutput)
}

func (i PipelineDeviceShadowEnrichArgs) ToPipelineDeviceShadowEnrichPtrOutput() PipelineDeviceShadowEnrichPtrOutput {
	return i.ToPipelineDeviceShadowEnrichPtrOutputWithContext(context.Background())
}

func (i PipelineDeviceShadowEnrichArgs) ToPipelineDeviceShadowEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceShadowEnrichPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDeviceShadowEnrichOutput).ToPipelineDeviceShadowEnrichPtrOutputWithContext(ctx)
}

// PipelineDeviceShadowEnrichPtrInput is an input type that accepts PipelineDeviceShadowEnrichArgs, PipelineDeviceShadowEnrichPtr and PipelineDeviceShadowEnrichPtrOutput values.
// You can construct a concrete instance of `PipelineDeviceShadowEnrichPtrInput` via:
//
//          PipelineDeviceShadowEnrichArgs{...}
//
//  or:
//
//          nil
type PipelineDeviceShadowEnrichPtrInput interface {
	pulumi.Input

	ToPipelineDeviceShadowEnrichPtrOutput() PipelineDeviceShadowEnrichPtrOutput
	ToPipelineDeviceShadowEnrichPtrOutputWithContext(context.Context) PipelineDeviceShadowEnrichPtrOutput
}

type pipelineDeviceShadowEnrichPtrType PipelineDeviceShadowEnrichArgs

func PipelineDeviceShadowEnrichPtr(v *PipelineDeviceShadowEnrichArgs) PipelineDeviceShadowEnrichPtrInput {
	return (*pipelineDeviceShadowEnrichPtrType)(v)
}

func (*pipelineDeviceShadowEnrichPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDeviceShadowEnrich)(nil)).Elem()
}

func (i *pipelineDeviceShadowEnrichPtrType) ToPipelineDeviceShadowEnrichPtrOutput() PipelineDeviceShadowEnrichPtrOutput {
	return i.ToPipelineDeviceShadowEnrichPtrOutputWithContext(context.Background())
}

func (i *pipelineDeviceShadowEnrichPtrType) ToPipelineDeviceShadowEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceShadowEnrichPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDeviceShadowEnrichPtrOutput)
}

type PipelineDeviceShadowEnrichOutput struct{ *pulumi.OutputState }

func (PipelineDeviceShadowEnrichOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDeviceShadowEnrich)(nil)).Elem()
}

func (o PipelineDeviceShadowEnrichOutput) ToPipelineDeviceShadowEnrichOutput() PipelineDeviceShadowEnrichOutput {
	return o
}

func (o PipelineDeviceShadowEnrichOutput) ToPipelineDeviceShadowEnrichOutputWithContext(ctx context.Context) PipelineDeviceShadowEnrichOutput {
	return o
}

func (o PipelineDeviceShadowEnrichOutput) ToPipelineDeviceShadowEnrichPtrOutput() PipelineDeviceShadowEnrichPtrOutput {
	return o.ToPipelineDeviceShadowEnrichPtrOutputWithContext(context.Background())
}

func (o PipelineDeviceShadowEnrichOutput) ToPipelineDeviceShadowEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceShadowEnrichPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineDeviceShadowEnrich) *PipelineDeviceShadowEnrich {
		return &v
	}).(PipelineDeviceShadowEnrichPtrOutput)
}

func (o PipelineDeviceShadowEnrichOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDeviceShadowEnrich) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceShadowEnrichOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDeviceShadowEnrich) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceShadowEnrichOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDeviceShadowEnrich) *string { return v.Next }).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceShadowEnrichOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDeviceShadowEnrich) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceShadowEnrichOutput) ThingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDeviceShadowEnrich) *string { return v.ThingName }).(pulumi.StringPtrOutput)
}

type PipelineDeviceShadowEnrichPtrOutput struct{ *pulumi.OutputState }

func (PipelineDeviceShadowEnrichPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineDeviceShadowEnrich)(nil)).Elem()
}

func (o PipelineDeviceShadowEnrichPtrOutput) ToPipelineDeviceShadowEnrichPtrOutput() PipelineDeviceShadowEnrichPtrOutput {
	return o
}

func (o PipelineDeviceShadowEnrichPtrOutput) ToPipelineDeviceShadowEnrichPtrOutputWithContext(ctx context.Context) PipelineDeviceShadowEnrichPtrOutput {
	return o
}

func (o PipelineDeviceShadowEnrichPtrOutput) Elem() PipelineDeviceShadowEnrichOutput {
	return o.ApplyT(func(v *PipelineDeviceShadowEnrich) PipelineDeviceShadowEnrich {
		if v != nil {
			return *v
		}
		var ret PipelineDeviceShadowEnrich
		return ret
	}).(PipelineDeviceShadowEnrichOutput)
}

func (o PipelineDeviceShadowEnrichPtrOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceShadowEnrich) *string {
		if v == nil {
			return nil
		}
		return v.Attribute
	}).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceShadowEnrichPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceShadowEnrich) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceShadowEnrichPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceShadowEnrich) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceShadowEnrichPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceShadowEnrich) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o PipelineDeviceShadowEnrichPtrOutput) ThingName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineDeviceShadowEnrich) *string {
		if v == nil {
			return nil
		}
		return v.ThingName
	}).(pulumi.StringPtrOutput)
}

type PipelineFilter struct {
	Filter *string `pulumi:"filter"`
	Name   *string `pulumi:"name"`
	Next   *string `pulumi:"next"`
}

// PipelineFilterInput is an input type that accepts PipelineFilterArgs and PipelineFilterOutput values.
// You can construct a concrete instance of `PipelineFilterInput` via:
//
//          PipelineFilterArgs{...}
type PipelineFilterInput interface {
	pulumi.Input

	ToPipelineFilterOutput() PipelineFilterOutput
	ToPipelineFilterOutputWithContext(context.Context) PipelineFilterOutput
}

type PipelineFilterArgs struct {
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Next   pulumi.StringPtrInput `pulumi:"next"`
}

func (PipelineFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFilter)(nil)).Elem()
}

func (i PipelineFilterArgs) ToPipelineFilterOutput() PipelineFilterOutput {
	return i.ToPipelineFilterOutputWithContext(context.Background())
}

func (i PipelineFilterArgs) ToPipelineFilterOutputWithContext(ctx context.Context) PipelineFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFilterOutput)
}

func (i PipelineFilterArgs) ToPipelineFilterPtrOutput() PipelineFilterPtrOutput {
	return i.ToPipelineFilterPtrOutputWithContext(context.Background())
}

func (i PipelineFilterArgs) ToPipelineFilterPtrOutputWithContext(ctx context.Context) PipelineFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFilterOutput).ToPipelineFilterPtrOutputWithContext(ctx)
}

// PipelineFilterPtrInput is an input type that accepts PipelineFilterArgs, PipelineFilterPtr and PipelineFilterPtrOutput values.
// You can construct a concrete instance of `PipelineFilterPtrInput` via:
//
//          PipelineFilterArgs{...}
//
//  or:
//
//          nil
type PipelineFilterPtrInput interface {
	pulumi.Input

	ToPipelineFilterPtrOutput() PipelineFilterPtrOutput
	ToPipelineFilterPtrOutputWithContext(context.Context) PipelineFilterPtrOutput
}

type pipelineFilterPtrType PipelineFilterArgs

func PipelineFilterPtr(v *PipelineFilterArgs) PipelineFilterPtrInput {
	return (*pipelineFilterPtrType)(v)
}

func (*pipelineFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFilter)(nil)).Elem()
}

func (i *pipelineFilterPtrType) ToPipelineFilterPtrOutput() PipelineFilterPtrOutput {
	return i.ToPipelineFilterPtrOutputWithContext(context.Background())
}

func (i *pipelineFilterPtrType) ToPipelineFilterPtrOutputWithContext(ctx context.Context) PipelineFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineFilterPtrOutput)
}

type PipelineFilterOutput struct{ *pulumi.OutputState }

func (PipelineFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFilter)(nil)).Elem()
}

func (o PipelineFilterOutput) ToPipelineFilterOutput() PipelineFilterOutput {
	return o
}

func (o PipelineFilterOutput) ToPipelineFilterOutputWithContext(ctx context.Context) PipelineFilterOutput {
	return o
}

func (o PipelineFilterOutput) ToPipelineFilterPtrOutput() PipelineFilterPtrOutput {
	return o.ToPipelineFilterPtrOutputWithContext(context.Background())
}

func (o PipelineFilterOutput) ToPipelineFilterPtrOutputWithContext(ctx context.Context) PipelineFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineFilter) *PipelineFilter {
		return &v
	}).(PipelineFilterPtrOutput)
}

func (o PipelineFilterOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFilter) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o PipelineFilterOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFilter) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PipelineFilterOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineFilter) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineFilterPtrOutput struct{ *pulumi.OutputState }

func (PipelineFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFilter)(nil)).Elem()
}

func (o PipelineFilterPtrOutput) ToPipelineFilterPtrOutput() PipelineFilterPtrOutput {
	return o
}

func (o PipelineFilterPtrOutput) ToPipelineFilterPtrOutputWithContext(ctx context.Context) PipelineFilterPtrOutput {
	return o
}

func (o PipelineFilterPtrOutput) Elem() PipelineFilterOutput {
	return o.ApplyT(func(v *PipelineFilter) PipelineFilter {
		if v != nil {
			return *v
		}
		var ret PipelineFilter
		return ret
	}).(PipelineFilterOutput)
}

func (o PipelineFilterPtrOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFilter) *string {
		if v == nil {
			return nil
		}
		return v.Filter
	}).(pulumi.StringPtrOutput)
}

func (o PipelineFilterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFilter) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o PipelineFilterPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineFilter) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineLambda struct {
	BatchSize  *int    `pulumi:"batchSize"`
	LambdaName *string `pulumi:"lambdaName"`
	Name       *string `pulumi:"name"`
	Next       *string `pulumi:"next"`
}

// PipelineLambdaInput is an input type that accepts PipelineLambdaArgs and PipelineLambdaOutput values.
// You can construct a concrete instance of `PipelineLambdaInput` via:
//
//          PipelineLambdaArgs{...}
type PipelineLambdaInput interface {
	pulumi.Input

	ToPipelineLambdaOutput() PipelineLambdaOutput
	ToPipelineLambdaOutputWithContext(context.Context) PipelineLambdaOutput
}

type PipelineLambdaArgs struct {
	BatchSize  pulumi.IntPtrInput    `pulumi:"batchSize"`
	LambdaName pulumi.StringPtrInput `pulumi:"lambdaName"`
	Name       pulumi.StringPtrInput `pulumi:"name"`
	Next       pulumi.StringPtrInput `pulumi:"next"`
}

func (PipelineLambdaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLambda)(nil)).Elem()
}

func (i PipelineLambdaArgs) ToPipelineLambdaOutput() PipelineLambdaOutput {
	return i.ToPipelineLambdaOutputWithContext(context.Background())
}

func (i PipelineLambdaArgs) ToPipelineLambdaOutputWithContext(ctx context.Context) PipelineLambdaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLambdaOutput)
}

func (i PipelineLambdaArgs) ToPipelineLambdaPtrOutput() PipelineLambdaPtrOutput {
	return i.ToPipelineLambdaPtrOutputWithContext(context.Background())
}

func (i PipelineLambdaArgs) ToPipelineLambdaPtrOutputWithContext(ctx context.Context) PipelineLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLambdaOutput).ToPipelineLambdaPtrOutputWithContext(ctx)
}

// PipelineLambdaPtrInput is an input type that accepts PipelineLambdaArgs, PipelineLambdaPtr and PipelineLambdaPtrOutput values.
// You can construct a concrete instance of `PipelineLambdaPtrInput` via:
//
//          PipelineLambdaArgs{...}
//
//  or:
//
//          nil
type PipelineLambdaPtrInput interface {
	pulumi.Input

	ToPipelineLambdaPtrOutput() PipelineLambdaPtrOutput
	ToPipelineLambdaPtrOutputWithContext(context.Context) PipelineLambdaPtrOutput
}

type pipelineLambdaPtrType PipelineLambdaArgs

func PipelineLambdaPtr(v *PipelineLambdaArgs) PipelineLambdaPtrInput {
	return (*pipelineLambdaPtrType)(v)
}

func (*pipelineLambdaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineLambda)(nil)).Elem()
}

func (i *pipelineLambdaPtrType) ToPipelineLambdaPtrOutput() PipelineLambdaPtrOutput {
	return i.ToPipelineLambdaPtrOutputWithContext(context.Background())
}

func (i *pipelineLambdaPtrType) ToPipelineLambdaPtrOutputWithContext(ctx context.Context) PipelineLambdaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineLambdaPtrOutput)
}

type PipelineLambdaOutput struct{ *pulumi.OutputState }

func (PipelineLambdaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineLambda)(nil)).Elem()
}

func (o PipelineLambdaOutput) ToPipelineLambdaOutput() PipelineLambdaOutput {
	return o
}

func (o PipelineLambdaOutput) ToPipelineLambdaOutputWithContext(ctx context.Context) PipelineLambdaOutput {
	return o
}

func (o PipelineLambdaOutput) ToPipelineLambdaPtrOutput() PipelineLambdaPtrOutput {
	return o.ToPipelineLambdaPtrOutputWithContext(context.Background())
}

func (o PipelineLambdaOutput) ToPipelineLambdaPtrOutputWithContext(ctx context.Context) PipelineLambdaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineLambda) *PipelineLambda {
		return &v
	}).(PipelineLambdaPtrOutput)
}

func (o PipelineLambdaOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PipelineLambda) *int { return v.BatchSize }).(pulumi.IntPtrOutput)
}

func (o PipelineLambdaOutput) LambdaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineLambda) *string { return v.LambdaName }).(pulumi.StringPtrOutput)
}

func (o PipelineLambdaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineLambda) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PipelineLambdaOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineLambda) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineLambdaPtrOutput struct{ *pulumi.OutputState }

func (PipelineLambdaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineLambda)(nil)).Elem()
}

func (o PipelineLambdaPtrOutput) ToPipelineLambdaPtrOutput() PipelineLambdaPtrOutput {
	return o
}

func (o PipelineLambdaPtrOutput) ToPipelineLambdaPtrOutputWithContext(ctx context.Context) PipelineLambdaPtrOutput {
	return o
}

func (o PipelineLambdaPtrOutput) Elem() PipelineLambdaOutput {
	return o.ApplyT(func(v *PipelineLambda) PipelineLambda {
		if v != nil {
			return *v
		}
		var ret PipelineLambda
		return ret
	}).(PipelineLambdaOutput)
}

func (o PipelineLambdaPtrOutput) BatchSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PipelineLambda) *int {
		if v == nil {
			return nil
		}
		return v.BatchSize
	}).(pulumi.IntPtrOutput)
}

func (o PipelineLambdaPtrOutput) LambdaName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineLambda) *string {
		if v == nil {
			return nil
		}
		return v.LambdaName
	}).(pulumi.StringPtrOutput)
}

func (o PipelineLambdaPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineLambda) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o PipelineLambdaPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineLambda) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineMath struct {
	Attribute *string `pulumi:"attribute"`
	Math      *string `pulumi:"math"`
	Name      *string `pulumi:"name"`
	Next      *string `pulumi:"next"`
}

// PipelineMathInput is an input type that accepts PipelineMathArgs and PipelineMathOutput values.
// You can construct a concrete instance of `PipelineMathInput` via:
//
//          PipelineMathArgs{...}
type PipelineMathInput interface {
	pulumi.Input

	ToPipelineMathOutput() PipelineMathOutput
	ToPipelineMathOutputWithContext(context.Context) PipelineMathOutput
}

type PipelineMathArgs struct {
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
	Math      pulumi.StringPtrInput `pulumi:"math"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Next      pulumi.StringPtrInput `pulumi:"next"`
}

func (PipelineMathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineMath)(nil)).Elem()
}

func (i PipelineMathArgs) ToPipelineMathOutput() PipelineMathOutput {
	return i.ToPipelineMathOutputWithContext(context.Background())
}

func (i PipelineMathArgs) ToPipelineMathOutputWithContext(ctx context.Context) PipelineMathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineMathOutput)
}

func (i PipelineMathArgs) ToPipelineMathPtrOutput() PipelineMathPtrOutput {
	return i.ToPipelineMathPtrOutputWithContext(context.Background())
}

func (i PipelineMathArgs) ToPipelineMathPtrOutputWithContext(ctx context.Context) PipelineMathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineMathOutput).ToPipelineMathPtrOutputWithContext(ctx)
}

// PipelineMathPtrInput is an input type that accepts PipelineMathArgs, PipelineMathPtr and PipelineMathPtrOutput values.
// You can construct a concrete instance of `PipelineMathPtrInput` via:
//
//          PipelineMathArgs{...}
//
//  or:
//
//          nil
type PipelineMathPtrInput interface {
	pulumi.Input

	ToPipelineMathPtrOutput() PipelineMathPtrOutput
	ToPipelineMathPtrOutputWithContext(context.Context) PipelineMathPtrOutput
}

type pipelineMathPtrType PipelineMathArgs

func PipelineMathPtr(v *PipelineMathArgs) PipelineMathPtrInput {
	return (*pipelineMathPtrType)(v)
}

func (*pipelineMathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineMath)(nil)).Elem()
}

func (i *pipelineMathPtrType) ToPipelineMathPtrOutput() PipelineMathPtrOutput {
	return i.ToPipelineMathPtrOutputWithContext(context.Background())
}

func (i *pipelineMathPtrType) ToPipelineMathPtrOutputWithContext(ctx context.Context) PipelineMathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineMathPtrOutput)
}

type PipelineMathOutput struct{ *pulumi.OutputState }

func (PipelineMathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineMath)(nil)).Elem()
}

func (o PipelineMathOutput) ToPipelineMathOutput() PipelineMathOutput {
	return o
}

func (o PipelineMathOutput) ToPipelineMathOutputWithContext(ctx context.Context) PipelineMathOutput {
	return o
}

func (o PipelineMathOutput) ToPipelineMathPtrOutput() PipelineMathPtrOutput {
	return o.ToPipelineMathPtrOutputWithContext(context.Background())
}

func (o PipelineMathOutput) ToPipelineMathPtrOutputWithContext(ctx context.Context) PipelineMathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineMath) *PipelineMath {
		return &v
	}).(PipelineMathPtrOutput)
}

func (o PipelineMathOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineMath) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

func (o PipelineMathOutput) Math() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineMath) *string { return v.Math }).(pulumi.StringPtrOutput)
}

func (o PipelineMathOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineMath) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PipelineMathOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineMath) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineMathPtrOutput struct{ *pulumi.OutputState }

func (PipelineMathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineMath)(nil)).Elem()
}

func (o PipelineMathPtrOutput) ToPipelineMathPtrOutput() PipelineMathPtrOutput {
	return o
}

func (o PipelineMathPtrOutput) ToPipelineMathPtrOutputWithContext(ctx context.Context) PipelineMathPtrOutput {
	return o
}

func (o PipelineMathPtrOutput) Elem() PipelineMathOutput {
	return o.ApplyT(func(v *PipelineMath) PipelineMath {
		if v != nil {
			return *v
		}
		var ret PipelineMath
		return ret
	}).(PipelineMathOutput)
}

func (o PipelineMathPtrOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineMath) *string {
		if v == nil {
			return nil
		}
		return v.Attribute
	}).(pulumi.StringPtrOutput)
}

func (o PipelineMathPtrOutput) Math() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineMath) *string {
		if v == nil {
			return nil
		}
		return v.Math
	}).(pulumi.StringPtrOutput)
}

func (o PipelineMathPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineMath) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o PipelineMathPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineMath) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineRemoveAttributes struct {
	Attributes []string `pulumi:"attributes"`
	Name       *string  `pulumi:"name"`
	Next       *string  `pulumi:"next"`
}

// PipelineRemoveAttributesInput is an input type that accepts PipelineRemoveAttributesArgs and PipelineRemoveAttributesOutput values.
// You can construct a concrete instance of `PipelineRemoveAttributesInput` via:
//
//          PipelineRemoveAttributesArgs{...}
type PipelineRemoveAttributesInput interface {
	pulumi.Input

	ToPipelineRemoveAttributesOutput() PipelineRemoveAttributesOutput
	ToPipelineRemoveAttributesOutputWithContext(context.Context) PipelineRemoveAttributesOutput
}

type PipelineRemoveAttributesArgs struct {
	Attributes pulumi.StringArrayInput `pulumi:"attributes"`
	Name       pulumi.StringPtrInput   `pulumi:"name"`
	Next       pulumi.StringPtrInput   `pulumi:"next"`
}

func (PipelineRemoveAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineRemoveAttributes)(nil)).Elem()
}

func (i PipelineRemoveAttributesArgs) ToPipelineRemoveAttributesOutput() PipelineRemoveAttributesOutput {
	return i.ToPipelineRemoveAttributesOutputWithContext(context.Background())
}

func (i PipelineRemoveAttributesArgs) ToPipelineRemoveAttributesOutputWithContext(ctx context.Context) PipelineRemoveAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineRemoveAttributesOutput)
}

func (i PipelineRemoveAttributesArgs) ToPipelineRemoveAttributesPtrOutput() PipelineRemoveAttributesPtrOutput {
	return i.ToPipelineRemoveAttributesPtrOutputWithContext(context.Background())
}

func (i PipelineRemoveAttributesArgs) ToPipelineRemoveAttributesPtrOutputWithContext(ctx context.Context) PipelineRemoveAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineRemoveAttributesOutput).ToPipelineRemoveAttributesPtrOutputWithContext(ctx)
}

// PipelineRemoveAttributesPtrInput is an input type that accepts PipelineRemoveAttributesArgs, PipelineRemoveAttributesPtr and PipelineRemoveAttributesPtrOutput values.
// You can construct a concrete instance of `PipelineRemoveAttributesPtrInput` via:
//
//          PipelineRemoveAttributesArgs{...}
//
//  or:
//
//          nil
type PipelineRemoveAttributesPtrInput interface {
	pulumi.Input

	ToPipelineRemoveAttributesPtrOutput() PipelineRemoveAttributesPtrOutput
	ToPipelineRemoveAttributesPtrOutputWithContext(context.Context) PipelineRemoveAttributesPtrOutput
}

type pipelineRemoveAttributesPtrType PipelineRemoveAttributesArgs

func PipelineRemoveAttributesPtr(v *PipelineRemoveAttributesArgs) PipelineRemoveAttributesPtrInput {
	return (*pipelineRemoveAttributesPtrType)(v)
}

func (*pipelineRemoveAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineRemoveAttributes)(nil)).Elem()
}

func (i *pipelineRemoveAttributesPtrType) ToPipelineRemoveAttributesPtrOutput() PipelineRemoveAttributesPtrOutput {
	return i.ToPipelineRemoveAttributesPtrOutputWithContext(context.Background())
}

func (i *pipelineRemoveAttributesPtrType) ToPipelineRemoveAttributesPtrOutputWithContext(ctx context.Context) PipelineRemoveAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineRemoveAttributesPtrOutput)
}

type PipelineRemoveAttributesOutput struct{ *pulumi.OutputState }

func (PipelineRemoveAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineRemoveAttributes)(nil)).Elem()
}

func (o PipelineRemoveAttributesOutput) ToPipelineRemoveAttributesOutput() PipelineRemoveAttributesOutput {
	return o
}

func (o PipelineRemoveAttributesOutput) ToPipelineRemoveAttributesOutputWithContext(ctx context.Context) PipelineRemoveAttributesOutput {
	return o
}

func (o PipelineRemoveAttributesOutput) ToPipelineRemoveAttributesPtrOutput() PipelineRemoveAttributesPtrOutput {
	return o.ToPipelineRemoveAttributesPtrOutputWithContext(context.Background())
}

func (o PipelineRemoveAttributesOutput) ToPipelineRemoveAttributesPtrOutputWithContext(ctx context.Context) PipelineRemoveAttributesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineRemoveAttributes) *PipelineRemoveAttributes {
		return &v
	}).(PipelineRemoveAttributesPtrOutput)
}

func (o PipelineRemoveAttributesOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineRemoveAttributes) []string { return v.Attributes }).(pulumi.StringArrayOutput)
}

func (o PipelineRemoveAttributesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineRemoveAttributes) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PipelineRemoveAttributesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineRemoveAttributes) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineRemoveAttributesPtrOutput struct{ *pulumi.OutputState }

func (PipelineRemoveAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineRemoveAttributes)(nil)).Elem()
}

func (o PipelineRemoveAttributesPtrOutput) ToPipelineRemoveAttributesPtrOutput() PipelineRemoveAttributesPtrOutput {
	return o
}

func (o PipelineRemoveAttributesPtrOutput) ToPipelineRemoveAttributesPtrOutputWithContext(ctx context.Context) PipelineRemoveAttributesPtrOutput {
	return o
}

func (o PipelineRemoveAttributesPtrOutput) Elem() PipelineRemoveAttributesOutput {
	return o.ApplyT(func(v *PipelineRemoveAttributes) PipelineRemoveAttributes {
		if v != nil {
			return *v
		}
		var ret PipelineRemoveAttributes
		return ret
	}).(PipelineRemoveAttributesOutput)
}

func (o PipelineRemoveAttributesPtrOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineRemoveAttributes) []string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringArrayOutput)
}

func (o PipelineRemoveAttributesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineRemoveAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o PipelineRemoveAttributesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineRemoveAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineSelectAttributes struct {
	Attributes []string `pulumi:"attributes"`
	Name       *string  `pulumi:"name"`
	Next       *string  `pulumi:"next"`
}

// PipelineSelectAttributesInput is an input type that accepts PipelineSelectAttributesArgs and PipelineSelectAttributesOutput values.
// You can construct a concrete instance of `PipelineSelectAttributesInput` via:
//
//          PipelineSelectAttributesArgs{...}
type PipelineSelectAttributesInput interface {
	pulumi.Input

	ToPipelineSelectAttributesOutput() PipelineSelectAttributesOutput
	ToPipelineSelectAttributesOutputWithContext(context.Context) PipelineSelectAttributesOutput
}

type PipelineSelectAttributesArgs struct {
	Attributes pulumi.StringArrayInput `pulumi:"attributes"`
	Name       pulumi.StringPtrInput   `pulumi:"name"`
	Next       pulumi.StringPtrInput   `pulumi:"next"`
}

func (PipelineSelectAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineSelectAttributes)(nil)).Elem()
}

func (i PipelineSelectAttributesArgs) ToPipelineSelectAttributesOutput() PipelineSelectAttributesOutput {
	return i.ToPipelineSelectAttributesOutputWithContext(context.Background())
}

func (i PipelineSelectAttributesArgs) ToPipelineSelectAttributesOutputWithContext(ctx context.Context) PipelineSelectAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineSelectAttributesOutput)
}

func (i PipelineSelectAttributesArgs) ToPipelineSelectAttributesPtrOutput() PipelineSelectAttributesPtrOutput {
	return i.ToPipelineSelectAttributesPtrOutputWithContext(context.Background())
}

func (i PipelineSelectAttributesArgs) ToPipelineSelectAttributesPtrOutputWithContext(ctx context.Context) PipelineSelectAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineSelectAttributesOutput).ToPipelineSelectAttributesPtrOutputWithContext(ctx)
}

// PipelineSelectAttributesPtrInput is an input type that accepts PipelineSelectAttributesArgs, PipelineSelectAttributesPtr and PipelineSelectAttributesPtrOutput values.
// You can construct a concrete instance of `PipelineSelectAttributesPtrInput` via:
//
//          PipelineSelectAttributesArgs{...}
//
//  or:
//
//          nil
type PipelineSelectAttributesPtrInput interface {
	pulumi.Input

	ToPipelineSelectAttributesPtrOutput() PipelineSelectAttributesPtrOutput
	ToPipelineSelectAttributesPtrOutputWithContext(context.Context) PipelineSelectAttributesPtrOutput
}

type pipelineSelectAttributesPtrType PipelineSelectAttributesArgs

func PipelineSelectAttributesPtr(v *PipelineSelectAttributesArgs) PipelineSelectAttributesPtrInput {
	return (*pipelineSelectAttributesPtrType)(v)
}

func (*pipelineSelectAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineSelectAttributes)(nil)).Elem()
}

func (i *pipelineSelectAttributesPtrType) ToPipelineSelectAttributesPtrOutput() PipelineSelectAttributesPtrOutput {
	return i.ToPipelineSelectAttributesPtrOutputWithContext(context.Background())
}

func (i *pipelineSelectAttributesPtrType) ToPipelineSelectAttributesPtrOutputWithContext(ctx context.Context) PipelineSelectAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineSelectAttributesPtrOutput)
}

type PipelineSelectAttributesOutput struct{ *pulumi.OutputState }

func (PipelineSelectAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineSelectAttributes)(nil)).Elem()
}

func (o PipelineSelectAttributesOutput) ToPipelineSelectAttributesOutput() PipelineSelectAttributesOutput {
	return o
}

func (o PipelineSelectAttributesOutput) ToPipelineSelectAttributesOutputWithContext(ctx context.Context) PipelineSelectAttributesOutput {
	return o
}

func (o PipelineSelectAttributesOutput) ToPipelineSelectAttributesPtrOutput() PipelineSelectAttributesPtrOutput {
	return o.ToPipelineSelectAttributesPtrOutputWithContext(context.Background())
}

func (o PipelineSelectAttributesOutput) ToPipelineSelectAttributesPtrOutputWithContext(ctx context.Context) PipelineSelectAttributesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineSelectAttributes) *PipelineSelectAttributes {
		return &v
	}).(PipelineSelectAttributesPtrOutput)
}

func (o PipelineSelectAttributesOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineSelectAttributes) []string { return v.Attributes }).(pulumi.StringArrayOutput)
}

func (o PipelineSelectAttributesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineSelectAttributes) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PipelineSelectAttributesOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineSelectAttributes) *string { return v.Next }).(pulumi.StringPtrOutput)
}

type PipelineSelectAttributesPtrOutput struct{ *pulumi.OutputState }

func (PipelineSelectAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineSelectAttributes)(nil)).Elem()
}

func (o PipelineSelectAttributesPtrOutput) ToPipelineSelectAttributesPtrOutput() PipelineSelectAttributesPtrOutput {
	return o
}

func (o PipelineSelectAttributesPtrOutput) ToPipelineSelectAttributesPtrOutputWithContext(ctx context.Context) PipelineSelectAttributesPtrOutput {
	return o
}

func (o PipelineSelectAttributesPtrOutput) Elem() PipelineSelectAttributesOutput {
	return o.ApplyT(func(v *PipelineSelectAttributes) PipelineSelectAttributes {
		if v != nil {
			return *v
		}
		var ret PipelineSelectAttributes
		return ret
	}).(PipelineSelectAttributesOutput)
}

func (o PipelineSelectAttributesPtrOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineSelectAttributes) []string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringArrayOutput)
}

func (o PipelineSelectAttributesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineSelectAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o PipelineSelectAttributesPtrOutput) Next() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineSelectAttributes) *string {
		if v == nil {
			return nil
		}
		return v.Next
	}).(pulumi.StringPtrOutput)
}

type PipelineTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// PipelineTagInput is an input type that accepts PipelineTagArgs and PipelineTagOutput values.
// You can construct a concrete instance of `PipelineTagInput` via:
//
//          PipelineTagArgs{...}
type PipelineTagInput interface {
	pulumi.Input

	ToPipelineTagOutput() PipelineTagOutput
	ToPipelineTagOutputWithContext(context.Context) PipelineTagOutput
}

type PipelineTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PipelineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTag)(nil)).Elem()
}

func (i PipelineTagArgs) ToPipelineTagOutput() PipelineTagOutput {
	return i.ToPipelineTagOutputWithContext(context.Background())
}

func (i PipelineTagArgs) ToPipelineTagOutputWithContext(ctx context.Context) PipelineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTagOutput)
}

// PipelineTagArrayInput is an input type that accepts PipelineTagArray and PipelineTagArrayOutput values.
// You can construct a concrete instance of `PipelineTagArrayInput` via:
//
//          PipelineTagArray{ PipelineTagArgs{...} }
type PipelineTagArrayInput interface {
	pulumi.Input

	ToPipelineTagArrayOutput() PipelineTagArrayOutput
	ToPipelineTagArrayOutputWithContext(context.Context) PipelineTagArrayOutput
}

type PipelineTagArray []PipelineTagInput

func (PipelineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTag)(nil)).Elem()
}

func (i PipelineTagArray) ToPipelineTagArrayOutput() PipelineTagArrayOutput {
	return i.ToPipelineTagArrayOutputWithContext(context.Background())
}

func (i PipelineTagArray) ToPipelineTagArrayOutputWithContext(ctx context.Context) PipelineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTagArrayOutput)
}

type PipelineTagOutput struct{ *pulumi.OutputState }

func (PipelineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTag)(nil)).Elem()
}

func (o PipelineTagOutput) ToPipelineTagOutput() PipelineTagOutput {
	return o
}

func (o PipelineTagOutput) ToPipelineTagOutputWithContext(ctx context.Context) PipelineTagOutput {
	return o
}

func (o PipelineTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o PipelineTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTag) string { return v.Value }).(pulumi.StringOutput)
}

type PipelineTagArrayOutput struct{ *pulumi.OutputState }

func (PipelineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTag)(nil)).Elem()
}

func (o PipelineTagArrayOutput) ToPipelineTagArrayOutput() PipelineTagArrayOutput {
	return o
}

func (o PipelineTagArrayOutput) ToPipelineTagArrayOutputWithContext(ctx context.Context) PipelineTagArrayOutput {
	return o
}

func (o PipelineTagArrayOutput) Index(i pulumi.IntInput) PipelineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineTag {
		return vs[0].([]PipelineTag)[vs[1].(int)]
	}).(PipelineTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelCustomerManagedS3Input)(nil)).Elem(), ChannelCustomerManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelCustomerManagedS3PtrInput)(nil)).Elem(), ChannelCustomerManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelRetentionPeriodInput)(nil)).Elem(), ChannelRetentionPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelRetentionPeriodPtrInput)(nil)).Elem(), ChannelRetentionPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelServiceManagedS3Input)(nil)).Elem(), ChannelServiceManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelServiceManagedS3PtrInput)(nil)).Elem(), ChannelServiceManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelStorageInput)(nil)).Elem(), ChannelStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelStoragePtrInput)(nil)).Elem(), ChannelStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelTagInput)(nil)).Elem(), ChannelTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelTagArrayInput)(nil)).Elem(), ChannelTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetActionInput)(nil)).Elem(), DatasetActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetActionArrayInput)(nil)).Elem(), DatasetActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContainerActionInput)(nil)).Elem(), DatasetContainerActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContainerActionPtrInput)(nil)).Elem(), DatasetContainerActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContentDeliveryRuleInput)(nil)).Elem(), DatasetContentDeliveryRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContentDeliveryRuleArrayInput)(nil)).Elem(), DatasetContentDeliveryRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContentDeliveryRuleDestinationInput)(nil)).Elem(), DatasetContentDeliveryRuleDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContentVersionValueInput)(nil)).Elem(), DatasetContentVersionValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetContentVersionValuePtrInput)(nil)).Elem(), DatasetContentVersionValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDeltaTimeInput)(nil)).Elem(), DatasetDeltaTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDeltaTimePtrInput)(nil)).Elem(), DatasetDeltaTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDeltaTimeSessionWindowConfigurationInput)(nil)).Elem(), DatasetDeltaTimeSessionWindowConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetDeltaTimeSessionWindowConfigurationPtrInput)(nil)).Elem(), DatasetDeltaTimeSessionWindowConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetFilterInput)(nil)).Elem(), DatasetFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetFilterArrayInput)(nil)).Elem(), DatasetFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetGlueConfigurationInput)(nil)).Elem(), DatasetGlueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetGlueConfigurationPtrInput)(nil)).Elem(), DatasetGlueConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetIotEventsDestinationConfigurationInput)(nil)).Elem(), DatasetIotEventsDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetIotEventsDestinationConfigurationPtrInput)(nil)).Elem(), DatasetIotEventsDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetLateDataRuleInput)(nil)).Elem(), DatasetLateDataRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetLateDataRuleArrayInput)(nil)).Elem(), DatasetLateDataRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetLateDataRuleConfigurationInput)(nil)).Elem(), DatasetLateDataRuleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetOutputFileUriValueInput)(nil)).Elem(), DatasetOutputFileUriValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetOutputFileUriValuePtrInput)(nil)).Elem(), DatasetOutputFileUriValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetQueryActionInput)(nil)).Elem(), DatasetQueryActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetQueryActionPtrInput)(nil)).Elem(), DatasetQueryActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetResourceConfigurationInput)(nil)).Elem(), DatasetResourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetResourceConfigurationPtrInput)(nil)).Elem(), DatasetResourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetRetentionPeriodInput)(nil)).Elem(), DatasetRetentionPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetRetentionPeriodPtrInput)(nil)).Elem(), DatasetRetentionPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetS3DestinationConfigurationInput)(nil)).Elem(), DatasetS3DestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetS3DestinationConfigurationPtrInput)(nil)).Elem(), DatasetS3DestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetScheduleInput)(nil)).Elem(), DatasetScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetSchedulePtrInput)(nil)).Elem(), DatasetScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetTagInput)(nil)).Elem(), DatasetTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetTagArrayInput)(nil)).Elem(), DatasetTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetTriggerInput)(nil)).Elem(), DatasetTriggerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetTriggerArrayInput)(nil)).Elem(), DatasetTriggerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetTriggeringDatasetInput)(nil)).Elem(), DatasetTriggeringDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetTriggeringDatasetPtrInput)(nil)).Elem(), DatasetTriggeringDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetVariableInput)(nil)).Elem(), DatasetVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetVariableArrayInput)(nil)).Elem(), DatasetVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetVersioningConfigurationInput)(nil)).Elem(), DatasetVersioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatasetVersioningConfigurationPtrInput)(nil)).Elem(), DatasetVersioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreColumnInput)(nil)).Elem(), DatastoreColumnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreColumnArrayInput)(nil)).Elem(), DatastoreColumnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreCustomerManagedS3Input)(nil)).Elem(), DatastoreCustomerManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreCustomerManagedS3PtrInput)(nil)).Elem(), DatastoreCustomerManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreCustomerManagedS3StorageInput)(nil)).Elem(), DatastoreCustomerManagedS3StorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreCustomerManagedS3StoragePtrInput)(nil)).Elem(), DatastoreCustomerManagedS3StorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreFileFormatConfigurationInput)(nil)).Elem(), DatastoreFileFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreFileFormatConfigurationPtrInput)(nil)).Elem(), DatastoreFileFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreIotSiteWiseMultiLayerStorageInput)(nil)).Elem(), DatastoreIotSiteWiseMultiLayerStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreIotSiteWiseMultiLayerStoragePtrInput)(nil)).Elem(), DatastoreIotSiteWiseMultiLayerStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreJsonConfigurationInput)(nil)).Elem(), DatastoreJsonConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreJsonConfigurationPtrInput)(nil)).Elem(), DatastoreJsonConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreParquetConfigurationInput)(nil)).Elem(), DatastoreParquetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreParquetConfigurationPtrInput)(nil)).Elem(), DatastoreParquetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastorePartitionInput)(nil)).Elem(), DatastorePartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastorePartitionPtrInput)(nil)).Elem(), DatastorePartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastorePartitionArrayInput)(nil)).Elem(), DatastorePartitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastorePartitionsInput)(nil)).Elem(), DatastorePartitionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastorePartitionsPtrInput)(nil)).Elem(), DatastorePartitionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreRetentionPeriodInput)(nil)).Elem(), DatastoreRetentionPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreRetentionPeriodPtrInput)(nil)).Elem(), DatastoreRetentionPeriodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreSchemaDefinitionInput)(nil)).Elem(), DatastoreSchemaDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreSchemaDefinitionPtrInput)(nil)).Elem(), DatastoreSchemaDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreServiceManagedS3Input)(nil)).Elem(), DatastoreServiceManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreServiceManagedS3PtrInput)(nil)).Elem(), DatastoreServiceManagedS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreStorageInput)(nil)).Elem(), DatastoreStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreStoragePtrInput)(nil)).Elem(), DatastoreStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreTagInput)(nil)).Elem(), DatastoreTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreTagArrayInput)(nil)).Elem(), DatastoreTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreTimestampPartitionInput)(nil)).Elem(), DatastoreTimestampPartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatastoreTimestampPartitionPtrInput)(nil)).Elem(), DatastoreTimestampPartitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineActivityInput)(nil)).Elem(), PipelineActivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineActivityArrayInput)(nil)).Elem(), PipelineActivityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineAddAttributesInput)(nil)).Elem(), PipelineAddAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineAddAttributesPtrInput)(nil)).Elem(), PipelineAddAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineChannelInput)(nil)).Elem(), PipelineChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineChannelPtrInput)(nil)).Elem(), PipelineChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDatastoreInput)(nil)).Elem(), PipelineDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDatastorePtrInput)(nil)).Elem(), PipelineDatastoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDeviceRegistryEnrichInput)(nil)).Elem(), PipelineDeviceRegistryEnrichArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDeviceRegistryEnrichPtrInput)(nil)).Elem(), PipelineDeviceRegistryEnrichArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDeviceShadowEnrichInput)(nil)).Elem(), PipelineDeviceShadowEnrichArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDeviceShadowEnrichPtrInput)(nil)).Elem(), PipelineDeviceShadowEnrichArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFilterInput)(nil)).Elem(), PipelineFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFilterPtrInput)(nil)).Elem(), PipelineFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLambdaInput)(nil)).Elem(), PipelineLambdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineLambdaPtrInput)(nil)).Elem(), PipelineLambdaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineMathInput)(nil)).Elem(), PipelineMathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineMathPtrInput)(nil)).Elem(), PipelineMathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineRemoveAttributesInput)(nil)).Elem(), PipelineRemoveAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineRemoveAttributesPtrInput)(nil)).Elem(), PipelineRemoveAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineSelectAttributesInput)(nil)).Elem(), PipelineSelectAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineSelectAttributesPtrInput)(nil)).Elem(), PipelineSelectAttributesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTagInput)(nil)).Elem(), PipelineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTagArrayInput)(nil)).Elem(), PipelineTagArray{})
	pulumi.RegisterOutputType(ChannelCustomerManagedS3Output{})
	pulumi.RegisterOutputType(ChannelCustomerManagedS3PtrOutput{})
	pulumi.RegisterOutputType(ChannelRetentionPeriodOutput{})
	pulumi.RegisterOutputType(ChannelRetentionPeriodPtrOutput{})
	pulumi.RegisterOutputType(ChannelServiceManagedS3Output{})
	pulumi.RegisterOutputType(ChannelServiceManagedS3PtrOutput{})
	pulumi.RegisterOutputType(ChannelStorageOutput{})
	pulumi.RegisterOutputType(ChannelStoragePtrOutput{})
	pulumi.RegisterOutputType(ChannelTagOutput{})
	pulumi.RegisterOutputType(ChannelTagArrayOutput{})
	pulumi.RegisterOutputType(DatasetActionOutput{})
	pulumi.RegisterOutputType(DatasetActionArrayOutput{})
	pulumi.RegisterOutputType(DatasetContainerActionOutput{})
	pulumi.RegisterOutputType(DatasetContainerActionPtrOutput{})
	pulumi.RegisterOutputType(DatasetContentDeliveryRuleOutput{})
	pulumi.RegisterOutputType(DatasetContentDeliveryRuleArrayOutput{})
	pulumi.RegisterOutputType(DatasetContentDeliveryRuleDestinationOutput{})
	pulumi.RegisterOutputType(DatasetContentVersionValueOutput{})
	pulumi.RegisterOutputType(DatasetContentVersionValuePtrOutput{})
	pulumi.RegisterOutputType(DatasetDeltaTimeOutput{})
	pulumi.RegisterOutputType(DatasetDeltaTimePtrOutput{})
	pulumi.RegisterOutputType(DatasetDeltaTimeSessionWindowConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetDeltaTimeSessionWindowConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatasetFilterOutput{})
	pulumi.RegisterOutputType(DatasetFilterArrayOutput{})
	pulumi.RegisterOutputType(DatasetGlueConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetGlueConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatasetIotEventsDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetIotEventsDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatasetLateDataRuleOutput{})
	pulumi.RegisterOutputType(DatasetLateDataRuleArrayOutput{})
	pulumi.RegisterOutputType(DatasetLateDataRuleConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetOutputFileUriValueOutput{})
	pulumi.RegisterOutputType(DatasetOutputFileUriValuePtrOutput{})
	pulumi.RegisterOutputType(DatasetQueryActionOutput{})
	pulumi.RegisterOutputType(DatasetQueryActionPtrOutput{})
	pulumi.RegisterOutputType(DatasetResourceConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetResourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatasetRetentionPeriodOutput{})
	pulumi.RegisterOutputType(DatasetRetentionPeriodPtrOutput{})
	pulumi.RegisterOutputType(DatasetS3DestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetS3DestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatasetScheduleOutput{})
	pulumi.RegisterOutputType(DatasetSchedulePtrOutput{})
	pulumi.RegisterOutputType(DatasetTagOutput{})
	pulumi.RegisterOutputType(DatasetTagArrayOutput{})
	pulumi.RegisterOutputType(DatasetTriggerOutput{})
	pulumi.RegisterOutputType(DatasetTriggerArrayOutput{})
	pulumi.RegisterOutputType(DatasetTriggeringDatasetOutput{})
	pulumi.RegisterOutputType(DatasetTriggeringDatasetPtrOutput{})
	pulumi.RegisterOutputType(DatasetVariableOutput{})
	pulumi.RegisterOutputType(DatasetVariableArrayOutput{})
	pulumi.RegisterOutputType(DatasetVersioningConfigurationOutput{})
	pulumi.RegisterOutputType(DatasetVersioningConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatastoreColumnOutput{})
	pulumi.RegisterOutputType(DatastoreColumnArrayOutput{})
	pulumi.RegisterOutputType(DatastoreCustomerManagedS3Output{})
	pulumi.RegisterOutputType(DatastoreCustomerManagedS3PtrOutput{})
	pulumi.RegisterOutputType(DatastoreCustomerManagedS3StorageOutput{})
	pulumi.RegisterOutputType(DatastoreCustomerManagedS3StoragePtrOutput{})
	pulumi.RegisterOutputType(DatastoreFileFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DatastoreFileFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatastoreIotSiteWiseMultiLayerStorageOutput{})
	pulumi.RegisterOutputType(DatastoreIotSiteWiseMultiLayerStoragePtrOutput{})
	pulumi.RegisterOutputType(DatastoreJsonConfigurationOutput{})
	pulumi.RegisterOutputType(DatastoreJsonConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatastoreParquetConfigurationOutput{})
	pulumi.RegisterOutputType(DatastoreParquetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DatastorePartitionOutput{})
	pulumi.RegisterOutputType(DatastorePartitionPtrOutput{})
	pulumi.RegisterOutputType(DatastorePartitionArrayOutput{})
	pulumi.RegisterOutputType(DatastorePartitionsOutput{})
	pulumi.RegisterOutputType(DatastorePartitionsPtrOutput{})
	pulumi.RegisterOutputType(DatastoreRetentionPeriodOutput{})
	pulumi.RegisterOutputType(DatastoreRetentionPeriodPtrOutput{})
	pulumi.RegisterOutputType(DatastoreSchemaDefinitionOutput{})
	pulumi.RegisterOutputType(DatastoreSchemaDefinitionPtrOutput{})
	pulumi.RegisterOutputType(DatastoreServiceManagedS3Output{})
	pulumi.RegisterOutputType(DatastoreServiceManagedS3PtrOutput{})
	pulumi.RegisterOutputType(DatastoreStorageOutput{})
	pulumi.RegisterOutputType(DatastoreStoragePtrOutput{})
	pulumi.RegisterOutputType(DatastoreTagOutput{})
	pulumi.RegisterOutputType(DatastoreTagArrayOutput{})
	pulumi.RegisterOutputType(DatastoreTimestampPartitionOutput{})
	pulumi.RegisterOutputType(DatastoreTimestampPartitionPtrOutput{})
	pulumi.RegisterOutputType(PipelineActivityOutput{})
	pulumi.RegisterOutputType(PipelineActivityArrayOutput{})
	pulumi.RegisterOutputType(PipelineAddAttributesOutput{})
	pulumi.RegisterOutputType(PipelineAddAttributesPtrOutput{})
	pulumi.RegisterOutputType(PipelineChannelOutput{})
	pulumi.RegisterOutputType(PipelineChannelPtrOutput{})
	pulumi.RegisterOutputType(PipelineDatastoreOutput{})
	pulumi.RegisterOutputType(PipelineDatastorePtrOutput{})
	pulumi.RegisterOutputType(PipelineDeviceRegistryEnrichOutput{})
	pulumi.RegisterOutputType(PipelineDeviceRegistryEnrichPtrOutput{})
	pulumi.RegisterOutputType(PipelineDeviceShadowEnrichOutput{})
	pulumi.RegisterOutputType(PipelineDeviceShadowEnrichPtrOutput{})
	pulumi.RegisterOutputType(PipelineFilterOutput{})
	pulumi.RegisterOutputType(PipelineFilterPtrOutput{})
	pulumi.RegisterOutputType(PipelineLambdaOutput{})
	pulumi.RegisterOutputType(PipelineLambdaPtrOutput{})
	pulumi.RegisterOutputType(PipelineMathOutput{})
	pulumi.RegisterOutputType(PipelineMathPtrOutput{})
	pulumi.RegisterOutputType(PipelineRemoveAttributesOutput{})
	pulumi.RegisterOutputType(PipelineRemoveAttributesPtrOutput{})
	pulumi.RegisterOutputType(PipelineSelectAttributesOutput{})
	pulumi.RegisterOutputType(PipelineSelectAttributesPtrOutput{})
	pulumi.RegisterOutputType(PipelineTagOutput{})
	pulumi.RegisterOutputType(PipelineTagArrayOutput{})
}
