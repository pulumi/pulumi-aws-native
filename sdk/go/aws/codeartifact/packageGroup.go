// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codeartifact

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The resource schema to create a CodeArtifact package group.
type PackageGroup struct {
	pulumi.CustomResourceState

	// The ARN of the package group.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The contact info of the package group.
	ContactInfo pulumi.StringPtrOutput `pulumi:"contactInfo"`
	// The text description of the package group.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the domain that contains the package group.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// The 12-digit account ID of the AWS account that owns the domain.
	DomainOwner pulumi.StringPtrOutput `pulumi:"domainOwner"`
	// The package origin configuration of the package group.
	OriginConfiguration PackageGroupOriginConfigurationPtrOutput `pulumi:"originConfiguration"`
	// The package group pattern that is used to gather packages.
	Pattern pulumi.StringOutput `pulumi:"pattern"`
	// An array of key-value pairs to apply to the package group.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewPackageGroup registers a new resource with the given unique name, arguments, and options.
func NewPackageGroup(ctx *pulumi.Context,
	name string, args *PackageGroupArgs, opts ...pulumi.ResourceOption) (*PackageGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	if args.Pattern == nil {
		return nil, errors.New("invalid value for required argument 'Pattern'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"domainName",
		"pattern",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PackageGroup
	err := ctx.RegisterResource("aws-native:codeartifact:PackageGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPackageGroup gets an existing PackageGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPackageGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PackageGroupState, opts ...pulumi.ResourceOption) (*PackageGroup, error) {
	var resource PackageGroup
	err := ctx.ReadResource("aws-native:codeartifact:PackageGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PackageGroup resources.
type packageGroupState struct {
}

type PackageGroupState struct {
}

func (PackageGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*packageGroupState)(nil)).Elem()
}

type packageGroupArgs struct {
	// The contact info of the package group.
	ContactInfo *string `pulumi:"contactInfo"`
	// The text description of the package group.
	Description *string `pulumi:"description"`
	// The name of the domain that contains the package group.
	DomainName string `pulumi:"domainName"`
	// The 12-digit account ID of the AWS account that owns the domain.
	DomainOwner *string `pulumi:"domainOwner"`
	// The package origin configuration of the package group.
	OriginConfiguration *PackageGroupOriginConfiguration `pulumi:"originConfiguration"`
	// The package group pattern that is used to gather packages.
	Pattern string `pulumi:"pattern"`
	// An array of key-value pairs to apply to the package group.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a PackageGroup resource.
type PackageGroupArgs struct {
	// The contact info of the package group.
	ContactInfo pulumi.StringPtrInput
	// The text description of the package group.
	Description pulumi.StringPtrInput
	// The name of the domain that contains the package group.
	DomainName pulumi.StringInput
	// The 12-digit account ID of the AWS account that owns the domain.
	DomainOwner pulumi.StringPtrInput
	// The package origin configuration of the package group.
	OriginConfiguration PackageGroupOriginConfigurationPtrInput
	// The package group pattern that is used to gather packages.
	Pattern pulumi.StringInput
	// An array of key-value pairs to apply to the package group.
	Tags aws.TagArrayInput
}

func (PackageGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*packageGroupArgs)(nil)).Elem()
}

type PackageGroupInput interface {
	pulumi.Input

	ToPackageGroupOutput() PackageGroupOutput
	ToPackageGroupOutputWithContext(ctx context.Context) PackageGroupOutput
}

func (*PackageGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageGroup)(nil)).Elem()
}

func (i *PackageGroup) ToPackageGroupOutput() PackageGroupOutput {
	return i.ToPackageGroupOutputWithContext(context.Background())
}

func (i *PackageGroup) ToPackageGroupOutputWithContext(ctx context.Context) PackageGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageGroupOutput)
}

type PackageGroupOutput struct{ *pulumi.OutputState }

func (PackageGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageGroup)(nil)).Elem()
}

func (o PackageGroupOutput) ToPackageGroupOutput() PackageGroupOutput {
	return o
}

func (o PackageGroupOutput) ToPackageGroupOutputWithContext(ctx context.Context) PackageGroupOutput {
	return o
}

// The ARN of the package group.
func (o PackageGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *PackageGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The contact info of the package group.
func (o PackageGroupOutput) ContactInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageGroup) pulumi.StringPtrOutput { return v.ContactInfo }).(pulumi.StringPtrOutput)
}

// The text description of the package group.
func (o PackageGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the domain that contains the package group.
func (o PackageGroupOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *PackageGroup) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// The 12-digit account ID of the AWS account that owns the domain.
func (o PackageGroupOutput) DomainOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PackageGroup) pulumi.StringPtrOutput { return v.DomainOwner }).(pulumi.StringPtrOutput)
}

// The package origin configuration of the package group.
func (o PackageGroupOutput) OriginConfiguration() PackageGroupOriginConfigurationPtrOutput {
	return o.ApplyT(func(v *PackageGroup) PackageGroupOriginConfigurationPtrOutput { return v.OriginConfiguration }).(PackageGroupOriginConfigurationPtrOutput)
}

// The package group pattern that is used to gather packages.
func (o PackageGroupOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v *PackageGroup) pulumi.StringOutput { return v.Pattern }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to the package group.
func (o PackageGroupOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *PackageGroup) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PackageGroupInput)(nil)).Elem(), &PackageGroup{})
	pulumi.RegisterOutputType(PackageGroupOutput{})
}
