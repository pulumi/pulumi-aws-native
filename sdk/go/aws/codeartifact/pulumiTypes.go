// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codeartifact

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A key-value pair to associate with a resource.
type DomainTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type PackageGroupOriginConfiguration struct {
	// The origin configuration that is applied to the package group.
	Restrictions PackageGroupRestrictions `pulumi:"restrictions"`
}

// PackageGroupOriginConfigurationInput is an input type that accepts PackageGroupOriginConfigurationArgs and PackageGroupOriginConfigurationOutput values.
// You can construct a concrete instance of `PackageGroupOriginConfigurationInput` via:
//
//	PackageGroupOriginConfigurationArgs{...}
type PackageGroupOriginConfigurationInput interface {
	pulumi.Input

	ToPackageGroupOriginConfigurationOutput() PackageGroupOriginConfigurationOutput
	ToPackageGroupOriginConfigurationOutputWithContext(context.Context) PackageGroupOriginConfigurationOutput
}

type PackageGroupOriginConfigurationArgs struct {
	// The origin configuration that is applied to the package group.
	Restrictions PackageGroupRestrictionsInput `pulumi:"restrictions"`
}

func (PackageGroupOriginConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageGroupOriginConfiguration)(nil)).Elem()
}

func (i PackageGroupOriginConfigurationArgs) ToPackageGroupOriginConfigurationOutput() PackageGroupOriginConfigurationOutput {
	return i.ToPackageGroupOriginConfigurationOutputWithContext(context.Background())
}

func (i PackageGroupOriginConfigurationArgs) ToPackageGroupOriginConfigurationOutputWithContext(ctx context.Context) PackageGroupOriginConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageGroupOriginConfigurationOutput)
}

func (i PackageGroupOriginConfigurationArgs) ToPackageGroupOriginConfigurationPtrOutput() PackageGroupOriginConfigurationPtrOutput {
	return i.ToPackageGroupOriginConfigurationPtrOutputWithContext(context.Background())
}

func (i PackageGroupOriginConfigurationArgs) ToPackageGroupOriginConfigurationPtrOutputWithContext(ctx context.Context) PackageGroupOriginConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageGroupOriginConfigurationOutput).ToPackageGroupOriginConfigurationPtrOutputWithContext(ctx)
}

// PackageGroupOriginConfigurationPtrInput is an input type that accepts PackageGroupOriginConfigurationArgs, PackageGroupOriginConfigurationPtr and PackageGroupOriginConfigurationPtrOutput values.
// You can construct a concrete instance of `PackageGroupOriginConfigurationPtrInput` via:
//
//	        PackageGroupOriginConfigurationArgs{...}
//
//	or:
//
//	        nil
type PackageGroupOriginConfigurationPtrInput interface {
	pulumi.Input

	ToPackageGroupOriginConfigurationPtrOutput() PackageGroupOriginConfigurationPtrOutput
	ToPackageGroupOriginConfigurationPtrOutputWithContext(context.Context) PackageGroupOriginConfigurationPtrOutput
}

type packageGroupOriginConfigurationPtrType PackageGroupOriginConfigurationArgs

func PackageGroupOriginConfigurationPtr(v *PackageGroupOriginConfigurationArgs) PackageGroupOriginConfigurationPtrInput {
	return (*packageGroupOriginConfigurationPtrType)(v)
}

func (*packageGroupOriginConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageGroupOriginConfiguration)(nil)).Elem()
}

func (i *packageGroupOriginConfigurationPtrType) ToPackageGroupOriginConfigurationPtrOutput() PackageGroupOriginConfigurationPtrOutput {
	return i.ToPackageGroupOriginConfigurationPtrOutputWithContext(context.Background())
}

func (i *packageGroupOriginConfigurationPtrType) ToPackageGroupOriginConfigurationPtrOutputWithContext(ctx context.Context) PackageGroupOriginConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageGroupOriginConfigurationPtrOutput)
}

type PackageGroupOriginConfigurationOutput struct{ *pulumi.OutputState }

func (PackageGroupOriginConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageGroupOriginConfiguration)(nil)).Elem()
}

func (o PackageGroupOriginConfigurationOutput) ToPackageGroupOriginConfigurationOutput() PackageGroupOriginConfigurationOutput {
	return o
}

func (o PackageGroupOriginConfigurationOutput) ToPackageGroupOriginConfigurationOutputWithContext(ctx context.Context) PackageGroupOriginConfigurationOutput {
	return o
}

func (o PackageGroupOriginConfigurationOutput) ToPackageGroupOriginConfigurationPtrOutput() PackageGroupOriginConfigurationPtrOutput {
	return o.ToPackageGroupOriginConfigurationPtrOutputWithContext(context.Background())
}

func (o PackageGroupOriginConfigurationOutput) ToPackageGroupOriginConfigurationPtrOutputWithContext(ctx context.Context) PackageGroupOriginConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackageGroupOriginConfiguration) *PackageGroupOriginConfiguration {
		return &v
	}).(PackageGroupOriginConfigurationPtrOutput)
}

// The origin configuration that is applied to the package group.
func (o PackageGroupOriginConfigurationOutput) Restrictions() PackageGroupRestrictionsOutput {
	return o.ApplyT(func(v PackageGroupOriginConfiguration) PackageGroupRestrictions { return v.Restrictions }).(PackageGroupRestrictionsOutput)
}

type PackageGroupOriginConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PackageGroupOriginConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageGroupOriginConfiguration)(nil)).Elem()
}

func (o PackageGroupOriginConfigurationPtrOutput) ToPackageGroupOriginConfigurationPtrOutput() PackageGroupOriginConfigurationPtrOutput {
	return o
}

func (o PackageGroupOriginConfigurationPtrOutput) ToPackageGroupOriginConfigurationPtrOutputWithContext(ctx context.Context) PackageGroupOriginConfigurationPtrOutput {
	return o
}

func (o PackageGroupOriginConfigurationPtrOutput) Elem() PackageGroupOriginConfigurationOutput {
	return o.ApplyT(func(v *PackageGroupOriginConfiguration) PackageGroupOriginConfiguration {
		if v != nil {
			return *v
		}
		var ret PackageGroupOriginConfiguration
		return ret
	}).(PackageGroupOriginConfigurationOutput)
}

// The origin configuration that is applied to the package group.
func (o PackageGroupOriginConfigurationPtrOutput) Restrictions() PackageGroupRestrictionsPtrOutput {
	return o.ApplyT(func(v *PackageGroupOriginConfiguration) *PackageGroupRestrictions {
		if v == nil {
			return nil
		}
		return &v.Restrictions
	}).(PackageGroupRestrictionsPtrOutput)
}

type PackageGroupRestrictionType struct {
	// The repositories to add to the allowed repositories list. The allowed repositories list is used when the `RestrictionMode` is set to `ALLOW_SPECIFIC_REPOSITORIES` .
	Repositories []string `pulumi:"repositories"`
	// The package group origin restriction setting. When the value is `INHERIT` , the value is set to the value of the first parent package group which does not have a value of `INHERIT` .
	RestrictionMode PackageGroupRestrictionTypeRestrictionMode `pulumi:"restrictionMode"`
}

// PackageGroupRestrictionTypeInput is an input type that accepts PackageGroupRestrictionTypeArgs and PackageGroupRestrictionTypeOutput values.
// You can construct a concrete instance of `PackageGroupRestrictionTypeInput` via:
//
//	PackageGroupRestrictionTypeArgs{...}
type PackageGroupRestrictionTypeInput interface {
	pulumi.Input

	ToPackageGroupRestrictionTypeOutput() PackageGroupRestrictionTypeOutput
	ToPackageGroupRestrictionTypeOutputWithContext(context.Context) PackageGroupRestrictionTypeOutput
}

type PackageGroupRestrictionTypeArgs struct {
	// The repositories to add to the allowed repositories list. The allowed repositories list is used when the `RestrictionMode` is set to `ALLOW_SPECIFIC_REPOSITORIES` .
	Repositories pulumi.StringArrayInput `pulumi:"repositories"`
	// The package group origin restriction setting. When the value is `INHERIT` , the value is set to the value of the first parent package group which does not have a value of `INHERIT` .
	RestrictionMode PackageGroupRestrictionTypeRestrictionModeInput `pulumi:"restrictionMode"`
}

func (PackageGroupRestrictionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageGroupRestrictionType)(nil)).Elem()
}

func (i PackageGroupRestrictionTypeArgs) ToPackageGroupRestrictionTypeOutput() PackageGroupRestrictionTypeOutput {
	return i.ToPackageGroupRestrictionTypeOutputWithContext(context.Background())
}

func (i PackageGroupRestrictionTypeArgs) ToPackageGroupRestrictionTypeOutputWithContext(ctx context.Context) PackageGroupRestrictionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageGroupRestrictionTypeOutput)
}

func (i PackageGroupRestrictionTypeArgs) ToPackageGroupRestrictionTypePtrOutput() PackageGroupRestrictionTypePtrOutput {
	return i.ToPackageGroupRestrictionTypePtrOutputWithContext(context.Background())
}

func (i PackageGroupRestrictionTypeArgs) ToPackageGroupRestrictionTypePtrOutputWithContext(ctx context.Context) PackageGroupRestrictionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageGroupRestrictionTypeOutput).ToPackageGroupRestrictionTypePtrOutputWithContext(ctx)
}

// PackageGroupRestrictionTypePtrInput is an input type that accepts PackageGroupRestrictionTypeArgs, PackageGroupRestrictionTypePtr and PackageGroupRestrictionTypePtrOutput values.
// You can construct a concrete instance of `PackageGroupRestrictionTypePtrInput` via:
//
//	        PackageGroupRestrictionTypeArgs{...}
//
//	or:
//
//	        nil
type PackageGroupRestrictionTypePtrInput interface {
	pulumi.Input

	ToPackageGroupRestrictionTypePtrOutput() PackageGroupRestrictionTypePtrOutput
	ToPackageGroupRestrictionTypePtrOutputWithContext(context.Context) PackageGroupRestrictionTypePtrOutput
}

type packageGroupRestrictionTypePtrType PackageGroupRestrictionTypeArgs

func PackageGroupRestrictionTypePtr(v *PackageGroupRestrictionTypeArgs) PackageGroupRestrictionTypePtrInput {
	return (*packageGroupRestrictionTypePtrType)(v)
}

func (*packageGroupRestrictionTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageGroupRestrictionType)(nil)).Elem()
}

func (i *packageGroupRestrictionTypePtrType) ToPackageGroupRestrictionTypePtrOutput() PackageGroupRestrictionTypePtrOutput {
	return i.ToPackageGroupRestrictionTypePtrOutputWithContext(context.Background())
}

func (i *packageGroupRestrictionTypePtrType) ToPackageGroupRestrictionTypePtrOutputWithContext(ctx context.Context) PackageGroupRestrictionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageGroupRestrictionTypePtrOutput)
}

type PackageGroupRestrictionTypeOutput struct{ *pulumi.OutputState }

func (PackageGroupRestrictionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageGroupRestrictionType)(nil)).Elem()
}

func (o PackageGroupRestrictionTypeOutput) ToPackageGroupRestrictionTypeOutput() PackageGroupRestrictionTypeOutput {
	return o
}

func (o PackageGroupRestrictionTypeOutput) ToPackageGroupRestrictionTypeOutputWithContext(ctx context.Context) PackageGroupRestrictionTypeOutput {
	return o
}

func (o PackageGroupRestrictionTypeOutput) ToPackageGroupRestrictionTypePtrOutput() PackageGroupRestrictionTypePtrOutput {
	return o.ToPackageGroupRestrictionTypePtrOutputWithContext(context.Background())
}

func (o PackageGroupRestrictionTypeOutput) ToPackageGroupRestrictionTypePtrOutputWithContext(ctx context.Context) PackageGroupRestrictionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackageGroupRestrictionType) *PackageGroupRestrictionType {
		return &v
	}).(PackageGroupRestrictionTypePtrOutput)
}

// The repositories to add to the allowed repositories list. The allowed repositories list is used when the `RestrictionMode` is set to `ALLOW_SPECIFIC_REPOSITORIES` .
func (o PackageGroupRestrictionTypeOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PackageGroupRestrictionType) []string { return v.Repositories }).(pulumi.StringArrayOutput)
}

// The package group origin restriction setting. When the value is `INHERIT` , the value is set to the value of the first parent package group which does not have a value of `INHERIT` .
func (o PackageGroupRestrictionTypeOutput) RestrictionMode() PackageGroupRestrictionTypeRestrictionModeOutput {
	return o.ApplyT(func(v PackageGroupRestrictionType) PackageGroupRestrictionTypeRestrictionMode {
		return v.RestrictionMode
	}).(PackageGroupRestrictionTypeRestrictionModeOutput)
}

type PackageGroupRestrictionTypePtrOutput struct{ *pulumi.OutputState }

func (PackageGroupRestrictionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageGroupRestrictionType)(nil)).Elem()
}

func (o PackageGroupRestrictionTypePtrOutput) ToPackageGroupRestrictionTypePtrOutput() PackageGroupRestrictionTypePtrOutput {
	return o
}

func (o PackageGroupRestrictionTypePtrOutput) ToPackageGroupRestrictionTypePtrOutputWithContext(ctx context.Context) PackageGroupRestrictionTypePtrOutput {
	return o
}

func (o PackageGroupRestrictionTypePtrOutput) Elem() PackageGroupRestrictionTypeOutput {
	return o.ApplyT(func(v *PackageGroupRestrictionType) PackageGroupRestrictionType {
		if v != nil {
			return *v
		}
		var ret PackageGroupRestrictionType
		return ret
	}).(PackageGroupRestrictionTypeOutput)
}

// The repositories to add to the allowed repositories list. The allowed repositories list is used when the `RestrictionMode` is set to `ALLOW_SPECIFIC_REPOSITORIES` .
func (o PackageGroupRestrictionTypePtrOutput) Repositories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PackageGroupRestrictionType) []string {
		if v == nil {
			return nil
		}
		return v.Repositories
	}).(pulumi.StringArrayOutput)
}

// The package group origin restriction setting. When the value is `INHERIT` , the value is set to the value of the first parent package group which does not have a value of `INHERIT` .
func (o PackageGroupRestrictionTypePtrOutput) RestrictionMode() PackageGroupRestrictionTypeRestrictionModePtrOutput {
	return o.ApplyT(func(v *PackageGroupRestrictionType) *PackageGroupRestrictionTypeRestrictionMode {
		if v == nil {
			return nil
		}
		return &v.RestrictionMode
	}).(PackageGroupRestrictionTypeRestrictionModePtrOutput)
}

type PackageGroupRestrictions struct {
	// The external upstream restriction determines if new package versions can be ingested or retained from external connections.
	ExternalUpstream *PackageGroupRestrictionType `pulumi:"externalUpstream"`
	// The internal upstream restriction determines if new package versions can be ingested or retained from upstream repositories.
	InternalUpstream *PackageGroupRestrictionType `pulumi:"internalUpstream"`
	// The publish restriction determines if new package versions can be published.
	Publish *PackageGroupRestrictionType `pulumi:"publish"`
}

// PackageGroupRestrictionsInput is an input type that accepts PackageGroupRestrictionsArgs and PackageGroupRestrictionsOutput values.
// You can construct a concrete instance of `PackageGroupRestrictionsInput` via:
//
//	PackageGroupRestrictionsArgs{...}
type PackageGroupRestrictionsInput interface {
	pulumi.Input

	ToPackageGroupRestrictionsOutput() PackageGroupRestrictionsOutput
	ToPackageGroupRestrictionsOutputWithContext(context.Context) PackageGroupRestrictionsOutput
}

type PackageGroupRestrictionsArgs struct {
	// The external upstream restriction determines if new package versions can be ingested or retained from external connections.
	ExternalUpstream PackageGroupRestrictionTypePtrInput `pulumi:"externalUpstream"`
	// The internal upstream restriction determines if new package versions can be ingested or retained from upstream repositories.
	InternalUpstream PackageGroupRestrictionTypePtrInput `pulumi:"internalUpstream"`
	// The publish restriction determines if new package versions can be published.
	Publish PackageGroupRestrictionTypePtrInput `pulumi:"publish"`
}

func (PackageGroupRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageGroupRestrictions)(nil)).Elem()
}

func (i PackageGroupRestrictionsArgs) ToPackageGroupRestrictionsOutput() PackageGroupRestrictionsOutput {
	return i.ToPackageGroupRestrictionsOutputWithContext(context.Background())
}

func (i PackageGroupRestrictionsArgs) ToPackageGroupRestrictionsOutputWithContext(ctx context.Context) PackageGroupRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageGroupRestrictionsOutput)
}

func (i PackageGroupRestrictionsArgs) ToPackageGroupRestrictionsPtrOutput() PackageGroupRestrictionsPtrOutput {
	return i.ToPackageGroupRestrictionsPtrOutputWithContext(context.Background())
}

func (i PackageGroupRestrictionsArgs) ToPackageGroupRestrictionsPtrOutputWithContext(ctx context.Context) PackageGroupRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageGroupRestrictionsOutput).ToPackageGroupRestrictionsPtrOutputWithContext(ctx)
}

// PackageGroupRestrictionsPtrInput is an input type that accepts PackageGroupRestrictionsArgs, PackageGroupRestrictionsPtr and PackageGroupRestrictionsPtrOutput values.
// You can construct a concrete instance of `PackageGroupRestrictionsPtrInput` via:
//
//	        PackageGroupRestrictionsArgs{...}
//
//	or:
//
//	        nil
type PackageGroupRestrictionsPtrInput interface {
	pulumi.Input

	ToPackageGroupRestrictionsPtrOutput() PackageGroupRestrictionsPtrOutput
	ToPackageGroupRestrictionsPtrOutputWithContext(context.Context) PackageGroupRestrictionsPtrOutput
}

type packageGroupRestrictionsPtrType PackageGroupRestrictionsArgs

func PackageGroupRestrictionsPtr(v *PackageGroupRestrictionsArgs) PackageGroupRestrictionsPtrInput {
	return (*packageGroupRestrictionsPtrType)(v)
}

func (*packageGroupRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageGroupRestrictions)(nil)).Elem()
}

func (i *packageGroupRestrictionsPtrType) ToPackageGroupRestrictionsPtrOutput() PackageGroupRestrictionsPtrOutput {
	return i.ToPackageGroupRestrictionsPtrOutputWithContext(context.Background())
}

func (i *packageGroupRestrictionsPtrType) ToPackageGroupRestrictionsPtrOutputWithContext(ctx context.Context) PackageGroupRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PackageGroupRestrictionsPtrOutput)
}

type PackageGroupRestrictionsOutput struct{ *pulumi.OutputState }

func (PackageGroupRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PackageGroupRestrictions)(nil)).Elem()
}

func (o PackageGroupRestrictionsOutput) ToPackageGroupRestrictionsOutput() PackageGroupRestrictionsOutput {
	return o
}

func (o PackageGroupRestrictionsOutput) ToPackageGroupRestrictionsOutputWithContext(ctx context.Context) PackageGroupRestrictionsOutput {
	return o
}

func (o PackageGroupRestrictionsOutput) ToPackageGroupRestrictionsPtrOutput() PackageGroupRestrictionsPtrOutput {
	return o.ToPackageGroupRestrictionsPtrOutputWithContext(context.Background())
}

func (o PackageGroupRestrictionsOutput) ToPackageGroupRestrictionsPtrOutputWithContext(ctx context.Context) PackageGroupRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PackageGroupRestrictions) *PackageGroupRestrictions {
		return &v
	}).(PackageGroupRestrictionsPtrOutput)
}

// The external upstream restriction determines if new package versions can be ingested or retained from external connections.
func (o PackageGroupRestrictionsOutput) ExternalUpstream() PackageGroupRestrictionTypePtrOutput {
	return o.ApplyT(func(v PackageGroupRestrictions) *PackageGroupRestrictionType { return v.ExternalUpstream }).(PackageGroupRestrictionTypePtrOutput)
}

// The internal upstream restriction determines if new package versions can be ingested or retained from upstream repositories.
func (o PackageGroupRestrictionsOutput) InternalUpstream() PackageGroupRestrictionTypePtrOutput {
	return o.ApplyT(func(v PackageGroupRestrictions) *PackageGroupRestrictionType { return v.InternalUpstream }).(PackageGroupRestrictionTypePtrOutput)
}

// The publish restriction determines if new package versions can be published.
func (o PackageGroupRestrictionsOutput) Publish() PackageGroupRestrictionTypePtrOutput {
	return o.ApplyT(func(v PackageGroupRestrictions) *PackageGroupRestrictionType { return v.Publish }).(PackageGroupRestrictionTypePtrOutput)
}

type PackageGroupRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (PackageGroupRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PackageGroupRestrictions)(nil)).Elem()
}

func (o PackageGroupRestrictionsPtrOutput) ToPackageGroupRestrictionsPtrOutput() PackageGroupRestrictionsPtrOutput {
	return o
}

func (o PackageGroupRestrictionsPtrOutput) ToPackageGroupRestrictionsPtrOutputWithContext(ctx context.Context) PackageGroupRestrictionsPtrOutput {
	return o
}

func (o PackageGroupRestrictionsPtrOutput) Elem() PackageGroupRestrictionsOutput {
	return o.ApplyT(func(v *PackageGroupRestrictions) PackageGroupRestrictions {
		if v != nil {
			return *v
		}
		var ret PackageGroupRestrictions
		return ret
	}).(PackageGroupRestrictionsOutput)
}

// The external upstream restriction determines if new package versions can be ingested or retained from external connections.
func (o PackageGroupRestrictionsPtrOutput) ExternalUpstream() PackageGroupRestrictionTypePtrOutput {
	return o.ApplyT(func(v *PackageGroupRestrictions) *PackageGroupRestrictionType {
		if v == nil {
			return nil
		}
		return v.ExternalUpstream
	}).(PackageGroupRestrictionTypePtrOutput)
}

// The internal upstream restriction determines if new package versions can be ingested or retained from upstream repositories.
func (o PackageGroupRestrictionsPtrOutput) InternalUpstream() PackageGroupRestrictionTypePtrOutput {
	return o.ApplyT(func(v *PackageGroupRestrictions) *PackageGroupRestrictionType {
		if v == nil {
			return nil
		}
		return v.InternalUpstream
	}).(PackageGroupRestrictionTypePtrOutput)
}

// The publish restriction determines if new package versions can be published.
func (o PackageGroupRestrictionsPtrOutput) Publish() PackageGroupRestrictionTypePtrOutput {
	return o.ApplyT(func(v *PackageGroupRestrictions) *PackageGroupRestrictionType {
		if v == nil {
			return nil
		}
		return v.Publish
	}).(PackageGroupRestrictionTypePtrOutput)
}

// A key-value pair to associate with a resource.
type PackageGroupTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type RepositoryTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PackageGroupOriginConfigurationInput)(nil)).Elem(), PackageGroupOriginConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PackageGroupOriginConfigurationPtrInput)(nil)).Elem(), PackageGroupOriginConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PackageGroupRestrictionTypeInput)(nil)).Elem(), PackageGroupRestrictionTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PackageGroupRestrictionTypePtrInput)(nil)).Elem(), PackageGroupRestrictionTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PackageGroupRestrictionsInput)(nil)).Elem(), PackageGroupRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PackageGroupRestrictionsPtrInput)(nil)).Elem(), PackageGroupRestrictionsArgs{})
	pulumi.RegisterOutputType(PackageGroupOriginConfigurationOutput{})
	pulumi.RegisterOutputType(PackageGroupOriginConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PackageGroupRestrictionTypeOutput{})
	pulumi.RegisterOutputType(PackageGroupRestrictionTypePtrOutput{})
	pulumi.RegisterOutputType(PackageGroupRestrictionsOutput{})
	pulumi.RegisterOutputType(PackageGroupRestrictionsPtrOutput{})
}
