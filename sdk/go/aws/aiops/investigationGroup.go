// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::AIOps::InvestigationGroup Resource Type
type InvestigationGroup struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the investigation group.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// An array of key-value pairs of notification channels to apply to this resource.
	ChatbotNotificationChannels InvestigationGroupChatbotNotificationChannelArrayOutput `pulumi:"chatbotNotificationChannels"`
	// The date and time that the investigation group was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The name of the user who created the investigation group.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// An array of cross account configurations.
	CrossAccountConfigurations InvestigationGroupCrossAccountConfigurationArrayOutput `pulumi:"crossAccountConfigurations"`
	// Specifies the customer managed AWS KMS key that the investigation group uses to encrypt data, if there is one. If not, the investigation group uses an AWS key to encrypt the data.
	EncryptionConfig InvestigationGroupEncryptionConfigMapPtrOutput `pulumi:"encryptionConfig"`
	// Investigation Group policy
	InvestigationGroupPolicy pulumi.StringPtrOutput `pulumi:"investigationGroupPolicy"`
	// Flag to enable cloud trail history
	IsCloudTrailEventHistoryEnabled pulumi.BoolPtrOutput `pulumi:"isCloudTrailEventHistoryEnabled"`
	// The date and time that the investigation group was most recently modified.
	LastModifiedAt pulumi.StringOutput `pulumi:"lastModifiedAt"`
	// The name of the user who created the investigation group.
	LastModifiedBy pulumi.StringOutput `pulumi:"lastModifiedBy"`
	// Specify either the name or the ARN of the investigation group that you want to view.
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of days to retain the investigation group
	RetentionInDays pulumi.IntPtrOutput `pulumi:"retentionInDays"`
	// The ARN of the IAM role that the investigation group uses for permissions to gather data.
	RoleArn pulumi.StringPtrOutput `pulumi:"roleArn"`
	// Displays the custom tag keys for custom applications in your system that you have specified in the investigation group. Resource tags help CloudWatch investigations narrow the search space when it is unable to discover definite relationships between resources.
	TagKeyBoundaries pulumi.StringArrayOutput `pulumi:"tagKeyBoundaries"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewInvestigationGroup registers a new resource with the given unique name, arguments, and options.
func NewInvestigationGroup(ctx *pulumi.Context,
	name string, args *InvestigationGroupArgs, opts ...pulumi.ResourceOption) (*InvestigationGroup, error) {
	if args == nil {
		args = &InvestigationGroupArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
		"retentionInDays",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InvestigationGroup
	err := ctx.RegisterResource("aws-native:aiops:InvestigationGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInvestigationGroup gets an existing InvestigationGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInvestigationGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InvestigationGroupState, opts ...pulumi.ResourceOption) (*InvestigationGroup, error) {
	var resource InvestigationGroup
	err := ctx.ReadResource("aws-native:aiops:InvestigationGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InvestigationGroup resources.
type investigationGroupState struct {
}

type InvestigationGroupState struct {
}

func (InvestigationGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*investigationGroupState)(nil)).Elem()
}

type investigationGroupArgs struct {
	// An array of key-value pairs of notification channels to apply to this resource.
	ChatbotNotificationChannels []InvestigationGroupChatbotNotificationChannel `pulumi:"chatbotNotificationChannels"`
	// An array of cross account configurations.
	CrossAccountConfigurations []InvestigationGroupCrossAccountConfiguration `pulumi:"crossAccountConfigurations"`
	// Specifies the customer managed AWS KMS key that the investigation group uses to encrypt data, if there is one. If not, the investigation group uses an AWS key to encrypt the data.
	EncryptionConfig *InvestigationGroupEncryptionConfigMap `pulumi:"encryptionConfig"`
	// Investigation Group policy
	InvestigationGroupPolicy *string `pulumi:"investigationGroupPolicy"`
	// Flag to enable cloud trail history
	IsCloudTrailEventHistoryEnabled *bool `pulumi:"isCloudTrailEventHistoryEnabled"`
	// Specify either the name or the ARN of the investigation group that you want to view.
	Name *string `pulumi:"name"`
	// The number of days to retain the investigation group
	RetentionInDays *int `pulumi:"retentionInDays"`
	// The ARN of the IAM role that the investigation group uses for permissions to gather data.
	RoleArn *string `pulumi:"roleArn"`
	// Displays the custom tag keys for custom applications in your system that you have specified in the investigation group. Resource tags help CloudWatch investigations narrow the search space when it is unable to discover definite relationships between resources.
	TagKeyBoundaries []string `pulumi:"tagKeyBoundaries"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a InvestigationGroup resource.
type InvestigationGroupArgs struct {
	// An array of key-value pairs of notification channels to apply to this resource.
	ChatbotNotificationChannels InvestigationGroupChatbotNotificationChannelArrayInput
	// An array of cross account configurations.
	CrossAccountConfigurations InvestigationGroupCrossAccountConfigurationArrayInput
	// Specifies the customer managed AWS KMS key that the investigation group uses to encrypt data, if there is one. If not, the investigation group uses an AWS key to encrypt the data.
	EncryptionConfig InvestigationGroupEncryptionConfigMapPtrInput
	// Investigation Group policy
	InvestigationGroupPolicy pulumi.StringPtrInput
	// Flag to enable cloud trail history
	IsCloudTrailEventHistoryEnabled pulumi.BoolPtrInput
	// Specify either the name or the ARN of the investigation group that you want to view.
	Name pulumi.StringPtrInput
	// The number of days to retain the investigation group
	RetentionInDays pulumi.IntPtrInput
	// The ARN of the IAM role that the investigation group uses for permissions to gather data.
	RoleArn pulumi.StringPtrInput
	// Displays the custom tag keys for custom applications in your system that you have specified in the investigation group. Resource tags help CloudWatch investigations narrow the search space when it is unable to discover definite relationships between resources.
	TagKeyBoundaries pulumi.StringArrayInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
}

func (InvestigationGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*investigationGroupArgs)(nil)).Elem()
}

type InvestigationGroupInput interface {
	pulumi.Input

	ToInvestigationGroupOutput() InvestigationGroupOutput
	ToInvestigationGroupOutputWithContext(ctx context.Context) InvestigationGroupOutput
}

func (*InvestigationGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**InvestigationGroup)(nil)).Elem()
}

func (i *InvestigationGroup) ToInvestigationGroupOutput() InvestigationGroupOutput {
	return i.ToInvestigationGroupOutputWithContext(context.Background())
}

func (i *InvestigationGroup) ToInvestigationGroupOutputWithContext(ctx context.Context) InvestigationGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvestigationGroupOutput)
}

type InvestigationGroupOutput struct{ *pulumi.OutputState }

func (InvestigationGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvestigationGroup)(nil)).Elem()
}

func (o InvestigationGroupOutput) ToInvestigationGroupOutput() InvestigationGroupOutput {
	return o
}

func (o InvestigationGroupOutput) ToInvestigationGroupOutputWithContext(ctx context.Context) InvestigationGroupOutput {
	return o
}

// The Amazon Resource Name (ARN) of the investigation group.
func (o InvestigationGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *InvestigationGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// An array of key-value pairs of notification channels to apply to this resource.
func (o InvestigationGroupOutput) ChatbotNotificationChannels() InvestigationGroupChatbotNotificationChannelArrayOutput {
	return o.ApplyT(func(v *InvestigationGroup) InvestigationGroupChatbotNotificationChannelArrayOutput {
		return v.ChatbotNotificationChannels
	}).(InvestigationGroupChatbotNotificationChannelArrayOutput)
}

// The date and time that the investigation group was created.
func (o InvestigationGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *InvestigationGroup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The name of the user who created the investigation group.
func (o InvestigationGroupOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *InvestigationGroup) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// An array of cross account configurations.
func (o InvestigationGroupOutput) CrossAccountConfigurations() InvestigationGroupCrossAccountConfigurationArrayOutput {
	return o.ApplyT(func(v *InvestigationGroup) InvestigationGroupCrossAccountConfigurationArrayOutput {
		return v.CrossAccountConfigurations
	}).(InvestigationGroupCrossAccountConfigurationArrayOutput)
}

// Specifies the customer managed AWS KMS key that the investigation group uses to encrypt data, if there is one. If not, the investigation group uses an AWS key to encrypt the data.
func (o InvestigationGroupOutput) EncryptionConfig() InvestigationGroupEncryptionConfigMapPtrOutput {
	return o.ApplyT(func(v *InvestigationGroup) InvestigationGroupEncryptionConfigMapPtrOutput { return v.EncryptionConfig }).(InvestigationGroupEncryptionConfigMapPtrOutput)
}

// Investigation Group policy
func (o InvestigationGroupOutput) InvestigationGroupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvestigationGroup) pulumi.StringPtrOutput { return v.InvestigationGroupPolicy }).(pulumi.StringPtrOutput)
}

// Flag to enable cloud trail history
func (o InvestigationGroupOutput) IsCloudTrailEventHistoryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InvestigationGroup) pulumi.BoolPtrOutput { return v.IsCloudTrailEventHistoryEnabled }).(pulumi.BoolPtrOutput)
}

// The date and time that the investigation group was most recently modified.
func (o InvestigationGroupOutput) LastModifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *InvestigationGroup) pulumi.StringOutput { return v.LastModifiedAt }).(pulumi.StringOutput)
}

// The name of the user who created the investigation group.
func (o InvestigationGroupOutput) LastModifiedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *InvestigationGroup) pulumi.StringOutput { return v.LastModifiedBy }).(pulumi.StringOutput)
}

// Specify either the name or the ARN of the investigation group that you want to view.
func (o InvestigationGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *InvestigationGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The number of days to retain the investigation group
func (o InvestigationGroupOutput) RetentionInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InvestigationGroup) pulumi.IntPtrOutput { return v.RetentionInDays }).(pulumi.IntPtrOutput)
}

// The ARN of the IAM role that the investigation group uses for permissions to gather data.
func (o InvestigationGroupOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvestigationGroup) pulumi.StringPtrOutput { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Displays the custom tag keys for custom applications in your system that you have specified in the investigation group. Resource tags help CloudWatch investigations narrow the search space when it is unable to discover definite relationships between resources.
func (o InvestigationGroupOutput) TagKeyBoundaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InvestigationGroup) pulumi.StringArrayOutput { return v.TagKeyBoundaries }).(pulumi.StringArrayOutput)
}

// An array of key-value pairs to apply to this resource.
func (o InvestigationGroupOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *InvestigationGroup) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InvestigationGroupInput)(nil)).Elem(), &InvestigationGroup{})
	pulumi.RegisterOutputType(InvestigationGroupOutput{})
}
