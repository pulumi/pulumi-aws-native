// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aiops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::AIOps::InvestigationGroup Resource Type
func LookupInvestigationGroup(ctx *pulumi.Context, args *LookupInvestigationGroupArgs, opts ...pulumi.InvokeOption) (*LookupInvestigationGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInvestigationGroupResult
	err := ctx.Invoke("aws-native:aiops:getInvestigationGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupInvestigationGroupArgs struct {
	// The Amazon Resource Name (ARN) of the investigation group.
	Arn string `pulumi:"arn"`
}

type LookupInvestigationGroupResult struct {
	// The Amazon Resource Name (ARN) of the investigation group.
	Arn *string `pulumi:"arn"`
	// An array of key-value pairs of notification channels to apply to this resource.
	ChatbotNotificationChannels []InvestigationGroupChatbotNotificationChannel `pulumi:"chatbotNotificationChannels"`
	// The date and time that the investigation group was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The name of the user who created the investigation group.
	CreatedBy *string `pulumi:"createdBy"`
	// An array of cross account configurations.
	CrossAccountConfigurations []InvestigationGroupCrossAccountConfiguration `pulumi:"crossAccountConfigurations"`
	// Specifies the customer managed AWS KMS key that the investigation group uses to encrypt data, if there is one. If not, the investigation group uses an AWS key to encrypt the data.
	EncryptionConfig *InvestigationGroupEncryptionConfigMap `pulumi:"encryptionConfig"`
	// Investigation Group policy
	InvestigationGroupPolicy *string `pulumi:"investigationGroupPolicy"`
	// Flag to enable cloud trail history
	IsCloudTrailEventHistoryEnabled *bool `pulumi:"isCloudTrailEventHistoryEnabled"`
	// The date and time that the investigation group was most recently modified.
	LastModifiedAt *string `pulumi:"lastModifiedAt"`
	// The name of the user who created the investigation group.
	LastModifiedBy *string `pulumi:"lastModifiedBy"`
	// The ARN of the IAM role that the investigation group uses for permissions to gather data.
	RoleArn *string `pulumi:"roleArn"`
	// Displays the custom tag keys for custom applications in your system that you have specified in the investigation group. Resource tags help CloudWatch investigations narrow the search space when it is unable to discover definite relationships between resources.
	TagKeyBoundaries []string `pulumi:"tagKeyBoundaries"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupInvestigationGroupOutput(ctx *pulumi.Context, args LookupInvestigationGroupOutputArgs, opts ...pulumi.InvokeOption) LookupInvestigationGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInvestigationGroupResultOutput, error) {
			args := v.(LookupInvestigationGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:aiops:getInvestigationGroup", args, LookupInvestigationGroupResultOutput{}, options).(LookupInvestigationGroupResultOutput), nil
		}).(LookupInvestigationGroupResultOutput)
}

type LookupInvestigationGroupOutputArgs struct {
	// The Amazon Resource Name (ARN) of the investigation group.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupInvestigationGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInvestigationGroupArgs)(nil)).Elem()
}

type LookupInvestigationGroupResultOutput struct{ *pulumi.OutputState }

func (LookupInvestigationGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInvestigationGroupResult)(nil)).Elem()
}

func (o LookupInvestigationGroupResultOutput) ToLookupInvestigationGroupResultOutput() LookupInvestigationGroupResultOutput {
	return o
}

func (o LookupInvestigationGroupResultOutput) ToLookupInvestigationGroupResultOutputWithContext(ctx context.Context) LookupInvestigationGroupResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the investigation group.
func (o LookupInvestigationGroupResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs of notification channels to apply to this resource.
func (o LookupInvestigationGroupResultOutput) ChatbotNotificationChannels() InvestigationGroupChatbotNotificationChannelArrayOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) []InvestigationGroupChatbotNotificationChannel {
		return v.ChatbotNotificationChannels
	}).(InvestigationGroupChatbotNotificationChannelArrayOutput)
}

// The date and time that the investigation group was created.
func (o LookupInvestigationGroupResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The name of the user who created the investigation group.
func (o LookupInvestigationGroupResultOutput) CreatedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) *string { return v.CreatedBy }).(pulumi.StringPtrOutput)
}

// An array of cross account configurations.
func (o LookupInvestigationGroupResultOutput) CrossAccountConfigurations() InvestigationGroupCrossAccountConfigurationArrayOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) []InvestigationGroupCrossAccountConfiguration {
		return v.CrossAccountConfigurations
	}).(InvestigationGroupCrossAccountConfigurationArrayOutput)
}

// Specifies the customer managed AWS KMS key that the investigation group uses to encrypt data, if there is one. If not, the investigation group uses an AWS key to encrypt the data.
func (o LookupInvestigationGroupResultOutput) EncryptionConfig() InvestigationGroupEncryptionConfigMapPtrOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) *InvestigationGroupEncryptionConfigMap {
		return v.EncryptionConfig
	}).(InvestigationGroupEncryptionConfigMapPtrOutput)
}

// Investigation Group policy
func (o LookupInvestigationGroupResultOutput) InvestigationGroupPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) *string { return v.InvestigationGroupPolicy }).(pulumi.StringPtrOutput)
}

// Flag to enable cloud trail history
func (o LookupInvestigationGroupResultOutput) IsCloudTrailEventHistoryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) *bool { return v.IsCloudTrailEventHistoryEnabled }).(pulumi.BoolPtrOutput)
}

// The date and time that the investigation group was most recently modified.
func (o LookupInvestigationGroupResultOutput) LastModifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) *string { return v.LastModifiedAt }).(pulumi.StringPtrOutput)
}

// The name of the user who created the investigation group.
func (o LookupInvestigationGroupResultOutput) LastModifiedBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) *string { return v.LastModifiedBy }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role that the investigation group uses for permissions to gather data.
func (o LookupInvestigationGroupResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Displays the custom tag keys for custom applications in your system that you have specified in the investigation group. Resource tags help CloudWatch investigations narrow the search space when it is unable to discover definite relationships between resources.
func (o LookupInvestigationGroupResultOutput) TagKeyBoundaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) []string { return v.TagKeyBoundaries }).(pulumi.StringArrayOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupInvestigationGroupResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupInvestigationGroupResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInvestigationGroupResultOutput{})
}
