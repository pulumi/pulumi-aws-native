// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package frauddetector

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A resource schema for a Detector in Amazon Fraud Detector.
func LookupDetector(ctx *pulumi.Context, args *LookupDetectorArgs, opts ...pulumi.InvokeOption) (*LookupDetectorResult, error) {
	var rv LookupDetectorResult
	err := ctx.Invoke("aws-native:frauddetector:getDetector", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDetectorArgs struct {
	// The ARN of the detector.
	Arn string `pulumi:"arn"`
}

type LookupDetectorResult struct {
	// The ARN of the detector.
	Arn *string `pulumi:"arn"`
	// The models to associate with this detector.
	AssociatedModels []DetectorModel `pulumi:"associatedModels"`
	// The time when the detector was created.
	CreatedTime *string `pulumi:"createdTime"`
	// The description of the detector.
	Description *string `pulumi:"description"`
	// The active version ID of the detector
	DetectorVersionId *string `pulumi:"detectorVersionId"`
	// The desired detector version status for the detector
	DetectorVersionStatus *DetectorVersionStatus `pulumi:"detectorVersionStatus"`
	// The event type to associate this detector with.
	EventType *DetectorEventType `pulumi:"eventType"`
	// The time when the detector was last updated.
	LastUpdatedTime   *string                    `pulumi:"lastUpdatedTime"`
	RuleExecutionMode *DetectorRuleExecutionMode `pulumi:"ruleExecutionMode"`
	Rules             []DetectorRule             `pulumi:"rules"`
	// Tags associated with this detector.
	Tags []DetectorTag `pulumi:"tags"`
}

func LookupDetectorOutput(ctx *pulumi.Context, args LookupDetectorOutputArgs, opts ...pulumi.InvokeOption) LookupDetectorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDetectorResult, error) {
			args := v.(LookupDetectorArgs)
			r, err := LookupDetector(ctx, &args, opts...)
			var s LookupDetectorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDetectorResultOutput)
}

type LookupDetectorOutputArgs struct {
	// The ARN of the detector.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupDetectorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDetectorArgs)(nil)).Elem()
}

type LookupDetectorResultOutput struct{ *pulumi.OutputState }

func (LookupDetectorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDetectorResult)(nil)).Elem()
}

func (o LookupDetectorResultOutput) ToLookupDetectorResultOutput() LookupDetectorResultOutput {
	return o
}

func (o LookupDetectorResultOutput) ToLookupDetectorResultOutputWithContext(ctx context.Context) LookupDetectorResultOutput {
	return o
}

// The ARN of the detector.
func (o LookupDetectorResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The models to associate with this detector.
func (o LookupDetectorResultOutput) AssociatedModels() DetectorModelArrayOutput {
	return o.ApplyT(func(v LookupDetectorResult) []DetectorModel { return v.AssociatedModels }).(DetectorModelArrayOutput)
}

// The time when the detector was created.
func (o LookupDetectorResultOutput) CreatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *string { return v.CreatedTime }).(pulumi.StringPtrOutput)
}

// The description of the detector.
func (o LookupDetectorResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The active version ID of the detector
func (o LookupDetectorResultOutput) DetectorVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *string { return v.DetectorVersionId }).(pulumi.StringPtrOutput)
}

// The desired detector version status for the detector
func (o LookupDetectorResultOutput) DetectorVersionStatus() DetectorVersionStatusPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *DetectorVersionStatus { return v.DetectorVersionStatus }).(DetectorVersionStatusPtrOutput)
}

// The event type to associate this detector with.
func (o LookupDetectorResultOutput) EventType() DetectorEventTypePtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *DetectorEventType { return v.EventType }).(DetectorEventTypePtrOutput)
}

// The time when the detector was last updated.
func (o LookupDetectorResultOutput) LastUpdatedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *string { return v.LastUpdatedTime }).(pulumi.StringPtrOutput)
}

func (o LookupDetectorResultOutput) RuleExecutionMode() DetectorRuleExecutionModePtrOutput {
	return o.ApplyT(func(v LookupDetectorResult) *DetectorRuleExecutionMode { return v.RuleExecutionMode }).(DetectorRuleExecutionModePtrOutput)
}

func (o LookupDetectorResultOutput) Rules() DetectorRuleArrayOutput {
	return o.ApplyT(func(v LookupDetectorResult) []DetectorRule { return v.Rules }).(DetectorRuleArrayOutput)
}

// Tags associated with this detector.
func (o LookupDetectorResultOutput) Tags() DetectorTagArrayOutput {
	return o.ApplyT(func(v LookupDetectorResult) []DetectorTag { return v.Tags }).(DetectorTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDetectorResultOutput{})
}
