// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package globalaccelerator

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::GlobalAccelerator::CrossAccountAttachment
func LookupCrossAccountAttachment(ctx *pulumi.Context, args *LookupCrossAccountAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupCrossAccountAttachmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCrossAccountAttachmentResult
	err := ctx.Invoke("aws-native:globalaccelerator:getCrossAccountAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCrossAccountAttachmentArgs struct {
	// The Amazon Resource Name (ARN) of the attachment.
	AttachmentArn string `pulumi:"attachmentArn"`
}

type LookupCrossAccountAttachmentResult struct {
	// The Amazon Resource Name (ARN) of the attachment.
	AttachmentArn *string `pulumi:"attachmentArn"`
	// The Friendly identifier of the attachment.
	Name *string `pulumi:"name"`
	// Principals to share the resources with.
	Principals []string `pulumi:"principals"`
	// Resources shared using the attachment.
	Resources []CrossAccountAttachmentResource `pulumi:"resources"`
	// Add tags for a cross-account attachment.
	//
	// For more information, see [Tagging in AWS Global Accelerator](https://docs.aws.amazon.com/global-accelerator/latest/dg/tagging-in-global-accelerator.html) in the *AWS Global Accelerator Developer Guide* .
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupCrossAccountAttachmentOutput(ctx *pulumi.Context, args LookupCrossAccountAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupCrossAccountAttachmentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCrossAccountAttachmentResultOutput, error) {
			args := v.(LookupCrossAccountAttachmentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:globalaccelerator:getCrossAccountAttachment", args, LookupCrossAccountAttachmentResultOutput{}, options).(LookupCrossAccountAttachmentResultOutput), nil
		}).(LookupCrossAccountAttachmentResultOutput)
}

type LookupCrossAccountAttachmentOutputArgs struct {
	// The Amazon Resource Name (ARN) of the attachment.
	AttachmentArn pulumi.StringInput `pulumi:"attachmentArn"`
}

func (LookupCrossAccountAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCrossAccountAttachmentArgs)(nil)).Elem()
}

type LookupCrossAccountAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupCrossAccountAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCrossAccountAttachmentResult)(nil)).Elem()
}

func (o LookupCrossAccountAttachmentResultOutput) ToLookupCrossAccountAttachmentResultOutput() LookupCrossAccountAttachmentResultOutput {
	return o
}

func (o LookupCrossAccountAttachmentResultOutput) ToLookupCrossAccountAttachmentResultOutputWithContext(ctx context.Context) LookupCrossAccountAttachmentResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the attachment.
func (o LookupCrossAccountAttachmentResultOutput) AttachmentArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCrossAccountAttachmentResult) *string { return v.AttachmentArn }).(pulumi.StringPtrOutput)
}

// The Friendly identifier of the attachment.
func (o LookupCrossAccountAttachmentResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCrossAccountAttachmentResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Principals to share the resources with.
func (o LookupCrossAccountAttachmentResultOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCrossAccountAttachmentResult) []string { return v.Principals }).(pulumi.StringArrayOutput)
}

// Resources shared using the attachment.
func (o LookupCrossAccountAttachmentResultOutput) Resources() CrossAccountAttachmentResourceArrayOutput {
	return o.ApplyT(func(v LookupCrossAccountAttachmentResult) []CrossAccountAttachmentResource { return v.Resources }).(CrossAccountAttachmentResourceArrayOutput)
}

// Add tags for a cross-account attachment.
//
// For more information, see [Tagging in AWS Global Accelerator](https://docs.aws.amazon.com/global-accelerator/latest/dg/tagging-in-global-accelerator.html) in the *AWS Global Accelerator Developer Guide* .
func (o LookupCrossAccountAttachmentResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupCrossAccountAttachmentResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCrossAccountAttachmentResultOutput{})
}
