// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package globalaccelerator

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// IP Address type.
type AcceleratorIpAddressType string

const (
	AcceleratorIpAddressTypeIpv4 = AcceleratorIpAddressType("IPV4")
	AcceleratorIpAddressTypeIpv6 = AcceleratorIpAddressType("IPV6")
)

func (AcceleratorIpAddressType) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorIpAddressType)(nil)).Elem()
}

func (e AcceleratorIpAddressType) ToAcceleratorIpAddressTypeOutput() AcceleratorIpAddressTypeOutput {
	return pulumi.ToOutput(e).(AcceleratorIpAddressTypeOutput)
}

func (e AcceleratorIpAddressType) ToAcceleratorIpAddressTypeOutputWithContext(ctx context.Context) AcceleratorIpAddressTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AcceleratorIpAddressTypeOutput)
}

func (e AcceleratorIpAddressType) ToAcceleratorIpAddressTypePtrOutput() AcceleratorIpAddressTypePtrOutput {
	return e.ToAcceleratorIpAddressTypePtrOutputWithContext(context.Background())
}

func (e AcceleratorIpAddressType) ToAcceleratorIpAddressTypePtrOutputWithContext(ctx context.Context) AcceleratorIpAddressTypePtrOutput {
	return AcceleratorIpAddressType(e).ToAcceleratorIpAddressTypeOutputWithContext(ctx).ToAcceleratorIpAddressTypePtrOutputWithContext(ctx)
}

func (e AcceleratorIpAddressType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AcceleratorIpAddressType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AcceleratorIpAddressType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AcceleratorIpAddressType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AcceleratorIpAddressTypeOutput struct{ *pulumi.OutputState }

func (AcceleratorIpAddressTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AcceleratorIpAddressType)(nil)).Elem()
}

func (o AcceleratorIpAddressTypeOutput) ToAcceleratorIpAddressTypeOutput() AcceleratorIpAddressTypeOutput {
	return o
}

func (o AcceleratorIpAddressTypeOutput) ToAcceleratorIpAddressTypeOutputWithContext(ctx context.Context) AcceleratorIpAddressTypeOutput {
	return o
}

func (o AcceleratorIpAddressTypeOutput) ToAcceleratorIpAddressTypePtrOutput() AcceleratorIpAddressTypePtrOutput {
	return o.ToAcceleratorIpAddressTypePtrOutputWithContext(context.Background())
}

func (o AcceleratorIpAddressTypeOutput) ToAcceleratorIpAddressTypePtrOutputWithContext(ctx context.Context) AcceleratorIpAddressTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AcceleratorIpAddressType) *AcceleratorIpAddressType {
		return &v
	}).(AcceleratorIpAddressTypePtrOutput)
}

func (o AcceleratorIpAddressTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AcceleratorIpAddressTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AcceleratorIpAddressType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AcceleratorIpAddressTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AcceleratorIpAddressTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AcceleratorIpAddressType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AcceleratorIpAddressTypePtrOutput struct{ *pulumi.OutputState }

func (AcceleratorIpAddressTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AcceleratorIpAddressType)(nil)).Elem()
}

func (o AcceleratorIpAddressTypePtrOutput) ToAcceleratorIpAddressTypePtrOutput() AcceleratorIpAddressTypePtrOutput {
	return o
}

func (o AcceleratorIpAddressTypePtrOutput) ToAcceleratorIpAddressTypePtrOutputWithContext(ctx context.Context) AcceleratorIpAddressTypePtrOutput {
	return o
}

func (o AcceleratorIpAddressTypePtrOutput) Elem() AcceleratorIpAddressTypeOutput {
	return o.ApplyT(func(v *AcceleratorIpAddressType) AcceleratorIpAddressType {
		if v != nil {
			return *v
		}
		var ret AcceleratorIpAddressType
		return ret
	}).(AcceleratorIpAddressTypeOutput)
}

func (o AcceleratorIpAddressTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AcceleratorIpAddressTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AcceleratorIpAddressType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AcceleratorIpAddressTypeInput is an input type that accepts AcceleratorIpAddressTypeArgs and AcceleratorIpAddressTypeOutput values.
// You can construct a concrete instance of `AcceleratorIpAddressTypeInput` via:
//
//          AcceleratorIpAddressTypeArgs{...}
type AcceleratorIpAddressTypeInput interface {
	pulumi.Input

	ToAcceleratorIpAddressTypeOutput() AcceleratorIpAddressTypeOutput
	ToAcceleratorIpAddressTypeOutputWithContext(context.Context) AcceleratorIpAddressTypeOutput
}

var acceleratorIpAddressTypePtrType = reflect.TypeOf((**AcceleratorIpAddressType)(nil)).Elem()

type AcceleratorIpAddressTypePtrInput interface {
	pulumi.Input

	ToAcceleratorIpAddressTypePtrOutput() AcceleratorIpAddressTypePtrOutput
	ToAcceleratorIpAddressTypePtrOutputWithContext(context.Context) AcceleratorIpAddressTypePtrOutput
}

type acceleratorIpAddressTypePtr string

func AcceleratorIpAddressTypePtr(v string) AcceleratorIpAddressTypePtrInput {
	return (*acceleratorIpAddressTypePtr)(&v)
}

func (*acceleratorIpAddressTypePtr) ElementType() reflect.Type {
	return acceleratorIpAddressTypePtrType
}

func (in *acceleratorIpAddressTypePtr) ToAcceleratorIpAddressTypePtrOutput() AcceleratorIpAddressTypePtrOutput {
	return pulumi.ToOutput(in).(AcceleratorIpAddressTypePtrOutput)
}

func (in *acceleratorIpAddressTypePtr) ToAcceleratorIpAddressTypePtrOutputWithContext(ctx context.Context) AcceleratorIpAddressTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AcceleratorIpAddressTypePtrOutput)
}

// The protocol that AWS Global Accelerator uses to check the health of endpoints in this endpoint group.
type EndpointGroupHealthCheckProtocol string

const (
	EndpointGroupHealthCheckProtocolTcp   = EndpointGroupHealthCheckProtocol("TCP")
	EndpointGroupHealthCheckProtocolHttp  = EndpointGroupHealthCheckProtocol("HTTP")
	EndpointGroupHealthCheckProtocolHttps = EndpointGroupHealthCheckProtocol("HTTPS")
)

func (EndpointGroupHealthCheckProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGroupHealthCheckProtocol)(nil)).Elem()
}

func (e EndpointGroupHealthCheckProtocol) ToEndpointGroupHealthCheckProtocolOutput() EndpointGroupHealthCheckProtocolOutput {
	return pulumi.ToOutput(e).(EndpointGroupHealthCheckProtocolOutput)
}

func (e EndpointGroupHealthCheckProtocol) ToEndpointGroupHealthCheckProtocolOutputWithContext(ctx context.Context) EndpointGroupHealthCheckProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(EndpointGroupHealthCheckProtocolOutput)
}

func (e EndpointGroupHealthCheckProtocol) ToEndpointGroupHealthCheckProtocolPtrOutput() EndpointGroupHealthCheckProtocolPtrOutput {
	return e.ToEndpointGroupHealthCheckProtocolPtrOutputWithContext(context.Background())
}

func (e EndpointGroupHealthCheckProtocol) ToEndpointGroupHealthCheckProtocolPtrOutputWithContext(ctx context.Context) EndpointGroupHealthCheckProtocolPtrOutput {
	return EndpointGroupHealthCheckProtocol(e).ToEndpointGroupHealthCheckProtocolOutputWithContext(ctx).ToEndpointGroupHealthCheckProtocolPtrOutputWithContext(ctx)
}

func (e EndpointGroupHealthCheckProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointGroupHealthCheckProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e EndpointGroupHealthCheckProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e EndpointGroupHealthCheckProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type EndpointGroupHealthCheckProtocolOutput struct{ *pulumi.OutputState }

func (EndpointGroupHealthCheckProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointGroupHealthCheckProtocol)(nil)).Elem()
}

func (o EndpointGroupHealthCheckProtocolOutput) ToEndpointGroupHealthCheckProtocolOutput() EndpointGroupHealthCheckProtocolOutput {
	return o
}

func (o EndpointGroupHealthCheckProtocolOutput) ToEndpointGroupHealthCheckProtocolOutputWithContext(ctx context.Context) EndpointGroupHealthCheckProtocolOutput {
	return o
}

func (o EndpointGroupHealthCheckProtocolOutput) ToEndpointGroupHealthCheckProtocolPtrOutput() EndpointGroupHealthCheckProtocolPtrOutput {
	return o.ToEndpointGroupHealthCheckProtocolPtrOutputWithContext(context.Background())
}

func (o EndpointGroupHealthCheckProtocolOutput) ToEndpointGroupHealthCheckProtocolPtrOutputWithContext(ctx context.Context) EndpointGroupHealthCheckProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointGroupHealthCheckProtocol) *EndpointGroupHealthCheckProtocol {
		return &v
	}).(EndpointGroupHealthCheckProtocolPtrOutput)
}

func (o EndpointGroupHealthCheckProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o EndpointGroupHealthCheckProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointGroupHealthCheckProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o EndpointGroupHealthCheckProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointGroupHealthCheckProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e EndpointGroupHealthCheckProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type EndpointGroupHealthCheckProtocolPtrOutput struct{ *pulumi.OutputState }

func (EndpointGroupHealthCheckProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointGroupHealthCheckProtocol)(nil)).Elem()
}

func (o EndpointGroupHealthCheckProtocolPtrOutput) ToEndpointGroupHealthCheckProtocolPtrOutput() EndpointGroupHealthCheckProtocolPtrOutput {
	return o
}

func (o EndpointGroupHealthCheckProtocolPtrOutput) ToEndpointGroupHealthCheckProtocolPtrOutputWithContext(ctx context.Context) EndpointGroupHealthCheckProtocolPtrOutput {
	return o
}

func (o EndpointGroupHealthCheckProtocolPtrOutput) Elem() EndpointGroupHealthCheckProtocolOutput {
	return o.ApplyT(func(v *EndpointGroupHealthCheckProtocol) EndpointGroupHealthCheckProtocol {
		if v != nil {
			return *v
		}
		var ret EndpointGroupHealthCheckProtocol
		return ret
	}).(EndpointGroupHealthCheckProtocolOutput)
}

func (o EndpointGroupHealthCheckProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o EndpointGroupHealthCheckProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *EndpointGroupHealthCheckProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// EndpointGroupHealthCheckProtocolInput is an input type that accepts EndpointGroupHealthCheckProtocolArgs and EndpointGroupHealthCheckProtocolOutput values.
// You can construct a concrete instance of `EndpointGroupHealthCheckProtocolInput` via:
//
//          EndpointGroupHealthCheckProtocolArgs{...}
type EndpointGroupHealthCheckProtocolInput interface {
	pulumi.Input

	ToEndpointGroupHealthCheckProtocolOutput() EndpointGroupHealthCheckProtocolOutput
	ToEndpointGroupHealthCheckProtocolOutputWithContext(context.Context) EndpointGroupHealthCheckProtocolOutput
}

var endpointGroupHealthCheckProtocolPtrType = reflect.TypeOf((**EndpointGroupHealthCheckProtocol)(nil)).Elem()

type EndpointGroupHealthCheckProtocolPtrInput interface {
	pulumi.Input

	ToEndpointGroupHealthCheckProtocolPtrOutput() EndpointGroupHealthCheckProtocolPtrOutput
	ToEndpointGroupHealthCheckProtocolPtrOutputWithContext(context.Context) EndpointGroupHealthCheckProtocolPtrOutput
}

type endpointGroupHealthCheckProtocolPtr string

func EndpointGroupHealthCheckProtocolPtr(v string) EndpointGroupHealthCheckProtocolPtrInput {
	return (*endpointGroupHealthCheckProtocolPtr)(&v)
}

func (*endpointGroupHealthCheckProtocolPtr) ElementType() reflect.Type {
	return endpointGroupHealthCheckProtocolPtrType
}

func (in *endpointGroupHealthCheckProtocolPtr) ToEndpointGroupHealthCheckProtocolPtrOutput() EndpointGroupHealthCheckProtocolPtrOutput {
	return pulumi.ToOutput(in).(EndpointGroupHealthCheckProtocolPtrOutput)
}

func (in *endpointGroupHealthCheckProtocolPtr) ToEndpointGroupHealthCheckProtocolPtrOutputWithContext(ctx context.Context) EndpointGroupHealthCheckProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(EndpointGroupHealthCheckProtocolPtrOutput)
}

// Client affinity lets you direct all requests from a user to the same endpoint.
type ListenerClientAffinity string

const (
	ListenerClientAffinityNone     = ListenerClientAffinity("NONE")
	ListenerClientAffinitySourceIp = ListenerClientAffinity("SOURCE_IP")
)

func (ListenerClientAffinity) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerClientAffinity)(nil)).Elem()
}

func (e ListenerClientAffinity) ToListenerClientAffinityOutput() ListenerClientAffinityOutput {
	return pulumi.ToOutput(e).(ListenerClientAffinityOutput)
}

func (e ListenerClientAffinity) ToListenerClientAffinityOutputWithContext(ctx context.Context) ListenerClientAffinityOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ListenerClientAffinityOutput)
}

func (e ListenerClientAffinity) ToListenerClientAffinityPtrOutput() ListenerClientAffinityPtrOutput {
	return e.ToListenerClientAffinityPtrOutputWithContext(context.Background())
}

func (e ListenerClientAffinity) ToListenerClientAffinityPtrOutputWithContext(ctx context.Context) ListenerClientAffinityPtrOutput {
	return ListenerClientAffinity(e).ToListenerClientAffinityOutputWithContext(ctx).ToListenerClientAffinityPtrOutputWithContext(ctx)
}

func (e ListenerClientAffinity) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ListenerClientAffinity) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ListenerClientAffinity) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ListenerClientAffinity) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ListenerClientAffinityOutput struct{ *pulumi.OutputState }

func (ListenerClientAffinityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerClientAffinity)(nil)).Elem()
}

func (o ListenerClientAffinityOutput) ToListenerClientAffinityOutput() ListenerClientAffinityOutput {
	return o
}

func (o ListenerClientAffinityOutput) ToListenerClientAffinityOutputWithContext(ctx context.Context) ListenerClientAffinityOutput {
	return o
}

func (o ListenerClientAffinityOutput) ToListenerClientAffinityPtrOutput() ListenerClientAffinityPtrOutput {
	return o.ToListenerClientAffinityPtrOutputWithContext(context.Background())
}

func (o ListenerClientAffinityOutput) ToListenerClientAffinityPtrOutputWithContext(ctx context.Context) ListenerClientAffinityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerClientAffinity) *ListenerClientAffinity {
		return &v
	}).(ListenerClientAffinityPtrOutput)
}

func (o ListenerClientAffinityOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ListenerClientAffinityOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ListenerClientAffinity) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ListenerClientAffinityOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ListenerClientAffinityOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ListenerClientAffinity) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ListenerClientAffinityPtrOutput struct{ *pulumi.OutputState }

func (ListenerClientAffinityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerClientAffinity)(nil)).Elem()
}

func (o ListenerClientAffinityPtrOutput) ToListenerClientAffinityPtrOutput() ListenerClientAffinityPtrOutput {
	return o
}

func (o ListenerClientAffinityPtrOutput) ToListenerClientAffinityPtrOutputWithContext(ctx context.Context) ListenerClientAffinityPtrOutput {
	return o
}

func (o ListenerClientAffinityPtrOutput) Elem() ListenerClientAffinityOutput {
	return o.ApplyT(func(v *ListenerClientAffinity) ListenerClientAffinity {
		if v != nil {
			return *v
		}
		var ret ListenerClientAffinity
		return ret
	}).(ListenerClientAffinityOutput)
}

func (o ListenerClientAffinityPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ListenerClientAffinityPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ListenerClientAffinity) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ListenerClientAffinityInput is an input type that accepts ListenerClientAffinityArgs and ListenerClientAffinityOutput values.
// You can construct a concrete instance of `ListenerClientAffinityInput` via:
//
//          ListenerClientAffinityArgs{...}
type ListenerClientAffinityInput interface {
	pulumi.Input

	ToListenerClientAffinityOutput() ListenerClientAffinityOutput
	ToListenerClientAffinityOutputWithContext(context.Context) ListenerClientAffinityOutput
}

var listenerClientAffinityPtrType = reflect.TypeOf((**ListenerClientAffinity)(nil)).Elem()

type ListenerClientAffinityPtrInput interface {
	pulumi.Input

	ToListenerClientAffinityPtrOutput() ListenerClientAffinityPtrOutput
	ToListenerClientAffinityPtrOutputWithContext(context.Context) ListenerClientAffinityPtrOutput
}

type listenerClientAffinityPtr string

func ListenerClientAffinityPtr(v string) ListenerClientAffinityPtrInput {
	return (*listenerClientAffinityPtr)(&v)
}

func (*listenerClientAffinityPtr) ElementType() reflect.Type {
	return listenerClientAffinityPtrType
}

func (in *listenerClientAffinityPtr) ToListenerClientAffinityPtrOutput() ListenerClientAffinityPtrOutput {
	return pulumi.ToOutput(in).(ListenerClientAffinityPtrOutput)
}

func (in *listenerClientAffinityPtr) ToListenerClientAffinityPtrOutputWithContext(ctx context.Context) ListenerClientAffinityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ListenerClientAffinityPtrOutput)
}

// The protocol for the listener.
type ListenerProtocol string

const (
	ListenerProtocolTcp = ListenerProtocol("TCP")
	ListenerProtocolUdp = ListenerProtocol("UDP")
)

func (ListenerProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerProtocol)(nil)).Elem()
}

func (e ListenerProtocol) ToListenerProtocolOutput() ListenerProtocolOutput {
	return pulumi.ToOutput(e).(ListenerProtocolOutput)
}

func (e ListenerProtocol) ToListenerProtocolOutputWithContext(ctx context.Context) ListenerProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ListenerProtocolOutput)
}

func (e ListenerProtocol) ToListenerProtocolPtrOutput() ListenerProtocolPtrOutput {
	return e.ToListenerProtocolPtrOutputWithContext(context.Background())
}

func (e ListenerProtocol) ToListenerProtocolPtrOutputWithContext(ctx context.Context) ListenerProtocolPtrOutput {
	return ListenerProtocol(e).ToListenerProtocolOutputWithContext(ctx).ToListenerProtocolPtrOutputWithContext(ctx)
}

func (e ListenerProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ListenerProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ListenerProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ListenerProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ListenerProtocolOutput struct{ *pulumi.OutputState }

func (ListenerProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerProtocol)(nil)).Elem()
}

func (o ListenerProtocolOutput) ToListenerProtocolOutput() ListenerProtocolOutput {
	return o
}

func (o ListenerProtocolOutput) ToListenerProtocolOutputWithContext(ctx context.Context) ListenerProtocolOutput {
	return o
}

func (o ListenerProtocolOutput) ToListenerProtocolPtrOutput() ListenerProtocolPtrOutput {
	return o.ToListenerProtocolPtrOutputWithContext(context.Background())
}

func (o ListenerProtocolOutput) ToListenerProtocolPtrOutputWithContext(ctx context.Context) ListenerProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ListenerProtocol) *ListenerProtocol {
		return &v
	}).(ListenerProtocolPtrOutput)
}

func (o ListenerProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ListenerProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ListenerProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ListenerProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ListenerProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ListenerProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ListenerProtocolPtrOutput struct{ *pulumi.OutputState }

func (ListenerProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerProtocol)(nil)).Elem()
}

func (o ListenerProtocolPtrOutput) ToListenerProtocolPtrOutput() ListenerProtocolPtrOutput {
	return o
}

func (o ListenerProtocolPtrOutput) ToListenerProtocolPtrOutputWithContext(ctx context.Context) ListenerProtocolPtrOutput {
	return o
}

func (o ListenerProtocolPtrOutput) Elem() ListenerProtocolOutput {
	return o.ApplyT(func(v *ListenerProtocol) ListenerProtocol {
		if v != nil {
			return *v
		}
		var ret ListenerProtocol
		return ret
	}).(ListenerProtocolOutput)
}

func (o ListenerProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ListenerProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ListenerProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ListenerProtocolInput is an input type that accepts ListenerProtocolArgs and ListenerProtocolOutput values.
// You can construct a concrete instance of `ListenerProtocolInput` via:
//
//          ListenerProtocolArgs{...}
type ListenerProtocolInput interface {
	pulumi.Input

	ToListenerProtocolOutput() ListenerProtocolOutput
	ToListenerProtocolOutputWithContext(context.Context) ListenerProtocolOutput
}

var listenerProtocolPtrType = reflect.TypeOf((**ListenerProtocol)(nil)).Elem()

type ListenerProtocolPtrInput interface {
	pulumi.Input

	ToListenerProtocolPtrOutput() ListenerProtocolPtrOutput
	ToListenerProtocolPtrOutputWithContext(context.Context) ListenerProtocolPtrOutput
}

type listenerProtocolPtr string

func ListenerProtocolPtr(v string) ListenerProtocolPtrInput {
	return (*listenerProtocolPtr)(&v)
}

func (*listenerProtocolPtr) ElementType() reflect.Type {
	return listenerProtocolPtrType
}

func (in *listenerProtocolPtr) ToListenerProtocolPtrOutput() ListenerProtocolPtrOutput {
	return pulumi.ToOutput(in).(ListenerProtocolPtrOutput)
}

func (in *listenerProtocolPtr) ToListenerProtocolPtrOutputWithContext(ctx context.Context) ListenerProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ListenerProtocolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AcceleratorIpAddressTypeOutput{})
	pulumi.RegisterOutputType(AcceleratorIpAddressTypePtrOutput{})
	pulumi.RegisterOutputType(EndpointGroupHealthCheckProtocolOutput{})
	pulumi.RegisterOutputType(EndpointGroupHealthCheckProtocolPtrOutput{})
	pulumi.RegisterOutputType(ListenerClientAffinityOutput{})
	pulumi.RegisterOutputType(ListenerClientAffinityPtrOutput{})
	pulumi.RegisterOutputType(ListenerProtocolOutput{})
	pulumi.RegisterOutputType(ListenerProtocolPtrOutput{})
}
