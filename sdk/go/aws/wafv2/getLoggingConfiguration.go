// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A WAFv2 Logging Configuration Resource Provider
func LookupLoggingConfiguration(ctx *pulumi.Context, args *LookupLoggingConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupLoggingConfigurationResult, error) {
	var rv LookupLoggingConfigurationResult
	err := ctx.Invoke("aws-native:wafv2:getLoggingConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLoggingConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
	ResourceArn string `pulumi:"resourceArn"`
}

type LookupLoggingConfigurationResult struct {
	// The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
	LogDestinationConfigs []string `pulumi:"logDestinationConfigs"`
	// Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
	LoggingFilter *LoggingFilterProperties `pulumi:"loggingFilter"`
	// Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy configuration. If true, only Firewall Manager can modify or delete the configuration.
	ManagedByFirewallManager *bool `pulumi:"managedByFirewallManager"`
	// The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
	RedactedFields []LoggingConfigurationFieldToMatch `pulumi:"redactedFields"`
}

func LookupLoggingConfigurationOutput(ctx *pulumi.Context, args LookupLoggingConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupLoggingConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLoggingConfigurationResult, error) {
			args := v.(LookupLoggingConfigurationArgs)
			r, err := LookupLoggingConfiguration(ctx, &args, opts...)
			var s LookupLoggingConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLoggingConfigurationResultOutput)
}

type LookupLoggingConfigurationOutputArgs struct {
	// The Amazon Resource Name (ARN) of the web ACL that you want to associate with LogDestinationConfigs.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
}

func (LookupLoggingConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoggingConfigurationArgs)(nil)).Elem()
}

type LookupLoggingConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupLoggingConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoggingConfigurationResult)(nil)).Elem()
}

func (o LookupLoggingConfigurationResultOutput) ToLookupLoggingConfigurationResultOutput() LookupLoggingConfigurationResultOutput {
	return o
}

func (o LookupLoggingConfigurationResultOutput) ToLookupLoggingConfigurationResultOutputWithContext(ctx context.Context) LookupLoggingConfigurationResultOutput {
	return o
}

// The Amazon Resource Names (ARNs) of the logging destinations that you want to associate with the web ACL.
func (o LookupLoggingConfigurationResultOutput) LogDestinationConfigs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLoggingConfigurationResult) []string { return v.LogDestinationConfigs }).(pulumi.StringArrayOutput)
}

// Filtering that specifies which web requests are kept in the logs and which are dropped. You can filter on the rule action and on the web request labels that were applied by matching rules during web ACL evaluation.
func (o LookupLoggingConfigurationResultOutput) LoggingFilter() LoggingFilterPropertiesPtrOutput {
	return o.ApplyT(func(v LookupLoggingConfigurationResult) *LoggingFilterProperties { return v.LoggingFilter }).(LoggingFilterPropertiesPtrOutput)
}

// Indicates whether the logging configuration was created by AWS Firewall Manager, as part of an AWS WAF policy configuration. If true, only Firewall Manager can modify or delete the configuration.
func (o LookupLoggingConfigurationResultOutput) ManagedByFirewallManager() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLoggingConfigurationResult) *bool { return v.ManagedByFirewallManager }).(pulumi.BoolPtrOutput)
}

// The parts of the request that you want to keep out of the logs. For example, if you redact the HEADER field, the HEADER field in the firehose will be xxx.
func (o LookupLoggingConfigurationResultOutput) RedactedFields() LoggingConfigurationFieldToMatchArrayOutput {
	return o.ApplyT(func(v LookupLoggingConfigurationResult) []LoggingConfigurationFieldToMatch { return v.RedactedFields }).(LoggingConfigurationFieldToMatchArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoggingConfigurationResultOutput{})
}
