// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Type of addresses in the IPSet, use IPV4 for IPV4 IP addresses, IPV6 for IPV6 address.
type IpSetIpAddressVersion string

const (
	IpSetIpAddressVersionIpv4 = IpSetIpAddressVersion("IPV4")
	IpSetIpAddressVersionIpv6 = IpSetIpAddressVersion("IPV6")
)

func (IpSetIpAddressVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetIpAddressVersion)(nil)).Elem()
}

func (e IpSetIpAddressVersion) ToIpSetIpAddressVersionOutput() IpSetIpAddressVersionOutput {
	return pulumi.ToOutput(e).(IpSetIpAddressVersionOutput)
}

func (e IpSetIpAddressVersion) ToIpSetIpAddressVersionOutputWithContext(ctx context.Context) IpSetIpAddressVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IpSetIpAddressVersionOutput)
}

func (e IpSetIpAddressVersion) ToIpSetIpAddressVersionPtrOutput() IpSetIpAddressVersionPtrOutput {
	return e.ToIpSetIpAddressVersionPtrOutputWithContext(context.Background())
}

func (e IpSetIpAddressVersion) ToIpSetIpAddressVersionPtrOutputWithContext(ctx context.Context) IpSetIpAddressVersionPtrOutput {
	return IpSetIpAddressVersion(e).ToIpSetIpAddressVersionOutputWithContext(ctx).ToIpSetIpAddressVersionPtrOutputWithContext(ctx)
}

func (e IpSetIpAddressVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpSetIpAddressVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpSetIpAddressVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IpSetIpAddressVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IpSetIpAddressVersionOutput struct{ *pulumi.OutputState }

func (IpSetIpAddressVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetIpAddressVersion)(nil)).Elem()
}

func (o IpSetIpAddressVersionOutput) ToIpSetIpAddressVersionOutput() IpSetIpAddressVersionOutput {
	return o
}

func (o IpSetIpAddressVersionOutput) ToIpSetIpAddressVersionOutputWithContext(ctx context.Context) IpSetIpAddressVersionOutput {
	return o
}

func (o IpSetIpAddressVersionOutput) ToIpSetIpAddressVersionPtrOutput() IpSetIpAddressVersionPtrOutput {
	return o.ToIpSetIpAddressVersionPtrOutputWithContext(context.Background())
}

func (o IpSetIpAddressVersionOutput) ToIpSetIpAddressVersionPtrOutputWithContext(ctx context.Context) IpSetIpAddressVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IpSetIpAddressVersion) *IpSetIpAddressVersion {
		return &v
	}).(IpSetIpAddressVersionPtrOutput)
}

func (o IpSetIpAddressVersionOutput) ToOutput(ctx context.Context) pulumix.Output[IpSetIpAddressVersion] {
	return pulumix.Output[IpSetIpAddressVersion]{
		OutputState: o.OutputState,
	}
}

func (o IpSetIpAddressVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IpSetIpAddressVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpSetIpAddressVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IpSetIpAddressVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpSetIpAddressVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpSetIpAddressVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IpSetIpAddressVersionPtrOutput struct{ *pulumi.OutputState }

func (IpSetIpAddressVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpSetIpAddressVersion)(nil)).Elem()
}

func (o IpSetIpAddressVersionPtrOutput) ToIpSetIpAddressVersionPtrOutput() IpSetIpAddressVersionPtrOutput {
	return o
}

func (o IpSetIpAddressVersionPtrOutput) ToIpSetIpAddressVersionPtrOutputWithContext(ctx context.Context) IpSetIpAddressVersionPtrOutput {
	return o
}

func (o IpSetIpAddressVersionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IpSetIpAddressVersion] {
	return pulumix.Output[*IpSetIpAddressVersion]{
		OutputState: o.OutputState,
	}
}

func (o IpSetIpAddressVersionPtrOutput) Elem() IpSetIpAddressVersionOutput {
	return o.ApplyT(func(v *IpSetIpAddressVersion) IpSetIpAddressVersion {
		if v != nil {
			return *v
		}
		var ret IpSetIpAddressVersion
		return ret
	}).(IpSetIpAddressVersionOutput)
}

func (o IpSetIpAddressVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpSetIpAddressVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IpSetIpAddressVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IpSetIpAddressVersionInput is an input type that accepts IpSetIpAddressVersionArgs and IpSetIpAddressVersionOutput values.
// You can construct a concrete instance of `IpSetIpAddressVersionInput` via:
//
//	IpSetIpAddressVersionArgs{...}
type IpSetIpAddressVersionInput interface {
	pulumi.Input

	ToIpSetIpAddressVersionOutput() IpSetIpAddressVersionOutput
	ToIpSetIpAddressVersionOutputWithContext(context.Context) IpSetIpAddressVersionOutput
}

var ipSetIpAddressVersionPtrType = reflect.TypeOf((**IpSetIpAddressVersion)(nil)).Elem()

type IpSetIpAddressVersionPtrInput interface {
	pulumi.Input

	ToIpSetIpAddressVersionPtrOutput() IpSetIpAddressVersionPtrOutput
	ToIpSetIpAddressVersionPtrOutputWithContext(context.Context) IpSetIpAddressVersionPtrOutput
}

type ipSetIpAddressVersionPtr string

func IpSetIpAddressVersionPtr(v string) IpSetIpAddressVersionPtrInput {
	return (*ipSetIpAddressVersionPtr)(&v)
}

func (*ipSetIpAddressVersionPtr) ElementType() reflect.Type {
	return ipSetIpAddressVersionPtrType
}

func (in *ipSetIpAddressVersionPtr) ToIpSetIpAddressVersionPtrOutput() IpSetIpAddressVersionPtrOutput {
	return pulumi.ToOutput(in).(IpSetIpAddressVersionPtrOutput)
}

func (in *ipSetIpAddressVersionPtr) ToIpSetIpAddressVersionPtrOutputWithContext(ctx context.Context) IpSetIpAddressVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IpSetIpAddressVersionPtrOutput)
}

func (in *ipSetIpAddressVersionPtr) ToOutput(ctx context.Context) pulumix.Output[*IpSetIpAddressVersion] {
	return pulumix.Output[*IpSetIpAddressVersion]{
		OutputState: in.ToIpSetIpAddressVersionPtrOutputWithContext(ctx).OutputState,
	}
}

// Use CLOUDFRONT for CloudFront IPSet, use REGIONAL for Application Load Balancer and API Gateway.
type IpSetScope string

const (
	IpSetScopeCloudfront = IpSetScope("CLOUDFRONT")
	IpSetScopeRegional   = IpSetScope("REGIONAL")
)

func (IpSetScope) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetScope)(nil)).Elem()
}

func (e IpSetScope) ToIpSetScopeOutput() IpSetScopeOutput {
	return pulumi.ToOutput(e).(IpSetScopeOutput)
}

func (e IpSetScope) ToIpSetScopeOutputWithContext(ctx context.Context) IpSetScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IpSetScopeOutput)
}

func (e IpSetScope) ToIpSetScopePtrOutput() IpSetScopePtrOutput {
	return e.ToIpSetScopePtrOutputWithContext(context.Background())
}

func (e IpSetScope) ToIpSetScopePtrOutputWithContext(ctx context.Context) IpSetScopePtrOutput {
	return IpSetScope(e).ToIpSetScopeOutputWithContext(ctx).ToIpSetScopePtrOutputWithContext(ctx)
}

func (e IpSetScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpSetScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IpSetScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IpSetScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IpSetScopeOutput struct{ *pulumi.OutputState }

func (IpSetScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpSetScope)(nil)).Elem()
}

func (o IpSetScopeOutput) ToIpSetScopeOutput() IpSetScopeOutput {
	return o
}

func (o IpSetScopeOutput) ToIpSetScopeOutputWithContext(ctx context.Context) IpSetScopeOutput {
	return o
}

func (o IpSetScopeOutput) ToIpSetScopePtrOutput() IpSetScopePtrOutput {
	return o.ToIpSetScopePtrOutputWithContext(context.Background())
}

func (o IpSetScopeOutput) ToIpSetScopePtrOutputWithContext(ctx context.Context) IpSetScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IpSetScope) *IpSetScope {
		return &v
	}).(IpSetScopePtrOutput)
}

func (o IpSetScopeOutput) ToOutput(ctx context.Context) pulumix.Output[IpSetScope] {
	return pulumix.Output[IpSetScope]{
		OutputState: o.OutputState,
	}
}

func (o IpSetScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IpSetScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpSetScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IpSetScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpSetScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IpSetScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IpSetScopePtrOutput struct{ *pulumi.OutputState }

func (IpSetScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpSetScope)(nil)).Elem()
}

func (o IpSetScopePtrOutput) ToIpSetScopePtrOutput() IpSetScopePtrOutput {
	return o
}

func (o IpSetScopePtrOutput) ToIpSetScopePtrOutputWithContext(ctx context.Context) IpSetScopePtrOutput {
	return o
}

func (o IpSetScopePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*IpSetScope] {
	return pulumix.Output[*IpSetScope]{
		OutputState: o.OutputState,
	}
}

func (o IpSetScopePtrOutput) Elem() IpSetScopeOutput {
	return o.ApplyT(func(v *IpSetScope) IpSetScope {
		if v != nil {
			return *v
		}
		var ret IpSetScope
		return ret
	}).(IpSetScopeOutput)
}

func (o IpSetScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IpSetScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IpSetScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IpSetScopeInput is an input type that accepts IpSetScopeArgs and IpSetScopeOutput values.
// You can construct a concrete instance of `IpSetScopeInput` via:
//
//	IpSetScopeArgs{...}
type IpSetScopeInput interface {
	pulumi.Input

	ToIpSetScopeOutput() IpSetScopeOutput
	ToIpSetScopeOutputWithContext(context.Context) IpSetScopeOutput
}

var ipSetScopePtrType = reflect.TypeOf((**IpSetScope)(nil)).Elem()

type IpSetScopePtrInput interface {
	pulumi.Input

	ToIpSetScopePtrOutput() IpSetScopePtrOutput
	ToIpSetScopePtrOutputWithContext(context.Context) IpSetScopePtrOutput
}

type ipSetScopePtr string

func IpSetScopePtr(v string) IpSetScopePtrInput {
	return (*ipSetScopePtr)(&v)
}

func (*ipSetScopePtr) ElementType() reflect.Type {
	return ipSetScopePtrType
}

func (in *ipSetScopePtr) ToIpSetScopePtrOutput() IpSetScopePtrOutput {
	return pulumi.ToOutput(in).(IpSetScopePtrOutput)
}

func (in *ipSetScopePtr) ToIpSetScopePtrOutputWithContext(ctx context.Context) IpSetScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IpSetScopePtrOutput)
}

func (in *ipSetScopePtr) ToOutput(ctx context.Context) pulumix.Output[*IpSetScope] {
	return pulumix.Output[*IpSetScope]{
		OutputState: in.ToIpSetScopePtrOutputWithContext(ctx).OutputState,
	}
}

// Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
type LoggingConfigurationConditionActionConditionPropertiesAction string

const (
	LoggingConfigurationConditionActionConditionPropertiesActionAllow           = LoggingConfigurationConditionActionConditionPropertiesAction("ALLOW")
	LoggingConfigurationConditionActionConditionPropertiesActionBlock           = LoggingConfigurationConditionActionConditionPropertiesAction("BLOCK")
	LoggingConfigurationConditionActionConditionPropertiesActionCount           = LoggingConfigurationConditionActionConditionPropertiesAction("COUNT")
	LoggingConfigurationConditionActionConditionPropertiesActionCaptcha         = LoggingConfigurationConditionActionConditionPropertiesAction("CAPTCHA")
	LoggingConfigurationConditionActionConditionPropertiesActionChallenge       = LoggingConfigurationConditionActionConditionPropertiesAction("CHALLENGE")
	LoggingConfigurationConditionActionConditionPropertiesActionExcludedAsCount = LoggingConfigurationConditionActionConditionPropertiesAction("EXCLUDED_AS_COUNT")
)

func (LoggingConfigurationConditionActionConditionPropertiesAction) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationConditionActionConditionPropertiesAction)(nil)).Elem()
}

func (e LoggingConfigurationConditionActionConditionPropertiesAction) ToLoggingConfigurationConditionActionConditionPropertiesActionOutput() LoggingConfigurationConditionActionConditionPropertiesActionOutput {
	return pulumi.ToOutput(e).(LoggingConfigurationConditionActionConditionPropertiesActionOutput)
}

func (e LoggingConfigurationConditionActionConditionPropertiesAction) ToLoggingConfigurationConditionActionConditionPropertiesActionOutputWithContext(ctx context.Context) LoggingConfigurationConditionActionConditionPropertiesActionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingConfigurationConditionActionConditionPropertiesActionOutput)
}

func (e LoggingConfigurationConditionActionConditionPropertiesAction) ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutput() LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput {
	return e.ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationConditionActionConditionPropertiesAction) ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutputWithContext(ctx context.Context) LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput {
	return LoggingConfigurationConditionActionConditionPropertiesAction(e).ToLoggingConfigurationConditionActionConditionPropertiesActionOutputWithContext(ctx).ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutputWithContext(ctx)
}

func (e LoggingConfigurationConditionActionConditionPropertiesAction) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationConditionActionConditionPropertiesAction) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationConditionActionConditionPropertiesAction) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationConditionActionConditionPropertiesAction) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingConfigurationConditionActionConditionPropertiesActionOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationConditionActionConditionPropertiesActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationConditionActionConditionPropertiesAction)(nil)).Elem()
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionOutput) ToLoggingConfigurationConditionActionConditionPropertiesActionOutput() LoggingConfigurationConditionActionConditionPropertiesActionOutput {
	return o
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionOutput) ToLoggingConfigurationConditionActionConditionPropertiesActionOutputWithContext(ctx context.Context) LoggingConfigurationConditionActionConditionPropertiesActionOutput {
	return o
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionOutput) ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutput() LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput {
	return o.ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionOutput) ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutputWithContext(ctx context.Context) LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationConditionActionConditionPropertiesAction) *LoggingConfigurationConditionActionConditionPropertiesAction {
		return &v
	}).(LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput)
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionOutput) ToOutput(ctx context.Context) pulumix.Output[LoggingConfigurationConditionActionConditionPropertiesAction] {
	return pulumix.Output[LoggingConfigurationConditionActionConditionPropertiesAction]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationConditionActionConditionPropertiesAction) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationConditionActionConditionPropertiesAction) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationConditionActionConditionPropertiesAction)(nil)).Elem()
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput) ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutput() LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput {
	return o
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput) ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutputWithContext(ctx context.Context) LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput {
	return o
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationConditionActionConditionPropertiesAction] {
	return pulumix.Output[*LoggingConfigurationConditionActionConditionPropertiesAction]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput) Elem() LoggingConfigurationConditionActionConditionPropertiesActionOutput {
	return o.ApplyT(func(v *LoggingConfigurationConditionActionConditionPropertiesAction) LoggingConfigurationConditionActionConditionPropertiesAction {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationConditionActionConditionPropertiesAction
		return ret
	}).(LoggingConfigurationConditionActionConditionPropertiesActionOutput)
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingConfigurationConditionActionConditionPropertiesAction) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingConfigurationConditionActionConditionPropertiesActionInput is an input type that accepts LoggingConfigurationConditionActionConditionPropertiesActionArgs and LoggingConfigurationConditionActionConditionPropertiesActionOutput values.
// You can construct a concrete instance of `LoggingConfigurationConditionActionConditionPropertiesActionInput` via:
//
//	LoggingConfigurationConditionActionConditionPropertiesActionArgs{...}
type LoggingConfigurationConditionActionConditionPropertiesActionInput interface {
	pulumi.Input

	ToLoggingConfigurationConditionActionConditionPropertiesActionOutput() LoggingConfigurationConditionActionConditionPropertiesActionOutput
	ToLoggingConfigurationConditionActionConditionPropertiesActionOutputWithContext(context.Context) LoggingConfigurationConditionActionConditionPropertiesActionOutput
}

var loggingConfigurationConditionActionConditionPropertiesActionPtrType = reflect.TypeOf((**LoggingConfigurationConditionActionConditionPropertiesAction)(nil)).Elem()

type LoggingConfigurationConditionActionConditionPropertiesActionPtrInput interface {
	pulumi.Input

	ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutput() LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput
	ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutputWithContext(context.Context) LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput
}

type loggingConfigurationConditionActionConditionPropertiesActionPtr string

func LoggingConfigurationConditionActionConditionPropertiesActionPtr(v string) LoggingConfigurationConditionActionConditionPropertiesActionPtrInput {
	return (*loggingConfigurationConditionActionConditionPropertiesActionPtr)(&v)
}

func (*loggingConfigurationConditionActionConditionPropertiesActionPtr) ElementType() reflect.Type {
	return loggingConfigurationConditionActionConditionPropertiesActionPtrType
}

func (in *loggingConfigurationConditionActionConditionPropertiesActionPtr) ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutput() LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput {
	return pulumi.ToOutput(in).(LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput)
}

func (in *loggingConfigurationConditionActionConditionPropertiesActionPtr) ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutputWithContext(ctx context.Context) LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput)
}

func (in *loggingConfigurationConditionActionConditionPropertiesActionPtr) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationConditionActionConditionPropertiesAction] {
	return pulumix.Output[*LoggingConfigurationConditionActionConditionPropertiesAction]{
		OutputState: in.ToLoggingConfigurationConditionActionConditionPropertiesActionPtrOutputWithContext(ctx).OutputState,
	}
}

// What AWS WAF should do if it fails to completely parse the JSON body.
type LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior string

const (
	LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorMatch            = LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior("MATCH")
	LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorNoMatch          = LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior("NO_MATCH")
	LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorEvaluateAsString = LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior("EVALUATE_AS_STRING")
)

func (LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior)(nil)).Elem()
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput {
	return pulumi.ToOutput(e).(LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput)
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput)
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput {
	return e.ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput {
	return LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior(e).ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutputWithContext(ctx).ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutputWithContext(ctx)
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior)(nil)).Elem()
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput {
	return o
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput {
	return o
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput {
	return o.ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) *LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior {
		return &v
	}).(LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput)
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput) ToOutput(ctx context.Context) pulumix.Output[LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior] {
	return pulumix.Output[LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior)(nil)).Elem()
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput {
	return o
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput {
	return o
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior] {
	return pulumix.Output[*LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput) Elem() LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput {
	return o.ApplyT(func(v *LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior
		return ret
	}).(LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput)
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorInput is an input type that accepts LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorArgs and LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput values.
// You can construct a concrete instance of `LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorInput` via:
//
//	LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorArgs{...}
type LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorInput interface {
	pulumi.Input

	ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput
	ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutputWithContext(context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput
}

var loggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrType = reflect.TypeOf((**LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior)(nil)).Elem()

type LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrInput interface {
	pulumi.Input

	ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput
	ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutputWithContext(context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput
}

type loggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtr string

func LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtr(v string) LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrInput {
	return (*loggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtr)(&v)
}

func (*loggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtr) ElementType() reflect.Type {
	return loggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrType
}

func (in *loggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtr) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput {
	return pulumi.ToOutput(in).(LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput)
}

func (in *loggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtr) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput)
}

func (in *loggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtr) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior] {
	return pulumix.Output[*LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior]{
		OutputState: in.ToLoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutputWithContext(ctx).OutputState,
	}
}

// The parts of the JSON to match against using the MatchPattern. If you specify All, AWS WAF matches against keys and values.
type LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope string

const (
	LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeAll   = LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope("ALL")
	LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeKey   = LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope("KEY")
	LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeValue = LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope("VALUE")
)

func (LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope)(nil)).Elem()
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput {
	return pulumi.ToOutput(e).(LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput)
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput)
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput {
	return e.ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput {
	return LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope(e).ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutputWithContext(ctx).ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutputWithContext(ctx)
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope)(nil)).Elem()
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput {
	return o
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput {
	return o
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput {
	return o.ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) *LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope {
		return &v
	}).(LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput)
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput) ToOutput(ctx context.Context) pulumix.Output[LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope] {
	return pulumix.Output[LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope)(nil)).Elem()
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput {
	return o
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput {
	return o
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope] {
	return pulumix.Output[*LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput) Elem() LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput {
	return o.ApplyT(func(v *LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope
		return ret
	}).(LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput)
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeInput is an input type that accepts LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeArgs and LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput values.
// You can construct a concrete instance of `LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeInput` via:
//
//	LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeArgs{...}
type LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeInput interface {
	pulumi.Input

	ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput
	ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutputWithContext(context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput
}

var loggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrType = reflect.TypeOf((**LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope)(nil)).Elem()

type LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrInput interface {
	pulumi.Input

	ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput
	ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutputWithContext(context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput
}

type loggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtr string

func LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtr(v string) LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrInput {
	return (*loggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtr)(&v)
}

func (*loggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtr) ElementType() reflect.Type {
	return loggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrType
}

func (in *loggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtr) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput() LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput {
	return pulumi.ToOutput(in).(LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput)
}

func (in *loggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtr) ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput)
}

func (in *loggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtr) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope] {
	return pulumix.Output[*LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope]{
		OutputState: in.ToLoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutputWithContext(ctx).OutputState,
	}
}

// How to handle logs that satisfy the filter's conditions and requirement.
type LoggingConfigurationFilterBehavior string

const (
	LoggingConfigurationFilterBehaviorKeep = LoggingConfigurationFilterBehavior("KEEP")
	LoggingConfigurationFilterBehaviorDrop = LoggingConfigurationFilterBehavior("DROP")
)

func (LoggingConfigurationFilterBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationFilterBehavior)(nil)).Elem()
}

func (e LoggingConfigurationFilterBehavior) ToLoggingConfigurationFilterBehaviorOutput() LoggingConfigurationFilterBehaviorOutput {
	return pulumi.ToOutput(e).(LoggingConfigurationFilterBehaviorOutput)
}

func (e LoggingConfigurationFilterBehavior) ToLoggingConfigurationFilterBehaviorOutputWithContext(ctx context.Context) LoggingConfigurationFilterBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingConfigurationFilterBehaviorOutput)
}

func (e LoggingConfigurationFilterBehavior) ToLoggingConfigurationFilterBehaviorPtrOutput() LoggingConfigurationFilterBehaviorPtrOutput {
	return e.ToLoggingConfigurationFilterBehaviorPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationFilterBehavior) ToLoggingConfigurationFilterBehaviorPtrOutputWithContext(ctx context.Context) LoggingConfigurationFilterBehaviorPtrOutput {
	return LoggingConfigurationFilterBehavior(e).ToLoggingConfigurationFilterBehaviorOutputWithContext(ctx).ToLoggingConfigurationFilterBehaviorPtrOutputWithContext(ctx)
}

func (e LoggingConfigurationFilterBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationFilterBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationFilterBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationFilterBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingConfigurationFilterBehaviorOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationFilterBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationFilterBehavior)(nil)).Elem()
}

func (o LoggingConfigurationFilterBehaviorOutput) ToLoggingConfigurationFilterBehaviorOutput() LoggingConfigurationFilterBehaviorOutput {
	return o
}

func (o LoggingConfigurationFilterBehaviorOutput) ToLoggingConfigurationFilterBehaviorOutputWithContext(ctx context.Context) LoggingConfigurationFilterBehaviorOutput {
	return o
}

func (o LoggingConfigurationFilterBehaviorOutput) ToLoggingConfigurationFilterBehaviorPtrOutput() LoggingConfigurationFilterBehaviorPtrOutput {
	return o.ToLoggingConfigurationFilterBehaviorPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationFilterBehaviorOutput) ToLoggingConfigurationFilterBehaviorPtrOutputWithContext(ctx context.Context) LoggingConfigurationFilterBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationFilterBehavior) *LoggingConfigurationFilterBehavior {
		return &v
	}).(LoggingConfigurationFilterBehaviorPtrOutput)
}

func (o LoggingConfigurationFilterBehaviorOutput) ToOutput(ctx context.Context) pulumix.Output[LoggingConfigurationFilterBehavior] {
	return pulumix.Output[LoggingConfigurationFilterBehavior]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationFilterBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingConfigurationFilterBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationFilterBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingConfigurationFilterBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationFilterBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationFilterBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingConfigurationFilterBehaviorPtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationFilterBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationFilterBehavior)(nil)).Elem()
}

func (o LoggingConfigurationFilterBehaviorPtrOutput) ToLoggingConfigurationFilterBehaviorPtrOutput() LoggingConfigurationFilterBehaviorPtrOutput {
	return o
}

func (o LoggingConfigurationFilterBehaviorPtrOutput) ToLoggingConfigurationFilterBehaviorPtrOutputWithContext(ctx context.Context) LoggingConfigurationFilterBehaviorPtrOutput {
	return o
}

func (o LoggingConfigurationFilterBehaviorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationFilterBehavior] {
	return pulumix.Output[*LoggingConfigurationFilterBehavior]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationFilterBehaviorPtrOutput) Elem() LoggingConfigurationFilterBehaviorOutput {
	return o.ApplyT(func(v *LoggingConfigurationFilterBehavior) LoggingConfigurationFilterBehavior {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationFilterBehavior
		return ret
	}).(LoggingConfigurationFilterBehaviorOutput)
}

func (o LoggingConfigurationFilterBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationFilterBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingConfigurationFilterBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingConfigurationFilterBehaviorInput is an input type that accepts LoggingConfigurationFilterBehaviorArgs and LoggingConfigurationFilterBehaviorOutput values.
// You can construct a concrete instance of `LoggingConfigurationFilterBehaviorInput` via:
//
//	LoggingConfigurationFilterBehaviorArgs{...}
type LoggingConfigurationFilterBehaviorInput interface {
	pulumi.Input

	ToLoggingConfigurationFilterBehaviorOutput() LoggingConfigurationFilterBehaviorOutput
	ToLoggingConfigurationFilterBehaviorOutputWithContext(context.Context) LoggingConfigurationFilterBehaviorOutput
}

var loggingConfigurationFilterBehaviorPtrType = reflect.TypeOf((**LoggingConfigurationFilterBehavior)(nil)).Elem()

type LoggingConfigurationFilterBehaviorPtrInput interface {
	pulumi.Input

	ToLoggingConfigurationFilterBehaviorPtrOutput() LoggingConfigurationFilterBehaviorPtrOutput
	ToLoggingConfigurationFilterBehaviorPtrOutputWithContext(context.Context) LoggingConfigurationFilterBehaviorPtrOutput
}

type loggingConfigurationFilterBehaviorPtr string

func LoggingConfigurationFilterBehaviorPtr(v string) LoggingConfigurationFilterBehaviorPtrInput {
	return (*loggingConfigurationFilterBehaviorPtr)(&v)
}

func (*loggingConfigurationFilterBehaviorPtr) ElementType() reflect.Type {
	return loggingConfigurationFilterBehaviorPtrType
}

func (in *loggingConfigurationFilterBehaviorPtr) ToLoggingConfigurationFilterBehaviorPtrOutput() LoggingConfigurationFilterBehaviorPtrOutput {
	return pulumi.ToOutput(in).(LoggingConfigurationFilterBehaviorPtrOutput)
}

func (in *loggingConfigurationFilterBehaviorPtr) ToLoggingConfigurationFilterBehaviorPtrOutputWithContext(ctx context.Context) LoggingConfigurationFilterBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingConfigurationFilterBehaviorPtrOutput)
}

func (in *loggingConfigurationFilterBehaviorPtr) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationFilterBehavior] {
	return pulumix.Output[*LoggingConfigurationFilterBehavior]{
		OutputState: in.ToLoggingConfigurationFilterBehaviorPtrOutputWithContext(ctx).OutputState,
	}
}

// Logic to apply to the filtering conditions. You can specify that, in order to satisfy the filter, a log must match all conditions or must match at least one condition.
type LoggingConfigurationFilterRequirement string

const (
	LoggingConfigurationFilterRequirementMeetsAll = LoggingConfigurationFilterRequirement("MEETS_ALL")
	LoggingConfigurationFilterRequirementMeetsAny = LoggingConfigurationFilterRequirement("MEETS_ANY")
)

func (LoggingConfigurationFilterRequirement) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationFilterRequirement)(nil)).Elem()
}

func (e LoggingConfigurationFilterRequirement) ToLoggingConfigurationFilterRequirementOutput() LoggingConfigurationFilterRequirementOutput {
	return pulumi.ToOutput(e).(LoggingConfigurationFilterRequirementOutput)
}

func (e LoggingConfigurationFilterRequirement) ToLoggingConfigurationFilterRequirementOutputWithContext(ctx context.Context) LoggingConfigurationFilterRequirementOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingConfigurationFilterRequirementOutput)
}

func (e LoggingConfigurationFilterRequirement) ToLoggingConfigurationFilterRequirementPtrOutput() LoggingConfigurationFilterRequirementPtrOutput {
	return e.ToLoggingConfigurationFilterRequirementPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationFilterRequirement) ToLoggingConfigurationFilterRequirementPtrOutputWithContext(ctx context.Context) LoggingConfigurationFilterRequirementPtrOutput {
	return LoggingConfigurationFilterRequirement(e).ToLoggingConfigurationFilterRequirementOutputWithContext(ctx).ToLoggingConfigurationFilterRequirementPtrOutputWithContext(ctx)
}

func (e LoggingConfigurationFilterRequirement) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationFilterRequirement) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationFilterRequirement) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationFilterRequirement) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingConfigurationFilterRequirementOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationFilterRequirementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationFilterRequirement)(nil)).Elem()
}

func (o LoggingConfigurationFilterRequirementOutput) ToLoggingConfigurationFilterRequirementOutput() LoggingConfigurationFilterRequirementOutput {
	return o
}

func (o LoggingConfigurationFilterRequirementOutput) ToLoggingConfigurationFilterRequirementOutputWithContext(ctx context.Context) LoggingConfigurationFilterRequirementOutput {
	return o
}

func (o LoggingConfigurationFilterRequirementOutput) ToLoggingConfigurationFilterRequirementPtrOutput() LoggingConfigurationFilterRequirementPtrOutput {
	return o.ToLoggingConfigurationFilterRequirementPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationFilterRequirementOutput) ToLoggingConfigurationFilterRequirementPtrOutputWithContext(ctx context.Context) LoggingConfigurationFilterRequirementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationFilterRequirement) *LoggingConfigurationFilterRequirement {
		return &v
	}).(LoggingConfigurationFilterRequirementPtrOutput)
}

func (o LoggingConfigurationFilterRequirementOutput) ToOutput(ctx context.Context) pulumix.Output[LoggingConfigurationFilterRequirement] {
	return pulumix.Output[LoggingConfigurationFilterRequirement]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationFilterRequirementOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingConfigurationFilterRequirementOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationFilterRequirement) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingConfigurationFilterRequirementOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationFilterRequirementOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationFilterRequirement) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingConfigurationFilterRequirementPtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationFilterRequirementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationFilterRequirement)(nil)).Elem()
}

func (o LoggingConfigurationFilterRequirementPtrOutput) ToLoggingConfigurationFilterRequirementPtrOutput() LoggingConfigurationFilterRequirementPtrOutput {
	return o
}

func (o LoggingConfigurationFilterRequirementPtrOutput) ToLoggingConfigurationFilterRequirementPtrOutputWithContext(ctx context.Context) LoggingConfigurationFilterRequirementPtrOutput {
	return o
}

func (o LoggingConfigurationFilterRequirementPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationFilterRequirement] {
	return pulumix.Output[*LoggingConfigurationFilterRequirement]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationFilterRequirementPtrOutput) Elem() LoggingConfigurationFilterRequirementOutput {
	return o.ApplyT(func(v *LoggingConfigurationFilterRequirement) LoggingConfigurationFilterRequirement {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationFilterRequirement
		return ret
	}).(LoggingConfigurationFilterRequirementOutput)
}

func (o LoggingConfigurationFilterRequirementPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationFilterRequirementPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingConfigurationFilterRequirement) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingConfigurationFilterRequirementInput is an input type that accepts LoggingConfigurationFilterRequirementArgs and LoggingConfigurationFilterRequirementOutput values.
// You can construct a concrete instance of `LoggingConfigurationFilterRequirementInput` via:
//
//	LoggingConfigurationFilterRequirementArgs{...}
type LoggingConfigurationFilterRequirementInput interface {
	pulumi.Input

	ToLoggingConfigurationFilterRequirementOutput() LoggingConfigurationFilterRequirementOutput
	ToLoggingConfigurationFilterRequirementOutputWithContext(context.Context) LoggingConfigurationFilterRequirementOutput
}

var loggingConfigurationFilterRequirementPtrType = reflect.TypeOf((**LoggingConfigurationFilterRequirement)(nil)).Elem()

type LoggingConfigurationFilterRequirementPtrInput interface {
	pulumi.Input

	ToLoggingConfigurationFilterRequirementPtrOutput() LoggingConfigurationFilterRequirementPtrOutput
	ToLoggingConfigurationFilterRequirementPtrOutputWithContext(context.Context) LoggingConfigurationFilterRequirementPtrOutput
}

type loggingConfigurationFilterRequirementPtr string

func LoggingConfigurationFilterRequirementPtr(v string) LoggingConfigurationFilterRequirementPtrInput {
	return (*loggingConfigurationFilterRequirementPtr)(&v)
}

func (*loggingConfigurationFilterRequirementPtr) ElementType() reflect.Type {
	return loggingConfigurationFilterRequirementPtrType
}

func (in *loggingConfigurationFilterRequirementPtr) ToLoggingConfigurationFilterRequirementPtrOutput() LoggingConfigurationFilterRequirementPtrOutput {
	return pulumi.ToOutput(in).(LoggingConfigurationFilterRequirementPtrOutput)
}

func (in *loggingConfigurationFilterRequirementPtr) ToLoggingConfigurationFilterRequirementPtrOutputWithContext(ctx context.Context) LoggingConfigurationFilterRequirementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingConfigurationFilterRequirementPtrOutput)
}

func (in *loggingConfigurationFilterRequirementPtr) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationFilterRequirement] {
	return pulumix.Output[*LoggingConfigurationFilterRequirement]{
		OutputState: in.ToLoggingConfigurationFilterRequirementPtrOutputWithContext(ctx).OutputState,
	}
}

// Default handling for logs that don't match any of the specified filtering conditions.
type LoggingConfigurationLoggingFilterPropertiesDefaultBehavior string

const (
	LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorKeep = LoggingConfigurationLoggingFilterPropertiesDefaultBehavior("KEEP")
	LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorDrop = LoggingConfigurationLoggingFilterPropertiesDefaultBehavior("DROP")
)

func (LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLoggingFilterPropertiesDefaultBehavior)(nil)).Elem()
}

func (e LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput() LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput {
	return pulumi.ToOutput(e).(LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput)
}

func (e LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutputWithContext(ctx context.Context) LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput)
}

func (e LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput() LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput {
	return e.ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutputWithContext(ctx context.Context) LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput {
	return LoggingConfigurationLoggingFilterPropertiesDefaultBehavior(e).ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutputWithContext(ctx).ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutputWithContext(ctx)
}

func (e LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationLoggingFilterPropertiesDefaultBehavior)(nil)).Elem()
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput) ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput() LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput {
	return o
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput) ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutputWithContext(ctx context.Context) LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput {
	return o
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput) ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput() LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput {
	return o.ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput) ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutputWithContext(ctx context.Context) LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) *LoggingConfigurationLoggingFilterPropertiesDefaultBehavior {
		return &v
	}).(LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput)
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput) ToOutput(ctx context.Context) pulumix.Output[LoggingConfigurationLoggingFilterPropertiesDefaultBehavior] {
	return pulumix.Output[LoggingConfigurationLoggingFilterPropertiesDefaultBehavior]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoggingConfigurationLoggingFilterPropertiesDefaultBehavior)(nil)).Elem()
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput) ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput() LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput {
	return o
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput) ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutputWithContext(ctx context.Context) LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput {
	return o
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationLoggingFilterPropertiesDefaultBehavior] {
	return pulumix.Output[*LoggingConfigurationLoggingFilterPropertiesDefaultBehavior]{
		OutputState: o.OutputState,
	}
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput) Elem() LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput {
	return o.ApplyT(func(v *LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) LoggingConfigurationLoggingFilterPropertiesDefaultBehavior {
		if v != nil {
			return *v
		}
		var ret LoggingConfigurationLoggingFilterPropertiesDefaultBehavior
		return ret
	}).(LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput)
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LoggingConfigurationLoggingFilterPropertiesDefaultBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorInput is an input type that accepts LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorArgs and LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput values.
// You can construct a concrete instance of `LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorInput` via:
//
//	LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorArgs{...}
type LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorInput interface {
	pulumi.Input

	ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput() LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput
	ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutputWithContext(context.Context) LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput
}

var loggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrType = reflect.TypeOf((**LoggingConfigurationLoggingFilterPropertiesDefaultBehavior)(nil)).Elem()

type LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrInput interface {
	pulumi.Input

	ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput() LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput
	ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutputWithContext(context.Context) LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput
}

type loggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtr string

func LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtr(v string) LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrInput {
	return (*loggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtr)(&v)
}

func (*loggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtr) ElementType() reflect.Type {
	return loggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrType
}

func (in *loggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtr) ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput() LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput {
	return pulumi.ToOutput(in).(LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput)
}

func (in *loggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtr) ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutputWithContext(ctx context.Context) LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput)
}

func (in *loggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtr) ToOutput(ctx context.Context) pulumix.Output[*LoggingConfigurationLoggingFilterPropertiesDefaultBehavior] {
	return pulumix.Output[*LoggingConfigurationLoggingFilterPropertiesDefaultBehavior]{
		OutputState: in.ToLoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutputWithContext(ctx).OutputState,
	}
}

// Use CLOUDFRONT for CloudFront RegexPatternSet, use REGIONAL for Application Load Balancer and API Gateway.
type RegexPatternSetScope string

const (
	RegexPatternSetScopeCloudfront = RegexPatternSetScope("CLOUDFRONT")
	RegexPatternSetScopeRegional   = RegexPatternSetScope("REGIONAL")
)

func (RegexPatternSetScope) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexPatternSetScope)(nil)).Elem()
}

func (e RegexPatternSetScope) ToRegexPatternSetScopeOutput() RegexPatternSetScopeOutput {
	return pulumi.ToOutput(e).(RegexPatternSetScopeOutput)
}

func (e RegexPatternSetScope) ToRegexPatternSetScopeOutputWithContext(ctx context.Context) RegexPatternSetScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RegexPatternSetScopeOutput)
}

func (e RegexPatternSetScope) ToRegexPatternSetScopePtrOutput() RegexPatternSetScopePtrOutput {
	return e.ToRegexPatternSetScopePtrOutputWithContext(context.Background())
}

func (e RegexPatternSetScope) ToRegexPatternSetScopePtrOutputWithContext(ctx context.Context) RegexPatternSetScopePtrOutput {
	return RegexPatternSetScope(e).ToRegexPatternSetScopeOutputWithContext(ctx).ToRegexPatternSetScopePtrOutputWithContext(ctx)
}

func (e RegexPatternSetScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegexPatternSetScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RegexPatternSetScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RegexPatternSetScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RegexPatternSetScopeOutput struct{ *pulumi.OutputState }

func (RegexPatternSetScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexPatternSetScope)(nil)).Elem()
}

func (o RegexPatternSetScopeOutput) ToRegexPatternSetScopeOutput() RegexPatternSetScopeOutput {
	return o
}

func (o RegexPatternSetScopeOutput) ToRegexPatternSetScopeOutputWithContext(ctx context.Context) RegexPatternSetScopeOutput {
	return o
}

func (o RegexPatternSetScopeOutput) ToRegexPatternSetScopePtrOutput() RegexPatternSetScopePtrOutput {
	return o.ToRegexPatternSetScopePtrOutputWithContext(context.Background())
}

func (o RegexPatternSetScopeOutput) ToRegexPatternSetScopePtrOutputWithContext(ctx context.Context) RegexPatternSetScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegexPatternSetScope) *RegexPatternSetScope {
		return &v
	}).(RegexPatternSetScopePtrOutput)
}

func (o RegexPatternSetScopeOutput) ToOutput(ctx context.Context) pulumix.Output[RegexPatternSetScope] {
	return pulumix.Output[RegexPatternSetScope]{
		OutputState: o.OutputState,
	}
}

func (o RegexPatternSetScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RegexPatternSetScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegexPatternSetScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RegexPatternSetScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegexPatternSetScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RegexPatternSetScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RegexPatternSetScopePtrOutput struct{ *pulumi.OutputState }

func (RegexPatternSetScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegexPatternSetScope)(nil)).Elem()
}

func (o RegexPatternSetScopePtrOutput) ToRegexPatternSetScopePtrOutput() RegexPatternSetScopePtrOutput {
	return o
}

func (o RegexPatternSetScopePtrOutput) ToRegexPatternSetScopePtrOutputWithContext(ctx context.Context) RegexPatternSetScopePtrOutput {
	return o
}

func (o RegexPatternSetScopePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RegexPatternSetScope] {
	return pulumix.Output[*RegexPatternSetScope]{
		OutputState: o.OutputState,
	}
}

func (o RegexPatternSetScopePtrOutput) Elem() RegexPatternSetScopeOutput {
	return o.ApplyT(func(v *RegexPatternSetScope) RegexPatternSetScope {
		if v != nil {
			return *v
		}
		var ret RegexPatternSetScope
		return ret
	}).(RegexPatternSetScopeOutput)
}

func (o RegexPatternSetScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RegexPatternSetScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RegexPatternSetScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RegexPatternSetScopeInput is an input type that accepts RegexPatternSetScopeArgs and RegexPatternSetScopeOutput values.
// You can construct a concrete instance of `RegexPatternSetScopeInput` via:
//
//	RegexPatternSetScopeArgs{...}
type RegexPatternSetScopeInput interface {
	pulumi.Input

	ToRegexPatternSetScopeOutput() RegexPatternSetScopeOutput
	ToRegexPatternSetScopeOutputWithContext(context.Context) RegexPatternSetScopeOutput
}

var regexPatternSetScopePtrType = reflect.TypeOf((**RegexPatternSetScope)(nil)).Elem()

type RegexPatternSetScopePtrInput interface {
	pulumi.Input

	ToRegexPatternSetScopePtrOutput() RegexPatternSetScopePtrOutput
	ToRegexPatternSetScopePtrOutputWithContext(context.Context) RegexPatternSetScopePtrOutput
}

type regexPatternSetScopePtr string

func RegexPatternSetScopePtr(v string) RegexPatternSetScopePtrInput {
	return (*regexPatternSetScopePtr)(&v)
}

func (*regexPatternSetScopePtr) ElementType() reflect.Type {
	return regexPatternSetScopePtrType
}

func (in *regexPatternSetScopePtr) ToRegexPatternSetScopePtrOutput() RegexPatternSetScopePtrOutput {
	return pulumi.ToOutput(in).(RegexPatternSetScopePtrOutput)
}

func (in *regexPatternSetScopePtr) ToRegexPatternSetScopePtrOutputWithContext(ctx context.Context) RegexPatternSetScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RegexPatternSetScopePtrOutput)
}

func (in *regexPatternSetScopePtr) ToOutput(ctx context.Context) pulumix.Output[*RegexPatternSetScope] {
	return pulumix.Output[*RegexPatternSetScope]{
		OutputState: in.ToRegexPatternSetScopePtrOutputWithContext(ctx).OutputState,
	}
}

// The inspection behavior to fall back to if the JSON in the request body is invalid.
type RuleGroupBodyParsingFallbackBehavior string

const (
	RuleGroupBodyParsingFallbackBehaviorMatch            = RuleGroupBodyParsingFallbackBehavior("MATCH")
	RuleGroupBodyParsingFallbackBehaviorNoMatch          = RuleGroupBodyParsingFallbackBehavior("NO_MATCH")
	RuleGroupBodyParsingFallbackBehaviorEvaluateAsString = RuleGroupBodyParsingFallbackBehavior("EVALUATE_AS_STRING")
)

func (RuleGroupBodyParsingFallbackBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupBodyParsingFallbackBehavior)(nil)).Elem()
}

func (e RuleGroupBodyParsingFallbackBehavior) ToRuleGroupBodyParsingFallbackBehaviorOutput() RuleGroupBodyParsingFallbackBehaviorOutput {
	return pulumi.ToOutput(e).(RuleGroupBodyParsingFallbackBehaviorOutput)
}

func (e RuleGroupBodyParsingFallbackBehavior) ToRuleGroupBodyParsingFallbackBehaviorOutputWithContext(ctx context.Context) RuleGroupBodyParsingFallbackBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupBodyParsingFallbackBehaviorOutput)
}

func (e RuleGroupBodyParsingFallbackBehavior) ToRuleGroupBodyParsingFallbackBehaviorPtrOutput() RuleGroupBodyParsingFallbackBehaviorPtrOutput {
	return e.ToRuleGroupBodyParsingFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (e RuleGroupBodyParsingFallbackBehavior) ToRuleGroupBodyParsingFallbackBehaviorPtrOutputWithContext(ctx context.Context) RuleGroupBodyParsingFallbackBehaviorPtrOutput {
	return RuleGroupBodyParsingFallbackBehavior(e).ToRuleGroupBodyParsingFallbackBehaviorOutputWithContext(ctx).ToRuleGroupBodyParsingFallbackBehaviorPtrOutputWithContext(ctx)
}

func (e RuleGroupBodyParsingFallbackBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupBodyParsingFallbackBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupBodyParsingFallbackBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupBodyParsingFallbackBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupBodyParsingFallbackBehaviorOutput struct{ *pulumi.OutputState }

func (RuleGroupBodyParsingFallbackBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupBodyParsingFallbackBehavior)(nil)).Elem()
}

func (o RuleGroupBodyParsingFallbackBehaviorOutput) ToRuleGroupBodyParsingFallbackBehaviorOutput() RuleGroupBodyParsingFallbackBehaviorOutput {
	return o
}

func (o RuleGroupBodyParsingFallbackBehaviorOutput) ToRuleGroupBodyParsingFallbackBehaviorOutputWithContext(ctx context.Context) RuleGroupBodyParsingFallbackBehaviorOutput {
	return o
}

func (o RuleGroupBodyParsingFallbackBehaviorOutput) ToRuleGroupBodyParsingFallbackBehaviorPtrOutput() RuleGroupBodyParsingFallbackBehaviorPtrOutput {
	return o.ToRuleGroupBodyParsingFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (o RuleGroupBodyParsingFallbackBehaviorOutput) ToRuleGroupBodyParsingFallbackBehaviorPtrOutputWithContext(ctx context.Context) RuleGroupBodyParsingFallbackBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupBodyParsingFallbackBehavior) *RuleGroupBodyParsingFallbackBehavior {
		return &v
	}).(RuleGroupBodyParsingFallbackBehaviorPtrOutput)
}

func (o RuleGroupBodyParsingFallbackBehaviorOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupBodyParsingFallbackBehavior] {
	return pulumix.Output[RuleGroupBodyParsingFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupBodyParsingFallbackBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupBodyParsingFallbackBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupBodyParsingFallbackBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupBodyParsingFallbackBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupBodyParsingFallbackBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupBodyParsingFallbackBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupBodyParsingFallbackBehaviorPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupBodyParsingFallbackBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupBodyParsingFallbackBehavior)(nil)).Elem()
}

func (o RuleGroupBodyParsingFallbackBehaviorPtrOutput) ToRuleGroupBodyParsingFallbackBehaviorPtrOutput() RuleGroupBodyParsingFallbackBehaviorPtrOutput {
	return o
}

func (o RuleGroupBodyParsingFallbackBehaviorPtrOutput) ToRuleGroupBodyParsingFallbackBehaviorPtrOutputWithContext(ctx context.Context) RuleGroupBodyParsingFallbackBehaviorPtrOutput {
	return o
}

func (o RuleGroupBodyParsingFallbackBehaviorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupBodyParsingFallbackBehavior] {
	return pulumix.Output[*RuleGroupBodyParsingFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupBodyParsingFallbackBehaviorPtrOutput) Elem() RuleGroupBodyParsingFallbackBehaviorOutput {
	return o.ApplyT(func(v *RuleGroupBodyParsingFallbackBehavior) RuleGroupBodyParsingFallbackBehavior {
		if v != nil {
			return *v
		}
		var ret RuleGroupBodyParsingFallbackBehavior
		return ret
	}).(RuleGroupBodyParsingFallbackBehaviorOutput)
}

func (o RuleGroupBodyParsingFallbackBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupBodyParsingFallbackBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupBodyParsingFallbackBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupBodyParsingFallbackBehaviorInput is an input type that accepts RuleGroupBodyParsingFallbackBehaviorArgs and RuleGroupBodyParsingFallbackBehaviorOutput values.
// You can construct a concrete instance of `RuleGroupBodyParsingFallbackBehaviorInput` via:
//
//	RuleGroupBodyParsingFallbackBehaviorArgs{...}
type RuleGroupBodyParsingFallbackBehaviorInput interface {
	pulumi.Input

	ToRuleGroupBodyParsingFallbackBehaviorOutput() RuleGroupBodyParsingFallbackBehaviorOutput
	ToRuleGroupBodyParsingFallbackBehaviorOutputWithContext(context.Context) RuleGroupBodyParsingFallbackBehaviorOutput
}

var ruleGroupBodyParsingFallbackBehaviorPtrType = reflect.TypeOf((**RuleGroupBodyParsingFallbackBehavior)(nil)).Elem()

type RuleGroupBodyParsingFallbackBehaviorPtrInput interface {
	pulumi.Input

	ToRuleGroupBodyParsingFallbackBehaviorPtrOutput() RuleGroupBodyParsingFallbackBehaviorPtrOutput
	ToRuleGroupBodyParsingFallbackBehaviorPtrOutputWithContext(context.Context) RuleGroupBodyParsingFallbackBehaviorPtrOutput
}

type ruleGroupBodyParsingFallbackBehaviorPtr string

func RuleGroupBodyParsingFallbackBehaviorPtr(v string) RuleGroupBodyParsingFallbackBehaviorPtrInput {
	return (*ruleGroupBodyParsingFallbackBehaviorPtr)(&v)
}

func (*ruleGroupBodyParsingFallbackBehaviorPtr) ElementType() reflect.Type {
	return ruleGroupBodyParsingFallbackBehaviorPtrType
}

func (in *ruleGroupBodyParsingFallbackBehaviorPtr) ToRuleGroupBodyParsingFallbackBehaviorPtrOutput() RuleGroupBodyParsingFallbackBehaviorPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupBodyParsingFallbackBehaviorPtrOutput)
}

func (in *ruleGroupBodyParsingFallbackBehaviorPtr) ToRuleGroupBodyParsingFallbackBehaviorPtrOutputWithContext(ctx context.Context) RuleGroupBodyParsingFallbackBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupBodyParsingFallbackBehaviorPtrOutput)
}

func (in *ruleGroupBodyParsingFallbackBehaviorPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupBodyParsingFallbackBehavior] {
	return pulumix.Output[*RuleGroupBodyParsingFallbackBehavior]{
		OutputState: in.ToRuleGroupBodyParsingFallbackBehaviorPtrOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupForwardedIpConfigurationFallbackBehavior string

const (
	RuleGroupForwardedIpConfigurationFallbackBehaviorMatch   = RuleGroupForwardedIpConfigurationFallbackBehavior("MATCH")
	RuleGroupForwardedIpConfigurationFallbackBehaviorNoMatch = RuleGroupForwardedIpConfigurationFallbackBehavior("NO_MATCH")
)

func (RuleGroupForwardedIpConfigurationFallbackBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupForwardedIpConfigurationFallbackBehavior)(nil)).Elem()
}

func (e RuleGroupForwardedIpConfigurationFallbackBehavior) ToRuleGroupForwardedIpConfigurationFallbackBehaviorOutput() RuleGroupForwardedIpConfigurationFallbackBehaviorOutput {
	return pulumi.ToOutput(e).(RuleGroupForwardedIpConfigurationFallbackBehaviorOutput)
}

func (e RuleGroupForwardedIpConfigurationFallbackBehavior) ToRuleGroupForwardedIpConfigurationFallbackBehaviorOutputWithContext(ctx context.Context) RuleGroupForwardedIpConfigurationFallbackBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupForwardedIpConfigurationFallbackBehaviorOutput)
}

func (e RuleGroupForwardedIpConfigurationFallbackBehavior) ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput() RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return e.ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (e RuleGroupForwardedIpConfigurationFallbackBehavior) ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return RuleGroupForwardedIpConfigurationFallbackBehavior(e).ToRuleGroupForwardedIpConfigurationFallbackBehaviorOutputWithContext(ctx).ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx)
}

func (e RuleGroupForwardedIpConfigurationFallbackBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupForwardedIpConfigurationFallbackBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupForwardedIpConfigurationFallbackBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupForwardedIpConfigurationFallbackBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupForwardedIpConfigurationFallbackBehaviorOutput struct{ *pulumi.OutputState }

func (RuleGroupForwardedIpConfigurationFallbackBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupForwardedIpConfigurationFallbackBehavior)(nil)).Elem()
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorOutput) ToRuleGroupForwardedIpConfigurationFallbackBehaviorOutput() RuleGroupForwardedIpConfigurationFallbackBehaviorOutput {
	return o
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorOutput) ToRuleGroupForwardedIpConfigurationFallbackBehaviorOutputWithContext(ctx context.Context) RuleGroupForwardedIpConfigurationFallbackBehaviorOutput {
	return o
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorOutput) ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput() RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o.ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorOutput) ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupForwardedIpConfigurationFallbackBehavior) *RuleGroupForwardedIpConfigurationFallbackBehavior {
		return &v
	}).(RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput)
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupForwardedIpConfigurationFallbackBehavior] {
	return pulumix.Output[RuleGroupForwardedIpConfigurationFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupForwardedIpConfigurationFallbackBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupForwardedIpConfigurationFallbackBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupForwardedIpConfigurationFallbackBehavior)(nil)).Elem()
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput) ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput() RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput) ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupForwardedIpConfigurationFallbackBehavior] {
	return pulumix.Output[*RuleGroupForwardedIpConfigurationFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput) Elem() RuleGroupForwardedIpConfigurationFallbackBehaviorOutput {
	return o.ApplyT(func(v *RuleGroupForwardedIpConfigurationFallbackBehavior) RuleGroupForwardedIpConfigurationFallbackBehavior {
		if v != nil {
			return *v
		}
		var ret RuleGroupForwardedIpConfigurationFallbackBehavior
		return ret
	}).(RuleGroupForwardedIpConfigurationFallbackBehaviorOutput)
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupForwardedIpConfigurationFallbackBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupForwardedIpConfigurationFallbackBehaviorInput is an input type that accepts RuleGroupForwardedIpConfigurationFallbackBehaviorArgs and RuleGroupForwardedIpConfigurationFallbackBehaviorOutput values.
// You can construct a concrete instance of `RuleGroupForwardedIpConfigurationFallbackBehaviorInput` via:
//
//	RuleGroupForwardedIpConfigurationFallbackBehaviorArgs{...}
type RuleGroupForwardedIpConfigurationFallbackBehaviorInput interface {
	pulumi.Input

	ToRuleGroupForwardedIpConfigurationFallbackBehaviorOutput() RuleGroupForwardedIpConfigurationFallbackBehaviorOutput
	ToRuleGroupForwardedIpConfigurationFallbackBehaviorOutputWithContext(context.Context) RuleGroupForwardedIpConfigurationFallbackBehaviorOutput
}

var ruleGroupForwardedIpConfigurationFallbackBehaviorPtrType = reflect.TypeOf((**RuleGroupForwardedIpConfigurationFallbackBehavior)(nil)).Elem()

type RuleGroupForwardedIpConfigurationFallbackBehaviorPtrInput interface {
	pulumi.Input

	ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput() RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput
	ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(context.Context) RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput
}

type ruleGroupForwardedIpConfigurationFallbackBehaviorPtr string

func RuleGroupForwardedIpConfigurationFallbackBehaviorPtr(v string) RuleGroupForwardedIpConfigurationFallbackBehaviorPtrInput {
	return (*ruleGroupForwardedIpConfigurationFallbackBehaviorPtr)(&v)
}

func (*ruleGroupForwardedIpConfigurationFallbackBehaviorPtr) ElementType() reflect.Type {
	return ruleGroupForwardedIpConfigurationFallbackBehaviorPtrType
}

func (in *ruleGroupForwardedIpConfigurationFallbackBehaviorPtr) ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput() RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput)
}

func (in *ruleGroupForwardedIpConfigurationFallbackBehaviorPtr) ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput)
}

func (in *ruleGroupForwardedIpConfigurationFallbackBehaviorPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupForwardedIpConfigurationFallbackBehavior] {
	return pulumix.Output[*RuleGroupForwardedIpConfigurationFallbackBehavior]{
		OutputState: in.ToRuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupIpSetForwardedIpConfigurationFallbackBehavior string

const (
	RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorMatch   = RuleGroupIpSetForwardedIpConfigurationFallbackBehavior("MATCH")
	RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorNoMatch = RuleGroupIpSetForwardedIpConfigurationFallbackBehavior("NO_MATCH")
)

func (RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupIpSetForwardedIpConfigurationFallbackBehavior)(nil)).Elem()
}

func (e RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput() RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput {
	return pulumi.ToOutput(e).(RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput)
}

func (e RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutputWithContext(ctx context.Context) RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput)
}

func (e RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput() RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return e.ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (e RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return RuleGroupIpSetForwardedIpConfigurationFallbackBehavior(e).ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutputWithContext(ctx).ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx)
}

func (e RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput struct{ *pulumi.OutputState }

func (RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupIpSetForwardedIpConfigurationFallbackBehavior)(nil)).Elem()
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput() RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput {
	return o
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutputWithContext(ctx context.Context) RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput {
	return o
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput() RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o.ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) *RuleGroupIpSetForwardedIpConfigurationFallbackBehavior {
		return &v
	}).(RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput)
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupIpSetForwardedIpConfigurationFallbackBehavior] {
	return pulumix.Output[RuleGroupIpSetForwardedIpConfigurationFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupIpSetForwardedIpConfigurationFallbackBehavior)(nil)).Elem()
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput() RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupIpSetForwardedIpConfigurationFallbackBehavior] {
	return pulumix.Output[*RuleGroupIpSetForwardedIpConfigurationFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) Elem() RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput {
	return o.ApplyT(func(v *RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) RuleGroupIpSetForwardedIpConfigurationFallbackBehavior {
		if v != nil {
			return *v
		}
		var ret RuleGroupIpSetForwardedIpConfigurationFallbackBehavior
		return ret
	}).(RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput)
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupIpSetForwardedIpConfigurationFallbackBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorInput is an input type that accepts RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorArgs and RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput values.
// You can construct a concrete instance of `RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorInput` via:
//
//	RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorArgs{...}
type RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorInput interface {
	pulumi.Input

	ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput() RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput
	ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutputWithContext(context.Context) RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput
}

var ruleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrType = reflect.TypeOf((**RuleGroupIpSetForwardedIpConfigurationFallbackBehavior)(nil)).Elem()

type RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrInput interface {
	pulumi.Input

	ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput() RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput
	ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(context.Context) RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput
}

type ruleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtr string

func RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtr(v string) RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrInput {
	return (*ruleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtr)(&v)
}

func (*ruleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtr) ElementType() reflect.Type {
	return ruleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrType
}

func (in *ruleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtr) ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput() RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput)
}

func (in *ruleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtr) ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput)
}

func (in *ruleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupIpSetForwardedIpConfigurationFallbackBehavior] {
	return pulumix.Output[*RuleGroupIpSetForwardedIpConfigurationFallbackBehavior]{
		OutputState: in.ToRuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupIpSetForwardedIpConfigurationPosition string

const (
	RuleGroupIpSetForwardedIpConfigurationPositionFirst = RuleGroupIpSetForwardedIpConfigurationPosition("FIRST")
	RuleGroupIpSetForwardedIpConfigurationPositionLast  = RuleGroupIpSetForwardedIpConfigurationPosition("LAST")
	RuleGroupIpSetForwardedIpConfigurationPositionAny   = RuleGroupIpSetForwardedIpConfigurationPosition("ANY")
)

func (RuleGroupIpSetForwardedIpConfigurationPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupIpSetForwardedIpConfigurationPosition)(nil)).Elem()
}

func (e RuleGroupIpSetForwardedIpConfigurationPosition) ToRuleGroupIpSetForwardedIpConfigurationPositionOutput() RuleGroupIpSetForwardedIpConfigurationPositionOutput {
	return pulumi.ToOutput(e).(RuleGroupIpSetForwardedIpConfigurationPositionOutput)
}

func (e RuleGroupIpSetForwardedIpConfigurationPosition) ToRuleGroupIpSetForwardedIpConfigurationPositionOutputWithContext(ctx context.Context) RuleGroupIpSetForwardedIpConfigurationPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupIpSetForwardedIpConfigurationPositionOutput)
}

func (e RuleGroupIpSetForwardedIpConfigurationPosition) ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutput() RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput {
	return e.ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutputWithContext(context.Background())
}

func (e RuleGroupIpSetForwardedIpConfigurationPosition) ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutputWithContext(ctx context.Context) RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput {
	return RuleGroupIpSetForwardedIpConfigurationPosition(e).ToRuleGroupIpSetForwardedIpConfigurationPositionOutputWithContext(ctx).ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutputWithContext(ctx)
}

func (e RuleGroupIpSetForwardedIpConfigurationPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupIpSetForwardedIpConfigurationPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupIpSetForwardedIpConfigurationPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupIpSetForwardedIpConfigurationPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupIpSetForwardedIpConfigurationPositionOutput struct{ *pulumi.OutputState }

func (RuleGroupIpSetForwardedIpConfigurationPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupIpSetForwardedIpConfigurationPosition)(nil)).Elem()
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionOutput) ToRuleGroupIpSetForwardedIpConfigurationPositionOutput() RuleGroupIpSetForwardedIpConfigurationPositionOutput {
	return o
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionOutput) ToRuleGroupIpSetForwardedIpConfigurationPositionOutputWithContext(ctx context.Context) RuleGroupIpSetForwardedIpConfigurationPositionOutput {
	return o
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionOutput) ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutput() RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput {
	return o.ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutputWithContext(context.Background())
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionOutput) ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutputWithContext(ctx context.Context) RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupIpSetForwardedIpConfigurationPosition) *RuleGroupIpSetForwardedIpConfigurationPosition {
		return &v
	}).(RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput)
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupIpSetForwardedIpConfigurationPosition] {
	return pulumix.Output[RuleGroupIpSetForwardedIpConfigurationPosition]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupIpSetForwardedIpConfigurationPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupIpSetForwardedIpConfigurationPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupIpSetForwardedIpConfigurationPosition)(nil)).Elem()
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput) ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutput() RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput {
	return o
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput) ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutputWithContext(ctx context.Context) RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput {
	return o
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupIpSetForwardedIpConfigurationPosition] {
	return pulumix.Output[*RuleGroupIpSetForwardedIpConfigurationPosition]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput) Elem() RuleGroupIpSetForwardedIpConfigurationPositionOutput {
	return o.ApplyT(func(v *RuleGroupIpSetForwardedIpConfigurationPosition) RuleGroupIpSetForwardedIpConfigurationPosition {
		if v != nil {
			return *v
		}
		var ret RuleGroupIpSetForwardedIpConfigurationPosition
		return ret
	}).(RuleGroupIpSetForwardedIpConfigurationPositionOutput)
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupIpSetForwardedIpConfigurationPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupIpSetForwardedIpConfigurationPositionInput is an input type that accepts RuleGroupIpSetForwardedIpConfigurationPositionArgs and RuleGroupIpSetForwardedIpConfigurationPositionOutput values.
// You can construct a concrete instance of `RuleGroupIpSetForwardedIpConfigurationPositionInput` via:
//
//	RuleGroupIpSetForwardedIpConfigurationPositionArgs{...}
type RuleGroupIpSetForwardedIpConfigurationPositionInput interface {
	pulumi.Input

	ToRuleGroupIpSetForwardedIpConfigurationPositionOutput() RuleGroupIpSetForwardedIpConfigurationPositionOutput
	ToRuleGroupIpSetForwardedIpConfigurationPositionOutputWithContext(context.Context) RuleGroupIpSetForwardedIpConfigurationPositionOutput
}

var ruleGroupIpSetForwardedIpConfigurationPositionPtrType = reflect.TypeOf((**RuleGroupIpSetForwardedIpConfigurationPosition)(nil)).Elem()

type RuleGroupIpSetForwardedIpConfigurationPositionPtrInput interface {
	pulumi.Input

	ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutput() RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput
	ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutputWithContext(context.Context) RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput
}

type ruleGroupIpSetForwardedIpConfigurationPositionPtr string

func RuleGroupIpSetForwardedIpConfigurationPositionPtr(v string) RuleGroupIpSetForwardedIpConfigurationPositionPtrInput {
	return (*ruleGroupIpSetForwardedIpConfigurationPositionPtr)(&v)
}

func (*ruleGroupIpSetForwardedIpConfigurationPositionPtr) ElementType() reflect.Type {
	return ruleGroupIpSetForwardedIpConfigurationPositionPtrType
}

func (in *ruleGroupIpSetForwardedIpConfigurationPositionPtr) ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutput() RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput)
}

func (in *ruleGroupIpSetForwardedIpConfigurationPositionPtr) ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutputWithContext(ctx context.Context) RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput)
}

func (in *ruleGroupIpSetForwardedIpConfigurationPositionPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupIpSetForwardedIpConfigurationPosition] {
	return pulumix.Output[*RuleGroupIpSetForwardedIpConfigurationPosition]{
		OutputState: in.ToRuleGroupIpSetForwardedIpConfigurationPositionPtrOutputWithContext(ctx).OutputState,
	}
}

// The parts of the JSON to match against using the MatchPattern.
type RuleGroupJsonMatchScope string

const (
	RuleGroupJsonMatchScopeAll   = RuleGroupJsonMatchScope("ALL")
	RuleGroupJsonMatchScopeKey   = RuleGroupJsonMatchScope("KEY")
	RuleGroupJsonMatchScopeValue = RuleGroupJsonMatchScope("VALUE")
)

func (RuleGroupJsonMatchScope) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupJsonMatchScope)(nil)).Elem()
}

func (e RuleGroupJsonMatchScope) ToRuleGroupJsonMatchScopeOutput() RuleGroupJsonMatchScopeOutput {
	return pulumi.ToOutput(e).(RuleGroupJsonMatchScopeOutput)
}

func (e RuleGroupJsonMatchScope) ToRuleGroupJsonMatchScopeOutputWithContext(ctx context.Context) RuleGroupJsonMatchScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupJsonMatchScopeOutput)
}

func (e RuleGroupJsonMatchScope) ToRuleGroupJsonMatchScopePtrOutput() RuleGroupJsonMatchScopePtrOutput {
	return e.ToRuleGroupJsonMatchScopePtrOutputWithContext(context.Background())
}

func (e RuleGroupJsonMatchScope) ToRuleGroupJsonMatchScopePtrOutputWithContext(ctx context.Context) RuleGroupJsonMatchScopePtrOutput {
	return RuleGroupJsonMatchScope(e).ToRuleGroupJsonMatchScopeOutputWithContext(ctx).ToRuleGroupJsonMatchScopePtrOutputWithContext(ctx)
}

func (e RuleGroupJsonMatchScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupJsonMatchScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupJsonMatchScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupJsonMatchScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupJsonMatchScopeOutput struct{ *pulumi.OutputState }

func (RuleGroupJsonMatchScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupJsonMatchScope)(nil)).Elem()
}

func (o RuleGroupJsonMatchScopeOutput) ToRuleGroupJsonMatchScopeOutput() RuleGroupJsonMatchScopeOutput {
	return o
}

func (o RuleGroupJsonMatchScopeOutput) ToRuleGroupJsonMatchScopeOutputWithContext(ctx context.Context) RuleGroupJsonMatchScopeOutput {
	return o
}

func (o RuleGroupJsonMatchScopeOutput) ToRuleGroupJsonMatchScopePtrOutput() RuleGroupJsonMatchScopePtrOutput {
	return o.ToRuleGroupJsonMatchScopePtrOutputWithContext(context.Background())
}

func (o RuleGroupJsonMatchScopeOutput) ToRuleGroupJsonMatchScopePtrOutputWithContext(ctx context.Context) RuleGroupJsonMatchScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupJsonMatchScope) *RuleGroupJsonMatchScope {
		return &v
	}).(RuleGroupJsonMatchScopePtrOutput)
}

func (o RuleGroupJsonMatchScopeOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupJsonMatchScope] {
	return pulumix.Output[RuleGroupJsonMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupJsonMatchScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupJsonMatchScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupJsonMatchScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupJsonMatchScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupJsonMatchScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupJsonMatchScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupJsonMatchScopePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupJsonMatchScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupJsonMatchScope)(nil)).Elem()
}

func (o RuleGroupJsonMatchScopePtrOutput) ToRuleGroupJsonMatchScopePtrOutput() RuleGroupJsonMatchScopePtrOutput {
	return o
}

func (o RuleGroupJsonMatchScopePtrOutput) ToRuleGroupJsonMatchScopePtrOutputWithContext(ctx context.Context) RuleGroupJsonMatchScopePtrOutput {
	return o
}

func (o RuleGroupJsonMatchScopePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupJsonMatchScope] {
	return pulumix.Output[*RuleGroupJsonMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupJsonMatchScopePtrOutput) Elem() RuleGroupJsonMatchScopeOutput {
	return o.ApplyT(func(v *RuleGroupJsonMatchScope) RuleGroupJsonMatchScope {
		if v != nil {
			return *v
		}
		var ret RuleGroupJsonMatchScope
		return ret
	}).(RuleGroupJsonMatchScopeOutput)
}

func (o RuleGroupJsonMatchScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupJsonMatchScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupJsonMatchScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupJsonMatchScopeInput is an input type that accepts RuleGroupJsonMatchScopeArgs and RuleGroupJsonMatchScopeOutput values.
// You can construct a concrete instance of `RuleGroupJsonMatchScopeInput` via:
//
//	RuleGroupJsonMatchScopeArgs{...}
type RuleGroupJsonMatchScopeInput interface {
	pulumi.Input

	ToRuleGroupJsonMatchScopeOutput() RuleGroupJsonMatchScopeOutput
	ToRuleGroupJsonMatchScopeOutputWithContext(context.Context) RuleGroupJsonMatchScopeOutput
}

var ruleGroupJsonMatchScopePtrType = reflect.TypeOf((**RuleGroupJsonMatchScope)(nil)).Elem()

type RuleGroupJsonMatchScopePtrInput interface {
	pulumi.Input

	ToRuleGroupJsonMatchScopePtrOutput() RuleGroupJsonMatchScopePtrOutput
	ToRuleGroupJsonMatchScopePtrOutputWithContext(context.Context) RuleGroupJsonMatchScopePtrOutput
}

type ruleGroupJsonMatchScopePtr string

func RuleGroupJsonMatchScopePtr(v string) RuleGroupJsonMatchScopePtrInput {
	return (*ruleGroupJsonMatchScopePtr)(&v)
}

func (*ruleGroupJsonMatchScopePtr) ElementType() reflect.Type {
	return ruleGroupJsonMatchScopePtrType
}

func (in *ruleGroupJsonMatchScopePtr) ToRuleGroupJsonMatchScopePtrOutput() RuleGroupJsonMatchScopePtrOutput {
	return pulumi.ToOutput(in).(RuleGroupJsonMatchScopePtrOutput)
}

func (in *ruleGroupJsonMatchScopePtr) ToRuleGroupJsonMatchScopePtrOutputWithContext(ctx context.Context) RuleGroupJsonMatchScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupJsonMatchScopePtrOutput)
}

func (in *ruleGroupJsonMatchScopePtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupJsonMatchScope] {
	return pulumix.Output[*RuleGroupJsonMatchScope]{
		OutputState: in.ToRuleGroupJsonMatchScopePtrOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupLabelMatchScope string

const (
	RuleGroupLabelMatchScopeLabel     = RuleGroupLabelMatchScope("LABEL")
	RuleGroupLabelMatchScopeNamespace = RuleGroupLabelMatchScope("NAMESPACE")
)

func (RuleGroupLabelMatchScope) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupLabelMatchScope)(nil)).Elem()
}

func (e RuleGroupLabelMatchScope) ToRuleGroupLabelMatchScopeOutput() RuleGroupLabelMatchScopeOutput {
	return pulumi.ToOutput(e).(RuleGroupLabelMatchScopeOutput)
}

func (e RuleGroupLabelMatchScope) ToRuleGroupLabelMatchScopeOutputWithContext(ctx context.Context) RuleGroupLabelMatchScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupLabelMatchScopeOutput)
}

func (e RuleGroupLabelMatchScope) ToRuleGroupLabelMatchScopePtrOutput() RuleGroupLabelMatchScopePtrOutput {
	return e.ToRuleGroupLabelMatchScopePtrOutputWithContext(context.Background())
}

func (e RuleGroupLabelMatchScope) ToRuleGroupLabelMatchScopePtrOutputWithContext(ctx context.Context) RuleGroupLabelMatchScopePtrOutput {
	return RuleGroupLabelMatchScope(e).ToRuleGroupLabelMatchScopeOutputWithContext(ctx).ToRuleGroupLabelMatchScopePtrOutputWithContext(ctx)
}

func (e RuleGroupLabelMatchScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupLabelMatchScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupLabelMatchScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupLabelMatchScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupLabelMatchScopeOutput struct{ *pulumi.OutputState }

func (RuleGroupLabelMatchScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupLabelMatchScope)(nil)).Elem()
}

func (o RuleGroupLabelMatchScopeOutput) ToRuleGroupLabelMatchScopeOutput() RuleGroupLabelMatchScopeOutput {
	return o
}

func (o RuleGroupLabelMatchScopeOutput) ToRuleGroupLabelMatchScopeOutputWithContext(ctx context.Context) RuleGroupLabelMatchScopeOutput {
	return o
}

func (o RuleGroupLabelMatchScopeOutput) ToRuleGroupLabelMatchScopePtrOutput() RuleGroupLabelMatchScopePtrOutput {
	return o.ToRuleGroupLabelMatchScopePtrOutputWithContext(context.Background())
}

func (o RuleGroupLabelMatchScopeOutput) ToRuleGroupLabelMatchScopePtrOutputWithContext(ctx context.Context) RuleGroupLabelMatchScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupLabelMatchScope) *RuleGroupLabelMatchScope {
		return &v
	}).(RuleGroupLabelMatchScopePtrOutput)
}

func (o RuleGroupLabelMatchScopeOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupLabelMatchScope] {
	return pulumix.Output[RuleGroupLabelMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupLabelMatchScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupLabelMatchScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupLabelMatchScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupLabelMatchScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupLabelMatchScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupLabelMatchScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupLabelMatchScopePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupLabelMatchScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupLabelMatchScope)(nil)).Elem()
}

func (o RuleGroupLabelMatchScopePtrOutput) ToRuleGroupLabelMatchScopePtrOutput() RuleGroupLabelMatchScopePtrOutput {
	return o
}

func (o RuleGroupLabelMatchScopePtrOutput) ToRuleGroupLabelMatchScopePtrOutputWithContext(ctx context.Context) RuleGroupLabelMatchScopePtrOutput {
	return o
}

func (o RuleGroupLabelMatchScopePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupLabelMatchScope] {
	return pulumix.Output[*RuleGroupLabelMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupLabelMatchScopePtrOutput) Elem() RuleGroupLabelMatchScopeOutput {
	return o.ApplyT(func(v *RuleGroupLabelMatchScope) RuleGroupLabelMatchScope {
		if v != nil {
			return *v
		}
		var ret RuleGroupLabelMatchScope
		return ret
	}).(RuleGroupLabelMatchScopeOutput)
}

func (o RuleGroupLabelMatchScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupLabelMatchScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupLabelMatchScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupLabelMatchScopeInput is an input type that accepts RuleGroupLabelMatchScopeArgs and RuleGroupLabelMatchScopeOutput values.
// You can construct a concrete instance of `RuleGroupLabelMatchScopeInput` via:
//
//	RuleGroupLabelMatchScopeArgs{...}
type RuleGroupLabelMatchScopeInput interface {
	pulumi.Input

	ToRuleGroupLabelMatchScopeOutput() RuleGroupLabelMatchScopeOutput
	ToRuleGroupLabelMatchScopeOutputWithContext(context.Context) RuleGroupLabelMatchScopeOutput
}

var ruleGroupLabelMatchScopePtrType = reflect.TypeOf((**RuleGroupLabelMatchScope)(nil)).Elem()

type RuleGroupLabelMatchScopePtrInput interface {
	pulumi.Input

	ToRuleGroupLabelMatchScopePtrOutput() RuleGroupLabelMatchScopePtrOutput
	ToRuleGroupLabelMatchScopePtrOutputWithContext(context.Context) RuleGroupLabelMatchScopePtrOutput
}

type ruleGroupLabelMatchScopePtr string

func RuleGroupLabelMatchScopePtr(v string) RuleGroupLabelMatchScopePtrInput {
	return (*ruleGroupLabelMatchScopePtr)(&v)
}

func (*ruleGroupLabelMatchScopePtr) ElementType() reflect.Type {
	return ruleGroupLabelMatchScopePtrType
}

func (in *ruleGroupLabelMatchScopePtr) ToRuleGroupLabelMatchScopePtrOutput() RuleGroupLabelMatchScopePtrOutput {
	return pulumi.ToOutput(in).(RuleGroupLabelMatchScopePtrOutput)
}

func (in *ruleGroupLabelMatchScopePtr) ToRuleGroupLabelMatchScopePtrOutputWithContext(ctx context.Context) RuleGroupLabelMatchScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupLabelMatchScopePtrOutput)
}

func (in *ruleGroupLabelMatchScopePtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupLabelMatchScope] {
	return pulumix.Output[*RuleGroupLabelMatchScope]{
		OutputState: in.ToRuleGroupLabelMatchScopePtrOutputWithContext(ctx).OutputState,
	}
}

// The parts of the request to match against using the MatchPattern.
type RuleGroupMapMatchScope string

const (
	RuleGroupMapMatchScopeAll   = RuleGroupMapMatchScope("ALL")
	RuleGroupMapMatchScopeKey   = RuleGroupMapMatchScope("KEY")
	RuleGroupMapMatchScopeValue = RuleGroupMapMatchScope("VALUE")
)

func (RuleGroupMapMatchScope) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupMapMatchScope)(nil)).Elem()
}

func (e RuleGroupMapMatchScope) ToRuleGroupMapMatchScopeOutput() RuleGroupMapMatchScopeOutput {
	return pulumi.ToOutput(e).(RuleGroupMapMatchScopeOutput)
}

func (e RuleGroupMapMatchScope) ToRuleGroupMapMatchScopeOutputWithContext(ctx context.Context) RuleGroupMapMatchScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupMapMatchScopeOutput)
}

func (e RuleGroupMapMatchScope) ToRuleGroupMapMatchScopePtrOutput() RuleGroupMapMatchScopePtrOutput {
	return e.ToRuleGroupMapMatchScopePtrOutputWithContext(context.Background())
}

func (e RuleGroupMapMatchScope) ToRuleGroupMapMatchScopePtrOutputWithContext(ctx context.Context) RuleGroupMapMatchScopePtrOutput {
	return RuleGroupMapMatchScope(e).ToRuleGroupMapMatchScopeOutputWithContext(ctx).ToRuleGroupMapMatchScopePtrOutputWithContext(ctx)
}

func (e RuleGroupMapMatchScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupMapMatchScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupMapMatchScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupMapMatchScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupMapMatchScopeOutput struct{ *pulumi.OutputState }

func (RuleGroupMapMatchScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupMapMatchScope)(nil)).Elem()
}

func (o RuleGroupMapMatchScopeOutput) ToRuleGroupMapMatchScopeOutput() RuleGroupMapMatchScopeOutput {
	return o
}

func (o RuleGroupMapMatchScopeOutput) ToRuleGroupMapMatchScopeOutputWithContext(ctx context.Context) RuleGroupMapMatchScopeOutput {
	return o
}

func (o RuleGroupMapMatchScopeOutput) ToRuleGroupMapMatchScopePtrOutput() RuleGroupMapMatchScopePtrOutput {
	return o.ToRuleGroupMapMatchScopePtrOutputWithContext(context.Background())
}

func (o RuleGroupMapMatchScopeOutput) ToRuleGroupMapMatchScopePtrOutputWithContext(ctx context.Context) RuleGroupMapMatchScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupMapMatchScope) *RuleGroupMapMatchScope {
		return &v
	}).(RuleGroupMapMatchScopePtrOutput)
}

func (o RuleGroupMapMatchScopeOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupMapMatchScope] {
	return pulumix.Output[RuleGroupMapMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupMapMatchScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupMapMatchScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupMapMatchScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupMapMatchScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupMapMatchScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupMapMatchScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupMapMatchScopePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupMapMatchScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupMapMatchScope)(nil)).Elem()
}

func (o RuleGroupMapMatchScopePtrOutput) ToRuleGroupMapMatchScopePtrOutput() RuleGroupMapMatchScopePtrOutput {
	return o
}

func (o RuleGroupMapMatchScopePtrOutput) ToRuleGroupMapMatchScopePtrOutputWithContext(ctx context.Context) RuleGroupMapMatchScopePtrOutput {
	return o
}

func (o RuleGroupMapMatchScopePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupMapMatchScope] {
	return pulumix.Output[*RuleGroupMapMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupMapMatchScopePtrOutput) Elem() RuleGroupMapMatchScopeOutput {
	return o.ApplyT(func(v *RuleGroupMapMatchScope) RuleGroupMapMatchScope {
		if v != nil {
			return *v
		}
		var ret RuleGroupMapMatchScope
		return ret
	}).(RuleGroupMapMatchScopeOutput)
}

func (o RuleGroupMapMatchScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupMapMatchScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupMapMatchScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupMapMatchScopeInput is an input type that accepts RuleGroupMapMatchScopeArgs and RuleGroupMapMatchScopeOutput values.
// You can construct a concrete instance of `RuleGroupMapMatchScopeInput` via:
//
//	RuleGroupMapMatchScopeArgs{...}
type RuleGroupMapMatchScopeInput interface {
	pulumi.Input

	ToRuleGroupMapMatchScopeOutput() RuleGroupMapMatchScopeOutput
	ToRuleGroupMapMatchScopeOutputWithContext(context.Context) RuleGroupMapMatchScopeOutput
}

var ruleGroupMapMatchScopePtrType = reflect.TypeOf((**RuleGroupMapMatchScope)(nil)).Elem()

type RuleGroupMapMatchScopePtrInput interface {
	pulumi.Input

	ToRuleGroupMapMatchScopePtrOutput() RuleGroupMapMatchScopePtrOutput
	ToRuleGroupMapMatchScopePtrOutputWithContext(context.Context) RuleGroupMapMatchScopePtrOutput
}

type ruleGroupMapMatchScopePtr string

func RuleGroupMapMatchScopePtr(v string) RuleGroupMapMatchScopePtrInput {
	return (*ruleGroupMapMatchScopePtr)(&v)
}

func (*ruleGroupMapMatchScopePtr) ElementType() reflect.Type {
	return ruleGroupMapMatchScopePtrType
}

func (in *ruleGroupMapMatchScopePtr) ToRuleGroupMapMatchScopePtrOutput() RuleGroupMapMatchScopePtrOutput {
	return pulumi.ToOutput(in).(RuleGroupMapMatchScopePtrOutput)
}

func (in *ruleGroupMapMatchScopePtr) ToRuleGroupMapMatchScopePtrOutputWithContext(ctx context.Context) RuleGroupMapMatchScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupMapMatchScopePtrOutput)
}

func (in *ruleGroupMapMatchScopePtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupMapMatchScope] {
	return pulumix.Output[*RuleGroupMapMatchScope]{
		OutputState: in.ToRuleGroupMapMatchScopePtrOutputWithContext(ctx).OutputState,
	}
}

// Handling of requests containing oversize fields
type RuleGroupOversizeHandling string

const (
	RuleGroupOversizeHandlingContinue = RuleGroupOversizeHandling("CONTINUE")
	RuleGroupOversizeHandlingMatch    = RuleGroupOversizeHandling("MATCH")
	RuleGroupOversizeHandlingNoMatch  = RuleGroupOversizeHandling("NO_MATCH")
)

func (RuleGroupOversizeHandling) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupOversizeHandling)(nil)).Elem()
}

func (e RuleGroupOversizeHandling) ToRuleGroupOversizeHandlingOutput() RuleGroupOversizeHandlingOutput {
	return pulumi.ToOutput(e).(RuleGroupOversizeHandlingOutput)
}

func (e RuleGroupOversizeHandling) ToRuleGroupOversizeHandlingOutputWithContext(ctx context.Context) RuleGroupOversizeHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupOversizeHandlingOutput)
}

func (e RuleGroupOversizeHandling) ToRuleGroupOversizeHandlingPtrOutput() RuleGroupOversizeHandlingPtrOutput {
	return e.ToRuleGroupOversizeHandlingPtrOutputWithContext(context.Background())
}

func (e RuleGroupOversizeHandling) ToRuleGroupOversizeHandlingPtrOutputWithContext(ctx context.Context) RuleGroupOversizeHandlingPtrOutput {
	return RuleGroupOversizeHandling(e).ToRuleGroupOversizeHandlingOutputWithContext(ctx).ToRuleGroupOversizeHandlingPtrOutputWithContext(ctx)
}

func (e RuleGroupOversizeHandling) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupOversizeHandling) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupOversizeHandling) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupOversizeHandling) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupOversizeHandlingOutput struct{ *pulumi.OutputState }

func (RuleGroupOversizeHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupOversizeHandling)(nil)).Elem()
}

func (o RuleGroupOversizeHandlingOutput) ToRuleGroupOversizeHandlingOutput() RuleGroupOversizeHandlingOutput {
	return o
}

func (o RuleGroupOversizeHandlingOutput) ToRuleGroupOversizeHandlingOutputWithContext(ctx context.Context) RuleGroupOversizeHandlingOutput {
	return o
}

func (o RuleGroupOversizeHandlingOutput) ToRuleGroupOversizeHandlingPtrOutput() RuleGroupOversizeHandlingPtrOutput {
	return o.ToRuleGroupOversizeHandlingPtrOutputWithContext(context.Background())
}

func (o RuleGroupOversizeHandlingOutput) ToRuleGroupOversizeHandlingPtrOutputWithContext(ctx context.Context) RuleGroupOversizeHandlingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupOversizeHandling) *RuleGroupOversizeHandling {
		return &v
	}).(RuleGroupOversizeHandlingPtrOutput)
}

func (o RuleGroupOversizeHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupOversizeHandling] {
	return pulumix.Output[RuleGroupOversizeHandling]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupOversizeHandlingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupOversizeHandlingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupOversizeHandling) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupOversizeHandlingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupOversizeHandlingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupOversizeHandling) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupOversizeHandlingPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupOversizeHandlingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupOversizeHandling)(nil)).Elem()
}

func (o RuleGroupOversizeHandlingPtrOutput) ToRuleGroupOversizeHandlingPtrOutput() RuleGroupOversizeHandlingPtrOutput {
	return o
}

func (o RuleGroupOversizeHandlingPtrOutput) ToRuleGroupOversizeHandlingPtrOutputWithContext(ctx context.Context) RuleGroupOversizeHandlingPtrOutput {
	return o
}

func (o RuleGroupOversizeHandlingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupOversizeHandling] {
	return pulumix.Output[*RuleGroupOversizeHandling]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupOversizeHandlingPtrOutput) Elem() RuleGroupOversizeHandlingOutput {
	return o.ApplyT(func(v *RuleGroupOversizeHandling) RuleGroupOversizeHandling {
		if v != nil {
			return *v
		}
		var ret RuleGroupOversizeHandling
		return ret
	}).(RuleGroupOversizeHandlingOutput)
}

func (o RuleGroupOversizeHandlingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupOversizeHandlingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupOversizeHandling) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupOversizeHandlingInput is an input type that accepts RuleGroupOversizeHandlingArgs and RuleGroupOversizeHandlingOutput values.
// You can construct a concrete instance of `RuleGroupOversizeHandlingInput` via:
//
//	RuleGroupOversizeHandlingArgs{...}
type RuleGroupOversizeHandlingInput interface {
	pulumi.Input

	ToRuleGroupOversizeHandlingOutput() RuleGroupOversizeHandlingOutput
	ToRuleGroupOversizeHandlingOutputWithContext(context.Context) RuleGroupOversizeHandlingOutput
}

var ruleGroupOversizeHandlingPtrType = reflect.TypeOf((**RuleGroupOversizeHandling)(nil)).Elem()

type RuleGroupOversizeHandlingPtrInput interface {
	pulumi.Input

	ToRuleGroupOversizeHandlingPtrOutput() RuleGroupOversizeHandlingPtrOutput
	ToRuleGroupOversizeHandlingPtrOutputWithContext(context.Context) RuleGroupOversizeHandlingPtrOutput
}

type ruleGroupOversizeHandlingPtr string

func RuleGroupOversizeHandlingPtr(v string) RuleGroupOversizeHandlingPtrInput {
	return (*ruleGroupOversizeHandlingPtr)(&v)
}

func (*ruleGroupOversizeHandlingPtr) ElementType() reflect.Type {
	return ruleGroupOversizeHandlingPtrType
}

func (in *ruleGroupOversizeHandlingPtr) ToRuleGroupOversizeHandlingPtrOutput() RuleGroupOversizeHandlingPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupOversizeHandlingPtrOutput)
}

func (in *ruleGroupOversizeHandlingPtr) ToRuleGroupOversizeHandlingPtrOutputWithContext(ctx context.Context) RuleGroupOversizeHandlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupOversizeHandlingPtrOutput)
}

func (in *ruleGroupOversizeHandlingPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupOversizeHandling] {
	return pulumix.Output[*RuleGroupOversizeHandling]{
		OutputState: in.ToRuleGroupOversizeHandlingPtrOutputWithContext(ctx).OutputState,
	}
}

// Position of the evaluation in the FieldToMatch of request.
type RuleGroupPositionalConstraint string

const (
	RuleGroupPositionalConstraintExactly      = RuleGroupPositionalConstraint("EXACTLY")
	RuleGroupPositionalConstraintStartsWith   = RuleGroupPositionalConstraint("STARTS_WITH")
	RuleGroupPositionalConstraintEndsWith     = RuleGroupPositionalConstraint("ENDS_WITH")
	RuleGroupPositionalConstraintContains     = RuleGroupPositionalConstraint("CONTAINS")
	RuleGroupPositionalConstraintContainsWord = RuleGroupPositionalConstraint("CONTAINS_WORD")
)

func (RuleGroupPositionalConstraint) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupPositionalConstraint)(nil)).Elem()
}

func (e RuleGroupPositionalConstraint) ToRuleGroupPositionalConstraintOutput() RuleGroupPositionalConstraintOutput {
	return pulumi.ToOutput(e).(RuleGroupPositionalConstraintOutput)
}

func (e RuleGroupPositionalConstraint) ToRuleGroupPositionalConstraintOutputWithContext(ctx context.Context) RuleGroupPositionalConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupPositionalConstraintOutput)
}

func (e RuleGroupPositionalConstraint) ToRuleGroupPositionalConstraintPtrOutput() RuleGroupPositionalConstraintPtrOutput {
	return e.ToRuleGroupPositionalConstraintPtrOutputWithContext(context.Background())
}

func (e RuleGroupPositionalConstraint) ToRuleGroupPositionalConstraintPtrOutputWithContext(ctx context.Context) RuleGroupPositionalConstraintPtrOutput {
	return RuleGroupPositionalConstraint(e).ToRuleGroupPositionalConstraintOutputWithContext(ctx).ToRuleGroupPositionalConstraintPtrOutputWithContext(ctx)
}

func (e RuleGroupPositionalConstraint) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupPositionalConstraint) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupPositionalConstraint) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupPositionalConstraint) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupPositionalConstraintOutput struct{ *pulumi.OutputState }

func (RuleGroupPositionalConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupPositionalConstraint)(nil)).Elem()
}

func (o RuleGroupPositionalConstraintOutput) ToRuleGroupPositionalConstraintOutput() RuleGroupPositionalConstraintOutput {
	return o
}

func (o RuleGroupPositionalConstraintOutput) ToRuleGroupPositionalConstraintOutputWithContext(ctx context.Context) RuleGroupPositionalConstraintOutput {
	return o
}

func (o RuleGroupPositionalConstraintOutput) ToRuleGroupPositionalConstraintPtrOutput() RuleGroupPositionalConstraintPtrOutput {
	return o.ToRuleGroupPositionalConstraintPtrOutputWithContext(context.Background())
}

func (o RuleGroupPositionalConstraintOutput) ToRuleGroupPositionalConstraintPtrOutputWithContext(ctx context.Context) RuleGroupPositionalConstraintPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupPositionalConstraint) *RuleGroupPositionalConstraint {
		return &v
	}).(RuleGroupPositionalConstraintPtrOutput)
}

func (o RuleGroupPositionalConstraintOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupPositionalConstraint] {
	return pulumix.Output[RuleGroupPositionalConstraint]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupPositionalConstraintOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupPositionalConstraintOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupPositionalConstraint) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupPositionalConstraintOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupPositionalConstraintOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupPositionalConstraint) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupPositionalConstraintPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupPositionalConstraintPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupPositionalConstraint)(nil)).Elem()
}

func (o RuleGroupPositionalConstraintPtrOutput) ToRuleGroupPositionalConstraintPtrOutput() RuleGroupPositionalConstraintPtrOutput {
	return o
}

func (o RuleGroupPositionalConstraintPtrOutput) ToRuleGroupPositionalConstraintPtrOutputWithContext(ctx context.Context) RuleGroupPositionalConstraintPtrOutput {
	return o
}

func (o RuleGroupPositionalConstraintPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupPositionalConstraint] {
	return pulumix.Output[*RuleGroupPositionalConstraint]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupPositionalConstraintPtrOutput) Elem() RuleGroupPositionalConstraintOutput {
	return o.ApplyT(func(v *RuleGroupPositionalConstraint) RuleGroupPositionalConstraint {
		if v != nil {
			return *v
		}
		var ret RuleGroupPositionalConstraint
		return ret
	}).(RuleGroupPositionalConstraintOutput)
}

func (o RuleGroupPositionalConstraintPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupPositionalConstraintPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupPositionalConstraint) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupPositionalConstraintInput is an input type that accepts RuleGroupPositionalConstraintArgs and RuleGroupPositionalConstraintOutput values.
// You can construct a concrete instance of `RuleGroupPositionalConstraintInput` via:
//
//	RuleGroupPositionalConstraintArgs{...}
type RuleGroupPositionalConstraintInput interface {
	pulumi.Input

	ToRuleGroupPositionalConstraintOutput() RuleGroupPositionalConstraintOutput
	ToRuleGroupPositionalConstraintOutputWithContext(context.Context) RuleGroupPositionalConstraintOutput
}

var ruleGroupPositionalConstraintPtrType = reflect.TypeOf((**RuleGroupPositionalConstraint)(nil)).Elem()

type RuleGroupPositionalConstraintPtrInput interface {
	pulumi.Input

	ToRuleGroupPositionalConstraintPtrOutput() RuleGroupPositionalConstraintPtrOutput
	ToRuleGroupPositionalConstraintPtrOutputWithContext(context.Context) RuleGroupPositionalConstraintPtrOutput
}

type ruleGroupPositionalConstraintPtr string

func RuleGroupPositionalConstraintPtr(v string) RuleGroupPositionalConstraintPtrInput {
	return (*ruleGroupPositionalConstraintPtr)(&v)
}

func (*ruleGroupPositionalConstraintPtr) ElementType() reflect.Type {
	return ruleGroupPositionalConstraintPtrType
}

func (in *ruleGroupPositionalConstraintPtr) ToRuleGroupPositionalConstraintPtrOutput() RuleGroupPositionalConstraintPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupPositionalConstraintPtrOutput)
}

func (in *ruleGroupPositionalConstraintPtr) ToRuleGroupPositionalConstraintPtrOutputWithContext(ctx context.Context) RuleGroupPositionalConstraintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupPositionalConstraintPtrOutput)
}

func (in *ruleGroupPositionalConstraintPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupPositionalConstraint] {
	return pulumix.Output[*RuleGroupPositionalConstraint]{
		OutputState: in.ToRuleGroupPositionalConstraintPtrOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupRateBasedStatementAggregateKeyType string

const (
	RuleGroupRateBasedStatementAggregateKeyTypeIp          = RuleGroupRateBasedStatementAggregateKeyType("IP")
	RuleGroupRateBasedStatementAggregateKeyTypeForwardedIp = RuleGroupRateBasedStatementAggregateKeyType("FORWARDED_IP")
	RuleGroupRateBasedStatementAggregateKeyTypeCustomKeys  = RuleGroupRateBasedStatementAggregateKeyType("CUSTOM_KEYS")
)

func (RuleGroupRateBasedStatementAggregateKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRateBasedStatementAggregateKeyType)(nil)).Elem()
}

func (e RuleGroupRateBasedStatementAggregateKeyType) ToRuleGroupRateBasedStatementAggregateKeyTypeOutput() RuleGroupRateBasedStatementAggregateKeyTypeOutput {
	return pulumi.ToOutput(e).(RuleGroupRateBasedStatementAggregateKeyTypeOutput)
}

func (e RuleGroupRateBasedStatementAggregateKeyType) ToRuleGroupRateBasedStatementAggregateKeyTypeOutputWithContext(ctx context.Context) RuleGroupRateBasedStatementAggregateKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupRateBasedStatementAggregateKeyTypeOutput)
}

func (e RuleGroupRateBasedStatementAggregateKeyType) ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutput() RuleGroupRateBasedStatementAggregateKeyTypePtrOutput {
	return e.ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutputWithContext(context.Background())
}

func (e RuleGroupRateBasedStatementAggregateKeyType) ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutputWithContext(ctx context.Context) RuleGroupRateBasedStatementAggregateKeyTypePtrOutput {
	return RuleGroupRateBasedStatementAggregateKeyType(e).ToRuleGroupRateBasedStatementAggregateKeyTypeOutputWithContext(ctx).ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutputWithContext(ctx)
}

func (e RuleGroupRateBasedStatementAggregateKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupRateBasedStatementAggregateKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupRateBasedStatementAggregateKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupRateBasedStatementAggregateKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupRateBasedStatementAggregateKeyTypeOutput struct{ *pulumi.OutputState }

func (RuleGroupRateBasedStatementAggregateKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRateBasedStatementAggregateKeyType)(nil)).Elem()
}

func (o RuleGroupRateBasedStatementAggregateKeyTypeOutput) ToRuleGroupRateBasedStatementAggregateKeyTypeOutput() RuleGroupRateBasedStatementAggregateKeyTypeOutput {
	return o
}

func (o RuleGroupRateBasedStatementAggregateKeyTypeOutput) ToRuleGroupRateBasedStatementAggregateKeyTypeOutputWithContext(ctx context.Context) RuleGroupRateBasedStatementAggregateKeyTypeOutput {
	return o
}

func (o RuleGroupRateBasedStatementAggregateKeyTypeOutput) ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutput() RuleGroupRateBasedStatementAggregateKeyTypePtrOutput {
	return o.ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutputWithContext(context.Background())
}

func (o RuleGroupRateBasedStatementAggregateKeyTypeOutput) ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutputWithContext(ctx context.Context) RuleGroupRateBasedStatementAggregateKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupRateBasedStatementAggregateKeyType) *RuleGroupRateBasedStatementAggregateKeyType {
		return &v
	}).(RuleGroupRateBasedStatementAggregateKeyTypePtrOutput)
}

func (o RuleGroupRateBasedStatementAggregateKeyTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupRateBasedStatementAggregateKeyType] {
	return pulumix.Output[RuleGroupRateBasedStatementAggregateKeyType]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupRateBasedStatementAggregateKeyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupRateBasedStatementAggregateKeyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupRateBasedStatementAggregateKeyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupRateBasedStatementAggregateKeyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupRateBasedStatementAggregateKeyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupRateBasedStatementAggregateKeyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupRateBasedStatementAggregateKeyTypePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupRateBasedStatementAggregateKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRateBasedStatementAggregateKeyType)(nil)).Elem()
}

func (o RuleGroupRateBasedStatementAggregateKeyTypePtrOutput) ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutput() RuleGroupRateBasedStatementAggregateKeyTypePtrOutput {
	return o
}

func (o RuleGroupRateBasedStatementAggregateKeyTypePtrOutput) ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutputWithContext(ctx context.Context) RuleGroupRateBasedStatementAggregateKeyTypePtrOutput {
	return o
}

func (o RuleGroupRateBasedStatementAggregateKeyTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRateBasedStatementAggregateKeyType] {
	return pulumix.Output[*RuleGroupRateBasedStatementAggregateKeyType]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupRateBasedStatementAggregateKeyTypePtrOutput) Elem() RuleGroupRateBasedStatementAggregateKeyTypeOutput {
	return o.ApplyT(func(v *RuleGroupRateBasedStatementAggregateKeyType) RuleGroupRateBasedStatementAggregateKeyType {
		if v != nil {
			return *v
		}
		var ret RuleGroupRateBasedStatementAggregateKeyType
		return ret
	}).(RuleGroupRateBasedStatementAggregateKeyTypeOutput)
}

func (o RuleGroupRateBasedStatementAggregateKeyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupRateBasedStatementAggregateKeyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupRateBasedStatementAggregateKeyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupRateBasedStatementAggregateKeyTypeInput is an input type that accepts RuleGroupRateBasedStatementAggregateKeyTypeArgs and RuleGroupRateBasedStatementAggregateKeyTypeOutput values.
// You can construct a concrete instance of `RuleGroupRateBasedStatementAggregateKeyTypeInput` via:
//
//	RuleGroupRateBasedStatementAggregateKeyTypeArgs{...}
type RuleGroupRateBasedStatementAggregateKeyTypeInput interface {
	pulumi.Input

	ToRuleGroupRateBasedStatementAggregateKeyTypeOutput() RuleGroupRateBasedStatementAggregateKeyTypeOutput
	ToRuleGroupRateBasedStatementAggregateKeyTypeOutputWithContext(context.Context) RuleGroupRateBasedStatementAggregateKeyTypeOutput
}

var ruleGroupRateBasedStatementAggregateKeyTypePtrType = reflect.TypeOf((**RuleGroupRateBasedStatementAggregateKeyType)(nil)).Elem()

type RuleGroupRateBasedStatementAggregateKeyTypePtrInput interface {
	pulumi.Input

	ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutput() RuleGroupRateBasedStatementAggregateKeyTypePtrOutput
	ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutputWithContext(context.Context) RuleGroupRateBasedStatementAggregateKeyTypePtrOutput
}

type ruleGroupRateBasedStatementAggregateKeyTypePtr string

func RuleGroupRateBasedStatementAggregateKeyTypePtr(v string) RuleGroupRateBasedStatementAggregateKeyTypePtrInput {
	return (*ruleGroupRateBasedStatementAggregateKeyTypePtr)(&v)
}

func (*ruleGroupRateBasedStatementAggregateKeyTypePtr) ElementType() reflect.Type {
	return ruleGroupRateBasedStatementAggregateKeyTypePtrType
}

func (in *ruleGroupRateBasedStatementAggregateKeyTypePtr) ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutput() RuleGroupRateBasedStatementAggregateKeyTypePtrOutput {
	return pulumi.ToOutput(in).(RuleGroupRateBasedStatementAggregateKeyTypePtrOutput)
}

func (in *ruleGroupRateBasedStatementAggregateKeyTypePtr) ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutputWithContext(ctx context.Context) RuleGroupRateBasedStatementAggregateKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupRateBasedStatementAggregateKeyTypePtrOutput)
}

func (in *ruleGroupRateBasedStatementAggregateKeyTypePtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupRateBasedStatementAggregateKeyType] {
	return pulumix.Output[*RuleGroupRateBasedStatementAggregateKeyType]{
		OutputState: in.ToRuleGroupRateBasedStatementAggregateKeyTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Use CLOUDFRONT for CloudFront RuleGroup, use REGIONAL for Application Load Balancer and API Gateway.
type RuleGroupScope string

const (
	RuleGroupScopeCloudfront = RuleGroupScope("CLOUDFRONT")
	RuleGroupScopeRegional   = RuleGroupScope("REGIONAL")
)

func (RuleGroupScope) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupScope)(nil)).Elem()
}

func (e RuleGroupScope) ToRuleGroupScopeOutput() RuleGroupScopeOutput {
	return pulumi.ToOutput(e).(RuleGroupScopeOutput)
}

func (e RuleGroupScope) ToRuleGroupScopeOutputWithContext(ctx context.Context) RuleGroupScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupScopeOutput)
}

func (e RuleGroupScope) ToRuleGroupScopePtrOutput() RuleGroupScopePtrOutput {
	return e.ToRuleGroupScopePtrOutputWithContext(context.Background())
}

func (e RuleGroupScope) ToRuleGroupScopePtrOutputWithContext(ctx context.Context) RuleGroupScopePtrOutput {
	return RuleGroupScope(e).ToRuleGroupScopeOutputWithContext(ctx).ToRuleGroupScopePtrOutputWithContext(ctx)
}

func (e RuleGroupScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupScopeOutput struct{ *pulumi.OutputState }

func (RuleGroupScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupScope)(nil)).Elem()
}

func (o RuleGroupScopeOutput) ToRuleGroupScopeOutput() RuleGroupScopeOutput {
	return o
}

func (o RuleGroupScopeOutput) ToRuleGroupScopeOutputWithContext(ctx context.Context) RuleGroupScopeOutput {
	return o
}

func (o RuleGroupScopeOutput) ToRuleGroupScopePtrOutput() RuleGroupScopePtrOutput {
	return o.ToRuleGroupScopePtrOutputWithContext(context.Background())
}

func (o RuleGroupScopeOutput) ToRuleGroupScopePtrOutputWithContext(ctx context.Context) RuleGroupScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupScope) *RuleGroupScope {
		return &v
	}).(RuleGroupScopePtrOutput)
}

func (o RuleGroupScopeOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupScope] {
	return pulumix.Output[RuleGroupScope]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupScopePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupScope)(nil)).Elem()
}

func (o RuleGroupScopePtrOutput) ToRuleGroupScopePtrOutput() RuleGroupScopePtrOutput {
	return o
}

func (o RuleGroupScopePtrOutput) ToRuleGroupScopePtrOutputWithContext(ctx context.Context) RuleGroupScopePtrOutput {
	return o
}

func (o RuleGroupScopePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupScope] {
	return pulumix.Output[*RuleGroupScope]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupScopePtrOutput) Elem() RuleGroupScopeOutput {
	return o.ApplyT(func(v *RuleGroupScope) RuleGroupScope {
		if v != nil {
			return *v
		}
		var ret RuleGroupScope
		return ret
	}).(RuleGroupScopeOutput)
}

func (o RuleGroupScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupScopeInput is an input type that accepts RuleGroupScopeArgs and RuleGroupScopeOutput values.
// You can construct a concrete instance of `RuleGroupScopeInput` via:
//
//	RuleGroupScopeArgs{...}
type RuleGroupScopeInput interface {
	pulumi.Input

	ToRuleGroupScopeOutput() RuleGroupScopeOutput
	ToRuleGroupScopeOutputWithContext(context.Context) RuleGroupScopeOutput
}

var ruleGroupScopePtrType = reflect.TypeOf((**RuleGroupScope)(nil)).Elem()

type RuleGroupScopePtrInput interface {
	pulumi.Input

	ToRuleGroupScopePtrOutput() RuleGroupScopePtrOutput
	ToRuleGroupScopePtrOutputWithContext(context.Context) RuleGroupScopePtrOutput
}

type ruleGroupScopePtr string

func RuleGroupScopePtr(v string) RuleGroupScopePtrInput {
	return (*ruleGroupScopePtr)(&v)
}

func (*ruleGroupScopePtr) ElementType() reflect.Type {
	return ruleGroupScopePtrType
}

func (in *ruleGroupScopePtr) ToRuleGroupScopePtrOutput() RuleGroupScopePtrOutput {
	return pulumi.ToOutput(in).(RuleGroupScopePtrOutput)
}

func (in *ruleGroupScopePtr) ToRuleGroupScopePtrOutputWithContext(ctx context.Context) RuleGroupScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupScopePtrOutput)
}

func (in *ruleGroupScopePtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupScope] {
	return pulumix.Output[*RuleGroupScope]{
		OutputState: in.ToRuleGroupScopePtrOutputWithContext(ctx).OutputState,
	}
}

// Sensitivity Level current only used for sqli match statements.
type RuleGroupSensitivityLevel string

const (
	RuleGroupSensitivityLevelLow  = RuleGroupSensitivityLevel("LOW")
	RuleGroupSensitivityLevelHigh = RuleGroupSensitivityLevel("HIGH")
)

func (RuleGroupSensitivityLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupSensitivityLevel)(nil)).Elem()
}

func (e RuleGroupSensitivityLevel) ToRuleGroupSensitivityLevelOutput() RuleGroupSensitivityLevelOutput {
	return pulumi.ToOutput(e).(RuleGroupSensitivityLevelOutput)
}

func (e RuleGroupSensitivityLevel) ToRuleGroupSensitivityLevelOutputWithContext(ctx context.Context) RuleGroupSensitivityLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupSensitivityLevelOutput)
}

func (e RuleGroupSensitivityLevel) ToRuleGroupSensitivityLevelPtrOutput() RuleGroupSensitivityLevelPtrOutput {
	return e.ToRuleGroupSensitivityLevelPtrOutputWithContext(context.Background())
}

func (e RuleGroupSensitivityLevel) ToRuleGroupSensitivityLevelPtrOutputWithContext(ctx context.Context) RuleGroupSensitivityLevelPtrOutput {
	return RuleGroupSensitivityLevel(e).ToRuleGroupSensitivityLevelOutputWithContext(ctx).ToRuleGroupSensitivityLevelPtrOutputWithContext(ctx)
}

func (e RuleGroupSensitivityLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupSensitivityLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupSensitivityLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupSensitivityLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupSensitivityLevelOutput struct{ *pulumi.OutputState }

func (RuleGroupSensitivityLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupSensitivityLevel)(nil)).Elem()
}

func (o RuleGroupSensitivityLevelOutput) ToRuleGroupSensitivityLevelOutput() RuleGroupSensitivityLevelOutput {
	return o
}

func (o RuleGroupSensitivityLevelOutput) ToRuleGroupSensitivityLevelOutputWithContext(ctx context.Context) RuleGroupSensitivityLevelOutput {
	return o
}

func (o RuleGroupSensitivityLevelOutput) ToRuleGroupSensitivityLevelPtrOutput() RuleGroupSensitivityLevelPtrOutput {
	return o.ToRuleGroupSensitivityLevelPtrOutputWithContext(context.Background())
}

func (o RuleGroupSensitivityLevelOutput) ToRuleGroupSensitivityLevelPtrOutputWithContext(ctx context.Context) RuleGroupSensitivityLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupSensitivityLevel) *RuleGroupSensitivityLevel {
		return &v
	}).(RuleGroupSensitivityLevelPtrOutput)
}

func (o RuleGroupSensitivityLevelOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupSensitivityLevel] {
	return pulumix.Output[RuleGroupSensitivityLevel]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupSensitivityLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupSensitivityLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupSensitivityLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupSensitivityLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupSensitivityLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupSensitivityLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupSensitivityLevelPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupSensitivityLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupSensitivityLevel)(nil)).Elem()
}

func (o RuleGroupSensitivityLevelPtrOutput) ToRuleGroupSensitivityLevelPtrOutput() RuleGroupSensitivityLevelPtrOutput {
	return o
}

func (o RuleGroupSensitivityLevelPtrOutput) ToRuleGroupSensitivityLevelPtrOutputWithContext(ctx context.Context) RuleGroupSensitivityLevelPtrOutput {
	return o
}

func (o RuleGroupSensitivityLevelPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupSensitivityLevel] {
	return pulumix.Output[*RuleGroupSensitivityLevel]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupSensitivityLevelPtrOutput) Elem() RuleGroupSensitivityLevelOutput {
	return o.ApplyT(func(v *RuleGroupSensitivityLevel) RuleGroupSensitivityLevel {
		if v != nil {
			return *v
		}
		var ret RuleGroupSensitivityLevel
		return ret
	}).(RuleGroupSensitivityLevelOutput)
}

func (o RuleGroupSensitivityLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupSensitivityLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupSensitivityLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupSensitivityLevelInput is an input type that accepts RuleGroupSensitivityLevelArgs and RuleGroupSensitivityLevelOutput values.
// You can construct a concrete instance of `RuleGroupSensitivityLevelInput` via:
//
//	RuleGroupSensitivityLevelArgs{...}
type RuleGroupSensitivityLevelInput interface {
	pulumi.Input

	ToRuleGroupSensitivityLevelOutput() RuleGroupSensitivityLevelOutput
	ToRuleGroupSensitivityLevelOutputWithContext(context.Context) RuleGroupSensitivityLevelOutput
}

var ruleGroupSensitivityLevelPtrType = reflect.TypeOf((**RuleGroupSensitivityLevel)(nil)).Elem()

type RuleGroupSensitivityLevelPtrInput interface {
	pulumi.Input

	ToRuleGroupSensitivityLevelPtrOutput() RuleGroupSensitivityLevelPtrOutput
	ToRuleGroupSensitivityLevelPtrOutputWithContext(context.Context) RuleGroupSensitivityLevelPtrOutput
}

type ruleGroupSensitivityLevelPtr string

func RuleGroupSensitivityLevelPtr(v string) RuleGroupSensitivityLevelPtrInput {
	return (*ruleGroupSensitivityLevelPtr)(&v)
}

func (*ruleGroupSensitivityLevelPtr) ElementType() reflect.Type {
	return ruleGroupSensitivityLevelPtrType
}

func (in *ruleGroupSensitivityLevelPtr) ToRuleGroupSensitivityLevelPtrOutput() RuleGroupSensitivityLevelPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupSensitivityLevelPtrOutput)
}

func (in *ruleGroupSensitivityLevelPtr) ToRuleGroupSensitivityLevelPtrOutputWithContext(ctx context.Context) RuleGroupSensitivityLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupSensitivityLevelPtrOutput)
}

func (in *ruleGroupSensitivityLevelPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupSensitivityLevel] {
	return pulumix.Output[*RuleGroupSensitivityLevel]{
		OutputState: in.ToRuleGroupSensitivityLevelPtrOutputWithContext(ctx).OutputState,
	}
}

type RuleGroupSizeConstraintStatementComparisonOperator string

const (
	RuleGroupSizeConstraintStatementComparisonOperatorEq = RuleGroupSizeConstraintStatementComparisonOperator("EQ")
	RuleGroupSizeConstraintStatementComparisonOperatorNe = RuleGroupSizeConstraintStatementComparisonOperator("NE")
	RuleGroupSizeConstraintStatementComparisonOperatorLe = RuleGroupSizeConstraintStatementComparisonOperator("LE")
	RuleGroupSizeConstraintStatementComparisonOperatorLt = RuleGroupSizeConstraintStatementComparisonOperator("LT")
	RuleGroupSizeConstraintStatementComparisonOperatorGe = RuleGroupSizeConstraintStatementComparisonOperator("GE")
	RuleGroupSizeConstraintStatementComparisonOperatorGt = RuleGroupSizeConstraintStatementComparisonOperator("GT")
)

func (RuleGroupSizeConstraintStatementComparisonOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupSizeConstraintStatementComparisonOperator)(nil)).Elem()
}

func (e RuleGroupSizeConstraintStatementComparisonOperator) ToRuleGroupSizeConstraintStatementComparisonOperatorOutput() RuleGroupSizeConstraintStatementComparisonOperatorOutput {
	return pulumi.ToOutput(e).(RuleGroupSizeConstraintStatementComparisonOperatorOutput)
}

func (e RuleGroupSizeConstraintStatementComparisonOperator) ToRuleGroupSizeConstraintStatementComparisonOperatorOutputWithContext(ctx context.Context) RuleGroupSizeConstraintStatementComparisonOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupSizeConstraintStatementComparisonOperatorOutput)
}

func (e RuleGroupSizeConstraintStatementComparisonOperator) ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutput() RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput {
	return e.ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutputWithContext(context.Background())
}

func (e RuleGroupSizeConstraintStatementComparisonOperator) ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutputWithContext(ctx context.Context) RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput {
	return RuleGroupSizeConstraintStatementComparisonOperator(e).ToRuleGroupSizeConstraintStatementComparisonOperatorOutputWithContext(ctx).ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutputWithContext(ctx)
}

func (e RuleGroupSizeConstraintStatementComparisonOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupSizeConstraintStatementComparisonOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupSizeConstraintStatementComparisonOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupSizeConstraintStatementComparisonOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupSizeConstraintStatementComparisonOperatorOutput struct{ *pulumi.OutputState }

func (RuleGroupSizeConstraintStatementComparisonOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupSizeConstraintStatementComparisonOperator)(nil)).Elem()
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorOutput) ToRuleGroupSizeConstraintStatementComparisonOperatorOutput() RuleGroupSizeConstraintStatementComparisonOperatorOutput {
	return o
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorOutput) ToRuleGroupSizeConstraintStatementComparisonOperatorOutputWithContext(ctx context.Context) RuleGroupSizeConstraintStatementComparisonOperatorOutput {
	return o
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorOutput) ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutput() RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput {
	return o.ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutputWithContext(context.Background())
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorOutput) ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutputWithContext(ctx context.Context) RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupSizeConstraintStatementComparisonOperator) *RuleGroupSizeConstraintStatementComparisonOperator {
		return &v
	}).(RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput)
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupSizeConstraintStatementComparisonOperator] {
	return pulumix.Output[RuleGroupSizeConstraintStatementComparisonOperator]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupSizeConstraintStatementComparisonOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupSizeConstraintStatementComparisonOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupSizeConstraintStatementComparisonOperator)(nil)).Elem()
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput) ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutput() RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput {
	return o
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput) ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutputWithContext(ctx context.Context) RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput {
	return o
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupSizeConstraintStatementComparisonOperator] {
	return pulumix.Output[*RuleGroupSizeConstraintStatementComparisonOperator]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput) Elem() RuleGroupSizeConstraintStatementComparisonOperatorOutput {
	return o.ApplyT(func(v *RuleGroupSizeConstraintStatementComparisonOperator) RuleGroupSizeConstraintStatementComparisonOperator {
		if v != nil {
			return *v
		}
		var ret RuleGroupSizeConstraintStatementComparisonOperator
		return ret
	}).(RuleGroupSizeConstraintStatementComparisonOperatorOutput)
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupSizeConstraintStatementComparisonOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupSizeConstraintStatementComparisonOperatorInput is an input type that accepts RuleGroupSizeConstraintStatementComparisonOperatorArgs and RuleGroupSizeConstraintStatementComparisonOperatorOutput values.
// You can construct a concrete instance of `RuleGroupSizeConstraintStatementComparisonOperatorInput` via:
//
//	RuleGroupSizeConstraintStatementComparisonOperatorArgs{...}
type RuleGroupSizeConstraintStatementComparisonOperatorInput interface {
	pulumi.Input

	ToRuleGroupSizeConstraintStatementComparisonOperatorOutput() RuleGroupSizeConstraintStatementComparisonOperatorOutput
	ToRuleGroupSizeConstraintStatementComparisonOperatorOutputWithContext(context.Context) RuleGroupSizeConstraintStatementComparisonOperatorOutput
}

var ruleGroupSizeConstraintStatementComparisonOperatorPtrType = reflect.TypeOf((**RuleGroupSizeConstraintStatementComparisonOperator)(nil)).Elem()

type RuleGroupSizeConstraintStatementComparisonOperatorPtrInput interface {
	pulumi.Input

	ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutput() RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput
	ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutputWithContext(context.Context) RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput
}

type ruleGroupSizeConstraintStatementComparisonOperatorPtr string

func RuleGroupSizeConstraintStatementComparisonOperatorPtr(v string) RuleGroupSizeConstraintStatementComparisonOperatorPtrInput {
	return (*ruleGroupSizeConstraintStatementComparisonOperatorPtr)(&v)
}

func (*ruleGroupSizeConstraintStatementComparisonOperatorPtr) ElementType() reflect.Type {
	return ruleGroupSizeConstraintStatementComparisonOperatorPtrType
}

func (in *ruleGroupSizeConstraintStatementComparisonOperatorPtr) ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutput() RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput {
	return pulumi.ToOutput(in).(RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput)
}

func (in *ruleGroupSizeConstraintStatementComparisonOperatorPtr) ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutputWithContext(ctx context.Context) RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput)
}

func (in *ruleGroupSizeConstraintStatementComparisonOperatorPtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupSizeConstraintStatementComparisonOperator] {
	return pulumix.Output[*RuleGroupSizeConstraintStatementComparisonOperator]{
		OutputState: in.ToRuleGroupSizeConstraintStatementComparisonOperatorPtrOutputWithContext(ctx).OutputState,
	}
}

// Type of text transformation.
type RuleGroupTextTransformationType string

const (
	RuleGroupTextTransformationTypeNone               = RuleGroupTextTransformationType("NONE")
	RuleGroupTextTransformationTypeCompressWhiteSpace = RuleGroupTextTransformationType("COMPRESS_WHITE_SPACE")
	RuleGroupTextTransformationTypeHtmlEntityDecode   = RuleGroupTextTransformationType("HTML_ENTITY_DECODE")
	RuleGroupTextTransformationTypeLowercase          = RuleGroupTextTransformationType("LOWERCASE")
	RuleGroupTextTransformationTypeCmdLine            = RuleGroupTextTransformationType("CMD_LINE")
	RuleGroupTextTransformationTypeUrlDecode          = RuleGroupTextTransformationType("URL_DECODE")
	RuleGroupTextTransformationTypeBase64Decode       = RuleGroupTextTransformationType("BASE64_DECODE")
	RuleGroupTextTransformationTypeHexDecode          = RuleGroupTextTransformationType("HEX_DECODE")
	RuleGroupTextTransformationTypeMd5                = RuleGroupTextTransformationType("MD5")
	RuleGroupTextTransformationTypeReplaceComments    = RuleGroupTextTransformationType("REPLACE_COMMENTS")
	RuleGroupTextTransformationTypeEscapeSeqDecode    = RuleGroupTextTransformationType("ESCAPE_SEQ_DECODE")
	RuleGroupTextTransformationTypeSqlHexDecode       = RuleGroupTextTransformationType("SQL_HEX_DECODE")
	RuleGroupTextTransformationTypeCssDecode          = RuleGroupTextTransformationType("CSS_DECODE")
	RuleGroupTextTransformationTypeJsDecode           = RuleGroupTextTransformationType("JS_DECODE")
	RuleGroupTextTransformationTypeNormalizePath      = RuleGroupTextTransformationType("NORMALIZE_PATH")
	RuleGroupTextTransformationTypeNormalizePathWin   = RuleGroupTextTransformationType("NORMALIZE_PATH_WIN")
	RuleGroupTextTransformationTypeRemoveNulls        = RuleGroupTextTransformationType("REMOVE_NULLS")
	RuleGroupTextTransformationTypeReplaceNulls       = RuleGroupTextTransformationType("REPLACE_NULLS")
	RuleGroupTextTransformationTypeBase64DecodeExt    = RuleGroupTextTransformationType("BASE64_DECODE_EXT")
	RuleGroupTextTransformationTypeUrlDecodeUni       = RuleGroupTextTransformationType("URL_DECODE_UNI")
	RuleGroupTextTransformationTypeUtf8ToUnicode      = RuleGroupTextTransformationType("UTF8_TO_UNICODE")
)

func (RuleGroupTextTransformationType) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTextTransformationType)(nil)).Elem()
}

func (e RuleGroupTextTransformationType) ToRuleGroupTextTransformationTypeOutput() RuleGroupTextTransformationTypeOutput {
	return pulumi.ToOutput(e).(RuleGroupTextTransformationTypeOutput)
}

func (e RuleGroupTextTransformationType) ToRuleGroupTextTransformationTypeOutputWithContext(ctx context.Context) RuleGroupTextTransformationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RuleGroupTextTransformationTypeOutput)
}

func (e RuleGroupTextTransformationType) ToRuleGroupTextTransformationTypePtrOutput() RuleGroupTextTransformationTypePtrOutput {
	return e.ToRuleGroupTextTransformationTypePtrOutputWithContext(context.Background())
}

func (e RuleGroupTextTransformationType) ToRuleGroupTextTransformationTypePtrOutputWithContext(ctx context.Context) RuleGroupTextTransformationTypePtrOutput {
	return RuleGroupTextTransformationType(e).ToRuleGroupTextTransformationTypeOutputWithContext(ctx).ToRuleGroupTextTransformationTypePtrOutputWithContext(ctx)
}

func (e RuleGroupTextTransformationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupTextTransformationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RuleGroupTextTransformationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RuleGroupTextTransformationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RuleGroupTextTransformationTypeOutput struct{ *pulumi.OutputState }

func (RuleGroupTextTransformationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTextTransformationType)(nil)).Elem()
}

func (o RuleGroupTextTransformationTypeOutput) ToRuleGroupTextTransformationTypeOutput() RuleGroupTextTransformationTypeOutput {
	return o
}

func (o RuleGroupTextTransformationTypeOutput) ToRuleGroupTextTransformationTypeOutputWithContext(ctx context.Context) RuleGroupTextTransformationTypeOutput {
	return o
}

func (o RuleGroupTextTransformationTypeOutput) ToRuleGroupTextTransformationTypePtrOutput() RuleGroupTextTransformationTypePtrOutput {
	return o.ToRuleGroupTextTransformationTypePtrOutputWithContext(context.Background())
}

func (o RuleGroupTextTransformationTypeOutput) ToRuleGroupTextTransformationTypePtrOutputWithContext(ctx context.Context) RuleGroupTextTransformationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupTextTransformationType) *RuleGroupTextTransformationType {
		return &v
	}).(RuleGroupTextTransformationTypePtrOutput)
}

func (o RuleGroupTextTransformationTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RuleGroupTextTransformationType] {
	return pulumix.Output[RuleGroupTextTransformationType]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupTextTransformationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RuleGroupTextTransformationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupTextTransformationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RuleGroupTextTransformationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTextTransformationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RuleGroupTextTransformationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RuleGroupTextTransformationTypePtrOutput struct{ *pulumi.OutputState }

func (RuleGroupTextTransformationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupTextTransformationType)(nil)).Elem()
}

func (o RuleGroupTextTransformationTypePtrOutput) ToRuleGroupTextTransformationTypePtrOutput() RuleGroupTextTransformationTypePtrOutput {
	return o
}

func (o RuleGroupTextTransformationTypePtrOutput) ToRuleGroupTextTransformationTypePtrOutputWithContext(ctx context.Context) RuleGroupTextTransformationTypePtrOutput {
	return o
}

func (o RuleGroupTextTransformationTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupTextTransformationType] {
	return pulumix.Output[*RuleGroupTextTransformationType]{
		OutputState: o.OutputState,
	}
}

func (o RuleGroupTextTransformationTypePtrOutput) Elem() RuleGroupTextTransformationTypeOutput {
	return o.ApplyT(func(v *RuleGroupTextTransformationType) RuleGroupTextTransformationType {
		if v != nil {
			return *v
		}
		var ret RuleGroupTextTransformationType
		return ret
	}).(RuleGroupTextTransformationTypeOutput)
}

func (o RuleGroupTextTransformationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RuleGroupTextTransformationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RuleGroupTextTransformationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RuleGroupTextTransformationTypeInput is an input type that accepts RuleGroupTextTransformationTypeArgs and RuleGroupTextTransformationTypeOutput values.
// You can construct a concrete instance of `RuleGroupTextTransformationTypeInput` via:
//
//	RuleGroupTextTransformationTypeArgs{...}
type RuleGroupTextTransformationTypeInput interface {
	pulumi.Input

	ToRuleGroupTextTransformationTypeOutput() RuleGroupTextTransformationTypeOutput
	ToRuleGroupTextTransformationTypeOutputWithContext(context.Context) RuleGroupTextTransformationTypeOutput
}

var ruleGroupTextTransformationTypePtrType = reflect.TypeOf((**RuleGroupTextTransformationType)(nil)).Elem()

type RuleGroupTextTransformationTypePtrInput interface {
	pulumi.Input

	ToRuleGroupTextTransformationTypePtrOutput() RuleGroupTextTransformationTypePtrOutput
	ToRuleGroupTextTransformationTypePtrOutputWithContext(context.Context) RuleGroupTextTransformationTypePtrOutput
}

type ruleGroupTextTransformationTypePtr string

func RuleGroupTextTransformationTypePtr(v string) RuleGroupTextTransformationTypePtrInput {
	return (*ruleGroupTextTransformationTypePtr)(&v)
}

func (*ruleGroupTextTransformationTypePtr) ElementType() reflect.Type {
	return ruleGroupTextTransformationTypePtrType
}

func (in *ruleGroupTextTransformationTypePtr) ToRuleGroupTextTransformationTypePtrOutput() RuleGroupTextTransformationTypePtrOutput {
	return pulumi.ToOutput(in).(RuleGroupTextTransformationTypePtrOutput)
}

func (in *ruleGroupTextTransformationTypePtr) ToRuleGroupTextTransformationTypePtrOutputWithContext(ctx context.Context) RuleGroupTextTransformationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RuleGroupTextTransformationTypePtrOutput)
}

func (in *ruleGroupTextTransformationTypePtr) ToOutput(ctx context.Context) pulumix.Output[*RuleGroupTextTransformationType] {
	return pulumix.Output[*RuleGroupTextTransformationType]{
		OutputState: in.ToRuleGroupTextTransformationTypePtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclAwsManagedRulesBotControlRuleSetInspectionLevel string

const (
	WebAclAwsManagedRulesBotControlRuleSetInspectionLevelCommon   = WebAclAwsManagedRulesBotControlRuleSetInspectionLevel("COMMON")
	WebAclAwsManagedRulesBotControlRuleSetInspectionLevelTargeted = WebAclAwsManagedRulesBotControlRuleSetInspectionLevel("TARGETED")
)

func (WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclAwsManagedRulesBotControlRuleSetInspectionLevel)(nil)).Elem()
}

func (e WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput() WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput {
	return pulumi.ToOutput(e).(WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput)
}

func (e WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutputWithContext(ctx context.Context) WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput)
}

func (e WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput() WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput {
	return e.ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutputWithContext(context.Background())
}

func (e WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutputWithContext(ctx context.Context) WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput {
	return WebAclAwsManagedRulesBotControlRuleSetInspectionLevel(e).ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutputWithContext(ctx).ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutputWithContext(ctx)
}

func (e WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput struct{ *pulumi.OutputState }

func (WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclAwsManagedRulesBotControlRuleSetInspectionLevel)(nil)).Elem()
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput) ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput() WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput {
	return o
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput) ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutputWithContext(ctx context.Context) WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput {
	return o
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput) ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput() WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput {
	return o.ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutputWithContext(context.Background())
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput) ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutputWithContext(ctx context.Context) WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) *WebAclAwsManagedRulesBotControlRuleSetInspectionLevel {
		return &v
	}).(WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput)
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclAwsManagedRulesBotControlRuleSetInspectionLevel] {
	return pulumix.Output[WebAclAwsManagedRulesBotControlRuleSetInspectionLevel]{
		OutputState: o.OutputState,
	}
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput struct{ *pulumi.OutputState }

func (WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclAwsManagedRulesBotControlRuleSetInspectionLevel)(nil)).Elem()
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput) ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput() WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput {
	return o
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput) ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutputWithContext(ctx context.Context) WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput {
	return o
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclAwsManagedRulesBotControlRuleSetInspectionLevel] {
	return pulumix.Output[*WebAclAwsManagedRulesBotControlRuleSetInspectionLevel]{
		OutputState: o.OutputState,
	}
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput) Elem() WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput {
	return o.ApplyT(func(v *WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) WebAclAwsManagedRulesBotControlRuleSetInspectionLevel {
		if v != nil {
			return *v
		}
		var ret WebAclAwsManagedRulesBotControlRuleSetInspectionLevel
		return ret
	}).(WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput)
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclAwsManagedRulesBotControlRuleSetInspectionLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclAwsManagedRulesBotControlRuleSetInspectionLevelInput is an input type that accepts WebAclAwsManagedRulesBotControlRuleSetInspectionLevelArgs and WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput values.
// You can construct a concrete instance of `WebAclAwsManagedRulesBotControlRuleSetInspectionLevelInput` via:
//
//	WebAclAwsManagedRulesBotControlRuleSetInspectionLevelArgs{...}
type WebAclAwsManagedRulesBotControlRuleSetInspectionLevelInput interface {
	pulumi.Input

	ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput() WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput
	ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutputWithContext(context.Context) WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput
}

var webAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrType = reflect.TypeOf((**WebAclAwsManagedRulesBotControlRuleSetInspectionLevel)(nil)).Elem()

type WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrInput interface {
	pulumi.Input

	ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput() WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput
	ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutputWithContext(context.Context) WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput
}

type webAclAwsManagedRulesBotControlRuleSetInspectionLevelPtr string

func WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtr(v string) WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrInput {
	return (*webAclAwsManagedRulesBotControlRuleSetInspectionLevelPtr)(&v)
}

func (*webAclAwsManagedRulesBotControlRuleSetInspectionLevelPtr) ElementType() reflect.Type {
	return webAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrType
}

func (in *webAclAwsManagedRulesBotControlRuleSetInspectionLevelPtr) ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput() WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput {
	return pulumi.ToOutput(in).(WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput)
}

func (in *webAclAwsManagedRulesBotControlRuleSetInspectionLevelPtr) ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutputWithContext(ctx context.Context) WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput)
}

func (in *webAclAwsManagedRulesBotControlRuleSetInspectionLevelPtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclAwsManagedRulesBotControlRuleSetInspectionLevel] {
	return pulumix.Output[*WebAclAwsManagedRulesBotControlRuleSetInspectionLevel]{
		OutputState: in.ToWebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutputWithContext(ctx).OutputState,
	}
}

// The inspection behavior to fall back to if the JSON in the request body is invalid.
type WebAclBodyParsingFallbackBehavior string

const (
	WebAclBodyParsingFallbackBehaviorMatch            = WebAclBodyParsingFallbackBehavior("MATCH")
	WebAclBodyParsingFallbackBehaviorNoMatch          = WebAclBodyParsingFallbackBehavior("NO_MATCH")
	WebAclBodyParsingFallbackBehaviorEvaluateAsString = WebAclBodyParsingFallbackBehavior("EVALUATE_AS_STRING")
)

func (WebAclBodyParsingFallbackBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclBodyParsingFallbackBehavior)(nil)).Elem()
}

func (e WebAclBodyParsingFallbackBehavior) ToWebAclBodyParsingFallbackBehaviorOutput() WebAclBodyParsingFallbackBehaviorOutput {
	return pulumi.ToOutput(e).(WebAclBodyParsingFallbackBehaviorOutput)
}

func (e WebAclBodyParsingFallbackBehavior) ToWebAclBodyParsingFallbackBehaviorOutputWithContext(ctx context.Context) WebAclBodyParsingFallbackBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclBodyParsingFallbackBehaviorOutput)
}

func (e WebAclBodyParsingFallbackBehavior) ToWebAclBodyParsingFallbackBehaviorPtrOutput() WebAclBodyParsingFallbackBehaviorPtrOutput {
	return e.ToWebAclBodyParsingFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (e WebAclBodyParsingFallbackBehavior) ToWebAclBodyParsingFallbackBehaviorPtrOutputWithContext(ctx context.Context) WebAclBodyParsingFallbackBehaviorPtrOutput {
	return WebAclBodyParsingFallbackBehavior(e).ToWebAclBodyParsingFallbackBehaviorOutputWithContext(ctx).ToWebAclBodyParsingFallbackBehaviorPtrOutputWithContext(ctx)
}

func (e WebAclBodyParsingFallbackBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclBodyParsingFallbackBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclBodyParsingFallbackBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclBodyParsingFallbackBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclBodyParsingFallbackBehaviorOutput struct{ *pulumi.OutputState }

func (WebAclBodyParsingFallbackBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclBodyParsingFallbackBehavior)(nil)).Elem()
}

func (o WebAclBodyParsingFallbackBehaviorOutput) ToWebAclBodyParsingFallbackBehaviorOutput() WebAclBodyParsingFallbackBehaviorOutput {
	return o
}

func (o WebAclBodyParsingFallbackBehaviorOutput) ToWebAclBodyParsingFallbackBehaviorOutputWithContext(ctx context.Context) WebAclBodyParsingFallbackBehaviorOutput {
	return o
}

func (o WebAclBodyParsingFallbackBehaviorOutput) ToWebAclBodyParsingFallbackBehaviorPtrOutput() WebAclBodyParsingFallbackBehaviorPtrOutput {
	return o.ToWebAclBodyParsingFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (o WebAclBodyParsingFallbackBehaviorOutput) ToWebAclBodyParsingFallbackBehaviorPtrOutputWithContext(ctx context.Context) WebAclBodyParsingFallbackBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclBodyParsingFallbackBehavior) *WebAclBodyParsingFallbackBehavior {
		return &v
	}).(WebAclBodyParsingFallbackBehaviorPtrOutput)
}

func (o WebAclBodyParsingFallbackBehaviorOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclBodyParsingFallbackBehavior] {
	return pulumix.Output[WebAclBodyParsingFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o WebAclBodyParsingFallbackBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclBodyParsingFallbackBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclBodyParsingFallbackBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclBodyParsingFallbackBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclBodyParsingFallbackBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclBodyParsingFallbackBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclBodyParsingFallbackBehaviorPtrOutput struct{ *pulumi.OutputState }

func (WebAclBodyParsingFallbackBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclBodyParsingFallbackBehavior)(nil)).Elem()
}

func (o WebAclBodyParsingFallbackBehaviorPtrOutput) ToWebAclBodyParsingFallbackBehaviorPtrOutput() WebAclBodyParsingFallbackBehaviorPtrOutput {
	return o
}

func (o WebAclBodyParsingFallbackBehaviorPtrOutput) ToWebAclBodyParsingFallbackBehaviorPtrOutputWithContext(ctx context.Context) WebAclBodyParsingFallbackBehaviorPtrOutput {
	return o
}

func (o WebAclBodyParsingFallbackBehaviorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclBodyParsingFallbackBehavior] {
	return pulumix.Output[*WebAclBodyParsingFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o WebAclBodyParsingFallbackBehaviorPtrOutput) Elem() WebAclBodyParsingFallbackBehaviorOutput {
	return o.ApplyT(func(v *WebAclBodyParsingFallbackBehavior) WebAclBodyParsingFallbackBehavior {
		if v != nil {
			return *v
		}
		var ret WebAclBodyParsingFallbackBehavior
		return ret
	}).(WebAclBodyParsingFallbackBehaviorOutput)
}

func (o WebAclBodyParsingFallbackBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclBodyParsingFallbackBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclBodyParsingFallbackBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclBodyParsingFallbackBehaviorInput is an input type that accepts WebAclBodyParsingFallbackBehaviorArgs and WebAclBodyParsingFallbackBehaviorOutput values.
// You can construct a concrete instance of `WebAclBodyParsingFallbackBehaviorInput` via:
//
//	WebAclBodyParsingFallbackBehaviorArgs{...}
type WebAclBodyParsingFallbackBehaviorInput interface {
	pulumi.Input

	ToWebAclBodyParsingFallbackBehaviorOutput() WebAclBodyParsingFallbackBehaviorOutput
	ToWebAclBodyParsingFallbackBehaviorOutputWithContext(context.Context) WebAclBodyParsingFallbackBehaviorOutput
}

var webAclBodyParsingFallbackBehaviorPtrType = reflect.TypeOf((**WebAclBodyParsingFallbackBehavior)(nil)).Elem()

type WebAclBodyParsingFallbackBehaviorPtrInput interface {
	pulumi.Input

	ToWebAclBodyParsingFallbackBehaviorPtrOutput() WebAclBodyParsingFallbackBehaviorPtrOutput
	ToWebAclBodyParsingFallbackBehaviorPtrOutputWithContext(context.Context) WebAclBodyParsingFallbackBehaviorPtrOutput
}

type webAclBodyParsingFallbackBehaviorPtr string

func WebAclBodyParsingFallbackBehaviorPtr(v string) WebAclBodyParsingFallbackBehaviorPtrInput {
	return (*webAclBodyParsingFallbackBehaviorPtr)(&v)
}

func (*webAclBodyParsingFallbackBehaviorPtr) ElementType() reflect.Type {
	return webAclBodyParsingFallbackBehaviorPtrType
}

func (in *webAclBodyParsingFallbackBehaviorPtr) ToWebAclBodyParsingFallbackBehaviorPtrOutput() WebAclBodyParsingFallbackBehaviorPtrOutput {
	return pulumi.ToOutput(in).(WebAclBodyParsingFallbackBehaviorPtrOutput)
}

func (in *webAclBodyParsingFallbackBehaviorPtr) ToWebAclBodyParsingFallbackBehaviorPtrOutputWithContext(ctx context.Context) WebAclBodyParsingFallbackBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclBodyParsingFallbackBehaviorPtrOutput)
}

func (in *webAclBodyParsingFallbackBehaviorPtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclBodyParsingFallbackBehavior] {
	return pulumix.Output[*WebAclBodyParsingFallbackBehavior]{
		OutputState: in.ToWebAclBodyParsingFallbackBehaviorPtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclForwardedIpConfigurationFallbackBehavior string

const (
	WebAclForwardedIpConfigurationFallbackBehaviorMatch   = WebAclForwardedIpConfigurationFallbackBehavior("MATCH")
	WebAclForwardedIpConfigurationFallbackBehaviorNoMatch = WebAclForwardedIpConfigurationFallbackBehavior("NO_MATCH")
)

func (WebAclForwardedIpConfigurationFallbackBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclForwardedIpConfigurationFallbackBehavior)(nil)).Elem()
}

func (e WebAclForwardedIpConfigurationFallbackBehavior) ToWebAclForwardedIpConfigurationFallbackBehaviorOutput() WebAclForwardedIpConfigurationFallbackBehaviorOutput {
	return pulumi.ToOutput(e).(WebAclForwardedIpConfigurationFallbackBehaviorOutput)
}

func (e WebAclForwardedIpConfigurationFallbackBehavior) ToWebAclForwardedIpConfigurationFallbackBehaviorOutputWithContext(ctx context.Context) WebAclForwardedIpConfigurationFallbackBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclForwardedIpConfigurationFallbackBehaviorOutput)
}

func (e WebAclForwardedIpConfigurationFallbackBehavior) ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutput() WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return e.ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (e WebAclForwardedIpConfigurationFallbackBehavior) ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return WebAclForwardedIpConfigurationFallbackBehavior(e).ToWebAclForwardedIpConfigurationFallbackBehaviorOutputWithContext(ctx).ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx)
}

func (e WebAclForwardedIpConfigurationFallbackBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclForwardedIpConfigurationFallbackBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclForwardedIpConfigurationFallbackBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclForwardedIpConfigurationFallbackBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclForwardedIpConfigurationFallbackBehaviorOutput struct{ *pulumi.OutputState }

func (WebAclForwardedIpConfigurationFallbackBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclForwardedIpConfigurationFallbackBehavior)(nil)).Elem()
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorOutput) ToWebAclForwardedIpConfigurationFallbackBehaviorOutput() WebAclForwardedIpConfigurationFallbackBehaviorOutput {
	return o
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorOutput) ToWebAclForwardedIpConfigurationFallbackBehaviorOutputWithContext(ctx context.Context) WebAclForwardedIpConfigurationFallbackBehaviorOutput {
	return o
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorOutput) ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutput() WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o.ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorOutput) ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclForwardedIpConfigurationFallbackBehavior) *WebAclForwardedIpConfigurationFallbackBehavior {
		return &v
	}).(WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput)
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclForwardedIpConfigurationFallbackBehavior] {
	return pulumix.Output[WebAclForwardedIpConfigurationFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclForwardedIpConfigurationFallbackBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclForwardedIpConfigurationFallbackBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput struct{ *pulumi.OutputState }

func (WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclForwardedIpConfigurationFallbackBehavior)(nil)).Elem()
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput) ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutput() WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput) ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclForwardedIpConfigurationFallbackBehavior] {
	return pulumix.Output[*WebAclForwardedIpConfigurationFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput) Elem() WebAclForwardedIpConfigurationFallbackBehaviorOutput {
	return o.ApplyT(func(v *WebAclForwardedIpConfigurationFallbackBehavior) WebAclForwardedIpConfigurationFallbackBehavior {
		if v != nil {
			return *v
		}
		var ret WebAclForwardedIpConfigurationFallbackBehavior
		return ret
	}).(WebAclForwardedIpConfigurationFallbackBehaviorOutput)
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclForwardedIpConfigurationFallbackBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclForwardedIpConfigurationFallbackBehaviorInput is an input type that accepts WebAclForwardedIpConfigurationFallbackBehaviorArgs and WebAclForwardedIpConfigurationFallbackBehaviorOutput values.
// You can construct a concrete instance of `WebAclForwardedIpConfigurationFallbackBehaviorInput` via:
//
//	WebAclForwardedIpConfigurationFallbackBehaviorArgs{...}
type WebAclForwardedIpConfigurationFallbackBehaviorInput interface {
	pulumi.Input

	ToWebAclForwardedIpConfigurationFallbackBehaviorOutput() WebAclForwardedIpConfigurationFallbackBehaviorOutput
	ToWebAclForwardedIpConfigurationFallbackBehaviorOutputWithContext(context.Context) WebAclForwardedIpConfigurationFallbackBehaviorOutput
}

var webAclForwardedIpConfigurationFallbackBehaviorPtrType = reflect.TypeOf((**WebAclForwardedIpConfigurationFallbackBehavior)(nil)).Elem()

type WebAclForwardedIpConfigurationFallbackBehaviorPtrInput interface {
	pulumi.Input

	ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutput() WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput
	ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(context.Context) WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput
}

type webAclForwardedIpConfigurationFallbackBehaviorPtr string

func WebAclForwardedIpConfigurationFallbackBehaviorPtr(v string) WebAclForwardedIpConfigurationFallbackBehaviorPtrInput {
	return (*webAclForwardedIpConfigurationFallbackBehaviorPtr)(&v)
}

func (*webAclForwardedIpConfigurationFallbackBehaviorPtr) ElementType() reflect.Type {
	return webAclForwardedIpConfigurationFallbackBehaviorPtrType
}

func (in *webAclForwardedIpConfigurationFallbackBehaviorPtr) ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutput() WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return pulumi.ToOutput(in).(WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput)
}

func (in *webAclForwardedIpConfigurationFallbackBehaviorPtr) ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput)
}

func (in *webAclForwardedIpConfigurationFallbackBehaviorPtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclForwardedIpConfigurationFallbackBehavior] {
	return pulumix.Output[*WebAclForwardedIpConfigurationFallbackBehavior]{
		OutputState: in.ToWebAclForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclIpSetForwardedIpConfigurationFallbackBehavior string

const (
	WebAclIpSetForwardedIpConfigurationFallbackBehaviorMatch   = WebAclIpSetForwardedIpConfigurationFallbackBehavior("MATCH")
	WebAclIpSetForwardedIpConfigurationFallbackBehaviorNoMatch = WebAclIpSetForwardedIpConfigurationFallbackBehavior("NO_MATCH")
)

func (WebAclIpSetForwardedIpConfigurationFallbackBehavior) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclIpSetForwardedIpConfigurationFallbackBehavior)(nil)).Elem()
}

func (e WebAclIpSetForwardedIpConfigurationFallbackBehavior) ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput() WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput {
	return pulumi.ToOutput(e).(WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput)
}

func (e WebAclIpSetForwardedIpConfigurationFallbackBehavior) ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorOutputWithContext(ctx context.Context) WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput)
}

func (e WebAclIpSetForwardedIpConfigurationFallbackBehavior) ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput() WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return e.ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (e WebAclIpSetForwardedIpConfigurationFallbackBehavior) ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return WebAclIpSetForwardedIpConfigurationFallbackBehavior(e).ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorOutputWithContext(ctx).ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx)
}

func (e WebAclIpSetForwardedIpConfigurationFallbackBehavior) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclIpSetForwardedIpConfigurationFallbackBehavior) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclIpSetForwardedIpConfigurationFallbackBehavior) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclIpSetForwardedIpConfigurationFallbackBehavior) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput struct{ *pulumi.OutputState }

func (WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclIpSetForwardedIpConfigurationFallbackBehavior)(nil)).Elem()
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput() WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput {
	return o
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorOutputWithContext(ctx context.Context) WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput {
	return o
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput() WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o.ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(context.Background())
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclIpSetForwardedIpConfigurationFallbackBehavior) *WebAclIpSetForwardedIpConfigurationFallbackBehavior {
		return &v
	}).(WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput)
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclIpSetForwardedIpConfigurationFallbackBehavior] {
	return pulumix.Output[WebAclIpSetForwardedIpConfigurationFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclIpSetForwardedIpConfigurationFallbackBehavior) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclIpSetForwardedIpConfigurationFallbackBehavior) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput struct{ *pulumi.OutputState }

func (WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclIpSetForwardedIpConfigurationFallbackBehavior)(nil)).Elem()
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput() WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return o
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclIpSetForwardedIpConfigurationFallbackBehavior] {
	return pulumix.Output[*WebAclIpSetForwardedIpConfigurationFallbackBehavior]{
		OutputState: o.OutputState,
	}
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) Elem() WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput {
	return o.ApplyT(func(v *WebAclIpSetForwardedIpConfigurationFallbackBehavior) WebAclIpSetForwardedIpConfigurationFallbackBehavior {
		if v != nil {
			return *v
		}
		var ret WebAclIpSetForwardedIpConfigurationFallbackBehavior
		return ret
	}).(WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput)
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclIpSetForwardedIpConfigurationFallbackBehavior) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclIpSetForwardedIpConfigurationFallbackBehaviorInput is an input type that accepts WebAclIpSetForwardedIpConfigurationFallbackBehaviorArgs and WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput values.
// You can construct a concrete instance of `WebAclIpSetForwardedIpConfigurationFallbackBehaviorInput` via:
//
//	WebAclIpSetForwardedIpConfigurationFallbackBehaviorArgs{...}
type WebAclIpSetForwardedIpConfigurationFallbackBehaviorInput interface {
	pulumi.Input

	ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput() WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput
	ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorOutputWithContext(context.Context) WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput
}

var webAclIpSetForwardedIpConfigurationFallbackBehaviorPtrType = reflect.TypeOf((**WebAclIpSetForwardedIpConfigurationFallbackBehavior)(nil)).Elem()

type WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrInput interface {
	pulumi.Input

	ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput() WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput
	ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(context.Context) WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput
}

type webAclIpSetForwardedIpConfigurationFallbackBehaviorPtr string

func WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtr(v string) WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrInput {
	return (*webAclIpSetForwardedIpConfigurationFallbackBehaviorPtr)(&v)
}

func (*webAclIpSetForwardedIpConfigurationFallbackBehaviorPtr) ElementType() reflect.Type {
	return webAclIpSetForwardedIpConfigurationFallbackBehaviorPtrType
}

func (in *webAclIpSetForwardedIpConfigurationFallbackBehaviorPtr) ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput() WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return pulumi.ToOutput(in).(WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput)
}

func (in *webAclIpSetForwardedIpConfigurationFallbackBehaviorPtr) ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx context.Context) WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput)
}

func (in *webAclIpSetForwardedIpConfigurationFallbackBehaviorPtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclIpSetForwardedIpConfigurationFallbackBehavior] {
	return pulumix.Output[*WebAclIpSetForwardedIpConfigurationFallbackBehavior]{
		OutputState: in.ToWebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclIpSetForwardedIpConfigurationPosition string

const (
	WebAclIpSetForwardedIpConfigurationPositionFirst = WebAclIpSetForwardedIpConfigurationPosition("FIRST")
	WebAclIpSetForwardedIpConfigurationPositionLast  = WebAclIpSetForwardedIpConfigurationPosition("LAST")
	WebAclIpSetForwardedIpConfigurationPositionAny   = WebAclIpSetForwardedIpConfigurationPosition("ANY")
)

func (WebAclIpSetForwardedIpConfigurationPosition) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclIpSetForwardedIpConfigurationPosition)(nil)).Elem()
}

func (e WebAclIpSetForwardedIpConfigurationPosition) ToWebAclIpSetForwardedIpConfigurationPositionOutput() WebAclIpSetForwardedIpConfigurationPositionOutput {
	return pulumi.ToOutput(e).(WebAclIpSetForwardedIpConfigurationPositionOutput)
}

func (e WebAclIpSetForwardedIpConfigurationPosition) ToWebAclIpSetForwardedIpConfigurationPositionOutputWithContext(ctx context.Context) WebAclIpSetForwardedIpConfigurationPositionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclIpSetForwardedIpConfigurationPositionOutput)
}

func (e WebAclIpSetForwardedIpConfigurationPosition) ToWebAclIpSetForwardedIpConfigurationPositionPtrOutput() WebAclIpSetForwardedIpConfigurationPositionPtrOutput {
	return e.ToWebAclIpSetForwardedIpConfigurationPositionPtrOutputWithContext(context.Background())
}

func (e WebAclIpSetForwardedIpConfigurationPosition) ToWebAclIpSetForwardedIpConfigurationPositionPtrOutputWithContext(ctx context.Context) WebAclIpSetForwardedIpConfigurationPositionPtrOutput {
	return WebAclIpSetForwardedIpConfigurationPosition(e).ToWebAclIpSetForwardedIpConfigurationPositionOutputWithContext(ctx).ToWebAclIpSetForwardedIpConfigurationPositionPtrOutputWithContext(ctx)
}

func (e WebAclIpSetForwardedIpConfigurationPosition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclIpSetForwardedIpConfigurationPosition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclIpSetForwardedIpConfigurationPosition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclIpSetForwardedIpConfigurationPosition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclIpSetForwardedIpConfigurationPositionOutput struct{ *pulumi.OutputState }

func (WebAclIpSetForwardedIpConfigurationPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclIpSetForwardedIpConfigurationPosition)(nil)).Elem()
}

func (o WebAclIpSetForwardedIpConfigurationPositionOutput) ToWebAclIpSetForwardedIpConfigurationPositionOutput() WebAclIpSetForwardedIpConfigurationPositionOutput {
	return o
}

func (o WebAclIpSetForwardedIpConfigurationPositionOutput) ToWebAclIpSetForwardedIpConfigurationPositionOutputWithContext(ctx context.Context) WebAclIpSetForwardedIpConfigurationPositionOutput {
	return o
}

func (o WebAclIpSetForwardedIpConfigurationPositionOutput) ToWebAclIpSetForwardedIpConfigurationPositionPtrOutput() WebAclIpSetForwardedIpConfigurationPositionPtrOutput {
	return o.ToWebAclIpSetForwardedIpConfigurationPositionPtrOutputWithContext(context.Background())
}

func (o WebAclIpSetForwardedIpConfigurationPositionOutput) ToWebAclIpSetForwardedIpConfigurationPositionPtrOutputWithContext(ctx context.Context) WebAclIpSetForwardedIpConfigurationPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclIpSetForwardedIpConfigurationPosition) *WebAclIpSetForwardedIpConfigurationPosition {
		return &v
	}).(WebAclIpSetForwardedIpConfigurationPositionPtrOutput)
}

func (o WebAclIpSetForwardedIpConfigurationPositionOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclIpSetForwardedIpConfigurationPosition] {
	return pulumix.Output[WebAclIpSetForwardedIpConfigurationPosition]{
		OutputState: o.OutputState,
	}
}

func (o WebAclIpSetForwardedIpConfigurationPositionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclIpSetForwardedIpConfigurationPositionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclIpSetForwardedIpConfigurationPosition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclIpSetForwardedIpConfigurationPositionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclIpSetForwardedIpConfigurationPositionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclIpSetForwardedIpConfigurationPosition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclIpSetForwardedIpConfigurationPositionPtrOutput struct{ *pulumi.OutputState }

func (WebAclIpSetForwardedIpConfigurationPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclIpSetForwardedIpConfigurationPosition)(nil)).Elem()
}

func (o WebAclIpSetForwardedIpConfigurationPositionPtrOutput) ToWebAclIpSetForwardedIpConfigurationPositionPtrOutput() WebAclIpSetForwardedIpConfigurationPositionPtrOutput {
	return o
}

func (o WebAclIpSetForwardedIpConfigurationPositionPtrOutput) ToWebAclIpSetForwardedIpConfigurationPositionPtrOutputWithContext(ctx context.Context) WebAclIpSetForwardedIpConfigurationPositionPtrOutput {
	return o
}

func (o WebAclIpSetForwardedIpConfigurationPositionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclIpSetForwardedIpConfigurationPosition] {
	return pulumix.Output[*WebAclIpSetForwardedIpConfigurationPosition]{
		OutputState: o.OutputState,
	}
}

func (o WebAclIpSetForwardedIpConfigurationPositionPtrOutput) Elem() WebAclIpSetForwardedIpConfigurationPositionOutput {
	return o.ApplyT(func(v *WebAclIpSetForwardedIpConfigurationPosition) WebAclIpSetForwardedIpConfigurationPosition {
		if v != nil {
			return *v
		}
		var ret WebAclIpSetForwardedIpConfigurationPosition
		return ret
	}).(WebAclIpSetForwardedIpConfigurationPositionOutput)
}

func (o WebAclIpSetForwardedIpConfigurationPositionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclIpSetForwardedIpConfigurationPositionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclIpSetForwardedIpConfigurationPosition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclIpSetForwardedIpConfigurationPositionInput is an input type that accepts WebAclIpSetForwardedIpConfigurationPositionArgs and WebAclIpSetForwardedIpConfigurationPositionOutput values.
// You can construct a concrete instance of `WebAclIpSetForwardedIpConfigurationPositionInput` via:
//
//	WebAclIpSetForwardedIpConfigurationPositionArgs{...}
type WebAclIpSetForwardedIpConfigurationPositionInput interface {
	pulumi.Input

	ToWebAclIpSetForwardedIpConfigurationPositionOutput() WebAclIpSetForwardedIpConfigurationPositionOutput
	ToWebAclIpSetForwardedIpConfigurationPositionOutputWithContext(context.Context) WebAclIpSetForwardedIpConfigurationPositionOutput
}

var webAclIpSetForwardedIpConfigurationPositionPtrType = reflect.TypeOf((**WebAclIpSetForwardedIpConfigurationPosition)(nil)).Elem()

type WebAclIpSetForwardedIpConfigurationPositionPtrInput interface {
	pulumi.Input

	ToWebAclIpSetForwardedIpConfigurationPositionPtrOutput() WebAclIpSetForwardedIpConfigurationPositionPtrOutput
	ToWebAclIpSetForwardedIpConfigurationPositionPtrOutputWithContext(context.Context) WebAclIpSetForwardedIpConfigurationPositionPtrOutput
}

type webAclIpSetForwardedIpConfigurationPositionPtr string

func WebAclIpSetForwardedIpConfigurationPositionPtr(v string) WebAclIpSetForwardedIpConfigurationPositionPtrInput {
	return (*webAclIpSetForwardedIpConfigurationPositionPtr)(&v)
}

func (*webAclIpSetForwardedIpConfigurationPositionPtr) ElementType() reflect.Type {
	return webAclIpSetForwardedIpConfigurationPositionPtrType
}

func (in *webAclIpSetForwardedIpConfigurationPositionPtr) ToWebAclIpSetForwardedIpConfigurationPositionPtrOutput() WebAclIpSetForwardedIpConfigurationPositionPtrOutput {
	return pulumi.ToOutput(in).(WebAclIpSetForwardedIpConfigurationPositionPtrOutput)
}

func (in *webAclIpSetForwardedIpConfigurationPositionPtr) ToWebAclIpSetForwardedIpConfigurationPositionPtrOutputWithContext(ctx context.Context) WebAclIpSetForwardedIpConfigurationPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclIpSetForwardedIpConfigurationPositionPtrOutput)
}

func (in *webAclIpSetForwardedIpConfigurationPositionPtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclIpSetForwardedIpConfigurationPosition] {
	return pulumix.Output[*WebAclIpSetForwardedIpConfigurationPosition]{
		OutputState: in.ToWebAclIpSetForwardedIpConfigurationPositionPtrOutputWithContext(ctx).OutputState,
	}
}

// The parts of the JSON to match against using the MatchPattern.
type WebAclJsonMatchScope string

const (
	WebAclJsonMatchScopeAll   = WebAclJsonMatchScope("ALL")
	WebAclJsonMatchScopeKey   = WebAclJsonMatchScope("KEY")
	WebAclJsonMatchScopeValue = WebAclJsonMatchScope("VALUE")
)

func (WebAclJsonMatchScope) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclJsonMatchScope)(nil)).Elem()
}

func (e WebAclJsonMatchScope) ToWebAclJsonMatchScopeOutput() WebAclJsonMatchScopeOutput {
	return pulumi.ToOutput(e).(WebAclJsonMatchScopeOutput)
}

func (e WebAclJsonMatchScope) ToWebAclJsonMatchScopeOutputWithContext(ctx context.Context) WebAclJsonMatchScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclJsonMatchScopeOutput)
}

func (e WebAclJsonMatchScope) ToWebAclJsonMatchScopePtrOutput() WebAclJsonMatchScopePtrOutput {
	return e.ToWebAclJsonMatchScopePtrOutputWithContext(context.Background())
}

func (e WebAclJsonMatchScope) ToWebAclJsonMatchScopePtrOutputWithContext(ctx context.Context) WebAclJsonMatchScopePtrOutput {
	return WebAclJsonMatchScope(e).ToWebAclJsonMatchScopeOutputWithContext(ctx).ToWebAclJsonMatchScopePtrOutputWithContext(ctx)
}

func (e WebAclJsonMatchScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclJsonMatchScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclJsonMatchScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclJsonMatchScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclJsonMatchScopeOutput struct{ *pulumi.OutputState }

func (WebAclJsonMatchScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclJsonMatchScope)(nil)).Elem()
}

func (o WebAclJsonMatchScopeOutput) ToWebAclJsonMatchScopeOutput() WebAclJsonMatchScopeOutput {
	return o
}

func (o WebAclJsonMatchScopeOutput) ToWebAclJsonMatchScopeOutputWithContext(ctx context.Context) WebAclJsonMatchScopeOutput {
	return o
}

func (o WebAclJsonMatchScopeOutput) ToWebAclJsonMatchScopePtrOutput() WebAclJsonMatchScopePtrOutput {
	return o.ToWebAclJsonMatchScopePtrOutputWithContext(context.Background())
}

func (o WebAclJsonMatchScopeOutput) ToWebAclJsonMatchScopePtrOutputWithContext(ctx context.Context) WebAclJsonMatchScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclJsonMatchScope) *WebAclJsonMatchScope {
		return &v
	}).(WebAclJsonMatchScopePtrOutput)
}

func (o WebAclJsonMatchScopeOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclJsonMatchScope] {
	return pulumix.Output[WebAclJsonMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o WebAclJsonMatchScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclJsonMatchScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclJsonMatchScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclJsonMatchScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclJsonMatchScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclJsonMatchScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclJsonMatchScopePtrOutput struct{ *pulumi.OutputState }

func (WebAclJsonMatchScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclJsonMatchScope)(nil)).Elem()
}

func (o WebAclJsonMatchScopePtrOutput) ToWebAclJsonMatchScopePtrOutput() WebAclJsonMatchScopePtrOutput {
	return o
}

func (o WebAclJsonMatchScopePtrOutput) ToWebAclJsonMatchScopePtrOutputWithContext(ctx context.Context) WebAclJsonMatchScopePtrOutput {
	return o
}

func (o WebAclJsonMatchScopePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclJsonMatchScope] {
	return pulumix.Output[*WebAclJsonMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o WebAclJsonMatchScopePtrOutput) Elem() WebAclJsonMatchScopeOutput {
	return o.ApplyT(func(v *WebAclJsonMatchScope) WebAclJsonMatchScope {
		if v != nil {
			return *v
		}
		var ret WebAclJsonMatchScope
		return ret
	}).(WebAclJsonMatchScopeOutput)
}

func (o WebAclJsonMatchScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclJsonMatchScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclJsonMatchScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclJsonMatchScopeInput is an input type that accepts WebAclJsonMatchScopeArgs and WebAclJsonMatchScopeOutput values.
// You can construct a concrete instance of `WebAclJsonMatchScopeInput` via:
//
//	WebAclJsonMatchScopeArgs{...}
type WebAclJsonMatchScopeInput interface {
	pulumi.Input

	ToWebAclJsonMatchScopeOutput() WebAclJsonMatchScopeOutput
	ToWebAclJsonMatchScopeOutputWithContext(context.Context) WebAclJsonMatchScopeOutput
}

var webAclJsonMatchScopePtrType = reflect.TypeOf((**WebAclJsonMatchScope)(nil)).Elem()

type WebAclJsonMatchScopePtrInput interface {
	pulumi.Input

	ToWebAclJsonMatchScopePtrOutput() WebAclJsonMatchScopePtrOutput
	ToWebAclJsonMatchScopePtrOutputWithContext(context.Context) WebAclJsonMatchScopePtrOutput
}

type webAclJsonMatchScopePtr string

func WebAclJsonMatchScopePtr(v string) WebAclJsonMatchScopePtrInput {
	return (*webAclJsonMatchScopePtr)(&v)
}

func (*webAclJsonMatchScopePtr) ElementType() reflect.Type {
	return webAclJsonMatchScopePtrType
}

func (in *webAclJsonMatchScopePtr) ToWebAclJsonMatchScopePtrOutput() WebAclJsonMatchScopePtrOutput {
	return pulumi.ToOutput(in).(WebAclJsonMatchScopePtrOutput)
}

func (in *webAclJsonMatchScopePtr) ToWebAclJsonMatchScopePtrOutputWithContext(ctx context.Context) WebAclJsonMatchScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclJsonMatchScopePtrOutput)
}

func (in *webAclJsonMatchScopePtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclJsonMatchScope] {
	return pulumix.Output[*WebAclJsonMatchScope]{
		OutputState: in.ToWebAclJsonMatchScopePtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclLabelMatchScope string

const (
	WebAclLabelMatchScopeLabel     = WebAclLabelMatchScope("LABEL")
	WebAclLabelMatchScopeNamespace = WebAclLabelMatchScope("NAMESPACE")
)

func (WebAclLabelMatchScope) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLabelMatchScope)(nil)).Elem()
}

func (e WebAclLabelMatchScope) ToWebAclLabelMatchScopeOutput() WebAclLabelMatchScopeOutput {
	return pulumi.ToOutput(e).(WebAclLabelMatchScopeOutput)
}

func (e WebAclLabelMatchScope) ToWebAclLabelMatchScopeOutputWithContext(ctx context.Context) WebAclLabelMatchScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclLabelMatchScopeOutput)
}

func (e WebAclLabelMatchScope) ToWebAclLabelMatchScopePtrOutput() WebAclLabelMatchScopePtrOutput {
	return e.ToWebAclLabelMatchScopePtrOutputWithContext(context.Background())
}

func (e WebAclLabelMatchScope) ToWebAclLabelMatchScopePtrOutputWithContext(ctx context.Context) WebAclLabelMatchScopePtrOutput {
	return WebAclLabelMatchScope(e).ToWebAclLabelMatchScopeOutputWithContext(ctx).ToWebAclLabelMatchScopePtrOutputWithContext(ctx)
}

func (e WebAclLabelMatchScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclLabelMatchScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclLabelMatchScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclLabelMatchScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclLabelMatchScopeOutput struct{ *pulumi.OutputState }

func (WebAclLabelMatchScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclLabelMatchScope)(nil)).Elem()
}

func (o WebAclLabelMatchScopeOutput) ToWebAclLabelMatchScopeOutput() WebAclLabelMatchScopeOutput {
	return o
}

func (o WebAclLabelMatchScopeOutput) ToWebAclLabelMatchScopeOutputWithContext(ctx context.Context) WebAclLabelMatchScopeOutput {
	return o
}

func (o WebAclLabelMatchScopeOutput) ToWebAclLabelMatchScopePtrOutput() WebAclLabelMatchScopePtrOutput {
	return o.ToWebAclLabelMatchScopePtrOutputWithContext(context.Background())
}

func (o WebAclLabelMatchScopeOutput) ToWebAclLabelMatchScopePtrOutputWithContext(ctx context.Context) WebAclLabelMatchScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclLabelMatchScope) *WebAclLabelMatchScope {
		return &v
	}).(WebAclLabelMatchScopePtrOutput)
}

func (o WebAclLabelMatchScopeOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclLabelMatchScope] {
	return pulumix.Output[WebAclLabelMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o WebAclLabelMatchScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclLabelMatchScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclLabelMatchScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclLabelMatchScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclLabelMatchScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclLabelMatchScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclLabelMatchScopePtrOutput struct{ *pulumi.OutputState }

func (WebAclLabelMatchScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclLabelMatchScope)(nil)).Elem()
}

func (o WebAclLabelMatchScopePtrOutput) ToWebAclLabelMatchScopePtrOutput() WebAclLabelMatchScopePtrOutput {
	return o
}

func (o WebAclLabelMatchScopePtrOutput) ToWebAclLabelMatchScopePtrOutputWithContext(ctx context.Context) WebAclLabelMatchScopePtrOutput {
	return o
}

func (o WebAclLabelMatchScopePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclLabelMatchScope] {
	return pulumix.Output[*WebAclLabelMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o WebAclLabelMatchScopePtrOutput) Elem() WebAclLabelMatchScopeOutput {
	return o.ApplyT(func(v *WebAclLabelMatchScope) WebAclLabelMatchScope {
		if v != nil {
			return *v
		}
		var ret WebAclLabelMatchScope
		return ret
	}).(WebAclLabelMatchScopeOutput)
}

func (o WebAclLabelMatchScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclLabelMatchScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclLabelMatchScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclLabelMatchScopeInput is an input type that accepts WebAclLabelMatchScopeArgs and WebAclLabelMatchScopeOutput values.
// You can construct a concrete instance of `WebAclLabelMatchScopeInput` via:
//
//	WebAclLabelMatchScopeArgs{...}
type WebAclLabelMatchScopeInput interface {
	pulumi.Input

	ToWebAclLabelMatchScopeOutput() WebAclLabelMatchScopeOutput
	ToWebAclLabelMatchScopeOutputWithContext(context.Context) WebAclLabelMatchScopeOutput
}

var webAclLabelMatchScopePtrType = reflect.TypeOf((**WebAclLabelMatchScope)(nil)).Elem()

type WebAclLabelMatchScopePtrInput interface {
	pulumi.Input

	ToWebAclLabelMatchScopePtrOutput() WebAclLabelMatchScopePtrOutput
	ToWebAclLabelMatchScopePtrOutputWithContext(context.Context) WebAclLabelMatchScopePtrOutput
}

type webAclLabelMatchScopePtr string

func WebAclLabelMatchScopePtr(v string) WebAclLabelMatchScopePtrInput {
	return (*webAclLabelMatchScopePtr)(&v)
}

func (*webAclLabelMatchScopePtr) ElementType() reflect.Type {
	return webAclLabelMatchScopePtrType
}

func (in *webAclLabelMatchScopePtr) ToWebAclLabelMatchScopePtrOutput() WebAclLabelMatchScopePtrOutput {
	return pulumi.ToOutput(in).(WebAclLabelMatchScopePtrOutput)
}

func (in *webAclLabelMatchScopePtr) ToWebAclLabelMatchScopePtrOutputWithContext(ctx context.Context) WebAclLabelMatchScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclLabelMatchScopePtrOutput)
}

func (in *webAclLabelMatchScopePtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclLabelMatchScope] {
	return pulumix.Output[*WebAclLabelMatchScope]{
		OutputState: in.ToWebAclLabelMatchScopePtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclManagedRuleGroupConfigPayloadType string

const (
	WebAclManagedRuleGroupConfigPayloadTypeJson        = WebAclManagedRuleGroupConfigPayloadType("JSON")
	WebAclManagedRuleGroupConfigPayloadTypeFormEncoded = WebAclManagedRuleGroupConfigPayloadType("FORM_ENCODED")
)

func (WebAclManagedRuleGroupConfigPayloadType) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclManagedRuleGroupConfigPayloadType)(nil)).Elem()
}

func (e WebAclManagedRuleGroupConfigPayloadType) ToWebAclManagedRuleGroupConfigPayloadTypeOutput() WebAclManagedRuleGroupConfigPayloadTypeOutput {
	return pulumi.ToOutput(e).(WebAclManagedRuleGroupConfigPayloadTypeOutput)
}

func (e WebAclManagedRuleGroupConfigPayloadType) ToWebAclManagedRuleGroupConfigPayloadTypeOutputWithContext(ctx context.Context) WebAclManagedRuleGroupConfigPayloadTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclManagedRuleGroupConfigPayloadTypeOutput)
}

func (e WebAclManagedRuleGroupConfigPayloadType) ToWebAclManagedRuleGroupConfigPayloadTypePtrOutput() WebAclManagedRuleGroupConfigPayloadTypePtrOutput {
	return e.ToWebAclManagedRuleGroupConfigPayloadTypePtrOutputWithContext(context.Background())
}

func (e WebAclManagedRuleGroupConfigPayloadType) ToWebAclManagedRuleGroupConfigPayloadTypePtrOutputWithContext(ctx context.Context) WebAclManagedRuleGroupConfigPayloadTypePtrOutput {
	return WebAclManagedRuleGroupConfigPayloadType(e).ToWebAclManagedRuleGroupConfigPayloadTypeOutputWithContext(ctx).ToWebAclManagedRuleGroupConfigPayloadTypePtrOutputWithContext(ctx)
}

func (e WebAclManagedRuleGroupConfigPayloadType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclManagedRuleGroupConfigPayloadType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclManagedRuleGroupConfigPayloadType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclManagedRuleGroupConfigPayloadType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclManagedRuleGroupConfigPayloadTypeOutput struct{ *pulumi.OutputState }

func (WebAclManagedRuleGroupConfigPayloadTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclManagedRuleGroupConfigPayloadType)(nil)).Elem()
}

func (o WebAclManagedRuleGroupConfigPayloadTypeOutput) ToWebAclManagedRuleGroupConfigPayloadTypeOutput() WebAclManagedRuleGroupConfigPayloadTypeOutput {
	return o
}

func (o WebAclManagedRuleGroupConfigPayloadTypeOutput) ToWebAclManagedRuleGroupConfigPayloadTypeOutputWithContext(ctx context.Context) WebAclManagedRuleGroupConfigPayloadTypeOutput {
	return o
}

func (o WebAclManagedRuleGroupConfigPayloadTypeOutput) ToWebAclManagedRuleGroupConfigPayloadTypePtrOutput() WebAclManagedRuleGroupConfigPayloadTypePtrOutput {
	return o.ToWebAclManagedRuleGroupConfigPayloadTypePtrOutputWithContext(context.Background())
}

func (o WebAclManagedRuleGroupConfigPayloadTypeOutput) ToWebAclManagedRuleGroupConfigPayloadTypePtrOutputWithContext(ctx context.Context) WebAclManagedRuleGroupConfigPayloadTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclManagedRuleGroupConfigPayloadType) *WebAclManagedRuleGroupConfigPayloadType {
		return &v
	}).(WebAclManagedRuleGroupConfigPayloadTypePtrOutput)
}

func (o WebAclManagedRuleGroupConfigPayloadTypeOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclManagedRuleGroupConfigPayloadType] {
	return pulumix.Output[WebAclManagedRuleGroupConfigPayloadType]{
		OutputState: o.OutputState,
	}
}

func (o WebAclManagedRuleGroupConfigPayloadTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclManagedRuleGroupConfigPayloadTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclManagedRuleGroupConfigPayloadType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclManagedRuleGroupConfigPayloadTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclManagedRuleGroupConfigPayloadTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclManagedRuleGroupConfigPayloadType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclManagedRuleGroupConfigPayloadTypePtrOutput struct{ *pulumi.OutputState }

func (WebAclManagedRuleGroupConfigPayloadTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclManagedRuleGroupConfigPayloadType)(nil)).Elem()
}

func (o WebAclManagedRuleGroupConfigPayloadTypePtrOutput) ToWebAclManagedRuleGroupConfigPayloadTypePtrOutput() WebAclManagedRuleGroupConfigPayloadTypePtrOutput {
	return o
}

func (o WebAclManagedRuleGroupConfigPayloadTypePtrOutput) ToWebAclManagedRuleGroupConfigPayloadTypePtrOutputWithContext(ctx context.Context) WebAclManagedRuleGroupConfigPayloadTypePtrOutput {
	return o
}

func (o WebAclManagedRuleGroupConfigPayloadTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclManagedRuleGroupConfigPayloadType] {
	return pulumix.Output[*WebAclManagedRuleGroupConfigPayloadType]{
		OutputState: o.OutputState,
	}
}

func (o WebAclManagedRuleGroupConfigPayloadTypePtrOutput) Elem() WebAclManagedRuleGroupConfigPayloadTypeOutput {
	return o.ApplyT(func(v *WebAclManagedRuleGroupConfigPayloadType) WebAclManagedRuleGroupConfigPayloadType {
		if v != nil {
			return *v
		}
		var ret WebAclManagedRuleGroupConfigPayloadType
		return ret
	}).(WebAclManagedRuleGroupConfigPayloadTypeOutput)
}

func (o WebAclManagedRuleGroupConfigPayloadTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclManagedRuleGroupConfigPayloadTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclManagedRuleGroupConfigPayloadType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclManagedRuleGroupConfigPayloadTypeInput is an input type that accepts WebAclManagedRuleGroupConfigPayloadTypeArgs and WebAclManagedRuleGroupConfigPayloadTypeOutput values.
// You can construct a concrete instance of `WebAclManagedRuleGroupConfigPayloadTypeInput` via:
//
//	WebAclManagedRuleGroupConfigPayloadTypeArgs{...}
type WebAclManagedRuleGroupConfigPayloadTypeInput interface {
	pulumi.Input

	ToWebAclManagedRuleGroupConfigPayloadTypeOutput() WebAclManagedRuleGroupConfigPayloadTypeOutput
	ToWebAclManagedRuleGroupConfigPayloadTypeOutputWithContext(context.Context) WebAclManagedRuleGroupConfigPayloadTypeOutput
}

var webAclManagedRuleGroupConfigPayloadTypePtrType = reflect.TypeOf((**WebAclManagedRuleGroupConfigPayloadType)(nil)).Elem()

type WebAclManagedRuleGroupConfigPayloadTypePtrInput interface {
	pulumi.Input

	ToWebAclManagedRuleGroupConfigPayloadTypePtrOutput() WebAclManagedRuleGroupConfigPayloadTypePtrOutput
	ToWebAclManagedRuleGroupConfigPayloadTypePtrOutputWithContext(context.Context) WebAclManagedRuleGroupConfigPayloadTypePtrOutput
}

type webAclManagedRuleGroupConfigPayloadTypePtr string

func WebAclManagedRuleGroupConfigPayloadTypePtr(v string) WebAclManagedRuleGroupConfigPayloadTypePtrInput {
	return (*webAclManagedRuleGroupConfigPayloadTypePtr)(&v)
}

func (*webAclManagedRuleGroupConfigPayloadTypePtr) ElementType() reflect.Type {
	return webAclManagedRuleGroupConfigPayloadTypePtrType
}

func (in *webAclManagedRuleGroupConfigPayloadTypePtr) ToWebAclManagedRuleGroupConfigPayloadTypePtrOutput() WebAclManagedRuleGroupConfigPayloadTypePtrOutput {
	return pulumi.ToOutput(in).(WebAclManagedRuleGroupConfigPayloadTypePtrOutput)
}

func (in *webAclManagedRuleGroupConfigPayloadTypePtr) ToWebAclManagedRuleGroupConfigPayloadTypePtrOutputWithContext(ctx context.Context) WebAclManagedRuleGroupConfigPayloadTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclManagedRuleGroupConfigPayloadTypePtrOutput)
}

func (in *webAclManagedRuleGroupConfigPayloadTypePtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclManagedRuleGroupConfigPayloadType] {
	return pulumix.Output[*WebAclManagedRuleGroupConfigPayloadType]{
		OutputState: in.ToWebAclManagedRuleGroupConfigPayloadTypePtrOutputWithContext(ctx).OutputState,
	}
}

// The parts of the request to match against using the MatchPattern.
type WebAclMapMatchScope string

const (
	WebAclMapMatchScopeAll   = WebAclMapMatchScope("ALL")
	WebAclMapMatchScopeKey   = WebAclMapMatchScope("KEY")
	WebAclMapMatchScopeValue = WebAclMapMatchScope("VALUE")
)

func (WebAclMapMatchScope) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclMapMatchScope)(nil)).Elem()
}

func (e WebAclMapMatchScope) ToWebAclMapMatchScopeOutput() WebAclMapMatchScopeOutput {
	return pulumi.ToOutput(e).(WebAclMapMatchScopeOutput)
}

func (e WebAclMapMatchScope) ToWebAclMapMatchScopeOutputWithContext(ctx context.Context) WebAclMapMatchScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclMapMatchScopeOutput)
}

func (e WebAclMapMatchScope) ToWebAclMapMatchScopePtrOutput() WebAclMapMatchScopePtrOutput {
	return e.ToWebAclMapMatchScopePtrOutputWithContext(context.Background())
}

func (e WebAclMapMatchScope) ToWebAclMapMatchScopePtrOutputWithContext(ctx context.Context) WebAclMapMatchScopePtrOutput {
	return WebAclMapMatchScope(e).ToWebAclMapMatchScopeOutputWithContext(ctx).ToWebAclMapMatchScopePtrOutputWithContext(ctx)
}

func (e WebAclMapMatchScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclMapMatchScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclMapMatchScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclMapMatchScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclMapMatchScopeOutput struct{ *pulumi.OutputState }

func (WebAclMapMatchScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclMapMatchScope)(nil)).Elem()
}

func (o WebAclMapMatchScopeOutput) ToWebAclMapMatchScopeOutput() WebAclMapMatchScopeOutput {
	return o
}

func (o WebAclMapMatchScopeOutput) ToWebAclMapMatchScopeOutputWithContext(ctx context.Context) WebAclMapMatchScopeOutput {
	return o
}

func (o WebAclMapMatchScopeOutput) ToWebAclMapMatchScopePtrOutput() WebAclMapMatchScopePtrOutput {
	return o.ToWebAclMapMatchScopePtrOutputWithContext(context.Background())
}

func (o WebAclMapMatchScopeOutput) ToWebAclMapMatchScopePtrOutputWithContext(ctx context.Context) WebAclMapMatchScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclMapMatchScope) *WebAclMapMatchScope {
		return &v
	}).(WebAclMapMatchScopePtrOutput)
}

func (o WebAclMapMatchScopeOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclMapMatchScope] {
	return pulumix.Output[WebAclMapMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o WebAclMapMatchScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclMapMatchScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclMapMatchScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclMapMatchScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclMapMatchScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclMapMatchScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclMapMatchScopePtrOutput struct{ *pulumi.OutputState }

func (WebAclMapMatchScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclMapMatchScope)(nil)).Elem()
}

func (o WebAclMapMatchScopePtrOutput) ToWebAclMapMatchScopePtrOutput() WebAclMapMatchScopePtrOutput {
	return o
}

func (o WebAclMapMatchScopePtrOutput) ToWebAclMapMatchScopePtrOutputWithContext(ctx context.Context) WebAclMapMatchScopePtrOutput {
	return o
}

func (o WebAclMapMatchScopePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclMapMatchScope] {
	return pulumix.Output[*WebAclMapMatchScope]{
		OutputState: o.OutputState,
	}
}

func (o WebAclMapMatchScopePtrOutput) Elem() WebAclMapMatchScopeOutput {
	return o.ApplyT(func(v *WebAclMapMatchScope) WebAclMapMatchScope {
		if v != nil {
			return *v
		}
		var ret WebAclMapMatchScope
		return ret
	}).(WebAclMapMatchScopeOutput)
}

func (o WebAclMapMatchScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclMapMatchScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclMapMatchScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclMapMatchScopeInput is an input type that accepts WebAclMapMatchScopeArgs and WebAclMapMatchScopeOutput values.
// You can construct a concrete instance of `WebAclMapMatchScopeInput` via:
//
//	WebAclMapMatchScopeArgs{...}
type WebAclMapMatchScopeInput interface {
	pulumi.Input

	ToWebAclMapMatchScopeOutput() WebAclMapMatchScopeOutput
	ToWebAclMapMatchScopeOutputWithContext(context.Context) WebAclMapMatchScopeOutput
}

var webAclMapMatchScopePtrType = reflect.TypeOf((**WebAclMapMatchScope)(nil)).Elem()

type WebAclMapMatchScopePtrInput interface {
	pulumi.Input

	ToWebAclMapMatchScopePtrOutput() WebAclMapMatchScopePtrOutput
	ToWebAclMapMatchScopePtrOutputWithContext(context.Context) WebAclMapMatchScopePtrOutput
}

type webAclMapMatchScopePtr string

func WebAclMapMatchScopePtr(v string) WebAclMapMatchScopePtrInput {
	return (*webAclMapMatchScopePtr)(&v)
}

func (*webAclMapMatchScopePtr) ElementType() reflect.Type {
	return webAclMapMatchScopePtrType
}

func (in *webAclMapMatchScopePtr) ToWebAclMapMatchScopePtrOutput() WebAclMapMatchScopePtrOutput {
	return pulumi.ToOutput(in).(WebAclMapMatchScopePtrOutput)
}

func (in *webAclMapMatchScopePtr) ToWebAclMapMatchScopePtrOutputWithContext(ctx context.Context) WebAclMapMatchScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclMapMatchScopePtrOutput)
}

func (in *webAclMapMatchScopePtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclMapMatchScope] {
	return pulumix.Output[*WebAclMapMatchScope]{
		OutputState: in.ToWebAclMapMatchScopePtrOutputWithContext(ctx).OutputState,
	}
}

// Handling of requests containing oversize fields
type WebAclOversizeHandling string

const (
	WebAclOversizeHandlingContinue = WebAclOversizeHandling("CONTINUE")
	WebAclOversizeHandlingMatch    = WebAclOversizeHandling("MATCH")
	WebAclOversizeHandlingNoMatch  = WebAclOversizeHandling("NO_MATCH")
)

func (WebAclOversizeHandling) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclOversizeHandling)(nil)).Elem()
}

func (e WebAclOversizeHandling) ToWebAclOversizeHandlingOutput() WebAclOversizeHandlingOutput {
	return pulumi.ToOutput(e).(WebAclOversizeHandlingOutput)
}

func (e WebAclOversizeHandling) ToWebAclOversizeHandlingOutputWithContext(ctx context.Context) WebAclOversizeHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclOversizeHandlingOutput)
}

func (e WebAclOversizeHandling) ToWebAclOversizeHandlingPtrOutput() WebAclOversizeHandlingPtrOutput {
	return e.ToWebAclOversizeHandlingPtrOutputWithContext(context.Background())
}

func (e WebAclOversizeHandling) ToWebAclOversizeHandlingPtrOutputWithContext(ctx context.Context) WebAclOversizeHandlingPtrOutput {
	return WebAclOversizeHandling(e).ToWebAclOversizeHandlingOutputWithContext(ctx).ToWebAclOversizeHandlingPtrOutputWithContext(ctx)
}

func (e WebAclOversizeHandling) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclOversizeHandling) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclOversizeHandling) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclOversizeHandling) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclOversizeHandlingOutput struct{ *pulumi.OutputState }

func (WebAclOversizeHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclOversizeHandling)(nil)).Elem()
}

func (o WebAclOversizeHandlingOutput) ToWebAclOversizeHandlingOutput() WebAclOversizeHandlingOutput {
	return o
}

func (o WebAclOversizeHandlingOutput) ToWebAclOversizeHandlingOutputWithContext(ctx context.Context) WebAclOversizeHandlingOutput {
	return o
}

func (o WebAclOversizeHandlingOutput) ToWebAclOversizeHandlingPtrOutput() WebAclOversizeHandlingPtrOutput {
	return o.ToWebAclOversizeHandlingPtrOutputWithContext(context.Background())
}

func (o WebAclOversizeHandlingOutput) ToWebAclOversizeHandlingPtrOutputWithContext(ctx context.Context) WebAclOversizeHandlingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclOversizeHandling) *WebAclOversizeHandling {
		return &v
	}).(WebAclOversizeHandlingPtrOutput)
}

func (o WebAclOversizeHandlingOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclOversizeHandling] {
	return pulumix.Output[WebAclOversizeHandling]{
		OutputState: o.OutputState,
	}
}

func (o WebAclOversizeHandlingOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclOversizeHandlingOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclOversizeHandling) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclOversizeHandlingOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclOversizeHandlingOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclOversizeHandling) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclOversizeHandlingPtrOutput struct{ *pulumi.OutputState }

func (WebAclOversizeHandlingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclOversizeHandling)(nil)).Elem()
}

func (o WebAclOversizeHandlingPtrOutput) ToWebAclOversizeHandlingPtrOutput() WebAclOversizeHandlingPtrOutput {
	return o
}

func (o WebAclOversizeHandlingPtrOutput) ToWebAclOversizeHandlingPtrOutputWithContext(ctx context.Context) WebAclOversizeHandlingPtrOutput {
	return o
}

func (o WebAclOversizeHandlingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclOversizeHandling] {
	return pulumix.Output[*WebAclOversizeHandling]{
		OutputState: o.OutputState,
	}
}

func (o WebAclOversizeHandlingPtrOutput) Elem() WebAclOversizeHandlingOutput {
	return o.ApplyT(func(v *WebAclOversizeHandling) WebAclOversizeHandling {
		if v != nil {
			return *v
		}
		var ret WebAclOversizeHandling
		return ret
	}).(WebAclOversizeHandlingOutput)
}

func (o WebAclOversizeHandlingPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclOversizeHandlingPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclOversizeHandling) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclOversizeHandlingInput is an input type that accepts WebAclOversizeHandlingArgs and WebAclOversizeHandlingOutput values.
// You can construct a concrete instance of `WebAclOversizeHandlingInput` via:
//
//	WebAclOversizeHandlingArgs{...}
type WebAclOversizeHandlingInput interface {
	pulumi.Input

	ToWebAclOversizeHandlingOutput() WebAclOversizeHandlingOutput
	ToWebAclOversizeHandlingOutputWithContext(context.Context) WebAclOversizeHandlingOutput
}

var webAclOversizeHandlingPtrType = reflect.TypeOf((**WebAclOversizeHandling)(nil)).Elem()

type WebAclOversizeHandlingPtrInput interface {
	pulumi.Input

	ToWebAclOversizeHandlingPtrOutput() WebAclOversizeHandlingPtrOutput
	ToWebAclOversizeHandlingPtrOutputWithContext(context.Context) WebAclOversizeHandlingPtrOutput
}

type webAclOversizeHandlingPtr string

func WebAclOversizeHandlingPtr(v string) WebAclOversizeHandlingPtrInput {
	return (*webAclOversizeHandlingPtr)(&v)
}

func (*webAclOversizeHandlingPtr) ElementType() reflect.Type {
	return webAclOversizeHandlingPtrType
}

func (in *webAclOversizeHandlingPtr) ToWebAclOversizeHandlingPtrOutput() WebAclOversizeHandlingPtrOutput {
	return pulumi.ToOutput(in).(WebAclOversizeHandlingPtrOutput)
}

func (in *webAclOversizeHandlingPtr) ToWebAclOversizeHandlingPtrOutputWithContext(ctx context.Context) WebAclOversizeHandlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclOversizeHandlingPtrOutput)
}

func (in *webAclOversizeHandlingPtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclOversizeHandling] {
	return pulumix.Output[*WebAclOversizeHandling]{
		OutputState: in.ToWebAclOversizeHandlingPtrOutputWithContext(ctx).OutputState,
	}
}

// Position of the evaluation in the FieldToMatch of request.
type WebAclPositionalConstraint string

const (
	WebAclPositionalConstraintExactly      = WebAclPositionalConstraint("EXACTLY")
	WebAclPositionalConstraintStartsWith   = WebAclPositionalConstraint("STARTS_WITH")
	WebAclPositionalConstraintEndsWith     = WebAclPositionalConstraint("ENDS_WITH")
	WebAclPositionalConstraintContains     = WebAclPositionalConstraint("CONTAINS")
	WebAclPositionalConstraintContainsWord = WebAclPositionalConstraint("CONTAINS_WORD")
)

func (WebAclPositionalConstraint) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclPositionalConstraint)(nil)).Elem()
}

func (e WebAclPositionalConstraint) ToWebAclPositionalConstraintOutput() WebAclPositionalConstraintOutput {
	return pulumi.ToOutput(e).(WebAclPositionalConstraintOutput)
}

func (e WebAclPositionalConstraint) ToWebAclPositionalConstraintOutputWithContext(ctx context.Context) WebAclPositionalConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclPositionalConstraintOutput)
}

func (e WebAclPositionalConstraint) ToWebAclPositionalConstraintPtrOutput() WebAclPositionalConstraintPtrOutput {
	return e.ToWebAclPositionalConstraintPtrOutputWithContext(context.Background())
}

func (e WebAclPositionalConstraint) ToWebAclPositionalConstraintPtrOutputWithContext(ctx context.Context) WebAclPositionalConstraintPtrOutput {
	return WebAclPositionalConstraint(e).ToWebAclPositionalConstraintOutputWithContext(ctx).ToWebAclPositionalConstraintPtrOutputWithContext(ctx)
}

func (e WebAclPositionalConstraint) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclPositionalConstraint) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclPositionalConstraint) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclPositionalConstraint) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclPositionalConstraintOutput struct{ *pulumi.OutputState }

func (WebAclPositionalConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclPositionalConstraint)(nil)).Elem()
}

func (o WebAclPositionalConstraintOutput) ToWebAclPositionalConstraintOutput() WebAclPositionalConstraintOutput {
	return o
}

func (o WebAclPositionalConstraintOutput) ToWebAclPositionalConstraintOutputWithContext(ctx context.Context) WebAclPositionalConstraintOutput {
	return o
}

func (o WebAclPositionalConstraintOutput) ToWebAclPositionalConstraintPtrOutput() WebAclPositionalConstraintPtrOutput {
	return o.ToWebAclPositionalConstraintPtrOutputWithContext(context.Background())
}

func (o WebAclPositionalConstraintOutput) ToWebAclPositionalConstraintPtrOutputWithContext(ctx context.Context) WebAclPositionalConstraintPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclPositionalConstraint) *WebAclPositionalConstraint {
		return &v
	}).(WebAclPositionalConstraintPtrOutput)
}

func (o WebAclPositionalConstraintOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclPositionalConstraint] {
	return pulumix.Output[WebAclPositionalConstraint]{
		OutputState: o.OutputState,
	}
}

func (o WebAclPositionalConstraintOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclPositionalConstraintOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclPositionalConstraint) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclPositionalConstraintOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclPositionalConstraintOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclPositionalConstraint) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclPositionalConstraintPtrOutput struct{ *pulumi.OutputState }

func (WebAclPositionalConstraintPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclPositionalConstraint)(nil)).Elem()
}

func (o WebAclPositionalConstraintPtrOutput) ToWebAclPositionalConstraintPtrOutput() WebAclPositionalConstraintPtrOutput {
	return o
}

func (o WebAclPositionalConstraintPtrOutput) ToWebAclPositionalConstraintPtrOutputWithContext(ctx context.Context) WebAclPositionalConstraintPtrOutput {
	return o
}

func (o WebAclPositionalConstraintPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclPositionalConstraint] {
	return pulumix.Output[*WebAclPositionalConstraint]{
		OutputState: o.OutputState,
	}
}

func (o WebAclPositionalConstraintPtrOutput) Elem() WebAclPositionalConstraintOutput {
	return o.ApplyT(func(v *WebAclPositionalConstraint) WebAclPositionalConstraint {
		if v != nil {
			return *v
		}
		var ret WebAclPositionalConstraint
		return ret
	}).(WebAclPositionalConstraintOutput)
}

func (o WebAclPositionalConstraintPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclPositionalConstraintPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclPositionalConstraint) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclPositionalConstraintInput is an input type that accepts WebAclPositionalConstraintArgs and WebAclPositionalConstraintOutput values.
// You can construct a concrete instance of `WebAclPositionalConstraintInput` via:
//
//	WebAclPositionalConstraintArgs{...}
type WebAclPositionalConstraintInput interface {
	pulumi.Input

	ToWebAclPositionalConstraintOutput() WebAclPositionalConstraintOutput
	ToWebAclPositionalConstraintOutputWithContext(context.Context) WebAclPositionalConstraintOutput
}

var webAclPositionalConstraintPtrType = reflect.TypeOf((**WebAclPositionalConstraint)(nil)).Elem()

type WebAclPositionalConstraintPtrInput interface {
	pulumi.Input

	ToWebAclPositionalConstraintPtrOutput() WebAclPositionalConstraintPtrOutput
	ToWebAclPositionalConstraintPtrOutputWithContext(context.Context) WebAclPositionalConstraintPtrOutput
}

type webAclPositionalConstraintPtr string

func WebAclPositionalConstraintPtr(v string) WebAclPositionalConstraintPtrInput {
	return (*webAclPositionalConstraintPtr)(&v)
}

func (*webAclPositionalConstraintPtr) ElementType() reflect.Type {
	return webAclPositionalConstraintPtrType
}

func (in *webAclPositionalConstraintPtr) ToWebAclPositionalConstraintPtrOutput() WebAclPositionalConstraintPtrOutput {
	return pulumi.ToOutput(in).(WebAclPositionalConstraintPtrOutput)
}

func (in *webAclPositionalConstraintPtr) ToWebAclPositionalConstraintPtrOutputWithContext(ctx context.Context) WebAclPositionalConstraintPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclPositionalConstraintPtrOutput)
}

func (in *webAclPositionalConstraintPtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclPositionalConstraint] {
	return pulumix.Output[*WebAclPositionalConstraint]{
		OutputState: in.ToWebAclPositionalConstraintPtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclRateBasedStatementAggregateKeyType string

const (
	WebAclRateBasedStatementAggregateKeyTypeIp          = WebAclRateBasedStatementAggregateKeyType("IP")
	WebAclRateBasedStatementAggregateKeyTypeForwardedIp = WebAclRateBasedStatementAggregateKeyType("FORWARDED_IP")
	WebAclRateBasedStatementAggregateKeyTypeCustomKeys  = WebAclRateBasedStatementAggregateKeyType("CUSTOM_KEYS")
)

func (WebAclRateBasedStatementAggregateKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRateBasedStatementAggregateKeyType)(nil)).Elem()
}

func (e WebAclRateBasedStatementAggregateKeyType) ToWebAclRateBasedStatementAggregateKeyTypeOutput() WebAclRateBasedStatementAggregateKeyTypeOutput {
	return pulumi.ToOutput(e).(WebAclRateBasedStatementAggregateKeyTypeOutput)
}

func (e WebAclRateBasedStatementAggregateKeyType) ToWebAclRateBasedStatementAggregateKeyTypeOutputWithContext(ctx context.Context) WebAclRateBasedStatementAggregateKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclRateBasedStatementAggregateKeyTypeOutput)
}

func (e WebAclRateBasedStatementAggregateKeyType) ToWebAclRateBasedStatementAggregateKeyTypePtrOutput() WebAclRateBasedStatementAggregateKeyTypePtrOutput {
	return e.ToWebAclRateBasedStatementAggregateKeyTypePtrOutputWithContext(context.Background())
}

func (e WebAclRateBasedStatementAggregateKeyType) ToWebAclRateBasedStatementAggregateKeyTypePtrOutputWithContext(ctx context.Context) WebAclRateBasedStatementAggregateKeyTypePtrOutput {
	return WebAclRateBasedStatementAggregateKeyType(e).ToWebAclRateBasedStatementAggregateKeyTypeOutputWithContext(ctx).ToWebAclRateBasedStatementAggregateKeyTypePtrOutputWithContext(ctx)
}

func (e WebAclRateBasedStatementAggregateKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclRateBasedStatementAggregateKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclRateBasedStatementAggregateKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclRateBasedStatementAggregateKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclRateBasedStatementAggregateKeyTypeOutput struct{ *pulumi.OutputState }

func (WebAclRateBasedStatementAggregateKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRateBasedStatementAggregateKeyType)(nil)).Elem()
}

func (o WebAclRateBasedStatementAggregateKeyTypeOutput) ToWebAclRateBasedStatementAggregateKeyTypeOutput() WebAclRateBasedStatementAggregateKeyTypeOutput {
	return o
}

func (o WebAclRateBasedStatementAggregateKeyTypeOutput) ToWebAclRateBasedStatementAggregateKeyTypeOutputWithContext(ctx context.Context) WebAclRateBasedStatementAggregateKeyTypeOutput {
	return o
}

func (o WebAclRateBasedStatementAggregateKeyTypeOutput) ToWebAclRateBasedStatementAggregateKeyTypePtrOutput() WebAclRateBasedStatementAggregateKeyTypePtrOutput {
	return o.ToWebAclRateBasedStatementAggregateKeyTypePtrOutputWithContext(context.Background())
}

func (o WebAclRateBasedStatementAggregateKeyTypeOutput) ToWebAclRateBasedStatementAggregateKeyTypePtrOutputWithContext(ctx context.Context) WebAclRateBasedStatementAggregateKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclRateBasedStatementAggregateKeyType) *WebAclRateBasedStatementAggregateKeyType {
		return &v
	}).(WebAclRateBasedStatementAggregateKeyTypePtrOutput)
}

func (o WebAclRateBasedStatementAggregateKeyTypeOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRateBasedStatementAggregateKeyType] {
	return pulumix.Output[WebAclRateBasedStatementAggregateKeyType]{
		OutputState: o.OutputState,
	}
}

func (o WebAclRateBasedStatementAggregateKeyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclRateBasedStatementAggregateKeyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclRateBasedStatementAggregateKeyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclRateBasedStatementAggregateKeyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclRateBasedStatementAggregateKeyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclRateBasedStatementAggregateKeyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclRateBasedStatementAggregateKeyTypePtrOutput struct{ *pulumi.OutputState }

func (WebAclRateBasedStatementAggregateKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclRateBasedStatementAggregateKeyType)(nil)).Elem()
}

func (o WebAclRateBasedStatementAggregateKeyTypePtrOutput) ToWebAclRateBasedStatementAggregateKeyTypePtrOutput() WebAclRateBasedStatementAggregateKeyTypePtrOutput {
	return o
}

func (o WebAclRateBasedStatementAggregateKeyTypePtrOutput) ToWebAclRateBasedStatementAggregateKeyTypePtrOutputWithContext(ctx context.Context) WebAclRateBasedStatementAggregateKeyTypePtrOutput {
	return o
}

func (o WebAclRateBasedStatementAggregateKeyTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclRateBasedStatementAggregateKeyType] {
	return pulumix.Output[*WebAclRateBasedStatementAggregateKeyType]{
		OutputState: o.OutputState,
	}
}

func (o WebAclRateBasedStatementAggregateKeyTypePtrOutput) Elem() WebAclRateBasedStatementAggregateKeyTypeOutput {
	return o.ApplyT(func(v *WebAclRateBasedStatementAggregateKeyType) WebAclRateBasedStatementAggregateKeyType {
		if v != nil {
			return *v
		}
		var ret WebAclRateBasedStatementAggregateKeyType
		return ret
	}).(WebAclRateBasedStatementAggregateKeyTypeOutput)
}

func (o WebAclRateBasedStatementAggregateKeyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclRateBasedStatementAggregateKeyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclRateBasedStatementAggregateKeyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclRateBasedStatementAggregateKeyTypeInput is an input type that accepts WebAclRateBasedStatementAggregateKeyTypeArgs and WebAclRateBasedStatementAggregateKeyTypeOutput values.
// You can construct a concrete instance of `WebAclRateBasedStatementAggregateKeyTypeInput` via:
//
//	WebAclRateBasedStatementAggregateKeyTypeArgs{...}
type WebAclRateBasedStatementAggregateKeyTypeInput interface {
	pulumi.Input

	ToWebAclRateBasedStatementAggregateKeyTypeOutput() WebAclRateBasedStatementAggregateKeyTypeOutput
	ToWebAclRateBasedStatementAggregateKeyTypeOutputWithContext(context.Context) WebAclRateBasedStatementAggregateKeyTypeOutput
}

var webAclRateBasedStatementAggregateKeyTypePtrType = reflect.TypeOf((**WebAclRateBasedStatementAggregateKeyType)(nil)).Elem()

type WebAclRateBasedStatementAggregateKeyTypePtrInput interface {
	pulumi.Input

	ToWebAclRateBasedStatementAggregateKeyTypePtrOutput() WebAclRateBasedStatementAggregateKeyTypePtrOutput
	ToWebAclRateBasedStatementAggregateKeyTypePtrOutputWithContext(context.Context) WebAclRateBasedStatementAggregateKeyTypePtrOutput
}

type webAclRateBasedStatementAggregateKeyTypePtr string

func WebAclRateBasedStatementAggregateKeyTypePtr(v string) WebAclRateBasedStatementAggregateKeyTypePtrInput {
	return (*webAclRateBasedStatementAggregateKeyTypePtr)(&v)
}

func (*webAclRateBasedStatementAggregateKeyTypePtr) ElementType() reflect.Type {
	return webAclRateBasedStatementAggregateKeyTypePtrType
}

func (in *webAclRateBasedStatementAggregateKeyTypePtr) ToWebAclRateBasedStatementAggregateKeyTypePtrOutput() WebAclRateBasedStatementAggregateKeyTypePtrOutput {
	return pulumi.ToOutput(in).(WebAclRateBasedStatementAggregateKeyTypePtrOutput)
}

func (in *webAclRateBasedStatementAggregateKeyTypePtr) ToWebAclRateBasedStatementAggregateKeyTypePtrOutputWithContext(ctx context.Context) WebAclRateBasedStatementAggregateKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclRateBasedStatementAggregateKeyTypePtrOutput)
}

func (in *webAclRateBasedStatementAggregateKeyTypePtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclRateBasedStatementAggregateKeyType] {
	return pulumix.Output[*WebAclRateBasedStatementAggregateKeyType]{
		OutputState: in.ToWebAclRateBasedStatementAggregateKeyTypePtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclRequestInspectionAcfpPayloadType string

const (
	WebAclRequestInspectionAcfpPayloadTypeJson        = WebAclRequestInspectionAcfpPayloadType("JSON")
	WebAclRequestInspectionAcfpPayloadTypeFormEncoded = WebAclRequestInspectionAcfpPayloadType("FORM_ENCODED")
)

func (WebAclRequestInspectionAcfpPayloadType) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRequestInspectionAcfpPayloadType)(nil)).Elem()
}

func (e WebAclRequestInspectionAcfpPayloadType) ToWebAclRequestInspectionAcfpPayloadTypeOutput() WebAclRequestInspectionAcfpPayloadTypeOutput {
	return pulumi.ToOutput(e).(WebAclRequestInspectionAcfpPayloadTypeOutput)
}

func (e WebAclRequestInspectionAcfpPayloadType) ToWebAclRequestInspectionAcfpPayloadTypeOutputWithContext(ctx context.Context) WebAclRequestInspectionAcfpPayloadTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclRequestInspectionAcfpPayloadTypeOutput)
}

func (e WebAclRequestInspectionAcfpPayloadType) ToWebAclRequestInspectionAcfpPayloadTypePtrOutput() WebAclRequestInspectionAcfpPayloadTypePtrOutput {
	return e.ToWebAclRequestInspectionAcfpPayloadTypePtrOutputWithContext(context.Background())
}

func (e WebAclRequestInspectionAcfpPayloadType) ToWebAclRequestInspectionAcfpPayloadTypePtrOutputWithContext(ctx context.Context) WebAclRequestInspectionAcfpPayloadTypePtrOutput {
	return WebAclRequestInspectionAcfpPayloadType(e).ToWebAclRequestInspectionAcfpPayloadTypeOutputWithContext(ctx).ToWebAclRequestInspectionAcfpPayloadTypePtrOutputWithContext(ctx)
}

func (e WebAclRequestInspectionAcfpPayloadType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclRequestInspectionAcfpPayloadType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclRequestInspectionAcfpPayloadType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclRequestInspectionAcfpPayloadType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclRequestInspectionAcfpPayloadTypeOutput struct{ *pulumi.OutputState }

func (WebAclRequestInspectionAcfpPayloadTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRequestInspectionAcfpPayloadType)(nil)).Elem()
}

func (o WebAclRequestInspectionAcfpPayloadTypeOutput) ToWebAclRequestInspectionAcfpPayloadTypeOutput() WebAclRequestInspectionAcfpPayloadTypeOutput {
	return o
}

func (o WebAclRequestInspectionAcfpPayloadTypeOutput) ToWebAclRequestInspectionAcfpPayloadTypeOutputWithContext(ctx context.Context) WebAclRequestInspectionAcfpPayloadTypeOutput {
	return o
}

func (o WebAclRequestInspectionAcfpPayloadTypeOutput) ToWebAclRequestInspectionAcfpPayloadTypePtrOutput() WebAclRequestInspectionAcfpPayloadTypePtrOutput {
	return o.ToWebAclRequestInspectionAcfpPayloadTypePtrOutputWithContext(context.Background())
}

func (o WebAclRequestInspectionAcfpPayloadTypeOutput) ToWebAclRequestInspectionAcfpPayloadTypePtrOutputWithContext(ctx context.Context) WebAclRequestInspectionAcfpPayloadTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclRequestInspectionAcfpPayloadType) *WebAclRequestInspectionAcfpPayloadType {
		return &v
	}).(WebAclRequestInspectionAcfpPayloadTypePtrOutput)
}

func (o WebAclRequestInspectionAcfpPayloadTypeOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRequestInspectionAcfpPayloadType] {
	return pulumix.Output[WebAclRequestInspectionAcfpPayloadType]{
		OutputState: o.OutputState,
	}
}

func (o WebAclRequestInspectionAcfpPayloadTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclRequestInspectionAcfpPayloadTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclRequestInspectionAcfpPayloadType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclRequestInspectionAcfpPayloadTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclRequestInspectionAcfpPayloadTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclRequestInspectionAcfpPayloadType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclRequestInspectionAcfpPayloadTypePtrOutput struct{ *pulumi.OutputState }

func (WebAclRequestInspectionAcfpPayloadTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclRequestInspectionAcfpPayloadType)(nil)).Elem()
}

func (o WebAclRequestInspectionAcfpPayloadTypePtrOutput) ToWebAclRequestInspectionAcfpPayloadTypePtrOutput() WebAclRequestInspectionAcfpPayloadTypePtrOutput {
	return o
}

func (o WebAclRequestInspectionAcfpPayloadTypePtrOutput) ToWebAclRequestInspectionAcfpPayloadTypePtrOutputWithContext(ctx context.Context) WebAclRequestInspectionAcfpPayloadTypePtrOutput {
	return o
}

func (o WebAclRequestInspectionAcfpPayloadTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclRequestInspectionAcfpPayloadType] {
	return pulumix.Output[*WebAclRequestInspectionAcfpPayloadType]{
		OutputState: o.OutputState,
	}
}

func (o WebAclRequestInspectionAcfpPayloadTypePtrOutput) Elem() WebAclRequestInspectionAcfpPayloadTypeOutput {
	return o.ApplyT(func(v *WebAclRequestInspectionAcfpPayloadType) WebAclRequestInspectionAcfpPayloadType {
		if v != nil {
			return *v
		}
		var ret WebAclRequestInspectionAcfpPayloadType
		return ret
	}).(WebAclRequestInspectionAcfpPayloadTypeOutput)
}

func (o WebAclRequestInspectionAcfpPayloadTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclRequestInspectionAcfpPayloadTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclRequestInspectionAcfpPayloadType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclRequestInspectionAcfpPayloadTypeInput is an input type that accepts WebAclRequestInspectionAcfpPayloadTypeArgs and WebAclRequestInspectionAcfpPayloadTypeOutput values.
// You can construct a concrete instance of `WebAclRequestInspectionAcfpPayloadTypeInput` via:
//
//	WebAclRequestInspectionAcfpPayloadTypeArgs{...}
type WebAclRequestInspectionAcfpPayloadTypeInput interface {
	pulumi.Input

	ToWebAclRequestInspectionAcfpPayloadTypeOutput() WebAclRequestInspectionAcfpPayloadTypeOutput
	ToWebAclRequestInspectionAcfpPayloadTypeOutputWithContext(context.Context) WebAclRequestInspectionAcfpPayloadTypeOutput
}

var webAclRequestInspectionAcfpPayloadTypePtrType = reflect.TypeOf((**WebAclRequestInspectionAcfpPayloadType)(nil)).Elem()

type WebAclRequestInspectionAcfpPayloadTypePtrInput interface {
	pulumi.Input

	ToWebAclRequestInspectionAcfpPayloadTypePtrOutput() WebAclRequestInspectionAcfpPayloadTypePtrOutput
	ToWebAclRequestInspectionAcfpPayloadTypePtrOutputWithContext(context.Context) WebAclRequestInspectionAcfpPayloadTypePtrOutput
}

type webAclRequestInspectionAcfpPayloadTypePtr string

func WebAclRequestInspectionAcfpPayloadTypePtr(v string) WebAclRequestInspectionAcfpPayloadTypePtrInput {
	return (*webAclRequestInspectionAcfpPayloadTypePtr)(&v)
}

func (*webAclRequestInspectionAcfpPayloadTypePtr) ElementType() reflect.Type {
	return webAclRequestInspectionAcfpPayloadTypePtrType
}

func (in *webAclRequestInspectionAcfpPayloadTypePtr) ToWebAclRequestInspectionAcfpPayloadTypePtrOutput() WebAclRequestInspectionAcfpPayloadTypePtrOutput {
	return pulumi.ToOutput(in).(WebAclRequestInspectionAcfpPayloadTypePtrOutput)
}

func (in *webAclRequestInspectionAcfpPayloadTypePtr) ToWebAclRequestInspectionAcfpPayloadTypePtrOutputWithContext(ctx context.Context) WebAclRequestInspectionAcfpPayloadTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclRequestInspectionAcfpPayloadTypePtrOutput)
}

func (in *webAclRequestInspectionAcfpPayloadTypePtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclRequestInspectionAcfpPayloadType] {
	return pulumix.Output[*WebAclRequestInspectionAcfpPayloadType]{
		OutputState: in.ToWebAclRequestInspectionAcfpPayloadTypePtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclRequestInspectionPayloadType string

const (
	WebAclRequestInspectionPayloadTypeJson        = WebAclRequestInspectionPayloadType("JSON")
	WebAclRequestInspectionPayloadTypeFormEncoded = WebAclRequestInspectionPayloadType("FORM_ENCODED")
)

func (WebAclRequestInspectionPayloadType) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRequestInspectionPayloadType)(nil)).Elem()
}

func (e WebAclRequestInspectionPayloadType) ToWebAclRequestInspectionPayloadTypeOutput() WebAclRequestInspectionPayloadTypeOutput {
	return pulumi.ToOutput(e).(WebAclRequestInspectionPayloadTypeOutput)
}

func (e WebAclRequestInspectionPayloadType) ToWebAclRequestInspectionPayloadTypeOutputWithContext(ctx context.Context) WebAclRequestInspectionPayloadTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclRequestInspectionPayloadTypeOutput)
}

func (e WebAclRequestInspectionPayloadType) ToWebAclRequestInspectionPayloadTypePtrOutput() WebAclRequestInspectionPayloadTypePtrOutput {
	return e.ToWebAclRequestInspectionPayloadTypePtrOutputWithContext(context.Background())
}

func (e WebAclRequestInspectionPayloadType) ToWebAclRequestInspectionPayloadTypePtrOutputWithContext(ctx context.Context) WebAclRequestInspectionPayloadTypePtrOutput {
	return WebAclRequestInspectionPayloadType(e).ToWebAclRequestInspectionPayloadTypeOutputWithContext(ctx).ToWebAclRequestInspectionPayloadTypePtrOutputWithContext(ctx)
}

func (e WebAclRequestInspectionPayloadType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclRequestInspectionPayloadType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclRequestInspectionPayloadType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclRequestInspectionPayloadType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclRequestInspectionPayloadTypeOutput struct{ *pulumi.OutputState }

func (WebAclRequestInspectionPayloadTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclRequestInspectionPayloadType)(nil)).Elem()
}

func (o WebAclRequestInspectionPayloadTypeOutput) ToWebAclRequestInspectionPayloadTypeOutput() WebAclRequestInspectionPayloadTypeOutput {
	return o
}

func (o WebAclRequestInspectionPayloadTypeOutput) ToWebAclRequestInspectionPayloadTypeOutputWithContext(ctx context.Context) WebAclRequestInspectionPayloadTypeOutput {
	return o
}

func (o WebAclRequestInspectionPayloadTypeOutput) ToWebAclRequestInspectionPayloadTypePtrOutput() WebAclRequestInspectionPayloadTypePtrOutput {
	return o.ToWebAclRequestInspectionPayloadTypePtrOutputWithContext(context.Background())
}

func (o WebAclRequestInspectionPayloadTypeOutput) ToWebAclRequestInspectionPayloadTypePtrOutputWithContext(ctx context.Context) WebAclRequestInspectionPayloadTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclRequestInspectionPayloadType) *WebAclRequestInspectionPayloadType {
		return &v
	}).(WebAclRequestInspectionPayloadTypePtrOutput)
}

func (o WebAclRequestInspectionPayloadTypeOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclRequestInspectionPayloadType] {
	return pulumix.Output[WebAclRequestInspectionPayloadType]{
		OutputState: o.OutputState,
	}
}

func (o WebAclRequestInspectionPayloadTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclRequestInspectionPayloadTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclRequestInspectionPayloadType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclRequestInspectionPayloadTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclRequestInspectionPayloadTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclRequestInspectionPayloadType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclRequestInspectionPayloadTypePtrOutput struct{ *pulumi.OutputState }

func (WebAclRequestInspectionPayloadTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclRequestInspectionPayloadType)(nil)).Elem()
}

func (o WebAclRequestInspectionPayloadTypePtrOutput) ToWebAclRequestInspectionPayloadTypePtrOutput() WebAclRequestInspectionPayloadTypePtrOutput {
	return o
}

func (o WebAclRequestInspectionPayloadTypePtrOutput) ToWebAclRequestInspectionPayloadTypePtrOutputWithContext(ctx context.Context) WebAclRequestInspectionPayloadTypePtrOutput {
	return o
}

func (o WebAclRequestInspectionPayloadTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclRequestInspectionPayloadType] {
	return pulumix.Output[*WebAclRequestInspectionPayloadType]{
		OutputState: o.OutputState,
	}
}

func (o WebAclRequestInspectionPayloadTypePtrOutput) Elem() WebAclRequestInspectionPayloadTypeOutput {
	return o.ApplyT(func(v *WebAclRequestInspectionPayloadType) WebAclRequestInspectionPayloadType {
		if v != nil {
			return *v
		}
		var ret WebAclRequestInspectionPayloadType
		return ret
	}).(WebAclRequestInspectionPayloadTypeOutput)
}

func (o WebAclRequestInspectionPayloadTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclRequestInspectionPayloadTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclRequestInspectionPayloadType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclRequestInspectionPayloadTypeInput is an input type that accepts WebAclRequestInspectionPayloadTypeArgs and WebAclRequestInspectionPayloadTypeOutput values.
// You can construct a concrete instance of `WebAclRequestInspectionPayloadTypeInput` via:
//
//	WebAclRequestInspectionPayloadTypeArgs{...}
type WebAclRequestInspectionPayloadTypeInput interface {
	pulumi.Input

	ToWebAclRequestInspectionPayloadTypeOutput() WebAclRequestInspectionPayloadTypeOutput
	ToWebAclRequestInspectionPayloadTypeOutputWithContext(context.Context) WebAclRequestInspectionPayloadTypeOutput
}

var webAclRequestInspectionPayloadTypePtrType = reflect.TypeOf((**WebAclRequestInspectionPayloadType)(nil)).Elem()

type WebAclRequestInspectionPayloadTypePtrInput interface {
	pulumi.Input

	ToWebAclRequestInspectionPayloadTypePtrOutput() WebAclRequestInspectionPayloadTypePtrOutput
	ToWebAclRequestInspectionPayloadTypePtrOutputWithContext(context.Context) WebAclRequestInspectionPayloadTypePtrOutput
}

type webAclRequestInspectionPayloadTypePtr string

func WebAclRequestInspectionPayloadTypePtr(v string) WebAclRequestInspectionPayloadTypePtrInput {
	return (*webAclRequestInspectionPayloadTypePtr)(&v)
}

func (*webAclRequestInspectionPayloadTypePtr) ElementType() reflect.Type {
	return webAclRequestInspectionPayloadTypePtrType
}

func (in *webAclRequestInspectionPayloadTypePtr) ToWebAclRequestInspectionPayloadTypePtrOutput() WebAclRequestInspectionPayloadTypePtrOutput {
	return pulumi.ToOutput(in).(WebAclRequestInspectionPayloadTypePtrOutput)
}

func (in *webAclRequestInspectionPayloadTypePtr) ToWebAclRequestInspectionPayloadTypePtrOutputWithContext(ctx context.Context) WebAclRequestInspectionPayloadTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclRequestInspectionPayloadTypePtrOutput)
}

func (in *webAclRequestInspectionPayloadTypePtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclRequestInspectionPayloadType] {
	return pulumix.Output[*WebAclRequestInspectionPayloadType]{
		OutputState: in.ToWebAclRequestInspectionPayloadTypePtrOutputWithContext(ctx).OutputState,
	}
}

// Use CLOUDFRONT for CloudFront WebACL, use REGIONAL for Application Load Balancer and API Gateway.
type WebAclScope string

const (
	WebAclScopeCloudfront = WebAclScope("CLOUDFRONT")
	WebAclScopeRegional   = WebAclScope("REGIONAL")
)

func (WebAclScope) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclScope)(nil)).Elem()
}

func (e WebAclScope) ToWebAclScopeOutput() WebAclScopeOutput {
	return pulumi.ToOutput(e).(WebAclScopeOutput)
}

func (e WebAclScope) ToWebAclScopeOutputWithContext(ctx context.Context) WebAclScopeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclScopeOutput)
}

func (e WebAclScope) ToWebAclScopePtrOutput() WebAclScopePtrOutput {
	return e.ToWebAclScopePtrOutputWithContext(context.Background())
}

func (e WebAclScope) ToWebAclScopePtrOutputWithContext(ctx context.Context) WebAclScopePtrOutput {
	return WebAclScope(e).ToWebAclScopeOutputWithContext(ctx).ToWebAclScopePtrOutputWithContext(ctx)
}

func (e WebAclScope) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclScope) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclScope) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclScope) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclScopeOutput struct{ *pulumi.OutputState }

func (WebAclScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclScope)(nil)).Elem()
}

func (o WebAclScopeOutput) ToWebAclScopeOutput() WebAclScopeOutput {
	return o
}

func (o WebAclScopeOutput) ToWebAclScopeOutputWithContext(ctx context.Context) WebAclScopeOutput {
	return o
}

func (o WebAclScopeOutput) ToWebAclScopePtrOutput() WebAclScopePtrOutput {
	return o.ToWebAclScopePtrOutputWithContext(context.Background())
}

func (o WebAclScopeOutput) ToWebAclScopePtrOutputWithContext(ctx context.Context) WebAclScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclScope) *WebAclScope {
		return &v
	}).(WebAclScopePtrOutput)
}

func (o WebAclScopeOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclScope] {
	return pulumix.Output[WebAclScope]{
		OutputState: o.OutputState,
	}
}

func (o WebAclScopeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclScopeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclScope) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclScopeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclScopeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclScope) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclScopePtrOutput struct{ *pulumi.OutputState }

func (WebAclScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclScope)(nil)).Elem()
}

func (o WebAclScopePtrOutput) ToWebAclScopePtrOutput() WebAclScopePtrOutput {
	return o
}

func (o WebAclScopePtrOutput) ToWebAclScopePtrOutputWithContext(ctx context.Context) WebAclScopePtrOutput {
	return o
}

func (o WebAclScopePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclScope] {
	return pulumix.Output[*WebAclScope]{
		OutputState: o.OutputState,
	}
}

func (o WebAclScopePtrOutput) Elem() WebAclScopeOutput {
	return o.ApplyT(func(v *WebAclScope) WebAclScope {
		if v != nil {
			return *v
		}
		var ret WebAclScope
		return ret
	}).(WebAclScopeOutput)
}

func (o WebAclScopePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclScopePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclScope) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclScopeInput is an input type that accepts WebAclScopeArgs and WebAclScopeOutput values.
// You can construct a concrete instance of `WebAclScopeInput` via:
//
//	WebAclScopeArgs{...}
type WebAclScopeInput interface {
	pulumi.Input

	ToWebAclScopeOutput() WebAclScopeOutput
	ToWebAclScopeOutputWithContext(context.Context) WebAclScopeOutput
}

var webAclScopePtrType = reflect.TypeOf((**WebAclScope)(nil)).Elem()

type WebAclScopePtrInput interface {
	pulumi.Input

	ToWebAclScopePtrOutput() WebAclScopePtrOutput
	ToWebAclScopePtrOutputWithContext(context.Context) WebAclScopePtrOutput
}

type webAclScopePtr string

func WebAclScopePtr(v string) WebAclScopePtrInput {
	return (*webAclScopePtr)(&v)
}

func (*webAclScopePtr) ElementType() reflect.Type {
	return webAclScopePtrType
}

func (in *webAclScopePtr) ToWebAclScopePtrOutput() WebAclScopePtrOutput {
	return pulumi.ToOutput(in).(WebAclScopePtrOutput)
}

func (in *webAclScopePtr) ToWebAclScopePtrOutputWithContext(ctx context.Context) WebAclScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclScopePtrOutput)
}

func (in *webAclScopePtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclScope] {
	return pulumix.Output[*WebAclScope]{
		OutputState: in.ToWebAclScopePtrOutputWithContext(ctx).OutputState,
	}
}

// Sensitivity Level current only used for sqli match statements.
type WebAclSensitivityLevel string

const (
	WebAclSensitivityLevelLow  = WebAclSensitivityLevel("LOW")
	WebAclSensitivityLevelHigh = WebAclSensitivityLevel("HIGH")
)

func (WebAclSensitivityLevel) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclSensitivityLevel)(nil)).Elem()
}

func (e WebAclSensitivityLevel) ToWebAclSensitivityLevelOutput() WebAclSensitivityLevelOutput {
	return pulumi.ToOutput(e).(WebAclSensitivityLevelOutput)
}

func (e WebAclSensitivityLevel) ToWebAclSensitivityLevelOutputWithContext(ctx context.Context) WebAclSensitivityLevelOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclSensitivityLevelOutput)
}

func (e WebAclSensitivityLevel) ToWebAclSensitivityLevelPtrOutput() WebAclSensitivityLevelPtrOutput {
	return e.ToWebAclSensitivityLevelPtrOutputWithContext(context.Background())
}

func (e WebAclSensitivityLevel) ToWebAclSensitivityLevelPtrOutputWithContext(ctx context.Context) WebAclSensitivityLevelPtrOutput {
	return WebAclSensitivityLevel(e).ToWebAclSensitivityLevelOutputWithContext(ctx).ToWebAclSensitivityLevelPtrOutputWithContext(ctx)
}

func (e WebAclSensitivityLevel) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclSensitivityLevel) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclSensitivityLevel) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclSensitivityLevel) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclSensitivityLevelOutput struct{ *pulumi.OutputState }

func (WebAclSensitivityLevelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclSensitivityLevel)(nil)).Elem()
}

func (o WebAclSensitivityLevelOutput) ToWebAclSensitivityLevelOutput() WebAclSensitivityLevelOutput {
	return o
}

func (o WebAclSensitivityLevelOutput) ToWebAclSensitivityLevelOutputWithContext(ctx context.Context) WebAclSensitivityLevelOutput {
	return o
}

func (o WebAclSensitivityLevelOutput) ToWebAclSensitivityLevelPtrOutput() WebAclSensitivityLevelPtrOutput {
	return o.ToWebAclSensitivityLevelPtrOutputWithContext(context.Background())
}

func (o WebAclSensitivityLevelOutput) ToWebAclSensitivityLevelPtrOutputWithContext(ctx context.Context) WebAclSensitivityLevelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclSensitivityLevel) *WebAclSensitivityLevel {
		return &v
	}).(WebAclSensitivityLevelPtrOutput)
}

func (o WebAclSensitivityLevelOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclSensitivityLevel] {
	return pulumix.Output[WebAclSensitivityLevel]{
		OutputState: o.OutputState,
	}
}

func (o WebAclSensitivityLevelOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclSensitivityLevelOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclSensitivityLevel) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclSensitivityLevelOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclSensitivityLevelOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclSensitivityLevel) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclSensitivityLevelPtrOutput struct{ *pulumi.OutputState }

func (WebAclSensitivityLevelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclSensitivityLevel)(nil)).Elem()
}

func (o WebAclSensitivityLevelPtrOutput) ToWebAclSensitivityLevelPtrOutput() WebAclSensitivityLevelPtrOutput {
	return o
}

func (o WebAclSensitivityLevelPtrOutput) ToWebAclSensitivityLevelPtrOutputWithContext(ctx context.Context) WebAclSensitivityLevelPtrOutput {
	return o
}

func (o WebAclSensitivityLevelPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclSensitivityLevel] {
	return pulumix.Output[*WebAclSensitivityLevel]{
		OutputState: o.OutputState,
	}
}

func (o WebAclSensitivityLevelPtrOutput) Elem() WebAclSensitivityLevelOutput {
	return o.ApplyT(func(v *WebAclSensitivityLevel) WebAclSensitivityLevel {
		if v != nil {
			return *v
		}
		var ret WebAclSensitivityLevel
		return ret
	}).(WebAclSensitivityLevelOutput)
}

func (o WebAclSensitivityLevelPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclSensitivityLevelPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclSensitivityLevel) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclSensitivityLevelInput is an input type that accepts WebAclSensitivityLevelArgs and WebAclSensitivityLevelOutput values.
// You can construct a concrete instance of `WebAclSensitivityLevelInput` via:
//
//	WebAclSensitivityLevelArgs{...}
type WebAclSensitivityLevelInput interface {
	pulumi.Input

	ToWebAclSensitivityLevelOutput() WebAclSensitivityLevelOutput
	ToWebAclSensitivityLevelOutputWithContext(context.Context) WebAclSensitivityLevelOutput
}

var webAclSensitivityLevelPtrType = reflect.TypeOf((**WebAclSensitivityLevel)(nil)).Elem()

type WebAclSensitivityLevelPtrInput interface {
	pulumi.Input

	ToWebAclSensitivityLevelPtrOutput() WebAclSensitivityLevelPtrOutput
	ToWebAclSensitivityLevelPtrOutputWithContext(context.Context) WebAclSensitivityLevelPtrOutput
}

type webAclSensitivityLevelPtr string

func WebAclSensitivityLevelPtr(v string) WebAclSensitivityLevelPtrInput {
	return (*webAclSensitivityLevelPtr)(&v)
}

func (*webAclSensitivityLevelPtr) ElementType() reflect.Type {
	return webAclSensitivityLevelPtrType
}

func (in *webAclSensitivityLevelPtr) ToWebAclSensitivityLevelPtrOutput() WebAclSensitivityLevelPtrOutput {
	return pulumi.ToOutput(in).(WebAclSensitivityLevelPtrOutput)
}

func (in *webAclSensitivityLevelPtr) ToWebAclSensitivityLevelPtrOutputWithContext(ctx context.Context) WebAclSensitivityLevelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclSensitivityLevelPtrOutput)
}

func (in *webAclSensitivityLevelPtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclSensitivityLevel] {
	return pulumix.Output[*WebAclSensitivityLevel]{
		OutputState: in.ToWebAclSensitivityLevelPtrOutputWithContext(ctx).OutputState,
	}
}

type WebAclSizeConstraintStatementComparisonOperator string

const (
	WebAclSizeConstraintStatementComparisonOperatorEq = WebAclSizeConstraintStatementComparisonOperator("EQ")
	WebAclSizeConstraintStatementComparisonOperatorNe = WebAclSizeConstraintStatementComparisonOperator("NE")
	WebAclSizeConstraintStatementComparisonOperatorLe = WebAclSizeConstraintStatementComparisonOperator("LE")
	WebAclSizeConstraintStatementComparisonOperatorLt = WebAclSizeConstraintStatementComparisonOperator("LT")
	WebAclSizeConstraintStatementComparisonOperatorGe = WebAclSizeConstraintStatementComparisonOperator("GE")
	WebAclSizeConstraintStatementComparisonOperatorGt = WebAclSizeConstraintStatementComparisonOperator("GT")
)

func (WebAclSizeConstraintStatementComparisonOperator) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclSizeConstraintStatementComparisonOperator)(nil)).Elem()
}

func (e WebAclSizeConstraintStatementComparisonOperator) ToWebAclSizeConstraintStatementComparisonOperatorOutput() WebAclSizeConstraintStatementComparisonOperatorOutput {
	return pulumi.ToOutput(e).(WebAclSizeConstraintStatementComparisonOperatorOutput)
}

func (e WebAclSizeConstraintStatementComparisonOperator) ToWebAclSizeConstraintStatementComparisonOperatorOutputWithContext(ctx context.Context) WebAclSizeConstraintStatementComparisonOperatorOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclSizeConstraintStatementComparisonOperatorOutput)
}

func (e WebAclSizeConstraintStatementComparisonOperator) ToWebAclSizeConstraintStatementComparisonOperatorPtrOutput() WebAclSizeConstraintStatementComparisonOperatorPtrOutput {
	return e.ToWebAclSizeConstraintStatementComparisonOperatorPtrOutputWithContext(context.Background())
}

func (e WebAclSizeConstraintStatementComparisonOperator) ToWebAclSizeConstraintStatementComparisonOperatorPtrOutputWithContext(ctx context.Context) WebAclSizeConstraintStatementComparisonOperatorPtrOutput {
	return WebAclSizeConstraintStatementComparisonOperator(e).ToWebAclSizeConstraintStatementComparisonOperatorOutputWithContext(ctx).ToWebAclSizeConstraintStatementComparisonOperatorPtrOutputWithContext(ctx)
}

func (e WebAclSizeConstraintStatementComparisonOperator) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclSizeConstraintStatementComparisonOperator) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclSizeConstraintStatementComparisonOperator) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclSizeConstraintStatementComparisonOperator) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclSizeConstraintStatementComparisonOperatorOutput struct{ *pulumi.OutputState }

func (WebAclSizeConstraintStatementComparisonOperatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclSizeConstraintStatementComparisonOperator)(nil)).Elem()
}

func (o WebAclSizeConstraintStatementComparisonOperatorOutput) ToWebAclSizeConstraintStatementComparisonOperatorOutput() WebAclSizeConstraintStatementComparisonOperatorOutput {
	return o
}

func (o WebAclSizeConstraintStatementComparisonOperatorOutput) ToWebAclSizeConstraintStatementComparisonOperatorOutputWithContext(ctx context.Context) WebAclSizeConstraintStatementComparisonOperatorOutput {
	return o
}

func (o WebAclSizeConstraintStatementComparisonOperatorOutput) ToWebAclSizeConstraintStatementComparisonOperatorPtrOutput() WebAclSizeConstraintStatementComparisonOperatorPtrOutput {
	return o.ToWebAclSizeConstraintStatementComparisonOperatorPtrOutputWithContext(context.Background())
}

func (o WebAclSizeConstraintStatementComparisonOperatorOutput) ToWebAclSizeConstraintStatementComparisonOperatorPtrOutputWithContext(ctx context.Context) WebAclSizeConstraintStatementComparisonOperatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclSizeConstraintStatementComparisonOperator) *WebAclSizeConstraintStatementComparisonOperator {
		return &v
	}).(WebAclSizeConstraintStatementComparisonOperatorPtrOutput)
}

func (o WebAclSizeConstraintStatementComparisonOperatorOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclSizeConstraintStatementComparisonOperator] {
	return pulumix.Output[WebAclSizeConstraintStatementComparisonOperator]{
		OutputState: o.OutputState,
	}
}

func (o WebAclSizeConstraintStatementComparisonOperatorOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclSizeConstraintStatementComparisonOperatorOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclSizeConstraintStatementComparisonOperator) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclSizeConstraintStatementComparisonOperatorOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclSizeConstraintStatementComparisonOperatorOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclSizeConstraintStatementComparisonOperator) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclSizeConstraintStatementComparisonOperatorPtrOutput struct{ *pulumi.OutputState }

func (WebAclSizeConstraintStatementComparisonOperatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclSizeConstraintStatementComparisonOperator)(nil)).Elem()
}

func (o WebAclSizeConstraintStatementComparisonOperatorPtrOutput) ToWebAclSizeConstraintStatementComparisonOperatorPtrOutput() WebAclSizeConstraintStatementComparisonOperatorPtrOutput {
	return o
}

func (o WebAclSizeConstraintStatementComparisonOperatorPtrOutput) ToWebAclSizeConstraintStatementComparisonOperatorPtrOutputWithContext(ctx context.Context) WebAclSizeConstraintStatementComparisonOperatorPtrOutput {
	return o
}

func (o WebAclSizeConstraintStatementComparisonOperatorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclSizeConstraintStatementComparisonOperator] {
	return pulumix.Output[*WebAclSizeConstraintStatementComparisonOperator]{
		OutputState: o.OutputState,
	}
}

func (o WebAclSizeConstraintStatementComparisonOperatorPtrOutput) Elem() WebAclSizeConstraintStatementComparisonOperatorOutput {
	return o.ApplyT(func(v *WebAclSizeConstraintStatementComparisonOperator) WebAclSizeConstraintStatementComparisonOperator {
		if v != nil {
			return *v
		}
		var ret WebAclSizeConstraintStatementComparisonOperator
		return ret
	}).(WebAclSizeConstraintStatementComparisonOperatorOutput)
}

func (o WebAclSizeConstraintStatementComparisonOperatorPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclSizeConstraintStatementComparisonOperatorPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclSizeConstraintStatementComparisonOperator) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclSizeConstraintStatementComparisonOperatorInput is an input type that accepts WebAclSizeConstraintStatementComparisonOperatorArgs and WebAclSizeConstraintStatementComparisonOperatorOutput values.
// You can construct a concrete instance of `WebAclSizeConstraintStatementComparisonOperatorInput` via:
//
//	WebAclSizeConstraintStatementComparisonOperatorArgs{...}
type WebAclSizeConstraintStatementComparisonOperatorInput interface {
	pulumi.Input

	ToWebAclSizeConstraintStatementComparisonOperatorOutput() WebAclSizeConstraintStatementComparisonOperatorOutput
	ToWebAclSizeConstraintStatementComparisonOperatorOutputWithContext(context.Context) WebAclSizeConstraintStatementComparisonOperatorOutput
}

var webAclSizeConstraintStatementComparisonOperatorPtrType = reflect.TypeOf((**WebAclSizeConstraintStatementComparisonOperator)(nil)).Elem()

type WebAclSizeConstraintStatementComparisonOperatorPtrInput interface {
	pulumi.Input

	ToWebAclSizeConstraintStatementComparisonOperatorPtrOutput() WebAclSizeConstraintStatementComparisonOperatorPtrOutput
	ToWebAclSizeConstraintStatementComparisonOperatorPtrOutputWithContext(context.Context) WebAclSizeConstraintStatementComparisonOperatorPtrOutput
}

type webAclSizeConstraintStatementComparisonOperatorPtr string

func WebAclSizeConstraintStatementComparisonOperatorPtr(v string) WebAclSizeConstraintStatementComparisonOperatorPtrInput {
	return (*webAclSizeConstraintStatementComparisonOperatorPtr)(&v)
}

func (*webAclSizeConstraintStatementComparisonOperatorPtr) ElementType() reflect.Type {
	return webAclSizeConstraintStatementComparisonOperatorPtrType
}

func (in *webAclSizeConstraintStatementComparisonOperatorPtr) ToWebAclSizeConstraintStatementComparisonOperatorPtrOutput() WebAclSizeConstraintStatementComparisonOperatorPtrOutput {
	return pulumi.ToOutput(in).(WebAclSizeConstraintStatementComparisonOperatorPtrOutput)
}

func (in *webAclSizeConstraintStatementComparisonOperatorPtr) ToWebAclSizeConstraintStatementComparisonOperatorPtrOutputWithContext(ctx context.Context) WebAclSizeConstraintStatementComparisonOperatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclSizeConstraintStatementComparisonOperatorPtrOutput)
}

func (in *webAclSizeConstraintStatementComparisonOperatorPtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclSizeConstraintStatementComparisonOperator] {
	return pulumix.Output[*WebAclSizeConstraintStatementComparisonOperator]{
		OutputState: in.ToWebAclSizeConstraintStatementComparisonOperatorPtrOutputWithContext(ctx).OutputState,
	}
}

// Type of text transformation.
type WebAclTextTransformationType string

const (
	WebAclTextTransformationTypeNone               = WebAclTextTransformationType("NONE")
	WebAclTextTransformationTypeCompressWhiteSpace = WebAclTextTransformationType("COMPRESS_WHITE_SPACE")
	WebAclTextTransformationTypeHtmlEntityDecode   = WebAclTextTransformationType("HTML_ENTITY_DECODE")
	WebAclTextTransformationTypeLowercase          = WebAclTextTransformationType("LOWERCASE")
	WebAclTextTransformationTypeCmdLine            = WebAclTextTransformationType("CMD_LINE")
	WebAclTextTransformationTypeUrlDecode          = WebAclTextTransformationType("URL_DECODE")
	WebAclTextTransformationTypeBase64Decode       = WebAclTextTransformationType("BASE64_DECODE")
	WebAclTextTransformationTypeHexDecode          = WebAclTextTransformationType("HEX_DECODE")
	WebAclTextTransformationTypeMd5                = WebAclTextTransformationType("MD5")
	WebAclTextTransformationTypeReplaceComments    = WebAclTextTransformationType("REPLACE_COMMENTS")
	WebAclTextTransformationTypeEscapeSeqDecode    = WebAclTextTransformationType("ESCAPE_SEQ_DECODE")
	WebAclTextTransformationTypeSqlHexDecode       = WebAclTextTransformationType("SQL_HEX_DECODE")
	WebAclTextTransformationTypeCssDecode          = WebAclTextTransformationType("CSS_DECODE")
	WebAclTextTransformationTypeJsDecode           = WebAclTextTransformationType("JS_DECODE")
	WebAclTextTransformationTypeNormalizePath      = WebAclTextTransformationType("NORMALIZE_PATH")
	WebAclTextTransformationTypeNormalizePathWin   = WebAclTextTransformationType("NORMALIZE_PATH_WIN")
	WebAclTextTransformationTypeRemoveNulls        = WebAclTextTransformationType("REMOVE_NULLS")
	WebAclTextTransformationTypeReplaceNulls       = WebAclTextTransformationType("REPLACE_NULLS")
	WebAclTextTransformationTypeBase64DecodeExt    = WebAclTextTransformationType("BASE64_DECODE_EXT")
	WebAclTextTransformationTypeUrlDecodeUni       = WebAclTextTransformationType("URL_DECODE_UNI")
	WebAclTextTransformationTypeUtf8ToUnicode      = WebAclTextTransformationType("UTF8_TO_UNICODE")
)

func (WebAclTextTransformationType) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclTextTransformationType)(nil)).Elem()
}

func (e WebAclTextTransformationType) ToWebAclTextTransformationTypeOutput() WebAclTextTransformationTypeOutput {
	return pulumi.ToOutput(e).(WebAclTextTransformationTypeOutput)
}

func (e WebAclTextTransformationType) ToWebAclTextTransformationTypeOutputWithContext(ctx context.Context) WebAclTextTransformationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(WebAclTextTransformationTypeOutput)
}

func (e WebAclTextTransformationType) ToWebAclTextTransformationTypePtrOutput() WebAclTextTransformationTypePtrOutput {
	return e.ToWebAclTextTransformationTypePtrOutputWithContext(context.Background())
}

func (e WebAclTextTransformationType) ToWebAclTextTransformationTypePtrOutputWithContext(ctx context.Context) WebAclTextTransformationTypePtrOutput {
	return WebAclTextTransformationType(e).ToWebAclTextTransformationTypeOutputWithContext(ctx).ToWebAclTextTransformationTypePtrOutputWithContext(ctx)
}

func (e WebAclTextTransformationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclTextTransformationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e WebAclTextTransformationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e WebAclTextTransformationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type WebAclTextTransformationTypeOutput struct{ *pulumi.OutputState }

func (WebAclTextTransformationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAclTextTransformationType)(nil)).Elem()
}

func (o WebAclTextTransformationTypeOutput) ToWebAclTextTransformationTypeOutput() WebAclTextTransformationTypeOutput {
	return o
}

func (o WebAclTextTransformationTypeOutput) ToWebAclTextTransformationTypeOutputWithContext(ctx context.Context) WebAclTextTransformationTypeOutput {
	return o
}

func (o WebAclTextTransformationTypeOutput) ToWebAclTextTransformationTypePtrOutput() WebAclTextTransformationTypePtrOutput {
	return o.ToWebAclTextTransformationTypePtrOutputWithContext(context.Background())
}

func (o WebAclTextTransformationTypeOutput) ToWebAclTextTransformationTypePtrOutputWithContext(ctx context.Context) WebAclTextTransformationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAclTextTransformationType) *WebAclTextTransformationType {
		return &v
	}).(WebAclTextTransformationTypePtrOutput)
}

func (o WebAclTextTransformationTypeOutput) ToOutput(ctx context.Context) pulumix.Output[WebAclTextTransformationType] {
	return pulumix.Output[WebAclTextTransformationType]{
		OutputState: o.OutputState,
	}
}

func (o WebAclTextTransformationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o WebAclTextTransformationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclTextTransformationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o WebAclTextTransformationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclTextTransformationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e WebAclTextTransformationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type WebAclTextTransformationTypePtrOutput struct{ *pulumi.OutputState }

func (WebAclTextTransformationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclTextTransformationType)(nil)).Elem()
}

func (o WebAclTextTransformationTypePtrOutput) ToWebAclTextTransformationTypePtrOutput() WebAclTextTransformationTypePtrOutput {
	return o
}

func (o WebAclTextTransformationTypePtrOutput) ToWebAclTextTransformationTypePtrOutputWithContext(ctx context.Context) WebAclTextTransformationTypePtrOutput {
	return o
}

func (o WebAclTextTransformationTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebAclTextTransformationType] {
	return pulumix.Output[*WebAclTextTransformationType]{
		OutputState: o.OutputState,
	}
}

func (o WebAclTextTransformationTypePtrOutput) Elem() WebAclTextTransformationTypeOutput {
	return o.ApplyT(func(v *WebAclTextTransformationType) WebAclTextTransformationType {
		if v != nil {
			return *v
		}
		var ret WebAclTextTransformationType
		return ret
	}).(WebAclTextTransformationTypeOutput)
}

func (o WebAclTextTransformationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o WebAclTextTransformationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *WebAclTextTransformationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// WebAclTextTransformationTypeInput is an input type that accepts WebAclTextTransformationTypeArgs and WebAclTextTransformationTypeOutput values.
// You can construct a concrete instance of `WebAclTextTransformationTypeInput` via:
//
//	WebAclTextTransformationTypeArgs{...}
type WebAclTextTransformationTypeInput interface {
	pulumi.Input

	ToWebAclTextTransformationTypeOutput() WebAclTextTransformationTypeOutput
	ToWebAclTextTransformationTypeOutputWithContext(context.Context) WebAclTextTransformationTypeOutput
}

var webAclTextTransformationTypePtrType = reflect.TypeOf((**WebAclTextTransformationType)(nil)).Elem()

type WebAclTextTransformationTypePtrInput interface {
	pulumi.Input

	ToWebAclTextTransformationTypePtrOutput() WebAclTextTransformationTypePtrOutput
	ToWebAclTextTransformationTypePtrOutputWithContext(context.Context) WebAclTextTransformationTypePtrOutput
}

type webAclTextTransformationTypePtr string

func WebAclTextTransformationTypePtr(v string) WebAclTextTransformationTypePtrInput {
	return (*webAclTextTransformationTypePtr)(&v)
}

func (*webAclTextTransformationTypePtr) ElementType() reflect.Type {
	return webAclTextTransformationTypePtrType
}

func (in *webAclTextTransformationTypePtr) ToWebAclTextTransformationTypePtrOutput() WebAclTextTransformationTypePtrOutput {
	return pulumi.ToOutput(in).(WebAclTextTransformationTypePtrOutput)
}

func (in *webAclTextTransformationTypePtr) ToWebAclTextTransformationTypePtrOutputWithContext(ctx context.Context) WebAclTextTransformationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(WebAclTextTransformationTypePtrOutput)
}

func (in *webAclTextTransformationTypePtr) ToOutput(ctx context.Context) pulumix.Output[*WebAclTextTransformationType] {
	return pulumix.Output[*WebAclTextTransformationType]{
		OutputState: in.ToWebAclTextTransformationTypePtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetIpAddressVersionInput)(nil)).Elem(), IpSetIpAddressVersion("IPV4"))
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetIpAddressVersionPtrInput)(nil)).Elem(), IpSetIpAddressVersion("IPV4"))
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetScopeInput)(nil)).Elem(), IpSetScope("CLOUDFRONT"))
	pulumi.RegisterInputType(reflect.TypeOf((*IpSetScopePtrInput)(nil)).Elem(), IpSetScope("CLOUDFRONT"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationConditionActionConditionPropertiesActionInput)(nil)).Elem(), LoggingConfigurationConditionActionConditionPropertiesAction("ALLOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationConditionActionConditionPropertiesActionPtrInput)(nil)).Elem(), LoggingConfigurationConditionActionConditionPropertiesAction("ALLOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorInput)(nil)).Elem(), LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrInput)(nil)).Elem(), LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeInput)(nil)).Elem(), LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrInput)(nil)).Elem(), LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScope("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationFilterBehaviorInput)(nil)).Elem(), LoggingConfigurationFilterBehavior("KEEP"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationFilterBehaviorPtrInput)(nil)).Elem(), LoggingConfigurationFilterBehavior("KEEP"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationFilterRequirementInput)(nil)).Elem(), LoggingConfigurationFilterRequirement("MEETS_ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationFilterRequirementPtrInput)(nil)).Elem(), LoggingConfigurationFilterRequirement("MEETS_ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorInput)(nil)).Elem(), LoggingConfigurationLoggingFilterPropertiesDefaultBehavior("KEEP"))
	pulumi.RegisterInputType(reflect.TypeOf((*LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrInput)(nil)).Elem(), LoggingConfigurationLoggingFilterPropertiesDefaultBehavior("KEEP"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegexPatternSetScopeInput)(nil)).Elem(), RegexPatternSetScope("CLOUDFRONT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RegexPatternSetScopePtrInput)(nil)).Elem(), RegexPatternSetScope("CLOUDFRONT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupBodyParsingFallbackBehaviorInput)(nil)).Elem(), RuleGroupBodyParsingFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupBodyParsingFallbackBehaviorPtrInput)(nil)).Elem(), RuleGroupBodyParsingFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupForwardedIpConfigurationFallbackBehaviorInput)(nil)).Elem(), RuleGroupForwardedIpConfigurationFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupForwardedIpConfigurationFallbackBehaviorPtrInput)(nil)).Elem(), RuleGroupForwardedIpConfigurationFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorInput)(nil)).Elem(), RuleGroupIpSetForwardedIpConfigurationFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrInput)(nil)).Elem(), RuleGroupIpSetForwardedIpConfigurationFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupIpSetForwardedIpConfigurationPositionInput)(nil)).Elem(), RuleGroupIpSetForwardedIpConfigurationPosition("FIRST"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupIpSetForwardedIpConfigurationPositionPtrInput)(nil)).Elem(), RuleGroupIpSetForwardedIpConfigurationPosition("FIRST"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupJsonMatchScopeInput)(nil)).Elem(), RuleGroupJsonMatchScope("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupJsonMatchScopePtrInput)(nil)).Elem(), RuleGroupJsonMatchScope("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupLabelMatchScopeInput)(nil)).Elem(), RuleGroupLabelMatchScope("LABEL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupLabelMatchScopePtrInput)(nil)).Elem(), RuleGroupLabelMatchScope("LABEL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupMapMatchScopeInput)(nil)).Elem(), RuleGroupMapMatchScope("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupMapMatchScopePtrInput)(nil)).Elem(), RuleGroupMapMatchScope("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupOversizeHandlingInput)(nil)).Elem(), RuleGroupOversizeHandling("CONTINUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupOversizeHandlingPtrInput)(nil)).Elem(), RuleGroupOversizeHandling("CONTINUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupPositionalConstraintInput)(nil)).Elem(), RuleGroupPositionalConstraint("EXACTLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupPositionalConstraintPtrInput)(nil)).Elem(), RuleGroupPositionalConstraint("EXACTLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupRateBasedStatementAggregateKeyTypeInput)(nil)).Elem(), RuleGroupRateBasedStatementAggregateKeyType("IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupRateBasedStatementAggregateKeyTypePtrInput)(nil)).Elem(), RuleGroupRateBasedStatementAggregateKeyType("IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupScopeInput)(nil)).Elem(), RuleGroupScope("CLOUDFRONT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupScopePtrInput)(nil)).Elem(), RuleGroupScope("CLOUDFRONT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupSensitivityLevelInput)(nil)).Elem(), RuleGroupSensitivityLevel("LOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupSensitivityLevelPtrInput)(nil)).Elem(), RuleGroupSensitivityLevel("LOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupSizeConstraintStatementComparisonOperatorInput)(nil)).Elem(), RuleGroupSizeConstraintStatementComparisonOperator("EQ"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupSizeConstraintStatementComparisonOperatorPtrInput)(nil)).Elem(), RuleGroupSizeConstraintStatementComparisonOperator("EQ"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupTextTransformationTypeInput)(nil)).Elem(), RuleGroupTextTransformationType("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*RuleGroupTextTransformationTypePtrInput)(nil)).Elem(), RuleGroupTextTransformationType("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclAwsManagedRulesBotControlRuleSetInspectionLevelInput)(nil)).Elem(), WebAclAwsManagedRulesBotControlRuleSetInspectionLevel("COMMON"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrInput)(nil)).Elem(), WebAclAwsManagedRulesBotControlRuleSetInspectionLevel("COMMON"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclBodyParsingFallbackBehaviorInput)(nil)).Elem(), WebAclBodyParsingFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclBodyParsingFallbackBehaviorPtrInput)(nil)).Elem(), WebAclBodyParsingFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclForwardedIpConfigurationFallbackBehaviorInput)(nil)).Elem(), WebAclForwardedIpConfigurationFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclForwardedIpConfigurationFallbackBehaviorPtrInput)(nil)).Elem(), WebAclForwardedIpConfigurationFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclIpSetForwardedIpConfigurationFallbackBehaviorInput)(nil)).Elem(), WebAclIpSetForwardedIpConfigurationFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrInput)(nil)).Elem(), WebAclIpSetForwardedIpConfigurationFallbackBehavior("MATCH"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclIpSetForwardedIpConfigurationPositionInput)(nil)).Elem(), WebAclIpSetForwardedIpConfigurationPosition("FIRST"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclIpSetForwardedIpConfigurationPositionPtrInput)(nil)).Elem(), WebAclIpSetForwardedIpConfigurationPosition("FIRST"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclJsonMatchScopeInput)(nil)).Elem(), WebAclJsonMatchScope("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclJsonMatchScopePtrInput)(nil)).Elem(), WebAclJsonMatchScope("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclLabelMatchScopeInput)(nil)).Elem(), WebAclLabelMatchScope("LABEL"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclLabelMatchScopePtrInput)(nil)).Elem(), WebAclLabelMatchScope("LABEL"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclManagedRuleGroupConfigPayloadTypeInput)(nil)).Elem(), WebAclManagedRuleGroupConfigPayloadType("JSON"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclManagedRuleGroupConfigPayloadTypePtrInput)(nil)).Elem(), WebAclManagedRuleGroupConfigPayloadType("JSON"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclMapMatchScopeInput)(nil)).Elem(), WebAclMapMatchScope("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclMapMatchScopePtrInput)(nil)).Elem(), WebAclMapMatchScope("ALL"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclOversizeHandlingInput)(nil)).Elem(), WebAclOversizeHandling("CONTINUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclOversizeHandlingPtrInput)(nil)).Elem(), WebAclOversizeHandling("CONTINUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclPositionalConstraintInput)(nil)).Elem(), WebAclPositionalConstraint("EXACTLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclPositionalConstraintPtrInput)(nil)).Elem(), WebAclPositionalConstraint("EXACTLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRateBasedStatementAggregateKeyTypeInput)(nil)).Elem(), WebAclRateBasedStatementAggregateKeyType("IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRateBasedStatementAggregateKeyTypePtrInput)(nil)).Elem(), WebAclRateBasedStatementAggregateKeyType("IP"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRequestInspectionAcfpPayloadTypeInput)(nil)).Elem(), WebAclRequestInspectionAcfpPayloadType("JSON"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRequestInspectionAcfpPayloadTypePtrInput)(nil)).Elem(), WebAclRequestInspectionAcfpPayloadType("JSON"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRequestInspectionPayloadTypeInput)(nil)).Elem(), WebAclRequestInspectionPayloadType("JSON"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclRequestInspectionPayloadTypePtrInput)(nil)).Elem(), WebAclRequestInspectionPayloadType("JSON"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclScopeInput)(nil)).Elem(), WebAclScope("CLOUDFRONT"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclScopePtrInput)(nil)).Elem(), WebAclScope("CLOUDFRONT"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclSensitivityLevelInput)(nil)).Elem(), WebAclSensitivityLevel("LOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclSensitivityLevelPtrInput)(nil)).Elem(), WebAclSensitivityLevel("LOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclSizeConstraintStatementComparisonOperatorInput)(nil)).Elem(), WebAclSizeConstraintStatementComparisonOperator("EQ"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclSizeConstraintStatementComparisonOperatorPtrInput)(nil)).Elem(), WebAclSizeConstraintStatementComparisonOperator("EQ"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclTextTransformationTypeInput)(nil)).Elem(), WebAclTextTransformationType("NONE"))
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclTextTransformationTypePtrInput)(nil)).Elem(), WebAclTextTransformationType("NONE"))
	pulumi.RegisterOutputType(IpSetIpAddressVersionOutput{})
	pulumi.RegisterOutputType(IpSetIpAddressVersionPtrOutput{})
	pulumi.RegisterOutputType(IpSetScopeOutput{})
	pulumi.RegisterOutputType(IpSetScopePtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationConditionActionConditionPropertiesActionOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationConditionActionConditionPropertiesActionPtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationFieldToMatchJsonBodyPropertiesInvalidFallbackBehaviorPtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopeOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationFieldToMatchJsonBodyPropertiesMatchScopePtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationFilterBehaviorOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationFilterBehaviorPtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationFilterRequirementOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationFilterRequirementPtrOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationLoggingFilterPropertiesDefaultBehaviorPtrOutput{})
	pulumi.RegisterOutputType(RegexPatternSetScopeOutput{})
	pulumi.RegisterOutputType(RegexPatternSetScopePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupBodyParsingFallbackBehaviorOutput{})
	pulumi.RegisterOutputType(RuleGroupBodyParsingFallbackBehaviorPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupForwardedIpConfigurationFallbackBehaviorOutput{})
	pulumi.RegisterOutputType(RuleGroupForwardedIpConfigurationFallbackBehaviorPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorOutput{})
	pulumi.RegisterOutputType(RuleGroupIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupIpSetForwardedIpConfigurationPositionOutput{})
	pulumi.RegisterOutputType(RuleGroupIpSetForwardedIpConfigurationPositionPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupJsonMatchScopeOutput{})
	pulumi.RegisterOutputType(RuleGroupJsonMatchScopePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupLabelMatchScopeOutput{})
	pulumi.RegisterOutputType(RuleGroupLabelMatchScopePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupMapMatchScopeOutput{})
	pulumi.RegisterOutputType(RuleGroupMapMatchScopePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupOversizeHandlingOutput{})
	pulumi.RegisterOutputType(RuleGroupOversizeHandlingPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupPositionalConstraintOutput{})
	pulumi.RegisterOutputType(RuleGroupPositionalConstraintPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupRateBasedStatementAggregateKeyTypeOutput{})
	pulumi.RegisterOutputType(RuleGroupRateBasedStatementAggregateKeyTypePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupScopeOutput{})
	pulumi.RegisterOutputType(RuleGroupScopePtrOutput{})
	pulumi.RegisterOutputType(RuleGroupSensitivityLevelOutput{})
	pulumi.RegisterOutputType(RuleGroupSensitivityLevelPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupSizeConstraintStatementComparisonOperatorOutput{})
	pulumi.RegisterOutputType(RuleGroupSizeConstraintStatementComparisonOperatorPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupTextTransformationTypeOutput{})
	pulumi.RegisterOutputType(RuleGroupTextTransformationTypePtrOutput{})
	pulumi.RegisterOutputType(WebAclAwsManagedRulesBotControlRuleSetInspectionLevelOutput{})
	pulumi.RegisterOutputType(WebAclAwsManagedRulesBotControlRuleSetInspectionLevelPtrOutput{})
	pulumi.RegisterOutputType(WebAclBodyParsingFallbackBehaviorOutput{})
	pulumi.RegisterOutputType(WebAclBodyParsingFallbackBehaviorPtrOutput{})
	pulumi.RegisterOutputType(WebAclForwardedIpConfigurationFallbackBehaviorOutput{})
	pulumi.RegisterOutputType(WebAclForwardedIpConfigurationFallbackBehaviorPtrOutput{})
	pulumi.RegisterOutputType(WebAclIpSetForwardedIpConfigurationFallbackBehaviorOutput{})
	pulumi.RegisterOutputType(WebAclIpSetForwardedIpConfigurationFallbackBehaviorPtrOutput{})
	pulumi.RegisterOutputType(WebAclIpSetForwardedIpConfigurationPositionOutput{})
	pulumi.RegisterOutputType(WebAclIpSetForwardedIpConfigurationPositionPtrOutput{})
	pulumi.RegisterOutputType(WebAclJsonMatchScopeOutput{})
	pulumi.RegisterOutputType(WebAclJsonMatchScopePtrOutput{})
	pulumi.RegisterOutputType(WebAclLabelMatchScopeOutput{})
	pulumi.RegisterOutputType(WebAclLabelMatchScopePtrOutput{})
	pulumi.RegisterOutputType(WebAclManagedRuleGroupConfigPayloadTypeOutput{})
	pulumi.RegisterOutputType(WebAclManagedRuleGroupConfigPayloadTypePtrOutput{})
	pulumi.RegisterOutputType(WebAclMapMatchScopeOutput{})
	pulumi.RegisterOutputType(WebAclMapMatchScopePtrOutput{})
	pulumi.RegisterOutputType(WebAclOversizeHandlingOutput{})
	pulumi.RegisterOutputType(WebAclOversizeHandlingPtrOutput{})
	pulumi.RegisterOutputType(WebAclPositionalConstraintOutput{})
	pulumi.RegisterOutputType(WebAclPositionalConstraintPtrOutput{})
	pulumi.RegisterOutputType(WebAclRateBasedStatementAggregateKeyTypeOutput{})
	pulumi.RegisterOutputType(WebAclRateBasedStatementAggregateKeyTypePtrOutput{})
	pulumi.RegisterOutputType(WebAclRequestInspectionAcfpPayloadTypeOutput{})
	pulumi.RegisterOutputType(WebAclRequestInspectionAcfpPayloadTypePtrOutput{})
	pulumi.RegisterOutputType(WebAclRequestInspectionPayloadTypeOutput{})
	pulumi.RegisterOutputType(WebAclRequestInspectionPayloadTypePtrOutput{})
	pulumi.RegisterOutputType(WebAclScopeOutput{})
	pulumi.RegisterOutputType(WebAclScopePtrOutput{})
	pulumi.RegisterOutputType(WebAclSensitivityLevelOutput{})
	pulumi.RegisterOutputType(WebAclSensitivityLevelPtrOutput{})
	pulumi.RegisterOutputType(WebAclSizeConstraintStatementComparisonOperatorOutput{})
	pulumi.RegisterOutputType(WebAclSizeConstraintStatementComparisonOperatorPtrOutput{})
	pulumi.RegisterOutputType(WebAclTextTransformationTypeOutput{})
	pulumi.RegisterOutputType(WebAclTextTransformationTypePtrOutput{})
}
