// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IPSetTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// IPSetTagInput is an input type that accepts IPSetTagArgs and IPSetTagOutput values.
// You can construct a concrete instance of `IPSetTagInput` via:
//
//          IPSetTagArgs{...}
type IPSetTagInput interface {
	pulumi.Input

	ToIPSetTagOutput() IPSetTagOutput
	ToIPSetTagOutputWithContext(context.Context) IPSetTagOutput
}

type IPSetTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (IPSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IPSetTag)(nil)).Elem()
}

func (i IPSetTagArgs) ToIPSetTagOutput() IPSetTagOutput {
	return i.ToIPSetTagOutputWithContext(context.Background())
}

func (i IPSetTagArgs) ToIPSetTagOutputWithContext(ctx context.Context) IPSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPSetTagOutput)
}

// IPSetTagArrayInput is an input type that accepts IPSetTagArray and IPSetTagArrayOutput values.
// You can construct a concrete instance of `IPSetTagArrayInput` via:
//
//          IPSetTagArray{ IPSetTagArgs{...} }
type IPSetTagArrayInput interface {
	pulumi.Input

	ToIPSetTagArrayOutput() IPSetTagArrayOutput
	ToIPSetTagArrayOutputWithContext(context.Context) IPSetTagArrayOutput
}

type IPSetTagArray []IPSetTagInput

func (IPSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPSetTag)(nil)).Elem()
}

func (i IPSetTagArray) ToIPSetTagArrayOutput() IPSetTagArrayOutput {
	return i.ToIPSetTagArrayOutputWithContext(context.Background())
}

func (i IPSetTagArray) ToIPSetTagArrayOutputWithContext(ctx context.Context) IPSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPSetTagArrayOutput)
}

type IPSetTagOutput struct{ *pulumi.OutputState }

func (IPSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IPSetTag)(nil)).Elem()
}

func (o IPSetTagOutput) ToIPSetTagOutput() IPSetTagOutput {
	return o
}

func (o IPSetTagOutput) ToIPSetTagOutputWithContext(ctx context.Context) IPSetTagOutput {
	return o
}

func (o IPSetTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPSetTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o IPSetTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IPSetTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type IPSetTagArrayOutput struct{ *pulumi.OutputState }

func (IPSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IPSetTag)(nil)).Elem()
}

func (o IPSetTagArrayOutput) ToIPSetTagArrayOutput() IPSetTagArrayOutput {
	return o
}

func (o IPSetTagArrayOutput) ToIPSetTagArrayOutputWithContext(ctx context.Context) IPSetTagArrayOutput {
	return o
}

func (o IPSetTagArrayOutput) Index(i pulumi.IntInput) IPSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IPSetTag {
		return vs[0].([]IPSetTag)[vs[1].(int)]
	}).(IPSetTagOutput)
}

// A key-value pair to associate with a resource.
type LoggingConfigurationFieldToMatch struct {
	// Inspect the request body as JSON. The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form.
	JsonBody interface{} `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method interface{} `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a ? character, if any.
	QueryString interface{} `pulumi:"queryString"`
	// Inspect a single header. Provide the name of the header to inspect, for example, User-Agent or Referer. This setting isn't case sensitive.
	SingleHeader interface{} `pulumi:"singleHeader"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
	UriPath interface{} `pulumi:"uriPath"`
}

// LoggingConfigurationFieldToMatchInput is an input type that accepts LoggingConfigurationFieldToMatchArgs and LoggingConfigurationFieldToMatchOutput values.
// You can construct a concrete instance of `LoggingConfigurationFieldToMatchInput` via:
//
//          LoggingConfigurationFieldToMatchArgs{...}
type LoggingConfigurationFieldToMatchInput interface {
	pulumi.Input

	ToLoggingConfigurationFieldToMatchOutput() LoggingConfigurationFieldToMatchOutput
	ToLoggingConfigurationFieldToMatchOutputWithContext(context.Context) LoggingConfigurationFieldToMatchOutput
}

// A key-value pair to associate with a resource.
type LoggingConfigurationFieldToMatchArgs struct {
	// Inspect the request body as JSON. The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form.
	JsonBody pulumi.Input `pulumi:"jsonBody"`
	// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumi.Input `pulumi:"method"`
	// Inspect the query string. This is the part of a URL that appears after a ? character, if any.
	QueryString pulumi.Input `pulumi:"queryString"`
	// Inspect a single header. Provide the name of the header to inspect, for example, User-Agent or Referer. This setting isn't case sensitive.
	SingleHeader pulumi.Input `pulumi:"singleHeader"`
	// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
	UriPath pulumi.Input `pulumi:"uriPath"`
}

func (LoggingConfigurationFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationFieldToMatch)(nil)).Elem()
}

func (i LoggingConfigurationFieldToMatchArgs) ToLoggingConfigurationFieldToMatchOutput() LoggingConfigurationFieldToMatchOutput {
	return i.ToLoggingConfigurationFieldToMatchOutputWithContext(context.Background())
}

func (i LoggingConfigurationFieldToMatchArgs) ToLoggingConfigurationFieldToMatchOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationFieldToMatchOutput)
}

// LoggingConfigurationFieldToMatchArrayInput is an input type that accepts LoggingConfigurationFieldToMatchArray and LoggingConfigurationFieldToMatchArrayOutput values.
// You can construct a concrete instance of `LoggingConfigurationFieldToMatchArrayInput` via:
//
//          LoggingConfigurationFieldToMatchArray{ LoggingConfigurationFieldToMatchArgs{...} }
type LoggingConfigurationFieldToMatchArrayInput interface {
	pulumi.Input

	ToLoggingConfigurationFieldToMatchArrayOutput() LoggingConfigurationFieldToMatchArrayOutput
	ToLoggingConfigurationFieldToMatchArrayOutputWithContext(context.Context) LoggingConfigurationFieldToMatchArrayOutput
}

type LoggingConfigurationFieldToMatchArray []LoggingConfigurationFieldToMatchInput

func (LoggingConfigurationFieldToMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoggingConfigurationFieldToMatch)(nil)).Elem()
}

func (i LoggingConfigurationFieldToMatchArray) ToLoggingConfigurationFieldToMatchArrayOutput() LoggingConfigurationFieldToMatchArrayOutput {
	return i.ToLoggingConfigurationFieldToMatchArrayOutputWithContext(context.Background())
}

func (i LoggingConfigurationFieldToMatchArray) ToLoggingConfigurationFieldToMatchArrayOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationFieldToMatchArrayOutput)
}

// A key-value pair to associate with a resource.
type LoggingConfigurationFieldToMatchOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationFieldToMatch)(nil)).Elem()
}

func (o LoggingConfigurationFieldToMatchOutput) ToLoggingConfigurationFieldToMatchOutput() LoggingConfigurationFieldToMatchOutput {
	return o
}

func (o LoggingConfigurationFieldToMatchOutput) ToLoggingConfigurationFieldToMatchOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchOutput {
	return o
}

// Inspect the request body as JSON. The request body immediately follows the request headers. This is the part of a request that contains any additional data that you want to send to your web server as the HTTP request body, such as data from a form.
func (o LoggingConfigurationFieldToMatchOutput) JsonBody() pulumi.AnyOutput {
	return o.ApplyT(func(v LoggingConfigurationFieldToMatch) interface{} { return v.JsonBody }).(pulumi.AnyOutput)
}

// Inspect the HTTP method. The method indicates the type of operation that the request is asking the origin to perform.
func (o LoggingConfigurationFieldToMatchOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v LoggingConfigurationFieldToMatch) interface{} { return v.Method }).(pulumi.AnyOutput)
}

// Inspect the query string. This is the part of a URL that appears after a ? character, if any.
func (o LoggingConfigurationFieldToMatchOutput) QueryString() pulumi.AnyOutput {
	return o.ApplyT(func(v LoggingConfigurationFieldToMatch) interface{} { return v.QueryString }).(pulumi.AnyOutput)
}

// Inspect a single header. Provide the name of the header to inspect, for example, User-Agent or Referer. This setting isn't case sensitive.
func (o LoggingConfigurationFieldToMatchOutput) SingleHeader() pulumi.AnyOutput {
	return o.ApplyT(func(v LoggingConfigurationFieldToMatch) interface{} { return v.SingleHeader }).(pulumi.AnyOutput)
}

// Inspect the request URI path. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
func (o LoggingConfigurationFieldToMatchOutput) UriPath() pulumi.AnyOutput {
	return o.ApplyT(func(v LoggingConfigurationFieldToMatch) interface{} { return v.UriPath }).(pulumi.AnyOutput)
}

type LoggingConfigurationFieldToMatchArrayOutput struct{ *pulumi.OutputState }

func (LoggingConfigurationFieldToMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoggingConfigurationFieldToMatch)(nil)).Elem()
}

func (o LoggingConfigurationFieldToMatchArrayOutput) ToLoggingConfigurationFieldToMatchArrayOutput() LoggingConfigurationFieldToMatchArrayOutput {
	return o
}

func (o LoggingConfigurationFieldToMatchArrayOutput) ToLoggingConfigurationFieldToMatchArrayOutputWithContext(ctx context.Context) LoggingConfigurationFieldToMatchArrayOutput {
	return o
}

func (o LoggingConfigurationFieldToMatchArrayOutput) Index(i pulumi.IntInput) LoggingConfigurationFieldToMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoggingConfigurationFieldToMatch {
		return vs[0].([]LoggingConfigurationFieldToMatch)[vs[1].(int)]
	}).(LoggingConfigurationFieldToMatchOutput)
}

type RegexPatternSetTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// RegexPatternSetTagInput is an input type that accepts RegexPatternSetTagArgs and RegexPatternSetTagOutput values.
// You can construct a concrete instance of `RegexPatternSetTagInput` via:
//
//          RegexPatternSetTagArgs{...}
type RegexPatternSetTagInput interface {
	pulumi.Input

	ToRegexPatternSetTagOutput() RegexPatternSetTagOutput
	ToRegexPatternSetTagOutputWithContext(context.Context) RegexPatternSetTagOutput
}

type RegexPatternSetTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RegexPatternSetTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexPatternSetTag)(nil)).Elem()
}

func (i RegexPatternSetTagArgs) ToRegexPatternSetTagOutput() RegexPatternSetTagOutput {
	return i.ToRegexPatternSetTagOutputWithContext(context.Background())
}

func (i RegexPatternSetTagArgs) ToRegexPatternSetTagOutputWithContext(ctx context.Context) RegexPatternSetTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexPatternSetTagOutput)
}

// RegexPatternSetTagArrayInput is an input type that accepts RegexPatternSetTagArray and RegexPatternSetTagArrayOutput values.
// You can construct a concrete instance of `RegexPatternSetTagArrayInput` via:
//
//          RegexPatternSetTagArray{ RegexPatternSetTagArgs{...} }
type RegexPatternSetTagArrayInput interface {
	pulumi.Input

	ToRegexPatternSetTagArrayOutput() RegexPatternSetTagArrayOutput
	ToRegexPatternSetTagArrayOutputWithContext(context.Context) RegexPatternSetTagArrayOutput
}

type RegexPatternSetTagArray []RegexPatternSetTagInput

func (RegexPatternSetTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegexPatternSetTag)(nil)).Elem()
}

func (i RegexPatternSetTagArray) ToRegexPatternSetTagArrayOutput() RegexPatternSetTagArrayOutput {
	return i.ToRegexPatternSetTagArrayOutputWithContext(context.Background())
}

func (i RegexPatternSetTagArray) ToRegexPatternSetTagArrayOutputWithContext(ctx context.Context) RegexPatternSetTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegexPatternSetTagArrayOutput)
}

type RegexPatternSetTagOutput struct{ *pulumi.OutputState }

func (RegexPatternSetTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegexPatternSetTag)(nil)).Elem()
}

func (o RegexPatternSetTagOutput) ToRegexPatternSetTagOutput() RegexPatternSetTagOutput {
	return o
}

func (o RegexPatternSetTagOutput) ToRegexPatternSetTagOutputWithContext(ctx context.Context) RegexPatternSetTagOutput {
	return o
}

func (o RegexPatternSetTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegexPatternSetTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o RegexPatternSetTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegexPatternSetTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RegexPatternSetTagArrayOutput struct{ *pulumi.OutputState }

func (RegexPatternSetTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegexPatternSetTag)(nil)).Elem()
}

func (o RegexPatternSetTagArrayOutput) ToRegexPatternSetTagArrayOutput() RegexPatternSetTagArrayOutput {
	return o
}

func (o RegexPatternSetTagArrayOutput) ToRegexPatternSetTagArrayOutputWithContext(ctx context.Context) RegexPatternSetTagArrayOutput {
	return o
}

func (o RegexPatternSetTagArrayOutput) Index(i pulumi.IntInput) RegexPatternSetTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegexPatternSetTag {
		return vs[0].([]RegexPatternSetTag)[vs[1].(int)]
	}).(RegexPatternSetTagOutput)
}

type RuleGroupAndStatement struct {
	Statements []RuleGroupStatement `pulumi:"statements"`
}

// RuleGroupAndStatementInput is an input type that accepts RuleGroupAndStatementArgs and RuleGroupAndStatementOutput values.
// You can construct a concrete instance of `RuleGroupAndStatementInput` via:
//
//          RuleGroupAndStatementArgs{...}
type RuleGroupAndStatementInput interface {
	pulumi.Input

	ToRuleGroupAndStatementOutput() RuleGroupAndStatementOutput
	ToRuleGroupAndStatementOutputWithContext(context.Context) RuleGroupAndStatementOutput
}

type RuleGroupAndStatementArgs struct {
	Statements RuleGroupStatementArrayInput `pulumi:"statements"`
}

func (RuleGroupAndStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupAndStatement)(nil)).Elem()
}

func (i RuleGroupAndStatementArgs) ToRuleGroupAndStatementOutput() RuleGroupAndStatementOutput {
	return i.ToRuleGroupAndStatementOutputWithContext(context.Background())
}

func (i RuleGroupAndStatementArgs) ToRuleGroupAndStatementOutputWithContext(ctx context.Context) RuleGroupAndStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupAndStatementOutput)
}

func (i RuleGroupAndStatementArgs) ToRuleGroupAndStatementPtrOutput() RuleGroupAndStatementPtrOutput {
	return i.ToRuleGroupAndStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupAndStatementArgs) ToRuleGroupAndStatementPtrOutputWithContext(ctx context.Context) RuleGroupAndStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupAndStatementOutput).ToRuleGroupAndStatementPtrOutputWithContext(ctx)
}

// RuleGroupAndStatementPtrInput is an input type that accepts RuleGroupAndStatementArgs, RuleGroupAndStatementPtr and RuleGroupAndStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupAndStatementPtrInput` via:
//
//          RuleGroupAndStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupAndStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupAndStatementPtrOutput() RuleGroupAndStatementPtrOutput
	ToRuleGroupAndStatementPtrOutputWithContext(context.Context) RuleGroupAndStatementPtrOutput
}

type ruleGroupAndStatementPtrType RuleGroupAndStatementArgs

func RuleGroupAndStatementPtr(v *RuleGroupAndStatementArgs) RuleGroupAndStatementPtrInput {
	return (*ruleGroupAndStatementPtrType)(v)
}

func (*ruleGroupAndStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupAndStatement)(nil)).Elem()
}

func (i *ruleGroupAndStatementPtrType) ToRuleGroupAndStatementPtrOutput() RuleGroupAndStatementPtrOutput {
	return i.ToRuleGroupAndStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupAndStatementPtrType) ToRuleGroupAndStatementPtrOutputWithContext(ctx context.Context) RuleGroupAndStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupAndStatementPtrOutput)
}

type RuleGroupAndStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupAndStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupAndStatement)(nil)).Elem()
}

func (o RuleGroupAndStatementOutput) ToRuleGroupAndStatementOutput() RuleGroupAndStatementOutput {
	return o
}

func (o RuleGroupAndStatementOutput) ToRuleGroupAndStatementOutputWithContext(ctx context.Context) RuleGroupAndStatementOutput {
	return o
}

func (o RuleGroupAndStatementOutput) ToRuleGroupAndStatementPtrOutput() RuleGroupAndStatementPtrOutput {
	return o.ToRuleGroupAndStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupAndStatementOutput) ToRuleGroupAndStatementPtrOutputWithContext(ctx context.Context) RuleGroupAndStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupAndStatement) *RuleGroupAndStatement {
		return &v
	}).(RuleGroupAndStatementPtrOutput)
}

func (o RuleGroupAndStatementOutput) Statements() RuleGroupStatementArrayOutput {
	return o.ApplyT(func(v RuleGroupAndStatement) []RuleGroupStatement { return v.Statements }).(RuleGroupStatementArrayOutput)
}

type RuleGroupAndStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupAndStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupAndStatement)(nil)).Elem()
}

func (o RuleGroupAndStatementPtrOutput) ToRuleGroupAndStatementPtrOutput() RuleGroupAndStatementPtrOutput {
	return o
}

func (o RuleGroupAndStatementPtrOutput) ToRuleGroupAndStatementPtrOutputWithContext(ctx context.Context) RuleGroupAndStatementPtrOutput {
	return o
}

func (o RuleGroupAndStatementPtrOutput) Elem() RuleGroupAndStatementOutput {
	return o.ApplyT(func(v *RuleGroupAndStatement) RuleGroupAndStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupAndStatement
		return ret
	}).(RuleGroupAndStatementOutput)
}

func (o RuleGroupAndStatementPtrOutput) Statements() RuleGroupStatementArrayOutput {
	return o.ApplyT(func(v *RuleGroupAndStatement) []RuleGroupStatement {
		if v == nil {
			return nil
		}
		return v.Statements
	}).(RuleGroupStatementArrayOutput)
}

// Byte Match statement.
type RuleGroupByteMatchStatement struct {
	FieldToMatch         RuleGroupFieldToMatch         `pulumi:"fieldToMatch"`
	PositionalConstraint string                        `pulumi:"positionalConstraint"`
	SearchString         *string                       `pulumi:"searchString"`
	SearchStringBase64   *string                       `pulumi:"searchStringBase64"`
	TextTransformations  []RuleGroupTextTransformation `pulumi:"textTransformations"`
}

// RuleGroupByteMatchStatementInput is an input type that accepts RuleGroupByteMatchStatementArgs and RuleGroupByteMatchStatementOutput values.
// You can construct a concrete instance of `RuleGroupByteMatchStatementInput` via:
//
//          RuleGroupByteMatchStatementArgs{...}
type RuleGroupByteMatchStatementInput interface {
	pulumi.Input

	ToRuleGroupByteMatchStatementOutput() RuleGroupByteMatchStatementOutput
	ToRuleGroupByteMatchStatementOutputWithContext(context.Context) RuleGroupByteMatchStatementOutput
}

// Byte Match statement.
type RuleGroupByteMatchStatementArgs struct {
	FieldToMatch         RuleGroupFieldToMatchInput            `pulumi:"fieldToMatch"`
	PositionalConstraint pulumi.StringInput                    `pulumi:"positionalConstraint"`
	SearchString         pulumi.StringPtrInput                 `pulumi:"searchString"`
	SearchStringBase64   pulumi.StringPtrInput                 `pulumi:"searchStringBase64"`
	TextTransformations  RuleGroupTextTransformationArrayInput `pulumi:"textTransformations"`
}

func (RuleGroupByteMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupByteMatchStatement)(nil)).Elem()
}

func (i RuleGroupByteMatchStatementArgs) ToRuleGroupByteMatchStatementOutput() RuleGroupByteMatchStatementOutput {
	return i.ToRuleGroupByteMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupByteMatchStatementArgs) ToRuleGroupByteMatchStatementOutputWithContext(ctx context.Context) RuleGroupByteMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupByteMatchStatementOutput)
}

func (i RuleGroupByteMatchStatementArgs) ToRuleGroupByteMatchStatementPtrOutput() RuleGroupByteMatchStatementPtrOutput {
	return i.ToRuleGroupByteMatchStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupByteMatchStatementArgs) ToRuleGroupByteMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupByteMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupByteMatchStatementOutput).ToRuleGroupByteMatchStatementPtrOutputWithContext(ctx)
}

// RuleGroupByteMatchStatementPtrInput is an input type that accepts RuleGroupByteMatchStatementArgs, RuleGroupByteMatchStatementPtr and RuleGroupByteMatchStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupByteMatchStatementPtrInput` via:
//
//          RuleGroupByteMatchStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupByteMatchStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupByteMatchStatementPtrOutput() RuleGroupByteMatchStatementPtrOutput
	ToRuleGroupByteMatchStatementPtrOutputWithContext(context.Context) RuleGroupByteMatchStatementPtrOutput
}

type ruleGroupByteMatchStatementPtrType RuleGroupByteMatchStatementArgs

func RuleGroupByteMatchStatementPtr(v *RuleGroupByteMatchStatementArgs) RuleGroupByteMatchStatementPtrInput {
	return (*ruleGroupByteMatchStatementPtrType)(v)
}

func (*ruleGroupByteMatchStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupByteMatchStatement)(nil)).Elem()
}

func (i *ruleGroupByteMatchStatementPtrType) ToRuleGroupByteMatchStatementPtrOutput() RuleGroupByteMatchStatementPtrOutput {
	return i.ToRuleGroupByteMatchStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupByteMatchStatementPtrType) ToRuleGroupByteMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupByteMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupByteMatchStatementPtrOutput)
}

// Byte Match statement.
type RuleGroupByteMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupByteMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupByteMatchStatement)(nil)).Elem()
}

func (o RuleGroupByteMatchStatementOutput) ToRuleGroupByteMatchStatementOutput() RuleGroupByteMatchStatementOutput {
	return o
}

func (o RuleGroupByteMatchStatementOutput) ToRuleGroupByteMatchStatementOutputWithContext(ctx context.Context) RuleGroupByteMatchStatementOutput {
	return o
}

func (o RuleGroupByteMatchStatementOutput) ToRuleGroupByteMatchStatementPtrOutput() RuleGroupByteMatchStatementPtrOutput {
	return o.ToRuleGroupByteMatchStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupByteMatchStatementOutput) ToRuleGroupByteMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupByteMatchStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupByteMatchStatement) *RuleGroupByteMatchStatement {
		return &v
	}).(RuleGroupByteMatchStatementPtrOutput)
}

func (o RuleGroupByteMatchStatementOutput) FieldToMatch() RuleGroupFieldToMatchOutput {
	return o.ApplyT(func(v RuleGroupByteMatchStatement) RuleGroupFieldToMatch { return v.FieldToMatch }).(RuleGroupFieldToMatchOutput)
}

func (o RuleGroupByteMatchStatementOutput) PositionalConstraint() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupByteMatchStatement) string { return v.PositionalConstraint }).(pulumi.StringOutput)
}

func (o RuleGroupByteMatchStatementOutput) SearchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleGroupByteMatchStatement) *string { return v.SearchString }).(pulumi.StringPtrOutput)
}

func (o RuleGroupByteMatchStatementOutput) SearchStringBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleGroupByteMatchStatement) *string { return v.SearchStringBase64 }).(pulumi.StringPtrOutput)
}

func (o RuleGroupByteMatchStatementOutput) TextTransformations() RuleGroupTextTransformationArrayOutput {
	return o.ApplyT(func(v RuleGroupByteMatchStatement) []RuleGroupTextTransformation { return v.TextTransformations }).(RuleGroupTextTransformationArrayOutput)
}

type RuleGroupByteMatchStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupByteMatchStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupByteMatchStatement)(nil)).Elem()
}

func (o RuleGroupByteMatchStatementPtrOutput) ToRuleGroupByteMatchStatementPtrOutput() RuleGroupByteMatchStatementPtrOutput {
	return o
}

func (o RuleGroupByteMatchStatementPtrOutput) ToRuleGroupByteMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupByteMatchStatementPtrOutput {
	return o
}

func (o RuleGroupByteMatchStatementPtrOutput) Elem() RuleGroupByteMatchStatementOutput {
	return o.ApplyT(func(v *RuleGroupByteMatchStatement) RuleGroupByteMatchStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupByteMatchStatement
		return ret
	}).(RuleGroupByteMatchStatementOutput)
}

func (o RuleGroupByteMatchStatementPtrOutput) FieldToMatch() RuleGroupFieldToMatchPtrOutput {
	return o.ApplyT(func(v *RuleGroupByteMatchStatement) *RuleGroupFieldToMatch {
		if v == nil {
			return nil
		}
		return &v.FieldToMatch
	}).(RuleGroupFieldToMatchPtrOutput)
}

func (o RuleGroupByteMatchStatementPtrOutput) PositionalConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupByteMatchStatement) *string {
		if v == nil {
			return nil
		}
		return &v.PositionalConstraint
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupByteMatchStatementPtrOutput) SearchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupByteMatchStatement) *string {
		if v == nil {
			return nil
		}
		return v.SearchString
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupByteMatchStatementPtrOutput) SearchStringBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupByteMatchStatement) *string {
		if v == nil {
			return nil
		}
		return v.SearchStringBase64
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupByteMatchStatementPtrOutput) TextTransformations() RuleGroupTextTransformationArrayOutput {
	return o.ApplyT(func(v *RuleGroupByteMatchStatement) []RuleGroupTextTransformation {
		if v == nil {
			return nil
		}
		return v.TextTransformations
	}).(RuleGroupTextTransformationArrayOutput)
}

// Custom response key and body map.
type RuleGroupCustomResponseBodies struct {
}

// RuleGroupCustomResponseBodiesInput is an input type that accepts RuleGroupCustomResponseBodiesArgs and RuleGroupCustomResponseBodiesOutput values.
// You can construct a concrete instance of `RuleGroupCustomResponseBodiesInput` via:
//
//          RuleGroupCustomResponseBodiesArgs{...}
type RuleGroupCustomResponseBodiesInput interface {
	pulumi.Input

	ToRuleGroupCustomResponseBodiesOutput() RuleGroupCustomResponseBodiesOutput
	ToRuleGroupCustomResponseBodiesOutputWithContext(context.Context) RuleGroupCustomResponseBodiesOutput
}

// Custom response key and body map.
type RuleGroupCustomResponseBodiesArgs struct {
}

func (RuleGroupCustomResponseBodiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupCustomResponseBodies)(nil)).Elem()
}

func (i RuleGroupCustomResponseBodiesArgs) ToRuleGroupCustomResponseBodiesOutput() RuleGroupCustomResponseBodiesOutput {
	return i.ToRuleGroupCustomResponseBodiesOutputWithContext(context.Background())
}

func (i RuleGroupCustomResponseBodiesArgs) ToRuleGroupCustomResponseBodiesOutputWithContext(ctx context.Context) RuleGroupCustomResponseBodiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupCustomResponseBodiesOutput)
}

func (i RuleGroupCustomResponseBodiesArgs) ToRuleGroupCustomResponseBodiesPtrOutput() RuleGroupCustomResponseBodiesPtrOutput {
	return i.ToRuleGroupCustomResponseBodiesPtrOutputWithContext(context.Background())
}

func (i RuleGroupCustomResponseBodiesArgs) ToRuleGroupCustomResponseBodiesPtrOutputWithContext(ctx context.Context) RuleGroupCustomResponseBodiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupCustomResponseBodiesOutput).ToRuleGroupCustomResponseBodiesPtrOutputWithContext(ctx)
}

// RuleGroupCustomResponseBodiesPtrInput is an input type that accepts RuleGroupCustomResponseBodiesArgs, RuleGroupCustomResponseBodiesPtr and RuleGroupCustomResponseBodiesPtrOutput values.
// You can construct a concrete instance of `RuleGroupCustomResponseBodiesPtrInput` via:
//
//          RuleGroupCustomResponseBodiesArgs{...}
//
//  or:
//
//          nil
type RuleGroupCustomResponseBodiesPtrInput interface {
	pulumi.Input

	ToRuleGroupCustomResponseBodiesPtrOutput() RuleGroupCustomResponseBodiesPtrOutput
	ToRuleGroupCustomResponseBodiesPtrOutputWithContext(context.Context) RuleGroupCustomResponseBodiesPtrOutput
}

type ruleGroupCustomResponseBodiesPtrType RuleGroupCustomResponseBodiesArgs

func RuleGroupCustomResponseBodiesPtr(v *RuleGroupCustomResponseBodiesArgs) RuleGroupCustomResponseBodiesPtrInput {
	return (*ruleGroupCustomResponseBodiesPtrType)(v)
}

func (*ruleGroupCustomResponseBodiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupCustomResponseBodies)(nil)).Elem()
}

func (i *ruleGroupCustomResponseBodiesPtrType) ToRuleGroupCustomResponseBodiesPtrOutput() RuleGroupCustomResponseBodiesPtrOutput {
	return i.ToRuleGroupCustomResponseBodiesPtrOutputWithContext(context.Background())
}

func (i *ruleGroupCustomResponseBodiesPtrType) ToRuleGroupCustomResponseBodiesPtrOutputWithContext(ctx context.Context) RuleGroupCustomResponseBodiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupCustomResponseBodiesPtrOutput)
}

// Custom response key and body map.
type RuleGroupCustomResponseBodiesOutput struct{ *pulumi.OutputState }

func (RuleGroupCustomResponseBodiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupCustomResponseBodies)(nil)).Elem()
}

func (o RuleGroupCustomResponseBodiesOutput) ToRuleGroupCustomResponseBodiesOutput() RuleGroupCustomResponseBodiesOutput {
	return o
}

func (o RuleGroupCustomResponseBodiesOutput) ToRuleGroupCustomResponseBodiesOutputWithContext(ctx context.Context) RuleGroupCustomResponseBodiesOutput {
	return o
}

func (o RuleGroupCustomResponseBodiesOutput) ToRuleGroupCustomResponseBodiesPtrOutput() RuleGroupCustomResponseBodiesPtrOutput {
	return o.ToRuleGroupCustomResponseBodiesPtrOutputWithContext(context.Background())
}

func (o RuleGroupCustomResponseBodiesOutput) ToRuleGroupCustomResponseBodiesPtrOutputWithContext(ctx context.Context) RuleGroupCustomResponseBodiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupCustomResponseBodies) *RuleGroupCustomResponseBodies {
		return &v
	}).(RuleGroupCustomResponseBodiesPtrOutput)
}

type RuleGroupCustomResponseBodiesPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupCustomResponseBodiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupCustomResponseBodies)(nil)).Elem()
}

func (o RuleGroupCustomResponseBodiesPtrOutput) ToRuleGroupCustomResponseBodiesPtrOutput() RuleGroupCustomResponseBodiesPtrOutput {
	return o
}

func (o RuleGroupCustomResponseBodiesPtrOutput) ToRuleGroupCustomResponseBodiesPtrOutputWithContext(ctx context.Context) RuleGroupCustomResponseBodiesPtrOutput {
	return o
}

func (o RuleGroupCustomResponseBodiesPtrOutput) Elem() RuleGroupCustomResponseBodiesOutput {
	return o.ApplyT(func(v *RuleGroupCustomResponseBodies) RuleGroupCustomResponseBodies {
		if v != nil {
			return *v
		}
		var ret RuleGroupCustomResponseBodies
		return ret
	}).(RuleGroupCustomResponseBodiesOutput)
}

// Field of the request to match.
type RuleGroupFieldToMatch struct {
	// All query arguments of a web request.
	AllQueryArguments interface{} `pulumi:"allQueryArguments"`
	// The body of a web request. This immediately follows the request headers.
	Body     interface{}        `pulumi:"body"`
	JsonBody *RuleGroupJsonBody `pulumi:"jsonBody"`
	// The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.
	Method interface{} `pulumi:"method"`
	// The query string of a web request. This is the part of a URL that appears after a ? character, if any.
	QueryString  interface{} `pulumi:"queryString"`
	SingleHeader interface{} `pulumi:"singleHeader"`
	// One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
	SingleQueryArgument interface{} `pulumi:"singleQueryArgument"`
	// The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
	UriPath interface{} `pulumi:"uriPath"`
}

// RuleGroupFieldToMatchInput is an input type that accepts RuleGroupFieldToMatchArgs and RuleGroupFieldToMatchOutput values.
// You can construct a concrete instance of `RuleGroupFieldToMatchInput` via:
//
//          RuleGroupFieldToMatchArgs{...}
type RuleGroupFieldToMatchInput interface {
	pulumi.Input

	ToRuleGroupFieldToMatchOutput() RuleGroupFieldToMatchOutput
	ToRuleGroupFieldToMatchOutputWithContext(context.Context) RuleGroupFieldToMatchOutput
}

// Field of the request to match.
type RuleGroupFieldToMatchArgs struct {
	// All query arguments of a web request.
	AllQueryArguments pulumi.Input `pulumi:"allQueryArguments"`
	// The body of a web request. This immediately follows the request headers.
	Body     pulumi.Input              `pulumi:"body"`
	JsonBody RuleGroupJsonBodyPtrInput `pulumi:"jsonBody"`
	// The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumi.Input `pulumi:"method"`
	// The query string of a web request. This is the part of a URL that appears after a ? character, if any.
	QueryString  pulumi.Input `pulumi:"queryString"`
	SingleHeader pulumi.Input `pulumi:"singleHeader"`
	// One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
	SingleQueryArgument pulumi.Input `pulumi:"singleQueryArgument"`
	// The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
	UriPath pulumi.Input `pulumi:"uriPath"`
}

func (RuleGroupFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupFieldToMatch)(nil)).Elem()
}

func (i RuleGroupFieldToMatchArgs) ToRuleGroupFieldToMatchOutput() RuleGroupFieldToMatchOutput {
	return i.ToRuleGroupFieldToMatchOutputWithContext(context.Background())
}

func (i RuleGroupFieldToMatchArgs) ToRuleGroupFieldToMatchOutputWithContext(ctx context.Context) RuleGroupFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupFieldToMatchOutput)
}

func (i RuleGroupFieldToMatchArgs) ToRuleGroupFieldToMatchPtrOutput() RuleGroupFieldToMatchPtrOutput {
	return i.ToRuleGroupFieldToMatchPtrOutputWithContext(context.Background())
}

func (i RuleGroupFieldToMatchArgs) ToRuleGroupFieldToMatchPtrOutputWithContext(ctx context.Context) RuleGroupFieldToMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupFieldToMatchOutput).ToRuleGroupFieldToMatchPtrOutputWithContext(ctx)
}

// RuleGroupFieldToMatchPtrInput is an input type that accepts RuleGroupFieldToMatchArgs, RuleGroupFieldToMatchPtr and RuleGroupFieldToMatchPtrOutput values.
// You can construct a concrete instance of `RuleGroupFieldToMatchPtrInput` via:
//
//          RuleGroupFieldToMatchArgs{...}
//
//  or:
//
//          nil
type RuleGroupFieldToMatchPtrInput interface {
	pulumi.Input

	ToRuleGroupFieldToMatchPtrOutput() RuleGroupFieldToMatchPtrOutput
	ToRuleGroupFieldToMatchPtrOutputWithContext(context.Context) RuleGroupFieldToMatchPtrOutput
}

type ruleGroupFieldToMatchPtrType RuleGroupFieldToMatchArgs

func RuleGroupFieldToMatchPtr(v *RuleGroupFieldToMatchArgs) RuleGroupFieldToMatchPtrInput {
	return (*ruleGroupFieldToMatchPtrType)(v)
}

func (*ruleGroupFieldToMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupFieldToMatch)(nil)).Elem()
}

func (i *ruleGroupFieldToMatchPtrType) ToRuleGroupFieldToMatchPtrOutput() RuleGroupFieldToMatchPtrOutput {
	return i.ToRuleGroupFieldToMatchPtrOutputWithContext(context.Background())
}

func (i *ruleGroupFieldToMatchPtrType) ToRuleGroupFieldToMatchPtrOutputWithContext(ctx context.Context) RuleGroupFieldToMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupFieldToMatchPtrOutput)
}

// Field of the request to match.
type RuleGroupFieldToMatchOutput struct{ *pulumi.OutputState }

func (RuleGroupFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupFieldToMatch)(nil)).Elem()
}

func (o RuleGroupFieldToMatchOutput) ToRuleGroupFieldToMatchOutput() RuleGroupFieldToMatchOutput {
	return o
}

func (o RuleGroupFieldToMatchOutput) ToRuleGroupFieldToMatchOutputWithContext(ctx context.Context) RuleGroupFieldToMatchOutput {
	return o
}

func (o RuleGroupFieldToMatchOutput) ToRuleGroupFieldToMatchPtrOutput() RuleGroupFieldToMatchPtrOutput {
	return o.ToRuleGroupFieldToMatchPtrOutputWithContext(context.Background())
}

func (o RuleGroupFieldToMatchOutput) ToRuleGroupFieldToMatchPtrOutputWithContext(ctx context.Context) RuleGroupFieldToMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupFieldToMatch) *RuleGroupFieldToMatch {
		return &v
	}).(RuleGroupFieldToMatchPtrOutput)
}

// All query arguments of a web request.
func (o RuleGroupFieldToMatchOutput) AllQueryArguments() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupFieldToMatch) interface{} { return v.AllQueryArguments }).(pulumi.AnyOutput)
}

// The body of a web request. This immediately follows the request headers.
func (o RuleGroupFieldToMatchOutput) Body() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupFieldToMatch) interface{} { return v.Body }).(pulumi.AnyOutput)
}

func (o RuleGroupFieldToMatchOutput) JsonBody() RuleGroupJsonBodyPtrOutput {
	return o.ApplyT(func(v RuleGroupFieldToMatch) *RuleGroupJsonBody { return v.JsonBody }).(RuleGroupJsonBodyPtrOutput)
}

// The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupFieldToMatchOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupFieldToMatch) interface{} { return v.Method }).(pulumi.AnyOutput)
}

// The query string of a web request. This is the part of a URL that appears after a ? character, if any.
func (o RuleGroupFieldToMatchOutput) QueryString() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupFieldToMatch) interface{} { return v.QueryString }).(pulumi.AnyOutput)
}

func (o RuleGroupFieldToMatchOutput) SingleHeader() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupFieldToMatch) interface{} { return v.SingleHeader }).(pulumi.AnyOutput)
}

// One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
func (o RuleGroupFieldToMatchOutput) SingleQueryArgument() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupFieldToMatch) interface{} { return v.SingleQueryArgument }).(pulumi.AnyOutput)
}

// The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
func (o RuleGroupFieldToMatchOutput) UriPath() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupFieldToMatch) interface{} { return v.UriPath }).(pulumi.AnyOutput)
}

type RuleGroupFieldToMatchPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupFieldToMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupFieldToMatch)(nil)).Elem()
}

func (o RuleGroupFieldToMatchPtrOutput) ToRuleGroupFieldToMatchPtrOutput() RuleGroupFieldToMatchPtrOutput {
	return o
}

func (o RuleGroupFieldToMatchPtrOutput) ToRuleGroupFieldToMatchPtrOutputWithContext(ctx context.Context) RuleGroupFieldToMatchPtrOutput {
	return o
}

func (o RuleGroupFieldToMatchPtrOutput) Elem() RuleGroupFieldToMatchOutput {
	return o.ApplyT(func(v *RuleGroupFieldToMatch) RuleGroupFieldToMatch {
		if v != nil {
			return *v
		}
		var ret RuleGroupFieldToMatch
		return ret
	}).(RuleGroupFieldToMatchOutput)
}

// All query arguments of a web request.
func (o RuleGroupFieldToMatchPtrOutput) AllQueryArguments() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.AllQueryArguments
	}).(pulumi.AnyOutput)
}

// The body of a web request. This immediately follows the request headers.
func (o RuleGroupFieldToMatchPtrOutput) Body() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.AnyOutput)
}

func (o RuleGroupFieldToMatchPtrOutput) JsonBody() RuleGroupJsonBodyPtrOutput {
	return o.ApplyT(func(v *RuleGroupFieldToMatch) *RuleGroupJsonBody {
		if v == nil {
			return nil
		}
		return v.JsonBody
	}).(RuleGroupJsonBodyPtrOutput)
}

// The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.
func (o RuleGroupFieldToMatchPtrOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.AnyOutput)
}

// The query string of a web request. This is the part of a URL that appears after a ? character, if any.
func (o RuleGroupFieldToMatchPtrOutput) QueryString() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.QueryString
	}).(pulumi.AnyOutput)
}

func (o RuleGroupFieldToMatchPtrOutput) SingleHeader() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.SingleHeader
	}).(pulumi.AnyOutput)
}

// One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
func (o RuleGroupFieldToMatchPtrOutput) SingleQueryArgument() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.SingleQueryArgument
	}).(pulumi.AnyOutput)
}

// The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
func (o RuleGroupFieldToMatchPtrOutput) UriPath() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.UriPath
	}).(pulumi.AnyOutput)
}

type RuleGroupForwardedIPConfiguration struct {
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	HeaderName       string `pulumi:"headerName"`
}

// RuleGroupForwardedIPConfigurationInput is an input type that accepts RuleGroupForwardedIPConfigurationArgs and RuleGroupForwardedIPConfigurationOutput values.
// You can construct a concrete instance of `RuleGroupForwardedIPConfigurationInput` via:
//
//          RuleGroupForwardedIPConfigurationArgs{...}
type RuleGroupForwardedIPConfigurationInput interface {
	pulumi.Input

	ToRuleGroupForwardedIPConfigurationOutput() RuleGroupForwardedIPConfigurationOutput
	ToRuleGroupForwardedIPConfigurationOutputWithContext(context.Context) RuleGroupForwardedIPConfigurationOutput
}

type RuleGroupForwardedIPConfigurationArgs struct {
	FallbackBehavior pulumi.StringInput `pulumi:"fallbackBehavior"`
	HeaderName       pulumi.StringInput `pulumi:"headerName"`
}

func (RuleGroupForwardedIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupForwardedIPConfiguration)(nil)).Elem()
}

func (i RuleGroupForwardedIPConfigurationArgs) ToRuleGroupForwardedIPConfigurationOutput() RuleGroupForwardedIPConfigurationOutput {
	return i.ToRuleGroupForwardedIPConfigurationOutputWithContext(context.Background())
}

func (i RuleGroupForwardedIPConfigurationArgs) ToRuleGroupForwardedIPConfigurationOutputWithContext(ctx context.Context) RuleGroupForwardedIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupForwardedIPConfigurationOutput)
}

func (i RuleGroupForwardedIPConfigurationArgs) ToRuleGroupForwardedIPConfigurationPtrOutput() RuleGroupForwardedIPConfigurationPtrOutput {
	return i.ToRuleGroupForwardedIPConfigurationPtrOutputWithContext(context.Background())
}

func (i RuleGroupForwardedIPConfigurationArgs) ToRuleGroupForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) RuleGroupForwardedIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupForwardedIPConfigurationOutput).ToRuleGroupForwardedIPConfigurationPtrOutputWithContext(ctx)
}

// RuleGroupForwardedIPConfigurationPtrInput is an input type that accepts RuleGroupForwardedIPConfigurationArgs, RuleGroupForwardedIPConfigurationPtr and RuleGroupForwardedIPConfigurationPtrOutput values.
// You can construct a concrete instance of `RuleGroupForwardedIPConfigurationPtrInput` via:
//
//          RuleGroupForwardedIPConfigurationArgs{...}
//
//  or:
//
//          nil
type RuleGroupForwardedIPConfigurationPtrInput interface {
	pulumi.Input

	ToRuleGroupForwardedIPConfigurationPtrOutput() RuleGroupForwardedIPConfigurationPtrOutput
	ToRuleGroupForwardedIPConfigurationPtrOutputWithContext(context.Context) RuleGroupForwardedIPConfigurationPtrOutput
}

type ruleGroupForwardedIPConfigurationPtrType RuleGroupForwardedIPConfigurationArgs

func RuleGroupForwardedIPConfigurationPtr(v *RuleGroupForwardedIPConfigurationArgs) RuleGroupForwardedIPConfigurationPtrInput {
	return (*ruleGroupForwardedIPConfigurationPtrType)(v)
}

func (*ruleGroupForwardedIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupForwardedIPConfiguration)(nil)).Elem()
}

func (i *ruleGroupForwardedIPConfigurationPtrType) ToRuleGroupForwardedIPConfigurationPtrOutput() RuleGroupForwardedIPConfigurationPtrOutput {
	return i.ToRuleGroupForwardedIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *ruleGroupForwardedIPConfigurationPtrType) ToRuleGroupForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) RuleGroupForwardedIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupForwardedIPConfigurationPtrOutput)
}

type RuleGroupForwardedIPConfigurationOutput struct{ *pulumi.OutputState }

func (RuleGroupForwardedIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupForwardedIPConfiguration)(nil)).Elem()
}

func (o RuleGroupForwardedIPConfigurationOutput) ToRuleGroupForwardedIPConfigurationOutput() RuleGroupForwardedIPConfigurationOutput {
	return o
}

func (o RuleGroupForwardedIPConfigurationOutput) ToRuleGroupForwardedIPConfigurationOutputWithContext(ctx context.Context) RuleGroupForwardedIPConfigurationOutput {
	return o
}

func (o RuleGroupForwardedIPConfigurationOutput) ToRuleGroupForwardedIPConfigurationPtrOutput() RuleGroupForwardedIPConfigurationPtrOutput {
	return o.ToRuleGroupForwardedIPConfigurationPtrOutputWithContext(context.Background())
}

func (o RuleGroupForwardedIPConfigurationOutput) ToRuleGroupForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) RuleGroupForwardedIPConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupForwardedIPConfiguration) *RuleGroupForwardedIPConfiguration {
		return &v
	}).(RuleGroupForwardedIPConfigurationPtrOutput)
}

func (o RuleGroupForwardedIPConfigurationOutput) FallbackBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupForwardedIPConfiguration) string { return v.FallbackBehavior }).(pulumi.StringOutput)
}

func (o RuleGroupForwardedIPConfigurationOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupForwardedIPConfiguration) string { return v.HeaderName }).(pulumi.StringOutput)
}

type RuleGroupForwardedIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupForwardedIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupForwardedIPConfiguration)(nil)).Elem()
}

func (o RuleGroupForwardedIPConfigurationPtrOutput) ToRuleGroupForwardedIPConfigurationPtrOutput() RuleGroupForwardedIPConfigurationPtrOutput {
	return o
}

func (o RuleGroupForwardedIPConfigurationPtrOutput) ToRuleGroupForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) RuleGroupForwardedIPConfigurationPtrOutput {
	return o
}

func (o RuleGroupForwardedIPConfigurationPtrOutput) Elem() RuleGroupForwardedIPConfigurationOutput {
	return o.ApplyT(func(v *RuleGroupForwardedIPConfiguration) RuleGroupForwardedIPConfiguration {
		if v != nil {
			return *v
		}
		var ret RuleGroupForwardedIPConfiguration
		return ret
	}).(RuleGroupForwardedIPConfigurationOutput)
}

func (o RuleGroupForwardedIPConfigurationPtrOutput) FallbackBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupForwardedIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.FallbackBehavior
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupForwardedIPConfigurationPtrOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupForwardedIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.HeaderName
	}).(pulumi.StringPtrOutput)
}

type RuleGroupGeoMatchStatement struct {
	CountryCodes      []string                           `pulumi:"countryCodes"`
	ForwardedIPConfig *RuleGroupForwardedIPConfiguration `pulumi:"forwardedIPConfig"`
}

// RuleGroupGeoMatchStatementInput is an input type that accepts RuleGroupGeoMatchStatementArgs and RuleGroupGeoMatchStatementOutput values.
// You can construct a concrete instance of `RuleGroupGeoMatchStatementInput` via:
//
//          RuleGroupGeoMatchStatementArgs{...}
type RuleGroupGeoMatchStatementInput interface {
	pulumi.Input

	ToRuleGroupGeoMatchStatementOutput() RuleGroupGeoMatchStatementOutput
	ToRuleGroupGeoMatchStatementOutputWithContext(context.Context) RuleGroupGeoMatchStatementOutput
}

type RuleGroupGeoMatchStatementArgs struct {
	CountryCodes      pulumi.StringArrayInput                   `pulumi:"countryCodes"`
	ForwardedIPConfig RuleGroupForwardedIPConfigurationPtrInput `pulumi:"forwardedIPConfig"`
}

func (RuleGroupGeoMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupGeoMatchStatement)(nil)).Elem()
}

func (i RuleGroupGeoMatchStatementArgs) ToRuleGroupGeoMatchStatementOutput() RuleGroupGeoMatchStatementOutput {
	return i.ToRuleGroupGeoMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupGeoMatchStatementArgs) ToRuleGroupGeoMatchStatementOutputWithContext(ctx context.Context) RuleGroupGeoMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupGeoMatchStatementOutput)
}

func (i RuleGroupGeoMatchStatementArgs) ToRuleGroupGeoMatchStatementPtrOutput() RuleGroupGeoMatchStatementPtrOutput {
	return i.ToRuleGroupGeoMatchStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupGeoMatchStatementArgs) ToRuleGroupGeoMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupGeoMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupGeoMatchStatementOutput).ToRuleGroupGeoMatchStatementPtrOutputWithContext(ctx)
}

// RuleGroupGeoMatchStatementPtrInput is an input type that accepts RuleGroupGeoMatchStatementArgs, RuleGroupGeoMatchStatementPtr and RuleGroupGeoMatchStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupGeoMatchStatementPtrInput` via:
//
//          RuleGroupGeoMatchStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupGeoMatchStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupGeoMatchStatementPtrOutput() RuleGroupGeoMatchStatementPtrOutput
	ToRuleGroupGeoMatchStatementPtrOutputWithContext(context.Context) RuleGroupGeoMatchStatementPtrOutput
}

type ruleGroupGeoMatchStatementPtrType RuleGroupGeoMatchStatementArgs

func RuleGroupGeoMatchStatementPtr(v *RuleGroupGeoMatchStatementArgs) RuleGroupGeoMatchStatementPtrInput {
	return (*ruleGroupGeoMatchStatementPtrType)(v)
}

func (*ruleGroupGeoMatchStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupGeoMatchStatement)(nil)).Elem()
}

func (i *ruleGroupGeoMatchStatementPtrType) ToRuleGroupGeoMatchStatementPtrOutput() RuleGroupGeoMatchStatementPtrOutput {
	return i.ToRuleGroupGeoMatchStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupGeoMatchStatementPtrType) ToRuleGroupGeoMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupGeoMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupGeoMatchStatementPtrOutput)
}

type RuleGroupGeoMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupGeoMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupGeoMatchStatement)(nil)).Elem()
}

func (o RuleGroupGeoMatchStatementOutput) ToRuleGroupGeoMatchStatementOutput() RuleGroupGeoMatchStatementOutput {
	return o
}

func (o RuleGroupGeoMatchStatementOutput) ToRuleGroupGeoMatchStatementOutputWithContext(ctx context.Context) RuleGroupGeoMatchStatementOutput {
	return o
}

func (o RuleGroupGeoMatchStatementOutput) ToRuleGroupGeoMatchStatementPtrOutput() RuleGroupGeoMatchStatementPtrOutput {
	return o.ToRuleGroupGeoMatchStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupGeoMatchStatementOutput) ToRuleGroupGeoMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupGeoMatchStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupGeoMatchStatement) *RuleGroupGeoMatchStatement {
		return &v
	}).(RuleGroupGeoMatchStatementPtrOutput)
}

func (o RuleGroupGeoMatchStatementOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleGroupGeoMatchStatement) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

func (o RuleGroupGeoMatchStatementOutput) ForwardedIPConfig() RuleGroupForwardedIPConfigurationPtrOutput {
	return o.ApplyT(func(v RuleGroupGeoMatchStatement) *RuleGroupForwardedIPConfiguration { return v.ForwardedIPConfig }).(RuleGroupForwardedIPConfigurationPtrOutput)
}

type RuleGroupGeoMatchStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupGeoMatchStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupGeoMatchStatement)(nil)).Elem()
}

func (o RuleGroupGeoMatchStatementPtrOutput) ToRuleGroupGeoMatchStatementPtrOutput() RuleGroupGeoMatchStatementPtrOutput {
	return o
}

func (o RuleGroupGeoMatchStatementPtrOutput) ToRuleGroupGeoMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupGeoMatchStatementPtrOutput {
	return o
}

func (o RuleGroupGeoMatchStatementPtrOutput) Elem() RuleGroupGeoMatchStatementOutput {
	return o.ApplyT(func(v *RuleGroupGeoMatchStatement) RuleGroupGeoMatchStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupGeoMatchStatement
		return ret
	}).(RuleGroupGeoMatchStatementOutput)
}

func (o RuleGroupGeoMatchStatementPtrOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RuleGroupGeoMatchStatement) []string {
		if v == nil {
			return nil
		}
		return v.CountryCodes
	}).(pulumi.StringArrayOutput)
}

func (o RuleGroupGeoMatchStatementPtrOutput) ForwardedIPConfig() RuleGroupForwardedIPConfigurationPtrOutput {
	return o.ApplyT(func(v *RuleGroupGeoMatchStatement) *RuleGroupForwardedIPConfiguration {
		if v == nil {
			return nil
		}
		return v.ForwardedIPConfig
	}).(RuleGroupForwardedIPConfigurationPtrOutput)
}

type RuleGroupIPSetForwardedIPConfiguration struct {
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	HeaderName       string `pulumi:"headerName"`
	Position         string `pulumi:"position"`
}

// RuleGroupIPSetForwardedIPConfigurationInput is an input type that accepts RuleGroupIPSetForwardedIPConfigurationArgs and RuleGroupIPSetForwardedIPConfigurationOutput values.
// You can construct a concrete instance of `RuleGroupIPSetForwardedIPConfigurationInput` via:
//
//          RuleGroupIPSetForwardedIPConfigurationArgs{...}
type RuleGroupIPSetForwardedIPConfigurationInput interface {
	pulumi.Input

	ToRuleGroupIPSetForwardedIPConfigurationOutput() RuleGroupIPSetForwardedIPConfigurationOutput
	ToRuleGroupIPSetForwardedIPConfigurationOutputWithContext(context.Context) RuleGroupIPSetForwardedIPConfigurationOutput
}

type RuleGroupIPSetForwardedIPConfigurationArgs struct {
	FallbackBehavior pulumi.StringInput `pulumi:"fallbackBehavior"`
	HeaderName       pulumi.StringInput `pulumi:"headerName"`
	Position         pulumi.StringInput `pulumi:"position"`
}

func (RuleGroupIPSetForwardedIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupIPSetForwardedIPConfiguration)(nil)).Elem()
}

func (i RuleGroupIPSetForwardedIPConfigurationArgs) ToRuleGroupIPSetForwardedIPConfigurationOutput() RuleGroupIPSetForwardedIPConfigurationOutput {
	return i.ToRuleGroupIPSetForwardedIPConfigurationOutputWithContext(context.Background())
}

func (i RuleGroupIPSetForwardedIPConfigurationArgs) ToRuleGroupIPSetForwardedIPConfigurationOutputWithContext(ctx context.Context) RuleGroupIPSetForwardedIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupIPSetForwardedIPConfigurationOutput)
}

func (i RuleGroupIPSetForwardedIPConfigurationArgs) ToRuleGroupIPSetForwardedIPConfigurationPtrOutput() RuleGroupIPSetForwardedIPConfigurationPtrOutput {
	return i.ToRuleGroupIPSetForwardedIPConfigurationPtrOutputWithContext(context.Background())
}

func (i RuleGroupIPSetForwardedIPConfigurationArgs) ToRuleGroupIPSetForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) RuleGroupIPSetForwardedIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupIPSetForwardedIPConfigurationOutput).ToRuleGroupIPSetForwardedIPConfigurationPtrOutputWithContext(ctx)
}

// RuleGroupIPSetForwardedIPConfigurationPtrInput is an input type that accepts RuleGroupIPSetForwardedIPConfigurationArgs, RuleGroupIPSetForwardedIPConfigurationPtr and RuleGroupIPSetForwardedIPConfigurationPtrOutput values.
// You can construct a concrete instance of `RuleGroupIPSetForwardedIPConfigurationPtrInput` via:
//
//          RuleGroupIPSetForwardedIPConfigurationArgs{...}
//
//  or:
//
//          nil
type RuleGroupIPSetForwardedIPConfigurationPtrInput interface {
	pulumi.Input

	ToRuleGroupIPSetForwardedIPConfigurationPtrOutput() RuleGroupIPSetForwardedIPConfigurationPtrOutput
	ToRuleGroupIPSetForwardedIPConfigurationPtrOutputWithContext(context.Context) RuleGroupIPSetForwardedIPConfigurationPtrOutput
}

type ruleGroupIPSetForwardedIPConfigurationPtrType RuleGroupIPSetForwardedIPConfigurationArgs

func RuleGroupIPSetForwardedIPConfigurationPtr(v *RuleGroupIPSetForwardedIPConfigurationArgs) RuleGroupIPSetForwardedIPConfigurationPtrInput {
	return (*ruleGroupIPSetForwardedIPConfigurationPtrType)(v)
}

func (*ruleGroupIPSetForwardedIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupIPSetForwardedIPConfiguration)(nil)).Elem()
}

func (i *ruleGroupIPSetForwardedIPConfigurationPtrType) ToRuleGroupIPSetForwardedIPConfigurationPtrOutput() RuleGroupIPSetForwardedIPConfigurationPtrOutput {
	return i.ToRuleGroupIPSetForwardedIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *ruleGroupIPSetForwardedIPConfigurationPtrType) ToRuleGroupIPSetForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) RuleGroupIPSetForwardedIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupIPSetForwardedIPConfigurationPtrOutput)
}

type RuleGroupIPSetForwardedIPConfigurationOutput struct{ *pulumi.OutputState }

func (RuleGroupIPSetForwardedIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupIPSetForwardedIPConfiguration)(nil)).Elem()
}

func (o RuleGroupIPSetForwardedIPConfigurationOutput) ToRuleGroupIPSetForwardedIPConfigurationOutput() RuleGroupIPSetForwardedIPConfigurationOutput {
	return o
}

func (o RuleGroupIPSetForwardedIPConfigurationOutput) ToRuleGroupIPSetForwardedIPConfigurationOutputWithContext(ctx context.Context) RuleGroupIPSetForwardedIPConfigurationOutput {
	return o
}

func (o RuleGroupIPSetForwardedIPConfigurationOutput) ToRuleGroupIPSetForwardedIPConfigurationPtrOutput() RuleGroupIPSetForwardedIPConfigurationPtrOutput {
	return o.ToRuleGroupIPSetForwardedIPConfigurationPtrOutputWithContext(context.Background())
}

func (o RuleGroupIPSetForwardedIPConfigurationOutput) ToRuleGroupIPSetForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) RuleGroupIPSetForwardedIPConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupIPSetForwardedIPConfiguration) *RuleGroupIPSetForwardedIPConfiguration {
		return &v
	}).(RuleGroupIPSetForwardedIPConfigurationPtrOutput)
}

func (o RuleGroupIPSetForwardedIPConfigurationOutput) FallbackBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupIPSetForwardedIPConfiguration) string { return v.FallbackBehavior }).(pulumi.StringOutput)
}

func (o RuleGroupIPSetForwardedIPConfigurationOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupIPSetForwardedIPConfiguration) string { return v.HeaderName }).(pulumi.StringOutput)
}

func (o RuleGroupIPSetForwardedIPConfigurationOutput) Position() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupIPSetForwardedIPConfiguration) string { return v.Position }).(pulumi.StringOutput)
}

type RuleGroupIPSetForwardedIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupIPSetForwardedIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupIPSetForwardedIPConfiguration)(nil)).Elem()
}

func (o RuleGroupIPSetForwardedIPConfigurationPtrOutput) ToRuleGroupIPSetForwardedIPConfigurationPtrOutput() RuleGroupIPSetForwardedIPConfigurationPtrOutput {
	return o
}

func (o RuleGroupIPSetForwardedIPConfigurationPtrOutput) ToRuleGroupIPSetForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) RuleGroupIPSetForwardedIPConfigurationPtrOutput {
	return o
}

func (o RuleGroupIPSetForwardedIPConfigurationPtrOutput) Elem() RuleGroupIPSetForwardedIPConfigurationOutput {
	return o.ApplyT(func(v *RuleGroupIPSetForwardedIPConfiguration) RuleGroupIPSetForwardedIPConfiguration {
		if v != nil {
			return *v
		}
		var ret RuleGroupIPSetForwardedIPConfiguration
		return ret
	}).(RuleGroupIPSetForwardedIPConfigurationOutput)
}

func (o RuleGroupIPSetForwardedIPConfigurationPtrOutput) FallbackBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupIPSetForwardedIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.FallbackBehavior
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupIPSetForwardedIPConfigurationPtrOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupIPSetForwardedIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.HeaderName
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupIPSetForwardedIPConfigurationPtrOutput) Position() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupIPSetForwardedIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Position
	}).(pulumi.StringPtrOutput)
}

type RuleGroupIPSetReferenceStatement struct {
	Arn                    string                                  `pulumi:"arn"`
	IPSetForwardedIPConfig *RuleGroupIPSetForwardedIPConfiguration `pulumi:"iPSetForwardedIPConfig"`
}

// RuleGroupIPSetReferenceStatementInput is an input type that accepts RuleGroupIPSetReferenceStatementArgs and RuleGroupIPSetReferenceStatementOutput values.
// You can construct a concrete instance of `RuleGroupIPSetReferenceStatementInput` via:
//
//          RuleGroupIPSetReferenceStatementArgs{...}
type RuleGroupIPSetReferenceStatementInput interface {
	pulumi.Input

	ToRuleGroupIPSetReferenceStatementOutput() RuleGroupIPSetReferenceStatementOutput
	ToRuleGroupIPSetReferenceStatementOutputWithContext(context.Context) RuleGroupIPSetReferenceStatementOutput
}

type RuleGroupIPSetReferenceStatementArgs struct {
	Arn                    pulumi.StringInput                             `pulumi:"arn"`
	IPSetForwardedIPConfig RuleGroupIPSetForwardedIPConfigurationPtrInput `pulumi:"iPSetForwardedIPConfig"`
}

func (RuleGroupIPSetReferenceStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupIPSetReferenceStatement)(nil)).Elem()
}

func (i RuleGroupIPSetReferenceStatementArgs) ToRuleGroupIPSetReferenceStatementOutput() RuleGroupIPSetReferenceStatementOutput {
	return i.ToRuleGroupIPSetReferenceStatementOutputWithContext(context.Background())
}

func (i RuleGroupIPSetReferenceStatementArgs) ToRuleGroupIPSetReferenceStatementOutputWithContext(ctx context.Context) RuleGroupIPSetReferenceStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupIPSetReferenceStatementOutput)
}

func (i RuleGroupIPSetReferenceStatementArgs) ToRuleGroupIPSetReferenceStatementPtrOutput() RuleGroupIPSetReferenceStatementPtrOutput {
	return i.ToRuleGroupIPSetReferenceStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupIPSetReferenceStatementArgs) ToRuleGroupIPSetReferenceStatementPtrOutputWithContext(ctx context.Context) RuleGroupIPSetReferenceStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupIPSetReferenceStatementOutput).ToRuleGroupIPSetReferenceStatementPtrOutputWithContext(ctx)
}

// RuleGroupIPSetReferenceStatementPtrInput is an input type that accepts RuleGroupIPSetReferenceStatementArgs, RuleGroupIPSetReferenceStatementPtr and RuleGroupIPSetReferenceStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupIPSetReferenceStatementPtrInput` via:
//
//          RuleGroupIPSetReferenceStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupIPSetReferenceStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupIPSetReferenceStatementPtrOutput() RuleGroupIPSetReferenceStatementPtrOutput
	ToRuleGroupIPSetReferenceStatementPtrOutputWithContext(context.Context) RuleGroupIPSetReferenceStatementPtrOutput
}

type ruleGroupIPSetReferenceStatementPtrType RuleGroupIPSetReferenceStatementArgs

func RuleGroupIPSetReferenceStatementPtr(v *RuleGroupIPSetReferenceStatementArgs) RuleGroupIPSetReferenceStatementPtrInput {
	return (*ruleGroupIPSetReferenceStatementPtrType)(v)
}

func (*ruleGroupIPSetReferenceStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupIPSetReferenceStatement)(nil)).Elem()
}

func (i *ruleGroupIPSetReferenceStatementPtrType) ToRuleGroupIPSetReferenceStatementPtrOutput() RuleGroupIPSetReferenceStatementPtrOutput {
	return i.ToRuleGroupIPSetReferenceStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupIPSetReferenceStatementPtrType) ToRuleGroupIPSetReferenceStatementPtrOutputWithContext(ctx context.Context) RuleGroupIPSetReferenceStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupIPSetReferenceStatementPtrOutput)
}

type RuleGroupIPSetReferenceStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupIPSetReferenceStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupIPSetReferenceStatement)(nil)).Elem()
}

func (o RuleGroupIPSetReferenceStatementOutput) ToRuleGroupIPSetReferenceStatementOutput() RuleGroupIPSetReferenceStatementOutput {
	return o
}

func (o RuleGroupIPSetReferenceStatementOutput) ToRuleGroupIPSetReferenceStatementOutputWithContext(ctx context.Context) RuleGroupIPSetReferenceStatementOutput {
	return o
}

func (o RuleGroupIPSetReferenceStatementOutput) ToRuleGroupIPSetReferenceStatementPtrOutput() RuleGroupIPSetReferenceStatementPtrOutput {
	return o.ToRuleGroupIPSetReferenceStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupIPSetReferenceStatementOutput) ToRuleGroupIPSetReferenceStatementPtrOutputWithContext(ctx context.Context) RuleGroupIPSetReferenceStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupIPSetReferenceStatement) *RuleGroupIPSetReferenceStatement {
		return &v
	}).(RuleGroupIPSetReferenceStatementPtrOutput)
}

func (o RuleGroupIPSetReferenceStatementOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupIPSetReferenceStatement) string { return v.Arn }).(pulumi.StringOutput)
}

func (o RuleGroupIPSetReferenceStatementOutput) IPSetForwardedIPConfig() RuleGroupIPSetForwardedIPConfigurationPtrOutput {
	return o.ApplyT(func(v RuleGroupIPSetReferenceStatement) *RuleGroupIPSetForwardedIPConfiguration {
		return v.IPSetForwardedIPConfig
	}).(RuleGroupIPSetForwardedIPConfigurationPtrOutput)
}

type RuleGroupIPSetReferenceStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupIPSetReferenceStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupIPSetReferenceStatement)(nil)).Elem()
}

func (o RuleGroupIPSetReferenceStatementPtrOutput) ToRuleGroupIPSetReferenceStatementPtrOutput() RuleGroupIPSetReferenceStatementPtrOutput {
	return o
}

func (o RuleGroupIPSetReferenceStatementPtrOutput) ToRuleGroupIPSetReferenceStatementPtrOutputWithContext(ctx context.Context) RuleGroupIPSetReferenceStatementPtrOutput {
	return o
}

func (o RuleGroupIPSetReferenceStatementPtrOutput) Elem() RuleGroupIPSetReferenceStatementOutput {
	return o.ApplyT(func(v *RuleGroupIPSetReferenceStatement) RuleGroupIPSetReferenceStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupIPSetReferenceStatement
		return ret
	}).(RuleGroupIPSetReferenceStatementOutput)
}

func (o RuleGroupIPSetReferenceStatementPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupIPSetReferenceStatement) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupIPSetReferenceStatementPtrOutput) IPSetForwardedIPConfig() RuleGroupIPSetForwardedIPConfigurationPtrOutput {
	return o.ApplyT(func(v *RuleGroupIPSetReferenceStatement) *RuleGroupIPSetForwardedIPConfiguration {
		if v == nil {
			return nil
		}
		return v.IPSetForwardedIPConfig
	}).(RuleGroupIPSetForwardedIPConfigurationPtrOutput)
}

// Inspect the request body as JSON. The request body immediately follows the request headers.
type RuleGroupJsonBody struct {
	InvalidFallbackBehavior *string                   `pulumi:"invalidFallbackBehavior"`
	MatchPattern            RuleGroupJsonMatchPattern `pulumi:"matchPattern"`
	MatchScope              string                    `pulumi:"matchScope"`
}

// RuleGroupJsonBodyInput is an input type that accepts RuleGroupJsonBodyArgs and RuleGroupJsonBodyOutput values.
// You can construct a concrete instance of `RuleGroupJsonBodyInput` via:
//
//          RuleGroupJsonBodyArgs{...}
type RuleGroupJsonBodyInput interface {
	pulumi.Input

	ToRuleGroupJsonBodyOutput() RuleGroupJsonBodyOutput
	ToRuleGroupJsonBodyOutputWithContext(context.Context) RuleGroupJsonBodyOutput
}

// Inspect the request body as JSON. The request body immediately follows the request headers.
type RuleGroupJsonBodyArgs struct {
	InvalidFallbackBehavior pulumi.StringPtrInput          `pulumi:"invalidFallbackBehavior"`
	MatchPattern            RuleGroupJsonMatchPatternInput `pulumi:"matchPattern"`
	MatchScope              pulumi.StringInput             `pulumi:"matchScope"`
}

func (RuleGroupJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupJsonBody)(nil)).Elem()
}

func (i RuleGroupJsonBodyArgs) ToRuleGroupJsonBodyOutput() RuleGroupJsonBodyOutput {
	return i.ToRuleGroupJsonBodyOutputWithContext(context.Background())
}

func (i RuleGroupJsonBodyArgs) ToRuleGroupJsonBodyOutputWithContext(ctx context.Context) RuleGroupJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupJsonBodyOutput)
}

func (i RuleGroupJsonBodyArgs) ToRuleGroupJsonBodyPtrOutput() RuleGroupJsonBodyPtrOutput {
	return i.ToRuleGroupJsonBodyPtrOutputWithContext(context.Background())
}

func (i RuleGroupJsonBodyArgs) ToRuleGroupJsonBodyPtrOutputWithContext(ctx context.Context) RuleGroupJsonBodyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupJsonBodyOutput).ToRuleGroupJsonBodyPtrOutputWithContext(ctx)
}

// RuleGroupJsonBodyPtrInput is an input type that accepts RuleGroupJsonBodyArgs, RuleGroupJsonBodyPtr and RuleGroupJsonBodyPtrOutput values.
// You can construct a concrete instance of `RuleGroupJsonBodyPtrInput` via:
//
//          RuleGroupJsonBodyArgs{...}
//
//  or:
//
//          nil
type RuleGroupJsonBodyPtrInput interface {
	pulumi.Input

	ToRuleGroupJsonBodyPtrOutput() RuleGroupJsonBodyPtrOutput
	ToRuleGroupJsonBodyPtrOutputWithContext(context.Context) RuleGroupJsonBodyPtrOutput
}

type ruleGroupJsonBodyPtrType RuleGroupJsonBodyArgs

func RuleGroupJsonBodyPtr(v *RuleGroupJsonBodyArgs) RuleGroupJsonBodyPtrInput {
	return (*ruleGroupJsonBodyPtrType)(v)
}

func (*ruleGroupJsonBodyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupJsonBody)(nil)).Elem()
}

func (i *ruleGroupJsonBodyPtrType) ToRuleGroupJsonBodyPtrOutput() RuleGroupJsonBodyPtrOutput {
	return i.ToRuleGroupJsonBodyPtrOutputWithContext(context.Background())
}

func (i *ruleGroupJsonBodyPtrType) ToRuleGroupJsonBodyPtrOutputWithContext(ctx context.Context) RuleGroupJsonBodyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupJsonBodyPtrOutput)
}

// Inspect the request body as JSON. The request body immediately follows the request headers.
type RuleGroupJsonBodyOutput struct{ *pulumi.OutputState }

func (RuleGroupJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupJsonBody)(nil)).Elem()
}

func (o RuleGroupJsonBodyOutput) ToRuleGroupJsonBodyOutput() RuleGroupJsonBodyOutput {
	return o
}

func (o RuleGroupJsonBodyOutput) ToRuleGroupJsonBodyOutputWithContext(ctx context.Context) RuleGroupJsonBodyOutput {
	return o
}

func (o RuleGroupJsonBodyOutput) ToRuleGroupJsonBodyPtrOutput() RuleGroupJsonBodyPtrOutput {
	return o.ToRuleGroupJsonBodyPtrOutputWithContext(context.Background())
}

func (o RuleGroupJsonBodyOutput) ToRuleGroupJsonBodyPtrOutputWithContext(ctx context.Context) RuleGroupJsonBodyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupJsonBody) *RuleGroupJsonBody {
		return &v
	}).(RuleGroupJsonBodyPtrOutput)
}

func (o RuleGroupJsonBodyOutput) InvalidFallbackBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleGroupJsonBody) *string { return v.InvalidFallbackBehavior }).(pulumi.StringPtrOutput)
}

func (o RuleGroupJsonBodyOutput) MatchPattern() RuleGroupJsonMatchPatternOutput {
	return o.ApplyT(func(v RuleGroupJsonBody) RuleGroupJsonMatchPattern { return v.MatchPattern }).(RuleGroupJsonMatchPatternOutput)
}

func (o RuleGroupJsonBodyOutput) MatchScope() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupJsonBody) string { return v.MatchScope }).(pulumi.StringOutput)
}

type RuleGroupJsonBodyPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupJsonBodyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupJsonBody)(nil)).Elem()
}

func (o RuleGroupJsonBodyPtrOutput) ToRuleGroupJsonBodyPtrOutput() RuleGroupJsonBodyPtrOutput {
	return o
}

func (o RuleGroupJsonBodyPtrOutput) ToRuleGroupJsonBodyPtrOutputWithContext(ctx context.Context) RuleGroupJsonBodyPtrOutput {
	return o
}

func (o RuleGroupJsonBodyPtrOutput) Elem() RuleGroupJsonBodyOutput {
	return o.ApplyT(func(v *RuleGroupJsonBody) RuleGroupJsonBody {
		if v != nil {
			return *v
		}
		var ret RuleGroupJsonBody
		return ret
	}).(RuleGroupJsonBodyOutput)
}

func (o RuleGroupJsonBodyPtrOutput) InvalidFallbackBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupJsonBody) *string {
		if v == nil {
			return nil
		}
		return v.InvalidFallbackBehavior
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupJsonBodyPtrOutput) MatchPattern() RuleGroupJsonMatchPatternPtrOutput {
	return o.ApplyT(func(v *RuleGroupJsonBody) *RuleGroupJsonMatchPattern {
		if v == nil {
			return nil
		}
		return &v.MatchPattern
	}).(RuleGroupJsonMatchPatternPtrOutput)
}

func (o RuleGroupJsonBodyPtrOutput) MatchScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupJsonBody) *string {
		if v == nil {
			return nil
		}
		return &v.MatchScope
	}).(pulumi.StringPtrOutput)
}

// The pattern to look for in the JSON body.
type RuleGroupJsonMatchPattern struct {
	// Inspect all parts of the web request's JSON body.
	All           interface{} `pulumi:"all"`
	IncludedPaths []string    `pulumi:"includedPaths"`
}

// RuleGroupJsonMatchPatternInput is an input type that accepts RuleGroupJsonMatchPatternArgs and RuleGroupJsonMatchPatternOutput values.
// You can construct a concrete instance of `RuleGroupJsonMatchPatternInput` via:
//
//          RuleGroupJsonMatchPatternArgs{...}
type RuleGroupJsonMatchPatternInput interface {
	pulumi.Input

	ToRuleGroupJsonMatchPatternOutput() RuleGroupJsonMatchPatternOutput
	ToRuleGroupJsonMatchPatternOutputWithContext(context.Context) RuleGroupJsonMatchPatternOutput
}

// The pattern to look for in the JSON body.
type RuleGroupJsonMatchPatternArgs struct {
	// Inspect all parts of the web request's JSON body.
	All           pulumi.Input            `pulumi:"all"`
	IncludedPaths pulumi.StringArrayInput `pulumi:"includedPaths"`
}

func (RuleGroupJsonMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupJsonMatchPattern)(nil)).Elem()
}

func (i RuleGroupJsonMatchPatternArgs) ToRuleGroupJsonMatchPatternOutput() RuleGroupJsonMatchPatternOutput {
	return i.ToRuleGroupJsonMatchPatternOutputWithContext(context.Background())
}

func (i RuleGroupJsonMatchPatternArgs) ToRuleGroupJsonMatchPatternOutputWithContext(ctx context.Context) RuleGroupJsonMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupJsonMatchPatternOutput)
}

func (i RuleGroupJsonMatchPatternArgs) ToRuleGroupJsonMatchPatternPtrOutput() RuleGroupJsonMatchPatternPtrOutput {
	return i.ToRuleGroupJsonMatchPatternPtrOutputWithContext(context.Background())
}

func (i RuleGroupJsonMatchPatternArgs) ToRuleGroupJsonMatchPatternPtrOutputWithContext(ctx context.Context) RuleGroupJsonMatchPatternPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupJsonMatchPatternOutput).ToRuleGroupJsonMatchPatternPtrOutputWithContext(ctx)
}

// RuleGroupJsonMatchPatternPtrInput is an input type that accepts RuleGroupJsonMatchPatternArgs, RuleGroupJsonMatchPatternPtr and RuleGroupJsonMatchPatternPtrOutput values.
// You can construct a concrete instance of `RuleGroupJsonMatchPatternPtrInput` via:
//
//          RuleGroupJsonMatchPatternArgs{...}
//
//  or:
//
//          nil
type RuleGroupJsonMatchPatternPtrInput interface {
	pulumi.Input

	ToRuleGroupJsonMatchPatternPtrOutput() RuleGroupJsonMatchPatternPtrOutput
	ToRuleGroupJsonMatchPatternPtrOutputWithContext(context.Context) RuleGroupJsonMatchPatternPtrOutput
}

type ruleGroupJsonMatchPatternPtrType RuleGroupJsonMatchPatternArgs

func RuleGroupJsonMatchPatternPtr(v *RuleGroupJsonMatchPatternArgs) RuleGroupJsonMatchPatternPtrInput {
	return (*ruleGroupJsonMatchPatternPtrType)(v)
}

func (*ruleGroupJsonMatchPatternPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupJsonMatchPattern)(nil)).Elem()
}

func (i *ruleGroupJsonMatchPatternPtrType) ToRuleGroupJsonMatchPatternPtrOutput() RuleGroupJsonMatchPatternPtrOutput {
	return i.ToRuleGroupJsonMatchPatternPtrOutputWithContext(context.Background())
}

func (i *ruleGroupJsonMatchPatternPtrType) ToRuleGroupJsonMatchPatternPtrOutputWithContext(ctx context.Context) RuleGroupJsonMatchPatternPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupJsonMatchPatternPtrOutput)
}

// The pattern to look for in the JSON body.
type RuleGroupJsonMatchPatternOutput struct{ *pulumi.OutputState }

func (RuleGroupJsonMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupJsonMatchPattern)(nil)).Elem()
}

func (o RuleGroupJsonMatchPatternOutput) ToRuleGroupJsonMatchPatternOutput() RuleGroupJsonMatchPatternOutput {
	return o
}

func (o RuleGroupJsonMatchPatternOutput) ToRuleGroupJsonMatchPatternOutputWithContext(ctx context.Context) RuleGroupJsonMatchPatternOutput {
	return o
}

func (o RuleGroupJsonMatchPatternOutput) ToRuleGroupJsonMatchPatternPtrOutput() RuleGroupJsonMatchPatternPtrOutput {
	return o.ToRuleGroupJsonMatchPatternPtrOutputWithContext(context.Background())
}

func (o RuleGroupJsonMatchPatternOutput) ToRuleGroupJsonMatchPatternPtrOutputWithContext(ctx context.Context) RuleGroupJsonMatchPatternPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupJsonMatchPattern) *RuleGroupJsonMatchPattern {
		return &v
	}).(RuleGroupJsonMatchPatternPtrOutput)
}

// Inspect all parts of the web request's JSON body.
func (o RuleGroupJsonMatchPatternOutput) All() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupJsonMatchPattern) interface{} { return v.All }).(pulumi.AnyOutput)
}

func (o RuleGroupJsonMatchPatternOutput) IncludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleGroupJsonMatchPattern) []string { return v.IncludedPaths }).(pulumi.StringArrayOutput)
}

type RuleGroupJsonMatchPatternPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupJsonMatchPatternPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupJsonMatchPattern)(nil)).Elem()
}

func (o RuleGroupJsonMatchPatternPtrOutput) ToRuleGroupJsonMatchPatternPtrOutput() RuleGroupJsonMatchPatternPtrOutput {
	return o
}

func (o RuleGroupJsonMatchPatternPtrOutput) ToRuleGroupJsonMatchPatternPtrOutputWithContext(ctx context.Context) RuleGroupJsonMatchPatternPtrOutput {
	return o
}

func (o RuleGroupJsonMatchPatternPtrOutput) Elem() RuleGroupJsonMatchPatternOutput {
	return o.ApplyT(func(v *RuleGroupJsonMatchPattern) RuleGroupJsonMatchPattern {
		if v != nil {
			return *v
		}
		var ret RuleGroupJsonMatchPattern
		return ret
	}).(RuleGroupJsonMatchPatternOutput)
}

// Inspect all parts of the web request's JSON body.
func (o RuleGroupJsonMatchPatternPtrOutput) All() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupJsonMatchPattern) interface{} {
		if v == nil {
			return nil
		}
		return v.All
	}).(pulumi.AnyOutput)
}

func (o RuleGroupJsonMatchPatternPtrOutput) IncludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RuleGroupJsonMatchPattern) []string {
		if v == nil {
			return nil
		}
		return v.IncludedPaths
	}).(pulumi.StringArrayOutput)
}

type RuleGroupLabel struct {
	Name string `pulumi:"name"`
}

// RuleGroupLabelInput is an input type that accepts RuleGroupLabelArgs and RuleGroupLabelOutput values.
// You can construct a concrete instance of `RuleGroupLabelInput` via:
//
//          RuleGroupLabelArgs{...}
type RuleGroupLabelInput interface {
	pulumi.Input

	ToRuleGroupLabelOutput() RuleGroupLabelOutput
	ToRuleGroupLabelOutputWithContext(context.Context) RuleGroupLabelOutput
}

type RuleGroupLabelArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (RuleGroupLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupLabel)(nil)).Elem()
}

func (i RuleGroupLabelArgs) ToRuleGroupLabelOutput() RuleGroupLabelOutput {
	return i.ToRuleGroupLabelOutputWithContext(context.Background())
}

func (i RuleGroupLabelArgs) ToRuleGroupLabelOutputWithContext(ctx context.Context) RuleGroupLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupLabelOutput)
}

// RuleGroupLabelArrayInput is an input type that accepts RuleGroupLabelArray and RuleGroupLabelArrayOutput values.
// You can construct a concrete instance of `RuleGroupLabelArrayInput` via:
//
//          RuleGroupLabelArray{ RuleGroupLabelArgs{...} }
type RuleGroupLabelArrayInput interface {
	pulumi.Input

	ToRuleGroupLabelArrayOutput() RuleGroupLabelArrayOutput
	ToRuleGroupLabelArrayOutputWithContext(context.Context) RuleGroupLabelArrayOutput
}

type RuleGroupLabelArray []RuleGroupLabelInput

func (RuleGroupLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupLabel)(nil)).Elem()
}

func (i RuleGroupLabelArray) ToRuleGroupLabelArrayOutput() RuleGroupLabelArrayOutput {
	return i.ToRuleGroupLabelArrayOutputWithContext(context.Background())
}

func (i RuleGroupLabelArray) ToRuleGroupLabelArrayOutputWithContext(ctx context.Context) RuleGroupLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupLabelArrayOutput)
}

type RuleGroupLabelOutput struct{ *pulumi.OutputState }

func (RuleGroupLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupLabel)(nil)).Elem()
}

func (o RuleGroupLabelOutput) ToRuleGroupLabelOutput() RuleGroupLabelOutput {
	return o
}

func (o RuleGroupLabelOutput) ToRuleGroupLabelOutputWithContext(ctx context.Context) RuleGroupLabelOutput {
	return o
}

func (o RuleGroupLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupLabel) string { return v.Name }).(pulumi.StringOutput)
}

type RuleGroupLabelArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupLabel)(nil)).Elem()
}

func (o RuleGroupLabelArrayOutput) ToRuleGroupLabelArrayOutput() RuleGroupLabelArrayOutput {
	return o
}

func (o RuleGroupLabelArrayOutput) ToRuleGroupLabelArrayOutputWithContext(ctx context.Context) RuleGroupLabelArrayOutput {
	return o
}

func (o RuleGroupLabelArrayOutput) Index(i pulumi.IntInput) RuleGroupLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupLabel {
		return vs[0].([]RuleGroupLabel)[vs[1].(int)]
	}).(RuleGroupLabelOutput)
}

type RuleGroupLabelMatchStatement struct {
	Key   string `pulumi:"key"`
	Scope string `pulumi:"scope"`
}

// RuleGroupLabelMatchStatementInput is an input type that accepts RuleGroupLabelMatchStatementArgs and RuleGroupLabelMatchStatementOutput values.
// You can construct a concrete instance of `RuleGroupLabelMatchStatementInput` via:
//
//          RuleGroupLabelMatchStatementArgs{...}
type RuleGroupLabelMatchStatementInput interface {
	pulumi.Input

	ToRuleGroupLabelMatchStatementOutput() RuleGroupLabelMatchStatementOutput
	ToRuleGroupLabelMatchStatementOutputWithContext(context.Context) RuleGroupLabelMatchStatementOutput
}

type RuleGroupLabelMatchStatementArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Scope pulumi.StringInput `pulumi:"scope"`
}

func (RuleGroupLabelMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupLabelMatchStatement)(nil)).Elem()
}

func (i RuleGroupLabelMatchStatementArgs) ToRuleGroupLabelMatchStatementOutput() RuleGroupLabelMatchStatementOutput {
	return i.ToRuleGroupLabelMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupLabelMatchStatementArgs) ToRuleGroupLabelMatchStatementOutputWithContext(ctx context.Context) RuleGroupLabelMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupLabelMatchStatementOutput)
}

func (i RuleGroupLabelMatchStatementArgs) ToRuleGroupLabelMatchStatementPtrOutput() RuleGroupLabelMatchStatementPtrOutput {
	return i.ToRuleGroupLabelMatchStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupLabelMatchStatementArgs) ToRuleGroupLabelMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupLabelMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupLabelMatchStatementOutput).ToRuleGroupLabelMatchStatementPtrOutputWithContext(ctx)
}

// RuleGroupLabelMatchStatementPtrInput is an input type that accepts RuleGroupLabelMatchStatementArgs, RuleGroupLabelMatchStatementPtr and RuleGroupLabelMatchStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupLabelMatchStatementPtrInput` via:
//
//          RuleGroupLabelMatchStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupLabelMatchStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupLabelMatchStatementPtrOutput() RuleGroupLabelMatchStatementPtrOutput
	ToRuleGroupLabelMatchStatementPtrOutputWithContext(context.Context) RuleGroupLabelMatchStatementPtrOutput
}

type ruleGroupLabelMatchStatementPtrType RuleGroupLabelMatchStatementArgs

func RuleGroupLabelMatchStatementPtr(v *RuleGroupLabelMatchStatementArgs) RuleGroupLabelMatchStatementPtrInput {
	return (*ruleGroupLabelMatchStatementPtrType)(v)
}

func (*ruleGroupLabelMatchStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupLabelMatchStatement)(nil)).Elem()
}

func (i *ruleGroupLabelMatchStatementPtrType) ToRuleGroupLabelMatchStatementPtrOutput() RuleGroupLabelMatchStatementPtrOutput {
	return i.ToRuleGroupLabelMatchStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupLabelMatchStatementPtrType) ToRuleGroupLabelMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupLabelMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupLabelMatchStatementPtrOutput)
}

type RuleGroupLabelMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupLabelMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupLabelMatchStatement)(nil)).Elem()
}

func (o RuleGroupLabelMatchStatementOutput) ToRuleGroupLabelMatchStatementOutput() RuleGroupLabelMatchStatementOutput {
	return o
}

func (o RuleGroupLabelMatchStatementOutput) ToRuleGroupLabelMatchStatementOutputWithContext(ctx context.Context) RuleGroupLabelMatchStatementOutput {
	return o
}

func (o RuleGroupLabelMatchStatementOutput) ToRuleGroupLabelMatchStatementPtrOutput() RuleGroupLabelMatchStatementPtrOutput {
	return o.ToRuleGroupLabelMatchStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupLabelMatchStatementOutput) ToRuleGroupLabelMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupLabelMatchStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupLabelMatchStatement) *RuleGroupLabelMatchStatement {
		return &v
	}).(RuleGroupLabelMatchStatementPtrOutput)
}

func (o RuleGroupLabelMatchStatementOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupLabelMatchStatement) string { return v.Key }).(pulumi.StringOutput)
}

func (o RuleGroupLabelMatchStatementOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupLabelMatchStatement) string { return v.Scope }).(pulumi.StringOutput)
}

type RuleGroupLabelMatchStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupLabelMatchStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupLabelMatchStatement)(nil)).Elem()
}

func (o RuleGroupLabelMatchStatementPtrOutput) ToRuleGroupLabelMatchStatementPtrOutput() RuleGroupLabelMatchStatementPtrOutput {
	return o
}

func (o RuleGroupLabelMatchStatementPtrOutput) ToRuleGroupLabelMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupLabelMatchStatementPtrOutput {
	return o
}

func (o RuleGroupLabelMatchStatementPtrOutput) Elem() RuleGroupLabelMatchStatementOutput {
	return o.ApplyT(func(v *RuleGroupLabelMatchStatement) RuleGroupLabelMatchStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupLabelMatchStatement
		return ret
	}).(RuleGroupLabelMatchStatementOutput)
}

func (o RuleGroupLabelMatchStatementPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupLabelMatchStatement) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupLabelMatchStatementPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupLabelMatchStatement) *string {
		if v == nil {
			return nil
		}
		return &v.Scope
	}).(pulumi.StringPtrOutput)
}

type RuleGroupLabelSummary struct {
	Name *string `pulumi:"name"`
}

// RuleGroupLabelSummaryInput is an input type that accepts RuleGroupLabelSummaryArgs and RuleGroupLabelSummaryOutput values.
// You can construct a concrete instance of `RuleGroupLabelSummaryInput` via:
//
//          RuleGroupLabelSummaryArgs{...}
type RuleGroupLabelSummaryInput interface {
	pulumi.Input

	ToRuleGroupLabelSummaryOutput() RuleGroupLabelSummaryOutput
	ToRuleGroupLabelSummaryOutputWithContext(context.Context) RuleGroupLabelSummaryOutput
}

type RuleGroupLabelSummaryArgs struct {
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (RuleGroupLabelSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupLabelSummary)(nil)).Elem()
}

func (i RuleGroupLabelSummaryArgs) ToRuleGroupLabelSummaryOutput() RuleGroupLabelSummaryOutput {
	return i.ToRuleGroupLabelSummaryOutputWithContext(context.Background())
}

func (i RuleGroupLabelSummaryArgs) ToRuleGroupLabelSummaryOutputWithContext(ctx context.Context) RuleGroupLabelSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupLabelSummaryOutput)
}

// RuleGroupLabelSummaryArrayInput is an input type that accepts RuleGroupLabelSummaryArray and RuleGroupLabelSummaryArrayOutput values.
// You can construct a concrete instance of `RuleGroupLabelSummaryArrayInput` via:
//
//          RuleGroupLabelSummaryArray{ RuleGroupLabelSummaryArgs{...} }
type RuleGroupLabelSummaryArrayInput interface {
	pulumi.Input

	ToRuleGroupLabelSummaryArrayOutput() RuleGroupLabelSummaryArrayOutput
	ToRuleGroupLabelSummaryArrayOutputWithContext(context.Context) RuleGroupLabelSummaryArrayOutput
}

type RuleGroupLabelSummaryArray []RuleGroupLabelSummaryInput

func (RuleGroupLabelSummaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupLabelSummary)(nil)).Elem()
}

func (i RuleGroupLabelSummaryArray) ToRuleGroupLabelSummaryArrayOutput() RuleGroupLabelSummaryArrayOutput {
	return i.ToRuleGroupLabelSummaryArrayOutputWithContext(context.Background())
}

func (i RuleGroupLabelSummaryArray) ToRuleGroupLabelSummaryArrayOutputWithContext(ctx context.Context) RuleGroupLabelSummaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupLabelSummaryArrayOutput)
}

type RuleGroupLabelSummaryOutput struct{ *pulumi.OutputState }

func (RuleGroupLabelSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupLabelSummary)(nil)).Elem()
}

func (o RuleGroupLabelSummaryOutput) ToRuleGroupLabelSummaryOutput() RuleGroupLabelSummaryOutput {
	return o
}

func (o RuleGroupLabelSummaryOutput) ToRuleGroupLabelSummaryOutputWithContext(ctx context.Context) RuleGroupLabelSummaryOutput {
	return o
}

func (o RuleGroupLabelSummaryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleGroupLabelSummary) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type RuleGroupLabelSummaryArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupLabelSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupLabelSummary)(nil)).Elem()
}

func (o RuleGroupLabelSummaryArrayOutput) ToRuleGroupLabelSummaryArrayOutput() RuleGroupLabelSummaryArrayOutput {
	return o
}

func (o RuleGroupLabelSummaryArrayOutput) ToRuleGroupLabelSummaryArrayOutputWithContext(ctx context.Context) RuleGroupLabelSummaryArrayOutput {
	return o
}

func (o RuleGroupLabelSummaryArrayOutput) Index(i pulumi.IntInput) RuleGroupLabelSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupLabelSummary {
		return vs[0].([]RuleGroupLabelSummary)[vs[1].(int)]
	}).(RuleGroupLabelSummaryOutput)
}

type RuleGroupNotStatement struct {
	Statement RuleGroupStatement `pulumi:"statement"`
}

// RuleGroupNotStatementInput is an input type that accepts RuleGroupNotStatementArgs and RuleGroupNotStatementOutput values.
// You can construct a concrete instance of `RuleGroupNotStatementInput` via:
//
//          RuleGroupNotStatementArgs{...}
type RuleGroupNotStatementInput interface {
	pulumi.Input

	ToRuleGroupNotStatementOutput() RuleGroupNotStatementOutput
	ToRuleGroupNotStatementOutputWithContext(context.Context) RuleGroupNotStatementOutput
}

type RuleGroupNotStatementArgs struct {
	Statement RuleGroupStatementInput `pulumi:"statement"`
}

func (RuleGroupNotStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupNotStatement)(nil)).Elem()
}

func (i RuleGroupNotStatementArgs) ToRuleGroupNotStatementOutput() RuleGroupNotStatementOutput {
	return i.ToRuleGroupNotStatementOutputWithContext(context.Background())
}

func (i RuleGroupNotStatementArgs) ToRuleGroupNotStatementOutputWithContext(ctx context.Context) RuleGroupNotStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupNotStatementOutput)
}

func (i RuleGroupNotStatementArgs) ToRuleGroupNotStatementPtrOutput() RuleGroupNotStatementPtrOutput {
	return i.ToRuleGroupNotStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupNotStatementArgs) ToRuleGroupNotStatementPtrOutputWithContext(ctx context.Context) RuleGroupNotStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupNotStatementOutput).ToRuleGroupNotStatementPtrOutputWithContext(ctx)
}

// RuleGroupNotStatementPtrInput is an input type that accepts RuleGroupNotStatementArgs, RuleGroupNotStatementPtr and RuleGroupNotStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupNotStatementPtrInput` via:
//
//          RuleGroupNotStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupNotStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupNotStatementPtrOutput() RuleGroupNotStatementPtrOutput
	ToRuleGroupNotStatementPtrOutputWithContext(context.Context) RuleGroupNotStatementPtrOutput
}

type ruleGroupNotStatementPtrType RuleGroupNotStatementArgs

func RuleGroupNotStatementPtr(v *RuleGroupNotStatementArgs) RuleGroupNotStatementPtrInput {
	return (*ruleGroupNotStatementPtrType)(v)
}

func (*ruleGroupNotStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupNotStatement)(nil)).Elem()
}

func (i *ruleGroupNotStatementPtrType) ToRuleGroupNotStatementPtrOutput() RuleGroupNotStatementPtrOutput {
	return i.ToRuleGroupNotStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupNotStatementPtrType) ToRuleGroupNotStatementPtrOutputWithContext(ctx context.Context) RuleGroupNotStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupNotStatementPtrOutput)
}

type RuleGroupNotStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupNotStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupNotStatement)(nil)).Elem()
}

func (o RuleGroupNotStatementOutput) ToRuleGroupNotStatementOutput() RuleGroupNotStatementOutput {
	return o
}

func (o RuleGroupNotStatementOutput) ToRuleGroupNotStatementOutputWithContext(ctx context.Context) RuleGroupNotStatementOutput {
	return o
}

func (o RuleGroupNotStatementOutput) ToRuleGroupNotStatementPtrOutput() RuleGroupNotStatementPtrOutput {
	return o.ToRuleGroupNotStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupNotStatementOutput) ToRuleGroupNotStatementPtrOutputWithContext(ctx context.Context) RuleGroupNotStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupNotStatement) *RuleGroupNotStatement {
		return &v
	}).(RuleGroupNotStatementPtrOutput)
}

func (o RuleGroupNotStatementOutput) Statement() RuleGroupStatementOutput {
	return o.ApplyT(func(v RuleGroupNotStatement) RuleGroupStatement { return v.Statement }).(RuleGroupStatementOutput)
}

type RuleGroupNotStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupNotStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupNotStatement)(nil)).Elem()
}

func (o RuleGroupNotStatementPtrOutput) ToRuleGroupNotStatementPtrOutput() RuleGroupNotStatementPtrOutput {
	return o
}

func (o RuleGroupNotStatementPtrOutput) ToRuleGroupNotStatementPtrOutputWithContext(ctx context.Context) RuleGroupNotStatementPtrOutput {
	return o
}

func (o RuleGroupNotStatementPtrOutput) Elem() RuleGroupNotStatementOutput {
	return o.ApplyT(func(v *RuleGroupNotStatement) RuleGroupNotStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupNotStatement
		return ret
	}).(RuleGroupNotStatementOutput)
}

func (o RuleGroupNotStatementPtrOutput) Statement() RuleGroupStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupNotStatement) *RuleGroupStatement {
		if v == nil {
			return nil
		}
		return &v.Statement
	}).(RuleGroupStatementPtrOutput)
}

type RuleGroupOrStatement struct {
	Statements []RuleGroupStatement `pulumi:"statements"`
}

// RuleGroupOrStatementInput is an input type that accepts RuleGroupOrStatementArgs and RuleGroupOrStatementOutput values.
// You can construct a concrete instance of `RuleGroupOrStatementInput` via:
//
//          RuleGroupOrStatementArgs{...}
type RuleGroupOrStatementInput interface {
	pulumi.Input

	ToRuleGroupOrStatementOutput() RuleGroupOrStatementOutput
	ToRuleGroupOrStatementOutputWithContext(context.Context) RuleGroupOrStatementOutput
}

type RuleGroupOrStatementArgs struct {
	Statements RuleGroupStatementArrayInput `pulumi:"statements"`
}

func (RuleGroupOrStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupOrStatement)(nil)).Elem()
}

func (i RuleGroupOrStatementArgs) ToRuleGroupOrStatementOutput() RuleGroupOrStatementOutput {
	return i.ToRuleGroupOrStatementOutputWithContext(context.Background())
}

func (i RuleGroupOrStatementArgs) ToRuleGroupOrStatementOutputWithContext(ctx context.Context) RuleGroupOrStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupOrStatementOutput)
}

func (i RuleGroupOrStatementArgs) ToRuleGroupOrStatementPtrOutput() RuleGroupOrStatementPtrOutput {
	return i.ToRuleGroupOrStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupOrStatementArgs) ToRuleGroupOrStatementPtrOutputWithContext(ctx context.Context) RuleGroupOrStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupOrStatementOutput).ToRuleGroupOrStatementPtrOutputWithContext(ctx)
}

// RuleGroupOrStatementPtrInput is an input type that accepts RuleGroupOrStatementArgs, RuleGroupOrStatementPtr and RuleGroupOrStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupOrStatementPtrInput` via:
//
//          RuleGroupOrStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupOrStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupOrStatementPtrOutput() RuleGroupOrStatementPtrOutput
	ToRuleGroupOrStatementPtrOutputWithContext(context.Context) RuleGroupOrStatementPtrOutput
}

type ruleGroupOrStatementPtrType RuleGroupOrStatementArgs

func RuleGroupOrStatementPtr(v *RuleGroupOrStatementArgs) RuleGroupOrStatementPtrInput {
	return (*ruleGroupOrStatementPtrType)(v)
}

func (*ruleGroupOrStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupOrStatement)(nil)).Elem()
}

func (i *ruleGroupOrStatementPtrType) ToRuleGroupOrStatementPtrOutput() RuleGroupOrStatementPtrOutput {
	return i.ToRuleGroupOrStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupOrStatementPtrType) ToRuleGroupOrStatementPtrOutputWithContext(ctx context.Context) RuleGroupOrStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupOrStatementPtrOutput)
}

type RuleGroupOrStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupOrStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupOrStatement)(nil)).Elem()
}

func (o RuleGroupOrStatementOutput) ToRuleGroupOrStatementOutput() RuleGroupOrStatementOutput {
	return o
}

func (o RuleGroupOrStatementOutput) ToRuleGroupOrStatementOutputWithContext(ctx context.Context) RuleGroupOrStatementOutput {
	return o
}

func (o RuleGroupOrStatementOutput) ToRuleGroupOrStatementPtrOutput() RuleGroupOrStatementPtrOutput {
	return o.ToRuleGroupOrStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupOrStatementOutput) ToRuleGroupOrStatementPtrOutputWithContext(ctx context.Context) RuleGroupOrStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupOrStatement) *RuleGroupOrStatement {
		return &v
	}).(RuleGroupOrStatementPtrOutput)
}

func (o RuleGroupOrStatementOutput) Statements() RuleGroupStatementArrayOutput {
	return o.ApplyT(func(v RuleGroupOrStatement) []RuleGroupStatement { return v.Statements }).(RuleGroupStatementArrayOutput)
}

type RuleGroupOrStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupOrStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupOrStatement)(nil)).Elem()
}

func (o RuleGroupOrStatementPtrOutput) ToRuleGroupOrStatementPtrOutput() RuleGroupOrStatementPtrOutput {
	return o
}

func (o RuleGroupOrStatementPtrOutput) ToRuleGroupOrStatementPtrOutputWithContext(ctx context.Context) RuleGroupOrStatementPtrOutput {
	return o
}

func (o RuleGroupOrStatementPtrOutput) Elem() RuleGroupOrStatementOutput {
	return o.ApplyT(func(v *RuleGroupOrStatement) RuleGroupOrStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupOrStatement
		return ret
	}).(RuleGroupOrStatementOutput)
}

func (o RuleGroupOrStatementPtrOutput) Statements() RuleGroupStatementArrayOutput {
	return o.ApplyT(func(v *RuleGroupOrStatement) []RuleGroupStatement {
		if v == nil {
			return nil
		}
		return v.Statements
	}).(RuleGroupStatementArrayOutput)
}

type RuleGroupRateBasedStatement struct {
	AggregateKeyType   string                             `pulumi:"aggregateKeyType"`
	ForwardedIPConfig  *RuleGroupForwardedIPConfiguration `pulumi:"forwardedIPConfig"`
	Limit              int                                `pulumi:"limit"`
	ScopeDownStatement *RuleGroupStatement                `pulumi:"scopeDownStatement"`
}

// RuleGroupRateBasedStatementInput is an input type that accepts RuleGroupRateBasedStatementArgs and RuleGroupRateBasedStatementOutput values.
// You can construct a concrete instance of `RuleGroupRateBasedStatementInput` via:
//
//          RuleGroupRateBasedStatementArgs{...}
type RuleGroupRateBasedStatementInput interface {
	pulumi.Input

	ToRuleGroupRateBasedStatementOutput() RuleGroupRateBasedStatementOutput
	ToRuleGroupRateBasedStatementOutputWithContext(context.Context) RuleGroupRateBasedStatementOutput
}

type RuleGroupRateBasedStatementArgs struct {
	AggregateKeyType   pulumi.StringInput                        `pulumi:"aggregateKeyType"`
	ForwardedIPConfig  RuleGroupForwardedIPConfigurationPtrInput `pulumi:"forwardedIPConfig"`
	Limit              pulumi.IntInput                           `pulumi:"limit"`
	ScopeDownStatement RuleGroupStatementPtrInput                `pulumi:"scopeDownStatement"`
}

func (RuleGroupRateBasedStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRateBasedStatement)(nil)).Elem()
}

func (i RuleGroupRateBasedStatementArgs) ToRuleGroupRateBasedStatementOutput() RuleGroupRateBasedStatementOutput {
	return i.ToRuleGroupRateBasedStatementOutputWithContext(context.Background())
}

func (i RuleGroupRateBasedStatementArgs) ToRuleGroupRateBasedStatementOutputWithContext(ctx context.Context) RuleGroupRateBasedStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRateBasedStatementOutput)
}

func (i RuleGroupRateBasedStatementArgs) ToRuleGroupRateBasedStatementPtrOutput() RuleGroupRateBasedStatementPtrOutput {
	return i.ToRuleGroupRateBasedStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupRateBasedStatementArgs) ToRuleGroupRateBasedStatementPtrOutputWithContext(ctx context.Context) RuleGroupRateBasedStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRateBasedStatementOutput).ToRuleGroupRateBasedStatementPtrOutputWithContext(ctx)
}

// RuleGroupRateBasedStatementPtrInput is an input type that accepts RuleGroupRateBasedStatementArgs, RuleGroupRateBasedStatementPtr and RuleGroupRateBasedStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupRateBasedStatementPtrInput` via:
//
//          RuleGroupRateBasedStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupRateBasedStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupRateBasedStatementPtrOutput() RuleGroupRateBasedStatementPtrOutput
	ToRuleGroupRateBasedStatementPtrOutputWithContext(context.Context) RuleGroupRateBasedStatementPtrOutput
}

type ruleGroupRateBasedStatementPtrType RuleGroupRateBasedStatementArgs

func RuleGroupRateBasedStatementPtr(v *RuleGroupRateBasedStatementArgs) RuleGroupRateBasedStatementPtrInput {
	return (*ruleGroupRateBasedStatementPtrType)(v)
}

func (*ruleGroupRateBasedStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRateBasedStatement)(nil)).Elem()
}

func (i *ruleGroupRateBasedStatementPtrType) ToRuleGroupRateBasedStatementPtrOutput() RuleGroupRateBasedStatementPtrOutput {
	return i.ToRuleGroupRateBasedStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupRateBasedStatementPtrType) ToRuleGroupRateBasedStatementPtrOutputWithContext(ctx context.Context) RuleGroupRateBasedStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRateBasedStatementPtrOutput)
}

type RuleGroupRateBasedStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRateBasedStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRateBasedStatement)(nil)).Elem()
}

func (o RuleGroupRateBasedStatementOutput) ToRuleGroupRateBasedStatementOutput() RuleGroupRateBasedStatementOutput {
	return o
}

func (o RuleGroupRateBasedStatementOutput) ToRuleGroupRateBasedStatementOutputWithContext(ctx context.Context) RuleGroupRateBasedStatementOutput {
	return o
}

func (o RuleGroupRateBasedStatementOutput) ToRuleGroupRateBasedStatementPtrOutput() RuleGroupRateBasedStatementPtrOutput {
	return o.ToRuleGroupRateBasedStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupRateBasedStatementOutput) ToRuleGroupRateBasedStatementPtrOutputWithContext(ctx context.Context) RuleGroupRateBasedStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupRateBasedStatement) *RuleGroupRateBasedStatement {
		return &v
	}).(RuleGroupRateBasedStatementPtrOutput)
}

func (o RuleGroupRateBasedStatementOutput) AggregateKeyType() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupRateBasedStatement) string { return v.AggregateKeyType }).(pulumi.StringOutput)
}

func (o RuleGroupRateBasedStatementOutput) ForwardedIPConfig() RuleGroupForwardedIPConfigurationPtrOutput {
	return o.ApplyT(func(v RuleGroupRateBasedStatement) *RuleGroupForwardedIPConfiguration { return v.ForwardedIPConfig }).(RuleGroupForwardedIPConfigurationPtrOutput)
}

func (o RuleGroupRateBasedStatementOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v RuleGroupRateBasedStatement) int { return v.Limit }).(pulumi.IntOutput)
}

func (o RuleGroupRateBasedStatementOutput) ScopeDownStatement() RuleGroupStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupRateBasedStatement) *RuleGroupStatement { return v.ScopeDownStatement }).(RuleGroupStatementPtrOutput)
}

type RuleGroupRateBasedStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupRateBasedStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRateBasedStatement)(nil)).Elem()
}

func (o RuleGroupRateBasedStatementPtrOutput) ToRuleGroupRateBasedStatementPtrOutput() RuleGroupRateBasedStatementPtrOutput {
	return o
}

func (o RuleGroupRateBasedStatementPtrOutput) ToRuleGroupRateBasedStatementPtrOutputWithContext(ctx context.Context) RuleGroupRateBasedStatementPtrOutput {
	return o
}

func (o RuleGroupRateBasedStatementPtrOutput) Elem() RuleGroupRateBasedStatementOutput {
	return o.ApplyT(func(v *RuleGroupRateBasedStatement) RuleGroupRateBasedStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupRateBasedStatement
		return ret
	}).(RuleGroupRateBasedStatementOutput)
}

func (o RuleGroupRateBasedStatementPtrOutput) AggregateKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupRateBasedStatement) *string {
		if v == nil {
			return nil
		}
		return &v.AggregateKeyType
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupRateBasedStatementPtrOutput) ForwardedIPConfig() RuleGroupForwardedIPConfigurationPtrOutput {
	return o.ApplyT(func(v *RuleGroupRateBasedStatement) *RuleGroupForwardedIPConfiguration {
		if v == nil {
			return nil
		}
		return v.ForwardedIPConfig
	}).(RuleGroupForwardedIPConfigurationPtrOutput)
}

func (o RuleGroupRateBasedStatementPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RuleGroupRateBasedStatement) *int {
		if v == nil {
			return nil
		}
		return &v.Limit
	}).(pulumi.IntPtrOutput)
}

func (o RuleGroupRateBasedStatementPtrOutput) ScopeDownStatement() RuleGroupStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupRateBasedStatement) *RuleGroupStatement {
		if v == nil {
			return nil
		}
		return v.ScopeDownStatement
	}).(RuleGroupStatementPtrOutput)
}

type RuleGroupRegexPatternSetReferenceStatement struct {
	Arn                 string                        `pulumi:"arn"`
	FieldToMatch        RuleGroupFieldToMatch         `pulumi:"fieldToMatch"`
	TextTransformations []RuleGroupTextTransformation `pulumi:"textTransformations"`
}

// RuleGroupRegexPatternSetReferenceStatementInput is an input type that accepts RuleGroupRegexPatternSetReferenceStatementArgs and RuleGroupRegexPatternSetReferenceStatementOutput values.
// You can construct a concrete instance of `RuleGroupRegexPatternSetReferenceStatementInput` via:
//
//          RuleGroupRegexPatternSetReferenceStatementArgs{...}
type RuleGroupRegexPatternSetReferenceStatementInput interface {
	pulumi.Input

	ToRuleGroupRegexPatternSetReferenceStatementOutput() RuleGroupRegexPatternSetReferenceStatementOutput
	ToRuleGroupRegexPatternSetReferenceStatementOutputWithContext(context.Context) RuleGroupRegexPatternSetReferenceStatementOutput
}

type RuleGroupRegexPatternSetReferenceStatementArgs struct {
	Arn                 pulumi.StringInput                    `pulumi:"arn"`
	FieldToMatch        RuleGroupFieldToMatchInput            `pulumi:"fieldToMatch"`
	TextTransformations RuleGroupTextTransformationArrayInput `pulumi:"textTransformations"`
}

func (RuleGroupRegexPatternSetReferenceStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (i RuleGroupRegexPatternSetReferenceStatementArgs) ToRuleGroupRegexPatternSetReferenceStatementOutput() RuleGroupRegexPatternSetReferenceStatementOutput {
	return i.ToRuleGroupRegexPatternSetReferenceStatementOutputWithContext(context.Background())
}

func (i RuleGroupRegexPatternSetReferenceStatementArgs) ToRuleGroupRegexPatternSetReferenceStatementOutputWithContext(ctx context.Context) RuleGroupRegexPatternSetReferenceStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRegexPatternSetReferenceStatementOutput)
}

func (i RuleGroupRegexPatternSetReferenceStatementArgs) ToRuleGroupRegexPatternSetReferenceStatementPtrOutput() RuleGroupRegexPatternSetReferenceStatementPtrOutput {
	return i.ToRuleGroupRegexPatternSetReferenceStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupRegexPatternSetReferenceStatementArgs) ToRuleGroupRegexPatternSetReferenceStatementPtrOutputWithContext(ctx context.Context) RuleGroupRegexPatternSetReferenceStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRegexPatternSetReferenceStatementOutput).ToRuleGroupRegexPatternSetReferenceStatementPtrOutputWithContext(ctx)
}

// RuleGroupRegexPatternSetReferenceStatementPtrInput is an input type that accepts RuleGroupRegexPatternSetReferenceStatementArgs, RuleGroupRegexPatternSetReferenceStatementPtr and RuleGroupRegexPatternSetReferenceStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupRegexPatternSetReferenceStatementPtrInput` via:
//
//          RuleGroupRegexPatternSetReferenceStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupRegexPatternSetReferenceStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupRegexPatternSetReferenceStatementPtrOutput() RuleGroupRegexPatternSetReferenceStatementPtrOutput
	ToRuleGroupRegexPatternSetReferenceStatementPtrOutputWithContext(context.Context) RuleGroupRegexPatternSetReferenceStatementPtrOutput
}

type ruleGroupRegexPatternSetReferenceStatementPtrType RuleGroupRegexPatternSetReferenceStatementArgs

func RuleGroupRegexPatternSetReferenceStatementPtr(v *RuleGroupRegexPatternSetReferenceStatementArgs) RuleGroupRegexPatternSetReferenceStatementPtrInput {
	return (*ruleGroupRegexPatternSetReferenceStatementPtrType)(v)
}

func (*ruleGroupRegexPatternSetReferenceStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (i *ruleGroupRegexPatternSetReferenceStatementPtrType) ToRuleGroupRegexPatternSetReferenceStatementPtrOutput() RuleGroupRegexPatternSetReferenceStatementPtrOutput {
	return i.ToRuleGroupRegexPatternSetReferenceStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupRegexPatternSetReferenceStatementPtrType) ToRuleGroupRegexPatternSetReferenceStatementPtrOutputWithContext(ctx context.Context) RuleGroupRegexPatternSetReferenceStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRegexPatternSetReferenceStatementPtrOutput)
}

type RuleGroupRegexPatternSetReferenceStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupRegexPatternSetReferenceStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (o RuleGroupRegexPatternSetReferenceStatementOutput) ToRuleGroupRegexPatternSetReferenceStatementOutput() RuleGroupRegexPatternSetReferenceStatementOutput {
	return o
}

func (o RuleGroupRegexPatternSetReferenceStatementOutput) ToRuleGroupRegexPatternSetReferenceStatementOutputWithContext(ctx context.Context) RuleGroupRegexPatternSetReferenceStatementOutput {
	return o
}

func (o RuleGroupRegexPatternSetReferenceStatementOutput) ToRuleGroupRegexPatternSetReferenceStatementPtrOutput() RuleGroupRegexPatternSetReferenceStatementPtrOutput {
	return o.ToRuleGroupRegexPatternSetReferenceStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupRegexPatternSetReferenceStatementOutput) ToRuleGroupRegexPatternSetReferenceStatementPtrOutputWithContext(ctx context.Context) RuleGroupRegexPatternSetReferenceStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupRegexPatternSetReferenceStatement) *RuleGroupRegexPatternSetReferenceStatement {
		return &v
	}).(RuleGroupRegexPatternSetReferenceStatementPtrOutput)
}

func (o RuleGroupRegexPatternSetReferenceStatementOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupRegexPatternSetReferenceStatement) string { return v.Arn }).(pulumi.StringOutput)
}

func (o RuleGroupRegexPatternSetReferenceStatementOutput) FieldToMatch() RuleGroupFieldToMatchOutput {
	return o.ApplyT(func(v RuleGroupRegexPatternSetReferenceStatement) RuleGroupFieldToMatch { return v.FieldToMatch }).(RuleGroupFieldToMatchOutput)
}

func (o RuleGroupRegexPatternSetReferenceStatementOutput) TextTransformations() RuleGroupTextTransformationArrayOutput {
	return o.ApplyT(func(v RuleGroupRegexPatternSetReferenceStatement) []RuleGroupTextTransformation {
		return v.TextTransformations
	}).(RuleGroupTextTransformationArrayOutput)
}

type RuleGroupRegexPatternSetReferenceStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupRegexPatternSetReferenceStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (o RuleGroupRegexPatternSetReferenceStatementPtrOutput) ToRuleGroupRegexPatternSetReferenceStatementPtrOutput() RuleGroupRegexPatternSetReferenceStatementPtrOutput {
	return o
}

func (o RuleGroupRegexPatternSetReferenceStatementPtrOutput) ToRuleGroupRegexPatternSetReferenceStatementPtrOutputWithContext(ctx context.Context) RuleGroupRegexPatternSetReferenceStatementPtrOutput {
	return o
}

func (o RuleGroupRegexPatternSetReferenceStatementPtrOutput) Elem() RuleGroupRegexPatternSetReferenceStatementOutput {
	return o.ApplyT(func(v *RuleGroupRegexPatternSetReferenceStatement) RuleGroupRegexPatternSetReferenceStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupRegexPatternSetReferenceStatement
		return ret
	}).(RuleGroupRegexPatternSetReferenceStatementOutput)
}

func (o RuleGroupRegexPatternSetReferenceStatementPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupRegexPatternSetReferenceStatement) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupRegexPatternSetReferenceStatementPtrOutput) FieldToMatch() RuleGroupFieldToMatchPtrOutput {
	return o.ApplyT(func(v *RuleGroupRegexPatternSetReferenceStatement) *RuleGroupFieldToMatch {
		if v == nil {
			return nil
		}
		return &v.FieldToMatch
	}).(RuleGroupFieldToMatchPtrOutput)
}

func (o RuleGroupRegexPatternSetReferenceStatementPtrOutput) TextTransformations() RuleGroupTextTransformationArrayOutput {
	return o.ApplyT(func(v *RuleGroupRegexPatternSetReferenceStatement) []RuleGroupTextTransformation {
		if v == nil {
			return nil
		}
		return v.TextTransformations
	}).(RuleGroupTextTransformationArrayOutput)
}

// Rule of RuleGroup that contains condition and action.
type RuleGroupRule struct {
	Action   *RuleGroupRuleAction `pulumi:"action"`
	Name     string               `pulumi:"name"`
	Priority int                  `pulumi:"priority"`
	// Collection of Rule Labels.
	RuleLabels       []RuleGroupLabel          `pulumi:"ruleLabels"`
	Statement        RuleGroupStatement        `pulumi:"statement"`
	VisibilityConfig RuleGroupVisibilityConfig `pulumi:"visibilityConfig"`
}

// RuleGroupRuleInput is an input type that accepts RuleGroupRuleArgs and RuleGroupRuleOutput values.
// You can construct a concrete instance of `RuleGroupRuleInput` via:
//
//          RuleGroupRuleArgs{...}
type RuleGroupRuleInput interface {
	pulumi.Input

	ToRuleGroupRuleOutput() RuleGroupRuleOutput
	ToRuleGroupRuleOutputWithContext(context.Context) RuleGroupRuleOutput
}

// Rule of RuleGroup that contains condition and action.
type RuleGroupRuleArgs struct {
	Action   RuleGroupRuleActionPtrInput `pulumi:"action"`
	Name     pulumi.StringInput          `pulumi:"name"`
	Priority pulumi.IntInput             `pulumi:"priority"`
	// Collection of Rule Labels.
	RuleLabels       RuleGroupLabelArrayInput       `pulumi:"ruleLabels"`
	Statement        RuleGroupStatementInput        `pulumi:"statement"`
	VisibilityConfig RuleGroupVisibilityConfigInput `pulumi:"visibilityConfig"`
}

func (RuleGroupRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRule)(nil)).Elem()
}

func (i RuleGroupRuleArgs) ToRuleGroupRuleOutput() RuleGroupRuleOutput {
	return i.ToRuleGroupRuleOutputWithContext(context.Background())
}

func (i RuleGroupRuleArgs) ToRuleGroupRuleOutputWithContext(ctx context.Context) RuleGroupRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleOutput)
}

// RuleGroupRuleArrayInput is an input type that accepts RuleGroupRuleArray and RuleGroupRuleArrayOutput values.
// You can construct a concrete instance of `RuleGroupRuleArrayInput` via:
//
//          RuleGroupRuleArray{ RuleGroupRuleArgs{...} }
type RuleGroupRuleArrayInput interface {
	pulumi.Input

	ToRuleGroupRuleArrayOutput() RuleGroupRuleArrayOutput
	ToRuleGroupRuleArrayOutputWithContext(context.Context) RuleGroupRuleArrayOutput
}

type RuleGroupRuleArray []RuleGroupRuleInput

func (RuleGroupRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupRule)(nil)).Elem()
}

func (i RuleGroupRuleArray) ToRuleGroupRuleArrayOutput() RuleGroupRuleArrayOutput {
	return i.ToRuleGroupRuleArrayOutputWithContext(context.Background())
}

func (i RuleGroupRuleArray) ToRuleGroupRuleArrayOutputWithContext(ctx context.Context) RuleGroupRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleArrayOutput)
}

// Rule of RuleGroup that contains condition and action.
type RuleGroupRuleOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRule)(nil)).Elem()
}

func (o RuleGroupRuleOutput) ToRuleGroupRuleOutput() RuleGroupRuleOutput {
	return o
}

func (o RuleGroupRuleOutput) ToRuleGroupRuleOutputWithContext(ctx context.Context) RuleGroupRuleOutput {
	return o
}

func (o RuleGroupRuleOutput) Action() RuleGroupRuleActionPtrOutput {
	return o.ApplyT(func(v RuleGroupRule) *RuleGroupRuleAction { return v.Action }).(RuleGroupRuleActionPtrOutput)
}

func (o RuleGroupRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o RuleGroupRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RuleGroupRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Collection of Rule Labels.
func (o RuleGroupRuleOutput) RuleLabels() RuleGroupLabelArrayOutput {
	return o.ApplyT(func(v RuleGroupRule) []RuleGroupLabel { return v.RuleLabels }).(RuleGroupLabelArrayOutput)
}

func (o RuleGroupRuleOutput) Statement() RuleGroupStatementOutput {
	return o.ApplyT(func(v RuleGroupRule) RuleGroupStatement { return v.Statement }).(RuleGroupStatementOutput)
}

func (o RuleGroupRuleOutput) VisibilityConfig() RuleGroupVisibilityConfigOutput {
	return o.ApplyT(func(v RuleGroupRule) RuleGroupVisibilityConfig { return v.VisibilityConfig }).(RuleGroupVisibilityConfigOutput)
}

type RuleGroupRuleArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupRule)(nil)).Elem()
}

func (o RuleGroupRuleArrayOutput) ToRuleGroupRuleArrayOutput() RuleGroupRuleArrayOutput {
	return o
}

func (o RuleGroupRuleArrayOutput) ToRuleGroupRuleArrayOutputWithContext(ctx context.Context) RuleGroupRuleArrayOutput {
	return o
}

func (o RuleGroupRuleArrayOutput) Index(i pulumi.IntInput) RuleGroupRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupRule {
		return vs[0].([]RuleGroupRule)[vs[1].(int)]
	}).(RuleGroupRuleOutput)
}

// Action taken when Rule matches its condition.
type RuleGroupRuleAction struct {
	// Allow traffic towards application.
	Allow interface{} `pulumi:"allow"`
	// Block traffic towards application.
	Block interface{} `pulumi:"block"`
	// Count traffic towards application.
	Count interface{} `pulumi:"count"`
}

// RuleGroupRuleActionInput is an input type that accepts RuleGroupRuleActionArgs and RuleGroupRuleActionOutput values.
// You can construct a concrete instance of `RuleGroupRuleActionInput` via:
//
//          RuleGroupRuleActionArgs{...}
type RuleGroupRuleActionInput interface {
	pulumi.Input

	ToRuleGroupRuleActionOutput() RuleGroupRuleActionOutput
	ToRuleGroupRuleActionOutputWithContext(context.Context) RuleGroupRuleActionOutput
}

// Action taken when Rule matches its condition.
type RuleGroupRuleActionArgs struct {
	// Allow traffic towards application.
	Allow pulumi.Input `pulumi:"allow"`
	// Block traffic towards application.
	Block pulumi.Input `pulumi:"block"`
	// Count traffic towards application.
	Count pulumi.Input `pulumi:"count"`
}

func (RuleGroupRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleAction)(nil)).Elem()
}

func (i RuleGroupRuleActionArgs) ToRuleGroupRuleActionOutput() RuleGroupRuleActionOutput {
	return i.ToRuleGroupRuleActionOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionArgs) ToRuleGroupRuleActionOutputWithContext(ctx context.Context) RuleGroupRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionOutput)
}

func (i RuleGroupRuleActionArgs) ToRuleGroupRuleActionPtrOutput() RuleGroupRuleActionPtrOutput {
	return i.ToRuleGroupRuleActionPtrOutputWithContext(context.Background())
}

func (i RuleGroupRuleActionArgs) ToRuleGroupRuleActionPtrOutputWithContext(ctx context.Context) RuleGroupRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionOutput).ToRuleGroupRuleActionPtrOutputWithContext(ctx)
}

// RuleGroupRuleActionPtrInput is an input type that accepts RuleGroupRuleActionArgs, RuleGroupRuleActionPtr and RuleGroupRuleActionPtrOutput values.
// You can construct a concrete instance of `RuleGroupRuleActionPtrInput` via:
//
//          RuleGroupRuleActionArgs{...}
//
//  or:
//
//          nil
type RuleGroupRuleActionPtrInput interface {
	pulumi.Input

	ToRuleGroupRuleActionPtrOutput() RuleGroupRuleActionPtrOutput
	ToRuleGroupRuleActionPtrOutputWithContext(context.Context) RuleGroupRuleActionPtrOutput
}

type ruleGroupRuleActionPtrType RuleGroupRuleActionArgs

func RuleGroupRuleActionPtr(v *RuleGroupRuleActionArgs) RuleGroupRuleActionPtrInput {
	return (*ruleGroupRuleActionPtrType)(v)
}

func (*ruleGroupRuleActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRuleAction)(nil)).Elem()
}

func (i *ruleGroupRuleActionPtrType) ToRuleGroupRuleActionPtrOutput() RuleGroupRuleActionPtrOutput {
	return i.ToRuleGroupRuleActionPtrOutputWithContext(context.Background())
}

func (i *ruleGroupRuleActionPtrType) ToRuleGroupRuleActionPtrOutputWithContext(ctx context.Context) RuleGroupRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupRuleActionPtrOutput)
}

// Action taken when Rule matches its condition.
type RuleGroupRuleActionOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupRuleAction)(nil)).Elem()
}

func (o RuleGroupRuleActionOutput) ToRuleGroupRuleActionOutput() RuleGroupRuleActionOutput {
	return o
}

func (o RuleGroupRuleActionOutput) ToRuleGroupRuleActionOutputWithContext(ctx context.Context) RuleGroupRuleActionOutput {
	return o
}

func (o RuleGroupRuleActionOutput) ToRuleGroupRuleActionPtrOutput() RuleGroupRuleActionPtrOutput {
	return o.ToRuleGroupRuleActionPtrOutputWithContext(context.Background())
}

func (o RuleGroupRuleActionOutput) ToRuleGroupRuleActionPtrOutputWithContext(ctx context.Context) RuleGroupRuleActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupRuleAction) *RuleGroupRuleAction {
		return &v
	}).(RuleGroupRuleActionPtrOutput)
}

// Allow traffic towards application.
func (o RuleGroupRuleActionOutput) Allow() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupRuleAction) interface{} { return v.Allow }).(pulumi.AnyOutput)
}

// Block traffic towards application.
func (o RuleGroupRuleActionOutput) Block() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupRuleAction) interface{} { return v.Block }).(pulumi.AnyOutput)
}

// Count traffic towards application.
func (o RuleGroupRuleActionOutput) Count() pulumi.AnyOutput {
	return o.ApplyT(func(v RuleGroupRuleAction) interface{} { return v.Count }).(pulumi.AnyOutput)
}

type RuleGroupRuleActionPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupRuleAction)(nil)).Elem()
}

func (o RuleGroupRuleActionPtrOutput) ToRuleGroupRuleActionPtrOutput() RuleGroupRuleActionPtrOutput {
	return o
}

func (o RuleGroupRuleActionPtrOutput) ToRuleGroupRuleActionPtrOutputWithContext(ctx context.Context) RuleGroupRuleActionPtrOutput {
	return o
}

func (o RuleGroupRuleActionPtrOutput) Elem() RuleGroupRuleActionOutput {
	return o.ApplyT(func(v *RuleGroupRuleAction) RuleGroupRuleAction {
		if v != nil {
			return *v
		}
		var ret RuleGroupRuleAction
		return ret
	}).(RuleGroupRuleActionOutput)
}

// Allow traffic towards application.
func (o RuleGroupRuleActionPtrOutput) Allow() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupRuleAction) interface{} {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(pulumi.AnyOutput)
}

// Block traffic towards application.
func (o RuleGroupRuleActionPtrOutput) Block() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupRuleAction) interface{} {
		if v == nil {
			return nil
		}
		return v.Block
	}).(pulumi.AnyOutput)
}

// Count traffic towards application.
func (o RuleGroupRuleActionPtrOutput) Count() pulumi.AnyOutput {
	return o.ApplyT(func(v *RuleGroupRuleAction) interface{} {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.AnyOutput)
}

// Size Constraint statement.
type RuleGroupSizeConstraintStatement struct {
	ComparisonOperator  string                        `pulumi:"comparisonOperator"`
	FieldToMatch        RuleGroupFieldToMatch         `pulumi:"fieldToMatch"`
	Size                float64                       `pulumi:"size"`
	TextTransformations []RuleGroupTextTransformation `pulumi:"textTransformations"`
}

// RuleGroupSizeConstraintStatementInput is an input type that accepts RuleGroupSizeConstraintStatementArgs and RuleGroupSizeConstraintStatementOutput values.
// You can construct a concrete instance of `RuleGroupSizeConstraintStatementInput` via:
//
//          RuleGroupSizeConstraintStatementArgs{...}
type RuleGroupSizeConstraintStatementInput interface {
	pulumi.Input

	ToRuleGroupSizeConstraintStatementOutput() RuleGroupSizeConstraintStatementOutput
	ToRuleGroupSizeConstraintStatementOutputWithContext(context.Context) RuleGroupSizeConstraintStatementOutput
}

// Size Constraint statement.
type RuleGroupSizeConstraintStatementArgs struct {
	ComparisonOperator  pulumi.StringInput                    `pulumi:"comparisonOperator"`
	FieldToMatch        RuleGroupFieldToMatchInput            `pulumi:"fieldToMatch"`
	Size                pulumi.Float64Input                   `pulumi:"size"`
	TextTransformations RuleGroupTextTransformationArrayInput `pulumi:"textTransformations"`
}

func (RuleGroupSizeConstraintStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupSizeConstraintStatement)(nil)).Elem()
}

func (i RuleGroupSizeConstraintStatementArgs) ToRuleGroupSizeConstraintStatementOutput() RuleGroupSizeConstraintStatementOutput {
	return i.ToRuleGroupSizeConstraintStatementOutputWithContext(context.Background())
}

func (i RuleGroupSizeConstraintStatementArgs) ToRuleGroupSizeConstraintStatementOutputWithContext(ctx context.Context) RuleGroupSizeConstraintStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupSizeConstraintStatementOutput)
}

func (i RuleGroupSizeConstraintStatementArgs) ToRuleGroupSizeConstraintStatementPtrOutput() RuleGroupSizeConstraintStatementPtrOutput {
	return i.ToRuleGroupSizeConstraintStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupSizeConstraintStatementArgs) ToRuleGroupSizeConstraintStatementPtrOutputWithContext(ctx context.Context) RuleGroupSizeConstraintStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupSizeConstraintStatementOutput).ToRuleGroupSizeConstraintStatementPtrOutputWithContext(ctx)
}

// RuleGroupSizeConstraintStatementPtrInput is an input type that accepts RuleGroupSizeConstraintStatementArgs, RuleGroupSizeConstraintStatementPtr and RuleGroupSizeConstraintStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupSizeConstraintStatementPtrInput` via:
//
//          RuleGroupSizeConstraintStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupSizeConstraintStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupSizeConstraintStatementPtrOutput() RuleGroupSizeConstraintStatementPtrOutput
	ToRuleGroupSizeConstraintStatementPtrOutputWithContext(context.Context) RuleGroupSizeConstraintStatementPtrOutput
}

type ruleGroupSizeConstraintStatementPtrType RuleGroupSizeConstraintStatementArgs

func RuleGroupSizeConstraintStatementPtr(v *RuleGroupSizeConstraintStatementArgs) RuleGroupSizeConstraintStatementPtrInput {
	return (*ruleGroupSizeConstraintStatementPtrType)(v)
}

func (*ruleGroupSizeConstraintStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupSizeConstraintStatement)(nil)).Elem()
}

func (i *ruleGroupSizeConstraintStatementPtrType) ToRuleGroupSizeConstraintStatementPtrOutput() RuleGroupSizeConstraintStatementPtrOutput {
	return i.ToRuleGroupSizeConstraintStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupSizeConstraintStatementPtrType) ToRuleGroupSizeConstraintStatementPtrOutputWithContext(ctx context.Context) RuleGroupSizeConstraintStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupSizeConstraintStatementPtrOutput)
}

// Size Constraint statement.
type RuleGroupSizeConstraintStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupSizeConstraintStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupSizeConstraintStatement)(nil)).Elem()
}

func (o RuleGroupSizeConstraintStatementOutput) ToRuleGroupSizeConstraintStatementOutput() RuleGroupSizeConstraintStatementOutput {
	return o
}

func (o RuleGroupSizeConstraintStatementOutput) ToRuleGroupSizeConstraintStatementOutputWithContext(ctx context.Context) RuleGroupSizeConstraintStatementOutput {
	return o
}

func (o RuleGroupSizeConstraintStatementOutput) ToRuleGroupSizeConstraintStatementPtrOutput() RuleGroupSizeConstraintStatementPtrOutput {
	return o.ToRuleGroupSizeConstraintStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupSizeConstraintStatementOutput) ToRuleGroupSizeConstraintStatementPtrOutputWithContext(ctx context.Context) RuleGroupSizeConstraintStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupSizeConstraintStatement) *RuleGroupSizeConstraintStatement {
		return &v
	}).(RuleGroupSizeConstraintStatementPtrOutput)
}

func (o RuleGroupSizeConstraintStatementOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupSizeConstraintStatement) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

func (o RuleGroupSizeConstraintStatementOutput) FieldToMatch() RuleGroupFieldToMatchOutput {
	return o.ApplyT(func(v RuleGroupSizeConstraintStatement) RuleGroupFieldToMatch { return v.FieldToMatch }).(RuleGroupFieldToMatchOutput)
}

func (o RuleGroupSizeConstraintStatementOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v RuleGroupSizeConstraintStatement) float64 { return v.Size }).(pulumi.Float64Output)
}

func (o RuleGroupSizeConstraintStatementOutput) TextTransformations() RuleGroupTextTransformationArrayOutput {
	return o.ApplyT(func(v RuleGroupSizeConstraintStatement) []RuleGroupTextTransformation { return v.TextTransformations }).(RuleGroupTextTransformationArrayOutput)
}

type RuleGroupSizeConstraintStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupSizeConstraintStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupSizeConstraintStatement)(nil)).Elem()
}

func (o RuleGroupSizeConstraintStatementPtrOutput) ToRuleGroupSizeConstraintStatementPtrOutput() RuleGroupSizeConstraintStatementPtrOutput {
	return o
}

func (o RuleGroupSizeConstraintStatementPtrOutput) ToRuleGroupSizeConstraintStatementPtrOutputWithContext(ctx context.Context) RuleGroupSizeConstraintStatementPtrOutput {
	return o
}

func (o RuleGroupSizeConstraintStatementPtrOutput) Elem() RuleGroupSizeConstraintStatementOutput {
	return o.ApplyT(func(v *RuleGroupSizeConstraintStatement) RuleGroupSizeConstraintStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupSizeConstraintStatement
		return ret
	}).(RuleGroupSizeConstraintStatementOutput)
}

func (o RuleGroupSizeConstraintStatementPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupSizeConstraintStatement) *string {
		if v == nil {
			return nil
		}
		return &v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupSizeConstraintStatementPtrOutput) FieldToMatch() RuleGroupFieldToMatchPtrOutput {
	return o.ApplyT(func(v *RuleGroupSizeConstraintStatement) *RuleGroupFieldToMatch {
		if v == nil {
			return nil
		}
		return &v.FieldToMatch
	}).(RuleGroupFieldToMatchPtrOutput)
}

func (o RuleGroupSizeConstraintStatementPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *RuleGroupSizeConstraintStatement) *float64 {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.Float64PtrOutput)
}

func (o RuleGroupSizeConstraintStatementPtrOutput) TextTransformations() RuleGroupTextTransformationArrayOutput {
	return o.ApplyT(func(v *RuleGroupSizeConstraintStatement) []RuleGroupTextTransformation {
		if v == nil {
			return nil
		}
		return v.TextTransformations
	}).(RuleGroupTextTransformationArrayOutput)
}

// Sqli Match Statement.
type RuleGroupSqliMatchStatement struct {
	FieldToMatch        RuleGroupFieldToMatch         `pulumi:"fieldToMatch"`
	TextTransformations []RuleGroupTextTransformation `pulumi:"textTransformations"`
}

// RuleGroupSqliMatchStatementInput is an input type that accepts RuleGroupSqliMatchStatementArgs and RuleGroupSqliMatchStatementOutput values.
// You can construct a concrete instance of `RuleGroupSqliMatchStatementInput` via:
//
//          RuleGroupSqliMatchStatementArgs{...}
type RuleGroupSqliMatchStatementInput interface {
	pulumi.Input

	ToRuleGroupSqliMatchStatementOutput() RuleGroupSqliMatchStatementOutput
	ToRuleGroupSqliMatchStatementOutputWithContext(context.Context) RuleGroupSqliMatchStatementOutput
}

// Sqli Match Statement.
type RuleGroupSqliMatchStatementArgs struct {
	FieldToMatch        RuleGroupFieldToMatchInput            `pulumi:"fieldToMatch"`
	TextTransformations RuleGroupTextTransformationArrayInput `pulumi:"textTransformations"`
}

func (RuleGroupSqliMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupSqliMatchStatement)(nil)).Elem()
}

func (i RuleGroupSqliMatchStatementArgs) ToRuleGroupSqliMatchStatementOutput() RuleGroupSqliMatchStatementOutput {
	return i.ToRuleGroupSqliMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupSqliMatchStatementArgs) ToRuleGroupSqliMatchStatementOutputWithContext(ctx context.Context) RuleGroupSqliMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupSqliMatchStatementOutput)
}

func (i RuleGroupSqliMatchStatementArgs) ToRuleGroupSqliMatchStatementPtrOutput() RuleGroupSqliMatchStatementPtrOutput {
	return i.ToRuleGroupSqliMatchStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupSqliMatchStatementArgs) ToRuleGroupSqliMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupSqliMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupSqliMatchStatementOutput).ToRuleGroupSqliMatchStatementPtrOutputWithContext(ctx)
}

// RuleGroupSqliMatchStatementPtrInput is an input type that accepts RuleGroupSqliMatchStatementArgs, RuleGroupSqliMatchStatementPtr and RuleGroupSqliMatchStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupSqliMatchStatementPtrInput` via:
//
//          RuleGroupSqliMatchStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupSqliMatchStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupSqliMatchStatementPtrOutput() RuleGroupSqliMatchStatementPtrOutput
	ToRuleGroupSqliMatchStatementPtrOutputWithContext(context.Context) RuleGroupSqliMatchStatementPtrOutput
}

type ruleGroupSqliMatchStatementPtrType RuleGroupSqliMatchStatementArgs

func RuleGroupSqliMatchStatementPtr(v *RuleGroupSqliMatchStatementArgs) RuleGroupSqliMatchStatementPtrInput {
	return (*ruleGroupSqliMatchStatementPtrType)(v)
}

func (*ruleGroupSqliMatchStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupSqliMatchStatement)(nil)).Elem()
}

func (i *ruleGroupSqliMatchStatementPtrType) ToRuleGroupSqliMatchStatementPtrOutput() RuleGroupSqliMatchStatementPtrOutput {
	return i.ToRuleGroupSqliMatchStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupSqliMatchStatementPtrType) ToRuleGroupSqliMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupSqliMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupSqliMatchStatementPtrOutput)
}

// Sqli Match Statement.
type RuleGroupSqliMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupSqliMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupSqliMatchStatement)(nil)).Elem()
}

func (o RuleGroupSqliMatchStatementOutput) ToRuleGroupSqliMatchStatementOutput() RuleGroupSqliMatchStatementOutput {
	return o
}

func (o RuleGroupSqliMatchStatementOutput) ToRuleGroupSqliMatchStatementOutputWithContext(ctx context.Context) RuleGroupSqliMatchStatementOutput {
	return o
}

func (o RuleGroupSqliMatchStatementOutput) ToRuleGroupSqliMatchStatementPtrOutput() RuleGroupSqliMatchStatementPtrOutput {
	return o.ToRuleGroupSqliMatchStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupSqliMatchStatementOutput) ToRuleGroupSqliMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupSqliMatchStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupSqliMatchStatement) *RuleGroupSqliMatchStatement {
		return &v
	}).(RuleGroupSqliMatchStatementPtrOutput)
}

func (o RuleGroupSqliMatchStatementOutput) FieldToMatch() RuleGroupFieldToMatchOutput {
	return o.ApplyT(func(v RuleGroupSqliMatchStatement) RuleGroupFieldToMatch { return v.FieldToMatch }).(RuleGroupFieldToMatchOutput)
}

func (o RuleGroupSqliMatchStatementOutput) TextTransformations() RuleGroupTextTransformationArrayOutput {
	return o.ApplyT(func(v RuleGroupSqliMatchStatement) []RuleGroupTextTransformation { return v.TextTransformations }).(RuleGroupTextTransformationArrayOutput)
}

type RuleGroupSqliMatchStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupSqliMatchStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupSqliMatchStatement)(nil)).Elem()
}

func (o RuleGroupSqliMatchStatementPtrOutput) ToRuleGroupSqliMatchStatementPtrOutput() RuleGroupSqliMatchStatementPtrOutput {
	return o
}

func (o RuleGroupSqliMatchStatementPtrOutput) ToRuleGroupSqliMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupSqliMatchStatementPtrOutput {
	return o
}

func (o RuleGroupSqliMatchStatementPtrOutput) Elem() RuleGroupSqliMatchStatementOutput {
	return o.ApplyT(func(v *RuleGroupSqliMatchStatement) RuleGroupSqliMatchStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupSqliMatchStatement
		return ret
	}).(RuleGroupSqliMatchStatementOutput)
}

func (o RuleGroupSqliMatchStatementPtrOutput) FieldToMatch() RuleGroupFieldToMatchPtrOutput {
	return o.ApplyT(func(v *RuleGroupSqliMatchStatement) *RuleGroupFieldToMatch {
		if v == nil {
			return nil
		}
		return &v.FieldToMatch
	}).(RuleGroupFieldToMatchPtrOutput)
}

func (o RuleGroupSqliMatchStatementPtrOutput) TextTransformations() RuleGroupTextTransformationArrayOutput {
	return o.ApplyT(func(v *RuleGroupSqliMatchStatement) []RuleGroupTextTransformation {
		if v == nil {
			return nil
		}
		return v.TextTransformations
	}).(RuleGroupTextTransformationArrayOutput)
}

// First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
type RuleGroupStatement struct {
	AndStatement                      *RuleGroupAndStatement                      `pulumi:"andStatement"`
	ByteMatchStatement                *RuleGroupByteMatchStatement                `pulumi:"byteMatchStatement"`
	GeoMatchStatement                 *RuleGroupGeoMatchStatement                 `pulumi:"geoMatchStatement"`
	IPSetReferenceStatement           *RuleGroupIPSetReferenceStatement           `pulumi:"iPSetReferenceStatement"`
	LabelMatchStatement               *RuleGroupLabelMatchStatement               `pulumi:"labelMatchStatement"`
	NotStatement                      *RuleGroupNotStatement                      `pulumi:"notStatement"`
	OrStatement                       *RuleGroupOrStatement                       `pulumi:"orStatement"`
	RateBasedStatement                *RuleGroupRateBasedStatement                `pulumi:"rateBasedStatement"`
	RegexPatternSetReferenceStatement *RuleGroupRegexPatternSetReferenceStatement `pulumi:"regexPatternSetReferenceStatement"`
	SizeConstraintStatement           *RuleGroupSizeConstraintStatement           `pulumi:"sizeConstraintStatement"`
	SqliMatchStatement                *RuleGroupSqliMatchStatement                `pulumi:"sqliMatchStatement"`
	XssMatchStatement                 *RuleGroupXssMatchStatement                 `pulumi:"xssMatchStatement"`
}

// RuleGroupStatementInput is an input type that accepts RuleGroupStatementArgs and RuleGroupStatementOutput values.
// You can construct a concrete instance of `RuleGroupStatementInput` via:
//
//          RuleGroupStatementArgs{...}
type RuleGroupStatementInput interface {
	pulumi.Input

	ToRuleGroupStatementOutput() RuleGroupStatementOutput
	ToRuleGroupStatementOutputWithContext(context.Context) RuleGroupStatementOutput
}

// First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
type RuleGroupStatementArgs struct {
	AndStatement                      RuleGroupAndStatementPtrInput                      `pulumi:"andStatement"`
	ByteMatchStatement                RuleGroupByteMatchStatementPtrInput                `pulumi:"byteMatchStatement"`
	GeoMatchStatement                 RuleGroupGeoMatchStatementPtrInput                 `pulumi:"geoMatchStatement"`
	IPSetReferenceStatement           RuleGroupIPSetReferenceStatementPtrInput           `pulumi:"iPSetReferenceStatement"`
	LabelMatchStatement               RuleGroupLabelMatchStatementPtrInput               `pulumi:"labelMatchStatement"`
	NotStatement                      RuleGroupNotStatementPtrInput                      `pulumi:"notStatement"`
	OrStatement                       RuleGroupOrStatementPtrInput                       `pulumi:"orStatement"`
	RateBasedStatement                RuleGroupRateBasedStatementPtrInput                `pulumi:"rateBasedStatement"`
	RegexPatternSetReferenceStatement RuleGroupRegexPatternSetReferenceStatementPtrInput `pulumi:"regexPatternSetReferenceStatement"`
	SizeConstraintStatement           RuleGroupSizeConstraintStatementPtrInput           `pulumi:"sizeConstraintStatement"`
	SqliMatchStatement                RuleGroupSqliMatchStatementPtrInput                `pulumi:"sqliMatchStatement"`
	XssMatchStatement                 RuleGroupXssMatchStatementPtrInput                 `pulumi:"xssMatchStatement"`
}

func (RuleGroupStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupStatement)(nil)).Elem()
}

func (i RuleGroupStatementArgs) ToRuleGroupStatementOutput() RuleGroupStatementOutput {
	return i.ToRuleGroupStatementOutputWithContext(context.Background())
}

func (i RuleGroupStatementArgs) ToRuleGroupStatementOutputWithContext(ctx context.Context) RuleGroupStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupStatementOutput)
}

func (i RuleGroupStatementArgs) ToRuleGroupStatementPtrOutput() RuleGroupStatementPtrOutput {
	return i.ToRuleGroupStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupStatementArgs) ToRuleGroupStatementPtrOutputWithContext(ctx context.Context) RuleGroupStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupStatementOutput).ToRuleGroupStatementPtrOutputWithContext(ctx)
}

// RuleGroupStatementPtrInput is an input type that accepts RuleGroupStatementArgs, RuleGroupStatementPtr and RuleGroupStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupStatementPtrInput` via:
//
//          RuleGroupStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupStatementPtrOutput() RuleGroupStatementPtrOutput
	ToRuleGroupStatementPtrOutputWithContext(context.Context) RuleGroupStatementPtrOutput
}

type ruleGroupStatementPtrType RuleGroupStatementArgs

func RuleGroupStatementPtr(v *RuleGroupStatementArgs) RuleGroupStatementPtrInput {
	return (*ruleGroupStatementPtrType)(v)
}

func (*ruleGroupStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupStatement)(nil)).Elem()
}

func (i *ruleGroupStatementPtrType) ToRuleGroupStatementPtrOutput() RuleGroupStatementPtrOutput {
	return i.ToRuleGroupStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupStatementPtrType) ToRuleGroupStatementPtrOutputWithContext(ctx context.Context) RuleGroupStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupStatementPtrOutput)
}

// RuleGroupStatementArrayInput is an input type that accepts RuleGroupStatementArray and RuleGroupStatementArrayOutput values.
// You can construct a concrete instance of `RuleGroupStatementArrayInput` via:
//
//          RuleGroupStatementArray{ RuleGroupStatementArgs{...} }
type RuleGroupStatementArrayInput interface {
	pulumi.Input

	ToRuleGroupStatementArrayOutput() RuleGroupStatementArrayOutput
	ToRuleGroupStatementArrayOutputWithContext(context.Context) RuleGroupStatementArrayOutput
}

type RuleGroupStatementArray []RuleGroupStatementInput

func (RuleGroupStatementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupStatement)(nil)).Elem()
}

func (i RuleGroupStatementArray) ToRuleGroupStatementArrayOutput() RuleGroupStatementArrayOutput {
	return i.ToRuleGroupStatementArrayOutputWithContext(context.Background())
}

func (i RuleGroupStatementArray) ToRuleGroupStatementArrayOutputWithContext(ctx context.Context) RuleGroupStatementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupStatementArrayOutput)
}

// First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
type RuleGroupStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupStatement)(nil)).Elem()
}

func (o RuleGroupStatementOutput) ToRuleGroupStatementOutput() RuleGroupStatementOutput {
	return o
}

func (o RuleGroupStatementOutput) ToRuleGroupStatementOutputWithContext(ctx context.Context) RuleGroupStatementOutput {
	return o
}

func (o RuleGroupStatementOutput) ToRuleGroupStatementPtrOutput() RuleGroupStatementPtrOutput {
	return o.ToRuleGroupStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupStatementOutput) ToRuleGroupStatementPtrOutputWithContext(ctx context.Context) RuleGroupStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupStatement) *RuleGroupStatement {
		return &v
	}).(RuleGroupStatementPtrOutput)
}

func (o RuleGroupStatementOutput) AndStatement() RuleGroupAndStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupStatement) *RuleGroupAndStatement { return v.AndStatement }).(RuleGroupAndStatementPtrOutput)
}

func (o RuleGroupStatementOutput) ByteMatchStatement() RuleGroupByteMatchStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupStatement) *RuleGroupByteMatchStatement { return v.ByteMatchStatement }).(RuleGroupByteMatchStatementPtrOutput)
}

func (o RuleGroupStatementOutput) GeoMatchStatement() RuleGroupGeoMatchStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupStatement) *RuleGroupGeoMatchStatement { return v.GeoMatchStatement }).(RuleGroupGeoMatchStatementPtrOutput)
}

func (o RuleGroupStatementOutput) IPSetReferenceStatement() RuleGroupIPSetReferenceStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupStatement) *RuleGroupIPSetReferenceStatement { return v.IPSetReferenceStatement }).(RuleGroupIPSetReferenceStatementPtrOutput)
}

func (o RuleGroupStatementOutput) LabelMatchStatement() RuleGroupLabelMatchStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupStatement) *RuleGroupLabelMatchStatement { return v.LabelMatchStatement }).(RuleGroupLabelMatchStatementPtrOutput)
}

func (o RuleGroupStatementOutput) NotStatement() RuleGroupNotStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupStatement) *RuleGroupNotStatement { return v.NotStatement }).(RuleGroupNotStatementPtrOutput)
}

func (o RuleGroupStatementOutput) OrStatement() RuleGroupOrStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupStatement) *RuleGroupOrStatement { return v.OrStatement }).(RuleGroupOrStatementPtrOutput)
}

func (o RuleGroupStatementOutput) RateBasedStatement() RuleGroupRateBasedStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupStatement) *RuleGroupRateBasedStatement { return v.RateBasedStatement }).(RuleGroupRateBasedStatementPtrOutput)
}

func (o RuleGroupStatementOutput) RegexPatternSetReferenceStatement() RuleGroupRegexPatternSetReferenceStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupStatement) *RuleGroupRegexPatternSetReferenceStatement {
		return v.RegexPatternSetReferenceStatement
	}).(RuleGroupRegexPatternSetReferenceStatementPtrOutput)
}

func (o RuleGroupStatementOutput) SizeConstraintStatement() RuleGroupSizeConstraintStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupStatement) *RuleGroupSizeConstraintStatement { return v.SizeConstraintStatement }).(RuleGroupSizeConstraintStatementPtrOutput)
}

func (o RuleGroupStatementOutput) SqliMatchStatement() RuleGroupSqliMatchStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupStatement) *RuleGroupSqliMatchStatement { return v.SqliMatchStatement }).(RuleGroupSqliMatchStatementPtrOutput)
}

func (o RuleGroupStatementOutput) XssMatchStatement() RuleGroupXssMatchStatementPtrOutput {
	return o.ApplyT(func(v RuleGroupStatement) *RuleGroupXssMatchStatement { return v.XssMatchStatement }).(RuleGroupXssMatchStatementPtrOutput)
}

type RuleGroupStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupStatement)(nil)).Elem()
}

func (o RuleGroupStatementPtrOutput) ToRuleGroupStatementPtrOutput() RuleGroupStatementPtrOutput {
	return o
}

func (o RuleGroupStatementPtrOutput) ToRuleGroupStatementPtrOutputWithContext(ctx context.Context) RuleGroupStatementPtrOutput {
	return o
}

func (o RuleGroupStatementPtrOutput) Elem() RuleGroupStatementOutput {
	return o.ApplyT(func(v *RuleGroupStatement) RuleGroupStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupStatement
		return ret
	}).(RuleGroupStatementOutput)
}

func (o RuleGroupStatementPtrOutput) AndStatement() RuleGroupAndStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupStatement) *RuleGroupAndStatement {
		if v == nil {
			return nil
		}
		return v.AndStatement
	}).(RuleGroupAndStatementPtrOutput)
}

func (o RuleGroupStatementPtrOutput) ByteMatchStatement() RuleGroupByteMatchStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupStatement) *RuleGroupByteMatchStatement {
		if v == nil {
			return nil
		}
		return v.ByteMatchStatement
	}).(RuleGroupByteMatchStatementPtrOutput)
}

func (o RuleGroupStatementPtrOutput) GeoMatchStatement() RuleGroupGeoMatchStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupStatement) *RuleGroupGeoMatchStatement {
		if v == nil {
			return nil
		}
		return v.GeoMatchStatement
	}).(RuleGroupGeoMatchStatementPtrOutput)
}

func (o RuleGroupStatementPtrOutput) IPSetReferenceStatement() RuleGroupIPSetReferenceStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupStatement) *RuleGroupIPSetReferenceStatement {
		if v == nil {
			return nil
		}
		return v.IPSetReferenceStatement
	}).(RuleGroupIPSetReferenceStatementPtrOutput)
}

func (o RuleGroupStatementPtrOutput) LabelMatchStatement() RuleGroupLabelMatchStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupStatement) *RuleGroupLabelMatchStatement {
		if v == nil {
			return nil
		}
		return v.LabelMatchStatement
	}).(RuleGroupLabelMatchStatementPtrOutput)
}

func (o RuleGroupStatementPtrOutput) NotStatement() RuleGroupNotStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupStatement) *RuleGroupNotStatement {
		if v == nil {
			return nil
		}
		return v.NotStatement
	}).(RuleGroupNotStatementPtrOutput)
}

func (o RuleGroupStatementPtrOutput) OrStatement() RuleGroupOrStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupStatement) *RuleGroupOrStatement {
		if v == nil {
			return nil
		}
		return v.OrStatement
	}).(RuleGroupOrStatementPtrOutput)
}

func (o RuleGroupStatementPtrOutput) RateBasedStatement() RuleGroupRateBasedStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupStatement) *RuleGroupRateBasedStatement {
		if v == nil {
			return nil
		}
		return v.RateBasedStatement
	}).(RuleGroupRateBasedStatementPtrOutput)
}

func (o RuleGroupStatementPtrOutput) RegexPatternSetReferenceStatement() RuleGroupRegexPatternSetReferenceStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupStatement) *RuleGroupRegexPatternSetReferenceStatement {
		if v == nil {
			return nil
		}
		return v.RegexPatternSetReferenceStatement
	}).(RuleGroupRegexPatternSetReferenceStatementPtrOutput)
}

func (o RuleGroupStatementPtrOutput) SizeConstraintStatement() RuleGroupSizeConstraintStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupStatement) *RuleGroupSizeConstraintStatement {
		if v == nil {
			return nil
		}
		return v.SizeConstraintStatement
	}).(RuleGroupSizeConstraintStatementPtrOutput)
}

func (o RuleGroupStatementPtrOutput) SqliMatchStatement() RuleGroupSqliMatchStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupStatement) *RuleGroupSqliMatchStatement {
		if v == nil {
			return nil
		}
		return v.SqliMatchStatement
	}).(RuleGroupSqliMatchStatementPtrOutput)
}

func (o RuleGroupStatementPtrOutput) XssMatchStatement() RuleGroupXssMatchStatementPtrOutput {
	return o.ApplyT(func(v *RuleGroupStatement) *RuleGroupXssMatchStatement {
		if v == nil {
			return nil
		}
		return v.XssMatchStatement
	}).(RuleGroupXssMatchStatementPtrOutput)
}

type RuleGroupStatementArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupStatementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupStatement)(nil)).Elem()
}

func (o RuleGroupStatementArrayOutput) ToRuleGroupStatementArrayOutput() RuleGroupStatementArrayOutput {
	return o
}

func (o RuleGroupStatementArrayOutput) ToRuleGroupStatementArrayOutputWithContext(ctx context.Context) RuleGroupStatementArrayOutput {
	return o
}

func (o RuleGroupStatementArrayOutput) Index(i pulumi.IntInput) RuleGroupStatementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupStatement {
		return vs[0].([]RuleGroupStatement)[vs[1].(int)]
	}).(RuleGroupStatementOutput)
}

type RuleGroupTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// RuleGroupTagInput is an input type that accepts RuleGroupTagArgs and RuleGroupTagOutput values.
// You can construct a concrete instance of `RuleGroupTagInput` via:
//
//          RuleGroupTagArgs{...}
type RuleGroupTagInput interface {
	pulumi.Input

	ToRuleGroupTagOutput() RuleGroupTagOutput
	ToRuleGroupTagOutputWithContext(context.Context) RuleGroupTagOutput
}

type RuleGroupTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (RuleGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTag)(nil)).Elem()
}

func (i RuleGroupTagArgs) ToRuleGroupTagOutput() RuleGroupTagOutput {
	return i.ToRuleGroupTagOutputWithContext(context.Background())
}

func (i RuleGroupTagArgs) ToRuleGroupTagOutputWithContext(ctx context.Context) RuleGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupTagOutput)
}

// RuleGroupTagArrayInput is an input type that accepts RuleGroupTagArray and RuleGroupTagArrayOutput values.
// You can construct a concrete instance of `RuleGroupTagArrayInput` via:
//
//          RuleGroupTagArray{ RuleGroupTagArgs{...} }
type RuleGroupTagArrayInput interface {
	pulumi.Input

	ToRuleGroupTagArrayOutput() RuleGroupTagArrayOutput
	ToRuleGroupTagArrayOutputWithContext(context.Context) RuleGroupTagArrayOutput
}

type RuleGroupTagArray []RuleGroupTagInput

func (RuleGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTag)(nil)).Elem()
}

func (i RuleGroupTagArray) ToRuleGroupTagArrayOutput() RuleGroupTagArrayOutput {
	return i.ToRuleGroupTagArrayOutputWithContext(context.Background())
}

func (i RuleGroupTagArray) ToRuleGroupTagArrayOutputWithContext(ctx context.Context) RuleGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupTagArrayOutput)
}

type RuleGroupTagOutput struct{ *pulumi.OutputState }

func (RuleGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTag)(nil)).Elem()
}

func (o RuleGroupTagOutput) ToRuleGroupTagOutput() RuleGroupTagOutput {
	return o
}

func (o RuleGroupTagOutput) ToRuleGroupTagOutputWithContext(ctx context.Context) RuleGroupTagOutput {
	return o
}

func (o RuleGroupTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleGroupTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o RuleGroupTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleGroupTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type RuleGroupTagArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTag)(nil)).Elem()
}

func (o RuleGroupTagArrayOutput) ToRuleGroupTagArrayOutput() RuleGroupTagArrayOutput {
	return o
}

func (o RuleGroupTagArrayOutput) ToRuleGroupTagArrayOutputWithContext(ctx context.Context) RuleGroupTagArrayOutput {
	return o
}

func (o RuleGroupTagArrayOutput) Index(i pulumi.IntInput) RuleGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupTag {
		return vs[0].([]RuleGroupTag)[vs[1].(int)]
	}).(RuleGroupTagOutput)
}

// Text Transformation on the Search String before match.
type RuleGroupTextTransformation struct {
	Priority int    `pulumi:"priority"`
	Type     string `pulumi:"type"`
}

// RuleGroupTextTransformationInput is an input type that accepts RuleGroupTextTransformationArgs and RuleGroupTextTransformationOutput values.
// You can construct a concrete instance of `RuleGroupTextTransformationInput` via:
//
//          RuleGroupTextTransformationArgs{...}
type RuleGroupTextTransformationInput interface {
	pulumi.Input

	ToRuleGroupTextTransformationOutput() RuleGroupTextTransformationOutput
	ToRuleGroupTextTransformationOutputWithContext(context.Context) RuleGroupTextTransformationOutput
}

// Text Transformation on the Search String before match.
type RuleGroupTextTransformationArgs struct {
	Priority pulumi.IntInput    `pulumi:"priority"`
	Type     pulumi.StringInput `pulumi:"type"`
}

func (RuleGroupTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTextTransformation)(nil)).Elem()
}

func (i RuleGroupTextTransformationArgs) ToRuleGroupTextTransformationOutput() RuleGroupTextTransformationOutput {
	return i.ToRuleGroupTextTransformationOutputWithContext(context.Background())
}

func (i RuleGroupTextTransformationArgs) ToRuleGroupTextTransformationOutputWithContext(ctx context.Context) RuleGroupTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupTextTransformationOutput)
}

// RuleGroupTextTransformationArrayInput is an input type that accepts RuleGroupTextTransformationArray and RuleGroupTextTransformationArrayOutput values.
// You can construct a concrete instance of `RuleGroupTextTransformationArrayInput` via:
//
//          RuleGroupTextTransformationArray{ RuleGroupTextTransformationArgs{...} }
type RuleGroupTextTransformationArrayInput interface {
	pulumi.Input

	ToRuleGroupTextTransformationArrayOutput() RuleGroupTextTransformationArrayOutput
	ToRuleGroupTextTransformationArrayOutputWithContext(context.Context) RuleGroupTextTransformationArrayOutput
}

type RuleGroupTextTransformationArray []RuleGroupTextTransformationInput

func (RuleGroupTextTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTextTransformation)(nil)).Elem()
}

func (i RuleGroupTextTransformationArray) ToRuleGroupTextTransformationArrayOutput() RuleGroupTextTransformationArrayOutput {
	return i.ToRuleGroupTextTransformationArrayOutputWithContext(context.Background())
}

func (i RuleGroupTextTransformationArray) ToRuleGroupTextTransformationArrayOutputWithContext(ctx context.Context) RuleGroupTextTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupTextTransformationArrayOutput)
}

// Text Transformation on the Search String before match.
type RuleGroupTextTransformationOutput struct{ *pulumi.OutputState }

func (RuleGroupTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupTextTransformation)(nil)).Elem()
}

func (o RuleGroupTextTransformationOutput) ToRuleGroupTextTransformationOutput() RuleGroupTextTransformationOutput {
	return o
}

func (o RuleGroupTextTransformationOutput) ToRuleGroupTextTransformationOutputWithContext(ctx context.Context) RuleGroupTextTransformationOutput {
	return o
}

func (o RuleGroupTextTransformationOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v RuleGroupTextTransformation) int { return v.Priority }).(pulumi.IntOutput)
}

func (o RuleGroupTextTransformationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupTextTransformation) string { return v.Type }).(pulumi.StringOutput)
}

type RuleGroupTextTransformationArrayOutput struct{ *pulumi.OutputState }

func (RuleGroupTextTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleGroupTextTransformation)(nil)).Elem()
}

func (o RuleGroupTextTransformationArrayOutput) ToRuleGroupTextTransformationArrayOutput() RuleGroupTextTransformationArrayOutput {
	return o
}

func (o RuleGroupTextTransformationArrayOutput) ToRuleGroupTextTransformationArrayOutputWithContext(ctx context.Context) RuleGroupTextTransformationArrayOutput {
	return o
}

func (o RuleGroupTextTransformationArrayOutput) Index(i pulumi.IntInput) RuleGroupTextTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleGroupTextTransformation {
		return vs[0].([]RuleGroupTextTransformation)[vs[1].(int)]
	}).(RuleGroupTextTransformationOutput)
}

// Visibility Metric of the RuleGroup.
type RuleGroupVisibilityConfig struct {
	CloudWatchMetricsEnabled bool   `pulumi:"cloudWatchMetricsEnabled"`
	MetricName               string `pulumi:"metricName"`
	SampledRequestsEnabled   bool   `pulumi:"sampledRequestsEnabled"`
}

// RuleGroupVisibilityConfigInput is an input type that accepts RuleGroupVisibilityConfigArgs and RuleGroupVisibilityConfigOutput values.
// You can construct a concrete instance of `RuleGroupVisibilityConfigInput` via:
//
//          RuleGroupVisibilityConfigArgs{...}
type RuleGroupVisibilityConfigInput interface {
	pulumi.Input

	ToRuleGroupVisibilityConfigOutput() RuleGroupVisibilityConfigOutput
	ToRuleGroupVisibilityConfigOutputWithContext(context.Context) RuleGroupVisibilityConfigOutput
}

// Visibility Metric of the RuleGroup.
type RuleGroupVisibilityConfigArgs struct {
	CloudWatchMetricsEnabled pulumi.BoolInput   `pulumi:"cloudWatchMetricsEnabled"`
	MetricName               pulumi.StringInput `pulumi:"metricName"`
	SampledRequestsEnabled   pulumi.BoolInput   `pulumi:"sampledRequestsEnabled"`
}

func (RuleGroupVisibilityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupVisibilityConfig)(nil)).Elem()
}

func (i RuleGroupVisibilityConfigArgs) ToRuleGroupVisibilityConfigOutput() RuleGroupVisibilityConfigOutput {
	return i.ToRuleGroupVisibilityConfigOutputWithContext(context.Background())
}

func (i RuleGroupVisibilityConfigArgs) ToRuleGroupVisibilityConfigOutputWithContext(ctx context.Context) RuleGroupVisibilityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupVisibilityConfigOutput)
}

func (i RuleGroupVisibilityConfigArgs) ToRuleGroupVisibilityConfigPtrOutput() RuleGroupVisibilityConfigPtrOutput {
	return i.ToRuleGroupVisibilityConfigPtrOutputWithContext(context.Background())
}

func (i RuleGroupVisibilityConfigArgs) ToRuleGroupVisibilityConfigPtrOutputWithContext(ctx context.Context) RuleGroupVisibilityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupVisibilityConfigOutput).ToRuleGroupVisibilityConfigPtrOutputWithContext(ctx)
}

// RuleGroupVisibilityConfigPtrInput is an input type that accepts RuleGroupVisibilityConfigArgs, RuleGroupVisibilityConfigPtr and RuleGroupVisibilityConfigPtrOutput values.
// You can construct a concrete instance of `RuleGroupVisibilityConfigPtrInput` via:
//
//          RuleGroupVisibilityConfigArgs{...}
//
//  or:
//
//          nil
type RuleGroupVisibilityConfigPtrInput interface {
	pulumi.Input

	ToRuleGroupVisibilityConfigPtrOutput() RuleGroupVisibilityConfigPtrOutput
	ToRuleGroupVisibilityConfigPtrOutputWithContext(context.Context) RuleGroupVisibilityConfigPtrOutput
}

type ruleGroupVisibilityConfigPtrType RuleGroupVisibilityConfigArgs

func RuleGroupVisibilityConfigPtr(v *RuleGroupVisibilityConfigArgs) RuleGroupVisibilityConfigPtrInput {
	return (*ruleGroupVisibilityConfigPtrType)(v)
}

func (*ruleGroupVisibilityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupVisibilityConfig)(nil)).Elem()
}

func (i *ruleGroupVisibilityConfigPtrType) ToRuleGroupVisibilityConfigPtrOutput() RuleGroupVisibilityConfigPtrOutput {
	return i.ToRuleGroupVisibilityConfigPtrOutputWithContext(context.Background())
}

func (i *ruleGroupVisibilityConfigPtrType) ToRuleGroupVisibilityConfigPtrOutputWithContext(ctx context.Context) RuleGroupVisibilityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupVisibilityConfigPtrOutput)
}

// Visibility Metric of the RuleGroup.
type RuleGroupVisibilityConfigOutput struct{ *pulumi.OutputState }

func (RuleGroupVisibilityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupVisibilityConfig)(nil)).Elem()
}

func (o RuleGroupVisibilityConfigOutput) ToRuleGroupVisibilityConfigOutput() RuleGroupVisibilityConfigOutput {
	return o
}

func (o RuleGroupVisibilityConfigOutput) ToRuleGroupVisibilityConfigOutputWithContext(ctx context.Context) RuleGroupVisibilityConfigOutput {
	return o
}

func (o RuleGroupVisibilityConfigOutput) ToRuleGroupVisibilityConfigPtrOutput() RuleGroupVisibilityConfigPtrOutput {
	return o.ToRuleGroupVisibilityConfigPtrOutputWithContext(context.Background())
}

func (o RuleGroupVisibilityConfigOutput) ToRuleGroupVisibilityConfigPtrOutputWithContext(ctx context.Context) RuleGroupVisibilityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupVisibilityConfig) *RuleGroupVisibilityConfig {
		return &v
	}).(RuleGroupVisibilityConfigPtrOutput)
}

func (o RuleGroupVisibilityConfigOutput) CloudWatchMetricsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v RuleGroupVisibilityConfig) bool { return v.CloudWatchMetricsEnabled }).(pulumi.BoolOutput)
}

func (o RuleGroupVisibilityConfigOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v RuleGroupVisibilityConfig) string { return v.MetricName }).(pulumi.StringOutput)
}

func (o RuleGroupVisibilityConfigOutput) SampledRequestsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v RuleGroupVisibilityConfig) bool { return v.SampledRequestsEnabled }).(pulumi.BoolOutput)
}

type RuleGroupVisibilityConfigPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupVisibilityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupVisibilityConfig)(nil)).Elem()
}

func (o RuleGroupVisibilityConfigPtrOutput) ToRuleGroupVisibilityConfigPtrOutput() RuleGroupVisibilityConfigPtrOutput {
	return o
}

func (o RuleGroupVisibilityConfigPtrOutput) ToRuleGroupVisibilityConfigPtrOutputWithContext(ctx context.Context) RuleGroupVisibilityConfigPtrOutput {
	return o
}

func (o RuleGroupVisibilityConfigPtrOutput) Elem() RuleGroupVisibilityConfigOutput {
	return o.ApplyT(func(v *RuleGroupVisibilityConfig) RuleGroupVisibilityConfig {
		if v != nil {
			return *v
		}
		var ret RuleGroupVisibilityConfig
		return ret
	}).(RuleGroupVisibilityConfigOutput)
}

func (o RuleGroupVisibilityConfigPtrOutput) CloudWatchMetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RuleGroupVisibilityConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.CloudWatchMetricsEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o RuleGroupVisibilityConfigPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleGroupVisibilityConfig) *string {
		if v == nil {
			return nil
		}
		return &v.MetricName
	}).(pulumi.StringPtrOutput)
}

func (o RuleGroupVisibilityConfigPtrOutput) SampledRequestsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RuleGroupVisibilityConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.SampledRequestsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Xss Match Statement.
type RuleGroupXssMatchStatement struct {
	FieldToMatch        RuleGroupFieldToMatch         `pulumi:"fieldToMatch"`
	TextTransformations []RuleGroupTextTransformation `pulumi:"textTransformations"`
}

// RuleGroupXssMatchStatementInput is an input type that accepts RuleGroupXssMatchStatementArgs and RuleGroupXssMatchStatementOutput values.
// You can construct a concrete instance of `RuleGroupXssMatchStatementInput` via:
//
//          RuleGroupXssMatchStatementArgs{...}
type RuleGroupXssMatchStatementInput interface {
	pulumi.Input

	ToRuleGroupXssMatchStatementOutput() RuleGroupXssMatchStatementOutput
	ToRuleGroupXssMatchStatementOutputWithContext(context.Context) RuleGroupXssMatchStatementOutput
}

// Xss Match Statement.
type RuleGroupXssMatchStatementArgs struct {
	FieldToMatch        RuleGroupFieldToMatchInput            `pulumi:"fieldToMatch"`
	TextTransformations RuleGroupTextTransformationArrayInput `pulumi:"textTransformations"`
}

func (RuleGroupXssMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupXssMatchStatement)(nil)).Elem()
}

func (i RuleGroupXssMatchStatementArgs) ToRuleGroupXssMatchStatementOutput() RuleGroupXssMatchStatementOutput {
	return i.ToRuleGroupXssMatchStatementOutputWithContext(context.Background())
}

func (i RuleGroupXssMatchStatementArgs) ToRuleGroupXssMatchStatementOutputWithContext(ctx context.Context) RuleGroupXssMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupXssMatchStatementOutput)
}

func (i RuleGroupXssMatchStatementArgs) ToRuleGroupXssMatchStatementPtrOutput() RuleGroupXssMatchStatementPtrOutput {
	return i.ToRuleGroupXssMatchStatementPtrOutputWithContext(context.Background())
}

func (i RuleGroupXssMatchStatementArgs) ToRuleGroupXssMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupXssMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupXssMatchStatementOutput).ToRuleGroupXssMatchStatementPtrOutputWithContext(ctx)
}

// RuleGroupXssMatchStatementPtrInput is an input type that accepts RuleGroupXssMatchStatementArgs, RuleGroupXssMatchStatementPtr and RuleGroupXssMatchStatementPtrOutput values.
// You can construct a concrete instance of `RuleGroupXssMatchStatementPtrInput` via:
//
//          RuleGroupXssMatchStatementArgs{...}
//
//  or:
//
//          nil
type RuleGroupXssMatchStatementPtrInput interface {
	pulumi.Input

	ToRuleGroupXssMatchStatementPtrOutput() RuleGroupXssMatchStatementPtrOutput
	ToRuleGroupXssMatchStatementPtrOutputWithContext(context.Context) RuleGroupXssMatchStatementPtrOutput
}

type ruleGroupXssMatchStatementPtrType RuleGroupXssMatchStatementArgs

func RuleGroupXssMatchStatementPtr(v *RuleGroupXssMatchStatementArgs) RuleGroupXssMatchStatementPtrInput {
	return (*ruleGroupXssMatchStatementPtrType)(v)
}

func (*ruleGroupXssMatchStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupXssMatchStatement)(nil)).Elem()
}

func (i *ruleGroupXssMatchStatementPtrType) ToRuleGroupXssMatchStatementPtrOutput() RuleGroupXssMatchStatementPtrOutput {
	return i.ToRuleGroupXssMatchStatementPtrOutputWithContext(context.Background())
}

func (i *ruleGroupXssMatchStatementPtrType) ToRuleGroupXssMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupXssMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleGroupXssMatchStatementPtrOutput)
}

// Xss Match Statement.
type RuleGroupXssMatchStatementOutput struct{ *pulumi.OutputState }

func (RuleGroupXssMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleGroupXssMatchStatement)(nil)).Elem()
}

func (o RuleGroupXssMatchStatementOutput) ToRuleGroupXssMatchStatementOutput() RuleGroupXssMatchStatementOutput {
	return o
}

func (o RuleGroupXssMatchStatementOutput) ToRuleGroupXssMatchStatementOutputWithContext(ctx context.Context) RuleGroupXssMatchStatementOutput {
	return o
}

func (o RuleGroupXssMatchStatementOutput) ToRuleGroupXssMatchStatementPtrOutput() RuleGroupXssMatchStatementPtrOutput {
	return o.ToRuleGroupXssMatchStatementPtrOutputWithContext(context.Background())
}

func (o RuleGroupXssMatchStatementOutput) ToRuleGroupXssMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupXssMatchStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleGroupXssMatchStatement) *RuleGroupXssMatchStatement {
		return &v
	}).(RuleGroupXssMatchStatementPtrOutput)
}

func (o RuleGroupXssMatchStatementOutput) FieldToMatch() RuleGroupFieldToMatchOutput {
	return o.ApplyT(func(v RuleGroupXssMatchStatement) RuleGroupFieldToMatch { return v.FieldToMatch }).(RuleGroupFieldToMatchOutput)
}

func (o RuleGroupXssMatchStatementOutput) TextTransformations() RuleGroupTextTransformationArrayOutput {
	return o.ApplyT(func(v RuleGroupXssMatchStatement) []RuleGroupTextTransformation { return v.TextTransformations }).(RuleGroupTextTransformationArrayOutput)
}

type RuleGroupXssMatchStatementPtrOutput struct{ *pulumi.OutputState }

func (RuleGroupXssMatchStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleGroupXssMatchStatement)(nil)).Elem()
}

func (o RuleGroupXssMatchStatementPtrOutput) ToRuleGroupXssMatchStatementPtrOutput() RuleGroupXssMatchStatementPtrOutput {
	return o
}

func (o RuleGroupXssMatchStatementPtrOutput) ToRuleGroupXssMatchStatementPtrOutputWithContext(ctx context.Context) RuleGroupXssMatchStatementPtrOutput {
	return o
}

func (o RuleGroupXssMatchStatementPtrOutput) Elem() RuleGroupXssMatchStatementOutput {
	return o.ApplyT(func(v *RuleGroupXssMatchStatement) RuleGroupXssMatchStatement {
		if v != nil {
			return *v
		}
		var ret RuleGroupXssMatchStatement
		return ret
	}).(RuleGroupXssMatchStatementOutput)
}

func (o RuleGroupXssMatchStatementPtrOutput) FieldToMatch() RuleGroupFieldToMatchPtrOutput {
	return o.ApplyT(func(v *RuleGroupXssMatchStatement) *RuleGroupFieldToMatch {
		if v == nil {
			return nil
		}
		return &v.FieldToMatch
	}).(RuleGroupFieldToMatchPtrOutput)
}

func (o RuleGroupXssMatchStatementPtrOutput) TextTransformations() RuleGroupTextTransformationArrayOutput {
	return o.ApplyT(func(v *RuleGroupXssMatchStatement) []RuleGroupTextTransformation {
		if v == nil {
			return nil
		}
		return v.TextTransformations
	}).(RuleGroupTextTransformationArrayOutput)
}

// Allow traffic towards application.
type WebACLAllowAction struct {
	CustomRequestHandling *WebACLCustomRequestHandling `pulumi:"customRequestHandling"`
}

// WebACLAllowActionInput is an input type that accepts WebACLAllowActionArgs and WebACLAllowActionOutput values.
// You can construct a concrete instance of `WebACLAllowActionInput` via:
//
//          WebACLAllowActionArgs{...}
type WebACLAllowActionInput interface {
	pulumi.Input

	ToWebACLAllowActionOutput() WebACLAllowActionOutput
	ToWebACLAllowActionOutputWithContext(context.Context) WebACLAllowActionOutput
}

// Allow traffic towards application.
type WebACLAllowActionArgs struct {
	CustomRequestHandling WebACLCustomRequestHandlingPtrInput `pulumi:"customRequestHandling"`
}

func (WebACLAllowActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLAllowAction)(nil)).Elem()
}

func (i WebACLAllowActionArgs) ToWebACLAllowActionOutput() WebACLAllowActionOutput {
	return i.ToWebACLAllowActionOutputWithContext(context.Background())
}

func (i WebACLAllowActionArgs) ToWebACLAllowActionOutputWithContext(ctx context.Context) WebACLAllowActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLAllowActionOutput)
}

func (i WebACLAllowActionArgs) ToWebACLAllowActionPtrOutput() WebACLAllowActionPtrOutput {
	return i.ToWebACLAllowActionPtrOutputWithContext(context.Background())
}

func (i WebACLAllowActionArgs) ToWebACLAllowActionPtrOutputWithContext(ctx context.Context) WebACLAllowActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLAllowActionOutput).ToWebACLAllowActionPtrOutputWithContext(ctx)
}

// WebACLAllowActionPtrInput is an input type that accepts WebACLAllowActionArgs, WebACLAllowActionPtr and WebACLAllowActionPtrOutput values.
// You can construct a concrete instance of `WebACLAllowActionPtrInput` via:
//
//          WebACLAllowActionArgs{...}
//
//  or:
//
//          nil
type WebACLAllowActionPtrInput interface {
	pulumi.Input

	ToWebACLAllowActionPtrOutput() WebACLAllowActionPtrOutput
	ToWebACLAllowActionPtrOutputWithContext(context.Context) WebACLAllowActionPtrOutput
}

type webACLAllowActionPtrType WebACLAllowActionArgs

func WebACLAllowActionPtr(v *WebACLAllowActionArgs) WebACLAllowActionPtrInput {
	return (*webACLAllowActionPtrType)(v)
}

func (*webACLAllowActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLAllowAction)(nil)).Elem()
}

func (i *webACLAllowActionPtrType) ToWebACLAllowActionPtrOutput() WebACLAllowActionPtrOutput {
	return i.ToWebACLAllowActionPtrOutputWithContext(context.Background())
}

func (i *webACLAllowActionPtrType) ToWebACLAllowActionPtrOutputWithContext(ctx context.Context) WebACLAllowActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLAllowActionPtrOutput)
}

// Allow traffic towards application.
type WebACLAllowActionOutput struct{ *pulumi.OutputState }

func (WebACLAllowActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLAllowAction)(nil)).Elem()
}

func (o WebACLAllowActionOutput) ToWebACLAllowActionOutput() WebACLAllowActionOutput {
	return o
}

func (o WebACLAllowActionOutput) ToWebACLAllowActionOutputWithContext(ctx context.Context) WebACLAllowActionOutput {
	return o
}

func (o WebACLAllowActionOutput) ToWebACLAllowActionPtrOutput() WebACLAllowActionPtrOutput {
	return o.ToWebACLAllowActionPtrOutputWithContext(context.Background())
}

func (o WebACLAllowActionOutput) ToWebACLAllowActionPtrOutputWithContext(ctx context.Context) WebACLAllowActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLAllowAction) *WebACLAllowAction {
		return &v
	}).(WebACLAllowActionPtrOutput)
}

func (o WebACLAllowActionOutput) CustomRequestHandling() WebACLCustomRequestHandlingPtrOutput {
	return o.ApplyT(func(v WebACLAllowAction) *WebACLCustomRequestHandling { return v.CustomRequestHandling }).(WebACLCustomRequestHandlingPtrOutput)
}

type WebACLAllowActionPtrOutput struct{ *pulumi.OutputState }

func (WebACLAllowActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLAllowAction)(nil)).Elem()
}

func (o WebACLAllowActionPtrOutput) ToWebACLAllowActionPtrOutput() WebACLAllowActionPtrOutput {
	return o
}

func (o WebACLAllowActionPtrOutput) ToWebACLAllowActionPtrOutputWithContext(ctx context.Context) WebACLAllowActionPtrOutput {
	return o
}

func (o WebACLAllowActionPtrOutput) Elem() WebACLAllowActionOutput {
	return o.ApplyT(func(v *WebACLAllowAction) WebACLAllowAction {
		if v != nil {
			return *v
		}
		var ret WebACLAllowAction
		return ret
	}).(WebACLAllowActionOutput)
}

func (o WebACLAllowActionPtrOutput) CustomRequestHandling() WebACLCustomRequestHandlingPtrOutput {
	return o.ApplyT(func(v *WebACLAllowAction) *WebACLCustomRequestHandling {
		if v == nil {
			return nil
		}
		return v.CustomRequestHandling
	}).(WebACLCustomRequestHandlingPtrOutput)
}

type WebACLAndStatement struct {
	Statements []WebACLStatement `pulumi:"statements"`
}

// WebACLAndStatementInput is an input type that accepts WebACLAndStatementArgs and WebACLAndStatementOutput values.
// You can construct a concrete instance of `WebACLAndStatementInput` via:
//
//          WebACLAndStatementArgs{...}
type WebACLAndStatementInput interface {
	pulumi.Input

	ToWebACLAndStatementOutput() WebACLAndStatementOutput
	ToWebACLAndStatementOutputWithContext(context.Context) WebACLAndStatementOutput
}

type WebACLAndStatementArgs struct {
	Statements WebACLStatementArrayInput `pulumi:"statements"`
}

func (WebACLAndStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLAndStatement)(nil)).Elem()
}

func (i WebACLAndStatementArgs) ToWebACLAndStatementOutput() WebACLAndStatementOutput {
	return i.ToWebACLAndStatementOutputWithContext(context.Background())
}

func (i WebACLAndStatementArgs) ToWebACLAndStatementOutputWithContext(ctx context.Context) WebACLAndStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLAndStatementOutput)
}

func (i WebACLAndStatementArgs) ToWebACLAndStatementPtrOutput() WebACLAndStatementPtrOutput {
	return i.ToWebACLAndStatementPtrOutputWithContext(context.Background())
}

func (i WebACLAndStatementArgs) ToWebACLAndStatementPtrOutputWithContext(ctx context.Context) WebACLAndStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLAndStatementOutput).ToWebACLAndStatementPtrOutputWithContext(ctx)
}

// WebACLAndStatementPtrInput is an input type that accepts WebACLAndStatementArgs, WebACLAndStatementPtr and WebACLAndStatementPtrOutput values.
// You can construct a concrete instance of `WebACLAndStatementPtrInput` via:
//
//          WebACLAndStatementArgs{...}
//
//  or:
//
//          nil
type WebACLAndStatementPtrInput interface {
	pulumi.Input

	ToWebACLAndStatementPtrOutput() WebACLAndStatementPtrOutput
	ToWebACLAndStatementPtrOutputWithContext(context.Context) WebACLAndStatementPtrOutput
}

type webACLAndStatementPtrType WebACLAndStatementArgs

func WebACLAndStatementPtr(v *WebACLAndStatementArgs) WebACLAndStatementPtrInput {
	return (*webACLAndStatementPtrType)(v)
}

func (*webACLAndStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLAndStatement)(nil)).Elem()
}

func (i *webACLAndStatementPtrType) ToWebACLAndStatementPtrOutput() WebACLAndStatementPtrOutput {
	return i.ToWebACLAndStatementPtrOutputWithContext(context.Background())
}

func (i *webACLAndStatementPtrType) ToWebACLAndStatementPtrOutputWithContext(ctx context.Context) WebACLAndStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLAndStatementPtrOutput)
}

type WebACLAndStatementOutput struct{ *pulumi.OutputState }

func (WebACLAndStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLAndStatement)(nil)).Elem()
}

func (o WebACLAndStatementOutput) ToWebACLAndStatementOutput() WebACLAndStatementOutput {
	return o
}

func (o WebACLAndStatementOutput) ToWebACLAndStatementOutputWithContext(ctx context.Context) WebACLAndStatementOutput {
	return o
}

func (o WebACLAndStatementOutput) ToWebACLAndStatementPtrOutput() WebACLAndStatementPtrOutput {
	return o.ToWebACLAndStatementPtrOutputWithContext(context.Background())
}

func (o WebACLAndStatementOutput) ToWebACLAndStatementPtrOutputWithContext(ctx context.Context) WebACLAndStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLAndStatement) *WebACLAndStatement {
		return &v
	}).(WebACLAndStatementPtrOutput)
}

func (o WebACLAndStatementOutput) Statements() WebACLStatementArrayOutput {
	return o.ApplyT(func(v WebACLAndStatement) []WebACLStatement { return v.Statements }).(WebACLStatementArrayOutput)
}

type WebACLAndStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLAndStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLAndStatement)(nil)).Elem()
}

func (o WebACLAndStatementPtrOutput) ToWebACLAndStatementPtrOutput() WebACLAndStatementPtrOutput {
	return o
}

func (o WebACLAndStatementPtrOutput) ToWebACLAndStatementPtrOutputWithContext(ctx context.Context) WebACLAndStatementPtrOutput {
	return o
}

func (o WebACLAndStatementPtrOutput) Elem() WebACLAndStatementOutput {
	return o.ApplyT(func(v *WebACLAndStatement) WebACLAndStatement {
		if v != nil {
			return *v
		}
		var ret WebACLAndStatement
		return ret
	}).(WebACLAndStatementOutput)
}

func (o WebACLAndStatementPtrOutput) Statements() WebACLStatementArrayOutput {
	return o.ApplyT(func(v *WebACLAndStatement) []WebACLStatement {
		if v == nil {
			return nil
		}
		return v.Statements
	}).(WebACLStatementArrayOutput)
}

// Block traffic towards application.
type WebACLBlockAction struct {
	CustomResponse *WebACLCustomResponse `pulumi:"customResponse"`
}

// WebACLBlockActionInput is an input type that accepts WebACLBlockActionArgs and WebACLBlockActionOutput values.
// You can construct a concrete instance of `WebACLBlockActionInput` via:
//
//          WebACLBlockActionArgs{...}
type WebACLBlockActionInput interface {
	pulumi.Input

	ToWebACLBlockActionOutput() WebACLBlockActionOutput
	ToWebACLBlockActionOutputWithContext(context.Context) WebACLBlockActionOutput
}

// Block traffic towards application.
type WebACLBlockActionArgs struct {
	CustomResponse WebACLCustomResponsePtrInput `pulumi:"customResponse"`
}

func (WebACLBlockActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLBlockAction)(nil)).Elem()
}

func (i WebACLBlockActionArgs) ToWebACLBlockActionOutput() WebACLBlockActionOutput {
	return i.ToWebACLBlockActionOutputWithContext(context.Background())
}

func (i WebACLBlockActionArgs) ToWebACLBlockActionOutputWithContext(ctx context.Context) WebACLBlockActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLBlockActionOutput)
}

func (i WebACLBlockActionArgs) ToWebACLBlockActionPtrOutput() WebACLBlockActionPtrOutput {
	return i.ToWebACLBlockActionPtrOutputWithContext(context.Background())
}

func (i WebACLBlockActionArgs) ToWebACLBlockActionPtrOutputWithContext(ctx context.Context) WebACLBlockActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLBlockActionOutput).ToWebACLBlockActionPtrOutputWithContext(ctx)
}

// WebACLBlockActionPtrInput is an input type that accepts WebACLBlockActionArgs, WebACLBlockActionPtr and WebACLBlockActionPtrOutput values.
// You can construct a concrete instance of `WebACLBlockActionPtrInput` via:
//
//          WebACLBlockActionArgs{...}
//
//  or:
//
//          nil
type WebACLBlockActionPtrInput interface {
	pulumi.Input

	ToWebACLBlockActionPtrOutput() WebACLBlockActionPtrOutput
	ToWebACLBlockActionPtrOutputWithContext(context.Context) WebACLBlockActionPtrOutput
}

type webACLBlockActionPtrType WebACLBlockActionArgs

func WebACLBlockActionPtr(v *WebACLBlockActionArgs) WebACLBlockActionPtrInput {
	return (*webACLBlockActionPtrType)(v)
}

func (*webACLBlockActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLBlockAction)(nil)).Elem()
}

func (i *webACLBlockActionPtrType) ToWebACLBlockActionPtrOutput() WebACLBlockActionPtrOutput {
	return i.ToWebACLBlockActionPtrOutputWithContext(context.Background())
}

func (i *webACLBlockActionPtrType) ToWebACLBlockActionPtrOutputWithContext(ctx context.Context) WebACLBlockActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLBlockActionPtrOutput)
}

// Block traffic towards application.
type WebACLBlockActionOutput struct{ *pulumi.OutputState }

func (WebACLBlockActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLBlockAction)(nil)).Elem()
}

func (o WebACLBlockActionOutput) ToWebACLBlockActionOutput() WebACLBlockActionOutput {
	return o
}

func (o WebACLBlockActionOutput) ToWebACLBlockActionOutputWithContext(ctx context.Context) WebACLBlockActionOutput {
	return o
}

func (o WebACLBlockActionOutput) ToWebACLBlockActionPtrOutput() WebACLBlockActionPtrOutput {
	return o.ToWebACLBlockActionPtrOutputWithContext(context.Background())
}

func (o WebACLBlockActionOutput) ToWebACLBlockActionPtrOutputWithContext(ctx context.Context) WebACLBlockActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLBlockAction) *WebACLBlockAction {
		return &v
	}).(WebACLBlockActionPtrOutput)
}

func (o WebACLBlockActionOutput) CustomResponse() WebACLCustomResponsePtrOutput {
	return o.ApplyT(func(v WebACLBlockAction) *WebACLCustomResponse { return v.CustomResponse }).(WebACLCustomResponsePtrOutput)
}

type WebACLBlockActionPtrOutput struct{ *pulumi.OutputState }

func (WebACLBlockActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLBlockAction)(nil)).Elem()
}

func (o WebACLBlockActionPtrOutput) ToWebACLBlockActionPtrOutput() WebACLBlockActionPtrOutput {
	return o
}

func (o WebACLBlockActionPtrOutput) ToWebACLBlockActionPtrOutputWithContext(ctx context.Context) WebACLBlockActionPtrOutput {
	return o
}

func (o WebACLBlockActionPtrOutput) Elem() WebACLBlockActionOutput {
	return o.ApplyT(func(v *WebACLBlockAction) WebACLBlockAction {
		if v != nil {
			return *v
		}
		var ret WebACLBlockAction
		return ret
	}).(WebACLBlockActionOutput)
}

func (o WebACLBlockActionPtrOutput) CustomResponse() WebACLCustomResponsePtrOutput {
	return o.ApplyT(func(v *WebACLBlockAction) *WebACLCustomResponse {
		if v == nil {
			return nil
		}
		return v.CustomResponse
	}).(WebACLCustomResponsePtrOutput)
}

// Byte Match statement.
type WebACLByteMatchStatement struct {
	FieldToMatch         WebACLFieldToMatch         `pulumi:"fieldToMatch"`
	PositionalConstraint string                     `pulumi:"positionalConstraint"`
	SearchString         *string                    `pulumi:"searchString"`
	SearchStringBase64   *string                    `pulumi:"searchStringBase64"`
	TextTransformations  []WebACLTextTransformation `pulumi:"textTransformations"`
}

// WebACLByteMatchStatementInput is an input type that accepts WebACLByteMatchStatementArgs and WebACLByteMatchStatementOutput values.
// You can construct a concrete instance of `WebACLByteMatchStatementInput` via:
//
//          WebACLByteMatchStatementArgs{...}
type WebACLByteMatchStatementInput interface {
	pulumi.Input

	ToWebACLByteMatchStatementOutput() WebACLByteMatchStatementOutput
	ToWebACLByteMatchStatementOutputWithContext(context.Context) WebACLByteMatchStatementOutput
}

// Byte Match statement.
type WebACLByteMatchStatementArgs struct {
	FieldToMatch         WebACLFieldToMatchInput            `pulumi:"fieldToMatch"`
	PositionalConstraint pulumi.StringInput                 `pulumi:"positionalConstraint"`
	SearchString         pulumi.StringPtrInput              `pulumi:"searchString"`
	SearchStringBase64   pulumi.StringPtrInput              `pulumi:"searchStringBase64"`
	TextTransformations  WebACLTextTransformationArrayInput `pulumi:"textTransformations"`
}

func (WebACLByteMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLByteMatchStatement)(nil)).Elem()
}

func (i WebACLByteMatchStatementArgs) ToWebACLByteMatchStatementOutput() WebACLByteMatchStatementOutput {
	return i.ToWebACLByteMatchStatementOutputWithContext(context.Background())
}

func (i WebACLByteMatchStatementArgs) ToWebACLByteMatchStatementOutputWithContext(ctx context.Context) WebACLByteMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLByteMatchStatementOutput)
}

func (i WebACLByteMatchStatementArgs) ToWebACLByteMatchStatementPtrOutput() WebACLByteMatchStatementPtrOutput {
	return i.ToWebACLByteMatchStatementPtrOutputWithContext(context.Background())
}

func (i WebACLByteMatchStatementArgs) ToWebACLByteMatchStatementPtrOutputWithContext(ctx context.Context) WebACLByteMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLByteMatchStatementOutput).ToWebACLByteMatchStatementPtrOutputWithContext(ctx)
}

// WebACLByteMatchStatementPtrInput is an input type that accepts WebACLByteMatchStatementArgs, WebACLByteMatchStatementPtr and WebACLByteMatchStatementPtrOutput values.
// You can construct a concrete instance of `WebACLByteMatchStatementPtrInput` via:
//
//          WebACLByteMatchStatementArgs{...}
//
//  or:
//
//          nil
type WebACLByteMatchStatementPtrInput interface {
	pulumi.Input

	ToWebACLByteMatchStatementPtrOutput() WebACLByteMatchStatementPtrOutput
	ToWebACLByteMatchStatementPtrOutputWithContext(context.Context) WebACLByteMatchStatementPtrOutput
}

type webACLByteMatchStatementPtrType WebACLByteMatchStatementArgs

func WebACLByteMatchStatementPtr(v *WebACLByteMatchStatementArgs) WebACLByteMatchStatementPtrInput {
	return (*webACLByteMatchStatementPtrType)(v)
}

func (*webACLByteMatchStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLByteMatchStatement)(nil)).Elem()
}

func (i *webACLByteMatchStatementPtrType) ToWebACLByteMatchStatementPtrOutput() WebACLByteMatchStatementPtrOutput {
	return i.ToWebACLByteMatchStatementPtrOutputWithContext(context.Background())
}

func (i *webACLByteMatchStatementPtrType) ToWebACLByteMatchStatementPtrOutputWithContext(ctx context.Context) WebACLByteMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLByteMatchStatementPtrOutput)
}

// Byte Match statement.
type WebACLByteMatchStatementOutput struct{ *pulumi.OutputState }

func (WebACLByteMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLByteMatchStatement)(nil)).Elem()
}

func (o WebACLByteMatchStatementOutput) ToWebACLByteMatchStatementOutput() WebACLByteMatchStatementOutput {
	return o
}

func (o WebACLByteMatchStatementOutput) ToWebACLByteMatchStatementOutputWithContext(ctx context.Context) WebACLByteMatchStatementOutput {
	return o
}

func (o WebACLByteMatchStatementOutput) ToWebACLByteMatchStatementPtrOutput() WebACLByteMatchStatementPtrOutput {
	return o.ToWebACLByteMatchStatementPtrOutputWithContext(context.Background())
}

func (o WebACLByteMatchStatementOutput) ToWebACLByteMatchStatementPtrOutputWithContext(ctx context.Context) WebACLByteMatchStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLByteMatchStatement) *WebACLByteMatchStatement {
		return &v
	}).(WebACLByteMatchStatementPtrOutput)
}

func (o WebACLByteMatchStatementOutput) FieldToMatch() WebACLFieldToMatchOutput {
	return o.ApplyT(func(v WebACLByteMatchStatement) WebACLFieldToMatch { return v.FieldToMatch }).(WebACLFieldToMatchOutput)
}

func (o WebACLByteMatchStatementOutput) PositionalConstraint() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLByteMatchStatement) string { return v.PositionalConstraint }).(pulumi.StringOutput)
}

func (o WebACLByteMatchStatementOutput) SearchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebACLByteMatchStatement) *string { return v.SearchString }).(pulumi.StringPtrOutput)
}

func (o WebACLByteMatchStatementOutput) SearchStringBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebACLByteMatchStatement) *string { return v.SearchStringBase64 }).(pulumi.StringPtrOutput)
}

func (o WebACLByteMatchStatementOutput) TextTransformations() WebACLTextTransformationArrayOutput {
	return o.ApplyT(func(v WebACLByteMatchStatement) []WebACLTextTransformation { return v.TextTransformations }).(WebACLTextTransformationArrayOutput)
}

type WebACLByteMatchStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLByteMatchStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLByteMatchStatement)(nil)).Elem()
}

func (o WebACLByteMatchStatementPtrOutput) ToWebACLByteMatchStatementPtrOutput() WebACLByteMatchStatementPtrOutput {
	return o
}

func (o WebACLByteMatchStatementPtrOutput) ToWebACLByteMatchStatementPtrOutputWithContext(ctx context.Context) WebACLByteMatchStatementPtrOutput {
	return o
}

func (o WebACLByteMatchStatementPtrOutput) Elem() WebACLByteMatchStatementOutput {
	return o.ApplyT(func(v *WebACLByteMatchStatement) WebACLByteMatchStatement {
		if v != nil {
			return *v
		}
		var ret WebACLByteMatchStatement
		return ret
	}).(WebACLByteMatchStatementOutput)
}

func (o WebACLByteMatchStatementPtrOutput) FieldToMatch() WebACLFieldToMatchPtrOutput {
	return o.ApplyT(func(v *WebACLByteMatchStatement) *WebACLFieldToMatch {
		if v == nil {
			return nil
		}
		return &v.FieldToMatch
	}).(WebACLFieldToMatchPtrOutput)
}

func (o WebACLByteMatchStatementPtrOutput) PositionalConstraint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLByteMatchStatement) *string {
		if v == nil {
			return nil
		}
		return &v.PositionalConstraint
	}).(pulumi.StringPtrOutput)
}

func (o WebACLByteMatchStatementPtrOutput) SearchString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLByteMatchStatement) *string {
		if v == nil {
			return nil
		}
		return v.SearchString
	}).(pulumi.StringPtrOutput)
}

func (o WebACLByteMatchStatementPtrOutput) SearchStringBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLByteMatchStatement) *string {
		if v == nil {
			return nil
		}
		return v.SearchStringBase64
	}).(pulumi.StringPtrOutput)
}

func (o WebACLByteMatchStatementPtrOutput) TextTransformations() WebACLTextTransformationArrayOutput {
	return o.ApplyT(func(v *WebACLByteMatchStatement) []WebACLTextTransformation {
		if v == nil {
			return nil
		}
		return v.TextTransformations
	}).(WebACLTextTransformationArrayOutput)
}

// Allow traffic towards application.
type WebACLCountAction struct {
	CustomRequestHandling *WebACLCustomRequestHandling `pulumi:"customRequestHandling"`
}

// WebACLCountActionInput is an input type that accepts WebACLCountActionArgs and WebACLCountActionOutput values.
// You can construct a concrete instance of `WebACLCountActionInput` via:
//
//          WebACLCountActionArgs{...}
type WebACLCountActionInput interface {
	pulumi.Input

	ToWebACLCountActionOutput() WebACLCountActionOutput
	ToWebACLCountActionOutputWithContext(context.Context) WebACLCountActionOutput
}

// Allow traffic towards application.
type WebACLCountActionArgs struct {
	CustomRequestHandling WebACLCustomRequestHandlingPtrInput `pulumi:"customRequestHandling"`
}

func (WebACLCountActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLCountAction)(nil)).Elem()
}

func (i WebACLCountActionArgs) ToWebACLCountActionOutput() WebACLCountActionOutput {
	return i.ToWebACLCountActionOutputWithContext(context.Background())
}

func (i WebACLCountActionArgs) ToWebACLCountActionOutputWithContext(ctx context.Context) WebACLCountActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCountActionOutput)
}

func (i WebACLCountActionArgs) ToWebACLCountActionPtrOutput() WebACLCountActionPtrOutput {
	return i.ToWebACLCountActionPtrOutputWithContext(context.Background())
}

func (i WebACLCountActionArgs) ToWebACLCountActionPtrOutputWithContext(ctx context.Context) WebACLCountActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCountActionOutput).ToWebACLCountActionPtrOutputWithContext(ctx)
}

// WebACLCountActionPtrInput is an input type that accepts WebACLCountActionArgs, WebACLCountActionPtr and WebACLCountActionPtrOutput values.
// You can construct a concrete instance of `WebACLCountActionPtrInput` via:
//
//          WebACLCountActionArgs{...}
//
//  or:
//
//          nil
type WebACLCountActionPtrInput interface {
	pulumi.Input

	ToWebACLCountActionPtrOutput() WebACLCountActionPtrOutput
	ToWebACLCountActionPtrOutputWithContext(context.Context) WebACLCountActionPtrOutput
}

type webACLCountActionPtrType WebACLCountActionArgs

func WebACLCountActionPtr(v *WebACLCountActionArgs) WebACLCountActionPtrInput {
	return (*webACLCountActionPtrType)(v)
}

func (*webACLCountActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLCountAction)(nil)).Elem()
}

func (i *webACLCountActionPtrType) ToWebACLCountActionPtrOutput() WebACLCountActionPtrOutput {
	return i.ToWebACLCountActionPtrOutputWithContext(context.Background())
}

func (i *webACLCountActionPtrType) ToWebACLCountActionPtrOutputWithContext(ctx context.Context) WebACLCountActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCountActionPtrOutput)
}

// Allow traffic towards application.
type WebACLCountActionOutput struct{ *pulumi.OutputState }

func (WebACLCountActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLCountAction)(nil)).Elem()
}

func (o WebACLCountActionOutput) ToWebACLCountActionOutput() WebACLCountActionOutput {
	return o
}

func (o WebACLCountActionOutput) ToWebACLCountActionOutputWithContext(ctx context.Context) WebACLCountActionOutput {
	return o
}

func (o WebACLCountActionOutput) ToWebACLCountActionPtrOutput() WebACLCountActionPtrOutput {
	return o.ToWebACLCountActionPtrOutputWithContext(context.Background())
}

func (o WebACLCountActionOutput) ToWebACLCountActionPtrOutputWithContext(ctx context.Context) WebACLCountActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLCountAction) *WebACLCountAction {
		return &v
	}).(WebACLCountActionPtrOutput)
}

func (o WebACLCountActionOutput) CustomRequestHandling() WebACLCustomRequestHandlingPtrOutput {
	return o.ApplyT(func(v WebACLCountAction) *WebACLCustomRequestHandling { return v.CustomRequestHandling }).(WebACLCustomRequestHandlingPtrOutput)
}

type WebACLCountActionPtrOutput struct{ *pulumi.OutputState }

func (WebACLCountActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLCountAction)(nil)).Elem()
}

func (o WebACLCountActionPtrOutput) ToWebACLCountActionPtrOutput() WebACLCountActionPtrOutput {
	return o
}

func (o WebACLCountActionPtrOutput) ToWebACLCountActionPtrOutputWithContext(ctx context.Context) WebACLCountActionPtrOutput {
	return o
}

func (o WebACLCountActionPtrOutput) Elem() WebACLCountActionOutput {
	return o.ApplyT(func(v *WebACLCountAction) WebACLCountAction {
		if v != nil {
			return *v
		}
		var ret WebACLCountAction
		return ret
	}).(WebACLCountActionOutput)
}

func (o WebACLCountActionPtrOutput) CustomRequestHandling() WebACLCustomRequestHandlingPtrOutput {
	return o.ApplyT(func(v *WebACLCountAction) *WebACLCustomRequestHandling {
		if v == nil {
			return nil
		}
		return v.CustomRequestHandling
	}).(WebACLCustomRequestHandlingPtrOutput)
}

// HTTP header.
type WebACLCustomHTTPHeader struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// WebACLCustomHTTPHeaderInput is an input type that accepts WebACLCustomHTTPHeaderArgs and WebACLCustomHTTPHeaderOutput values.
// You can construct a concrete instance of `WebACLCustomHTTPHeaderInput` via:
//
//          WebACLCustomHTTPHeaderArgs{...}
type WebACLCustomHTTPHeaderInput interface {
	pulumi.Input

	ToWebACLCustomHTTPHeaderOutput() WebACLCustomHTTPHeaderOutput
	ToWebACLCustomHTTPHeaderOutputWithContext(context.Context) WebACLCustomHTTPHeaderOutput
}

// HTTP header.
type WebACLCustomHTTPHeaderArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (WebACLCustomHTTPHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLCustomHTTPHeader)(nil)).Elem()
}

func (i WebACLCustomHTTPHeaderArgs) ToWebACLCustomHTTPHeaderOutput() WebACLCustomHTTPHeaderOutput {
	return i.ToWebACLCustomHTTPHeaderOutputWithContext(context.Background())
}

func (i WebACLCustomHTTPHeaderArgs) ToWebACLCustomHTTPHeaderOutputWithContext(ctx context.Context) WebACLCustomHTTPHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCustomHTTPHeaderOutput)
}

// WebACLCustomHTTPHeaderArrayInput is an input type that accepts WebACLCustomHTTPHeaderArray and WebACLCustomHTTPHeaderArrayOutput values.
// You can construct a concrete instance of `WebACLCustomHTTPHeaderArrayInput` via:
//
//          WebACLCustomHTTPHeaderArray{ WebACLCustomHTTPHeaderArgs{...} }
type WebACLCustomHTTPHeaderArrayInput interface {
	pulumi.Input

	ToWebACLCustomHTTPHeaderArrayOutput() WebACLCustomHTTPHeaderArrayOutput
	ToWebACLCustomHTTPHeaderArrayOutputWithContext(context.Context) WebACLCustomHTTPHeaderArrayOutput
}

type WebACLCustomHTTPHeaderArray []WebACLCustomHTTPHeaderInput

func (WebACLCustomHTTPHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLCustomHTTPHeader)(nil)).Elem()
}

func (i WebACLCustomHTTPHeaderArray) ToWebACLCustomHTTPHeaderArrayOutput() WebACLCustomHTTPHeaderArrayOutput {
	return i.ToWebACLCustomHTTPHeaderArrayOutputWithContext(context.Background())
}

func (i WebACLCustomHTTPHeaderArray) ToWebACLCustomHTTPHeaderArrayOutputWithContext(ctx context.Context) WebACLCustomHTTPHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCustomHTTPHeaderArrayOutput)
}

// HTTP header.
type WebACLCustomHTTPHeaderOutput struct{ *pulumi.OutputState }

func (WebACLCustomHTTPHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLCustomHTTPHeader)(nil)).Elem()
}

func (o WebACLCustomHTTPHeaderOutput) ToWebACLCustomHTTPHeaderOutput() WebACLCustomHTTPHeaderOutput {
	return o
}

func (o WebACLCustomHTTPHeaderOutput) ToWebACLCustomHTTPHeaderOutputWithContext(ctx context.Context) WebACLCustomHTTPHeaderOutput {
	return o
}

func (o WebACLCustomHTTPHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLCustomHTTPHeader) string { return v.Name }).(pulumi.StringOutput)
}

func (o WebACLCustomHTTPHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLCustomHTTPHeader) string { return v.Value }).(pulumi.StringOutput)
}

type WebACLCustomHTTPHeaderArrayOutput struct{ *pulumi.OutputState }

func (WebACLCustomHTTPHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLCustomHTTPHeader)(nil)).Elem()
}

func (o WebACLCustomHTTPHeaderArrayOutput) ToWebACLCustomHTTPHeaderArrayOutput() WebACLCustomHTTPHeaderArrayOutput {
	return o
}

func (o WebACLCustomHTTPHeaderArrayOutput) ToWebACLCustomHTTPHeaderArrayOutputWithContext(ctx context.Context) WebACLCustomHTTPHeaderArrayOutput {
	return o
}

func (o WebACLCustomHTTPHeaderArrayOutput) Index(i pulumi.IntInput) WebACLCustomHTTPHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebACLCustomHTTPHeader {
		return vs[0].([]WebACLCustomHTTPHeader)[vs[1].(int)]
	}).(WebACLCustomHTTPHeaderOutput)
}

// Custom request handling.
type WebACLCustomRequestHandling struct {
	// Collection of HTTP headers.
	InsertHeaders []WebACLCustomHTTPHeader `pulumi:"insertHeaders"`
}

// WebACLCustomRequestHandlingInput is an input type that accepts WebACLCustomRequestHandlingArgs and WebACLCustomRequestHandlingOutput values.
// You can construct a concrete instance of `WebACLCustomRequestHandlingInput` via:
//
//          WebACLCustomRequestHandlingArgs{...}
type WebACLCustomRequestHandlingInput interface {
	pulumi.Input

	ToWebACLCustomRequestHandlingOutput() WebACLCustomRequestHandlingOutput
	ToWebACLCustomRequestHandlingOutputWithContext(context.Context) WebACLCustomRequestHandlingOutput
}

// Custom request handling.
type WebACLCustomRequestHandlingArgs struct {
	// Collection of HTTP headers.
	InsertHeaders WebACLCustomHTTPHeaderArrayInput `pulumi:"insertHeaders"`
}

func (WebACLCustomRequestHandlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLCustomRequestHandling)(nil)).Elem()
}

func (i WebACLCustomRequestHandlingArgs) ToWebACLCustomRequestHandlingOutput() WebACLCustomRequestHandlingOutput {
	return i.ToWebACLCustomRequestHandlingOutputWithContext(context.Background())
}

func (i WebACLCustomRequestHandlingArgs) ToWebACLCustomRequestHandlingOutputWithContext(ctx context.Context) WebACLCustomRequestHandlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCustomRequestHandlingOutput)
}

func (i WebACLCustomRequestHandlingArgs) ToWebACLCustomRequestHandlingPtrOutput() WebACLCustomRequestHandlingPtrOutput {
	return i.ToWebACLCustomRequestHandlingPtrOutputWithContext(context.Background())
}

func (i WebACLCustomRequestHandlingArgs) ToWebACLCustomRequestHandlingPtrOutputWithContext(ctx context.Context) WebACLCustomRequestHandlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCustomRequestHandlingOutput).ToWebACLCustomRequestHandlingPtrOutputWithContext(ctx)
}

// WebACLCustomRequestHandlingPtrInput is an input type that accepts WebACLCustomRequestHandlingArgs, WebACLCustomRequestHandlingPtr and WebACLCustomRequestHandlingPtrOutput values.
// You can construct a concrete instance of `WebACLCustomRequestHandlingPtrInput` via:
//
//          WebACLCustomRequestHandlingArgs{...}
//
//  or:
//
//          nil
type WebACLCustomRequestHandlingPtrInput interface {
	pulumi.Input

	ToWebACLCustomRequestHandlingPtrOutput() WebACLCustomRequestHandlingPtrOutput
	ToWebACLCustomRequestHandlingPtrOutputWithContext(context.Context) WebACLCustomRequestHandlingPtrOutput
}

type webACLCustomRequestHandlingPtrType WebACLCustomRequestHandlingArgs

func WebACLCustomRequestHandlingPtr(v *WebACLCustomRequestHandlingArgs) WebACLCustomRequestHandlingPtrInput {
	return (*webACLCustomRequestHandlingPtrType)(v)
}

func (*webACLCustomRequestHandlingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLCustomRequestHandling)(nil)).Elem()
}

func (i *webACLCustomRequestHandlingPtrType) ToWebACLCustomRequestHandlingPtrOutput() WebACLCustomRequestHandlingPtrOutput {
	return i.ToWebACLCustomRequestHandlingPtrOutputWithContext(context.Background())
}

func (i *webACLCustomRequestHandlingPtrType) ToWebACLCustomRequestHandlingPtrOutputWithContext(ctx context.Context) WebACLCustomRequestHandlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCustomRequestHandlingPtrOutput)
}

// Custom request handling.
type WebACLCustomRequestHandlingOutput struct{ *pulumi.OutputState }

func (WebACLCustomRequestHandlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLCustomRequestHandling)(nil)).Elem()
}

func (o WebACLCustomRequestHandlingOutput) ToWebACLCustomRequestHandlingOutput() WebACLCustomRequestHandlingOutput {
	return o
}

func (o WebACLCustomRequestHandlingOutput) ToWebACLCustomRequestHandlingOutputWithContext(ctx context.Context) WebACLCustomRequestHandlingOutput {
	return o
}

func (o WebACLCustomRequestHandlingOutput) ToWebACLCustomRequestHandlingPtrOutput() WebACLCustomRequestHandlingPtrOutput {
	return o.ToWebACLCustomRequestHandlingPtrOutputWithContext(context.Background())
}

func (o WebACLCustomRequestHandlingOutput) ToWebACLCustomRequestHandlingPtrOutputWithContext(ctx context.Context) WebACLCustomRequestHandlingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLCustomRequestHandling) *WebACLCustomRequestHandling {
		return &v
	}).(WebACLCustomRequestHandlingPtrOutput)
}

// Collection of HTTP headers.
func (o WebACLCustomRequestHandlingOutput) InsertHeaders() WebACLCustomHTTPHeaderArrayOutput {
	return o.ApplyT(func(v WebACLCustomRequestHandling) []WebACLCustomHTTPHeader { return v.InsertHeaders }).(WebACLCustomHTTPHeaderArrayOutput)
}

type WebACLCustomRequestHandlingPtrOutput struct{ *pulumi.OutputState }

func (WebACLCustomRequestHandlingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLCustomRequestHandling)(nil)).Elem()
}

func (o WebACLCustomRequestHandlingPtrOutput) ToWebACLCustomRequestHandlingPtrOutput() WebACLCustomRequestHandlingPtrOutput {
	return o
}

func (o WebACLCustomRequestHandlingPtrOutput) ToWebACLCustomRequestHandlingPtrOutputWithContext(ctx context.Context) WebACLCustomRequestHandlingPtrOutput {
	return o
}

func (o WebACLCustomRequestHandlingPtrOutput) Elem() WebACLCustomRequestHandlingOutput {
	return o.ApplyT(func(v *WebACLCustomRequestHandling) WebACLCustomRequestHandling {
		if v != nil {
			return *v
		}
		var ret WebACLCustomRequestHandling
		return ret
	}).(WebACLCustomRequestHandlingOutput)
}

// Collection of HTTP headers.
func (o WebACLCustomRequestHandlingPtrOutput) InsertHeaders() WebACLCustomHTTPHeaderArrayOutput {
	return o.ApplyT(func(v *WebACLCustomRequestHandling) []WebACLCustomHTTPHeader {
		if v == nil {
			return nil
		}
		return v.InsertHeaders
	}).(WebACLCustomHTTPHeaderArrayOutput)
}

// Custom response.
type WebACLCustomResponse struct {
	// Custom response body key.
	CustomResponseBodyKey *string `pulumi:"customResponseBodyKey"`
	ResponseCode          int     `pulumi:"responseCode"`
	// Collection of HTTP headers.
	ResponseHeaders []WebACLCustomHTTPHeader `pulumi:"responseHeaders"`
}

// WebACLCustomResponseInput is an input type that accepts WebACLCustomResponseArgs and WebACLCustomResponseOutput values.
// You can construct a concrete instance of `WebACLCustomResponseInput` via:
//
//          WebACLCustomResponseArgs{...}
type WebACLCustomResponseInput interface {
	pulumi.Input

	ToWebACLCustomResponseOutput() WebACLCustomResponseOutput
	ToWebACLCustomResponseOutputWithContext(context.Context) WebACLCustomResponseOutput
}

// Custom response.
type WebACLCustomResponseArgs struct {
	// Custom response body key.
	CustomResponseBodyKey pulumi.StringPtrInput `pulumi:"customResponseBodyKey"`
	ResponseCode          pulumi.IntInput       `pulumi:"responseCode"`
	// Collection of HTTP headers.
	ResponseHeaders WebACLCustomHTTPHeaderArrayInput `pulumi:"responseHeaders"`
}

func (WebACLCustomResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLCustomResponse)(nil)).Elem()
}

func (i WebACLCustomResponseArgs) ToWebACLCustomResponseOutput() WebACLCustomResponseOutput {
	return i.ToWebACLCustomResponseOutputWithContext(context.Background())
}

func (i WebACLCustomResponseArgs) ToWebACLCustomResponseOutputWithContext(ctx context.Context) WebACLCustomResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCustomResponseOutput)
}

func (i WebACLCustomResponseArgs) ToWebACLCustomResponsePtrOutput() WebACLCustomResponsePtrOutput {
	return i.ToWebACLCustomResponsePtrOutputWithContext(context.Background())
}

func (i WebACLCustomResponseArgs) ToWebACLCustomResponsePtrOutputWithContext(ctx context.Context) WebACLCustomResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCustomResponseOutput).ToWebACLCustomResponsePtrOutputWithContext(ctx)
}

// WebACLCustomResponsePtrInput is an input type that accepts WebACLCustomResponseArgs, WebACLCustomResponsePtr and WebACLCustomResponsePtrOutput values.
// You can construct a concrete instance of `WebACLCustomResponsePtrInput` via:
//
//          WebACLCustomResponseArgs{...}
//
//  or:
//
//          nil
type WebACLCustomResponsePtrInput interface {
	pulumi.Input

	ToWebACLCustomResponsePtrOutput() WebACLCustomResponsePtrOutput
	ToWebACLCustomResponsePtrOutputWithContext(context.Context) WebACLCustomResponsePtrOutput
}

type webACLCustomResponsePtrType WebACLCustomResponseArgs

func WebACLCustomResponsePtr(v *WebACLCustomResponseArgs) WebACLCustomResponsePtrInput {
	return (*webACLCustomResponsePtrType)(v)
}

func (*webACLCustomResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLCustomResponse)(nil)).Elem()
}

func (i *webACLCustomResponsePtrType) ToWebACLCustomResponsePtrOutput() WebACLCustomResponsePtrOutput {
	return i.ToWebACLCustomResponsePtrOutputWithContext(context.Background())
}

func (i *webACLCustomResponsePtrType) ToWebACLCustomResponsePtrOutputWithContext(ctx context.Context) WebACLCustomResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCustomResponsePtrOutput)
}

// Custom response.
type WebACLCustomResponseOutput struct{ *pulumi.OutputState }

func (WebACLCustomResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLCustomResponse)(nil)).Elem()
}

func (o WebACLCustomResponseOutput) ToWebACLCustomResponseOutput() WebACLCustomResponseOutput {
	return o
}

func (o WebACLCustomResponseOutput) ToWebACLCustomResponseOutputWithContext(ctx context.Context) WebACLCustomResponseOutput {
	return o
}

func (o WebACLCustomResponseOutput) ToWebACLCustomResponsePtrOutput() WebACLCustomResponsePtrOutput {
	return o.ToWebACLCustomResponsePtrOutputWithContext(context.Background())
}

func (o WebACLCustomResponseOutput) ToWebACLCustomResponsePtrOutputWithContext(ctx context.Context) WebACLCustomResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLCustomResponse) *WebACLCustomResponse {
		return &v
	}).(WebACLCustomResponsePtrOutput)
}

// Custom response body key.
func (o WebACLCustomResponseOutput) CustomResponseBodyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebACLCustomResponse) *string { return v.CustomResponseBodyKey }).(pulumi.StringPtrOutput)
}

func (o WebACLCustomResponseOutput) ResponseCode() pulumi.IntOutput {
	return o.ApplyT(func(v WebACLCustomResponse) int { return v.ResponseCode }).(pulumi.IntOutput)
}

// Collection of HTTP headers.
func (o WebACLCustomResponseOutput) ResponseHeaders() WebACLCustomHTTPHeaderArrayOutput {
	return o.ApplyT(func(v WebACLCustomResponse) []WebACLCustomHTTPHeader { return v.ResponseHeaders }).(WebACLCustomHTTPHeaderArrayOutput)
}

type WebACLCustomResponsePtrOutput struct{ *pulumi.OutputState }

func (WebACLCustomResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLCustomResponse)(nil)).Elem()
}

func (o WebACLCustomResponsePtrOutput) ToWebACLCustomResponsePtrOutput() WebACLCustomResponsePtrOutput {
	return o
}

func (o WebACLCustomResponsePtrOutput) ToWebACLCustomResponsePtrOutputWithContext(ctx context.Context) WebACLCustomResponsePtrOutput {
	return o
}

func (o WebACLCustomResponsePtrOutput) Elem() WebACLCustomResponseOutput {
	return o.ApplyT(func(v *WebACLCustomResponse) WebACLCustomResponse {
		if v != nil {
			return *v
		}
		var ret WebACLCustomResponse
		return ret
	}).(WebACLCustomResponseOutput)
}

// Custom response body key.
func (o WebACLCustomResponsePtrOutput) CustomResponseBodyKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLCustomResponse) *string {
		if v == nil {
			return nil
		}
		return v.CustomResponseBodyKey
	}).(pulumi.StringPtrOutput)
}

func (o WebACLCustomResponsePtrOutput) ResponseCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebACLCustomResponse) *int {
		if v == nil {
			return nil
		}
		return &v.ResponseCode
	}).(pulumi.IntPtrOutput)
}

// Collection of HTTP headers.
func (o WebACLCustomResponsePtrOutput) ResponseHeaders() WebACLCustomHTTPHeaderArrayOutput {
	return o.ApplyT(func(v *WebACLCustomResponse) []WebACLCustomHTTPHeader {
		if v == nil {
			return nil
		}
		return v.ResponseHeaders
	}).(WebACLCustomHTTPHeaderArrayOutput)
}

// Custom response key and body map.
type WebACLCustomResponseBodies struct {
}

// WebACLCustomResponseBodiesInput is an input type that accepts WebACLCustomResponseBodiesArgs and WebACLCustomResponseBodiesOutput values.
// You can construct a concrete instance of `WebACLCustomResponseBodiesInput` via:
//
//          WebACLCustomResponseBodiesArgs{...}
type WebACLCustomResponseBodiesInput interface {
	pulumi.Input

	ToWebACLCustomResponseBodiesOutput() WebACLCustomResponseBodiesOutput
	ToWebACLCustomResponseBodiesOutputWithContext(context.Context) WebACLCustomResponseBodiesOutput
}

// Custom response key and body map.
type WebACLCustomResponseBodiesArgs struct {
}

func (WebACLCustomResponseBodiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLCustomResponseBodies)(nil)).Elem()
}

func (i WebACLCustomResponseBodiesArgs) ToWebACLCustomResponseBodiesOutput() WebACLCustomResponseBodiesOutput {
	return i.ToWebACLCustomResponseBodiesOutputWithContext(context.Background())
}

func (i WebACLCustomResponseBodiesArgs) ToWebACLCustomResponseBodiesOutputWithContext(ctx context.Context) WebACLCustomResponseBodiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCustomResponseBodiesOutput)
}

func (i WebACLCustomResponseBodiesArgs) ToWebACLCustomResponseBodiesPtrOutput() WebACLCustomResponseBodiesPtrOutput {
	return i.ToWebACLCustomResponseBodiesPtrOutputWithContext(context.Background())
}

func (i WebACLCustomResponseBodiesArgs) ToWebACLCustomResponseBodiesPtrOutputWithContext(ctx context.Context) WebACLCustomResponseBodiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCustomResponseBodiesOutput).ToWebACLCustomResponseBodiesPtrOutputWithContext(ctx)
}

// WebACLCustomResponseBodiesPtrInput is an input type that accepts WebACLCustomResponseBodiesArgs, WebACLCustomResponseBodiesPtr and WebACLCustomResponseBodiesPtrOutput values.
// You can construct a concrete instance of `WebACLCustomResponseBodiesPtrInput` via:
//
//          WebACLCustomResponseBodiesArgs{...}
//
//  or:
//
//          nil
type WebACLCustomResponseBodiesPtrInput interface {
	pulumi.Input

	ToWebACLCustomResponseBodiesPtrOutput() WebACLCustomResponseBodiesPtrOutput
	ToWebACLCustomResponseBodiesPtrOutputWithContext(context.Context) WebACLCustomResponseBodiesPtrOutput
}

type webACLCustomResponseBodiesPtrType WebACLCustomResponseBodiesArgs

func WebACLCustomResponseBodiesPtr(v *WebACLCustomResponseBodiesArgs) WebACLCustomResponseBodiesPtrInput {
	return (*webACLCustomResponseBodiesPtrType)(v)
}

func (*webACLCustomResponseBodiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLCustomResponseBodies)(nil)).Elem()
}

func (i *webACLCustomResponseBodiesPtrType) ToWebACLCustomResponseBodiesPtrOutput() WebACLCustomResponseBodiesPtrOutput {
	return i.ToWebACLCustomResponseBodiesPtrOutputWithContext(context.Background())
}

func (i *webACLCustomResponseBodiesPtrType) ToWebACLCustomResponseBodiesPtrOutputWithContext(ctx context.Context) WebACLCustomResponseBodiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLCustomResponseBodiesPtrOutput)
}

// Custom response key and body map.
type WebACLCustomResponseBodiesOutput struct{ *pulumi.OutputState }

func (WebACLCustomResponseBodiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLCustomResponseBodies)(nil)).Elem()
}

func (o WebACLCustomResponseBodiesOutput) ToWebACLCustomResponseBodiesOutput() WebACLCustomResponseBodiesOutput {
	return o
}

func (o WebACLCustomResponseBodiesOutput) ToWebACLCustomResponseBodiesOutputWithContext(ctx context.Context) WebACLCustomResponseBodiesOutput {
	return o
}

func (o WebACLCustomResponseBodiesOutput) ToWebACLCustomResponseBodiesPtrOutput() WebACLCustomResponseBodiesPtrOutput {
	return o.ToWebACLCustomResponseBodiesPtrOutputWithContext(context.Background())
}

func (o WebACLCustomResponseBodiesOutput) ToWebACLCustomResponseBodiesPtrOutputWithContext(ctx context.Context) WebACLCustomResponseBodiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLCustomResponseBodies) *WebACLCustomResponseBodies {
		return &v
	}).(WebACLCustomResponseBodiesPtrOutput)
}

type WebACLCustomResponseBodiesPtrOutput struct{ *pulumi.OutputState }

func (WebACLCustomResponseBodiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLCustomResponseBodies)(nil)).Elem()
}

func (o WebACLCustomResponseBodiesPtrOutput) ToWebACLCustomResponseBodiesPtrOutput() WebACLCustomResponseBodiesPtrOutput {
	return o
}

func (o WebACLCustomResponseBodiesPtrOutput) ToWebACLCustomResponseBodiesPtrOutputWithContext(ctx context.Context) WebACLCustomResponseBodiesPtrOutput {
	return o
}

func (o WebACLCustomResponseBodiesPtrOutput) Elem() WebACLCustomResponseBodiesOutput {
	return o.ApplyT(func(v *WebACLCustomResponseBodies) WebACLCustomResponseBodies {
		if v != nil {
			return *v
		}
		var ret WebACLCustomResponseBodies
		return ret
	}).(WebACLCustomResponseBodiesOutput)
}

// Default Action WebACL will take against ingress traffic when there is no matching Rule.
type WebACLDefaultAction struct {
	Allow *WebACLAllowAction `pulumi:"allow"`
	Block *WebACLBlockAction `pulumi:"block"`
}

// WebACLDefaultActionInput is an input type that accepts WebACLDefaultActionArgs and WebACLDefaultActionOutput values.
// You can construct a concrete instance of `WebACLDefaultActionInput` via:
//
//          WebACLDefaultActionArgs{...}
type WebACLDefaultActionInput interface {
	pulumi.Input

	ToWebACLDefaultActionOutput() WebACLDefaultActionOutput
	ToWebACLDefaultActionOutputWithContext(context.Context) WebACLDefaultActionOutput
}

// Default Action WebACL will take against ingress traffic when there is no matching Rule.
type WebACLDefaultActionArgs struct {
	Allow WebACLAllowActionPtrInput `pulumi:"allow"`
	Block WebACLBlockActionPtrInput `pulumi:"block"`
}

func (WebACLDefaultActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLDefaultAction)(nil)).Elem()
}

func (i WebACLDefaultActionArgs) ToWebACLDefaultActionOutput() WebACLDefaultActionOutput {
	return i.ToWebACLDefaultActionOutputWithContext(context.Background())
}

func (i WebACLDefaultActionArgs) ToWebACLDefaultActionOutputWithContext(ctx context.Context) WebACLDefaultActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLDefaultActionOutput)
}

func (i WebACLDefaultActionArgs) ToWebACLDefaultActionPtrOutput() WebACLDefaultActionPtrOutput {
	return i.ToWebACLDefaultActionPtrOutputWithContext(context.Background())
}

func (i WebACLDefaultActionArgs) ToWebACLDefaultActionPtrOutputWithContext(ctx context.Context) WebACLDefaultActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLDefaultActionOutput).ToWebACLDefaultActionPtrOutputWithContext(ctx)
}

// WebACLDefaultActionPtrInput is an input type that accepts WebACLDefaultActionArgs, WebACLDefaultActionPtr and WebACLDefaultActionPtrOutput values.
// You can construct a concrete instance of `WebACLDefaultActionPtrInput` via:
//
//          WebACLDefaultActionArgs{...}
//
//  or:
//
//          nil
type WebACLDefaultActionPtrInput interface {
	pulumi.Input

	ToWebACLDefaultActionPtrOutput() WebACLDefaultActionPtrOutput
	ToWebACLDefaultActionPtrOutputWithContext(context.Context) WebACLDefaultActionPtrOutput
}

type webACLDefaultActionPtrType WebACLDefaultActionArgs

func WebACLDefaultActionPtr(v *WebACLDefaultActionArgs) WebACLDefaultActionPtrInput {
	return (*webACLDefaultActionPtrType)(v)
}

func (*webACLDefaultActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLDefaultAction)(nil)).Elem()
}

func (i *webACLDefaultActionPtrType) ToWebACLDefaultActionPtrOutput() WebACLDefaultActionPtrOutput {
	return i.ToWebACLDefaultActionPtrOutputWithContext(context.Background())
}

func (i *webACLDefaultActionPtrType) ToWebACLDefaultActionPtrOutputWithContext(ctx context.Context) WebACLDefaultActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLDefaultActionPtrOutput)
}

// Default Action WebACL will take against ingress traffic when there is no matching Rule.
type WebACLDefaultActionOutput struct{ *pulumi.OutputState }

func (WebACLDefaultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLDefaultAction)(nil)).Elem()
}

func (o WebACLDefaultActionOutput) ToWebACLDefaultActionOutput() WebACLDefaultActionOutput {
	return o
}

func (o WebACLDefaultActionOutput) ToWebACLDefaultActionOutputWithContext(ctx context.Context) WebACLDefaultActionOutput {
	return o
}

func (o WebACLDefaultActionOutput) ToWebACLDefaultActionPtrOutput() WebACLDefaultActionPtrOutput {
	return o.ToWebACLDefaultActionPtrOutputWithContext(context.Background())
}

func (o WebACLDefaultActionOutput) ToWebACLDefaultActionPtrOutputWithContext(ctx context.Context) WebACLDefaultActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLDefaultAction) *WebACLDefaultAction {
		return &v
	}).(WebACLDefaultActionPtrOutput)
}

func (o WebACLDefaultActionOutput) Allow() WebACLAllowActionPtrOutput {
	return o.ApplyT(func(v WebACLDefaultAction) *WebACLAllowAction { return v.Allow }).(WebACLAllowActionPtrOutput)
}

func (o WebACLDefaultActionOutput) Block() WebACLBlockActionPtrOutput {
	return o.ApplyT(func(v WebACLDefaultAction) *WebACLBlockAction { return v.Block }).(WebACLBlockActionPtrOutput)
}

type WebACLDefaultActionPtrOutput struct{ *pulumi.OutputState }

func (WebACLDefaultActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLDefaultAction)(nil)).Elem()
}

func (o WebACLDefaultActionPtrOutput) ToWebACLDefaultActionPtrOutput() WebACLDefaultActionPtrOutput {
	return o
}

func (o WebACLDefaultActionPtrOutput) ToWebACLDefaultActionPtrOutputWithContext(ctx context.Context) WebACLDefaultActionPtrOutput {
	return o
}

func (o WebACLDefaultActionPtrOutput) Elem() WebACLDefaultActionOutput {
	return o.ApplyT(func(v *WebACLDefaultAction) WebACLDefaultAction {
		if v != nil {
			return *v
		}
		var ret WebACLDefaultAction
		return ret
	}).(WebACLDefaultActionOutput)
}

func (o WebACLDefaultActionPtrOutput) Allow() WebACLAllowActionPtrOutput {
	return o.ApplyT(func(v *WebACLDefaultAction) *WebACLAllowAction {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(WebACLAllowActionPtrOutput)
}

func (o WebACLDefaultActionPtrOutput) Block() WebACLBlockActionPtrOutput {
	return o.ApplyT(func(v *WebACLDefaultAction) *WebACLBlockAction {
		if v == nil {
			return nil
		}
		return v.Block
	}).(WebACLBlockActionPtrOutput)
}

// Excluded Rule in the RuleGroup or ManagedRuleGroup will not be evaluated.
type WebACLExcludedRule struct {
	Name string `pulumi:"name"`
}

// WebACLExcludedRuleInput is an input type that accepts WebACLExcludedRuleArgs and WebACLExcludedRuleOutput values.
// You can construct a concrete instance of `WebACLExcludedRuleInput` via:
//
//          WebACLExcludedRuleArgs{...}
type WebACLExcludedRuleInput interface {
	pulumi.Input

	ToWebACLExcludedRuleOutput() WebACLExcludedRuleOutput
	ToWebACLExcludedRuleOutputWithContext(context.Context) WebACLExcludedRuleOutput
}

// Excluded Rule in the RuleGroup or ManagedRuleGroup will not be evaluated.
type WebACLExcludedRuleArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (WebACLExcludedRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLExcludedRule)(nil)).Elem()
}

func (i WebACLExcludedRuleArgs) ToWebACLExcludedRuleOutput() WebACLExcludedRuleOutput {
	return i.ToWebACLExcludedRuleOutputWithContext(context.Background())
}

func (i WebACLExcludedRuleArgs) ToWebACLExcludedRuleOutputWithContext(ctx context.Context) WebACLExcludedRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLExcludedRuleOutput)
}

// WebACLExcludedRuleArrayInput is an input type that accepts WebACLExcludedRuleArray and WebACLExcludedRuleArrayOutput values.
// You can construct a concrete instance of `WebACLExcludedRuleArrayInput` via:
//
//          WebACLExcludedRuleArray{ WebACLExcludedRuleArgs{...} }
type WebACLExcludedRuleArrayInput interface {
	pulumi.Input

	ToWebACLExcludedRuleArrayOutput() WebACLExcludedRuleArrayOutput
	ToWebACLExcludedRuleArrayOutputWithContext(context.Context) WebACLExcludedRuleArrayOutput
}

type WebACLExcludedRuleArray []WebACLExcludedRuleInput

func (WebACLExcludedRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLExcludedRule)(nil)).Elem()
}

func (i WebACLExcludedRuleArray) ToWebACLExcludedRuleArrayOutput() WebACLExcludedRuleArrayOutput {
	return i.ToWebACLExcludedRuleArrayOutputWithContext(context.Background())
}

func (i WebACLExcludedRuleArray) ToWebACLExcludedRuleArrayOutputWithContext(ctx context.Context) WebACLExcludedRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLExcludedRuleArrayOutput)
}

// Excluded Rule in the RuleGroup or ManagedRuleGroup will not be evaluated.
type WebACLExcludedRuleOutput struct{ *pulumi.OutputState }

func (WebACLExcludedRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLExcludedRule)(nil)).Elem()
}

func (o WebACLExcludedRuleOutput) ToWebACLExcludedRuleOutput() WebACLExcludedRuleOutput {
	return o
}

func (o WebACLExcludedRuleOutput) ToWebACLExcludedRuleOutputWithContext(ctx context.Context) WebACLExcludedRuleOutput {
	return o
}

func (o WebACLExcludedRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLExcludedRule) string { return v.Name }).(pulumi.StringOutput)
}

type WebACLExcludedRuleArrayOutput struct{ *pulumi.OutputState }

func (WebACLExcludedRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLExcludedRule)(nil)).Elem()
}

func (o WebACLExcludedRuleArrayOutput) ToWebACLExcludedRuleArrayOutput() WebACLExcludedRuleArrayOutput {
	return o
}

func (o WebACLExcludedRuleArrayOutput) ToWebACLExcludedRuleArrayOutputWithContext(ctx context.Context) WebACLExcludedRuleArrayOutput {
	return o
}

func (o WebACLExcludedRuleArrayOutput) Index(i pulumi.IntInput) WebACLExcludedRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebACLExcludedRule {
		return vs[0].([]WebACLExcludedRule)[vs[1].(int)]
	}).(WebACLExcludedRuleOutput)
}

// Field of the request to match.
type WebACLFieldToMatch struct {
	// All query arguments of a web request.
	AllQueryArguments interface{} `pulumi:"allQueryArguments"`
	// The body of a web request. This immediately follows the request headers.
	Body     interface{}     `pulumi:"body"`
	JsonBody *WebACLJsonBody `pulumi:"jsonBody"`
	// The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.
	Method interface{} `pulumi:"method"`
	// The query string of a web request. This is the part of a URL that appears after a ? character, if any.
	QueryString  interface{} `pulumi:"queryString"`
	SingleHeader interface{} `pulumi:"singleHeader"`
	// One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
	SingleQueryArgument interface{} `pulumi:"singleQueryArgument"`
	// The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
	UriPath interface{} `pulumi:"uriPath"`
}

// WebACLFieldToMatchInput is an input type that accepts WebACLFieldToMatchArgs and WebACLFieldToMatchOutput values.
// You can construct a concrete instance of `WebACLFieldToMatchInput` via:
//
//          WebACLFieldToMatchArgs{...}
type WebACLFieldToMatchInput interface {
	pulumi.Input

	ToWebACLFieldToMatchOutput() WebACLFieldToMatchOutput
	ToWebACLFieldToMatchOutputWithContext(context.Context) WebACLFieldToMatchOutput
}

// Field of the request to match.
type WebACLFieldToMatchArgs struct {
	// All query arguments of a web request.
	AllQueryArguments pulumi.Input `pulumi:"allQueryArguments"`
	// The body of a web request. This immediately follows the request headers.
	Body     pulumi.Input           `pulumi:"body"`
	JsonBody WebACLJsonBodyPtrInput `pulumi:"jsonBody"`
	// The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.
	Method pulumi.Input `pulumi:"method"`
	// The query string of a web request. This is the part of a URL that appears after a ? character, if any.
	QueryString  pulumi.Input `pulumi:"queryString"`
	SingleHeader pulumi.Input `pulumi:"singleHeader"`
	// One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
	SingleQueryArgument pulumi.Input `pulumi:"singleQueryArgument"`
	// The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
	UriPath pulumi.Input `pulumi:"uriPath"`
}

func (WebACLFieldToMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLFieldToMatch)(nil)).Elem()
}

func (i WebACLFieldToMatchArgs) ToWebACLFieldToMatchOutput() WebACLFieldToMatchOutput {
	return i.ToWebACLFieldToMatchOutputWithContext(context.Background())
}

func (i WebACLFieldToMatchArgs) ToWebACLFieldToMatchOutputWithContext(ctx context.Context) WebACLFieldToMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLFieldToMatchOutput)
}

func (i WebACLFieldToMatchArgs) ToWebACLFieldToMatchPtrOutput() WebACLFieldToMatchPtrOutput {
	return i.ToWebACLFieldToMatchPtrOutputWithContext(context.Background())
}

func (i WebACLFieldToMatchArgs) ToWebACLFieldToMatchPtrOutputWithContext(ctx context.Context) WebACLFieldToMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLFieldToMatchOutput).ToWebACLFieldToMatchPtrOutputWithContext(ctx)
}

// WebACLFieldToMatchPtrInput is an input type that accepts WebACLFieldToMatchArgs, WebACLFieldToMatchPtr and WebACLFieldToMatchPtrOutput values.
// You can construct a concrete instance of `WebACLFieldToMatchPtrInput` via:
//
//          WebACLFieldToMatchArgs{...}
//
//  or:
//
//          nil
type WebACLFieldToMatchPtrInput interface {
	pulumi.Input

	ToWebACLFieldToMatchPtrOutput() WebACLFieldToMatchPtrOutput
	ToWebACLFieldToMatchPtrOutputWithContext(context.Context) WebACLFieldToMatchPtrOutput
}

type webACLFieldToMatchPtrType WebACLFieldToMatchArgs

func WebACLFieldToMatchPtr(v *WebACLFieldToMatchArgs) WebACLFieldToMatchPtrInput {
	return (*webACLFieldToMatchPtrType)(v)
}

func (*webACLFieldToMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLFieldToMatch)(nil)).Elem()
}

func (i *webACLFieldToMatchPtrType) ToWebACLFieldToMatchPtrOutput() WebACLFieldToMatchPtrOutput {
	return i.ToWebACLFieldToMatchPtrOutputWithContext(context.Background())
}

func (i *webACLFieldToMatchPtrType) ToWebACLFieldToMatchPtrOutputWithContext(ctx context.Context) WebACLFieldToMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLFieldToMatchPtrOutput)
}

// Field of the request to match.
type WebACLFieldToMatchOutput struct{ *pulumi.OutputState }

func (WebACLFieldToMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLFieldToMatch)(nil)).Elem()
}

func (o WebACLFieldToMatchOutput) ToWebACLFieldToMatchOutput() WebACLFieldToMatchOutput {
	return o
}

func (o WebACLFieldToMatchOutput) ToWebACLFieldToMatchOutputWithContext(ctx context.Context) WebACLFieldToMatchOutput {
	return o
}

func (o WebACLFieldToMatchOutput) ToWebACLFieldToMatchPtrOutput() WebACLFieldToMatchPtrOutput {
	return o.ToWebACLFieldToMatchPtrOutputWithContext(context.Background())
}

func (o WebACLFieldToMatchOutput) ToWebACLFieldToMatchPtrOutputWithContext(ctx context.Context) WebACLFieldToMatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLFieldToMatch) *WebACLFieldToMatch {
		return &v
	}).(WebACLFieldToMatchPtrOutput)
}

// All query arguments of a web request.
func (o WebACLFieldToMatchOutput) AllQueryArguments() pulumi.AnyOutput {
	return o.ApplyT(func(v WebACLFieldToMatch) interface{} { return v.AllQueryArguments }).(pulumi.AnyOutput)
}

// The body of a web request. This immediately follows the request headers.
func (o WebACLFieldToMatchOutput) Body() pulumi.AnyOutput {
	return o.ApplyT(func(v WebACLFieldToMatch) interface{} { return v.Body }).(pulumi.AnyOutput)
}

func (o WebACLFieldToMatchOutput) JsonBody() WebACLJsonBodyPtrOutput {
	return o.ApplyT(func(v WebACLFieldToMatch) *WebACLJsonBody { return v.JsonBody }).(WebACLJsonBodyPtrOutput)
}

// The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.
func (o WebACLFieldToMatchOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v WebACLFieldToMatch) interface{} { return v.Method }).(pulumi.AnyOutput)
}

// The query string of a web request. This is the part of a URL that appears after a ? character, if any.
func (o WebACLFieldToMatchOutput) QueryString() pulumi.AnyOutput {
	return o.ApplyT(func(v WebACLFieldToMatch) interface{} { return v.QueryString }).(pulumi.AnyOutput)
}

func (o WebACLFieldToMatchOutput) SingleHeader() pulumi.AnyOutput {
	return o.ApplyT(func(v WebACLFieldToMatch) interface{} { return v.SingleHeader }).(pulumi.AnyOutput)
}

// One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
func (o WebACLFieldToMatchOutput) SingleQueryArgument() pulumi.AnyOutput {
	return o.ApplyT(func(v WebACLFieldToMatch) interface{} { return v.SingleQueryArgument }).(pulumi.AnyOutput)
}

// The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
func (o WebACLFieldToMatchOutput) UriPath() pulumi.AnyOutput {
	return o.ApplyT(func(v WebACLFieldToMatch) interface{} { return v.UriPath }).(pulumi.AnyOutput)
}

type WebACLFieldToMatchPtrOutput struct{ *pulumi.OutputState }

func (WebACLFieldToMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLFieldToMatch)(nil)).Elem()
}

func (o WebACLFieldToMatchPtrOutput) ToWebACLFieldToMatchPtrOutput() WebACLFieldToMatchPtrOutput {
	return o
}

func (o WebACLFieldToMatchPtrOutput) ToWebACLFieldToMatchPtrOutputWithContext(ctx context.Context) WebACLFieldToMatchPtrOutput {
	return o
}

func (o WebACLFieldToMatchPtrOutput) Elem() WebACLFieldToMatchOutput {
	return o.ApplyT(func(v *WebACLFieldToMatch) WebACLFieldToMatch {
		if v != nil {
			return *v
		}
		var ret WebACLFieldToMatch
		return ret
	}).(WebACLFieldToMatchOutput)
}

// All query arguments of a web request.
func (o WebACLFieldToMatchPtrOutput) AllQueryArguments() pulumi.AnyOutput {
	return o.ApplyT(func(v *WebACLFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.AllQueryArguments
	}).(pulumi.AnyOutput)
}

// The body of a web request. This immediately follows the request headers.
func (o WebACLFieldToMatchPtrOutput) Body() pulumi.AnyOutput {
	return o.ApplyT(func(v *WebACLFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.AnyOutput)
}

func (o WebACLFieldToMatchPtrOutput) JsonBody() WebACLJsonBodyPtrOutput {
	return o.ApplyT(func(v *WebACLFieldToMatch) *WebACLJsonBody {
		if v == nil {
			return nil
		}
		return v.JsonBody
	}).(WebACLJsonBodyPtrOutput)
}

// The HTTP method of a web request. The method indicates the type of operation that the request is asking the origin to perform.
func (o WebACLFieldToMatchPtrOutput) Method() pulumi.AnyOutput {
	return o.ApplyT(func(v *WebACLFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.AnyOutput)
}

// The query string of a web request. This is the part of a URL that appears after a ? character, if any.
func (o WebACLFieldToMatchPtrOutput) QueryString() pulumi.AnyOutput {
	return o.ApplyT(func(v *WebACLFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.QueryString
	}).(pulumi.AnyOutput)
}

func (o WebACLFieldToMatchPtrOutput) SingleHeader() pulumi.AnyOutput {
	return o.ApplyT(func(v *WebACLFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.SingleHeader
	}).(pulumi.AnyOutput)
}

// One query argument in a web request, identified by name, for example UserName or SalesRegion. The name can be up to 30 characters long and isn't case sensitive.
func (o WebACLFieldToMatchPtrOutput) SingleQueryArgument() pulumi.AnyOutput {
	return o.ApplyT(func(v *WebACLFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.SingleQueryArgument
	}).(pulumi.AnyOutput)
}

// The path component of the URI of a web request. This is the part of a web request that identifies a resource, for example, /images/daily-ad.jpg.
func (o WebACLFieldToMatchPtrOutput) UriPath() pulumi.AnyOutput {
	return o.ApplyT(func(v *WebACLFieldToMatch) interface{} {
		if v == nil {
			return nil
		}
		return v.UriPath
	}).(pulumi.AnyOutput)
}

type WebACLForwardedIPConfiguration struct {
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	HeaderName       string `pulumi:"headerName"`
}

// WebACLForwardedIPConfigurationInput is an input type that accepts WebACLForwardedIPConfigurationArgs and WebACLForwardedIPConfigurationOutput values.
// You can construct a concrete instance of `WebACLForwardedIPConfigurationInput` via:
//
//          WebACLForwardedIPConfigurationArgs{...}
type WebACLForwardedIPConfigurationInput interface {
	pulumi.Input

	ToWebACLForwardedIPConfigurationOutput() WebACLForwardedIPConfigurationOutput
	ToWebACLForwardedIPConfigurationOutputWithContext(context.Context) WebACLForwardedIPConfigurationOutput
}

type WebACLForwardedIPConfigurationArgs struct {
	FallbackBehavior pulumi.StringInput `pulumi:"fallbackBehavior"`
	HeaderName       pulumi.StringInput `pulumi:"headerName"`
}

func (WebACLForwardedIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLForwardedIPConfiguration)(nil)).Elem()
}

func (i WebACLForwardedIPConfigurationArgs) ToWebACLForwardedIPConfigurationOutput() WebACLForwardedIPConfigurationOutput {
	return i.ToWebACLForwardedIPConfigurationOutputWithContext(context.Background())
}

func (i WebACLForwardedIPConfigurationArgs) ToWebACLForwardedIPConfigurationOutputWithContext(ctx context.Context) WebACLForwardedIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLForwardedIPConfigurationOutput)
}

func (i WebACLForwardedIPConfigurationArgs) ToWebACLForwardedIPConfigurationPtrOutput() WebACLForwardedIPConfigurationPtrOutput {
	return i.ToWebACLForwardedIPConfigurationPtrOutputWithContext(context.Background())
}

func (i WebACLForwardedIPConfigurationArgs) ToWebACLForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) WebACLForwardedIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLForwardedIPConfigurationOutput).ToWebACLForwardedIPConfigurationPtrOutputWithContext(ctx)
}

// WebACLForwardedIPConfigurationPtrInput is an input type that accepts WebACLForwardedIPConfigurationArgs, WebACLForwardedIPConfigurationPtr and WebACLForwardedIPConfigurationPtrOutput values.
// You can construct a concrete instance of `WebACLForwardedIPConfigurationPtrInput` via:
//
//          WebACLForwardedIPConfigurationArgs{...}
//
//  or:
//
//          nil
type WebACLForwardedIPConfigurationPtrInput interface {
	pulumi.Input

	ToWebACLForwardedIPConfigurationPtrOutput() WebACLForwardedIPConfigurationPtrOutput
	ToWebACLForwardedIPConfigurationPtrOutputWithContext(context.Context) WebACLForwardedIPConfigurationPtrOutput
}

type webACLForwardedIPConfigurationPtrType WebACLForwardedIPConfigurationArgs

func WebACLForwardedIPConfigurationPtr(v *WebACLForwardedIPConfigurationArgs) WebACLForwardedIPConfigurationPtrInput {
	return (*webACLForwardedIPConfigurationPtrType)(v)
}

func (*webACLForwardedIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLForwardedIPConfiguration)(nil)).Elem()
}

func (i *webACLForwardedIPConfigurationPtrType) ToWebACLForwardedIPConfigurationPtrOutput() WebACLForwardedIPConfigurationPtrOutput {
	return i.ToWebACLForwardedIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *webACLForwardedIPConfigurationPtrType) ToWebACLForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) WebACLForwardedIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLForwardedIPConfigurationPtrOutput)
}

type WebACLForwardedIPConfigurationOutput struct{ *pulumi.OutputState }

func (WebACLForwardedIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLForwardedIPConfiguration)(nil)).Elem()
}

func (o WebACLForwardedIPConfigurationOutput) ToWebACLForwardedIPConfigurationOutput() WebACLForwardedIPConfigurationOutput {
	return o
}

func (o WebACLForwardedIPConfigurationOutput) ToWebACLForwardedIPConfigurationOutputWithContext(ctx context.Context) WebACLForwardedIPConfigurationOutput {
	return o
}

func (o WebACLForwardedIPConfigurationOutput) ToWebACLForwardedIPConfigurationPtrOutput() WebACLForwardedIPConfigurationPtrOutput {
	return o.ToWebACLForwardedIPConfigurationPtrOutputWithContext(context.Background())
}

func (o WebACLForwardedIPConfigurationOutput) ToWebACLForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) WebACLForwardedIPConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLForwardedIPConfiguration) *WebACLForwardedIPConfiguration {
		return &v
	}).(WebACLForwardedIPConfigurationPtrOutput)
}

func (o WebACLForwardedIPConfigurationOutput) FallbackBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLForwardedIPConfiguration) string { return v.FallbackBehavior }).(pulumi.StringOutput)
}

func (o WebACLForwardedIPConfigurationOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLForwardedIPConfiguration) string { return v.HeaderName }).(pulumi.StringOutput)
}

type WebACLForwardedIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WebACLForwardedIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLForwardedIPConfiguration)(nil)).Elem()
}

func (o WebACLForwardedIPConfigurationPtrOutput) ToWebACLForwardedIPConfigurationPtrOutput() WebACLForwardedIPConfigurationPtrOutput {
	return o
}

func (o WebACLForwardedIPConfigurationPtrOutput) ToWebACLForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) WebACLForwardedIPConfigurationPtrOutput {
	return o
}

func (o WebACLForwardedIPConfigurationPtrOutput) Elem() WebACLForwardedIPConfigurationOutput {
	return o.ApplyT(func(v *WebACLForwardedIPConfiguration) WebACLForwardedIPConfiguration {
		if v != nil {
			return *v
		}
		var ret WebACLForwardedIPConfiguration
		return ret
	}).(WebACLForwardedIPConfigurationOutput)
}

func (o WebACLForwardedIPConfigurationPtrOutput) FallbackBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLForwardedIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.FallbackBehavior
	}).(pulumi.StringPtrOutput)
}

func (o WebACLForwardedIPConfigurationPtrOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLForwardedIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.HeaderName
	}).(pulumi.StringPtrOutput)
}

type WebACLGeoMatchStatement struct {
	CountryCodes      []string                        `pulumi:"countryCodes"`
	ForwardedIPConfig *WebACLForwardedIPConfiguration `pulumi:"forwardedIPConfig"`
}

// WebACLGeoMatchStatementInput is an input type that accepts WebACLGeoMatchStatementArgs and WebACLGeoMatchStatementOutput values.
// You can construct a concrete instance of `WebACLGeoMatchStatementInput` via:
//
//          WebACLGeoMatchStatementArgs{...}
type WebACLGeoMatchStatementInput interface {
	pulumi.Input

	ToWebACLGeoMatchStatementOutput() WebACLGeoMatchStatementOutput
	ToWebACLGeoMatchStatementOutputWithContext(context.Context) WebACLGeoMatchStatementOutput
}

type WebACLGeoMatchStatementArgs struct {
	CountryCodes      pulumi.StringArrayInput                `pulumi:"countryCodes"`
	ForwardedIPConfig WebACLForwardedIPConfigurationPtrInput `pulumi:"forwardedIPConfig"`
}

func (WebACLGeoMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLGeoMatchStatement)(nil)).Elem()
}

func (i WebACLGeoMatchStatementArgs) ToWebACLGeoMatchStatementOutput() WebACLGeoMatchStatementOutput {
	return i.ToWebACLGeoMatchStatementOutputWithContext(context.Background())
}

func (i WebACLGeoMatchStatementArgs) ToWebACLGeoMatchStatementOutputWithContext(ctx context.Context) WebACLGeoMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLGeoMatchStatementOutput)
}

func (i WebACLGeoMatchStatementArgs) ToWebACLGeoMatchStatementPtrOutput() WebACLGeoMatchStatementPtrOutput {
	return i.ToWebACLGeoMatchStatementPtrOutputWithContext(context.Background())
}

func (i WebACLGeoMatchStatementArgs) ToWebACLGeoMatchStatementPtrOutputWithContext(ctx context.Context) WebACLGeoMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLGeoMatchStatementOutput).ToWebACLGeoMatchStatementPtrOutputWithContext(ctx)
}

// WebACLGeoMatchStatementPtrInput is an input type that accepts WebACLGeoMatchStatementArgs, WebACLGeoMatchStatementPtr and WebACLGeoMatchStatementPtrOutput values.
// You can construct a concrete instance of `WebACLGeoMatchStatementPtrInput` via:
//
//          WebACLGeoMatchStatementArgs{...}
//
//  or:
//
//          nil
type WebACLGeoMatchStatementPtrInput interface {
	pulumi.Input

	ToWebACLGeoMatchStatementPtrOutput() WebACLGeoMatchStatementPtrOutput
	ToWebACLGeoMatchStatementPtrOutputWithContext(context.Context) WebACLGeoMatchStatementPtrOutput
}

type webACLGeoMatchStatementPtrType WebACLGeoMatchStatementArgs

func WebACLGeoMatchStatementPtr(v *WebACLGeoMatchStatementArgs) WebACLGeoMatchStatementPtrInput {
	return (*webACLGeoMatchStatementPtrType)(v)
}

func (*webACLGeoMatchStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLGeoMatchStatement)(nil)).Elem()
}

func (i *webACLGeoMatchStatementPtrType) ToWebACLGeoMatchStatementPtrOutput() WebACLGeoMatchStatementPtrOutput {
	return i.ToWebACLGeoMatchStatementPtrOutputWithContext(context.Background())
}

func (i *webACLGeoMatchStatementPtrType) ToWebACLGeoMatchStatementPtrOutputWithContext(ctx context.Context) WebACLGeoMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLGeoMatchStatementPtrOutput)
}

type WebACLGeoMatchStatementOutput struct{ *pulumi.OutputState }

func (WebACLGeoMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLGeoMatchStatement)(nil)).Elem()
}

func (o WebACLGeoMatchStatementOutput) ToWebACLGeoMatchStatementOutput() WebACLGeoMatchStatementOutput {
	return o
}

func (o WebACLGeoMatchStatementOutput) ToWebACLGeoMatchStatementOutputWithContext(ctx context.Context) WebACLGeoMatchStatementOutput {
	return o
}

func (o WebACLGeoMatchStatementOutput) ToWebACLGeoMatchStatementPtrOutput() WebACLGeoMatchStatementPtrOutput {
	return o.ToWebACLGeoMatchStatementPtrOutputWithContext(context.Background())
}

func (o WebACLGeoMatchStatementOutput) ToWebACLGeoMatchStatementPtrOutputWithContext(ctx context.Context) WebACLGeoMatchStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLGeoMatchStatement) *WebACLGeoMatchStatement {
		return &v
	}).(WebACLGeoMatchStatementPtrOutput)
}

func (o WebACLGeoMatchStatementOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebACLGeoMatchStatement) []string { return v.CountryCodes }).(pulumi.StringArrayOutput)
}

func (o WebACLGeoMatchStatementOutput) ForwardedIPConfig() WebACLForwardedIPConfigurationPtrOutput {
	return o.ApplyT(func(v WebACLGeoMatchStatement) *WebACLForwardedIPConfiguration { return v.ForwardedIPConfig }).(WebACLForwardedIPConfigurationPtrOutput)
}

type WebACLGeoMatchStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLGeoMatchStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLGeoMatchStatement)(nil)).Elem()
}

func (o WebACLGeoMatchStatementPtrOutput) ToWebACLGeoMatchStatementPtrOutput() WebACLGeoMatchStatementPtrOutput {
	return o
}

func (o WebACLGeoMatchStatementPtrOutput) ToWebACLGeoMatchStatementPtrOutputWithContext(ctx context.Context) WebACLGeoMatchStatementPtrOutput {
	return o
}

func (o WebACLGeoMatchStatementPtrOutput) Elem() WebACLGeoMatchStatementOutput {
	return o.ApplyT(func(v *WebACLGeoMatchStatement) WebACLGeoMatchStatement {
		if v != nil {
			return *v
		}
		var ret WebACLGeoMatchStatement
		return ret
	}).(WebACLGeoMatchStatementOutput)
}

func (o WebACLGeoMatchStatementPtrOutput) CountryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebACLGeoMatchStatement) []string {
		if v == nil {
			return nil
		}
		return v.CountryCodes
	}).(pulumi.StringArrayOutput)
}

func (o WebACLGeoMatchStatementPtrOutput) ForwardedIPConfig() WebACLForwardedIPConfigurationPtrOutput {
	return o.ApplyT(func(v *WebACLGeoMatchStatement) *WebACLForwardedIPConfiguration {
		if v == nil {
			return nil
		}
		return v.ForwardedIPConfig
	}).(WebACLForwardedIPConfigurationPtrOutput)
}

type WebACLIPSetForwardedIPConfiguration struct {
	FallbackBehavior string `pulumi:"fallbackBehavior"`
	HeaderName       string `pulumi:"headerName"`
	Position         string `pulumi:"position"`
}

// WebACLIPSetForwardedIPConfigurationInput is an input type that accepts WebACLIPSetForwardedIPConfigurationArgs and WebACLIPSetForwardedIPConfigurationOutput values.
// You can construct a concrete instance of `WebACLIPSetForwardedIPConfigurationInput` via:
//
//          WebACLIPSetForwardedIPConfigurationArgs{...}
type WebACLIPSetForwardedIPConfigurationInput interface {
	pulumi.Input

	ToWebACLIPSetForwardedIPConfigurationOutput() WebACLIPSetForwardedIPConfigurationOutput
	ToWebACLIPSetForwardedIPConfigurationOutputWithContext(context.Context) WebACLIPSetForwardedIPConfigurationOutput
}

type WebACLIPSetForwardedIPConfigurationArgs struct {
	FallbackBehavior pulumi.StringInput `pulumi:"fallbackBehavior"`
	HeaderName       pulumi.StringInput `pulumi:"headerName"`
	Position         pulumi.StringInput `pulumi:"position"`
}

func (WebACLIPSetForwardedIPConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLIPSetForwardedIPConfiguration)(nil)).Elem()
}

func (i WebACLIPSetForwardedIPConfigurationArgs) ToWebACLIPSetForwardedIPConfigurationOutput() WebACLIPSetForwardedIPConfigurationOutput {
	return i.ToWebACLIPSetForwardedIPConfigurationOutputWithContext(context.Background())
}

func (i WebACLIPSetForwardedIPConfigurationArgs) ToWebACLIPSetForwardedIPConfigurationOutputWithContext(ctx context.Context) WebACLIPSetForwardedIPConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLIPSetForwardedIPConfigurationOutput)
}

func (i WebACLIPSetForwardedIPConfigurationArgs) ToWebACLIPSetForwardedIPConfigurationPtrOutput() WebACLIPSetForwardedIPConfigurationPtrOutput {
	return i.ToWebACLIPSetForwardedIPConfigurationPtrOutputWithContext(context.Background())
}

func (i WebACLIPSetForwardedIPConfigurationArgs) ToWebACLIPSetForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) WebACLIPSetForwardedIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLIPSetForwardedIPConfigurationOutput).ToWebACLIPSetForwardedIPConfigurationPtrOutputWithContext(ctx)
}

// WebACLIPSetForwardedIPConfigurationPtrInput is an input type that accepts WebACLIPSetForwardedIPConfigurationArgs, WebACLIPSetForwardedIPConfigurationPtr and WebACLIPSetForwardedIPConfigurationPtrOutput values.
// You can construct a concrete instance of `WebACLIPSetForwardedIPConfigurationPtrInput` via:
//
//          WebACLIPSetForwardedIPConfigurationArgs{...}
//
//  or:
//
//          nil
type WebACLIPSetForwardedIPConfigurationPtrInput interface {
	pulumi.Input

	ToWebACLIPSetForwardedIPConfigurationPtrOutput() WebACLIPSetForwardedIPConfigurationPtrOutput
	ToWebACLIPSetForwardedIPConfigurationPtrOutputWithContext(context.Context) WebACLIPSetForwardedIPConfigurationPtrOutput
}

type webACLIPSetForwardedIPConfigurationPtrType WebACLIPSetForwardedIPConfigurationArgs

func WebACLIPSetForwardedIPConfigurationPtr(v *WebACLIPSetForwardedIPConfigurationArgs) WebACLIPSetForwardedIPConfigurationPtrInput {
	return (*webACLIPSetForwardedIPConfigurationPtrType)(v)
}

func (*webACLIPSetForwardedIPConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLIPSetForwardedIPConfiguration)(nil)).Elem()
}

func (i *webACLIPSetForwardedIPConfigurationPtrType) ToWebACLIPSetForwardedIPConfigurationPtrOutput() WebACLIPSetForwardedIPConfigurationPtrOutput {
	return i.ToWebACLIPSetForwardedIPConfigurationPtrOutputWithContext(context.Background())
}

func (i *webACLIPSetForwardedIPConfigurationPtrType) ToWebACLIPSetForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) WebACLIPSetForwardedIPConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLIPSetForwardedIPConfigurationPtrOutput)
}

type WebACLIPSetForwardedIPConfigurationOutput struct{ *pulumi.OutputState }

func (WebACLIPSetForwardedIPConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLIPSetForwardedIPConfiguration)(nil)).Elem()
}

func (o WebACLIPSetForwardedIPConfigurationOutput) ToWebACLIPSetForwardedIPConfigurationOutput() WebACLIPSetForwardedIPConfigurationOutput {
	return o
}

func (o WebACLIPSetForwardedIPConfigurationOutput) ToWebACLIPSetForwardedIPConfigurationOutputWithContext(ctx context.Context) WebACLIPSetForwardedIPConfigurationOutput {
	return o
}

func (o WebACLIPSetForwardedIPConfigurationOutput) ToWebACLIPSetForwardedIPConfigurationPtrOutput() WebACLIPSetForwardedIPConfigurationPtrOutput {
	return o.ToWebACLIPSetForwardedIPConfigurationPtrOutputWithContext(context.Background())
}

func (o WebACLIPSetForwardedIPConfigurationOutput) ToWebACLIPSetForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) WebACLIPSetForwardedIPConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLIPSetForwardedIPConfiguration) *WebACLIPSetForwardedIPConfiguration {
		return &v
	}).(WebACLIPSetForwardedIPConfigurationPtrOutput)
}

func (o WebACLIPSetForwardedIPConfigurationOutput) FallbackBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLIPSetForwardedIPConfiguration) string { return v.FallbackBehavior }).(pulumi.StringOutput)
}

func (o WebACLIPSetForwardedIPConfigurationOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLIPSetForwardedIPConfiguration) string { return v.HeaderName }).(pulumi.StringOutput)
}

func (o WebACLIPSetForwardedIPConfigurationOutput) Position() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLIPSetForwardedIPConfiguration) string { return v.Position }).(pulumi.StringOutput)
}

type WebACLIPSetForwardedIPConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WebACLIPSetForwardedIPConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLIPSetForwardedIPConfiguration)(nil)).Elem()
}

func (o WebACLIPSetForwardedIPConfigurationPtrOutput) ToWebACLIPSetForwardedIPConfigurationPtrOutput() WebACLIPSetForwardedIPConfigurationPtrOutput {
	return o
}

func (o WebACLIPSetForwardedIPConfigurationPtrOutput) ToWebACLIPSetForwardedIPConfigurationPtrOutputWithContext(ctx context.Context) WebACLIPSetForwardedIPConfigurationPtrOutput {
	return o
}

func (o WebACLIPSetForwardedIPConfigurationPtrOutput) Elem() WebACLIPSetForwardedIPConfigurationOutput {
	return o.ApplyT(func(v *WebACLIPSetForwardedIPConfiguration) WebACLIPSetForwardedIPConfiguration {
		if v != nil {
			return *v
		}
		var ret WebACLIPSetForwardedIPConfiguration
		return ret
	}).(WebACLIPSetForwardedIPConfigurationOutput)
}

func (o WebACLIPSetForwardedIPConfigurationPtrOutput) FallbackBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLIPSetForwardedIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.FallbackBehavior
	}).(pulumi.StringPtrOutput)
}

func (o WebACLIPSetForwardedIPConfigurationPtrOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLIPSetForwardedIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.HeaderName
	}).(pulumi.StringPtrOutput)
}

func (o WebACLIPSetForwardedIPConfigurationPtrOutput) Position() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLIPSetForwardedIPConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Position
	}).(pulumi.StringPtrOutput)
}

type WebACLIPSetReferenceStatement struct {
	Arn                    string                               `pulumi:"arn"`
	IPSetForwardedIPConfig *WebACLIPSetForwardedIPConfiguration `pulumi:"iPSetForwardedIPConfig"`
}

// WebACLIPSetReferenceStatementInput is an input type that accepts WebACLIPSetReferenceStatementArgs and WebACLIPSetReferenceStatementOutput values.
// You can construct a concrete instance of `WebACLIPSetReferenceStatementInput` via:
//
//          WebACLIPSetReferenceStatementArgs{...}
type WebACLIPSetReferenceStatementInput interface {
	pulumi.Input

	ToWebACLIPSetReferenceStatementOutput() WebACLIPSetReferenceStatementOutput
	ToWebACLIPSetReferenceStatementOutputWithContext(context.Context) WebACLIPSetReferenceStatementOutput
}

type WebACLIPSetReferenceStatementArgs struct {
	Arn                    pulumi.StringInput                          `pulumi:"arn"`
	IPSetForwardedIPConfig WebACLIPSetForwardedIPConfigurationPtrInput `pulumi:"iPSetForwardedIPConfig"`
}

func (WebACLIPSetReferenceStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLIPSetReferenceStatement)(nil)).Elem()
}

func (i WebACLIPSetReferenceStatementArgs) ToWebACLIPSetReferenceStatementOutput() WebACLIPSetReferenceStatementOutput {
	return i.ToWebACLIPSetReferenceStatementOutputWithContext(context.Background())
}

func (i WebACLIPSetReferenceStatementArgs) ToWebACLIPSetReferenceStatementOutputWithContext(ctx context.Context) WebACLIPSetReferenceStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLIPSetReferenceStatementOutput)
}

func (i WebACLIPSetReferenceStatementArgs) ToWebACLIPSetReferenceStatementPtrOutput() WebACLIPSetReferenceStatementPtrOutput {
	return i.ToWebACLIPSetReferenceStatementPtrOutputWithContext(context.Background())
}

func (i WebACLIPSetReferenceStatementArgs) ToWebACLIPSetReferenceStatementPtrOutputWithContext(ctx context.Context) WebACLIPSetReferenceStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLIPSetReferenceStatementOutput).ToWebACLIPSetReferenceStatementPtrOutputWithContext(ctx)
}

// WebACLIPSetReferenceStatementPtrInput is an input type that accepts WebACLIPSetReferenceStatementArgs, WebACLIPSetReferenceStatementPtr and WebACLIPSetReferenceStatementPtrOutput values.
// You can construct a concrete instance of `WebACLIPSetReferenceStatementPtrInput` via:
//
//          WebACLIPSetReferenceStatementArgs{...}
//
//  or:
//
//          nil
type WebACLIPSetReferenceStatementPtrInput interface {
	pulumi.Input

	ToWebACLIPSetReferenceStatementPtrOutput() WebACLIPSetReferenceStatementPtrOutput
	ToWebACLIPSetReferenceStatementPtrOutputWithContext(context.Context) WebACLIPSetReferenceStatementPtrOutput
}

type webACLIPSetReferenceStatementPtrType WebACLIPSetReferenceStatementArgs

func WebACLIPSetReferenceStatementPtr(v *WebACLIPSetReferenceStatementArgs) WebACLIPSetReferenceStatementPtrInput {
	return (*webACLIPSetReferenceStatementPtrType)(v)
}

func (*webACLIPSetReferenceStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLIPSetReferenceStatement)(nil)).Elem()
}

func (i *webACLIPSetReferenceStatementPtrType) ToWebACLIPSetReferenceStatementPtrOutput() WebACLIPSetReferenceStatementPtrOutput {
	return i.ToWebACLIPSetReferenceStatementPtrOutputWithContext(context.Background())
}

func (i *webACLIPSetReferenceStatementPtrType) ToWebACLIPSetReferenceStatementPtrOutputWithContext(ctx context.Context) WebACLIPSetReferenceStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLIPSetReferenceStatementPtrOutput)
}

type WebACLIPSetReferenceStatementOutput struct{ *pulumi.OutputState }

func (WebACLIPSetReferenceStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLIPSetReferenceStatement)(nil)).Elem()
}

func (o WebACLIPSetReferenceStatementOutput) ToWebACLIPSetReferenceStatementOutput() WebACLIPSetReferenceStatementOutput {
	return o
}

func (o WebACLIPSetReferenceStatementOutput) ToWebACLIPSetReferenceStatementOutputWithContext(ctx context.Context) WebACLIPSetReferenceStatementOutput {
	return o
}

func (o WebACLIPSetReferenceStatementOutput) ToWebACLIPSetReferenceStatementPtrOutput() WebACLIPSetReferenceStatementPtrOutput {
	return o.ToWebACLIPSetReferenceStatementPtrOutputWithContext(context.Background())
}

func (o WebACLIPSetReferenceStatementOutput) ToWebACLIPSetReferenceStatementPtrOutputWithContext(ctx context.Context) WebACLIPSetReferenceStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLIPSetReferenceStatement) *WebACLIPSetReferenceStatement {
		return &v
	}).(WebACLIPSetReferenceStatementPtrOutput)
}

func (o WebACLIPSetReferenceStatementOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLIPSetReferenceStatement) string { return v.Arn }).(pulumi.StringOutput)
}

func (o WebACLIPSetReferenceStatementOutput) IPSetForwardedIPConfig() WebACLIPSetForwardedIPConfigurationPtrOutput {
	return o.ApplyT(func(v WebACLIPSetReferenceStatement) *WebACLIPSetForwardedIPConfiguration {
		return v.IPSetForwardedIPConfig
	}).(WebACLIPSetForwardedIPConfigurationPtrOutput)
}

type WebACLIPSetReferenceStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLIPSetReferenceStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLIPSetReferenceStatement)(nil)).Elem()
}

func (o WebACLIPSetReferenceStatementPtrOutput) ToWebACLIPSetReferenceStatementPtrOutput() WebACLIPSetReferenceStatementPtrOutput {
	return o
}

func (o WebACLIPSetReferenceStatementPtrOutput) ToWebACLIPSetReferenceStatementPtrOutputWithContext(ctx context.Context) WebACLIPSetReferenceStatementPtrOutput {
	return o
}

func (o WebACLIPSetReferenceStatementPtrOutput) Elem() WebACLIPSetReferenceStatementOutput {
	return o.ApplyT(func(v *WebACLIPSetReferenceStatement) WebACLIPSetReferenceStatement {
		if v != nil {
			return *v
		}
		var ret WebACLIPSetReferenceStatement
		return ret
	}).(WebACLIPSetReferenceStatementOutput)
}

func (o WebACLIPSetReferenceStatementPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLIPSetReferenceStatement) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o WebACLIPSetReferenceStatementPtrOutput) IPSetForwardedIPConfig() WebACLIPSetForwardedIPConfigurationPtrOutput {
	return o.ApplyT(func(v *WebACLIPSetReferenceStatement) *WebACLIPSetForwardedIPConfiguration {
		if v == nil {
			return nil
		}
		return v.IPSetForwardedIPConfig
	}).(WebACLIPSetForwardedIPConfigurationPtrOutput)
}

// Inspect the request body as JSON. The request body immediately follows the request headers.
type WebACLJsonBody struct {
	InvalidFallbackBehavior *string                `pulumi:"invalidFallbackBehavior"`
	MatchPattern            WebACLJsonMatchPattern `pulumi:"matchPattern"`
	MatchScope              string                 `pulumi:"matchScope"`
}

// WebACLJsonBodyInput is an input type that accepts WebACLJsonBodyArgs and WebACLJsonBodyOutput values.
// You can construct a concrete instance of `WebACLJsonBodyInput` via:
//
//          WebACLJsonBodyArgs{...}
type WebACLJsonBodyInput interface {
	pulumi.Input

	ToWebACLJsonBodyOutput() WebACLJsonBodyOutput
	ToWebACLJsonBodyOutputWithContext(context.Context) WebACLJsonBodyOutput
}

// Inspect the request body as JSON. The request body immediately follows the request headers.
type WebACLJsonBodyArgs struct {
	InvalidFallbackBehavior pulumi.StringPtrInput       `pulumi:"invalidFallbackBehavior"`
	MatchPattern            WebACLJsonMatchPatternInput `pulumi:"matchPattern"`
	MatchScope              pulumi.StringInput          `pulumi:"matchScope"`
}

func (WebACLJsonBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLJsonBody)(nil)).Elem()
}

func (i WebACLJsonBodyArgs) ToWebACLJsonBodyOutput() WebACLJsonBodyOutput {
	return i.ToWebACLJsonBodyOutputWithContext(context.Background())
}

func (i WebACLJsonBodyArgs) ToWebACLJsonBodyOutputWithContext(ctx context.Context) WebACLJsonBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLJsonBodyOutput)
}

func (i WebACLJsonBodyArgs) ToWebACLJsonBodyPtrOutput() WebACLJsonBodyPtrOutput {
	return i.ToWebACLJsonBodyPtrOutputWithContext(context.Background())
}

func (i WebACLJsonBodyArgs) ToWebACLJsonBodyPtrOutputWithContext(ctx context.Context) WebACLJsonBodyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLJsonBodyOutput).ToWebACLJsonBodyPtrOutputWithContext(ctx)
}

// WebACLJsonBodyPtrInput is an input type that accepts WebACLJsonBodyArgs, WebACLJsonBodyPtr and WebACLJsonBodyPtrOutput values.
// You can construct a concrete instance of `WebACLJsonBodyPtrInput` via:
//
//          WebACLJsonBodyArgs{...}
//
//  or:
//
//          nil
type WebACLJsonBodyPtrInput interface {
	pulumi.Input

	ToWebACLJsonBodyPtrOutput() WebACLJsonBodyPtrOutput
	ToWebACLJsonBodyPtrOutputWithContext(context.Context) WebACLJsonBodyPtrOutput
}

type webACLJsonBodyPtrType WebACLJsonBodyArgs

func WebACLJsonBodyPtr(v *WebACLJsonBodyArgs) WebACLJsonBodyPtrInput {
	return (*webACLJsonBodyPtrType)(v)
}

func (*webACLJsonBodyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLJsonBody)(nil)).Elem()
}

func (i *webACLJsonBodyPtrType) ToWebACLJsonBodyPtrOutput() WebACLJsonBodyPtrOutput {
	return i.ToWebACLJsonBodyPtrOutputWithContext(context.Background())
}

func (i *webACLJsonBodyPtrType) ToWebACLJsonBodyPtrOutputWithContext(ctx context.Context) WebACLJsonBodyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLJsonBodyPtrOutput)
}

// Inspect the request body as JSON. The request body immediately follows the request headers.
type WebACLJsonBodyOutput struct{ *pulumi.OutputState }

func (WebACLJsonBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLJsonBody)(nil)).Elem()
}

func (o WebACLJsonBodyOutput) ToWebACLJsonBodyOutput() WebACLJsonBodyOutput {
	return o
}

func (o WebACLJsonBodyOutput) ToWebACLJsonBodyOutputWithContext(ctx context.Context) WebACLJsonBodyOutput {
	return o
}

func (o WebACLJsonBodyOutput) ToWebACLJsonBodyPtrOutput() WebACLJsonBodyPtrOutput {
	return o.ToWebACLJsonBodyPtrOutputWithContext(context.Background())
}

func (o WebACLJsonBodyOutput) ToWebACLJsonBodyPtrOutputWithContext(ctx context.Context) WebACLJsonBodyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLJsonBody) *WebACLJsonBody {
		return &v
	}).(WebACLJsonBodyPtrOutput)
}

func (o WebACLJsonBodyOutput) InvalidFallbackBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebACLJsonBody) *string { return v.InvalidFallbackBehavior }).(pulumi.StringPtrOutput)
}

func (o WebACLJsonBodyOutput) MatchPattern() WebACLJsonMatchPatternOutput {
	return o.ApplyT(func(v WebACLJsonBody) WebACLJsonMatchPattern { return v.MatchPattern }).(WebACLJsonMatchPatternOutput)
}

func (o WebACLJsonBodyOutput) MatchScope() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLJsonBody) string { return v.MatchScope }).(pulumi.StringOutput)
}

type WebACLJsonBodyPtrOutput struct{ *pulumi.OutputState }

func (WebACLJsonBodyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLJsonBody)(nil)).Elem()
}

func (o WebACLJsonBodyPtrOutput) ToWebACLJsonBodyPtrOutput() WebACLJsonBodyPtrOutput {
	return o
}

func (o WebACLJsonBodyPtrOutput) ToWebACLJsonBodyPtrOutputWithContext(ctx context.Context) WebACLJsonBodyPtrOutput {
	return o
}

func (o WebACLJsonBodyPtrOutput) Elem() WebACLJsonBodyOutput {
	return o.ApplyT(func(v *WebACLJsonBody) WebACLJsonBody {
		if v != nil {
			return *v
		}
		var ret WebACLJsonBody
		return ret
	}).(WebACLJsonBodyOutput)
}

func (o WebACLJsonBodyPtrOutput) InvalidFallbackBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLJsonBody) *string {
		if v == nil {
			return nil
		}
		return v.InvalidFallbackBehavior
	}).(pulumi.StringPtrOutput)
}

func (o WebACLJsonBodyPtrOutput) MatchPattern() WebACLJsonMatchPatternPtrOutput {
	return o.ApplyT(func(v *WebACLJsonBody) *WebACLJsonMatchPattern {
		if v == nil {
			return nil
		}
		return &v.MatchPattern
	}).(WebACLJsonMatchPatternPtrOutput)
}

func (o WebACLJsonBodyPtrOutput) MatchScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLJsonBody) *string {
		if v == nil {
			return nil
		}
		return &v.MatchScope
	}).(pulumi.StringPtrOutput)
}

// The pattern to look for in the JSON body.
type WebACLJsonMatchPattern struct {
	// Inspect all parts of the web request's JSON body.
	All           interface{} `pulumi:"all"`
	IncludedPaths []string    `pulumi:"includedPaths"`
}

// WebACLJsonMatchPatternInput is an input type that accepts WebACLJsonMatchPatternArgs and WebACLJsonMatchPatternOutput values.
// You can construct a concrete instance of `WebACLJsonMatchPatternInput` via:
//
//          WebACLJsonMatchPatternArgs{...}
type WebACLJsonMatchPatternInput interface {
	pulumi.Input

	ToWebACLJsonMatchPatternOutput() WebACLJsonMatchPatternOutput
	ToWebACLJsonMatchPatternOutputWithContext(context.Context) WebACLJsonMatchPatternOutput
}

// The pattern to look for in the JSON body.
type WebACLJsonMatchPatternArgs struct {
	// Inspect all parts of the web request's JSON body.
	All           pulumi.Input            `pulumi:"all"`
	IncludedPaths pulumi.StringArrayInput `pulumi:"includedPaths"`
}

func (WebACLJsonMatchPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLJsonMatchPattern)(nil)).Elem()
}

func (i WebACLJsonMatchPatternArgs) ToWebACLJsonMatchPatternOutput() WebACLJsonMatchPatternOutput {
	return i.ToWebACLJsonMatchPatternOutputWithContext(context.Background())
}

func (i WebACLJsonMatchPatternArgs) ToWebACLJsonMatchPatternOutputWithContext(ctx context.Context) WebACLJsonMatchPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLJsonMatchPatternOutput)
}

func (i WebACLJsonMatchPatternArgs) ToWebACLJsonMatchPatternPtrOutput() WebACLJsonMatchPatternPtrOutput {
	return i.ToWebACLJsonMatchPatternPtrOutputWithContext(context.Background())
}

func (i WebACLJsonMatchPatternArgs) ToWebACLJsonMatchPatternPtrOutputWithContext(ctx context.Context) WebACLJsonMatchPatternPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLJsonMatchPatternOutput).ToWebACLJsonMatchPatternPtrOutputWithContext(ctx)
}

// WebACLJsonMatchPatternPtrInput is an input type that accepts WebACLJsonMatchPatternArgs, WebACLJsonMatchPatternPtr and WebACLJsonMatchPatternPtrOutput values.
// You can construct a concrete instance of `WebACLJsonMatchPatternPtrInput` via:
//
//          WebACLJsonMatchPatternArgs{...}
//
//  or:
//
//          nil
type WebACLJsonMatchPatternPtrInput interface {
	pulumi.Input

	ToWebACLJsonMatchPatternPtrOutput() WebACLJsonMatchPatternPtrOutput
	ToWebACLJsonMatchPatternPtrOutputWithContext(context.Context) WebACLJsonMatchPatternPtrOutput
}

type webACLJsonMatchPatternPtrType WebACLJsonMatchPatternArgs

func WebACLJsonMatchPatternPtr(v *WebACLJsonMatchPatternArgs) WebACLJsonMatchPatternPtrInput {
	return (*webACLJsonMatchPatternPtrType)(v)
}

func (*webACLJsonMatchPatternPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLJsonMatchPattern)(nil)).Elem()
}

func (i *webACLJsonMatchPatternPtrType) ToWebACLJsonMatchPatternPtrOutput() WebACLJsonMatchPatternPtrOutput {
	return i.ToWebACLJsonMatchPatternPtrOutputWithContext(context.Background())
}

func (i *webACLJsonMatchPatternPtrType) ToWebACLJsonMatchPatternPtrOutputWithContext(ctx context.Context) WebACLJsonMatchPatternPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLJsonMatchPatternPtrOutput)
}

// The pattern to look for in the JSON body.
type WebACLJsonMatchPatternOutput struct{ *pulumi.OutputState }

func (WebACLJsonMatchPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLJsonMatchPattern)(nil)).Elem()
}

func (o WebACLJsonMatchPatternOutput) ToWebACLJsonMatchPatternOutput() WebACLJsonMatchPatternOutput {
	return o
}

func (o WebACLJsonMatchPatternOutput) ToWebACLJsonMatchPatternOutputWithContext(ctx context.Context) WebACLJsonMatchPatternOutput {
	return o
}

func (o WebACLJsonMatchPatternOutput) ToWebACLJsonMatchPatternPtrOutput() WebACLJsonMatchPatternPtrOutput {
	return o.ToWebACLJsonMatchPatternPtrOutputWithContext(context.Background())
}

func (o WebACLJsonMatchPatternOutput) ToWebACLJsonMatchPatternPtrOutputWithContext(ctx context.Context) WebACLJsonMatchPatternPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLJsonMatchPattern) *WebACLJsonMatchPattern {
		return &v
	}).(WebACLJsonMatchPatternPtrOutput)
}

// Inspect all parts of the web request's JSON body.
func (o WebACLJsonMatchPatternOutput) All() pulumi.AnyOutput {
	return o.ApplyT(func(v WebACLJsonMatchPattern) interface{} { return v.All }).(pulumi.AnyOutput)
}

func (o WebACLJsonMatchPatternOutput) IncludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebACLJsonMatchPattern) []string { return v.IncludedPaths }).(pulumi.StringArrayOutput)
}

type WebACLJsonMatchPatternPtrOutput struct{ *pulumi.OutputState }

func (WebACLJsonMatchPatternPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLJsonMatchPattern)(nil)).Elem()
}

func (o WebACLJsonMatchPatternPtrOutput) ToWebACLJsonMatchPatternPtrOutput() WebACLJsonMatchPatternPtrOutput {
	return o
}

func (o WebACLJsonMatchPatternPtrOutput) ToWebACLJsonMatchPatternPtrOutputWithContext(ctx context.Context) WebACLJsonMatchPatternPtrOutput {
	return o
}

func (o WebACLJsonMatchPatternPtrOutput) Elem() WebACLJsonMatchPatternOutput {
	return o.ApplyT(func(v *WebACLJsonMatchPattern) WebACLJsonMatchPattern {
		if v != nil {
			return *v
		}
		var ret WebACLJsonMatchPattern
		return ret
	}).(WebACLJsonMatchPatternOutput)
}

// Inspect all parts of the web request's JSON body.
func (o WebACLJsonMatchPatternPtrOutput) All() pulumi.AnyOutput {
	return o.ApplyT(func(v *WebACLJsonMatchPattern) interface{} {
		if v == nil {
			return nil
		}
		return v.All
	}).(pulumi.AnyOutput)
}

func (o WebACLJsonMatchPatternPtrOutput) IncludedPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebACLJsonMatchPattern) []string {
		if v == nil {
			return nil
		}
		return v.IncludedPaths
	}).(pulumi.StringArrayOutput)
}

type WebACLLabel struct {
	Name string `pulumi:"name"`
}

// WebACLLabelInput is an input type that accepts WebACLLabelArgs and WebACLLabelOutput values.
// You can construct a concrete instance of `WebACLLabelInput` via:
//
//          WebACLLabelArgs{...}
type WebACLLabelInput interface {
	pulumi.Input

	ToWebACLLabelOutput() WebACLLabelOutput
	ToWebACLLabelOutputWithContext(context.Context) WebACLLabelOutput
}

type WebACLLabelArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (WebACLLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLLabel)(nil)).Elem()
}

func (i WebACLLabelArgs) ToWebACLLabelOutput() WebACLLabelOutput {
	return i.ToWebACLLabelOutputWithContext(context.Background())
}

func (i WebACLLabelArgs) ToWebACLLabelOutputWithContext(ctx context.Context) WebACLLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLLabelOutput)
}

// WebACLLabelArrayInput is an input type that accepts WebACLLabelArray and WebACLLabelArrayOutput values.
// You can construct a concrete instance of `WebACLLabelArrayInput` via:
//
//          WebACLLabelArray{ WebACLLabelArgs{...} }
type WebACLLabelArrayInput interface {
	pulumi.Input

	ToWebACLLabelArrayOutput() WebACLLabelArrayOutput
	ToWebACLLabelArrayOutputWithContext(context.Context) WebACLLabelArrayOutput
}

type WebACLLabelArray []WebACLLabelInput

func (WebACLLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLLabel)(nil)).Elem()
}

func (i WebACLLabelArray) ToWebACLLabelArrayOutput() WebACLLabelArrayOutput {
	return i.ToWebACLLabelArrayOutputWithContext(context.Background())
}

func (i WebACLLabelArray) ToWebACLLabelArrayOutputWithContext(ctx context.Context) WebACLLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLLabelArrayOutput)
}

type WebACLLabelOutput struct{ *pulumi.OutputState }

func (WebACLLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLLabel)(nil)).Elem()
}

func (o WebACLLabelOutput) ToWebACLLabelOutput() WebACLLabelOutput {
	return o
}

func (o WebACLLabelOutput) ToWebACLLabelOutputWithContext(ctx context.Context) WebACLLabelOutput {
	return o
}

func (o WebACLLabelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLLabel) string { return v.Name }).(pulumi.StringOutput)
}

type WebACLLabelArrayOutput struct{ *pulumi.OutputState }

func (WebACLLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLLabel)(nil)).Elem()
}

func (o WebACLLabelArrayOutput) ToWebACLLabelArrayOutput() WebACLLabelArrayOutput {
	return o
}

func (o WebACLLabelArrayOutput) ToWebACLLabelArrayOutputWithContext(ctx context.Context) WebACLLabelArrayOutput {
	return o
}

func (o WebACLLabelArrayOutput) Index(i pulumi.IntInput) WebACLLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebACLLabel {
		return vs[0].([]WebACLLabel)[vs[1].(int)]
	}).(WebACLLabelOutput)
}

type WebACLLabelMatchStatement struct {
	Key   string `pulumi:"key"`
	Scope string `pulumi:"scope"`
}

// WebACLLabelMatchStatementInput is an input type that accepts WebACLLabelMatchStatementArgs and WebACLLabelMatchStatementOutput values.
// You can construct a concrete instance of `WebACLLabelMatchStatementInput` via:
//
//          WebACLLabelMatchStatementArgs{...}
type WebACLLabelMatchStatementInput interface {
	pulumi.Input

	ToWebACLLabelMatchStatementOutput() WebACLLabelMatchStatementOutput
	ToWebACLLabelMatchStatementOutputWithContext(context.Context) WebACLLabelMatchStatementOutput
}

type WebACLLabelMatchStatementArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Scope pulumi.StringInput `pulumi:"scope"`
}

func (WebACLLabelMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLLabelMatchStatement)(nil)).Elem()
}

func (i WebACLLabelMatchStatementArgs) ToWebACLLabelMatchStatementOutput() WebACLLabelMatchStatementOutput {
	return i.ToWebACLLabelMatchStatementOutputWithContext(context.Background())
}

func (i WebACLLabelMatchStatementArgs) ToWebACLLabelMatchStatementOutputWithContext(ctx context.Context) WebACLLabelMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLLabelMatchStatementOutput)
}

func (i WebACLLabelMatchStatementArgs) ToWebACLLabelMatchStatementPtrOutput() WebACLLabelMatchStatementPtrOutput {
	return i.ToWebACLLabelMatchStatementPtrOutputWithContext(context.Background())
}

func (i WebACLLabelMatchStatementArgs) ToWebACLLabelMatchStatementPtrOutputWithContext(ctx context.Context) WebACLLabelMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLLabelMatchStatementOutput).ToWebACLLabelMatchStatementPtrOutputWithContext(ctx)
}

// WebACLLabelMatchStatementPtrInput is an input type that accepts WebACLLabelMatchStatementArgs, WebACLLabelMatchStatementPtr and WebACLLabelMatchStatementPtrOutput values.
// You can construct a concrete instance of `WebACLLabelMatchStatementPtrInput` via:
//
//          WebACLLabelMatchStatementArgs{...}
//
//  or:
//
//          nil
type WebACLLabelMatchStatementPtrInput interface {
	pulumi.Input

	ToWebACLLabelMatchStatementPtrOutput() WebACLLabelMatchStatementPtrOutput
	ToWebACLLabelMatchStatementPtrOutputWithContext(context.Context) WebACLLabelMatchStatementPtrOutput
}

type webACLLabelMatchStatementPtrType WebACLLabelMatchStatementArgs

func WebACLLabelMatchStatementPtr(v *WebACLLabelMatchStatementArgs) WebACLLabelMatchStatementPtrInput {
	return (*webACLLabelMatchStatementPtrType)(v)
}

func (*webACLLabelMatchStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLLabelMatchStatement)(nil)).Elem()
}

func (i *webACLLabelMatchStatementPtrType) ToWebACLLabelMatchStatementPtrOutput() WebACLLabelMatchStatementPtrOutput {
	return i.ToWebACLLabelMatchStatementPtrOutputWithContext(context.Background())
}

func (i *webACLLabelMatchStatementPtrType) ToWebACLLabelMatchStatementPtrOutputWithContext(ctx context.Context) WebACLLabelMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLLabelMatchStatementPtrOutput)
}

type WebACLLabelMatchStatementOutput struct{ *pulumi.OutputState }

func (WebACLLabelMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLLabelMatchStatement)(nil)).Elem()
}

func (o WebACLLabelMatchStatementOutput) ToWebACLLabelMatchStatementOutput() WebACLLabelMatchStatementOutput {
	return o
}

func (o WebACLLabelMatchStatementOutput) ToWebACLLabelMatchStatementOutputWithContext(ctx context.Context) WebACLLabelMatchStatementOutput {
	return o
}

func (o WebACLLabelMatchStatementOutput) ToWebACLLabelMatchStatementPtrOutput() WebACLLabelMatchStatementPtrOutput {
	return o.ToWebACLLabelMatchStatementPtrOutputWithContext(context.Background())
}

func (o WebACLLabelMatchStatementOutput) ToWebACLLabelMatchStatementPtrOutputWithContext(ctx context.Context) WebACLLabelMatchStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLLabelMatchStatement) *WebACLLabelMatchStatement {
		return &v
	}).(WebACLLabelMatchStatementPtrOutput)
}

func (o WebACLLabelMatchStatementOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLLabelMatchStatement) string { return v.Key }).(pulumi.StringOutput)
}

func (o WebACLLabelMatchStatementOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLLabelMatchStatement) string { return v.Scope }).(pulumi.StringOutput)
}

type WebACLLabelMatchStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLLabelMatchStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLLabelMatchStatement)(nil)).Elem()
}

func (o WebACLLabelMatchStatementPtrOutput) ToWebACLLabelMatchStatementPtrOutput() WebACLLabelMatchStatementPtrOutput {
	return o
}

func (o WebACLLabelMatchStatementPtrOutput) ToWebACLLabelMatchStatementPtrOutputWithContext(ctx context.Context) WebACLLabelMatchStatementPtrOutput {
	return o
}

func (o WebACLLabelMatchStatementPtrOutput) Elem() WebACLLabelMatchStatementOutput {
	return o.ApplyT(func(v *WebACLLabelMatchStatement) WebACLLabelMatchStatement {
		if v != nil {
			return *v
		}
		var ret WebACLLabelMatchStatement
		return ret
	}).(WebACLLabelMatchStatementOutput)
}

func (o WebACLLabelMatchStatementPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLLabelMatchStatement) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o WebACLLabelMatchStatementPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLLabelMatchStatement) *string {
		if v == nil {
			return nil
		}
		return &v.Scope
	}).(pulumi.StringPtrOutput)
}

type WebACLManagedRuleGroupStatement struct {
	ExcludedRules      []WebACLExcludedRule `pulumi:"excludedRules"`
	Name               string               `pulumi:"name"`
	ScopeDownStatement *WebACLStatement     `pulumi:"scopeDownStatement"`
	VendorName         string               `pulumi:"vendorName"`
	Version            *string              `pulumi:"version"`
}

// WebACLManagedRuleGroupStatementInput is an input type that accepts WebACLManagedRuleGroupStatementArgs and WebACLManagedRuleGroupStatementOutput values.
// You can construct a concrete instance of `WebACLManagedRuleGroupStatementInput` via:
//
//          WebACLManagedRuleGroupStatementArgs{...}
type WebACLManagedRuleGroupStatementInput interface {
	pulumi.Input

	ToWebACLManagedRuleGroupStatementOutput() WebACLManagedRuleGroupStatementOutput
	ToWebACLManagedRuleGroupStatementOutputWithContext(context.Context) WebACLManagedRuleGroupStatementOutput
}

type WebACLManagedRuleGroupStatementArgs struct {
	ExcludedRules      WebACLExcludedRuleArrayInput `pulumi:"excludedRules"`
	Name               pulumi.StringInput           `pulumi:"name"`
	ScopeDownStatement WebACLStatementPtrInput      `pulumi:"scopeDownStatement"`
	VendorName         pulumi.StringInput           `pulumi:"vendorName"`
	Version            pulumi.StringPtrInput        `pulumi:"version"`
}

func (WebACLManagedRuleGroupStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLManagedRuleGroupStatement)(nil)).Elem()
}

func (i WebACLManagedRuleGroupStatementArgs) ToWebACLManagedRuleGroupStatementOutput() WebACLManagedRuleGroupStatementOutput {
	return i.ToWebACLManagedRuleGroupStatementOutputWithContext(context.Background())
}

func (i WebACLManagedRuleGroupStatementArgs) ToWebACLManagedRuleGroupStatementOutputWithContext(ctx context.Context) WebACLManagedRuleGroupStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLManagedRuleGroupStatementOutput)
}

func (i WebACLManagedRuleGroupStatementArgs) ToWebACLManagedRuleGroupStatementPtrOutput() WebACLManagedRuleGroupStatementPtrOutput {
	return i.ToWebACLManagedRuleGroupStatementPtrOutputWithContext(context.Background())
}

func (i WebACLManagedRuleGroupStatementArgs) ToWebACLManagedRuleGroupStatementPtrOutputWithContext(ctx context.Context) WebACLManagedRuleGroupStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLManagedRuleGroupStatementOutput).ToWebACLManagedRuleGroupStatementPtrOutputWithContext(ctx)
}

// WebACLManagedRuleGroupStatementPtrInput is an input type that accepts WebACLManagedRuleGroupStatementArgs, WebACLManagedRuleGroupStatementPtr and WebACLManagedRuleGroupStatementPtrOutput values.
// You can construct a concrete instance of `WebACLManagedRuleGroupStatementPtrInput` via:
//
//          WebACLManagedRuleGroupStatementArgs{...}
//
//  or:
//
//          nil
type WebACLManagedRuleGroupStatementPtrInput interface {
	pulumi.Input

	ToWebACLManagedRuleGroupStatementPtrOutput() WebACLManagedRuleGroupStatementPtrOutput
	ToWebACLManagedRuleGroupStatementPtrOutputWithContext(context.Context) WebACLManagedRuleGroupStatementPtrOutput
}

type webACLManagedRuleGroupStatementPtrType WebACLManagedRuleGroupStatementArgs

func WebACLManagedRuleGroupStatementPtr(v *WebACLManagedRuleGroupStatementArgs) WebACLManagedRuleGroupStatementPtrInput {
	return (*webACLManagedRuleGroupStatementPtrType)(v)
}

func (*webACLManagedRuleGroupStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLManagedRuleGroupStatement)(nil)).Elem()
}

func (i *webACLManagedRuleGroupStatementPtrType) ToWebACLManagedRuleGroupStatementPtrOutput() WebACLManagedRuleGroupStatementPtrOutput {
	return i.ToWebACLManagedRuleGroupStatementPtrOutputWithContext(context.Background())
}

func (i *webACLManagedRuleGroupStatementPtrType) ToWebACLManagedRuleGroupStatementPtrOutputWithContext(ctx context.Context) WebACLManagedRuleGroupStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLManagedRuleGroupStatementPtrOutput)
}

type WebACLManagedRuleGroupStatementOutput struct{ *pulumi.OutputState }

func (WebACLManagedRuleGroupStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLManagedRuleGroupStatement)(nil)).Elem()
}

func (o WebACLManagedRuleGroupStatementOutput) ToWebACLManagedRuleGroupStatementOutput() WebACLManagedRuleGroupStatementOutput {
	return o
}

func (o WebACLManagedRuleGroupStatementOutput) ToWebACLManagedRuleGroupStatementOutputWithContext(ctx context.Context) WebACLManagedRuleGroupStatementOutput {
	return o
}

func (o WebACLManagedRuleGroupStatementOutput) ToWebACLManagedRuleGroupStatementPtrOutput() WebACLManagedRuleGroupStatementPtrOutput {
	return o.ToWebACLManagedRuleGroupStatementPtrOutputWithContext(context.Background())
}

func (o WebACLManagedRuleGroupStatementOutput) ToWebACLManagedRuleGroupStatementPtrOutputWithContext(ctx context.Context) WebACLManagedRuleGroupStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLManagedRuleGroupStatement) *WebACLManagedRuleGroupStatement {
		return &v
	}).(WebACLManagedRuleGroupStatementPtrOutput)
}

func (o WebACLManagedRuleGroupStatementOutput) ExcludedRules() WebACLExcludedRuleArrayOutput {
	return o.ApplyT(func(v WebACLManagedRuleGroupStatement) []WebACLExcludedRule { return v.ExcludedRules }).(WebACLExcludedRuleArrayOutput)
}

func (o WebACLManagedRuleGroupStatementOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLManagedRuleGroupStatement) string { return v.Name }).(pulumi.StringOutput)
}

func (o WebACLManagedRuleGroupStatementOutput) ScopeDownStatement() WebACLStatementPtrOutput {
	return o.ApplyT(func(v WebACLManagedRuleGroupStatement) *WebACLStatement { return v.ScopeDownStatement }).(WebACLStatementPtrOutput)
}

func (o WebACLManagedRuleGroupStatementOutput) VendorName() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLManagedRuleGroupStatement) string { return v.VendorName }).(pulumi.StringOutput)
}

func (o WebACLManagedRuleGroupStatementOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebACLManagedRuleGroupStatement) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type WebACLManagedRuleGroupStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLManagedRuleGroupStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLManagedRuleGroupStatement)(nil)).Elem()
}

func (o WebACLManagedRuleGroupStatementPtrOutput) ToWebACLManagedRuleGroupStatementPtrOutput() WebACLManagedRuleGroupStatementPtrOutput {
	return o
}

func (o WebACLManagedRuleGroupStatementPtrOutput) ToWebACLManagedRuleGroupStatementPtrOutputWithContext(ctx context.Context) WebACLManagedRuleGroupStatementPtrOutput {
	return o
}

func (o WebACLManagedRuleGroupStatementPtrOutput) Elem() WebACLManagedRuleGroupStatementOutput {
	return o.ApplyT(func(v *WebACLManagedRuleGroupStatement) WebACLManagedRuleGroupStatement {
		if v != nil {
			return *v
		}
		var ret WebACLManagedRuleGroupStatement
		return ret
	}).(WebACLManagedRuleGroupStatementOutput)
}

func (o WebACLManagedRuleGroupStatementPtrOutput) ExcludedRules() WebACLExcludedRuleArrayOutput {
	return o.ApplyT(func(v *WebACLManagedRuleGroupStatement) []WebACLExcludedRule {
		if v == nil {
			return nil
		}
		return v.ExcludedRules
	}).(WebACLExcludedRuleArrayOutput)
}

func (o WebACLManagedRuleGroupStatementPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLManagedRuleGroupStatement) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o WebACLManagedRuleGroupStatementPtrOutput) ScopeDownStatement() WebACLStatementPtrOutput {
	return o.ApplyT(func(v *WebACLManagedRuleGroupStatement) *WebACLStatement {
		if v == nil {
			return nil
		}
		return v.ScopeDownStatement
	}).(WebACLStatementPtrOutput)
}

func (o WebACLManagedRuleGroupStatementPtrOutput) VendorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLManagedRuleGroupStatement) *string {
		if v == nil {
			return nil
		}
		return &v.VendorName
	}).(pulumi.StringPtrOutput)
}

func (o WebACLManagedRuleGroupStatementPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLManagedRuleGroupStatement) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type WebACLNotStatement struct {
	Statement WebACLStatement `pulumi:"statement"`
}

// WebACLNotStatementInput is an input type that accepts WebACLNotStatementArgs and WebACLNotStatementOutput values.
// You can construct a concrete instance of `WebACLNotStatementInput` via:
//
//          WebACLNotStatementArgs{...}
type WebACLNotStatementInput interface {
	pulumi.Input

	ToWebACLNotStatementOutput() WebACLNotStatementOutput
	ToWebACLNotStatementOutputWithContext(context.Context) WebACLNotStatementOutput
}

type WebACLNotStatementArgs struct {
	Statement WebACLStatementInput `pulumi:"statement"`
}

func (WebACLNotStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLNotStatement)(nil)).Elem()
}

func (i WebACLNotStatementArgs) ToWebACLNotStatementOutput() WebACLNotStatementOutput {
	return i.ToWebACLNotStatementOutputWithContext(context.Background())
}

func (i WebACLNotStatementArgs) ToWebACLNotStatementOutputWithContext(ctx context.Context) WebACLNotStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLNotStatementOutput)
}

func (i WebACLNotStatementArgs) ToWebACLNotStatementPtrOutput() WebACLNotStatementPtrOutput {
	return i.ToWebACLNotStatementPtrOutputWithContext(context.Background())
}

func (i WebACLNotStatementArgs) ToWebACLNotStatementPtrOutputWithContext(ctx context.Context) WebACLNotStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLNotStatementOutput).ToWebACLNotStatementPtrOutputWithContext(ctx)
}

// WebACLNotStatementPtrInput is an input type that accepts WebACLNotStatementArgs, WebACLNotStatementPtr and WebACLNotStatementPtrOutput values.
// You can construct a concrete instance of `WebACLNotStatementPtrInput` via:
//
//          WebACLNotStatementArgs{...}
//
//  or:
//
//          nil
type WebACLNotStatementPtrInput interface {
	pulumi.Input

	ToWebACLNotStatementPtrOutput() WebACLNotStatementPtrOutput
	ToWebACLNotStatementPtrOutputWithContext(context.Context) WebACLNotStatementPtrOutput
}

type webACLNotStatementPtrType WebACLNotStatementArgs

func WebACLNotStatementPtr(v *WebACLNotStatementArgs) WebACLNotStatementPtrInput {
	return (*webACLNotStatementPtrType)(v)
}

func (*webACLNotStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLNotStatement)(nil)).Elem()
}

func (i *webACLNotStatementPtrType) ToWebACLNotStatementPtrOutput() WebACLNotStatementPtrOutput {
	return i.ToWebACLNotStatementPtrOutputWithContext(context.Background())
}

func (i *webACLNotStatementPtrType) ToWebACLNotStatementPtrOutputWithContext(ctx context.Context) WebACLNotStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLNotStatementPtrOutput)
}

type WebACLNotStatementOutput struct{ *pulumi.OutputState }

func (WebACLNotStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLNotStatement)(nil)).Elem()
}

func (o WebACLNotStatementOutput) ToWebACLNotStatementOutput() WebACLNotStatementOutput {
	return o
}

func (o WebACLNotStatementOutput) ToWebACLNotStatementOutputWithContext(ctx context.Context) WebACLNotStatementOutput {
	return o
}

func (o WebACLNotStatementOutput) ToWebACLNotStatementPtrOutput() WebACLNotStatementPtrOutput {
	return o.ToWebACLNotStatementPtrOutputWithContext(context.Background())
}

func (o WebACLNotStatementOutput) ToWebACLNotStatementPtrOutputWithContext(ctx context.Context) WebACLNotStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLNotStatement) *WebACLNotStatement {
		return &v
	}).(WebACLNotStatementPtrOutput)
}

func (o WebACLNotStatementOutput) Statement() WebACLStatementOutput {
	return o.ApplyT(func(v WebACLNotStatement) WebACLStatement { return v.Statement }).(WebACLStatementOutput)
}

type WebACLNotStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLNotStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLNotStatement)(nil)).Elem()
}

func (o WebACLNotStatementPtrOutput) ToWebACLNotStatementPtrOutput() WebACLNotStatementPtrOutput {
	return o
}

func (o WebACLNotStatementPtrOutput) ToWebACLNotStatementPtrOutputWithContext(ctx context.Context) WebACLNotStatementPtrOutput {
	return o
}

func (o WebACLNotStatementPtrOutput) Elem() WebACLNotStatementOutput {
	return o.ApplyT(func(v *WebACLNotStatement) WebACLNotStatement {
		if v != nil {
			return *v
		}
		var ret WebACLNotStatement
		return ret
	}).(WebACLNotStatementOutput)
}

func (o WebACLNotStatementPtrOutput) Statement() WebACLStatementPtrOutput {
	return o.ApplyT(func(v *WebACLNotStatement) *WebACLStatement {
		if v == nil {
			return nil
		}
		return &v.Statement
	}).(WebACLStatementPtrOutput)
}

type WebACLOrStatement struct {
	Statements []WebACLStatement `pulumi:"statements"`
}

// WebACLOrStatementInput is an input type that accepts WebACLOrStatementArgs and WebACLOrStatementOutput values.
// You can construct a concrete instance of `WebACLOrStatementInput` via:
//
//          WebACLOrStatementArgs{...}
type WebACLOrStatementInput interface {
	pulumi.Input

	ToWebACLOrStatementOutput() WebACLOrStatementOutput
	ToWebACLOrStatementOutputWithContext(context.Context) WebACLOrStatementOutput
}

type WebACLOrStatementArgs struct {
	Statements WebACLStatementArrayInput `pulumi:"statements"`
}

func (WebACLOrStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLOrStatement)(nil)).Elem()
}

func (i WebACLOrStatementArgs) ToWebACLOrStatementOutput() WebACLOrStatementOutput {
	return i.ToWebACLOrStatementOutputWithContext(context.Background())
}

func (i WebACLOrStatementArgs) ToWebACLOrStatementOutputWithContext(ctx context.Context) WebACLOrStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLOrStatementOutput)
}

func (i WebACLOrStatementArgs) ToWebACLOrStatementPtrOutput() WebACLOrStatementPtrOutput {
	return i.ToWebACLOrStatementPtrOutputWithContext(context.Background())
}

func (i WebACLOrStatementArgs) ToWebACLOrStatementPtrOutputWithContext(ctx context.Context) WebACLOrStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLOrStatementOutput).ToWebACLOrStatementPtrOutputWithContext(ctx)
}

// WebACLOrStatementPtrInput is an input type that accepts WebACLOrStatementArgs, WebACLOrStatementPtr and WebACLOrStatementPtrOutput values.
// You can construct a concrete instance of `WebACLOrStatementPtrInput` via:
//
//          WebACLOrStatementArgs{...}
//
//  or:
//
//          nil
type WebACLOrStatementPtrInput interface {
	pulumi.Input

	ToWebACLOrStatementPtrOutput() WebACLOrStatementPtrOutput
	ToWebACLOrStatementPtrOutputWithContext(context.Context) WebACLOrStatementPtrOutput
}

type webACLOrStatementPtrType WebACLOrStatementArgs

func WebACLOrStatementPtr(v *WebACLOrStatementArgs) WebACLOrStatementPtrInput {
	return (*webACLOrStatementPtrType)(v)
}

func (*webACLOrStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLOrStatement)(nil)).Elem()
}

func (i *webACLOrStatementPtrType) ToWebACLOrStatementPtrOutput() WebACLOrStatementPtrOutput {
	return i.ToWebACLOrStatementPtrOutputWithContext(context.Background())
}

func (i *webACLOrStatementPtrType) ToWebACLOrStatementPtrOutputWithContext(ctx context.Context) WebACLOrStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLOrStatementPtrOutput)
}

type WebACLOrStatementOutput struct{ *pulumi.OutputState }

func (WebACLOrStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLOrStatement)(nil)).Elem()
}

func (o WebACLOrStatementOutput) ToWebACLOrStatementOutput() WebACLOrStatementOutput {
	return o
}

func (o WebACLOrStatementOutput) ToWebACLOrStatementOutputWithContext(ctx context.Context) WebACLOrStatementOutput {
	return o
}

func (o WebACLOrStatementOutput) ToWebACLOrStatementPtrOutput() WebACLOrStatementPtrOutput {
	return o.ToWebACLOrStatementPtrOutputWithContext(context.Background())
}

func (o WebACLOrStatementOutput) ToWebACLOrStatementPtrOutputWithContext(ctx context.Context) WebACLOrStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLOrStatement) *WebACLOrStatement {
		return &v
	}).(WebACLOrStatementPtrOutput)
}

func (o WebACLOrStatementOutput) Statements() WebACLStatementArrayOutput {
	return o.ApplyT(func(v WebACLOrStatement) []WebACLStatement { return v.Statements }).(WebACLStatementArrayOutput)
}

type WebACLOrStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLOrStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLOrStatement)(nil)).Elem()
}

func (o WebACLOrStatementPtrOutput) ToWebACLOrStatementPtrOutput() WebACLOrStatementPtrOutput {
	return o
}

func (o WebACLOrStatementPtrOutput) ToWebACLOrStatementPtrOutputWithContext(ctx context.Context) WebACLOrStatementPtrOutput {
	return o
}

func (o WebACLOrStatementPtrOutput) Elem() WebACLOrStatementOutput {
	return o.ApplyT(func(v *WebACLOrStatement) WebACLOrStatement {
		if v != nil {
			return *v
		}
		var ret WebACLOrStatement
		return ret
	}).(WebACLOrStatementOutput)
}

func (o WebACLOrStatementPtrOutput) Statements() WebACLStatementArrayOutput {
	return o.ApplyT(func(v *WebACLOrStatement) []WebACLStatement {
		if v == nil {
			return nil
		}
		return v.Statements
	}).(WebACLStatementArrayOutput)
}

// Override a RuleGroup or ManagedRuleGroup behavior. This can only be applied to Rule that has RuleGroupReferenceStatement or ManagedRuleGroupReferenceStatement.
type WebACLOverrideAction struct {
	// Count traffic towards application.
	Count interface{} `pulumi:"count"`
	// Keep the RuleGroup or ManagedRuleGroup behavior as is.
	None interface{} `pulumi:"none"`
}

// WebACLOverrideActionInput is an input type that accepts WebACLOverrideActionArgs and WebACLOverrideActionOutput values.
// You can construct a concrete instance of `WebACLOverrideActionInput` via:
//
//          WebACLOverrideActionArgs{...}
type WebACLOverrideActionInput interface {
	pulumi.Input

	ToWebACLOverrideActionOutput() WebACLOverrideActionOutput
	ToWebACLOverrideActionOutputWithContext(context.Context) WebACLOverrideActionOutput
}

// Override a RuleGroup or ManagedRuleGroup behavior. This can only be applied to Rule that has RuleGroupReferenceStatement or ManagedRuleGroupReferenceStatement.
type WebACLOverrideActionArgs struct {
	// Count traffic towards application.
	Count pulumi.Input `pulumi:"count"`
	// Keep the RuleGroup or ManagedRuleGroup behavior as is.
	None pulumi.Input `pulumi:"none"`
}

func (WebACLOverrideActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLOverrideAction)(nil)).Elem()
}

func (i WebACLOverrideActionArgs) ToWebACLOverrideActionOutput() WebACLOverrideActionOutput {
	return i.ToWebACLOverrideActionOutputWithContext(context.Background())
}

func (i WebACLOverrideActionArgs) ToWebACLOverrideActionOutputWithContext(ctx context.Context) WebACLOverrideActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLOverrideActionOutput)
}

func (i WebACLOverrideActionArgs) ToWebACLOverrideActionPtrOutput() WebACLOverrideActionPtrOutput {
	return i.ToWebACLOverrideActionPtrOutputWithContext(context.Background())
}

func (i WebACLOverrideActionArgs) ToWebACLOverrideActionPtrOutputWithContext(ctx context.Context) WebACLOverrideActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLOverrideActionOutput).ToWebACLOverrideActionPtrOutputWithContext(ctx)
}

// WebACLOverrideActionPtrInput is an input type that accepts WebACLOverrideActionArgs, WebACLOverrideActionPtr and WebACLOverrideActionPtrOutput values.
// You can construct a concrete instance of `WebACLOverrideActionPtrInput` via:
//
//          WebACLOverrideActionArgs{...}
//
//  or:
//
//          nil
type WebACLOverrideActionPtrInput interface {
	pulumi.Input

	ToWebACLOverrideActionPtrOutput() WebACLOverrideActionPtrOutput
	ToWebACLOverrideActionPtrOutputWithContext(context.Context) WebACLOverrideActionPtrOutput
}

type webACLOverrideActionPtrType WebACLOverrideActionArgs

func WebACLOverrideActionPtr(v *WebACLOverrideActionArgs) WebACLOverrideActionPtrInput {
	return (*webACLOverrideActionPtrType)(v)
}

func (*webACLOverrideActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLOverrideAction)(nil)).Elem()
}

func (i *webACLOverrideActionPtrType) ToWebACLOverrideActionPtrOutput() WebACLOverrideActionPtrOutput {
	return i.ToWebACLOverrideActionPtrOutputWithContext(context.Background())
}

func (i *webACLOverrideActionPtrType) ToWebACLOverrideActionPtrOutputWithContext(ctx context.Context) WebACLOverrideActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLOverrideActionPtrOutput)
}

// Override a RuleGroup or ManagedRuleGroup behavior. This can only be applied to Rule that has RuleGroupReferenceStatement or ManagedRuleGroupReferenceStatement.
type WebACLOverrideActionOutput struct{ *pulumi.OutputState }

func (WebACLOverrideActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLOverrideAction)(nil)).Elem()
}

func (o WebACLOverrideActionOutput) ToWebACLOverrideActionOutput() WebACLOverrideActionOutput {
	return o
}

func (o WebACLOverrideActionOutput) ToWebACLOverrideActionOutputWithContext(ctx context.Context) WebACLOverrideActionOutput {
	return o
}

func (o WebACLOverrideActionOutput) ToWebACLOverrideActionPtrOutput() WebACLOverrideActionPtrOutput {
	return o.ToWebACLOverrideActionPtrOutputWithContext(context.Background())
}

func (o WebACLOverrideActionOutput) ToWebACLOverrideActionPtrOutputWithContext(ctx context.Context) WebACLOverrideActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLOverrideAction) *WebACLOverrideAction {
		return &v
	}).(WebACLOverrideActionPtrOutput)
}

// Count traffic towards application.
func (o WebACLOverrideActionOutput) Count() pulumi.AnyOutput {
	return o.ApplyT(func(v WebACLOverrideAction) interface{} { return v.Count }).(pulumi.AnyOutput)
}

// Keep the RuleGroup or ManagedRuleGroup behavior as is.
func (o WebACLOverrideActionOutput) None() pulumi.AnyOutput {
	return o.ApplyT(func(v WebACLOverrideAction) interface{} { return v.None }).(pulumi.AnyOutput)
}

type WebACLOverrideActionPtrOutput struct{ *pulumi.OutputState }

func (WebACLOverrideActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLOverrideAction)(nil)).Elem()
}

func (o WebACLOverrideActionPtrOutput) ToWebACLOverrideActionPtrOutput() WebACLOverrideActionPtrOutput {
	return o
}

func (o WebACLOverrideActionPtrOutput) ToWebACLOverrideActionPtrOutputWithContext(ctx context.Context) WebACLOverrideActionPtrOutput {
	return o
}

func (o WebACLOverrideActionPtrOutput) Elem() WebACLOverrideActionOutput {
	return o.ApplyT(func(v *WebACLOverrideAction) WebACLOverrideAction {
		if v != nil {
			return *v
		}
		var ret WebACLOverrideAction
		return ret
	}).(WebACLOverrideActionOutput)
}

// Count traffic towards application.
func (o WebACLOverrideActionPtrOutput) Count() pulumi.AnyOutput {
	return o.ApplyT(func(v *WebACLOverrideAction) interface{} {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.AnyOutput)
}

// Keep the RuleGroup or ManagedRuleGroup behavior as is.
func (o WebACLOverrideActionPtrOutput) None() pulumi.AnyOutput {
	return o.ApplyT(func(v *WebACLOverrideAction) interface{} {
		if v == nil {
			return nil
		}
		return v.None
	}).(pulumi.AnyOutput)
}

type WebACLRateBasedStatement struct {
	AggregateKeyType   string                          `pulumi:"aggregateKeyType"`
	ForwardedIPConfig  *WebACLForwardedIPConfiguration `pulumi:"forwardedIPConfig"`
	Limit              int                             `pulumi:"limit"`
	ScopeDownStatement *WebACLStatement                `pulumi:"scopeDownStatement"`
}

// WebACLRateBasedStatementInput is an input type that accepts WebACLRateBasedStatementArgs and WebACLRateBasedStatementOutput values.
// You can construct a concrete instance of `WebACLRateBasedStatementInput` via:
//
//          WebACLRateBasedStatementArgs{...}
type WebACLRateBasedStatementInput interface {
	pulumi.Input

	ToWebACLRateBasedStatementOutput() WebACLRateBasedStatementOutput
	ToWebACLRateBasedStatementOutputWithContext(context.Context) WebACLRateBasedStatementOutput
}

type WebACLRateBasedStatementArgs struct {
	AggregateKeyType   pulumi.StringInput                     `pulumi:"aggregateKeyType"`
	ForwardedIPConfig  WebACLForwardedIPConfigurationPtrInput `pulumi:"forwardedIPConfig"`
	Limit              pulumi.IntInput                        `pulumi:"limit"`
	ScopeDownStatement WebACLStatementPtrInput                `pulumi:"scopeDownStatement"`
}

func (WebACLRateBasedStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLRateBasedStatement)(nil)).Elem()
}

func (i WebACLRateBasedStatementArgs) ToWebACLRateBasedStatementOutput() WebACLRateBasedStatementOutput {
	return i.ToWebACLRateBasedStatementOutputWithContext(context.Background())
}

func (i WebACLRateBasedStatementArgs) ToWebACLRateBasedStatementOutputWithContext(ctx context.Context) WebACLRateBasedStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRateBasedStatementOutput)
}

func (i WebACLRateBasedStatementArgs) ToWebACLRateBasedStatementPtrOutput() WebACLRateBasedStatementPtrOutput {
	return i.ToWebACLRateBasedStatementPtrOutputWithContext(context.Background())
}

func (i WebACLRateBasedStatementArgs) ToWebACLRateBasedStatementPtrOutputWithContext(ctx context.Context) WebACLRateBasedStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRateBasedStatementOutput).ToWebACLRateBasedStatementPtrOutputWithContext(ctx)
}

// WebACLRateBasedStatementPtrInput is an input type that accepts WebACLRateBasedStatementArgs, WebACLRateBasedStatementPtr and WebACLRateBasedStatementPtrOutput values.
// You can construct a concrete instance of `WebACLRateBasedStatementPtrInput` via:
//
//          WebACLRateBasedStatementArgs{...}
//
//  or:
//
//          nil
type WebACLRateBasedStatementPtrInput interface {
	pulumi.Input

	ToWebACLRateBasedStatementPtrOutput() WebACLRateBasedStatementPtrOutput
	ToWebACLRateBasedStatementPtrOutputWithContext(context.Context) WebACLRateBasedStatementPtrOutput
}

type webACLRateBasedStatementPtrType WebACLRateBasedStatementArgs

func WebACLRateBasedStatementPtr(v *WebACLRateBasedStatementArgs) WebACLRateBasedStatementPtrInput {
	return (*webACLRateBasedStatementPtrType)(v)
}

func (*webACLRateBasedStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLRateBasedStatement)(nil)).Elem()
}

func (i *webACLRateBasedStatementPtrType) ToWebACLRateBasedStatementPtrOutput() WebACLRateBasedStatementPtrOutput {
	return i.ToWebACLRateBasedStatementPtrOutputWithContext(context.Background())
}

func (i *webACLRateBasedStatementPtrType) ToWebACLRateBasedStatementPtrOutputWithContext(ctx context.Context) WebACLRateBasedStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRateBasedStatementPtrOutput)
}

type WebACLRateBasedStatementOutput struct{ *pulumi.OutputState }

func (WebACLRateBasedStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLRateBasedStatement)(nil)).Elem()
}

func (o WebACLRateBasedStatementOutput) ToWebACLRateBasedStatementOutput() WebACLRateBasedStatementOutput {
	return o
}

func (o WebACLRateBasedStatementOutput) ToWebACLRateBasedStatementOutputWithContext(ctx context.Context) WebACLRateBasedStatementOutput {
	return o
}

func (o WebACLRateBasedStatementOutput) ToWebACLRateBasedStatementPtrOutput() WebACLRateBasedStatementPtrOutput {
	return o.ToWebACLRateBasedStatementPtrOutputWithContext(context.Background())
}

func (o WebACLRateBasedStatementOutput) ToWebACLRateBasedStatementPtrOutputWithContext(ctx context.Context) WebACLRateBasedStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLRateBasedStatement) *WebACLRateBasedStatement {
		return &v
	}).(WebACLRateBasedStatementPtrOutput)
}

func (o WebACLRateBasedStatementOutput) AggregateKeyType() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLRateBasedStatement) string { return v.AggregateKeyType }).(pulumi.StringOutput)
}

func (o WebACLRateBasedStatementOutput) ForwardedIPConfig() WebACLForwardedIPConfigurationPtrOutput {
	return o.ApplyT(func(v WebACLRateBasedStatement) *WebACLForwardedIPConfiguration { return v.ForwardedIPConfig }).(WebACLForwardedIPConfigurationPtrOutput)
}

func (o WebACLRateBasedStatementOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v WebACLRateBasedStatement) int { return v.Limit }).(pulumi.IntOutput)
}

func (o WebACLRateBasedStatementOutput) ScopeDownStatement() WebACLStatementPtrOutput {
	return o.ApplyT(func(v WebACLRateBasedStatement) *WebACLStatement { return v.ScopeDownStatement }).(WebACLStatementPtrOutput)
}

type WebACLRateBasedStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLRateBasedStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLRateBasedStatement)(nil)).Elem()
}

func (o WebACLRateBasedStatementPtrOutput) ToWebACLRateBasedStatementPtrOutput() WebACLRateBasedStatementPtrOutput {
	return o
}

func (o WebACLRateBasedStatementPtrOutput) ToWebACLRateBasedStatementPtrOutputWithContext(ctx context.Context) WebACLRateBasedStatementPtrOutput {
	return o
}

func (o WebACLRateBasedStatementPtrOutput) Elem() WebACLRateBasedStatementOutput {
	return o.ApplyT(func(v *WebACLRateBasedStatement) WebACLRateBasedStatement {
		if v != nil {
			return *v
		}
		var ret WebACLRateBasedStatement
		return ret
	}).(WebACLRateBasedStatementOutput)
}

func (o WebACLRateBasedStatementPtrOutput) AggregateKeyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLRateBasedStatement) *string {
		if v == nil {
			return nil
		}
		return &v.AggregateKeyType
	}).(pulumi.StringPtrOutput)
}

func (o WebACLRateBasedStatementPtrOutput) ForwardedIPConfig() WebACLForwardedIPConfigurationPtrOutput {
	return o.ApplyT(func(v *WebACLRateBasedStatement) *WebACLForwardedIPConfiguration {
		if v == nil {
			return nil
		}
		return v.ForwardedIPConfig
	}).(WebACLForwardedIPConfigurationPtrOutput)
}

func (o WebACLRateBasedStatementPtrOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebACLRateBasedStatement) *int {
		if v == nil {
			return nil
		}
		return &v.Limit
	}).(pulumi.IntPtrOutput)
}

func (o WebACLRateBasedStatementPtrOutput) ScopeDownStatement() WebACLStatementPtrOutput {
	return o.ApplyT(func(v *WebACLRateBasedStatement) *WebACLStatement {
		if v == nil {
			return nil
		}
		return v.ScopeDownStatement
	}).(WebACLStatementPtrOutput)
}

type WebACLRegexPatternSetReferenceStatement struct {
	Arn                 string                     `pulumi:"arn"`
	FieldToMatch        WebACLFieldToMatch         `pulumi:"fieldToMatch"`
	TextTransformations []WebACLTextTransformation `pulumi:"textTransformations"`
}

// WebACLRegexPatternSetReferenceStatementInput is an input type that accepts WebACLRegexPatternSetReferenceStatementArgs and WebACLRegexPatternSetReferenceStatementOutput values.
// You can construct a concrete instance of `WebACLRegexPatternSetReferenceStatementInput` via:
//
//          WebACLRegexPatternSetReferenceStatementArgs{...}
type WebACLRegexPatternSetReferenceStatementInput interface {
	pulumi.Input

	ToWebACLRegexPatternSetReferenceStatementOutput() WebACLRegexPatternSetReferenceStatementOutput
	ToWebACLRegexPatternSetReferenceStatementOutputWithContext(context.Context) WebACLRegexPatternSetReferenceStatementOutput
}

type WebACLRegexPatternSetReferenceStatementArgs struct {
	Arn                 pulumi.StringInput                 `pulumi:"arn"`
	FieldToMatch        WebACLFieldToMatchInput            `pulumi:"fieldToMatch"`
	TextTransformations WebACLTextTransformationArrayInput `pulumi:"textTransformations"`
}

func (WebACLRegexPatternSetReferenceStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (i WebACLRegexPatternSetReferenceStatementArgs) ToWebACLRegexPatternSetReferenceStatementOutput() WebACLRegexPatternSetReferenceStatementOutput {
	return i.ToWebACLRegexPatternSetReferenceStatementOutputWithContext(context.Background())
}

func (i WebACLRegexPatternSetReferenceStatementArgs) ToWebACLRegexPatternSetReferenceStatementOutputWithContext(ctx context.Context) WebACLRegexPatternSetReferenceStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRegexPatternSetReferenceStatementOutput)
}

func (i WebACLRegexPatternSetReferenceStatementArgs) ToWebACLRegexPatternSetReferenceStatementPtrOutput() WebACLRegexPatternSetReferenceStatementPtrOutput {
	return i.ToWebACLRegexPatternSetReferenceStatementPtrOutputWithContext(context.Background())
}

func (i WebACLRegexPatternSetReferenceStatementArgs) ToWebACLRegexPatternSetReferenceStatementPtrOutputWithContext(ctx context.Context) WebACLRegexPatternSetReferenceStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRegexPatternSetReferenceStatementOutput).ToWebACLRegexPatternSetReferenceStatementPtrOutputWithContext(ctx)
}

// WebACLRegexPatternSetReferenceStatementPtrInput is an input type that accepts WebACLRegexPatternSetReferenceStatementArgs, WebACLRegexPatternSetReferenceStatementPtr and WebACLRegexPatternSetReferenceStatementPtrOutput values.
// You can construct a concrete instance of `WebACLRegexPatternSetReferenceStatementPtrInput` via:
//
//          WebACLRegexPatternSetReferenceStatementArgs{...}
//
//  or:
//
//          nil
type WebACLRegexPatternSetReferenceStatementPtrInput interface {
	pulumi.Input

	ToWebACLRegexPatternSetReferenceStatementPtrOutput() WebACLRegexPatternSetReferenceStatementPtrOutput
	ToWebACLRegexPatternSetReferenceStatementPtrOutputWithContext(context.Context) WebACLRegexPatternSetReferenceStatementPtrOutput
}

type webACLRegexPatternSetReferenceStatementPtrType WebACLRegexPatternSetReferenceStatementArgs

func WebACLRegexPatternSetReferenceStatementPtr(v *WebACLRegexPatternSetReferenceStatementArgs) WebACLRegexPatternSetReferenceStatementPtrInput {
	return (*webACLRegexPatternSetReferenceStatementPtrType)(v)
}

func (*webACLRegexPatternSetReferenceStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (i *webACLRegexPatternSetReferenceStatementPtrType) ToWebACLRegexPatternSetReferenceStatementPtrOutput() WebACLRegexPatternSetReferenceStatementPtrOutput {
	return i.ToWebACLRegexPatternSetReferenceStatementPtrOutputWithContext(context.Background())
}

func (i *webACLRegexPatternSetReferenceStatementPtrType) ToWebACLRegexPatternSetReferenceStatementPtrOutputWithContext(ctx context.Context) WebACLRegexPatternSetReferenceStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRegexPatternSetReferenceStatementPtrOutput)
}

type WebACLRegexPatternSetReferenceStatementOutput struct{ *pulumi.OutputState }

func (WebACLRegexPatternSetReferenceStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (o WebACLRegexPatternSetReferenceStatementOutput) ToWebACLRegexPatternSetReferenceStatementOutput() WebACLRegexPatternSetReferenceStatementOutput {
	return o
}

func (o WebACLRegexPatternSetReferenceStatementOutput) ToWebACLRegexPatternSetReferenceStatementOutputWithContext(ctx context.Context) WebACLRegexPatternSetReferenceStatementOutput {
	return o
}

func (o WebACLRegexPatternSetReferenceStatementOutput) ToWebACLRegexPatternSetReferenceStatementPtrOutput() WebACLRegexPatternSetReferenceStatementPtrOutput {
	return o.ToWebACLRegexPatternSetReferenceStatementPtrOutputWithContext(context.Background())
}

func (o WebACLRegexPatternSetReferenceStatementOutput) ToWebACLRegexPatternSetReferenceStatementPtrOutputWithContext(ctx context.Context) WebACLRegexPatternSetReferenceStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLRegexPatternSetReferenceStatement) *WebACLRegexPatternSetReferenceStatement {
		return &v
	}).(WebACLRegexPatternSetReferenceStatementPtrOutput)
}

func (o WebACLRegexPatternSetReferenceStatementOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLRegexPatternSetReferenceStatement) string { return v.Arn }).(pulumi.StringOutput)
}

func (o WebACLRegexPatternSetReferenceStatementOutput) FieldToMatch() WebACLFieldToMatchOutput {
	return o.ApplyT(func(v WebACLRegexPatternSetReferenceStatement) WebACLFieldToMatch { return v.FieldToMatch }).(WebACLFieldToMatchOutput)
}

func (o WebACLRegexPatternSetReferenceStatementOutput) TextTransformations() WebACLTextTransformationArrayOutput {
	return o.ApplyT(func(v WebACLRegexPatternSetReferenceStatement) []WebACLTextTransformation {
		return v.TextTransformations
	}).(WebACLTextTransformationArrayOutput)
}

type WebACLRegexPatternSetReferenceStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLRegexPatternSetReferenceStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLRegexPatternSetReferenceStatement)(nil)).Elem()
}

func (o WebACLRegexPatternSetReferenceStatementPtrOutput) ToWebACLRegexPatternSetReferenceStatementPtrOutput() WebACLRegexPatternSetReferenceStatementPtrOutput {
	return o
}

func (o WebACLRegexPatternSetReferenceStatementPtrOutput) ToWebACLRegexPatternSetReferenceStatementPtrOutputWithContext(ctx context.Context) WebACLRegexPatternSetReferenceStatementPtrOutput {
	return o
}

func (o WebACLRegexPatternSetReferenceStatementPtrOutput) Elem() WebACLRegexPatternSetReferenceStatementOutput {
	return o.ApplyT(func(v *WebACLRegexPatternSetReferenceStatement) WebACLRegexPatternSetReferenceStatement {
		if v != nil {
			return *v
		}
		var ret WebACLRegexPatternSetReferenceStatement
		return ret
	}).(WebACLRegexPatternSetReferenceStatementOutput)
}

func (o WebACLRegexPatternSetReferenceStatementPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLRegexPatternSetReferenceStatement) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o WebACLRegexPatternSetReferenceStatementPtrOutput) FieldToMatch() WebACLFieldToMatchPtrOutput {
	return o.ApplyT(func(v *WebACLRegexPatternSetReferenceStatement) *WebACLFieldToMatch {
		if v == nil {
			return nil
		}
		return &v.FieldToMatch
	}).(WebACLFieldToMatchPtrOutput)
}

func (o WebACLRegexPatternSetReferenceStatementPtrOutput) TextTransformations() WebACLTextTransformationArrayOutput {
	return o.ApplyT(func(v *WebACLRegexPatternSetReferenceStatement) []WebACLTextTransformation {
		if v == nil {
			return nil
		}
		return v.TextTransformations
	}).(WebACLTextTransformationArrayOutput)
}

// Rule of WebACL that contains condition and action.
type WebACLRule struct {
	Action         *WebACLRuleAction     `pulumi:"action"`
	Name           string                `pulumi:"name"`
	OverrideAction *WebACLOverrideAction `pulumi:"overrideAction"`
	Priority       int                   `pulumi:"priority"`
	// Collection of Rule Labels.
	RuleLabels       []WebACLLabel          `pulumi:"ruleLabels"`
	Statement        WebACLStatement        `pulumi:"statement"`
	VisibilityConfig WebACLVisibilityConfig `pulumi:"visibilityConfig"`
}

// WebACLRuleInput is an input type that accepts WebACLRuleArgs and WebACLRuleOutput values.
// You can construct a concrete instance of `WebACLRuleInput` via:
//
//          WebACLRuleArgs{...}
type WebACLRuleInput interface {
	pulumi.Input

	ToWebACLRuleOutput() WebACLRuleOutput
	ToWebACLRuleOutputWithContext(context.Context) WebACLRuleOutput
}

// Rule of WebACL that contains condition and action.
type WebACLRuleArgs struct {
	Action         WebACLRuleActionPtrInput     `pulumi:"action"`
	Name           pulumi.StringInput           `pulumi:"name"`
	OverrideAction WebACLOverrideActionPtrInput `pulumi:"overrideAction"`
	Priority       pulumi.IntInput              `pulumi:"priority"`
	// Collection of Rule Labels.
	RuleLabels       WebACLLabelArrayInput       `pulumi:"ruleLabels"`
	Statement        WebACLStatementInput        `pulumi:"statement"`
	VisibilityConfig WebACLVisibilityConfigInput `pulumi:"visibilityConfig"`
}

func (WebACLRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLRule)(nil)).Elem()
}

func (i WebACLRuleArgs) ToWebACLRuleOutput() WebACLRuleOutput {
	return i.ToWebACLRuleOutputWithContext(context.Background())
}

func (i WebACLRuleArgs) ToWebACLRuleOutputWithContext(ctx context.Context) WebACLRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRuleOutput)
}

// WebACLRuleArrayInput is an input type that accepts WebACLRuleArray and WebACLRuleArrayOutput values.
// You can construct a concrete instance of `WebACLRuleArrayInput` via:
//
//          WebACLRuleArray{ WebACLRuleArgs{...} }
type WebACLRuleArrayInput interface {
	pulumi.Input

	ToWebACLRuleArrayOutput() WebACLRuleArrayOutput
	ToWebACLRuleArrayOutputWithContext(context.Context) WebACLRuleArrayOutput
}

type WebACLRuleArray []WebACLRuleInput

func (WebACLRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLRule)(nil)).Elem()
}

func (i WebACLRuleArray) ToWebACLRuleArrayOutput() WebACLRuleArrayOutput {
	return i.ToWebACLRuleArrayOutputWithContext(context.Background())
}

func (i WebACLRuleArray) ToWebACLRuleArrayOutputWithContext(ctx context.Context) WebACLRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRuleArrayOutput)
}

// Rule of WebACL that contains condition and action.
type WebACLRuleOutput struct{ *pulumi.OutputState }

func (WebACLRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLRule)(nil)).Elem()
}

func (o WebACLRuleOutput) ToWebACLRuleOutput() WebACLRuleOutput {
	return o
}

func (o WebACLRuleOutput) ToWebACLRuleOutputWithContext(ctx context.Context) WebACLRuleOutput {
	return o
}

func (o WebACLRuleOutput) Action() WebACLRuleActionPtrOutput {
	return o.ApplyT(func(v WebACLRule) *WebACLRuleAction { return v.Action }).(WebACLRuleActionPtrOutput)
}

func (o WebACLRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLRule) string { return v.Name }).(pulumi.StringOutput)
}

func (o WebACLRuleOutput) OverrideAction() WebACLOverrideActionPtrOutput {
	return o.ApplyT(func(v WebACLRule) *WebACLOverrideAction { return v.OverrideAction }).(WebACLOverrideActionPtrOutput)
}

func (o WebACLRuleOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v WebACLRule) int { return v.Priority }).(pulumi.IntOutput)
}

// Collection of Rule Labels.
func (o WebACLRuleOutput) RuleLabels() WebACLLabelArrayOutput {
	return o.ApplyT(func(v WebACLRule) []WebACLLabel { return v.RuleLabels }).(WebACLLabelArrayOutput)
}

func (o WebACLRuleOutput) Statement() WebACLStatementOutput {
	return o.ApplyT(func(v WebACLRule) WebACLStatement { return v.Statement }).(WebACLStatementOutput)
}

func (o WebACLRuleOutput) VisibilityConfig() WebACLVisibilityConfigOutput {
	return o.ApplyT(func(v WebACLRule) WebACLVisibilityConfig { return v.VisibilityConfig }).(WebACLVisibilityConfigOutput)
}

type WebACLRuleArrayOutput struct{ *pulumi.OutputState }

func (WebACLRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLRule)(nil)).Elem()
}

func (o WebACLRuleArrayOutput) ToWebACLRuleArrayOutput() WebACLRuleArrayOutput {
	return o
}

func (o WebACLRuleArrayOutput) ToWebACLRuleArrayOutputWithContext(ctx context.Context) WebACLRuleArrayOutput {
	return o
}

func (o WebACLRuleArrayOutput) Index(i pulumi.IntInput) WebACLRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebACLRule {
		return vs[0].([]WebACLRule)[vs[1].(int)]
	}).(WebACLRuleOutput)
}

// Action taken when Rule matches its condition.
type WebACLRuleAction struct {
	Allow *WebACLAllowAction `pulumi:"allow"`
	Block *WebACLBlockAction `pulumi:"block"`
	Count *WebACLCountAction `pulumi:"count"`
}

// WebACLRuleActionInput is an input type that accepts WebACLRuleActionArgs and WebACLRuleActionOutput values.
// You can construct a concrete instance of `WebACLRuleActionInput` via:
//
//          WebACLRuleActionArgs{...}
type WebACLRuleActionInput interface {
	pulumi.Input

	ToWebACLRuleActionOutput() WebACLRuleActionOutput
	ToWebACLRuleActionOutputWithContext(context.Context) WebACLRuleActionOutput
}

// Action taken when Rule matches its condition.
type WebACLRuleActionArgs struct {
	Allow WebACLAllowActionPtrInput `pulumi:"allow"`
	Block WebACLBlockActionPtrInput `pulumi:"block"`
	Count WebACLCountActionPtrInput `pulumi:"count"`
}

func (WebACLRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLRuleAction)(nil)).Elem()
}

func (i WebACLRuleActionArgs) ToWebACLRuleActionOutput() WebACLRuleActionOutput {
	return i.ToWebACLRuleActionOutputWithContext(context.Background())
}

func (i WebACLRuleActionArgs) ToWebACLRuleActionOutputWithContext(ctx context.Context) WebACLRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRuleActionOutput)
}

func (i WebACLRuleActionArgs) ToWebACLRuleActionPtrOutput() WebACLRuleActionPtrOutput {
	return i.ToWebACLRuleActionPtrOutputWithContext(context.Background())
}

func (i WebACLRuleActionArgs) ToWebACLRuleActionPtrOutputWithContext(ctx context.Context) WebACLRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRuleActionOutput).ToWebACLRuleActionPtrOutputWithContext(ctx)
}

// WebACLRuleActionPtrInput is an input type that accepts WebACLRuleActionArgs, WebACLRuleActionPtr and WebACLRuleActionPtrOutput values.
// You can construct a concrete instance of `WebACLRuleActionPtrInput` via:
//
//          WebACLRuleActionArgs{...}
//
//  or:
//
//          nil
type WebACLRuleActionPtrInput interface {
	pulumi.Input

	ToWebACLRuleActionPtrOutput() WebACLRuleActionPtrOutput
	ToWebACLRuleActionPtrOutputWithContext(context.Context) WebACLRuleActionPtrOutput
}

type webACLRuleActionPtrType WebACLRuleActionArgs

func WebACLRuleActionPtr(v *WebACLRuleActionArgs) WebACLRuleActionPtrInput {
	return (*webACLRuleActionPtrType)(v)
}

func (*webACLRuleActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLRuleAction)(nil)).Elem()
}

func (i *webACLRuleActionPtrType) ToWebACLRuleActionPtrOutput() WebACLRuleActionPtrOutput {
	return i.ToWebACLRuleActionPtrOutputWithContext(context.Background())
}

func (i *webACLRuleActionPtrType) ToWebACLRuleActionPtrOutputWithContext(ctx context.Context) WebACLRuleActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRuleActionPtrOutput)
}

// Action taken when Rule matches its condition.
type WebACLRuleActionOutput struct{ *pulumi.OutputState }

func (WebACLRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLRuleAction)(nil)).Elem()
}

func (o WebACLRuleActionOutput) ToWebACLRuleActionOutput() WebACLRuleActionOutput {
	return o
}

func (o WebACLRuleActionOutput) ToWebACLRuleActionOutputWithContext(ctx context.Context) WebACLRuleActionOutput {
	return o
}

func (o WebACLRuleActionOutput) ToWebACLRuleActionPtrOutput() WebACLRuleActionPtrOutput {
	return o.ToWebACLRuleActionPtrOutputWithContext(context.Background())
}

func (o WebACLRuleActionOutput) ToWebACLRuleActionPtrOutputWithContext(ctx context.Context) WebACLRuleActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLRuleAction) *WebACLRuleAction {
		return &v
	}).(WebACLRuleActionPtrOutput)
}

func (o WebACLRuleActionOutput) Allow() WebACLAllowActionPtrOutput {
	return o.ApplyT(func(v WebACLRuleAction) *WebACLAllowAction { return v.Allow }).(WebACLAllowActionPtrOutput)
}

func (o WebACLRuleActionOutput) Block() WebACLBlockActionPtrOutput {
	return o.ApplyT(func(v WebACLRuleAction) *WebACLBlockAction { return v.Block }).(WebACLBlockActionPtrOutput)
}

func (o WebACLRuleActionOutput) Count() WebACLCountActionPtrOutput {
	return o.ApplyT(func(v WebACLRuleAction) *WebACLCountAction { return v.Count }).(WebACLCountActionPtrOutput)
}

type WebACLRuleActionPtrOutput struct{ *pulumi.OutputState }

func (WebACLRuleActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLRuleAction)(nil)).Elem()
}

func (o WebACLRuleActionPtrOutput) ToWebACLRuleActionPtrOutput() WebACLRuleActionPtrOutput {
	return o
}

func (o WebACLRuleActionPtrOutput) ToWebACLRuleActionPtrOutputWithContext(ctx context.Context) WebACLRuleActionPtrOutput {
	return o
}

func (o WebACLRuleActionPtrOutput) Elem() WebACLRuleActionOutput {
	return o.ApplyT(func(v *WebACLRuleAction) WebACLRuleAction {
		if v != nil {
			return *v
		}
		var ret WebACLRuleAction
		return ret
	}).(WebACLRuleActionOutput)
}

func (o WebACLRuleActionPtrOutput) Allow() WebACLAllowActionPtrOutput {
	return o.ApplyT(func(v *WebACLRuleAction) *WebACLAllowAction {
		if v == nil {
			return nil
		}
		return v.Allow
	}).(WebACLAllowActionPtrOutput)
}

func (o WebACLRuleActionPtrOutput) Block() WebACLBlockActionPtrOutput {
	return o.ApplyT(func(v *WebACLRuleAction) *WebACLBlockAction {
		if v == nil {
			return nil
		}
		return v.Block
	}).(WebACLBlockActionPtrOutput)
}

func (o WebACLRuleActionPtrOutput) Count() WebACLCountActionPtrOutput {
	return o.ApplyT(func(v *WebACLRuleAction) *WebACLCountAction {
		if v == nil {
			return nil
		}
		return v.Count
	}).(WebACLCountActionPtrOutput)
}

type WebACLRuleGroupReferenceStatement struct {
	Arn           string               `pulumi:"arn"`
	ExcludedRules []WebACLExcludedRule `pulumi:"excludedRules"`
}

// WebACLRuleGroupReferenceStatementInput is an input type that accepts WebACLRuleGroupReferenceStatementArgs and WebACLRuleGroupReferenceStatementOutput values.
// You can construct a concrete instance of `WebACLRuleGroupReferenceStatementInput` via:
//
//          WebACLRuleGroupReferenceStatementArgs{...}
type WebACLRuleGroupReferenceStatementInput interface {
	pulumi.Input

	ToWebACLRuleGroupReferenceStatementOutput() WebACLRuleGroupReferenceStatementOutput
	ToWebACLRuleGroupReferenceStatementOutputWithContext(context.Context) WebACLRuleGroupReferenceStatementOutput
}

type WebACLRuleGroupReferenceStatementArgs struct {
	Arn           pulumi.StringInput           `pulumi:"arn"`
	ExcludedRules WebACLExcludedRuleArrayInput `pulumi:"excludedRules"`
}

func (WebACLRuleGroupReferenceStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLRuleGroupReferenceStatement)(nil)).Elem()
}

func (i WebACLRuleGroupReferenceStatementArgs) ToWebACLRuleGroupReferenceStatementOutput() WebACLRuleGroupReferenceStatementOutput {
	return i.ToWebACLRuleGroupReferenceStatementOutputWithContext(context.Background())
}

func (i WebACLRuleGroupReferenceStatementArgs) ToWebACLRuleGroupReferenceStatementOutputWithContext(ctx context.Context) WebACLRuleGroupReferenceStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRuleGroupReferenceStatementOutput)
}

func (i WebACLRuleGroupReferenceStatementArgs) ToWebACLRuleGroupReferenceStatementPtrOutput() WebACLRuleGroupReferenceStatementPtrOutput {
	return i.ToWebACLRuleGroupReferenceStatementPtrOutputWithContext(context.Background())
}

func (i WebACLRuleGroupReferenceStatementArgs) ToWebACLRuleGroupReferenceStatementPtrOutputWithContext(ctx context.Context) WebACLRuleGroupReferenceStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRuleGroupReferenceStatementOutput).ToWebACLRuleGroupReferenceStatementPtrOutputWithContext(ctx)
}

// WebACLRuleGroupReferenceStatementPtrInput is an input type that accepts WebACLRuleGroupReferenceStatementArgs, WebACLRuleGroupReferenceStatementPtr and WebACLRuleGroupReferenceStatementPtrOutput values.
// You can construct a concrete instance of `WebACLRuleGroupReferenceStatementPtrInput` via:
//
//          WebACLRuleGroupReferenceStatementArgs{...}
//
//  or:
//
//          nil
type WebACLRuleGroupReferenceStatementPtrInput interface {
	pulumi.Input

	ToWebACLRuleGroupReferenceStatementPtrOutput() WebACLRuleGroupReferenceStatementPtrOutput
	ToWebACLRuleGroupReferenceStatementPtrOutputWithContext(context.Context) WebACLRuleGroupReferenceStatementPtrOutput
}

type webACLRuleGroupReferenceStatementPtrType WebACLRuleGroupReferenceStatementArgs

func WebACLRuleGroupReferenceStatementPtr(v *WebACLRuleGroupReferenceStatementArgs) WebACLRuleGroupReferenceStatementPtrInput {
	return (*webACLRuleGroupReferenceStatementPtrType)(v)
}

func (*webACLRuleGroupReferenceStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLRuleGroupReferenceStatement)(nil)).Elem()
}

func (i *webACLRuleGroupReferenceStatementPtrType) ToWebACLRuleGroupReferenceStatementPtrOutput() WebACLRuleGroupReferenceStatementPtrOutput {
	return i.ToWebACLRuleGroupReferenceStatementPtrOutputWithContext(context.Background())
}

func (i *webACLRuleGroupReferenceStatementPtrType) ToWebACLRuleGroupReferenceStatementPtrOutputWithContext(ctx context.Context) WebACLRuleGroupReferenceStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLRuleGroupReferenceStatementPtrOutput)
}

type WebACLRuleGroupReferenceStatementOutput struct{ *pulumi.OutputState }

func (WebACLRuleGroupReferenceStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLRuleGroupReferenceStatement)(nil)).Elem()
}

func (o WebACLRuleGroupReferenceStatementOutput) ToWebACLRuleGroupReferenceStatementOutput() WebACLRuleGroupReferenceStatementOutput {
	return o
}

func (o WebACLRuleGroupReferenceStatementOutput) ToWebACLRuleGroupReferenceStatementOutputWithContext(ctx context.Context) WebACLRuleGroupReferenceStatementOutput {
	return o
}

func (o WebACLRuleGroupReferenceStatementOutput) ToWebACLRuleGroupReferenceStatementPtrOutput() WebACLRuleGroupReferenceStatementPtrOutput {
	return o.ToWebACLRuleGroupReferenceStatementPtrOutputWithContext(context.Background())
}

func (o WebACLRuleGroupReferenceStatementOutput) ToWebACLRuleGroupReferenceStatementPtrOutputWithContext(ctx context.Context) WebACLRuleGroupReferenceStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLRuleGroupReferenceStatement) *WebACLRuleGroupReferenceStatement {
		return &v
	}).(WebACLRuleGroupReferenceStatementPtrOutput)
}

func (o WebACLRuleGroupReferenceStatementOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLRuleGroupReferenceStatement) string { return v.Arn }).(pulumi.StringOutput)
}

func (o WebACLRuleGroupReferenceStatementOutput) ExcludedRules() WebACLExcludedRuleArrayOutput {
	return o.ApplyT(func(v WebACLRuleGroupReferenceStatement) []WebACLExcludedRule { return v.ExcludedRules }).(WebACLExcludedRuleArrayOutput)
}

type WebACLRuleGroupReferenceStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLRuleGroupReferenceStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLRuleGroupReferenceStatement)(nil)).Elem()
}

func (o WebACLRuleGroupReferenceStatementPtrOutput) ToWebACLRuleGroupReferenceStatementPtrOutput() WebACLRuleGroupReferenceStatementPtrOutput {
	return o
}

func (o WebACLRuleGroupReferenceStatementPtrOutput) ToWebACLRuleGroupReferenceStatementPtrOutputWithContext(ctx context.Context) WebACLRuleGroupReferenceStatementPtrOutput {
	return o
}

func (o WebACLRuleGroupReferenceStatementPtrOutput) Elem() WebACLRuleGroupReferenceStatementOutput {
	return o.ApplyT(func(v *WebACLRuleGroupReferenceStatement) WebACLRuleGroupReferenceStatement {
		if v != nil {
			return *v
		}
		var ret WebACLRuleGroupReferenceStatement
		return ret
	}).(WebACLRuleGroupReferenceStatementOutput)
}

func (o WebACLRuleGroupReferenceStatementPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLRuleGroupReferenceStatement) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o WebACLRuleGroupReferenceStatementPtrOutput) ExcludedRules() WebACLExcludedRuleArrayOutput {
	return o.ApplyT(func(v *WebACLRuleGroupReferenceStatement) []WebACLExcludedRule {
		if v == nil {
			return nil
		}
		return v.ExcludedRules
	}).(WebACLExcludedRuleArrayOutput)
}

// Size Constraint statement.
type WebACLSizeConstraintStatement struct {
	ComparisonOperator  string                     `pulumi:"comparisonOperator"`
	FieldToMatch        WebACLFieldToMatch         `pulumi:"fieldToMatch"`
	Size                float64                    `pulumi:"size"`
	TextTransformations []WebACLTextTransformation `pulumi:"textTransformations"`
}

// WebACLSizeConstraintStatementInput is an input type that accepts WebACLSizeConstraintStatementArgs and WebACLSizeConstraintStatementOutput values.
// You can construct a concrete instance of `WebACLSizeConstraintStatementInput` via:
//
//          WebACLSizeConstraintStatementArgs{...}
type WebACLSizeConstraintStatementInput interface {
	pulumi.Input

	ToWebACLSizeConstraintStatementOutput() WebACLSizeConstraintStatementOutput
	ToWebACLSizeConstraintStatementOutputWithContext(context.Context) WebACLSizeConstraintStatementOutput
}

// Size Constraint statement.
type WebACLSizeConstraintStatementArgs struct {
	ComparisonOperator  pulumi.StringInput                 `pulumi:"comparisonOperator"`
	FieldToMatch        WebACLFieldToMatchInput            `pulumi:"fieldToMatch"`
	Size                pulumi.Float64Input                `pulumi:"size"`
	TextTransformations WebACLTextTransformationArrayInput `pulumi:"textTransformations"`
}

func (WebACLSizeConstraintStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLSizeConstraintStatement)(nil)).Elem()
}

func (i WebACLSizeConstraintStatementArgs) ToWebACLSizeConstraintStatementOutput() WebACLSizeConstraintStatementOutput {
	return i.ToWebACLSizeConstraintStatementOutputWithContext(context.Background())
}

func (i WebACLSizeConstraintStatementArgs) ToWebACLSizeConstraintStatementOutputWithContext(ctx context.Context) WebACLSizeConstraintStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLSizeConstraintStatementOutput)
}

func (i WebACLSizeConstraintStatementArgs) ToWebACLSizeConstraintStatementPtrOutput() WebACLSizeConstraintStatementPtrOutput {
	return i.ToWebACLSizeConstraintStatementPtrOutputWithContext(context.Background())
}

func (i WebACLSizeConstraintStatementArgs) ToWebACLSizeConstraintStatementPtrOutputWithContext(ctx context.Context) WebACLSizeConstraintStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLSizeConstraintStatementOutput).ToWebACLSizeConstraintStatementPtrOutputWithContext(ctx)
}

// WebACLSizeConstraintStatementPtrInput is an input type that accepts WebACLSizeConstraintStatementArgs, WebACLSizeConstraintStatementPtr and WebACLSizeConstraintStatementPtrOutput values.
// You can construct a concrete instance of `WebACLSizeConstraintStatementPtrInput` via:
//
//          WebACLSizeConstraintStatementArgs{...}
//
//  or:
//
//          nil
type WebACLSizeConstraintStatementPtrInput interface {
	pulumi.Input

	ToWebACLSizeConstraintStatementPtrOutput() WebACLSizeConstraintStatementPtrOutput
	ToWebACLSizeConstraintStatementPtrOutputWithContext(context.Context) WebACLSizeConstraintStatementPtrOutput
}

type webACLSizeConstraintStatementPtrType WebACLSizeConstraintStatementArgs

func WebACLSizeConstraintStatementPtr(v *WebACLSizeConstraintStatementArgs) WebACLSizeConstraintStatementPtrInput {
	return (*webACLSizeConstraintStatementPtrType)(v)
}

func (*webACLSizeConstraintStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLSizeConstraintStatement)(nil)).Elem()
}

func (i *webACLSizeConstraintStatementPtrType) ToWebACLSizeConstraintStatementPtrOutput() WebACLSizeConstraintStatementPtrOutput {
	return i.ToWebACLSizeConstraintStatementPtrOutputWithContext(context.Background())
}

func (i *webACLSizeConstraintStatementPtrType) ToWebACLSizeConstraintStatementPtrOutputWithContext(ctx context.Context) WebACLSizeConstraintStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLSizeConstraintStatementPtrOutput)
}

// Size Constraint statement.
type WebACLSizeConstraintStatementOutput struct{ *pulumi.OutputState }

func (WebACLSizeConstraintStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLSizeConstraintStatement)(nil)).Elem()
}

func (o WebACLSizeConstraintStatementOutput) ToWebACLSizeConstraintStatementOutput() WebACLSizeConstraintStatementOutput {
	return o
}

func (o WebACLSizeConstraintStatementOutput) ToWebACLSizeConstraintStatementOutputWithContext(ctx context.Context) WebACLSizeConstraintStatementOutput {
	return o
}

func (o WebACLSizeConstraintStatementOutput) ToWebACLSizeConstraintStatementPtrOutput() WebACLSizeConstraintStatementPtrOutput {
	return o.ToWebACLSizeConstraintStatementPtrOutputWithContext(context.Background())
}

func (o WebACLSizeConstraintStatementOutput) ToWebACLSizeConstraintStatementPtrOutputWithContext(ctx context.Context) WebACLSizeConstraintStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLSizeConstraintStatement) *WebACLSizeConstraintStatement {
		return &v
	}).(WebACLSizeConstraintStatementPtrOutput)
}

func (o WebACLSizeConstraintStatementOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLSizeConstraintStatement) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

func (o WebACLSizeConstraintStatementOutput) FieldToMatch() WebACLFieldToMatchOutput {
	return o.ApplyT(func(v WebACLSizeConstraintStatement) WebACLFieldToMatch { return v.FieldToMatch }).(WebACLFieldToMatchOutput)
}

func (o WebACLSizeConstraintStatementOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v WebACLSizeConstraintStatement) float64 { return v.Size }).(pulumi.Float64Output)
}

func (o WebACLSizeConstraintStatementOutput) TextTransformations() WebACLTextTransformationArrayOutput {
	return o.ApplyT(func(v WebACLSizeConstraintStatement) []WebACLTextTransformation { return v.TextTransformations }).(WebACLTextTransformationArrayOutput)
}

type WebACLSizeConstraintStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLSizeConstraintStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLSizeConstraintStatement)(nil)).Elem()
}

func (o WebACLSizeConstraintStatementPtrOutput) ToWebACLSizeConstraintStatementPtrOutput() WebACLSizeConstraintStatementPtrOutput {
	return o
}

func (o WebACLSizeConstraintStatementPtrOutput) ToWebACLSizeConstraintStatementPtrOutputWithContext(ctx context.Context) WebACLSizeConstraintStatementPtrOutput {
	return o
}

func (o WebACLSizeConstraintStatementPtrOutput) Elem() WebACLSizeConstraintStatementOutput {
	return o.ApplyT(func(v *WebACLSizeConstraintStatement) WebACLSizeConstraintStatement {
		if v != nil {
			return *v
		}
		var ret WebACLSizeConstraintStatement
		return ret
	}).(WebACLSizeConstraintStatementOutput)
}

func (o WebACLSizeConstraintStatementPtrOutput) ComparisonOperator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLSizeConstraintStatement) *string {
		if v == nil {
			return nil
		}
		return &v.ComparisonOperator
	}).(pulumi.StringPtrOutput)
}

func (o WebACLSizeConstraintStatementPtrOutput) FieldToMatch() WebACLFieldToMatchPtrOutput {
	return o.ApplyT(func(v *WebACLSizeConstraintStatement) *WebACLFieldToMatch {
		if v == nil {
			return nil
		}
		return &v.FieldToMatch
	}).(WebACLFieldToMatchPtrOutput)
}

func (o WebACLSizeConstraintStatementPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebACLSizeConstraintStatement) *float64 {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.Float64PtrOutput)
}

func (o WebACLSizeConstraintStatementPtrOutput) TextTransformations() WebACLTextTransformationArrayOutput {
	return o.ApplyT(func(v *WebACLSizeConstraintStatement) []WebACLTextTransformation {
		if v == nil {
			return nil
		}
		return v.TextTransformations
	}).(WebACLTextTransformationArrayOutput)
}

// Sqli Match Statement.
type WebACLSqliMatchStatement struct {
	FieldToMatch        WebACLFieldToMatch         `pulumi:"fieldToMatch"`
	TextTransformations []WebACLTextTransformation `pulumi:"textTransformations"`
}

// WebACLSqliMatchStatementInput is an input type that accepts WebACLSqliMatchStatementArgs and WebACLSqliMatchStatementOutput values.
// You can construct a concrete instance of `WebACLSqliMatchStatementInput` via:
//
//          WebACLSqliMatchStatementArgs{...}
type WebACLSqliMatchStatementInput interface {
	pulumi.Input

	ToWebACLSqliMatchStatementOutput() WebACLSqliMatchStatementOutput
	ToWebACLSqliMatchStatementOutputWithContext(context.Context) WebACLSqliMatchStatementOutput
}

// Sqli Match Statement.
type WebACLSqliMatchStatementArgs struct {
	FieldToMatch        WebACLFieldToMatchInput            `pulumi:"fieldToMatch"`
	TextTransformations WebACLTextTransformationArrayInput `pulumi:"textTransformations"`
}

func (WebACLSqliMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLSqliMatchStatement)(nil)).Elem()
}

func (i WebACLSqliMatchStatementArgs) ToWebACLSqliMatchStatementOutput() WebACLSqliMatchStatementOutput {
	return i.ToWebACLSqliMatchStatementOutputWithContext(context.Background())
}

func (i WebACLSqliMatchStatementArgs) ToWebACLSqliMatchStatementOutputWithContext(ctx context.Context) WebACLSqliMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLSqliMatchStatementOutput)
}

func (i WebACLSqliMatchStatementArgs) ToWebACLSqliMatchStatementPtrOutput() WebACLSqliMatchStatementPtrOutput {
	return i.ToWebACLSqliMatchStatementPtrOutputWithContext(context.Background())
}

func (i WebACLSqliMatchStatementArgs) ToWebACLSqliMatchStatementPtrOutputWithContext(ctx context.Context) WebACLSqliMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLSqliMatchStatementOutput).ToWebACLSqliMatchStatementPtrOutputWithContext(ctx)
}

// WebACLSqliMatchStatementPtrInput is an input type that accepts WebACLSqliMatchStatementArgs, WebACLSqliMatchStatementPtr and WebACLSqliMatchStatementPtrOutput values.
// You can construct a concrete instance of `WebACLSqliMatchStatementPtrInput` via:
//
//          WebACLSqliMatchStatementArgs{...}
//
//  or:
//
//          nil
type WebACLSqliMatchStatementPtrInput interface {
	pulumi.Input

	ToWebACLSqliMatchStatementPtrOutput() WebACLSqliMatchStatementPtrOutput
	ToWebACLSqliMatchStatementPtrOutputWithContext(context.Context) WebACLSqliMatchStatementPtrOutput
}

type webACLSqliMatchStatementPtrType WebACLSqliMatchStatementArgs

func WebACLSqliMatchStatementPtr(v *WebACLSqliMatchStatementArgs) WebACLSqliMatchStatementPtrInput {
	return (*webACLSqliMatchStatementPtrType)(v)
}

func (*webACLSqliMatchStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLSqliMatchStatement)(nil)).Elem()
}

func (i *webACLSqliMatchStatementPtrType) ToWebACLSqliMatchStatementPtrOutput() WebACLSqliMatchStatementPtrOutput {
	return i.ToWebACLSqliMatchStatementPtrOutputWithContext(context.Background())
}

func (i *webACLSqliMatchStatementPtrType) ToWebACLSqliMatchStatementPtrOutputWithContext(ctx context.Context) WebACLSqliMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLSqliMatchStatementPtrOutput)
}

// Sqli Match Statement.
type WebACLSqliMatchStatementOutput struct{ *pulumi.OutputState }

func (WebACLSqliMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLSqliMatchStatement)(nil)).Elem()
}

func (o WebACLSqliMatchStatementOutput) ToWebACLSqliMatchStatementOutput() WebACLSqliMatchStatementOutput {
	return o
}

func (o WebACLSqliMatchStatementOutput) ToWebACLSqliMatchStatementOutputWithContext(ctx context.Context) WebACLSqliMatchStatementOutput {
	return o
}

func (o WebACLSqliMatchStatementOutput) ToWebACLSqliMatchStatementPtrOutput() WebACLSqliMatchStatementPtrOutput {
	return o.ToWebACLSqliMatchStatementPtrOutputWithContext(context.Background())
}

func (o WebACLSqliMatchStatementOutput) ToWebACLSqliMatchStatementPtrOutputWithContext(ctx context.Context) WebACLSqliMatchStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLSqliMatchStatement) *WebACLSqliMatchStatement {
		return &v
	}).(WebACLSqliMatchStatementPtrOutput)
}

func (o WebACLSqliMatchStatementOutput) FieldToMatch() WebACLFieldToMatchOutput {
	return o.ApplyT(func(v WebACLSqliMatchStatement) WebACLFieldToMatch { return v.FieldToMatch }).(WebACLFieldToMatchOutput)
}

func (o WebACLSqliMatchStatementOutput) TextTransformations() WebACLTextTransformationArrayOutput {
	return o.ApplyT(func(v WebACLSqliMatchStatement) []WebACLTextTransformation { return v.TextTransformations }).(WebACLTextTransformationArrayOutput)
}

type WebACLSqliMatchStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLSqliMatchStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLSqliMatchStatement)(nil)).Elem()
}

func (o WebACLSqliMatchStatementPtrOutput) ToWebACLSqliMatchStatementPtrOutput() WebACLSqliMatchStatementPtrOutput {
	return o
}

func (o WebACLSqliMatchStatementPtrOutput) ToWebACLSqliMatchStatementPtrOutputWithContext(ctx context.Context) WebACLSqliMatchStatementPtrOutput {
	return o
}

func (o WebACLSqliMatchStatementPtrOutput) Elem() WebACLSqliMatchStatementOutput {
	return o.ApplyT(func(v *WebACLSqliMatchStatement) WebACLSqliMatchStatement {
		if v != nil {
			return *v
		}
		var ret WebACLSqliMatchStatement
		return ret
	}).(WebACLSqliMatchStatementOutput)
}

func (o WebACLSqliMatchStatementPtrOutput) FieldToMatch() WebACLFieldToMatchPtrOutput {
	return o.ApplyT(func(v *WebACLSqliMatchStatement) *WebACLFieldToMatch {
		if v == nil {
			return nil
		}
		return &v.FieldToMatch
	}).(WebACLFieldToMatchPtrOutput)
}

func (o WebACLSqliMatchStatementPtrOutput) TextTransformations() WebACLTextTransformationArrayOutput {
	return o.ApplyT(func(v *WebACLSqliMatchStatement) []WebACLTextTransformation {
		if v == nil {
			return nil
		}
		return v.TextTransformations
	}).(WebACLTextTransformationArrayOutput)
}

// First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
type WebACLStatement struct {
	AndStatement                      *WebACLAndStatement                      `pulumi:"andStatement"`
	ByteMatchStatement                *WebACLByteMatchStatement                `pulumi:"byteMatchStatement"`
	GeoMatchStatement                 *WebACLGeoMatchStatement                 `pulumi:"geoMatchStatement"`
	IPSetReferenceStatement           *WebACLIPSetReferenceStatement           `pulumi:"iPSetReferenceStatement"`
	LabelMatchStatement               *WebACLLabelMatchStatement               `pulumi:"labelMatchStatement"`
	ManagedRuleGroupStatement         *WebACLManagedRuleGroupStatement         `pulumi:"managedRuleGroupStatement"`
	NotStatement                      *WebACLNotStatement                      `pulumi:"notStatement"`
	OrStatement                       *WebACLOrStatement                       `pulumi:"orStatement"`
	RateBasedStatement                *WebACLRateBasedStatement                `pulumi:"rateBasedStatement"`
	RegexPatternSetReferenceStatement *WebACLRegexPatternSetReferenceStatement `pulumi:"regexPatternSetReferenceStatement"`
	RuleGroupReferenceStatement       *WebACLRuleGroupReferenceStatement       `pulumi:"ruleGroupReferenceStatement"`
	SizeConstraintStatement           *WebACLSizeConstraintStatement           `pulumi:"sizeConstraintStatement"`
	SqliMatchStatement                *WebACLSqliMatchStatement                `pulumi:"sqliMatchStatement"`
	XssMatchStatement                 *WebACLXssMatchStatement                 `pulumi:"xssMatchStatement"`
}

// WebACLStatementInput is an input type that accepts WebACLStatementArgs and WebACLStatementOutput values.
// You can construct a concrete instance of `WebACLStatementInput` via:
//
//          WebACLStatementArgs{...}
type WebACLStatementInput interface {
	pulumi.Input

	ToWebACLStatementOutput() WebACLStatementOutput
	ToWebACLStatementOutputWithContext(context.Context) WebACLStatementOutput
}

// First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
type WebACLStatementArgs struct {
	AndStatement                      WebACLAndStatementPtrInput                      `pulumi:"andStatement"`
	ByteMatchStatement                WebACLByteMatchStatementPtrInput                `pulumi:"byteMatchStatement"`
	GeoMatchStatement                 WebACLGeoMatchStatementPtrInput                 `pulumi:"geoMatchStatement"`
	IPSetReferenceStatement           WebACLIPSetReferenceStatementPtrInput           `pulumi:"iPSetReferenceStatement"`
	LabelMatchStatement               WebACLLabelMatchStatementPtrInput               `pulumi:"labelMatchStatement"`
	ManagedRuleGroupStatement         WebACLManagedRuleGroupStatementPtrInput         `pulumi:"managedRuleGroupStatement"`
	NotStatement                      WebACLNotStatementPtrInput                      `pulumi:"notStatement"`
	OrStatement                       WebACLOrStatementPtrInput                       `pulumi:"orStatement"`
	RateBasedStatement                WebACLRateBasedStatementPtrInput                `pulumi:"rateBasedStatement"`
	RegexPatternSetReferenceStatement WebACLRegexPatternSetReferenceStatementPtrInput `pulumi:"regexPatternSetReferenceStatement"`
	RuleGroupReferenceStatement       WebACLRuleGroupReferenceStatementPtrInput       `pulumi:"ruleGroupReferenceStatement"`
	SizeConstraintStatement           WebACLSizeConstraintStatementPtrInput           `pulumi:"sizeConstraintStatement"`
	SqliMatchStatement                WebACLSqliMatchStatementPtrInput                `pulumi:"sqliMatchStatement"`
	XssMatchStatement                 WebACLXssMatchStatementPtrInput                 `pulumi:"xssMatchStatement"`
}

func (WebACLStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLStatement)(nil)).Elem()
}

func (i WebACLStatementArgs) ToWebACLStatementOutput() WebACLStatementOutput {
	return i.ToWebACLStatementOutputWithContext(context.Background())
}

func (i WebACLStatementArgs) ToWebACLStatementOutputWithContext(ctx context.Context) WebACLStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLStatementOutput)
}

func (i WebACLStatementArgs) ToWebACLStatementPtrOutput() WebACLStatementPtrOutput {
	return i.ToWebACLStatementPtrOutputWithContext(context.Background())
}

func (i WebACLStatementArgs) ToWebACLStatementPtrOutputWithContext(ctx context.Context) WebACLStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLStatementOutput).ToWebACLStatementPtrOutputWithContext(ctx)
}

// WebACLStatementPtrInput is an input type that accepts WebACLStatementArgs, WebACLStatementPtr and WebACLStatementPtrOutput values.
// You can construct a concrete instance of `WebACLStatementPtrInput` via:
//
//          WebACLStatementArgs{...}
//
//  or:
//
//          nil
type WebACLStatementPtrInput interface {
	pulumi.Input

	ToWebACLStatementPtrOutput() WebACLStatementPtrOutput
	ToWebACLStatementPtrOutputWithContext(context.Context) WebACLStatementPtrOutput
}

type webACLStatementPtrType WebACLStatementArgs

func WebACLStatementPtr(v *WebACLStatementArgs) WebACLStatementPtrInput {
	return (*webACLStatementPtrType)(v)
}

func (*webACLStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLStatement)(nil)).Elem()
}

func (i *webACLStatementPtrType) ToWebACLStatementPtrOutput() WebACLStatementPtrOutput {
	return i.ToWebACLStatementPtrOutputWithContext(context.Background())
}

func (i *webACLStatementPtrType) ToWebACLStatementPtrOutputWithContext(ctx context.Context) WebACLStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLStatementPtrOutput)
}

// WebACLStatementArrayInput is an input type that accepts WebACLStatementArray and WebACLStatementArrayOutput values.
// You can construct a concrete instance of `WebACLStatementArrayInput` via:
//
//          WebACLStatementArray{ WebACLStatementArgs{...} }
type WebACLStatementArrayInput interface {
	pulumi.Input

	ToWebACLStatementArrayOutput() WebACLStatementArrayOutput
	ToWebACLStatementArrayOutputWithContext(context.Context) WebACLStatementArrayOutput
}

type WebACLStatementArray []WebACLStatementInput

func (WebACLStatementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLStatement)(nil)).Elem()
}

func (i WebACLStatementArray) ToWebACLStatementArrayOutput() WebACLStatementArrayOutput {
	return i.ToWebACLStatementArrayOutputWithContext(context.Background())
}

func (i WebACLStatementArray) ToWebACLStatementArrayOutputWithContext(ctx context.Context) WebACLStatementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLStatementArrayOutput)
}

// First level statement that contains conditions, such as ByteMatch, SizeConstraint, etc
type WebACLStatementOutput struct{ *pulumi.OutputState }

func (WebACLStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLStatement)(nil)).Elem()
}

func (o WebACLStatementOutput) ToWebACLStatementOutput() WebACLStatementOutput {
	return o
}

func (o WebACLStatementOutput) ToWebACLStatementOutputWithContext(ctx context.Context) WebACLStatementOutput {
	return o
}

func (o WebACLStatementOutput) ToWebACLStatementPtrOutput() WebACLStatementPtrOutput {
	return o.ToWebACLStatementPtrOutputWithContext(context.Background())
}

func (o WebACLStatementOutput) ToWebACLStatementPtrOutputWithContext(ctx context.Context) WebACLStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLStatement) *WebACLStatement {
		return &v
	}).(WebACLStatementPtrOutput)
}

func (o WebACLStatementOutput) AndStatement() WebACLAndStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLAndStatement { return v.AndStatement }).(WebACLAndStatementPtrOutput)
}

func (o WebACLStatementOutput) ByteMatchStatement() WebACLByteMatchStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLByteMatchStatement { return v.ByteMatchStatement }).(WebACLByteMatchStatementPtrOutput)
}

func (o WebACLStatementOutput) GeoMatchStatement() WebACLGeoMatchStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLGeoMatchStatement { return v.GeoMatchStatement }).(WebACLGeoMatchStatementPtrOutput)
}

func (o WebACLStatementOutput) IPSetReferenceStatement() WebACLIPSetReferenceStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLIPSetReferenceStatement { return v.IPSetReferenceStatement }).(WebACLIPSetReferenceStatementPtrOutput)
}

func (o WebACLStatementOutput) LabelMatchStatement() WebACLLabelMatchStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLLabelMatchStatement { return v.LabelMatchStatement }).(WebACLLabelMatchStatementPtrOutput)
}

func (o WebACLStatementOutput) ManagedRuleGroupStatement() WebACLManagedRuleGroupStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLManagedRuleGroupStatement { return v.ManagedRuleGroupStatement }).(WebACLManagedRuleGroupStatementPtrOutput)
}

func (o WebACLStatementOutput) NotStatement() WebACLNotStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLNotStatement { return v.NotStatement }).(WebACLNotStatementPtrOutput)
}

func (o WebACLStatementOutput) OrStatement() WebACLOrStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLOrStatement { return v.OrStatement }).(WebACLOrStatementPtrOutput)
}

func (o WebACLStatementOutput) RateBasedStatement() WebACLRateBasedStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLRateBasedStatement { return v.RateBasedStatement }).(WebACLRateBasedStatementPtrOutput)
}

func (o WebACLStatementOutput) RegexPatternSetReferenceStatement() WebACLRegexPatternSetReferenceStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLRegexPatternSetReferenceStatement {
		return v.RegexPatternSetReferenceStatement
	}).(WebACLRegexPatternSetReferenceStatementPtrOutput)
}

func (o WebACLStatementOutput) RuleGroupReferenceStatement() WebACLRuleGroupReferenceStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLRuleGroupReferenceStatement { return v.RuleGroupReferenceStatement }).(WebACLRuleGroupReferenceStatementPtrOutput)
}

func (o WebACLStatementOutput) SizeConstraintStatement() WebACLSizeConstraintStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLSizeConstraintStatement { return v.SizeConstraintStatement }).(WebACLSizeConstraintStatementPtrOutput)
}

func (o WebACLStatementOutput) SqliMatchStatement() WebACLSqliMatchStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLSqliMatchStatement { return v.SqliMatchStatement }).(WebACLSqliMatchStatementPtrOutput)
}

func (o WebACLStatementOutput) XssMatchStatement() WebACLXssMatchStatementPtrOutput {
	return o.ApplyT(func(v WebACLStatement) *WebACLXssMatchStatement { return v.XssMatchStatement }).(WebACLXssMatchStatementPtrOutput)
}

type WebACLStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLStatement)(nil)).Elem()
}

func (o WebACLStatementPtrOutput) ToWebACLStatementPtrOutput() WebACLStatementPtrOutput {
	return o
}

func (o WebACLStatementPtrOutput) ToWebACLStatementPtrOutputWithContext(ctx context.Context) WebACLStatementPtrOutput {
	return o
}

func (o WebACLStatementPtrOutput) Elem() WebACLStatementOutput {
	return o.ApplyT(func(v *WebACLStatement) WebACLStatement {
		if v != nil {
			return *v
		}
		var ret WebACLStatement
		return ret
	}).(WebACLStatementOutput)
}

func (o WebACLStatementPtrOutput) AndStatement() WebACLAndStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLAndStatement {
		if v == nil {
			return nil
		}
		return v.AndStatement
	}).(WebACLAndStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) ByteMatchStatement() WebACLByteMatchStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLByteMatchStatement {
		if v == nil {
			return nil
		}
		return v.ByteMatchStatement
	}).(WebACLByteMatchStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) GeoMatchStatement() WebACLGeoMatchStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLGeoMatchStatement {
		if v == nil {
			return nil
		}
		return v.GeoMatchStatement
	}).(WebACLGeoMatchStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) IPSetReferenceStatement() WebACLIPSetReferenceStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLIPSetReferenceStatement {
		if v == nil {
			return nil
		}
		return v.IPSetReferenceStatement
	}).(WebACLIPSetReferenceStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) LabelMatchStatement() WebACLLabelMatchStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLLabelMatchStatement {
		if v == nil {
			return nil
		}
		return v.LabelMatchStatement
	}).(WebACLLabelMatchStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) ManagedRuleGroupStatement() WebACLManagedRuleGroupStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLManagedRuleGroupStatement {
		if v == nil {
			return nil
		}
		return v.ManagedRuleGroupStatement
	}).(WebACLManagedRuleGroupStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) NotStatement() WebACLNotStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLNotStatement {
		if v == nil {
			return nil
		}
		return v.NotStatement
	}).(WebACLNotStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) OrStatement() WebACLOrStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLOrStatement {
		if v == nil {
			return nil
		}
		return v.OrStatement
	}).(WebACLOrStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) RateBasedStatement() WebACLRateBasedStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLRateBasedStatement {
		if v == nil {
			return nil
		}
		return v.RateBasedStatement
	}).(WebACLRateBasedStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) RegexPatternSetReferenceStatement() WebACLRegexPatternSetReferenceStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLRegexPatternSetReferenceStatement {
		if v == nil {
			return nil
		}
		return v.RegexPatternSetReferenceStatement
	}).(WebACLRegexPatternSetReferenceStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) RuleGroupReferenceStatement() WebACLRuleGroupReferenceStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLRuleGroupReferenceStatement {
		if v == nil {
			return nil
		}
		return v.RuleGroupReferenceStatement
	}).(WebACLRuleGroupReferenceStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) SizeConstraintStatement() WebACLSizeConstraintStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLSizeConstraintStatement {
		if v == nil {
			return nil
		}
		return v.SizeConstraintStatement
	}).(WebACLSizeConstraintStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) SqliMatchStatement() WebACLSqliMatchStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLSqliMatchStatement {
		if v == nil {
			return nil
		}
		return v.SqliMatchStatement
	}).(WebACLSqliMatchStatementPtrOutput)
}

func (o WebACLStatementPtrOutput) XssMatchStatement() WebACLXssMatchStatementPtrOutput {
	return o.ApplyT(func(v *WebACLStatement) *WebACLXssMatchStatement {
		if v == nil {
			return nil
		}
		return v.XssMatchStatement
	}).(WebACLXssMatchStatementPtrOutput)
}

type WebACLStatementArrayOutput struct{ *pulumi.OutputState }

func (WebACLStatementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLStatement)(nil)).Elem()
}

func (o WebACLStatementArrayOutput) ToWebACLStatementArrayOutput() WebACLStatementArrayOutput {
	return o
}

func (o WebACLStatementArrayOutput) ToWebACLStatementArrayOutputWithContext(ctx context.Context) WebACLStatementArrayOutput {
	return o
}

func (o WebACLStatementArrayOutput) Index(i pulumi.IntInput) WebACLStatementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebACLStatement {
		return vs[0].([]WebACLStatement)[vs[1].(int)]
	}).(WebACLStatementOutput)
}

type WebACLTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// WebACLTagInput is an input type that accepts WebACLTagArgs and WebACLTagOutput values.
// You can construct a concrete instance of `WebACLTagInput` via:
//
//          WebACLTagArgs{...}
type WebACLTagInput interface {
	pulumi.Input

	ToWebACLTagOutput() WebACLTagOutput
	ToWebACLTagOutputWithContext(context.Context) WebACLTagOutput
}

type WebACLTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (WebACLTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLTag)(nil)).Elem()
}

func (i WebACLTagArgs) ToWebACLTagOutput() WebACLTagOutput {
	return i.ToWebACLTagOutputWithContext(context.Background())
}

func (i WebACLTagArgs) ToWebACLTagOutputWithContext(ctx context.Context) WebACLTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLTagOutput)
}

// WebACLTagArrayInput is an input type that accepts WebACLTagArray and WebACLTagArrayOutput values.
// You can construct a concrete instance of `WebACLTagArrayInput` via:
//
//          WebACLTagArray{ WebACLTagArgs{...} }
type WebACLTagArrayInput interface {
	pulumi.Input

	ToWebACLTagArrayOutput() WebACLTagArrayOutput
	ToWebACLTagArrayOutputWithContext(context.Context) WebACLTagArrayOutput
}

type WebACLTagArray []WebACLTagInput

func (WebACLTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLTag)(nil)).Elem()
}

func (i WebACLTagArray) ToWebACLTagArrayOutput() WebACLTagArrayOutput {
	return i.ToWebACLTagArrayOutputWithContext(context.Background())
}

func (i WebACLTagArray) ToWebACLTagArrayOutputWithContext(ctx context.Context) WebACLTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLTagArrayOutput)
}

type WebACLTagOutput struct{ *pulumi.OutputState }

func (WebACLTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLTag)(nil)).Elem()
}

func (o WebACLTagOutput) ToWebACLTagOutput() WebACLTagOutput {
	return o
}

func (o WebACLTagOutput) ToWebACLTagOutputWithContext(ctx context.Context) WebACLTagOutput {
	return o
}

func (o WebACLTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebACLTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o WebACLTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebACLTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WebACLTagArrayOutput struct{ *pulumi.OutputState }

func (WebACLTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLTag)(nil)).Elem()
}

func (o WebACLTagArrayOutput) ToWebACLTagArrayOutput() WebACLTagArrayOutput {
	return o
}

func (o WebACLTagArrayOutput) ToWebACLTagArrayOutputWithContext(ctx context.Context) WebACLTagArrayOutput {
	return o
}

func (o WebACLTagArrayOutput) Index(i pulumi.IntInput) WebACLTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebACLTag {
		return vs[0].([]WebACLTag)[vs[1].(int)]
	}).(WebACLTagOutput)
}

// Text Transformation on the Search String before match.
type WebACLTextTransformation struct {
	Priority int    `pulumi:"priority"`
	Type     string `pulumi:"type"`
}

// WebACLTextTransformationInput is an input type that accepts WebACLTextTransformationArgs and WebACLTextTransformationOutput values.
// You can construct a concrete instance of `WebACLTextTransformationInput` via:
//
//          WebACLTextTransformationArgs{...}
type WebACLTextTransformationInput interface {
	pulumi.Input

	ToWebACLTextTransformationOutput() WebACLTextTransformationOutput
	ToWebACLTextTransformationOutputWithContext(context.Context) WebACLTextTransformationOutput
}

// Text Transformation on the Search String before match.
type WebACLTextTransformationArgs struct {
	Priority pulumi.IntInput    `pulumi:"priority"`
	Type     pulumi.StringInput `pulumi:"type"`
}

func (WebACLTextTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLTextTransformation)(nil)).Elem()
}

func (i WebACLTextTransformationArgs) ToWebACLTextTransformationOutput() WebACLTextTransformationOutput {
	return i.ToWebACLTextTransformationOutputWithContext(context.Background())
}

func (i WebACLTextTransformationArgs) ToWebACLTextTransformationOutputWithContext(ctx context.Context) WebACLTextTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLTextTransformationOutput)
}

// WebACLTextTransformationArrayInput is an input type that accepts WebACLTextTransformationArray and WebACLTextTransformationArrayOutput values.
// You can construct a concrete instance of `WebACLTextTransformationArrayInput` via:
//
//          WebACLTextTransformationArray{ WebACLTextTransformationArgs{...} }
type WebACLTextTransformationArrayInput interface {
	pulumi.Input

	ToWebACLTextTransformationArrayOutput() WebACLTextTransformationArrayOutput
	ToWebACLTextTransformationArrayOutputWithContext(context.Context) WebACLTextTransformationArrayOutput
}

type WebACLTextTransformationArray []WebACLTextTransformationInput

func (WebACLTextTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLTextTransformation)(nil)).Elem()
}

func (i WebACLTextTransformationArray) ToWebACLTextTransformationArrayOutput() WebACLTextTransformationArrayOutput {
	return i.ToWebACLTextTransformationArrayOutputWithContext(context.Background())
}

func (i WebACLTextTransformationArray) ToWebACLTextTransformationArrayOutputWithContext(ctx context.Context) WebACLTextTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLTextTransformationArrayOutput)
}

// Text Transformation on the Search String before match.
type WebACLTextTransformationOutput struct{ *pulumi.OutputState }

func (WebACLTextTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLTextTransformation)(nil)).Elem()
}

func (o WebACLTextTransformationOutput) ToWebACLTextTransformationOutput() WebACLTextTransformationOutput {
	return o
}

func (o WebACLTextTransformationOutput) ToWebACLTextTransformationOutputWithContext(ctx context.Context) WebACLTextTransformationOutput {
	return o
}

func (o WebACLTextTransformationOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v WebACLTextTransformation) int { return v.Priority }).(pulumi.IntOutput)
}

func (o WebACLTextTransformationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLTextTransformation) string { return v.Type }).(pulumi.StringOutput)
}

type WebACLTextTransformationArrayOutput struct{ *pulumi.OutputState }

func (WebACLTextTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebACLTextTransformation)(nil)).Elem()
}

func (o WebACLTextTransformationArrayOutput) ToWebACLTextTransformationArrayOutput() WebACLTextTransformationArrayOutput {
	return o
}

func (o WebACLTextTransformationArrayOutput) ToWebACLTextTransformationArrayOutputWithContext(ctx context.Context) WebACLTextTransformationArrayOutput {
	return o
}

func (o WebACLTextTransformationArrayOutput) Index(i pulumi.IntInput) WebACLTextTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebACLTextTransformation {
		return vs[0].([]WebACLTextTransformation)[vs[1].(int)]
	}).(WebACLTextTransformationOutput)
}

// Visibility Metric of the WebACL.
type WebACLVisibilityConfig struct {
	CloudWatchMetricsEnabled bool   `pulumi:"cloudWatchMetricsEnabled"`
	MetricName               string `pulumi:"metricName"`
	SampledRequestsEnabled   bool   `pulumi:"sampledRequestsEnabled"`
}

// WebACLVisibilityConfigInput is an input type that accepts WebACLVisibilityConfigArgs and WebACLVisibilityConfigOutput values.
// You can construct a concrete instance of `WebACLVisibilityConfigInput` via:
//
//          WebACLVisibilityConfigArgs{...}
type WebACLVisibilityConfigInput interface {
	pulumi.Input

	ToWebACLVisibilityConfigOutput() WebACLVisibilityConfigOutput
	ToWebACLVisibilityConfigOutputWithContext(context.Context) WebACLVisibilityConfigOutput
}

// Visibility Metric of the WebACL.
type WebACLVisibilityConfigArgs struct {
	CloudWatchMetricsEnabled pulumi.BoolInput   `pulumi:"cloudWatchMetricsEnabled"`
	MetricName               pulumi.StringInput `pulumi:"metricName"`
	SampledRequestsEnabled   pulumi.BoolInput   `pulumi:"sampledRequestsEnabled"`
}

func (WebACLVisibilityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLVisibilityConfig)(nil)).Elem()
}

func (i WebACLVisibilityConfigArgs) ToWebACLVisibilityConfigOutput() WebACLVisibilityConfigOutput {
	return i.ToWebACLVisibilityConfigOutputWithContext(context.Background())
}

func (i WebACLVisibilityConfigArgs) ToWebACLVisibilityConfigOutputWithContext(ctx context.Context) WebACLVisibilityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLVisibilityConfigOutput)
}

func (i WebACLVisibilityConfigArgs) ToWebACLVisibilityConfigPtrOutput() WebACLVisibilityConfigPtrOutput {
	return i.ToWebACLVisibilityConfigPtrOutputWithContext(context.Background())
}

func (i WebACLVisibilityConfigArgs) ToWebACLVisibilityConfigPtrOutputWithContext(ctx context.Context) WebACLVisibilityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLVisibilityConfigOutput).ToWebACLVisibilityConfigPtrOutputWithContext(ctx)
}

// WebACLVisibilityConfigPtrInput is an input type that accepts WebACLVisibilityConfigArgs, WebACLVisibilityConfigPtr and WebACLVisibilityConfigPtrOutput values.
// You can construct a concrete instance of `WebACLVisibilityConfigPtrInput` via:
//
//          WebACLVisibilityConfigArgs{...}
//
//  or:
//
//          nil
type WebACLVisibilityConfigPtrInput interface {
	pulumi.Input

	ToWebACLVisibilityConfigPtrOutput() WebACLVisibilityConfigPtrOutput
	ToWebACLVisibilityConfigPtrOutputWithContext(context.Context) WebACLVisibilityConfigPtrOutput
}

type webACLVisibilityConfigPtrType WebACLVisibilityConfigArgs

func WebACLVisibilityConfigPtr(v *WebACLVisibilityConfigArgs) WebACLVisibilityConfigPtrInput {
	return (*webACLVisibilityConfigPtrType)(v)
}

func (*webACLVisibilityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLVisibilityConfig)(nil)).Elem()
}

func (i *webACLVisibilityConfigPtrType) ToWebACLVisibilityConfigPtrOutput() WebACLVisibilityConfigPtrOutput {
	return i.ToWebACLVisibilityConfigPtrOutputWithContext(context.Background())
}

func (i *webACLVisibilityConfigPtrType) ToWebACLVisibilityConfigPtrOutputWithContext(ctx context.Context) WebACLVisibilityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLVisibilityConfigPtrOutput)
}

// Visibility Metric of the WebACL.
type WebACLVisibilityConfigOutput struct{ *pulumi.OutputState }

func (WebACLVisibilityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLVisibilityConfig)(nil)).Elem()
}

func (o WebACLVisibilityConfigOutput) ToWebACLVisibilityConfigOutput() WebACLVisibilityConfigOutput {
	return o
}

func (o WebACLVisibilityConfigOutput) ToWebACLVisibilityConfigOutputWithContext(ctx context.Context) WebACLVisibilityConfigOutput {
	return o
}

func (o WebACLVisibilityConfigOutput) ToWebACLVisibilityConfigPtrOutput() WebACLVisibilityConfigPtrOutput {
	return o.ToWebACLVisibilityConfigPtrOutputWithContext(context.Background())
}

func (o WebACLVisibilityConfigOutput) ToWebACLVisibilityConfigPtrOutputWithContext(ctx context.Context) WebACLVisibilityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLVisibilityConfig) *WebACLVisibilityConfig {
		return &v
	}).(WebACLVisibilityConfigPtrOutput)
}

func (o WebACLVisibilityConfigOutput) CloudWatchMetricsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebACLVisibilityConfig) bool { return v.CloudWatchMetricsEnabled }).(pulumi.BoolOutput)
}

func (o WebACLVisibilityConfigOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v WebACLVisibilityConfig) string { return v.MetricName }).(pulumi.StringOutput)
}

func (o WebACLVisibilityConfigOutput) SampledRequestsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebACLVisibilityConfig) bool { return v.SampledRequestsEnabled }).(pulumi.BoolOutput)
}

type WebACLVisibilityConfigPtrOutput struct{ *pulumi.OutputState }

func (WebACLVisibilityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLVisibilityConfig)(nil)).Elem()
}

func (o WebACLVisibilityConfigPtrOutput) ToWebACLVisibilityConfigPtrOutput() WebACLVisibilityConfigPtrOutput {
	return o
}

func (o WebACLVisibilityConfigPtrOutput) ToWebACLVisibilityConfigPtrOutputWithContext(ctx context.Context) WebACLVisibilityConfigPtrOutput {
	return o
}

func (o WebACLVisibilityConfigPtrOutput) Elem() WebACLVisibilityConfigOutput {
	return o.ApplyT(func(v *WebACLVisibilityConfig) WebACLVisibilityConfig {
		if v != nil {
			return *v
		}
		var ret WebACLVisibilityConfig
		return ret
	}).(WebACLVisibilityConfigOutput)
}

func (o WebACLVisibilityConfigPtrOutput) CloudWatchMetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebACLVisibilityConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.CloudWatchMetricsEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o WebACLVisibilityConfigPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebACLVisibilityConfig) *string {
		if v == nil {
			return nil
		}
		return &v.MetricName
	}).(pulumi.StringPtrOutput)
}

func (o WebACLVisibilityConfigPtrOutput) SampledRequestsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebACLVisibilityConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.SampledRequestsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Xss Match Statement.
type WebACLXssMatchStatement struct {
	FieldToMatch        WebACLFieldToMatch         `pulumi:"fieldToMatch"`
	TextTransformations []WebACLTextTransformation `pulumi:"textTransformations"`
}

// WebACLXssMatchStatementInput is an input type that accepts WebACLXssMatchStatementArgs and WebACLXssMatchStatementOutput values.
// You can construct a concrete instance of `WebACLXssMatchStatementInput` via:
//
//          WebACLXssMatchStatementArgs{...}
type WebACLXssMatchStatementInput interface {
	pulumi.Input

	ToWebACLXssMatchStatementOutput() WebACLXssMatchStatementOutput
	ToWebACLXssMatchStatementOutputWithContext(context.Context) WebACLXssMatchStatementOutput
}

// Xss Match Statement.
type WebACLXssMatchStatementArgs struct {
	FieldToMatch        WebACLFieldToMatchInput            `pulumi:"fieldToMatch"`
	TextTransformations WebACLTextTransformationArrayInput `pulumi:"textTransformations"`
}

func (WebACLXssMatchStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLXssMatchStatement)(nil)).Elem()
}

func (i WebACLXssMatchStatementArgs) ToWebACLXssMatchStatementOutput() WebACLXssMatchStatementOutput {
	return i.ToWebACLXssMatchStatementOutputWithContext(context.Background())
}

func (i WebACLXssMatchStatementArgs) ToWebACLXssMatchStatementOutputWithContext(ctx context.Context) WebACLXssMatchStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLXssMatchStatementOutput)
}

func (i WebACLXssMatchStatementArgs) ToWebACLXssMatchStatementPtrOutput() WebACLXssMatchStatementPtrOutput {
	return i.ToWebACLXssMatchStatementPtrOutputWithContext(context.Background())
}

func (i WebACLXssMatchStatementArgs) ToWebACLXssMatchStatementPtrOutputWithContext(ctx context.Context) WebACLXssMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLXssMatchStatementOutput).ToWebACLXssMatchStatementPtrOutputWithContext(ctx)
}

// WebACLXssMatchStatementPtrInput is an input type that accepts WebACLXssMatchStatementArgs, WebACLXssMatchStatementPtr and WebACLXssMatchStatementPtrOutput values.
// You can construct a concrete instance of `WebACLXssMatchStatementPtrInput` via:
//
//          WebACLXssMatchStatementArgs{...}
//
//  or:
//
//          nil
type WebACLXssMatchStatementPtrInput interface {
	pulumi.Input

	ToWebACLXssMatchStatementPtrOutput() WebACLXssMatchStatementPtrOutput
	ToWebACLXssMatchStatementPtrOutputWithContext(context.Context) WebACLXssMatchStatementPtrOutput
}

type webACLXssMatchStatementPtrType WebACLXssMatchStatementArgs

func WebACLXssMatchStatementPtr(v *WebACLXssMatchStatementArgs) WebACLXssMatchStatementPtrInput {
	return (*webACLXssMatchStatementPtrType)(v)
}

func (*webACLXssMatchStatementPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLXssMatchStatement)(nil)).Elem()
}

func (i *webACLXssMatchStatementPtrType) ToWebACLXssMatchStatementPtrOutput() WebACLXssMatchStatementPtrOutput {
	return i.ToWebACLXssMatchStatementPtrOutputWithContext(context.Background())
}

func (i *webACLXssMatchStatementPtrType) ToWebACLXssMatchStatementPtrOutputWithContext(ctx context.Context) WebACLXssMatchStatementPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebACLXssMatchStatementPtrOutput)
}

// Xss Match Statement.
type WebACLXssMatchStatementOutput struct{ *pulumi.OutputState }

func (WebACLXssMatchStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebACLXssMatchStatement)(nil)).Elem()
}

func (o WebACLXssMatchStatementOutput) ToWebACLXssMatchStatementOutput() WebACLXssMatchStatementOutput {
	return o
}

func (o WebACLXssMatchStatementOutput) ToWebACLXssMatchStatementOutputWithContext(ctx context.Context) WebACLXssMatchStatementOutput {
	return o
}

func (o WebACLXssMatchStatementOutput) ToWebACLXssMatchStatementPtrOutput() WebACLXssMatchStatementPtrOutput {
	return o.ToWebACLXssMatchStatementPtrOutputWithContext(context.Background())
}

func (o WebACLXssMatchStatementOutput) ToWebACLXssMatchStatementPtrOutputWithContext(ctx context.Context) WebACLXssMatchStatementPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebACLXssMatchStatement) *WebACLXssMatchStatement {
		return &v
	}).(WebACLXssMatchStatementPtrOutput)
}

func (o WebACLXssMatchStatementOutput) FieldToMatch() WebACLFieldToMatchOutput {
	return o.ApplyT(func(v WebACLXssMatchStatement) WebACLFieldToMatch { return v.FieldToMatch }).(WebACLFieldToMatchOutput)
}

func (o WebACLXssMatchStatementOutput) TextTransformations() WebACLTextTransformationArrayOutput {
	return o.ApplyT(func(v WebACLXssMatchStatement) []WebACLTextTransformation { return v.TextTransformations }).(WebACLTextTransformationArrayOutput)
}

type WebACLXssMatchStatementPtrOutput struct{ *pulumi.OutputState }

func (WebACLXssMatchStatementPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebACLXssMatchStatement)(nil)).Elem()
}

func (o WebACLXssMatchStatementPtrOutput) ToWebACLXssMatchStatementPtrOutput() WebACLXssMatchStatementPtrOutput {
	return o
}

func (o WebACLXssMatchStatementPtrOutput) ToWebACLXssMatchStatementPtrOutputWithContext(ctx context.Context) WebACLXssMatchStatementPtrOutput {
	return o
}

func (o WebACLXssMatchStatementPtrOutput) Elem() WebACLXssMatchStatementOutput {
	return o.ApplyT(func(v *WebACLXssMatchStatement) WebACLXssMatchStatement {
		if v != nil {
			return *v
		}
		var ret WebACLXssMatchStatement
		return ret
	}).(WebACLXssMatchStatementOutput)
}

func (o WebACLXssMatchStatementPtrOutput) FieldToMatch() WebACLFieldToMatchPtrOutput {
	return o.ApplyT(func(v *WebACLXssMatchStatement) *WebACLFieldToMatch {
		if v == nil {
			return nil
		}
		return &v.FieldToMatch
	}).(WebACLFieldToMatchPtrOutput)
}

func (o WebACLXssMatchStatementPtrOutput) TextTransformations() WebACLTextTransformationArrayOutput {
	return o.ApplyT(func(v *WebACLXssMatchStatement) []WebACLTextTransformation {
		if v == nil {
			return nil
		}
		return v.TextTransformations
	}).(WebACLTextTransformationArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(IPSetTagOutput{})
	pulumi.RegisterOutputType(IPSetTagArrayOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationFieldToMatchOutput{})
	pulumi.RegisterOutputType(LoggingConfigurationFieldToMatchArrayOutput{})
	pulumi.RegisterOutputType(RegexPatternSetTagOutput{})
	pulumi.RegisterOutputType(RegexPatternSetTagArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupAndStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupAndStatementPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupByteMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupByteMatchStatementPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupCustomResponseBodiesOutput{})
	pulumi.RegisterOutputType(RuleGroupCustomResponseBodiesPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupFieldToMatchOutput{})
	pulumi.RegisterOutputType(RuleGroupFieldToMatchPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupForwardedIPConfigurationOutput{})
	pulumi.RegisterOutputType(RuleGroupForwardedIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupGeoMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupGeoMatchStatementPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupIPSetForwardedIPConfigurationOutput{})
	pulumi.RegisterOutputType(RuleGroupIPSetForwardedIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupIPSetReferenceStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupIPSetReferenceStatementPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupJsonBodyOutput{})
	pulumi.RegisterOutputType(RuleGroupJsonBodyPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupJsonMatchPatternOutput{})
	pulumi.RegisterOutputType(RuleGroupJsonMatchPatternPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupLabelOutput{})
	pulumi.RegisterOutputType(RuleGroupLabelArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupLabelMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupLabelMatchStatementPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupLabelSummaryOutput{})
	pulumi.RegisterOutputType(RuleGroupLabelSummaryArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupNotStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupNotStatementPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupOrStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupOrStatementPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupRateBasedStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRateBasedStatementPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupRegexPatternSetReferenceStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupRegexPatternSetReferenceStatementPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionOutput{})
	pulumi.RegisterOutputType(RuleGroupRuleActionPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupSizeConstraintStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupSizeConstraintStatementPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupSqliMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupSqliMatchStatementPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupStatementPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupStatementArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupTagOutput{})
	pulumi.RegisterOutputType(RuleGroupTagArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupTextTransformationOutput{})
	pulumi.RegisterOutputType(RuleGroupTextTransformationArrayOutput{})
	pulumi.RegisterOutputType(RuleGroupVisibilityConfigOutput{})
	pulumi.RegisterOutputType(RuleGroupVisibilityConfigPtrOutput{})
	pulumi.RegisterOutputType(RuleGroupXssMatchStatementOutput{})
	pulumi.RegisterOutputType(RuleGroupXssMatchStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLAllowActionOutput{})
	pulumi.RegisterOutputType(WebACLAllowActionPtrOutput{})
	pulumi.RegisterOutputType(WebACLAndStatementOutput{})
	pulumi.RegisterOutputType(WebACLAndStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLBlockActionOutput{})
	pulumi.RegisterOutputType(WebACLBlockActionPtrOutput{})
	pulumi.RegisterOutputType(WebACLByteMatchStatementOutput{})
	pulumi.RegisterOutputType(WebACLByteMatchStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLCountActionOutput{})
	pulumi.RegisterOutputType(WebACLCountActionPtrOutput{})
	pulumi.RegisterOutputType(WebACLCustomHTTPHeaderOutput{})
	pulumi.RegisterOutputType(WebACLCustomHTTPHeaderArrayOutput{})
	pulumi.RegisterOutputType(WebACLCustomRequestHandlingOutput{})
	pulumi.RegisterOutputType(WebACLCustomRequestHandlingPtrOutput{})
	pulumi.RegisterOutputType(WebACLCustomResponseOutput{})
	pulumi.RegisterOutputType(WebACLCustomResponsePtrOutput{})
	pulumi.RegisterOutputType(WebACLCustomResponseBodiesOutput{})
	pulumi.RegisterOutputType(WebACLCustomResponseBodiesPtrOutput{})
	pulumi.RegisterOutputType(WebACLDefaultActionOutput{})
	pulumi.RegisterOutputType(WebACLDefaultActionPtrOutput{})
	pulumi.RegisterOutputType(WebACLExcludedRuleOutput{})
	pulumi.RegisterOutputType(WebACLExcludedRuleArrayOutput{})
	pulumi.RegisterOutputType(WebACLFieldToMatchOutput{})
	pulumi.RegisterOutputType(WebACLFieldToMatchPtrOutput{})
	pulumi.RegisterOutputType(WebACLForwardedIPConfigurationOutput{})
	pulumi.RegisterOutputType(WebACLForwardedIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WebACLGeoMatchStatementOutput{})
	pulumi.RegisterOutputType(WebACLGeoMatchStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLIPSetForwardedIPConfigurationOutput{})
	pulumi.RegisterOutputType(WebACLIPSetForwardedIPConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WebACLIPSetReferenceStatementOutput{})
	pulumi.RegisterOutputType(WebACLIPSetReferenceStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLJsonBodyOutput{})
	pulumi.RegisterOutputType(WebACLJsonBodyPtrOutput{})
	pulumi.RegisterOutputType(WebACLJsonMatchPatternOutput{})
	pulumi.RegisterOutputType(WebACLJsonMatchPatternPtrOutput{})
	pulumi.RegisterOutputType(WebACLLabelOutput{})
	pulumi.RegisterOutputType(WebACLLabelArrayOutput{})
	pulumi.RegisterOutputType(WebACLLabelMatchStatementOutput{})
	pulumi.RegisterOutputType(WebACLLabelMatchStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLManagedRuleGroupStatementOutput{})
	pulumi.RegisterOutputType(WebACLManagedRuleGroupStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLNotStatementOutput{})
	pulumi.RegisterOutputType(WebACLNotStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLOrStatementOutput{})
	pulumi.RegisterOutputType(WebACLOrStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLOverrideActionOutput{})
	pulumi.RegisterOutputType(WebACLOverrideActionPtrOutput{})
	pulumi.RegisterOutputType(WebACLRateBasedStatementOutput{})
	pulumi.RegisterOutputType(WebACLRateBasedStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLRegexPatternSetReferenceStatementOutput{})
	pulumi.RegisterOutputType(WebACLRegexPatternSetReferenceStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLRuleOutput{})
	pulumi.RegisterOutputType(WebACLRuleArrayOutput{})
	pulumi.RegisterOutputType(WebACLRuleActionOutput{})
	pulumi.RegisterOutputType(WebACLRuleActionPtrOutput{})
	pulumi.RegisterOutputType(WebACLRuleGroupReferenceStatementOutput{})
	pulumi.RegisterOutputType(WebACLRuleGroupReferenceStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLSizeConstraintStatementOutput{})
	pulumi.RegisterOutputType(WebACLSizeConstraintStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLSqliMatchStatementOutput{})
	pulumi.RegisterOutputType(WebACLSqliMatchStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLStatementOutput{})
	pulumi.RegisterOutputType(WebACLStatementPtrOutput{})
	pulumi.RegisterOutputType(WebACLStatementArrayOutput{})
	pulumi.RegisterOutputType(WebACLTagOutput{})
	pulumi.RegisterOutputType(WebACLTagArrayOutput{})
	pulumi.RegisterOutputType(WebACLTextTransformationOutput{})
	pulumi.RegisterOutputType(WebACLTextTransformationArrayOutput{})
	pulumi.RegisterOutputType(WebACLVisibilityConfigOutput{})
	pulumi.RegisterOutputType(WebACLVisibilityConfigPtrOutput{})
	pulumi.RegisterOutputType(WebACLXssMatchStatementOutput{})
	pulumi.RegisterOutputType(WebACLXssMatchStatementPtrOutput{})
}
