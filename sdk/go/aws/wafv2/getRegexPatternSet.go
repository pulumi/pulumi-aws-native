// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Contains a list of Regular expressions based on the provided inputs. RegexPatternSet can be used with other WAF entities with RegexPatternSetReferenceStatement to perform other actions .
func LookupRegexPatternSet(ctx *pulumi.Context, args *LookupRegexPatternSetArgs, opts ...pulumi.InvokeOption) (*LookupRegexPatternSetResult, error) {
	var rv LookupRegexPatternSetResult
	err := ctx.Invoke("aws-native:wafv2:getRegexPatternSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRegexPatternSetArgs struct {
	// Id of the RegexPatternSet
	Id string `pulumi:"id"`
	// Name of the RegexPatternSet.
	Name string `pulumi:"name"`
	// Use CLOUDFRONT for CloudFront RegexPatternSet, use REGIONAL for Application Load Balancer and API Gateway.
	Scope RegexPatternSetScope `pulumi:"scope"`
}

type LookupRegexPatternSetResult struct {
	// ARN of the WAF entity.
	Arn *string `pulumi:"arn"`
	// Description of the entity.
	Description *string `pulumi:"description"`
	// Id of the RegexPatternSet
	Id                    *string              `pulumi:"id"`
	RegularExpressionList []string             `pulumi:"regularExpressionList"`
	Tags                  []RegexPatternSetTag `pulumi:"tags"`
}

func LookupRegexPatternSetOutput(ctx *pulumi.Context, args LookupRegexPatternSetOutputArgs, opts ...pulumi.InvokeOption) LookupRegexPatternSetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRegexPatternSetResult, error) {
			args := v.(LookupRegexPatternSetArgs)
			r, err := LookupRegexPatternSet(ctx, &args, opts...)
			var s LookupRegexPatternSetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRegexPatternSetResultOutput)
}

type LookupRegexPatternSetOutputArgs struct {
	// Id of the RegexPatternSet
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the RegexPatternSet.
	Name pulumi.StringInput `pulumi:"name"`
	// Use CLOUDFRONT for CloudFront RegexPatternSet, use REGIONAL for Application Load Balancer and API Gateway.
	Scope RegexPatternSetScopeInput `pulumi:"scope"`
}

func (LookupRegexPatternSetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegexPatternSetArgs)(nil)).Elem()
}

type LookupRegexPatternSetResultOutput struct{ *pulumi.OutputState }

func (LookupRegexPatternSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegexPatternSetResult)(nil)).Elem()
}

func (o LookupRegexPatternSetResultOutput) ToLookupRegexPatternSetResultOutput() LookupRegexPatternSetResultOutput {
	return o
}

func (o LookupRegexPatternSetResultOutput) ToLookupRegexPatternSetResultOutputWithContext(ctx context.Context) LookupRegexPatternSetResultOutput {
	return o
}

// ARN of the WAF entity.
func (o LookupRegexPatternSetResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegexPatternSetResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Description of the entity.
func (o LookupRegexPatternSetResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegexPatternSetResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Id of the RegexPatternSet
func (o LookupRegexPatternSetResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegexPatternSetResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupRegexPatternSetResultOutput) RegularExpressionList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRegexPatternSetResult) []string { return v.RegularExpressionList }).(pulumi.StringArrayOutput)
}

func (o LookupRegexPatternSetResultOutput) Tags() RegexPatternSetTagArrayOutput {
	return o.ApplyT(func(v LookupRegexPatternSetResult) []RegexPatternSetTag { return v.Tags }).(RegexPatternSetTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegexPatternSetResultOutput{})
}
