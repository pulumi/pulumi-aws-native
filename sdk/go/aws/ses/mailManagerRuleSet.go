// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::SES::MailManagerRuleSet Resource Type
type MailManagerRuleSet struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the rule set resource.
	RuleSetArn pulumi.StringOutput `pulumi:"ruleSetArn"`
	// The identifier of the rule set.
	RuleSetId pulumi.StringOutput `pulumi:"ruleSetId"`
	// A user-friendly name for the rule set.
	RuleSetName pulumi.StringPtrOutput `pulumi:"ruleSetName"`
	// Conditional rules that are evaluated for determining actions on email.
	Rules MailManagerRuleSetRuleArrayOutput `pulumi:"rules"`
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewMailManagerRuleSet registers a new resource with the given unique name, arguments, and options.
func NewMailManagerRuleSet(ctx *pulumi.Context,
	name string, args *MailManagerRuleSetArgs, opts ...pulumi.ResourceOption) (*MailManagerRuleSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MailManagerRuleSet
	err := ctx.RegisterResource("aws-native:ses:MailManagerRuleSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMailManagerRuleSet gets an existing MailManagerRuleSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMailManagerRuleSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MailManagerRuleSetState, opts ...pulumi.ResourceOption) (*MailManagerRuleSet, error) {
	var resource MailManagerRuleSet
	err := ctx.ReadResource("aws-native:ses:MailManagerRuleSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MailManagerRuleSet resources.
type mailManagerRuleSetState struct {
}

type MailManagerRuleSetState struct {
}

func (MailManagerRuleSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*mailManagerRuleSetState)(nil)).Elem()
}

type mailManagerRuleSetArgs struct {
	// A user-friendly name for the rule set.
	RuleSetName *string `pulumi:"ruleSetName"`
	// Conditional rules that are evaluated for determining actions on email.
	Rules []MailManagerRuleSetRule `pulumi:"rules"`
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a MailManagerRuleSet resource.
type MailManagerRuleSetArgs struct {
	// A user-friendly name for the rule set.
	RuleSetName pulumi.StringPtrInput
	// Conditional rules that are evaluated for determining actions on email.
	Rules MailManagerRuleSetRuleArrayInput
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags aws.TagArrayInput
}

func (MailManagerRuleSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mailManagerRuleSetArgs)(nil)).Elem()
}

type MailManagerRuleSetInput interface {
	pulumi.Input

	ToMailManagerRuleSetOutput() MailManagerRuleSetOutput
	ToMailManagerRuleSetOutputWithContext(ctx context.Context) MailManagerRuleSetOutput
}

func (*MailManagerRuleSet) ElementType() reflect.Type {
	return reflect.TypeOf((**MailManagerRuleSet)(nil)).Elem()
}

func (i *MailManagerRuleSet) ToMailManagerRuleSetOutput() MailManagerRuleSetOutput {
	return i.ToMailManagerRuleSetOutputWithContext(context.Background())
}

func (i *MailManagerRuleSet) ToMailManagerRuleSetOutputWithContext(ctx context.Context) MailManagerRuleSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MailManagerRuleSetOutput)
}

type MailManagerRuleSetOutput struct{ *pulumi.OutputState }

func (MailManagerRuleSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MailManagerRuleSet)(nil)).Elem()
}

func (o MailManagerRuleSetOutput) ToMailManagerRuleSetOutput() MailManagerRuleSetOutput {
	return o
}

func (o MailManagerRuleSetOutput) ToMailManagerRuleSetOutputWithContext(ctx context.Context) MailManagerRuleSetOutput {
	return o
}

// The Amazon Resource Name (ARN) of the rule set resource.
func (o MailManagerRuleSetOutput) RuleSetArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MailManagerRuleSet) pulumi.StringOutput { return v.RuleSetArn }).(pulumi.StringOutput)
}

// The identifier of the rule set.
func (o MailManagerRuleSetOutput) RuleSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *MailManagerRuleSet) pulumi.StringOutput { return v.RuleSetId }).(pulumi.StringOutput)
}

// A user-friendly name for the rule set.
func (o MailManagerRuleSetOutput) RuleSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MailManagerRuleSet) pulumi.StringPtrOutput { return v.RuleSetName }).(pulumi.StringPtrOutput)
}

// Conditional rules that are evaluated for determining actions on email.
func (o MailManagerRuleSetOutput) Rules() MailManagerRuleSetRuleArrayOutput {
	return o.ApplyT(func(v *MailManagerRuleSet) MailManagerRuleSetRuleArrayOutput { return v.Rules }).(MailManagerRuleSetRuleArrayOutput)
}

// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
func (o MailManagerRuleSetOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *MailManagerRuleSet) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MailManagerRuleSetInput)(nil)).Elem(), &MailManagerRuleSet{})
	pulumi.RegisterOutputType(MailManagerRuleSetOutput{})
}
