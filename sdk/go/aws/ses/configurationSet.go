// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::SES::ConfigurationSet.
//
// ## Example Usage
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ses"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			configSetName := cfg.Require("configSetName")
//			_, err := ses.NewConfigurationSet(ctx, "configSet", &ses.ConfigurationSetArgs{
//				Name: pulumi.String(configSetName),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ses"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			configSetName := cfg.Require("configSetName")
//			_, err := ses.NewConfigurationSet(ctx, "configSet", &ses.ConfigurationSetArgs{
//				Name: pulumi.String(configSetName),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ses"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			configSetName := cfg.Require("configSetName")
//			eventDestinationName := cfg.Require("eventDestinationName")
//			eventType1 := cfg.Require("eventType1")
//			eventType2 := cfg.Require("eventType2")
//			eventType3 := cfg.Require("eventType3")
//			dimensionName1 := cfg.Require("dimensionName1")
//			dimensionValueSource1 := cfg.Require("dimensionValueSource1")
//			defaultDimensionValue1 := cfg.Require("defaultDimensionValue1")
//			dimensionName2 := cfg.Require("dimensionName2")
//			dimensionValueSource2 := cfg.Require("dimensionValueSource2")
//			defaultDimensionValue2 := cfg.Require("defaultDimensionValue2")
//			configSet, err := ses.NewConfigurationSet(ctx, "configSet", &ses.ConfigurationSetArgs{
//				Name: pulumi.String(configSetName),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ses.NewConfigurationSetEventDestination(ctx, "cwEventDestination", &ses.ConfigurationSetEventDestinationArgs{
//				ConfigurationSetName: configSet.ID(),
//				EventDestination: &ses.ConfigurationSetEventDestinationEventDestinationArgs{
//					Name:    pulumi.String(eventDestinationName),
//					Enabled: pulumi.Bool(true),
//					MatchingEventTypes: pulumi.StringArray{
//						pulumi.String(eventType1),
//						pulumi.String(eventType2),
//						pulumi.String(eventType3),
//					},
//					CloudWatchDestination: &ses.ConfigurationSetEventDestinationCloudWatchDestinationArgs{
//						DimensionConfigurations: ses.ConfigurationSetEventDestinationDimensionConfigurationArray{
//							&ses.ConfigurationSetEventDestinationDimensionConfigurationArgs{
//								DimensionName:         pulumi.String(dimensionName1),
//								DimensionValueSource:  pulumi.String(dimensionValueSource1),
//								DefaultDimensionValue: pulumi.String(defaultDimensionValue1),
//							},
//							&ses.ConfigurationSetEventDestinationDimensionConfigurationArgs{
//								DimensionName:         pulumi.String(dimensionName2),
//								DimensionValueSource:  pulumi.String(dimensionValueSource2),
//								DefaultDimensionValue: pulumi.String(defaultDimensionValue2),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Example
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ses"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			configSetName := cfg.Require("configSetName")
//			eventDestinationName := cfg.Require("eventDestinationName")
//			eventType1 := cfg.Require("eventType1")
//			eventType2 := cfg.Require("eventType2")
//			eventType3 := cfg.Require("eventType3")
//			dimensionName1 := cfg.Require("dimensionName1")
//			dimensionValueSource1 := cfg.Require("dimensionValueSource1")
//			defaultDimensionValue1 := cfg.Require("defaultDimensionValue1")
//			dimensionName2 := cfg.Require("dimensionName2")
//			dimensionValueSource2 := cfg.Require("dimensionValueSource2")
//			defaultDimensionValue2 := cfg.Require("defaultDimensionValue2")
//			configSet, err := ses.NewConfigurationSet(ctx, "configSet", &ses.ConfigurationSetArgs{
//				Name: pulumi.String(configSetName),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ses.NewConfigurationSetEventDestination(ctx, "cwEventDestination", &ses.ConfigurationSetEventDestinationArgs{
//				ConfigurationSetName: configSet.ID(),
//				EventDestination: &ses.ConfigurationSetEventDestinationEventDestinationArgs{
//					Name:    pulumi.String(eventDestinationName),
//					Enabled: pulumi.Bool(true),
//					MatchingEventTypes: pulumi.StringArray{
//						pulumi.String(eventType1),
//						pulumi.String(eventType2),
//						pulumi.String(eventType3),
//					},
//					CloudWatchDestination: &ses.ConfigurationSetEventDestinationCloudWatchDestinationArgs{
//						DimensionConfigurations: ses.ConfigurationSetEventDestinationDimensionConfigurationArray{
//							&ses.ConfigurationSetEventDestinationDimensionConfigurationArgs{
//								DimensionName:         pulumi.String(dimensionName1),
//								DimensionValueSource:  pulumi.String(dimensionValueSource1),
//								DefaultDimensionValue: pulumi.String(defaultDimensionValue1),
//							},
//							&ses.ConfigurationSetEventDestinationDimensionConfigurationArgs{
//								DimensionName:         pulumi.String(dimensionName2),
//								DimensionValueSource:  pulumi.String(dimensionValueSource2),
//								DefaultDimensionValue: pulumi.String(defaultDimensionValue2),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ConfigurationSet struct {
	pulumi.CustomResourceState

	// Specifies the name of the dedicated IP pool to associate with the configuration set and whether messages that use the configuration set are required to use Transport Layer Security (TLS).
	DeliveryOptions ConfigurationSetDeliveryOptionsPtrOutput `pulumi:"deliveryOptions"`
	// The name of the configuration set.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// An object that defines whether or not Amazon SES collects reputation metrics for the emails that you send that use the configuration set.
	ReputationOptions ConfigurationSetReputationOptionsPtrOutput `pulumi:"reputationOptions"`
	// An object that defines whether or not Amazon SES can send email that you send using the configuration set.
	SendingOptions ConfigurationSetSendingOptionsPtrOutput `pulumi:"sendingOptions"`
	// An object that contains information about the suppression list preferences for your account.
	SuppressionOptions ConfigurationSetSuppressionOptionsPtrOutput `pulumi:"suppressionOptions"`
	// An object that defines the open and click tracking options for emails that you send using the configuration set.
	TrackingOptions ConfigurationSetTrackingOptionsPtrOutput `pulumi:"trackingOptions"`
	// The Virtual Deliverability Manager (VDM) options that apply to the configuration set.
	VdmOptions ConfigurationSetVdmOptionsPtrOutput `pulumi:"vdmOptions"`
}

// NewConfigurationSet registers a new resource with the given unique name, arguments, and options.
func NewConfigurationSet(ctx *pulumi.Context,
	name string, args *ConfigurationSetArgs, opts ...pulumi.ResourceOption) (*ConfigurationSet, error) {
	if args == nil {
		args = &ConfigurationSetArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigurationSet
	err := ctx.RegisterResource("aws-native:ses:ConfigurationSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationSet gets an existing ConfigurationSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationSetState, opts ...pulumi.ResourceOption) (*ConfigurationSet, error) {
	var resource ConfigurationSet
	err := ctx.ReadResource("aws-native:ses:ConfigurationSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationSet resources.
type configurationSetState struct {
}

type ConfigurationSetState struct {
}

func (ConfigurationSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationSetState)(nil)).Elem()
}

type configurationSetArgs struct {
	// Specifies the name of the dedicated IP pool to associate with the configuration set and whether messages that use the configuration set are required to use Transport Layer Security (TLS).
	DeliveryOptions *ConfigurationSetDeliveryOptions `pulumi:"deliveryOptions"`
	// The name of the configuration set.
	Name *string `pulumi:"name"`
	// An object that defines whether or not Amazon SES collects reputation metrics for the emails that you send that use the configuration set.
	ReputationOptions *ConfigurationSetReputationOptions `pulumi:"reputationOptions"`
	// An object that defines whether or not Amazon SES can send email that you send using the configuration set.
	SendingOptions *ConfigurationSetSendingOptions `pulumi:"sendingOptions"`
	// An object that contains information about the suppression list preferences for your account.
	SuppressionOptions *ConfigurationSetSuppressionOptions `pulumi:"suppressionOptions"`
	// An object that defines the open and click tracking options for emails that you send using the configuration set.
	TrackingOptions *ConfigurationSetTrackingOptions `pulumi:"trackingOptions"`
	// The Virtual Deliverability Manager (VDM) options that apply to the configuration set.
	VdmOptions *ConfigurationSetVdmOptions `pulumi:"vdmOptions"`
}

// The set of arguments for constructing a ConfigurationSet resource.
type ConfigurationSetArgs struct {
	// Specifies the name of the dedicated IP pool to associate with the configuration set and whether messages that use the configuration set are required to use Transport Layer Security (TLS).
	DeliveryOptions ConfigurationSetDeliveryOptionsPtrInput
	// The name of the configuration set.
	Name pulumi.StringPtrInput
	// An object that defines whether or not Amazon SES collects reputation metrics for the emails that you send that use the configuration set.
	ReputationOptions ConfigurationSetReputationOptionsPtrInput
	// An object that defines whether or not Amazon SES can send email that you send using the configuration set.
	SendingOptions ConfigurationSetSendingOptionsPtrInput
	// An object that contains information about the suppression list preferences for your account.
	SuppressionOptions ConfigurationSetSuppressionOptionsPtrInput
	// An object that defines the open and click tracking options for emails that you send using the configuration set.
	TrackingOptions ConfigurationSetTrackingOptionsPtrInput
	// The Virtual Deliverability Manager (VDM) options that apply to the configuration set.
	VdmOptions ConfigurationSetVdmOptionsPtrInput
}

func (ConfigurationSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationSetArgs)(nil)).Elem()
}

type ConfigurationSetInput interface {
	pulumi.Input

	ToConfigurationSetOutput() ConfigurationSetOutput
	ToConfigurationSetOutputWithContext(ctx context.Context) ConfigurationSetOutput
}

func (*ConfigurationSet) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSet)(nil)).Elem()
}

func (i *ConfigurationSet) ToConfigurationSetOutput() ConfigurationSetOutput {
	return i.ToConfigurationSetOutputWithContext(context.Background())
}

func (i *ConfigurationSet) ToConfigurationSetOutputWithContext(ctx context.Context) ConfigurationSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationSetOutput)
}

type ConfigurationSetOutput struct{ *pulumi.OutputState }

func (ConfigurationSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationSet)(nil)).Elem()
}

func (o ConfigurationSetOutput) ToConfigurationSetOutput() ConfigurationSetOutput {
	return o
}

func (o ConfigurationSetOutput) ToConfigurationSetOutputWithContext(ctx context.Context) ConfigurationSetOutput {
	return o
}

// Specifies the name of the dedicated IP pool to associate with the configuration set and whether messages that use the configuration set are required to use Transport Layer Security (TLS).
func (o ConfigurationSetOutput) DeliveryOptions() ConfigurationSetDeliveryOptionsPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) ConfigurationSetDeliveryOptionsPtrOutput { return v.DeliveryOptions }).(ConfigurationSetDeliveryOptionsPtrOutput)
}

// The name of the configuration set.
func (o ConfigurationSetOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// An object that defines whether or not Amazon SES collects reputation metrics for the emails that you send that use the configuration set.
func (o ConfigurationSetOutput) ReputationOptions() ConfigurationSetReputationOptionsPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) ConfigurationSetReputationOptionsPtrOutput { return v.ReputationOptions }).(ConfigurationSetReputationOptionsPtrOutput)
}

// An object that defines whether or not Amazon SES can send email that you send using the configuration set.
func (o ConfigurationSetOutput) SendingOptions() ConfigurationSetSendingOptionsPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) ConfigurationSetSendingOptionsPtrOutput { return v.SendingOptions }).(ConfigurationSetSendingOptionsPtrOutput)
}

// An object that contains information about the suppression list preferences for your account.
func (o ConfigurationSetOutput) SuppressionOptions() ConfigurationSetSuppressionOptionsPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) ConfigurationSetSuppressionOptionsPtrOutput { return v.SuppressionOptions }).(ConfigurationSetSuppressionOptionsPtrOutput)
}

// An object that defines the open and click tracking options for emails that you send using the configuration set.
func (o ConfigurationSetOutput) TrackingOptions() ConfigurationSetTrackingOptionsPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) ConfigurationSetTrackingOptionsPtrOutput { return v.TrackingOptions }).(ConfigurationSetTrackingOptionsPtrOutput)
}

// The Virtual Deliverability Manager (VDM) options that apply to the configuration set.
func (o ConfigurationSetOutput) VdmOptions() ConfigurationSetVdmOptionsPtrOutput {
	return o.ApplyT(func(v *ConfigurationSet) ConfigurationSetVdmOptionsPtrOutput { return v.VdmOptions }).(ConfigurationSetVdmOptionsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationSetInput)(nil)).Elem(), &ConfigurationSet{})
	pulumi.RegisterOutputType(ConfigurationSetOutput{})
}
