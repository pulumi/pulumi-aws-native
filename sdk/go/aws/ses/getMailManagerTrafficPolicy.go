// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::SES::MailManagerTrafficPolicy Resource Type
func LookupMailManagerTrafficPolicy(ctx *pulumi.Context, args *LookupMailManagerTrafficPolicyArgs, opts ...pulumi.InvokeOption) (*LookupMailManagerTrafficPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMailManagerTrafficPolicyResult
	err := ctx.Invoke("aws-native:ses:getMailManagerTrafficPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMailManagerTrafficPolicyArgs struct {
	// The identifier of the traffic policy resource.
	TrafficPolicyId string `pulumi:"trafficPolicyId"`
}

type LookupMailManagerTrafficPolicyResult struct {
	// Default action instructs the traﬃc policy to either Allow or Deny (block) messages that fall outside of (or not addressed by) the conditions of your policy statements
	DefaultAction *MailManagerTrafficPolicyAcceptAction `pulumi:"defaultAction"`
	// The maximum message size in bytes of email which is allowed in by this traffic policy—anything larger will be blocked.
	MaxMessageSizeBytes *float64 `pulumi:"maxMessageSizeBytes"`
	// Conditional statements for filtering email traffic.
	PolicyStatements []MailManagerTrafficPolicyPolicyStatement `pulumi:"policyStatements"`
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags []aws.Tag `pulumi:"tags"`
	// The Amazon Resource Name (ARN) of the traffic policy resource.
	TrafficPolicyArn *string `pulumi:"trafficPolicyArn"`
	// The identifier of the traffic policy resource.
	TrafficPolicyId *string `pulumi:"trafficPolicyId"`
	// The name of the policy.
	//
	// The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.
	TrafficPolicyName *string `pulumi:"trafficPolicyName"`
}

func LookupMailManagerTrafficPolicyOutput(ctx *pulumi.Context, args LookupMailManagerTrafficPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupMailManagerTrafficPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMailManagerTrafficPolicyResultOutput, error) {
			args := v.(LookupMailManagerTrafficPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ses:getMailManagerTrafficPolicy", args, LookupMailManagerTrafficPolicyResultOutput{}, options).(LookupMailManagerTrafficPolicyResultOutput), nil
		}).(LookupMailManagerTrafficPolicyResultOutput)
}

type LookupMailManagerTrafficPolicyOutputArgs struct {
	// The identifier of the traffic policy resource.
	TrafficPolicyId pulumi.StringInput `pulumi:"trafficPolicyId"`
}

func (LookupMailManagerTrafficPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMailManagerTrafficPolicyArgs)(nil)).Elem()
}

type LookupMailManagerTrafficPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupMailManagerTrafficPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMailManagerTrafficPolicyResult)(nil)).Elem()
}

func (o LookupMailManagerTrafficPolicyResultOutput) ToLookupMailManagerTrafficPolicyResultOutput() LookupMailManagerTrafficPolicyResultOutput {
	return o
}

func (o LookupMailManagerTrafficPolicyResultOutput) ToLookupMailManagerTrafficPolicyResultOutputWithContext(ctx context.Context) LookupMailManagerTrafficPolicyResultOutput {
	return o
}

// Default action instructs the traﬃc policy to either Allow or Deny (block) messages that fall outside of (or not addressed by) the conditions of your policy statements
func (o LookupMailManagerTrafficPolicyResultOutput) DefaultAction() MailManagerTrafficPolicyAcceptActionPtrOutput {
	return o.ApplyT(func(v LookupMailManagerTrafficPolicyResult) *MailManagerTrafficPolicyAcceptAction {
		return v.DefaultAction
	}).(MailManagerTrafficPolicyAcceptActionPtrOutput)
}

// The maximum message size in bytes of email which is allowed in by this traffic policy—anything larger will be blocked.
func (o LookupMailManagerTrafficPolicyResultOutput) MaxMessageSizeBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupMailManagerTrafficPolicyResult) *float64 { return v.MaxMessageSizeBytes }).(pulumi.Float64PtrOutput)
}

// Conditional statements for filtering email traffic.
func (o LookupMailManagerTrafficPolicyResultOutput) PolicyStatements() MailManagerTrafficPolicyPolicyStatementArrayOutput {
	return o.ApplyT(func(v LookupMailManagerTrafficPolicyResult) []MailManagerTrafficPolicyPolicyStatement {
		return v.PolicyStatements
	}).(MailManagerTrafficPolicyPolicyStatementArrayOutput)
}

// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
func (o LookupMailManagerTrafficPolicyResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupMailManagerTrafficPolicyResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The Amazon Resource Name (ARN) of the traffic policy resource.
func (o LookupMailManagerTrafficPolicyResultOutput) TrafficPolicyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerTrafficPolicyResult) *string { return v.TrafficPolicyArn }).(pulumi.StringPtrOutput)
}

// The identifier of the traffic policy resource.
func (o LookupMailManagerTrafficPolicyResultOutput) TrafficPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerTrafficPolicyResult) *string { return v.TrafficPolicyId }).(pulumi.StringPtrOutput)
}

// The name of the policy.
//
// The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.
func (o LookupMailManagerTrafficPolicyResultOutput) TrafficPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerTrafficPolicyResult) *string { return v.TrafficPolicyName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMailManagerTrafficPolicyResultOutput{})
}
