// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::SES::MailManagerTrafficPolicy Resource Type
type MailManagerTrafficPolicy struct {
	pulumi.CustomResourceState

	// Default action instructs the traﬃc policy to either Allow or Deny (block) messages that fall outside of (or not addressed by) the conditions of your policy statements
	DefaultAction MailManagerTrafficPolicyAcceptActionOutput `pulumi:"defaultAction"`
	// The maximum message size in bytes of email which is allowed in by this traffic policy—anything larger will be blocked.
	MaxMessageSizeBytes pulumi.Float64PtrOutput `pulumi:"maxMessageSizeBytes"`
	// Conditional statements for filtering email traffic.
	PolicyStatements MailManagerTrafficPolicyPolicyStatementArrayOutput `pulumi:"policyStatements"`
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The Amazon Resource Name (ARN) of the traffic policy resource.
	TrafficPolicyArn pulumi.StringOutput `pulumi:"trafficPolicyArn"`
	// The identifier of the traffic policy resource.
	TrafficPolicyId pulumi.StringOutput `pulumi:"trafficPolicyId"`
	// The name of the policy.
	//
	// The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.
	TrafficPolicyName pulumi.StringPtrOutput `pulumi:"trafficPolicyName"`
}

// NewMailManagerTrafficPolicy registers a new resource with the given unique name, arguments, and options.
func NewMailManagerTrafficPolicy(ctx *pulumi.Context,
	name string, args *MailManagerTrafficPolicyArgs, opts ...pulumi.ResourceOption) (*MailManagerTrafficPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultAction == nil {
		return nil, errors.New("invalid value for required argument 'DefaultAction'")
	}
	if args.PolicyStatements == nil {
		return nil, errors.New("invalid value for required argument 'PolicyStatements'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MailManagerTrafficPolicy
	err := ctx.RegisterResource("aws-native:ses:MailManagerTrafficPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMailManagerTrafficPolicy gets an existing MailManagerTrafficPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMailManagerTrafficPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MailManagerTrafficPolicyState, opts ...pulumi.ResourceOption) (*MailManagerTrafficPolicy, error) {
	var resource MailManagerTrafficPolicy
	err := ctx.ReadResource("aws-native:ses:MailManagerTrafficPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MailManagerTrafficPolicy resources.
type mailManagerTrafficPolicyState struct {
}

type MailManagerTrafficPolicyState struct {
}

func (MailManagerTrafficPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*mailManagerTrafficPolicyState)(nil)).Elem()
}

type mailManagerTrafficPolicyArgs struct {
	// Default action instructs the traﬃc policy to either Allow or Deny (block) messages that fall outside of (or not addressed by) the conditions of your policy statements
	DefaultAction MailManagerTrafficPolicyAcceptAction `pulumi:"defaultAction"`
	// The maximum message size in bytes of email which is allowed in by this traffic policy—anything larger will be blocked.
	MaxMessageSizeBytes *float64 `pulumi:"maxMessageSizeBytes"`
	// Conditional statements for filtering email traffic.
	PolicyStatements []MailManagerTrafficPolicyPolicyStatement `pulumi:"policyStatements"`
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags []aws.Tag `pulumi:"tags"`
	// The name of the policy.
	//
	// The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.
	TrafficPolicyName *string `pulumi:"trafficPolicyName"`
}

// The set of arguments for constructing a MailManagerTrafficPolicy resource.
type MailManagerTrafficPolicyArgs struct {
	// Default action instructs the traﬃc policy to either Allow or Deny (block) messages that fall outside of (or not addressed by) the conditions of your policy statements
	DefaultAction MailManagerTrafficPolicyAcceptActionInput
	// The maximum message size in bytes of email which is allowed in by this traffic policy—anything larger will be blocked.
	MaxMessageSizeBytes pulumi.Float64PtrInput
	// Conditional statements for filtering email traffic.
	PolicyStatements MailManagerTrafficPolicyPolicyStatementArrayInput
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags aws.TagArrayInput
	// The name of the policy.
	//
	// The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.
	TrafficPolicyName pulumi.StringPtrInput
}

func (MailManagerTrafficPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mailManagerTrafficPolicyArgs)(nil)).Elem()
}

type MailManagerTrafficPolicyInput interface {
	pulumi.Input

	ToMailManagerTrafficPolicyOutput() MailManagerTrafficPolicyOutput
	ToMailManagerTrafficPolicyOutputWithContext(ctx context.Context) MailManagerTrafficPolicyOutput
}

func (*MailManagerTrafficPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**MailManagerTrafficPolicy)(nil)).Elem()
}

func (i *MailManagerTrafficPolicy) ToMailManagerTrafficPolicyOutput() MailManagerTrafficPolicyOutput {
	return i.ToMailManagerTrafficPolicyOutputWithContext(context.Background())
}

func (i *MailManagerTrafficPolicy) ToMailManagerTrafficPolicyOutputWithContext(ctx context.Context) MailManagerTrafficPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MailManagerTrafficPolicyOutput)
}

type MailManagerTrafficPolicyOutput struct{ *pulumi.OutputState }

func (MailManagerTrafficPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MailManagerTrafficPolicy)(nil)).Elem()
}

func (o MailManagerTrafficPolicyOutput) ToMailManagerTrafficPolicyOutput() MailManagerTrafficPolicyOutput {
	return o
}

func (o MailManagerTrafficPolicyOutput) ToMailManagerTrafficPolicyOutputWithContext(ctx context.Context) MailManagerTrafficPolicyOutput {
	return o
}

// Default action instructs the traﬃc policy to either Allow or Deny (block) messages that fall outside of (or not addressed by) the conditions of your policy statements
func (o MailManagerTrafficPolicyOutput) DefaultAction() MailManagerTrafficPolicyAcceptActionOutput {
	return o.ApplyT(func(v *MailManagerTrafficPolicy) MailManagerTrafficPolicyAcceptActionOutput { return v.DefaultAction }).(MailManagerTrafficPolicyAcceptActionOutput)
}

// The maximum message size in bytes of email which is allowed in by this traffic policy—anything larger will be blocked.
func (o MailManagerTrafficPolicyOutput) MaxMessageSizeBytes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *MailManagerTrafficPolicy) pulumi.Float64PtrOutput { return v.MaxMessageSizeBytes }).(pulumi.Float64PtrOutput)
}

// Conditional statements for filtering email traffic.
func (o MailManagerTrafficPolicyOutput) PolicyStatements() MailManagerTrafficPolicyPolicyStatementArrayOutput {
	return o.ApplyT(func(v *MailManagerTrafficPolicy) MailManagerTrafficPolicyPolicyStatementArrayOutput {
		return v.PolicyStatements
	}).(MailManagerTrafficPolicyPolicyStatementArrayOutput)
}

// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
func (o MailManagerTrafficPolicyOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *MailManagerTrafficPolicy) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The Amazon Resource Name (ARN) of the traffic policy resource.
func (o MailManagerTrafficPolicyOutput) TrafficPolicyArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MailManagerTrafficPolicy) pulumi.StringOutput { return v.TrafficPolicyArn }).(pulumi.StringOutput)
}

// The identifier of the traffic policy resource.
func (o MailManagerTrafficPolicyOutput) TrafficPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v *MailManagerTrafficPolicy) pulumi.StringOutput { return v.TrafficPolicyId }).(pulumi.StringOutput)
}

// The name of the policy.
//
// The policy name cannot exceed 64 characters and can only include alphanumeric characters, dashes, and underscores.
func (o MailManagerTrafficPolicyOutput) TrafficPolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MailManagerTrafficPolicy) pulumi.StringPtrOutput { return v.TrafficPolicyName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MailManagerTrafficPolicyInput)(nil)).Elem(), &MailManagerTrafficPolicy{})
	pulumi.RegisterOutputType(MailManagerTrafficPolicyOutput{})
}
