// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::SES::MailManagerArchive Resource Type
func LookupMailManagerArchive(ctx *pulumi.Context, args *LookupMailManagerArchiveArgs, opts ...pulumi.InvokeOption) (*LookupMailManagerArchiveResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMailManagerArchiveResult
	err := ctx.Invoke("aws-native:ses:getMailManagerArchive", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMailManagerArchiveArgs struct {
	// The unique identifier of the archive.
	ArchiveId string `pulumi:"archiveId"`
}

type LookupMailManagerArchiveResult struct {
	// The Amazon Resource Name (ARN) of the archive.
	ArchiveArn *string `pulumi:"archiveArn"`
	// The unique identifier of the archive.
	ArchiveId *string `pulumi:"archiveId"`
	// A unique name for the new archive.
	ArchiveName *string `pulumi:"archiveName"`
	// The current state of the archive:
	//
	// - `ACTIVE` – The archive is ready and available for use.
	// - `PENDING_DELETION` – The archive has been marked for deletion and will be permanently deleted in 30 days. No further modifications can be made in this state.
	ArchiveState *MailManagerArchiveArchiveState `pulumi:"archiveState"`
	// The period for retaining emails in the archive before automatic deletion.
	Retention *MailManagerArchiveArchiveRetentionProperties `pulumi:"retention"`
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupMailManagerArchiveOutput(ctx *pulumi.Context, args LookupMailManagerArchiveOutputArgs, opts ...pulumi.InvokeOption) LookupMailManagerArchiveResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMailManagerArchiveResultOutput, error) {
			args := v.(LookupMailManagerArchiveArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ses:getMailManagerArchive", args, LookupMailManagerArchiveResultOutput{}, options).(LookupMailManagerArchiveResultOutput), nil
		}).(LookupMailManagerArchiveResultOutput)
}

type LookupMailManagerArchiveOutputArgs struct {
	// The unique identifier of the archive.
	ArchiveId pulumi.StringInput `pulumi:"archiveId"`
}

func (LookupMailManagerArchiveOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMailManagerArchiveArgs)(nil)).Elem()
}

type LookupMailManagerArchiveResultOutput struct{ *pulumi.OutputState }

func (LookupMailManagerArchiveResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMailManagerArchiveResult)(nil)).Elem()
}

func (o LookupMailManagerArchiveResultOutput) ToLookupMailManagerArchiveResultOutput() LookupMailManagerArchiveResultOutput {
	return o
}

func (o LookupMailManagerArchiveResultOutput) ToLookupMailManagerArchiveResultOutputWithContext(ctx context.Context) LookupMailManagerArchiveResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the archive.
func (o LookupMailManagerArchiveResultOutput) ArchiveArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerArchiveResult) *string { return v.ArchiveArn }).(pulumi.StringPtrOutput)
}

// The unique identifier of the archive.
func (o LookupMailManagerArchiveResultOutput) ArchiveId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerArchiveResult) *string { return v.ArchiveId }).(pulumi.StringPtrOutput)
}

// A unique name for the new archive.
func (o LookupMailManagerArchiveResultOutput) ArchiveName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerArchiveResult) *string { return v.ArchiveName }).(pulumi.StringPtrOutput)
}

// The current state of the archive:
//
// - `ACTIVE` – The archive is ready and available for use.
// - `PENDING_DELETION` – The archive has been marked for deletion and will be permanently deleted in 30 days. No further modifications can be made in this state.
func (o LookupMailManagerArchiveResultOutput) ArchiveState() MailManagerArchiveArchiveStatePtrOutput {
	return o.ApplyT(func(v LookupMailManagerArchiveResult) *MailManagerArchiveArchiveState { return v.ArchiveState }).(MailManagerArchiveArchiveStatePtrOutput)
}

// The period for retaining emails in the archive before automatic deletion.
func (o LookupMailManagerArchiveResultOutput) Retention() MailManagerArchiveArchiveRetentionPropertiesPtrOutput {
	return o.ApplyT(func(v LookupMailManagerArchiveResult) *MailManagerArchiveArchiveRetentionProperties {
		return v.Retention
	}).(MailManagerArchiveArchiveRetentionPropertiesPtrOutput)
}

// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
func (o LookupMailManagerArchiveResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupMailManagerArchiveResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMailManagerArchiveResultOutput{})
}
