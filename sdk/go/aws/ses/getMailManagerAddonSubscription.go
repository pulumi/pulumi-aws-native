// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::SES::MailManagerAddonSubscription Resource Type
func LookupMailManagerAddonSubscription(ctx *pulumi.Context, args *LookupMailManagerAddonSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupMailManagerAddonSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMailManagerAddonSubscriptionResult
	err := ctx.Invoke("aws-native:ses:getMailManagerAddonSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMailManagerAddonSubscriptionArgs struct {
	AddonSubscriptionId string `pulumi:"addonSubscriptionId"`
}

type LookupMailManagerAddonSubscriptionResult struct {
	AddonSubscriptionArn *string   `pulumi:"addonSubscriptionArn"`
	AddonSubscriptionId  *string   `pulumi:"addonSubscriptionId"`
	Tags                 []aws.Tag `pulumi:"tags"`
}

func LookupMailManagerAddonSubscriptionOutput(ctx *pulumi.Context, args LookupMailManagerAddonSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupMailManagerAddonSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMailManagerAddonSubscriptionResult, error) {
			args := v.(LookupMailManagerAddonSubscriptionArgs)
			r, err := LookupMailManagerAddonSubscription(ctx, &args, opts...)
			var s LookupMailManagerAddonSubscriptionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMailManagerAddonSubscriptionResultOutput)
}

type LookupMailManagerAddonSubscriptionOutputArgs struct {
	AddonSubscriptionId pulumi.StringInput `pulumi:"addonSubscriptionId"`
}

func (LookupMailManagerAddonSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMailManagerAddonSubscriptionArgs)(nil)).Elem()
}

type LookupMailManagerAddonSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupMailManagerAddonSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMailManagerAddonSubscriptionResult)(nil)).Elem()
}

func (o LookupMailManagerAddonSubscriptionResultOutput) ToLookupMailManagerAddonSubscriptionResultOutput() LookupMailManagerAddonSubscriptionResultOutput {
	return o
}

func (o LookupMailManagerAddonSubscriptionResultOutput) ToLookupMailManagerAddonSubscriptionResultOutputWithContext(ctx context.Context) LookupMailManagerAddonSubscriptionResultOutput {
	return o
}

func (o LookupMailManagerAddonSubscriptionResultOutput) AddonSubscriptionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerAddonSubscriptionResult) *string { return v.AddonSubscriptionArn }).(pulumi.StringPtrOutput)
}

func (o LookupMailManagerAddonSubscriptionResultOutput) AddonSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerAddonSubscriptionResult) *string { return v.AddonSubscriptionId }).(pulumi.StringPtrOutput)
}

func (o LookupMailManagerAddonSubscriptionResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupMailManagerAddonSubscriptionResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMailManagerAddonSubscriptionResultOutput{})
}
