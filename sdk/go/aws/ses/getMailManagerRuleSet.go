// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::SES::MailManagerRuleSet Resource Type
func LookupMailManagerRuleSet(ctx *pulumi.Context, args *LookupMailManagerRuleSetArgs, opts ...pulumi.InvokeOption) (*LookupMailManagerRuleSetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMailManagerRuleSetResult
	err := ctx.Invoke("aws-native:ses:getMailManagerRuleSet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMailManagerRuleSetArgs struct {
	// The identifier of the rule set.
	RuleSetId string `pulumi:"ruleSetId"`
}

type LookupMailManagerRuleSetResult struct {
	// The Amazon Resource Name (ARN) of the rule set resource.
	RuleSetArn *string `pulumi:"ruleSetArn"`
	// The identifier of the rule set.
	RuleSetId *string `pulumi:"ruleSetId"`
	// A user-friendly name for the rule set.
	RuleSetName *string `pulumi:"ruleSetName"`
	// Conditional rules that are evaluated for determining actions on email.
	Rules []MailManagerRuleSetRule `pulumi:"rules"`
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupMailManagerRuleSetOutput(ctx *pulumi.Context, args LookupMailManagerRuleSetOutputArgs, opts ...pulumi.InvokeOption) LookupMailManagerRuleSetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMailManagerRuleSetResultOutput, error) {
			args := v.(LookupMailManagerRuleSetArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupMailManagerRuleSetResult
			secret, err := ctx.InvokePackageRaw("aws-native:ses:getMailManagerRuleSet", args, &rv, "", opts...)
			if err != nil {
				return LookupMailManagerRuleSetResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupMailManagerRuleSetResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupMailManagerRuleSetResultOutput), nil
			}
			return output, nil
		}).(LookupMailManagerRuleSetResultOutput)
}

type LookupMailManagerRuleSetOutputArgs struct {
	// The identifier of the rule set.
	RuleSetId pulumi.StringInput `pulumi:"ruleSetId"`
}

func (LookupMailManagerRuleSetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMailManagerRuleSetArgs)(nil)).Elem()
}

type LookupMailManagerRuleSetResultOutput struct{ *pulumi.OutputState }

func (LookupMailManagerRuleSetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMailManagerRuleSetResult)(nil)).Elem()
}

func (o LookupMailManagerRuleSetResultOutput) ToLookupMailManagerRuleSetResultOutput() LookupMailManagerRuleSetResultOutput {
	return o
}

func (o LookupMailManagerRuleSetResultOutput) ToLookupMailManagerRuleSetResultOutputWithContext(ctx context.Context) LookupMailManagerRuleSetResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the rule set resource.
func (o LookupMailManagerRuleSetResultOutput) RuleSetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerRuleSetResult) *string { return v.RuleSetArn }).(pulumi.StringPtrOutput)
}

// The identifier of the rule set.
func (o LookupMailManagerRuleSetResultOutput) RuleSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerRuleSetResult) *string { return v.RuleSetId }).(pulumi.StringPtrOutput)
}

// A user-friendly name for the rule set.
func (o LookupMailManagerRuleSetResultOutput) RuleSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerRuleSetResult) *string { return v.RuleSetName }).(pulumi.StringPtrOutput)
}

// Conditional rules that are evaluated for determining actions on email.
func (o LookupMailManagerRuleSetResultOutput) Rules() MailManagerRuleSetRuleArrayOutput {
	return o.ApplyT(func(v LookupMailManagerRuleSetResult) []MailManagerRuleSetRule { return v.Rules }).(MailManagerRuleSetRuleArrayOutput)
}

// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
func (o LookupMailManagerRuleSetResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupMailManagerRuleSetResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMailManagerRuleSetResultOutput{})
}
