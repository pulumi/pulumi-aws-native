// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SES::ReceiptFilter
//
// Deprecated: ReceiptFilter is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type ReceiptFilter struct {
	pulumi.CustomResourceState

	Filter ReceiptFilterFilterOutput `pulumi:"filter"`
}

// NewReceiptFilter registers a new resource with the given unique name, arguments, and options.
func NewReceiptFilter(ctx *pulumi.Context,
	name string, args *ReceiptFilterArgs, opts ...pulumi.ResourceOption) (*ReceiptFilter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Filter == nil {
		return nil, errors.New("invalid value for required argument 'Filter'")
	}
	var resource ReceiptFilter
	err := ctx.RegisterResource("aws-native:ses:ReceiptFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReceiptFilter gets an existing ReceiptFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReceiptFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReceiptFilterState, opts ...pulumi.ResourceOption) (*ReceiptFilter, error) {
	var resource ReceiptFilter
	err := ctx.ReadResource("aws-native:ses:ReceiptFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReceiptFilter resources.
type receiptFilterState struct {
}

type ReceiptFilterState struct {
}

func (ReceiptFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*receiptFilterState)(nil)).Elem()
}

type receiptFilterArgs struct {
	Filter ReceiptFilterFilter `pulumi:"filter"`
}

// The set of arguments for constructing a ReceiptFilter resource.
type ReceiptFilterArgs struct {
	Filter ReceiptFilterFilterInput
}

func (ReceiptFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*receiptFilterArgs)(nil)).Elem()
}

type ReceiptFilterInput interface {
	pulumi.Input

	ToReceiptFilterOutput() ReceiptFilterOutput
	ToReceiptFilterOutputWithContext(ctx context.Context) ReceiptFilterOutput
}

func (*ReceiptFilter) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptFilter)(nil))
}

func (i *ReceiptFilter) ToReceiptFilterOutput() ReceiptFilterOutput {
	return i.ToReceiptFilterOutputWithContext(context.Background())
}

func (i *ReceiptFilter) ToReceiptFilterOutputWithContext(ctx context.Context) ReceiptFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptFilterOutput)
}

type ReceiptFilterOutput struct{ *pulumi.OutputState }

func (ReceiptFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptFilter)(nil))
}

func (o ReceiptFilterOutput) ToReceiptFilterOutput() ReceiptFilterOutput {
	return o
}

func (o ReceiptFilterOutput) ToReceiptFilterOutputWithContext(ctx context.Context) ReceiptFilterOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiptFilterInput)(nil)).Elem(), &ReceiptFilter{})
	pulumi.RegisterOutputType(ReceiptFilterOutput{})
}
