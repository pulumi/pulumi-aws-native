// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::SES::MailManagerRelay Resource Type
type MailManagerRelay struct {
	pulumi.CustomResourceState

	// Authentication for the relay destination server—specify the secretARN where the SMTP credentials are stored.
	Authentication pulumi.AnyOutput `pulumi:"authentication"`
	// The Amazon Resource Name (ARN) of the relay.
	RelayArn pulumi.StringOutput `pulumi:"relayArn"`
	// The unique relay identifier.
	RelayId pulumi.StringOutput `pulumi:"relayId"`
	// The unique relay name.
	RelayName pulumi.StringPtrOutput `pulumi:"relayName"`
	// The destination relay server address.
	ServerName pulumi.StringOutput `pulumi:"serverName"`
	// The destination relay server port.
	ServerPort pulumi.Float64Output `pulumi:"serverPort"`
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewMailManagerRelay registers a new resource with the given unique name, arguments, and options.
func NewMailManagerRelay(ctx *pulumi.Context,
	name string, args *MailManagerRelayArgs, opts ...pulumi.ResourceOption) (*MailManagerRelay, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authentication == nil {
		return nil, errors.New("invalid value for required argument 'Authentication'")
	}
	if args.ServerName == nil {
		return nil, errors.New("invalid value for required argument 'ServerName'")
	}
	if args.ServerPort == nil {
		return nil, errors.New("invalid value for required argument 'ServerPort'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MailManagerRelay
	err := ctx.RegisterResource("aws-native:ses:MailManagerRelay", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMailManagerRelay gets an existing MailManagerRelay resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMailManagerRelay(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MailManagerRelayState, opts ...pulumi.ResourceOption) (*MailManagerRelay, error) {
	var resource MailManagerRelay
	err := ctx.ReadResource("aws-native:ses:MailManagerRelay", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MailManagerRelay resources.
type mailManagerRelayState struct {
}

type MailManagerRelayState struct {
}

func (MailManagerRelayState) ElementType() reflect.Type {
	return reflect.TypeOf((*mailManagerRelayState)(nil)).Elem()
}

type mailManagerRelayArgs struct {
	// Authentication for the relay destination server—specify the secretARN where the SMTP credentials are stored.
	Authentication interface{} `pulumi:"authentication"`
	// The unique relay name.
	RelayName *string `pulumi:"relayName"`
	// The destination relay server address.
	ServerName string `pulumi:"serverName"`
	// The destination relay server port.
	ServerPort float64 `pulumi:"serverPort"`
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a MailManagerRelay resource.
type MailManagerRelayArgs struct {
	// Authentication for the relay destination server—specify the secretARN where the SMTP credentials are stored.
	Authentication pulumi.Input
	// The unique relay name.
	RelayName pulumi.StringPtrInput
	// The destination relay server address.
	ServerName pulumi.StringInput
	// The destination relay server port.
	ServerPort pulumi.Float64Input
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags aws.TagArrayInput
}

func (MailManagerRelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mailManagerRelayArgs)(nil)).Elem()
}

type MailManagerRelayInput interface {
	pulumi.Input

	ToMailManagerRelayOutput() MailManagerRelayOutput
	ToMailManagerRelayOutputWithContext(ctx context.Context) MailManagerRelayOutput
}

func (*MailManagerRelay) ElementType() reflect.Type {
	return reflect.TypeOf((**MailManagerRelay)(nil)).Elem()
}

func (i *MailManagerRelay) ToMailManagerRelayOutput() MailManagerRelayOutput {
	return i.ToMailManagerRelayOutputWithContext(context.Background())
}

func (i *MailManagerRelay) ToMailManagerRelayOutputWithContext(ctx context.Context) MailManagerRelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MailManagerRelayOutput)
}

type MailManagerRelayOutput struct{ *pulumi.OutputState }

func (MailManagerRelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MailManagerRelay)(nil)).Elem()
}

func (o MailManagerRelayOutput) ToMailManagerRelayOutput() MailManagerRelayOutput {
	return o
}

func (o MailManagerRelayOutput) ToMailManagerRelayOutputWithContext(ctx context.Context) MailManagerRelayOutput {
	return o
}

// Authentication for the relay destination server—specify the secretARN where the SMTP credentials are stored.
func (o MailManagerRelayOutput) Authentication() pulumi.AnyOutput {
	return o.ApplyT(func(v *MailManagerRelay) pulumi.AnyOutput { return v.Authentication }).(pulumi.AnyOutput)
}

// The Amazon Resource Name (ARN) of the relay.
func (o MailManagerRelayOutput) RelayArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MailManagerRelay) pulumi.StringOutput { return v.RelayArn }).(pulumi.StringOutput)
}

// The unique relay identifier.
func (o MailManagerRelayOutput) RelayId() pulumi.StringOutput {
	return o.ApplyT(func(v *MailManagerRelay) pulumi.StringOutput { return v.RelayId }).(pulumi.StringOutput)
}

// The unique relay name.
func (o MailManagerRelayOutput) RelayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MailManagerRelay) pulumi.StringPtrOutput { return v.RelayName }).(pulumi.StringPtrOutput)
}

// The destination relay server address.
func (o MailManagerRelayOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v *MailManagerRelay) pulumi.StringOutput { return v.ServerName }).(pulumi.StringOutput)
}

// The destination relay server port.
func (o MailManagerRelayOutput) ServerPort() pulumi.Float64Output {
	return o.ApplyT(func(v *MailManagerRelay) pulumi.Float64Output { return v.ServerPort }).(pulumi.Float64Output)
}

// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
func (o MailManagerRelayOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *MailManagerRelay) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MailManagerRelayInput)(nil)).Elem(), &MailManagerRelay{})
	pulumi.RegisterOutputType(MailManagerRelayOutput{})
}
