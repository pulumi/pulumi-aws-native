// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::SES::MailManagerAddonInstance Resource Type
func LookupMailManagerAddonInstance(ctx *pulumi.Context, args *LookupMailManagerAddonInstanceArgs, opts ...pulumi.InvokeOption) (*LookupMailManagerAddonInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMailManagerAddonInstanceResult
	err := ctx.Invoke("aws-native:ses:getMailManagerAddonInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMailManagerAddonInstanceArgs struct {
	AddonInstanceId string `pulumi:"addonInstanceId"`
}

type LookupMailManagerAddonInstanceResult struct {
	AddonInstanceArn *string   `pulumi:"addonInstanceArn"`
	AddonInstanceId  *string   `pulumi:"addonInstanceId"`
	AddonName        *string   `pulumi:"addonName"`
	Tags             []aws.Tag `pulumi:"tags"`
}

func LookupMailManagerAddonInstanceOutput(ctx *pulumi.Context, args LookupMailManagerAddonInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupMailManagerAddonInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMailManagerAddonInstanceResult, error) {
			args := v.(LookupMailManagerAddonInstanceArgs)
			r, err := LookupMailManagerAddonInstance(ctx, &args, opts...)
			var s LookupMailManagerAddonInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMailManagerAddonInstanceResultOutput)
}

type LookupMailManagerAddonInstanceOutputArgs struct {
	AddonInstanceId pulumi.StringInput `pulumi:"addonInstanceId"`
}

func (LookupMailManagerAddonInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMailManagerAddonInstanceArgs)(nil)).Elem()
}

type LookupMailManagerAddonInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupMailManagerAddonInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMailManagerAddonInstanceResult)(nil)).Elem()
}

func (o LookupMailManagerAddonInstanceResultOutput) ToLookupMailManagerAddonInstanceResultOutput() LookupMailManagerAddonInstanceResultOutput {
	return o
}

func (o LookupMailManagerAddonInstanceResultOutput) ToLookupMailManagerAddonInstanceResultOutputWithContext(ctx context.Context) LookupMailManagerAddonInstanceResultOutput {
	return o
}

func (o LookupMailManagerAddonInstanceResultOutput) AddonInstanceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerAddonInstanceResult) *string { return v.AddonInstanceArn }).(pulumi.StringPtrOutput)
}

func (o LookupMailManagerAddonInstanceResultOutput) AddonInstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerAddonInstanceResult) *string { return v.AddonInstanceId }).(pulumi.StringPtrOutput)
}

func (o LookupMailManagerAddonInstanceResultOutput) AddonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerAddonInstanceResult) *string { return v.AddonName }).(pulumi.StringPtrOutput)
}

func (o LookupMailManagerAddonInstanceResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupMailManagerAddonInstanceResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMailManagerAddonInstanceResultOutput{})
}
