// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::SES::MailManagerRelay Resource Type
func LookupMailManagerRelay(ctx *pulumi.Context, args *LookupMailManagerRelayArgs, opts ...pulumi.InvokeOption) (*LookupMailManagerRelayResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMailManagerRelayResult
	err := ctx.Invoke("aws-native:ses:getMailManagerRelay", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMailManagerRelayArgs struct {
	// The unique relay identifier.
	RelayId string `pulumi:"relayId"`
}

type LookupMailManagerRelayResult struct {
	// Authentication for the relay destination server—specify the secretARN where the SMTP credentials are stored.
	Authentication interface{} `pulumi:"authentication"`
	// The Amazon Resource Name (ARN) of the relay.
	RelayArn *string `pulumi:"relayArn"`
	// The unique relay identifier.
	RelayId *string `pulumi:"relayId"`
	// The unique relay name.
	RelayName *string `pulumi:"relayName"`
	// The destination relay server address.
	ServerName *string `pulumi:"serverName"`
	// The destination relay server port.
	ServerPort *float64 `pulumi:"serverPort"`
	// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupMailManagerRelayOutput(ctx *pulumi.Context, args LookupMailManagerRelayOutputArgs, opts ...pulumi.InvokeOption) LookupMailManagerRelayResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMailManagerRelayResultOutput, error) {
			args := v.(LookupMailManagerRelayArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupMailManagerRelayResult
			secret, err := ctx.InvokePackageRaw("aws-native:ses:getMailManagerRelay", args, &rv, "", opts...)
			if err != nil {
				return LookupMailManagerRelayResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupMailManagerRelayResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupMailManagerRelayResultOutput), nil
			}
			return output, nil
		}).(LookupMailManagerRelayResultOutput)
}

type LookupMailManagerRelayOutputArgs struct {
	// The unique relay identifier.
	RelayId pulumi.StringInput `pulumi:"relayId"`
}

func (LookupMailManagerRelayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMailManagerRelayArgs)(nil)).Elem()
}

type LookupMailManagerRelayResultOutput struct{ *pulumi.OutputState }

func (LookupMailManagerRelayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMailManagerRelayResult)(nil)).Elem()
}

func (o LookupMailManagerRelayResultOutput) ToLookupMailManagerRelayResultOutput() LookupMailManagerRelayResultOutput {
	return o
}

func (o LookupMailManagerRelayResultOutput) ToLookupMailManagerRelayResultOutputWithContext(ctx context.Context) LookupMailManagerRelayResultOutput {
	return o
}

// Authentication for the relay destination server—specify the secretARN where the SMTP credentials are stored.
func (o LookupMailManagerRelayResultOutput) Authentication() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupMailManagerRelayResult) interface{} { return v.Authentication }).(pulumi.AnyOutput)
}

// The Amazon Resource Name (ARN) of the relay.
func (o LookupMailManagerRelayResultOutput) RelayArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerRelayResult) *string { return v.RelayArn }).(pulumi.StringPtrOutput)
}

// The unique relay identifier.
func (o LookupMailManagerRelayResultOutput) RelayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerRelayResult) *string { return v.RelayId }).(pulumi.StringPtrOutput)
}

// The unique relay name.
func (o LookupMailManagerRelayResultOutput) RelayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerRelayResult) *string { return v.RelayName }).(pulumi.StringPtrOutput)
}

// The destination relay server address.
func (o LookupMailManagerRelayResultOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMailManagerRelayResult) *string { return v.ServerName }).(pulumi.StringPtrOutput)
}

// The destination relay server port.
func (o LookupMailManagerRelayResultOutput) ServerPort() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupMailManagerRelayResult) *float64 { return v.ServerPort }).(pulumi.Float64PtrOutput)
}

// The tags used to organize, track, or control access for the resource. For example, { "tags": {"key1":"value1", "key2":"value2"} }.
func (o LookupMailManagerRelayResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupMailManagerRelayResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMailManagerRelayResultOutput{})
}
