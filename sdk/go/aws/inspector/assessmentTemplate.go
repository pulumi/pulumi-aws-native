// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package inspector

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Inspector::AssessmentTemplate
//
// Deprecated: AssessmentTemplate is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type AssessmentTemplate struct {
	pulumi.CustomResourceState

	Arn                       pulumi.StringOutput              `pulumi:"arn"`
	AssessmentTargetArn       pulumi.StringOutput              `pulumi:"assessmentTargetArn"`
	AssessmentTemplateName    pulumi.StringPtrOutput           `pulumi:"assessmentTemplateName"`
	DurationInSeconds         pulumi.IntOutput                 `pulumi:"durationInSeconds"`
	RulesPackageArns          pulumi.StringArrayOutput         `pulumi:"rulesPackageArns"`
	UserAttributesForFindings AssessmentTemplateTagArrayOutput `pulumi:"userAttributesForFindings"`
}

// NewAssessmentTemplate registers a new resource with the given unique name, arguments, and options.
func NewAssessmentTemplate(ctx *pulumi.Context,
	name string, args *AssessmentTemplateArgs, opts ...pulumi.ResourceOption) (*AssessmentTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AssessmentTargetArn == nil {
		return nil, errors.New("invalid value for required argument 'AssessmentTargetArn'")
	}
	if args.DurationInSeconds == nil {
		return nil, errors.New("invalid value for required argument 'DurationInSeconds'")
	}
	if args.RulesPackageArns == nil {
		return nil, errors.New("invalid value for required argument 'RulesPackageArns'")
	}
	var resource AssessmentTemplate
	err := ctx.RegisterResource("aws-native:inspector:AssessmentTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssessmentTemplate gets an existing AssessmentTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssessmentTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssessmentTemplateState, opts ...pulumi.ResourceOption) (*AssessmentTemplate, error) {
	var resource AssessmentTemplate
	err := ctx.ReadResource("aws-native:inspector:AssessmentTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssessmentTemplate resources.
type assessmentTemplateState struct {
}

type AssessmentTemplateState struct {
}

func (AssessmentTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentTemplateState)(nil)).Elem()
}

type assessmentTemplateArgs struct {
	AssessmentTargetArn       string                  `pulumi:"assessmentTargetArn"`
	AssessmentTemplateName    *string                 `pulumi:"assessmentTemplateName"`
	DurationInSeconds         int                     `pulumi:"durationInSeconds"`
	RulesPackageArns          []string                `pulumi:"rulesPackageArns"`
	UserAttributesForFindings []AssessmentTemplateTag `pulumi:"userAttributesForFindings"`
}

// The set of arguments for constructing a AssessmentTemplate resource.
type AssessmentTemplateArgs struct {
	AssessmentTargetArn       pulumi.StringInput
	AssessmentTemplateName    pulumi.StringPtrInput
	DurationInSeconds         pulumi.IntInput
	RulesPackageArns          pulumi.StringArrayInput
	UserAttributesForFindings AssessmentTemplateTagArrayInput
}

func (AssessmentTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assessmentTemplateArgs)(nil)).Elem()
}

type AssessmentTemplateInput interface {
	pulumi.Input

	ToAssessmentTemplateOutput() AssessmentTemplateOutput
	ToAssessmentTemplateOutputWithContext(ctx context.Context) AssessmentTemplateOutput
}

func (*AssessmentTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentTemplate)(nil))
}

func (i *AssessmentTemplate) ToAssessmentTemplateOutput() AssessmentTemplateOutput {
	return i.ToAssessmentTemplateOutputWithContext(context.Background())
}

func (i *AssessmentTemplate) ToAssessmentTemplateOutputWithContext(ctx context.Context) AssessmentTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssessmentTemplateOutput)
}

type AssessmentTemplateOutput struct{ *pulumi.OutputState }

func (AssessmentTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentTemplate)(nil))
}

func (o AssessmentTemplateOutput) ToAssessmentTemplateOutput() AssessmentTemplateOutput {
	return o
}

func (o AssessmentTemplateOutput) ToAssessmentTemplateOutputWithContext(ctx context.Context) AssessmentTemplateOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AssessmentTemplateInput)(nil)).Elem(), &AssessmentTemplate{})
	pulumi.RegisterOutputType(AssessmentTemplateOutput{})
}
