// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chatbot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Chatbot::CustomAction Resource Type
func LookupCustomAction(ctx *pulumi.Context, args *LookupCustomActionArgs, opts ...pulumi.InvokeOption) (*LookupCustomActionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCustomActionResult
	err := ctx.Invoke("aws-native:chatbot:getCustomAction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCustomActionArgs struct {
	CustomActionArn string `pulumi:"customActionArn"`
}

type LookupCustomActionResult struct {
	AliasName       *string                  `pulumi:"aliasName"`
	Attachments     []CustomActionAttachment `pulumi:"attachments"`
	CustomActionArn *string                  `pulumi:"customActionArn"`
	Definition      *CustomActionDefinition  `pulumi:"definition"`
	Tags            []aws.Tag                `pulumi:"tags"`
}

func LookupCustomActionOutput(ctx *pulumi.Context, args LookupCustomActionOutputArgs, opts ...pulumi.InvokeOption) LookupCustomActionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCustomActionResultOutput, error) {
			args := v.(LookupCustomActionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCustomActionResult
			secret, err := ctx.InvokePackageRaw("aws-native:chatbot:getCustomAction", args, &rv, "", opts...)
			if err != nil {
				return LookupCustomActionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCustomActionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCustomActionResultOutput), nil
			}
			return output, nil
		}).(LookupCustomActionResultOutput)
}

type LookupCustomActionOutputArgs struct {
	CustomActionArn pulumi.StringInput `pulumi:"customActionArn"`
}

func (LookupCustomActionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomActionArgs)(nil)).Elem()
}

type LookupCustomActionResultOutput struct{ *pulumi.OutputState }

func (LookupCustomActionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomActionResult)(nil)).Elem()
}

func (o LookupCustomActionResultOutput) ToLookupCustomActionResultOutput() LookupCustomActionResultOutput {
	return o
}

func (o LookupCustomActionResultOutput) ToLookupCustomActionResultOutputWithContext(ctx context.Context) LookupCustomActionResultOutput {
	return o
}

func (o LookupCustomActionResultOutput) AliasName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCustomActionResult) *string { return v.AliasName }).(pulumi.StringPtrOutput)
}

func (o LookupCustomActionResultOutput) Attachments() CustomActionAttachmentArrayOutput {
	return o.ApplyT(func(v LookupCustomActionResult) []CustomActionAttachment { return v.Attachments }).(CustomActionAttachmentArrayOutput)
}

func (o LookupCustomActionResultOutput) CustomActionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCustomActionResult) *string { return v.CustomActionArn }).(pulumi.StringPtrOutput)
}

func (o LookupCustomActionResultOutput) Definition() CustomActionDefinitionPtrOutput {
	return o.ApplyT(func(v LookupCustomActionResult) *CustomActionDefinition { return v.Definition }).(CustomActionDefinitionPtrOutput)
}

func (o LookupCustomActionResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupCustomActionResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCustomActionResultOutput{})
}
