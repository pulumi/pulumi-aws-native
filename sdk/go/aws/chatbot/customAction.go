// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chatbot

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Chatbot::CustomAction Resource Type
type CustomAction struct {
	pulumi.CustomResourceState

	// The name of the custom action. This name is included in the Amazon Resource Name (ARN).
	ActionName pulumi.StringOutput `pulumi:"actionName"`
	// The name used to invoke this action in a chat channel. For example, `@Amazon Q run my-alias` .
	AliasName pulumi.StringPtrOutput `pulumi:"aliasName"`
	// Defines when this custom action button should be attached to a notification.
	Attachments CustomActionAttachmentArrayOutput `pulumi:"attachments"`
	// The fully defined ARN of the custom action.
	CustomActionArn pulumi.StringOutput `pulumi:"customActionArn"`
	// The definition of the command to run when invoked as an alias or as an action button.
	Definition CustomActionDefinitionOutput `pulumi:"definition"`
	// The tags to add to the configuration.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewCustomAction registers a new resource with the given unique name, arguments, and options.
func NewCustomAction(ctx *pulumi.Context,
	name string, args *CustomActionArgs, opts ...pulumi.ResourceOption) (*CustomAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Definition == nil {
		return nil, errors.New("invalid value for required argument 'Definition'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"actionName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomAction
	err := ctx.RegisterResource("aws-native:chatbot:CustomAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomAction gets an existing CustomAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomActionState, opts ...pulumi.ResourceOption) (*CustomAction, error) {
	var resource CustomAction
	err := ctx.ReadResource("aws-native:chatbot:CustomAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomAction resources.
type customActionState struct {
}

type CustomActionState struct {
}

func (CustomActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*customActionState)(nil)).Elem()
}

type customActionArgs struct {
	// The name of the custom action. This name is included in the Amazon Resource Name (ARN).
	ActionName *string `pulumi:"actionName"`
	// The name used to invoke this action in a chat channel. For example, `@Amazon Q run my-alias` .
	AliasName *string `pulumi:"aliasName"`
	// Defines when this custom action button should be attached to a notification.
	Attachments []CustomActionAttachment `pulumi:"attachments"`
	// The definition of the command to run when invoked as an alias or as an action button.
	Definition CustomActionDefinition `pulumi:"definition"`
	// The tags to add to the configuration.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a CustomAction resource.
type CustomActionArgs struct {
	// The name of the custom action. This name is included in the Amazon Resource Name (ARN).
	ActionName pulumi.StringPtrInput
	// The name used to invoke this action in a chat channel. For example, `@Amazon Q run my-alias` .
	AliasName pulumi.StringPtrInput
	// Defines when this custom action button should be attached to a notification.
	Attachments CustomActionAttachmentArrayInput
	// The definition of the command to run when invoked as an alias or as an action button.
	Definition CustomActionDefinitionInput
	// The tags to add to the configuration.
	Tags aws.TagArrayInput
}

func (CustomActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customActionArgs)(nil)).Elem()
}

type CustomActionInput interface {
	pulumi.Input

	ToCustomActionOutput() CustomActionOutput
	ToCustomActionOutputWithContext(ctx context.Context) CustomActionOutput
}

func (*CustomAction) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAction)(nil)).Elem()
}

func (i *CustomAction) ToCustomActionOutput() CustomActionOutput {
	return i.ToCustomActionOutputWithContext(context.Background())
}

func (i *CustomAction) ToCustomActionOutputWithContext(ctx context.Context) CustomActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionOutput)
}

type CustomActionOutput struct{ *pulumi.OutputState }

func (CustomActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomAction)(nil)).Elem()
}

func (o CustomActionOutput) ToCustomActionOutput() CustomActionOutput {
	return o
}

func (o CustomActionOutput) ToCustomActionOutputWithContext(ctx context.Context) CustomActionOutput {
	return o
}

// The name of the custom action. This name is included in the Amazon Resource Name (ARN).
func (o CustomActionOutput) ActionName() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAction) pulumi.StringOutput { return v.ActionName }).(pulumi.StringOutput)
}

// The name used to invoke this action in a chat channel. For example, `@Amazon Q run my-alias` .
func (o CustomActionOutput) AliasName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomAction) pulumi.StringPtrOutput { return v.AliasName }).(pulumi.StringPtrOutput)
}

// Defines when this custom action button should be attached to a notification.
func (o CustomActionOutput) Attachments() CustomActionAttachmentArrayOutput {
	return o.ApplyT(func(v *CustomAction) CustomActionAttachmentArrayOutput { return v.Attachments }).(CustomActionAttachmentArrayOutput)
}

// The fully defined ARN of the custom action.
func (o CustomActionOutput) CustomActionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomAction) pulumi.StringOutput { return v.CustomActionArn }).(pulumi.StringOutput)
}

// The definition of the command to run when invoked as an alias or as an action button.
func (o CustomActionOutput) Definition() CustomActionDefinitionOutput {
	return o.ApplyT(func(v *CustomAction) CustomActionDefinitionOutput { return v.Definition }).(CustomActionDefinitionOutput)
}

// The tags to add to the configuration.
func (o CustomActionOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *CustomAction) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionInput)(nil)).Elem(), &CustomAction{})
	pulumi.RegisterOutputType(CustomActionOutput{})
}
