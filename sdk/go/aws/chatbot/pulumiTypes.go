// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chatbot

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CustomActionAttachment struct {
	// The text of the button that appears on the notification.
	ButtonText *string `pulumi:"buttonText"`
	// The criteria for when a button should be shown based on values in the notification.
	Criteria []CustomActionAttachmentCriteria `pulumi:"criteria"`
	// The type of notification that the custom action should be attached to.
	NotificationType *string `pulumi:"notificationType"`
	// The variables to extract from the notification.
	Variables map[string]string `pulumi:"variables"`
}

// CustomActionAttachmentInput is an input type that accepts CustomActionAttachmentArgs and CustomActionAttachmentOutput values.
// You can construct a concrete instance of `CustomActionAttachmentInput` via:
//
//	CustomActionAttachmentArgs{...}
type CustomActionAttachmentInput interface {
	pulumi.Input

	ToCustomActionAttachmentOutput() CustomActionAttachmentOutput
	ToCustomActionAttachmentOutputWithContext(context.Context) CustomActionAttachmentOutput
}

type CustomActionAttachmentArgs struct {
	// The text of the button that appears on the notification.
	ButtonText pulumi.StringPtrInput `pulumi:"buttonText"`
	// The criteria for when a button should be shown based on values in the notification.
	Criteria CustomActionAttachmentCriteriaArrayInput `pulumi:"criteria"`
	// The type of notification that the custom action should be attached to.
	NotificationType pulumi.StringPtrInput `pulumi:"notificationType"`
	// The variables to extract from the notification.
	Variables pulumi.StringMapInput `pulumi:"variables"`
}

func (CustomActionAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionAttachment)(nil)).Elem()
}

func (i CustomActionAttachmentArgs) ToCustomActionAttachmentOutput() CustomActionAttachmentOutput {
	return i.ToCustomActionAttachmentOutputWithContext(context.Background())
}

func (i CustomActionAttachmentArgs) ToCustomActionAttachmentOutputWithContext(ctx context.Context) CustomActionAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionAttachmentOutput)
}

// CustomActionAttachmentArrayInput is an input type that accepts CustomActionAttachmentArray and CustomActionAttachmentArrayOutput values.
// You can construct a concrete instance of `CustomActionAttachmentArrayInput` via:
//
//	CustomActionAttachmentArray{ CustomActionAttachmentArgs{...} }
type CustomActionAttachmentArrayInput interface {
	pulumi.Input

	ToCustomActionAttachmentArrayOutput() CustomActionAttachmentArrayOutput
	ToCustomActionAttachmentArrayOutputWithContext(context.Context) CustomActionAttachmentArrayOutput
}

type CustomActionAttachmentArray []CustomActionAttachmentInput

func (CustomActionAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionAttachment)(nil)).Elem()
}

func (i CustomActionAttachmentArray) ToCustomActionAttachmentArrayOutput() CustomActionAttachmentArrayOutput {
	return i.ToCustomActionAttachmentArrayOutputWithContext(context.Background())
}

func (i CustomActionAttachmentArray) ToCustomActionAttachmentArrayOutputWithContext(ctx context.Context) CustomActionAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionAttachmentArrayOutput)
}

type CustomActionAttachmentOutput struct{ *pulumi.OutputState }

func (CustomActionAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionAttachment)(nil)).Elem()
}

func (o CustomActionAttachmentOutput) ToCustomActionAttachmentOutput() CustomActionAttachmentOutput {
	return o
}

func (o CustomActionAttachmentOutput) ToCustomActionAttachmentOutputWithContext(ctx context.Context) CustomActionAttachmentOutput {
	return o
}

// The text of the button that appears on the notification.
func (o CustomActionAttachmentOutput) ButtonText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionAttachment) *string { return v.ButtonText }).(pulumi.StringPtrOutput)
}

// The criteria for when a button should be shown based on values in the notification.
func (o CustomActionAttachmentOutput) Criteria() CustomActionAttachmentCriteriaArrayOutput {
	return o.ApplyT(func(v CustomActionAttachment) []CustomActionAttachmentCriteria { return v.Criteria }).(CustomActionAttachmentCriteriaArrayOutput)
}

// The type of notification that the custom action should be attached to.
func (o CustomActionAttachmentOutput) NotificationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionAttachment) *string { return v.NotificationType }).(pulumi.StringPtrOutput)
}

// The variables to extract from the notification.
func (o CustomActionAttachmentOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func(v CustomActionAttachment) map[string]string { return v.Variables }).(pulumi.StringMapOutput)
}

type CustomActionAttachmentArrayOutput struct{ *pulumi.OutputState }

func (CustomActionAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionAttachment)(nil)).Elem()
}

func (o CustomActionAttachmentArrayOutput) ToCustomActionAttachmentArrayOutput() CustomActionAttachmentArrayOutput {
	return o
}

func (o CustomActionAttachmentArrayOutput) ToCustomActionAttachmentArrayOutputWithContext(ctx context.Context) CustomActionAttachmentArrayOutput {
	return o
}

func (o CustomActionAttachmentArrayOutput) Index(i pulumi.IntInput) CustomActionAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomActionAttachment {
		return vs[0].([]CustomActionAttachment)[vs[1].(int)]
	}).(CustomActionAttachmentOutput)
}

type CustomActionAttachmentCriteria struct {
	// The operation to perform on the named variable.
	Operator CustomActionAttachmentCriteriaOperator `pulumi:"operator"`
	// A value that is compared with the actual value of the variable based on the behavior of the operator.
	Value *string `pulumi:"value"`
	// The name of the variable to operate on.
	VariableName string `pulumi:"variableName"`
}

// CustomActionAttachmentCriteriaInput is an input type that accepts CustomActionAttachmentCriteriaArgs and CustomActionAttachmentCriteriaOutput values.
// You can construct a concrete instance of `CustomActionAttachmentCriteriaInput` via:
//
//	CustomActionAttachmentCriteriaArgs{...}
type CustomActionAttachmentCriteriaInput interface {
	pulumi.Input

	ToCustomActionAttachmentCriteriaOutput() CustomActionAttachmentCriteriaOutput
	ToCustomActionAttachmentCriteriaOutputWithContext(context.Context) CustomActionAttachmentCriteriaOutput
}

type CustomActionAttachmentCriteriaArgs struct {
	// The operation to perform on the named variable.
	Operator CustomActionAttachmentCriteriaOperatorInput `pulumi:"operator"`
	// A value that is compared with the actual value of the variable based on the behavior of the operator.
	Value pulumi.StringPtrInput `pulumi:"value"`
	// The name of the variable to operate on.
	VariableName pulumi.StringInput `pulumi:"variableName"`
}

func (CustomActionAttachmentCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionAttachmentCriteria)(nil)).Elem()
}

func (i CustomActionAttachmentCriteriaArgs) ToCustomActionAttachmentCriteriaOutput() CustomActionAttachmentCriteriaOutput {
	return i.ToCustomActionAttachmentCriteriaOutputWithContext(context.Background())
}

func (i CustomActionAttachmentCriteriaArgs) ToCustomActionAttachmentCriteriaOutputWithContext(ctx context.Context) CustomActionAttachmentCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionAttachmentCriteriaOutput)
}

// CustomActionAttachmentCriteriaArrayInput is an input type that accepts CustomActionAttachmentCriteriaArray and CustomActionAttachmentCriteriaArrayOutput values.
// You can construct a concrete instance of `CustomActionAttachmentCriteriaArrayInput` via:
//
//	CustomActionAttachmentCriteriaArray{ CustomActionAttachmentCriteriaArgs{...} }
type CustomActionAttachmentCriteriaArrayInput interface {
	pulumi.Input

	ToCustomActionAttachmentCriteriaArrayOutput() CustomActionAttachmentCriteriaArrayOutput
	ToCustomActionAttachmentCriteriaArrayOutputWithContext(context.Context) CustomActionAttachmentCriteriaArrayOutput
}

type CustomActionAttachmentCriteriaArray []CustomActionAttachmentCriteriaInput

func (CustomActionAttachmentCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionAttachmentCriteria)(nil)).Elem()
}

func (i CustomActionAttachmentCriteriaArray) ToCustomActionAttachmentCriteriaArrayOutput() CustomActionAttachmentCriteriaArrayOutput {
	return i.ToCustomActionAttachmentCriteriaArrayOutputWithContext(context.Background())
}

func (i CustomActionAttachmentCriteriaArray) ToCustomActionAttachmentCriteriaArrayOutputWithContext(ctx context.Context) CustomActionAttachmentCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionAttachmentCriteriaArrayOutput)
}

type CustomActionAttachmentCriteriaOutput struct{ *pulumi.OutputState }

func (CustomActionAttachmentCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionAttachmentCriteria)(nil)).Elem()
}

func (o CustomActionAttachmentCriteriaOutput) ToCustomActionAttachmentCriteriaOutput() CustomActionAttachmentCriteriaOutput {
	return o
}

func (o CustomActionAttachmentCriteriaOutput) ToCustomActionAttachmentCriteriaOutputWithContext(ctx context.Context) CustomActionAttachmentCriteriaOutput {
	return o
}

// The operation to perform on the named variable.
func (o CustomActionAttachmentCriteriaOutput) Operator() CustomActionAttachmentCriteriaOperatorOutput {
	return o.ApplyT(func(v CustomActionAttachmentCriteria) CustomActionAttachmentCriteriaOperator { return v.Operator }).(CustomActionAttachmentCriteriaOperatorOutput)
}

// A value that is compared with the actual value of the variable based on the behavior of the operator.
func (o CustomActionAttachmentCriteriaOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionAttachmentCriteria) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// The name of the variable to operate on.
func (o CustomActionAttachmentCriteriaOutput) VariableName() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActionAttachmentCriteria) string { return v.VariableName }).(pulumi.StringOutput)
}

type CustomActionAttachmentCriteriaArrayOutput struct{ *pulumi.OutputState }

func (CustomActionAttachmentCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionAttachmentCriteria)(nil)).Elem()
}

func (o CustomActionAttachmentCriteriaArrayOutput) ToCustomActionAttachmentCriteriaArrayOutput() CustomActionAttachmentCriteriaArrayOutput {
	return o
}

func (o CustomActionAttachmentCriteriaArrayOutput) ToCustomActionAttachmentCriteriaArrayOutputWithContext(ctx context.Context) CustomActionAttachmentCriteriaArrayOutput {
	return o
}

func (o CustomActionAttachmentCriteriaArrayOutput) Index(i pulumi.IntInput) CustomActionAttachmentCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomActionAttachmentCriteria {
		return vs[0].([]CustomActionAttachmentCriteria)[vs[1].(int)]
	}).(CustomActionAttachmentCriteriaOutput)
}

type CustomActionDefinition struct {
	// The command string to run which may include variables by prefixing with a dollar sign ($).
	CommandText string `pulumi:"commandText"`
}

// CustomActionDefinitionInput is an input type that accepts CustomActionDefinitionArgs and CustomActionDefinitionOutput values.
// You can construct a concrete instance of `CustomActionDefinitionInput` via:
//
//	CustomActionDefinitionArgs{...}
type CustomActionDefinitionInput interface {
	pulumi.Input

	ToCustomActionDefinitionOutput() CustomActionDefinitionOutput
	ToCustomActionDefinitionOutputWithContext(context.Context) CustomActionDefinitionOutput
}

type CustomActionDefinitionArgs struct {
	// The command string to run which may include variables by prefixing with a dollar sign ($).
	CommandText pulumi.StringInput `pulumi:"commandText"`
}

func (CustomActionDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionDefinition)(nil)).Elem()
}

func (i CustomActionDefinitionArgs) ToCustomActionDefinitionOutput() CustomActionDefinitionOutput {
	return i.ToCustomActionDefinitionOutputWithContext(context.Background())
}

func (i CustomActionDefinitionArgs) ToCustomActionDefinitionOutputWithContext(ctx context.Context) CustomActionDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionDefinitionOutput)
}

type CustomActionDefinitionOutput struct{ *pulumi.OutputState }

func (CustomActionDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionDefinition)(nil)).Elem()
}

func (o CustomActionDefinitionOutput) ToCustomActionDefinitionOutput() CustomActionDefinitionOutput {
	return o
}

func (o CustomActionDefinitionOutput) ToCustomActionDefinitionOutputWithContext(ctx context.Context) CustomActionDefinitionOutput {
	return o
}

// The command string to run which may include variables by prefixing with a dollar sign ($).
func (o CustomActionDefinitionOutput) CommandText() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActionDefinition) string { return v.CommandText }).(pulumi.StringOutput)
}

type CustomActionDefinitionPtrOutput struct{ *pulumi.OutputState }

func (CustomActionDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionDefinition)(nil)).Elem()
}

func (o CustomActionDefinitionPtrOutput) ToCustomActionDefinitionPtrOutput() CustomActionDefinitionPtrOutput {
	return o
}

func (o CustomActionDefinitionPtrOutput) ToCustomActionDefinitionPtrOutputWithContext(ctx context.Context) CustomActionDefinitionPtrOutput {
	return o
}

func (o CustomActionDefinitionPtrOutput) Elem() CustomActionDefinitionOutput {
	return o.ApplyT(func(v *CustomActionDefinition) CustomActionDefinition {
		if v != nil {
			return *v
		}
		var ret CustomActionDefinition
		return ret
	}).(CustomActionDefinitionOutput)
}

// The command string to run which may include variables by prefixing with a dollar sign ($).
func (o CustomActionDefinitionPtrOutput) CommandText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.CommandText
	}).(pulumi.StringPtrOutput)
}

type CustomActionTag struct {
	// A string used to identify this tag. You can specify a maximum of 128 characters for a tag key. Tags owned by Amazon Web Services (AWS) have the reserved prefix: `aws:` .
	Key string `pulumi:"key"`
	// A string containing the value for this tag. You can specify a maximum of 256 characters for a tag value.
	Value string `pulumi:"value"`
}

type MicrosoftTeamsChannelConfigurationTag struct {
	// A string used to identify this tag. You can specify a maximum of 128 characters for a tag key. Tags owned by Amazon Web Services (AWS) have the reserved prefix: `aws:` .
	Key string `pulumi:"key"`
	// A string containing the value for this tag. You can specify a maximum of 256 characters for a tag value.
	Value string `pulumi:"value"`
}

type SlackChannelConfigurationTag struct {
	// A string used to identify this tag. You can specify a maximum of 128 characters for a tag key. Tags owned by Amazon Web Services (AWS) have the reserved prefix: `aws:` .
	Key string `pulumi:"key"`
	// A string containing the value for this tag. You can specify a maximum of 256 characters for a tag value.
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionAttachmentInput)(nil)).Elem(), CustomActionAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionAttachmentArrayInput)(nil)).Elem(), CustomActionAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionAttachmentCriteriaInput)(nil)).Elem(), CustomActionAttachmentCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionAttachmentCriteriaArrayInput)(nil)).Elem(), CustomActionAttachmentCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionDefinitionInput)(nil)).Elem(), CustomActionDefinitionArgs{})
	pulumi.RegisterOutputType(CustomActionAttachmentOutput{})
	pulumi.RegisterOutputType(CustomActionAttachmentArrayOutput{})
	pulumi.RegisterOutputType(CustomActionAttachmentCriteriaOutput{})
	pulumi.RegisterOutputType(CustomActionAttachmentCriteriaArrayOutput{})
	pulumi.RegisterOutputType(CustomActionDefinitionOutput{})
	pulumi.RegisterOutputType(CustomActionDefinitionPtrOutput{})
}
