// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cassandra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Cassandra::Keyspace
func LookupKeyspace(ctx *pulumi.Context, args *LookupKeyspaceArgs, opts ...pulumi.InvokeOption) (*LookupKeyspaceResult, error) {
	var rv LookupKeyspaceResult
	err := ctx.Invoke("aws-native:cassandra:getKeyspace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupKeyspaceArgs struct {
	// Name for Cassandra keyspace
	KeyspaceName string `pulumi:"keyspaceName"`
}

type LookupKeyspaceResult struct {
	Tags []KeyspaceTag `pulumi:"tags"`
}

func LookupKeyspaceOutput(ctx *pulumi.Context, args LookupKeyspaceOutputArgs, opts ...pulumi.InvokeOption) LookupKeyspaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKeyspaceResult, error) {
			args := v.(LookupKeyspaceArgs)
			r, err := LookupKeyspace(ctx, &args, opts...)
			var s LookupKeyspaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupKeyspaceResultOutput)
}

type LookupKeyspaceOutputArgs struct {
	// Name for Cassandra keyspace
	KeyspaceName pulumi.StringInput `pulumi:"keyspaceName"`
}

func (LookupKeyspaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyspaceArgs)(nil)).Elem()
}

type LookupKeyspaceResultOutput struct{ *pulumi.OutputState }

func (LookupKeyspaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKeyspaceResult)(nil)).Elem()
}

func (o LookupKeyspaceResultOutput) ToLookupKeyspaceResultOutput() LookupKeyspaceResultOutput {
	return o
}

func (o LookupKeyspaceResultOutput) ToLookupKeyspaceResultOutputWithContext(ctx context.Context) LookupKeyspaceResultOutput {
	return o
}

func (o LookupKeyspaceResultOutput) Tags() KeyspaceTagArrayOutput {
	return o.ApplyT(func(v LookupKeyspaceResult) []KeyspaceTag { return v.Tags }).(KeyspaceTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKeyspaceResultOutput{})
}
