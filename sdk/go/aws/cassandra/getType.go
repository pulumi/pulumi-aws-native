// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cassandra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Cassandra::Type
func LookupType(ctx *pulumi.Context, args *LookupTypeArgs, opts ...pulumi.InvokeOption) (*LookupTypeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTypeResult
	err := ctx.Invoke("aws-native:cassandra:getType", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTypeArgs struct {
	// Name of the Keyspace which contains the User-Defined Type.
	KeyspaceName string `pulumi:"keyspaceName"`
	// Name of the User-Defined Type.
	TypeName string `pulumi:"typeName"`
}

type LookupTypeResult struct {
	// List of parent User-Defined Types that directly reference the User-Defined Type in their fields.
	DirectParentTypes []string `pulumi:"directParentTypes"`
	// List of Tables that directly reference the User-Defined Type in their columns.
	DirectReferringTables []string `pulumi:"directReferringTables"`
	// ARN of the Keyspace which contains the User-Defined Type.
	KeyspaceArn *string `pulumi:"keyspaceArn"`
	// Timestamp of the last time the User-Defined Type's meta data was modified.
	LastModifiedTimestamp *float64 `pulumi:"lastModifiedTimestamp"`
	// Maximum nesting depth of the User-Defined Type across the field types.
	MaxNestingDepth *int `pulumi:"maxNestingDepth"`
}

func LookupTypeOutput(ctx *pulumi.Context, args LookupTypeOutputArgs, opts ...pulumi.InvokeOption) LookupTypeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTypeResultOutput, error) {
			args := v.(LookupTypeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:cassandra:getType", args, LookupTypeResultOutput{}, options).(LookupTypeResultOutput), nil
		}).(LookupTypeResultOutput)
}

type LookupTypeOutputArgs struct {
	// Name of the Keyspace which contains the User-Defined Type.
	KeyspaceName pulumi.StringInput `pulumi:"keyspaceName"`
	// Name of the User-Defined Type.
	TypeName pulumi.StringInput `pulumi:"typeName"`
}

func (LookupTypeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTypeArgs)(nil)).Elem()
}

type LookupTypeResultOutput struct{ *pulumi.OutputState }

func (LookupTypeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTypeResult)(nil)).Elem()
}

func (o LookupTypeResultOutput) ToLookupTypeResultOutput() LookupTypeResultOutput {
	return o
}

func (o LookupTypeResultOutput) ToLookupTypeResultOutputWithContext(ctx context.Context) LookupTypeResultOutput {
	return o
}

// List of parent User-Defined Types that directly reference the User-Defined Type in their fields.
func (o LookupTypeResultOutput) DirectParentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTypeResult) []string { return v.DirectParentTypes }).(pulumi.StringArrayOutput)
}

// List of Tables that directly reference the User-Defined Type in their columns.
func (o LookupTypeResultOutput) DirectReferringTables() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTypeResult) []string { return v.DirectReferringTables }).(pulumi.StringArrayOutput)
}

// ARN of the Keyspace which contains the User-Defined Type.
func (o LookupTypeResultOutput) KeyspaceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTypeResult) *string { return v.KeyspaceArn }).(pulumi.StringPtrOutput)
}

// Timestamp of the last time the User-Defined Type's meta data was modified.
func (o LookupTypeResultOutput) LastModifiedTimestamp() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupTypeResult) *float64 { return v.LastModifiedTimestamp }).(pulumi.Float64PtrOutput)
}

// Maximum nesting depth of the User-Defined Type across the field types.
func (o LookupTypeResultOutput) MaxNestingDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupTypeResult) *int { return v.MaxNestingDepth }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTypeResultOutput{})
}
