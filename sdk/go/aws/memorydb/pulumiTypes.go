// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package memorydb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A key-value pair to associate with a resource.
type AclTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with 'aws:'. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

type AuthenticationModeProperties struct {
	// Passwords used for this user account. You can create up to two passwords for each user.
	Passwords []string `pulumi:"passwords"`
	// Type of authentication strategy for this user.
	Type *UserAuthenticationModePropertiesType `pulumi:"type"`
}

// AuthenticationModePropertiesInput is an input type that accepts AuthenticationModePropertiesArgs and AuthenticationModePropertiesOutput values.
// You can construct a concrete instance of `AuthenticationModePropertiesInput` via:
//
//	AuthenticationModePropertiesArgs{...}
type AuthenticationModePropertiesInput interface {
	pulumi.Input

	ToAuthenticationModePropertiesOutput() AuthenticationModePropertiesOutput
	ToAuthenticationModePropertiesOutputWithContext(context.Context) AuthenticationModePropertiesOutput
}

type AuthenticationModePropertiesArgs struct {
	// Passwords used for this user account. You can create up to two passwords for each user.
	Passwords pulumi.StringArrayInput `pulumi:"passwords"`
	// Type of authentication strategy for this user.
	Type UserAuthenticationModePropertiesTypePtrInput `pulumi:"type"`
}

func (AuthenticationModePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationModeProperties)(nil)).Elem()
}

func (i AuthenticationModePropertiesArgs) ToAuthenticationModePropertiesOutput() AuthenticationModePropertiesOutput {
	return i.ToAuthenticationModePropertiesOutputWithContext(context.Background())
}

func (i AuthenticationModePropertiesArgs) ToAuthenticationModePropertiesOutputWithContext(ctx context.Context) AuthenticationModePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationModePropertiesOutput)
}

func (i AuthenticationModePropertiesArgs) ToAuthenticationModePropertiesPtrOutput() AuthenticationModePropertiesPtrOutput {
	return i.ToAuthenticationModePropertiesPtrOutputWithContext(context.Background())
}

func (i AuthenticationModePropertiesArgs) ToAuthenticationModePropertiesPtrOutputWithContext(ctx context.Context) AuthenticationModePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationModePropertiesOutput).ToAuthenticationModePropertiesPtrOutputWithContext(ctx)
}

// AuthenticationModePropertiesPtrInput is an input type that accepts AuthenticationModePropertiesArgs, AuthenticationModePropertiesPtr and AuthenticationModePropertiesPtrOutput values.
// You can construct a concrete instance of `AuthenticationModePropertiesPtrInput` via:
//
//	        AuthenticationModePropertiesArgs{...}
//
//	or:
//
//	        nil
type AuthenticationModePropertiesPtrInput interface {
	pulumi.Input

	ToAuthenticationModePropertiesPtrOutput() AuthenticationModePropertiesPtrOutput
	ToAuthenticationModePropertiesPtrOutputWithContext(context.Context) AuthenticationModePropertiesPtrOutput
}

type authenticationModePropertiesPtrType AuthenticationModePropertiesArgs

func AuthenticationModePropertiesPtr(v *AuthenticationModePropertiesArgs) AuthenticationModePropertiesPtrInput {
	return (*authenticationModePropertiesPtrType)(v)
}

func (*authenticationModePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationModeProperties)(nil)).Elem()
}

func (i *authenticationModePropertiesPtrType) ToAuthenticationModePropertiesPtrOutput() AuthenticationModePropertiesPtrOutput {
	return i.ToAuthenticationModePropertiesPtrOutputWithContext(context.Background())
}

func (i *authenticationModePropertiesPtrType) ToAuthenticationModePropertiesPtrOutputWithContext(ctx context.Context) AuthenticationModePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationModePropertiesPtrOutput)
}

type AuthenticationModePropertiesOutput struct{ *pulumi.OutputState }

func (AuthenticationModePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationModeProperties)(nil)).Elem()
}

func (o AuthenticationModePropertiesOutput) ToAuthenticationModePropertiesOutput() AuthenticationModePropertiesOutput {
	return o
}

func (o AuthenticationModePropertiesOutput) ToAuthenticationModePropertiesOutputWithContext(ctx context.Context) AuthenticationModePropertiesOutput {
	return o
}

func (o AuthenticationModePropertiesOutput) ToAuthenticationModePropertiesPtrOutput() AuthenticationModePropertiesPtrOutput {
	return o.ToAuthenticationModePropertiesPtrOutputWithContext(context.Background())
}

func (o AuthenticationModePropertiesOutput) ToAuthenticationModePropertiesPtrOutputWithContext(ctx context.Context) AuthenticationModePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationModeProperties) *AuthenticationModeProperties {
		return &v
	}).(AuthenticationModePropertiesPtrOutput)
}

// Passwords used for this user account. You can create up to two passwords for each user.
func (o AuthenticationModePropertiesOutput) Passwords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthenticationModeProperties) []string { return v.Passwords }).(pulumi.StringArrayOutput)
}

// Type of authentication strategy for this user.
func (o AuthenticationModePropertiesOutput) Type() UserAuthenticationModePropertiesTypePtrOutput {
	return o.ApplyT(func(v AuthenticationModeProperties) *UserAuthenticationModePropertiesType { return v.Type }).(UserAuthenticationModePropertiesTypePtrOutput)
}

type AuthenticationModePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationModePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationModeProperties)(nil)).Elem()
}

func (o AuthenticationModePropertiesPtrOutput) ToAuthenticationModePropertiesPtrOutput() AuthenticationModePropertiesPtrOutput {
	return o
}

func (o AuthenticationModePropertiesPtrOutput) ToAuthenticationModePropertiesPtrOutputWithContext(ctx context.Context) AuthenticationModePropertiesPtrOutput {
	return o
}

func (o AuthenticationModePropertiesPtrOutput) Elem() AuthenticationModePropertiesOutput {
	return o.ApplyT(func(v *AuthenticationModeProperties) AuthenticationModeProperties {
		if v != nil {
			return *v
		}
		var ret AuthenticationModeProperties
		return ret
	}).(AuthenticationModePropertiesOutput)
}

// Passwords used for this user account. You can create up to two passwords for each user.
func (o AuthenticationModePropertiesPtrOutput) Passwords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthenticationModeProperties) []string {
		if v == nil {
			return nil
		}
		return v.Passwords
	}).(pulumi.StringArrayOutput)
}

// Type of authentication strategy for this user.
func (o AuthenticationModePropertiesPtrOutput) Type() UserAuthenticationModePropertiesTypePtrOutput {
	return o.ApplyT(func(v *AuthenticationModeProperties) *UserAuthenticationModePropertiesType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(UserAuthenticationModePropertiesTypePtrOutput)
}

type ClusterEndpoint struct {
	// The DNS address of the primary read-write node.
	Address *string `pulumi:"address"`
	// The port number that the engine is listening on.
	Port *int `pulumi:"port"`
}

// ClusterEndpointInput is an input type that accepts ClusterEndpointArgs and ClusterEndpointOutput values.
// You can construct a concrete instance of `ClusterEndpointInput` via:
//
//	ClusterEndpointArgs{...}
type ClusterEndpointInput interface {
	pulumi.Input

	ToClusterEndpointOutput() ClusterEndpointOutput
	ToClusterEndpointOutputWithContext(context.Context) ClusterEndpointOutput
}

type ClusterEndpointArgs struct {
	// The DNS address of the primary read-write node.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The port number that the engine is listening on.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEndpoint)(nil)).Elem()
}

func (i ClusterEndpointArgs) ToClusterEndpointOutput() ClusterEndpointOutput {
	return i.ToClusterEndpointOutputWithContext(context.Background())
}

func (i ClusterEndpointArgs) ToClusterEndpointOutputWithContext(ctx context.Context) ClusterEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEndpointOutput)
}

func (i ClusterEndpointArgs) ToClusterEndpointPtrOutput() ClusterEndpointPtrOutput {
	return i.ToClusterEndpointPtrOutputWithContext(context.Background())
}

func (i ClusterEndpointArgs) ToClusterEndpointPtrOutputWithContext(ctx context.Context) ClusterEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEndpointOutput).ToClusterEndpointPtrOutputWithContext(ctx)
}

// ClusterEndpointPtrInput is an input type that accepts ClusterEndpointArgs, ClusterEndpointPtr and ClusterEndpointPtrOutput values.
// You can construct a concrete instance of `ClusterEndpointPtrInput` via:
//
//	        ClusterEndpointArgs{...}
//
//	or:
//
//	        nil
type ClusterEndpointPtrInput interface {
	pulumi.Input

	ToClusterEndpointPtrOutput() ClusterEndpointPtrOutput
	ToClusterEndpointPtrOutputWithContext(context.Context) ClusterEndpointPtrOutput
}

type clusterEndpointPtrType ClusterEndpointArgs

func ClusterEndpointPtr(v *ClusterEndpointArgs) ClusterEndpointPtrInput {
	return (*clusterEndpointPtrType)(v)
}

func (*clusterEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEndpoint)(nil)).Elem()
}

func (i *clusterEndpointPtrType) ToClusterEndpointPtrOutput() ClusterEndpointPtrOutput {
	return i.ToClusterEndpointPtrOutputWithContext(context.Background())
}

func (i *clusterEndpointPtrType) ToClusterEndpointPtrOutputWithContext(ctx context.Context) ClusterEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEndpointPtrOutput)
}

type ClusterEndpointOutput struct{ *pulumi.OutputState }

func (ClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEndpoint)(nil)).Elem()
}

func (o ClusterEndpointOutput) ToClusterEndpointOutput() ClusterEndpointOutput {
	return o
}

func (o ClusterEndpointOutput) ToClusterEndpointOutputWithContext(ctx context.Context) ClusterEndpointOutput {
	return o
}

func (o ClusterEndpointOutput) ToClusterEndpointPtrOutput() ClusterEndpointPtrOutput {
	return o.ToClusterEndpointPtrOutputWithContext(context.Background())
}

func (o ClusterEndpointOutput) ToClusterEndpointPtrOutputWithContext(ctx context.Context) ClusterEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEndpoint) *ClusterEndpoint {
		return &v
	}).(ClusterEndpointPtrOutput)
}

// The DNS address of the primary read-write node.
func (o ClusterEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The port number that the engine is listening on.
func (o ClusterEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ClusterEndpointPtrOutput struct{ *pulumi.OutputState }

func (ClusterEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEndpoint)(nil)).Elem()
}

func (o ClusterEndpointPtrOutput) ToClusterEndpointPtrOutput() ClusterEndpointPtrOutput {
	return o
}

func (o ClusterEndpointPtrOutput) ToClusterEndpointPtrOutputWithContext(ctx context.Context) ClusterEndpointPtrOutput {
	return o
}

func (o ClusterEndpointPtrOutput) Elem() ClusterEndpointOutput {
	return o.ApplyT(func(v *ClusterEndpoint) ClusterEndpoint {
		if v != nil {
			return *v
		}
		var ret ClusterEndpoint
		return ret
	}).(ClusterEndpointOutput)
}

// The DNS address of the primary read-write node.
func (o ClusterEndpointPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The port number that the engine is listening on.
func (o ClusterEndpointPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterEndpoint) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// A key-value pair to associate with a resource.
type ClusterTag struct {
	// The key for the tag. May not be null.
	Key string `pulumi:"key"`
	// The tag's value. May be null.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type ParameterGroupTag struct {
	// The key for the tag. May not be null.
	Key string `pulumi:"key"`
	// The tag's value. May be null.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type SubnetGroupTag struct {
	// The key for the tag. May not be null.
	Key string `pulumi:"key"`
	// The tag's value. May be null.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type UserTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with 'aws:'. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationModePropertiesInput)(nil)).Elem(), AuthenticationModePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationModePropertiesPtrInput)(nil)).Elem(), AuthenticationModePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEndpointInput)(nil)).Elem(), ClusterEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEndpointPtrInput)(nil)).Elem(), ClusterEndpointArgs{})
	pulumi.RegisterOutputType(AuthenticationModePropertiesOutput{})
	pulumi.RegisterOutputType(AuthenticationModePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ClusterEndpointOutput{})
	pulumi.RegisterOutputType(ClusterEndpointPtrOutput{})
}
