// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesweb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Definition of AWS::WorkSpacesWeb::UserAccessLoggingSettings Resource Type
func LookupUserAccessLoggingSettings(ctx *pulumi.Context, args *LookupUserAccessLoggingSettingsArgs, opts ...pulumi.InvokeOption) (*LookupUserAccessLoggingSettingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserAccessLoggingSettingsResult
	err := ctx.Invoke("aws-native:workspacesweb:getUserAccessLoggingSettings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupUserAccessLoggingSettingsArgs struct {
	UserAccessLoggingSettingsArn string `pulumi:"userAccessLoggingSettingsArn"`
}

type LookupUserAccessLoggingSettingsResult struct {
	AssociatedPortalArns []string `pulumi:"associatedPortalArns"`
	// Kinesis stream ARN to which log events are published.
	KinesisStreamArn             *string                        `pulumi:"kinesisStreamArn"`
	Tags                         []UserAccessLoggingSettingsTag `pulumi:"tags"`
	UserAccessLoggingSettingsArn *string                        `pulumi:"userAccessLoggingSettingsArn"`
}

func LookupUserAccessLoggingSettingsOutput(ctx *pulumi.Context, args LookupUserAccessLoggingSettingsOutputArgs, opts ...pulumi.InvokeOption) LookupUserAccessLoggingSettingsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserAccessLoggingSettingsResult, error) {
			args := v.(LookupUserAccessLoggingSettingsArgs)
			r, err := LookupUserAccessLoggingSettings(ctx, &args, opts...)
			var s LookupUserAccessLoggingSettingsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserAccessLoggingSettingsResultOutput)
}

type LookupUserAccessLoggingSettingsOutputArgs struct {
	UserAccessLoggingSettingsArn pulumi.StringInput `pulumi:"userAccessLoggingSettingsArn"`
}

func (LookupUserAccessLoggingSettingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserAccessLoggingSettingsArgs)(nil)).Elem()
}

type LookupUserAccessLoggingSettingsResultOutput struct{ *pulumi.OutputState }

func (LookupUserAccessLoggingSettingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserAccessLoggingSettingsResult)(nil)).Elem()
}

func (o LookupUserAccessLoggingSettingsResultOutput) ToLookupUserAccessLoggingSettingsResultOutput() LookupUserAccessLoggingSettingsResultOutput {
	return o
}

func (o LookupUserAccessLoggingSettingsResultOutput) ToLookupUserAccessLoggingSettingsResultOutputWithContext(ctx context.Context) LookupUserAccessLoggingSettingsResultOutput {
	return o
}

func (o LookupUserAccessLoggingSettingsResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupUserAccessLoggingSettingsResult] {
	return pulumix.Output[LookupUserAccessLoggingSettingsResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupUserAccessLoggingSettingsResultOutput) AssociatedPortalArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserAccessLoggingSettingsResult) []string { return v.AssociatedPortalArns }).(pulumi.StringArrayOutput)
}

// Kinesis stream ARN to which log events are published.
func (o LookupUserAccessLoggingSettingsResultOutput) KinesisStreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserAccessLoggingSettingsResult) *string { return v.KinesisStreamArn }).(pulumi.StringPtrOutput)
}

func (o LookupUserAccessLoggingSettingsResultOutput) Tags() UserAccessLoggingSettingsTagArrayOutput {
	return o.ApplyT(func(v LookupUserAccessLoggingSettingsResult) []UserAccessLoggingSettingsTag { return v.Tags }).(UserAccessLoggingSettingsTagArrayOutput)
}

func (o LookupUserAccessLoggingSettingsResultOutput) UserAccessLoggingSettingsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserAccessLoggingSettingsResult) *string { return v.UserAccessLoggingSettingsArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserAccessLoggingSettingsResultOutput{})
}
