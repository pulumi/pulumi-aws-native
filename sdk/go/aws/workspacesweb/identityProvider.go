// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesweb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::WorkSpacesWeb::IdentityProvider Resource Type
type IdentityProvider struct {
	pulumi.CustomResourceState

	// The ARN of the identity provider.
	IdentityProviderArn pulumi.StringOutput `pulumi:"identityProviderArn"`
	// The identity provider details. The following list describes the provider detail keys for each identity provider type.
	//
	// - For Google and Login with Amazon:
	//
	// - `client_id`
	// - `client_secret`
	// - `authorize_scopes`
	// - For Facebook:
	//
	// - `client_id`
	// - `client_secret`
	// - `authorize_scopes`
	// - `api_version`
	// - For Sign in with Apple:
	//
	// - `client_id`
	// - `team_id`
	// - `key_id`
	// - `private_key`
	// - `authorize_scopes`
	// - For OIDC providers:
	//
	// - `client_id`
	// - `client_secret`
	// - `attributes_request_method`
	// - `oidc_issuer`
	// - `authorize_scopes`
	// - `authorize_url` *if not available from discovery URL specified by oidc_issuer key*
	// - `token_url` *if not available from discovery URL specified by oidc_issuer key*
	// - `attributes_url` *if not available from discovery URL specified by oidc_issuer key*
	// - `jwks_uri` *if not available from discovery URL specified by oidc_issuer key*
	// - For SAML providers:
	//
	// - `MetadataFile` OR `MetadataURL`
	// - `IDPSignout` (boolean) *optional*
	// - `IDPInit` (boolean) *optional*
	// - `RequestSigningAlgorithm` (string) *optional* - Only accepts `rsa-sha256`
	// - `EncryptedResponses` (boolean) *optional*
	IdentityProviderDetails pulumi.StringMapOutput `pulumi:"identityProviderDetails"`
	// The identity provider name.
	IdentityProviderName pulumi.StringOutput `pulumi:"identityProviderName"`
	// The identity provider type.
	IdentityProviderType IdentityProviderTypeOutput `pulumi:"identityProviderType"`
	// The ARN of the identity provider.
	PortalArn pulumi.StringPtrOutput `pulumi:"portalArn"`
	Tags      aws.TagArrayOutput     `pulumi:"tags"`
}

// NewIdentityProvider registers a new resource with the given unique name, arguments, and options.
func NewIdentityProvider(ctx *pulumi.Context,
	name string, args *IdentityProviderArgs, opts ...pulumi.ResourceOption) (*IdentityProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdentityProviderDetails == nil {
		return nil, errors.New("invalid value for required argument 'IdentityProviderDetails'")
	}
	if args.IdentityProviderType == nil {
		return nil, errors.New("invalid value for required argument 'IdentityProviderType'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"portalArn",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityProvider
	err := ctx.RegisterResource("aws-native:workspacesweb:IdentityProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityProvider gets an existing IdentityProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityProviderState, opts ...pulumi.ResourceOption) (*IdentityProvider, error) {
	var resource IdentityProvider
	err := ctx.ReadResource("aws-native:workspacesweb:IdentityProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityProvider resources.
type identityProviderState struct {
}

type IdentityProviderState struct {
}

func (IdentityProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityProviderState)(nil)).Elem()
}

type identityProviderArgs struct {
	// The identity provider details. The following list describes the provider detail keys for each identity provider type.
	//
	// - For Google and Login with Amazon:
	//
	// - `client_id`
	// - `client_secret`
	// - `authorize_scopes`
	// - For Facebook:
	//
	// - `client_id`
	// - `client_secret`
	// - `authorize_scopes`
	// - `api_version`
	// - For Sign in with Apple:
	//
	// - `client_id`
	// - `team_id`
	// - `key_id`
	// - `private_key`
	// - `authorize_scopes`
	// - For OIDC providers:
	//
	// - `client_id`
	// - `client_secret`
	// - `attributes_request_method`
	// - `oidc_issuer`
	// - `authorize_scopes`
	// - `authorize_url` *if not available from discovery URL specified by oidc_issuer key*
	// - `token_url` *if not available from discovery URL specified by oidc_issuer key*
	// - `attributes_url` *if not available from discovery URL specified by oidc_issuer key*
	// - `jwks_uri` *if not available from discovery URL specified by oidc_issuer key*
	// - For SAML providers:
	//
	// - `MetadataFile` OR `MetadataURL`
	// - `IDPSignout` (boolean) *optional*
	// - `IDPInit` (boolean) *optional*
	// - `RequestSigningAlgorithm` (string) *optional* - Only accepts `rsa-sha256`
	// - `EncryptedResponses` (boolean) *optional*
	IdentityProviderDetails map[string]string `pulumi:"identityProviderDetails"`
	// The identity provider name.
	IdentityProviderName *string `pulumi:"identityProviderName"`
	// The identity provider type.
	IdentityProviderType IdentityProviderType `pulumi:"identityProviderType"`
	// The ARN of the identity provider.
	PortalArn *string   `pulumi:"portalArn"`
	Tags      []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a IdentityProvider resource.
type IdentityProviderArgs struct {
	// The identity provider details. The following list describes the provider detail keys for each identity provider type.
	//
	// - For Google and Login with Amazon:
	//
	// - `client_id`
	// - `client_secret`
	// - `authorize_scopes`
	// - For Facebook:
	//
	// - `client_id`
	// - `client_secret`
	// - `authorize_scopes`
	// - `api_version`
	// - For Sign in with Apple:
	//
	// - `client_id`
	// - `team_id`
	// - `key_id`
	// - `private_key`
	// - `authorize_scopes`
	// - For OIDC providers:
	//
	// - `client_id`
	// - `client_secret`
	// - `attributes_request_method`
	// - `oidc_issuer`
	// - `authorize_scopes`
	// - `authorize_url` *if not available from discovery URL specified by oidc_issuer key*
	// - `token_url` *if not available from discovery URL specified by oidc_issuer key*
	// - `attributes_url` *if not available from discovery URL specified by oidc_issuer key*
	// - `jwks_uri` *if not available from discovery URL specified by oidc_issuer key*
	// - For SAML providers:
	//
	// - `MetadataFile` OR `MetadataURL`
	// - `IDPSignout` (boolean) *optional*
	// - `IDPInit` (boolean) *optional*
	// - `RequestSigningAlgorithm` (string) *optional* - Only accepts `rsa-sha256`
	// - `EncryptedResponses` (boolean) *optional*
	IdentityProviderDetails pulumi.StringMapInput
	// The identity provider name.
	IdentityProviderName pulumi.StringPtrInput
	// The identity provider type.
	IdentityProviderType IdentityProviderTypeInput
	// The ARN of the identity provider.
	PortalArn pulumi.StringPtrInput
	Tags      aws.TagArrayInput
}

func (IdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityProviderArgs)(nil)).Elem()
}

type IdentityProviderInput interface {
	pulumi.Input

	ToIdentityProviderOutput() IdentityProviderOutput
	ToIdentityProviderOutputWithContext(ctx context.Context) IdentityProviderOutput
}

func (*IdentityProvider) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProvider)(nil)).Elem()
}

func (i *IdentityProvider) ToIdentityProviderOutput() IdentityProviderOutput {
	return i.ToIdentityProviderOutputWithContext(context.Background())
}

func (i *IdentityProvider) ToIdentityProviderOutputWithContext(ctx context.Context) IdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityProviderOutput)
}

type IdentityProviderOutput struct{ *pulumi.OutputState }

func (IdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityProvider)(nil)).Elem()
}

func (o IdentityProviderOutput) ToIdentityProviderOutput() IdentityProviderOutput {
	return o
}

func (o IdentityProviderOutput) ToIdentityProviderOutputWithContext(ctx context.Context) IdentityProviderOutput {
	return o
}

// The ARN of the identity provider.
func (o IdentityProviderOutput) IdentityProviderArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityProvider) pulumi.StringOutput { return v.IdentityProviderArn }).(pulumi.StringOutput)
}

// The identity provider details. The following list describes the provider detail keys for each identity provider type.
//
// - For Google and Login with Amazon:
//
// - `client_id`
// - `client_secret`
// - `authorize_scopes`
// - For Facebook:
//
// - `client_id`
// - `client_secret`
// - `authorize_scopes`
// - `api_version`
// - For Sign in with Apple:
//
// - `client_id`
// - `team_id`
// - `key_id`
// - `private_key`
// - `authorize_scopes`
// - For OIDC providers:
//
// - `client_id`
// - `client_secret`
// - `attributes_request_method`
// - `oidc_issuer`
// - `authorize_scopes`
// - `authorize_url` *if not available from discovery URL specified by oidc_issuer key*
// - `token_url` *if not available from discovery URL specified by oidc_issuer key*
// - `attributes_url` *if not available from discovery URL specified by oidc_issuer key*
// - `jwks_uri` *if not available from discovery URL specified by oidc_issuer key*
// - For SAML providers:
//
// - `MetadataFile` OR `MetadataURL`
// - `IDPSignout` (boolean) *optional*
// - `IDPInit` (boolean) *optional*
// - `RequestSigningAlgorithm` (string) *optional* - Only accepts `rsa-sha256`
// - `EncryptedResponses` (boolean) *optional*
func (o IdentityProviderOutput) IdentityProviderDetails() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IdentityProvider) pulumi.StringMapOutput { return v.IdentityProviderDetails }).(pulumi.StringMapOutput)
}

// The identity provider name.
func (o IdentityProviderOutput) IdentityProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityProvider) pulumi.StringOutput { return v.IdentityProviderName }).(pulumi.StringOutput)
}

// The identity provider type.
func (o IdentityProviderOutput) IdentityProviderType() IdentityProviderTypeOutput {
	return o.ApplyT(func(v *IdentityProvider) IdentityProviderTypeOutput { return v.IdentityProviderType }).(IdentityProviderTypeOutput)
}

// The ARN of the identity provider.
func (o IdentityProviderOutput) PortalArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IdentityProvider) pulumi.StringPtrOutput { return v.PortalArn }).(pulumi.StringPtrOutput)
}

func (o IdentityProviderOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *IdentityProvider) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityProviderInput)(nil)).Elem(), &IdentityProvider{})
	pulumi.RegisterOutputType(IdentityProviderOutput{})
}
