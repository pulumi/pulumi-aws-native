// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesweb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::WorkSpacesWeb::UserSettings Resource Type
type UserSettings struct {
	pulumi.CustomResourceState

	// The additional encryption context of the user settings.
	AdditionalEncryptionContext pulumi.StringMapOutput `pulumi:"additionalEncryptionContext"`
	// A list of web portal ARNs that this user settings resource is associated with.
	AssociatedPortalArns pulumi.StringArrayOutput `pulumi:"associatedPortalArns"`
	// The configuration that specifies which cookies should be synchronized from the end user's local browser to the remote browser.
	CookieSynchronizationConfiguration UserSettingsCookieSynchronizationConfigurationPtrOutput `pulumi:"cookieSynchronizationConfiguration"`
	// Specifies whether the user can copy text from the streaming session to the local device.
	CopyAllowed UserSettingsEnabledTypeOutput `pulumi:"copyAllowed"`
	// The customer managed key used to encrypt sensitive information in the user settings.
	CustomerManagedKey pulumi.StringPtrOutput `pulumi:"customerManagedKey"`
	// Specifies whether the user can use deep links that open automatically when connecting to a session.
	DeepLinkAllowed UserSettingsEnabledTypePtrOutput `pulumi:"deepLinkAllowed"`
	// The amount of time that a streaming session remains active after users disconnect.
	DisconnectTimeoutInMinutes pulumi.Float64PtrOutput `pulumi:"disconnectTimeoutInMinutes"`
	// Specifies whether the user can download files from the streaming session to the local device.
	DownloadAllowed UserSettingsEnabledTypeOutput `pulumi:"downloadAllowed"`
	// The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
	IdleDisconnectTimeoutInMinutes pulumi.Float64PtrOutput `pulumi:"idleDisconnectTimeoutInMinutes"`
	// Specifies whether the user can paste text from the local device to the streaming session.
	PasteAllowed UserSettingsEnabledTypeOutput `pulumi:"pasteAllowed"`
	// Specifies whether the user can print to the local device.
	PrintAllowed UserSettingsEnabledTypeOutput `pulumi:"printAllowed"`
	// The tags to add to the user settings resource. A tag is a key-value pair.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// Specifies whether the user can upload files from the local device to the streaming session.
	UploadAllowed UserSettingsEnabledTypeOutput `pulumi:"uploadAllowed"`
	// The ARN of the user settings.
	UserSettingsArn pulumi.StringOutput `pulumi:"userSettingsArn"`
}

// NewUserSettings registers a new resource with the given unique name, arguments, and options.
func NewUserSettings(ctx *pulumi.Context,
	name string, args *UserSettingsArgs, opts ...pulumi.ResourceOption) (*UserSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CopyAllowed == nil {
		return nil, errors.New("invalid value for required argument 'CopyAllowed'")
	}
	if args.DownloadAllowed == nil {
		return nil, errors.New("invalid value for required argument 'DownloadAllowed'")
	}
	if args.PasteAllowed == nil {
		return nil, errors.New("invalid value for required argument 'PasteAllowed'")
	}
	if args.PrintAllowed == nil {
		return nil, errors.New("invalid value for required argument 'PrintAllowed'")
	}
	if args.UploadAllowed == nil {
		return nil, errors.New("invalid value for required argument 'UploadAllowed'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserSettings
	err := ctx.RegisterResource("aws-native:workspacesweb:UserSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserSettings gets an existing UserSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserSettingsState, opts ...pulumi.ResourceOption) (*UserSettings, error) {
	var resource UserSettings
	err := ctx.ReadResource("aws-native:workspacesweb:UserSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserSettings resources.
type userSettingsState struct {
}

type UserSettingsState struct {
}

func (UserSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*userSettingsState)(nil)).Elem()
}

type userSettingsArgs struct {
	// The additional encryption context of the user settings.
	AdditionalEncryptionContext map[string]string `pulumi:"additionalEncryptionContext"`
	// The configuration that specifies which cookies should be synchronized from the end user's local browser to the remote browser.
	CookieSynchronizationConfiguration *UserSettingsCookieSynchronizationConfiguration `pulumi:"cookieSynchronizationConfiguration"`
	// Specifies whether the user can copy text from the streaming session to the local device.
	CopyAllowed UserSettingsEnabledType `pulumi:"copyAllowed"`
	// The customer managed key used to encrypt sensitive information in the user settings.
	CustomerManagedKey *string `pulumi:"customerManagedKey"`
	// Specifies whether the user can use deep links that open automatically when connecting to a session.
	DeepLinkAllowed *UserSettingsEnabledType `pulumi:"deepLinkAllowed"`
	// The amount of time that a streaming session remains active after users disconnect.
	DisconnectTimeoutInMinutes *float64 `pulumi:"disconnectTimeoutInMinutes"`
	// Specifies whether the user can download files from the streaming session to the local device.
	DownloadAllowed UserSettingsEnabledType `pulumi:"downloadAllowed"`
	// The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
	IdleDisconnectTimeoutInMinutes *float64 `pulumi:"idleDisconnectTimeoutInMinutes"`
	// Specifies whether the user can paste text from the local device to the streaming session.
	PasteAllowed UserSettingsEnabledType `pulumi:"pasteAllowed"`
	// Specifies whether the user can print to the local device.
	PrintAllowed UserSettingsEnabledType `pulumi:"printAllowed"`
	// The tags to add to the user settings resource. A tag is a key-value pair.
	Tags []aws.Tag `pulumi:"tags"`
	// Specifies whether the user can upload files from the local device to the streaming session.
	UploadAllowed UserSettingsEnabledType `pulumi:"uploadAllowed"`
}

// The set of arguments for constructing a UserSettings resource.
type UserSettingsArgs struct {
	// The additional encryption context of the user settings.
	AdditionalEncryptionContext pulumi.StringMapInput
	// The configuration that specifies which cookies should be synchronized from the end user's local browser to the remote browser.
	CookieSynchronizationConfiguration UserSettingsCookieSynchronizationConfigurationPtrInput
	// Specifies whether the user can copy text from the streaming session to the local device.
	CopyAllowed UserSettingsEnabledTypeInput
	// The customer managed key used to encrypt sensitive information in the user settings.
	CustomerManagedKey pulumi.StringPtrInput
	// Specifies whether the user can use deep links that open automatically when connecting to a session.
	DeepLinkAllowed UserSettingsEnabledTypePtrInput
	// The amount of time that a streaming session remains active after users disconnect.
	DisconnectTimeoutInMinutes pulumi.Float64PtrInput
	// Specifies whether the user can download files from the streaming session to the local device.
	DownloadAllowed UserSettingsEnabledTypeInput
	// The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
	IdleDisconnectTimeoutInMinutes pulumi.Float64PtrInput
	// Specifies whether the user can paste text from the local device to the streaming session.
	PasteAllowed UserSettingsEnabledTypeInput
	// Specifies whether the user can print to the local device.
	PrintAllowed UserSettingsEnabledTypeInput
	// The tags to add to the user settings resource. A tag is a key-value pair.
	Tags aws.TagArrayInput
	// Specifies whether the user can upload files from the local device to the streaming session.
	UploadAllowed UserSettingsEnabledTypeInput
}

func (UserSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userSettingsArgs)(nil)).Elem()
}

type UserSettingsInput interface {
	pulumi.Input

	ToUserSettingsOutput() UserSettingsOutput
	ToUserSettingsOutputWithContext(ctx context.Context) UserSettingsOutput
}

func (*UserSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**UserSettings)(nil)).Elem()
}

func (i *UserSettings) ToUserSettingsOutput() UserSettingsOutput {
	return i.ToUserSettingsOutputWithContext(context.Background())
}

func (i *UserSettings) ToUserSettingsOutputWithContext(ctx context.Context) UserSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSettingsOutput)
}

type UserSettingsOutput struct{ *pulumi.OutputState }

func (UserSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserSettings)(nil)).Elem()
}

func (o UserSettingsOutput) ToUserSettingsOutput() UserSettingsOutput {
	return o
}

func (o UserSettingsOutput) ToUserSettingsOutputWithContext(ctx context.Context) UserSettingsOutput {
	return o
}

// The additional encryption context of the user settings.
func (o UserSettingsOutput) AdditionalEncryptionContext() pulumi.StringMapOutput {
	return o.ApplyT(func(v *UserSettings) pulumi.StringMapOutput { return v.AdditionalEncryptionContext }).(pulumi.StringMapOutput)
}

// A list of web portal ARNs that this user settings resource is associated with.
func (o UserSettingsOutput) AssociatedPortalArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserSettings) pulumi.StringArrayOutput { return v.AssociatedPortalArns }).(pulumi.StringArrayOutput)
}

// The configuration that specifies which cookies should be synchronized from the end user's local browser to the remote browser.
func (o UserSettingsOutput) CookieSynchronizationConfiguration() UserSettingsCookieSynchronizationConfigurationPtrOutput {
	return o.ApplyT(func(v *UserSettings) UserSettingsCookieSynchronizationConfigurationPtrOutput {
		return v.CookieSynchronizationConfiguration
	}).(UserSettingsCookieSynchronizationConfigurationPtrOutput)
}

// Specifies whether the user can copy text from the streaming session to the local device.
func (o UserSettingsOutput) CopyAllowed() UserSettingsEnabledTypeOutput {
	return o.ApplyT(func(v *UserSettings) UserSettingsEnabledTypeOutput { return v.CopyAllowed }).(UserSettingsEnabledTypeOutput)
}

// The customer managed key used to encrypt sensitive information in the user settings.
func (o UserSettingsOutput) CustomerManagedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserSettings) pulumi.StringPtrOutput { return v.CustomerManagedKey }).(pulumi.StringPtrOutput)
}

// Specifies whether the user can use deep links that open automatically when connecting to a session.
func (o UserSettingsOutput) DeepLinkAllowed() UserSettingsEnabledTypePtrOutput {
	return o.ApplyT(func(v *UserSettings) UserSettingsEnabledTypePtrOutput { return v.DeepLinkAllowed }).(UserSettingsEnabledTypePtrOutput)
}

// The amount of time that a streaming session remains active after users disconnect.
func (o UserSettingsOutput) DisconnectTimeoutInMinutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *UserSettings) pulumi.Float64PtrOutput { return v.DisconnectTimeoutInMinutes }).(pulumi.Float64PtrOutput)
}

// Specifies whether the user can download files from the streaming session to the local device.
func (o UserSettingsOutput) DownloadAllowed() UserSettingsEnabledTypeOutput {
	return o.ApplyT(func(v *UserSettings) UserSettingsEnabledTypeOutput { return v.DownloadAllowed }).(UserSettingsEnabledTypeOutput)
}

// The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
func (o UserSettingsOutput) IdleDisconnectTimeoutInMinutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *UserSettings) pulumi.Float64PtrOutput { return v.IdleDisconnectTimeoutInMinutes }).(pulumi.Float64PtrOutput)
}

// Specifies whether the user can paste text from the local device to the streaming session.
func (o UserSettingsOutput) PasteAllowed() UserSettingsEnabledTypeOutput {
	return o.ApplyT(func(v *UserSettings) UserSettingsEnabledTypeOutput { return v.PasteAllowed }).(UserSettingsEnabledTypeOutput)
}

// Specifies whether the user can print to the local device.
func (o UserSettingsOutput) PrintAllowed() UserSettingsEnabledTypeOutput {
	return o.ApplyT(func(v *UserSettings) UserSettingsEnabledTypeOutput { return v.PrintAllowed }).(UserSettingsEnabledTypeOutput)
}

// The tags to add to the user settings resource. A tag is a key-value pair.
func (o UserSettingsOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *UserSettings) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// Specifies whether the user can upload files from the local device to the streaming session.
func (o UserSettingsOutput) UploadAllowed() UserSettingsEnabledTypeOutput {
	return o.ApplyT(func(v *UserSettings) UserSettingsEnabledTypeOutput { return v.UploadAllowed }).(UserSettingsEnabledTypeOutput)
}

// The ARN of the user settings.
func (o UserSettingsOutput) UserSettingsArn() pulumi.StringOutput {
	return o.ApplyT(func(v *UserSettings) pulumi.StringOutput { return v.UserSettingsArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserSettingsInput)(nil)).Elem(), &UserSettings{})
	pulumi.RegisterOutputType(UserSettingsOutput{})
}
