// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesweb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Definition of AWS::WorkSpacesWeb::IdentityProvider Resource Type
func LookupIdentityProvider(ctx *pulumi.Context, args *LookupIdentityProviderArgs, opts ...pulumi.InvokeOption) (*LookupIdentityProviderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIdentityProviderResult
	err := ctx.Invoke("aws-native:workspacesweb:getIdentityProvider", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIdentityProviderArgs struct {
	IdentityProviderArn string `pulumi:"identityProviderArn"`
}

type LookupIdentityProviderResult struct {
	IdentityProviderArn     *string                  `pulumi:"identityProviderArn"`
	IdentityProviderDetails *IdentityProviderDetails `pulumi:"identityProviderDetails"`
	IdentityProviderName    *string                  `pulumi:"identityProviderName"`
	IdentityProviderType    *IdentityProviderType    `pulumi:"identityProviderType"`
}

func LookupIdentityProviderOutput(ctx *pulumi.Context, args LookupIdentityProviderOutputArgs, opts ...pulumi.InvokeOption) LookupIdentityProviderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIdentityProviderResult, error) {
			args := v.(LookupIdentityProviderArgs)
			r, err := LookupIdentityProvider(ctx, &args, opts...)
			var s LookupIdentityProviderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIdentityProviderResultOutput)
}

type LookupIdentityProviderOutputArgs struct {
	IdentityProviderArn pulumi.StringInput `pulumi:"identityProviderArn"`
}

func (LookupIdentityProviderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdentityProviderArgs)(nil)).Elem()
}

type LookupIdentityProviderResultOutput struct{ *pulumi.OutputState }

func (LookupIdentityProviderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIdentityProviderResult)(nil)).Elem()
}

func (o LookupIdentityProviderResultOutput) ToLookupIdentityProviderResultOutput() LookupIdentityProviderResultOutput {
	return o
}

func (o LookupIdentityProviderResultOutput) ToLookupIdentityProviderResultOutputWithContext(ctx context.Context) LookupIdentityProviderResultOutput {
	return o
}

func (o LookupIdentityProviderResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupIdentityProviderResult] {
	return pulumix.Output[LookupIdentityProviderResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupIdentityProviderResultOutput) IdentityProviderArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentityProviderResult) *string { return v.IdentityProviderArn }).(pulumi.StringPtrOutput)
}

func (o LookupIdentityProviderResultOutput) IdentityProviderDetails() IdentityProviderDetailsPtrOutput {
	return o.ApplyT(func(v LookupIdentityProviderResult) *IdentityProviderDetails { return v.IdentityProviderDetails }).(IdentityProviderDetailsPtrOutput)
}

func (o LookupIdentityProviderResultOutput) IdentityProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIdentityProviderResult) *string { return v.IdentityProviderName }).(pulumi.StringPtrOutput)
}

func (o LookupIdentityProviderResultOutput) IdentityProviderType() IdentityProviderTypePtrOutput {
	return o.ApplyT(func(v LookupIdentityProviderResult) *IdentityProviderType { return v.IdentityProviderType }).(IdentityProviderTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIdentityProviderResultOutput{})
}
