// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesweb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::WorkSpacesWeb::BrowserSettings Resource Type
type BrowserSettings struct {
	pulumi.CustomResourceState

	// Additional encryption context of the browser settings.
	AdditionalEncryptionContext pulumi.StringMapOutput `pulumi:"additionalEncryptionContext"`
	// A list of web portal ARNs that the browser settings resource is associated with.
	AssociatedPortalArns pulumi.StringArrayOutput `pulumi:"associatedPortalArns"`
	// A JSON string containing Chrome Enterprise policies that will be applied to all streaming sessions.
	BrowserPolicy pulumi.StringPtrOutput `pulumi:"browserPolicy"`
	// The ARN of the browser settings.
	BrowserSettingsArn pulumi.StringOutput `pulumi:"browserSettingsArn"`
	// The custom managed key of the browser settings.
	//
	// *Pattern* : `^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$`
	CustomerManagedKey pulumi.StringPtrOutput `pulumi:"customerManagedKey"`
	// The tags to add to the browser settings resource. A tag is a key-value pair.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewBrowserSettings registers a new resource with the given unique name, arguments, and options.
func NewBrowserSettings(ctx *pulumi.Context,
	name string, args *BrowserSettingsArgs, opts ...pulumi.ResourceOption) (*BrowserSettings, error) {
	if args == nil {
		args = &BrowserSettingsArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"additionalEncryptionContext.*",
		"customerManagedKey",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BrowserSettings
	err := ctx.RegisterResource("aws-native:workspacesweb:BrowserSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBrowserSettings gets an existing BrowserSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBrowserSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BrowserSettingsState, opts ...pulumi.ResourceOption) (*BrowserSettings, error) {
	var resource BrowserSettings
	err := ctx.ReadResource("aws-native:workspacesweb:BrowserSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BrowserSettings resources.
type browserSettingsState struct {
}

type BrowserSettingsState struct {
}

func (BrowserSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*browserSettingsState)(nil)).Elem()
}

type browserSettingsArgs struct {
	// Additional encryption context of the browser settings.
	AdditionalEncryptionContext map[string]string `pulumi:"additionalEncryptionContext"`
	// A JSON string containing Chrome Enterprise policies that will be applied to all streaming sessions.
	BrowserPolicy *string `pulumi:"browserPolicy"`
	// The custom managed key of the browser settings.
	//
	// *Pattern* : `^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$`
	CustomerManagedKey *string `pulumi:"customerManagedKey"`
	// The tags to add to the browser settings resource. A tag is a key-value pair.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a BrowserSettings resource.
type BrowserSettingsArgs struct {
	// Additional encryption context of the browser settings.
	AdditionalEncryptionContext pulumi.StringMapInput
	// A JSON string containing Chrome Enterprise policies that will be applied to all streaming sessions.
	BrowserPolicy pulumi.StringPtrInput
	// The custom managed key of the browser settings.
	//
	// *Pattern* : `^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$`
	CustomerManagedKey pulumi.StringPtrInput
	// The tags to add to the browser settings resource. A tag is a key-value pair.
	Tags aws.TagArrayInput
}

func (BrowserSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*browserSettingsArgs)(nil)).Elem()
}

type BrowserSettingsInput interface {
	pulumi.Input

	ToBrowserSettingsOutput() BrowserSettingsOutput
	ToBrowserSettingsOutputWithContext(ctx context.Context) BrowserSettingsOutput
}

func (*BrowserSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**BrowserSettings)(nil)).Elem()
}

func (i *BrowserSettings) ToBrowserSettingsOutput() BrowserSettingsOutput {
	return i.ToBrowserSettingsOutputWithContext(context.Background())
}

func (i *BrowserSettings) ToBrowserSettingsOutputWithContext(ctx context.Context) BrowserSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrowserSettingsOutput)
}

type BrowserSettingsOutput struct{ *pulumi.OutputState }

func (BrowserSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrowserSettings)(nil)).Elem()
}

func (o BrowserSettingsOutput) ToBrowserSettingsOutput() BrowserSettingsOutput {
	return o
}

func (o BrowserSettingsOutput) ToBrowserSettingsOutputWithContext(ctx context.Context) BrowserSettingsOutput {
	return o
}

// Additional encryption context of the browser settings.
func (o BrowserSettingsOutput) AdditionalEncryptionContext() pulumi.StringMapOutput {
	return o.ApplyT(func(v *BrowserSettings) pulumi.StringMapOutput { return v.AdditionalEncryptionContext }).(pulumi.StringMapOutput)
}

// A list of web portal ARNs that the browser settings resource is associated with.
func (o BrowserSettingsOutput) AssociatedPortalArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BrowserSettings) pulumi.StringArrayOutput { return v.AssociatedPortalArns }).(pulumi.StringArrayOutput)
}

// A JSON string containing Chrome Enterprise policies that will be applied to all streaming sessions.
func (o BrowserSettingsOutput) BrowserPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrowserSettings) pulumi.StringPtrOutput { return v.BrowserPolicy }).(pulumi.StringPtrOutput)
}

// The ARN of the browser settings.
func (o BrowserSettingsOutput) BrowserSettingsArn() pulumi.StringOutput {
	return o.ApplyT(func(v *BrowserSettings) pulumi.StringOutput { return v.BrowserSettingsArn }).(pulumi.StringOutput)
}

// The custom managed key of the browser settings.
//
// *Pattern* : `^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$`
func (o BrowserSettingsOutput) CustomerManagedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrowserSettings) pulumi.StringPtrOutput { return v.CustomerManagedKey }).(pulumi.StringPtrOutput)
}

// The tags to add to the browser settings resource. A tag is a key-value pair.
func (o BrowserSettingsOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *BrowserSettings) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BrowserSettingsInput)(nil)).Elem(), &BrowserSettings{})
	pulumi.RegisterOutputType(BrowserSettingsOutput{})
}
