// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesweb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::WorkSpacesWeb::UserAccessLoggingSettings Resource Type
type UserAccessLoggingSettings struct {
	pulumi.CustomResourceState

	AssociatedPortalArns pulumi.StringArrayOutput `pulumi:"associatedPortalArns"`
	// Kinesis stream ARN to which log events are published.
	KinesisStreamArn             pulumi.StringOutput `pulumi:"kinesisStreamArn"`
	Tags                         aws.TagArrayOutput  `pulumi:"tags"`
	UserAccessLoggingSettingsArn pulumi.StringOutput `pulumi:"userAccessLoggingSettingsArn"`
}

// NewUserAccessLoggingSettings registers a new resource with the given unique name, arguments, and options.
func NewUserAccessLoggingSettings(ctx *pulumi.Context,
	name string, args *UserAccessLoggingSettingsArgs, opts ...pulumi.ResourceOption) (*UserAccessLoggingSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KinesisStreamArn == nil {
		return nil, errors.New("invalid value for required argument 'KinesisStreamArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UserAccessLoggingSettings
	err := ctx.RegisterResource("aws-native:workspacesweb:UserAccessLoggingSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserAccessLoggingSettings gets an existing UserAccessLoggingSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserAccessLoggingSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserAccessLoggingSettingsState, opts ...pulumi.ResourceOption) (*UserAccessLoggingSettings, error) {
	var resource UserAccessLoggingSettings
	err := ctx.ReadResource("aws-native:workspacesweb:UserAccessLoggingSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserAccessLoggingSettings resources.
type userAccessLoggingSettingsState struct {
}

type UserAccessLoggingSettingsState struct {
}

func (UserAccessLoggingSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*userAccessLoggingSettingsState)(nil)).Elem()
}

type userAccessLoggingSettingsArgs struct {
	// Kinesis stream ARN to which log events are published.
	KinesisStreamArn string    `pulumi:"kinesisStreamArn"`
	Tags             []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a UserAccessLoggingSettings resource.
type UserAccessLoggingSettingsArgs struct {
	// Kinesis stream ARN to which log events are published.
	KinesisStreamArn pulumi.StringInput
	Tags             aws.TagArrayInput
}

func (UserAccessLoggingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userAccessLoggingSettingsArgs)(nil)).Elem()
}

type UserAccessLoggingSettingsInput interface {
	pulumi.Input

	ToUserAccessLoggingSettingsOutput() UserAccessLoggingSettingsOutput
	ToUserAccessLoggingSettingsOutputWithContext(ctx context.Context) UserAccessLoggingSettingsOutput
}

func (*UserAccessLoggingSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccessLoggingSettings)(nil)).Elem()
}

func (i *UserAccessLoggingSettings) ToUserAccessLoggingSettingsOutput() UserAccessLoggingSettingsOutput {
	return i.ToUserAccessLoggingSettingsOutputWithContext(context.Background())
}

func (i *UserAccessLoggingSettings) ToUserAccessLoggingSettingsOutputWithContext(ctx context.Context) UserAccessLoggingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserAccessLoggingSettingsOutput)
}

type UserAccessLoggingSettingsOutput struct{ *pulumi.OutputState }

func (UserAccessLoggingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserAccessLoggingSettings)(nil)).Elem()
}

func (o UserAccessLoggingSettingsOutput) ToUserAccessLoggingSettingsOutput() UserAccessLoggingSettingsOutput {
	return o
}

func (o UserAccessLoggingSettingsOutput) ToUserAccessLoggingSettingsOutputWithContext(ctx context.Context) UserAccessLoggingSettingsOutput {
	return o
}

func (o UserAccessLoggingSettingsOutput) AssociatedPortalArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettings) pulumi.StringArrayOutput { return v.AssociatedPortalArns }).(pulumi.StringArrayOutput)
}

// Kinesis stream ARN to which log events are published.
func (o UserAccessLoggingSettingsOutput) KinesisStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettings) pulumi.StringOutput { return v.KinesisStreamArn }).(pulumi.StringOutput)
}

func (o UserAccessLoggingSettingsOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettings) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func (o UserAccessLoggingSettingsOutput) UserAccessLoggingSettingsArn() pulumi.StringOutput {
	return o.ApplyT(func(v *UserAccessLoggingSettings) pulumi.StringOutput { return v.UserAccessLoggingSettingsArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserAccessLoggingSettingsInput)(nil)).Elem(), &UserAccessLoggingSettings{})
	pulumi.RegisterOutputType(UserAccessLoggingSettingsOutput{})
}
