// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package workspacesweb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::WorkSpacesWeb::IpAccessSettings Resource Type
type IpAccessSettings struct {
	pulumi.CustomResourceState

	// Additional encryption context of the IP access settings.
	AdditionalEncryptionContext pulumi.StringMapOutput `pulumi:"additionalEncryptionContext"`
	// A list of web portal ARNs that this IP access settings resource is associated with.
	AssociatedPortalArns pulumi.StringArrayOutput `pulumi:"associatedPortalArns"`
	// The creation date timestamp of the IP access settings.
	CreationDate pulumi.StringOutput `pulumi:"creationDate"`
	// The custom managed key of the IP access settings.
	//
	// *Pattern* : `^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$`
	CustomerManagedKey pulumi.StringPtrOutput `pulumi:"customerManagedKey"`
	// The description of the IP access settings.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of the IP access settings.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The ARN of the IP access settings resource.
	IpAccessSettingsArn pulumi.StringOutput `pulumi:"ipAccessSettingsArn"`
	// The IP rules of the IP access settings.
	IpRules IpAccessSettingsIpRuleArrayOutput `pulumi:"ipRules"`
	// The tags to add to the browser settings resource. A tag is a key-value pair.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewIpAccessSettings registers a new resource with the given unique name, arguments, and options.
func NewIpAccessSettings(ctx *pulumi.Context,
	name string, args *IpAccessSettingsArgs, opts ...pulumi.ResourceOption) (*IpAccessSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpRules == nil {
		return nil, errors.New("invalid value for required argument 'IpRules'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"additionalEncryptionContext.*",
		"customerManagedKey",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IpAccessSettings
	err := ctx.RegisterResource("aws-native:workspacesweb:IpAccessSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpAccessSettings gets an existing IpAccessSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpAccessSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpAccessSettingsState, opts ...pulumi.ResourceOption) (*IpAccessSettings, error) {
	var resource IpAccessSettings
	err := ctx.ReadResource("aws-native:workspacesweb:IpAccessSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpAccessSettings resources.
type ipAccessSettingsState struct {
}

type IpAccessSettingsState struct {
}

func (IpAccessSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipAccessSettingsState)(nil)).Elem()
}

type ipAccessSettingsArgs struct {
	// Additional encryption context of the IP access settings.
	AdditionalEncryptionContext map[string]string `pulumi:"additionalEncryptionContext"`
	// The custom managed key of the IP access settings.
	//
	// *Pattern* : `^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$`
	CustomerManagedKey *string `pulumi:"customerManagedKey"`
	// The description of the IP access settings.
	Description *string `pulumi:"description"`
	// The display name of the IP access settings.
	DisplayName *string `pulumi:"displayName"`
	// The IP rules of the IP access settings.
	IpRules []IpAccessSettingsIpRule `pulumi:"ipRules"`
	// The tags to add to the browser settings resource. A tag is a key-value pair.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a IpAccessSettings resource.
type IpAccessSettingsArgs struct {
	// Additional encryption context of the IP access settings.
	AdditionalEncryptionContext pulumi.StringMapInput
	// The custom managed key of the IP access settings.
	//
	// *Pattern* : `^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$`
	CustomerManagedKey pulumi.StringPtrInput
	// The description of the IP access settings.
	Description pulumi.StringPtrInput
	// The display name of the IP access settings.
	DisplayName pulumi.StringPtrInput
	// The IP rules of the IP access settings.
	IpRules IpAccessSettingsIpRuleArrayInput
	// The tags to add to the browser settings resource. A tag is a key-value pair.
	Tags aws.TagArrayInput
}

func (IpAccessSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipAccessSettingsArgs)(nil)).Elem()
}

type IpAccessSettingsInput interface {
	pulumi.Input

	ToIpAccessSettingsOutput() IpAccessSettingsOutput
	ToIpAccessSettingsOutputWithContext(ctx context.Context) IpAccessSettingsOutput
}

func (*IpAccessSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**IpAccessSettings)(nil)).Elem()
}

func (i *IpAccessSettings) ToIpAccessSettingsOutput() IpAccessSettingsOutput {
	return i.ToIpAccessSettingsOutputWithContext(context.Background())
}

func (i *IpAccessSettings) ToIpAccessSettingsOutputWithContext(ctx context.Context) IpAccessSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAccessSettingsOutput)
}

type IpAccessSettingsOutput struct{ *pulumi.OutputState }

func (IpAccessSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpAccessSettings)(nil)).Elem()
}

func (o IpAccessSettingsOutput) ToIpAccessSettingsOutput() IpAccessSettingsOutput {
	return o
}

func (o IpAccessSettingsOutput) ToIpAccessSettingsOutputWithContext(ctx context.Context) IpAccessSettingsOutput {
	return o
}

// Additional encryption context of the IP access settings.
func (o IpAccessSettingsOutput) AdditionalEncryptionContext() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IpAccessSettings) pulumi.StringMapOutput { return v.AdditionalEncryptionContext }).(pulumi.StringMapOutput)
}

// A list of web portal ARNs that this IP access settings resource is associated with.
func (o IpAccessSettingsOutput) AssociatedPortalArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *IpAccessSettings) pulumi.StringArrayOutput { return v.AssociatedPortalArns }).(pulumi.StringArrayOutput)
}

// The creation date timestamp of the IP access settings.
func (o IpAccessSettingsOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v *IpAccessSettings) pulumi.StringOutput { return v.CreationDate }).(pulumi.StringOutput)
}

// The custom managed key of the IP access settings.
//
// *Pattern* : `^arn:[\w+=\/,.@-]+:kms:[a-zA-Z0-9\-]*:[a-zA-Z0-9]{1,12}:key\/[a-zA-Z0-9-]+$`
func (o IpAccessSettingsOutput) CustomerManagedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpAccessSettings) pulumi.StringPtrOutput { return v.CustomerManagedKey }).(pulumi.StringPtrOutput)
}

// The description of the IP access settings.
func (o IpAccessSettingsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpAccessSettings) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the IP access settings.
func (o IpAccessSettingsOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpAccessSettings) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The ARN of the IP access settings resource.
func (o IpAccessSettingsOutput) IpAccessSettingsArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IpAccessSettings) pulumi.StringOutput { return v.IpAccessSettingsArn }).(pulumi.StringOutput)
}

// The IP rules of the IP access settings.
func (o IpAccessSettingsOutput) IpRules() IpAccessSettingsIpRuleArrayOutput {
	return o.ApplyT(func(v *IpAccessSettings) IpAccessSettingsIpRuleArrayOutput { return v.IpRules }).(IpAccessSettingsIpRuleArrayOutput)
}

// The tags to add to the browser settings resource. A tag is a key-value pair.
func (o IpAccessSettingsOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *IpAccessSettings) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpAccessSettingsInput)(nil)).Elem(), &IpAccessSettings{})
	pulumi.RegisterOutputType(IpAccessSettingsOutput{})
}
