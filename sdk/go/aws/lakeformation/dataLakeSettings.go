// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package lakeformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::LakeFormation::DataLakeSettings
//
// Deprecated: DataLakeSettings is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type DataLakeSettings struct {
	pulumi.CustomResourceState

	Admins                DataLakeSettingsAdminsPtrOutput `pulumi:"admins"`
	TrustedResourceOwners pulumi.StringArrayOutput        `pulumi:"trustedResourceOwners"`
}

// NewDataLakeSettings registers a new resource with the given unique name, arguments, and options.
func NewDataLakeSettings(ctx *pulumi.Context,
	name string, args *DataLakeSettingsArgs, opts ...pulumi.ResourceOption) (*DataLakeSettings, error) {
	if args == nil {
		args = &DataLakeSettingsArgs{}
	}

	var resource DataLakeSettings
	err := ctx.RegisterResource("aws-native:lakeformation:DataLakeSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataLakeSettings gets an existing DataLakeSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataLakeSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataLakeSettingsState, opts ...pulumi.ResourceOption) (*DataLakeSettings, error) {
	var resource DataLakeSettings
	err := ctx.ReadResource("aws-native:lakeformation:DataLakeSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataLakeSettings resources.
type dataLakeSettingsState struct {
}

type DataLakeSettingsState struct {
}

func (DataLakeSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataLakeSettingsState)(nil)).Elem()
}

type dataLakeSettingsArgs struct {
	Admins                *DataLakeSettingsAdmins `pulumi:"admins"`
	TrustedResourceOwners []string                `pulumi:"trustedResourceOwners"`
}

// The set of arguments for constructing a DataLakeSettings resource.
type DataLakeSettingsArgs struct {
	Admins                DataLakeSettingsAdminsPtrInput
	TrustedResourceOwners pulumi.StringArrayInput
}

func (DataLakeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataLakeSettingsArgs)(nil)).Elem()
}

type DataLakeSettingsInput interface {
	pulumi.Input

	ToDataLakeSettingsOutput() DataLakeSettingsOutput
	ToDataLakeSettingsOutputWithContext(ctx context.Context) DataLakeSettingsOutput
}

func (*DataLakeSettings) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeSettings)(nil))
}

func (i *DataLakeSettings) ToDataLakeSettingsOutput() DataLakeSettingsOutput {
	return i.ToDataLakeSettingsOutputWithContext(context.Background())
}

func (i *DataLakeSettings) ToDataLakeSettingsOutputWithContext(ctx context.Context) DataLakeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeSettingsOutput)
}

type DataLakeSettingsOutput struct{ *pulumi.OutputState }

func (DataLakeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeSettings)(nil))
}

func (o DataLakeSettingsOutput) ToDataLakeSettingsOutput() DataLakeSettingsOutput {
	return o
}

func (o DataLakeSettingsOutput) ToDataLakeSettingsOutputWithContext(ctx context.Context) DataLakeSettingsOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeSettingsInput)(nil)).Elem(), &DataLakeSettings{})
	pulumi.RegisterOutputType(DataLakeSettingsOutput{})
}
