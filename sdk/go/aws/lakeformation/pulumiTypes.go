// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package lakeformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataLakeSettingsAdmins struct {
}

// DataLakeSettingsAdminsInput is an input type that accepts DataLakeSettingsAdminsArgs and DataLakeSettingsAdminsOutput values.
// You can construct a concrete instance of `DataLakeSettingsAdminsInput` via:
//
//          DataLakeSettingsAdminsArgs{...}
type DataLakeSettingsAdminsInput interface {
	pulumi.Input

	ToDataLakeSettingsAdminsOutput() DataLakeSettingsAdminsOutput
	ToDataLakeSettingsAdminsOutputWithContext(context.Context) DataLakeSettingsAdminsOutput
}

type DataLakeSettingsAdminsArgs struct {
}

func (DataLakeSettingsAdminsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeSettingsAdmins)(nil)).Elem()
}

func (i DataLakeSettingsAdminsArgs) ToDataLakeSettingsAdminsOutput() DataLakeSettingsAdminsOutput {
	return i.ToDataLakeSettingsAdminsOutputWithContext(context.Background())
}

func (i DataLakeSettingsAdminsArgs) ToDataLakeSettingsAdminsOutputWithContext(ctx context.Context) DataLakeSettingsAdminsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeSettingsAdminsOutput)
}

func (i DataLakeSettingsAdminsArgs) ToDataLakeSettingsAdminsPtrOutput() DataLakeSettingsAdminsPtrOutput {
	return i.ToDataLakeSettingsAdminsPtrOutputWithContext(context.Background())
}

func (i DataLakeSettingsAdminsArgs) ToDataLakeSettingsAdminsPtrOutputWithContext(ctx context.Context) DataLakeSettingsAdminsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeSettingsAdminsOutput).ToDataLakeSettingsAdminsPtrOutputWithContext(ctx)
}

// DataLakeSettingsAdminsPtrInput is an input type that accepts DataLakeSettingsAdminsArgs, DataLakeSettingsAdminsPtr and DataLakeSettingsAdminsPtrOutput values.
// You can construct a concrete instance of `DataLakeSettingsAdminsPtrInput` via:
//
//          DataLakeSettingsAdminsArgs{...}
//
//  or:
//
//          nil
type DataLakeSettingsAdminsPtrInput interface {
	pulumi.Input

	ToDataLakeSettingsAdminsPtrOutput() DataLakeSettingsAdminsPtrOutput
	ToDataLakeSettingsAdminsPtrOutputWithContext(context.Context) DataLakeSettingsAdminsPtrOutput
}

type dataLakeSettingsAdminsPtrType DataLakeSettingsAdminsArgs

func DataLakeSettingsAdminsPtr(v *DataLakeSettingsAdminsArgs) DataLakeSettingsAdminsPtrInput {
	return (*dataLakeSettingsAdminsPtrType)(v)
}

func (*dataLakeSettingsAdminsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeSettingsAdmins)(nil)).Elem()
}

func (i *dataLakeSettingsAdminsPtrType) ToDataLakeSettingsAdminsPtrOutput() DataLakeSettingsAdminsPtrOutput {
	return i.ToDataLakeSettingsAdminsPtrOutputWithContext(context.Background())
}

func (i *dataLakeSettingsAdminsPtrType) ToDataLakeSettingsAdminsPtrOutputWithContext(ctx context.Context) DataLakeSettingsAdminsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeSettingsAdminsPtrOutput)
}

type DataLakeSettingsAdminsOutput struct{ *pulumi.OutputState }

func (DataLakeSettingsAdminsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeSettingsAdmins)(nil)).Elem()
}

func (o DataLakeSettingsAdminsOutput) ToDataLakeSettingsAdminsOutput() DataLakeSettingsAdminsOutput {
	return o
}

func (o DataLakeSettingsAdminsOutput) ToDataLakeSettingsAdminsOutputWithContext(ctx context.Context) DataLakeSettingsAdminsOutput {
	return o
}

func (o DataLakeSettingsAdminsOutput) ToDataLakeSettingsAdminsPtrOutput() DataLakeSettingsAdminsPtrOutput {
	return o.ToDataLakeSettingsAdminsPtrOutputWithContext(context.Background())
}

func (o DataLakeSettingsAdminsOutput) ToDataLakeSettingsAdminsPtrOutputWithContext(ctx context.Context) DataLakeSettingsAdminsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeSettingsAdmins) *DataLakeSettingsAdmins {
		return &v
	}).(DataLakeSettingsAdminsPtrOutput)
}

type DataLakeSettingsAdminsPtrOutput struct{ *pulumi.OutputState }

func (DataLakeSettingsAdminsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeSettingsAdmins)(nil)).Elem()
}

func (o DataLakeSettingsAdminsPtrOutput) ToDataLakeSettingsAdminsPtrOutput() DataLakeSettingsAdminsPtrOutput {
	return o
}

func (o DataLakeSettingsAdminsPtrOutput) ToDataLakeSettingsAdminsPtrOutputWithContext(ctx context.Context) DataLakeSettingsAdminsPtrOutput {
	return o
}

func (o DataLakeSettingsAdminsPtrOutput) Elem() DataLakeSettingsAdminsOutput {
	return o.ApplyT(func(v *DataLakeSettingsAdmins) DataLakeSettingsAdmins {
		if v != nil {
			return *v
		}
		var ret DataLakeSettingsAdmins
		return ret
	}).(DataLakeSettingsAdminsOutput)
}

type PermissionsColumnWildcard struct {
	ExcludedColumnNames []string `pulumi:"excludedColumnNames"`
}

// PermissionsColumnWildcardInput is an input type that accepts PermissionsColumnWildcardArgs and PermissionsColumnWildcardOutput values.
// You can construct a concrete instance of `PermissionsColumnWildcardInput` via:
//
//          PermissionsColumnWildcardArgs{...}
type PermissionsColumnWildcardInput interface {
	pulumi.Input

	ToPermissionsColumnWildcardOutput() PermissionsColumnWildcardOutput
	ToPermissionsColumnWildcardOutputWithContext(context.Context) PermissionsColumnWildcardOutput
}

type PermissionsColumnWildcardArgs struct {
	ExcludedColumnNames pulumi.StringArrayInput `pulumi:"excludedColumnNames"`
}

func (PermissionsColumnWildcardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsColumnWildcard)(nil)).Elem()
}

func (i PermissionsColumnWildcardArgs) ToPermissionsColumnWildcardOutput() PermissionsColumnWildcardOutput {
	return i.ToPermissionsColumnWildcardOutputWithContext(context.Background())
}

func (i PermissionsColumnWildcardArgs) ToPermissionsColumnWildcardOutputWithContext(ctx context.Context) PermissionsColumnWildcardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsColumnWildcardOutput)
}

func (i PermissionsColumnWildcardArgs) ToPermissionsColumnWildcardPtrOutput() PermissionsColumnWildcardPtrOutput {
	return i.ToPermissionsColumnWildcardPtrOutputWithContext(context.Background())
}

func (i PermissionsColumnWildcardArgs) ToPermissionsColumnWildcardPtrOutputWithContext(ctx context.Context) PermissionsColumnWildcardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsColumnWildcardOutput).ToPermissionsColumnWildcardPtrOutputWithContext(ctx)
}

// PermissionsColumnWildcardPtrInput is an input type that accepts PermissionsColumnWildcardArgs, PermissionsColumnWildcardPtr and PermissionsColumnWildcardPtrOutput values.
// You can construct a concrete instance of `PermissionsColumnWildcardPtrInput` via:
//
//          PermissionsColumnWildcardArgs{...}
//
//  or:
//
//          nil
type PermissionsColumnWildcardPtrInput interface {
	pulumi.Input

	ToPermissionsColumnWildcardPtrOutput() PermissionsColumnWildcardPtrOutput
	ToPermissionsColumnWildcardPtrOutputWithContext(context.Context) PermissionsColumnWildcardPtrOutput
}

type permissionsColumnWildcardPtrType PermissionsColumnWildcardArgs

func PermissionsColumnWildcardPtr(v *PermissionsColumnWildcardArgs) PermissionsColumnWildcardPtrInput {
	return (*permissionsColumnWildcardPtrType)(v)
}

func (*permissionsColumnWildcardPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsColumnWildcard)(nil)).Elem()
}

func (i *permissionsColumnWildcardPtrType) ToPermissionsColumnWildcardPtrOutput() PermissionsColumnWildcardPtrOutput {
	return i.ToPermissionsColumnWildcardPtrOutputWithContext(context.Background())
}

func (i *permissionsColumnWildcardPtrType) ToPermissionsColumnWildcardPtrOutputWithContext(ctx context.Context) PermissionsColumnWildcardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsColumnWildcardPtrOutput)
}

type PermissionsColumnWildcardOutput struct{ *pulumi.OutputState }

func (PermissionsColumnWildcardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsColumnWildcard)(nil)).Elem()
}

func (o PermissionsColumnWildcardOutput) ToPermissionsColumnWildcardOutput() PermissionsColumnWildcardOutput {
	return o
}

func (o PermissionsColumnWildcardOutput) ToPermissionsColumnWildcardOutputWithContext(ctx context.Context) PermissionsColumnWildcardOutput {
	return o
}

func (o PermissionsColumnWildcardOutput) ToPermissionsColumnWildcardPtrOutput() PermissionsColumnWildcardPtrOutput {
	return o.ToPermissionsColumnWildcardPtrOutputWithContext(context.Background())
}

func (o PermissionsColumnWildcardOutput) ToPermissionsColumnWildcardPtrOutputWithContext(ctx context.Context) PermissionsColumnWildcardPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PermissionsColumnWildcard) *PermissionsColumnWildcard {
		return &v
	}).(PermissionsColumnWildcardPtrOutput)
}

func (o PermissionsColumnWildcardOutput) ExcludedColumnNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PermissionsColumnWildcard) []string { return v.ExcludedColumnNames }).(pulumi.StringArrayOutput)
}

type PermissionsColumnWildcardPtrOutput struct{ *pulumi.OutputState }

func (PermissionsColumnWildcardPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsColumnWildcard)(nil)).Elem()
}

func (o PermissionsColumnWildcardPtrOutput) ToPermissionsColumnWildcardPtrOutput() PermissionsColumnWildcardPtrOutput {
	return o
}

func (o PermissionsColumnWildcardPtrOutput) ToPermissionsColumnWildcardPtrOutputWithContext(ctx context.Context) PermissionsColumnWildcardPtrOutput {
	return o
}

func (o PermissionsColumnWildcardPtrOutput) Elem() PermissionsColumnWildcardOutput {
	return o.ApplyT(func(v *PermissionsColumnWildcard) PermissionsColumnWildcard {
		if v != nil {
			return *v
		}
		var ret PermissionsColumnWildcard
		return ret
	}).(PermissionsColumnWildcardOutput)
}

func (o PermissionsColumnWildcardPtrOutput) ExcludedColumnNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PermissionsColumnWildcard) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedColumnNames
	}).(pulumi.StringArrayOutput)
}

type PermissionsDataLakePrincipal struct {
	DataLakePrincipalIdentifier *string `pulumi:"dataLakePrincipalIdentifier"`
}

// PermissionsDataLakePrincipalInput is an input type that accepts PermissionsDataLakePrincipalArgs and PermissionsDataLakePrincipalOutput values.
// You can construct a concrete instance of `PermissionsDataLakePrincipalInput` via:
//
//          PermissionsDataLakePrincipalArgs{...}
type PermissionsDataLakePrincipalInput interface {
	pulumi.Input

	ToPermissionsDataLakePrincipalOutput() PermissionsDataLakePrincipalOutput
	ToPermissionsDataLakePrincipalOutputWithContext(context.Context) PermissionsDataLakePrincipalOutput
}

type PermissionsDataLakePrincipalArgs struct {
	DataLakePrincipalIdentifier pulumi.StringPtrInput `pulumi:"dataLakePrincipalIdentifier"`
}

func (PermissionsDataLakePrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsDataLakePrincipal)(nil)).Elem()
}

func (i PermissionsDataLakePrincipalArgs) ToPermissionsDataLakePrincipalOutput() PermissionsDataLakePrincipalOutput {
	return i.ToPermissionsDataLakePrincipalOutputWithContext(context.Background())
}

func (i PermissionsDataLakePrincipalArgs) ToPermissionsDataLakePrincipalOutputWithContext(ctx context.Context) PermissionsDataLakePrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsDataLakePrincipalOutput)
}

func (i PermissionsDataLakePrincipalArgs) ToPermissionsDataLakePrincipalPtrOutput() PermissionsDataLakePrincipalPtrOutput {
	return i.ToPermissionsDataLakePrincipalPtrOutputWithContext(context.Background())
}

func (i PermissionsDataLakePrincipalArgs) ToPermissionsDataLakePrincipalPtrOutputWithContext(ctx context.Context) PermissionsDataLakePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsDataLakePrincipalOutput).ToPermissionsDataLakePrincipalPtrOutputWithContext(ctx)
}

// PermissionsDataLakePrincipalPtrInput is an input type that accepts PermissionsDataLakePrincipalArgs, PermissionsDataLakePrincipalPtr and PermissionsDataLakePrincipalPtrOutput values.
// You can construct a concrete instance of `PermissionsDataLakePrincipalPtrInput` via:
//
//          PermissionsDataLakePrincipalArgs{...}
//
//  or:
//
//          nil
type PermissionsDataLakePrincipalPtrInput interface {
	pulumi.Input

	ToPermissionsDataLakePrincipalPtrOutput() PermissionsDataLakePrincipalPtrOutput
	ToPermissionsDataLakePrincipalPtrOutputWithContext(context.Context) PermissionsDataLakePrincipalPtrOutput
}

type permissionsDataLakePrincipalPtrType PermissionsDataLakePrincipalArgs

func PermissionsDataLakePrincipalPtr(v *PermissionsDataLakePrincipalArgs) PermissionsDataLakePrincipalPtrInput {
	return (*permissionsDataLakePrincipalPtrType)(v)
}

func (*permissionsDataLakePrincipalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsDataLakePrincipal)(nil)).Elem()
}

func (i *permissionsDataLakePrincipalPtrType) ToPermissionsDataLakePrincipalPtrOutput() PermissionsDataLakePrincipalPtrOutput {
	return i.ToPermissionsDataLakePrincipalPtrOutputWithContext(context.Background())
}

func (i *permissionsDataLakePrincipalPtrType) ToPermissionsDataLakePrincipalPtrOutputWithContext(ctx context.Context) PermissionsDataLakePrincipalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsDataLakePrincipalPtrOutput)
}

type PermissionsDataLakePrincipalOutput struct{ *pulumi.OutputState }

func (PermissionsDataLakePrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsDataLakePrincipal)(nil)).Elem()
}

func (o PermissionsDataLakePrincipalOutput) ToPermissionsDataLakePrincipalOutput() PermissionsDataLakePrincipalOutput {
	return o
}

func (o PermissionsDataLakePrincipalOutput) ToPermissionsDataLakePrincipalOutputWithContext(ctx context.Context) PermissionsDataLakePrincipalOutput {
	return o
}

func (o PermissionsDataLakePrincipalOutput) ToPermissionsDataLakePrincipalPtrOutput() PermissionsDataLakePrincipalPtrOutput {
	return o.ToPermissionsDataLakePrincipalPtrOutputWithContext(context.Background())
}

func (o PermissionsDataLakePrincipalOutput) ToPermissionsDataLakePrincipalPtrOutputWithContext(ctx context.Context) PermissionsDataLakePrincipalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PermissionsDataLakePrincipal) *PermissionsDataLakePrincipal {
		return &v
	}).(PermissionsDataLakePrincipalPtrOutput)
}

func (o PermissionsDataLakePrincipalOutput) DataLakePrincipalIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsDataLakePrincipal) *string { return v.DataLakePrincipalIdentifier }).(pulumi.StringPtrOutput)
}

type PermissionsDataLakePrincipalPtrOutput struct{ *pulumi.OutputState }

func (PermissionsDataLakePrincipalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsDataLakePrincipal)(nil)).Elem()
}

func (o PermissionsDataLakePrincipalPtrOutput) ToPermissionsDataLakePrincipalPtrOutput() PermissionsDataLakePrincipalPtrOutput {
	return o
}

func (o PermissionsDataLakePrincipalPtrOutput) ToPermissionsDataLakePrincipalPtrOutputWithContext(ctx context.Context) PermissionsDataLakePrincipalPtrOutput {
	return o
}

func (o PermissionsDataLakePrincipalPtrOutput) Elem() PermissionsDataLakePrincipalOutput {
	return o.ApplyT(func(v *PermissionsDataLakePrincipal) PermissionsDataLakePrincipal {
		if v != nil {
			return *v
		}
		var ret PermissionsDataLakePrincipal
		return ret
	}).(PermissionsDataLakePrincipalOutput)
}

func (o PermissionsDataLakePrincipalPtrOutput) DataLakePrincipalIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionsDataLakePrincipal) *string {
		if v == nil {
			return nil
		}
		return v.DataLakePrincipalIdentifier
	}).(pulumi.StringPtrOutput)
}

type PermissionsDataLocationResource struct {
	CatalogId  *string `pulumi:"catalogId"`
	S3Resource *string `pulumi:"s3Resource"`
}

// PermissionsDataLocationResourceInput is an input type that accepts PermissionsDataLocationResourceArgs and PermissionsDataLocationResourceOutput values.
// You can construct a concrete instance of `PermissionsDataLocationResourceInput` via:
//
//          PermissionsDataLocationResourceArgs{...}
type PermissionsDataLocationResourceInput interface {
	pulumi.Input

	ToPermissionsDataLocationResourceOutput() PermissionsDataLocationResourceOutput
	ToPermissionsDataLocationResourceOutputWithContext(context.Context) PermissionsDataLocationResourceOutput
}

type PermissionsDataLocationResourceArgs struct {
	CatalogId  pulumi.StringPtrInput `pulumi:"catalogId"`
	S3Resource pulumi.StringPtrInput `pulumi:"s3Resource"`
}

func (PermissionsDataLocationResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsDataLocationResource)(nil)).Elem()
}

func (i PermissionsDataLocationResourceArgs) ToPermissionsDataLocationResourceOutput() PermissionsDataLocationResourceOutput {
	return i.ToPermissionsDataLocationResourceOutputWithContext(context.Background())
}

func (i PermissionsDataLocationResourceArgs) ToPermissionsDataLocationResourceOutputWithContext(ctx context.Context) PermissionsDataLocationResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsDataLocationResourceOutput)
}

func (i PermissionsDataLocationResourceArgs) ToPermissionsDataLocationResourcePtrOutput() PermissionsDataLocationResourcePtrOutput {
	return i.ToPermissionsDataLocationResourcePtrOutputWithContext(context.Background())
}

func (i PermissionsDataLocationResourceArgs) ToPermissionsDataLocationResourcePtrOutputWithContext(ctx context.Context) PermissionsDataLocationResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsDataLocationResourceOutput).ToPermissionsDataLocationResourcePtrOutputWithContext(ctx)
}

// PermissionsDataLocationResourcePtrInput is an input type that accepts PermissionsDataLocationResourceArgs, PermissionsDataLocationResourcePtr and PermissionsDataLocationResourcePtrOutput values.
// You can construct a concrete instance of `PermissionsDataLocationResourcePtrInput` via:
//
//          PermissionsDataLocationResourceArgs{...}
//
//  or:
//
//          nil
type PermissionsDataLocationResourcePtrInput interface {
	pulumi.Input

	ToPermissionsDataLocationResourcePtrOutput() PermissionsDataLocationResourcePtrOutput
	ToPermissionsDataLocationResourcePtrOutputWithContext(context.Context) PermissionsDataLocationResourcePtrOutput
}

type permissionsDataLocationResourcePtrType PermissionsDataLocationResourceArgs

func PermissionsDataLocationResourcePtr(v *PermissionsDataLocationResourceArgs) PermissionsDataLocationResourcePtrInput {
	return (*permissionsDataLocationResourcePtrType)(v)
}

func (*permissionsDataLocationResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsDataLocationResource)(nil)).Elem()
}

func (i *permissionsDataLocationResourcePtrType) ToPermissionsDataLocationResourcePtrOutput() PermissionsDataLocationResourcePtrOutput {
	return i.ToPermissionsDataLocationResourcePtrOutputWithContext(context.Background())
}

func (i *permissionsDataLocationResourcePtrType) ToPermissionsDataLocationResourcePtrOutputWithContext(ctx context.Context) PermissionsDataLocationResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsDataLocationResourcePtrOutput)
}

type PermissionsDataLocationResourceOutput struct{ *pulumi.OutputState }

func (PermissionsDataLocationResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsDataLocationResource)(nil)).Elem()
}

func (o PermissionsDataLocationResourceOutput) ToPermissionsDataLocationResourceOutput() PermissionsDataLocationResourceOutput {
	return o
}

func (o PermissionsDataLocationResourceOutput) ToPermissionsDataLocationResourceOutputWithContext(ctx context.Context) PermissionsDataLocationResourceOutput {
	return o
}

func (o PermissionsDataLocationResourceOutput) ToPermissionsDataLocationResourcePtrOutput() PermissionsDataLocationResourcePtrOutput {
	return o.ToPermissionsDataLocationResourcePtrOutputWithContext(context.Background())
}

func (o PermissionsDataLocationResourceOutput) ToPermissionsDataLocationResourcePtrOutputWithContext(ctx context.Context) PermissionsDataLocationResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PermissionsDataLocationResource) *PermissionsDataLocationResource {
		return &v
	}).(PermissionsDataLocationResourcePtrOutput)
}

func (o PermissionsDataLocationResourceOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsDataLocationResource) *string { return v.CatalogId }).(pulumi.StringPtrOutput)
}

func (o PermissionsDataLocationResourceOutput) S3Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsDataLocationResource) *string { return v.S3Resource }).(pulumi.StringPtrOutput)
}

type PermissionsDataLocationResourcePtrOutput struct{ *pulumi.OutputState }

func (PermissionsDataLocationResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsDataLocationResource)(nil)).Elem()
}

func (o PermissionsDataLocationResourcePtrOutput) ToPermissionsDataLocationResourcePtrOutput() PermissionsDataLocationResourcePtrOutput {
	return o
}

func (o PermissionsDataLocationResourcePtrOutput) ToPermissionsDataLocationResourcePtrOutputWithContext(ctx context.Context) PermissionsDataLocationResourcePtrOutput {
	return o
}

func (o PermissionsDataLocationResourcePtrOutput) Elem() PermissionsDataLocationResourceOutput {
	return o.ApplyT(func(v *PermissionsDataLocationResource) PermissionsDataLocationResource {
		if v != nil {
			return *v
		}
		var ret PermissionsDataLocationResource
		return ret
	}).(PermissionsDataLocationResourceOutput)
}

func (o PermissionsDataLocationResourcePtrOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionsDataLocationResource) *string {
		if v == nil {
			return nil
		}
		return v.CatalogId
	}).(pulumi.StringPtrOutput)
}

func (o PermissionsDataLocationResourcePtrOutput) S3Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionsDataLocationResource) *string {
		if v == nil {
			return nil
		}
		return v.S3Resource
	}).(pulumi.StringPtrOutput)
}

type PermissionsDatabaseResource struct {
	CatalogId *string `pulumi:"catalogId"`
	Name      *string `pulumi:"name"`
}

// PermissionsDatabaseResourceInput is an input type that accepts PermissionsDatabaseResourceArgs and PermissionsDatabaseResourceOutput values.
// You can construct a concrete instance of `PermissionsDatabaseResourceInput` via:
//
//          PermissionsDatabaseResourceArgs{...}
type PermissionsDatabaseResourceInput interface {
	pulumi.Input

	ToPermissionsDatabaseResourceOutput() PermissionsDatabaseResourceOutput
	ToPermissionsDatabaseResourceOutputWithContext(context.Context) PermissionsDatabaseResourceOutput
}

type PermissionsDatabaseResourceArgs struct {
	CatalogId pulumi.StringPtrInput `pulumi:"catalogId"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
}

func (PermissionsDatabaseResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsDatabaseResource)(nil)).Elem()
}

func (i PermissionsDatabaseResourceArgs) ToPermissionsDatabaseResourceOutput() PermissionsDatabaseResourceOutput {
	return i.ToPermissionsDatabaseResourceOutputWithContext(context.Background())
}

func (i PermissionsDatabaseResourceArgs) ToPermissionsDatabaseResourceOutputWithContext(ctx context.Context) PermissionsDatabaseResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsDatabaseResourceOutput)
}

func (i PermissionsDatabaseResourceArgs) ToPermissionsDatabaseResourcePtrOutput() PermissionsDatabaseResourcePtrOutput {
	return i.ToPermissionsDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i PermissionsDatabaseResourceArgs) ToPermissionsDatabaseResourcePtrOutputWithContext(ctx context.Context) PermissionsDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsDatabaseResourceOutput).ToPermissionsDatabaseResourcePtrOutputWithContext(ctx)
}

// PermissionsDatabaseResourcePtrInput is an input type that accepts PermissionsDatabaseResourceArgs, PermissionsDatabaseResourcePtr and PermissionsDatabaseResourcePtrOutput values.
// You can construct a concrete instance of `PermissionsDatabaseResourcePtrInput` via:
//
//          PermissionsDatabaseResourceArgs{...}
//
//  or:
//
//          nil
type PermissionsDatabaseResourcePtrInput interface {
	pulumi.Input

	ToPermissionsDatabaseResourcePtrOutput() PermissionsDatabaseResourcePtrOutput
	ToPermissionsDatabaseResourcePtrOutputWithContext(context.Context) PermissionsDatabaseResourcePtrOutput
}

type permissionsDatabaseResourcePtrType PermissionsDatabaseResourceArgs

func PermissionsDatabaseResourcePtr(v *PermissionsDatabaseResourceArgs) PermissionsDatabaseResourcePtrInput {
	return (*permissionsDatabaseResourcePtrType)(v)
}

func (*permissionsDatabaseResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsDatabaseResource)(nil)).Elem()
}

func (i *permissionsDatabaseResourcePtrType) ToPermissionsDatabaseResourcePtrOutput() PermissionsDatabaseResourcePtrOutput {
	return i.ToPermissionsDatabaseResourcePtrOutputWithContext(context.Background())
}

func (i *permissionsDatabaseResourcePtrType) ToPermissionsDatabaseResourcePtrOutputWithContext(ctx context.Context) PermissionsDatabaseResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsDatabaseResourcePtrOutput)
}

type PermissionsDatabaseResourceOutput struct{ *pulumi.OutputState }

func (PermissionsDatabaseResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsDatabaseResource)(nil)).Elem()
}

func (o PermissionsDatabaseResourceOutput) ToPermissionsDatabaseResourceOutput() PermissionsDatabaseResourceOutput {
	return o
}

func (o PermissionsDatabaseResourceOutput) ToPermissionsDatabaseResourceOutputWithContext(ctx context.Context) PermissionsDatabaseResourceOutput {
	return o
}

func (o PermissionsDatabaseResourceOutput) ToPermissionsDatabaseResourcePtrOutput() PermissionsDatabaseResourcePtrOutput {
	return o.ToPermissionsDatabaseResourcePtrOutputWithContext(context.Background())
}

func (o PermissionsDatabaseResourceOutput) ToPermissionsDatabaseResourcePtrOutputWithContext(ctx context.Context) PermissionsDatabaseResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PermissionsDatabaseResource) *PermissionsDatabaseResource {
		return &v
	}).(PermissionsDatabaseResourcePtrOutput)
}

func (o PermissionsDatabaseResourceOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsDatabaseResource) *string { return v.CatalogId }).(pulumi.StringPtrOutput)
}

func (o PermissionsDatabaseResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsDatabaseResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PermissionsDatabaseResourcePtrOutput struct{ *pulumi.OutputState }

func (PermissionsDatabaseResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsDatabaseResource)(nil)).Elem()
}

func (o PermissionsDatabaseResourcePtrOutput) ToPermissionsDatabaseResourcePtrOutput() PermissionsDatabaseResourcePtrOutput {
	return o
}

func (o PermissionsDatabaseResourcePtrOutput) ToPermissionsDatabaseResourcePtrOutputWithContext(ctx context.Context) PermissionsDatabaseResourcePtrOutput {
	return o
}

func (o PermissionsDatabaseResourcePtrOutput) Elem() PermissionsDatabaseResourceOutput {
	return o.ApplyT(func(v *PermissionsDatabaseResource) PermissionsDatabaseResource {
		if v != nil {
			return *v
		}
		var ret PermissionsDatabaseResource
		return ret
	}).(PermissionsDatabaseResourceOutput)
}

func (o PermissionsDatabaseResourcePtrOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionsDatabaseResource) *string {
		if v == nil {
			return nil
		}
		return v.CatalogId
	}).(pulumi.StringPtrOutput)
}

func (o PermissionsDatabaseResourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionsDatabaseResource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type PermissionsResource struct {
	DataLocationResource     *PermissionsDataLocationResource     `pulumi:"dataLocationResource"`
	DatabaseResource         *PermissionsDatabaseResource         `pulumi:"databaseResource"`
	TableResource            *PermissionsTableResource            `pulumi:"tableResource"`
	TableWithColumnsResource *PermissionsTableWithColumnsResource `pulumi:"tableWithColumnsResource"`
}

// PermissionsResourceInput is an input type that accepts PermissionsResourceArgs and PermissionsResourceOutput values.
// You can construct a concrete instance of `PermissionsResourceInput` via:
//
//          PermissionsResourceArgs{...}
type PermissionsResourceInput interface {
	pulumi.Input

	ToPermissionsResourceOutput() PermissionsResourceOutput
	ToPermissionsResourceOutputWithContext(context.Context) PermissionsResourceOutput
}

type PermissionsResourceArgs struct {
	DataLocationResource     PermissionsDataLocationResourcePtrInput     `pulumi:"dataLocationResource"`
	DatabaseResource         PermissionsDatabaseResourcePtrInput         `pulumi:"databaseResource"`
	TableResource            PermissionsTableResourcePtrInput            `pulumi:"tableResource"`
	TableWithColumnsResource PermissionsTableWithColumnsResourcePtrInput `pulumi:"tableWithColumnsResource"`
}

func (PermissionsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsResource)(nil)).Elem()
}

func (i PermissionsResourceArgs) ToPermissionsResourceOutput() PermissionsResourceOutput {
	return i.ToPermissionsResourceOutputWithContext(context.Background())
}

func (i PermissionsResourceArgs) ToPermissionsResourceOutputWithContext(ctx context.Context) PermissionsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsResourceOutput)
}

func (i PermissionsResourceArgs) ToPermissionsResourcePtrOutput() PermissionsResourcePtrOutput {
	return i.ToPermissionsResourcePtrOutputWithContext(context.Background())
}

func (i PermissionsResourceArgs) ToPermissionsResourcePtrOutputWithContext(ctx context.Context) PermissionsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsResourceOutput).ToPermissionsResourcePtrOutputWithContext(ctx)
}

// PermissionsResourcePtrInput is an input type that accepts PermissionsResourceArgs, PermissionsResourcePtr and PermissionsResourcePtrOutput values.
// You can construct a concrete instance of `PermissionsResourcePtrInput` via:
//
//          PermissionsResourceArgs{...}
//
//  or:
//
//          nil
type PermissionsResourcePtrInput interface {
	pulumi.Input

	ToPermissionsResourcePtrOutput() PermissionsResourcePtrOutput
	ToPermissionsResourcePtrOutputWithContext(context.Context) PermissionsResourcePtrOutput
}

type permissionsResourcePtrType PermissionsResourceArgs

func PermissionsResourcePtr(v *PermissionsResourceArgs) PermissionsResourcePtrInput {
	return (*permissionsResourcePtrType)(v)
}

func (*permissionsResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsResource)(nil)).Elem()
}

func (i *permissionsResourcePtrType) ToPermissionsResourcePtrOutput() PermissionsResourcePtrOutput {
	return i.ToPermissionsResourcePtrOutputWithContext(context.Background())
}

func (i *permissionsResourcePtrType) ToPermissionsResourcePtrOutputWithContext(ctx context.Context) PermissionsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsResourcePtrOutput)
}

type PermissionsResourceOutput struct{ *pulumi.OutputState }

func (PermissionsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsResource)(nil)).Elem()
}

func (o PermissionsResourceOutput) ToPermissionsResourceOutput() PermissionsResourceOutput {
	return o
}

func (o PermissionsResourceOutput) ToPermissionsResourceOutputWithContext(ctx context.Context) PermissionsResourceOutput {
	return o
}

func (o PermissionsResourceOutput) ToPermissionsResourcePtrOutput() PermissionsResourcePtrOutput {
	return o.ToPermissionsResourcePtrOutputWithContext(context.Background())
}

func (o PermissionsResourceOutput) ToPermissionsResourcePtrOutputWithContext(ctx context.Context) PermissionsResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PermissionsResource) *PermissionsResource {
		return &v
	}).(PermissionsResourcePtrOutput)
}

func (o PermissionsResourceOutput) DataLocationResource() PermissionsDataLocationResourcePtrOutput {
	return o.ApplyT(func(v PermissionsResource) *PermissionsDataLocationResource { return v.DataLocationResource }).(PermissionsDataLocationResourcePtrOutput)
}

func (o PermissionsResourceOutput) DatabaseResource() PermissionsDatabaseResourcePtrOutput {
	return o.ApplyT(func(v PermissionsResource) *PermissionsDatabaseResource { return v.DatabaseResource }).(PermissionsDatabaseResourcePtrOutput)
}

func (o PermissionsResourceOutput) TableResource() PermissionsTableResourcePtrOutput {
	return o.ApplyT(func(v PermissionsResource) *PermissionsTableResource { return v.TableResource }).(PermissionsTableResourcePtrOutput)
}

func (o PermissionsResourceOutput) TableWithColumnsResource() PermissionsTableWithColumnsResourcePtrOutput {
	return o.ApplyT(func(v PermissionsResource) *PermissionsTableWithColumnsResource { return v.TableWithColumnsResource }).(PermissionsTableWithColumnsResourcePtrOutput)
}

type PermissionsResourcePtrOutput struct{ *pulumi.OutputState }

func (PermissionsResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsResource)(nil)).Elem()
}

func (o PermissionsResourcePtrOutput) ToPermissionsResourcePtrOutput() PermissionsResourcePtrOutput {
	return o
}

func (o PermissionsResourcePtrOutput) ToPermissionsResourcePtrOutputWithContext(ctx context.Context) PermissionsResourcePtrOutput {
	return o
}

func (o PermissionsResourcePtrOutput) Elem() PermissionsResourceOutput {
	return o.ApplyT(func(v *PermissionsResource) PermissionsResource {
		if v != nil {
			return *v
		}
		var ret PermissionsResource
		return ret
	}).(PermissionsResourceOutput)
}

func (o PermissionsResourcePtrOutput) DataLocationResource() PermissionsDataLocationResourcePtrOutput {
	return o.ApplyT(func(v *PermissionsResource) *PermissionsDataLocationResource {
		if v == nil {
			return nil
		}
		return v.DataLocationResource
	}).(PermissionsDataLocationResourcePtrOutput)
}

func (o PermissionsResourcePtrOutput) DatabaseResource() PermissionsDatabaseResourcePtrOutput {
	return o.ApplyT(func(v *PermissionsResource) *PermissionsDatabaseResource {
		if v == nil {
			return nil
		}
		return v.DatabaseResource
	}).(PermissionsDatabaseResourcePtrOutput)
}

func (o PermissionsResourcePtrOutput) TableResource() PermissionsTableResourcePtrOutput {
	return o.ApplyT(func(v *PermissionsResource) *PermissionsTableResource {
		if v == nil {
			return nil
		}
		return v.TableResource
	}).(PermissionsTableResourcePtrOutput)
}

func (o PermissionsResourcePtrOutput) TableWithColumnsResource() PermissionsTableWithColumnsResourcePtrOutput {
	return o.ApplyT(func(v *PermissionsResource) *PermissionsTableWithColumnsResource {
		if v == nil {
			return nil
		}
		return v.TableWithColumnsResource
	}).(PermissionsTableWithColumnsResourcePtrOutput)
}

type PermissionsTableResource struct {
	CatalogId     *string                   `pulumi:"catalogId"`
	DatabaseName  *string                   `pulumi:"databaseName"`
	Name          *string                   `pulumi:"name"`
	TableWildcard *PermissionsTableWildcard `pulumi:"tableWildcard"`
}

// PermissionsTableResourceInput is an input type that accepts PermissionsTableResourceArgs and PermissionsTableResourceOutput values.
// You can construct a concrete instance of `PermissionsTableResourceInput` via:
//
//          PermissionsTableResourceArgs{...}
type PermissionsTableResourceInput interface {
	pulumi.Input

	ToPermissionsTableResourceOutput() PermissionsTableResourceOutput
	ToPermissionsTableResourceOutputWithContext(context.Context) PermissionsTableResourceOutput
}

type PermissionsTableResourceArgs struct {
	CatalogId     pulumi.StringPtrInput            `pulumi:"catalogId"`
	DatabaseName  pulumi.StringPtrInput            `pulumi:"databaseName"`
	Name          pulumi.StringPtrInput            `pulumi:"name"`
	TableWildcard PermissionsTableWildcardPtrInput `pulumi:"tableWildcard"`
}

func (PermissionsTableResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsTableResource)(nil)).Elem()
}

func (i PermissionsTableResourceArgs) ToPermissionsTableResourceOutput() PermissionsTableResourceOutput {
	return i.ToPermissionsTableResourceOutputWithContext(context.Background())
}

func (i PermissionsTableResourceArgs) ToPermissionsTableResourceOutputWithContext(ctx context.Context) PermissionsTableResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsTableResourceOutput)
}

func (i PermissionsTableResourceArgs) ToPermissionsTableResourcePtrOutput() PermissionsTableResourcePtrOutput {
	return i.ToPermissionsTableResourcePtrOutputWithContext(context.Background())
}

func (i PermissionsTableResourceArgs) ToPermissionsTableResourcePtrOutputWithContext(ctx context.Context) PermissionsTableResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsTableResourceOutput).ToPermissionsTableResourcePtrOutputWithContext(ctx)
}

// PermissionsTableResourcePtrInput is an input type that accepts PermissionsTableResourceArgs, PermissionsTableResourcePtr and PermissionsTableResourcePtrOutput values.
// You can construct a concrete instance of `PermissionsTableResourcePtrInput` via:
//
//          PermissionsTableResourceArgs{...}
//
//  or:
//
//          nil
type PermissionsTableResourcePtrInput interface {
	pulumi.Input

	ToPermissionsTableResourcePtrOutput() PermissionsTableResourcePtrOutput
	ToPermissionsTableResourcePtrOutputWithContext(context.Context) PermissionsTableResourcePtrOutput
}

type permissionsTableResourcePtrType PermissionsTableResourceArgs

func PermissionsTableResourcePtr(v *PermissionsTableResourceArgs) PermissionsTableResourcePtrInput {
	return (*permissionsTableResourcePtrType)(v)
}

func (*permissionsTableResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsTableResource)(nil)).Elem()
}

func (i *permissionsTableResourcePtrType) ToPermissionsTableResourcePtrOutput() PermissionsTableResourcePtrOutput {
	return i.ToPermissionsTableResourcePtrOutputWithContext(context.Background())
}

func (i *permissionsTableResourcePtrType) ToPermissionsTableResourcePtrOutputWithContext(ctx context.Context) PermissionsTableResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsTableResourcePtrOutput)
}

type PermissionsTableResourceOutput struct{ *pulumi.OutputState }

func (PermissionsTableResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsTableResource)(nil)).Elem()
}

func (o PermissionsTableResourceOutput) ToPermissionsTableResourceOutput() PermissionsTableResourceOutput {
	return o
}

func (o PermissionsTableResourceOutput) ToPermissionsTableResourceOutputWithContext(ctx context.Context) PermissionsTableResourceOutput {
	return o
}

func (o PermissionsTableResourceOutput) ToPermissionsTableResourcePtrOutput() PermissionsTableResourcePtrOutput {
	return o.ToPermissionsTableResourcePtrOutputWithContext(context.Background())
}

func (o PermissionsTableResourceOutput) ToPermissionsTableResourcePtrOutputWithContext(ctx context.Context) PermissionsTableResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PermissionsTableResource) *PermissionsTableResource {
		return &v
	}).(PermissionsTableResourcePtrOutput)
}

func (o PermissionsTableResourceOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsTableResource) *string { return v.CatalogId }).(pulumi.StringPtrOutput)
}

func (o PermissionsTableResourceOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsTableResource) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o PermissionsTableResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsTableResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o PermissionsTableResourceOutput) TableWildcard() PermissionsTableWildcardPtrOutput {
	return o.ApplyT(func(v PermissionsTableResource) *PermissionsTableWildcard { return v.TableWildcard }).(PermissionsTableWildcardPtrOutput)
}

type PermissionsTableResourcePtrOutput struct{ *pulumi.OutputState }

func (PermissionsTableResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsTableResource)(nil)).Elem()
}

func (o PermissionsTableResourcePtrOutput) ToPermissionsTableResourcePtrOutput() PermissionsTableResourcePtrOutput {
	return o
}

func (o PermissionsTableResourcePtrOutput) ToPermissionsTableResourcePtrOutputWithContext(ctx context.Context) PermissionsTableResourcePtrOutput {
	return o
}

func (o PermissionsTableResourcePtrOutput) Elem() PermissionsTableResourceOutput {
	return o.ApplyT(func(v *PermissionsTableResource) PermissionsTableResource {
		if v != nil {
			return *v
		}
		var ret PermissionsTableResource
		return ret
	}).(PermissionsTableResourceOutput)
}

func (o PermissionsTableResourcePtrOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionsTableResource) *string {
		if v == nil {
			return nil
		}
		return v.CatalogId
	}).(pulumi.StringPtrOutput)
}

func (o PermissionsTableResourcePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionsTableResource) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o PermissionsTableResourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionsTableResource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o PermissionsTableResourcePtrOutput) TableWildcard() PermissionsTableWildcardPtrOutput {
	return o.ApplyT(func(v *PermissionsTableResource) *PermissionsTableWildcard {
		if v == nil {
			return nil
		}
		return v.TableWildcard
	}).(PermissionsTableWildcardPtrOutput)
}

type PermissionsTableWildcard struct {
}

// PermissionsTableWildcardInput is an input type that accepts PermissionsTableWildcardArgs and PermissionsTableWildcardOutput values.
// You can construct a concrete instance of `PermissionsTableWildcardInput` via:
//
//          PermissionsTableWildcardArgs{...}
type PermissionsTableWildcardInput interface {
	pulumi.Input

	ToPermissionsTableWildcardOutput() PermissionsTableWildcardOutput
	ToPermissionsTableWildcardOutputWithContext(context.Context) PermissionsTableWildcardOutput
}

type PermissionsTableWildcardArgs struct {
}

func (PermissionsTableWildcardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsTableWildcard)(nil)).Elem()
}

func (i PermissionsTableWildcardArgs) ToPermissionsTableWildcardOutput() PermissionsTableWildcardOutput {
	return i.ToPermissionsTableWildcardOutputWithContext(context.Background())
}

func (i PermissionsTableWildcardArgs) ToPermissionsTableWildcardOutputWithContext(ctx context.Context) PermissionsTableWildcardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsTableWildcardOutput)
}

func (i PermissionsTableWildcardArgs) ToPermissionsTableWildcardPtrOutput() PermissionsTableWildcardPtrOutput {
	return i.ToPermissionsTableWildcardPtrOutputWithContext(context.Background())
}

func (i PermissionsTableWildcardArgs) ToPermissionsTableWildcardPtrOutputWithContext(ctx context.Context) PermissionsTableWildcardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsTableWildcardOutput).ToPermissionsTableWildcardPtrOutputWithContext(ctx)
}

// PermissionsTableWildcardPtrInput is an input type that accepts PermissionsTableWildcardArgs, PermissionsTableWildcardPtr and PermissionsTableWildcardPtrOutput values.
// You can construct a concrete instance of `PermissionsTableWildcardPtrInput` via:
//
//          PermissionsTableWildcardArgs{...}
//
//  or:
//
//          nil
type PermissionsTableWildcardPtrInput interface {
	pulumi.Input

	ToPermissionsTableWildcardPtrOutput() PermissionsTableWildcardPtrOutput
	ToPermissionsTableWildcardPtrOutputWithContext(context.Context) PermissionsTableWildcardPtrOutput
}

type permissionsTableWildcardPtrType PermissionsTableWildcardArgs

func PermissionsTableWildcardPtr(v *PermissionsTableWildcardArgs) PermissionsTableWildcardPtrInput {
	return (*permissionsTableWildcardPtrType)(v)
}

func (*permissionsTableWildcardPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsTableWildcard)(nil)).Elem()
}

func (i *permissionsTableWildcardPtrType) ToPermissionsTableWildcardPtrOutput() PermissionsTableWildcardPtrOutput {
	return i.ToPermissionsTableWildcardPtrOutputWithContext(context.Background())
}

func (i *permissionsTableWildcardPtrType) ToPermissionsTableWildcardPtrOutputWithContext(ctx context.Context) PermissionsTableWildcardPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsTableWildcardPtrOutput)
}

type PermissionsTableWildcardOutput struct{ *pulumi.OutputState }

func (PermissionsTableWildcardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsTableWildcard)(nil)).Elem()
}

func (o PermissionsTableWildcardOutput) ToPermissionsTableWildcardOutput() PermissionsTableWildcardOutput {
	return o
}

func (o PermissionsTableWildcardOutput) ToPermissionsTableWildcardOutputWithContext(ctx context.Context) PermissionsTableWildcardOutput {
	return o
}

func (o PermissionsTableWildcardOutput) ToPermissionsTableWildcardPtrOutput() PermissionsTableWildcardPtrOutput {
	return o.ToPermissionsTableWildcardPtrOutputWithContext(context.Background())
}

func (o PermissionsTableWildcardOutput) ToPermissionsTableWildcardPtrOutputWithContext(ctx context.Context) PermissionsTableWildcardPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PermissionsTableWildcard) *PermissionsTableWildcard {
		return &v
	}).(PermissionsTableWildcardPtrOutput)
}

type PermissionsTableWildcardPtrOutput struct{ *pulumi.OutputState }

func (PermissionsTableWildcardPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsTableWildcard)(nil)).Elem()
}

func (o PermissionsTableWildcardPtrOutput) ToPermissionsTableWildcardPtrOutput() PermissionsTableWildcardPtrOutput {
	return o
}

func (o PermissionsTableWildcardPtrOutput) ToPermissionsTableWildcardPtrOutputWithContext(ctx context.Context) PermissionsTableWildcardPtrOutput {
	return o
}

func (o PermissionsTableWildcardPtrOutput) Elem() PermissionsTableWildcardOutput {
	return o.ApplyT(func(v *PermissionsTableWildcard) PermissionsTableWildcard {
		if v != nil {
			return *v
		}
		var ret PermissionsTableWildcard
		return ret
	}).(PermissionsTableWildcardOutput)
}

type PermissionsTableWithColumnsResource struct {
	CatalogId      *string                    `pulumi:"catalogId"`
	ColumnNames    []string                   `pulumi:"columnNames"`
	ColumnWildcard *PermissionsColumnWildcard `pulumi:"columnWildcard"`
	DatabaseName   *string                    `pulumi:"databaseName"`
	Name           *string                    `pulumi:"name"`
}

// PermissionsTableWithColumnsResourceInput is an input type that accepts PermissionsTableWithColumnsResourceArgs and PermissionsTableWithColumnsResourceOutput values.
// You can construct a concrete instance of `PermissionsTableWithColumnsResourceInput` via:
//
//          PermissionsTableWithColumnsResourceArgs{...}
type PermissionsTableWithColumnsResourceInput interface {
	pulumi.Input

	ToPermissionsTableWithColumnsResourceOutput() PermissionsTableWithColumnsResourceOutput
	ToPermissionsTableWithColumnsResourceOutputWithContext(context.Context) PermissionsTableWithColumnsResourceOutput
}

type PermissionsTableWithColumnsResourceArgs struct {
	CatalogId      pulumi.StringPtrInput             `pulumi:"catalogId"`
	ColumnNames    pulumi.StringArrayInput           `pulumi:"columnNames"`
	ColumnWildcard PermissionsColumnWildcardPtrInput `pulumi:"columnWildcard"`
	DatabaseName   pulumi.StringPtrInput             `pulumi:"databaseName"`
	Name           pulumi.StringPtrInput             `pulumi:"name"`
}

func (PermissionsTableWithColumnsResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsTableWithColumnsResource)(nil)).Elem()
}

func (i PermissionsTableWithColumnsResourceArgs) ToPermissionsTableWithColumnsResourceOutput() PermissionsTableWithColumnsResourceOutput {
	return i.ToPermissionsTableWithColumnsResourceOutputWithContext(context.Background())
}

func (i PermissionsTableWithColumnsResourceArgs) ToPermissionsTableWithColumnsResourceOutputWithContext(ctx context.Context) PermissionsTableWithColumnsResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsTableWithColumnsResourceOutput)
}

func (i PermissionsTableWithColumnsResourceArgs) ToPermissionsTableWithColumnsResourcePtrOutput() PermissionsTableWithColumnsResourcePtrOutput {
	return i.ToPermissionsTableWithColumnsResourcePtrOutputWithContext(context.Background())
}

func (i PermissionsTableWithColumnsResourceArgs) ToPermissionsTableWithColumnsResourcePtrOutputWithContext(ctx context.Context) PermissionsTableWithColumnsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsTableWithColumnsResourceOutput).ToPermissionsTableWithColumnsResourcePtrOutputWithContext(ctx)
}

// PermissionsTableWithColumnsResourcePtrInput is an input type that accepts PermissionsTableWithColumnsResourceArgs, PermissionsTableWithColumnsResourcePtr and PermissionsTableWithColumnsResourcePtrOutput values.
// You can construct a concrete instance of `PermissionsTableWithColumnsResourcePtrInput` via:
//
//          PermissionsTableWithColumnsResourceArgs{...}
//
//  or:
//
//          nil
type PermissionsTableWithColumnsResourcePtrInput interface {
	pulumi.Input

	ToPermissionsTableWithColumnsResourcePtrOutput() PermissionsTableWithColumnsResourcePtrOutput
	ToPermissionsTableWithColumnsResourcePtrOutputWithContext(context.Context) PermissionsTableWithColumnsResourcePtrOutput
}

type permissionsTableWithColumnsResourcePtrType PermissionsTableWithColumnsResourceArgs

func PermissionsTableWithColumnsResourcePtr(v *PermissionsTableWithColumnsResourceArgs) PermissionsTableWithColumnsResourcePtrInput {
	return (*permissionsTableWithColumnsResourcePtrType)(v)
}

func (*permissionsTableWithColumnsResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsTableWithColumnsResource)(nil)).Elem()
}

func (i *permissionsTableWithColumnsResourcePtrType) ToPermissionsTableWithColumnsResourcePtrOutput() PermissionsTableWithColumnsResourcePtrOutput {
	return i.ToPermissionsTableWithColumnsResourcePtrOutputWithContext(context.Background())
}

func (i *permissionsTableWithColumnsResourcePtrType) ToPermissionsTableWithColumnsResourcePtrOutputWithContext(ctx context.Context) PermissionsTableWithColumnsResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PermissionsTableWithColumnsResourcePtrOutput)
}

type PermissionsTableWithColumnsResourceOutput struct{ *pulumi.OutputState }

func (PermissionsTableWithColumnsResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PermissionsTableWithColumnsResource)(nil)).Elem()
}

func (o PermissionsTableWithColumnsResourceOutput) ToPermissionsTableWithColumnsResourceOutput() PermissionsTableWithColumnsResourceOutput {
	return o
}

func (o PermissionsTableWithColumnsResourceOutput) ToPermissionsTableWithColumnsResourceOutputWithContext(ctx context.Context) PermissionsTableWithColumnsResourceOutput {
	return o
}

func (o PermissionsTableWithColumnsResourceOutput) ToPermissionsTableWithColumnsResourcePtrOutput() PermissionsTableWithColumnsResourcePtrOutput {
	return o.ToPermissionsTableWithColumnsResourcePtrOutputWithContext(context.Background())
}

func (o PermissionsTableWithColumnsResourceOutput) ToPermissionsTableWithColumnsResourcePtrOutputWithContext(ctx context.Context) PermissionsTableWithColumnsResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PermissionsTableWithColumnsResource) *PermissionsTableWithColumnsResource {
		return &v
	}).(PermissionsTableWithColumnsResourcePtrOutput)
}

func (o PermissionsTableWithColumnsResourceOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsTableWithColumnsResource) *string { return v.CatalogId }).(pulumi.StringPtrOutput)
}

func (o PermissionsTableWithColumnsResourceOutput) ColumnNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PermissionsTableWithColumnsResource) []string { return v.ColumnNames }).(pulumi.StringArrayOutput)
}

func (o PermissionsTableWithColumnsResourceOutput) ColumnWildcard() PermissionsColumnWildcardPtrOutput {
	return o.ApplyT(func(v PermissionsTableWithColumnsResource) *PermissionsColumnWildcard { return v.ColumnWildcard }).(PermissionsColumnWildcardPtrOutput)
}

func (o PermissionsTableWithColumnsResourceOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsTableWithColumnsResource) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

func (o PermissionsTableWithColumnsResourceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PermissionsTableWithColumnsResource) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PermissionsTableWithColumnsResourcePtrOutput struct{ *pulumi.OutputState }

func (PermissionsTableWithColumnsResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PermissionsTableWithColumnsResource)(nil)).Elem()
}

func (o PermissionsTableWithColumnsResourcePtrOutput) ToPermissionsTableWithColumnsResourcePtrOutput() PermissionsTableWithColumnsResourcePtrOutput {
	return o
}

func (o PermissionsTableWithColumnsResourcePtrOutput) ToPermissionsTableWithColumnsResourcePtrOutputWithContext(ctx context.Context) PermissionsTableWithColumnsResourcePtrOutput {
	return o
}

func (o PermissionsTableWithColumnsResourcePtrOutput) Elem() PermissionsTableWithColumnsResourceOutput {
	return o.ApplyT(func(v *PermissionsTableWithColumnsResource) PermissionsTableWithColumnsResource {
		if v != nil {
			return *v
		}
		var ret PermissionsTableWithColumnsResource
		return ret
	}).(PermissionsTableWithColumnsResourceOutput)
}

func (o PermissionsTableWithColumnsResourcePtrOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionsTableWithColumnsResource) *string {
		if v == nil {
			return nil
		}
		return v.CatalogId
	}).(pulumi.StringPtrOutput)
}

func (o PermissionsTableWithColumnsResourcePtrOutput) ColumnNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PermissionsTableWithColumnsResource) []string {
		if v == nil {
			return nil
		}
		return v.ColumnNames
	}).(pulumi.StringArrayOutput)
}

func (o PermissionsTableWithColumnsResourcePtrOutput) ColumnWildcard() PermissionsColumnWildcardPtrOutput {
	return o.ApplyT(func(v *PermissionsTableWithColumnsResource) *PermissionsColumnWildcard {
		if v == nil {
			return nil
		}
		return v.ColumnWildcard
	}).(PermissionsColumnWildcardPtrOutput)
}

func (o PermissionsTableWithColumnsResourcePtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionsTableWithColumnsResource) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

func (o PermissionsTableWithColumnsResourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PermissionsTableWithColumnsResource) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeSettingsAdminsInput)(nil)).Elem(), DataLakeSettingsAdminsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeSettingsAdminsPtrInput)(nil)).Elem(), DataLakeSettingsAdminsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsColumnWildcardInput)(nil)).Elem(), PermissionsColumnWildcardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsColumnWildcardPtrInput)(nil)).Elem(), PermissionsColumnWildcardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsDataLakePrincipalInput)(nil)).Elem(), PermissionsDataLakePrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsDataLakePrincipalPtrInput)(nil)).Elem(), PermissionsDataLakePrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsDataLocationResourceInput)(nil)).Elem(), PermissionsDataLocationResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsDataLocationResourcePtrInput)(nil)).Elem(), PermissionsDataLocationResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsDatabaseResourceInput)(nil)).Elem(), PermissionsDatabaseResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsDatabaseResourcePtrInput)(nil)).Elem(), PermissionsDatabaseResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsResourceInput)(nil)).Elem(), PermissionsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsResourcePtrInput)(nil)).Elem(), PermissionsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsTableResourceInput)(nil)).Elem(), PermissionsTableResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsTableResourcePtrInput)(nil)).Elem(), PermissionsTableResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsTableWildcardInput)(nil)).Elem(), PermissionsTableWildcardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsTableWildcardPtrInput)(nil)).Elem(), PermissionsTableWildcardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsTableWithColumnsResourceInput)(nil)).Elem(), PermissionsTableWithColumnsResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PermissionsTableWithColumnsResourcePtrInput)(nil)).Elem(), PermissionsTableWithColumnsResourceArgs{})
	pulumi.RegisterOutputType(DataLakeSettingsAdminsOutput{})
	pulumi.RegisterOutputType(DataLakeSettingsAdminsPtrOutput{})
	pulumi.RegisterOutputType(PermissionsColumnWildcardOutput{})
	pulumi.RegisterOutputType(PermissionsColumnWildcardPtrOutput{})
	pulumi.RegisterOutputType(PermissionsDataLakePrincipalOutput{})
	pulumi.RegisterOutputType(PermissionsDataLakePrincipalPtrOutput{})
	pulumi.RegisterOutputType(PermissionsDataLocationResourceOutput{})
	pulumi.RegisterOutputType(PermissionsDataLocationResourcePtrOutput{})
	pulumi.RegisterOutputType(PermissionsDatabaseResourceOutput{})
	pulumi.RegisterOutputType(PermissionsDatabaseResourcePtrOutput{})
	pulumi.RegisterOutputType(PermissionsResourceOutput{})
	pulumi.RegisterOutputType(PermissionsResourcePtrOutput{})
	pulumi.RegisterOutputType(PermissionsTableResourceOutput{})
	pulumi.RegisterOutputType(PermissionsTableResourcePtrOutput{})
	pulumi.RegisterOutputType(PermissionsTableWildcardOutput{})
	pulumi.RegisterOutputType(PermissionsTableWildcardPtrOutput{})
	pulumi.RegisterOutputType(PermissionsTableWithColumnsResourceOutput{})
	pulumi.RegisterOutputType(PermissionsTableWithColumnsResourcePtrOutput{})
}
