// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates or updates the auth policy.
type AuthPolicy struct {
	pulumi.CustomResourceState

	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::VpcLattice::AuthPolicy` for more information about the expected schema for this property.
	Policy             pulumi.AnyOutput          `pulumi:"policy"`
	ResourceIdentifier pulumi.StringOutput       `pulumi:"resourceIdentifier"`
	State              AuthPolicyStateEnumOutput `pulumi:"state"`
}

// NewAuthPolicy registers a new resource with the given unique name, arguments, and options.
func NewAuthPolicy(ctx *pulumi.Context,
	name string, args *AuthPolicyArgs, opts ...pulumi.ResourceOption) (*AuthPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	if args.ResourceIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ResourceIdentifier'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"resourceIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AuthPolicy
	err := ctx.RegisterResource("aws-native:vpclattice:AuthPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthPolicy gets an existing AuthPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthPolicyState, opts ...pulumi.ResourceOption) (*AuthPolicy, error) {
	var resource AuthPolicy
	err := ctx.ReadResource("aws-native:vpclattice:AuthPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthPolicy resources.
type authPolicyState struct {
}

type AuthPolicyState struct {
}

func (AuthPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*authPolicyState)(nil)).Elem()
}

type authPolicyArgs struct {
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::VpcLattice::AuthPolicy` for more information about the expected schema for this property.
	Policy             interface{} `pulumi:"policy"`
	ResourceIdentifier string      `pulumi:"resourceIdentifier"`
}

// The set of arguments for constructing a AuthPolicy resource.
type AuthPolicyArgs struct {
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::VpcLattice::AuthPolicy` for more information about the expected schema for this property.
	Policy             pulumi.Input
	ResourceIdentifier pulumi.StringInput
}

func (AuthPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authPolicyArgs)(nil)).Elem()
}

type AuthPolicyInput interface {
	pulumi.Input

	ToAuthPolicyOutput() AuthPolicyOutput
	ToAuthPolicyOutputWithContext(ctx context.Context) AuthPolicyOutput
}

func (*AuthPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthPolicy)(nil)).Elem()
}

func (i *AuthPolicy) ToAuthPolicyOutput() AuthPolicyOutput {
	return i.ToAuthPolicyOutputWithContext(context.Background())
}

func (i *AuthPolicy) ToAuthPolicyOutputWithContext(ctx context.Context) AuthPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthPolicyOutput)
}

type AuthPolicyOutput struct{ *pulumi.OutputState }

func (AuthPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthPolicy)(nil)).Elem()
}

func (o AuthPolicyOutput) ToAuthPolicyOutput() AuthPolicyOutput {
	return o
}

func (o AuthPolicyOutput) ToAuthPolicyOutputWithContext(ctx context.Context) AuthPolicyOutput {
	return o
}

// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::VpcLattice::AuthPolicy` for more information about the expected schema for this property.
func (o AuthPolicyOutput) Policy() pulumi.AnyOutput {
	return o.ApplyT(func(v *AuthPolicy) pulumi.AnyOutput { return v.Policy }).(pulumi.AnyOutput)
}

func (o AuthPolicyOutput) ResourceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthPolicy) pulumi.StringOutput { return v.ResourceIdentifier }).(pulumi.StringOutput)
}

func (o AuthPolicyOutput) State() AuthPolicyStateEnumOutput {
	return o.ApplyT(func(v *AuthPolicy) AuthPolicyStateEnumOutput { return v.State }).(AuthPolicyStateEnumOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthPolicyInput)(nil)).Elem(), &AuthPolicy{})
	pulumi.RegisterOutputType(AuthPolicyOutput{})
}
