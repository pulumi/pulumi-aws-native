// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Associates a VPC with a service network.
func LookupServiceNetworkVpcAssociation(ctx *pulumi.Context, args *LookupServiceNetworkVpcAssociationArgs, opts ...pulumi.InvokeOption) (*LookupServiceNetworkVpcAssociationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceNetworkVpcAssociationResult
	err := ctx.Invoke("aws-native:vpclattice:getServiceNetworkVpcAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServiceNetworkVpcAssociationArgs struct {
	// The Amazon Resource Name (ARN) of the association between the service network and the VPC.
	Arn string `pulumi:"arn"`
}

type LookupServiceNetworkVpcAssociationResult struct {
	// The Amazon Resource Name (ARN) of the association between the service network and the VPC.
	Arn *string `pulumi:"arn"`
	// The date and time that the association was created, specified in ISO-8601 format.
	CreatedAt *string `pulumi:"createdAt"`
	// The ID of the specified association between the service network and the VPC.
	Id *string `pulumi:"id"`
	// The IDs of the security groups. Security groups aren't added by default. You can add a security group to apply network level controls to control which resources in a VPC are allowed to access the service network and its services. For more information, see [Control traffic to resources using security groups](https://docs.aws.amazon.com//vpc/latest/userguide/VPC_SecurityGroups.html) in the *Amazon VPC User Guide* .
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The Amazon Resource Name (ARN) of the service network.
	ServiceNetworkArn *string `pulumi:"serviceNetworkArn"`
	// The ID of the service network.
	ServiceNetworkId *string `pulumi:"serviceNetworkId"`
	// The name of the service network.
	ServiceNetworkName *string `pulumi:"serviceNetworkName"`
	// The status of the association.
	Status *ServiceNetworkVpcAssociationStatus `pulumi:"status"`
	// Specifies a tag for a VPC association.
	Tags []aws.Tag `pulumi:"tags"`
	// The ID of the VPC.
	VpcId *string `pulumi:"vpcId"`
}

func LookupServiceNetworkVpcAssociationOutput(ctx *pulumi.Context, args LookupServiceNetworkVpcAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupServiceNetworkVpcAssociationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceNetworkVpcAssociationResult, error) {
			args := v.(LookupServiceNetworkVpcAssociationArgs)
			r, err := LookupServiceNetworkVpcAssociation(ctx, &args, opts...)
			var s LookupServiceNetworkVpcAssociationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceNetworkVpcAssociationResultOutput)
}

type LookupServiceNetworkVpcAssociationOutputArgs struct {
	// The Amazon Resource Name (ARN) of the association between the service network and the VPC.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupServiceNetworkVpcAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceNetworkVpcAssociationArgs)(nil)).Elem()
}

type LookupServiceNetworkVpcAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupServiceNetworkVpcAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceNetworkVpcAssociationResult)(nil)).Elem()
}

func (o LookupServiceNetworkVpcAssociationResultOutput) ToLookupServiceNetworkVpcAssociationResultOutput() LookupServiceNetworkVpcAssociationResultOutput {
	return o
}

func (o LookupServiceNetworkVpcAssociationResultOutput) ToLookupServiceNetworkVpcAssociationResultOutputWithContext(ctx context.Context) LookupServiceNetworkVpcAssociationResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the association between the service network and the VPC.
func (o LookupServiceNetworkVpcAssociationResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceNetworkVpcAssociationResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The date and time that the association was created, specified in ISO-8601 format.
func (o LookupServiceNetworkVpcAssociationResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceNetworkVpcAssociationResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The ID of the specified association between the service network and the VPC.
func (o LookupServiceNetworkVpcAssociationResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceNetworkVpcAssociationResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IDs of the security groups. Security groups aren't added by default. You can add a security group to apply network level controls to control which resources in a VPC are allowed to access the service network and its services. For more information, see [Control traffic to resources using security groups](https://docs.aws.amazon.com//vpc/latest/userguide/VPC_SecurityGroups.html) in the *Amazon VPC User Guide* .
func (o LookupServiceNetworkVpcAssociationResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupServiceNetworkVpcAssociationResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) of the service network.
func (o LookupServiceNetworkVpcAssociationResultOutput) ServiceNetworkArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceNetworkVpcAssociationResult) *string { return v.ServiceNetworkArn }).(pulumi.StringPtrOutput)
}

// The ID of the service network.
func (o LookupServiceNetworkVpcAssociationResultOutput) ServiceNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceNetworkVpcAssociationResult) *string { return v.ServiceNetworkId }).(pulumi.StringPtrOutput)
}

// The name of the service network.
func (o LookupServiceNetworkVpcAssociationResultOutput) ServiceNetworkName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceNetworkVpcAssociationResult) *string { return v.ServiceNetworkName }).(pulumi.StringPtrOutput)
}

// The status of the association.
func (o LookupServiceNetworkVpcAssociationResultOutput) Status() ServiceNetworkVpcAssociationStatusPtrOutput {
	return o.ApplyT(func(v LookupServiceNetworkVpcAssociationResult) *ServiceNetworkVpcAssociationStatus { return v.Status }).(ServiceNetworkVpcAssociationStatusPtrOutput)
}

// Specifies a tag for a VPC association.
func (o LookupServiceNetworkVpcAssociationResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupServiceNetworkVpcAssociationResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The ID of the VPC.
func (o LookupServiceNetworkVpcAssociationResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceNetworkVpcAssociationResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceNetworkVpcAssociationResultOutput{})
}
