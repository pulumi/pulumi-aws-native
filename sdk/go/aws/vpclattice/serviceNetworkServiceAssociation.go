// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Associates a service with a service network.
type ServiceNetworkServiceAssociation struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the association between the service network and the service.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The ID of the of the association between the service network and the service.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The date and time that the association was created, specified in ISO-8601 format.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The DNS information.
	DnsEntry ServiceNetworkServiceAssociationDnsEntryPtrOutput `pulumi:"dnsEntry"`
	// The Amazon Resource Name (ARN) of the service.
	ServiceArn pulumi.StringOutput `pulumi:"serviceArn"`
	// The ID of the service.
	ServiceId pulumi.StringOutput `pulumi:"serviceId"`
	// The ID or Amazon Resource Name (ARN) of the service.
	ServiceIdentifier pulumi.StringPtrOutput `pulumi:"serviceIdentifier"`
	// The name of the service.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// The Amazon Resource Name (ARN) of the service network
	ServiceNetworkArn pulumi.StringOutput `pulumi:"serviceNetworkArn"`
	// The ID of the service network.
	ServiceNetworkId pulumi.StringOutput `pulumi:"serviceNetworkId"`
	// The ID or Amazon Resource Name (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
	ServiceNetworkIdentifier pulumi.StringPtrOutput `pulumi:"serviceNetworkIdentifier"`
	// The name of the service network.
	ServiceNetworkName pulumi.StringOutput `pulumi:"serviceNetworkName"`
	// The status of the association between the service network and the service.
	Status ServiceNetworkServiceAssociationStatusOutput `pulumi:"status"`
	// The tags for the association.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewServiceNetworkServiceAssociation registers a new resource with the given unique name, arguments, and options.
func NewServiceNetworkServiceAssociation(ctx *pulumi.Context,
	name string, args *ServiceNetworkServiceAssociationArgs, opts ...pulumi.ResourceOption) (*ServiceNetworkServiceAssociation, error) {
	if args == nil {
		args = &ServiceNetworkServiceAssociationArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"serviceIdentifier",
		"serviceNetworkIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceNetworkServiceAssociation
	err := ctx.RegisterResource("aws-native:vpclattice:ServiceNetworkServiceAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceNetworkServiceAssociation gets an existing ServiceNetworkServiceAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceNetworkServiceAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceNetworkServiceAssociationState, opts ...pulumi.ResourceOption) (*ServiceNetworkServiceAssociation, error) {
	var resource ServiceNetworkServiceAssociation
	err := ctx.ReadResource("aws-native:vpclattice:ServiceNetworkServiceAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceNetworkServiceAssociation resources.
type serviceNetworkServiceAssociationState struct {
}

type ServiceNetworkServiceAssociationState struct {
}

func (ServiceNetworkServiceAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceNetworkServiceAssociationState)(nil)).Elem()
}

type serviceNetworkServiceAssociationArgs struct {
	// The DNS information.
	DnsEntry *ServiceNetworkServiceAssociationDnsEntry `pulumi:"dnsEntry"`
	// The ID or Amazon Resource Name (ARN) of the service.
	ServiceIdentifier *string `pulumi:"serviceIdentifier"`
	// The ID or Amazon Resource Name (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
	ServiceNetworkIdentifier *string `pulumi:"serviceNetworkIdentifier"`
	// The tags for the association.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ServiceNetworkServiceAssociation resource.
type ServiceNetworkServiceAssociationArgs struct {
	// The DNS information.
	DnsEntry ServiceNetworkServiceAssociationDnsEntryPtrInput
	// The ID or Amazon Resource Name (ARN) of the service.
	ServiceIdentifier pulumi.StringPtrInput
	// The ID or Amazon Resource Name (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
	ServiceNetworkIdentifier pulumi.StringPtrInput
	// The tags for the association.
	Tags aws.TagArrayInput
}

func (ServiceNetworkServiceAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceNetworkServiceAssociationArgs)(nil)).Elem()
}

type ServiceNetworkServiceAssociationInput interface {
	pulumi.Input

	ToServiceNetworkServiceAssociationOutput() ServiceNetworkServiceAssociationOutput
	ToServiceNetworkServiceAssociationOutputWithContext(ctx context.Context) ServiceNetworkServiceAssociationOutput
}

func (*ServiceNetworkServiceAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkServiceAssociation)(nil)).Elem()
}

func (i *ServiceNetworkServiceAssociation) ToServiceNetworkServiceAssociationOutput() ServiceNetworkServiceAssociationOutput {
	return i.ToServiceNetworkServiceAssociationOutputWithContext(context.Background())
}

func (i *ServiceNetworkServiceAssociation) ToServiceNetworkServiceAssociationOutputWithContext(ctx context.Context) ServiceNetworkServiceAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkServiceAssociationOutput)
}

type ServiceNetworkServiceAssociationOutput struct{ *pulumi.OutputState }

func (ServiceNetworkServiceAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkServiceAssociation)(nil)).Elem()
}

func (o ServiceNetworkServiceAssociationOutput) ToServiceNetworkServiceAssociationOutput() ServiceNetworkServiceAssociationOutput {
	return o
}

func (o ServiceNetworkServiceAssociationOutput) ToServiceNetworkServiceAssociationOutputWithContext(ctx context.Context) ServiceNetworkServiceAssociationOutput {
	return o
}

// The Amazon Resource Name (ARN) of the association between the service network and the service.
func (o ServiceNetworkServiceAssociationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The ID of the of the association between the service network and the service.
func (o ServiceNetworkServiceAssociationOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The date and time that the association was created, specified in ISO-8601 format.
func (o ServiceNetworkServiceAssociationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The DNS information.
func (o ServiceNetworkServiceAssociationOutput) DnsEntry() ServiceNetworkServiceAssociationDnsEntryPtrOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) ServiceNetworkServiceAssociationDnsEntryPtrOutput {
		return v.DnsEntry
	}).(ServiceNetworkServiceAssociationDnsEntryPtrOutput)
}

// The Amazon Resource Name (ARN) of the service.
func (o ServiceNetworkServiceAssociationOutput) ServiceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) pulumi.StringOutput { return v.ServiceArn }).(pulumi.StringOutput)
}

// The ID of the service.
func (o ServiceNetworkServiceAssociationOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

// The ID or Amazon Resource Name (ARN) of the service.
func (o ServiceNetworkServiceAssociationOutput) ServiceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) pulumi.StringPtrOutput { return v.ServiceIdentifier }).(pulumi.StringPtrOutput)
}

// The name of the service.
func (o ServiceNetworkServiceAssociationOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the service network
func (o ServiceNetworkServiceAssociationOutput) ServiceNetworkArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) pulumi.StringOutput { return v.ServiceNetworkArn }).(pulumi.StringOutput)
}

// The ID of the service network.
func (o ServiceNetworkServiceAssociationOutput) ServiceNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) pulumi.StringOutput { return v.ServiceNetworkId }).(pulumi.StringOutput)
}

// The ID or Amazon Resource Name (ARN) of the service network. You must use the ARN if the resources specified in the operation are in different accounts.
func (o ServiceNetworkServiceAssociationOutput) ServiceNetworkIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) pulumi.StringPtrOutput { return v.ServiceNetworkIdentifier }).(pulumi.StringPtrOutput)
}

// The name of the service network.
func (o ServiceNetworkServiceAssociationOutput) ServiceNetworkName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) pulumi.StringOutput { return v.ServiceNetworkName }).(pulumi.StringOutput)
}

// The status of the association between the service network and the service.
func (o ServiceNetworkServiceAssociationOutput) Status() ServiceNetworkServiceAssociationStatusOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) ServiceNetworkServiceAssociationStatusOutput {
		return v.Status
	}).(ServiceNetworkServiceAssociationStatusOutput)
}

// The tags for the association.
func (o ServiceNetworkServiceAssociationOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ServiceNetworkServiceAssociation) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkServiceAssociationInput)(nil)).Elem(), &ServiceNetworkServiceAssociation{})
	pulumi.RegisterOutputType(ServiceNetworkServiceAssociationOutput{})
}
