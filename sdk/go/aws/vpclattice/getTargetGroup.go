// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A target group is a collection of targets, or compute resources, that run your application or service. A target group can only be used by a single service.
func LookupTargetGroup(ctx *pulumi.Context, args *LookupTargetGroupArgs, opts ...pulumi.InvokeOption) (*LookupTargetGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTargetGroupResult
	err := ctx.Invoke("aws-native:vpclattice:getTargetGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTargetGroupArgs struct {
	// The Amazon Resource Name (ARN) of the target group.
	Arn string `pulumi:"arn"`
}

type LookupTargetGroupResult struct {
	// The Amazon Resource Name (ARN) of the target group.
	Arn *string `pulumi:"arn"`
	// The target group configuration.
	Config *TargetGroupConfig `pulumi:"config"`
	// The date and time that the target group was created, specified in ISO-8601 format.
	CreatedAt *string `pulumi:"createdAt"`
	// The ID of the target group.
	Id *string `pulumi:"id"`
	// The date and time that the target group was last updated, specified in ISO-8601 format.
	LastUpdatedAt *string `pulumi:"lastUpdatedAt"`
	// The operation's status. You can retry the operation if the status is `CREATE_FAILED` . However, if you retry it while the status is `CREATE_IN_PROGRESS` , there is no change in the status.
	Status *TargetGroupStatus `pulumi:"status"`
	// The tags for the target group.
	Tags []aws.Tag `pulumi:"tags"`
	// Describes a target.
	Targets []TargetGroupTarget `pulumi:"targets"`
}

func LookupTargetGroupOutput(ctx *pulumi.Context, args LookupTargetGroupOutputArgs, opts ...pulumi.InvokeOption) LookupTargetGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTargetGroupResultOutput, error) {
			args := v.(LookupTargetGroupArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupTargetGroupResult
			secret, err := ctx.InvokePackageRaw("aws-native:vpclattice:getTargetGroup", args, &rv, "", opts...)
			if err != nil {
				return LookupTargetGroupResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupTargetGroupResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupTargetGroupResultOutput), nil
			}
			return output, nil
		}).(LookupTargetGroupResultOutput)
}

type LookupTargetGroupOutputArgs struct {
	// The Amazon Resource Name (ARN) of the target group.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupTargetGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTargetGroupArgs)(nil)).Elem()
}

type LookupTargetGroupResultOutput struct{ *pulumi.OutputState }

func (LookupTargetGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTargetGroupResult)(nil)).Elem()
}

func (o LookupTargetGroupResultOutput) ToLookupTargetGroupResultOutput() LookupTargetGroupResultOutput {
	return o
}

func (o LookupTargetGroupResultOutput) ToLookupTargetGroupResultOutputWithContext(ctx context.Context) LookupTargetGroupResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the target group.
func (o LookupTargetGroupResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTargetGroupResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The target group configuration.
func (o LookupTargetGroupResultOutput) Config() TargetGroupConfigPtrOutput {
	return o.ApplyT(func(v LookupTargetGroupResult) *TargetGroupConfig { return v.Config }).(TargetGroupConfigPtrOutput)
}

// The date and time that the target group was created, specified in ISO-8601 format.
func (o LookupTargetGroupResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTargetGroupResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The ID of the target group.
func (o LookupTargetGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTargetGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The date and time that the target group was last updated, specified in ISO-8601 format.
func (o LookupTargetGroupResultOutput) LastUpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTargetGroupResult) *string { return v.LastUpdatedAt }).(pulumi.StringPtrOutput)
}

// The operation's status. You can retry the operation if the status is `CREATE_FAILED` . However, if you retry it while the status is `CREATE_IN_PROGRESS` , there is no change in the status.
func (o LookupTargetGroupResultOutput) Status() TargetGroupStatusPtrOutput {
	return o.ApplyT(func(v LookupTargetGroupResult) *TargetGroupStatus { return v.Status }).(TargetGroupStatusPtrOutput)
}

// The tags for the target group.
func (o LookupTargetGroupResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupTargetGroupResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// Describes a target.
func (o LookupTargetGroupResultOutput) Targets() TargetGroupTargetArrayOutput {
	return o.ApplyT(func(v LookupTargetGroupResult) []TargetGroupTarget { return v.Targets }).(TargetGroupTargetArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTargetGroupResultOutput{})
}
