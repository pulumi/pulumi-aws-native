// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Enables access logs to be sent to Amazon CloudWatch, Amazon S3, and Amazon Kinesis Data Firehose. The service network owner can use the access logs to audit the services in the network. The service network owner will only see access logs from clients and services that are associated with their service network. Access log entries represent traffic originated from VPCs associated with that network.
type AccessLogSubscription struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the access log subscription.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The ID of the access log subscription.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The Amazon Resource Name (ARN) of the destination. The supported destination types are CloudWatch Log groups, Kinesis Data Firehose delivery streams, and Amazon S3 buckets.
	DestinationArn pulumi.StringOutput `pulumi:"destinationArn"`
	// The Amazon Resource Name (ARN) of the access log subscription.
	ResourceArn pulumi.StringOutput `pulumi:"resourceArn"`
	// The ID of the service network or service.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// The ID or Amazon Resource Name (ARN) of the service network or service.
	ResourceIdentifier    pulumi.StringPtrOutput                              `pulumi:"resourceIdentifier"`
	ServiceNetworkLogType AccessLogSubscriptionServiceNetworkLogTypePtrOutput `pulumi:"serviceNetworkLogType"`
	// The tags for the access log subscription.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewAccessLogSubscription registers a new resource with the given unique name, arguments, and options.
func NewAccessLogSubscription(ctx *pulumi.Context,
	name string, args *AccessLogSubscriptionArgs, opts ...pulumi.ResourceOption) (*AccessLogSubscription, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationArn == nil {
		return nil, errors.New("invalid value for required argument 'DestinationArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"resourceIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccessLogSubscription
	err := ctx.RegisterResource("aws-native:vpclattice:AccessLogSubscription", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessLogSubscription gets an existing AccessLogSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessLogSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessLogSubscriptionState, opts ...pulumi.ResourceOption) (*AccessLogSubscription, error) {
	var resource AccessLogSubscription
	err := ctx.ReadResource("aws-native:vpclattice:AccessLogSubscription", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessLogSubscription resources.
type accessLogSubscriptionState struct {
}

type AccessLogSubscriptionState struct {
}

func (AccessLogSubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessLogSubscriptionState)(nil)).Elem()
}

type accessLogSubscriptionArgs struct {
	// The Amazon Resource Name (ARN) of the destination. The supported destination types are CloudWatch Log groups, Kinesis Data Firehose delivery streams, and Amazon S3 buckets.
	DestinationArn string `pulumi:"destinationArn"`
	// The ID or Amazon Resource Name (ARN) of the service network or service.
	ResourceIdentifier    *string                                     `pulumi:"resourceIdentifier"`
	ServiceNetworkLogType *AccessLogSubscriptionServiceNetworkLogType `pulumi:"serviceNetworkLogType"`
	// The tags for the access log subscription.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a AccessLogSubscription resource.
type AccessLogSubscriptionArgs struct {
	// The Amazon Resource Name (ARN) of the destination. The supported destination types are CloudWatch Log groups, Kinesis Data Firehose delivery streams, and Amazon S3 buckets.
	DestinationArn pulumi.StringInput
	// The ID or Amazon Resource Name (ARN) of the service network or service.
	ResourceIdentifier    pulumi.StringPtrInput
	ServiceNetworkLogType AccessLogSubscriptionServiceNetworkLogTypePtrInput
	// The tags for the access log subscription.
	Tags aws.TagArrayInput
}

func (AccessLogSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessLogSubscriptionArgs)(nil)).Elem()
}

type AccessLogSubscriptionInput interface {
	pulumi.Input

	ToAccessLogSubscriptionOutput() AccessLogSubscriptionOutput
	ToAccessLogSubscriptionOutputWithContext(ctx context.Context) AccessLogSubscriptionOutput
}

func (*AccessLogSubscription) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessLogSubscription)(nil)).Elem()
}

func (i *AccessLogSubscription) ToAccessLogSubscriptionOutput() AccessLogSubscriptionOutput {
	return i.ToAccessLogSubscriptionOutputWithContext(context.Background())
}

func (i *AccessLogSubscription) ToAccessLogSubscriptionOutputWithContext(ctx context.Context) AccessLogSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessLogSubscriptionOutput)
}

type AccessLogSubscriptionOutput struct{ *pulumi.OutputState }

func (AccessLogSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessLogSubscription)(nil)).Elem()
}

func (o AccessLogSubscriptionOutput) ToAccessLogSubscriptionOutput() AccessLogSubscriptionOutput {
	return o
}

func (o AccessLogSubscriptionOutput) ToAccessLogSubscriptionOutputWithContext(ctx context.Context) AccessLogSubscriptionOutput {
	return o
}

// The Amazon Resource Name (ARN) of the access log subscription.
func (o AccessLogSubscriptionOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessLogSubscription) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The ID of the access log subscription.
func (o AccessLogSubscriptionOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessLogSubscription) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the destination. The supported destination types are CloudWatch Log groups, Kinesis Data Firehose delivery streams, and Amazon S3 buckets.
func (o AccessLogSubscriptionOutput) DestinationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessLogSubscription) pulumi.StringOutput { return v.DestinationArn }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the access log subscription.
func (o AccessLogSubscriptionOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessLogSubscription) pulumi.StringOutput { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ID of the service network or service.
func (o AccessLogSubscriptionOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *AccessLogSubscription) pulumi.StringOutput { return v.ResourceId }).(pulumi.StringOutput)
}

// The ID or Amazon Resource Name (ARN) of the service network or service.
func (o AccessLogSubscriptionOutput) ResourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessLogSubscription) pulumi.StringPtrOutput { return v.ResourceIdentifier }).(pulumi.StringPtrOutput)
}

func (o AccessLogSubscriptionOutput) ServiceNetworkLogType() AccessLogSubscriptionServiceNetworkLogTypePtrOutput {
	return o.ApplyT(func(v *AccessLogSubscription) AccessLogSubscriptionServiceNetworkLogTypePtrOutput {
		return v.ServiceNetworkLogType
	}).(AccessLogSubscriptionServiceNetworkLogTypePtrOutput)
}

// The tags for the access log subscription.
func (o AccessLogSubscriptionOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *AccessLogSubscription) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessLogSubscriptionInput)(nil)).Elem(), &AccessLogSubscription{})
	pulumi.RegisterOutputType(AccessLogSubscriptionOutput{})
}
