// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A service network is a logical boundary for a collection of services. You can associate services and VPCs with a service network.
type ServiceNetwork struct {
	pulumi.CustomResourceState

	Arn           pulumi.StringOutput             `pulumi:"arn"`
	AuthType      ServiceNetworkAuthTypePtrOutput `pulumi:"authType"`
	CreatedAt     pulumi.StringOutput             `pulumi:"createdAt"`
	LastUpdatedAt pulumi.StringOutput             `pulumi:"lastUpdatedAt"`
	Name          pulumi.StringPtrOutput          `pulumi:"name"`
	Tags          aws.TagArrayOutput              `pulumi:"tags"`
}

// NewServiceNetwork registers a new resource with the given unique name, arguments, and options.
func NewServiceNetwork(ctx *pulumi.Context,
	name string, args *ServiceNetworkArgs, opts ...pulumi.ResourceOption) (*ServiceNetwork, error) {
	if args == nil {
		args = &ServiceNetworkArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceNetwork
	err := ctx.RegisterResource("aws-native:vpclattice:ServiceNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceNetwork gets an existing ServiceNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceNetworkState, opts ...pulumi.ResourceOption) (*ServiceNetwork, error) {
	var resource ServiceNetwork
	err := ctx.ReadResource("aws-native:vpclattice:ServiceNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceNetwork resources.
type serviceNetworkState struct {
}

type ServiceNetworkState struct {
}

func (ServiceNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceNetworkState)(nil)).Elem()
}

type serviceNetworkArgs struct {
	AuthType *ServiceNetworkAuthType `pulumi:"authType"`
	Name     *string                 `pulumi:"name"`
	Tags     []aws.Tag               `pulumi:"tags"`
}

// The set of arguments for constructing a ServiceNetwork resource.
type ServiceNetworkArgs struct {
	AuthType ServiceNetworkAuthTypePtrInput
	Name     pulumi.StringPtrInput
	Tags     aws.TagArrayInput
}

func (ServiceNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceNetworkArgs)(nil)).Elem()
}

type ServiceNetworkInput interface {
	pulumi.Input

	ToServiceNetworkOutput() ServiceNetworkOutput
	ToServiceNetworkOutputWithContext(ctx context.Context) ServiceNetworkOutput
}

func (*ServiceNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetwork)(nil)).Elem()
}

func (i *ServiceNetwork) ToServiceNetworkOutput() ServiceNetworkOutput {
	return i.ToServiceNetworkOutputWithContext(context.Background())
}

func (i *ServiceNetwork) ToServiceNetworkOutputWithContext(ctx context.Context) ServiceNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkOutput)
}

type ServiceNetworkOutput struct{ *pulumi.OutputState }

func (ServiceNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetwork)(nil)).Elem()
}

func (o ServiceNetworkOutput) ToServiceNetworkOutput() ServiceNetworkOutput {
	return o
}

func (o ServiceNetworkOutput) ToServiceNetworkOutputWithContext(ctx context.Context) ServiceNetworkOutput {
	return o
}

func (o ServiceNetworkOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetwork) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ServiceNetworkOutput) AuthType() ServiceNetworkAuthTypePtrOutput {
	return o.ApplyT(func(v *ServiceNetwork) ServiceNetworkAuthTypePtrOutput { return v.AuthType }).(ServiceNetworkAuthTypePtrOutput)
}

func (o ServiceNetworkOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetwork) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ServiceNetworkOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceNetwork) pulumi.StringOutput { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

func (o ServiceNetworkOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNetwork) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ServiceNetworkOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ServiceNetwork) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkInput)(nil)).Elem(), &ServiceNetwork{})
	pulumi.RegisterOutputType(ServiceNetworkOutput{})
}
