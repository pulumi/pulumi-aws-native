// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VpcLattice ResourceConfiguration CFN resource
type ResourceConfiguration struct {
	pulumi.CustomResourceState

	AllowAssociationToSharableServiceNetwork pulumi.BoolPtrOutput `pulumi:"allowAssociationToSharableServiceNetwork"`
	// The Amazon Resource Name (ARN) of the resource configuration.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The ID of the resource configuration.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The name of the resource configuration.
	Name                            pulumi.StringPtrOutput                     `pulumi:"name"`
	PortRanges                      pulumi.StringArrayOutput                   `pulumi:"portRanges"`
	ProtocolType                    ResourceConfigurationProtocolTypePtrOutput `pulumi:"protocolType"`
	ResourceConfigurationAuthType   ResourceConfigurationAuthTypePtrOutput     `pulumi:"resourceConfigurationAuthType"`
	ResourceConfigurationDefinition pulumi.AnyOutput                           `pulumi:"resourceConfigurationDefinition"`
	// The ID of the group resource configuration.
	ResourceConfigurationGroupId pulumi.StringPtrOutput             `pulumi:"resourceConfigurationGroupId"`
	ResourceConfigurationType    ResourceConfigurationTypePtrOutput `pulumi:"resourceConfigurationType"`
	// The ID of the resource gateway.
	ResourceGatewayId pulumi.StringPtrOutput `pulumi:"resourceGatewayId"`
	Tags              aws.TagArrayOutput     `pulumi:"tags"`
}

// NewResourceConfiguration registers a new resource with the given unique name, arguments, and options.
func NewResourceConfiguration(ctx *pulumi.Context,
	name string, args *ResourceConfigurationArgs, opts ...pulumi.ResourceOption) (*ResourceConfiguration, error) {
	if args == nil {
		args = &ResourceConfigurationArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"protocolType",
		"resourceConfigurationAuthType",
		"resourceConfigurationType",
		"resourceGatewayId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResourceConfiguration
	err := ctx.RegisterResource("aws-native:vpclattice:ResourceConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceConfiguration gets an existing ResourceConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceConfigurationState, opts ...pulumi.ResourceOption) (*ResourceConfiguration, error) {
	var resource ResourceConfiguration
	err := ctx.ReadResource("aws-native:vpclattice:ResourceConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceConfiguration resources.
type resourceConfigurationState struct {
}

type ResourceConfigurationState struct {
}

func (ResourceConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceConfigurationState)(nil)).Elem()
}

type resourceConfigurationArgs struct {
	AllowAssociationToSharableServiceNetwork *bool `pulumi:"allowAssociationToSharableServiceNetwork"`
	// The name of the resource configuration.
	Name                            *string                            `pulumi:"name"`
	PortRanges                      []string                           `pulumi:"portRanges"`
	ProtocolType                    *ResourceConfigurationProtocolType `pulumi:"protocolType"`
	ResourceConfigurationAuthType   *ResourceConfigurationAuthType     `pulumi:"resourceConfigurationAuthType"`
	ResourceConfigurationDefinition interface{}                        `pulumi:"resourceConfigurationDefinition"`
	// The ID of the group resource configuration.
	ResourceConfigurationGroupId *string                    `pulumi:"resourceConfigurationGroupId"`
	ResourceConfigurationType    *ResourceConfigurationType `pulumi:"resourceConfigurationType"`
	// The ID of the resource gateway.
	ResourceGatewayId *string   `pulumi:"resourceGatewayId"`
	Tags              []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ResourceConfiguration resource.
type ResourceConfigurationArgs struct {
	AllowAssociationToSharableServiceNetwork pulumi.BoolPtrInput
	// The name of the resource configuration.
	Name                            pulumi.StringPtrInput
	PortRanges                      pulumi.StringArrayInput
	ProtocolType                    ResourceConfigurationProtocolTypePtrInput
	ResourceConfigurationAuthType   ResourceConfigurationAuthTypePtrInput
	ResourceConfigurationDefinition pulumi.Input
	// The ID of the group resource configuration.
	ResourceConfigurationGroupId pulumi.StringPtrInput
	ResourceConfigurationType    ResourceConfigurationTypePtrInput
	// The ID of the resource gateway.
	ResourceGatewayId pulumi.StringPtrInput
	Tags              aws.TagArrayInput
}

func (ResourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceConfigurationArgs)(nil)).Elem()
}

type ResourceConfigurationInput interface {
	pulumi.Input

	ToResourceConfigurationOutput() ResourceConfigurationOutput
	ToResourceConfigurationOutputWithContext(ctx context.Context) ResourceConfigurationOutput
}

func (*ResourceConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceConfiguration)(nil)).Elem()
}

func (i *ResourceConfiguration) ToResourceConfigurationOutput() ResourceConfigurationOutput {
	return i.ToResourceConfigurationOutputWithContext(context.Background())
}

func (i *ResourceConfiguration) ToResourceConfigurationOutputWithContext(ctx context.Context) ResourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceConfigurationOutput)
}

type ResourceConfigurationOutput struct{ *pulumi.OutputState }

func (ResourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceConfiguration)(nil)).Elem()
}

func (o ResourceConfigurationOutput) ToResourceConfigurationOutput() ResourceConfigurationOutput {
	return o
}

func (o ResourceConfigurationOutput) ToResourceConfigurationOutputWithContext(ctx context.Context) ResourceConfigurationOutput {
	return o
}

func (o ResourceConfigurationOutput) AllowAssociationToSharableServiceNetwork() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceConfiguration) pulumi.BoolPtrOutput { return v.AllowAssociationToSharableServiceNetwork }).(pulumi.BoolPtrOutput)
}

// The Amazon Resource Name (ARN) of the resource configuration.
func (o ResourceConfigurationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceConfiguration) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The ID of the resource configuration.
func (o ResourceConfigurationOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceConfiguration) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The name of the resource configuration.
func (o ResourceConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceConfiguration) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ResourceConfigurationOutput) PortRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceConfiguration) pulumi.StringArrayOutput { return v.PortRanges }).(pulumi.StringArrayOutput)
}

func (o ResourceConfigurationOutput) ProtocolType() ResourceConfigurationProtocolTypePtrOutput {
	return o.ApplyT(func(v *ResourceConfiguration) ResourceConfigurationProtocolTypePtrOutput { return v.ProtocolType }).(ResourceConfigurationProtocolTypePtrOutput)
}

func (o ResourceConfigurationOutput) ResourceConfigurationAuthType() ResourceConfigurationAuthTypePtrOutput {
	return o.ApplyT(func(v *ResourceConfiguration) ResourceConfigurationAuthTypePtrOutput {
		return v.ResourceConfigurationAuthType
	}).(ResourceConfigurationAuthTypePtrOutput)
}

func (o ResourceConfigurationOutput) ResourceConfigurationDefinition() pulumi.AnyOutput {
	return o.ApplyT(func(v *ResourceConfiguration) pulumi.AnyOutput { return v.ResourceConfigurationDefinition }).(pulumi.AnyOutput)
}

// The ID of the group resource configuration.
func (o ResourceConfigurationOutput) ResourceConfigurationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceConfiguration) pulumi.StringPtrOutput { return v.ResourceConfigurationGroupId }).(pulumi.StringPtrOutput)
}

func (o ResourceConfigurationOutput) ResourceConfigurationType() ResourceConfigurationTypePtrOutput {
	return o.ApplyT(func(v *ResourceConfiguration) ResourceConfigurationTypePtrOutput { return v.ResourceConfigurationType }).(ResourceConfigurationTypePtrOutput)
}

// The ID of the resource gateway.
func (o ResourceConfigurationOutput) ResourceGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceConfiguration) pulumi.StringPtrOutput { return v.ResourceGatewayId }).(pulumi.StringPtrOutput)
}

func (o ResourceConfigurationOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ResourceConfiguration) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceConfigurationInput)(nil)).Elem(), &ResourceConfiguration{})
	pulumi.RegisterOutputType(ResourceConfigurationOutput{})
}
