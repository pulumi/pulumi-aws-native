// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a resource gateway for a service.
type ResourceGateway struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the resource gateway.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The ID of the resource gateway.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The type of IP address used by the resource gateway.
	IpAddressType ResourceGatewayIpAddressTypePtrOutput `pulumi:"ipAddressType"`
	// The number of IPv4 addresses to allocate per ENI for the resource gateway
	Ipv4AddressesPerEni pulumi.IntPtrOutput `pulumi:"ipv4AddressesPerEni"`
	// The name of the resource gateway.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of one or more security groups to associate with the endpoint network interface.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// The ID of one or more subnets in which to create an endpoint network interface.
	SubnetIds pulumi.StringArrayOutput `pulumi:"subnetIds"`
	// The tags for the resource gateway.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The ID of the VPC for the resource gateway.
	VpcIdentifier pulumi.StringOutput `pulumi:"vpcIdentifier"`
}

// NewResourceGateway registers a new resource with the given unique name, arguments, and options.
func NewResourceGateway(ctx *pulumi.Context,
	name string, args *ResourceGatewayArgs, opts ...pulumi.ResourceOption) (*ResourceGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	if args.VpcIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'VpcIdentifier'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"ipAddressType",
		"name",
		"subnetIds[*]",
		"vpcIdentifier",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResourceGateway
	err := ctx.RegisterResource("aws-native:vpclattice:ResourceGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceGateway gets an existing ResourceGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceGatewayState, opts ...pulumi.ResourceOption) (*ResourceGateway, error) {
	var resource ResourceGateway
	err := ctx.ReadResource("aws-native:vpclattice:ResourceGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceGateway resources.
type resourceGatewayState struct {
}

type ResourceGatewayState struct {
}

func (ResourceGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceGatewayState)(nil)).Elem()
}

type resourceGatewayArgs struct {
	// The type of IP address used by the resource gateway.
	IpAddressType *ResourceGatewayIpAddressType `pulumi:"ipAddressType"`
	// The number of IPv4 addresses to allocate per ENI for the resource gateway
	Ipv4AddressesPerEni *int `pulumi:"ipv4AddressesPerEni"`
	// The name of the resource gateway.
	Name *string `pulumi:"name"`
	// The ID of one or more security groups to associate with the endpoint network interface.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of one or more subnets in which to create an endpoint network interface.
	SubnetIds []string `pulumi:"subnetIds"`
	// The tags for the resource gateway.
	Tags []aws.Tag `pulumi:"tags"`
	// The ID of the VPC for the resource gateway.
	VpcIdentifier string `pulumi:"vpcIdentifier"`
}

// The set of arguments for constructing a ResourceGateway resource.
type ResourceGatewayArgs struct {
	// The type of IP address used by the resource gateway.
	IpAddressType ResourceGatewayIpAddressTypePtrInput
	// The number of IPv4 addresses to allocate per ENI for the resource gateway
	Ipv4AddressesPerEni pulumi.IntPtrInput
	// The name of the resource gateway.
	Name pulumi.StringPtrInput
	// The ID of one or more security groups to associate with the endpoint network interface.
	SecurityGroupIds pulumi.StringArrayInput
	// The ID of one or more subnets in which to create an endpoint network interface.
	SubnetIds pulumi.StringArrayInput
	// The tags for the resource gateway.
	Tags aws.TagArrayInput
	// The ID of the VPC for the resource gateway.
	VpcIdentifier pulumi.StringInput
}

func (ResourceGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceGatewayArgs)(nil)).Elem()
}

type ResourceGatewayInput interface {
	pulumi.Input

	ToResourceGatewayOutput() ResourceGatewayOutput
	ToResourceGatewayOutputWithContext(ctx context.Context) ResourceGatewayOutput
}

func (*ResourceGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGateway)(nil)).Elem()
}

func (i *ResourceGateway) ToResourceGatewayOutput() ResourceGatewayOutput {
	return i.ToResourceGatewayOutputWithContext(context.Background())
}

func (i *ResourceGateway) ToResourceGatewayOutputWithContext(ctx context.Context) ResourceGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGatewayOutput)
}

type ResourceGatewayOutput struct{ *pulumi.OutputState }

func (ResourceGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGateway)(nil)).Elem()
}

func (o ResourceGatewayOutput) ToResourceGatewayOutput() ResourceGatewayOutput {
	return o
}

func (o ResourceGatewayOutput) ToResourceGatewayOutputWithContext(ctx context.Context) ResourceGatewayOutput {
	return o
}

// The Amazon Resource Name (ARN) of the resource gateway.
func (o ResourceGatewayOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceGateway) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The ID of the resource gateway.
func (o ResourceGatewayOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceGateway) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The type of IP address used by the resource gateway.
func (o ResourceGatewayOutput) IpAddressType() ResourceGatewayIpAddressTypePtrOutput {
	return o.ApplyT(func(v *ResourceGateway) ResourceGatewayIpAddressTypePtrOutput { return v.IpAddressType }).(ResourceGatewayIpAddressTypePtrOutput)
}

// The number of IPv4 addresses to allocate per ENI for the resource gateway
func (o ResourceGatewayOutput) Ipv4AddressesPerEni() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceGateway) pulumi.IntPtrOutput { return v.Ipv4AddressesPerEni }).(pulumi.IntPtrOutput)
}

// The name of the resource gateway.
func (o ResourceGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceGateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of one or more security groups to associate with the endpoint network interface.
func (o ResourceGatewayOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceGateway) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of one or more subnets in which to create an endpoint network interface.
func (o ResourceGatewayOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceGateway) pulumi.StringArrayOutput { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The tags for the resource gateway.
func (o ResourceGatewayOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ResourceGateway) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The ID of the VPC for the resource gateway.
func (o ResourceGatewayOutput) VpcIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceGateway) pulumi.StringOutput { return v.VpcIdentifier }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGatewayInput)(nil)).Elem(), &ResourceGateway{})
	pulumi.RegisterOutputType(ResourceGatewayOutput{})
}
