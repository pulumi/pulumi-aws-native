// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A service is any software application that can run on instances containers, or serverless functions within an account or virtual private cloud (VPC).
type Service struct {
	pulumi.CustomResourceState

	Arn              pulumi.StringOutput      `pulumi:"arn"`
	AuthType         ServiceAuthTypePtrOutput `pulumi:"authType"`
	CertificateArn   pulumi.StringPtrOutput   `pulumi:"certificateArn"`
	CreatedAt        pulumi.StringOutput      `pulumi:"createdAt"`
	CustomDomainName pulumi.StringPtrOutput   `pulumi:"customDomainName"`
	DnsEntry         ServiceDnsEntryPtrOutput `pulumi:"dnsEntry"`
	LastUpdatedAt    pulumi.StringOutput      `pulumi:"lastUpdatedAt"`
	Name             pulumi.StringPtrOutput   `pulumi:"name"`
	Status           ServiceStatusOutput      `pulumi:"status"`
	Tags             ServiceTagArrayOutput    `pulumi:"tags"`
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOption) (*Service, error) {
	if args == nil {
		args = &ServiceArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"customDomainName",
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Service
	err := ctx.RegisterResource("aws-native:vpclattice:Service", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceState, opts ...pulumi.ResourceOption) (*Service, error) {
	var resource Service
	err := ctx.ReadResource("aws-native:vpclattice:Service", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Service resources.
type serviceState struct {
}

type ServiceState struct {
}

func (ServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceState)(nil)).Elem()
}

type serviceArgs struct {
	AuthType         *ServiceAuthType `pulumi:"authType"`
	CertificateArn   *string          `pulumi:"certificateArn"`
	CustomDomainName *string          `pulumi:"customDomainName"`
	DnsEntry         *ServiceDnsEntry `pulumi:"dnsEntry"`
	Name             *string          `pulumi:"name"`
	Tags             []ServiceTag     `pulumi:"tags"`
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	AuthType         ServiceAuthTypePtrInput
	CertificateArn   pulumi.StringPtrInput
	CustomDomainName pulumi.StringPtrInput
	DnsEntry         ServiceDnsEntryPtrInput
	Name             pulumi.StringPtrInput
	Tags             ServiceTagArrayInput
}

func (ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceArgs)(nil)).Elem()
}

type ServiceInput interface {
	pulumi.Input

	ToServiceOutput() ServiceOutput
	ToServiceOutputWithContext(ctx context.Context) ServiceOutput
}

func (*Service) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (i *Service) ToServiceOutput() ServiceOutput {
	return i.ToServiceOutputWithContext(context.Background())
}

func (i *Service) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOutput)
}

type ServiceOutput struct{ *pulumi.OutputState }

func (ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (o ServiceOutput) ToServiceOutput() ServiceOutput {
	return o
}

func (o ServiceOutput) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return o
}

func (o ServiceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ServiceOutput) AuthType() ServiceAuthTypePtrOutput {
	return o.ApplyT(func(v *Service) ServiceAuthTypePtrOutput { return v.AuthType }).(ServiceAuthTypePtrOutput)
}

func (o ServiceOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.StringPtrOutput { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o ServiceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ServiceOutput) CustomDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.StringPtrOutput { return v.CustomDomainName }).(pulumi.StringPtrOutput)
}

func (o ServiceOutput) DnsEntry() ServiceDnsEntryPtrOutput {
	return o.ApplyT(func(v *Service) ServiceDnsEntryPtrOutput { return v.DnsEntry }).(ServiceDnsEntryPtrOutput)
}

func (o ServiceOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

func (o ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ServiceOutput) Status() ServiceStatusOutput {
	return o.ApplyT(func(v *Service) ServiceStatusOutput { return v.Status }).(ServiceStatusOutput)
}

func (o ServiceOutput) Tags() ServiceTagArrayOutput {
	return o.ApplyT(func(v *Service) ServiceTagArrayOutput { return v.Tags }).(ServiceTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInput)(nil)).Elem(), &Service{})
	pulumi.RegisterOutputType(ServiceOutput{})
}
