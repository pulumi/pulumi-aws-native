// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpclattice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A service is any software application that can run on instances containers, or serverless functions within an account or virtual private cloud (VPC).
type Service struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the service.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The type of IAM policy.
	//
	// - `NONE` : The resource does not use an IAM policy. This is the default.
	// - `AWS_IAM` : The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.
	AuthType ServiceAuthTypePtrOutput `pulumi:"authType"`
	// The ID of the service.
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The Amazon Resource Name (ARN) of the certificate.
	CertificateArn pulumi.StringPtrOutput `pulumi:"certificateArn"`
	// The date and time that the service was created, specified in ISO-8601 format.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The custom domain name of the service.
	CustomDomainName pulumi.StringPtrOutput `pulumi:"customDomainName"`
	// The DNS information of the service.
	DnsEntry ServiceDnsEntryPtrOutput `pulumi:"dnsEntry"`
	// The date and time that the service was last updated, specified in ISO-8601 format.
	LastUpdatedAt pulumi.StringOutput `pulumi:"lastUpdatedAt"`
	// The name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	//
	// If you don't specify a name, CloudFormation generates one. However, if you specify a name, and later want to replace the resource, you must specify a new name.
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// The status of the service.
	Status ServiceStatusOutput `pulumi:"status"`
	// The tags for the service.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOption) (*Service, error) {
	if args == nil {
		args = &ServiceArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"customDomainName",
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Service
	err := ctx.RegisterResource("aws-native:vpclattice:Service", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceState, opts ...pulumi.ResourceOption) (*Service, error) {
	var resource Service
	err := ctx.ReadResource("aws-native:vpclattice:Service", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Service resources.
type serviceState struct {
}

type ServiceState struct {
}

func (ServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceState)(nil)).Elem()
}

type serviceArgs struct {
	// The type of IAM policy.
	//
	// - `NONE` : The resource does not use an IAM policy. This is the default.
	// - `AWS_IAM` : The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.
	AuthType *ServiceAuthType `pulumi:"authType"`
	// The Amazon Resource Name (ARN) of the certificate.
	CertificateArn *string `pulumi:"certificateArn"`
	// The custom domain name of the service.
	CustomDomainName *string `pulumi:"customDomainName"`
	// The DNS information of the service.
	DnsEntry *ServiceDnsEntry `pulumi:"dnsEntry"`
	// The name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	//
	// If you don't specify a name, CloudFormation generates one. However, if you specify a name, and later want to replace the resource, you must specify a new name.
	Name *string `pulumi:"name"`
	// The tags for the service.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	// The type of IAM policy.
	//
	// - `NONE` : The resource does not use an IAM policy. This is the default.
	// - `AWS_IAM` : The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.
	AuthType ServiceAuthTypePtrInput
	// The Amazon Resource Name (ARN) of the certificate.
	CertificateArn pulumi.StringPtrInput
	// The custom domain name of the service.
	CustomDomainName pulumi.StringPtrInput
	// The DNS information of the service.
	DnsEntry ServiceDnsEntryPtrInput
	// The name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
	//
	// If you don't specify a name, CloudFormation generates one. However, if you specify a name, and later want to replace the resource, you must specify a new name.
	Name pulumi.StringPtrInput
	// The tags for the service.
	Tags aws.TagArrayInput
}

func (ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceArgs)(nil)).Elem()
}

type ServiceInput interface {
	pulumi.Input

	ToServiceOutput() ServiceOutput
	ToServiceOutputWithContext(ctx context.Context) ServiceOutput
}

func (*Service) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (i *Service) ToServiceOutput() ServiceOutput {
	return i.ToServiceOutputWithContext(context.Background())
}

func (i *Service) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOutput)
}

type ServiceOutput struct{ *pulumi.OutputState }

func (ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (o ServiceOutput) ToServiceOutput() ServiceOutput {
	return o
}

func (o ServiceOutput) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return o
}

// The Amazon Resource Name (ARN) of the service.
func (o ServiceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The type of IAM policy.
//
// - `NONE` : The resource does not use an IAM policy. This is the default.
// - `AWS_IAM` : The resource uses an IAM policy. When this type is used, auth is enabled and an auth policy is required.
func (o ServiceOutput) AuthType() ServiceAuthTypePtrOutput {
	return o.ApplyT(func(v *Service) ServiceAuthTypePtrOutput { return v.AuthType }).(ServiceAuthTypePtrOutput)
}

// The ID of the service.
func (o ServiceOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the certificate.
func (o ServiceOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.StringPtrOutput { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

// The date and time that the service was created, specified in ISO-8601 format.
func (o ServiceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The custom domain name of the service.
func (o ServiceOutput) CustomDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.StringPtrOutput { return v.CustomDomainName }).(pulumi.StringPtrOutput)
}

// The DNS information of the service.
func (o ServiceOutput) DnsEntry() ServiceDnsEntryPtrOutput {
	return o.ApplyT(func(v *Service) ServiceDnsEntryPtrOutput { return v.DnsEntry }).(ServiceDnsEntryPtrOutput)
}

// The date and time that the service was last updated, specified in ISO-8601 format.
func (o ServiceOutput) LastUpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.LastUpdatedAt }).(pulumi.StringOutput)
}

// The name of the service. The name must be unique within the account. The valid characters are a-z, 0-9, and hyphens (-). You can't use a hyphen as the first or last character, or immediately after another hyphen.
//
// If you don't specify a name, CloudFormation generates one. However, if you specify a name, and later want to replace the resource, you must specify a new name.
func (o ServiceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the service.
func (o ServiceOutput) Status() ServiceStatusOutput {
	return o.ApplyT(func(v *Service) ServiceStatusOutput { return v.Status }).(ServiceStatusOutput)
}

// The tags for the service.
func (o ServiceOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Service) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInput)(nil)).Elem(), &Service{})
	pulumi.RegisterOutputType(ServiceOutput{})
}
