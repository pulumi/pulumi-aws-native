// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nimblestudio

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LaunchProfileStreamingClipboardMode string

const (
	LaunchProfileStreamingClipboardModeEnabled  = LaunchProfileStreamingClipboardMode("ENABLED")
	LaunchProfileStreamingClipboardModeDisabled = LaunchProfileStreamingClipboardMode("DISABLED")
)

func (LaunchProfileStreamingClipboardMode) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchProfileStreamingClipboardMode)(nil)).Elem()
}

func (e LaunchProfileStreamingClipboardMode) ToLaunchProfileStreamingClipboardModeOutput() LaunchProfileStreamingClipboardModeOutput {
	return pulumi.ToOutput(e).(LaunchProfileStreamingClipboardModeOutput)
}

func (e LaunchProfileStreamingClipboardMode) ToLaunchProfileStreamingClipboardModeOutputWithContext(ctx context.Context) LaunchProfileStreamingClipboardModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LaunchProfileStreamingClipboardModeOutput)
}

func (e LaunchProfileStreamingClipboardMode) ToLaunchProfileStreamingClipboardModePtrOutput() LaunchProfileStreamingClipboardModePtrOutput {
	return e.ToLaunchProfileStreamingClipboardModePtrOutputWithContext(context.Background())
}

func (e LaunchProfileStreamingClipboardMode) ToLaunchProfileStreamingClipboardModePtrOutputWithContext(ctx context.Context) LaunchProfileStreamingClipboardModePtrOutput {
	return LaunchProfileStreamingClipboardMode(e).ToLaunchProfileStreamingClipboardModeOutputWithContext(ctx).ToLaunchProfileStreamingClipboardModePtrOutputWithContext(ctx)
}

func (e LaunchProfileStreamingClipboardMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LaunchProfileStreamingClipboardMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LaunchProfileStreamingClipboardMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LaunchProfileStreamingClipboardMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LaunchProfileStreamingClipboardModeOutput struct{ *pulumi.OutputState }

func (LaunchProfileStreamingClipboardModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchProfileStreamingClipboardMode)(nil)).Elem()
}

func (o LaunchProfileStreamingClipboardModeOutput) ToLaunchProfileStreamingClipboardModeOutput() LaunchProfileStreamingClipboardModeOutput {
	return o
}

func (o LaunchProfileStreamingClipboardModeOutput) ToLaunchProfileStreamingClipboardModeOutputWithContext(ctx context.Context) LaunchProfileStreamingClipboardModeOutput {
	return o
}

func (o LaunchProfileStreamingClipboardModeOutput) ToLaunchProfileStreamingClipboardModePtrOutput() LaunchProfileStreamingClipboardModePtrOutput {
	return o.ToLaunchProfileStreamingClipboardModePtrOutputWithContext(context.Background())
}

func (o LaunchProfileStreamingClipboardModeOutput) ToLaunchProfileStreamingClipboardModePtrOutputWithContext(ctx context.Context) LaunchProfileStreamingClipboardModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LaunchProfileStreamingClipboardMode) *LaunchProfileStreamingClipboardMode {
		return &v
	}).(LaunchProfileStreamingClipboardModePtrOutput)
}

func (o LaunchProfileStreamingClipboardModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LaunchProfileStreamingClipboardModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LaunchProfileStreamingClipboardMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LaunchProfileStreamingClipboardModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LaunchProfileStreamingClipboardModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LaunchProfileStreamingClipboardMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LaunchProfileStreamingClipboardModePtrOutput struct{ *pulumi.OutputState }

func (LaunchProfileStreamingClipboardModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchProfileStreamingClipboardMode)(nil)).Elem()
}

func (o LaunchProfileStreamingClipboardModePtrOutput) ToLaunchProfileStreamingClipboardModePtrOutput() LaunchProfileStreamingClipboardModePtrOutput {
	return o
}

func (o LaunchProfileStreamingClipboardModePtrOutput) ToLaunchProfileStreamingClipboardModePtrOutputWithContext(ctx context.Context) LaunchProfileStreamingClipboardModePtrOutput {
	return o
}

func (o LaunchProfileStreamingClipboardModePtrOutput) Elem() LaunchProfileStreamingClipboardModeOutput {
	return o.ApplyT(func(v *LaunchProfileStreamingClipboardMode) LaunchProfileStreamingClipboardMode {
		if v != nil {
			return *v
		}
		var ret LaunchProfileStreamingClipboardMode
		return ret
	}).(LaunchProfileStreamingClipboardModeOutput)
}

func (o LaunchProfileStreamingClipboardModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LaunchProfileStreamingClipboardModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LaunchProfileStreamingClipboardMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LaunchProfileStreamingClipboardModeInput is an input type that accepts LaunchProfileStreamingClipboardModeArgs and LaunchProfileStreamingClipboardModeOutput values.
// You can construct a concrete instance of `LaunchProfileStreamingClipboardModeInput` via:
//
//          LaunchProfileStreamingClipboardModeArgs{...}
type LaunchProfileStreamingClipboardModeInput interface {
	pulumi.Input

	ToLaunchProfileStreamingClipboardModeOutput() LaunchProfileStreamingClipboardModeOutput
	ToLaunchProfileStreamingClipboardModeOutputWithContext(context.Context) LaunchProfileStreamingClipboardModeOutput
}

var launchProfileStreamingClipboardModePtrType = reflect.TypeOf((**LaunchProfileStreamingClipboardMode)(nil)).Elem()

type LaunchProfileStreamingClipboardModePtrInput interface {
	pulumi.Input

	ToLaunchProfileStreamingClipboardModePtrOutput() LaunchProfileStreamingClipboardModePtrOutput
	ToLaunchProfileStreamingClipboardModePtrOutputWithContext(context.Context) LaunchProfileStreamingClipboardModePtrOutput
}

type launchProfileStreamingClipboardModePtr string

func LaunchProfileStreamingClipboardModePtr(v string) LaunchProfileStreamingClipboardModePtrInput {
	return (*launchProfileStreamingClipboardModePtr)(&v)
}

func (*launchProfileStreamingClipboardModePtr) ElementType() reflect.Type {
	return launchProfileStreamingClipboardModePtrType
}

func (in *launchProfileStreamingClipboardModePtr) ToLaunchProfileStreamingClipboardModePtrOutput() LaunchProfileStreamingClipboardModePtrOutput {
	return pulumi.ToOutput(in).(LaunchProfileStreamingClipboardModePtrOutput)
}

func (in *launchProfileStreamingClipboardModePtr) ToLaunchProfileStreamingClipboardModePtrOutputWithContext(ctx context.Context) LaunchProfileStreamingClipboardModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LaunchProfileStreamingClipboardModePtrOutput)
}

type LaunchProfileStreamingInstanceType string

const (
	LaunchProfileStreamingInstanceTypeG4dnXlarge   = LaunchProfileStreamingInstanceType("g4dn.xlarge")
	LaunchProfileStreamingInstanceTypeG4dn2xlarge  = LaunchProfileStreamingInstanceType("g4dn.2xlarge")
	LaunchProfileStreamingInstanceTypeG4dn4xlarge  = LaunchProfileStreamingInstanceType("g4dn.4xlarge")
	LaunchProfileStreamingInstanceTypeG4dn8xlarge  = LaunchProfileStreamingInstanceType("g4dn.8xlarge")
	LaunchProfileStreamingInstanceTypeG4dn12xlarge = LaunchProfileStreamingInstanceType("g4dn.12xlarge")
	LaunchProfileStreamingInstanceTypeG4dn16xlarge = LaunchProfileStreamingInstanceType("g4dn.16xlarge")
)

func (LaunchProfileStreamingInstanceType) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchProfileStreamingInstanceType)(nil)).Elem()
}

func (e LaunchProfileStreamingInstanceType) ToLaunchProfileStreamingInstanceTypeOutput() LaunchProfileStreamingInstanceTypeOutput {
	return pulumi.ToOutput(e).(LaunchProfileStreamingInstanceTypeOutput)
}

func (e LaunchProfileStreamingInstanceType) ToLaunchProfileStreamingInstanceTypeOutputWithContext(ctx context.Context) LaunchProfileStreamingInstanceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(LaunchProfileStreamingInstanceTypeOutput)
}

func (e LaunchProfileStreamingInstanceType) ToLaunchProfileStreamingInstanceTypePtrOutput() LaunchProfileStreamingInstanceTypePtrOutput {
	return e.ToLaunchProfileStreamingInstanceTypePtrOutputWithContext(context.Background())
}

func (e LaunchProfileStreamingInstanceType) ToLaunchProfileStreamingInstanceTypePtrOutputWithContext(ctx context.Context) LaunchProfileStreamingInstanceTypePtrOutput {
	return LaunchProfileStreamingInstanceType(e).ToLaunchProfileStreamingInstanceTypeOutputWithContext(ctx).ToLaunchProfileStreamingInstanceTypePtrOutputWithContext(ctx)
}

func (e LaunchProfileStreamingInstanceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e LaunchProfileStreamingInstanceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e LaunchProfileStreamingInstanceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e LaunchProfileStreamingInstanceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type LaunchProfileStreamingInstanceTypeOutput struct{ *pulumi.OutputState }

func (LaunchProfileStreamingInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchProfileStreamingInstanceType)(nil)).Elem()
}

func (o LaunchProfileStreamingInstanceTypeOutput) ToLaunchProfileStreamingInstanceTypeOutput() LaunchProfileStreamingInstanceTypeOutput {
	return o
}

func (o LaunchProfileStreamingInstanceTypeOutput) ToLaunchProfileStreamingInstanceTypeOutputWithContext(ctx context.Context) LaunchProfileStreamingInstanceTypeOutput {
	return o
}

func (o LaunchProfileStreamingInstanceTypeOutput) ToLaunchProfileStreamingInstanceTypePtrOutput() LaunchProfileStreamingInstanceTypePtrOutput {
	return o.ToLaunchProfileStreamingInstanceTypePtrOutputWithContext(context.Background())
}

func (o LaunchProfileStreamingInstanceTypeOutput) ToLaunchProfileStreamingInstanceTypePtrOutputWithContext(ctx context.Context) LaunchProfileStreamingInstanceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LaunchProfileStreamingInstanceType) *LaunchProfileStreamingInstanceType {
		return &v
	}).(LaunchProfileStreamingInstanceTypePtrOutput)
}

func (o LaunchProfileStreamingInstanceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o LaunchProfileStreamingInstanceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LaunchProfileStreamingInstanceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o LaunchProfileStreamingInstanceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LaunchProfileStreamingInstanceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e LaunchProfileStreamingInstanceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type LaunchProfileStreamingInstanceTypePtrOutput struct{ *pulumi.OutputState }

func (LaunchProfileStreamingInstanceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchProfileStreamingInstanceType)(nil)).Elem()
}

func (o LaunchProfileStreamingInstanceTypePtrOutput) ToLaunchProfileStreamingInstanceTypePtrOutput() LaunchProfileStreamingInstanceTypePtrOutput {
	return o
}

func (o LaunchProfileStreamingInstanceTypePtrOutput) ToLaunchProfileStreamingInstanceTypePtrOutputWithContext(ctx context.Context) LaunchProfileStreamingInstanceTypePtrOutput {
	return o
}

func (o LaunchProfileStreamingInstanceTypePtrOutput) Elem() LaunchProfileStreamingInstanceTypeOutput {
	return o.ApplyT(func(v *LaunchProfileStreamingInstanceType) LaunchProfileStreamingInstanceType {
		if v != nil {
			return *v
		}
		var ret LaunchProfileStreamingInstanceType
		return ret
	}).(LaunchProfileStreamingInstanceTypeOutput)
}

func (o LaunchProfileStreamingInstanceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o LaunchProfileStreamingInstanceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *LaunchProfileStreamingInstanceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// LaunchProfileStreamingInstanceTypeInput is an input type that accepts LaunchProfileStreamingInstanceTypeArgs and LaunchProfileStreamingInstanceTypeOutput values.
// You can construct a concrete instance of `LaunchProfileStreamingInstanceTypeInput` via:
//
//          LaunchProfileStreamingInstanceTypeArgs{...}
type LaunchProfileStreamingInstanceTypeInput interface {
	pulumi.Input

	ToLaunchProfileStreamingInstanceTypeOutput() LaunchProfileStreamingInstanceTypeOutput
	ToLaunchProfileStreamingInstanceTypeOutputWithContext(context.Context) LaunchProfileStreamingInstanceTypeOutput
}

var launchProfileStreamingInstanceTypePtrType = reflect.TypeOf((**LaunchProfileStreamingInstanceType)(nil)).Elem()

type LaunchProfileStreamingInstanceTypePtrInput interface {
	pulumi.Input

	ToLaunchProfileStreamingInstanceTypePtrOutput() LaunchProfileStreamingInstanceTypePtrOutput
	ToLaunchProfileStreamingInstanceTypePtrOutputWithContext(context.Context) LaunchProfileStreamingInstanceTypePtrOutput
}

type launchProfileStreamingInstanceTypePtr string

func LaunchProfileStreamingInstanceTypePtr(v string) LaunchProfileStreamingInstanceTypePtrInput {
	return (*launchProfileStreamingInstanceTypePtr)(&v)
}

func (*launchProfileStreamingInstanceTypePtr) ElementType() reflect.Type {
	return launchProfileStreamingInstanceTypePtrType
}

func (in *launchProfileStreamingInstanceTypePtr) ToLaunchProfileStreamingInstanceTypePtrOutput() LaunchProfileStreamingInstanceTypePtrOutput {
	return pulumi.ToOutput(in).(LaunchProfileStreamingInstanceTypePtrOutput)
}

func (in *launchProfileStreamingInstanceTypePtr) ToLaunchProfileStreamingInstanceTypePtrOutputWithContext(ctx context.Context) LaunchProfileStreamingInstanceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(LaunchProfileStreamingInstanceTypePtrOutput)
}

// LaunchProfileStreamingInstanceTypeArrayInput is an input type that accepts LaunchProfileStreamingInstanceTypeArray and LaunchProfileStreamingInstanceTypeArrayOutput values.
// You can construct a concrete instance of `LaunchProfileStreamingInstanceTypeArrayInput` via:
//
//          LaunchProfileStreamingInstanceTypeArray{ LaunchProfileStreamingInstanceTypeArgs{...} }
type LaunchProfileStreamingInstanceTypeArrayInput interface {
	pulumi.Input

	ToLaunchProfileStreamingInstanceTypeArrayOutput() LaunchProfileStreamingInstanceTypeArrayOutput
	ToLaunchProfileStreamingInstanceTypeArrayOutputWithContext(context.Context) LaunchProfileStreamingInstanceTypeArrayOutput
}

type LaunchProfileStreamingInstanceTypeArray []LaunchProfileStreamingInstanceType

func (LaunchProfileStreamingInstanceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchProfileStreamingInstanceType)(nil)).Elem()
}

func (i LaunchProfileStreamingInstanceTypeArray) ToLaunchProfileStreamingInstanceTypeArrayOutput() LaunchProfileStreamingInstanceTypeArrayOutput {
	return i.ToLaunchProfileStreamingInstanceTypeArrayOutputWithContext(context.Background())
}

func (i LaunchProfileStreamingInstanceTypeArray) ToLaunchProfileStreamingInstanceTypeArrayOutputWithContext(ctx context.Context) LaunchProfileStreamingInstanceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchProfileStreamingInstanceTypeArrayOutput)
}

type LaunchProfileStreamingInstanceTypeArrayOutput struct{ *pulumi.OutputState }

func (LaunchProfileStreamingInstanceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LaunchProfileStreamingInstanceType)(nil)).Elem()
}

func (o LaunchProfileStreamingInstanceTypeArrayOutput) ToLaunchProfileStreamingInstanceTypeArrayOutput() LaunchProfileStreamingInstanceTypeArrayOutput {
	return o
}

func (o LaunchProfileStreamingInstanceTypeArrayOutput) ToLaunchProfileStreamingInstanceTypeArrayOutputWithContext(ctx context.Context) LaunchProfileStreamingInstanceTypeArrayOutput {
	return o
}

func (o LaunchProfileStreamingInstanceTypeArrayOutput) Index(i pulumi.IntInput) LaunchProfileStreamingInstanceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LaunchProfileStreamingInstanceType {
		return vs[0].([]LaunchProfileStreamingInstanceType)[vs[1].(int)]
	}).(LaunchProfileStreamingInstanceTypeOutput)
}

// <p/>
type StreamingImageEncryptionConfigurationKeyType string

const (
	StreamingImageEncryptionConfigurationKeyTypeCustomerManagedKey = StreamingImageEncryptionConfigurationKeyType("CUSTOMER_MANAGED_KEY")
)

func (StreamingImageEncryptionConfigurationKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingImageEncryptionConfigurationKeyType)(nil)).Elem()
}

func (e StreamingImageEncryptionConfigurationKeyType) ToStreamingImageEncryptionConfigurationKeyTypeOutput() StreamingImageEncryptionConfigurationKeyTypeOutput {
	return pulumi.ToOutput(e).(StreamingImageEncryptionConfigurationKeyTypeOutput)
}

func (e StreamingImageEncryptionConfigurationKeyType) ToStreamingImageEncryptionConfigurationKeyTypeOutputWithContext(ctx context.Context) StreamingImageEncryptionConfigurationKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StreamingImageEncryptionConfigurationKeyTypeOutput)
}

func (e StreamingImageEncryptionConfigurationKeyType) ToStreamingImageEncryptionConfigurationKeyTypePtrOutput() StreamingImageEncryptionConfigurationKeyTypePtrOutput {
	return e.ToStreamingImageEncryptionConfigurationKeyTypePtrOutputWithContext(context.Background())
}

func (e StreamingImageEncryptionConfigurationKeyType) ToStreamingImageEncryptionConfigurationKeyTypePtrOutputWithContext(ctx context.Context) StreamingImageEncryptionConfigurationKeyTypePtrOutput {
	return StreamingImageEncryptionConfigurationKeyType(e).ToStreamingImageEncryptionConfigurationKeyTypeOutputWithContext(ctx).ToStreamingImageEncryptionConfigurationKeyTypePtrOutputWithContext(ctx)
}

func (e StreamingImageEncryptionConfigurationKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StreamingImageEncryptionConfigurationKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StreamingImageEncryptionConfigurationKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StreamingImageEncryptionConfigurationKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StreamingImageEncryptionConfigurationKeyTypeOutput struct{ *pulumi.OutputState }

func (StreamingImageEncryptionConfigurationKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingImageEncryptionConfigurationKeyType)(nil)).Elem()
}

func (o StreamingImageEncryptionConfigurationKeyTypeOutput) ToStreamingImageEncryptionConfigurationKeyTypeOutput() StreamingImageEncryptionConfigurationKeyTypeOutput {
	return o
}

func (o StreamingImageEncryptionConfigurationKeyTypeOutput) ToStreamingImageEncryptionConfigurationKeyTypeOutputWithContext(ctx context.Context) StreamingImageEncryptionConfigurationKeyTypeOutput {
	return o
}

func (o StreamingImageEncryptionConfigurationKeyTypeOutput) ToStreamingImageEncryptionConfigurationKeyTypePtrOutput() StreamingImageEncryptionConfigurationKeyTypePtrOutput {
	return o.ToStreamingImageEncryptionConfigurationKeyTypePtrOutputWithContext(context.Background())
}

func (o StreamingImageEncryptionConfigurationKeyTypeOutput) ToStreamingImageEncryptionConfigurationKeyTypePtrOutputWithContext(ctx context.Context) StreamingImageEncryptionConfigurationKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamingImageEncryptionConfigurationKeyType) *StreamingImageEncryptionConfigurationKeyType {
		return &v
	}).(StreamingImageEncryptionConfigurationKeyTypePtrOutput)
}

func (o StreamingImageEncryptionConfigurationKeyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StreamingImageEncryptionConfigurationKeyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StreamingImageEncryptionConfigurationKeyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StreamingImageEncryptionConfigurationKeyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StreamingImageEncryptionConfigurationKeyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StreamingImageEncryptionConfigurationKeyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StreamingImageEncryptionConfigurationKeyTypePtrOutput struct{ *pulumi.OutputState }

func (StreamingImageEncryptionConfigurationKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingImageEncryptionConfigurationKeyType)(nil)).Elem()
}

func (o StreamingImageEncryptionConfigurationKeyTypePtrOutput) ToStreamingImageEncryptionConfigurationKeyTypePtrOutput() StreamingImageEncryptionConfigurationKeyTypePtrOutput {
	return o
}

func (o StreamingImageEncryptionConfigurationKeyTypePtrOutput) ToStreamingImageEncryptionConfigurationKeyTypePtrOutputWithContext(ctx context.Context) StreamingImageEncryptionConfigurationKeyTypePtrOutput {
	return o
}

func (o StreamingImageEncryptionConfigurationKeyTypePtrOutput) Elem() StreamingImageEncryptionConfigurationKeyTypeOutput {
	return o.ApplyT(func(v *StreamingImageEncryptionConfigurationKeyType) StreamingImageEncryptionConfigurationKeyType {
		if v != nil {
			return *v
		}
		var ret StreamingImageEncryptionConfigurationKeyType
		return ret
	}).(StreamingImageEncryptionConfigurationKeyTypeOutput)
}

func (o StreamingImageEncryptionConfigurationKeyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StreamingImageEncryptionConfigurationKeyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StreamingImageEncryptionConfigurationKeyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StreamingImageEncryptionConfigurationKeyTypeInput is an input type that accepts StreamingImageEncryptionConfigurationKeyTypeArgs and StreamingImageEncryptionConfigurationKeyTypeOutput values.
// You can construct a concrete instance of `StreamingImageEncryptionConfigurationKeyTypeInput` via:
//
//          StreamingImageEncryptionConfigurationKeyTypeArgs{...}
type StreamingImageEncryptionConfigurationKeyTypeInput interface {
	pulumi.Input

	ToStreamingImageEncryptionConfigurationKeyTypeOutput() StreamingImageEncryptionConfigurationKeyTypeOutput
	ToStreamingImageEncryptionConfigurationKeyTypeOutputWithContext(context.Context) StreamingImageEncryptionConfigurationKeyTypeOutput
}

var streamingImageEncryptionConfigurationKeyTypePtrType = reflect.TypeOf((**StreamingImageEncryptionConfigurationKeyType)(nil)).Elem()

type StreamingImageEncryptionConfigurationKeyTypePtrInput interface {
	pulumi.Input

	ToStreamingImageEncryptionConfigurationKeyTypePtrOutput() StreamingImageEncryptionConfigurationKeyTypePtrOutput
	ToStreamingImageEncryptionConfigurationKeyTypePtrOutputWithContext(context.Context) StreamingImageEncryptionConfigurationKeyTypePtrOutput
}

type streamingImageEncryptionConfigurationKeyTypePtr string

func StreamingImageEncryptionConfigurationKeyTypePtr(v string) StreamingImageEncryptionConfigurationKeyTypePtrInput {
	return (*streamingImageEncryptionConfigurationKeyTypePtr)(&v)
}

func (*streamingImageEncryptionConfigurationKeyTypePtr) ElementType() reflect.Type {
	return streamingImageEncryptionConfigurationKeyTypePtrType
}

func (in *streamingImageEncryptionConfigurationKeyTypePtr) ToStreamingImageEncryptionConfigurationKeyTypePtrOutput() StreamingImageEncryptionConfigurationKeyTypePtrOutput {
	return pulumi.ToOutput(in).(StreamingImageEncryptionConfigurationKeyTypePtrOutput)
}

func (in *streamingImageEncryptionConfigurationKeyTypePtr) ToStreamingImageEncryptionConfigurationKeyTypePtrOutputWithContext(ctx context.Context) StreamingImageEncryptionConfigurationKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StreamingImageEncryptionConfigurationKeyTypePtrOutput)
}

type StudioComponentInitializationScriptRunContext string

const (
	StudioComponentInitializationScriptRunContextSystemInitialization = StudioComponentInitializationScriptRunContext("SYSTEM_INITIALIZATION")
	StudioComponentInitializationScriptRunContextUserInitialization   = StudioComponentInitializationScriptRunContext("USER_INITIALIZATION")
)

func (StudioComponentInitializationScriptRunContext) ElementType() reflect.Type {
	return reflect.TypeOf((*StudioComponentInitializationScriptRunContext)(nil)).Elem()
}

func (e StudioComponentInitializationScriptRunContext) ToStudioComponentInitializationScriptRunContextOutput() StudioComponentInitializationScriptRunContextOutput {
	return pulumi.ToOutput(e).(StudioComponentInitializationScriptRunContextOutput)
}

func (e StudioComponentInitializationScriptRunContext) ToStudioComponentInitializationScriptRunContextOutputWithContext(ctx context.Context) StudioComponentInitializationScriptRunContextOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StudioComponentInitializationScriptRunContextOutput)
}

func (e StudioComponentInitializationScriptRunContext) ToStudioComponentInitializationScriptRunContextPtrOutput() StudioComponentInitializationScriptRunContextPtrOutput {
	return e.ToStudioComponentInitializationScriptRunContextPtrOutputWithContext(context.Background())
}

func (e StudioComponentInitializationScriptRunContext) ToStudioComponentInitializationScriptRunContextPtrOutputWithContext(ctx context.Context) StudioComponentInitializationScriptRunContextPtrOutput {
	return StudioComponentInitializationScriptRunContext(e).ToStudioComponentInitializationScriptRunContextOutputWithContext(ctx).ToStudioComponentInitializationScriptRunContextPtrOutputWithContext(ctx)
}

func (e StudioComponentInitializationScriptRunContext) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StudioComponentInitializationScriptRunContext) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StudioComponentInitializationScriptRunContext) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StudioComponentInitializationScriptRunContext) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StudioComponentInitializationScriptRunContextOutput struct{ *pulumi.OutputState }

func (StudioComponentInitializationScriptRunContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StudioComponentInitializationScriptRunContext)(nil)).Elem()
}

func (o StudioComponentInitializationScriptRunContextOutput) ToStudioComponentInitializationScriptRunContextOutput() StudioComponentInitializationScriptRunContextOutput {
	return o
}

func (o StudioComponentInitializationScriptRunContextOutput) ToStudioComponentInitializationScriptRunContextOutputWithContext(ctx context.Context) StudioComponentInitializationScriptRunContextOutput {
	return o
}

func (o StudioComponentInitializationScriptRunContextOutput) ToStudioComponentInitializationScriptRunContextPtrOutput() StudioComponentInitializationScriptRunContextPtrOutput {
	return o.ToStudioComponentInitializationScriptRunContextPtrOutputWithContext(context.Background())
}

func (o StudioComponentInitializationScriptRunContextOutput) ToStudioComponentInitializationScriptRunContextPtrOutputWithContext(ctx context.Context) StudioComponentInitializationScriptRunContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StudioComponentInitializationScriptRunContext) *StudioComponentInitializationScriptRunContext {
		return &v
	}).(StudioComponentInitializationScriptRunContextPtrOutput)
}

func (o StudioComponentInitializationScriptRunContextOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StudioComponentInitializationScriptRunContextOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StudioComponentInitializationScriptRunContext) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StudioComponentInitializationScriptRunContextOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StudioComponentInitializationScriptRunContextOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StudioComponentInitializationScriptRunContext) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StudioComponentInitializationScriptRunContextPtrOutput struct{ *pulumi.OutputState }

func (StudioComponentInitializationScriptRunContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StudioComponentInitializationScriptRunContext)(nil)).Elem()
}

func (o StudioComponentInitializationScriptRunContextPtrOutput) ToStudioComponentInitializationScriptRunContextPtrOutput() StudioComponentInitializationScriptRunContextPtrOutput {
	return o
}

func (o StudioComponentInitializationScriptRunContextPtrOutput) ToStudioComponentInitializationScriptRunContextPtrOutputWithContext(ctx context.Context) StudioComponentInitializationScriptRunContextPtrOutput {
	return o
}

func (o StudioComponentInitializationScriptRunContextPtrOutput) Elem() StudioComponentInitializationScriptRunContextOutput {
	return o.ApplyT(func(v *StudioComponentInitializationScriptRunContext) StudioComponentInitializationScriptRunContext {
		if v != nil {
			return *v
		}
		var ret StudioComponentInitializationScriptRunContext
		return ret
	}).(StudioComponentInitializationScriptRunContextOutput)
}

func (o StudioComponentInitializationScriptRunContextPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StudioComponentInitializationScriptRunContextPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StudioComponentInitializationScriptRunContext) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StudioComponentInitializationScriptRunContextInput is an input type that accepts StudioComponentInitializationScriptRunContextArgs and StudioComponentInitializationScriptRunContextOutput values.
// You can construct a concrete instance of `StudioComponentInitializationScriptRunContextInput` via:
//
//          StudioComponentInitializationScriptRunContextArgs{...}
type StudioComponentInitializationScriptRunContextInput interface {
	pulumi.Input

	ToStudioComponentInitializationScriptRunContextOutput() StudioComponentInitializationScriptRunContextOutput
	ToStudioComponentInitializationScriptRunContextOutputWithContext(context.Context) StudioComponentInitializationScriptRunContextOutput
}

var studioComponentInitializationScriptRunContextPtrType = reflect.TypeOf((**StudioComponentInitializationScriptRunContext)(nil)).Elem()

type StudioComponentInitializationScriptRunContextPtrInput interface {
	pulumi.Input

	ToStudioComponentInitializationScriptRunContextPtrOutput() StudioComponentInitializationScriptRunContextPtrOutput
	ToStudioComponentInitializationScriptRunContextPtrOutputWithContext(context.Context) StudioComponentInitializationScriptRunContextPtrOutput
}

type studioComponentInitializationScriptRunContextPtr string

func StudioComponentInitializationScriptRunContextPtr(v string) StudioComponentInitializationScriptRunContextPtrInput {
	return (*studioComponentInitializationScriptRunContextPtr)(&v)
}

func (*studioComponentInitializationScriptRunContextPtr) ElementType() reflect.Type {
	return studioComponentInitializationScriptRunContextPtrType
}

func (in *studioComponentInitializationScriptRunContextPtr) ToStudioComponentInitializationScriptRunContextPtrOutput() StudioComponentInitializationScriptRunContextPtrOutput {
	return pulumi.ToOutput(in).(StudioComponentInitializationScriptRunContextPtrOutput)
}

func (in *studioComponentInitializationScriptRunContextPtr) ToStudioComponentInitializationScriptRunContextPtrOutputWithContext(ctx context.Context) StudioComponentInitializationScriptRunContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StudioComponentInitializationScriptRunContextPtrOutput)
}

type StudioComponentLaunchProfilePlatform string

const (
	StudioComponentLaunchProfilePlatformLinux   = StudioComponentLaunchProfilePlatform("LINUX")
	StudioComponentLaunchProfilePlatformWindows = StudioComponentLaunchProfilePlatform("WINDOWS")
)

func (StudioComponentLaunchProfilePlatform) ElementType() reflect.Type {
	return reflect.TypeOf((*StudioComponentLaunchProfilePlatform)(nil)).Elem()
}

func (e StudioComponentLaunchProfilePlatform) ToStudioComponentLaunchProfilePlatformOutput() StudioComponentLaunchProfilePlatformOutput {
	return pulumi.ToOutput(e).(StudioComponentLaunchProfilePlatformOutput)
}

func (e StudioComponentLaunchProfilePlatform) ToStudioComponentLaunchProfilePlatformOutputWithContext(ctx context.Context) StudioComponentLaunchProfilePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StudioComponentLaunchProfilePlatformOutput)
}

func (e StudioComponentLaunchProfilePlatform) ToStudioComponentLaunchProfilePlatformPtrOutput() StudioComponentLaunchProfilePlatformPtrOutput {
	return e.ToStudioComponentLaunchProfilePlatformPtrOutputWithContext(context.Background())
}

func (e StudioComponentLaunchProfilePlatform) ToStudioComponentLaunchProfilePlatformPtrOutputWithContext(ctx context.Context) StudioComponentLaunchProfilePlatformPtrOutput {
	return StudioComponentLaunchProfilePlatform(e).ToStudioComponentLaunchProfilePlatformOutputWithContext(ctx).ToStudioComponentLaunchProfilePlatformPtrOutputWithContext(ctx)
}

func (e StudioComponentLaunchProfilePlatform) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StudioComponentLaunchProfilePlatform) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StudioComponentLaunchProfilePlatform) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StudioComponentLaunchProfilePlatform) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StudioComponentLaunchProfilePlatformOutput struct{ *pulumi.OutputState }

func (StudioComponentLaunchProfilePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StudioComponentLaunchProfilePlatform)(nil)).Elem()
}

func (o StudioComponentLaunchProfilePlatformOutput) ToStudioComponentLaunchProfilePlatformOutput() StudioComponentLaunchProfilePlatformOutput {
	return o
}

func (o StudioComponentLaunchProfilePlatformOutput) ToStudioComponentLaunchProfilePlatformOutputWithContext(ctx context.Context) StudioComponentLaunchProfilePlatformOutput {
	return o
}

func (o StudioComponentLaunchProfilePlatformOutput) ToStudioComponentLaunchProfilePlatformPtrOutput() StudioComponentLaunchProfilePlatformPtrOutput {
	return o.ToStudioComponentLaunchProfilePlatformPtrOutputWithContext(context.Background())
}

func (o StudioComponentLaunchProfilePlatformOutput) ToStudioComponentLaunchProfilePlatformPtrOutputWithContext(ctx context.Context) StudioComponentLaunchProfilePlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StudioComponentLaunchProfilePlatform) *StudioComponentLaunchProfilePlatform {
		return &v
	}).(StudioComponentLaunchProfilePlatformPtrOutput)
}

func (o StudioComponentLaunchProfilePlatformOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StudioComponentLaunchProfilePlatformOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StudioComponentLaunchProfilePlatform) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StudioComponentLaunchProfilePlatformOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StudioComponentLaunchProfilePlatformOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StudioComponentLaunchProfilePlatform) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StudioComponentLaunchProfilePlatformPtrOutput struct{ *pulumi.OutputState }

func (StudioComponentLaunchProfilePlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StudioComponentLaunchProfilePlatform)(nil)).Elem()
}

func (o StudioComponentLaunchProfilePlatformPtrOutput) ToStudioComponentLaunchProfilePlatformPtrOutput() StudioComponentLaunchProfilePlatformPtrOutput {
	return o
}

func (o StudioComponentLaunchProfilePlatformPtrOutput) ToStudioComponentLaunchProfilePlatformPtrOutputWithContext(ctx context.Context) StudioComponentLaunchProfilePlatformPtrOutput {
	return o
}

func (o StudioComponentLaunchProfilePlatformPtrOutput) Elem() StudioComponentLaunchProfilePlatformOutput {
	return o.ApplyT(func(v *StudioComponentLaunchProfilePlatform) StudioComponentLaunchProfilePlatform {
		if v != nil {
			return *v
		}
		var ret StudioComponentLaunchProfilePlatform
		return ret
	}).(StudioComponentLaunchProfilePlatformOutput)
}

func (o StudioComponentLaunchProfilePlatformPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StudioComponentLaunchProfilePlatformPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StudioComponentLaunchProfilePlatform) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StudioComponentLaunchProfilePlatformInput is an input type that accepts StudioComponentLaunchProfilePlatformArgs and StudioComponentLaunchProfilePlatformOutput values.
// You can construct a concrete instance of `StudioComponentLaunchProfilePlatformInput` via:
//
//          StudioComponentLaunchProfilePlatformArgs{...}
type StudioComponentLaunchProfilePlatformInput interface {
	pulumi.Input

	ToStudioComponentLaunchProfilePlatformOutput() StudioComponentLaunchProfilePlatformOutput
	ToStudioComponentLaunchProfilePlatformOutputWithContext(context.Context) StudioComponentLaunchProfilePlatformOutput
}

var studioComponentLaunchProfilePlatformPtrType = reflect.TypeOf((**StudioComponentLaunchProfilePlatform)(nil)).Elem()

type StudioComponentLaunchProfilePlatformPtrInput interface {
	pulumi.Input

	ToStudioComponentLaunchProfilePlatformPtrOutput() StudioComponentLaunchProfilePlatformPtrOutput
	ToStudioComponentLaunchProfilePlatformPtrOutputWithContext(context.Context) StudioComponentLaunchProfilePlatformPtrOutput
}

type studioComponentLaunchProfilePlatformPtr string

func StudioComponentLaunchProfilePlatformPtr(v string) StudioComponentLaunchProfilePlatformPtrInput {
	return (*studioComponentLaunchProfilePlatformPtr)(&v)
}

func (*studioComponentLaunchProfilePlatformPtr) ElementType() reflect.Type {
	return studioComponentLaunchProfilePlatformPtrType
}

func (in *studioComponentLaunchProfilePlatformPtr) ToStudioComponentLaunchProfilePlatformPtrOutput() StudioComponentLaunchProfilePlatformPtrOutput {
	return pulumi.ToOutput(in).(StudioComponentLaunchProfilePlatformPtrOutput)
}

func (in *studioComponentLaunchProfilePlatformPtr) ToStudioComponentLaunchProfilePlatformPtrOutputWithContext(ctx context.Context) StudioComponentLaunchProfilePlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StudioComponentLaunchProfilePlatformPtrOutput)
}

type StudioComponentSubtype string

const (
	StudioComponentSubtypeAwsManagedMicrosoftAd = StudioComponentSubtype("AWS_MANAGED_MICROSOFT_AD")
	StudioComponentSubtypeAmazonFsxForWindows   = StudioComponentSubtype("AMAZON_FSX_FOR_WINDOWS")
	StudioComponentSubtypeAmazonFsxForLustre    = StudioComponentSubtype("AMAZON_FSX_FOR_LUSTRE")
	StudioComponentSubtypeCustom                = StudioComponentSubtype("CUSTOM")
)

func (StudioComponentSubtype) ElementType() reflect.Type {
	return reflect.TypeOf((*StudioComponentSubtype)(nil)).Elem()
}

func (e StudioComponentSubtype) ToStudioComponentSubtypeOutput() StudioComponentSubtypeOutput {
	return pulumi.ToOutput(e).(StudioComponentSubtypeOutput)
}

func (e StudioComponentSubtype) ToStudioComponentSubtypeOutputWithContext(ctx context.Context) StudioComponentSubtypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StudioComponentSubtypeOutput)
}

func (e StudioComponentSubtype) ToStudioComponentSubtypePtrOutput() StudioComponentSubtypePtrOutput {
	return e.ToStudioComponentSubtypePtrOutputWithContext(context.Background())
}

func (e StudioComponentSubtype) ToStudioComponentSubtypePtrOutputWithContext(ctx context.Context) StudioComponentSubtypePtrOutput {
	return StudioComponentSubtype(e).ToStudioComponentSubtypeOutputWithContext(ctx).ToStudioComponentSubtypePtrOutputWithContext(ctx)
}

func (e StudioComponentSubtype) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StudioComponentSubtype) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StudioComponentSubtype) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StudioComponentSubtype) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StudioComponentSubtypeOutput struct{ *pulumi.OutputState }

func (StudioComponentSubtypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StudioComponentSubtype)(nil)).Elem()
}

func (o StudioComponentSubtypeOutput) ToStudioComponentSubtypeOutput() StudioComponentSubtypeOutput {
	return o
}

func (o StudioComponentSubtypeOutput) ToStudioComponentSubtypeOutputWithContext(ctx context.Context) StudioComponentSubtypeOutput {
	return o
}

func (o StudioComponentSubtypeOutput) ToStudioComponentSubtypePtrOutput() StudioComponentSubtypePtrOutput {
	return o.ToStudioComponentSubtypePtrOutputWithContext(context.Background())
}

func (o StudioComponentSubtypeOutput) ToStudioComponentSubtypePtrOutputWithContext(ctx context.Context) StudioComponentSubtypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StudioComponentSubtype) *StudioComponentSubtype {
		return &v
	}).(StudioComponentSubtypePtrOutput)
}

func (o StudioComponentSubtypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StudioComponentSubtypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StudioComponentSubtype) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StudioComponentSubtypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StudioComponentSubtypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StudioComponentSubtype) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StudioComponentSubtypePtrOutput struct{ *pulumi.OutputState }

func (StudioComponentSubtypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StudioComponentSubtype)(nil)).Elem()
}

func (o StudioComponentSubtypePtrOutput) ToStudioComponentSubtypePtrOutput() StudioComponentSubtypePtrOutput {
	return o
}

func (o StudioComponentSubtypePtrOutput) ToStudioComponentSubtypePtrOutputWithContext(ctx context.Context) StudioComponentSubtypePtrOutput {
	return o
}

func (o StudioComponentSubtypePtrOutput) Elem() StudioComponentSubtypeOutput {
	return o.ApplyT(func(v *StudioComponentSubtype) StudioComponentSubtype {
		if v != nil {
			return *v
		}
		var ret StudioComponentSubtype
		return ret
	}).(StudioComponentSubtypeOutput)
}

func (o StudioComponentSubtypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StudioComponentSubtypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StudioComponentSubtype) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StudioComponentSubtypeInput is an input type that accepts StudioComponentSubtypeArgs and StudioComponentSubtypeOutput values.
// You can construct a concrete instance of `StudioComponentSubtypeInput` via:
//
//          StudioComponentSubtypeArgs{...}
type StudioComponentSubtypeInput interface {
	pulumi.Input

	ToStudioComponentSubtypeOutput() StudioComponentSubtypeOutput
	ToStudioComponentSubtypeOutputWithContext(context.Context) StudioComponentSubtypeOutput
}

var studioComponentSubtypePtrType = reflect.TypeOf((**StudioComponentSubtype)(nil)).Elem()

type StudioComponentSubtypePtrInput interface {
	pulumi.Input

	ToStudioComponentSubtypePtrOutput() StudioComponentSubtypePtrOutput
	ToStudioComponentSubtypePtrOutputWithContext(context.Context) StudioComponentSubtypePtrOutput
}

type studioComponentSubtypePtr string

func StudioComponentSubtypePtr(v string) StudioComponentSubtypePtrInput {
	return (*studioComponentSubtypePtr)(&v)
}

func (*studioComponentSubtypePtr) ElementType() reflect.Type {
	return studioComponentSubtypePtrType
}

func (in *studioComponentSubtypePtr) ToStudioComponentSubtypePtrOutput() StudioComponentSubtypePtrOutput {
	return pulumi.ToOutput(in).(StudioComponentSubtypePtrOutput)
}

func (in *studioComponentSubtypePtr) ToStudioComponentSubtypePtrOutputWithContext(ctx context.Context) StudioComponentSubtypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StudioComponentSubtypePtrOutput)
}

type StudioComponentType string

const (
	StudioComponentTypeActiveDirectory  = StudioComponentType("ACTIVE_DIRECTORY")
	StudioComponentTypeSharedFileSystem = StudioComponentType("SHARED_FILE_SYSTEM")
	StudioComponentTypeComputeFarm      = StudioComponentType("COMPUTE_FARM")
	StudioComponentTypeLicenseService   = StudioComponentType("LICENSE_SERVICE")
	StudioComponentTypeCustom           = StudioComponentType("CUSTOM")
)

func (StudioComponentType) ElementType() reflect.Type {
	return reflect.TypeOf((*StudioComponentType)(nil)).Elem()
}

func (e StudioComponentType) ToStudioComponentTypeOutput() StudioComponentTypeOutput {
	return pulumi.ToOutput(e).(StudioComponentTypeOutput)
}

func (e StudioComponentType) ToStudioComponentTypeOutputWithContext(ctx context.Context) StudioComponentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StudioComponentTypeOutput)
}

func (e StudioComponentType) ToStudioComponentTypePtrOutput() StudioComponentTypePtrOutput {
	return e.ToStudioComponentTypePtrOutputWithContext(context.Background())
}

func (e StudioComponentType) ToStudioComponentTypePtrOutputWithContext(ctx context.Context) StudioComponentTypePtrOutput {
	return StudioComponentType(e).ToStudioComponentTypeOutputWithContext(ctx).ToStudioComponentTypePtrOutputWithContext(ctx)
}

func (e StudioComponentType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StudioComponentType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StudioComponentType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StudioComponentType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StudioComponentTypeOutput struct{ *pulumi.OutputState }

func (StudioComponentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StudioComponentType)(nil)).Elem()
}

func (o StudioComponentTypeOutput) ToStudioComponentTypeOutput() StudioComponentTypeOutput {
	return o
}

func (o StudioComponentTypeOutput) ToStudioComponentTypeOutputWithContext(ctx context.Context) StudioComponentTypeOutput {
	return o
}

func (o StudioComponentTypeOutput) ToStudioComponentTypePtrOutput() StudioComponentTypePtrOutput {
	return o.ToStudioComponentTypePtrOutputWithContext(context.Background())
}

func (o StudioComponentTypeOutput) ToStudioComponentTypePtrOutputWithContext(ctx context.Context) StudioComponentTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StudioComponentType) *StudioComponentType {
		return &v
	}).(StudioComponentTypePtrOutput)
}

func (o StudioComponentTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StudioComponentTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StudioComponentType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StudioComponentTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StudioComponentTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StudioComponentType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StudioComponentTypePtrOutput struct{ *pulumi.OutputState }

func (StudioComponentTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StudioComponentType)(nil)).Elem()
}

func (o StudioComponentTypePtrOutput) ToStudioComponentTypePtrOutput() StudioComponentTypePtrOutput {
	return o
}

func (o StudioComponentTypePtrOutput) ToStudioComponentTypePtrOutputWithContext(ctx context.Context) StudioComponentTypePtrOutput {
	return o
}

func (o StudioComponentTypePtrOutput) Elem() StudioComponentTypeOutput {
	return o.ApplyT(func(v *StudioComponentType) StudioComponentType {
		if v != nil {
			return *v
		}
		var ret StudioComponentType
		return ret
	}).(StudioComponentTypeOutput)
}

func (o StudioComponentTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StudioComponentTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StudioComponentType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StudioComponentTypeInput is an input type that accepts StudioComponentTypeArgs and StudioComponentTypeOutput values.
// You can construct a concrete instance of `StudioComponentTypeInput` via:
//
//          StudioComponentTypeArgs{...}
type StudioComponentTypeInput interface {
	pulumi.Input

	ToStudioComponentTypeOutput() StudioComponentTypeOutput
	ToStudioComponentTypeOutputWithContext(context.Context) StudioComponentTypeOutput
}

var studioComponentTypePtrType = reflect.TypeOf((**StudioComponentType)(nil)).Elem()

type StudioComponentTypePtrInput interface {
	pulumi.Input

	ToStudioComponentTypePtrOutput() StudioComponentTypePtrOutput
	ToStudioComponentTypePtrOutputWithContext(context.Context) StudioComponentTypePtrOutput
}

type studioComponentTypePtr string

func StudioComponentTypePtr(v string) StudioComponentTypePtrInput {
	return (*studioComponentTypePtr)(&v)
}

func (*studioComponentTypePtr) ElementType() reflect.Type {
	return studioComponentTypePtrType
}

func (in *studioComponentTypePtr) ToStudioComponentTypePtrOutput() StudioComponentTypePtrOutput {
	return pulumi.ToOutput(in).(StudioComponentTypePtrOutput)
}

func (in *studioComponentTypePtr) ToStudioComponentTypePtrOutputWithContext(ctx context.Context) StudioComponentTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StudioComponentTypePtrOutput)
}

// <p>The type of KMS key that is used to encrypt studio data.</p>
type StudioEncryptionConfigurationKeyType string

const (
	StudioEncryptionConfigurationKeyTypeAwsOwnedKey        = StudioEncryptionConfigurationKeyType("AWS_OWNED_KEY")
	StudioEncryptionConfigurationKeyTypeCustomerManagedKey = StudioEncryptionConfigurationKeyType("CUSTOMER_MANAGED_KEY")
)

func (StudioEncryptionConfigurationKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*StudioEncryptionConfigurationKeyType)(nil)).Elem()
}

func (e StudioEncryptionConfigurationKeyType) ToStudioEncryptionConfigurationKeyTypeOutput() StudioEncryptionConfigurationKeyTypeOutput {
	return pulumi.ToOutput(e).(StudioEncryptionConfigurationKeyTypeOutput)
}

func (e StudioEncryptionConfigurationKeyType) ToStudioEncryptionConfigurationKeyTypeOutputWithContext(ctx context.Context) StudioEncryptionConfigurationKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(StudioEncryptionConfigurationKeyTypeOutput)
}

func (e StudioEncryptionConfigurationKeyType) ToStudioEncryptionConfigurationKeyTypePtrOutput() StudioEncryptionConfigurationKeyTypePtrOutput {
	return e.ToStudioEncryptionConfigurationKeyTypePtrOutputWithContext(context.Background())
}

func (e StudioEncryptionConfigurationKeyType) ToStudioEncryptionConfigurationKeyTypePtrOutputWithContext(ctx context.Context) StudioEncryptionConfigurationKeyTypePtrOutput {
	return StudioEncryptionConfigurationKeyType(e).ToStudioEncryptionConfigurationKeyTypeOutputWithContext(ctx).ToStudioEncryptionConfigurationKeyTypePtrOutputWithContext(ctx)
}

func (e StudioEncryptionConfigurationKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e StudioEncryptionConfigurationKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e StudioEncryptionConfigurationKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e StudioEncryptionConfigurationKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type StudioEncryptionConfigurationKeyTypeOutput struct{ *pulumi.OutputState }

func (StudioEncryptionConfigurationKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StudioEncryptionConfigurationKeyType)(nil)).Elem()
}

func (o StudioEncryptionConfigurationKeyTypeOutput) ToStudioEncryptionConfigurationKeyTypeOutput() StudioEncryptionConfigurationKeyTypeOutput {
	return o
}

func (o StudioEncryptionConfigurationKeyTypeOutput) ToStudioEncryptionConfigurationKeyTypeOutputWithContext(ctx context.Context) StudioEncryptionConfigurationKeyTypeOutput {
	return o
}

func (o StudioEncryptionConfigurationKeyTypeOutput) ToStudioEncryptionConfigurationKeyTypePtrOutput() StudioEncryptionConfigurationKeyTypePtrOutput {
	return o.ToStudioEncryptionConfigurationKeyTypePtrOutputWithContext(context.Background())
}

func (o StudioEncryptionConfigurationKeyTypeOutput) ToStudioEncryptionConfigurationKeyTypePtrOutputWithContext(ctx context.Context) StudioEncryptionConfigurationKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StudioEncryptionConfigurationKeyType) *StudioEncryptionConfigurationKeyType {
		return &v
	}).(StudioEncryptionConfigurationKeyTypePtrOutput)
}

func (o StudioEncryptionConfigurationKeyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o StudioEncryptionConfigurationKeyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StudioEncryptionConfigurationKeyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o StudioEncryptionConfigurationKeyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StudioEncryptionConfigurationKeyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e StudioEncryptionConfigurationKeyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type StudioEncryptionConfigurationKeyTypePtrOutput struct{ *pulumi.OutputState }

func (StudioEncryptionConfigurationKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StudioEncryptionConfigurationKeyType)(nil)).Elem()
}

func (o StudioEncryptionConfigurationKeyTypePtrOutput) ToStudioEncryptionConfigurationKeyTypePtrOutput() StudioEncryptionConfigurationKeyTypePtrOutput {
	return o
}

func (o StudioEncryptionConfigurationKeyTypePtrOutput) ToStudioEncryptionConfigurationKeyTypePtrOutputWithContext(ctx context.Context) StudioEncryptionConfigurationKeyTypePtrOutput {
	return o
}

func (o StudioEncryptionConfigurationKeyTypePtrOutput) Elem() StudioEncryptionConfigurationKeyTypeOutput {
	return o.ApplyT(func(v *StudioEncryptionConfigurationKeyType) StudioEncryptionConfigurationKeyType {
		if v != nil {
			return *v
		}
		var ret StudioEncryptionConfigurationKeyType
		return ret
	}).(StudioEncryptionConfigurationKeyTypeOutput)
}

func (o StudioEncryptionConfigurationKeyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o StudioEncryptionConfigurationKeyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *StudioEncryptionConfigurationKeyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// StudioEncryptionConfigurationKeyTypeInput is an input type that accepts StudioEncryptionConfigurationKeyTypeArgs and StudioEncryptionConfigurationKeyTypeOutput values.
// You can construct a concrete instance of `StudioEncryptionConfigurationKeyTypeInput` via:
//
//          StudioEncryptionConfigurationKeyTypeArgs{...}
type StudioEncryptionConfigurationKeyTypeInput interface {
	pulumi.Input

	ToStudioEncryptionConfigurationKeyTypeOutput() StudioEncryptionConfigurationKeyTypeOutput
	ToStudioEncryptionConfigurationKeyTypeOutputWithContext(context.Context) StudioEncryptionConfigurationKeyTypeOutput
}

var studioEncryptionConfigurationKeyTypePtrType = reflect.TypeOf((**StudioEncryptionConfigurationKeyType)(nil)).Elem()

type StudioEncryptionConfigurationKeyTypePtrInput interface {
	pulumi.Input

	ToStudioEncryptionConfigurationKeyTypePtrOutput() StudioEncryptionConfigurationKeyTypePtrOutput
	ToStudioEncryptionConfigurationKeyTypePtrOutputWithContext(context.Context) StudioEncryptionConfigurationKeyTypePtrOutput
}

type studioEncryptionConfigurationKeyTypePtr string

func StudioEncryptionConfigurationKeyTypePtr(v string) StudioEncryptionConfigurationKeyTypePtrInput {
	return (*studioEncryptionConfigurationKeyTypePtr)(&v)
}

func (*studioEncryptionConfigurationKeyTypePtr) ElementType() reflect.Type {
	return studioEncryptionConfigurationKeyTypePtrType
}

func (in *studioEncryptionConfigurationKeyTypePtr) ToStudioEncryptionConfigurationKeyTypePtrOutput() StudioEncryptionConfigurationKeyTypePtrOutput {
	return pulumi.ToOutput(in).(StudioEncryptionConfigurationKeyTypePtrOutput)
}

func (in *studioEncryptionConfigurationKeyTypePtr) ToStudioEncryptionConfigurationKeyTypePtrOutputWithContext(ctx context.Context) StudioEncryptionConfigurationKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(StudioEncryptionConfigurationKeyTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LaunchProfileStreamingClipboardModeOutput{})
	pulumi.RegisterOutputType(LaunchProfileStreamingClipboardModePtrOutput{})
	pulumi.RegisterOutputType(LaunchProfileStreamingInstanceTypeOutput{})
	pulumi.RegisterOutputType(LaunchProfileStreamingInstanceTypePtrOutput{})
	pulumi.RegisterOutputType(LaunchProfileStreamingInstanceTypeArrayOutput{})
	pulumi.RegisterOutputType(StreamingImageEncryptionConfigurationKeyTypeOutput{})
	pulumi.RegisterOutputType(StreamingImageEncryptionConfigurationKeyTypePtrOutput{})
	pulumi.RegisterOutputType(StudioComponentInitializationScriptRunContextOutput{})
	pulumi.RegisterOutputType(StudioComponentInitializationScriptRunContextPtrOutput{})
	pulumi.RegisterOutputType(StudioComponentLaunchProfilePlatformOutput{})
	pulumi.RegisterOutputType(StudioComponentLaunchProfilePlatformPtrOutput{})
	pulumi.RegisterOutputType(StudioComponentSubtypeOutput{})
	pulumi.RegisterOutputType(StudioComponentSubtypePtrOutput{})
	pulumi.RegisterOutputType(StudioComponentTypeOutput{})
	pulumi.RegisterOutputType(StudioComponentTypePtrOutput{})
	pulumi.RegisterOutputType(StudioEncryptionConfigurationKeyTypeOutput{})
	pulumi.RegisterOutputType(StudioEncryptionConfigurationKeyTypePtrOutput{})
}
