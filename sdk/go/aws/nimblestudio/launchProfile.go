// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package nimblestudio

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html
type LaunchProfile struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-ec2subnetids
	Ec2SubnetIds    pulumi.StringArrayOutput `pulumi:"ec2SubnetIds"`
	LaunchProfileId pulumi.StringOutput      `pulumi:"launchProfileId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-launchprofileprotocolversions
	LaunchProfileProtocolVersions pulumi.StringArrayOutput `pulumi:"launchProfileProtocolVersions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-name
	Name pulumi.StringOutput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-streamconfiguration
	StreamConfiguration LaunchProfileStreamConfigurationOutput `pulumi:"streamConfiguration"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-studiocomponentids
	StudioComponentIds pulumi.StringArrayOutput `pulumi:"studioComponentIds"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-studioid
	StudioId pulumi.StringOutput `pulumi:"studioId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-tags
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewLaunchProfile registers a new resource with the given unique name, arguments, and options.
func NewLaunchProfile(ctx *pulumi.Context,
	name string, args *LaunchProfileArgs, opts ...pulumi.ResourceOption) (*LaunchProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Ec2SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'Ec2SubnetIds'")
	}
	if args.LaunchProfileProtocolVersions == nil {
		return nil, errors.New("invalid value for required argument 'LaunchProfileProtocolVersions'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.StreamConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'StreamConfiguration'")
	}
	if args.StudioComponentIds == nil {
		return nil, errors.New("invalid value for required argument 'StudioComponentIds'")
	}
	if args.StudioId == nil {
		return nil, errors.New("invalid value for required argument 'StudioId'")
	}
	var resource LaunchProfile
	err := ctx.RegisterResource("aws-native:NimbleStudio:LaunchProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLaunchProfile gets an existing LaunchProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLaunchProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LaunchProfileState, opts ...pulumi.ResourceOption) (*LaunchProfile, error) {
	var resource LaunchProfile
	err := ctx.ReadResource("aws-native:NimbleStudio:LaunchProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LaunchProfile resources.
type launchProfileState struct {
}

type LaunchProfileState struct {
}

func (LaunchProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*launchProfileState)(nil)).Elem()
}

type launchProfileArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-description
	Description *string `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-ec2subnetids
	Ec2SubnetIds []string `pulumi:"ec2SubnetIds"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-launchprofileprotocolversions
	LaunchProfileProtocolVersions []string `pulumi:"launchProfileProtocolVersions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-streamconfiguration
	StreamConfiguration LaunchProfileStreamConfiguration `pulumi:"streamConfiguration"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-studiocomponentids
	StudioComponentIds []string `pulumi:"studioComponentIds"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-studioid
	StudioId string `pulumi:"studioId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-tags
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a LaunchProfile resource.
type LaunchProfileArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-description
	Description pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-ec2subnetids
	Ec2SubnetIds pulumi.StringArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-launchprofileprotocolversions
	LaunchProfileProtocolVersions pulumi.StringArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-name
	Name pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-streamconfiguration
	StreamConfiguration LaunchProfileStreamConfigurationInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-studiocomponentids
	StudioComponentIds pulumi.StringArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-studioid
	StudioId pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-tags
	Tags pulumi.StringMapInput
}

func (LaunchProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*launchProfileArgs)(nil)).Elem()
}

type LaunchProfileInput interface {
	pulumi.Input

	ToLaunchProfileOutput() LaunchProfileOutput
	ToLaunchProfileOutputWithContext(ctx context.Context) LaunchProfileOutput
}

func (*LaunchProfile) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchProfile)(nil))
}

func (i *LaunchProfile) ToLaunchProfileOutput() LaunchProfileOutput {
	return i.ToLaunchProfileOutputWithContext(context.Background())
}

func (i *LaunchProfile) ToLaunchProfileOutputWithContext(ctx context.Context) LaunchProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchProfileOutput)
}

type LaunchProfileOutput struct{ *pulumi.OutputState }

func (LaunchProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LaunchProfile)(nil))
}

func (o LaunchProfileOutput) ToLaunchProfileOutput() LaunchProfileOutput {
	return o
}

func (o LaunchProfileOutput) ToLaunchProfileOutputWithContext(ctx context.Context) LaunchProfileOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LaunchProfileOutput{})
}
