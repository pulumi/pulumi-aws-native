// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sqs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SQS::QueuePolicy
func LookupQueuePolicy(ctx *pulumi.Context, args *LookupQueuePolicyArgs, opts ...pulumi.InvokeOption) (*LookupQueuePolicyResult, error) {
	var rv LookupQueuePolicyResult
	err := ctx.Invoke("aws-native:sqs:getQueuePolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupQueuePolicyArgs struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

type LookupQueuePolicyResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// A policy document that contains the permissions for the specified Amazon SQS queues. For more information about Amazon SQS policies, see Creating Custom Policies Using the Access Policy Language in the Amazon Simple Queue Service Developer Guide.
	PolicyDocument interface{} `pulumi:"policyDocument"`
	// The URLs of the queues to which you want to add the policy. You can use the Ref function to specify an AWS::SQS::Queue resource.
	Queues []string `pulumi:"queues"`
}

func LookupQueuePolicyOutput(ctx *pulumi.Context, args LookupQueuePolicyOutputArgs, opts ...pulumi.InvokeOption) LookupQueuePolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQueuePolicyResult, error) {
			args := v.(LookupQueuePolicyArgs)
			r, err := LookupQueuePolicy(ctx, &args, opts...)
			return *r, err
		}).(LookupQueuePolicyResultOutput)
}

type LookupQueuePolicyOutputArgs struct {
	// The provider-assigned unique ID for this managed resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupQueuePolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueuePolicyArgs)(nil)).Elem()
}

type LookupQueuePolicyResultOutput struct{ *pulumi.OutputState }

func (LookupQueuePolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueuePolicyResult)(nil)).Elem()
}

func (o LookupQueuePolicyResultOutput) ToLookupQueuePolicyResultOutput() LookupQueuePolicyResultOutput {
	return o
}

func (o LookupQueuePolicyResultOutput) ToLookupQueuePolicyResultOutputWithContext(ctx context.Context) LookupQueuePolicyResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupQueuePolicyResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueuePolicyResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A policy document that contains the permissions for the specified Amazon SQS queues. For more information about Amazon SQS policies, see Creating Custom Policies Using the Access Policy Language in the Amazon Simple Queue Service Developer Guide.
func (o LookupQueuePolicyResultOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupQueuePolicyResult) interface{} { return v.PolicyDocument }).(pulumi.AnyOutput)
}

// The URLs of the queues to which you want to add the policy. You can use the Ref function to specify an AWS::SQS::Queue resource.
func (o LookupQueuePolicyResultOutput) Queues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupQueuePolicyResult) []string { return v.Queues }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueuePolicyResultOutput{})
}
