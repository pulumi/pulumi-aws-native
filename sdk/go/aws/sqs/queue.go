// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sqs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SQS::Queue
//
// Deprecated: Queue is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type Queue struct {
	pulumi.CustomResourceState

	Arn                           pulumi.StringOutput    `pulumi:"arn"`
	ContentBasedDeduplication     pulumi.BoolPtrOutput   `pulumi:"contentBasedDeduplication"`
	DeduplicationScope            pulumi.StringPtrOutput `pulumi:"deduplicationScope"`
	DelaySeconds                  pulumi.IntPtrOutput    `pulumi:"delaySeconds"`
	FifoQueue                     pulumi.BoolPtrOutput   `pulumi:"fifoQueue"`
	FifoThroughputLimit           pulumi.StringPtrOutput `pulumi:"fifoThroughputLimit"`
	KmsDataKeyReusePeriodSeconds  pulumi.IntPtrOutput    `pulumi:"kmsDataKeyReusePeriodSeconds"`
	KmsMasterKeyId                pulumi.StringPtrOutput `pulumi:"kmsMasterKeyId"`
	MaximumMessageSize            pulumi.IntPtrOutput    `pulumi:"maximumMessageSize"`
	MessageRetentionPeriod        pulumi.IntPtrOutput    `pulumi:"messageRetentionPeriod"`
	QueueName                     pulumi.StringPtrOutput `pulumi:"queueName"`
	ReceiveMessageWaitTimeSeconds pulumi.IntPtrOutput    `pulumi:"receiveMessageWaitTimeSeconds"`
	RedrivePolicy                 pulumi.AnyOutput       `pulumi:"redrivePolicy"`
	Tags                          QueueTagArrayOutput    `pulumi:"tags"`
	VisibilityTimeout             pulumi.IntPtrOutput    `pulumi:"visibilityTimeout"`
}

// NewQueue registers a new resource with the given unique name, arguments, and options.
func NewQueue(ctx *pulumi.Context,
	name string, args *QueueArgs, opts ...pulumi.ResourceOption) (*Queue, error) {
	if args == nil {
		args = &QueueArgs{}
	}

	var resource Queue
	err := ctx.RegisterResource("aws-native:sqs:Queue", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQueue gets an existing Queue resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQueue(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QueueState, opts ...pulumi.ResourceOption) (*Queue, error) {
	var resource Queue
	err := ctx.ReadResource("aws-native:sqs:Queue", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Queue resources.
type queueState struct {
}

type QueueState struct {
}

func (QueueState) ElementType() reflect.Type {
	return reflect.TypeOf((*queueState)(nil)).Elem()
}

type queueArgs struct {
	ContentBasedDeduplication     *bool       `pulumi:"contentBasedDeduplication"`
	DeduplicationScope            *string     `pulumi:"deduplicationScope"`
	DelaySeconds                  *int        `pulumi:"delaySeconds"`
	FifoQueue                     *bool       `pulumi:"fifoQueue"`
	FifoThroughputLimit           *string     `pulumi:"fifoThroughputLimit"`
	KmsDataKeyReusePeriodSeconds  *int        `pulumi:"kmsDataKeyReusePeriodSeconds"`
	KmsMasterKeyId                *string     `pulumi:"kmsMasterKeyId"`
	MaximumMessageSize            *int        `pulumi:"maximumMessageSize"`
	MessageRetentionPeriod        *int        `pulumi:"messageRetentionPeriod"`
	QueueName                     *string     `pulumi:"queueName"`
	ReceiveMessageWaitTimeSeconds *int        `pulumi:"receiveMessageWaitTimeSeconds"`
	RedrivePolicy                 interface{} `pulumi:"redrivePolicy"`
	Tags                          []QueueTag  `pulumi:"tags"`
	VisibilityTimeout             *int        `pulumi:"visibilityTimeout"`
}

// The set of arguments for constructing a Queue resource.
type QueueArgs struct {
	ContentBasedDeduplication     pulumi.BoolPtrInput
	DeduplicationScope            pulumi.StringPtrInput
	DelaySeconds                  pulumi.IntPtrInput
	FifoQueue                     pulumi.BoolPtrInput
	FifoThroughputLimit           pulumi.StringPtrInput
	KmsDataKeyReusePeriodSeconds  pulumi.IntPtrInput
	KmsMasterKeyId                pulumi.StringPtrInput
	MaximumMessageSize            pulumi.IntPtrInput
	MessageRetentionPeriod        pulumi.IntPtrInput
	QueueName                     pulumi.StringPtrInput
	ReceiveMessageWaitTimeSeconds pulumi.IntPtrInput
	RedrivePolicy                 pulumi.Input
	Tags                          QueueTagArrayInput
	VisibilityTimeout             pulumi.IntPtrInput
}

func (QueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*queueArgs)(nil)).Elem()
}

type QueueInput interface {
	pulumi.Input

	ToQueueOutput() QueueOutput
	ToQueueOutputWithContext(ctx context.Context) QueueOutput
}

func (*Queue) ElementType() reflect.Type {
	return reflect.TypeOf((*Queue)(nil))
}

func (i *Queue) ToQueueOutput() QueueOutput {
	return i.ToQueueOutputWithContext(context.Background())
}

func (i *Queue) ToQueueOutputWithContext(ctx context.Context) QueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueOutput)
}

type QueueOutput struct{ *pulumi.OutputState }

func (QueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Queue)(nil))
}

func (o QueueOutput) ToQueueOutput() QueueOutput {
	return o
}

func (o QueueOutput) ToQueueOutputWithContext(ctx context.Context) QueueOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(QueueOutput{})
}
