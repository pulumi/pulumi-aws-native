// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud9

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EnvironmentEc2Repository struct {
	PathComponent string `pulumi:"pathComponent"`
	RepositoryUrl string `pulumi:"repositoryUrl"`
}

// EnvironmentEc2RepositoryInput is an input type that accepts EnvironmentEc2RepositoryArgs and EnvironmentEc2RepositoryOutput values.
// You can construct a concrete instance of `EnvironmentEc2RepositoryInput` via:
//
//	EnvironmentEc2RepositoryArgs{...}
type EnvironmentEc2RepositoryInput interface {
	pulumi.Input

	ToEnvironmentEc2RepositoryOutput() EnvironmentEc2RepositoryOutput
	ToEnvironmentEc2RepositoryOutputWithContext(context.Context) EnvironmentEc2RepositoryOutput
}

type EnvironmentEc2RepositoryArgs struct {
	PathComponent pulumi.StringInput `pulumi:"pathComponent"`
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
}

func (EnvironmentEc2RepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentEc2Repository)(nil)).Elem()
}

func (i EnvironmentEc2RepositoryArgs) ToEnvironmentEc2RepositoryOutput() EnvironmentEc2RepositoryOutput {
	return i.ToEnvironmentEc2RepositoryOutputWithContext(context.Background())
}

func (i EnvironmentEc2RepositoryArgs) ToEnvironmentEc2RepositoryOutputWithContext(ctx context.Context) EnvironmentEc2RepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentEc2RepositoryOutput)
}

// EnvironmentEc2RepositoryArrayInput is an input type that accepts EnvironmentEc2RepositoryArray and EnvironmentEc2RepositoryArrayOutput values.
// You can construct a concrete instance of `EnvironmentEc2RepositoryArrayInput` via:
//
//	EnvironmentEc2RepositoryArray{ EnvironmentEc2RepositoryArgs{...} }
type EnvironmentEc2RepositoryArrayInput interface {
	pulumi.Input

	ToEnvironmentEc2RepositoryArrayOutput() EnvironmentEc2RepositoryArrayOutput
	ToEnvironmentEc2RepositoryArrayOutputWithContext(context.Context) EnvironmentEc2RepositoryArrayOutput
}

type EnvironmentEc2RepositoryArray []EnvironmentEc2RepositoryInput

func (EnvironmentEc2RepositoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentEc2Repository)(nil)).Elem()
}

func (i EnvironmentEc2RepositoryArray) ToEnvironmentEc2RepositoryArrayOutput() EnvironmentEc2RepositoryArrayOutput {
	return i.ToEnvironmentEc2RepositoryArrayOutputWithContext(context.Background())
}

func (i EnvironmentEc2RepositoryArray) ToEnvironmentEc2RepositoryArrayOutputWithContext(ctx context.Context) EnvironmentEc2RepositoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentEc2RepositoryArrayOutput)
}

type EnvironmentEc2RepositoryOutput struct{ *pulumi.OutputState }

func (EnvironmentEc2RepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentEc2Repository)(nil)).Elem()
}

func (o EnvironmentEc2RepositoryOutput) ToEnvironmentEc2RepositoryOutput() EnvironmentEc2RepositoryOutput {
	return o
}

func (o EnvironmentEc2RepositoryOutput) ToEnvironmentEc2RepositoryOutputWithContext(ctx context.Context) EnvironmentEc2RepositoryOutput {
	return o
}

func (o EnvironmentEc2RepositoryOutput) PathComponent() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentEc2Repository) string { return v.PathComponent }).(pulumi.StringOutput)
}

func (o EnvironmentEc2RepositoryOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentEc2Repository) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

type EnvironmentEc2RepositoryArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentEc2RepositoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentEc2Repository)(nil)).Elem()
}

func (o EnvironmentEc2RepositoryArrayOutput) ToEnvironmentEc2RepositoryArrayOutput() EnvironmentEc2RepositoryArrayOutput {
	return o
}

func (o EnvironmentEc2RepositoryArrayOutput) ToEnvironmentEc2RepositoryArrayOutputWithContext(ctx context.Context) EnvironmentEc2RepositoryArrayOutput {
	return o
}

func (o EnvironmentEc2RepositoryArrayOutput) Index(i pulumi.IntInput) EnvironmentEc2RepositoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentEc2Repository {
		return vs[0].([]EnvironmentEc2Repository)[vs[1].(int)]
	}).(EnvironmentEc2RepositoryOutput)
}

type EnvironmentEc2Tag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentEc2RepositoryInput)(nil)).Elem(), EnvironmentEc2RepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentEc2RepositoryArrayInput)(nil)).Elem(), EnvironmentEc2RepositoryArray{})
	pulumi.RegisterOutputType(EnvironmentEc2RepositoryOutput{})
	pulumi.RegisterOutputType(EnvironmentEc2RepositoryArrayOutput{})
}
