// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud9

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::Cloud9::EnvironmentEC2
func LookupEnvironmentEc2(ctx *pulumi.Context, args *LookupEnvironmentEc2Args, opts ...pulumi.InvokeOption) (*LookupEnvironmentEc2Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEnvironmentEc2Result
	err := ctx.Invoke("aws-native:cloud9:getEnvironmentEc2", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEnvironmentEc2Args struct {
	Id string `pulumi:"id"`
}

type LookupEnvironmentEc2Result struct {
	Arn         *string             `pulumi:"arn"`
	Description *string             `pulumi:"description"`
	Id          *string             `pulumi:"id"`
	Name        *string             `pulumi:"name"`
	Tags        []EnvironmentEc2Tag `pulumi:"tags"`
}

func LookupEnvironmentEc2Output(ctx *pulumi.Context, args LookupEnvironmentEc2OutputArgs, opts ...pulumi.InvokeOption) LookupEnvironmentEc2ResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEnvironmentEc2Result, error) {
			args := v.(LookupEnvironmentEc2Args)
			r, err := LookupEnvironmentEc2(ctx, &args, opts...)
			var s LookupEnvironmentEc2Result
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEnvironmentEc2ResultOutput)
}

type LookupEnvironmentEc2OutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupEnvironmentEc2OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnvironmentEc2Args)(nil)).Elem()
}

type LookupEnvironmentEc2ResultOutput struct{ *pulumi.OutputState }

func (LookupEnvironmentEc2ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEnvironmentEc2Result)(nil)).Elem()
}

func (o LookupEnvironmentEc2ResultOutput) ToLookupEnvironmentEc2ResultOutput() LookupEnvironmentEc2ResultOutput {
	return o
}

func (o LookupEnvironmentEc2ResultOutput) ToLookupEnvironmentEc2ResultOutputWithContext(ctx context.Context) LookupEnvironmentEc2ResultOutput {
	return o
}

func (o LookupEnvironmentEc2ResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupEnvironmentEc2Result] {
	return pulumix.Output[LookupEnvironmentEc2Result]{
		OutputState: o.OutputState,
	}
}

func (o LookupEnvironmentEc2ResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEnvironmentEc2Result) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupEnvironmentEc2ResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEnvironmentEc2Result) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupEnvironmentEc2ResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEnvironmentEc2Result) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupEnvironmentEc2ResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEnvironmentEc2Result) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupEnvironmentEc2ResultOutput) Tags() EnvironmentEc2TagArrayOutput {
	return o.ApplyT(func(v LookupEnvironmentEc2Result) []EnvironmentEc2Tag { return v.Tags }).(EnvironmentEc2TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEnvironmentEc2ResultOutput{})
}
