// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qbusiness

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::QBusiness::DataAccessor Resource Type
type DataAccessor struct {
	pulumi.CustomResourceState

	// A list of action configurations specifying the allowed actions and any associated filters.
	ActionConfigurations DataAccessorActionConfigurationArrayOutput `pulumi:"actionConfigurations"`
	// The unique identifier of the Amazon Q Business application.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// The authentication configuration details for the data accessor. This specifies how the ISV authenticates when accessing data through this data accessor.
	AuthenticationDetail DataAccessorAuthenticationDetailPtrOutput `pulumi:"authenticationDetail"`
	// The timestamp when the data accessor was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The Amazon Resource Name (ARN) of the data accessor.
	DataAccessorArn pulumi.StringOutput `pulumi:"dataAccessorArn"`
	// The unique identifier of the data accessor.
	DataAccessorId pulumi.StringOutput `pulumi:"dataAccessorId"`
	// The friendly name of the data accessor.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The Amazon Resource Name (ARN) of the associated IAM Identity Center application.
	IdcApplicationArn pulumi.StringOutput `pulumi:"idcApplicationArn"`
	// The Amazon Resource Name (ARN) of the IAM role for the ISV associated with this data accessor.
	Principal pulumi.StringOutput `pulumi:"principal"`
	// The tags to associate with the data accessor.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The timestamp when the data accessor was last updated.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewDataAccessor registers a new resource with the given unique name, arguments, and options.
func NewDataAccessor(ctx *pulumi.Context,
	name string, args *DataAccessorArgs, opts ...pulumi.ResourceOption) (*DataAccessor, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ActionConfigurations == nil {
		return nil, errors.New("invalid value for required argument 'ActionConfigurations'")
	}
	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Principal == nil {
		return nil, errors.New("invalid value for required argument 'Principal'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"applicationId",
		"principal",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DataAccessor
	err := ctx.RegisterResource("aws-native:qbusiness:DataAccessor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataAccessor gets an existing DataAccessor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataAccessor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataAccessorState, opts ...pulumi.ResourceOption) (*DataAccessor, error) {
	var resource DataAccessor
	err := ctx.ReadResource("aws-native:qbusiness:DataAccessor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataAccessor resources.
type dataAccessorState struct {
}

type DataAccessorState struct {
}

func (DataAccessorState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataAccessorState)(nil)).Elem()
}

type dataAccessorArgs struct {
	// A list of action configurations specifying the allowed actions and any associated filters.
	ActionConfigurations []DataAccessorActionConfiguration `pulumi:"actionConfigurations"`
	// The unique identifier of the Amazon Q Business application.
	ApplicationId string `pulumi:"applicationId"`
	// The authentication configuration details for the data accessor. This specifies how the ISV authenticates when accessing data through this data accessor.
	AuthenticationDetail *DataAccessorAuthenticationDetail `pulumi:"authenticationDetail"`
	// The friendly name of the data accessor.
	DisplayName string `pulumi:"displayName"`
	// The Amazon Resource Name (ARN) of the IAM role for the ISV associated with this data accessor.
	Principal string `pulumi:"principal"`
	// The tags to associate with the data accessor.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a DataAccessor resource.
type DataAccessorArgs struct {
	// A list of action configurations specifying the allowed actions and any associated filters.
	ActionConfigurations DataAccessorActionConfigurationArrayInput
	// The unique identifier of the Amazon Q Business application.
	ApplicationId pulumi.StringInput
	// The authentication configuration details for the data accessor. This specifies how the ISV authenticates when accessing data through this data accessor.
	AuthenticationDetail DataAccessorAuthenticationDetailPtrInput
	// The friendly name of the data accessor.
	DisplayName pulumi.StringInput
	// The Amazon Resource Name (ARN) of the IAM role for the ISV associated with this data accessor.
	Principal pulumi.StringInput
	// The tags to associate with the data accessor.
	Tags aws.TagArrayInput
}

func (DataAccessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataAccessorArgs)(nil)).Elem()
}

type DataAccessorInput interface {
	pulumi.Input

	ToDataAccessorOutput() DataAccessorOutput
	ToDataAccessorOutputWithContext(ctx context.Context) DataAccessorOutput
}

func (*DataAccessor) ElementType() reflect.Type {
	return reflect.TypeOf((**DataAccessor)(nil)).Elem()
}

func (i *DataAccessor) ToDataAccessorOutput() DataAccessorOutput {
	return i.ToDataAccessorOutputWithContext(context.Background())
}

func (i *DataAccessor) ToDataAccessorOutputWithContext(ctx context.Context) DataAccessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataAccessorOutput)
}

type DataAccessorOutput struct{ *pulumi.OutputState }

func (DataAccessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataAccessor)(nil)).Elem()
}

func (o DataAccessorOutput) ToDataAccessorOutput() DataAccessorOutput {
	return o
}

func (o DataAccessorOutput) ToDataAccessorOutputWithContext(ctx context.Context) DataAccessorOutput {
	return o
}

// A list of action configurations specifying the allowed actions and any associated filters.
func (o DataAccessorOutput) ActionConfigurations() DataAccessorActionConfigurationArrayOutput {
	return o.ApplyT(func(v *DataAccessor) DataAccessorActionConfigurationArrayOutput { return v.ActionConfigurations }).(DataAccessorActionConfigurationArrayOutput)
}

// The unique identifier of the Amazon Q Business application.
func (o DataAccessorOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataAccessor) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// The authentication configuration details for the data accessor. This specifies how the ISV authenticates when accessing data through this data accessor.
func (o DataAccessorOutput) AuthenticationDetail() DataAccessorAuthenticationDetailPtrOutput {
	return o.ApplyT(func(v *DataAccessor) DataAccessorAuthenticationDetailPtrOutput { return v.AuthenticationDetail }).(DataAccessorAuthenticationDetailPtrOutput)
}

// The timestamp when the data accessor was created.
func (o DataAccessorOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DataAccessor) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the data accessor.
func (o DataAccessorOutput) DataAccessorArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DataAccessor) pulumi.StringOutput { return v.DataAccessorArn }).(pulumi.StringOutput)
}

// The unique identifier of the data accessor.
func (o DataAccessorOutput) DataAccessorId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataAccessor) pulumi.StringOutput { return v.DataAccessorId }).(pulumi.StringOutput)
}

// The friendly name of the data accessor.
func (o DataAccessorOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *DataAccessor) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the associated IAM Identity Center application.
func (o DataAccessorOutput) IdcApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DataAccessor) pulumi.StringOutput { return v.IdcApplicationArn }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the IAM role for the ISV associated with this data accessor.
func (o DataAccessorOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v *DataAccessor) pulumi.StringOutput { return v.Principal }).(pulumi.StringOutput)
}

// The tags to associate with the data accessor.
func (o DataAccessorOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *DataAccessor) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The timestamp when the data accessor was last updated.
func (o DataAccessorOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DataAccessor) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataAccessorInput)(nil)).Elem(), &DataAccessor{})
	pulumi.RegisterOutputType(DataAccessorOutput{})
}
