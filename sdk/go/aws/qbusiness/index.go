// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qbusiness

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::QBusiness::Index Resource Type
type Index struct {
	pulumi.CustomResourceState

	ApplicationId                   pulumi.StringOutput                            `pulumi:"applicationId"`
	CapacityConfiguration           IndexCapacityConfigurationPtrOutput            `pulumi:"capacityConfiguration"`
	CreatedAt                       pulumi.StringOutput                            `pulumi:"createdAt"`
	Description                     pulumi.StringPtrOutput                         `pulumi:"description"`
	DisplayName                     pulumi.StringOutput                            `pulumi:"displayName"`
	DocumentAttributeConfigurations IndexDocumentAttributeConfigurationArrayOutput `pulumi:"documentAttributeConfigurations"`
	IndexArn                        pulumi.StringOutput                            `pulumi:"indexArn"`
	IndexId                         pulumi.StringOutput                            `pulumi:"indexId"`
	IndexStatistics                 IndexStatisticsOutput                          `pulumi:"indexStatistics"`
	Status                          IndexStatusOutput                              `pulumi:"status"`
	Tags                            aws.TagArrayOutput                             `pulumi:"tags"`
	Type                            IndexTypePtrOutput                             `pulumi:"type"`
	UpdatedAt                       pulumi.StringOutput                            `pulumi:"updatedAt"`
}

// NewIndex registers a new resource with the given unique name, arguments, and options.
func NewIndex(ctx *pulumi.Context,
	name string, args *IndexArgs, opts ...pulumi.ResourceOption) (*Index, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"applicationId",
		"type",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Index
	err := ctx.RegisterResource("aws-native:qbusiness:Index", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIndex gets an existing Index resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIndex(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IndexState, opts ...pulumi.ResourceOption) (*Index, error) {
	var resource Index
	err := ctx.ReadResource("aws-native:qbusiness:Index", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Index resources.
type indexState struct {
}

type IndexState struct {
}

func (IndexState) ElementType() reflect.Type {
	return reflect.TypeOf((*indexState)(nil)).Elem()
}

type indexArgs struct {
	ApplicationId                   string                                `pulumi:"applicationId"`
	CapacityConfiguration           *IndexCapacityConfiguration           `pulumi:"capacityConfiguration"`
	Description                     *string                               `pulumi:"description"`
	DisplayName                     string                                `pulumi:"displayName"`
	DocumentAttributeConfigurations []IndexDocumentAttributeConfiguration `pulumi:"documentAttributeConfigurations"`
	Tags                            []aws.Tag                             `pulumi:"tags"`
	Type                            *IndexType                            `pulumi:"type"`
}

// The set of arguments for constructing a Index resource.
type IndexArgs struct {
	ApplicationId                   pulumi.StringInput
	CapacityConfiguration           IndexCapacityConfigurationPtrInput
	Description                     pulumi.StringPtrInput
	DisplayName                     pulumi.StringInput
	DocumentAttributeConfigurations IndexDocumentAttributeConfigurationArrayInput
	Tags                            aws.TagArrayInput
	Type                            IndexTypePtrInput
}

func (IndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*indexArgs)(nil)).Elem()
}

type IndexInput interface {
	pulumi.Input

	ToIndexOutput() IndexOutput
	ToIndexOutputWithContext(ctx context.Context) IndexOutput
}

func (*Index) ElementType() reflect.Type {
	return reflect.TypeOf((**Index)(nil)).Elem()
}

func (i *Index) ToIndexOutput() IndexOutput {
	return i.ToIndexOutputWithContext(context.Background())
}

func (i *Index) ToIndexOutputWithContext(ctx context.Context) IndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexOutput)
}

type IndexOutput struct{ *pulumi.OutputState }

func (IndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Index)(nil)).Elem()
}

func (o IndexOutput) ToIndexOutput() IndexOutput {
	return o
}

func (o IndexOutput) ToIndexOutputWithContext(ctx context.Context) IndexOutput {
	return o
}

func (o IndexOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o IndexOutput) CapacityConfiguration() IndexCapacityConfigurationPtrOutput {
	return o.ApplyT(func(v *Index) IndexCapacityConfigurationPtrOutput { return v.CapacityConfiguration }).(IndexCapacityConfigurationPtrOutput)
}

func (o IndexOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o IndexOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Index) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IndexOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o IndexOutput) DocumentAttributeConfigurations() IndexDocumentAttributeConfigurationArrayOutput {
	return o.ApplyT(func(v *Index) IndexDocumentAttributeConfigurationArrayOutput {
		return v.DocumentAttributeConfigurations
	}).(IndexDocumentAttributeConfigurationArrayOutput)
}

func (o IndexOutput) IndexArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.IndexArn }).(pulumi.StringOutput)
}

func (o IndexOutput) IndexId() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.IndexId }).(pulumi.StringOutput)
}

func (o IndexOutput) IndexStatistics() IndexStatisticsOutput {
	return o.ApplyT(func(v *Index) IndexStatisticsOutput { return v.IndexStatistics }).(IndexStatisticsOutput)
}

func (o IndexOutput) Status() IndexStatusOutput {
	return o.ApplyT(func(v *Index) IndexStatusOutput { return v.Status }).(IndexStatusOutput)
}

func (o IndexOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Index) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func (o IndexOutput) Type() IndexTypePtrOutput {
	return o.ApplyT(func(v *Index) IndexTypePtrOutput { return v.Type }).(IndexTypePtrOutput)
}

func (o IndexOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IndexInput)(nil)).Elem(), &Index{})
	pulumi.RegisterOutputType(IndexOutput{})
}
