// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qbusiness

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::QBusiness::Plugin Resource Type
func LookupPlugin(ctx *pulumi.Context, args *LookupPluginArgs, opts ...pulumi.InvokeOption) (*LookupPluginResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPluginResult
	err := ctx.Invoke("aws-native:qbusiness:getPlugin", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPluginArgs struct {
	// The identifier of the application that will contain the plugin.
	ApplicationId string `pulumi:"applicationId"`
	// The identifier of the plugin.
	PluginId string `pulumi:"pluginId"`
}

type LookupPluginResult struct {
	// Authentication configuration information for an Amazon Q Business plugin.
	AuthConfiguration interface{} `pulumi:"authConfiguration"`
	// The current status of a plugin. A plugin is modified asynchronously.
	BuildStatus *PluginBuildStatus `pulumi:"buildStatus"`
	// The timestamp for when the plugin was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Configuration information required to create a custom plugin.
	CustomPluginConfiguration *PluginCustomPluginConfiguration `pulumi:"customPluginConfiguration"`
	// The name of the plugin.
	DisplayName *string `pulumi:"displayName"`
	// The Amazon Resource Name (ARN) of a plugin.
	PluginArn *string `pulumi:"pluginArn"`
	// The identifier of the plugin.
	PluginId *string `pulumi:"pluginId"`
	// The plugin server URL used for configuration.
	ServerUrl *string `pulumi:"serverUrl"`
	// The current status of the plugin.
	State *PluginStateEnum `pulumi:"state"`
	// A list of key-value pairs that identify or categorize the data source connector. You can also use tags to help control access to the data source connector. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
	Tags []aws.Tag `pulumi:"tags"`
	// The timestamp for when the plugin was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

func LookupPluginOutput(ctx *pulumi.Context, args LookupPluginOutputArgs, opts ...pulumi.InvokeOption) LookupPluginResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPluginResultOutput, error) {
			args := v.(LookupPluginArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupPluginResult
			secret, err := ctx.InvokePackageRaw("aws-native:qbusiness:getPlugin", args, &rv, "", opts...)
			if err != nil {
				return LookupPluginResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupPluginResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupPluginResultOutput), nil
			}
			return output, nil
		}).(LookupPluginResultOutput)
}

type LookupPluginOutputArgs struct {
	// The identifier of the application that will contain the plugin.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The identifier of the plugin.
	PluginId pulumi.StringInput `pulumi:"pluginId"`
}

func (LookupPluginOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPluginArgs)(nil)).Elem()
}

type LookupPluginResultOutput struct{ *pulumi.OutputState }

func (LookupPluginResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPluginResult)(nil)).Elem()
}

func (o LookupPluginResultOutput) ToLookupPluginResultOutput() LookupPluginResultOutput {
	return o
}

func (o LookupPluginResultOutput) ToLookupPluginResultOutputWithContext(ctx context.Context) LookupPluginResultOutput {
	return o
}

// Authentication configuration information for an Amazon Q Business plugin.
func (o LookupPluginResultOutput) AuthConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupPluginResult) interface{} { return v.AuthConfiguration }).(pulumi.AnyOutput)
}

// The current status of a plugin. A plugin is modified asynchronously.
func (o LookupPluginResultOutput) BuildStatus() PluginBuildStatusPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *PluginBuildStatus { return v.BuildStatus }).(PluginBuildStatusPtrOutput)
}

// The timestamp for when the plugin was created.
func (o LookupPluginResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Configuration information required to create a custom plugin.
func (o LookupPluginResultOutput) CustomPluginConfiguration() PluginCustomPluginConfigurationPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *PluginCustomPluginConfiguration { return v.CustomPluginConfiguration }).(PluginCustomPluginConfigurationPtrOutput)
}

// The name of the plugin.
func (o LookupPluginResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of a plugin.
func (o LookupPluginResultOutput) PluginArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *string { return v.PluginArn }).(pulumi.StringPtrOutput)
}

// The identifier of the plugin.
func (o LookupPluginResultOutput) PluginId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *string { return v.PluginId }).(pulumi.StringPtrOutput)
}

// The plugin server URL used for configuration.
func (o LookupPluginResultOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *string { return v.ServerUrl }).(pulumi.StringPtrOutput)
}

// The current status of the plugin.
func (o LookupPluginResultOutput) State() PluginStateEnumPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *PluginStateEnum { return v.State }).(PluginStateEnumPtrOutput)
}

// A list of key-value pairs that identify or categorize the data source connector. You can also use tags to help control access to the data source connector. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
func (o LookupPluginResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupPluginResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The timestamp for when the plugin was last updated.
func (o LookupPluginResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPluginResultOutput{})
}
