// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qbusiness

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::QBusiness::Plugin Resource Type
func LookupPlugin(ctx *pulumi.Context, args *LookupPluginArgs, opts ...pulumi.InvokeOption) (*LookupPluginResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPluginResult
	err := ctx.Invoke("aws-native:qbusiness:getPlugin", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPluginArgs struct {
	ApplicationId string `pulumi:"applicationId"`
	PluginId      string `pulumi:"pluginId"`
}

type LookupPluginResult struct {
	AuthConfiguration         interface{}                      `pulumi:"authConfiguration"`
	BuildStatus               *PluginBuildStatus               `pulumi:"buildStatus"`
	CreatedAt                 *string                          `pulumi:"createdAt"`
	CustomPluginConfiguration *PluginCustomPluginConfiguration `pulumi:"customPluginConfiguration"`
	DisplayName               *string                          `pulumi:"displayName"`
	PluginArn                 *string                          `pulumi:"pluginArn"`
	PluginId                  *string                          `pulumi:"pluginId"`
	ServerUrl                 *string                          `pulumi:"serverUrl"`
	State                     *PluginStateEnum                 `pulumi:"state"`
	Tags                      []aws.Tag                        `pulumi:"tags"`
	UpdatedAt                 *string                          `pulumi:"updatedAt"`
}

func LookupPluginOutput(ctx *pulumi.Context, args LookupPluginOutputArgs, opts ...pulumi.InvokeOption) LookupPluginResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPluginResult, error) {
			args := v.(LookupPluginArgs)
			r, err := LookupPlugin(ctx, &args, opts...)
			var s LookupPluginResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPluginResultOutput)
}

type LookupPluginOutputArgs struct {
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	PluginId      pulumi.StringInput `pulumi:"pluginId"`
}

func (LookupPluginOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPluginArgs)(nil)).Elem()
}

type LookupPluginResultOutput struct{ *pulumi.OutputState }

func (LookupPluginResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPluginResult)(nil)).Elem()
}

func (o LookupPluginResultOutput) ToLookupPluginResultOutput() LookupPluginResultOutput {
	return o
}

func (o LookupPluginResultOutput) ToLookupPluginResultOutputWithContext(ctx context.Context) LookupPluginResultOutput {
	return o
}

func (o LookupPluginResultOutput) AuthConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupPluginResult) interface{} { return v.AuthConfiguration }).(pulumi.AnyOutput)
}

func (o LookupPluginResultOutput) BuildStatus() PluginBuildStatusPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *PluginBuildStatus { return v.BuildStatus }).(PluginBuildStatusPtrOutput)
}

func (o LookupPluginResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o LookupPluginResultOutput) CustomPluginConfiguration() PluginCustomPluginConfigurationPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *PluginCustomPluginConfiguration { return v.CustomPluginConfiguration }).(PluginCustomPluginConfigurationPtrOutput)
}

func (o LookupPluginResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupPluginResultOutput) PluginArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *string { return v.PluginArn }).(pulumi.StringPtrOutput)
}

func (o LookupPluginResultOutput) PluginId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *string { return v.PluginId }).(pulumi.StringPtrOutput)
}

func (o LookupPluginResultOutput) ServerUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *string { return v.ServerUrl }).(pulumi.StringPtrOutput)
}

func (o LookupPluginResultOutput) State() PluginStateEnumPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *PluginStateEnum { return v.State }).(PluginStateEnumPtrOutput)
}

func (o LookupPluginResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupPluginResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func (o LookupPluginResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPluginResultOutput{})
}
