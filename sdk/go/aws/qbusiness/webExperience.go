// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qbusiness

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::QBusiness::WebExperience Resource Type
type WebExperience struct {
	pulumi.CustomResourceState

	ApplicationId            pulumi.StringOutput                            `pulumi:"applicationId"`
	CreatedAt                pulumi.StringOutput                            `pulumi:"createdAt"`
	DefaultEndpoint          pulumi.StringOutput                            `pulumi:"defaultEndpoint"`
	RoleArn                  pulumi.StringPtrOutput                         `pulumi:"roleArn"`
	SamplePromptsControlMode WebExperienceSamplePromptsControlModePtrOutput `pulumi:"samplePromptsControlMode"`
	Status                   WebExperienceStatusOutput                      `pulumi:"status"`
	Subtitle                 pulumi.StringPtrOutput                         `pulumi:"subtitle"`
	Tags                     aws.TagArrayOutput                             `pulumi:"tags"`
	Title                    pulumi.StringPtrOutput                         `pulumi:"title"`
	UpdatedAt                pulumi.StringOutput                            `pulumi:"updatedAt"`
	WebExperienceArn         pulumi.StringOutput                            `pulumi:"webExperienceArn"`
	WebExperienceId          pulumi.StringOutput                            `pulumi:"webExperienceId"`
	WelcomeMessage           pulumi.StringPtrOutput                         `pulumi:"welcomeMessage"`
}

// NewWebExperience registers a new resource with the given unique name, arguments, and options.
func NewWebExperience(ctx *pulumi.Context,
	name string, args *WebExperienceArgs, opts ...pulumi.ResourceOption) (*WebExperience, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"applicationId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebExperience
	err := ctx.RegisterResource("aws-native:qbusiness:WebExperience", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebExperience gets an existing WebExperience resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebExperience(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebExperienceState, opts ...pulumi.ResourceOption) (*WebExperience, error) {
	var resource WebExperience
	err := ctx.ReadResource("aws-native:qbusiness:WebExperience", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebExperience resources.
type webExperienceState struct {
}

type WebExperienceState struct {
}

func (WebExperienceState) ElementType() reflect.Type {
	return reflect.TypeOf((*webExperienceState)(nil)).Elem()
}

type webExperienceArgs struct {
	ApplicationId            string                                 `pulumi:"applicationId"`
	RoleArn                  *string                                `pulumi:"roleArn"`
	SamplePromptsControlMode *WebExperienceSamplePromptsControlMode `pulumi:"samplePromptsControlMode"`
	Subtitle                 *string                                `pulumi:"subtitle"`
	Tags                     []aws.Tag                              `pulumi:"tags"`
	Title                    *string                                `pulumi:"title"`
	WelcomeMessage           *string                                `pulumi:"welcomeMessage"`
}

// The set of arguments for constructing a WebExperience resource.
type WebExperienceArgs struct {
	ApplicationId            pulumi.StringInput
	RoleArn                  pulumi.StringPtrInput
	SamplePromptsControlMode WebExperienceSamplePromptsControlModePtrInput
	Subtitle                 pulumi.StringPtrInput
	Tags                     aws.TagArrayInput
	Title                    pulumi.StringPtrInput
	WelcomeMessage           pulumi.StringPtrInput
}

func (WebExperienceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webExperienceArgs)(nil)).Elem()
}

type WebExperienceInput interface {
	pulumi.Input

	ToWebExperienceOutput() WebExperienceOutput
	ToWebExperienceOutputWithContext(ctx context.Context) WebExperienceOutput
}

func (*WebExperience) ElementType() reflect.Type {
	return reflect.TypeOf((**WebExperience)(nil)).Elem()
}

func (i *WebExperience) ToWebExperienceOutput() WebExperienceOutput {
	return i.ToWebExperienceOutputWithContext(context.Background())
}

func (i *WebExperience) ToWebExperienceOutputWithContext(ctx context.Context) WebExperienceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebExperienceOutput)
}

type WebExperienceOutput struct{ *pulumi.OutputState }

func (WebExperienceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebExperience)(nil)).Elem()
}

func (o WebExperienceOutput) ToWebExperienceOutput() WebExperienceOutput {
	return o
}

func (o WebExperienceOutput) ToWebExperienceOutputWithContext(ctx context.Context) WebExperienceOutput {
	return o
}

func (o WebExperienceOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *WebExperience) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o WebExperienceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *WebExperience) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o WebExperienceOutput) DefaultEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *WebExperience) pulumi.StringOutput { return v.DefaultEndpoint }).(pulumi.StringOutput)
}

func (o WebExperienceOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebExperience) pulumi.StringPtrOutput { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o WebExperienceOutput) SamplePromptsControlMode() WebExperienceSamplePromptsControlModePtrOutput {
	return o.ApplyT(func(v *WebExperience) WebExperienceSamplePromptsControlModePtrOutput {
		return v.SamplePromptsControlMode
	}).(WebExperienceSamplePromptsControlModePtrOutput)
}

func (o WebExperienceOutput) Status() WebExperienceStatusOutput {
	return o.ApplyT(func(v *WebExperience) WebExperienceStatusOutput { return v.Status }).(WebExperienceStatusOutput)
}

func (o WebExperienceOutput) Subtitle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebExperience) pulumi.StringPtrOutput { return v.Subtitle }).(pulumi.StringPtrOutput)
}

func (o WebExperienceOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *WebExperience) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func (o WebExperienceOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebExperience) pulumi.StringPtrOutput { return v.Title }).(pulumi.StringPtrOutput)
}

func (o WebExperienceOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *WebExperience) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o WebExperienceOutput) WebExperienceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *WebExperience) pulumi.StringOutput { return v.WebExperienceArn }).(pulumi.StringOutput)
}

func (o WebExperienceOutput) WebExperienceId() pulumi.StringOutput {
	return o.ApplyT(func(v *WebExperience) pulumi.StringOutput { return v.WebExperienceId }).(pulumi.StringOutput)
}

func (o WebExperienceOutput) WelcomeMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebExperience) pulumi.StringPtrOutput { return v.WelcomeMessage }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebExperienceInput)(nil)).Elem(), &WebExperience{})
	pulumi.RegisterOutputType(WebExperienceOutput{})
}
