// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qbusiness

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::QBusiness::Application Resource Type
func LookupApplication(ctx *pulumi.Context, args *LookupApplicationArgs, opts ...pulumi.InvokeOption) (*LookupApplicationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplicationResult
	err := ctx.Invoke("aws-native:qbusiness:getApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApplicationArgs struct {
	// The identifier for the Amazon Q Business application.
	ApplicationId string `pulumi:"applicationId"`
}

type LookupApplicationResult struct {
	// The Amazon Resource Name (ARN) of the Amazon Q Business application.
	ApplicationArn *string `pulumi:"applicationArn"`
	// The identifier for the Amazon Q Business application.
	ApplicationId *string `pulumi:"applicationId"`
	// Configuration information for the file upload during chat feature.
	AttachmentsConfiguration *ApplicationAttachmentsConfiguration `pulumi:"attachmentsConfiguration"`
	// Subscription configuration information for an Amazon Q Business application using IAM identity federation for user management.
	AutoSubscriptionConfiguration *ApplicationAutoSubscriptionConfiguration `pulumi:"autoSubscriptionConfiguration"`
	// The Unix timestamp when the Amazon Q Business application was created.
	CreatedAt *string `pulumi:"createdAt"`
	// A description for the Amazon Q Business application.
	Description *string `pulumi:"description"`
	// The name of the Amazon Q Business application.
	DisplayName *string `pulumi:"displayName"`
	// The Amazon Resource Name (ARN) of the AWS IAM Identity Center instance attached to your Amazon Q Business application.
	IdentityCenterApplicationArn *string `pulumi:"identityCenterApplicationArn"`
	// Configuration information about chat response personalization. For more information, see [Personalizing chat responses](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/personalizing-chat-responses.html) .
	PersonalizationConfiguration *ApplicationPersonalizationConfiguration `pulumi:"personalizationConfiguration"`
	// Configuration information about Amazon Q Apps.
	QAppsConfiguration *ApplicationQAppsConfiguration `pulumi:"qAppsConfiguration"`
	// The Amazon Resource Name (ARN) of an IAM role with permissions to access your Amazon CloudWatch logs and metrics. If this property is not specified, Amazon Q Business will create a [service linked role (SLR)](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/using-service-linked-roles.html#slr-permissions) and use it as the application's role.
	RoleArn *string `pulumi:"roleArn"`
	// The status of the Amazon Q Business application. The application is ready to use when the status is `ACTIVE` .
	Status *ApplicationStatus `pulumi:"status"`
	// A list of key-value pairs that identify or categorize your Amazon Q Business application. You can also use tags to help control access to the application. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
	Tags []aws.Tag `pulumi:"tags"`
	// The Unix timestamp when the Amazon Q Business application was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

func LookupApplicationOutput(ctx *pulumi.Context, args LookupApplicationOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApplicationResultOutput, error) {
			args := v.(LookupApplicationArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupApplicationResult
			secret, err := ctx.InvokePackageRaw("aws-native:qbusiness:getApplication", args, &rv, "", opts...)
			if err != nil {
				return LookupApplicationResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupApplicationResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupApplicationResultOutput), nil
			}
			return output, nil
		}).(LookupApplicationResultOutput)
}

type LookupApplicationOutputArgs struct {
	// The identifier for the Amazon Q Business application.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
}

func (LookupApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationArgs)(nil)).Elem()
}

type LookupApplicationResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationResult)(nil)).Elem()
}

func (o LookupApplicationResultOutput) ToLookupApplicationResultOutput() LookupApplicationResultOutput {
	return o
}

func (o LookupApplicationResultOutput) ToLookupApplicationResultOutputWithContext(ctx context.Context) LookupApplicationResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the Amazon Q Business application.
func (o LookupApplicationResultOutput) ApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.ApplicationArn }).(pulumi.StringPtrOutput)
}

// The identifier for the Amazon Q Business application.
func (o LookupApplicationResultOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// Configuration information for the file upload during chat feature.
func (o LookupApplicationResultOutput) AttachmentsConfiguration() ApplicationAttachmentsConfigurationPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *ApplicationAttachmentsConfiguration {
		return v.AttachmentsConfiguration
	}).(ApplicationAttachmentsConfigurationPtrOutput)
}

// Subscription configuration information for an Amazon Q Business application using IAM identity federation for user management.
func (o LookupApplicationResultOutput) AutoSubscriptionConfiguration() ApplicationAutoSubscriptionConfigurationPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *ApplicationAutoSubscriptionConfiguration {
		return v.AutoSubscriptionConfiguration
	}).(ApplicationAutoSubscriptionConfigurationPtrOutput)
}

// The Unix timestamp when the Amazon Q Business application was created.
func (o LookupApplicationResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// A description for the Amazon Q Business application.
func (o LookupApplicationResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the Amazon Q Business application.
func (o LookupApplicationResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the AWS IAM Identity Center instance attached to your Amazon Q Business application.
func (o LookupApplicationResultOutput) IdentityCenterApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.IdentityCenterApplicationArn }).(pulumi.StringPtrOutput)
}

// Configuration information about chat response personalization. For more information, see [Personalizing chat responses](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/personalizing-chat-responses.html) .
func (o LookupApplicationResultOutput) PersonalizationConfiguration() ApplicationPersonalizationConfigurationPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *ApplicationPersonalizationConfiguration {
		return v.PersonalizationConfiguration
	}).(ApplicationPersonalizationConfigurationPtrOutput)
}

// Configuration information about Amazon Q Apps.
func (o LookupApplicationResultOutput) QAppsConfiguration() ApplicationQAppsConfigurationPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *ApplicationQAppsConfiguration { return v.QAppsConfiguration }).(ApplicationQAppsConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of an IAM role with permissions to access your Amazon CloudWatch logs and metrics. If this property is not specified, Amazon Q Business will create a [service linked role (SLR)](https://docs.aws.amazon.com/amazonq/latest/qbusiness-ug/using-service-linked-roles.html#slr-permissions) and use it as the application's role.
func (o LookupApplicationResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The status of the Amazon Q Business application. The application is ready to use when the status is `ACTIVE` .
func (o LookupApplicationResultOutput) Status() ApplicationStatusPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *ApplicationStatus { return v.Status }).(ApplicationStatusPtrOutput)
}

// A list of key-value pairs that identify or categorize your Amazon Q Business application. You can also use tags to help control access to the application. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
func (o LookupApplicationResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupApplicationResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The Unix timestamp when the Amazon Q Business application was last updated.
func (o LookupApplicationResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationResultOutput{})
}
