// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qbusiness

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::QBusiness::DataSource Resource Type
func LookupDataSource(ctx *pulumi.Context, args *LookupDataSourceArgs, opts ...pulumi.InvokeOption) (*LookupDataSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataSourceResult
	err := ctx.Invoke("aws-native:qbusiness:getDataSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDataSourceArgs struct {
	ApplicationId string `pulumi:"applicationId"`
	DataSourceId  string `pulumi:"dataSourceId"`
	IndexId       string `pulumi:"indexId"`
}

type LookupDataSourceResult struct {
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::QBusiness::DataSource` for more information about the expected schema for this property.
	Configuration                   interface{}                                `pulumi:"configuration"`
	CreatedAt                       *string                                    `pulumi:"createdAt"`
	DataSourceArn                   *string                                    `pulumi:"dataSourceArn"`
	DataSourceId                    *string                                    `pulumi:"dataSourceId"`
	Description                     *string                                    `pulumi:"description"`
	DisplayName                     *string                                    `pulumi:"displayName"`
	DocumentEnrichmentConfiguration *DataSourceDocumentEnrichmentConfiguration `pulumi:"documentEnrichmentConfiguration"`
	RoleArn                         *string                                    `pulumi:"roleArn"`
	Status                          *DataSourceStatus                          `pulumi:"status"`
	SyncSchedule                    *string                                    `pulumi:"syncSchedule"`
	Tags                            []aws.Tag                                  `pulumi:"tags"`
	Type                            *string                                    `pulumi:"type"`
	UpdatedAt                       *string                                    `pulumi:"updatedAt"`
	VpcConfiguration                *DataSourceVpcConfiguration                `pulumi:"vpcConfiguration"`
}

func LookupDataSourceOutput(ctx *pulumi.Context, args LookupDataSourceOutputArgs, opts ...pulumi.InvokeOption) LookupDataSourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDataSourceResult, error) {
			args := v.(LookupDataSourceArgs)
			r, err := LookupDataSource(ctx, &args, opts...)
			var s LookupDataSourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDataSourceResultOutput)
}

type LookupDataSourceOutputArgs struct {
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	DataSourceId  pulumi.StringInput `pulumi:"dataSourceId"`
	IndexId       pulumi.StringInput `pulumi:"indexId"`
}

func (LookupDataSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataSourceArgs)(nil)).Elem()
}

type LookupDataSourceResultOutput struct{ *pulumi.OutputState }

func (LookupDataSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataSourceResult)(nil)).Elem()
}

func (o LookupDataSourceResultOutput) ToLookupDataSourceResultOutput() LookupDataSourceResultOutput {
	return o
}

func (o LookupDataSourceResultOutput) ToLookupDataSourceResultOutputWithContext(ctx context.Context) LookupDataSourceResultOutput {
	return o
}

// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::QBusiness::DataSource` for more information about the expected schema for this property.
func (o LookupDataSourceResultOutput) Configuration() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupDataSourceResult) interface{} { return v.Configuration }).(pulumi.AnyOutput)
}

func (o LookupDataSourceResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o LookupDataSourceResultOutput) DataSourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.DataSourceArn }).(pulumi.StringPtrOutput)
}

func (o LookupDataSourceResultOutput) DataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.DataSourceId }).(pulumi.StringPtrOutput)
}

func (o LookupDataSourceResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupDataSourceResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupDataSourceResultOutput) DocumentEnrichmentConfiguration() DataSourceDocumentEnrichmentConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceDocumentEnrichmentConfiguration {
		return v.DocumentEnrichmentConfiguration
	}).(DataSourceDocumentEnrichmentConfigurationPtrOutput)
}

func (o LookupDataSourceResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o LookupDataSourceResultOutput) Status() DataSourceStatusPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceStatus { return v.Status }).(DataSourceStatusPtrOutput)
}

func (o LookupDataSourceResultOutput) SyncSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.SyncSchedule }).(pulumi.StringPtrOutput)
}

func (o LookupDataSourceResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDataSourceResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func (o LookupDataSourceResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o LookupDataSourceResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func (o LookupDataSourceResultOutput) VpcConfiguration() DataSourceVpcConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceVpcConfiguration { return v.VpcConfiguration }).(DataSourceVpcConfigurationPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataSourceResultOutput{})
}
