// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qbusiness

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::QBusiness::DataSource Resource Type
func LookupDataSource(ctx *pulumi.Context, args *LookupDataSourceArgs, opts ...pulumi.InvokeOption) (*LookupDataSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataSourceResult
	err := ctx.Invoke("aws-native:qbusiness:getDataSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDataSourceArgs struct {
	// The identifier of the Amazon Q Business application the data source will be attached to.
	ApplicationId string `pulumi:"applicationId"`
	// The identifier of the Amazon Q Business data source.
	DataSourceId string `pulumi:"dataSourceId"`
	// The identifier of the index the data source is attached to.
	IndexId string `pulumi:"indexId"`
}

type LookupDataSourceResult struct {
	// Configuration information to connect to your data source repository. For configuration templates for your specific data source, see [Supported connectors](https://docs.aws.amazon.com/amazonq/latest/business-use-dg/connectors-list.html) .
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::QBusiness::DataSource` for more information about the expected schema for this property.
	Configuration interface{} `pulumi:"configuration"`
	// The Unix timestamp when the Amazon Q Business data source was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The Amazon Resource Name (ARN) of a data source in an Amazon Q Business application.
	DataSourceArn *string `pulumi:"dataSourceArn"`
	// The identifier of the Amazon Q Business data source.
	DataSourceId *string `pulumi:"dataSourceId"`
	// A description for the data source connector.
	Description *string `pulumi:"description"`
	// The name of the Amazon Q Business data source.
	DisplayName *string `pulumi:"displayName"`
	// Provides the configuration information for altering document metadata and content during the document ingestion process.
	//
	// For more information, see [Custom document enrichment](https://docs.aws.amazon.com/amazonq/latest/business-use-dg/custom-document-enrichment.html) .
	DocumentEnrichmentConfiguration *DataSourceDocumentEnrichmentConfiguration `pulumi:"documentEnrichmentConfiguration"`
	// The Amazon Resource Name (ARN) of an IAM role with permission to access the data source and required resources.
	RoleArn *string `pulumi:"roleArn"`
	// The status of the Amazon Q Business data source.
	Status *DataSourceStatus `pulumi:"status"`
	// Sets the frequency for Amazon Q Business to check the documents in your data source repository and update your index. If you don't set a schedule, Amazon Q Business won't periodically update the index.
	//
	// Specify a `cron-` format schedule string or an empty string to indicate that the index is updated on demand. You can't specify the `Schedule` parameter when the `Type` parameter is set to `CUSTOM` . If you do, you receive a `ValidationException` exception.
	SyncSchedule *string `pulumi:"syncSchedule"`
	// A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
	Tags []aws.Tag `pulumi:"tags"`
	// The type of the Amazon Q Business data source.
	Type *string `pulumi:"type"`
	// The Unix timestamp when the Amazon Q Business data source was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
	// Provides configuration information needed to connect to an Amazon VPC (Virtual Private Cloud).
	VpcConfiguration *DataSourceVpcConfiguration `pulumi:"vpcConfiguration"`
}

func LookupDataSourceOutput(ctx *pulumi.Context, args LookupDataSourceOutputArgs, opts ...pulumi.InvokeOption) LookupDataSourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDataSourceResult, error) {
			args := v.(LookupDataSourceArgs)
			r, err := LookupDataSource(ctx, &args, opts...)
			var s LookupDataSourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDataSourceResultOutput)
}

type LookupDataSourceOutputArgs struct {
	// The identifier of the Amazon Q Business application the data source will be attached to.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The identifier of the Amazon Q Business data source.
	DataSourceId pulumi.StringInput `pulumi:"dataSourceId"`
	// The identifier of the index the data source is attached to.
	IndexId pulumi.StringInput `pulumi:"indexId"`
}

func (LookupDataSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataSourceArgs)(nil)).Elem()
}

type LookupDataSourceResultOutput struct{ *pulumi.OutputState }

func (LookupDataSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataSourceResult)(nil)).Elem()
}

func (o LookupDataSourceResultOutput) ToLookupDataSourceResultOutput() LookupDataSourceResultOutput {
	return o
}

func (o LookupDataSourceResultOutput) ToLookupDataSourceResultOutputWithContext(ctx context.Context) LookupDataSourceResultOutput {
	return o
}

// Configuration information to connect to your data source repository. For configuration templates for your specific data source, see [Supported connectors](https://docs.aws.amazon.com/amazonq/latest/business-use-dg/connectors-list.html) .
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::QBusiness::DataSource` for more information about the expected schema for this property.
func (o LookupDataSourceResultOutput) Configuration() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupDataSourceResult) interface{} { return v.Configuration }).(pulumi.AnyOutput)
}

// The Unix timestamp when the Amazon Q Business data source was created.
func (o LookupDataSourceResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of a data source in an Amazon Q Business application.
func (o LookupDataSourceResultOutput) DataSourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.DataSourceArn }).(pulumi.StringPtrOutput)
}

// The identifier of the Amazon Q Business data source.
func (o LookupDataSourceResultOutput) DataSourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.DataSourceId }).(pulumi.StringPtrOutput)
}

// A description for the data source connector.
func (o LookupDataSourceResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the Amazon Q Business data source.
func (o LookupDataSourceResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Provides the configuration information for altering document metadata and content during the document ingestion process.
//
// For more information, see [Custom document enrichment](https://docs.aws.amazon.com/amazonq/latest/business-use-dg/custom-document-enrichment.html) .
func (o LookupDataSourceResultOutput) DocumentEnrichmentConfiguration() DataSourceDocumentEnrichmentConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceDocumentEnrichmentConfiguration {
		return v.DocumentEnrichmentConfiguration
	}).(DataSourceDocumentEnrichmentConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of an IAM role with permission to access the data source and required resources.
func (o LookupDataSourceResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The status of the Amazon Q Business data source.
func (o LookupDataSourceResultOutput) Status() DataSourceStatusPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceStatus { return v.Status }).(DataSourceStatusPtrOutput)
}

// Sets the frequency for Amazon Q Business to check the documents in your data source repository and update your index. If you don't set a schedule, Amazon Q Business won't periodically update the index.
//
// Specify a `cron-` format schedule string or an empty string to indicate that the index is updated on demand. You can't specify the `Schedule` parameter when the `Type` parameter is set to `CUSTOM` . If you do, you receive a `ValidationException` exception.
func (o LookupDataSourceResultOutput) SyncSchedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.SyncSchedule }).(pulumi.StringPtrOutput)
}

// A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
func (o LookupDataSourceResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDataSourceResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The type of the Amazon Q Business data source.
func (o LookupDataSourceResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The Unix timestamp when the Amazon Q Business data source was last updated.
func (o LookupDataSourceResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// Provides configuration information needed to connect to an Amazon VPC (Virtual Private Cloud).
func (o LookupDataSourceResultOutput) VpcConfiguration() DataSourceVpcConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceVpcConfiguration { return v.VpcConfiguration }).(DataSourceVpcConfigurationPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataSourceResultOutput{})
}
