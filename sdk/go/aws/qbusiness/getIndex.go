// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qbusiness

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::QBusiness::Index Resource Type
func LookupIndex(ctx *pulumi.Context, args *LookupIndexArgs, opts ...pulumi.InvokeOption) (*LookupIndexResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIndexResult
	err := ctx.Invoke("aws-native:qbusiness:getIndex", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIndexArgs struct {
	// The identifier of the Amazon Q Business application using the index.
	ApplicationId string `pulumi:"applicationId"`
	// The identifier for the index.
	IndexId string `pulumi:"indexId"`
}

type LookupIndexResult struct {
	// The capacity units you want to provision for your index. You can add and remove capacity to fit your usage needs.
	CapacityConfiguration *IndexCapacityConfiguration `pulumi:"capacityConfiguration"`
	// The Unix timestamp when the index was created.
	CreatedAt *string `pulumi:"createdAt"`
	// A description for the Amazon Q Business index.
	Description *string `pulumi:"description"`
	// The name of the index.
	DisplayName *string `pulumi:"displayName"`
	// Configuration information for document attributes. Document attributes are metadata or fields associated with your documents. For example, the company department name associated with each document.
	//
	// For more information, see [Understanding document attributes](https://docs.aws.amazon.com/amazonq/latest/business-use-dg/doc-attributes.html) .
	DocumentAttributeConfigurations []IndexDocumentAttributeConfiguration `pulumi:"documentAttributeConfigurations"`
	// The Amazon Resource Name (ARN) of an Amazon Q Business index.
	IndexArn *string `pulumi:"indexArn"`
	// The identifier for the index.
	IndexId         *string          `pulumi:"indexId"`
	IndexStatistics *IndexStatistics `pulumi:"indexStatistics"`
	// The current status of the index. When the status is `ACTIVE` , the index is ready.
	Status *IndexStatus `pulumi:"status"`
	// A list of key-value pairs that identify or categorize the index. You can also use tags to help control access to the index. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
	Tags []aws.Tag `pulumi:"tags"`
	// The Unix timestamp when the index was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

func LookupIndexOutput(ctx *pulumi.Context, args LookupIndexOutputArgs, opts ...pulumi.InvokeOption) LookupIndexResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIndexResult, error) {
			args := v.(LookupIndexArgs)
			r, err := LookupIndex(ctx, &args, opts...)
			var s LookupIndexResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIndexResultOutput)
}

type LookupIndexOutputArgs struct {
	// The identifier of the Amazon Q Business application using the index.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// The identifier for the index.
	IndexId pulumi.StringInput `pulumi:"indexId"`
}

func (LookupIndexOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIndexArgs)(nil)).Elem()
}

type LookupIndexResultOutput struct{ *pulumi.OutputState }

func (LookupIndexResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIndexResult)(nil)).Elem()
}

func (o LookupIndexResultOutput) ToLookupIndexResultOutput() LookupIndexResultOutput {
	return o
}

func (o LookupIndexResultOutput) ToLookupIndexResultOutputWithContext(ctx context.Context) LookupIndexResultOutput {
	return o
}

// The capacity units you want to provision for your index. You can add and remove capacity to fit your usage needs.
func (o LookupIndexResultOutput) CapacityConfiguration() IndexCapacityConfigurationPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *IndexCapacityConfiguration { return v.CapacityConfiguration }).(IndexCapacityConfigurationPtrOutput)
}

// The Unix timestamp when the index was created.
func (o LookupIndexResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// A description for the Amazon Q Business index.
func (o LookupIndexResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the index.
func (o LookupIndexResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Configuration information for document attributes. Document attributes are metadata or fields associated with your documents. For example, the company department name associated with each document.
//
// For more information, see [Understanding document attributes](https://docs.aws.amazon.com/amazonq/latest/business-use-dg/doc-attributes.html) .
func (o LookupIndexResultOutput) DocumentAttributeConfigurations() IndexDocumentAttributeConfigurationArrayOutput {
	return o.ApplyT(func(v LookupIndexResult) []IndexDocumentAttributeConfiguration {
		return v.DocumentAttributeConfigurations
	}).(IndexDocumentAttributeConfigurationArrayOutput)
}

// The Amazon Resource Name (ARN) of an Amazon Q Business index.
func (o LookupIndexResultOutput) IndexArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *string { return v.IndexArn }).(pulumi.StringPtrOutput)
}

// The identifier for the index.
func (o LookupIndexResultOutput) IndexId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *string { return v.IndexId }).(pulumi.StringPtrOutput)
}

func (o LookupIndexResultOutput) IndexStatistics() IndexStatisticsPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *IndexStatistics { return v.IndexStatistics }).(IndexStatisticsPtrOutput)
}

// The current status of the index. When the status is `ACTIVE` , the index is ready.
func (o LookupIndexResultOutput) Status() IndexStatusPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *IndexStatus { return v.Status }).(IndexStatusPtrOutput)
}

// A list of key-value pairs that identify or categorize the index. You can also use tags to help control access to the index. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
func (o LookupIndexResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupIndexResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The Unix timestamp when the index was last updated.
func (o LookupIndexResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIndexResultOutput{})
}
