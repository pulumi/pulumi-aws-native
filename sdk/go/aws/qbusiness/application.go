// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qbusiness

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::QBusiness::Application Resource Type
type Application struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the Amazon Q Business application.
	ApplicationArn pulumi.StringOutput `pulumi:"applicationArn"`
	// The identifier for the Amazon Q Business application.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Configuration information for the file upload during chat feature.
	AttachmentsConfiguration ApplicationAttachmentsConfigurationPtrOutput `pulumi:"attachmentsConfiguration"`
	// The Unix timestamp when the Amazon Q Business application was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A description for the Amazon Q Business application.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the Amazon Q Business application.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Provides the identifier of the AWS KMS key used to encrypt data indexed by Amazon Q Business. Amazon Q Business doesn't support asymmetric keys.
	EncryptionConfiguration ApplicationEncryptionConfigurationPtrOutput `pulumi:"encryptionConfiguration"`
	// The Amazon Resource Name (ARN) of the AWS IAM Identity Center instance attached to your Amazon Q Business application.
	IdentityCenterApplicationArn pulumi.StringOutput `pulumi:"identityCenterApplicationArn"`
	// The Amazon Resource Name (ARN) of the IAM Identity Center instance you are either creating for—or connecting to—your Amazon Q Business application.
	//
	// *Required* : `Yes`
	IdentityCenterInstanceArn pulumi.StringPtrOutput `pulumi:"identityCenterInstanceArn"`
	// Configuration information about Amazon Q Apps. (preview feature)
	QAppsConfiguration ApplicationQAppsConfigurationPtrOutput `pulumi:"qAppsConfiguration"`
	// The Amazon Resource Name (ARN) of an IAM role with permissions to access your Amazon CloudWatch logs and metrics.
	RoleArn pulumi.StringPtrOutput `pulumi:"roleArn"`
	// The status of the Amazon Q Business application. The application is ready to use when the status is `ACTIVE` .
	Status ApplicationStatusOutput `pulumi:"status"`
	// A list of key-value pairs that identify or categorize your Amazon Q Business application. You can also use tags to help control access to the application. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The Unix timestamp when the Amazon Q Business application was last updated.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"encryptionConfiguration",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Application
	err := ctx.RegisterResource("aws-native:qbusiness:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("aws-native:qbusiness:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
}

type ApplicationState struct {
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	// Configuration information for the file upload during chat feature.
	AttachmentsConfiguration *ApplicationAttachmentsConfiguration `pulumi:"attachmentsConfiguration"`
	// A description for the Amazon Q Business application.
	Description *string `pulumi:"description"`
	// The name of the Amazon Q Business application.
	DisplayName string `pulumi:"displayName"`
	// Provides the identifier of the AWS KMS key used to encrypt data indexed by Amazon Q Business. Amazon Q Business doesn't support asymmetric keys.
	EncryptionConfiguration *ApplicationEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// The Amazon Resource Name (ARN) of the IAM Identity Center instance you are either creating for—or connecting to—your Amazon Q Business application.
	//
	// *Required* : `Yes`
	IdentityCenterInstanceArn *string `pulumi:"identityCenterInstanceArn"`
	// Configuration information about Amazon Q Apps. (preview feature)
	QAppsConfiguration *ApplicationQAppsConfiguration `pulumi:"qAppsConfiguration"`
	// The Amazon Resource Name (ARN) of an IAM role with permissions to access your Amazon CloudWatch logs and metrics.
	RoleArn *string `pulumi:"roleArn"`
	// A list of key-value pairs that identify or categorize your Amazon Q Business application. You can also use tags to help control access to the application. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	// Configuration information for the file upload during chat feature.
	AttachmentsConfiguration ApplicationAttachmentsConfigurationPtrInput
	// A description for the Amazon Q Business application.
	Description pulumi.StringPtrInput
	// The name of the Amazon Q Business application.
	DisplayName pulumi.StringInput
	// Provides the identifier of the AWS KMS key used to encrypt data indexed by Amazon Q Business. Amazon Q Business doesn't support asymmetric keys.
	EncryptionConfiguration ApplicationEncryptionConfigurationPtrInput
	// The Amazon Resource Name (ARN) of the IAM Identity Center instance you are either creating for—or connecting to—your Amazon Q Business application.
	//
	// *Required* : `Yes`
	IdentityCenterInstanceArn pulumi.StringPtrInput
	// Configuration information about Amazon Q Apps. (preview feature)
	QAppsConfiguration ApplicationQAppsConfigurationPtrInput
	// The Amazon Resource Name (ARN) of an IAM role with permissions to access your Amazon CloudWatch logs and metrics.
	RoleArn pulumi.StringPtrInput
	// A list of key-value pairs that identify or categorize your Amazon Q Business application. You can also use tags to help control access to the application. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
	Tags aws.TagArrayInput
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}

type ApplicationInput interface {
	pulumi.Input

	ToApplicationOutput() ApplicationOutput
	ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput
}

func (*Application) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (i *Application) ToApplicationOutput() ApplicationOutput {
	return i.ToApplicationOutputWithContext(context.Background())
}

func (i *Application) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutput)
}

type ApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (o ApplicationOutput) ToApplicationOutput() ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return o
}

// The Amazon Resource Name (ARN) of the Amazon Q Business application.
func (o ApplicationOutput) ApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.ApplicationArn }).(pulumi.StringOutput)
}

// The identifier for the Amazon Q Business application.
func (o ApplicationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Configuration information for the file upload during chat feature.
func (o ApplicationOutput) AttachmentsConfiguration() ApplicationAttachmentsConfigurationPtrOutput {
	return o.ApplyT(func(v *Application) ApplicationAttachmentsConfigurationPtrOutput { return v.AttachmentsConfiguration }).(ApplicationAttachmentsConfigurationPtrOutput)
}

// The Unix timestamp when the Amazon Q Business application was created.
func (o ApplicationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// A description for the Amazon Q Business application.
func (o ApplicationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the Amazon Q Business application.
func (o ApplicationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Provides the identifier of the AWS KMS key used to encrypt data indexed by Amazon Q Business. Amazon Q Business doesn't support asymmetric keys.
func (o ApplicationOutput) EncryptionConfiguration() ApplicationEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *Application) ApplicationEncryptionConfigurationPtrOutput { return v.EncryptionConfiguration }).(ApplicationEncryptionConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the AWS IAM Identity Center instance attached to your Amazon Q Business application.
func (o ApplicationOutput) IdentityCenterApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.IdentityCenterApplicationArn }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the IAM Identity Center instance you are either creating for—or connecting to—your Amazon Q Business application.
//
// *Required* : `Yes`
func (o ApplicationOutput) IdentityCenterInstanceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.IdentityCenterInstanceArn }).(pulumi.StringPtrOutput)
}

// Configuration information about Amazon Q Apps. (preview feature)
func (o ApplicationOutput) QAppsConfiguration() ApplicationQAppsConfigurationPtrOutput {
	return o.ApplyT(func(v *Application) ApplicationQAppsConfigurationPtrOutput { return v.QAppsConfiguration }).(ApplicationQAppsConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of an IAM role with permissions to access your Amazon CloudWatch logs and metrics.
func (o ApplicationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The status of the Amazon Q Business application. The application is ready to use when the status is `ACTIVE` .
func (o ApplicationOutput) Status() ApplicationStatusOutput {
	return o.ApplyT(func(v *Application) ApplicationStatusOutput { return v.Status }).(ApplicationStatusOutput)
}

// A list of key-value pairs that identify or categorize your Amazon Q Business application. You can also use tags to help control access to the application. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @.
func (o ApplicationOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Application) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The Unix timestamp when the Amazon Q Business application was last updated.
func (o ApplicationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationInput)(nil)).Elem(), &Application{})
	pulumi.RegisterOutputType(ApplicationOutput{})
}
