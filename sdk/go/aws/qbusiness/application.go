// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package qbusiness

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::QBusiness::Application Resource Type
type Application struct {
	pulumi.CustomResourceState

	ApplicationArn               pulumi.StringOutput                          `pulumi:"applicationArn"`
	ApplicationId                pulumi.StringOutput                          `pulumi:"applicationId"`
	AttachmentsConfiguration     ApplicationAttachmentsConfigurationPtrOutput `pulumi:"attachmentsConfiguration"`
	CreatedAt                    pulumi.StringOutput                          `pulumi:"createdAt"`
	Description                  pulumi.StringPtrOutput                       `pulumi:"description"`
	DisplayName                  pulumi.StringOutput                          `pulumi:"displayName"`
	EncryptionConfiguration      ApplicationEncryptionConfigurationPtrOutput  `pulumi:"encryptionConfiguration"`
	IdentityCenterApplicationArn pulumi.StringOutput                          `pulumi:"identityCenterApplicationArn"`
	IdentityCenterInstanceArn    pulumi.StringPtrOutput                       `pulumi:"identityCenterInstanceArn"`
	RoleArn                      pulumi.StringPtrOutput                       `pulumi:"roleArn"`
	Status                       ApplicationStatusOutput                      `pulumi:"status"`
	Tags                         aws.TagArrayOutput                           `pulumi:"tags"`
	UpdatedAt                    pulumi.StringOutput                          `pulumi:"updatedAt"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"encryptionConfiguration",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Application
	err := ctx.RegisterResource("aws-native:qbusiness:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("aws-native:qbusiness:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
}

type ApplicationState struct {
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	AttachmentsConfiguration  *ApplicationAttachmentsConfiguration `pulumi:"attachmentsConfiguration"`
	Description               *string                              `pulumi:"description"`
	DisplayName               string                               `pulumi:"displayName"`
	EncryptionConfiguration   *ApplicationEncryptionConfiguration  `pulumi:"encryptionConfiguration"`
	IdentityCenterInstanceArn *string                              `pulumi:"identityCenterInstanceArn"`
	RoleArn                   *string                              `pulumi:"roleArn"`
	Tags                      []aws.Tag                            `pulumi:"tags"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	AttachmentsConfiguration  ApplicationAttachmentsConfigurationPtrInput
	Description               pulumi.StringPtrInput
	DisplayName               pulumi.StringInput
	EncryptionConfiguration   ApplicationEncryptionConfigurationPtrInput
	IdentityCenterInstanceArn pulumi.StringPtrInput
	RoleArn                   pulumi.StringPtrInput
	Tags                      aws.TagArrayInput
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}

type ApplicationInput interface {
	pulumi.Input

	ToApplicationOutput() ApplicationOutput
	ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput
}

func (*Application) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (i *Application) ToApplicationOutput() ApplicationOutput {
	return i.ToApplicationOutputWithContext(context.Background())
}

func (i *Application) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutput)
}

type ApplicationOutput struct{ *pulumi.OutputState }

func (ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil)).Elem()
}

func (o ApplicationOutput) ToApplicationOutput() ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return o
}

func (o ApplicationOutput) ApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.ApplicationArn }).(pulumi.StringOutput)
}

func (o ApplicationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o ApplicationOutput) AttachmentsConfiguration() ApplicationAttachmentsConfigurationPtrOutput {
	return o.ApplyT(func(v *Application) ApplicationAttachmentsConfigurationPtrOutput { return v.AttachmentsConfiguration }).(ApplicationAttachmentsConfigurationPtrOutput)
}

func (o ApplicationOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ApplicationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ApplicationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o ApplicationOutput) EncryptionConfiguration() ApplicationEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *Application) ApplicationEncryptionConfigurationPtrOutput { return v.EncryptionConfiguration }).(ApplicationEncryptionConfigurationPtrOutput)
}

func (o ApplicationOutput) IdentityCenterApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.IdentityCenterApplicationArn }).(pulumi.StringOutput)
}

func (o ApplicationOutput) IdentityCenterInstanceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.IdentityCenterInstanceArn }).(pulumi.StringPtrOutput)
}

func (o ApplicationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Application) pulumi.StringPtrOutput { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o ApplicationOutput) Status() ApplicationStatusOutput {
	return o.ApplyT(func(v *Application) ApplicationStatusOutput { return v.Status }).(ApplicationStatusOutput)
}

func (o ApplicationOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Application) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func (o ApplicationOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Application) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationInput)(nil)).Elem(), &Application{})
	pulumi.RegisterOutputType(ApplicationOutput{})
}
