// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Location::APIKey Resource Type
type ApiKey struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) for the resource. Used when you need to specify a resource across all AWS .
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The timestamp for when the API key resource was created in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sssZ.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Updates the description for the API key resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The optional timestamp for when the API key resource will expire in [ISO 8601 format](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) .
	ExpireTime pulumi.StringPtrOutput `pulumi:"expireTime"`
	// ForceDelete bypasses an API key's expiry conditions and deletes the key. Set the parameter `true` to delete the key or to `false` to not preemptively delete the API key.
	//
	// Valid values: `true` , or `false` .
	//
	// > This action is irreversible. Only use ForceDelete if you are certain the key is no longer in use.
	ForceDelete pulumi.BoolPtrOutput `pulumi:"forceDelete"`
	// The boolean flag to be included for updating `ExpireTime` or Restrictions details.
	// Must be set to `true` to update an API key resource that has been used in the past 7 days. `False` if force update is not preferred.
	ForceUpdate pulumi.BoolPtrOutput `pulumi:"forceUpdate"`
	// The Amazon Resource Name (ARN) for the API key resource. Used when you need to specify a resource across all AWS .
	KeyArn pulumi.StringOutput `pulumi:"keyArn"`
	// A custom name for the API key resource.
	//
	// Requirements:
	//
	// - Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_).
	// - Must be a unique API key name.
	// - No spaces allowed. For example, `ExampleAPIKey` .
	KeyName pulumi.StringOutput `pulumi:"keyName"`
	// Whether the API key should expire. Set to `true` to set the API key to have no expiration time.
	NoExpiry pulumi.BoolPtrOutput `pulumi:"noExpiry"`
	// API Restrictions on the allowed actions, resources, and referers for an API key resource.
	Restrictions ApiKeyRestrictionsOutput `pulumi:"restrictions"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The timestamp for when the API key resource was last updated in ISO 8601 format: `YYYY-MM-DDThh:mm:ss.sssZ` .
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
}

// NewApiKey registers a new resource with the given unique name, arguments, and options.
func NewApiKey(ctx *pulumi.Context,
	name string, args *ApiKeyArgs, opts ...pulumi.ResourceOption) (*ApiKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Restrictions == nil {
		return nil, errors.New("invalid value for required argument 'Restrictions'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"keyName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiKey
	err := ctx.RegisterResource("aws-native:location:ApiKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiKey gets an existing ApiKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiKeyState, opts ...pulumi.ResourceOption) (*ApiKey, error) {
	var resource ApiKey
	err := ctx.ReadResource("aws-native:location:ApiKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiKey resources.
type apiKeyState struct {
}

type ApiKeyState struct {
}

func (ApiKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiKeyState)(nil)).Elem()
}

type apiKeyArgs struct {
	// Updates the description for the API key resource.
	Description *string `pulumi:"description"`
	// The optional timestamp for when the API key resource will expire in [ISO 8601 format](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) .
	ExpireTime *string `pulumi:"expireTime"`
	// ForceDelete bypasses an API key's expiry conditions and deletes the key. Set the parameter `true` to delete the key or to `false` to not preemptively delete the API key.
	//
	// Valid values: `true` , or `false` .
	//
	// > This action is irreversible. Only use ForceDelete if you are certain the key is no longer in use.
	ForceDelete *bool `pulumi:"forceDelete"`
	// The boolean flag to be included for updating `ExpireTime` or Restrictions details.
	// Must be set to `true` to update an API key resource that has been used in the past 7 days. `False` if force update is not preferred.
	ForceUpdate *bool `pulumi:"forceUpdate"`
	// A custom name for the API key resource.
	//
	// Requirements:
	//
	// - Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_).
	// - Must be a unique API key name.
	// - No spaces allowed. For example, `ExampleAPIKey` .
	KeyName *string `pulumi:"keyName"`
	// Whether the API key should expire. Set to `true` to set the API key to have no expiration time.
	NoExpiry *bool `pulumi:"noExpiry"`
	// API Restrictions on the allowed actions, resources, and referers for an API key resource.
	Restrictions ApiKeyRestrictions `pulumi:"restrictions"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ApiKey resource.
type ApiKeyArgs struct {
	// Updates the description for the API key resource.
	Description pulumi.StringPtrInput
	// The optional timestamp for when the API key resource will expire in [ISO 8601 format](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) .
	ExpireTime pulumi.StringPtrInput
	// ForceDelete bypasses an API key's expiry conditions and deletes the key. Set the parameter `true` to delete the key or to `false` to not preemptively delete the API key.
	//
	// Valid values: `true` , or `false` .
	//
	// > This action is irreversible. Only use ForceDelete if you are certain the key is no longer in use.
	ForceDelete pulumi.BoolPtrInput
	// The boolean flag to be included for updating `ExpireTime` or Restrictions details.
	// Must be set to `true` to update an API key resource that has been used in the past 7 days. `False` if force update is not preferred.
	ForceUpdate pulumi.BoolPtrInput
	// A custom name for the API key resource.
	//
	// Requirements:
	//
	// - Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_).
	// - Must be a unique API key name.
	// - No spaces allowed. For example, `ExampleAPIKey` .
	KeyName pulumi.StringPtrInput
	// Whether the API key should expire. Set to `true` to set the API key to have no expiration time.
	NoExpiry pulumi.BoolPtrInput
	// API Restrictions on the allowed actions, resources, and referers for an API key resource.
	Restrictions ApiKeyRestrictionsInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
}

func (ApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiKeyArgs)(nil)).Elem()
}

type ApiKeyInput interface {
	pulumi.Input

	ToApiKeyOutput() ApiKeyOutput
	ToApiKeyOutputWithContext(ctx context.Context) ApiKeyOutput
}

func (*ApiKey) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKey)(nil)).Elem()
}

func (i *ApiKey) ToApiKeyOutput() ApiKeyOutput {
	return i.ToApiKeyOutputWithContext(context.Background())
}

func (i *ApiKey) ToApiKeyOutputWithContext(ctx context.Context) ApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyOutput)
}

type ApiKeyOutput struct{ *pulumi.OutputState }

func (ApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKey)(nil)).Elem()
}

func (o ApiKeyOutput) ToApiKeyOutput() ApiKeyOutput {
	return o
}

func (o ApiKeyOutput) ToApiKeyOutputWithContext(ctx context.Context) ApiKeyOutput {
	return o
}

// The Amazon Resource Name (ARN) for the resource. Used when you need to specify a resource across all AWS .
func (o ApiKeyOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiKey) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The timestamp for when the API key resource was created in ISO 8601 format: YYYY-MM-DDThh:mm:ss.sssZ.
func (o ApiKeyOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiKey) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Updates the description for the API key resource.
func (o ApiKeyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKey) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The optional timestamp for when the API key resource will expire in [ISO 8601 format](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) .
func (o ApiKeyOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiKey) pulumi.StringPtrOutput { return v.ExpireTime }).(pulumi.StringPtrOutput)
}

// ForceDelete bypasses an API key's expiry conditions and deletes the key. Set the parameter `true` to delete the key or to `false` to not preemptively delete the API key.
//
// Valid values: `true` , or `false` .
//
// > This action is irreversible. Only use ForceDelete if you are certain the key is no longer in use.
func (o ApiKeyOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiKey) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

// The boolean flag to be included for updating `ExpireTime` or Restrictions details.
// Must be set to `true` to update an API key resource that has been used in the past 7 days. `False` if force update is not preferred.
func (o ApiKeyOutput) ForceUpdate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiKey) pulumi.BoolPtrOutput { return v.ForceUpdate }).(pulumi.BoolPtrOutput)
}

// The Amazon Resource Name (ARN) for the API key resource. Used when you need to specify a resource across all AWS .
func (o ApiKeyOutput) KeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiKey) pulumi.StringOutput { return v.KeyArn }).(pulumi.StringOutput)
}

// A custom name for the API key resource.
//
// Requirements:
//
// - Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_).
// - Must be a unique API key name.
// - No spaces allowed. For example, `ExampleAPIKey` .
func (o ApiKeyOutput) KeyName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiKey) pulumi.StringOutput { return v.KeyName }).(pulumi.StringOutput)
}

// Whether the API key should expire. Set to `true` to set the API key to have no expiration time.
func (o ApiKeyOutput) NoExpiry() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiKey) pulumi.BoolPtrOutput { return v.NoExpiry }).(pulumi.BoolPtrOutput)
}

// API Restrictions on the allowed actions, resources, and referers for an API key resource.
func (o ApiKeyOutput) Restrictions() ApiKeyRestrictionsOutput {
	return o.ApplyT(func(v *ApiKey) ApiKeyRestrictionsOutput { return v.Restrictions }).(ApiKeyRestrictionsOutput)
}

// An array of key-value pairs to apply to this resource.
func (o ApiKeyOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ApiKey) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The timestamp for when the API key resource was last updated in ISO 8601 format: `YYYY-MM-DDThh:mm:ss.sssZ` .
func (o ApiKeyOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiKey) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyInput)(nil)).Elem(), &ApiKey{})
	pulumi.RegisterOutputType(ApiKeyOutput{})
}
