// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApiKeyRestrictions struct {
	AllowActions   []string `pulumi:"allowActions"`
	AllowReferers  []string `pulumi:"allowReferers"`
	AllowResources []string `pulumi:"allowResources"`
}

// ApiKeyRestrictionsInput is an input type that accepts ApiKeyRestrictionsArgs and ApiKeyRestrictionsOutput values.
// You can construct a concrete instance of `ApiKeyRestrictionsInput` via:
//
//	ApiKeyRestrictionsArgs{...}
type ApiKeyRestrictionsInput interface {
	pulumi.Input

	ToApiKeyRestrictionsOutput() ApiKeyRestrictionsOutput
	ToApiKeyRestrictionsOutputWithContext(context.Context) ApiKeyRestrictionsOutput
}

type ApiKeyRestrictionsArgs struct {
	AllowActions   pulumi.StringArrayInput `pulumi:"allowActions"`
	AllowReferers  pulumi.StringArrayInput `pulumi:"allowReferers"`
	AllowResources pulumi.StringArrayInput `pulumi:"allowResources"`
}

func (ApiKeyRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictions)(nil)).Elem()
}

func (i ApiKeyRestrictionsArgs) ToApiKeyRestrictionsOutput() ApiKeyRestrictionsOutput {
	return i.ToApiKeyRestrictionsOutputWithContext(context.Background())
}

func (i ApiKeyRestrictionsArgs) ToApiKeyRestrictionsOutputWithContext(ctx context.Context) ApiKeyRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiKeyRestrictionsOutput)
}

type ApiKeyRestrictionsOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiKeyRestrictions)(nil)).Elem()
}

func (o ApiKeyRestrictionsOutput) ToApiKeyRestrictionsOutput() ApiKeyRestrictionsOutput {
	return o
}

func (o ApiKeyRestrictionsOutput) ToApiKeyRestrictionsOutputWithContext(ctx context.Context) ApiKeyRestrictionsOutput {
	return o
}

func (o ApiKeyRestrictionsOutput) AllowActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiKeyRestrictions) []string { return v.AllowActions }).(pulumi.StringArrayOutput)
}

func (o ApiKeyRestrictionsOutput) AllowReferers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiKeyRestrictions) []string { return v.AllowReferers }).(pulumi.StringArrayOutput)
}

func (o ApiKeyRestrictionsOutput) AllowResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiKeyRestrictions) []string { return v.AllowResources }).(pulumi.StringArrayOutput)
}

type ApiKeyRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (ApiKeyRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiKeyRestrictions)(nil)).Elem()
}

func (o ApiKeyRestrictionsPtrOutput) ToApiKeyRestrictionsPtrOutput() ApiKeyRestrictionsPtrOutput {
	return o
}

func (o ApiKeyRestrictionsPtrOutput) ToApiKeyRestrictionsPtrOutputWithContext(ctx context.Context) ApiKeyRestrictionsPtrOutput {
	return o
}

func (o ApiKeyRestrictionsPtrOutput) Elem() ApiKeyRestrictionsOutput {
	return o.ApplyT(func(v *ApiKeyRestrictions) ApiKeyRestrictions {
		if v != nil {
			return *v
		}
		var ret ApiKeyRestrictions
		return ret
	}).(ApiKeyRestrictionsOutput)
}

func (o ApiKeyRestrictionsPtrOutput) AllowActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiKeyRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.AllowActions
	}).(pulumi.StringArrayOutput)
}

func (o ApiKeyRestrictionsPtrOutput) AllowReferers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiKeyRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.AllowReferers
	}).(pulumi.StringArrayOutput)
}

func (o ApiKeyRestrictionsPtrOutput) AllowResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiKeyRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.AllowResources
	}).(pulumi.StringArrayOutput)
}

// A key-value pair to associate with a resource.
type ApiKeyTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type GeofenceCollectionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type MapConfiguration struct {
	CustomLayers  []string `pulumi:"customLayers"`
	PoliticalView *string  `pulumi:"politicalView"`
	Style         string   `pulumi:"style"`
}

// MapConfigurationInput is an input type that accepts MapConfigurationArgs and MapConfigurationOutput values.
// You can construct a concrete instance of `MapConfigurationInput` via:
//
//	MapConfigurationArgs{...}
type MapConfigurationInput interface {
	pulumi.Input

	ToMapConfigurationOutput() MapConfigurationOutput
	ToMapConfigurationOutputWithContext(context.Context) MapConfigurationOutput
}

type MapConfigurationArgs struct {
	CustomLayers  pulumi.StringArrayInput `pulumi:"customLayers"`
	PoliticalView pulumi.StringPtrInput   `pulumi:"politicalView"`
	Style         pulumi.StringInput      `pulumi:"style"`
}

func (MapConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MapConfiguration)(nil)).Elem()
}

func (i MapConfigurationArgs) ToMapConfigurationOutput() MapConfigurationOutput {
	return i.ToMapConfigurationOutputWithContext(context.Background())
}

func (i MapConfigurationArgs) ToMapConfigurationOutputWithContext(ctx context.Context) MapConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MapConfigurationOutput)
}

type MapConfigurationOutput struct{ *pulumi.OutputState }

func (MapConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapConfiguration)(nil)).Elem()
}

func (o MapConfigurationOutput) ToMapConfigurationOutput() MapConfigurationOutput {
	return o
}

func (o MapConfigurationOutput) ToMapConfigurationOutputWithContext(ctx context.Context) MapConfigurationOutput {
	return o
}

func (o MapConfigurationOutput) CustomLayers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MapConfiguration) []string { return v.CustomLayers }).(pulumi.StringArrayOutput)
}

func (o MapConfigurationOutput) PoliticalView() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MapConfiguration) *string { return v.PoliticalView }).(pulumi.StringPtrOutput)
}

func (o MapConfigurationOutput) Style() pulumi.StringOutput {
	return o.ApplyT(func(v MapConfiguration) string { return v.Style }).(pulumi.StringOutput)
}

// A key-value pair to associate with a resource.
type MapTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type PlaceIndexDataSourceConfiguration struct {
	IntendedUse *PlaceIndexIntendedUse `pulumi:"intendedUse"`
}

// PlaceIndexDataSourceConfigurationInput is an input type that accepts PlaceIndexDataSourceConfigurationArgs and PlaceIndexDataSourceConfigurationOutput values.
// You can construct a concrete instance of `PlaceIndexDataSourceConfigurationInput` via:
//
//	PlaceIndexDataSourceConfigurationArgs{...}
type PlaceIndexDataSourceConfigurationInput interface {
	pulumi.Input

	ToPlaceIndexDataSourceConfigurationOutput() PlaceIndexDataSourceConfigurationOutput
	ToPlaceIndexDataSourceConfigurationOutputWithContext(context.Context) PlaceIndexDataSourceConfigurationOutput
}

type PlaceIndexDataSourceConfigurationArgs struct {
	IntendedUse PlaceIndexIntendedUsePtrInput `pulumi:"intendedUse"`
}

func (PlaceIndexDataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (i PlaceIndexDataSourceConfigurationArgs) ToPlaceIndexDataSourceConfigurationOutput() PlaceIndexDataSourceConfigurationOutput {
	return i.ToPlaceIndexDataSourceConfigurationOutputWithContext(context.Background())
}

func (i PlaceIndexDataSourceConfigurationArgs) ToPlaceIndexDataSourceConfigurationOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlaceIndexDataSourceConfigurationOutput)
}

func (i PlaceIndexDataSourceConfigurationArgs) ToPlaceIndexDataSourceConfigurationPtrOutput() PlaceIndexDataSourceConfigurationPtrOutput {
	return i.ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i PlaceIndexDataSourceConfigurationArgs) ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlaceIndexDataSourceConfigurationOutput).ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(ctx)
}

// PlaceIndexDataSourceConfigurationPtrInput is an input type that accepts PlaceIndexDataSourceConfigurationArgs, PlaceIndexDataSourceConfigurationPtr and PlaceIndexDataSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `PlaceIndexDataSourceConfigurationPtrInput` via:
//
//	        PlaceIndexDataSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type PlaceIndexDataSourceConfigurationPtrInput interface {
	pulumi.Input

	ToPlaceIndexDataSourceConfigurationPtrOutput() PlaceIndexDataSourceConfigurationPtrOutput
	ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(context.Context) PlaceIndexDataSourceConfigurationPtrOutput
}

type placeIndexDataSourceConfigurationPtrType PlaceIndexDataSourceConfigurationArgs

func PlaceIndexDataSourceConfigurationPtr(v *PlaceIndexDataSourceConfigurationArgs) PlaceIndexDataSourceConfigurationPtrInput {
	return (*placeIndexDataSourceConfigurationPtrType)(v)
}

func (*placeIndexDataSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (i *placeIndexDataSourceConfigurationPtrType) ToPlaceIndexDataSourceConfigurationPtrOutput() PlaceIndexDataSourceConfigurationPtrOutput {
	return i.ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *placeIndexDataSourceConfigurationPtrType) ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlaceIndexDataSourceConfigurationPtrOutput)
}

type PlaceIndexDataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (PlaceIndexDataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (o PlaceIndexDataSourceConfigurationOutput) ToPlaceIndexDataSourceConfigurationOutput() PlaceIndexDataSourceConfigurationOutput {
	return o
}

func (o PlaceIndexDataSourceConfigurationOutput) ToPlaceIndexDataSourceConfigurationOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationOutput {
	return o
}

func (o PlaceIndexDataSourceConfigurationOutput) ToPlaceIndexDataSourceConfigurationPtrOutput() PlaceIndexDataSourceConfigurationPtrOutput {
	return o.ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o PlaceIndexDataSourceConfigurationOutput) ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlaceIndexDataSourceConfiguration) *PlaceIndexDataSourceConfiguration {
		return &v
	}).(PlaceIndexDataSourceConfigurationPtrOutput)
}

func (o PlaceIndexDataSourceConfigurationOutput) IntendedUse() PlaceIndexIntendedUsePtrOutput {
	return o.ApplyT(func(v PlaceIndexDataSourceConfiguration) *PlaceIndexIntendedUse { return v.IntendedUse }).(PlaceIndexIntendedUsePtrOutput)
}

type PlaceIndexDataSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PlaceIndexDataSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlaceIndexDataSourceConfiguration)(nil)).Elem()
}

func (o PlaceIndexDataSourceConfigurationPtrOutput) ToPlaceIndexDataSourceConfigurationPtrOutput() PlaceIndexDataSourceConfigurationPtrOutput {
	return o
}

func (o PlaceIndexDataSourceConfigurationPtrOutput) ToPlaceIndexDataSourceConfigurationPtrOutputWithContext(ctx context.Context) PlaceIndexDataSourceConfigurationPtrOutput {
	return o
}

func (o PlaceIndexDataSourceConfigurationPtrOutput) Elem() PlaceIndexDataSourceConfigurationOutput {
	return o.ApplyT(func(v *PlaceIndexDataSourceConfiguration) PlaceIndexDataSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret PlaceIndexDataSourceConfiguration
		return ret
	}).(PlaceIndexDataSourceConfigurationOutput)
}

func (o PlaceIndexDataSourceConfigurationPtrOutput) IntendedUse() PlaceIndexIntendedUsePtrOutput {
	return o.ApplyT(func(v *PlaceIndexDataSourceConfiguration) *PlaceIndexIntendedUse {
		if v == nil {
			return nil
		}
		return v.IntendedUse
	}).(PlaceIndexIntendedUsePtrOutput)
}

// A key-value pair to associate with a resource.
type PlaceIndexTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type RouteCalculatorTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type TrackerTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiKeyRestrictionsInput)(nil)).Elem(), ApiKeyRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MapConfigurationInput)(nil)).Elem(), MapConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlaceIndexDataSourceConfigurationInput)(nil)).Elem(), PlaceIndexDataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlaceIndexDataSourceConfigurationPtrInput)(nil)).Elem(), PlaceIndexDataSourceConfigurationArgs{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsOutput{})
	pulumi.RegisterOutputType(ApiKeyRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(MapConfigurationOutput{})
	pulumi.RegisterOutputType(PlaceIndexDataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(PlaceIndexDataSourceConfigurationPtrOutput{})
}
