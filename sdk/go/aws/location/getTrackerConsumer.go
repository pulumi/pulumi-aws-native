// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Location::TrackerConsumer Resource Type
func LookupTrackerConsumer(ctx *pulumi.Context, args *LookupTrackerConsumerArgs, opts ...pulumi.InvokeOption) (*LookupTrackerConsumerResult, error) {
	var rv LookupTrackerConsumerResult
	err := ctx.Invoke("aws-native:location:getTrackerConsumer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTrackerConsumerArgs struct {
	ConsumerArn string `pulumi:"consumerArn"`
	TrackerName string `pulumi:"trackerName"`
}

type LookupTrackerConsumerResult struct {
}

func LookupTrackerConsumerOutput(ctx *pulumi.Context, args LookupTrackerConsumerOutputArgs, opts ...pulumi.InvokeOption) LookupTrackerConsumerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTrackerConsumerResult, error) {
			args := v.(LookupTrackerConsumerArgs)
			r, err := LookupTrackerConsumer(ctx, &args, opts...)
			var s LookupTrackerConsumerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTrackerConsumerResultOutput)
}

type LookupTrackerConsumerOutputArgs struct {
	ConsumerArn pulumi.StringInput `pulumi:"consumerArn"`
	TrackerName pulumi.StringInput `pulumi:"trackerName"`
}

func (LookupTrackerConsumerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrackerConsumerArgs)(nil)).Elem()
}

type LookupTrackerConsumerResultOutput struct{ *pulumi.OutputState }

func (LookupTrackerConsumerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrackerConsumerResult)(nil)).Elem()
}

func (o LookupTrackerConsumerResultOutput) ToLookupTrackerConsumerResultOutput() LookupTrackerConsumerResultOutput {
	return o
}

func (o LookupTrackerConsumerResultOutput) ToLookupTrackerConsumerResultOutputWithContext(ctx context.Context) LookupTrackerConsumerResultOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LookupTrackerConsumerResultOutput{})
}
