// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GeofenceCollectionPricingPlan string

const (
	GeofenceCollectionPricingPlanRequestBasedUsage     = GeofenceCollectionPricingPlan("RequestBasedUsage")
	GeofenceCollectionPricingPlanMobileAssetTracking   = GeofenceCollectionPricingPlan("MobileAssetTracking")
	GeofenceCollectionPricingPlanMobileAssetManagement = GeofenceCollectionPricingPlan("MobileAssetManagement")
)

func (GeofenceCollectionPricingPlan) ElementType() reflect.Type {
	return reflect.TypeOf((*GeofenceCollectionPricingPlan)(nil)).Elem()
}

func (e GeofenceCollectionPricingPlan) ToGeofenceCollectionPricingPlanOutput() GeofenceCollectionPricingPlanOutput {
	return pulumi.ToOutput(e).(GeofenceCollectionPricingPlanOutput)
}

func (e GeofenceCollectionPricingPlan) ToGeofenceCollectionPricingPlanOutputWithContext(ctx context.Context) GeofenceCollectionPricingPlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GeofenceCollectionPricingPlanOutput)
}

func (e GeofenceCollectionPricingPlan) ToGeofenceCollectionPricingPlanPtrOutput() GeofenceCollectionPricingPlanPtrOutput {
	return e.ToGeofenceCollectionPricingPlanPtrOutputWithContext(context.Background())
}

func (e GeofenceCollectionPricingPlan) ToGeofenceCollectionPricingPlanPtrOutputWithContext(ctx context.Context) GeofenceCollectionPricingPlanPtrOutput {
	return GeofenceCollectionPricingPlan(e).ToGeofenceCollectionPricingPlanOutputWithContext(ctx).ToGeofenceCollectionPricingPlanPtrOutputWithContext(ctx)
}

func (e GeofenceCollectionPricingPlan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GeofenceCollectionPricingPlan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GeofenceCollectionPricingPlan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GeofenceCollectionPricingPlan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GeofenceCollectionPricingPlanOutput struct{ *pulumi.OutputState }

func (GeofenceCollectionPricingPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GeofenceCollectionPricingPlan)(nil)).Elem()
}

func (o GeofenceCollectionPricingPlanOutput) ToGeofenceCollectionPricingPlanOutput() GeofenceCollectionPricingPlanOutput {
	return o
}

func (o GeofenceCollectionPricingPlanOutput) ToGeofenceCollectionPricingPlanOutputWithContext(ctx context.Context) GeofenceCollectionPricingPlanOutput {
	return o
}

func (o GeofenceCollectionPricingPlanOutput) ToGeofenceCollectionPricingPlanPtrOutput() GeofenceCollectionPricingPlanPtrOutput {
	return o.ToGeofenceCollectionPricingPlanPtrOutputWithContext(context.Background())
}

func (o GeofenceCollectionPricingPlanOutput) ToGeofenceCollectionPricingPlanPtrOutputWithContext(ctx context.Context) GeofenceCollectionPricingPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GeofenceCollectionPricingPlan) *GeofenceCollectionPricingPlan {
		return &v
	}).(GeofenceCollectionPricingPlanPtrOutput)
}

func (o GeofenceCollectionPricingPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GeofenceCollectionPricingPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GeofenceCollectionPricingPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GeofenceCollectionPricingPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GeofenceCollectionPricingPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GeofenceCollectionPricingPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GeofenceCollectionPricingPlanPtrOutput struct{ *pulumi.OutputState }

func (GeofenceCollectionPricingPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GeofenceCollectionPricingPlan)(nil)).Elem()
}

func (o GeofenceCollectionPricingPlanPtrOutput) ToGeofenceCollectionPricingPlanPtrOutput() GeofenceCollectionPricingPlanPtrOutput {
	return o
}

func (o GeofenceCollectionPricingPlanPtrOutput) ToGeofenceCollectionPricingPlanPtrOutputWithContext(ctx context.Context) GeofenceCollectionPricingPlanPtrOutput {
	return o
}

func (o GeofenceCollectionPricingPlanPtrOutput) Elem() GeofenceCollectionPricingPlanOutput {
	return o.ApplyT(func(v *GeofenceCollectionPricingPlan) GeofenceCollectionPricingPlan {
		if v != nil {
			return *v
		}
		var ret GeofenceCollectionPricingPlan
		return ret
	}).(GeofenceCollectionPricingPlanOutput)
}

func (o GeofenceCollectionPricingPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GeofenceCollectionPricingPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GeofenceCollectionPricingPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GeofenceCollectionPricingPlanInput is an input type that accepts GeofenceCollectionPricingPlanArgs and GeofenceCollectionPricingPlanOutput values.
// You can construct a concrete instance of `GeofenceCollectionPricingPlanInput` via:
//
//          GeofenceCollectionPricingPlanArgs{...}
type GeofenceCollectionPricingPlanInput interface {
	pulumi.Input

	ToGeofenceCollectionPricingPlanOutput() GeofenceCollectionPricingPlanOutput
	ToGeofenceCollectionPricingPlanOutputWithContext(context.Context) GeofenceCollectionPricingPlanOutput
}

var geofenceCollectionPricingPlanPtrType = reflect.TypeOf((**GeofenceCollectionPricingPlan)(nil)).Elem()

type GeofenceCollectionPricingPlanPtrInput interface {
	pulumi.Input

	ToGeofenceCollectionPricingPlanPtrOutput() GeofenceCollectionPricingPlanPtrOutput
	ToGeofenceCollectionPricingPlanPtrOutputWithContext(context.Context) GeofenceCollectionPricingPlanPtrOutput
}

type geofenceCollectionPricingPlanPtr string

func GeofenceCollectionPricingPlanPtr(v string) GeofenceCollectionPricingPlanPtrInput {
	return (*geofenceCollectionPricingPlanPtr)(&v)
}

func (*geofenceCollectionPricingPlanPtr) ElementType() reflect.Type {
	return geofenceCollectionPricingPlanPtrType
}

func (in *geofenceCollectionPricingPlanPtr) ToGeofenceCollectionPricingPlanPtrOutput() GeofenceCollectionPricingPlanPtrOutput {
	return pulumi.ToOutput(in).(GeofenceCollectionPricingPlanPtrOutput)
}

func (in *geofenceCollectionPricingPlanPtr) ToGeofenceCollectionPricingPlanPtrOutputWithContext(ctx context.Context) GeofenceCollectionPricingPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GeofenceCollectionPricingPlanPtrOutput)
}

type MapPricingPlan string

const (
	MapPricingPlanRequestBasedUsage     = MapPricingPlan("RequestBasedUsage")
	MapPricingPlanMobileAssetTracking   = MapPricingPlan("MobileAssetTracking")
	MapPricingPlanMobileAssetManagement = MapPricingPlan("MobileAssetManagement")
)

func (MapPricingPlan) ElementType() reflect.Type {
	return reflect.TypeOf((*MapPricingPlan)(nil)).Elem()
}

func (e MapPricingPlan) ToMapPricingPlanOutput() MapPricingPlanOutput {
	return pulumi.ToOutput(e).(MapPricingPlanOutput)
}

func (e MapPricingPlan) ToMapPricingPlanOutputWithContext(ctx context.Context) MapPricingPlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(MapPricingPlanOutput)
}

func (e MapPricingPlan) ToMapPricingPlanPtrOutput() MapPricingPlanPtrOutput {
	return e.ToMapPricingPlanPtrOutputWithContext(context.Background())
}

func (e MapPricingPlan) ToMapPricingPlanPtrOutputWithContext(ctx context.Context) MapPricingPlanPtrOutput {
	return MapPricingPlan(e).ToMapPricingPlanOutputWithContext(ctx).ToMapPricingPlanPtrOutputWithContext(ctx)
}

func (e MapPricingPlan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e MapPricingPlan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e MapPricingPlan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e MapPricingPlan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type MapPricingPlanOutput struct{ *pulumi.OutputState }

func (MapPricingPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MapPricingPlan)(nil)).Elem()
}

func (o MapPricingPlanOutput) ToMapPricingPlanOutput() MapPricingPlanOutput {
	return o
}

func (o MapPricingPlanOutput) ToMapPricingPlanOutputWithContext(ctx context.Context) MapPricingPlanOutput {
	return o
}

func (o MapPricingPlanOutput) ToMapPricingPlanPtrOutput() MapPricingPlanPtrOutput {
	return o.ToMapPricingPlanPtrOutputWithContext(context.Background())
}

func (o MapPricingPlanOutput) ToMapPricingPlanPtrOutputWithContext(ctx context.Context) MapPricingPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MapPricingPlan) *MapPricingPlan {
		return &v
	}).(MapPricingPlanPtrOutput)
}

func (o MapPricingPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o MapPricingPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MapPricingPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o MapPricingPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MapPricingPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e MapPricingPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type MapPricingPlanPtrOutput struct{ *pulumi.OutputState }

func (MapPricingPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MapPricingPlan)(nil)).Elem()
}

func (o MapPricingPlanPtrOutput) ToMapPricingPlanPtrOutput() MapPricingPlanPtrOutput {
	return o
}

func (o MapPricingPlanPtrOutput) ToMapPricingPlanPtrOutputWithContext(ctx context.Context) MapPricingPlanPtrOutput {
	return o
}

func (o MapPricingPlanPtrOutput) Elem() MapPricingPlanOutput {
	return o.ApplyT(func(v *MapPricingPlan) MapPricingPlan {
		if v != nil {
			return *v
		}
		var ret MapPricingPlan
		return ret
	}).(MapPricingPlanOutput)
}

func (o MapPricingPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o MapPricingPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *MapPricingPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// MapPricingPlanInput is an input type that accepts MapPricingPlanArgs and MapPricingPlanOutput values.
// You can construct a concrete instance of `MapPricingPlanInput` via:
//
//          MapPricingPlanArgs{...}
type MapPricingPlanInput interface {
	pulumi.Input

	ToMapPricingPlanOutput() MapPricingPlanOutput
	ToMapPricingPlanOutputWithContext(context.Context) MapPricingPlanOutput
}

var mapPricingPlanPtrType = reflect.TypeOf((**MapPricingPlan)(nil)).Elem()

type MapPricingPlanPtrInput interface {
	pulumi.Input

	ToMapPricingPlanPtrOutput() MapPricingPlanPtrOutput
	ToMapPricingPlanPtrOutputWithContext(context.Context) MapPricingPlanPtrOutput
}

type mapPricingPlanPtr string

func MapPricingPlanPtr(v string) MapPricingPlanPtrInput {
	return (*mapPricingPlanPtr)(&v)
}

func (*mapPricingPlanPtr) ElementType() reflect.Type {
	return mapPricingPlanPtrType
}

func (in *mapPricingPlanPtr) ToMapPricingPlanPtrOutput() MapPricingPlanPtrOutput {
	return pulumi.ToOutput(in).(MapPricingPlanPtrOutput)
}

func (in *mapPricingPlanPtr) ToMapPricingPlanPtrOutputWithContext(ctx context.Context) MapPricingPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(MapPricingPlanPtrOutput)
}

type PlaceIndexIntendedUse string

const (
	PlaceIndexIntendedUseSingleUse = PlaceIndexIntendedUse("SingleUse")
	PlaceIndexIntendedUseStorage   = PlaceIndexIntendedUse("Storage")
)

func (PlaceIndexIntendedUse) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaceIndexIntendedUse)(nil)).Elem()
}

func (e PlaceIndexIntendedUse) ToPlaceIndexIntendedUseOutput() PlaceIndexIntendedUseOutput {
	return pulumi.ToOutput(e).(PlaceIndexIntendedUseOutput)
}

func (e PlaceIndexIntendedUse) ToPlaceIndexIntendedUseOutputWithContext(ctx context.Context) PlaceIndexIntendedUseOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PlaceIndexIntendedUseOutput)
}

func (e PlaceIndexIntendedUse) ToPlaceIndexIntendedUsePtrOutput() PlaceIndexIntendedUsePtrOutput {
	return e.ToPlaceIndexIntendedUsePtrOutputWithContext(context.Background())
}

func (e PlaceIndexIntendedUse) ToPlaceIndexIntendedUsePtrOutputWithContext(ctx context.Context) PlaceIndexIntendedUsePtrOutput {
	return PlaceIndexIntendedUse(e).ToPlaceIndexIntendedUseOutputWithContext(ctx).ToPlaceIndexIntendedUsePtrOutputWithContext(ctx)
}

func (e PlaceIndexIntendedUse) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlaceIndexIntendedUse) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlaceIndexIntendedUse) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PlaceIndexIntendedUse) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PlaceIndexIntendedUseOutput struct{ *pulumi.OutputState }

func (PlaceIndexIntendedUseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaceIndexIntendedUse)(nil)).Elem()
}

func (o PlaceIndexIntendedUseOutput) ToPlaceIndexIntendedUseOutput() PlaceIndexIntendedUseOutput {
	return o
}

func (o PlaceIndexIntendedUseOutput) ToPlaceIndexIntendedUseOutputWithContext(ctx context.Context) PlaceIndexIntendedUseOutput {
	return o
}

func (o PlaceIndexIntendedUseOutput) ToPlaceIndexIntendedUsePtrOutput() PlaceIndexIntendedUsePtrOutput {
	return o.ToPlaceIndexIntendedUsePtrOutputWithContext(context.Background())
}

func (o PlaceIndexIntendedUseOutput) ToPlaceIndexIntendedUsePtrOutputWithContext(ctx context.Context) PlaceIndexIntendedUsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlaceIndexIntendedUse) *PlaceIndexIntendedUse {
		return &v
	}).(PlaceIndexIntendedUsePtrOutput)
}

func (o PlaceIndexIntendedUseOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PlaceIndexIntendedUseOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlaceIndexIntendedUse) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PlaceIndexIntendedUseOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlaceIndexIntendedUseOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlaceIndexIntendedUse) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PlaceIndexIntendedUsePtrOutput struct{ *pulumi.OutputState }

func (PlaceIndexIntendedUsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlaceIndexIntendedUse)(nil)).Elem()
}

func (o PlaceIndexIntendedUsePtrOutput) ToPlaceIndexIntendedUsePtrOutput() PlaceIndexIntendedUsePtrOutput {
	return o
}

func (o PlaceIndexIntendedUsePtrOutput) ToPlaceIndexIntendedUsePtrOutputWithContext(ctx context.Context) PlaceIndexIntendedUsePtrOutput {
	return o
}

func (o PlaceIndexIntendedUsePtrOutput) Elem() PlaceIndexIntendedUseOutput {
	return o.ApplyT(func(v *PlaceIndexIntendedUse) PlaceIndexIntendedUse {
		if v != nil {
			return *v
		}
		var ret PlaceIndexIntendedUse
		return ret
	}).(PlaceIndexIntendedUseOutput)
}

func (o PlaceIndexIntendedUsePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlaceIndexIntendedUsePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PlaceIndexIntendedUse) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PlaceIndexIntendedUseInput is an input type that accepts PlaceIndexIntendedUseArgs and PlaceIndexIntendedUseOutput values.
// You can construct a concrete instance of `PlaceIndexIntendedUseInput` via:
//
//          PlaceIndexIntendedUseArgs{...}
type PlaceIndexIntendedUseInput interface {
	pulumi.Input

	ToPlaceIndexIntendedUseOutput() PlaceIndexIntendedUseOutput
	ToPlaceIndexIntendedUseOutputWithContext(context.Context) PlaceIndexIntendedUseOutput
}

var placeIndexIntendedUsePtrType = reflect.TypeOf((**PlaceIndexIntendedUse)(nil)).Elem()

type PlaceIndexIntendedUsePtrInput interface {
	pulumi.Input

	ToPlaceIndexIntendedUsePtrOutput() PlaceIndexIntendedUsePtrOutput
	ToPlaceIndexIntendedUsePtrOutputWithContext(context.Context) PlaceIndexIntendedUsePtrOutput
}

type placeIndexIntendedUsePtr string

func PlaceIndexIntendedUsePtr(v string) PlaceIndexIntendedUsePtrInput {
	return (*placeIndexIntendedUsePtr)(&v)
}

func (*placeIndexIntendedUsePtr) ElementType() reflect.Type {
	return placeIndexIntendedUsePtrType
}

func (in *placeIndexIntendedUsePtr) ToPlaceIndexIntendedUsePtrOutput() PlaceIndexIntendedUsePtrOutput {
	return pulumi.ToOutput(in).(PlaceIndexIntendedUsePtrOutput)
}

func (in *placeIndexIntendedUsePtr) ToPlaceIndexIntendedUsePtrOutputWithContext(ctx context.Context) PlaceIndexIntendedUsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PlaceIndexIntendedUsePtrOutput)
}

type PlaceIndexPricingPlan string

const (
	PlaceIndexPricingPlanRequestBasedUsage     = PlaceIndexPricingPlan("RequestBasedUsage")
	PlaceIndexPricingPlanMobileAssetTracking   = PlaceIndexPricingPlan("MobileAssetTracking")
	PlaceIndexPricingPlanMobileAssetManagement = PlaceIndexPricingPlan("MobileAssetManagement")
)

func (PlaceIndexPricingPlan) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaceIndexPricingPlan)(nil)).Elem()
}

func (e PlaceIndexPricingPlan) ToPlaceIndexPricingPlanOutput() PlaceIndexPricingPlanOutput {
	return pulumi.ToOutput(e).(PlaceIndexPricingPlanOutput)
}

func (e PlaceIndexPricingPlan) ToPlaceIndexPricingPlanOutputWithContext(ctx context.Context) PlaceIndexPricingPlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PlaceIndexPricingPlanOutput)
}

func (e PlaceIndexPricingPlan) ToPlaceIndexPricingPlanPtrOutput() PlaceIndexPricingPlanPtrOutput {
	return e.ToPlaceIndexPricingPlanPtrOutputWithContext(context.Background())
}

func (e PlaceIndexPricingPlan) ToPlaceIndexPricingPlanPtrOutputWithContext(ctx context.Context) PlaceIndexPricingPlanPtrOutput {
	return PlaceIndexPricingPlan(e).ToPlaceIndexPricingPlanOutputWithContext(ctx).ToPlaceIndexPricingPlanPtrOutputWithContext(ctx)
}

func (e PlaceIndexPricingPlan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlaceIndexPricingPlan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PlaceIndexPricingPlan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PlaceIndexPricingPlan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PlaceIndexPricingPlanOutput struct{ *pulumi.OutputState }

func (PlaceIndexPricingPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PlaceIndexPricingPlan)(nil)).Elem()
}

func (o PlaceIndexPricingPlanOutput) ToPlaceIndexPricingPlanOutput() PlaceIndexPricingPlanOutput {
	return o
}

func (o PlaceIndexPricingPlanOutput) ToPlaceIndexPricingPlanOutputWithContext(ctx context.Context) PlaceIndexPricingPlanOutput {
	return o
}

func (o PlaceIndexPricingPlanOutput) ToPlaceIndexPricingPlanPtrOutput() PlaceIndexPricingPlanPtrOutput {
	return o.ToPlaceIndexPricingPlanPtrOutputWithContext(context.Background())
}

func (o PlaceIndexPricingPlanOutput) ToPlaceIndexPricingPlanPtrOutputWithContext(ctx context.Context) PlaceIndexPricingPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PlaceIndexPricingPlan) *PlaceIndexPricingPlan {
		return &v
	}).(PlaceIndexPricingPlanPtrOutput)
}

func (o PlaceIndexPricingPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PlaceIndexPricingPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlaceIndexPricingPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PlaceIndexPricingPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlaceIndexPricingPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PlaceIndexPricingPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PlaceIndexPricingPlanPtrOutput struct{ *pulumi.OutputState }

func (PlaceIndexPricingPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlaceIndexPricingPlan)(nil)).Elem()
}

func (o PlaceIndexPricingPlanPtrOutput) ToPlaceIndexPricingPlanPtrOutput() PlaceIndexPricingPlanPtrOutput {
	return o
}

func (o PlaceIndexPricingPlanPtrOutput) ToPlaceIndexPricingPlanPtrOutputWithContext(ctx context.Context) PlaceIndexPricingPlanPtrOutput {
	return o
}

func (o PlaceIndexPricingPlanPtrOutput) Elem() PlaceIndexPricingPlanOutput {
	return o.ApplyT(func(v *PlaceIndexPricingPlan) PlaceIndexPricingPlan {
		if v != nil {
			return *v
		}
		var ret PlaceIndexPricingPlan
		return ret
	}).(PlaceIndexPricingPlanOutput)
}

func (o PlaceIndexPricingPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PlaceIndexPricingPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PlaceIndexPricingPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PlaceIndexPricingPlanInput is an input type that accepts PlaceIndexPricingPlanArgs and PlaceIndexPricingPlanOutput values.
// You can construct a concrete instance of `PlaceIndexPricingPlanInput` via:
//
//          PlaceIndexPricingPlanArgs{...}
type PlaceIndexPricingPlanInput interface {
	pulumi.Input

	ToPlaceIndexPricingPlanOutput() PlaceIndexPricingPlanOutput
	ToPlaceIndexPricingPlanOutputWithContext(context.Context) PlaceIndexPricingPlanOutput
}

var placeIndexPricingPlanPtrType = reflect.TypeOf((**PlaceIndexPricingPlan)(nil)).Elem()

type PlaceIndexPricingPlanPtrInput interface {
	pulumi.Input

	ToPlaceIndexPricingPlanPtrOutput() PlaceIndexPricingPlanPtrOutput
	ToPlaceIndexPricingPlanPtrOutputWithContext(context.Context) PlaceIndexPricingPlanPtrOutput
}

type placeIndexPricingPlanPtr string

func PlaceIndexPricingPlanPtr(v string) PlaceIndexPricingPlanPtrInput {
	return (*placeIndexPricingPlanPtr)(&v)
}

func (*placeIndexPricingPlanPtr) ElementType() reflect.Type {
	return placeIndexPricingPlanPtrType
}

func (in *placeIndexPricingPlanPtr) ToPlaceIndexPricingPlanPtrOutput() PlaceIndexPricingPlanPtrOutput {
	return pulumi.ToOutput(in).(PlaceIndexPricingPlanPtrOutput)
}

func (in *placeIndexPricingPlanPtr) ToPlaceIndexPricingPlanPtrOutputWithContext(ctx context.Context) PlaceIndexPricingPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PlaceIndexPricingPlanPtrOutput)
}

type RouteCalculatorPricingPlan string

const (
	RouteCalculatorPricingPlanRequestBasedUsage     = RouteCalculatorPricingPlan("RequestBasedUsage")
	RouteCalculatorPricingPlanMobileAssetManagement = RouteCalculatorPricingPlan("MobileAssetManagement")
)

func (RouteCalculatorPricingPlan) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteCalculatorPricingPlan)(nil)).Elem()
}

func (e RouteCalculatorPricingPlan) ToRouteCalculatorPricingPlanOutput() RouteCalculatorPricingPlanOutput {
	return pulumi.ToOutput(e).(RouteCalculatorPricingPlanOutput)
}

func (e RouteCalculatorPricingPlan) ToRouteCalculatorPricingPlanOutputWithContext(ctx context.Context) RouteCalculatorPricingPlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RouteCalculatorPricingPlanOutput)
}

func (e RouteCalculatorPricingPlan) ToRouteCalculatorPricingPlanPtrOutput() RouteCalculatorPricingPlanPtrOutput {
	return e.ToRouteCalculatorPricingPlanPtrOutputWithContext(context.Background())
}

func (e RouteCalculatorPricingPlan) ToRouteCalculatorPricingPlanPtrOutputWithContext(ctx context.Context) RouteCalculatorPricingPlanPtrOutput {
	return RouteCalculatorPricingPlan(e).ToRouteCalculatorPricingPlanOutputWithContext(ctx).ToRouteCalculatorPricingPlanPtrOutputWithContext(ctx)
}

func (e RouteCalculatorPricingPlan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteCalculatorPricingPlan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RouteCalculatorPricingPlan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RouteCalculatorPricingPlan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RouteCalculatorPricingPlanOutput struct{ *pulumi.OutputState }

func (RouteCalculatorPricingPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteCalculatorPricingPlan)(nil)).Elem()
}

func (o RouteCalculatorPricingPlanOutput) ToRouteCalculatorPricingPlanOutput() RouteCalculatorPricingPlanOutput {
	return o
}

func (o RouteCalculatorPricingPlanOutput) ToRouteCalculatorPricingPlanOutputWithContext(ctx context.Context) RouteCalculatorPricingPlanOutput {
	return o
}

func (o RouteCalculatorPricingPlanOutput) ToRouteCalculatorPricingPlanPtrOutput() RouteCalculatorPricingPlanPtrOutput {
	return o.ToRouteCalculatorPricingPlanPtrOutputWithContext(context.Background())
}

func (o RouteCalculatorPricingPlanOutput) ToRouteCalculatorPricingPlanPtrOutputWithContext(ctx context.Context) RouteCalculatorPricingPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteCalculatorPricingPlan) *RouteCalculatorPricingPlan {
		return &v
	}).(RouteCalculatorPricingPlanPtrOutput)
}

func (o RouteCalculatorPricingPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RouteCalculatorPricingPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteCalculatorPricingPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RouteCalculatorPricingPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteCalculatorPricingPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RouteCalculatorPricingPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RouteCalculatorPricingPlanPtrOutput struct{ *pulumi.OutputState }

func (RouteCalculatorPricingPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteCalculatorPricingPlan)(nil)).Elem()
}

func (o RouteCalculatorPricingPlanPtrOutput) ToRouteCalculatorPricingPlanPtrOutput() RouteCalculatorPricingPlanPtrOutput {
	return o
}

func (o RouteCalculatorPricingPlanPtrOutput) ToRouteCalculatorPricingPlanPtrOutputWithContext(ctx context.Context) RouteCalculatorPricingPlanPtrOutput {
	return o
}

func (o RouteCalculatorPricingPlanPtrOutput) Elem() RouteCalculatorPricingPlanOutput {
	return o.ApplyT(func(v *RouteCalculatorPricingPlan) RouteCalculatorPricingPlan {
		if v != nil {
			return *v
		}
		var ret RouteCalculatorPricingPlan
		return ret
	}).(RouteCalculatorPricingPlanOutput)
}

func (o RouteCalculatorPricingPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RouteCalculatorPricingPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RouteCalculatorPricingPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RouteCalculatorPricingPlanInput is an input type that accepts RouteCalculatorPricingPlanArgs and RouteCalculatorPricingPlanOutput values.
// You can construct a concrete instance of `RouteCalculatorPricingPlanInput` via:
//
//          RouteCalculatorPricingPlanArgs{...}
type RouteCalculatorPricingPlanInput interface {
	pulumi.Input

	ToRouteCalculatorPricingPlanOutput() RouteCalculatorPricingPlanOutput
	ToRouteCalculatorPricingPlanOutputWithContext(context.Context) RouteCalculatorPricingPlanOutput
}

var routeCalculatorPricingPlanPtrType = reflect.TypeOf((**RouteCalculatorPricingPlan)(nil)).Elem()

type RouteCalculatorPricingPlanPtrInput interface {
	pulumi.Input

	ToRouteCalculatorPricingPlanPtrOutput() RouteCalculatorPricingPlanPtrOutput
	ToRouteCalculatorPricingPlanPtrOutputWithContext(context.Context) RouteCalculatorPricingPlanPtrOutput
}

type routeCalculatorPricingPlanPtr string

func RouteCalculatorPricingPlanPtr(v string) RouteCalculatorPricingPlanPtrInput {
	return (*routeCalculatorPricingPlanPtr)(&v)
}

func (*routeCalculatorPricingPlanPtr) ElementType() reflect.Type {
	return routeCalculatorPricingPlanPtrType
}

func (in *routeCalculatorPricingPlanPtr) ToRouteCalculatorPricingPlanPtrOutput() RouteCalculatorPricingPlanPtrOutput {
	return pulumi.ToOutput(in).(RouteCalculatorPricingPlanPtrOutput)
}

func (in *routeCalculatorPricingPlanPtr) ToRouteCalculatorPricingPlanPtrOutputWithContext(ctx context.Context) RouteCalculatorPricingPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RouteCalculatorPricingPlanPtrOutput)
}

type TrackerPricingPlan string

const (
	TrackerPricingPlanRequestBasedUsage     = TrackerPricingPlan("RequestBasedUsage")
	TrackerPricingPlanMobileAssetTracking   = TrackerPricingPlan("MobileAssetTracking")
	TrackerPricingPlanMobileAssetManagement = TrackerPricingPlan("MobileAssetManagement")
)

func (TrackerPricingPlan) ElementType() reflect.Type {
	return reflect.TypeOf((*TrackerPricingPlan)(nil)).Elem()
}

func (e TrackerPricingPlan) ToTrackerPricingPlanOutput() TrackerPricingPlanOutput {
	return pulumi.ToOutput(e).(TrackerPricingPlanOutput)
}

func (e TrackerPricingPlan) ToTrackerPricingPlanOutputWithContext(ctx context.Context) TrackerPricingPlanOutput {
	return pulumi.ToOutputWithContext(ctx, e).(TrackerPricingPlanOutput)
}

func (e TrackerPricingPlan) ToTrackerPricingPlanPtrOutput() TrackerPricingPlanPtrOutput {
	return e.ToTrackerPricingPlanPtrOutputWithContext(context.Background())
}

func (e TrackerPricingPlan) ToTrackerPricingPlanPtrOutputWithContext(ctx context.Context) TrackerPricingPlanPtrOutput {
	return TrackerPricingPlan(e).ToTrackerPricingPlanOutputWithContext(ctx).ToTrackerPricingPlanPtrOutputWithContext(ctx)
}

func (e TrackerPricingPlan) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrackerPricingPlan) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e TrackerPricingPlan) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e TrackerPricingPlan) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type TrackerPricingPlanOutput struct{ *pulumi.OutputState }

func (TrackerPricingPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrackerPricingPlan)(nil)).Elem()
}

func (o TrackerPricingPlanOutput) ToTrackerPricingPlanOutput() TrackerPricingPlanOutput {
	return o
}

func (o TrackerPricingPlanOutput) ToTrackerPricingPlanOutputWithContext(ctx context.Context) TrackerPricingPlanOutput {
	return o
}

func (o TrackerPricingPlanOutput) ToTrackerPricingPlanPtrOutput() TrackerPricingPlanPtrOutput {
	return o.ToTrackerPricingPlanPtrOutputWithContext(context.Background())
}

func (o TrackerPricingPlanOutput) ToTrackerPricingPlanPtrOutputWithContext(ctx context.Context) TrackerPricingPlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TrackerPricingPlan) *TrackerPricingPlan {
		return &v
	}).(TrackerPricingPlanPtrOutput)
}

func (o TrackerPricingPlanOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o TrackerPricingPlanOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrackerPricingPlan) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o TrackerPricingPlanOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrackerPricingPlanOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e TrackerPricingPlan) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type TrackerPricingPlanPtrOutput struct{ *pulumi.OutputState }

func (TrackerPricingPlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrackerPricingPlan)(nil)).Elem()
}

func (o TrackerPricingPlanPtrOutput) ToTrackerPricingPlanPtrOutput() TrackerPricingPlanPtrOutput {
	return o
}

func (o TrackerPricingPlanPtrOutput) ToTrackerPricingPlanPtrOutputWithContext(ctx context.Context) TrackerPricingPlanPtrOutput {
	return o
}

func (o TrackerPricingPlanPtrOutput) Elem() TrackerPricingPlanOutput {
	return o.ApplyT(func(v *TrackerPricingPlan) TrackerPricingPlan {
		if v != nil {
			return *v
		}
		var ret TrackerPricingPlan
		return ret
	}).(TrackerPricingPlanOutput)
}

func (o TrackerPricingPlanPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o TrackerPricingPlanPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *TrackerPricingPlan) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// TrackerPricingPlanInput is an input type that accepts TrackerPricingPlanArgs and TrackerPricingPlanOutput values.
// You can construct a concrete instance of `TrackerPricingPlanInput` via:
//
//          TrackerPricingPlanArgs{...}
type TrackerPricingPlanInput interface {
	pulumi.Input

	ToTrackerPricingPlanOutput() TrackerPricingPlanOutput
	ToTrackerPricingPlanOutputWithContext(context.Context) TrackerPricingPlanOutput
}

var trackerPricingPlanPtrType = reflect.TypeOf((**TrackerPricingPlan)(nil)).Elem()

type TrackerPricingPlanPtrInput interface {
	pulumi.Input

	ToTrackerPricingPlanPtrOutput() TrackerPricingPlanPtrOutput
	ToTrackerPricingPlanPtrOutputWithContext(context.Context) TrackerPricingPlanPtrOutput
}

type trackerPricingPlanPtr string

func TrackerPricingPlanPtr(v string) TrackerPricingPlanPtrInput {
	return (*trackerPricingPlanPtr)(&v)
}

func (*trackerPricingPlanPtr) ElementType() reflect.Type {
	return trackerPricingPlanPtrType
}

func (in *trackerPricingPlanPtr) ToTrackerPricingPlanPtrOutput() TrackerPricingPlanPtrOutput {
	return pulumi.ToOutput(in).(TrackerPricingPlanPtrOutput)
}

func (in *trackerPricingPlanPtr) ToTrackerPricingPlanPtrOutputWithContext(ctx context.Context) TrackerPricingPlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(TrackerPricingPlanPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GeofenceCollectionPricingPlanOutput{})
	pulumi.RegisterOutputType(GeofenceCollectionPricingPlanPtrOutput{})
	pulumi.RegisterOutputType(MapPricingPlanOutput{})
	pulumi.RegisterOutputType(MapPricingPlanPtrOutput{})
	pulumi.RegisterOutputType(PlaceIndexIntendedUseOutput{})
	pulumi.RegisterOutputType(PlaceIndexIntendedUsePtrOutput{})
	pulumi.RegisterOutputType(PlaceIndexPricingPlanOutput{})
	pulumi.RegisterOutputType(PlaceIndexPricingPlanPtrOutput{})
	pulumi.RegisterOutputType(RouteCalculatorPricingPlanOutput{})
	pulumi.RegisterOutputType(RouteCalculatorPricingPlanPtrOutput{})
	pulumi.RegisterOutputType(TrackerPricingPlanOutput{})
	pulumi.RegisterOutputType(TrackerPricingPlanPtrOutput{})
}
