// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Location::GeofenceCollection Resource Type
func LookupGeofenceCollection(ctx *pulumi.Context, args *LookupGeofenceCollectionArgs, opts ...pulumi.InvokeOption) (*LookupGeofenceCollectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGeofenceCollectionResult
	err := ctx.Invoke("aws-native:location:getGeofenceCollection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGeofenceCollectionArgs struct {
	// A custom name for the geofence collection.
	//
	// Requirements:
	//
	// - Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_).
	// - Must be a unique geofence collection name.
	// - No spaces allowed. For example, `ExampleGeofenceCollection` .
	CollectionName string `pulumi:"collectionName"`
}

type LookupGeofenceCollectionResult struct {
	// The Amazon Resource Name (ARN) for the geofence collection resource. Used when you need to specify a resource across all AWS .
	//
	// - Format example: `arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection`
	Arn *string `pulumi:"arn"`
	// Synonym for `Arn` . The Amazon Resource Name (ARN) for the geofence collection resource. Used when you need to specify a resource across all AWS .
	//
	// - Format example: `arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection`
	CollectionArn *string `pulumi:"collectionArn"`
	// The timestamp for when the geofence collection resource was created in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
	CreateTime *string `pulumi:"createTime"`
	// An optional description for the geofence collection.
	Description *string                        `pulumi:"description"`
	PricingPlan *GeofenceCollectionPricingPlan `pulumi:"pricingPlan"`
	// This shape is deprecated since 2022-02-01: Deprecated. No longer allowed.
	PricingPlanDataSource *string `pulumi:"pricingPlanDataSource"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The timestamp for when the geofence collection resource was last updated in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
	UpdateTime *string `pulumi:"updateTime"`
}

func LookupGeofenceCollectionOutput(ctx *pulumi.Context, args LookupGeofenceCollectionOutputArgs, opts ...pulumi.InvokeOption) LookupGeofenceCollectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGeofenceCollectionResultOutput, error) {
			args := v.(LookupGeofenceCollectionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupGeofenceCollectionResult
			secret, err := ctx.InvokePackageRaw("aws-native:location:getGeofenceCollection", args, &rv, "", opts...)
			if err != nil {
				return LookupGeofenceCollectionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupGeofenceCollectionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupGeofenceCollectionResultOutput), nil
			}
			return output, nil
		}).(LookupGeofenceCollectionResultOutput)
}

type LookupGeofenceCollectionOutputArgs struct {
	// A custom name for the geofence collection.
	//
	// Requirements:
	//
	// - Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_).
	// - Must be a unique geofence collection name.
	// - No spaces allowed. For example, `ExampleGeofenceCollection` .
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
}

func (LookupGeofenceCollectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGeofenceCollectionArgs)(nil)).Elem()
}

type LookupGeofenceCollectionResultOutput struct{ *pulumi.OutputState }

func (LookupGeofenceCollectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGeofenceCollectionResult)(nil)).Elem()
}

func (o LookupGeofenceCollectionResultOutput) ToLookupGeofenceCollectionResultOutput() LookupGeofenceCollectionResultOutput {
	return o
}

func (o LookupGeofenceCollectionResultOutput) ToLookupGeofenceCollectionResultOutputWithContext(ctx context.Context) LookupGeofenceCollectionResultOutput {
	return o
}

// The Amazon Resource Name (ARN) for the geofence collection resource. Used when you need to specify a resource across all AWS .
//
// - Format example: `arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection`
func (o LookupGeofenceCollectionResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Synonym for `Arn` . The Amazon Resource Name (ARN) for the geofence collection resource. Used when you need to specify a resource across all AWS .
//
// - Format example: `arn:aws:geo:region:account-id:geofence-collection/ExampleGeofenceCollection`
func (o LookupGeofenceCollectionResultOutput) CollectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) *string { return v.CollectionArn }).(pulumi.StringPtrOutput)
}

// The timestamp for when the geofence collection resource was created in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
func (o LookupGeofenceCollectionResultOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// An optional description for the geofence collection.
func (o LookupGeofenceCollectionResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupGeofenceCollectionResultOutput) PricingPlan() GeofenceCollectionPricingPlanPtrOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) *GeofenceCollectionPricingPlan { return v.PricingPlan }).(GeofenceCollectionPricingPlanPtrOutput)
}

// This shape is deprecated since 2022-02-01: Deprecated. No longer allowed.
func (o LookupGeofenceCollectionResultOutput) PricingPlanDataSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) *string { return v.PricingPlanDataSource }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupGeofenceCollectionResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The timestamp for when the geofence collection resource was last updated in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
func (o LookupGeofenceCollectionResultOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGeofenceCollectionResult) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGeofenceCollectionResultOutput{})
}
