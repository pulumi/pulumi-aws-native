// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Location::PlaceIndex Resource Type
func LookupPlaceIndex(ctx *pulumi.Context, args *LookupPlaceIndexArgs, opts ...pulumi.InvokeOption) (*LookupPlaceIndexResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPlaceIndexResult
	err := ctx.Invoke("aws-native:location:getPlaceIndex", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupPlaceIndexArgs struct {
	// The name of the place index resource.
	//
	// Requirements:
	//
	// - Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_).
	// - Must be a unique place index resource name.
	// - No spaces allowed. For example, `ExamplePlaceIndex` .
	IndexName string `pulumi:"indexName"`
}

type LookupPlaceIndexResult struct {
	// The Amazon Resource Name (ARN) for the place index resource. Used to specify a resource across AWS .
	//
	// - Format example: `arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex`
	Arn *string `pulumi:"arn"`
	// The timestamp for when the place index resource was created in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
	CreateTime *string `pulumi:"createTime"`
	// Specifies the data storage option requesting Places.
	DataSourceConfiguration *PlaceIndexDataSourceConfiguration `pulumi:"dataSourceConfiguration"`
	// The optional description for the place index resource.
	Description *string `pulumi:"description"`
	// Synonym for `Arn` . The Amazon Resource Name (ARN) for the place index resource. Used to specify a resource across AWS .
	//
	// - Format example: `arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex`
	IndexArn *string `pulumi:"indexArn"`
	// No longer used. If included, the only allowed value is `RequestBasedUsage` .
	//
	// *Allowed Values* : `RequestBasedUsage`
	PricingPlan *PlaceIndexPricingPlan `pulumi:"pricingPlan"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The timestamp for when the place index resource was last updated in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
	UpdateTime *string `pulumi:"updateTime"`
}

func LookupPlaceIndexOutput(ctx *pulumi.Context, args LookupPlaceIndexOutputArgs, opts ...pulumi.InvokeOption) LookupPlaceIndexResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPlaceIndexResult, error) {
			args := v.(LookupPlaceIndexArgs)
			r, err := LookupPlaceIndex(ctx, &args, opts...)
			var s LookupPlaceIndexResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPlaceIndexResultOutput)
}

type LookupPlaceIndexOutputArgs struct {
	// The name of the place index resource.
	//
	// Requirements:
	//
	// - Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_).
	// - Must be a unique place index resource name.
	// - No spaces allowed. For example, `ExamplePlaceIndex` .
	IndexName pulumi.StringInput `pulumi:"indexName"`
}

func (LookupPlaceIndexOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlaceIndexArgs)(nil)).Elem()
}

type LookupPlaceIndexResultOutput struct{ *pulumi.OutputState }

func (LookupPlaceIndexResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlaceIndexResult)(nil)).Elem()
}

func (o LookupPlaceIndexResultOutput) ToLookupPlaceIndexResultOutput() LookupPlaceIndexResultOutput {
	return o
}

func (o LookupPlaceIndexResultOutput) ToLookupPlaceIndexResultOutputWithContext(ctx context.Context) LookupPlaceIndexResultOutput {
	return o
}

// The Amazon Resource Name (ARN) for the place index resource. Used to specify a resource across AWS .
//
// - Format example: `arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex`
func (o LookupPlaceIndexResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlaceIndexResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The timestamp for when the place index resource was created in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
func (o LookupPlaceIndexResultOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlaceIndexResult) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

// Specifies the data storage option requesting Places.
func (o LookupPlaceIndexResultOutput) DataSourceConfiguration() PlaceIndexDataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v LookupPlaceIndexResult) *PlaceIndexDataSourceConfiguration { return v.DataSourceConfiguration }).(PlaceIndexDataSourceConfigurationPtrOutput)
}

// The optional description for the place index resource.
func (o LookupPlaceIndexResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlaceIndexResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Synonym for `Arn` . The Amazon Resource Name (ARN) for the place index resource. Used to specify a resource across AWS .
//
// - Format example: `arn:aws:geo:region:account-id:place-index/ExamplePlaceIndex`
func (o LookupPlaceIndexResultOutput) IndexArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlaceIndexResult) *string { return v.IndexArn }).(pulumi.StringPtrOutput)
}

// No longer used. If included, the only allowed value is `RequestBasedUsage` .
//
// *Allowed Values* : `RequestBasedUsage`
func (o LookupPlaceIndexResultOutput) PricingPlan() PlaceIndexPricingPlanPtrOutput {
	return o.ApplyT(func(v LookupPlaceIndexResult) *PlaceIndexPricingPlan { return v.PricingPlan }).(PlaceIndexPricingPlanPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupPlaceIndexResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupPlaceIndexResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The timestamp for when the place index resource was last updated in [ISO 8601](https://docs.aws.amazon.com/https://www.iso.org/iso-8601-date-and-time-format.html) format: `YYYY-MM-DDThh:mm:ss.sssZ` .
func (o LookupPlaceIndexResultOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPlaceIndexResult) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPlaceIndexResultOutput{})
}
