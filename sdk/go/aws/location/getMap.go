// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package location

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Location::Map Resource Type
func LookupMap(ctx *pulumi.Context, args *LookupMapArgs, opts ...pulumi.InvokeOption) (*LookupMapResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMapResult
	err := ctx.Invoke("aws-native:location:getMap", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMapArgs struct {
	MapName string `pulumi:"mapName"`
}

type LookupMapResult struct {
	Arn         *string         `pulumi:"arn"`
	CreateTime  *string         `pulumi:"createTime"`
	Description *string         `pulumi:"description"`
	MapArn      *string         `pulumi:"mapArn"`
	PricingPlan *MapPricingPlan `pulumi:"pricingPlan"`
	// An array of key-value pairs to apply to this resource.
	Tags       []aws.Tag `pulumi:"tags"`
	UpdateTime *string   `pulumi:"updateTime"`
}

func LookupMapOutput(ctx *pulumi.Context, args LookupMapOutputArgs, opts ...pulumi.InvokeOption) LookupMapResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMapResult, error) {
			args := v.(LookupMapArgs)
			r, err := LookupMap(ctx, &args, opts...)
			var s LookupMapResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMapResultOutput)
}

type LookupMapOutputArgs struct {
	MapName pulumi.StringInput `pulumi:"mapName"`
}

func (LookupMapOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMapArgs)(nil)).Elem()
}

type LookupMapResultOutput struct{ *pulumi.OutputState }

func (LookupMapResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMapResult)(nil)).Elem()
}

func (o LookupMapResultOutput) ToLookupMapResultOutput() LookupMapResultOutput {
	return o
}

func (o LookupMapResultOutput) ToLookupMapResultOutputWithContext(ctx context.Context) LookupMapResultOutput {
	return o
}

func (o LookupMapResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMapResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupMapResultOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMapResult) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o LookupMapResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMapResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupMapResultOutput) MapArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMapResult) *string { return v.MapArn }).(pulumi.StringPtrOutput)
}

func (o LookupMapResultOutput) PricingPlan() MapPricingPlanPtrOutput {
	return o.ApplyT(func(v LookupMapResult) *MapPricingPlan { return v.PricingPlan }).(MapPricingPlanPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupMapResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupMapResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func (o LookupMapResultOutput) UpdateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMapResult) *string { return v.UpdateTime }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMapResultOutput{})
}
