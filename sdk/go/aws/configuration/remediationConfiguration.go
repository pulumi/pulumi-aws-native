// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package configuration

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Config::RemediationConfiguration
//
// Deprecated: RemediationConfiguration is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type RemediationConfiguration struct {
	pulumi.CustomResourceState

	Automatic                pulumi.BoolPtrOutput                               `pulumi:"automatic"`
	ConfigRuleName           pulumi.StringOutput                                `pulumi:"configRuleName"`
	ExecutionControls        RemediationConfigurationExecutionControlsPtrOutput `pulumi:"executionControls"`
	MaximumAutomaticAttempts pulumi.IntPtrOutput                                `pulumi:"maximumAutomaticAttempts"`
	Parameters               pulumi.AnyOutput                                   `pulumi:"parameters"`
	ResourceType             pulumi.StringPtrOutput                             `pulumi:"resourceType"`
	RetryAttemptSeconds      pulumi.IntPtrOutput                                `pulumi:"retryAttemptSeconds"`
	TargetId                 pulumi.StringOutput                                `pulumi:"targetId"`
	TargetType               pulumi.StringOutput                                `pulumi:"targetType"`
	TargetVersion            pulumi.StringPtrOutput                             `pulumi:"targetVersion"`
}

// NewRemediationConfiguration registers a new resource with the given unique name, arguments, and options.
func NewRemediationConfiguration(ctx *pulumi.Context,
	name string, args *RemediationConfigurationArgs, opts ...pulumi.ResourceOption) (*RemediationConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigRuleName == nil {
		return nil, errors.New("invalid value for required argument 'ConfigRuleName'")
	}
	if args.TargetId == nil {
		return nil, errors.New("invalid value for required argument 'TargetId'")
	}
	if args.TargetType == nil {
		return nil, errors.New("invalid value for required argument 'TargetType'")
	}
	var resource RemediationConfiguration
	err := ctx.RegisterResource("aws-native:configuration:RemediationConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRemediationConfiguration gets an existing RemediationConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemediationConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RemediationConfigurationState, opts ...pulumi.ResourceOption) (*RemediationConfiguration, error) {
	var resource RemediationConfiguration
	err := ctx.ReadResource("aws-native:configuration:RemediationConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RemediationConfiguration resources.
type remediationConfigurationState struct {
}

type RemediationConfigurationState struct {
}

func (RemediationConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*remediationConfigurationState)(nil)).Elem()
}

type remediationConfigurationArgs struct {
	Automatic                *bool                                      `pulumi:"automatic"`
	ConfigRuleName           string                                     `pulumi:"configRuleName"`
	ExecutionControls        *RemediationConfigurationExecutionControls `pulumi:"executionControls"`
	MaximumAutomaticAttempts *int                                       `pulumi:"maximumAutomaticAttempts"`
	Parameters               interface{}                                `pulumi:"parameters"`
	ResourceType             *string                                    `pulumi:"resourceType"`
	RetryAttemptSeconds      *int                                       `pulumi:"retryAttemptSeconds"`
	TargetId                 string                                     `pulumi:"targetId"`
	TargetType               string                                     `pulumi:"targetType"`
	TargetVersion            *string                                    `pulumi:"targetVersion"`
}

// The set of arguments for constructing a RemediationConfiguration resource.
type RemediationConfigurationArgs struct {
	Automatic                pulumi.BoolPtrInput
	ConfigRuleName           pulumi.StringInput
	ExecutionControls        RemediationConfigurationExecutionControlsPtrInput
	MaximumAutomaticAttempts pulumi.IntPtrInput
	Parameters               pulumi.Input
	ResourceType             pulumi.StringPtrInput
	RetryAttemptSeconds      pulumi.IntPtrInput
	TargetId                 pulumi.StringInput
	TargetType               pulumi.StringInput
	TargetVersion            pulumi.StringPtrInput
}

func (RemediationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*remediationConfigurationArgs)(nil)).Elem()
}

type RemediationConfigurationInput interface {
	pulumi.Input

	ToRemediationConfigurationOutput() RemediationConfigurationOutput
	ToRemediationConfigurationOutputWithContext(ctx context.Context) RemediationConfigurationOutput
}

func (*RemediationConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationConfiguration)(nil)).Elem()
}

func (i *RemediationConfiguration) ToRemediationConfigurationOutput() RemediationConfigurationOutput {
	return i.ToRemediationConfigurationOutputWithContext(context.Background())
}

func (i *RemediationConfiguration) ToRemediationConfigurationOutputWithContext(ctx context.Context) RemediationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationConfigurationOutput)
}

type RemediationConfigurationOutput struct{ *pulumi.OutputState }

func (RemediationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationConfiguration)(nil)).Elem()
}

func (o RemediationConfigurationOutput) ToRemediationConfigurationOutput() RemediationConfigurationOutput {
	return o
}

func (o RemediationConfigurationOutput) ToRemediationConfigurationOutputWithContext(ctx context.Context) RemediationConfigurationOutput {
	return o
}

func (o RemediationConfigurationOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.BoolPtrOutput { return v.Automatic }).(pulumi.BoolPtrOutput)
}

func (o RemediationConfigurationOutput) ConfigRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.StringOutput { return v.ConfigRuleName }).(pulumi.StringOutput)
}

func (o RemediationConfigurationOutput) ExecutionControls() RemediationConfigurationExecutionControlsPtrOutput {
	return o.ApplyT(func(v *RemediationConfiguration) RemediationConfigurationExecutionControlsPtrOutput {
		return v.ExecutionControls
	}).(RemediationConfigurationExecutionControlsPtrOutput)
}

func (o RemediationConfigurationOutput) MaximumAutomaticAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.IntPtrOutput { return v.MaximumAutomaticAttempts }).(pulumi.IntPtrOutput)
}

func (o RemediationConfigurationOutput) Parameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.AnyOutput { return v.Parameters }).(pulumi.AnyOutput)
}

func (o RemediationConfigurationOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.StringPtrOutput { return v.ResourceType }).(pulumi.StringPtrOutput)
}

func (o RemediationConfigurationOutput) RetryAttemptSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.IntPtrOutput { return v.RetryAttemptSeconds }).(pulumi.IntPtrOutput)
}

func (o RemediationConfigurationOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.StringOutput { return v.TargetId }).(pulumi.StringOutput)
}

func (o RemediationConfigurationOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.StringOutput { return v.TargetType }).(pulumi.StringOutput)
}

func (o RemediationConfigurationOutput) TargetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.StringPtrOutput { return v.TargetVersion }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationConfigurationInput)(nil)).Elem(), &RemediationConfiguration{})
	pulumi.RegisterOutputType(RemediationConfigurationOutput{})
}
