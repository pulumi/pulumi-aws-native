// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package configuration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Schema for AWS Config ConfigRule
type ConfigRule struct {
	pulumi.CustomResourceState

	// ARN generated for the AWS Config rule
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Compliance details of the Config rule
	Compliance CompliancePropertiesPtrOutput `pulumi:"compliance"`
	// ID of the config rule
	ConfigRuleId pulumi.StringOutput `pulumi:"configRuleId"`
	// Name for the AWS Config rule
	ConfigRuleName pulumi.StringPtrOutput `pulumi:"configRuleName"`
	// Description provided for the AWS Config rule
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// List of EvaluationModeConfiguration objects
	EvaluationModes ConfigRuleEvaluationModeConfigurationArrayOutput `pulumi:"evaluationModes"`
	// JSON string passed the Lambda function
	InputParameters pulumi.StringPtrOutput `pulumi:"inputParameters"`
	// Maximum frequency at which the rule has to be evaluated
	MaximumExecutionFrequency pulumi.StringPtrOutput `pulumi:"maximumExecutionFrequency"`
	// Scope to constrain which resources can trigger the AWS Config rule
	Scope ConfigRuleScopePtrOutput `pulumi:"scope"`
	// Source of events for the AWS Config rule
	Source ConfigRuleSourceOutput `pulumi:"source"`
}

// NewConfigRule registers a new resource with the given unique name, arguments, and options.
func NewConfigRule(ctx *pulumi.Context,
	name string, args *ConfigRuleArgs, opts ...pulumi.ResourceOption) (*ConfigRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"configRuleName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigRule
	err := ctx.RegisterResource("aws-native:configuration:ConfigRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigRule gets an existing ConfigRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigRuleState, opts ...pulumi.ResourceOption) (*ConfigRule, error) {
	var resource ConfigRule
	err := ctx.ReadResource("aws-native:configuration:ConfigRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigRule resources.
type configRuleState struct {
}

type ConfigRuleState struct {
}

func (ConfigRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*configRuleState)(nil)).Elem()
}

type configRuleArgs struct {
	// Compliance details of the Config rule
	Compliance *ComplianceProperties `pulumi:"compliance"`
	// Name for the AWS Config rule
	ConfigRuleName *string `pulumi:"configRuleName"`
	// Description provided for the AWS Config rule
	Description *string `pulumi:"description"`
	// List of EvaluationModeConfiguration objects
	EvaluationModes []ConfigRuleEvaluationModeConfiguration `pulumi:"evaluationModes"`
	// JSON string passed the Lambda function
	InputParameters *string `pulumi:"inputParameters"`
	// Maximum frequency at which the rule has to be evaluated
	MaximumExecutionFrequency *string `pulumi:"maximumExecutionFrequency"`
	// Scope to constrain which resources can trigger the AWS Config rule
	Scope *ConfigRuleScope `pulumi:"scope"`
	// Source of events for the AWS Config rule
	Source ConfigRuleSource `pulumi:"source"`
}

// The set of arguments for constructing a ConfigRule resource.
type ConfigRuleArgs struct {
	// Compliance details of the Config rule
	Compliance CompliancePropertiesPtrInput
	// Name for the AWS Config rule
	ConfigRuleName pulumi.StringPtrInput
	// Description provided for the AWS Config rule
	Description pulumi.StringPtrInput
	// List of EvaluationModeConfiguration objects
	EvaluationModes ConfigRuleEvaluationModeConfigurationArrayInput
	// JSON string passed the Lambda function
	InputParameters pulumi.StringPtrInput
	// Maximum frequency at which the rule has to be evaluated
	MaximumExecutionFrequency pulumi.StringPtrInput
	// Scope to constrain which resources can trigger the AWS Config rule
	Scope ConfigRuleScopePtrInput
	// Source of events for the AWS Config rule
	Source ConfigRuleSourceInput
}

func (ConfigRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configRuleArgs)(nil)).Elem()
}

type ConfigRuleInput interface {
	pulumi.Input

	ToConfigRuleOutput() ConfigRuleOutput
	ToConfigRuleOutputWithContext(ctx context.Context) ConfigRuleOutput
}

func (*ConfigRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigRule)(nil)).Elem()
}

func (i *ConfigRule) ToConfigRuleOutput() ConfigRuleOutput {
	return i.ToConfigRuleOutputWithContext(context.Background())
}

func (i *ConfigRule) ToConfigRuleOutputWithContext(ctx context.Context) ConfigRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleOutput)
}

func (i *ConfigRule) ToOutput(ctx context.Context) pulumix.Output[*ConfigRule] {
	return pulumix.Output[*ConfigRule]{
		OutputState: i.ToConfigRuleOutputWithContext(ctx).OutputState,
	}
}

type ConfigRuleOutput struct{ *pulumi.OutputState }

func (ConfigRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigRule)(nil)).Elem()
}

func (o ConfigRuleOutput) ToConfigRuleOutput() ConfigRuleOutput {
	return o
}

func (o ConfigRuleOutput) ToConfigRuleOutputWithContext(ctx context.Context) ConfigRuleOutput {
	return o
}

func (o ConfigRuleOutput) ToOutput(ctx context.Context) pulumix.Output[*ConfigRule] {
	return pulumix.Output[*ConfigRule]{
		OutputState: o.OutputState,
	}
}

// ARN generated for the AWS Config rule
func (o ConfigRuleOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigRule) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Compliance details of the Config rule
func (o ConfigRuleOutput) Compliance() CompliancePropertiesPtrOutput {
	return o.ApplyT(func(v *ConfigRule) CompliancePropertiesPtrOutput { return v.Compliance }).(CompliancePropertiesPtrOutput)
}

// ID of the config rule
func (o ConfigRuleOutput) ConfigRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigRule) pulumi.StringOutput { return v.ConfigRuleId }).(pulumi.StringOutput)
}

// Name for the AWS Config rule
func (o ConfigRuleOutput) ConfigRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRule) pulumi.StringPtrOutput { return v.ConfigRuleName }).(pulumi.StringPtrOutput)
}

// Description provided for the AWS Config rule
func (o ConfigRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// List of EvaluationModeConfiguration objects
func (o ConfigRuleOutput) EvaluationModes() ConfigRuleEvaluationModeConfigurationArrayOutput {
	return o.ApplyT(func(v *ConfigRule) ConfigRuleEvaluationModeConfigurationArrayOutput { return v.EvaluationModes }).(ConfigRuleEvaluationModeConfigurationArrayOutput)
}

// JSON string passed the Lambda function
func (o ConfigRuleOutput) InputParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRule) pulumi.StringPtrOutput { return v.InputParameters }).(pulumi.StringPtrOutput)
}

// Maximum frequency at which the rule has to be evaluated
func (o ConfigRuleOutput) MaximumExecutionFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRule) pulumi.StringPtrOutput { return v.MaximumExecutionFrequency }).(pulumi.StringPtrOutput)
}

// Scope to constrain which resources can trigger the AWS Config rule
func (o ConfigRuleOutput) Scope() ConfigRuleScopePtrOutput {
	return o.ApplyT(func(v *ConfigRule) ConfigRuleScopePtrOutput { return v.Scope }).(ConfigRuleScopePtrOutput)
}

// Source of events for the AWS Config rule
func (o ConfigRuleOutput) Source() ConfigRuleSourceOutput {
	return o.ApplyT(func(v *ConfigRule) ConfigRuleSourceOutput { return v.Source }).(ConfigRuleSourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleInput)(nil)).Elem(), &ConfigRule{})
	pulumi.RegisterOutputType(ConfigRuleOutput{})
}
