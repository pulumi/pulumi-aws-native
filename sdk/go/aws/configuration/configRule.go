// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package configuration

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// You must first create and start the CC configuration recorder in order to create CC managed rules with CFNlong. For more information, see [Managing the Configuration Recorder](https://docs.aws.amazon.com/config/latest/developerguide/stop-start-recorder.html).
//
//	Adds or updates an CC rule to evaluate if your AWS resources comply with your desired configurations. For information on how many CC rules you can have per account, see [Service Limits](https://docs.aws.amazon.com/config/latest/developerguide/configlimits.html) in the *Developer Guide*.
//	There are two types of rules: *Managed Rules* and *Custom Rules*. You can use the ``ConfigRule`` resource to create both CC Managed Rules and CC Custom Rules.
//	CC Managed Rules are predefined, customizable rules created by CC. For a list of managed rules, see [List of Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html). If you are adding an CC managed rule, you must specify the rule's identifi
type ConfigRule struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// Indicates whether an AWS resource or CC rule is compliant and provides the number of contributors that affect the compliance.
	Compliance   CompliancePropertiesPtrOutput `pulumi:"compliance"`
	ConfigRuleId pulumi.StringOutput           `pulumi:"configRuleId"`
	// A name for the CC rule. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the rule name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
	ConfigRuleName pulumi.StringPtrOutput `pulumi:"configRuleName"`
	// The description that you provide for the CC rule.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The modes the CC rule can be evaluated in. The valid values are distinct objects. By default, the value is Detective evaluation mode only.
	EvaluationModes ConfigRuleEvaluationModeConfigurationArrayOutput `pulumi:"evaluationModes"`
	// A string, in JSON format, that is passed to the CC rule Lambda function.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Config::ConfigRule` for more information about the expected schema for this property.
	InputParameters pulumi.AnyOutput `pulumi:"inputParameters"`
	// The maximum frequency with which CC runs evaluations for a rule. You can specify a value for ``MaximumExecutionFrequency`` when:
	//   +  You are using an AWS managed rule that is triggered at a periodic frequency.
	//   +  Your custom rule is triggered when CC delivers the configuration snapshot. For more information, see [ConfigSnapshotDeliveryProperties](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html).
	//
	//   By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the ``MaximumExecutionFrequency`` parameter.
	MaximumExecutionFrequency pulumi.StringPtrOutput `pulumi:"maximumExecutionFrequency"`
	// Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are triggered when any resource in the recording group changes.
	//   The scope can be empty.
	Scope ConfigRuleScopePtrOutput `pulumi:"scope"`
	// Provides the rule owner (```` for managed rules, ``CUSTOM_POLICY`` for Custom Policy rules, and ``CUSTOM_LAMBDA`` for Custom Lambda rules), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.
	Source ConfigRuleSourceOutput `pulumi:"source"`
}

// NewConfigRule registers a new resource with the given unique name, arguments, and options.
func NewConfigRule(ctx *pulumi.Context,
	name string, args *ConfigRuleArgs, opts ...pulumi.ResourceOption) (*ConfigRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"configRuleName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigRule
	err := ctx.RegisterResource("aws-native:configuration:ConfigRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigRule gets an existing ConfigRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigRuleState, opts ...pulumi.ResourceOption) (*ConfigRule, error) {
	var resource ConfigRule
	err := ctx.ReadResource("aws-native:configuration:ConfigRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigRule resources.
type configRuleState struct {
}

type ConfigRuleState struct {
}

func (ConfigRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*configRuleState)(nil)).Elem()
}

type configRuleArgs struct {
	// Indicates whether an AWS resource or CC rule is compliant and provides the number of contributors that affect the compliance.
	Compliance *ComplianceProperties `pulumi:"compliance"`
	// A name for the CC rule. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the rule name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
	ConfigRuleName *string `pulumi:"configRuleName"`
	// The description that you provide for the CC rule.
	Description *string `pulumi:"description"`
	// The modes the CC rule can be evaluated in. The valid values are distinct objects. By default, the value is Detective evaluation mode only.
	EvaluationModes []ConfigRuleEvaluationModeConfiguration `pulumi:"evaluationModes"`
	// A string, in JSON format, that is passed to the CC rule Lambda function.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Config::ConfigRule` for more information about the expected schema for this property.
	InputParameters interface{} `pulumi:"inputParameters"`
	// The maximum frequency with which CC runs evaluations for a rule. You can specify a value for ``MaximumExecutionFrequency`` when:
	//   +  You are using an AWS managed rule that is triggered at a periodic frequency.
	//   +  Your custom rule is triggered when CC delivers the configuration snapshot. For more information, see [ConfigSnapshotDeliveryProperties](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html).
	//
	//   By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the ``MaximumExecutionFrequency`` parameter.
	MaximumExecutionFrequency *string `pulumi:"maximumExecutionFrequency"`
	// Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are triggered when any resource in the recording group changes.
	//   The scope can be empty.
	Scope *ConfigRuleScope `pulumi:"scope"`
	// Provides the rule owner (```` for managed rules, ``CUSTOM_POLICY`` for Custom Policy rules, and ``CUSTOM_LAMBDA`` for Custom Lambda rules), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.
	Source ConfigRuleSource `pulumi:"source"`
}

// The set of arguments for constructing a ConfigRule resource.
type ConfigRuleArgs struct {
	// Indicates whether an AWS resource or CC rule is compliant and provides the number of contributors that affect the compliance.
	Compliance CompliancePropertiesPtrInput
	// A name for the CC rule. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the rule name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
	ConfigRuleName pulumi.StringPtrInput
	// The description that you provide for the CC rule.
	Description pulumi.StringPtrInput
	// The modes the CC rule can be evaluated in. The valid values are distinct objects. By default, the value is Detective evaluation mode only.
	EvaluationModes ConfigRuleEvaluationModeConfigurationArrayInput
	// A string, in JSON format, that is passed to the CC rule Lambda function.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Config::ConfigRule` for more information about the expected schema for this property.
	InputParameters pulumi.Input
	// The maximum frequency with which CC runs evaluations for a rule. You can specify a value for ``MaximumExecutionFrequency`` when:
	//   +  You are using an AWS managed rule that is triggered at a periodic frequency.
	//   +  Your custom rule is triggered when CC delivers the configuration snapshot. For more information, see [ConfigSnapshotDeliveryProperties](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html).
	//
	//   By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the ``MaximumExecutionFrequency`` parameter.
	MaximumExecutionFrequency pulumi.StringPtrInput
	// Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are triggered when any resource in the recording group changes.
	//   The scope can be empty.
	Scope ConfigRuleScopePtrInput
	// Provides the rule owner (```` for managed rules, ``CUSTOM_POLICY`` for Custom Policy rules, and ``CUSTOM_LAMBDA`` for Custom Lambda rules), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.
	Source ConfigRuleSourceInput
}

func (ConfigRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configRuleArgs)(nil)).Elem()
}

type ConfigRuleInput interface {
	pulumi.Input

	ToConfigRuleOutput() ConfigRuleOutput
	ToConfigRuleOutputWithContext(ctx context.Context) ConfigRuleOutput
}

func (*ConfigRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigRule)(nil)).Elem()
}

func (i *ConfigRule) ToConfigRuleOutput() ConfigRuleOutput {
	return i.ToConfigRuleOutputWithContext(context.Background())
}

func (i *ConfigRule) ToConfigRuleOutputWithContext(ctx context.Context) ConfigRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleOutput)
}

type ConfigRuleOutput struct{ *pulumi.OutputState }

func (ConfigRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigRule)(nil)).Elem()
}

func (o ConfigRuleOutput) ToConfigRuleOutput() ConfigRuleOutput {
	return o
}

func (o ConfigRuleOutput) ToConfigRuleOutputWithContext(ctx context.Context) ConfigRuleOutput {
	return o
}

func (o ConfigRuleOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigRule) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Indicates whether an AWS resource or CC rule is compliant and provides the number of contributors that affect the compliance.
func (o ConfigRuleOutput) Compliance() CompliancePropertiesPtrOutput {
	return o.ApplyT(func(v *ConfigRule) CompliancePropertiesPtrOutput { return v.Compliance }).(CompliancePropertiesPtrOutput)
}

func (o ConfigRuleOutput) ConfigRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigRule) pulumi.StringOutput { return v.ConfigRuleId }).(pulumi.StringOutput)
}

// A name for the CC rule. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the rule name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
func (o ConfigRuleOutput) ConfigRuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRule) pulumi.StringPtrOutput { return v.ConfigRuleName }).(pulumi.StringPtrOutput)
}

// The description that you provide for the CC rule.
func (o ConfigRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The modes the CC rule can be evaluated in. The valid values are distinct objects. By default, the value is Detective evaluation mode only.
func (o ConfigRuleOutput) EvaluationModes() ConfigRuleEvaluationModeConfigurationArrayOutput {
	return o.ApplyT(func(v *ConfigRule) ConfigRuleEvaluationModeConfigurationArrayOutput { return v.EvaluationModes }).(ConfigRuleEvaluationModeConfigurationArrayOutput)
}

// A string, in JSON format, that is passed to the CC rule Lambda function.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Config::ConfigRule` for more information about the expected schema for this property.
func (o ConfigRuleOutput) InputParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v *ConfigRule) pulumi.AnyOutput { return v.InputParameters }).(pulumi.AnyOutput)
}

// The maximum frequency with which CC runs evaluations for a rule. You can specify a value for “MaximumExecutionFrequency“ when:
//
//   - You are using an AWS managed rule that is triggered at a periodic frequency.
//
//   - Your custom rule is triggered when CC delivers the configuration snapshot. For more information, see [ConfigSnapshotDeliveryProperties](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html).
//
//     By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the “MaximumExecutionFrequency“ parameter.
func (o ConfigRuleOutput) MaximumExecutionFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRule) pulumi.StringPtrOutput { return v.MaximumExecutionFrequency }).(pulumi.StringPtrOutput)
}

// Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are triggered when any resource in the recording group changes.
//
//	The scope can be empty.
func (o ConfigRuleOutput) Scope() ConfigRuleScopePtrOutput {
	return o.ApplyT(func(v *ConfigRule) ConfigRuleScopePtrOutput { return v.Scope }).(ConfigRuleScopePtrOutput)
}

// Provides the rule owner (```` for managed rules, “CUSTOM_POLICY“ for Custom Policy rules, and “CUSTOM_LAMBDA“ for Custom Lambda rules), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.
func (o ConfigRuleOutput) Source() ConfigRuleSourceOutput {
	return o.ApplyT(func(v *ConfigRule) ConfigRuleSourceOutput { return v.Source }).(ConfigRuleSourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleInput)(nil)).Elem(), &ConfigRule{})
	pulumi.RegisterOutputType(ConfigRuleOutput{})
}
