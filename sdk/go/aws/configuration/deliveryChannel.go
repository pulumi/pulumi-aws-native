// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package configuration

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Config::DeliveryChannel
//
// Deprecated: DeliveryChannel is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type DeliveryChannel struct {
	pulumi.CustomResourceState

	ConfigSnapshotDeliveryProperties DeliveryChannelConfigSnapshotDeliveryPropertiesPtrOutput `pulumi:"configSnapshotDeliveryProperties"`
	Name                             pulumi.StringPtrOutput                                   `pulumi:"name"`
	S3BucketName                     pulumi.StringOutput                                      `pulumi:"s3BucketName"`
	S3KeyPrefix                      pulumi.StringPtrOutput                                   `pulumi:"s3KeyPrefix"`
	S3KmsKeyArn                      pulumi.StringPtrOutput                                   `pulumi:"s3KmsKeyArn"`
	SnsTopicARN                      pulumi.StringPtrOutput                                   `pulumi:"snsTopicARN"`
}

// NewDeliveryChannel registers a new resource with the given unique name, arguments, and options.
func NewDeliveryChannel(ctx *pulumi.Context,
	name string, args *DeliveryChannelArgs, opts ...pulumi.ResourceOption) (*DeliveryChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.S3BucketName == nil {
		return nil, errors.New("invalid value for required argument 'S3BucketName'")
	}
	var resource DeliveryChannel
	err := ctx.RegisterResource("aws-native:configuration:DeliveryChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeliveryChannel gets an existing DeliveryChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeliveryChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeliveryChannelState, opts ...pulumi.ResourceOption) (*DeliveryChannel, error) {
	var resource DeliveryChannel
	err := ctx.ReadResource("aws-native:configuration:DeliveryChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeliveryChannel resources.
type deliveryChannelState struct {
}

type DeliveryChannelState struct {
}

func (DeliveryChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryChannelState)(nil)).Elem()
}

type deliveryChannelArgs struct {
	ConfigSnapshotDeliveryProperties *DeliveryChannelConfigSnapshotDeliveryProperties `pulumi:"configSnapshotDeliveryProperties"`
	Name                             *string                                          `pulumi:"name"`
	S3BucketName                     string                                           `pulumi:"s3BucketName"`
	S3KeyPrefix                      *string                                          `pulumi:"s3KeyPrefix"`
	S3KmsKeyArn                      *string                                          `pulumi:"s3KmsKeyArn"`
	SnsTopicARN                      *string                                          `pulumi:"snsTopicARN"`
}

// The set of arguments for constructing a DeliveryChannel resource.
type DeliveryChannelArgs struct {
	ConfigSnapshotDeliveryProperties DeliveryChannelConfigSnapshotDeliveryPropertiesPtrInput
	Name                             pulumi.StringPtrInput
	S3BucketName                     pulumi.StringInput
	S3KeyPrefix                      pulumi.StringPtrInput
	S3KmsKeyArn                      pulumi.StringPtrInput
	SnsTopicARN                      pulumi.StringPtrInput
}

func (DeliveryChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryChannelArgs)(nil)).Elem()
}

type DeliveryChannelInput interface {
	pulumi.Input

	ToDeliveryChannelOutput() DeliveryChannelOutput
	ToDeliveryChannelOutputWithContext(ctx context.Context) DeliveryChannelOutput
}

func (*DeliveryChannel) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryChannel)(nil))
}

func (i *DeliveryChannel) ToDeliveryChannelOutput() DeliveryChannelOutput {
	return i.ToDeliveryChannelOutputWithContext(context.Background())
}

func (i *DeliveryChannel) ToDeliveryChannelOutputWithContext(ctx context.Context) DeliveryChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelOutput)
}

type DeliveryChannelOutput struct{ *pulumi.OutputState }

func (DeliveryChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryChannel)(nil))
}

func (o DeliveryChannelOutput) ToDeliveryChannelOutput() DeliveryChannelOutput {
	return o
}

func (o DeliveryChannelOutput) ToDeliveryChannelOutputWithContext(ctx context.Context) DeliveryChannelOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryChannelInput)(nil)).Elem(), &DeliveryChannel{})
	pulumi.RegisterOutputType(DeliveryChannelOutput{})
}
