// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package configuration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// You must first create and start the CC configuration recorder in order to create CC managed rules with CFNlong. For more information, see [Managing the Configuration Recorder](https://docs.aws.amazon.com/config/latest/developerguide/stop-start-recorder.html).
//
//	Adds or updates an CC rule to evaluate if your AWS resources comply with your desired configurations. For information on how many CC rules you can have per account, see [Service Limits](https://docs.aws.amazon.com/config/latest/developerguide/configlimits.html) in the *Developer Guide*.
//	There are two types of rules: *Managed Rules* and *Custom Rules*. You can use the ``ConfigRule`` resource to create both CC Managed Rules and CC Custom Rules.
//	CC Managed Rules are predefined, customizable rules created by CC. For a list of managed rules, see [List of Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html). If you are adding an CC managed rule, you must specify the rule's identifier for the ``SourceIdentifier`` key.
//	CC Custom Rules are rules that you create from scratch. There are two ways to create CC custom rules: with Lambda functions ([Developer Guide](https://docs.aws.amazon.com/config/latest/developerguide/gettingstarted-concepts.html#gettingstarted-concepts-function)) and with CFNGUARDshort ([Guard GitHub Repository](https://docs.aws.amazon.com/https://github.com/aws-cloudformation/cloudformation-guard)), a policy-as-code language. CC custom rules created with LAMlong are called *Custom Lambda Rules* and CC custom rules created with CFNGUARDshort are called *Custom Policy Rules*.
//	If you are adding a new CC Custom LAM rule, you first need to create an LAMlong function that the rule invokes to evaluate your resources. When you use the ``ConfigRule`` resource to add a Custom LAM rule to CC, you must specify the Amazon Resource Name (ARN) that LAMlong assigns to the function. You specify the ARN in the ``SourceIdentifier`` key. This key is part of the ``Source`` object, which is part of the ``ConfigRule`` object.
//	For any new CC rule that you add, specify the ``ConfigRuleName`` in the ``ConfigRule`` object. Do not specify the ``ConfigRuleArn`` or the ``ConfigRuleId``. These values are generated by CC for new rules.
//	If you are updating a rule that you added previously, you can specify the rule by ``ConfigRuleName``, ``ConfigRuleId``, or ``ConfigRuleArn`` in the ``ConfigRule`` data type that you use in this request.
//	For more information about developing and using CC rules, see [Evaluating Resources with Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html) in the *Developer Guide*.
func LookupConfigRule(ctx *pulumi.Context, args *LookupConfigRuleArgs, opts ...pulumi.InvokeOption) (*LookupConfigRuleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigRuleResult
	err := ctx.Invoke("aws-native:configuration:getConfigRule", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConfigRuleArgs struct {
	// A name for the CC rule. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the rule name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
	ConfigRuleName string `pulumi:"configRuleName"`
}

type LookupConfigRuleResult struct {
	Arn *string `pulumi:"arn"`
	// Indicates whether an AWS resource or CC rule is compliant and provides the number of contributors that affect the compliance.
	Compliance   *ComplianceProperties `pulumi:"compliance"`
	ConfigRuleId *string               `pulumi:"configRuleId"`
	// The description that you provide for the CC rule.
	Description *string `pulumi:"description"`
	// The modes the CC rule can be evaluated in. The valid values are distinct objects. By default, the value is Detective evaluation mode only.
	EvaluationModes []ConfigRuleEvaluationModeConfiguration `pulumi:"evaluationModes"`
	// A string, in JSON format, that is passed to the CC rule Lambda function.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Config::ConfigRule` for more information about the expected schema for this property.
	InputParameters interface{} `pulumi:"inputParameters"`
	// The maximum frequency with which CC runs evaluations for a rule. You can specify a value for ``MaximumExecutionFrequency`` when:
	//   +  You are using an AWS managed rule that is triggered at a periodic frequency.
	//   +  Your custom rule is triggered when CC delivers the configuration snapshot. For more information, see [ConfigSnapshotDeliveryProperties](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html).
	//
	//   By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the ``MaximumExecutionFrequency`` parameter.
	MaximumExecutionFrequency *string `pulumi:"maximumExecutionFrequency"`
	// Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are triggered when any resource in the recording group changes.
	//   The scope can be empty.
	Scope *ConfigRuleScope `pulumi:"scope"`
	// Provides the rule owner (```` for managed rules, ``CUSTOM_POLICY`` for Custom Policy rules, and ``CUSTOM_LAMBDA`` for Custom Lambda rules), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.
	Source *ConfigRuleSource `pulumi:"source"`
}

func LookupConfigRuleOutput(ctx *pulumi.Context, args LookupConfigRuleOutputArgs, opts ...pulumi.InvokeOption) LookupConfigRuleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConfigRuleResult, error) {
			args := v.(LookupConfigRuleArgs)
			r, err := LookupConfigRule(ctx, &args, opts...)
			var s LookupConfigRuleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConfigRuleResultOutput)
}

type LookupConfigRuleOutputArgs struct {
	// A name for the CC rule. If you don't specify a name, CFN generates a unique physical ID and uses that ID for the rule name. For more information, see [Name Type](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html).
	ConfigRuleName pulumi.StringInput `pulumi:"configRuleName"`
}

func (LookupConfigRuleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigRuleArgs)(nil)).Elem()
}

type LookupConfigRuleResultOutput struct{ *pulumi.OutputState }

func (LookupConfigRuleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigRuleResult)(nil)).Elem()
}

func (o LookupConfigRuleResultOutput) ToLookupConfigRuleResultOutput() LookupConfigRuleResultOutput {
	return o
}

func (o LookupConfigRuleResultOutput) ToLookupConfigRuleResultOutputWithContext(ctx context.Context) LookupConfigRuleResultOutput {
	return o
}

func (o LookupConfigRuleResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigRuleResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Indicates whether an AWS resource or CC rule is compliant and provides the number of contributors that affect the compliance.
func (o LookupConfigRuleResultOutput) Compliance() CompliancePropertiesPtrOutput {
	return o.ApplyT(func(v LookupConfigRuleResult) *ComplianceProperties { return v.Compliance }).(CompliancePropertiesPtrOutput)
}

func (o LookupConfigRuleResultOutput) ConfigRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigRuleResult) *string { return v.ConfigRuleId }).(pulumi.StringPtrOutput)
}

// The description that you provide for the CC rule.
func (o LookupConfigRuleResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigRuleResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The modes the CC rule can be evaluated in. The valid values are distinct objects. By default, the value is Detective evaluation mode only.
func (o LookupConfigRuleResultOutput) EvaluationModes() ConfigRuleEvaluationModeConfigurationArrayOutput {
	return o.ApplyT(func(v LookupConfigRuleResult) []ConfigRuleEvaluationModeConfiguration { return v.EvaluationModes }).(ConfigRuleEvaluationModeConfigurationArrayOutput)
}

// A string, in JSON format, that is passed to the CC rule Lambda function.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Config::ConfigRule` for more information about the expected schema for this property.
func (o LookupConfigRuleResultOutput) InputParameters() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupConfigRuleResult) interface{} { return v.InputParameters }).(pulumi.AnyOutput)
}

// The maximum frequency with which CC runs evaluations for a rule. You can specify a value for “MaximumExecutionFrequency“ when:
//
//   - You are using an AWS managed rule that is triggered at a periodic frequency.
//
//   - Your custom rule is triggered when CC delivers the configuration snapshot. For more information, see [ConfigSnapshotDeliveryProperties](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html).
//
//     By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the “MaximumExecutionFrequency“ parameter.
func (o LookupConfigRuleResultOutput) MaximumExecutionFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigRuleResult) *string { return v.MaximumExecutionFrequency }).(pulumi.StringPtrOutput)
}

// Defines which resources can trigger an evaluation for the rule. The scope can include one or more resource types, a combination of one resource type and one resource ID, or a combination of a tag key and value. Specify a scope to constrain the resources that can trigger an evaluation for the rule. If you do not specify a scope, evaluations are triggered when any resource in the recording group changes.
//
//	The scope can be empty.
func (o LookupConfigRuleResultOutput) Scope() ConfigRuleScopePtrOutput {
	return o.ApplyT(func(v LookupConfigRuleResult) *ConfigRuleScope { return v.Scope }).(ConfigRuleScopePtrOutput)
}

// Provides the rule owner (```` for managed rules, “CUSTOM_POLICY“ for Custom Policy rules, and “CUSTOM_LAMBDA“ for Custom Lambda rules), the rule identifier, and the notifications that cause the function to evaluate your AWS resources.
func (o LookupConfigRuleResultOutput) Source() ConfigRuleSourcePtrOutput {
	return o.ApplyT(func(v LookupConfigRuleResult) *ConfigRuleSource { return v.Source }).(ConfigRuleSourcePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigRuleResultOutput{})
}
