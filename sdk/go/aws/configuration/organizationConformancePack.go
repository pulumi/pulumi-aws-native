// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package configuration

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::Config::OrganizationConformancePack.
type OrganizationConformancePack struct {
	pulumi.CustomResourceState

	// A list of ConformancePackInputParameter objects.
	ConformancePackInputParameters OrganizationConformancePackConformancePackInputParameterArrayOutput `pulumi:"conformancePackInputParameters"`
	// AWS Config stores intermediate files while processing conformance pack template.
	DeliveryS3Bucket pulumi.StringPtrOutput `pulumi:"deliveryS3Bucket"`
	// The prefix for the delivery S3 bucket.
	DeliveryS3KeyPrefix pulumi.StringPtrOutput `pulumi:"deliveryS3KeyPrefix"`
	// A list of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack.
	ExcludedAccounts pulumi.StringArrayOutput `pulumi:"excludedAccounts"`
	// The name of the organization conformance pack.
	OrganizationConformancePackName pulumi.StringOutput `pulumi:"organizationConformancePackName"`
	// A string containing full conformance pack template body.
	TemplateBody pulumi.StringPtrOutput `pulumi:"templateBody"`
	// Location of file containing the template body.
	TemplateS3Uri pulumi.StringPtrOutput `pulumi:"templateS3Uri"`
}

// NewOrganizationConformancePack registers a new resource with the given unique name, arguments, and options.
func NewOrganizationConformancePack(ctx *pulumi.Context,
	name string, args *OrganizationConformancePackArgs, opts ...pulumi.ResourceOption) (*OrganizationConformancePack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OrganizationConformancePackName == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationConformancePackName'")
	}
	var resource OrganizationConformancePack
	err := ctx.RegisterResource("aws-native:configuration:OrganizationConformancePack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationConformancePack gets an existing OrganizationConformancePack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationConformancePack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationConformancePackState, opts ...pulumi.ResourceOption) (*OrganizationConformancePack, error) {
	var resource OrganizationConformancePack
	err := ctx.ReadResource("aws-native:configuration:OrganizationConformancePack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationConformancePack resources.
type organizationConformancePackState struct {
}

type OrganizationConformancePackState struct {
}

func (OrganizationConformancePackState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationConformancePackState)(nil)).Elem()
}

type organizationConformancePackArgs struct {
	// A list of ConformancePackInputParameter objects.
	ConformancePackInputParameters []OrganizationConformancePackConformancePackInputParameter `pulumi:"conformancePackInputParameters"`
	// AWS Config stores intermediate files while processing conformance pack template.
	DeliveryS3Bucket *string `pulumi:"deliveryS3Bucket"`
	// The prefix for the delivery S3 bucket.
	DeliveryS3KeyPrefix *string `pulumi:"deliveryS3KeyPrefix"`
	// A list of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack.
	ExcludedAccounts []string `pulumi:"excludedAccounts"`
	// The name of the organization conformance pack.
	OrganizationConformancePackName string `pulumi:"organizationConformancePackName"`
	// A string containing full conformance pack template body.
	TemplateBody *string `pulumi:"templateBody"`
	// Location of file containing the template body.
	TemplateS3Uri *string `pulumi:"templateS3Uri"`
}

// The set of arguments for constructing a OrganizationConformancePack resource.
type OrganizationConformancePackArgs struct {
	// A list of ConformancePackInputParameter objects.
	ConformancePackInputParameters OrganizationConformancePackConformancePackInputParameterArrayInput
	// AWS Config stores intermediate files while processing conformance pack template.
	DeliveryS3Bucket pulumi.StringPtrInput
	// The prefix for the delivery S3 bucket.
	DeliveryS3KeyPrefix pulumi.StringPtrInput
	// A list of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack.
	ExcludedAccounts pulumi.StringArrayInput
	// The name of the organization conformance pack.
	OrganizationConformancePackName pulumi.StringInput
	// A string containing full conformance pack template body.
	TemplateBody pulumi.StringPtrInput
	// Location of file containing the template body.
	TemplateS3Uri pulumi.StringPtrInput
}

func (OrganizationConformancePackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationConformancePackArgs)(nil)).Elem()
}

type OrganizationConformancePackInput interface {
	pulumi.Input

	ToOrganizationConformancePackOutput() OrganizationConformancePackOutput
	ToOrganizationConformancePackOutputWithContext(ctx context.Context) OrganizationConformancePackOutput
}

func (*OrganizationConformancePack) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConformancePack)(nil))
}

func (i *OrganizationConformancePack) ToOrganizationConformancePackOutput() OrganizationConformancePackOutput {
	return i.ToOrganizationConformancePackOutputWithContext(context.Background())
}

func (i *OrganizationConformancePack) ToOrganizationConformancePackOutputWithContext(ctx context.Context) OrganizationConformancePackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConformancePackOutput)
}

type OrganizationConformancePackOutput struct{ *pulumi.OutputState }

func (OrganizationConformancePackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConformancePack)(nil))
}

func (o OrganizationConformancePackOutput) ToOrganizationConformancePackOutput() OrganizationConformancePackOutput {
	return o
}

func (o OrganizationConformancePackOutput) ToOrganizationConformancePackOutputWithContext(ctx context.Context) OrganizationConformancePackOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(OrganizationConformancePackOutput{})
}
