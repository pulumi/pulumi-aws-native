// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package configuration

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A key-value pair to associate with a resource.
type AggregationAuthorizationTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// Indicates whether an AWS resource or CC rule is compliant and provides the number of contributors that affect the compliance.
type ComplianceProperties struct {
	// Compliance type determined by the Config rule
	Type *string `pulumi:"type"`
}

// CompliancePropertiesInput is an input type that accepts CompliancePropertiesArgs and CompliancePropertiesOutput values.
// You can construct a concrete instance of `CompliancePropertiesInput` via:
//
//	CompliancePropertiesArgs{...}
type CompliancePropertiesInput interface {
	pulumi.Input

	ToCompliancePropertiesOutput() CompliancePropertiesOutput
	ToCompliancePropertiesOutputWithContext(context.Context) CompliancePropertiesOutput
}

// Indicates whether an AWS resource or CC rule is compliant and provides the number of contributors that affect the compliance.
type CompliancePropertiesArgs struct {
	// Compliance type determined by the Config rule
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CompliancePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComplianceProperties)(nil)).Elem()
}

func (i CompliancePropertiesArgs) ToCompliancePropertiesOutput() CompliancePropertiesOutput {
	return i.ToCompliancePropertiesOutputWithContext(context.Background())
}

func (i CompliancePropertiesArgs) ToCompliancePropertiesOutputWithContext(ctx context.Context) CompliancePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompliancePropertiesOutput)
}

func (i CompliancePropertiesArgs) ToCompliancePropertiesPtrOutput() CompliancePropertiesPtrOutput {
	return i.ToCompliancePropertiesPtrOutputWithContext(context.Background())
}

func (i CompliancePropertiesArgs) ToCompliancePropertiesPtrOutputWithContext(ctx context.Context) CompliancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompliancePropertiesOutput).ToCompliancePropertiesPtrOutputWithContext(ctx)
}

// CompliancePropertiesPtrInput is an input type that accepts CompliancePropertiesArgs, CompliancePropertiesPtr and CompliancePropertiesPtrOutput values.
// You can construct a concrete instance of `CompliancePropertiesPtrInput` via:
//
//	        CompliancePropertiesArgs{...}
//
//	or:
//
//	        nil
type CompliancePropertiesPtrInput interface {
	pulumi.Input

	ToCompliancePropertiesPtrOutput() CompliancePropertiesPtrOutput
	ToCompliancePropertiesPtrOutputWithContext(context.Context) CompliancePropertiesPtrOutput
}

type compliancePropertiesPtrType CompliancePropertiesArgs

func CompliancePropertiesPtr(v *CompliancePropertiesArgs) CompliancePropertiesPtrInput {
	return (*compliancePropertiesPtrType)(v)
}

func (*compliancePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComplianceProperties)(nil)).Elem()
}

func (i *compliancePropertiesPtrType) ToCompliancePropertiesPtrOutput() CompliancePropertiesPtrOutput {
	return i.ToCompliancePropertiesPtrOutputWithContext(context.Background())
}

func (i *compliancePropertiesPtrType) ToCompliancePropertiesPtrOutputWithContext(ctx context.Context) CompliancePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompliancePropertiesPtrOutput)
}

// Indicates whether an AWS resource or CC rule is compliant and provides the number of contributors that affect the compliance.
type CompliancePropertiesOutput struct{ *pulumi.OutputState }

func (CompliancePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComplianceProperties)(nil)).Elem()
}

func (o CompliancePropertiesOutput) ToCompliancePropertiesOutput() CompliancePropertiesOutput {
	return o
}

func (o CompliancePropertiesOutput) ToCompliancePropertiesOutputWithContext(ctx context.Context) CompliancePropertiesOutput {
	return o
}

func (o CompliancePropertiesOutput) ToCompliancePropertiesPtrOutput() CompliancePropertiesPtrOutput {
	return o.ToCompliancePropertiesPtrOutputWithContext(context.Background())
}

func (o CompliancePropertiesOutput) ToCompliancePropertiesPtrOutputWithContext(ctx context.Context) CompliancePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComplianceProperties) *ComplianceProperties {
		return &v
	}).(CompliancePropertiesPtrOutput)
}

// Compliance type determined by the Config rule
func (o CompliancePropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComplianceProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CompliancePropertiesPtrOutput struct{ *pulumi.OutputState }

func (CompliancePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComplianceProperties)(nil)).Elem()
}

func (o CompliancePropertiesPtrOutput) ToCompliancePropertiesPtrOutput() CompliancePropertiesPtrOutput {
	return o
}

func (o CompliancePropertiesPtrOutput) ToCompliancePropertiesPtrOutputWithContext(ctx context.Context) CompliancePropertiesPtrOutput {
	return o
}

func (o CompliancePropertiesPtrOutput) Elem() CompliancePropertiesOutput {
	return o.ApplyT(func(v *ComplianceProperties) ComplianceProperties {
		if v != nil {
			return *v
		}
		var ret ComplianceProperties
		return ret
	}).(CompliancePropertiesOutput)
}

// Compliance type determined by the Config rule
func (o CompliancePropertiesPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComplianceProperties) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Provides the CustomPolicyDetails, the rule owner (```` for managed rules, “CUSTOM_POLICY“ for Custom Policy rules, and “CUSTOM_LAMBDA“ for Custom Lambda rules), the rule identifier, and the events that cause the evaluation of your AWS resources.
type ConfigRuleCustomPolicyDetails struct {
	// The boolean expression for enabling debug logging for your CC Custom Policy rule. The default value is ``false``.
	EnableDebugLogDelivery *bool `pulumi:"enableDebugLogDelivery"`
	// The runtime system for your CC Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by CC Custom Policy rules. For more information about Guard, see the [Guard GitHub Repository](https://docs.aws.amazon.com/https://github.com/aws-cloudformation/cloudformation-guard).
	PolicyRuntime *string `pulumi:"policyRuntime"`
	// The policy definition containing the logic for your CC Custom Policy rule.
	PolicyText *string `pulumi:"policyText"`
}

// ConfigRuleCustomPolicyDetailsInput is an input type that accepts ConfigRuleCustomPolicyDetailsArgs and ConfigRuleCustomPolicyDetailsOutput values.
// You can construct a concrete instance of `ConfigRuleCustomPolicyDetailsInput` via:
//
//	ConfigRuleCustomPolicyDetailsArgs{...}
type ConfigRuleCustomPolicyDetailsInput interface {
	pulumi.Input

	ToConfigRuleCustomPolicyDetailsOutput() ConfigRuleCustomPolicyDetailsOutput
	ToConfigRuleCustomPolicyDetailsOutputWithContext(context.Context) ConfigRuleCustomPolicyDetailsOutput
}

// Provides the CustomPolicyDetails, the rule owner (```` for managed rules, “CUSTOM_POLICY“ for Custom Policy rules, and “CUSTOM_LAMBDA“ for Custom Lambda rules), the rule identifier, and the events that cause the evaluation of your AWS resources.
type ConfigRuleCustomPolicyDetailsArgs struct {
	// The boolean expression for enabling debug logging for your CC Custom Policy rule. The default value is ``false``.
	EnableDebugLogDelivery pulumi.BoolPtrInput `pulumi:"enableDebugLogDelivery"`
	// The runtime system for your CC Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by CC Custom Policy rules. For more information about Guard, see the [Guard GitHub Repository](https://docs.aws.amazon.com/https://github.com/aws-cloudformation/cloudformation-guard).
	PolicyRuntime pulumi.StringPtrInput `pulumi:"policyRuntime"`
	// The policy definition containing the logic for your CC Custom Policy rule.
	PolicyText pulumi.StringPtrInput `pulumi:"policyText"`
}

func (ConfigRuleCustomPolicyDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRuleCustomPolicyDetails)(nil)).Elem()
}

func (i ConfigRuleCustomPolicyDetailsArgs) ToConfigRuleCustomPolicyDetailsOutput() ConfigRuleCustomPolicyDetailsOutput {
	return i.ToConfigRuleCustomPolicyDetailsOutputWithContext(context.Background())
}

func (i ConfigRuleCustomPolicyDetailsArgs) ToConfigRuleCustomPolicyDetailsOutputWithContext(ctx context.Context) ConfigRuleCustomPolicyDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleCustomPolicyDetailsOutput)
}

func (i ConfigRuleCustomPolicyDetailsArgs) ToConfigRuleCustomPolicyDetailsPtrOutput() ConfigRuleCustomPolicyDetailsPtrOutput {
	return i.ToConfigRuleCustomPolicyDetailsPtrOutputWithContext(context.Background())
}

func (i ConfigRuleCustomPolicyDetailsArgs) ToConfigRuleCustomPolicyDetailsPtrOutputWithContext(ctx context.Context) ConfigRuleCustomPolicyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleCustomPolicyDetailsOutput).ToConfigRuleCustomPolicyDetailsPtrOutputWithContext(ctx)
}

// ConfigRuleCustomPolicyDetailsPtrInput is an input type that accepts ConfigRuleCustomPolicyDetailsArgs, ConfigRuleCustomPolicyDetailsPtr and ConfigRuleCustomPolicyDetailsPtrOutput values.
// You can construct a concrete instance of `ConfigRuleCustomPolicyDetailsPtrInput` via:
//
//	        ConfigRuleCustomPolicyDetailsArgs{...}
//
//	or:
//
//	        nil
type ConfigRuleCustomPolicyDetailsPtrInput interface {
	pulumi.Input

	ToConfigRuleCustomPolicyDetailsPtrOutput() ConfigRuleCustomPolicyDetailsPtrOutput
	ToConfigRuleCustomPolicyDetailsPtrOutputWithContext(context.Context) ConfigRuleCustomPolicyDetailsPtrOutput
}

type configRuleCustomPolicyDetailsPtrType ConfigRuleCustomPolicyDetailsArgs

func ConfigRuleCustomPolicyDetailsPtr(v *ConfigRuleCustomPolicyDetailsArgs) ConfigRuleCustomPolicyDetailsPtrInput {
	return (*configRuleCustomPolicyDetailsPtrType)(v)
}

func (*configRuleCustomPolicyDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigRuleCustomPolicyDetails)(nil)).Elem()
}

func (i *configRuleCustomPolicyDetailsPtrType) ToConfigRuleCustomPolicyDetailsPtrOutput() ConfigRuleCustomPolicyDetailsPtrOutput {
	return i.ToConfigRuleCustomPolicyDetailsPtrOutputWithContext(context.Background())
}

func (i *configRuleCustomPolicyDetailsPtrType) ToConfigRuleCustomPolicyDetailsPtrOutputWithContext(ctx context.Context) ConfigRuleCustomPolicyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleCustomPolicyDetailsPtrOutput)
}

// Provides the CustomPolicyDetails, the rule owner (```` for managed rules, “CUSTOM_POLICY“ for Custom Policy rules, and “CUSTOM_LAMBDA“ for Custom Lambda rules), the rule identifier, and the events that cause the evaluation of your AWS resources.
type ConfigRuleCustomPolicyDetailsOutput struct{ *pulumi.OutputState }

func (ConfigRuleCustomPolicyDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRuleCustomPolicyDetails)(nil)).Elem()
}

func (o ConfigRuleCustomPolicyDetailsOutput) ToConfigRuleCustomPolicyDetailsOutput() ConfigRuleCustomPolicyDetailsOutput {
	return o
}

func (o ConfigRuleCustomPolicyDetailsOutput) ToConfigRuleCustomPolicyDetailsOutputWithContext(ctx context.Context) ConfigRuleCustomPolicyDetailsOutput {
	return o
}

func (o ConfigRuleCustomPolicyDetailsOutput) ToConfigRuleCustomPolicyDetailsPtrOutput() ConfigRuleCustomPolicyDetailsPtrOutput {
	return o.ToConfigRuleCustomPolicyDetailsPtrOutputWithContext(context.Background())
}

func (o ConfigRuleCustomPolicyDetailsOutput) ToConfigRuleCustomPolicyDetailsPtrOutputWithContext(ctx context.Context) ConfigRuleCustomPolicyDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigRuleCustomPolicyDetails) *ConfigRuleCustomPolicyDetails {
		return &v
	}).(ConfigRuleCustomPolicyDetailsPtrOutput)
}

// The boolean expression for enabling debug logging for your CC Custom Policy rule. The default value is “false“.
func (o ConfigRuleCustomPolicyDetailsOutput) EnableDebugLogDelivery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigRuleCustomPolicyDetails) *bool { return v.EnableDebugLogDelivery }).(pulumi.BoolPtrOutput)
}

// The runtime system for your CC Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by CC Custom Policy rules. For more information about Guard, see the [Guard GitHub Repository](https://docs.aws.amazon.com/https://github.com/aws-cloudformation/cloudformation-guard).
func (o ConfigRuleCustomPolicyDetailsOutput) PolicyRuntime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigRuleCustomPolicyDetails) *string { return v.PolicyRuntime }).(pulumi.StringPtrOutput)
}

// The policy definition containing the logic for your CC Custom Policy rule.
func (o ConfigRuleCustomPolicyDetailsOutput) PolicyText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigRuleCustomPolicyDetails) *string { return v.PolicyText }).(pulumi.StringPtrOutput)
}

type ConfigRuleCustomPolicyDetailsPtrOutput struct{ *pulumi.OutputState }

func (ConfigRuleCustomPolicyDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigRuleCustomPolicyDetails)(nil)).Elem()
}

func (o ConfigRuleCustomPolicyDetailsPtrOutput) ToConfigRuleCustomPolicyDetailsPtrOutput() ConfigRuleCustomPolicyDetailsPtrOutput {
	return o
}

func (o ConfigRuleCustomPolicyDetailsPtrOutput) ToConfigRuleCustomPolicyDetailsPtrOutputWithContext(ctx context.Context) ConfigRuleCustomPolicyDetailsPtrOutput {
	return o
}

func (o ConfigRuleCustomPolicyDetailsPtrOutput) Elem() ConfigRuleCustomPolicyDetailsOutput {
	return o.ApplyT(func(v *ConfigRuleCustomPolicyDetails) ConfigRuleCustomPolicyDetails {
		if v != nil {
			return *v
		}
		var ret ConfigRuleCustomPolicyDetails
		return ret
	}).(ConfigRuleCustomPolicyDetailsOutput)
}

// The boolean expression for enabling debug logging for your CC Custom Policy rule. The default value is “false“.
func (o ConfigRuleCustomPolicyDetailsPtrOutput) EnableDebugLogDelivery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigRuleCustomPolicyDetails) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDebugLogDelivery
	}).(pulumi.BoolPtrOutput)
}

// The runtime system for your CC Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by CC Custom Policy rules. For more information about Guard, see the [Guard GitHub Repository](https://docs.aws.amazon.com/https://github.com/aws-cloudformation/cloudformation-guard).
func (o ConfigRuleCustomPolicyDetailsPtrOutput) PolicyRuntime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRuleCustomPolicyDetails) *string {
		if v == nil {
			return nil
		}
		return v.PolicyRuntime
	}).(pulumi.StringPtrOutput)
}

// The policy definition containing the logic for your CC Custom Policy rule.
func (o ConfigRuleCustomPolicyDetailsPtrOutput) PolicyText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRuleCustomPolicyDetails) *string {
		if v == nil {
			return nil
		}
		return v.PolicyText
	}).(pulumi.StringPtrOutput)
}

// The configuration object for CC rule evaluation mode. The supported valid values are Detective or Proactive.
type ConfigRuleEvaluationModeConfiguration struct {
	// The mode of an evaluation. The valid values are Detective or Proactive.
	Mode *string `pulumi:"mode"`
}

// ConfigRuleEvaluationModeConfigurationInput is an input type that accepts ConfigRuleEvaluationModeConfigurationArgs and ConfigRuleEvaluationModeConfigurationOutput values.
// You can construct a concrete instance of `ConfigRuleEvaluationModeConfigurationInput` via:
//
//	ConfigRuleEvaluationModeConfigurationArgs{...}
type ConfigRuleEvaluationModeConfigurationInput interface {
	pulumi.Input

	ToConfigRuleEvaluationModeConfigurationOutput() ConfigRuleEvaluationModeConfigurationOutput
	ToConfigRuleEvaluationModeConfigurationOutputWithContext(context.Context) ConfigRuleEvaluationModeConfigurationOutput
}

// The configuration object for CC rule evaluation mode. The supported valid values are Detective or Proactive.
type ConfigRuleEvaluationModeConfigurationArgs struct {
	// The mode of an evaluation. The valid values are Detective or Proactive.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (ConfigRuleEvaluationModeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRuleEvaluationModeConfiguration)(nil)).Elem()
}

func (i ConfigRuleEvaluationModeConfigurationArgs) ToConfigRuleEvaluationModeConfigurationOutput() ConfigRuleEvaluationModeConfigurationOutput {
	return i.ToConfigRuleEvaluationModeConfigurationOutputWithContext(context.Background())
}

func (i ConfigRuleEvaluationModeConfigurationArgs) ToConfigRuleEvaluationModeConfigurationOutputWithContext(ctx context.Context) ConfigRuleEvaluationModeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleEvaluationModeConfigurationOutput)
}

// ConfigRuleEvaluationModeConfigurationArrayInput is an input type that accepts ConfigRuleEvaluationModeConfigurationArray and ConfigRuleEvaluationModeConfigurationArrayOutput values.
// You can construct a concrete instance of `ConfigRuleEvaluationModeConfigurationArrayInput` via:
//
//	ConfigRuleEvaluationModeConfigurationArray{ ConfigRuleEvaluationModeConfigurationArgs{...} }
type ConfigRuleEvaluationModeConfigurationArrayInput interface {
	pulumi.Input

	ToConfigRuleEvaluationModeConfigurationArrayOutput() ConfigRuleEvaluationModeConfigurationArrayOutput
	ToConfigRuleEvaluationModeConfigurationArrayOutputWithContext(context.Context) ConfigRuleEvaluationModeConfigurationArrayOutput
}

type ConfigRuleEvaluationModeConfigurationArray []ConfigRuleEvaluationModeConfigurationInput

func (ConfigRuleEvaluationModeConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigRuleEvaluationModeConfiguration)(nil)).Elem()
}

func (i ConfigRuleEvaluationModeConfigurationArray) ToConfigRuleEvaluationModeConfigurationArrayOutput() ConfigRuleEvaluationModeConfigurationArrayOutput {
	return i.ToConfigRuleEvaluationModeConfigurationArrayOutputWithContext(context.Background())
}

func (i ConfigRuleEvaluationModeConfigurationArray) ToConfigRuleEvaluationModeConfigurationArrayOutputWithContext(ctx context.Context) ConfigRuleEvaluationModeConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleEvaluationModeConfigurationArrayOutput)
}

// The configuration object for CC rule evaluation mode. The supported valid values are Detective or Proactive.
type ConfigRuleEvaluationModeConfigurationOutput struct{ *pulumi.OutputState }

func (ConfigRuleEvaluationModeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRuleEvaluationModeConfiguration)(nil)).Elem()
}

func (o ConfigRuleEvaluationModeConfigurationOutput) ToConfigRuleEvaluationModeConfigurationOutput() ConfigRuleEvaluationModeConfigurationOutput {
	return o
}

func (o ConfigRuleEvaluationModeConfigurationOutput) ToConfigRuleEvaluationModeConfigurationOutputWithContext(ctx context.Context) ConfigRuleEvaluationModeConfigurationOutput {
	return o
}

// The mode of an evaluation. The valid values are Detective or Proactive.
func (o ConfigRuleEvaluationModeConfigurationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigRuleEvaluationModeConfiguration) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type ConfigRuleEvaluationModeConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ConfigRuleEvaluationModeConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigRuleEvaluationModeConfiguration)(nil)).Elem()
}

func (o ConfigRuleEvaluationModeConfigurationArrayOutput) ToConfigRuleEvaluationModeConfigurationArrayOutput() ConfigRuleEvaluationModeConfigurationArrayOutput {
	return o
}

func (o ConfigRuleEvaluationModeConfigurationArrayOutput) ToConfigRuleEvaluationModeConfigurationArrayOutputWithContext(ctx context.Context) ConfigRuleEvaluationModeConfigurationArrayOutput {
	return o
}

func (o ConfigRuleEvaluationModeConfigurationArrayOutput) Index(i pulumi.IntInput) ConfigRuleEvaluationModeConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigRuleEvaluationModeConfiguration {
		return vs[0].([]ConfigRuleEvaluationModeConfiguration)[vs[1].(int)]
	}).(ConfigRuleEvaluationModeConfigurationOutput)
}

// Defines which resources trigger an evaluation for an CC rule. The scope can include one or more resource types, a combination of a tag key and value, or a combination of one resource type and one resource ID. Specify a scope to constrain which resources trigger an evaluation for a rule. Otherwise, evaluations for the rule are triggered when any resource in your recording group changes in configuration.
type ConfigRuleScope struct {
	// The ID of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for ``ComplianceResourceTypes``.
	ComplianceResourceId *string `pulumi:"complianceResourceId"`
	// The resource types of only those AWS resources that you want to trigger an evaluation for the rule. You can only specify one type if you also specify a resource ID for ``ComplianceResourceId``.
	ComplianceResourceTypes []string `pulumi:"complianceResourceTypes"`
	// The tag key that is applied to only those AWS resources that you want to trigger an evaluation for the rule.
	TagKey *string `pulumi:"tagKey"`
	// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule. If you specify a value for ``TagValue``, you must also specify a value for ``TagKey``.
	TagValue *string `pulumi:"tagValue"`
}

// ConfigRuleScopeInput is an input type that accepts ConfigRuleScopeArgs and ConfigRuleScopeOutput values.
// You can construct a concrete instance of `ConfigRuleScopeInput` via:
//
//	ConfigRuleScopeArgs{...}
type ConfigRuleScopeInput interface {
	pulumi.Input

	ToConfigRuleScopeOutput() ConfigRuleScopeOutput
	ToConfigRuleScopeOutputWithContext(context.Context) ConfigRuleScopeOutput
}

// Defines which resources trigger an evaluation for an CC rule. The scope can include one or more resource types, a combination of a tag key and value, or a combination of one resource type and one resource ID. Specify a scope to constrain which resources trigger an evaluation for a rule. Otherwise, evaluations for the rule are triggered when any resource in your recording group changes in configuration.
type ConfigRuleScopeArgs struct {
	// The ID of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for ``ComplianceResourceTypes``.
	ComplianceResourceId pulumi.StringPtrInput `pulumi:"complianceResourceId"`
	// The resource types of only those AWS resources that you want to trigger an evaluation for the rule. You can only specify one type if you also specify a resource ID for ``ComplianceResourceId``.
	ComplianceResourceTypes pulumi.StringArrayInput `pulumi:"complianceResourceTypes"`
	// The tag key that is applied to only those AWS resources that you want to trigger an evaluation for the rule.
	TagKey pulumi.StringPtrInput `pulumi:"tagKey"`
	// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule. If you specify a value for ``TagValue``, you must also specify a value for ``TagKey``.
	TagValue pulumi.StringPtrInput `pulumi:"tagValue"`
}

func (ConfigRuleScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRuleScope)(nil)).Elem()
}

func (i ConfigRuleScopeArgs) ToConfigRuleScopeOutput() ConfigRuleScopeOutput {
	return i.ToConfigRuleScopeOutputWithContext(context.Background())
}

func (i ConfigRuleScopeArgs) ToConfigRuleScopeOutputWithContext(ctx context.Context) ConfigRuleScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleScopeOutput)
}

func (i ConfigRuleScopeArgs) ToConfigRuleScopePtrOutput() ConfigRuleScopePtrOutput {
	return i.ToConfigRuleScopePtrOutputWithContext(context.Background())
}

func (i ConfigRuleScopeArgs) ToConfigRuleScopePtrOutputWithContext(ctx context.Context) ConfigRuleScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleScopeOutput).ToConfigRuleScopePtrOutputWithContext(ctx)
}

// ConfigRuleScopePtrInput is an input type that accepts ConfigRuleScopeArgs, ConfigRuleScopePtr and ConfigRuleScopePtrOutput values.
// You can construct a concrete instance of `ConfigRuleScopePtrInput` via:
//
//	        ConfigRuleScopeArgs{...}
//
//	or:
//
//	        nil
type ConfigRuleScopePtrInput interface {
	pulumi.Input

	ToConfigRuleScopePtrOutput() ConfigRuleScopePtrOutput
	ToConfigRuleScopePtrOutputWithContext(context.Context) ConfigRuleScopePtrOutput
}

type configRuleScopePtrType ConfigRuleScopeArgs

func ConfigRuleScopePtr(v *ConfigRuleScopeArgs) ConfigRuleScopePtrInput {
	return (*configRuleScopePtrType)(v)
}

func (*configRuleScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigRuleScope)(nil)).Elem()
}

func (i *configRuleScopePtrType) ToConfigRuleScopePtrOutput() ConfigRuleScopePtrOutput {
	return i.ToConfigRuleScopePtrOutputWithContext(context.Background())
}

func (i *configRuleScopePtrType) ToConfigRuleScopePtrOutputWithContext(ctx context.Context) ConfigRuleScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleScopePtrOutput)
}

// Defines which resources trigger an evaluation for an CC rule. The scope can include one or more resource types, a combination of a tag key and value, or a combination of one resource type and one resource ID. Specify a scope to constrain which resources trigger an evaluation for a rule. Otherwise, evaluations for the rule are triggered when any resource in your recording group changes in configuration.
type ConfigRuleScopeOutput struct{ *pulumi.OutputState }

func (ConfigRuleScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRuleScope)(nil)).Elem()
}

func (o ConfigRuleScopeOutput) ToConfigRuleScopeOutput() ConfigRuleScopeOutput {
	return o
}

func (o ConfigRuleScopeOutput) ToConfigRuleScopeOutputWithContext(ctx context.Context) ConfigRuleScopeOutput {
	return o
}

func (o ConfigRuleScopeOutput) ToConfigRuleScopePtrOutput() ConfigRuleScopePtrOutput {
	return o.ToConfigRuleScopePtrOutputWithContext(context.Background())
}

func (o ConfigRuleScopeOutput) ToConfigRuleScopePtrOutputWithContext(ctx context.Context) ConfigRuleScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigRuleScope) *ConfigRuleScope {
		return &v
	}).(ConfigRuleScopePtrOutput)
}

// The ID of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for “ComplianceResourceTypes“.
func (o ConfigRuleScopeOutput) ComplianceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigRuleScope) *string { return v.ComplianceResourceId }).(pulumi.StringPtrOutput)
}

// The resource types of only those AWS resources that you want to trigger an evaluation for the rule. You can only specify one type if you also specify a resource ID for “ComplianceResourceId“.
func (o ConfigRuleScopeOutput) ComplianceResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigRuleScope) []string { return v.ComplianceResourceTypes }).(pulumi.StringArrayOutput)
}

// The tag key that is applied to only those AWS resources that you want to trigger an evaluation for the rule.
func (o ConfigRuleScopeOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigRuleScope) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule. If you specify a value for “TagValue“, you must also specify a value for “TagKey“.
func (o ConfigRuleScopeOutput) TagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigRuleScope) *string { return v.TagValue }).(pulumi.StringPtrOutput)
}

type ConfigRuleScopePtrOutput struct{ *pulumi.OutputState }

func (ConfigRuleScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigRuleScope)(nil)).Elem()
}

func (o ConfigRuleScopePtrOutput) ToConfigRuleScopePtrOutput() ConfigRuleScopePtrOutput {
	return o
}

func (o ConfigRuleScopePtrOutput) ToConfigRuleScopePtrOutputWithContext(ctx context.Context) ConfigRuleScopePtrOutput {
	return o
}

func (o ConfigRuleScopePtrOutput) Elem() ConfigRuleScopeOutput {
	return o.ApplyT(func(v *ConfigRuleScope) ConfigRuleScope {
		if v != nil {
			return *v
		}
		var ret ConfigRuleScope
		return ret
	}).(ConfigRuleScopeOutput)
}

// The ID of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for “ComplianceResourceTypes“.
func (o ConfigRuleScopePtrOutput) ComplianceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRuleScope) *string {
		if v == nil {
			return nil
		}
		return v.ComplianceResourceId
	}).(pulumi.StringPtrOutput)
}

// The resource types of only those AWS resources that you want to trigger an evaluation for the rule. You can only specify one type if you also specify a resource ID for “ComplianceResourceId“.
func (o ConfigRuleScopePtrOutput) ComplianceResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigRuleScope) []string {
		if v == nil {
			return nil
		}
		return v.ComplianceResourceTypes
	}).(pulumi.StringArrayOutput)
}

// The tag key that is applied to only those AWS resources that you want to trigger an evaluation for the rule.
func (o ConfigRuleScopePtrOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRuleScope) *string {
		if v == nil {
			return nil
		}
		return v.TagKey
	}).(pulumi.StringPtrOutput)
}

// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule. If you specify a value for “TagValue“, you must also specify a value for “TagKey“.
func (o ConfigRuleScopePtrOutput) TagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRuleScope) *string {
		if v == nil {
			return nil
		}
		return v.TagValue
	}).(pulumi.StringPtrOutput)
}

// Provides the CustomPolicyDetails, the rule owner (```` for managed rules, “CUSTOM_POLICY“ for Custom Policy rules, and “CUSTOM_LAMBDA“ for Custom Lambda rules), the rule identifier, and the events that cause the evaluation of your AWS resources.
type ConfigRuleSource struct {
	// Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to ``CUSTOM_POLICY``.
	CustomPolicyDetails *ConfigRuleCustomPolicyDetails `pulumi:"customPolicyDetails"`
	// Indicates whether AWS or the customer owns and manages the CC rule.
	//   CC Managed Rules are predefined rules owned by AWS. For more information, see [Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html) in the *developer guide*.
	//   CC Custom Rules are rules that you can develop either with Guard (``CUSTOM_POLICY``) or LAMlong (``CUSTOM_LAMBDA``). For more information, see [Custom Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html) in the *developer guide*.
	Owner string `pulumi:"owner"`
	// Provides the source and the message types that cause CC to evaluate your AWS resources against a rule. It also provides the frequency with which you want CC to run evaluations for the rule if the trigger type is periodic.
	//  If the owner is set to ``CUSTOM_POLICY``, the only acceptable values for the CC rule trigger message type are ``ConfigurationItemChangeNotification`` and ``OversizedConfigurationItemChangeNotification``.
	SourceDetails []ConfigRuleSourceDetail `pulumi:"sourceDetails"`
	// For CC Managed rules, a predefined identifier from a list. For example, ``IAM_PASSWORD_POLICY`` is a managed rule. To reference a managed rule, see [List of Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html).
	//  For CC Custom Lambda rules, the identifier is the Amazon Resource Name (ARN) of the rule's LAMlong function, such as ``arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name``.
	//  For CC Custom Policy rules, this field will be ignored.
	SourceIdentifier *string `pulumi:"sourceIdentifier"`
}

// ConfigRuleSourceInput is an input type that accepts ConfigRuleSourceArgs and ConfigRuleSourceOutput values.
// You can construct a concrete instance of `ConfigRuleSourceInput` via:
//
//	ConfigRuleSourceArgs{...}
type ConfigRuleSourceInput interface {
	pulumi.Input

	ToConfigRuleSourceOutput() ConfigRuleSourceOutput
	ToConfigRuleSourceOutputWithContext(context.Context) ConfigRuleSourceOutput
}

// Provides the CustomPolicyDetails, the rule owner (```` for managed rules, “CUSTOM_POLICY“ for Custom Policy rules, and “CUSTOM_LAMBDA“ for Custom Lambda rules), the rule identifier, and the events that cause the evaluation of your AWS resources.
type ConfigRuleSourceArgs struct {
	// Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to ``CUSTOM_POLICY``.
	CustomPolicyDetails ConfigRuleCustomPolicyDetailsPtrInput `pulumi:"customPolicyDetails"`
	// Indicates whether AWS or the customer owns and manages the CC rule.
	//   CC Managed Rules are predefined rules owned by AWS. For more information, see [Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html) in the *developer guide*.
	//   CC Custom Rules are rules that you can develop either with Guard (``CUSTOM_POLICY``) or LAMlong (``CUSTOM_LAMBDA``). For more information, see [Custom Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html) in the *developer guide*.
	Owner pulumi.StringInput `pulumi:"owner"`
	// Provides the source and the message types that cause CC to evaluate your AWS resources against a rule. It also provides the frequency with which you want CC to run evaluations for the rule if the trigger type is periodic.
	//  If the owner is set to ``CUSTOM_POLICY``, the only acceptable values for the CC rule trigger message type are ``ConfigurationItemChangeNotification`` and ``OversizedConfigurationItemChangeNotification``.
	SourceDetails ConfigRuleSourceDetailArrayInput `pulumi:"sourceDetails"`
	// For CC Managed rules, a predefined identifier from a list. For example, ``IAM_PASSWORD_POLICY`` is a managed rule. To reference a managed rule, see [List of Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html).
	//  For CC Custom Lambda rules, the identifier is the Amazon Resource Name (ARN) of the rule's LAMlong function, such as ``arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name``.
	//  For CC Custom Policy rules, this field will be ignored.
	SourceIdentifier pulumi.StringPtrInput `pulumi:"sourceIdentifier"`
}

func (ConfigRuleSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRuleSource)(nil)).Elem()
}

func (i ConfigRuleSourceArgs) ToConfigRuleSourceOutput() ConfigRuleSourceOutput {
	return i.ToConfigRuleSourceOutputWithContext(context.Background())
}

func (i ConfigRuleSourceArgs) ToConfigRuleSourceOutputWithContext(ctx context.Context) ConfigRuleSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleSourceOutput)
}

// Provides the CustomPolicyDetails, the rule owner (```` for managed rules, “CUSTOM_POLICY“ for Custom Policy rules, and “CUSTOM_LAMBDA“ for Custom Lambda rules), the rule identifier, and the events that cause the evaluation of your AWS resources.
type ConfigRuleSourceOutput struct{ *pulumi.OutputState }

func (ConfigRuleSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRuleSource)(nil)).Elem()
}

func (o ConfigRuleSourceOutput) ToConfigRuleSourceOutput() ConfigRuleSourceOutput {
	return o
}

func (o ConfigRuleSourceOutput) ToConfigRuleSourceOutputWithContext(ctx context.Context) ConfigRuleSourceOutput {
	return o
}

// Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to “CUSTOM_POLICY“.
func (o ConfigRuleSourceOutput) CustomPolicyDetails() ConfigRuleCustomPolicyDetailsPtrOutput {
	return o.ApplyT(func(v ConfigRuleSource) *ConfigRuleCustomPolicyDetails { return v.CustomPolicyDetails }).(ConfigRuleCustomPolicyDetailsPtrOutput)
}

// Indicates whether AWS or the customer owns and manages the CC rule.
//
//	CC Managed Rules are predefined rules owned by AWS. For more information, see [Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html) in the *developer guide*.
//	CC Custom Rules are rules that you can develop either with Guard (``CUSTOM_POLICY``) or LAMlong (``CUSTOM_LAMBDA``). For more information, see [Custom Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html) in the *developer guide*.
func (o ConfigRuleSourceOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigRuleSource) string { return v.Owner }).(pulumi.StringOutput)
}

// Provides the source and the message types that cause CC to evaluate your AWS resources against a rule. It also provides the frequency with which you want CC to run evaluations for the rule if the trigger type is periodic.
//
//	If the owner is set to ``CUSTOM_POLICY``, the only acceptable values for the CC rule trigger message type are ``ConfigurationItemChangeNotification`` and ``OversizedConfigurationItemChangeNotification``.
func (o ConfigRuleSourceOutput) SourceDetails() ConfigRuleSourceDetailArrayOutput {
	return o.ApplyT(func(v ConfigRuleSource) []ConfigRuleSourceDetail { return v.SourceDetails }).(ConfigRuleSourceDetailArrayOutput)
}

// For CC Managed rules, a predefined identifier from a list. For example, “IAM_PASSWORD_POLICY“ is a managed rule. To reference a managed rule, see [List of Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html).
//
//	For CC Custom Lambda rules, the identifier is the Amazon Resource Name (ARN) of the rule's LAMlong function, such as ``arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name``.
//	For CC Custom Policy rules, this field will be ignored.
func (o ConfigRuleSourceOutput) SourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigRuleSource) *string { return v.SourceIdentifier }).(pulumi.StringPtrOutput)
}

type ConfigRuleSourcePtrOutput struct{ *pulumi.OutputState }

func (ConfigRuleSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigRuleSource)(nil)).Elem()
}

func (o ConfigRuleSourcePtrOutput) ToConfigRuleSourcePtrOutput() ConfigRuleSourcePtrOutput {
	return o
}

func (o ConfigRuleSourcePtrOutput) ToConfigRuleSourcePtrOutputWithContext(ctx context.Context) ConfigRuleSourcePtrOutput {
	return o
}

func (o ConfigRuleSourcePtrOutput) Elem() ConfigRuleSourceOutput {
	return o.ApplyT(func(v *ConfigRuleSource) ConfigRuleSource {
		if v != nil {
			return *v
		}
		var ret ConfigRuleSource
		return ret
	}).(ConfigRuleSourceOutput)
}

// Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to “CUSTOM_POLICY“.
func (o ConfigRuleSourcePtrOutput) CustomPolicyDetails() ConfigRuleCustomPolicyDetailsPtrOutput {
	return o.ApplyT(func(v *ConfigRuleSource) *ConfigRuleCustomPolicyDetails {
		if v == nil {
			return nil
		}
		return v.CustomPolicyDetails
	}).(ConfigRuleCustomPolicyDetailsPtrOutput)
}

// Indicates whether AWS or the customer owns and manages the CC rule.
//
//	CC Managed Rules are predefined rules owned by AWS. For more information, see [Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html) in the *developer guide*.
//	CC Custom Rules are rules that you can develop either with Guard (``CUSTOM_POLICY``) or LAMlong (``CUSTOM_LAMBDA``). For more information, see [Custom Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html) in the *developer guide*.
func (o ConfigRuleSourcePtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRuleSource) *string {
		if v == nil {
			return nil
		}
		return &v.Owner
	}).(pulumi.StringPtrOutput)
}

// Provides the source and the message types that cause CC to evaluate your AWS resources against a rule. It also provides the frequency with which you want CC to run evaluations for the rule if the trigger type is periodic.
//
//	If the owner is set to ``CUSTOM_POLICY``, the only acceptable values for the CC rule trigger message type are ``ConfigurationItemChangeNotification`` and ``OversizedConfigurationItemChangeNotification``.
func (o ConfigRuleSourcePtrOutput) SourceDetails() ConfigRuleSourceDetailArrayOutput {
	return o.ApplyT(func(v *ConfigRuleSource) []ConfigRuleSourceDetail {
		if v == nil {
			return nil
		}
		return v.SourceDetails
	}).(ConfigRuleSourceDetailArrayOutput)
}

// For CC Managed rules, a predefined identifier from a list. For example, “IAM_PASSWORD_POLICY“ is a managed rule. To reference a managed rule, see [List of Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html).
//
//	For CC Custom Lambda rules, the identifier is the Amazon Resource Name (ARN) of the rule's LAMlong function, such as ``arn:aws:lambda:us-east-2:123456789012:function:custom_rule_name``.
//	For CC Custom Policy rules, this field will be ignored.
func (o ConfigRuleSourcePtrOutput) SourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigRuleSource) *string {
		if v == nil {
			return nil
		}
		return v.SourceIdentifier
	}).(pulumi.StringPtrOutput)
}

// Provides the source and the message types that trigger CC to evaluate your AWS resources against a rule. It also provides the frequency with which you want CC to run evaluations for the rule if the trigger type is periodic. You can specify the parameter values for “SourceDetail“ only for custom rules.
type ConfigRuleSourceDetail struct {
	// The source of the event, such as an AWS service, that triggers CC to evaluate your AWS resources.
	EventSource string `pulumi:"eventSource"`
	// The frequency at which you want CC to run evaluations for a custom rule with a periodic trigger. If you specify a value for ``MaximumExecutionFrequency``, then ``MessageType`` must use the ``ScheduledNotification`` value.
	//   By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the ``MaximumExecutionFrequency`` parameter.
	//  Based on the valid value you choose, CC runs evaluations once for each valid value. For example, if you choose ``Three_Hours``, CC runs evaluations once every three hours. In this case, ``Three_Hours`` is the frequency of this rule.
	MaximumExecutionFrequency *string `pulumi:"maximumExecutionFrequency"`
	// The type of notification that triggers CC to run an evaluation for a rule. You can specify the following notification types:
	//   +   ``ConfigurationItemChangeNotification`` - Triggers an evaluation when CC delivers a configuration item as a result of a resource change.
	//   +   ``OversizedConfigurationItemChangeNotification`` - Triggers an evaluation when CC delivers an oversized configuration item. CC may generate this notification type when a resource changes and the notification exceeds the maximum size allowed by Amazon SNS.
	//   +   ``ScheduledNotification`` - Triggers a periodic evaluation at the frequency specified for ``MaximumExecutionFrequency``.
	//   +   ``ConfigurationSnapshotDeliveryCompleted`` - Triggers a periodic evaluation when CC delivers a configuration snapshot.
	//
	//  If you want your custom rule to be triggered by configuration changes, specify two SourceDetail objects, one for ``ConfigurationItemChangeNotification`` and one for ``OversizedConfigurationItemChangeNotification``.
	MessageType string `pulumi:"messageType"`
}

// ConfigRuleSourceDetailInput is an input type that accepts ConfigRuleSourceDetailArgs and ConfigRuleSourceDetailOutput values.
// You can construct a concrete instance of `ConfigRuleSourceDetailInput` via:
//
//	ConfigRuleSourceDetailArgs{...}
type ConfigRuleSourceDetailInput interface {
	pulumi.Input

	ToConfigRuleSourceDetailOutput() ConfigRuleSourceDetailOutput
	ToConfigRuleSourceDetailOutputWithContext(context.Context) ConfigRuleSourceDetailOutput
}

// Provides the source and the message types that trigger CC to evaluate your AWS resources against a rule. It also provides the frequency with which you want CC to run evaluations for the rule if the trigger type is periodic. You can specify the parameter values for “SourceDetail“ only for custom rules.
type ConfigRuleSourceDetailArgs struct {
	// The source of the event, such as an AWS service, that triggers CC to evaluate your AWS resources.
	EventSource pulumi.StringInput `pulumi:"eventSource"`
	// The frequency at which you want CC to run evaluations for a custom rule with a periodic trigger. If you specify a value for ``MaximumExecutionFrequency``, then ``MessageType`` must use the ``ScheduledNotification`` value.
	//   By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the ``MaximumExecutionFrequency`` parameter.
	//  Based on the valid value you choose, CC runs evaluations once for each valid value. For example, if you choose ``Three_Hours``, CC runs evaluations once every three hours. In this case, ``Three_Hours`` is the frequency of this rule.
	MaximumExecutionFrequency pulumi.StringPtrInput `pulumi:"maximumExecutionFrequency"`
	// The type of notification that triggers CC to run an evaluation for a rule. You can specify the following notification types:
	//   +   ``ConfigurationItemChangeNotification`` - Triggers an evaluation when CC delivers a configuration item as a result of a resource change.
	//   +   ``OversizedConfigurationItemChangeNotification`` - Triggers an evaluation when CC delivers an oversized configuration item. CC may generate this notification type when a resource changes and the notification exceeds the maximum size allowed by Amazon SNS.
	//   +   ``ScheduledNotification`` - Triggers a periodic evaluation at the frequency specified for ``MaximumExecutionFrequency``.
	//   +   ``ConfigurationSnapshotDeliveryCompleted`` - Triggers a periodic evaluation when CC delivers a configuration snapshot.
	//
	//  If you want your custom rule to be triggered by configuration changes, specify two SourceDetail objects, one for ``ConfigurationItemChangeNotification`` and one for ``OversizedConfigurationItemChangeNotification``.
	MessageType pulumi.StringInput `pulumi:"messageType"`
}

func (ConfigRuleSourceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRuleSourceDetail)(nil)).Elem()
}

func (i ConfigRuleSourceDetailArgs) ToConfigRuleSourceDetailOutput() ConfigRuleSourceDetailOutput {
	return i.ToConfigRuleSourceDetailOutputWithContext(context.Background())
}

func (i ConfigRuleSourceDetailArgs) ToConfigRuleSourceDetailOutputWithContext(ctx context.Context) ConfigRuleSourceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleSourceDetailOutput)
}

// ConfigRuleSourceDetailArrayInput is an input type that accepts ConfigRuleSourceDetailArray and ConfigRuleSourceDetailArrayOutput values.
// You can construct a concrete instance of `ConfigRuleSourceDetailArrayInput` via:
//
//	ConfigRuleSourceDetailArray{ ConfigRuleSourceDetailArgs{...} }
type ConfigRuleSourceDetailArrayInput interface {
	pulumi.Input

	ToConfigRuleSourceDetailArrayOutput() ConfigRuleSourceDetailArrayOutput
	ToConfigRuleSourceDetailArrayOutputWithContext(context.Context) ConfigRuleSourceDetailArrayOutput
}

type ConfigRuleSourceDetailArray []ConfigRuleSourceDetailInput

func (ConfigRuleSourceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigRuleSourceDetail)(nil)).Elem()
}

func (i ConfigRuleSourceDetailArray) ToConfigRuleSourceDetailArrayOutput() ConfigRuleSourceDetailArrayOutput {
	return i.ToConfigRuleSourceDetailArrayOutputWithContext(context.Background())
}

func (i ConfigRuleSourceDetailArray) ToConfigRuleSourceDetailArrayOutputWithContext(ctx context.Context) ConfigRuleSourceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigRuleSourceDetailArrayOutput)
}

// Provides the source and the message types that trigger CC to evaluate your AWS resources against a rule. It also provides the frequency with which you want CC to run evaluations for the rule if the trigger type is periodic. You can specify the parameter values for “SourceDetail“ only for custom rules.
type ConfigRuleSourceDetailOutput struct{ *pulumi.OutputState }

func (ConfigRuleSourceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigRuleSourceDetail)(nil)).Elem()
}

func (o ConfigRuleSourceDetailOutput) ToConfigRuleSourceDetailOutput() ConfigRuleSourceDetailOutput {
	return o
}

func (o ConfigRuleSourceDetailOutput) ToConfigRuleSourceDetailOutputWithContext(ctx context.Context) ConfigRuleSourceDetailOutput {
	return o
}

// The source of the event, such as an AWS service, that triggers CC to evaluate your AWS resources.
func (o ConfigRuleSourceDetailOutput) EventSource() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigRuleSourceDetail) string { return v.EventSource }).(pulumi.StringOutput)
}

// The frequency at which you want CC to run evaluations for a custom rule with a periodic trigger. If you specify a value for “MaximumExecutionFrequency“, then “MessageType“ must use the “ScheduledNotification“ value.
//
//	 By default, rules with a periodic trigger are evaluated every 24 hours. To change the frequency, specify a valid value for the ``MaximumExecutionFrequency`` parameter.
//	Based on the valid value you choose, CC runs evaluations once for each valid value. For example, if you choose ``Three_Hours``, CC runs evaluations once every three hours. In this case, ``Three_Hours`` is the frequency of this rule.
func (o ConfigRuleSourceDetailOutput) MaximumExecutionFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigRuleSourceDetail) *string { return v.MaximumExecutionFrequency }).(pulumi.StringPtrOutput)
}

// The type of notification that triggers CC to run an evaluation for a rule. You can specify the following notification types:
//
//   - “ConfigurationItemChangeNotification“ - Triggers an evaluation when CC delivers a configuration item as a result of a resource change.
//
//   - “OversizedConfigurationItemChangeNotification“ - Triggers an evaluation when CC delivers an oversized configuration item. CC may generate this notification type when a resource changes and the notification exceeds the maximum size allowed by Amazon SNS.
//
//   - “ScheduledNotification“ - Triggers a periodic evaluation at the frequency specified for “MaximumExecutionFrequency“.
//
//   - “ConfigurationSnapshotDeliveryCompleted“ - Triggers a periodic evaluation when CC delivers a configuration snapshot.
//
//     If you want your custom rule to be triggered by configuration changes, specify two SourceDetail objects, one for “ConfigurationItemChangeNotification“ and one for “OversizedConfigurationItemChangeNotification“.
func (o ConfigRuleSourceDetailOutput) MessageType() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigRuleSourceDetail) string { return v.MessageType }).(pulumi.StringOutput)
}

type ConfigRuleSourceDetailArrayOutput struct{ *pulumi.OutputState }

func (ConfigRuleSourceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigRuleSourceDetail)(nil)).Elem()
}

func (o ConfigRuleSourceDetailArrayOutput) ToConfigRuleSourceDetailArrayOutput() ConfigRuleSourceDetailArrayOutput {
	return o
}

func (o ConfigRuleSourceDetailArrayOutput) ToConfigRuleSourceDetailArrayOutputWithContext(ctx context.Context) ConfigRuleSourceDetailArrayOutput {
	return o
}

func (o ConfigRuleSourceDetailArrayOutput) Index(i pulumi.IntInput) ConfigRuleSourceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigRuleSourceDetail {
		return vs[0].([]ConfigRuleSourceDetail)[vs[1].(int)]
	}).(ConfigRuleSourceDetailOutput)
}

type ConfigurationAggregatorAccountAggregationSource struct {
	// The 12-digit account ID of the account being aggregated.
	AccountIds []string `pulumi:"accountIds"`
	// If true, aggregate existing AWS Config regions and future regions.
	AllAwsRegions *bool `pulumi:"allAwsRegions"`
	// The source regions being aggregated.
	AwsRegions []string `pulumi:"awsRegions"`
}

// ConfigurationAggregatorAccountAggregationSourceInput is an input type that accepts ConfigurationAggregatorAccountAggregationSourceArgs and ConfigurationAggregatorAccountAggregationSourceOutput values.
// You can construct a concrete instance of `ConfigurationAggregatorAccountAggregationSourceInput` via:
//
//	ConfigurationAggregatorAccountAggregationSourceArgs{...}
type ConfigurationAggregatorAccountAggregationSourceInput interface {
	pulumi.Input

	ToConfigurationAggregatorAccountAggregationSourceOutput() ConfigurationAggregatorAccountAggregationSourceOutput
	ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(context.Context) ConfigurationAggregatorAccountAggregationSourceOutput
}

type ConfigurationAggregatorAccountAggregationSourceArgs struct {
	// The 12-digit account ID of the account being aggregated.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// If true, aggregate existing AWS Config regions and future regions.
	AllAwsRegions pulumi.BoolPtrInput `pulumi:"allAwsRegions"`
	// The source regions being aggregated.
	AwsRegions pulumi.StringArrayInput `pulumi:"awsRegions"`
}

func (ConfigurationAggregatorAccountAggregationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourceOutput() ConfigurationAggregatorAccountAggregationSourceOutput {
	return i.ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorAccountAggregationSourceOutput)
}

// ConfigurationAggregatorAccountAggregationSourceArrayInput is an input type that accepts ConfigurationAggregatorAccountAggregationSourceArray and ConfigurationAggregatorAccountAggregationSourceArrayOutput values.
// You can construct a concrete instance of `ConfigurationAggregatorAccountAggregationSourceArrayInput` via:
//
//	ConfigurationAggregatorAccountAggregationSourceArray{ ConfigurationAggregatorAccountAggregationSourceArgs{...} }
type ConfigurationAggregatorAccountAggregationSourceArrayInput interface {
	pulumi.Input

	ToConfigurationAggregatorAccountAggregationSourceArrayOutput() ConfigurationAggregatorAccountAggregationSourceArrayOutput
	ToConfigurationAggregatorAccountAggregationSourceArrayOutputWithContext(context.Context) ConfigurationAggregatorAccountAggregationSourceArrayOutput
}

type ConfigurationAggregatorAccountAggregationSourceArray []ConfigurationAggregatorAccountAggregationSourceInput

func (ConfigurationAggregatorAccountAggregationSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (i ConfigurationAggregatorAccountAggregationSourceArray) ToConfigurationAggregatorAccountAggregationSourceArrayOutput() ConfigurationAggregatorAccountAggregationSourceArrayOutput {
	return i.ToConfigurationAggregatorAccountAggregationSourceArrayOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorAccountAggregationSourceArray) ToConfigurationAggregatorAccountAggregationSourceArrayOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorAccountAggregationSourceArrayOutput)
}

type ConfigurationAggregatorAccountAggregationSourceOutput struct{ *pulumi.OutputState }

func (ConfigurationAggregatorAccountAggregationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourceOutput() ConfigurationAggregatorAccountAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourceOutput {
	return o
}

// The 12-digit account ID of the account being aggregated.
func (o ConfigurationAggregatorAccountAggregationSourceOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorAccountAggregationSourceOutput) AllAwsRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) *bool { return v.AllAwsRegions }).(pulumi.BoolPtrOutput)
}

// The source regions being aggregated.
func (o ConfigurationAggregatorAccountAggregationSourceOutput) AwsRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) []string { return v.AwsRegions }).(pulumi.StringArrayOutput)
}

type ConfigurationAggregatorAccountAggregationSourceArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationAggregatorAccountAggregationSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorAccountAggregationSourceArrayOutput) ToConfigurationAggregatorAccountAggregationSourceArrayOutput() ConfigurationAggregatorAccountAggregationSourceArrayOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourceArrayOutput) ToConfigurationAggregatorAccountAggregationSourceArrayOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourceArrayOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourceArrayOutput) Index(i pulumi.IntInput) ConfigurationAggregatorAccountAggregationSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationAggregatorAccountAggregationSource {
		return vs[0].([]ConfigurationAggregatorAccountAggregationSource)[vs[1].(int)]
	}).(ConfigurationAggregatorAccountAggregationSourceOutput)
}

type ConfigurationAggregatorOrganizationAggregationSource struct {
	// If true, aggregate existing AWS Config regions and future regions.
	AllAwsRegions *bool `pulumi:"allAwsRegions"`
	// The source regions being aggregated.
	AwsRegions []string `pulumi:"awsRegions"`
	// ARN of the IAM role used to retrieve AWS Organizations details associated with the aggregator account.
	RoleArn string `pulumi:"roleArn"`
}

// ConfigurationAggregatorOrganizationAggregationSourceInput is an input type that accepts ConfigurationAggregatorOrganizationAggregationSourceArgs and ConfigurationAggregatorOrganizationAggregationSourceOutput values.
// You can construct a concrete instance of `ConfigurationAggregatorOrganizationAggregationSourceInput` via:
//
//	ConfigurationAggregatorOrganizationAggregationSourceArgs{...}
type ConfigurationAggregatorOrganizationAggregationSourceInput interface {
	pulumi.Input

	ToConfigurationAggregatorOrganizationAggregationSourceOutput() ConfigurationAggregatorOrganizationAggregationSourceOutput
	ToConfigurationAggregatorOrganizationAggregationSourceOutputWithContext(context.Context) ConfigurationAggregatorOrganizationAggregationSourceOutput
}

type ConfigurationAggregatorOrganizationAggregationSourceArgs struct {
	// If true, aggregate existing AWS Config regions and future regions.
	AllAwsRegions pulumi.BoolPtrInput `pulumi:"allAwsRegions"`
	// The source regions being aggregated.
	AwsRegions pulumi.StringArrayInput `pulumi:"awsRegions"`
	// ARN of the IAM role used to retrieve AWS Organizations details associated with the aggregator account.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (ConfigurationAggregatorOrganizationAggregationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorOrganizationAggregationSource)(nil)).Elem()
}

func (i ConfigurationAggregatorOrganizationAggregationSourceArgs) ToConfigurationAggregatorOrganizationAggregationSourceOutput() ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return i.ToConfigurationAggregatorOrganizationAggregationSourceOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorOrganizationAggregationSourceArgs) ToConfigurationAggregatorOrganizationAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorOrganizationAggregationSourceOutput)
}

func (i ConfigurationAggregatorOrganizationAggregationSourceArgs) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return i.ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorOrganizationAggregationSourceArgs) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorOrganizationAggregationSourceOutput).ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx)
}

// ConfigurationAggregatorOrganizationAggregationSourcePtrInput is an input type that accepts ConfigurationAggregatorOrganizationAggregationSourceArgs, ConfigurationAggregatorOrganizationAggregationSourcePtr and ConfigurationAggregatorOrganizationAggregationSourcePtrOutput values.
// You can construct a concrete instance of `ConfigurationAggregatorOrganizationAggregationSourcePtrInput` via:
//
//	        ConfigurationAggregatorOrganizationAggregationSourceArgs{...}
//
//	or:
//
//	        nil
type ConfigurationAggregatorOrganizationAggregationSourcePtrInput interface {
	pulumi.Input

	ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput
	ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput
}

type configurationAggregatorOrganizationAggregationSourcePtrType ConfigurationAggregatorOrganizationAggregationSourceArgs

func ConfigurationAggregatorOrganizationAggregationSourcePtr(v *ConfigurationAggregatorOrganizationAggregationSourceArgs) ConfigurationAggregatorOrganizationAggregationSourcePtrInput {
	return (*configurationAggregatorOrganizationAggregationSourcePtrType)(v)
}

func (*configurationAggregatorOrganizationAggregationSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAggregatorOrganizationAggregationSource)(nil)).Elem()
}

func (i *configurationAggregatorOrganizationAggregationSourcePtrType) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return i.ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(context.Background())
}

func (i *configurationAggregatorOrganizationAggregationSourcePtrType) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorOrganizationAggregationSourcePtrOutput)
}

type ConfigurationAggregatorOrganizationAggregationSourceOutput struct{ *pulumi.OutputState }

func (ConfigurationAggregatorOrganizationAggregationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorOrganizationAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) ToConfigurationAggregatorOrganizationAggregationSourceOutput() ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) ToConfigurationAggregatorOrganizationAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return o.ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(context.Background())
}

func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationAggregatorOrganizationAggregationSource) *ConfigurationAggregatorOrganizationAggregationSource {
		return &v
	}).(ConfigurationAggregatorOrganizationAggregationSourcePtrOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) AllAwsRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) *bool { return v.AllAwsRegions }).(pulumi.BoolPtrOutput)
}

// The source regions being aggregated.
func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) AwsRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) []string { return v.AwsRegions }).(pulumi.StringArrayOutput)
}

// ARN of the IAM role used to retrieve AWS Organizations details associated with the aggregator account.
func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) string { return v.RoleArn }).(pulumi.StringOutput)
}

type ConfigurationAggregatorOrganizationAggregationSourcePtrOutput struct{ *pulumi.OutputState }

func (ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAggregatorOrganizationAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return o
}

func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return o
}

func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) Elem() ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorOrganizationAggregationSource) ConfigurationAggregatorOrganizationAggregationSource {
		if v != nil {
			return *v
		}
		var ret ConfigurationAggregatorOrganizationAggregationSource
		return ret
	}).(ConfigurationAggregatorOrganizationAggregationSourceOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) AllAwsRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorOrganizationAggregationSource) *bool {
		if v == nil {
			return nil
		}
		return v.AllAwsRegions
	}).(pulumi.BoolPtrOutput)
}

// The source regions being aggregated.
func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) AwsRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorOrganizationAggregationSource) []string {
		if v == nil {
			return nil
		}
		return v.AwsRegions
	}).(pulumi.StringArrayOutput)
}

// ARN of the IAM role used to retrieve AWS Organizations details associated with the aggregator account.
func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorOrganizationAggregationSource) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type ConfigurationAggregatorTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// Input parameters in the form of key-value pairs for the conformance pack.
type ConformancePackInputParameter struct {
	// One part of a key-value pair.
	ParameterName string `pulumi:"parameterName"`
	// Another part of the key-value pair.
	ParameterValue string `pulumi:"parameterValue"`
}

// ConformancePackInputParameterInput is an input type that accepts ConformancePackInputParameterArgs and ConformancePackInputParameterOutput values.
// You can construct a concrete instance of `ConformancePackInputParameterInput` via:
//
//	ConformancePackInputParameterArgs{...}
type ConformancePackInputParameterInput interface {
	pulumi.Input

	ToConformancePackInputParameterOutput() ConformancePackInputParameterOutput
	ToConformancePackInputParameterOutputWithContext(context.Context) ConformancePackInputParameterOutput
}

// Input parameters in the form of key-value pairs for the conformance pack.
type ConformancePackInputParameterArgs struct {
	// One part of a key-value pair.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// Another part of the key-value pair.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (ConformancePackInputParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConformancePackInputParameter)(nil)).Elem()
}

func (i ConformancePackInputParameterArgs) ToConformancePackInputParameterOutput() ConformancePackInputParameterOutput {
	return i.ToConformancePackInputParameterOutputWithContext(context.Background())
}

func (i ConformancePackInputParameterArgs) ToConformancePackInputParameterOutputWithContext(ctx context.Context) ConformancePackInputParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConformancePackInputParameterOutput)
}

// ConformancePackInputParameterArrayInput is an input type that accepts ConformancePackInputParameterArray and ConformancePackInputParameterArrayOutput values.
// You can construct a concrete instance of `ConformancePackInputParameterArrayInput` via:
//
//	ConformancePackInputParameterArray{ ConformancePackInputParameterArgs{...} }
type ConformancePackInputParameterArrayInput interface {
	pulumi.Input

	ToConformancePackInputParameterArrayOutput() ConformancePackInputParameterArrayOutput
	ToConformancePackInputParameterArrayOutputWithContext(context.Context) ConformancePackInputParameterArrayOutput
}

type ConformancePackInputParameterArray []ConformancePackInputParameterInput

func (ConformancePackInputParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConformancePackInputParameter)(nil)).Elem()
}

func (i ConformancePackInputParameterArray) ToConformancePackInputParameterArrayOutput() ConformancePackInputParameterArrayOutput {
	return i.ToConformancePackInputParameterArrayOutputWithContext(context.Background())
}

func (i ConformancePackInputParameterArray) ToConformancePackInputParameterArrayOutputWithContext(ctx context.Context) ConformancePackInputParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConformancePackInputParameterArrayOutput)
}

// Input parameters in the form of key-value pairs for the conformance pack.
type ConformancePackInputParameterOutput struct{ *pulumi.OutputState }

func (ConformancePackInputParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConformancePackInputParameter)(nil)).Elem()
}

func (o ConformancePackInputParameterOutput) ToConformancePackInputParameterOutput() ConformancePackInputParameterOutput {
	return o
}

func (o ConformancePackInputParameterOutput) ToConformancePackInputParameterOutputWithContext(ctx context.Context) ConformancePackInputParameterOutput {
	return o
}

// One part of a key-value pair.
func (o ConformancePackInputParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v ConformancePackInputParameter) string { return v.ParameterName }).(pulumi.StringOutput)
}

// Another part of the key-value pair.
func (o ConformancePackInputParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v ConformancePackInputParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type ConformancePackInputParameterArrayOutput struct{ *pulumi.OutputState }

func (ConformancePackInputParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConformancePackInputParameter)(nil)).Elem()
}

func (o ConformancePackInputParameterArrayOutput) ToConformancePackInputParameterArrayOutput() ConformancePackInputParameterArrayOutput {
	return o
}

func (o ConformancePackInputParameterArrayOutput) ToConformancePackInputParameterArrayOutputWithContext(ctx context.Context) ConformancePackInputParameterArrayOutput {
	return o
}

func (o ConformancePackInputParameterArrayOutput) Index(i pulumi.IntInput) ConformancePackInputParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConformancePackInputParameter {
		return vs[0].([]ConformancePackInputParameter)[vs[1].(int)]
	}).(ConformancePackInputParameterOutput)
}

// Input parameters in the form of key-value pairs for the conformance pack.
type OrganizationConformancePackConformancePackInputParameter struct {
	// One part of a key-value pair.
	ParameterName string `pulumi:"parameterName"`
	// One part of a key-value pair.
	ParameterValue string `pulumi:"parameterValue"`
}

// OrganizationConformancePackConformancePackInputParameterInput is an input type that accepts OrganizationConformancePackConformancePackInputParameterArgs and OrganizationConformancePackConformancePackInputParameterOutput values.
// You can construct a concrete instance of `OrganizationConformancePackConformancePackInputParameterInput` via:
//
//	OrganizationConformancePackConformancePackInputParameterArgs{...}
type OrganizationConformancePackConformancePackInputParameterInput interface {
	pulumi.Input

	ToOrganizationConformancePackConformancePackInputParameterOutput() OrganizationConformancePackConformancePackInputParameterOutput
	ToOrganizationConformancePackConformancePackInputParameterOutputWithContext(context.Context) OrganizationConformancePackConformancePackInputParameterOutput
}

// Input parameters in the form of key-value pairs for the conformance pack.
type OrganizationConformancePackConformancePackInputParameterArgs struct {
	// One part of a key-value pair.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// One part of a key-value pair.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (OrganizationConformancePackConformancePackInputParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConformancePackConformancePackInputParameter)(nil)).Elem()
}

func (i OrganizationConformancePackConformancePackInputParameterArgs) ToOrganizationConformancePackConformancePackInputParameterOutput() OrganizationConformancePackConformancePackInputParameterOutput {
	return i.ToOrganizationConformancePackConformancePackInputParameterOutputWithContext(context.Background())
}

func (i OrganizationConformancePackConformancePackInputParameterArgs) ToOrganizationConformancePackConformancePackInputParameterOutputWithContext(ctx context.Context) OrganizationConformancePackConformancePackInputParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConformancePackConformancePackInputParameterOutput)
}

// OrganizationConformancePackConformancePackInputParameterArrayInput is an input type that accepts OrganizationConformancePackConformancePackInputParameterArray and OrganizationConformancePackConformancePackInputParameterArrayOutput values.
// You can construct a concrete instance of `OrganizationConformancePackConformancePackInputParameterArrayInput` via:
//
//	OrganizationConformancePackConformancePackInputParameterArray{ OrganizationConformancePackConformancePackInputParameterArgs{...} }
type OrganizationConformancePackConformancePackInputParameterArrayInput interface {
	pulumi.Input

	ToOrganizationConformancePackConformancePackInputParameterArrayOutput() OrganizationConformancePackConformancePackInputParameterArrayOutput
	ToOrganizationConformancePackConformancePackInputParameterArrayOutputWithContext(context.Context) OrganizationConformancePackConformancePackInputParameterArrayOutput
}

type OrganizationConformancePackConformancePackInputParameterArray []OrganizationConformancePackConformancePackInputParameterInput

func (OrganizationConformancePackConformancePackInputParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationConformancePackConformancePackInputParameter)(nil)).Elem()
}

func (i OrganizationConformancePackConformancePackInputParameterArray) ToOrganizationConformancePackConformancePackInputParameterArrayOutput() OrganizationConformancePackConformancePackInputParameterArrayOutput {
	return i.ToOrganizationConformancePackConformancePackInputParameterArrayOutputWithContext(context.Background())
}

func (i OrganizationConformancePackConformancePackInputParameterArray) ToOrganizationConformancePackConformancePackInputParameterArrayOutputWithContext(ctx context.Context) OrganizationConformancePackConformancePackInputParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConformancePackConformancePackInputParameterArrayOutput)
}

// Input parameters in the form of key-value pairs for the conformance pack.
type OrganizationConformancePackConformancePackInputParameterOutput struct{ *pulumi.OutputState }

func (OrganizationConformancePackConformancePackInputParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConformancePackConformancePackInputParameter)(nil)).Elem()
}

func (o OrganizationConformancePackConformancePackInputParameterOutput) ToOrganizationConformancePackConformancePackInputParameterOutput() OrganizationConformancePackConformancePackInputParameterOutput {
	return o
}

func (o OrganizationConformancePackConformancePackInputParameterOutput) ToOrganizationConformancePackConformancePackInputParameterOutputWithContext(ctx context.Context) OrganizationConformancePackConformancePackInputParameterOutput {
	return o
}

// One part of a key-value pair.
func (o OrganizationConformancePackConformancePackInputParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationConformancePackConformancePackInputParameter) string { return v.ParameterName }).(pulumi.StringOutput)
}

// One part of a key-value pair.
func (o OrganizationConformancePackConformancePackInputParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationConformancePackConformancePackInputParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type OrganizationConformancePackConformancePackInputParameterArrayOutput struct{ *pulumi.OutputState }

func (OrganizationConformancePackConformancePackInputParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationConformancePackConformancePackInputParameter)(nil)).Elem()
}

func (o OrganizationConformancePackConformancePackInputParameterArrayOutput) ToOrganizationConformancePackConformancePackInputParameterArrayOutput() OrganizationConformancePackConformancePackInputParameterArrayOutput {
	return o
}

func (o OrganizationConformancePackConformancePackInputParameterArrayOutput) ToOrganizationConformancePackConformancePackInputParameterArrayOutputWithContext(ctx context.Context) OrganizationConformancePackConformancePackInputParameterArrayOutput {
	return o
}

func (o OrganizationConformancePackConformancePackInputParameterArrayOutput) Index(i pulumi.IntInput) OrganizationConformancePackConformancePackInputParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationConformancePackConformancePackInputParameter {
		return vs[0].([]OrganizationConformancePackConformancePackInputParameter)[vs[1].(int)]
	}).(OrganizationConformancePackConformancePackInputParameterOutput)
}

// A key-value pair to associate with a resource.
type StoredQueryTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The TemplateSSMDocumentDetails object contains the name of the SSM document and the version of the SSM document.
type TemplateSsmDocumentDetailsProperties struct {
	// The name or Amazon Resource Name (ARN) of the SSM document to use to create a conformance pack. If you use the document name, AWS Config checks only your account and AWS Region for the SSM document.
	DocumentName *string `pulumi:"documentName"`
	// The version of the SSM document to use to create a conformance pack. By default, AWS Config uses the latest version.
	//
	// > This field is optional.
	DocumentVersion *string `pulumi:"documentVersion"`
}

// TemplateSsmDocumentDetailsPropertiesInput is an input type that accepts TemplateSsmDocumentDetailsPropertiesArgs and TemplateSsmDocumentDetailsPropertiesOutput values.
// You can construct a concrete instance of `TemplateSsmDocumentDetailsPropertiesInput` via:
//
//	TemplateSsmDocumentDetailsPropertiesArgs{...}
type TemplateSsmDocumentDetailsPropertiesInput interface {
	pulumi.Input

	ToTemplateSsmDocumentDetailsPropertiesOutput() TemplateSsmDocumentDetailsPropertiesOutput
	ToTemplateSsmDocumentDetailsPropertiesOutputWithContext(context.Context) TemplateSsmDocumentDetailsPropertiesOutput
}

// The TemplateSSMDocumentDetails object contains the name of the SSM document and the version of the SSM document.
type TemplateSsmDocumentDetailsPropertiesArgs struct {
	// The name or Amazon Resource Name (ARN) of the SSM document to use to create a conformance pack. If you use the document name, AWS Config checks only your account and AWS Region for the SSM document.
	DocumentName pulumi.StringPtrInput `pulumi:"documentName"`
	// The version of the SSM document to use to create a conformance pack. By default, AWS Config uses the latest version.
	//
	// > This field is optional.
	DocumentVersion pulumi.StringPtrInput `pulumi:"documentVersion"`
}

func (TemplateSsmDocumentDetailsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSsmDocumentDetailsProperties)(nil)).Elem()
}

func (i TemplateSsmDocumentDetailsPropertiesArgs) ToTemplateSsmDocumentDetailsPropertiesOutput() TemplateSsmDocumentDetailsPropertiesOutput {
	return i.ToTemplateSsmDocumentDetailsPropertiesOutputWithContext(context.Background())
}

func (i TemplateSsmDocumentDetailsPropertiesArgs) ToTemplateSsmDocumentDetailsPropertiesOutputWithContext(ctx context.Context) TemplateSsmDocumentDetailsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSsmDocumentDetailsPropertiesOutput)
}

func (i TemplateSsmDocumentDetailsPropertiesArgs) ToTemplateSsmDocumentDetailsPropertiesPtrOutput() TemplateSsmDocumentDetailsPropertiesPtrOutput {
	return i.ToTemplateSsmDocumentDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i TemplateSsmDocumentDetailsPropertiesArgs) ToTemplateSsmDocumentDetailsPropertiesPtrOutputWithContext(ctx context.Context) TemplateSsmDocumentDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSsmDocumentDetailsPropertiesOutput).ToTemplateSsmDocumentDetailsPropertiesPtrOutputWithContext(ctx)
}

// TemplateSsmDocumentDetailsPropertiesPtrInput is an input type that accepts TemplateSsmDocumentDetailsPropertiesArgs, TemplateSsmDocumentDetailsPropertiesPtr and TemplateSsmDocumentDetailsPropertiesPtrOutput values.
// You can construct a concrete instance of `TemplateSsmDocumentDetailsPropertiesPtrInput` via:
//
//	        TemplateSsmDocumentDetailsPropertiesArgs{...}
//
//	or:
//
//	        nil
type TemplateSsmDocumentDetailsPropertiesPtrInput interface {
	pulumi.Input

	ToTemplateSsmDocumentDetailsPropertiesPtrOutput() TemplateSsmDocumentDetailsPropertiesPtrOutput
	ToTemplateSsmDocumentDetailsPropertiesPtrOutputWithContext(context.Context) TemplateSsmDocumentDetailsPropertiesPtrOutput
}

type templateSsmDocumentDetailsPropertiesPtrType TemplateSsmDocumentDetailsPropertiesArgs

func TemplateSsmDocumentDetailsPropertiesPtr(v *TemplateSsmDocumentDetailsPropertiesArgs) TemplateSsmDocumentDetailsPropertiesPtrInput {
	return (*templateSsmDocumentDetailsPropertiesPtrType)(v)
}

func (*templateSsmDocumentDetailsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSsmDocumentDetailsProperties)(nil)).Elem()
}

func (i *templateSsmDocumentDetailsPropertiesPtrType) ToTemplateSsmDocumentDetailsPropertiesPtrOutput() TemplateSsmDocumentDetailsPropertiesPtrOutput {
	return i.ToTemplateSsmDocumentDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (i *templateSsmDocumentDetailsPropertiesPtrType) ToTemplateSsmDocumentDetailsPropertiesPtrOutputWithContext(ctx context.Context) TemplateSsmDocumentDetailsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TemplateSsmDocumentDetailsPropertiesPtrOutput)
}

// The TemplateSSMDocumentDetails object contains the name of the SSM document and the version of the SSM document.
type TemplateSsmDocumentDetailsPropertiesOutput struct{ *pulumi.OutputState }

func (TemplateSsmDocumentDetailsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TemplateSsmDocumentDetailsProperties)(nil)).Elem()
}

func (o TemplateSsmDocumentDetailsPropertiesOutput) ToTemplateSsmDocumentDetailsPropertiesOutput() TemplateSsmDocumentDetailsPropertiesOutput {
	return o
}

func (o TemplateSsmDocumentDetailsPropertiesOutput) ToTemplateSsmDocumentDetailsPropertiesOutputWithContext(ctx context.Context) TemplateSsmDocumentDetailsPropertiesOutput {
	return o
}

func (o TemplateSsmDocumentDetailsPropertiesOutput) ToTemplateSsmDocumentDetailsPropertiesPtrOutput() TemplateSsmDocumentDetailsPropertiesPtrOutput {
	return o.ToTemplateSsmDocumentDetailsPropertiesPtrOutputWithContext(context.Background())
}

func (o TemplateSsmDocumentDetailsPropertiesOutput) ToTemplateSsmDocumentDetailsPropertiesPtrOutputWithContext(ctx context.Context) TemplateSsmDocumentDetailsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TemplateSsmDocumentDetailsProperties) *TemplateSsmDocumentDetailsProperties {
		return &v
	}).(TemplateSsmDocumentDetailsPropertiesPtrOutput)
}

// The name or Amazon Resource Name (ARN) of the SSM document to use to create a conformance pack. If you use the document name, AWS Config checks only your account and AWS Region for the SSM document.
func (o TemplateSsmDocumentDetailsPropertiesOutput) DocumentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSsmDocumentDetailsProperties) *string { return v.DocumentName }).(pulumi.StringPtrOutput)
}

// The version of the SSM document to use to create a conformance pack. By default, AWS Config uses the latest version.
//
// > This field is optional.
func (o TemplateSsmDocumentDetailsPropertiesOutput) DocumentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TemplateSsmDocumentDetailsProperties) *string { return v.DocumentVersion }).(pulumi.StringPtrOutput)
}

type TemplateSsmDocumentDetailsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (TemplateSsmDocumentDetailsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TemplateSsmDocumentDetailsProperties)(nil)).Elem()
}

func (o TemplateSsmDocumentDetailsPropertiesPtrOutput) ToTemplateSsmDocumentDetailsPropertiesPtrOutput() TemplateSsmDocumentDetailsPropertiesPtrOutput {
	return o
}

func (o TemplateSsmDocumentDetailsPropertiesPtrOutput) ToTemplateSsmDocumentDetailsPropertiesPtrOutputWithContext(ctx context.Context) TemplateSsmDocumentDetailsPropertiesPtrOutput {
	return o
}

func (o TemplateSsmDocumentDetailsPropertiesPtrOutput) Elem() TemplateSsmDocumentDetailsPropertiesOutput {
	return o.ApplyT(func(v *TemplateSsmDocumentDetailsProperties) TemplateSsmDocumentDetailsProperties {
		if v != nil {
			return *v
		}
		var ret TemplateSsmDocumentDetailsProperties
		return ret
	}).(TemplateSsmDocumentDetailsPropertiesOutput)
}

// The name or Amazon Resource Name (ARN) of the SSM document to use to create a conformance pack. If you use the document name, AWS Config checks only your account and AWS Region for the SSM document.
func (o TemplateSsmDocumentDetailsPropertiesPtrOutput) DocumentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSsmDocumentDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.DocumentName
	}).(pulumi.StringPtrOutput)
}

// The version of the SSM document to use to create a conformance pack. By default, AWS Config uses the latest version.
//
// > This field is optional.
func (o TemplateSsmDocumentDetailsPropertiesPtrOutput) DocumentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TemplateSsmDocumentDetailsProperties) *string {
		if v == nil {
			return nil
		}
		return v.DocumentVersion
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CompliancePropertiesInput)(nil)).Elem(), CompliancePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CompliancePropertiesPtrInput)(nil)).Elem(), CompliancePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleCustomPolicyDetailsInput)(nil)).Elem(), ConfigRuleCustomPolicyDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleCustomPolicyDetailsPtrInput)(nil)).Elem(), ConfigRuleCustomPolicyDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleEvaluationModeConfigurationInput)(nil)).Elem(), ConfigRuleEvaluationModeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleEvaluationModeConfigurationArrayInput)(nil)).Elem(), ConfigRuleEvaluationModeConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleScopeInput)(nil)).Elem(), ConfigRuleScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleScopePtrInput)(nil)).Elem(), ConfigRuleScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleSourceInput)(nil)).Elem(), ConfigRuleSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleSourceDetailInput)(nil)).Elem(), ConfigRuleSourceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigRuleSourceDetailArrayInput)(nil)).Elem(), ConfigRuleSourceDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationAggregatorAccountAggregationSourceInput)(nil)).Elem(), ConfigurationAggregatorAccountAggregationSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationAggregatorAccountAggregationSourceArrayInput)(nil)).Elem(), ConfigurationAggregatorAccountAggregationSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationAggregatorOrganizationAggregationSourceInput)(nil)).Elem(), ConfigurationAggregatorOrganizationAggregationSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationAggregatorOrganizationAggregationSourcePtrInput)(nil)).Elem(), ConfigurationAggregatorOrganizationAggregationSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConformancePackInputParameterInput)(nil)).Elem(), ConformancePackInputParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConformancePackInputParameterArrayInput)(nil)).Elem(), ConformancePackInputParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConformancePackConformancePackInputParameterInput)(nil)).Elem(), OrganizationConformancePackConformancePackInputParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConformancePackConformancePackInputParameterArrayInput)(nil)).Elem(), OrganizationConformancePackConformancePackInputParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSsmDocumentDetailsPropertiesInput)(nil)).Elem(), TemplateSsmDocumentDetailsPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TemplateSsmDocumentDetailsPropertiesPtrInput)(nil)).Elem(), TemplateSsmDocumentDetailsPropertiesArgs{})
	pulumi.RegisterOutputType(CompliancePropertiesOutput{})
	pulumi.RegisterOutputType(CompliancePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ConfigRuleCustomPolicyDetailsOutput{})
	pulumi.RegisterOutputType(ConfigRuleCustomPolicyDetailsPtrOutput{})
	pulumi.RegisterOutputType(ConfigRuleEvaluationModeConfigurationOutput{})
	pulumi.RegisterOutputType(ConfigRuleEvaluationModeConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ConfigRuleScopeOutput{})
	pulumi.RegisterOutputType(ConfigRuleScopePtrOutput{})
	pulumi.RegisterOutputType(ConfigRuleSourceOutput{})
	pulumi.RegisterOutputType(ConfigRuleSourcePtrOutput{})
	pulumi.RegisterOutputType(ConfigRuleSourceDetailOutput{})
	pulumi.RegisterOutputType(ConfigRuleSourceDetailArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationAggregatorAccountAggregationSourceOutput{})
	pulumi.RegisterOutputType(ConfigurationAggregatorAccountAggregationSourceArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationAggregatorOrganizationAggregationSourceOutput{})
	pulumi.RegisterOutputType(ConfigurationAggregatorOrganizationAggregationSourcePtrOutput{})
	pulumi.RegisterOutputType(ConformancePackInputParameterOutput{})
	pulumi.RegisterOutputType(ConformancePackInputParameterArrayOutput{})
	pulumi.RegisterOutputType(OrganizationConformancePackConformancePackInputParameterOutput{})
	pulumi.RegisterOutputType(OrganizationConformancePackConformancePackInputParameterArrayOutput{})
	pulumi.RegisterOutputType(TemplateSsmDocumentDetailsPropertiesOutput{})
	pulumi.RegisterOutputType(TemplateSsmDocumentDetailsPropertiesPtrOutput{})
}
