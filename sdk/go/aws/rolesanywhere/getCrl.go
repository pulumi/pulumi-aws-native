// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rolesanywhere

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::RolesAnywhere::CRL Resource Type
func LookupCrl(ctx *pulumi.Context, args *LookupCrlArgs, opts ...pulumi.InvokeOption) (*LookupCrlResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCrlResult
	err := ctx.Invoke("aws-native:rolesanywhere:getCrl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCrlArgs struct {
	// The unique primary identifier of the Crl
	CrlId string `pulumi:"crlId"`
}

type LookupCrlResult struct {
	// The x509 v3 specified certificate revocation list (CRL).
	CrlData *string `pulumi:"crlData"`
	// The unique primary identifier of the Crl
	CrlId *string `pulumi:"crlId"`
	// Specifies whether the certificate revocation list (CRL) is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The name of the certificate revocation list (CRL).
	Name *string `pulumi:"name"`
	// A list of tags to attach to the certificate revocation list (CRL).
	Tags []aws.Tag `pulumi:"tags"`
	// The ARN of the TrustAnchor the certificate revocation list (CRL) will provide revocation for.
	TrustAnchorArn *string `pulumi:"trustAnchorArn"`
}

func LookupCrlOutput(ctx *pulumi.Context, args LookupCrlOutputArgs, opts ...pulumi.InvokeOption) LookupCrlResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCrlResultOutput, error) {
			args := v.(LookupCrlArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupCrlResult
			secret, err := ctx.InvokePackageRaw("aws-native:rolesanywhere:getCrl", args, &rv, "", opts...)
			if err != nil {
				return LookupCrlResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupCrlResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupCrlResultOutput), nil
			}
			return output, nil
		}).(LookupCrlResultOutput)
}

type LookupCrlOutputArgs struct {
	// The unique primary identifier of the Crl
	CrlId pulumi.StringInput `pulumi:"crlId"`
}

func (LookupCrlOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCrlArgs)(nil)).Elem()
}

type LookupCrlResultOutput struct{ *pulumi.OutputState }

func (LookupCrlResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCrlResult)(nil)).Elem()
}

func (o LookupCrlResultOutput) ToLookupCrlResultOutput() LookupCrlResultOutput {
	return o
}

func (o LookupCrlResultOutput) ToLookupCrlResultOutputWithContext(ctx context.Context) LookupCrlResultOutput {
	return o
}

// The x509 v3 specified certificate revocation list (CRL).
func (o LookupCrlResultOutput) CrlData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCrlResult) *string { return v.CrlData }).(pulumi.StringPtrOutput)
}

// The unique primary identifier of the Crl
func (o LookupCrlResultOutput) CrlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCrlResult) *string { return v.CrlId }).(pulumi.StringPtrOutput)
}

// Specifies whether the certificate revocation list (CRL) is enabled.
func (o LookupCrlResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupCrlResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The name of the certificate revocation list (CRL).
func (o LookupCrlResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCrlResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A list of tags to attach to the certificate revocation list (CRL).
func (o LookupCrlResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupCrlResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The ARN of the TrustAnchor the certificate revocation list (CRL) will provide revocation for.
func (o LookupCrlResultOutput) TrustAnchorArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCrlResult) *string { return v.TrustAnchorArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCrlResultOutput{})
}
