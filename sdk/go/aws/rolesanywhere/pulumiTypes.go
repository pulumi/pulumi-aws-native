// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rolesanywhere

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CrlTag struct {
	// The tag key.
	Key string `pulumi:"key"`
	// The tag value.
	Value string `pulumi:"value"`
}

type ProfileAttributeMapping struct {
	// Fields (x509Subject, x509Issuer and x509SAN) within X.509 certificates.
	CertificateField ProfileCertificateField `pulumi:"certificateField"`
	// A list of mapping entries for every supported specifier or sub-field.
	MappingRules []ProfileMappingRule `pulumi:"mappingRules"`
}

// ProfileAttributeMappingInput is an input type that accepts ProfileAttributeMappingArgs and ProfileAttributeMappingOutput values.
// You can construct a concrete instance of `ProfileAttributeMappingInput` via:
//
//	ProfileAttributeMappingArgs{...}
type ProfileAttributeMappingInput interface {
	pulumi.Input

	ToProfileAttributeMappingOutput() ProfileAttributeMappingOutput
	ToProfileAttributeMappingOutputWithContext(context.Context) ProfileAttributeMappingOutput
}

type ProfileAttributeMappingArgs struct {
	// Fields (x509Subject, x509Issuer and x509SAN) within X.509 certificates.
	CertificateField ProfileCertificateFieldInput `pulumi:"certificateField"`
	// A list of mapping entries for every supported specifier or sub-field.
	MappingRules ProfileMappingRuleArrayInput `pulumi:"mappingRules"`
}

func (ProfileAttributeMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileAttributeMapping)(nil)).Elem()
}

func (i ProfileAttributeMappingArgs) ToProfileAttributeMappingOutput() ProfileAttributeMappingOutput {
	return i.ToProfileAttributeMappingOutputWithContext(context.Background())
}

func (i ProfileAttributeMappingArgs) ToProfileAttributeMappingOutputWithContext(ctx context.Context) ProfileAttributeMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAttributeMappingOutput)
}

// ProfileAttributeMappingArrayInput is an input type that accepts ProfileAttributeMappingArray and ProfileAttributeMappingArrayOutput values.
// You can construct a concrete instance of `ProfileAttributeMappingArrayInput` via:
//
//	ProfileAttributeMappingArray{ ProfileAttributeMappingArgs{...} }
type ProfileAttributeMappingArrayInput interface {
	pulumi.Input

	ToProfileAttributeMappingArrayOutput() ProfileAttributeMappingArrayOutput
	ToProfileAttributeMappingArrayOutputWithContext(context.Context) ProfileAttributeMappingArrayOutput
}

type ProfileAttributeMappingArray []ProfileAttributeMappingInput

func (ProfileAttributeMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileAttributeMapping)(nil)).Elem()
}

func (i ProfileAttributeMappingArray) ToProfileAttributeMappingArrayOutput() ProfileAttributeMappingArrayOutput {
	return i.ToProfileAttributeMappingArrayOutputWithContext(context.Background())
}

func (i ProfileAttributeMappingArray) ToProfileAttributeMappingArrayOutputWithContext(ctx context.Context) ProfileAttributeMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAttributeMappingArrayOutput)
}

type ProfileAttributeMappingOutput struct{ *pulumi.OutputState }

func (ProfileAttributeMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileAttributeMapping)(nil)).Elem()
}

func (o ProfileAttributeMappingOutput) ToProfileAttributeMappingOutput() ProfileAttributeMappingOutput {
	return o
}

func (o ProfileAttributeMappingOutput) ToProfileAttributeMappingOutputWithContext(ctx context.Context) ProfileAttributeMappingOutput {
	return o
}

// Fields (x509Subject, x509Issuer and x509SAN) within X.509 certificates.
func (o ProfileAttributeMappingOutput) CertificateField() ProfileCertificateFieldOutput {
	return o.ApplyT(func(v ProfileAttributeMapping) ProfileCertificateField { return v.CertificateField }).(ProfileCertificateFieldOutput)
}

// A list of mapping entries for every supported specifier or sub-field.
func (o ProfileAttributeMappingOutput) MappingRules() ProfileMappingRuleArrayOutput {
	return o.ApplyT(func(v ProfileAttributeMapping) []ProfileMappingRule { return v.MappingRules }).(ProfileMappingRuleArrayOutput)
}

type ProfileAttributeMappingArrayOutput struct{ *pulumi.OutputState }

func (ProfileAttributeMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileAttributeMapping)(nil)).Elem()
}

func (o ProfileAttributeMappingArrayOutput) ToProfileAttributeMappingArrayOutput() ProfileAttributeMappingArrayOutput {
	return o
}

func (o ProfileAttributeMappingArrayOutput) ToProfileAttributeMappingArrayOutputWithContext(ctx context.Context) ProfileAttributeMappingArrayOutput {
	return o
}

func (o ProfileAttributeMappingArrayOutput) Index(i pulumi.IntInput) ProfileAttributeMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileAttributeMapping {
		return vs[0].([]ProfileAttributeMapping)[vs[1].(int)]
	}).(ProfileAttributeMappingOutput)
}

type ProfileMappingRule struct {
	// Specifier within a certificate field, such as CN, OU, or UID from the Subject field.
	Specifier string `pulumi:"specifier"`
}

// ProfileMappingRuleInput is an input type that accepts ProfileMappingRuleArgs and ProfileMappingRuleOutput values.
// You can construct a concrete instance of `ProfileMappingRuleInput` via:
//
//	ProfileMappingRuleArgs{...}
type ProfileMappingRuleInput interface {
	pulumi.Input

	ToProfileMappingRuleOutput() ProfileMappingRuleOutput
	ToProfileMappingRuleOutputWithContext(context.Context) ProfileMappingRuleOutput
}

type ProfileMappingRuleArgs struct {
	// Specifier within a certificate field, such as CN, OU, or UID from the Subject field.
	Specifier pulumi.StringInput `pulumi:"specifier"`
}

func (ProfileMappingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileMappingRule)(nil)).Elem()
}

func (i ProfileMappingRuleArgs) ToProfileMappingRuleOutput() ProfileMappingRuleOutput {
	return i.ToProfileMappingRuleOutputWithContext(context.Background())
}

func (i ProfileMappingRuleArgs) ToProfileMappingRuleOutputWithContext(ctx context.Context) ProfileMappingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMappingRuleOutput)
}

// ProfileMappingRuleArrayInput is an input type that accepts ProfileMappingRuleArray and ProfileMappingRuleArrayOutput values.
// You can construct a concrete instance of `ProfileMappingRuleArrayInput` via:
//
//	ProfileMappingRuleArray{ ProfileMappingRuleArgs{...} }
type ProfileMappingRuleArrayInput interface {
	pulumi.Input

	ToProfileMappingRuleArrayOutput() ProfileMappingRuleArrayOutput
	ToProfileMappingRuleArrayOutputWithContext(context.Context) ProfileMappingRuleArrayOutput
}

type ProfileMappingRuleArray []ProfileMappingRuleInput

func (ProfileMappingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileMappingRule)(nil)).Elem()
}

func (i ProfileMappingRuleArray) ToProfileMappingRuleArrayOutput() ProfileMappingRuleArrayOutput {
	return i.ToProfileMappingRuleArrayOutputWithContext(context.Background())
}

func (i ProfileMappingRuleArray) ToProfileMappingRuleArrayOutputWithContext(ctx context.Context) ProfileMappingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMappingRuleArrayOutput)
}

type ProfileMappingRuleOutput struct{ *pulumi.OutputState }

func (ProfileMappingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileMappingRule)(nil)).Elem()
}

func (o ProfileMappingRuleOutput) ToProfileMappingRuleOutput() ProfileMappingRuleOutput {
	return o
}

func (o ProfileMappingRuleOutput) ToProfileMappingRuleOutputWithContext(ctx context.Context) ProfileMappingRuleOutput {
	return o
}

// Specifier within a certificate field, such as CN, OU, or UID from the Subject field.
func (o ProfileMappingRuleOutput) Specifier() pulumi.StringOutput {
	return o.ApplyT(func(v ProfileMappingRule) string { return v.Specifier }).(pulumi.StringOutput)
}

type ProfileMappingRuleArrayOutput struct{ *pulumi.OutputState }

func (ProfileMappingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProfileMappingRule)(nil)).Elem()
}

func (o ProfileMappingRuleArrayOutput) ToProfileMappingRuleArrayOutput() ProfileMappingRuleArrayOutput {
	return o
}

func (o ProfileMappingRuleArrayOutput) ToProfileMappingRuleArrayOutputWithContext(ctx context.Context) ProfileMappingRuleArrayOutput {
	return o
}

func (o ProfileMappingRuleArrayOutput) Index(i pulumi.IntInput) ProfileMappingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProfileMappingRule {
		return vs[0].([]ProfileMappingRule)[vs[1].(int)]
	}).(ProfileMappingRuleOutput)
}

type ProfileTag struct {
	// The tag key.
	Key string `pulumi:"key"`
	// The tag value.
	Value string `pulumi:"value"`
}

type TrustAnchorNotificationSetting struct {
	// The specified channel of notification. IAM Roles Anywhere uses CloudWatch metrics, EventBridge, and AWS Health Dashboard to notify for an event.
	//
	// > In the absence of a specific channel, IAM Roles Anywhere applies this setting to 'ALL' channels.
	Channel *TrustAnchorNotificationChannel `pulumi:"channel"`
	// Indicates whether the notification setting is enabled.
	Enabled bool `pulumi:"enabled"`
	// The event to which this notification setting is applied.
	Event TrustAnchorNotificationEvent `pulumi:"event"`
	// The number of days before a notification event. This value is required for a notification setting that is enabled.
	Threshold *float64 `pulumi:"threshold"`
}

// TrustAnchorNotificationSettingInput is an input type that accepts TrustAnchorNotificationSettingArgs and TrustAnchorNotificationSettingOutput values.
// You can construct a concrete instance of `TrustAnchorNotificationSettingInput` via:
//
//	TrustAnchorNotificationSettingArgs{...}
type TrustAnchorNotificationSettingInput interface {
	pulumi.Input

	ToTrustAnchorNotificationSettingOutput() TrustAnchorNotificationSettingOutput
	ToTrustAnchorNotificationSettingOutputWithContext(context.Context) TrustAnchorNotificationSettingOutput
}

type TrustAnchorNotificationSettingArgs struct {
	// The specified channel of notification. IAM Roles Anywhere uses CloudWatch metrics, EventBridge, and AWS Health Dashboard to notify for an event.
	//
	// > In the absence of a specific channel, IAM Roles Anywhere applies this setting to 'ALL' channels.
	Channel TrustAnchorNotificationChannelPtrInput `pulumi:"channel"`
	// Indicates whether the notification setting is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The event to which this notification setting is applied.
	Event TrustAnchorNotificationEventInput `pulumi:"event"`
	// The number of days before a notification event. This value is required for a notification setting that is enabled.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
}

func (TrustAnchorNotificationSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustAnchorNotificationSetting)(nil)).Elem()
}

func (i TrustAnchorNotificationSettingArgs) ToTrustAnchorNotificationSettingOutput() TrustAnchorNotificationSettingOutput {
	return i.ToTrustAnchorNotificationSettingOutputWithContext(context.Background())
}

func (i TrustAnchorNotificationSettingArgs) ToTrustAnchorNotificationSettingOutputWithContext(ctx context.Context) TrustAnchorNotificationSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustAnchorNotificationSettingOutput)
}

// TrustAnchorNotificationSettingArrayInput is an input type that accepts TrustAnchorNotificationSettingArray and TrustAnchorNotificationSettingArrayOutput values.
// You can construct a concrete instance of `TrustAnchorNotificationSettingArrayInput` via:
//
//	TrustAnchorNotificationSettingArray{ TrustAnchorNotificationSettingArgs{...} }
type TrustAnchorNotificationSettingArrayInput interface {
	pulumi.Input

	ToTrustAnchorNotificationSettingArrayOutput() TrustAnchorNotificationSettingArrayOutput
	ToTrustAnchorNotificationSettingArrayOutputWithContext(context.Context) TrustAnchorNotificationSettingArrayOutput
}

type TrustAnchorNotificationSettingArray []TrustAnchorNotificationSettingInput

func (TrustAnchorNotificationSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrustAnchorNotificationSetting)(nil)).Elem()
}

func (i TrustAnchorNotificationSettingArray) ToTrustAnchorNotificationSettingArrayOutput() TrustAnchorNotificationSettingArrayOutput {
	return i.ToTrustAnchorNotificationSettingArrayOutputWithContext(context.Background())
}

func (i TrustAnchorNotificationSettingArray) ToTrustAnchorNotificationSettingArrayOutputWithContext(ctx context.Context) TrustAnchorNotificationSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustAnchorNotificationSettingArrayOutput)
}

type TrustAnchorNotificationSettingOutput struct{ *pulumi.OutputState }

func (TrustAnchorNotificationSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustAnchorNotificationSetting)(nil)).Elem()
}

func (o TrustAnchorNotificationSettingOutput) ToTrustAnchorNotificationSettingOutput() TrustAnchorNotificationSettingOutput {
	return o
}

func (o TrustAnchorNotificationSettingOutput) ToTrustAnchorNotificationSettingOutputWithContext(ctx context.Context) TrustAnchorNotificationSettingOutput {
	return o
}

// The specified channel of notification. IAM Roles Anywhere uses CloudWatch metrics, EventBridge, and AWS Health Dashboard to notify for an event.
//
// > In the absence of a specific channel, IAM Roles Anywhere applies this setting to 'ALL' channels.
func (o TrustAnchorNotificationSettingOutput) Channel() TrustAnchorNotificationChannelPtrOutput {
	return o.ApplyT(func(v TrustAnchorNotificationSetting) *TrustAnchorNotificationChannel { return v.Channel }).(TrustAnchorNotificationChannelPtrOutput)
}

// Indicates whether the notification setting is enabled.
func (o TrustAnchorNotificationSettingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TrustAnchorNotificationSetting) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The event to which this notification setting is applied.
func (o TrustAnchorNotificationSettingOutput) Event() TrustAnchorNotificationEventOutput {
	return o.ApplyT(func(v TrustAnchorNotificationSetting) TrustAnchorNotificationEvent { return v.Event }).(TrustAnchorNotificationEventOutput)
}

// The number of days before a notification event. This value is required for a notification setting that is enabled.
func (o TrustAnchorNotificationSettingOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TrustAnchorNotificationSetting) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

type TrustAnchorNotificationSettingArrayOutput struct{ *pulumi.OutputState }

func (TrustAnchorNotificationSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TrustAnchorNotificationSetting)(nil)).Elem()
}

func (o TrustAnchorNotificationSettingArrayOutput) ToTrustAnchorNotificationSettingArrayOutput() TrustAnchorNotificationSettingArrayOutput {
	return o
}

func (o TrustAnchorNotificationSettingArrayOutput) ToTrustAnchorNotificationSettingArrayOutputWithContext(ctx context.Context) TrustAnchorNotificationSettingArrayOutput {
	return o
}

func (o TrustAnchorNotificationSettingArrayOutput) Index(i pulumi.IntInput) TrustAnchorNotificationSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TrustAnchorNotificationSetting {
		return vs[0].([]TrustAnchorNotificationSetting)[vs[1].(int)]
	}).(TrustAnchorNotificationSettingOutput)
}

type TrustAnchorSource struct {
	// A union object representing the data field of the TrustAnchor depending on its type
	SourceData interface{} `pulumi:"sourceData"`
	// The type of the TrustAnchor.
	SourceType TrustAnchorType `pulumi:"sourceType"`
}

// TrustAnchorSourceInput is an input type that accepts TrustAnchorSourceArgs and TrustAnchorSourceOutput values.
// You can construct a concrete instance of `TrustAnchorSourceInput` via:
//
//	TrustAnchorSourceArgs{...}
type TrustAnchorSourceInput interface {
	pulumi.Input

	ToTrustAnchorSourceOutput() TrustAnchorSourceOutput
	ToTrustAnchorSourceOutputWithContext(context.Context) TrustAnchorSourceOutput
}

type TrustAnchorSourceArgs struct {
	// A union object representing the data field of the TrustAnchor depending on its type
	SourceData pulumi.Input `pulumi:"sourceData"`
	// The type of the TrustAnchor.
	SourceType TrustAnchorTypeInput `pulumi:"sourceType"`
}

func (TrustAnchorSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustAnchorSource)(nil)).Elem()
}

func (i TrustAnchorSourceArgs) ToTrustAnchorSourceOutput() TrustAnchorSourceOutput {
	return i.ToTrustAnchorSourceOutputWithContext(context.Background())
}

func (i TrustAnchorSourceArgs) ToTrustAnchorSourceOutputWithContext(ctx context.Context) TrustAnchorSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustAnchorSourceOutput)
}

type TrustAnchorSourceOutput struct{ *pulumi.OutputState }

func (TrustAnchorSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustAnchorSource)(nil)).Elem()
}

func (o TrustAnchorSourceOutput) ToTrustAnchorSourceOutput() TrustAnchorSourceOutput {
	return o
}

func (o TrustAnchorSourceOutput) ToTrustAnchorSourceOutputWithContext(ctx context.Context) TrustAnchorSourceOutput {
	return o
}

// A union object representing the data field of the TrustAnchor depending on its type
func (o TrustAnchorSourceOutput) SourceData() pulumi.AnyOutput {
	return o.ApplyT(func(v TrustAnchorSource) interface{} { return v.SourceData }).(pulumi.AnyOutput)
}

// The type of the TrustAnchor.
func (o TrustAnchorSourceOutput) SourceType() TrustAnchorTypeOutput {
	return o.ApplyT(func(v TrustAnchorSource) TrustAnchorType { return v.SourceType }).(TrustAnchorTypeOutput)
}

type TrustAnchorSourcePtrOutput struct{ *pulumi.OutputState }

func (TrustAnchorSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustAnchorSource)(nil)).Elem()
}

func (o TrustAnchorSourcePtrOutput) ToTrustAnchorSourcePtrOutput() TrustAnchorSourcePtrOutput {
	return o
}

func (o TrustAnchorSourcePtrOutput) ToTrustAnchorSourcePtrOutputWithContext(ctx context.Context) TrustAnchorSourcePtrOutput {
	return o
}

func (o TrustAnchorSourcePtrOutput) Elem() TrustAnchorSourceOutput {
	return o.ApplyT(func(v *TrustAnchorSource) TrustAnchorSource {
		if v != nil {
			return *v
		}
		var ret TrustAnchorSource
		return ret
	}).(TrustAnchorSourceOutput)
}

// A union object representing the data field of the TrustAnchor depending on its type
func (o TrustAnchorSourcePtrOutput) SourceData() pulumi.AnyOutput {
	return o.ApplyT(func(v *TrustAnchorSource) interface{} {
		if v == nil {
			return nil
		}
		return v.SourceData
	}).(pulumi.AnyOutput)
}

// The type of the TrustAnchor.
func (o TrustAnchorSourcePtrOutput) SourceType() TrustAnchorTypePtrOutput {
	return o.ApplyT(func(v *TrustAnchorSource) *TrustAnchorType {
		if v == nil {
			return nil
		}
		return &v.SourceType
	}).(TrustAnchorTypePtrOutput)
}

type TrustAnchorSourceData0Properties struct {
	X509CertificateData string `pulumi:"x509CertificateData"`
}

// TrustAnchorSourceData0PropertiesInput is an input type that accepts TrustAnchorSourceData0PropertiesArgs and TrustAnchorSourceData0PropertiesOutput values.
// You can construct a concrete instance of `TrustAnchorSourceData0PropertiesInput` via:
//
//	TrustAnchorSourceData0PropertiesArgs{...}
type TrustAnchorSourceData0PropertiesInput interface {
	pulumi.Input

	ToTrustAnchorSourceData0PropertiesOutput() TrustAnchorSourceData0PropertiesOutput
	ToTrustAnchorSourceData0PropertiesOutputWithContext(context.Context) TrustAnchorSourceData0PropertiesOutput
}

type TrustAnchorSourceData0PropertiesArgs struct {
	X509CertificateData pulumi.StringInput `pulumi:"x509CertificateData"`
}

func (TrustAnchorSourceData0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustAnchorSourceData0Properties)(nil)).Elem()
}

func (i TrustAnchorSourceData0PropertiesArgs) ToTrustAnchorSourceData0PropertiesOutput() TrustAnchorSourceData0PropertiesOutput {
	return i.ToTrustAnchorSourceData0PropertiesOutputWithContext(context.Background())
}

func (i TrustAnchorSourceData0PropertiesArgs) ToTrustAnchorSourceData0PropertiesOutputWithContext(ctx context.Context) TrustAnchorSourceData0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustAnchorSourceData0PropertiesOutput)
}

type TrustAnchorSourceData0PropertiesOutput struct{ *pulumi.OutputState }

func (TrustAnchorSourceData0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustAnchorSourceData0Properties)(nil)).Elem()
}

func (o TrustAnchorSourceData0PropertiesOutput) ToTrustAnchorSourceData0PropertiesOutput() TrustAnchorSourceData0PropertiesOutput {
	return o
}

func (o TrustAnchorSourceData0PropertiesOutput) ToTrustAnchorSourceData0PropertiesOutputWithContext(ctx context.Context) TrustAnchorSourceData0PropertiesOutput {
	return o
}

func (o TrustAnchorSourceData0PropertiesOutput) X509CertificateData() pulumi.StringOutput {
	return o.ApplyT(func(v TrustAnchorSourceData0Properties) string { return v.X509CertificateData }).(pulumi.StringOutput)
}

type TrustAnchorSourceData0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (TrustAnchorSourceData0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustAnchorSourceData0Properties)(nil)).Elem()
}

func (o TrustAnchorSourceData0PropertiesPtrOutput) ToTrustAnchorSourceData0PropertiesPtrOutput() TrustAnchorSourceData0PropertiesPtrOutput {
	return o
}

func (o TrustAnchorSourceData0PropertiesPtrOutput) ToTrustAnchorSourceData0PropertiesPtrOutputWithContext(ctx context.Context) TrustAnchorSourceData0PropertiesPtrOutput {
	return o
}

func (o TrustAnchorSourceData0PropertiesPtrOutput) Elem() TrustAnchorSourceData0PropertiesOutput {
	return o.ApplyT(func(v *TrustAnchorSourceData0Properties) TrustAnchorSourceData0Properties {
		if v != nil {
			return *v
		}
		var ret TrustAnchorSourceData0Properties
		return ret
	}).(TrustAnchorSourceData0PropertiesOutput)
}

func (o TrustAnchorSourceData0PropertiesPtrOutput) X509CertificateData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustAnchorSourceData0Properties) *string {
		if v == nil {
			return nil
		}
		return &v.X509CertificateData
	}).(pulumi.StringPtrOutput)
}

type TrustAnchorSourceData1Properties struct {
	AcmPcaArn string `pulumi:"acmPcaArn"`
}

// TrustAnchorSourceData1PropertiesInput is an input type that accepts TrustAnchorSourceData1PropertiesArgs and TrustAnchorSourceData1PropertiesOutput values.
// You can construct a concrete instance of `TrustAnchorSourceData1PropertiesInput` via:
//
//	TrustAnchorSourceData1PropertiesArgs{...}
type TrustAnchorSourceData1PropertiesInput interface {
	pulumi.Input

	ToTrustAnchorSourceData1PropertiesOutput() TrustAnchorSourceData1PropertiesOutput
	ToTrustAnchorSourceData1PropertiesOutputWithContext(context.Context) TrustAnchorSourceData1PropertiesOutput
}

type TrustAnchorSourceData1PropertiesArgs struct {
	AcmPcaArn pulumi.StringInput `pulumi:"acmPcaArn"`
}

func (TrustAnchorSourceData1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustAnchorSourceData1Properties)(nil)).Elem()
}

func (i TrustAnchorSourceData1PropertiesArgs) ToTrustAnchorSourceData1PropertiesOutput() TrustAnchorSourceData1PropertiesOutput {
	return i.ToTrustAnchorSourceData1PropertiesOutputWithContext(context.Background())
}

func (i TrustAnchorSourceData1PropertiesArgs) ToTrustAnchorSourceData1PropertiesOutputWithContext(ctx context.Context) TrustAnchorSourceData1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TrustAnchorSourceData1PropertiesOutput)
}

type TrustAnchorSourceData1PropertiesOutput struct{ *pulumi.OutputState }

func (TrustAnchorSourceData1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TrustAnchorSourceData1Properties)(nil)).Elem()
}

func (o TrustAnchorSourceData1PropertiesOutput) ToTrustAnchorSourceData1PropertiesOutput() TrustAnchorSourceData1PropertiesOutput {
	return o
}

func (o TrustAnchorSourceData1PropertiesOutput) ToTrustAnchorSourceData1PropertiesOutputWithContext(ctx context.Context) TrustAnchorSourceData1PropertiesOutput {
	return o
}

func (o TrustAnchorSourceData1PropertiesOutput) AcmPcaArn() pulumi.StringOutput {
	return o.ApplyT(func(v TrustAnchorSourceData1Properties) string { return v.AcmPcaArn }).(pulumi.StringOutput)
}

type TrustAnchorSourceData1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (TrustAnchorSourceData1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TrustAnchorSourceData1Properties)(nil)).Elem()
}

func (o TrustAnchorSourceData1PropertiesPtrOutput) ToTrustAnchorSourceData1PropertiesPtrOutput() TrustAnchorSourceData1PropertiesPtrOutput {
	return o
}

func (o TrustAnchorSourceData1PropertiesPtrOutput) ToTrustAnchorSourceData1PropertiesPtrOutputWithContext(ctx context.Context) TrustAnchorSourceData1PropertiesPtrOutput {
	return o
}

func (o TrustAnchorSourceData1PropertiesPtrOutput) Elem() TrustAnchorSourceData1PropertiesOutput {
	return o.ApplyT(func(v *TrustAnchorSourceData1Properties) TrustAnchorSourceData1Properties {
		if v != nil {
			return *v
		}
		var ret TrustAnchorSourceData1Properties
		return ret
	}).(TrustAnchorSourceData1PropertiesOutput)
}

func (o TrustAnchorSourceData1PropertiesPtrOutput) AcmPcaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TrustAnchorSourceData1Properties) *string {
		if v == nil {
			return nil
		}
		return &v.AcmPcaArn
	}).(pulumi.StringPtrOutput)
}

type TrustAnchorTag struct {
	// The tag key.
	Key string `pulumi:"key"`
	// The tag value.
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAttributeMappingInput)(nil)).Elem(), ProfileAttributeMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAttributeMappingArrayInput)(nil)).Elem(), ProfileAttributeMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileMappingRuleInput)(nil)).Elem(), ProfileMappingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileMappingRuleArrayInput)(nil)).Elem(), ProfileMappingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrustAnchorNotificationSettingInput)(nil)).Elem(), TrustAnchorNotificationSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrustAnchorNotificationSettingArrayInput)(nil)).Elem(), TrustAnchorNotificationSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrustAnchorSourceInput)(nil)).Elem(), TrustAnchorSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrustAnchorSourceData0PropertiesInput)(nil)).Elem(), TrustAnchorSourceData0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TrustAnchorSourceData1PropertiesInput)(nil)).Elem(), TrustAnchorSourceData1PropertiesArgs{})
	pulumi.RegisterOutputType(ProfileAttributeMappingOutput{})
	pulumi.RegisterOutputType(ProfileAttributeMappingArrayOutput{})
	pulumi.RegisterOutputType(ProfileMappingRuleOutput{})
	pulumi.RegisterOutputType(ProfileMappingRuleArrayOutput{})
	pulumi.RegisterOutputType(TrustAnchorNotificationSettingOutput{})
	pulumi.RegisterOutputType(TrustAnchorNotificationSettingArrayOutput{})
	pulumi.RegisterOutputType(TrustAnchorSourceOutput{})
	pulumi.RegisterOutputType(TrustAnchorSourcePtrOutput{})
	pulumi.RegisterOutputType(TrustAnchorSourceData0PropertiesOutput{})
	pulumi.RegisterOutputType(TrustAnchorSourceData0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(TrustAnchorSourceData1PropertiesOutput{})
	pulumi.RegisterOutputType(TrustAnchorSourceData1PropertiesPtrOutput{})
}
