// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rolesanywhere

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::RolesAnywhere::Profile Resource Type
type Profile struct {
	pulumi.CustomResourceState

	// The number of seconds vended session credentials will be valid for
	DurationSeconds pulumi.Float64PtrOutput `pulumi:"durationSeconds"`
	// The enabled status of the resource.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// A list of managed policy ARNs. Managed policies identified by this list will be applied to the vended session credentials.
	ManagedPolicyArns pulumi.StringArrayOutput `pulumi:"managedPolicyArns"`
	// The customer specified name of the resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ARN of the profile.
	ProfileArn pulumi.StringOutput `pulumi:"profileArn"`
	// The unique primary identifier of the Profile
	ProfileId pulumi.StringOutput `pulumi:"profileId"`
	// Specifies whether instance properties are required in CreateSession requests with this profile.
	RequireInstanceProperties pulumi.BoolPtrOutput `pulumi:"requireInstanceProperties"`
	// A list of IAM role ARNs that can be assumed when this profile is specified in a CreateSession request.
	RoleArns pulumi.StringArrayOutput `pulumi:"roleArns"`
	// A session policy that will applied to the trust boundary of the vended session credentials.
	SessionPolicy pulumi.StringPtrOutput `pulumi:"sessionPolicy"`
	// A list of Tags.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewProfile registers a new resource with the given unique name, arguments, and options.
func NewProfile(ctx *pulumi.Context,
	name string, args *ProfileArgs, opts ...pulumi.ResourceOption) (*Profile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoleArns == nil {
		return nil, errors.New("invalid value for required argument 'RoleArns'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Profile
	err := ctx.RegisterResource("aws-native:rolesanywhere:Profile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfile gets an existing Profile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfileState, opts ...pulumi.ResourceOption) (*Profile, error) {
	var resource Profile
	err := ctx.ReadResource("aws-native:rolesanywhere:Profile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Profile resources.
type profileState struct {
}

type ProfileState struct {
}

func (ProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*profileState)(nil)).Elem()
}

type profileArgs struct {
	// The number of seconds vended session credentials will be valid for
	DurationSeconds *float64 `pulumi:"durationSeconds"`
	// The enabled status of the resource.
	Enabled *bool `pulumi:"enabled"`
	// A list of managed policy ARNs. Managed policies identified by this list will be applied to the vended session credentials.
	ManagedPolicyArns []string `pulumi:"managedPolicyArns"`
	// The customer specified name of the resource.
	Name *string `pulumi:"name"`
	// Specifies whether instance properties are required in CreateSession requests with this profile.
	RequireInstanceProperties *bool `pulumi:"requireInstanceProperties"`
	// A list of IAM role ARNs that can be assumed when this profile is specified in a CreateSession request.
	RoleArns []string `pulumi:"roleArns"`
	// A session policy that will applied to the trust boundary of the vended session credentials.
	SessionPolicy *string `pulumi:"sessionPolicy"`
	// A list of Tags.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a Profile resource.
type ProfileArgs struct {
	// The number of seconds vended session credentials will be valid for
	DurationSeconds pulumi.Float64PtrInput
	// The enabled status of the resource.
	Enabled pulumi.BoolPtrInput
	// A list of managed policy ARNs. Managed policies identified by this list will be applied to the vended session credentials.
	ManagedPolicyArns pulumi.StringArrayInput
	// The customer specified name of the resource.
	Name pulumi.StringPtrInput
	// Specifies whether instance properties are required in CreateSession requests with this profile.
	RequireInstanceProperties pulumi.BoolPtrInput
	// A list of IAM role ARNs that can be assumed when this profile is specified in a CreateSession request.
	RoleArns pulumi.StringArrayInput
	// A session policy that will applied to the trust boundary of the vended session credentials.
	SessionPolicy pulumi.StringPtrInput
	// A list of Tags.
	Tags aws.TagArrayInput
}

func (ProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profileArgs)(nil)).Elem()
}

type ProfileInput interface {
	pulumi.Input

	ToProfileOutput() ProfileOutput
	ToProfileOutputWithContext(ctx context.Context) ProfileOutput
}

func (*Profile) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (i *Profile) ToProfileOutput() ProfileOutput {
	return i.ToProfileOutputWithContext(context.Background())
}

func (i *Profile) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileOutput)
}

type ProfileOutput struct{ *pulumi.OutputState }

func (ProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Profile)(nil)).Elem()
}

func (o ProfileOutput) ToProfileOutput() ProfileOutput {
	return o
}

func (o ProfileOutput) ToProfileOutputWithContext(ctx context.Context) ProfileOutput {
	return o
}

// The number of seconds vended session credentials will be valid for
func (o ProfileOutput) DurationSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.Float64PtrOutput { return v.DurationSeconds }).(pulumi.Float64PtrOutput)
}

// The enabled status of the resource.
func (o ProfileOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A list of managed policy ARNs. Managed policies identified by this list will be applied to the vended session credentials.
func (o ProfileOutput) ManagedPolicyArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringArrayOutput { return v.ManagedPolicyArns }).(pulumi.StringArrayOutput)
}

// The customer specified name of the resource.
func (o ProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ARN of the profile.
func (o ProfileOutput) ProfileArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ProfileArn }).(pulumi.StringOutput)
}

// The unique primary identifier of the Profile
func (o ProfileOutput) ProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringOutput { return v.ProfileId }).(pulumi.StringOutput)
}

// Specifies whether instance properties are required in CreateSession requests with this profile.
func (o ProfileOutput) RequireInstanceProperties() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.BoolPtrOutput { return v.RequireInstanceProperties }).(pulumi.BoolPtrOutput)
}

// A list of IAM role ARNs that can be assumed when this profile is specified in a CreateSession request.
func (o ProfileOutput) RoleArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringArrayOutput { return v.RoleArns }).(pulumi.StringArrayOutput)
}

// A session policy that will applied to the trust boundary of the vended session credentials.
func (o ProfileOutput) SessionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Profile) pulumi.StringPtrOutput { return v.SessionPolicy }).(pulumi.StringPtrOutput)
}

// A list of Tags.
func (o ProfileOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Profile) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileInput)(nil)).Elem(), &Profile{})
	pulumi.RegisterOutputType(ProfileOutput{})
}
