// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rolesanywhere

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::RolesAnywhere::Profile Resource Type
func LookupProfile(ctx *pulumi.Context, args *LookupProfileArgs, opts ...pulumi.InvokeOption) (*LookupProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProfileResult
	err := ctx.Invoke("aws-native:rolesanywhere:getProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProfileArgs struct {
	// The unique primary identifier of the Profile
	ProfileId string `pulumi:"profileId"`
}

type LookupProfileResult struct {
	// Used to determine if a custom role session name will be accepted in a temporary credential request.
	AcceptRoleSessionName *bool `pulumi:"acceptRoleSessionName"`
	// A mapping applied to the authenticating end-entity certificate.
	AttributeMappings []ProfileAttributeMapping `pulumi:"attributeMappings"`
	// The number of seconds vended session credentials will be valid for
	DurationSeconds *float64 `pulumi:"durationSeconds"`
	// The enabled status of the resource.
	Enabled *bool `pulumi:"enabled"`
	// A list of managed policy ARNs. Managed policies identified by this list will be applied to the vended session credentials.
	ManagedPolicyArns []string `pulumi:"managedPolicyArns"`
	// The customer specified name of the resource.
	Name *string `pulumi:"name"`
	// The ARN of the profile.
	ProfileArn *string `pulumi:"profileArn"`
	// The unique primary identifier of the Profile
	ProfileId *string `pulumi:"profileId"`
	// Specifies whether instance properties are required in CreateSession requests with this profile.
	RequireInstanceProperties *bool `pulumi:"requireInstanceProperties"`
	// A list of IAM role ARNs that can be assumed when this profile is specified in a CreateSession request.
	RoleArns []string `pulumi:"roleArns"`
	// A session policy that will applied to the trust boundary of the vended session credentials.
	SessionPolicy *string `pulumi:"sessionPolicy"`
	// A list of Tags.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupProfileOutput(ctx *pulumi.Context, args LookupProfileOutputArgs, opts ...pulumi.InvokeOption) LookupProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProfileResult, error) {
			args := v.(LookupProfileArgs)
			r, err := LookupProfile(ctx, &args, opts...)
			var s LookupProfileResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProfileResultOutput)
}

type LookupProfileOutputArgs struct {
	// The unique primary identifier of the Profile
	ProfileId pulumi.StringInput `pulumi:"profileId"`
}

func (LookupProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProfileArgs)(nil)).Elem()
}

type LookupProfileResultOutput struct{ *pulumi.OutputState }

func (LookupProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProfileResult)(nil)).Elem()
}

func (o LookupProfileResultOutput) ToLookupProfileResultOutput() LookupProfileResultOutput {
	return o
}

func (o LookupProfileResultOutput) ToLookupProfileResultOutputWithContext(ctx context.Context) LookupProfileResultOutput {
	return o
}

// Used to determine if a custom role session name will be accepted in a temporary credential request.
func (o LookupProfileResultOutput) AcceptRoleSessionName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *bool { return v.AcceptRoleSessionName }).(pulumi.BoolPtrOutput)
}

// A mapping applied to the authenticating end-entity certificate.
func (o LookupProfileResultOutput) AttributeMappings() ProfileAttributeMappingArrayOutput {
	return o.ApplyT(func(v LookupProfileResult) []ProfileAttributeMapping { return v.AttributeMappings }).(ProfileAttributeMappingArrayOutput)
}

// The number of seconds vended session credentials will be valid for
func (o LookupProfileResultOutput) DurationSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *float64 { return v.DurationSeconds }).(pulumi.Float64PtrOutput)
}

// The enabled status of the resource.
func (o LookupProfileResultOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A list of managed policy ARNs. Managed policies identified by this list will be applied to the vended session credentials.
func (o LookupProfileResultOutput) ManagedPolicyArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupProfileResult) []string { return v.ManagedPolicyArns }).(pulumi.StringArrayOutput)
}

// The customer specified name of the resource.
func (o LookupProfileResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ARN of the profile.
func (o LookupProfileResultOutput) ProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.ProfileArn }).(pulumi.StringPtrOutput)
}

// The unique primary identifier of the Profile
func (o LookupProfileResultOutput) ProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.ProfileId }).(pulumi.StringPtrOutput)
}

// Specifies whether instance properties are required in CreateSession requests with this profile.
func (o LookupProfileResultOutput) RequireInstanceProperties() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *bool { return v.RequireInstanceProperties }).(pulumi.BoolPtrOutput)
}

// A list of IAM role ARNs that can be assumed when this profile is specified in a CreateSession request.
func (o LookupProfileResultOutput) RoleArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupProfileResult) []string { return v.RoleArns }).(pulumi.StringArrayOutput)
}

// A session policy that will applied to the trust boundary of the vended session credentials.
func (o LookupProfileResultOutput) SessionPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProfileResult) *string { return v.SessionPolicy }).(pulumi.StringPtrOutput)
}

// A list of Tags.
func (o LookupProfileResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupProfileResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProfileResultOutput{})
}
