// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Indicates the role of the member, primary or secondary.
type GlobalReplicationGroupGlobalReplicationGroupMemberRole string

const (
	GlobalReplicationGroupGlobalReplicationGroupMemberRolePrimary   = GlobalReplicationGroupGlobalReplicationGroupMemberRole("PRIMARY")
	GlobalReplicationGroupGlobalReplicationGroupMemberRoleSecondary = GlobalReplicationGroupGlobalReplicationGroupMemberRole("SECONDARY")
)

func (GlobalReplicationGroupGlobalReplicationGroupMemberRole) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupGlobalReplicationGroupMemberRole)(nil)).Elem()
}

func (e GlobalReplicationGroupGlobalReplicationGroupMemberRole) ToGlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput() GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput {
	return pulumi.ToOutput(e).(GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput)
}

func (e GlobalReplicationGroupGlobalReplicationGroupMemberRole) ToGlobalReplicationGroupGlobalReplicationGroupMemberRoleOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput {
	return pulumi.ToOutputWithContext(ctx, e).(GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput)
}

func (e GlobalReplicationGroupGlobalReplicationGroupMemberRole) ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput() GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput {
	return e.ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutputWithContext(context.Background())
}

func (e GlobalReplicationGroupGlobalReplicationGroupMemberRole) ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput {
	return GlobalReplicationGroupGlobalReplicationGroupMemberRole(e).ToGlobalReplicationGroupGlobalReplicationGroupMemberRoleOutputWithContext(ctx).ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutputWithContext(ctx)
}

func (e GlobalReplicationGroupGlobalReplicationGroupMemberRole) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalReplicationGroupGlobalReplicationGroupMemberRole) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e GlobalReplicationGroupGlobalReplicationGroupMemberRole) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e GlobalReplicationGroupGlobalReplicationGroupMemberRole) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupGlobalReplicationGroupMemberRole)(nil)).Elem()
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput) ToGlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput() GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput {
	return o
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput) ToGlobalReplicationGroupGlobalReplicationGroupMemberRoleOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput {
	return o
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput) ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput() GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput {
	return o.ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutputWithContext(context.Background())
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput) ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalReplicationGroupGlobalReplicationGroupMemberRole) *GlobalReplicationGroupGlobalReplicationGroupMemberRole {
		return &v
	}).(GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput)
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalReplicationGroupGlobalReplicationGroupMemberRole) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GlobalReplicationGroupGlobalReplicationGroupMemberRole) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalReplicationGroupGlobalReplicationGroupMemberRole)(nil)).Elem()
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput) ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput() GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput {
	return o
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput) ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput {
	return o
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput) Elem() GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput {
	return o.ApplyT(func(v *GlobalReplicationGroupGlobalReplicationGroupMemberRole) GlobalReplicationGroupGlobalReplicationGroupMemberRole {
		if v != nil {
			return *v
		}
		var ret GlobalReplicationGroupGlobalReplicationGroupMemberRole
		return ret
	}).(GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput)
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GlobalReplicationGroupGlobalReplicationGroupMemberRole) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// GlobalReplicationGroupGlobalReplicationGroupMemberRoleInput is an input type that accepts GlobalReplicationGroupGlobalReplicationGroupMemberRoleArgs and GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupGlobalReplicationGroupMemberRoleInput` via:
//
//          GlobalReplicationGroupGlobalReplicationGroupMemberRoleArgs{...}
type GlobalReplicationGroupGlobalReplicationGroupMemberRoleInput interface {
	pulumi.Input

	ToGlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput() GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput
	ToGlobalReplicationGroupGlobalReplicationGroupMemberRoleOutputWithContext(context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput
}

var globalReplicationGroupGlobalReplicationGroupMemberRolePtrType = reflect.TypeOf((**GlobalReplicationGroupGlobalReplicationGroupMemberRole)(nil)).Elem()

type GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrInput interface {
	pulumi.Input

	ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput() GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput
	ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutputWithContext(context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput
}

type globalReplicationGroupGlobalReplicationGroupMemberRolePtr string

func GlobalReplicationGroupGlobalReplicationGroupMemberRolePtr(v string) GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrInput {
	return (*globalReplicationGroupGlobalReplicationGroupMemberRolePtr)(&v)
}

func (*globalReplicationGroupGlobalReplicationGroupMemberRolePtr) ElementType() reflect.Type {
	return globalReplicationGroupGlobalReplicationGroupMemberRolePtrType
}

func (in *globalReplicationGroupGlobalReplicationGroupMemberRolePtr) ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput() GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput {
	return pulumi.ToOutput(in).(GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput)
}

func (in *globalReplicationGroupGlobalReplicationGroupMemberRolePtr) ToGlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput)
}

// Must be redis.
type UserEngine string

const (
	UserEngineRedis = UserEngine("redis")
)

func (UserEngine) ElementType() reflect.Type {
	return reflect.TypeOf((*UserEngine)(nil)).Elem()
}

func (e UserEngine) ToUserEngineOutput() UserEngineOutput {
	return pulumi.ToOutput(e).(UserEngineOutput)
}

func (e UserEngine) ToUserEngineOutputWithContext(ctx context.Context) UserEngineOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UserEngineOutput)
}

func (e UserEngine) ToUserEnginePtrOutput() UserEnginePtrOutput {
	return e.ToUserEnginePtrOutputWithContext(context.Background())
}

func (e UserEngine) ToUserEnginePtrOutputWithContext(ctx context.Context) UserEnginePtrOutput {
	return UserEngine(e).ToUserEngineOutputWithContext(ctx).ToUserEnginePtrOutputWithContext(ctx)
}

func (e UserEngine) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserEngine) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserEngine) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UserEngine) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UserEngineOutput struct{ *pulumi.OutputState }

func (UserEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserEngine)(nil)).Elem()
}

func (o UserEngineOutput) ToUserEngineOutput() UserEngineOutput {
	return o
}

func (o UserEngineOutput) ToUserEngineOutputWithContext(ctx context.Context) UserEngineOutput {
	return o
}

func (o UserEngineOutput) ToUserEnginePtrOutput() UserEnginePtrOutput {
	return o.ToUserEnginePtrOutputWithContext(context.Background())
}

func (o UserEngineOutput) ToUserEnginePtrOutputWithContext(ctx context.Context) UserEnginePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserEngine) *UserEngine {
		return &v
	}).(UserEnginePtrOutput)
}

func (o UserEngineOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UserEngineOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserEngine) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UserEngineOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserEngineOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserEngine) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UserEnginePtrOutput struct{ *pulumi.OutputState }

func (UserEnginePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserEngine)(nil)).Elem()
}

func (o UserEnginePtrOutput) ToUserEnginePtrOutput() UserEnginePtrOutput {
	return o
}

func (o UserEnginePtrOutput) ToUserEnginePtrOutputWithContext(ctx context.Context) UserEnginePtrOutput {
	return o
}

func (o UserEnginePtrOutput) Elem() UserEngineOutput {
	return o.ApplyT(func(v *UserEngine) UserEngine {
		if v != nil {
			return *v
		}
		var ret UserEngine
		return ret
	}).(UserEngineOutput)
}

func (o UserEnginePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserEnginePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UserEngine) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UserEngineInput is an input type that accepts UserEngineArgs and UserEngineOutput values.
// You can construct a concrete instance of `UserEngineInput` via:
//
//          UserEngineArgs{...}
type UserEngineInput interface {
	pulumi.Input

	ToUserEngineOutput() UserEngineOutput
	ToUserEngineOutputWithContext(context.Context) UserEngineOutput
}

var userEnginePtrType = reflect.TypeOf((**UserEngine)(nil)).Elem()

type UserEnginePtrInput interface {
	pulumi.Input

	ToUserEnginePtrOutput() UserEnginePtrOutput
	ToUserEnginePtrOutputWithContext(context.Context) UserEnginePtrOutput
}

type userEnginePtr string

func UserEnginePtr(v string) UserEnginePtrInput {
	return (*userEnginePtr)(&v)
}

func (*userEnginePtr) ElementType() reflect.Type {
	return userEnginePtrType
}

func (in *userEnginePtr) ToUserEnginePtrOutput() UserEnginePtrOutput {
	return pulumi.ToOutput(in).(UserEnginePtrOutput)
}

func (in *userEnginePtr) ToUserEnginePtrOutputWithContext(ctx context.Context) UserEnginePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UserEnginePtrOutput)
}

// Must be redis.
type UserGroupEngine string

const (
	UserGroupEngineRedis = UserGroupEngine("redis")
)

func (UserGroupEngine) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupEngine)(nil)).Elem()
}

func (e UserGroupEngine) ToUserGroupEngineOutput() UserGroupEngineOutput {
	return pulumi.ToOutput(e).(UserGroupEngineOutput)
}

func (e UserGroupEngine) ToUserGroupEngineOutputWithContext(ctx context.Context) UserGroupEngineOutput {
	return pulumi.ToOutputWithContext(ctx, e).(UserGroupEngineOutput)
}

func (e UserGroupEngine) ToUserGroupEnginePtrOutput() UserGroupEnginePtrOutput {
	return e.ToUserGroupEnginePtrOutputWithContext(context.Background())
}

func (e UserGroupEngine) ToUserGroupEnginePtrOutputWithContext(ctx context.Context) UserGroupEnginePtrOutput {
	return UserGroupEngine(e).ToUserGroupEngineOutputWithContext(ctx).ToUserGroupEnginePtrOutputWithContext(ctx)
}

func (e UserGroupEngine) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserGroupEngine) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e UserGroupEngine) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e UserGroupEngine) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type UserGroupEngineOutput struct{ *pulumi.OutputState }

func (UserGroupEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupEngine)(nil)).Elem()
}

func (o UserGroupEngineOutput) ToUserGroupEngineOutput() UserGroupEngineOutput {
	return o
}

func (o UserGroupEngineOutput) ToUserGroupEngineOutputWithContext(ctx context.Context) UserGroupEngineOutput {
	return o
}

func (o UserGroupEngineOutput) ToUserGroupEnginePtrOutput() UserGroupEnginePtrOutput {
	return o.ToUserGroupEnginePtrOutputWithContext(context.Background())
}

func (o UserGroupEngineOutput) ToUserGroupEnginePtrOutputWithContext(ctx context.Context) UserGroupEnginePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserGroupEngine) *UserGroupEngine {
		return &v
	}).(UserGroupEnginePtrOutput)
}

func (o UserGroupEngineOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o UserGroupEngineOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserGroupEngine) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o UserGroupEngineOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserGroupEngineOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e UserGroupEngine) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type UserGroupEnginePtrOutput struct{ *pulumi.OutputState }

func (UserGroupEnginePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserGroupEngine)(nil)).Elem()
}

func (o UserGroupEnginePtrOutput) ToUserGroupEnginePtrOutput() UserGroupEnginePtrOutput {
	return o
}

func (o UserGroupEnginePtrOutput) ToUserGroupEnginePtrOutputWithContext(ctx context.Context) UserGroupEnginePtrOutput {
	return o
}

func (o UserGroupEnginePtrOutput) Elem() UserGroupEngineOutput {
	return o.ApplyT(func(v *UserGroupEngine) UserGroupEngine {
		if v != nil {
			return *v
		}
		var ret UserGroupEngine
		return ret
	}).(UserGroupEngineOutput)
}

func (o UserGroupEnginePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o UserGroupEnginePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *UserGroupEngine) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// UserGroupEngineInput is an input type that accepts UserGroupEngineArgs and UserGroupEngineOutput values.
// You can construct a concrete instance of `UserGroupEngineInput` via:
//
//          UserGroupEngineArgs{...}
type UserGroupEngineInput interface {
	pulumi.Input

	ToUserGroupEngineOutput() UserGroupEngineOutput
	ToUserGroupEngineOutputWithContext(context.Context) UserGroupEngineOutput
}

var userGroupEnginePtrType = reflect.TypeOf((**UserGroupEngine)(nil)).Elem()

type UserGroupEnginePtrInput interface {
	pulumi.Input

	ToUserGroupEnginePtrOutput() UserGroupEnginePtrOutput
	ToUserGroupEnginePtrOutputWithContext(context.Context) UserGroupEnginePtrOutput
}

type userGroupEnginePtr string

func UserGroupEnginePtr(v string) UserGroupEnginePtrInput {
	return (*userGroupEnginePtr)(&v)
}

func (*userGroupEnginePtr) ElementType() reflect.Type {
	return userGroupEnginePtrType
}

func (in *userGroupEnginePtr) ToUserGroupEnginePtrOutput() UserGroupEnginePtrOutput {
	return pulumi.ToOutput(in).(UserGroupEnginePtrOutput)
}

func (in *userGroupEnginePtr) ToUserGroupEnginePtrOutputWithContext(ctx context.Context) UserGroupEnginePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(UserGroupEnginePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GlobalReplicationGroupGlobalReplicationGroupMemberRoleOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupGlobalReplicationGroupMemberRolePtrOutput{})
	pulumi.RegisterOutputType(UserEngineOutput{})
	pulumi.RegisterOutputType(UserEnginePtrOutput{})
	pulumi.RegisterOutputType(UserGroupEngineOutput{})
	pulumi.RegisterOutputType(UserGroupEnginePtrOutput{})
}
