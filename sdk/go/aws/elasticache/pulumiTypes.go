// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GlobalReplicationGroupGlobalReplicationGroupMember struct {
	// Regionally unique identifier for the member i.e. ReplicationGroupId.
	ReplicationGroupId *string `pulumi:"replicationGroupId"`
	// The AWS region of the Global Datastore member.
	ReplicationGroupRegion *string `pulumi:"replicationGroupRegion"`
	// Indicates the role of the member, primary or secondary.
	Role *string `pulumi:"role"`
}

// GlobalReplicationGroupGlobalReplicationGroupMemberInput is an input type that accepts GlobalReplicationGroupGlobalReplicationGroupMemberArgs and GlobalReplicationGroupGlobalReplicationGroupMemberOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupGlobalReplicationGroupMemberInput` via:
//
//          GlobalReplicationGroupGlobalReplicationGroupMemberArgs{...}
type GlobalReplicationGroupGlobalReplicationGroupMemberInput interface {
	pulumi.Input

	ToGlobalReplicationGroupGlobalReplicationGroupMemberOutput() GlobalReplicationGroupGlobalReplicationGroupMemberOutput
	ToGlobalReplicationGroupGlobalReplicationGroupMemberOutputWithContext(context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberOutput
}

type GlobalReplicationGroupGlobalReplicationGroupMemberArgs struct {
	// Regionally unique identifier for the member i.e. ReplicationGroupId.
	ReplicationGroupId pulumi.StringPtrInput `pulumi:"replicationGroupId"`
	// The AWS region of the Global Datastore member.
	ReplicationGroupRegion pulumi.StringPtrInput `pulumi:"replicationGroupRegion"`
	// Indicates the role of the member, primary or secondary.
	Role pulumi.StringPtrInput `pulumi:"role"`
}

func (GlobalReplicationGroupGlobalReplicationGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupGlobalReplicationGroupMember)(nil)).Elem()
}

func (i GlobalReplicationGroupGlobalReplicationGroupMemberArgs) ToGlobalReplicationGroupGlobalReplicationGroupMemberOutput() GlobalReplicationGroupGlobalReplicationGroupMemberOutput {
	return i.ToGlobalReplicationGroupGlobalReplicationGroupMemberOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupGlobalReplicationGroupMemberArgs) ToGlobalReplicationGroupGlobalReplicationGroupMemberOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupGlobalReplicationGroupMemberOutput)
}

// GlobalReplicationGroupGlobalReplicationGroupMemberArrayInput is an input type that accepts GlobalReplicationGroupGlobalReplicationGroupMemberArray and GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupGlobalReplicationGroupMemberArrayInput` via:
//
//          GlobalReplicationGroupGlobalReplicationGroupMemberArray{ GlobalReplicationGroupGlobalReplicationGroupMemberArgs{...} }
type GlobalReplicationGroupGlobalReplicationGroupMemberArrayInput interface {
	pulumi.Input

	ToGlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput() GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput
	ToGlobalReplicationGroupGlobalReplicationGroupMemberArrayOutputWithContext(context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput
}

type GlobalReplicationGroupGlobalReplicationGroupMemberArray []GlobalReplicationGroupGlobalReplicationGroupMemberInput

func (GlobalReplicationGroupGlobalReplicationGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupGlobalReplicationGroupMember)(nil)).Elem()
}

func (i GlobalReplicationGroupGlobalReplicationGroupMemberArray) ToGlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput() GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput {
	return i.ToGlobalReplicationGroupGlobalReplicationGroupMemberArrayOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupGlobalReplicationGroupMemberArray) ToGlobalReplicationGroupGlobalReplicationGroupMemberArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput)
}

type GlobalReplicationGroupGlobalReplicationGroupMemberOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupGlobalReplicationGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupGlobalReplicationGroupMember)(nil)).Elem()
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberOutput) ToGlobalReplicationGroupGlobalReplicationGroupMemberOutput() GlobalReplicationGroupGlobalReplicationGroupMemberOutput {
	return o
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberOutput) ToGlobalReplicationGroupGlobalReplicationGroupMemberOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberOutput {
	return o
}

// Regionally unique identifier for the member i.e. ReplicationGroupId.
func (o GlobalReplicationGroupGlobalReplicationGroupMemberOutput) ReplicationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupGlobalReplicationGroupMember) *string { return v.ReplicationGroupId }).(pulumi.StringPtrOutput)
}

// The AWS region of the Global Datastore member.
func (o GlobalReplicationGroupGlobalReplicationGroupMemberOutput) ReplicationGroupRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupGlobalReplicationGroupMember) *string { return v.ReplicationGroupRegion }).(pulumi.StringPtrOutput)
}

// Indicates the role of the member, primary or secondary.
func (o GlobalReplicationGroupGlobalReplicationGroupMemberOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupGlobalReplicationGroupMember) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupGlobalReplicationGroupMember)(nil)).Elem()
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput) ToGlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput() GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput {
	return o
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput) ToGlobalReplicationGroupGlobalReplicationGroupMemberArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput {
	return o
}

func (o GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput) Index(i pulumi.IntInput) GlobalReplicationGroupGlobalReplicationGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalReplicationGroupGlobalReplicationGroupMember {
		return vs[0].([]GlobalReplicationGroupGlobalReplicationGroupMember)[vs[1].(int)]
	}).(GlobalReplicationGroupGlobalReplicationGroupMemberOutput)
}

type GlobalReplicationGroupRegionalConfiguration struct {
	// The replication group id of the Global Datastore member.
	ReplicationGroupId *string `pulumi:"replicationGroupId"`
	// The AWS region of the Global Datastore member.
	ReplicationGroupRegion *string `pulumi:"replicationGroupRegion"`
	// A list of PreferredAvailabilityZones objects that specifies the configuration of a node group in the resharded cluster.
	ReshardingConfigurations []GlobalReplicationGroupReshardingConfiguration `pulumi:"reshardingConfigurations"`
}

// GlobalReplicationGroupRegionalConfigurationInput is an input type that accepts GlobalReplicationGroupRegionalConfigurationArgs and GlobalReplicationGroupRegionalConfigurationOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupRegionalConfigurationInput` via:
//
//          GlobalReplicationGroupRegionalConfigurationArgs{...}
type GlobalReplicationGroupRegionalConfigurationInput interface {
	pulumi.Input

	ToGlobalReplicationGroupRegionalConfigurationOutput() GlobalReplicationGroupRegionalConfigurationOutput
	ToGlobalReplicationGroupRegionalConfigurationOutputWithContext(context.Context) GlobalReplicationGroupRegionalConfigurationOutput
}

type GlobalReplicationGroupRegionalConfigurationArgs struct {
	// The replication group id of the Global Datastore member.
	ReplicationGroupId pulumi.StringPtrInput `pulumi:"replicationGroupId"`
	// The AWS region of the Global Datastore member.
	ReplicationGroupRegion pulumi.StringPtrInput `pulumi:"replicationGroupRegion"`
	// A list of PreferredAvailabilityZones objects that specifies the configuration of a node group in the resharded cluster.
	ReshardingConfigurations GlobalReplicationGroupReshardingConfigurationArrayInput `pulumi:"reshardingConfigurations"`
}

func (GlobalReplicationGroupRegionalConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupRegionalConfiguration)(nil)).Elem()
}

func (i GlobalReplicationGroupRegionalConfigurationArgs) ToGlobalReplicationGroupRegionalConfigurationOutput() GlobalReplicationGroupRegionalConfigurationOutput {
	return i.ToGlobalReplicationGroupRegionalConfigurationOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupRegionalConfigurationArgs) ToGlobalReplicationGroupRegionalConfigurationOutputWithContext(ctx context.Context) GlobalReplicationGroupRegionalConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupRegionalConfigurationOutput)
}

// GlobalReplicationGroupRegionalConfigurationArrayInput is an input type that accepts GlobalReplicationGroupRegionalConfigurationArray and GlobalReplicationGroupRegionalConfigurationArrayOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupRegionalConfigurationArrayInput` via:
//
//          GlobalReplicationGroupRegionalConfigurationArray{ GlobalReplicationGroupRegionalConfigurationArgs{...} }
type GlobalReplicationGroupRegionalConfigurationArrayInput interface {
	pulumi.Input

	ToGlobalReplicationGroupRegionalConfigurationArrayOutput() GlobalReplicationGroupRegionalConfigurationArrayOutput
	ToGlobalReplicationGroupRegionalConfigurationArrayOutputWithContext(context.Context) GlobalReplicationGroupRegionalConfigurationArrayOutput
}

type GlobalReplicationGroupRegionalConfigurationArray []GlobalReplicationGroupRegionalConfigurationInput

func (GlobalReplicationGroupRegionalConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupRegionalConfiguration)(nil)).Elem()
}

func (i GlobalReplicationGroupRegionalConfigurationArray) ToGlobalReplicationGroupRegionalConfigurationArrayOutput() GlobalReplicationGroupRegionalConfigurationArrayOutput {
	return i.ToGlobalReplicationGroupRegionalConfigurationArrayOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupRegionalConfigurationArray) ToGlobalReplicationGroupRegionalConfigurationArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupRegionalConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupRegionalConfigurationArrayOutput)
}

type GlobalReplicationGroupRegionalConfigurationOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupRegionalConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupRegionalConfiguration)(nil)).Elem()
}

func (o GlobalReplicationGroupRegionalConfigurationOutput) ToGlobalReplicationGroupRegionalConfigurationOutput() GlobalReplicationGroupRegionalConfigurationOutput {
	return o
}

func (o GlobalReplicationGroupRegionalConfigurationOutput) ToGlobalReplicationGroupRegionalConfigurationOutputWithContext(ctx context.Context) GlobalReplicationGroupRegionalConfigurationOutput {
	return o
}

// The replication group id of the Global Datastore member.
func (o GlobalReplicationGroupRegionalConfigurationOutput) ReplicationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupRegionalConfiguration) *string { return v.ReplicationGroupId }).(pulumi.StringPtrOutput)
}

// The AWS region of the Global Datastore member.
func (o GlobalReplicationGroupRegionalConfigurationOutput) ReplicationGroupRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupRegionalConfiguration) *string { return v.ReplicationGroupRegion }).(pulumi.StringPtrOutput)
}

// A list of PreferredAvailabilityZones objects that specifies the configuration of a node group in the resharded cluster.
func (o GlobalReplicationGroupRegionalConfigurationOutput) ReshardingConfigurations() GlobalReplicationGroupReshardingConfigurationArrayOutput {
	return o.ApplyT(func(v GlobalReplicationGroupRegionalConfiguration) []GlobalReplicationGroupReshardingConfiguration {
		return v.ReshardingConfigurations
	}).(GlobalReplicationGroupReshardingConfigurationArrayOutput)
}

type GlobalReplicationGroupRegionalConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupRegionalConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupRegionalConfiguration)(nil)).Elem()
}

func (o GlobalReplicationGroupRegionalConfigurationArrayOutput) ToGlobalReplicationGroupRegionalConfigurationArrayOutput() GlobalReplicationGroupRegionalConfigurationArrayOutput {
	return o
}

func (o GlobalReplicationGroupRegionalConfigurationArrayOutput) ToGlobalReplicationGroupRegionalConfigurationArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupRegionalConfigurationArrayOutput {
	return o
}

func (o GlobalReplicationGroupRegionalConfigurationArrayOutput) Index(i pulumi.IntInput) GlobalReplicationGroupRegionalConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalReplicationGroupRegionalConfiguration {
		return vs[0].([]GlobalReplicationGroupRegionalConfiguration)[vs[1].(int)]
	}).(GlobalReplicationGroupRegionalConfigurationOutput)
}

type GlobalReplicationGroupReshardingConfiguration struct {
	// Unique identifier for the Node Group. This is either auto-generated by ElastiCache (4-digit id) or a user supplied id.
	NodeGroupId *string `pulumi:"nodeGroupId"`
	// A list of preferred availability zones for the nodes of new node groups.
	PreferredAvailabilityZones []string `pulumi:"preferredAvailabilityZones"`
}

// GlobalReplicationGroupReshardingConfigurationInput is an input type that accepts GlobalReplicationGroupReshardingConfigurationArgs and GlobalReplicationGroupReshardingConfigurationOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupReshardingConfigurationInput` via:
//
//          GlobalReplicationGroupReshardingConfigurationArgs{...}
type GlobalReplicationGroupReshardingConfigurationInput interface {
	pulumi.Input

	ToGlobalReplicationGroupReshardingConfigurationOutput() GlobalReplicationGroupReshardingConfigurationOutput
	ToGlobalReplicationGroupReshardingConfigurationOutputWithContext(context.Context) GlobalReplicationGroupReshardingConfigurationOutput
}

type GlobalReplicationGroupReshardingConfigurationArgs struct {
	// Unique identifier for the Node Group. This is either auto-generated by ElastiCache (4-digit id) or a user supplied id.
	NodeGroupId pulumi.StringPtrInput `pulumi:"nodeGroupId"`
	// A list of preferred availability zones for the nodes of new node groups.
	PreferredAvailabilityZones pulumi.StringArrayInput `pulumi:"preferredAvailabilityZones"`
}

func (GlobalReplicationGroupReshardingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupReshardingConfiguration)(nil)).Elem()
}

func (i GlobalReplicationGroupReshardingConfigurationArgs) ToGlobalReplicationGroupReshardingConfigurationOutput() GlobalReplicationGroupReshardingConfigurationOutput {
	return i.ToGlobalReplicationGroupReshardingConfigurationOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupReshardingConfigurationArgs) ToGlobalReplicationGroupReshardingConfigurationOutputWithContext(ctx context.Context) GlobalReplicationGroupReshardingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupReshardingConfigurationOutput)
}

// GlobalReplicationGroupReshardingConfigurationArrayInput is an input type that accepts GlobalReplicationGroupReshardingConfigurationArray and GlobalReplicationGroupReshardingConfigurationArrayOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupReshardingConfigurationArrayInput` via:
//
//          GlobalReplicationGroupReshardingConfigurationArray{ GlobalReplicationGroupReshardingConfigurationArgs{...} }
type GlobalReplicationGroupReshardingConfigurationArrayInput interface {
	pulumi.Input

	ToGlobalReplicationGroupReshardingConfigurationArrayOutput() GlobalReplicationGroupReshardingConfigurationArrayOutput
	ToGlobalReplicationGroupReshardingConfigurationArrayOutputWithContext(context.Context) GlobalReplicationGroupReshardingConfigurationArrayOutput
}

type GlobalReplicationGroupReshardingConfigurationArray []GlobalReplicationGroupReshardingConfigurationInput

func (GlobalReplicationGroupReshardingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupReshardingConfiguration)(nil)).Elem()
}

func (i GlobalReplicationGroupReshardingConfigurationArray) ToGlobalReplicationGroupReshardingConfigurationArrayOutput() GlobalReplicationGroupReshardingConfigurationArrayOutput {
	return i.ToGlobalReplicationGroupReshardingConfigurationArrayOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupReshardingConfigurationArray) ToGlobalReplicationGroupReshardingConfigurationArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupReshardingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupReshardingConfigurationArrayOutput)
}

type GlobalReplicationGroupReshardingConfigurationOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupReshardingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupReshardingConfiguration)(nil)).Elem()
}

func (o GlobalReplicationGroupReshardingConfigurationOutput) ToGlobalReplicationGroupReshardingConfigurationOutput() GlobalReplicationGroupReshardingConfigurationOutput {
	return o
}

func (o GlobalReplicationGroupReshardingConfigurationOutput) ToGlobalReplicationGroupReshardingConfigurationOutputWithContext(ctx context.Context) GlobalReplicationGroupReshardingConfigurationOutput {
	return o
}

// Unique identifier for the Node Group. This is either auto-generated by ElastiCache (4-digit id) or a user supplied id.
func (o GlobalReplicationGroupReshardingConfigurationOutput) NodeGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupReshardingConfiguration) *string { return v.NodeGroupId }).(pulumi.StringPtrOutput)
}

// A list of preferred availability zones for the nodes of new node groups.
func (o GlobalReplicationGroupReshardingConfigurationOutput) PreferredAvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GlobalReplicationGroupReshardingConfiguration) []string { return v.PreferredAvailabilityZones }).(pulumi.StringArrayOutput)
}

type GlobalReplicationGroupReshardingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupReshardingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupReshardingConfiguration)(nil)).Elem()
}

func (o GlobalReplicationGroupReshardingConfigurationArrayOutput) ToGlobalReplicationGroupReshardingConfigurationArrayOutput() GlobalReplicationGroupReshardingConfigurationArrayOutput {
	return o
}

func (o GlobalReplicationGroupReshardingConfigurationArrayOutput) ToGlobalReplicationGroupReshardingConfigurationArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupReshardingConfigurationArrayOutput {
	return o
}

func (o GlobalReplicationGroupReshardingConfigurationArrayOutput) Index(i pulumi.IntInput) GlobalReplicationGroupReshardingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalReplicationGroupReshardingConfiguration {
		return vs[0].([]GlobalReplicationGroupReshardingConfiguration)[vs[1].(int)]
	}).(GlobalReplicationGroupReshardingConfigurationOutput)
}

func init() {
	pulumi.RegisterOutputType(GlobalReplicationGroupGlobalReplicationGroupMemberOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupGlobalReplicationGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupRegionalConfigurationOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupRegionalConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupReshardingConfigurationOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupReshardingConfigurationArrayOutput{})
}
