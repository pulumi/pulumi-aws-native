// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type AuthenticationModeProperties struct {
	// Passwords used for this user account. You can create up to two passwords for each user.
	Passwords []string `pulumi:"passwords"`
	// Authentication Type
	Type UserAuthenticationModePropertiesType `pulumi:"type"`
}

// AuthenticationModePropertiesInput is an input type that accepts AuthenticationModePropertiesArgs and AuthenticationModePropertiesOutput values.
// You can construct a concrete instance of `AuthenticationModePropertiesInput` via:
//
//	AuthenticationModePropertiesArgs{...}
type AuthenticationModePropertiesInput interface {
	pulumi.Input

	ToAuthenticationModePropertiesOutput() AuthenticationModePropertiesOutput
	ToAuthenticationModePropertiesOutputWithContext(context.Context) AuthenticationModePropertiesOutput
}

type AuthenticationModePropertiesArgs struct {
	// Passwords used for this user account. You can create up to two passwords for each user.
	Passwords pulumi.StringArrayInput `pulumi:"passwords"`
	// Authentication Type
	Type UserAuthenticationModePropertiesTypeInput `pulumi:"type"`
}

func (AuthenticationModePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationModeProperties)(nil)).Elem()
}

func (i AuthenticationModePropertiesArgs) ToAuthenticationModePropertiesOutput() AuthenticationModePropertiesOutput {
	return i.ToAuthenticationModePropertiesOutputWithContext(context.Background())
}

func (i AuthenticationModePropertiesArgs) ToAuthenticationModePropertiesOutputWithContext(ctx context.Context) AuthenticationModePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationModePropertiesOutput)
}

func (i AuthenticationModePropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[AuthenticationModeProperties] {
	return pulumix.Output[AuthenticationModeProperties]{
		OutputState: i.ToAuthenticationModePropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i AuthenticationModePropertiesArgs) ToAuthenticationModePropertiesPtrOutput() AuthenticationModePropertiesPtrOutput {
	return i.ToAuthenticationModePropertiesPtrOutputWithContext(context.Background())
}

func (i AuthenticationModePropertiesArgs) ToAuthenticationModePropertiesPtrOutputWithContext(ctx context.Context) AuthenticationModePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationModePropertiesOutput).ToAuthenticationModePropertiesPtrOutputWithContext(ctx)
}

// AuthenticationModePropertiesPtrInput is an input type that accepts AuthenticationModePropertiesArgs, AuthenticationModePropertiesPtr and AuthenticationModePropertiesPtrOutput values.
// You can construct a concrete instance of `AuthenticationModePropertiesPtrInput` via:
//
//	        AuthenticationModePropertiesArgs{...}
//
//	or:
//
//	        nil
type AuthenticationModePropertiesPtrInput interface {
	pulumi.Input

	ToAuthenticationModePropertiesPtrOutput() AuthenticationModePropertiesPtrOutput
	ToAuthenticationModePropertiesPtrOutputWithContext(context.Context) AuthenticationModePropertiesPtrOutput
}

type authenticationModePropertiesPtrType AuthenticationModePropertiesArgs

func AuthenticationModePropertiesPtr(v *AuthenticationModePropertiesArgs) AuthenticationModePropertiesPtrInput {
	return (*authenticationModePropertiesPtrType)(v)
}

func (*authenticationModePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationModeProperties)(nil)).Elem()
}

func (i *authenticationModePropertiesPtrType) ToAuthenticationModePropertiesPtrOutput() AuthenticationModePropertiesPtrOutput {
	return i.ToAuthenticationModePropertiesPtrOutputWithContext(context.Background())
}

func (i *authenticationModePropertiesPtrType) ToAuthenticationModePropertiesPtrOutputWithContext(ctx context.Context) AuthenticationModePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthenticationModePropertiesPtrOutput)
}

func (i *authenticationModePropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*AuthenticationModeProperties] {
	return pulumix.Output[*AuthenticationModeProperties]{
		OutputState: i.ToAuthenticationModePropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

type AuthenticationModePropertiesOutput struct{ *pulumi.OutputState }

func (AuthenticationModePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthenticationModeProperties)(nil)).Elem()
}

func (o AuthenticationModePropertiesOutput) ToAuthenticationModePropertiesOutput() AuthenticationModePropertiesOutput {
	return o
}

func (o AuthenticationModePropertiesOutput) ToAuthenticationModePropertiesOutputWithContext(ctx context.Context) AuthenticationModePropertiesOutput {
	return o
}

func (o AuthenticationModePropertiesOutput) ToAuthenticationModePropertiesPtrOutput() AuthenticationModePropertiesPtrOutput {
	return o.ToAuthenticationModePropertiesPtrOutputWithContext(context.Background())
}

func (o AuthenticationModePropertiesOutput) ToAuthenticationModePropertiesPtrOutputWithContext(ctx context.Context) AuthenticationModePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AuthenticationModeProperties) *AuthenticationModeProperties {
		return &v
	}).(AuthenticationModePropertiesPtrOutput)
}

func (o AuthenticationModePropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[AuthenticationModeProperties] {
	return pulumix.Output[AuthenticationModeProperties]{
		OutputState: o.OutputState,
	}
}

// Passwords used for this user account. You can create up to two passwords for each user.
func (o AuthenticationModePropertiesOutput) Passwords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthenticationModeProperties) []string { return v.Passwords }).(pulumi.StringArrayOutput)
}

// Authentication Type
func (o AuthenticationModePropertiesOutput) Type() UserAuthenticationModePropertiesTypeOutput {
	return o.ApplyT(func(v AuthenticationModeProperties) UserAuthenticationModePropertiesType { return v.Type }).(UserAuthenticationModePropertiesTypeOutput)
}

type AuthenticationModePropertiesPtrOutput struct{ *pulumi.OutputState }

func (AuthenticationModePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthenticationModeProperties)(nil)).Elem()
}

func (o AuthenticationModePropertiesPtrOutput) ToAuthenticationModePropertiesPtrOutput() AuthenticationModePropertiesPtrOutput {
	return o
}

func (o AuthenticationModePropertiesPtrOutput) ToAuthenticationModePropertiesPtrOutputWithContext(ctx context.Context) AuthenticationModePropertiesPtrOutput {
	return o
}

func (o AuthenticationModePropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AuthenticationModeProperties] {
	return pulumix.Output[*AuthenticationModeProperties]{
		OutputState: o.OutputState,
	}
}

func (o AuthenticationModePropertiesPtrOutput) Elem() AuthenticationModePropertiesOutput {
	return o.ApplyT(func(v *AuthenticationModeProperties) AuthenticationModeProperties {
		if v != nil {
			return *v
		}
		var ret AuthenticationModeProperties
		return ret
	}).(AuthenticationModePropertiesOutput)
}

// Passwords used for this user account. You can create up to two passwords for each user.
func (o AuthenticationModePropertiesPtrOutput) Passwords() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthenticationModeProperties) []string {
		if v == nil {
			return nil
		}
		return v.Passwords
	}).(pulumi.StringArrayOutput)
}

// Authentication Type
func (o AuthenticationModePropertiesPtrOutput) Type() UserAuthenticationModePropertiesTypePtrOutput {
	return o.ApplyT(func(v *AuthenticationModeProperties) *UserAuthenticationModePropertiesType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(UserAuthenticationModePropertiesTypePtrOutput)
}

type CacheClusterCloudWatchLogsDestinationDetails struct {
	LogGroup string `pulumi:"logGroup"`
}

// CacheClusterCloudWatchLogsDestinationDetailsInput is an input type that accepts CacheClusterCloudWatchLogsDestinationDetailsArgs and CacheClusterCloudWatchLogsDestinationDetailsOutput values.
// You can construct a concrete instance of `CacheClusterCloudWatchLogsDestinationDetailsInput` via:
//
//	CacheClusterCloudWatchLogsDestinationDetailsArgs{...}
type CacheClusterCloudWatchLogsDestinationDetailsInput interface {
	pulumi.Input

	ToCacheClusterCloudWatchLogsDestinationDetailsOutput() CacheClusterCloudWatchLogsDestinationDetailsOutput
	ToCacheClusterCloudWatchLogsDestinationDetailsOutputWithContext(context.Context) CacheClusterCloudWatchLogsDestinationDetailsOutput
}

type CacheClusterCloudWatchLogsDestinationDetailsArgs struct {
	LogGroup pulumi.StringInput `pulumi:"logGroup"`
}

func (CacheClusterCloudWatchLogsDestinationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheClusterCloudWatchLogsDestinationDetails)(nil)).Elem()
}

func (i CacheClusterCloudWatchLogsDestinationDetailsArgs) ToCacheClusterCloudWatchLogsDestinationDetailsOutput() CacheClusterCloudWatchLogsDestinationDetailsOutput {
	return i.ToCacheClusterCloudWatchLogsDestinationDetailsOutputWithContext(context.Background())
}

func (i CacheClusterCloudWatchLogsDestinationDetailsArgs) ToCacheClusterCloudWatchLogsDestinationDetailsOutputWithContext(ctx context.Context) CacheClusterCloudWatchLogsDestinationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheClusterCloudWatchLogsDestinationDetailsOutput)
}

func (i CacheClusterCloudWatchLogsDestinationDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[CacheClusterCloudWatchLogsDestinationDetails] {
	return pulumix.Output[CacheClusterCloudWatchLogsDestinationDetails]{
		OutputState: i.ToCacheClusterCloudWatchLogsDestinationDetailsOutputWithContext(ctx).OutputState,
	}
}

func (i CacheClusterCloudWatchLogsDestinationDetailsArgs) ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutput() CacheClusterCloudWatchLogsDestinationDetailsPtrOutput {
	return i.ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutputWithContext(context.Background())
}

func (i CacheClusterCloudWatchLogsDestinationDetailsArgs) ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutputWithContext(ctx context.Context) CacheClusterCloudWatchLogsDestinationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheClusterCloudWatchLogsDestinationDetailsOutput).ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutputWithContext(ctx)
}

// CacheClusterCloudWatchLogsDestinationDetailsPtrInput is an input type that accepts CacheClusterCloudWatchLogsDestinationDetailsArgs, CacheClusterCloudWatchLogsDestinationDetailsPtr and CacheClusterCloudWatchLogsDestinationDetailsPtrOutput values.
// You can construct a concrete instance of `CacheClusterCloudWatchLogsDestinationDetailsPtrInput` via:
//
//	        CacheClusterCloudWatchLogsDestinationDetailsArgs{...}
//
//	or:
//
//	        nil
type CacheClusterCloudWatchLogsDestinationDetailsPtrInput interface {
	pulumi.Input

	ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutput() CacheClusterCloudWatchLogsDestinationDetailsPtrOutput
	ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutputWithContext(context.Context) CacheClusterCloudWatchLogsDestinationDetailsPtrOutput
}

type cacheClusterCloudWatchLogsDestinationDetailsPtrType CacheClusterCloudWatchLogsDestinationDetailsArgs

func CacheClusterCloudWatchLogsDestinationDetailsPtr(v *CacheClusterCloudWatchLogsDestinationDetailsArgs) CacheClusterCloudWatchLogsDestinationDetailsPtrInput {
	return (*cacheClusterCloudWatchLogsDestinationDetailsPtrType)(v)
}

func (*cacheClusterCloudWatchLogsDestinationDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheClusterCloudWatchLogsDestinationDetails)(nil)).Elem()
}

func (i *cacheClusterCloudWatchLogsDestinationDetailsPtrType) ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutput() CacheClusterCloudWatchLogsDestinationDetailsPtrOutput {
	return i.ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutputWithContext(context.Background())
}

func (i *cacheClusterCloudWatchLogsDestinationDetailsPtrType) ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutputWithContext(ctx context.Context) CacheClusterCloudWatchLogsDestinationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheClusterCloudWatchLogsDestinationDetailsPtrOutput)
}

func (i *cacheClusterCloudWatchLogsDestinationDetailsPtrType) ToOutput(ctx context.Context) pulumix.Output[*CacheClusterCloudWatchLogsDestinationDetails] {
	return pulumix.Output[*CacheClusterCloudWatchLogsDestinationDetails]{
		OutputState: i.ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutputWithContext(ctx).OutputState,
	}
}

type CacheClusterCloudWatchLogsDestinationDetailsOutput struct{ *pulumi.OutputState }

func (CacheClusterCloudWatchLogsDestinationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheClusterCloudWatchLogsDestinationDetails)(nil)).Elem()
}

func (o CacheClusterCloudWatchLogsDestinationDetailsOutput) ToCacheClusterCloudWatchLogsDestinationDetailsOutput() CacheClusterCloudWatchLogsDestinationDetailsOutput {
	return o
}

func (o CacheClusterCloudWatchLogsDestinationDetailsOutput) ToCacheClusterCloudWatchLogsDestinationDetailsOutputWithContext(ctx context.Context) CacheClusterCloudWatchLogsDestinationDetailsOutput {
	return o
}

func (o CacheClusterCloudWatchLogsDestinationDetailsOutput) ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutput() CacheClusterCloudWatchLogsDestinationDetailsPtrOutput {
	return o.ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutputWithContext(context.Background())
}

func (o CacheClusterCloudWatchLogsDestinationDetailsOutput) ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutputWithContext(ctx context.Context) CacheClusterCloudWatchLogsDestinationDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CacheClusterCloudWatchLogsDestinationDetails) *CacheClusterCloudWatchLogsDestinationDetails {
		return &v
	}).(CacheClusterCloudWatchLogsDestinationDetailsPtrOutput)
}

func (o CacheClusterCloudWatchLogsDestinationDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[CacheClusterCloudWatchLogsDestinationDetails] {
	return pulumix.Output[CacheClusterCloudWatchLogsDestinationDetails]{
		OutputState: o.OutputState,
	}
}

func (o CacheClusterCloudWatchLogsDestinationDetailsOutput) LogGroup() pulumi.StringOutput {
	return o.ApplyT(func(v CacheClusterCloudWatchLogsDestinationDetails) string { return v.LogGroup }).(pulumi.StringOutput)
}

type CacheClusterCloudWatchLogsDestinationDetailsPtrOutput struct{ *pulumi.OutputState }

func (CacheClusterCloudWatchLogsDestinationDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheClusterCloudWatchLogsDestinationDetails)(nil)).Elem()
}

func (o CacheClusterCloudWatchLogsDestinationDetailsPtrOutput) ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutput() CacheClusterCloudWatchLogsDestinationDetailsPtrOutput {
	return o
}

func (o CacheClusterCloudWatchLogsDestinationDetailsPtrOutput) ToCacheClusterCloudWatchLogsDestinationDetailsPtrOutputWithContext(ctx context.Context) CacheClusterCloudWatchLogsDestinationDetailsPtrOutput {
	return o
}

func (o CacheClusterCloudWatchLogsDestinationDetailsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CacheClusterCloudWatchLogsDestinationDetails] {
	return pulumix.Output[*CacheClusterCloudWatchLogsDestinationDetails]{
		OutputState: o.OutputState,
	}
}

func (o CacheClusterCloudWatchLogsDestinationDetailsPtrOutput) Elem() CacheClusterCloudWatchLogsDestinationDetailsOutput {
	return o.ApplyT(func(v *CacheClusterCloudWatchLogsDestinationDetails) CacheClusterCloudWatchLogsDestinationDetails {
		if v != nil {
			return *v
		}
		var ret CacheClusterCloudWatchLogsDestinationDetails
		return ret
	}).(CacheClusterCloudWatchLogsDestinationDetailsOutput)
}

func (o CacheClusterCloudWatchLogsDestinationDetailsPtrOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheClusterCloudWatchLogsDestinationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LogGroup
	}).(pulumi.StringPtrOutput)
}

type CacheClusterDestinationDetails struct {
	CloudWatchLogsDetails  *CacheClusterCloudWatchLogsDestinationDetails  `pulumi:"cloudWatchLogsDetails"`
	KinesisFirehoseDetails *CacheClusterKinesisFirehoseDestinationDetails `pulumi:"kinesisFirehoseDetails"`
}

// CacheClusterDestinationDetailsInput is an input type that accepts CacheClusterDestinationDetailsArgs and CacheClusterDestinationDetailsOutput values.
// You can construct a concrete instance of `CacheClusterDestinationDetailsInput` via:
//
//	CacheClusterDestinationDetailsArgs{...}
type CacheClusterDestinationDetailsInput interface {
	pulumi.Input

	ToCacheClusterDestinationDetailsOutput() CacheClusterDestinationDetailsOutput
	ToCacheClusterDestinationDetailsOutputWithContext(context.Context) CacheClusterDestinationDetailsOutput
}

type CacheClusterDestinationDetailsArgs struct {
	CloudWatchLogsDetails  CacheClusterCloudWatchLogsDestinationDetailsPtrInput  `pulumi:"cloudWatchLogsDetails"`
	KinesisFirehoseDetails CacheClusterKinesisFirehoseDestinationDetailsPtrInput `pulumi:"kinesisFirehoseDetails"`
}

func (CacheClusterDestinationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheClusterDestinationDetails)(nil)).Elem()
}

func (i CacheClusterDestinationDetailsArgs) ToCacheClusterDestinationDetailsOutput() CacheClusterDestinationDetailsOutput {
	return i.ToCacheClusterDestinationDetailsOutputWithContext(context.Background())
}

func (i CacheClusterDestinationDetailsArgs) ToCacheClusterDestinationDetailsOutputWithContext(ctx context.Context) CacheClusterDestinationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheClusterDestinationDetailsOutput)
}

func (i CacheClusterDestinationDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[CacheClusterDestinationDetails] {
	return pulumix.Output[CacheClusterDestinationDetails]{
		OutputState: i.ToCacheClusterDestinationDetailsOutputWithContext(ctx).OutputState,
	}
}

type CacheClusterDestinationDetailsOutput struct{ *pulumi.OutputState }

func (CacheClusterDestinationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheClusterDestinationDetails)(nil)).Elem()
}

func (o CacheClusterDestinationDetailsOutput) ToCacheClusterDestinationDetailsOutput() CacheClusterDestinationDetailsOutput {
	return o
}

func (o CacheClusterDestinationDetailsOutput) ToCacheClusterDestinationDetailsOutputWithContext(ctx context.Context) CacheClusterDestinationDetailsOutput {
	return o
}

func (o CacheClusterDestinationDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[CacheClusterDestinationDetails] {
	return pulumix.Output[CacheClusterDestinationDetails]{
		OutputState: o.OutputState,
	}
}

func (o CacheClusterDestinationDetailsOutput) CloudWatchLogsDetails() CacheClusterCloudWatchLogsDestinationDetailsPtrOutput {
	return o.ApplyT(func(v CacheClusterDestinationDetails) *CacheClusterCloudWatchLogsDestinationDetails {
		return v.CloudWatchLogsDetails
	}).(CacheClusterCloudWatchLogsDestinationDetailsPtrOutput)
}

func (o CacheClusterDestinationDetailsOutput) KinesisFirehoseDetails() CacheClusterKinesisFirehoseDestinationDetailsPtrOutput {
	return o.ApplyT(func(v CacheClusterDestinationDetails) *CacheClusterKinesisFirehoseDestinationDetails {
		return v.KinesisFirehoseDetails
	}).(CacheClusterKinesisFirehoseDestinationDetailsPtrOutput)
}

type CacheClusterKinesisFirehoseDestinationDetails struct {
	DeliveryStream string `pulumi:"deliveryStream"`
}

// CacheClusterKinesisFirehoseDestinationDetailsInput is an input type that accepts CacheClusterKinesisFirehoseDestinationDetailsArgs and CacheClusterKinesisFirehoseDestinationDetailsOutput values.
// You can construct a concrete instance of `CacheClusterKinesisFirehoseDestinationDetailsInput` via:
//
//	CacheClusterKinesisFirehoseDestinationDetailsArgs{...}
type CacheClusterKinesisFirehoseDestinationDetailsInput interface {
	pulumi.Input

	ToCacheClusterKinesisFirehoseDestinationDetailsOutput() CacheClusterKinesisFirehoseDestinationDetailsOutput
	ToCacheClusterKinesisFirehoseDestinationDetailsOutputWithContext(context.Context) CacheClusterKinesisFirehoseDestinationDetailsOutput
}

type CacheClusterKinesisFirehoseDestinationDetailsArgs struct {
	DeliveryStream pulumi.StringInput `pulumi:"deliveryStream"`
}

func (CacheClusterKinesisFirehoseDestinationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheClusterKinesisFirehoseDestinationDetails)(nil)).Elem()
}

func (i CacheClusterKinesisFirehoseDestinationDetailsArgs) ToCacheClusterKinesisFirehoseDestinationDetailsOutput() CacheClusterKinesisFirehoseDestinationDetailsOutput {
	return i.ToCacheClusterKinesisFirehoseDestinationDetailsOutputWithContext(context.Background())
}

func (i CacheClusterKinesisFirehoseDestinationDetailsArgs) ToCacheClusterKinesisFirehoseDestinationDetailsOutputWithContext(ctx context.Context) CacheClusterKinesisFirehoseDestinationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheClusterKinesisFirehoseDestinationDetailsOutput)
}

func (i CacheClusterKinesisFirehoseDestinationDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[CacheClusterKinesisFirehoseDestinationDetails] {
	return pulumix.Output[CacheClusterKinesisFirehoseDestinationDetails]{
		OutputState: i.ToCacheClusterKinesisFirehoseDestinationDetailsOutputWithContext(ctx).OutputState,
	}
}

func (i CacheClusterKinesisFirehoseDestinationDetailsArgs) ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutput() CacheClusterKinesisFirehoseDestinationDetailsPtrOutput {
	return i.ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutputWithContext(context.Background())
}

func (i CacheClusterKinesisFirehoseDestinationDetailsArgs) ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutputWithContext(ctx context.Context) CacheClusterKinesisFirehoseDestinationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheClusterKinesisFirehoseDestinationDetailsOutput).ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutputWithContext(ctx)
}

// CacheClusterKinesisFirehoseDestinationDetailsPtrInput is an input type that accepts CacheClusterKinesisFirehoseDestinationDetailsArgs, CacheClusterKinesisFirehoseDestinationDetailsPtr and CacheClusterKinesisFirehoseDestinationDetailsPtrOutput values.
// You can construct a concrete instance of `CacheClusterKinesisFirehoseDestinationDetailsPtrInput` via:
//
//	        CacheClusterKinesisFirehoseDestinationDetailsArgs{...}
//
//	or:
//
//	        nil
type CacheClusterKinesisFirehoseDestinationDetailsPtrInput interface {
	pulumi.Input

	ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutput() CacheClusterKinesisFirehoseDestinationDetailsPtrOutput
	ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutputWithContext(context.Context) CacheClusterKinesisFirehoseDestinationDetailsPtrOutput
}

type cacheClusterKinesisFirehoseDestinationDetailsPtrType CacheClusterKinesisFirehoseDestinationDetailsArgs

func CacheClusterKinesisFirehoseDestinationDetailsPtr(v *CacheClusterKinesisFirehoseDestinationDetailsArgs) CacheClusterKinesisFirehoseDestinationDetailsPtrInput {
	return (*cacheClusterKinesisFirehoseDestinationDetailsPtrType)(v)
}

func (*cacheClusterKinesisFirehoseDestinationDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheClusterKinesisFirehoseDestinationDetails)(nil)).Elem()
}

func (i *cacheClusterKinesisFirehoseDestinationDetailsPtrType) ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutput() CacheClusterKinesisFirehoseDestinationDetailsPtrOutput {
	return i.ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutputWithContext(context.Background())
}

func (i *cacheClusterKinesisFirehoseDestinationDetailsPtrType) ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutputWithContext(ctx context.Context) CacheClusterKinesisFirehoseDestinationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheClusterKinesisFirehoseDestinationDetailsPtrOutput)
}

func (i *cacheClusterKinesisFirehoseDestinationDetailsPtrType) ToOutput(ctx context.Context) pulumix.Output[*CacheClusterKinesisFirehoseDestinationDetails] {
	return pulumix.Output[*CacheClusterKinesisFirehoseDestinationDetails]{
		OutputState: i.ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutputWithContext(ctx).OutputState,
	}
}

type CacheClusterKinesisFirehoseDestinationDetailsOutput struct{ *pulumi.OutputState }

func (CacheClusterKinesisFirehoseDestinationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheClusterKinesisFirehoseDestinationDetails)(nil)).Elem()
}

func (o CacheClusterKinesisFirehoseDestinationDetailsOutput) ToCacheClusterKinesisFirehoseDestinationDetailsOutput() CacheClusterKinesisFirehoseDestinationDetailsOutput {
	return o
}

func (o CacheClusterKinesisFirehoseDestinationDetailsOutput) ToCacheClusterKinesisFirehoseDestinationDetailsOutputWithContext(ctx context.Context) CacheClusterKinesisFirehoseDestinationDetailsOutput {
	return o
}

func (o CacheClusterKinesisFirehoseDestinationDetailsOutput) ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutput() CacheClusterKinesisFirehoseDestinationDetailsPtrOutput {
	return o.ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutputWithContext(context.Background())
}

func (o CacheClusterKinesisFirehoseDestinationDetailsOutput) ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutputWithContext(ctx context.Context) CacheClusterKinesisFirehoseDestinationDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CacheClusterKinesisFirehoseDestinationDetails) *CacheClusterKinesisFirehoseDestinationDetails {
		return &v
	}).(CacheClusterKinesisFirehoseDestinationDetailsPtrOutput)
}

func (o CacheClusterKinesisFirehoseDestinationDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[CacheClusterKinesisFirehoseDestinationDetails] {
	return pulumix.Output[CacheClusterKinesisFirehoseDestinationDetails]{
		OutputState: o.OutputState,
	}
}

func (o CacheClusterKinesisFirehoseDestinationDetailsOutput) DeliveryStream() pulumi.StringOutput {
	return o.ApplyT(func(v CacheClusterKinesisFirehoseDestinationDetails) string { return v.DeliveryStream }).(pulumi.StringOutput)
}

type CacheClusterKinesisFirehoseDestinationDetailsPtrOutput struct{ *pulumi.OutputState }

func (CacheClusterKinesisFirehoseDestinationDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CacheClusterKinesisFirehoseDestinationDetails)(nil)).Elem()
}

func (o CacheClusterKinesisFirehoseDestinationDetailsPtrOutput) ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutput() CacheClusterKinesisFirehoseDestinationDetailsPtrOutput {
	return o
}

func (o CacheClusterKinesisFirehoseDestinationDetailsPtrOutput) ToCacheClusterKinesisFirehoseDestinationDetailsPtrOutputWithContext(ctx context.Context) CacheClusterKinesisFirehoseDestinationDetailsPtrOutput {
	return o
}

func (o CacheClusterKinesisFirehoseDestinationDetailsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*CacheClusterKinesisFirehoseDestinationDetails] {
	return pulumix.Output[*CacheClusterKinesisFirehoseDestinationDetails]{
		OutputState: o.OutputState,
	}
}

func (o CacheClusterKinesisFirehoseDestinationDetailsPtrOutput) Elem() CacheClusterKinesisFirehoseDestinationDetailsOutput {
	return o.ApplyT(func(v *CacheClusterKinesisFirehoseDestinationDetails) CacheClusterKinesisFirehoseDestinationDetails {
		if v != nil {
			return *v
		}
		var ret CacheClusterKinesisFirehoseDestinationDetails
		return ret
	}).(CacheClusterKinesisFirehoseDestinationDetailsOutput)
}

func (o CacheClusterKinesisFirehoseDestinationDetailsPtrOutput) DeliveryStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CacheClusterKinesisFirehoseDestinationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DeliveryStream
	}).(pulumi.StringPtrOutput)
}

type CacheClusterLogDeliveryConfigurationRequest struct {
	DestinationDetails CacheClusterDestinationDetails `pulumi:"destinationDetails"`
	DestinationType    string                         `pulumi:"destinationType"`
	LogFormat          string                         `pulumi:"logFormat"`
	LogType            string                         `pulumi:"logType"`
}

// CacheClusterLogDeliveryConfigurationRequestInput is an input type that accepts CacheClusterLogDeliveryConfigurationRequestArgs and CacheClusterLogDeliveryConfigurationRequestOutput values.
// You can construct a concrete instance of `CacheClusterLogDeliveryConfigurationRequestInput` via:
//
//	CacheClusterLogDeliveryConfigurationRequestArgs{...}
type CacheClusterLogDeliveryConfigurationRequestInput interface {
	pulumi.Input

	ToCacheClusterLogDeliveryConfigurationRequestOutput() CacheClusterLogDeliveryConfigurationRequestOutput
	ToCacheClusterLogDeliveryConfigurationRequestOutputWithContext(context.Context) CacheClusterLogDeliveryConfigurationRequestOutput
}

type CacheClusterLogDeliveryConfigurationRequestArgs struct {
	DestinationDetails CacheClusterDestinationDetailsInput `pulumi:"destinationDetails"`
	DestinationType    pulumi.StringInput                  `pulumi:"destinationType"`
	LogFormat          pulumi.StringInput                  `pulumi:"logFormat"`
	LogType            pulumi.StringInput                  `pulumi:"logType"`
}

func (CacheClusterLogDeliveryConfigurationRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheClusterLogDeliveryConfigurationRequest)(nil)).Elem()
}

func (i CacheClusterLogDeliveryConfigurationRequestArgs) ToCacheClusterLogDeliveryConfigurationRequestOutput() CacheClusterLogDeliveryConfigurationRequestOutput {
	return i.ToCacheClusterLogDeliveryConfigurationRequestOutputWithContext(context.Background())
}

func (i CacheClusterLogDeliveryConfigurationRequestArgs) ToCacheClusterLogDeliveryConfigurationRequestOutputWithContext(ctx context.Context) CacheClusterLogDeliveryConfigurationRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheClusterLogDeliveryConfigurationRequestOutput)
}

func (i CacheClusterLogDeliveryConfigurationRequestArgs) ToOutput(ctx context.Context) pulumix.Output[CacheClusterLogDeliveryConfigurationRequest] {
	return pulumix.Output[CacheClusterLogDeliveryConfigurationRequest]{
		OutputState: i.ToCacheClusterLogDeliveryConfigurationRequestOutputWithContext(ctx).OutputState,
	}
}

// CacheClusterLogDeliveryConfigurationRequestArrayInput is an input type that accepts CacheClusterLogDeliveryConfigurationRequestArray and CacheClusterLogDeliveryConfigurationRequestArrayOutput values.
// You can construct a concrete instance of `CacheClusterLogDeliveryConfigurationRequestArrayInput` via:
//
//	CacheClusterLogDeliveryConfigurationRequestArray{ CacheClusterLogDeliveryConfigurationRequestArgs{...} }
type CacheClusterLogDeliveryConfigurationRequestArrayInput interface {
	pulumi.Input

	ToCacheClusterLogDeliveryConfigurationRequestArrayOutput() CacheClusterLogDeliveryConfigurationRequestArrayOutput
	ToCacheClusterLogDeliveryConfigurationRequestArrayOutputWithContext(context.Context) CacheClusterLogDeliveryConfigurationRequestArrayOutput
}

type CacheClusterLogDeliveryConfigurationRequestArray []CacheClusterLogDeliveryConfigurationRequestInput

func (CacheClusterLogDeliveryConfigurationRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CacheClusterLogDeliveryConfigurationRequest)(nil)).Elem()
}

func (i CacheClusterLogDeliveryConfigurationRequestArray) ToCacheClusterLogDeliveryConfigurationRequestArrayOutput() CacheClusterLogDeliveryConfigurationRequestArrayOutput {
	return i.ToCacheClusterLogDeliveryConfigurationRequestArrayOutputWithContext(context.Background())
}

func (i CacheClusterLogDeliveryConfigurationRequestArray) ToCacheClusterLogDeliveryConfigurationRequestArrayOutputWithContext(ctx context.Context) CacheClusterLogDeliveryConfigurationRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheClusterLogDeliveryConfigurationRequestArrayOutput)
}

func (i CacheClusterLogDeliveryConfigurationRequestArray) ToOutput(ctx context.Context) pulumix.Output[[]CacheClusterLogDeliveryConfigurationRequest] {
	return pulumix.Output[[]CacheClusterLogDeliveryConfigurationRequest]{
		OutputState: i.ToCacheClusterLogDeliveryConfigurationRequestArrayOutputWithContext(ctx).OutputState,
	}
}

type CacheClusterLogDeliveryConfigurationRequestOutput struct{ *pulumi.OutputState }

func (CacheClusterLogDeliveryConfigurationRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheClusterLogDeliveryConfigurationRequest)(nil)).Elem()
}

func (o CacheClusterLogDeliveryConfigurationRequestOutput) ToCacheClusterLogDeliveryConfigurationRequestOutput() CacheClusterLogDeliveryConfigurationRequestOutput {
	return o
}

func (o CacheClusterLogDeliveryConfigurationRequestOutput) ToCacheClusterLogDeliveryConfigurationRequestOutputWithContext(ctx context.Context) CacheClusterLogDeliveryConfigurationRequestOutput {
	return o
}

func (o CacheClusterLogDeliveryConfigurationRequestOutput) ToOutput(ctx context.Context) pulumix.Output[CacheClusterLogDeliveryConfigurationRequest] {
	return pulumix.Output[CacheClusterLogDeliveryConfigurationRequest]{
		OutputState: o.OutputState,
	}
}

func (o CacheClusterLogDeliveryConfigurationRequestOutput) DestinationDetails() CacheClusterDestinationDetailsOutput {
	return o.ApplyT(func(v CacheClusterLogDeliveryConfigurationRequest) CacheClusterDestinationDetails {
		return v.DestinationDetails
	}).(CacheClusterDestinationDetailsOutput)
}

func (o CacheClusterLogDeliveryConfigurationRequestOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheClusterLogDeliveryConfigurationRequest) string { return v.DestinationType }).(pulumi.StringOutput)
}

func (o CacheClusterLogDeliveryConfigurationRequestOutput) LogFormat() pulumi.StringOutput {
	return o.ApplyT(func(v CacheClusterLogDeliveryConfigurationRequest) string { return v.LogFormat }).(pulumi.StringOutput)
}

func (o CacheClusterLogDeliveryConfigurationRequestOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v CacheClusterLogDeliveryConfigurationRequest) string { return v.LogType }).(pulumi.StringOutput)
}

type CacheClusterLogDeliveryConfigurationRequestArrayOutput struct{ *pulumi.OutputState }

func (CacheClusterLogDeliveryConfigurationRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CacheClusterLogDeliveryConfigurationRequest)(nil)).Elem()
}

func (o CacheClusterLogDeliveryConfigurationRequestArrayOutput) ToCacheClusterLogDeliveryConfigurationRequestArrayOutput() CacheClusterLogDeliveryConfigurationRequestArrayOutput {
	return o
}

func (o CacheClusterLogDeliveryConfigurationRequestArrayOutput) ToCacheClusterLogDeliveryConfigurationRequestArrayOutputWithContext(ctx context.Context) CacheClusterLogDeliveryConfigurationRequestArrayOutput {
	return o
}

func (o CacheClusterLogDeliveryConfigurationRequestArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CacheClusterLogDeliveryConfigurationRequest] {
	return pulumix.Output[[]CacheClusterLogDeliveryConfigurationRequest]{
		OutputState: o.OutputState,
	}
}

func (o CacheClusterLogDeliveryConfigurationRequestArrayOutput) Index(i pulumi.IntInput) CacheClusterLogDeliveryConfigurationRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CacheClusterLogDeliveryConfigurationRequest {
		return vs[0].([]CacheClusterLogDeliveryConfigurationRequest)[vs[1].(int)]
	}).(CacheClusterLogDeliveryConfigurationRequestOutput)
}

type CacheClusterTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// CacheClusterTagInput is an input type that accepts CacheClusterTagArgs and CacheClusterTagOutput values.
// You can construct a concrete instance of `CacheClusterTagInput` via:
//
//	CacheClusterTagArgs{...}
type CacheClusterTagInput interface {
	pulumi.Input

	ToCacheClusterTagOutput() CacheClusterTagOutput
	ToCacheClusterTagOutputWithContext(context.Context) CacheClusterTagOutput
}

type CacheClusterTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (CacheClusterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheClusterTag)(nil)).Elem()
}

func (i CacheClusterTagArgs) ToCacheClusterTagOutput() CacheClusterTagOutput {
	return i.ToCacheClusterTagOutputWithContext(context.Background())
}

func (i CacheClusterTagArgs) ToCacheClusterTagOutputWithContext(ctx context.Context) CacheClusterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheClusterTagOutput)
}

func (i CacheClusterTagArgs) ToOutput(ctx context.Context) pulumix.Output[CacheClusterTag] {
	return pulumix.Output[CacheClusterTag]{
		OutputState: i.ToCacheClusterTagOutputWithContext(ctx).OutputState,
	}
}

// CacheClusterTagArrayInput is an input type that accepts CacheClusterTagArray and CacheClusterTagArrayOutput values.
// You can construct a concrete instance of `CacheClusterTagArrayInput` via:
//
//	CacheClusterTagArray{ CacheClusterTagArgs{...} }
type CacheClusterTagArrayInput interface {
	pulumi.Input

	ToCacheClusterTagArrayOutput() CacheClusterTagArrayOutput
	ToCacheClusterTagArrayOutputWithContext(context.Context) CacheClusterTagArrayOutput
}

type CacheClusterTagArray []CacheClusterTagInput

func (CacheClusterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CacheClusterTag)(nil)).Elem()
}

func (i CacheClusterTagArray) ToCacheClusterTagArrayOutput() CacheClusterTagArrayOutput {
	return i.ToCacheClusterTagArrayOutputWithContext(context.Background())
}

func (i CacheClusterTagArray) ToCacheClusterTagArrayOutputWithContext(ctx context.Context) CacheClusterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CacheClusterTagArrayOutput)
}

func (i CacheClusterTagArray) ToOutput(ctx context.Context) pulumix.Output[[]CacheClusterTag] {
	return pulumix.Output[[]CacheClusterTag]{
		OutputState: i.ToCacheClusterTagArrayOutputWithContext(ctx).OutputState,
	}
}

type CacheClusterTagOutput struct{ *pulumi.OutputState }

func (CacheClusterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CacheClusterTag)(nil)).Elem()
}

func (o CacheClusterTagOutput) ToCacheClusterTagOutput() CacheClusterTagOutput {
	return o
}

func (o CacheClusterTagOutput) ToCacheClusterTagOutputWithContext(ctx context.Context) CacheClusterTagOutput {
	return o
}

func (o CacheClusterTagOutput) ToOutput(ctx context.Context) pulumix.Output[CacheClusterTag] {
	return pulumix.Output[CacheClusterTag]{
		OutputState: o.OutputState,
	}
}

func (o CacheClusterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CacheClusterTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o CacheClusterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CacheClusterTag) string { return v.Value }).(pulumi.StringOutput)
}

type CacheClusterTagArrayOutput struct{ *pulumi.OutputState }

func (CacheClusterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CacheClusterTag)(nil)).Elem()
}

func (o CacheClusterTagArrayOutput) ToCacheClusterTagArrayOutput() CacheClusterTagArrayOutput {
	return o
}

func (o CacheClusterTagArrayOutput) ToCacheClusterTagArrayOutputWithContext(ctx context.Context) CacheClusterTagArrayOutput {
	return o
}

func (o CacheClusterTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CacheClusterTag] {
	return pulumix.Output[[]CacheClusterTag]{
		OutputState: o.OutputState,
	}
}

func (o CacheClusterTagArrayOutput) Index(i pulumi.IntInput) CacheClusterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CacheClusterTag {
		return vs[0].([]CacheClusterTag)[vs[1].(int)]
	}).(CacheClusterTagOutput)
}

type GlobalReplicationGroupMember struct {
	// Regionally unique identifier for the member i.e. ReplicationGroupId.
	ReplicationGroupId *string `pulumi:"replicationGroupId"`
	// The AWS region of the Global Datastore member.
	ReplicationGroupRegion *string `pulumi:"replicationGroupRegion"`
	// Indicates the role of the member, primary or secondary.
	Role *GlobalReplicationGroupMemberRole `pulumi:"role"`
}

// GlobalReplicationGroupMemberInput is an input type that accepts GlobalReplicationGroupMemberArgs and GlobalReplicationGroupMemberOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupMemberInput` via:
//
//	GlobalReplicationGroupMemberArgs{...}
type GlobalReplicationGroupMemberInput interface {
	pulumi.Input

	ToGlobalReplicationGroupMemberOutput() GlobalReplicationGroupMemberOutput
	ToGlobalReplicationGroupMemberOutputWithContext(context.Context) GlobalReplicationGroupMemberOutput
}

type GlobalReplicationGroupMemberArgs struct {
	// Regionally unique identifier for the member i.e. ReplicationGroupId.
	ReplicationGroupId pulumi.StringPtrInput `pulumi:"replicationGroupId"`
	// The AWS region of the Global Datastore member.
	ReplicationGroupRegion pulumi.StringPtrInput `pulumi:"replicationGroupRegion"`
	// Indicates the role of the member, primary or secondary.
	Role GlobalReplicationGroupMemberRolePtrInput `pulumi:"role"`
}

func (GlobalReplicationGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupMember)(nil)).Elem()
}

func (i GlobalReplicationGroupMemberArgs) ToGlobalReplicationGroupMemberOutput() GlobalReplicationGroupMemberOutput {
	return i.ToGlobalReplicationGroupMemberOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupMemberArgs) ToGlobalReplicationGroupMemberOutputWithContext(ctx context.Context) GlobalReplicationGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupMemberOutput)
}

func (i GlobalReplicationGroupMemberArgs) ToOutput(ctx context.Context) pulumix.Output[GlobalReplicationGroupMember] {
	return pulumix.Output[GlobalReplicationGroupMember]{
		OutputState: i.ToGlobalReplicationGroupMemberOutputWithContext(ctx).OutputState,
	}
}

// GlobalReplicationGroupMemberArrayInput is an input type that accepts GlobalReplicationGroupMemberArray and GlobalReplicationGroupMemberArrayOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupMemberArrayInput` via:
//
//	GlobalReplicationGroupMemberArray{ GlobalReplicationGroupMemberArgs{...} }
type GlobalReplicationGroupMemberArrayInput interface {
	pulumi.Input

	ToGlobalReplicationGroupMemberArrayOutput() GlobalReplicationGroupMemberArrayOutput
	ToGlobalReplicationGroupMemberArrayOutputWithContext(context.Context) GlobalReplicationGroupMemberArrayOutput
}

type GlobalReplicationGroupMemberArray []GlobalReplicationGroupMemberInput

func (GlobalReplicationGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupMember)(nil)).Elem()
}

func (i GlobalReplicationGroupMemberArray) ToGlobalReplicationGroupMemberArrayOutput() GlobalReplicationGroupMemberArrayOutput {
	return i.ToGlobalReplicationGroupMemberArrayOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupMemberArray) ToGlobalReplicationGroupMemberArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupMemberArrayOutput)
}

func (i GlobalReplicationGroupMemberArray) ToOutput(ctx context.Context) pulumix.Output[[]GlobalReplicationGroupMember] {
	return pulumix.Output[[]GlobalReplicationGroupMember]{
		OutputState: i.ToGlobalReplicationGroupMemberArrayOutputWithContext(ctx).OutputState,
	}
}

type GlobalReplicationGroupMemberOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupMember)(nil)).Elem()
}

func (o GlobalReplicationGroupMemberOutput) ToGlobalReplicationGroupMemberOutput() GlobalReplicationGroupMemberOutput {
	return o
}

func (o GlobalReplicationGroupMemberOutput) ToGlobalReplicationGroupMemberOutputWithContext(ctx context.Context) GlobalReplicationGroupMemberOutput {
	return o
}

func (o GlobalReplicationGroupMemberOutput) ToOutput(ctx context.Context) pulumix.Output[GlobalReplicationGroupMember] {
	return pulumix.Output[GlobalReplicationGroupMember]{
		OutputState: o.OutputState,
	}
}

// Regionally unique identifier for the member i.e. ReplicationGroupId.
func (o GlobalReplicationGroupMemberOutput) ReplicationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupMember) *string { return v.ReplicationGroupId }).(pulumi.StringPtrOutput)
}

// The AWS region of the Global Datastore member.
func (o GlobalReplicationGroupMemberOutput) ReplicationGroupRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupMember) *string { return v.ReplicationGroupRegion }).(pulumi.StringPtrOutput)
}

// Indicates the role of the member, primary or secondary.
func (o GlobalReplicationGroupMemberOutput) Role() GlobalReplicationGroupMemberRolePtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupMember) *GlobalReplicationGroupMemberRole { return v.Role }).(GlobalReplicationGroupMemberRolePtrOutput)
}

type GlobalReplicationGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupMember)(nil)).Elem()
}

func (o GlobalReplicationGroupMemberArrayOutput) ToGlobalReplicationGroupMemberArrayOutput() GlobalReplicationGroupMemberArrayOutput {
	return o
}

func (o GlobalReplicationGroupMemberArrayOutput) ToGlobalReplicationGroupMemberArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupMemberArrayOutput {
	return o
}

func (o GlobalReplicationGroupMemberArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GlobalReplicationGroupMember] {
	return pulumix.Output[[]GlobalReplicationGroupMember]{
		OutputState: o.OutputState,
	}
}

func (o GlobalReplicationGroupMemberArrayOutput) Index(i pulumi.IntInput) GlobalReplicationGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalReplicationGroupMember {
		return vs[0].([]GlobalReplicationGroupMember)[vs[1].(int)]
	}).(GlobalReplicationGroupMemberOutput)
}

type GlobalReplicationGroupRegionalConfiguration struct {
	// The replication group id of the Global Datastore member.
	ReplicationGroupId *string `pulumi:"replicationGroupId"`
	// The AWS region of the Global Datastore member.
	ReplicationGroupRegion *string `pulumi:"replicationGroupRegion"`
	// A list of PreferredAvailabilityZones objects that specifies the configuration of a node group in the resharded cluster.
	ReshardingConfigurations []GlobalReplicationGroupReshardingConfiguration `pulumi:"reshardingConfigurations"`
}

// GlobalReplicationGroupRegionalConfigurationInput is an input type that accepts GlobalReplicationGroupRegionalConfigurationArgs and GlobalReplicationGroupRegionalConfigurationOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupRegionalConfigurationInput` via:
//
//	GlobalReplicationGroupRegionalConfigurationArgs{...}
type GlobalReplicationGroupRegionalConfigurationInput interface {
	pulumi.Input

	ToGlobalReplicationGroupRegionalConfigurationOutput() GlobalReplicationGroupRegionalConfigurationOutput
	ToGlobalReplicationGroupRegionalConfigurationOutputWithContext(context.Context) GlobalReplicationGroupRegionalConfigurationOutput
}

type GlobalReplicationGroupRegionalConfigurationArgs struct {
	// The replication group id of the Global Datastore member.
	ReplicationGroupId pulumi.StringPtrInput `pulumi:"replicationGroupId"`
	// The AWS region of the Global Datastore member.
	ReplicationGroupRegion pulumi.StringPtrInput `pulumi:"replicationGroupRegion"`
	// A list of PreferredAvailabilityZones objects that specifies the configuration of a node group in the resharded cluster.
	ReshardingConfigurations GlobalReplicationGroupReshardingConfigurationArrayInput `pulumi:"reshardingConfigurations"`
}

func (GlobalReplicationGroupRegionalConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupRegionalConfiguration)(nil)).Elem()
}

func (i GlobalReplicationGroupRegionalConfigurationArgs) ToGlobalReplicationGroupRegionalConfigurationOutput() GlobalReplicationGroupRegionalConfigurationOutput {
	return i.ToGlobalReplicationGroupRegionalConfigurationOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupRegionalConfigurationArgs) ToGlobalReplicationGroupRegionalConfigurationOutputWithContext(ctx context.Context) GlobalReplicationGroupRegionalConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupRegionalConfigurationOutput)
}

func (i GlobalReplicationGroupRegionalConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GlobalReplicationGroupRegionalConfiguration] {
	return pulumix.Output[GlobalReplicationGroupRegionalConfiguration]{
		OutputState: i.ToGlobalReplicationGroupRegionalConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GlobalReplicationGroupRegionalConfigurationArrayInput is an input type that accepts GlobalReplicationGroupRegionalConfigurationArray and GlobalReplicationGroupRegionalConfigurationArrayOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupRegionalConfigurationArrayInput` via:
//
//	GlobalReplicationGroupRegionalConfigurationArray{ GlobalReplicationGroupRegionalConfigurationArgs{...} }
type GlobalReplicationGroupRegionalConfigurationArrayInput interface {
	pulumi.Input

	ToGlobalReplicationGroupRegionalConfigurationArrayOutput() GlobalReplicationGroupRegionalConfigurationArrayOutput
	ToGlobalReplicationGroupRegionalConfigurationArrayOutputWithContext(context.Context) GlobalReplicationGroupRegionalConfigurationArrayOutput
}

type GlobalReplicationGroupRegionalConfigurationArray []GlobalReplicationGroupRegionalConfigurationInput

func (GlobalReplicationGroupRegionalConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupRegionalConfiguration)(nil)).Elem()
}

func (i GlobalReplicationGroupRegionalConfigurationArray) ToGlobalReplicationGroupRegionalConfigurationArrayOutput() GlobalReplicationGroupRegionalConfigurationArrayOutput {
	return i.ToGlobalReplicationGroupRegionalConfigurationArrayOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupRegionalConfigurationArray) ToGlobalReplicationGroupRegionalConfigurationArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupRegionalConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupRegionalConfigurationArrayOutput)
}

func (i GlobalReplicationGroupRegionalConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GlobalReplicationGroupRegionalConfiguration] {
	return pulumix.Output[[]GlobalReplicationGroupRegionalConfiguration]{
		OutputState: i.ToGlobalReplicationGroupRegionalConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GlobalReplicationGroupRegionalConfigurationOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupRegionalConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupRegionalConfiguration)(nil)).Elem()
}

func (o GlobalReplicationGroupRegionalConfigurationOutput) ToGlobalReplicationGroupRegionalConfigurationOutput() GlobalReplicationGroupRegionalConfigurationOutput {
	return o
}

func (o GlobalReplicationGroupRegionalConfigurationOutput) ToGlobalReplicationGroupRegionalConfigurationOutputWithContext(ctx context.Context) GlobalReplicationGroupRegionalConfigurationOutput {
	return o
}

func (o GlobalReplicationGroupRegionalConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GlobalReplicationGroupRegionalConfiguration] {
	return pulumix.Output[GlobalReplicationGroupRegionalConfiguration]{
		OutputState: o.OutputState,
	}
}

// The replication group id of the Global Datastore member.
func (o GlobalReplicationGroupRegionalConfigurationOutput) ReplicationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupRegionalConfiguration) *string { return v.ReplicationGroupId }).(pulumi.StringPtrOutput)
}

// The AWS region of the Global Datastore member.
func (o GlobalReplicationGroupRegionalConfigurationOutput) ReplicationGroupRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupRegionalConfiguration) *string { return v.ReplicationGroupRegion }).(pulumi.StringPtrOutput)
}

// A list of PreferredAvailabilityZones objects that specifies the configuration of a node group in the resharded cluster.
func (o GlobalReplicationGroupRegionalConfigurationOutput) ReshardingConfigurations() GlobalReplicationGroupReshardingConfigurationArrayOutput {
	return o.ApplyT(func(v GlobalReplicationGroupRegionalConfiguration) []GlobalReplicationGroupReshardingConfiguration {
		return v.ReshardingConfigurations
	}).(GlobalReplicationGroupReshardingConfigurationArrayOutput)
}

type GlobalReplicationGroupRegionalConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupRegionalConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupRegionalConfiguration)(nil)).Elem()
}

func (o GlobalReplicationGroupRegionalConfigurationArrayOutput) ToGlobalReplicationGroupRegionalConfigurationArrayOutput() GlobalReplicationGroupRegionalConfigurationArrayOutput {
	return o
}

func (o GlobalReplicationGroupRegionalConfigurationArrayOutput) ToGlobalReplicationGroupRegionalConfigurationArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupRegionalConfigurationArrayOutput {
	return o
}

func (o GlobalReplicationGroupRegionalConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GlobalReplicationGroupRegionalConfiguration] {
	return pulumix.Output[[]GlobalReplicationGroupRegionalConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GlobalReplicationGroupRegionalConfigurationArrayOutput) Index(i pulumi.IntInput) GlobalReplicationGroupRegionalConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalReplicationGroupRegionalConfiguration {
		return vs[0].([]GlobalReplicationGroupRegionalConfiguration)[vs[1].(int)]
	}).(GlobalReplicationGroupRegionalConfigurationOutput)
}

type GlobalReplicationGroupReshardingConfiguration struct {
	// Unique identifier for the Node Group. This is either auto-generated by ElastiCache (4-digit id) or a user supplied id.
	NodeGroupId *string `pulumi:"nodeGroupId"`
	// A list of preferred availability zones for the nodes of new node groups.
	PreferredAvailabilityZones []string `pulumi:"preferredAvailabilityZones"`
}

// GlobalReplicationGroupReshardingConfigurationInput is an input type that accepts GlobalReplicationGroupReshardingConfigurationArgs and GlobalReplicationGroupReshardingConfigurationOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupReshardingConfigurationInput` via:
//
//	GlobalReplicationGroupReshardingConfigurationArgs{...}
type GlobalReplicationGroupReshardingConfigurationInput interface {
	pulumi.Input

	ToGlobalReplicationGroupReshardingConfigurationOutput() GlobalReplicationGroupReshardingConfigurationOutput
	ToGlobalReplicationGroupReshardingConfigurationOutputWithContext(context.Context) GlobalReplicationGroupReshardingConfigurationOutput
}

type GlobalReplicationGroupReshardingConfigurationArgs struct {
	// Unique identifier for the Node Group. This is either auto-generated by ElastiCache (4-digit id) or a user supplied id.
	NodeGroupId pulumi.StringPtrInput `pulumi:"nodeGroupId"`
	// A list of preferred availability zones for the nodes of new node groups.
	PreferredAvailabilityZones pulumi.StringArrayInput `pulumi:"preferredAvailabilityZones"`
}

func (GlobalReplicationGroupReshardingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupReshardingConfiguration)(nil)).Elem()
}

func (i GlobalReplicationGroupReshardingConfigurationArgs) ToGlobalReplicationGroupReshardingConfigurationOutput() GlobalReplicationGroupReshardingConfigurationOutput {
	return i.ToGlobalReplicationGroupReshardingConfigurationOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupReshardingConfigurationArgs) ToGlobalReplicationGroupReshardingConfigurationOutputWithContext(ctx context.Context) GlobalReplicationGroupReshardingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupReshardingConfigurationOutput)
}

func (i GlobalReplicationGroupReshardingConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GlobalReplicationGroupReshardingConfiguration] {
	return pulumix.Output[GlobalReplicationGroupReshardingConfiguration]{
		OutputState: i.ToGlobalReplicationGroupReshardingConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GlobalReplicationGroupReshardingConfigurationArrayInput is an input type that accepts GlobalReplicationGroupReshardingConfigurationArray and GlobalReplicationGroupReshardingConfigurationArrayOutput values.
// You can construct a concrete instance of `GlobalReplicationGroupReshardingConfigurationArrayInput` via:
//
//	GlobalReplicationGroupReshardingConfigurationArray{ GlobalReplicationGroupReshardingConfigurationArgs{...} }
type GlobalReplicationGroupReshardingConfigurationArrayInput interface {
	pulumi.Input

	ToGlobalReplicationGroupReshardingConfigurationArrayOutput() GlobalReplicationGroupReshardingConfigurationArrayOutput
	ToGlobalReplicationGroupReshardingConfigurationArrayOutputWithContext(context.Context) GlobalReplicationGroupReshardingConfigurationArrayOutput
}

type GlobalReplicationGroupReshardingConfigurationArray []GlobalReplicationGroupReshardingConfigurationInput

func (GlobalReplicationGroupReshardingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupReshardingConfiguration)(nil)).Elem()
}

func (i GlobalReplicationGroupReshardingConfigurationArray) ToGlobalReplicationGroupReshardingConfigurationArrayOutput() GlobalReplicationGroupReshardingConfigurationArrayOutput {
	return i.ToGlobalReplicationGroupReshardingConfigurationArrayOutputWithContext(context.Background())
}

func (i GlobalReplicationGroupReshardingConfigurationArray) ToGlobalReplicationGroupReshardingConfigurationArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupReshardingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalReplicationGroupReshardingConfigurationArrayOutput)
}

func (i GlobalReplicationGroupReshardingConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GlobalReplicationGroupReshardingConfiguration] {
	return pulumix.Output[[]GlobalReplicationGroupReshardingConfiguration]{
		OutputState: i.ToGlobalReplicationGroupReshardingConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GlobalReplicationGroupReshardingConfigurationOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupReshardingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalReplicationGroupReshardingConfiguration)(nil)).Elem()
}

func (o GlobalReplicationGroupReshardingConfigurationOutput) ToGlobalReplicationGroupReshardingConfigurationOutput() GlobalReplicationGroupReshardingConfigurationOutput {
	return o
}

func (o GlobalReplicationGroupReshardingConfigurationOutput) ToGlobalReplicationGroupReshardingConfigurationOutputWithContext(ctx context.Context) GlobalReplicationGroupReshardingConfigurationOutput {
	return o
}

func (o GlobalReplicationGroupReshardingConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GlobalReplicationGroupReshardingConfiguration] {
	return pulumix.Output[GlobalReplicationGroupReshardingConfiguration]{
		OutputState: o.OutputState,
	}
}

// Unique identifier for the Node Group. This is either auto-generated by ElastiCache (4-digit id) or a user supplied id.
func (o GlobalReplicationGroupReshardingConfigurationOutput) NodeGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalReplicationGroupReshardingConfiguration) *string { return v.NodeGroupId }).(pulumi.StringPtrOutput)
}

// A list of preferred availability zones for the nodes of new node groups.
func (o GlobalReplicationGroupReshardingConfigurationOutput) PreferredAvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GlobalReplicationGroupReshardingConfiguration) []string { return v.PreferredAvailabilityZones }).(pulumi.StringArrayOutput)
}

type GlobalReplicationGroupReshardingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GlobalReplicationGroupReshardingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalReplicationGroupReshardingConfiguration)(nil)).Elem()
}

func (o GlobalReplicationGroupReshardingConfigurationArrayOutput) ToGlobalReplicationGroupReshardingConfigurationArrayOutput() GlobalReplicationGroupReshardingConfigurationArrayOutput {
	return o
}

func (o GlobalReplicationGroupReshardingConfigurationArrayOutput) ToGlobalReplicationGroupReshardingConfigurationArrayOutputWithContext(ctx context.Context) GlobalReplicationGroupReshardingConfigurationArrayOutput {
	return o
}

func (o GlobalReplicationGroupReshardingConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GlobalReplicationGroupReshardingConfiguration] {
	return pulumix.Output[[]GlobalReplicationGroupReshardingConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GlobalReplicationGroupReshardingConfigurationArrayOutput) Index(i pulumi.IntInput) GlobalReplicationGroupReshardingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalReplicationGroupReshardingConfiguration {
		return vs[0].([]GlobalReplicationGroupReshardingConfiguration)[vs[1].(int)]
	}).(GlobalReplicationGroupReshardingConfigurationOutput)
}

type ParameterGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ParameterGroupTagInput is an input type that accepts ParameterGroupTagArgs and ParameterGroupTagOutput values.
// You can construct a concrete instance of `ParameterGroupTagInput` via:
//
//	ParameterGroupTagArgs{...}
type ParameterGroupTagInput interface {
	pulumi.Input

	ToParameterGroupTagOutput() ParameterGroupTagOutput
	ToParameterGroupTagOutputWithContext(context.Context) ParameterGroupTagOutput
}

type ParameterGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ParameterGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupTag)(nil)).Elem()
}

func (i ParameterGroupTagArgs) ToParameterGroupTagOutput() ParameterGroupTagOutput {
	return i.ToParameterGroupTagOutputWithContext(context.Background())
}

func (i ParameterGroupTagArgs) ToParameterGroupTagOutputWithContext(ctx context.Context) ParameterGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupTagOutput)
}

func (i ParameterGroupTagArgs) ToOutput(ctx context.Context) pulumix.Output[ParameterGroupTag] {
	return pulumix.Output[ParameterGroupTag]{
		OutputState: i.ToParameterGroupTagOutputWithContext(ctx).OutputState,
	}
}

// ParameterGroupTagArrayInput is an input type that accepts ParameterGroupTagArray and ParameterGroupTagArrayOutput values.
// You can construct a concrete instance of `ParameterGroupTagArrayInput` via:
//
//	ParameterGroupTagArray{ ParameterGroupTagArgs{...} }
type ParameterGroupTagArrayInput interface {
	pulumi.Input

	ToParameterGroupTagArrayOutput() ParameterGroupTagArrayOutput
	ToParameterGroupTagArrayOutputWithContext(context.Context) ParameterGroupTagArrayOutput
}

type ParameterGroupTagArray []ParameterGroupTagInput

func (ParameterGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupTag)(nil)).Elem()
}

func (i ParameterGroupTagArray) ToParameterGroupTagArrayOutput() ParameterGroupTagArrayOutput {
	return i.ToParameterGroupTagArrayOutputWithContext(context.Background())
}

func (i ParameterGroupTagArray) ToParameterGroupTagArrayOutputWithContext(ctx context.Context) ParameterGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupTagArrayOutput)
}

func (i ParameterGroupTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ParameterGroupTag] {
	return pulumix.Output[[]ParameterGroupTag]{
		OutputState: i.ToParameterGroupTagArrayOutputWithContext(ctx).OutputState,
	}
}

type ParameterGroupTagOutput struct{ *pulumi.OutputState }

func (ParameterGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupTag)(nil)).Elem()
}

func (o ParameterGroupTagOutput) ToParameterGroupTagOutput() ParameterGroupTagOutput {
	return o
}

func (o ParameterGroupTagOutput) ToParameterGroupTagOutputWithContext(ctx context.Context) ParameterGroupTagOutput {
	return o
}

func (o ParameterGroupTagOutput) ToOutput(ctx context.Context) pulumix.Output[ParameterGroupTag] {
	return pulumix.Output[ParameterGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o ParameterGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ParameterGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type ParameterGroupTagArrayOutput struct{ *pulumi.OutputState }

func (ParameterGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupTag)(nil)).Elem()
}

func (o ParameterGroupTagArrayOutput) ToParameterGroupTagArrayOutput() ParameterGroupTagArrayOutput {
	return o
}

func (o ParameterGroupTagArrayOutput) ToParameterGroupTagArrayOutputWithContext(ctx context.Context) ParameterGroupTagArrayOutput {
	return o
}

func (o ParameterGroupTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ParameterGroupTag] {
	return pulumix.Output[[]ParameterGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o ParameterGroupTagArrayOutput) Index(i pulumi.IntInput) ParameterGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterGroupTag {
		return vs[0].([]ParameterGroupTag)[vs[1].(int)]
	}).(ParameterGroupTagOutput)
}

type ReplicationGroupCloudWatchLogsDestinationDetails struct {
	LogGroup string `pulumi:"logGroup"`
}

// ReplicationGroupCloudWatchLogsDestinationDetailsInput is an input type that accepts ReplicationGroupCloudWatchLogsDestinationDetailsArgs and ReplicationGroupCloudWatchLogsDestinationDetailsOutput values.
// You can construct a concrete instance of `ReplicationGroupCloudWatchLogsDestinationDetailsInput` via:
//
//	ReplicationGroupCloudWatchLogsDestinationDetailsArgs{...}
type ReplicationGroupCloudWatchLogsDestinationDetailsInput interface {
	pulumi.Input

	ToReplicationGroupCloudWatchLogsDestinationDetailsOutput() ReplicationGroupCloudWatchLogsDestinationDetailsOutput
	ToReplicationGroupCloudWatchLogsDestinationDetailsOutputWithContext(context.Context) ReplicationGroupCloudWatchLogsDestinationDetailsOutput
}

type ReplicationGroupCloudWatchLogsDestinationDetailsArgs struct {
	LogGroup pulumi.StringInput `pulumi:"logGroup"`
}

func (ReplicationGroupCloudWatchLogsDestinationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupCloudWatchLogsDestinationDetails)(nil)).Elem()
}

func (i ReplicationGroupCloudWatchLogsDestinationDetailsArgs) ToReplicationGroupCloudWatchLogsDestinationDetailsOutput() ReplicationGroupCloudWatchLogsDestinationDetailsOutput {
	return i.ToReplicationGroupCloudWatchLogsDestinationDetailsOutputWithContext(context.Background())
}

func (i ReplicationGroupCloudWatchLogsDestinationDetailsArgs) ToReplicationGroupCloudWatchLogsDestinationDetailsOutputWithContext(ctx context.Context) ReplicationGroupCloudWatchLogsDestinationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupCloudWatchLogsDestinationDetailsOutput)
}

func (i ReplicationGroupCloudWatchLogsDestinationDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroupCloudWatchLogsDestinationDetails] {
	return pulumix.Output[ReplicationGroupCloudWatchLogsDestinationDetails]{
		OutputState: i.ToReplicationGroupCloudWatchLogsDestinationDetailsOutputWithContext(ctx).OutputState,
	}
}

func (i ReplicationGroupCloudWatchLogsDestinationDetailsArgs) ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput() ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput {
	return i.ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutputWithContext(context.Background())
}

func (i ReplicationGroupCloudWatchLogsDestinationDetailsArgs) ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutputWithContext(ctx context.Context) ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupCloudWatchLogsDestinationDetailsOutput).ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutputWithContext(ctx)
}

// ReplicationGroupCloudWatchLogsDestinationDetailsPtrInput is an input type that accepts ReplicationGroupCloudWatchLogsDestinationDetailsArgs, ReplicationGroupCloudWatchLogsDestinationDetailsPtr and ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput values.
// You can construct a concrete instance of `ReplicationGroupCloudWatchLogsDestinationDetailsPtrInput` via:
//
//	        ReplicationGroupCloudWatchLogsDestinationDetailsArgs{...}
//
//	or:
//
//	        nil
type ReplicationGroupCloudWatchLogsDestinationDetailsPtrInput interface {
	pulumi.Input

	ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput() ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput
	ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutputWithContext(context.Context) ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput
}

type replicationGroupCloudWatchLogsDestinationDetailsPtrType ReplicationGroupCloudWatchLogsDestinationDetailsArgs

func ReplicationGroupCloudWatchLogsDestinationDetailsPtr(v *ReplicationGroupCloudWatchLogsDestinationDetailsArgs) ReplicationGroupCloudWatchLogsDestinationDetailsPtrInput {
	return (*replicationGroupCloudWatchLogsDestinationDetailsPtrType)(v)
}

func (*replicationGroupCloudWatchLogsDestinationDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationGroupCloudWatchLogsDestinationDetails)(nil)).Elem()
}

func (i *replicationGroupCloudWatchLogsDestinationDetailsPtrType) ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput() ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput {
	return i.ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutputWithContext(context.Background())
}

func (i *replicationGroupCloudWatchLogsDestinationDetailsPtrType) ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutputWithContext(ctx context.Context) ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput)
}

func (i *replicationGroupCloudWatchLogsDestinationDetailsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReplicationGroupCloudWatchLogsDestinationDetails] {
	return pulumix.Output[*ReplicationGroupCloudWatchLogsDestinationDetails]{
		OutputState: i.ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutputWithContext(ctx).OutputState,
	}
}

type ReplicationGroupCloudWatchLogsDestinationDetailsOutput struct{ *pulumi.OutputState }

func (ReplicationGroupCloudWatchLogsDestinationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupCloudWatchLogsDestinationDetails)(nil)).Elem()
}

func (o ReplicationGroupCloudWatchLogsDestinationDetailsOutput) ToReplicationGroupCloudWatchLogsDestinationDetailsOutput() ReplicationGroupCloudWatchLogsDestinationDetailsOutput {
	return o
}

func (o ReplicationGroupCloudWatchLogsDestinationDetailsOutput) ToReplicationGroupCloudWatchLogsDestinationDetailsOutputWithContext(ctx context.Context) ReplicationGroupCloudWatchLogsDestinationDetailsOutput {
	return o
}

func (o ReplicationGroupCloudWatchLogsDestinationDetailsOutput) ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput() ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput {
	return o.ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutputWithContext(context.Background())
}

func (o ReplicationGroupCloudWatchLogsDestinationDetailsOutput) ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutputWithContext(ctx context.Context) ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationGroupCloudWatchLogsDestinationDetails) *ReplicationGroupCloudWatchLogsDestinationDetails {
		return &v
	}).(ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput)
}

func (o ReplicationGroupCloudWatchLogsDestinationDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroupCloudWatchLogsDestinationDetails] {
	return pulumix.Output[ReplicationGroupCloudWatchLogsDestinationDetails]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationGroupCloudWatchLogsDestinationDetailsOutput) LogGroup() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationGroupCloudWatchLogsDestinationDetails) string { return v.LogGroup }).(pulumi.StringOutput)
}

type ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput struct{ *pulumi.OutputState }

func (ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationGroupCloudWatchLogsDestinationDetails)(nil)).Elem()
}

func (o ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput) ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput() ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput {
	return o
}

func (o ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput) ToReplicationGroupCloudWatchLogsDestinationDetailsPtrOutputWithContext(ctx context.Context) ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput {
	return o
}

func (o ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReplicationGroupCloudWatchLogsDestinationDetails] {
	return pulumix.Output[*ReplicationGroupCloudWatchLogsDestinationDetails]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput) Elem() ReplicationGroupCloudWatchLogsDestinationDetailsOutput {
	return o.ApplyT(func(v *ReplicationGroupCloudWatchLogsDestinationDetails) ReplicationGroupCloudWatchLogsDestinationDetails {
		if v != nil {
			return *v
		}
		var ret ReplicationGroupCloudWatchLogsDestinationDetails
		return ret
	}).(ReplicationGroupCloudWatchLogsDestinationDetailsOutput)
}

func (o ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationGroupCloudWatchLogsDestinationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.LogGroup
	}).(pulumi.StringPtrOutput)
}

type ReplicationGroupDestinationDetails struct {
	CloudWatchLogsDetails  *ReplicationGroupCloudWatchLogsDestinationDetails  `pulumi:"cloudWatchLogsDetails"`
	KinesisFirehoseDetails *ReplicationGroupKinesisFirehoseDestinationDetails `pulumi:"kinesisFirehoseDetails"`
}

// ReplicationGroupDestinationDetailsInput is an input type that accepts ReplicationGroupDestinationDetailsArgs and ReplicationGroupDestinationDetailsOutput values.
// You can construct a concrete instance of `ReplicationGroupDestinationDetailsInput` via:
//
//	ReplicationGroupDestinationDetailsArgs{...}
type ReplicationGroupDestinationDetailsInput interface {
	pulumi.Input

	ToReplicationGroupDestinationDetailsOutput() ReplicationGroupDestinationDetailsOutput
	ToReplicationGroupDestinationDetailsOutputWithContext(context.Context) ReplicationGroupDestinationDetailsOutput
}

type ReplicationGroupDestinationDetailsArgs struct {
	CloudWatchLogsDetails  ReplicationGroupCloudWatchLogsDestinationDetailsPtrInput  `pulumi:"cloudWatchLogsDetails"`
	KinesisFirehoseDetails ReplicationGroupKinesisFirehoseDestinationDetailsPtrInput `pulumi:"kinesisFirehoseDetails"`
}

func (ReplicationGroupDestinationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupDestinationDetails)(nil)).Elem()
}

func (i ReplicationGroupDestinationDetailsArgs) ToReplicationGroupDestinationDetailsOutput() ReplicationGroupDestinationDetailsOutput {
	return i.ToReplicationGroupDestinationDetailsOutputWithContext(context.Background())
}

func (i ReplicationGroupDestinationDetailsArgs) ToReplicationGroupDestinationDetailsOutputWithContext(ctx context.Context) ReplicationGroupDestinationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupDestinationDetailsOutput)
}

func (i ReplicationGroupDestinationDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroupDestinationDetails] {
	return pulumix.Output[ReplicationGroupDestinationDetails]{
		OutputState: i.ToReplicationGroupDestinationDetailsOutputWithContext(ctx).OutputState,
	}
}

type ReplicationGroupDestinationDetailsOutput struct{ *pulumi.OutputState }

func (ReplicationGroupDestinationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupDestinationDetails)(nil)).Elem()
}

func (o ReplicationGroupDestinationDetailsOutput) ToReplicationGroupDestinationDetailsOutput() ReplicationGroupDestinationDetailsOutput {
	return o
}

func (o ReplicationGroupDestinationDetailsOutput) ToReplicationGroupDestinationDetailsOutputWithContext(ctx context.Context) ReplicationGroupDestinationDetailsOutput {
	return o
}

func (o ReplicationGroupDestinationDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroupDestinationDetails] {
	return pulumix.Output[ReplicationGroupDestinationDetails]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationGroupDestinationDetailsOutput) CloudWatchLogsDetails() ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput {
	return o.ApplyT(func(v ReplicationGroupDestinationDetails) *ReplicationGroupCloudWatchLogsDestinationDetails {
		return v.CloudWatchLogsDetails
	}).(ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput)
}

func (o ReplicationGroupDestinationDetailsOutput) KinesisFirehoseDetails() ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput {
	return o.ApplyT(func(v ReplicationGroupDestinationDetails) *ReplicationGroupKinesisFirehoseDestinationDetails {
		return v.KinesisFirehoseDetails
	}).(ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput)
}

type ReplicationGroupKinesisFirehoseDestinationDetails struct {
	DeliveryStream string `pulumi:"deliveryStream"`
}

// ReplicationGroupKinesisFirehoseDestinationDetailsInput is an input type that accepts ReplicationGroupKinesisFirehoseDestinationDetailsArgs and ReplicationGroupKinesisFirehoseDestinationDetailsOutput values.
// You can construct a concrete instance of `ReplicationGroupKinesisFirehoseDestinationDetailsInput` via:
//
//	ReplicationGroupKinesisFirehoseDestinationDetailsArgs{...}
type ReplicationGroupKinesisFirehoseDestinationDetailsInput interface {
	pulumi.Input

	ToReplicationGroupKinesisFirehoseDestinationDetailsOutput() ReplicationGroupKinesisFirehoseDestinationDetailsOutput
	ToReplicationGroupKinesisFirehoseDestinationDetailsOutputWithContext(context.Context) ReplicationGroupKinesisFirehoseDestinationDetailsOutput
}

type ReplicationGroupKinesisFirehoseDestinationDetailsArgs struct {
	DeliveryStream pulumi.StringInput `pulumi:"deliveryStream"`
}

func (ReplicationGroupKinesisFirehoseDestinationDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupKinesisFirehoseDestinationDetails)(nil)).Elem()
}

func (i ReplicationGroupKinesisFirehoseDestinationDetailsArgs) ToReplicationGroupKinesisFirehoseDestinationDetailsOutput() ReplicationGroupKinesisFirehoseDestinationDetailsOutput {
	return i.ToReplicationGroupKinesisFirehoseDestinationDetailsOutputWithContext(context.Background())
}

func (i ReplicationGroupKinesisFirehoseDestinationDetailsArgs) ToReplicationGroupKinesisFirehoseDestinationDetailsOutputWithContext(ctx context.Context) ReplicationGroupKinesisFirehoseDestinationDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupKinesisFirehoseDestinationDetailsOutput)
}

func (i ReplicationGroupKinesisFirehoseDestinationDetailsArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroupKinesisFirehoseDestinationDetails] {
	return pulumix.Output[ReplicationGroupKinesisFirehoseDestinationDetails]{
		OutputState: i.ToReplicationGroupKinesisFirehoseDestinationDetailsOutputWithContext(ctx).OutputState,
	}
}

func (i ReplicationGroupKinesisFirehoseDestinationDetailsArgs) ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput() ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput {
	return i.ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutputWithContext(context.Background())
}

func (i ReplicationGroupKinesisFirehoseDestinationDetailsArgs) ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutputWithContext(ctx context.Context) ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupKinesisFirehoseDestinationDetailsOutput).ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutputWithContext(ctx)
}

// ReplicationGroupKinesisFirehoseDestinationDetailsPtrInput is an input type that accepts ReplicationGroupKinesisFirehoseDestinationDetailsArgs, ReplicationGroupKinesisFirehoseDestinationDetailsPtr and ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput values.
// You can construct a concrete instance of `ReplicationGroupKinesisFirehoseDestinationDetailsPtrInput` via:
//
//	        ReplicationGroupKinesisFirehoseDestinationDetailsArgs{...}
//
//	or:
//
//	        nil
type ReplicationGroupKinesisFirehoseDestinationDetailsPtrInput interface {
	pulumi.Input

	ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput() ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput
	ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutputWithContext(context.Context) ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput
}

type replicationGroupKinesisFirehoseDestinationDetailsPtrType ReplicationGroupKinesisFirehoseDestinationDetailsArgs

func ReplicationGroupKinesisFirehoseDestinationDetailsPtr(v *ReplicationGroupKinesisFirehoseDestinationDetailsArgs) ReplicationGroupKinesisFirehoseDestinationDetailsPtrInput {
	return (*replicationGroupKinesisFirehoseDestinationDetailsPtrType)(v)
}

func (*replicationGroupKinesisFirehoseDestinationDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationGroupKinesisFirehoseDestinationDetails)(nil)).Elem()
}

func (i *replicationGroupKinesisFirehoseDestinationDetailsPtrType) ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput() ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput {
	return i.ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutputWithContext(context.Background())
}

func (i *replicationGroupKinesisFirehoseDestinationDetailsPtrType) ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutputWithContext(ctx context.Context) ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput)
}

func (i *replicationGroupKinesisFirehoseDestinationDetailsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ReplicationGroupKinesisFirehoseDestinationDetails] {
	return pulumix.Output[*ReplicationGroupKinesisFirehoseDestinationDetails]{
		OutputState: i.ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutputWithContext(ctx).OutputState,
	}
}

type ReplicationGroupKinesisFirehoseDestinationDetailsOutput struct{ *pulumi.OutputState }

func (ReplicationGroupKinesisFirehoseDestinationDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupKinesisFirehoseDestinationDetails)(nil)).Elem()
}

func (o ReplicationGroupKinesisFirehoseDestinationDetailsOutput) ToReplicationGroupKinesisFirehoseDestinationDetailsOutput() ReplicationGroupKinesisFirehoseDestinationDetailsOutput {
	return o
}

func (o ReplicationGroupKinesisFirehoseDestinationDetailsOutput) ToReplicationGroupKinesisFirehoseDestinationDetailsOutputWithContext(ctx context.Context) ReplicationGroupKinesisFirehoseDestinationDetailsOutput {
	return o
}

func (o ReplicationGroupKinesisFirehoseDestinationDetailsOutput) ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput() ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput {
	return o.ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutputWithContext(context.Background())
}

func (o ReplicationGroupKinesisFirehoseDestinationDetailsOutput) ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutputWithContext(ctx context.Context) ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationGroupKinesisFirehoseDestinationDetails) *ReplicationGroupKinesisFirehoseDestinationDetails {
		return &v
	}).(ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput)
}

func (o ReplicationGroupKinesisFirehoseDestinationDetailsOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroupKinesisFirehoseDestinationDetails] {
	return pulumix.Output[ReplicationGroupKinesisFirehoseDestinationDetails]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationGroupKinesisFirehoseDestinationDetailsOutput) DeliveryStream() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationGroupKinesisFirehoseDestinationDetails) string { return v.DeliveryStream }).(pulumi.StringOutput)
}

type ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput struct{ *pulumi.OutputState }

func (ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationGroupKinesisFirehoseDestinationDetails)(nil)).Elem()
}

func (o ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput) ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput() ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput {
	return o
}

func (o ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput) ToReplicationGroupKinesisFirehoseDestinationDetailsPtrOutputWithContext(ctx context.Context) ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput {
	return o
}

func (o ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ReplicationGroupKinesisFirehoseDestinationDetails] {
	return pulumix.Output[*ReplicationGroupKinesisFirehoseDestinationDetails]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput) Elem() ReplicationGroupKinesisFirehoseDestinationDetailsOutput {
	return o.ApplyT(func(v *ReplicationGroupKinesisFirehoseDestinationDetails) ReplicationGroupKinesisFirehoseDestinationDetails {
		if v != nil {
			return *v
		}
		var ret ReplicationGroupKinesisFirehoseDestinationDetails
		return ret
	}).(ReplicationGroupKinesisFirehoseDestinationDetailsOutput)
}

func (o ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput) DeliveryStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationGroupKinesisFirehoseDestinationDetails) *string {
		if v == nil {
			return nil
		}
		return &v.DeliveryStream
	}).(pulumi.StringPtrOutput)
}

type ReplicationGroupLogDeliveryConfigurationRequest struct {
	DestinationDetails ReplicationGroupDestinationDetails `pulumi:"destinationDetails"`
	DestinationType    string                             `pulumi:"destinationType"`
	LogFormat          string                             `pulumi:"logFormat"`
	LogType            string                             `pulumi:"logType"`
}

// ReplicationGroupLogDeliveryConfigurationRequestInput is an input type that accepts ReplicationGroupLogDeliveryConfigurationRequestArgs and ReplicationGroupLogDeliveryConfigurationRequestOutput values.
// You can construct a concrete instance of `ReplicationGroupLogDeliveryConfigurationRequestInput` via:
//
//	ReplicationGroupLogDeliveryConfigurationRequestArgs{...}
type ReplicationGroupLogDeliveryConfigurationRequestInput interface {
	pulumi.Input

	ToReplicationGroupLogDeliveryConfigurationRequestOutput() ReplicationGroupLogDeliveryConfigurationRequestOutput
	ToReplicationGroupLogDeliveryConfigurationRequestOutputWithContext(context.Context) ReplicationGroupLogDeliveryConfigurationRequestOutput
}

type ReplicationGroupLogDeliveryConfigurationRequestArgs struct {
	DestinationDetails ReplicationGroupDestinationDetailsInput `pulumi:"destinationDetails"`
	DestinationType    pulumi.StringInput                      `pulumi:"destinationType"`
	LogFormat          pulumi.StringInput                      `pulumi:"logFormat"`
	LogType            pulumi.StringInput                      `pulumi:"logType"`
}

func (ReplicationGroupLogDeliveryConfigurationRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupLogDeliveryConfigurationRequest)(nil)).Elem()
}

func (i ReplicationGroupLogDeliveryConfigurationRequestArgs) ToReplicationGroupLogDeliveryConfigurationRequestOutput() ReplicationGroupLogDeliveryConfigurationRequestOutput {
	return i.ToReplicationGroupLogDeliveryConfigurationRequestOutputWithContext(context.Background())
}

func (i ReplicationGroupLogDeliveryConfigurationRequestArgs) ToReplicationGroupLogDeliveryConfigurationRequestOutputWithContext(ctx context.Context) ReplicationGroupLogDeliveryConfigurationRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupLogDeliveryConfigurationRequestOutput)
}

func (i ReplicationGroupLogDeliveryConfigurationRequestArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroupLogDeliveryConfigurationRequest] {
	return pulumix.Output[ReplicationGroupLogDeliveryConfigurationRequest]{
		OutputState: i.ToReplicationGroupLogDeliveryConfigurationRequestOutputWithContext(ctx).OutputState,
	}
}

// ReplicationGroupLogDeliveryConfigurationRequestArrayInput is an input type that accepts ReplicationGroupLogDeliveryConfigurationRequestArray and ReplicationGroupLogDeliveryConfigurationRequestArrayOutput values.
// You can construct a concrete instance of `ReplicationGroupLogDeliveryConfigurationRequestArrayInput` via:
//
//	ReplicationGroupLogDeliveryConfigurationRequestArray{ ReplicationGroupLogDeliveryConfigurationRequestArgs{...} }
type ReplicationGroupLogDeliveryConfigurationRequestArrayInput interface {
	pulumi.Input

	ToReplicationGroupLogDeliveryConfigurationRequestArrayOutput() ReplicationGroupLogDeliveryConfigurationRequestArrayOutput
	ToReplicationGroupLogDeliveryConfigurationRequestArrayOutputWithContext(context.Context) ReplicationGroupLogDeliveryConfigurationRequestArrayOutput
}

type ReplicationGroupLogDeliveryConfigurationRequestArray []ReplicationGroupLogDeliveryConfigurationRequestInput

func (ReplicationGroupLogDeliveryConfigurationRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationGroupLogDeliveryConfigurationRequest)(nil)).Elem()
}

func (i ReplicationGroupLogDeliveryConfigurationRequestArray) ToReplicationGroupLogDeliveryConfigurationRequestArrayOutput() ReplicationGroupLogDeliveryConfigurationRequestArrayOutput {
	return i.ToReplicationGroupLogDeliveryConfigurationRequestArrayOutputWithContext(context.Background())
}

func (i ReplicationGroupLogDeliveryConfigurationRequestArray) ToReplicationGroupLogDeliveryConfigurationRequestArrayOutputWithContext(ctx context.Context) ReplicationGroupLogDeliveryConfigurationRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupLogDeliveryConfigurationRequestArrayOutput)
}

func (i ReplicationGroupLogDeliveryConfigurationRequestArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationGroupLogDeliveryConfigurationRequest] {
	return pulumix.Output[[]ReplicationGroupLogDeliveryConfigurationRequest]{
		OutputState: i.ToReplicationGroupLogDeliveryConfigurationRequestArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationGroupLogDeliveryConfigurationRequestOutput struct{ *pulumi.OutputState }

func (ReplicationGroupLogDeliveryConfigurationRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupLogDeliveryConfigurationRequest)(nil)).Elem()
}

func (o ReplicationGroupLogDeliveryConfigurationRequestOutput) ToReplicationGroupLogDeliveryConfigurationRequestOutput() ReplicationGroupLogDeliveryConfigurationRequestOutput {
	return o
}

func (o ReplicationGroupLogDeliveryConfigurationRequestOutput) ToReplicationGroupLogDeliveryConfigurationRequestOutputWithContext(ctx context.Context) ReplicationGroupLogDeliveryConfigurationRequestOutput {
	return o
}

func (o ReplicationGroupLogDeliveryConfigurationRequestOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroupLogDeliveryConfigurationRequest] {
	return pulumix.Output[ReplicationGroupLogDeliveryConfigurationRequest]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationGroupLogDeliveryConfigurationRequestOutput) DestinationDetails() ReplicationGroupDestinationDetailsOutput {
	return o.ApplyT(func(v ReplicationGroupLogDeliveryConfigurationRequest) ReplicationGroupDestinationDetails {
		return v.DestinationDetails
	}).(ReplicationGroupDestinationDetailsOutput)
}

func (o ReplicationGroupLogDeliveryConfigurationRequestOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationGroupLogDeliveryConfigurationRequest) string { return v.DestinationType }).(pulumi.StringOutput)
}

func (o ReplicationGroupLogDeliveryConfigurationRequestOutput) LogFormat() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationGroupLogDeliveryConfigurationRequest) string { return v.LogFormat }).(pulumi.StringOutput)
}

func (o ReplicationGroupLogDeliveryConfigurationRequestOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationGroupLogDeliveryConfigurationRequest) string { return v.LogType }).(pulumi.StringOutput)
}

type ReplicationGroupLogDeliveryConfigurationRequestArrayOutput struct{ *pulumi.OutputState }

func (ReplicationGroupLogDeliveryConfigurationRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationGroupLogDeliveryConfigurationRequest)(nil)).Elem()
}

func (o ReplicationGroupLogDeliveryConfigurationRequestArrayOutput) ToReplicationGroupLogDeliveryConfigurationRequestArrayOutput() ReplicationGroupLogDeliveryConfigurationRequestArrayOutput {
	return o
}

func (o ReplicationGroupLogDeliveryConfigurationRequestArrayOutput) ToReplicationGroupLogDeliveryConfigurationRequestArrayOutputWithContext(ctx context.Context) ReplicationGroupLogDeliveryConfigurationRequestArrayOutput {
	return o
}

func (o ReplicationGroupLogDeliveryConfigurationRequestArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationGroupLogDeliveryConfigurationRequest] {
	return pulumix.Output[[]ReplicationGroupLogDeliveryConfigurationRequest]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationGroupLogDeliveryConfigurationRequestArrayOutput) Index(i pulumi.IntInput) ReplicationGroupLogDeliveryConfigurationRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationGroupLogDeliveryConfigurationRequest {
		return vs[0].([]ReplicationGroupLogDeliveryConfigurationRequest)[vs[1].(int)]
	}).(ReplicationGroupLogDeliveryConfigurationRequestOutput)
}

type ReplicationGroupNodeGroupConfiguration struct {
	NodeGroupId              *string  `pulumi:"nodeGroupId"`
	PrimaryAvailabilityZone  *string  `pulumi:"primaryAvailabilityZone"`
	ReplicaAvailabilityZones []string `pulumi:"replicaAvailabilityZones"`
	ReplicaCount             *int     `pulumi:"replicaCount"`
	Slots                    *string  `pulumi:"slots"`
}

// ReplicationGroupNodeGroupConfigurationInput is an input type that accepts ReplicationGroupNodeGroupConfigurationArgs and ReplicationGroupNodeGroupConfigurationOutput values.
// You can construct a concrete instance of `ReplicationGroupNodeGroupConfigurationInput` via:
//
//	ReplicationGroupNodeGroupConfigurationArgs{...}
type ReplicationGroupNodeGroupConfigurationInput interface {
	pulumi.Input

	ToReplicationGroupNodeGroupConfigurationOutput() ReplicationGroupNodeGroupConfigurationOutput
	ToReplicationGroupNodeGroupConfigurationOutputWithContext(context.Context) ReplicationGroupNodeGroupConfigurationOutput
}

type ReplicationGroupNodeGroupConfigurationArgs struct {
	NodeGroupId              pulumi.StringPtrInput   `pulumi:"nodeGroupId"`
	PrimaryAvailabilityZone  pulumi.StringPtrInput   `pulumi:"primaryAvailabilityZone"`
	ReplicaAvailabilityZones pulumi.StringArrayInput `pulumi:"replicaAvailabilityZones"`
	ReplicaCount             pulumi.IntPtrInput      `pulumi:"replicaCount"`
	Slots                    pulumi.StringPtrInput   `pulumi:"slots"`
}

func (ReplicationGroupNodeGroupConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupNodeGroupConfiguration)(nil)).Elem()
}

func (i ReplicationGroupNodeGroupConfigurationArgs) ToReplicationGroupNodeGroupConfigurationOutput() ReplicationGroupNodeGroupConfigurationOutput {
	return i.ToReplicationGroupNodeGroupConfigurationOutputWithContext(context.Background())
}

func (i ReplicationGroupNodeGroupConfigurationArgs) ToReplicationGroupNodeGroupConfigurationOutputWithContext(ctx context.Context) ReplicationGroupNodeGroupConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupNodeGroupConfigurationOutput)
}

func (i ReplicationGroupNodeGroupConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroupNodeGroupConfiguration] {
	return pulumix.Output[ReplicationGroupNodeGroupConfiguration]{
		OutputState: i.ToReplicationGroupNodeGroupConfigurationOutputWithContext(ctx).OutputState,
	}
}

// ReplicationGroupNodeGroupConfigurationArrayInput is an input type that accepts ReplicationGroupNodeGroupConfigurationArray and ReplicationGroupNodeGroupConfigurationArrayOutput values.
// You can construct a concrete instance of `ReplicationGroupNodeGroupConfigurationArrayInput` via:
//
//	ReplicationGroupNodeGroupConfigurationArray{ ReplicationGroupNodeGroupConfigurationArgs{...} }
type ReplicationGroupNodeGroupConfigurationArrayInput interface {
	pulumi.Input

	ToReplicationGroupNodeGroupConfigurationArrayOutput() ReplicationGroupNodeGroupConfigurationArrayOutput
	ToReplicationGroupNodeGroupConfigurationArrayOutputWithContext(context.Context) ReplicationGroupNodeGroupConfigurationArrayOutput
}

type ReplicationGroupNodeGroupConfigurationArray []ReplicationGroupNodeGroupConfigurationInput

func (ReplicationGroupNodeGroupConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationGroupNodeGroupConfiguration)(nil)).Elem()
}

func (i ReplicationGroupNodeGroupConfigurationArray) ToReplicationGroupNodeGroupConfigurationArrayOutput() ReplicationGroupNodeGroupConfigurationArrayOutput {
	return i.ToReplicationGroupNodeGroupConfigurationArrayOutputWithContext(context.Background())
}

func (i ReplicationGroupNodeGroupConfigurationArray) ToReplicationGroupNodeGroupConfigurationArrayOutputWithContext(ctx context.Context) ReplicationGroupNodeGroupConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupNodeGroupConfigurationArrayOutput)
}

func (i ReplicationGroupNodeGroupConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationGroupNodeGroupConfiguration] {
	return pulumix.Output[[]ReplicationGroupNodeGroupConfiguration]{
		OutputState: i.ToReplicationGroupNodeGroupConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationGroupNodeGroupConfigurationOutput struct{ *pulumi.OutputState }

func (ReplicationGroupNodeGroupConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupNodeGroupConfiguration)(nil)).Elem()
}

func (o ReplicationGroupNodeGroupConfigurationOutput) ToReplicationGroupNodeGroupConfigurationOutput() ReplicationGroupNodeGroupConfigurationOutput {
	return o
}

func (o ReplicationGroupNodeGroupConfigurationOutput) ToReplicationGroupNodeGroupConfigurationOutputWithContext(ctx context.Context) ReplicationGroupNodeGroupConfigurationOutput {
	return o
}

func (o ReplicationGroupNodeGroupConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroupNodeGroupConfiguration] {
	return pulumix.Output[ReplicationGroupNodeGroupConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationGroupNodeGroupConfigurationOutput) NodeGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationGroupNodeGroupConfiguration) *string { return v.NodeGroupId }).(pulumi.StringPtrOutput)
}

func (o ReplicationGroupNodeGroupConfigurationOutput) PrimaryAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationGroupNodeGroupConfiguration) *string { return v.PrimaryAvailabilityZone }).(pulumi.StringPtrOutput)
}

func (o ReplicationGroupNodeGroupConfigurationOutput) ReplicaAvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicationGroupNodeGroupConfiguration) []string { return v.ReplicaAvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o ReplicationGroupNodeGroupConfigurationOutput) ReplicaCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReplicationGroupNodeGroupConfiguration) *int { return v.ReplicaCount }).(pulumi.IntPtrOutput)
}

func (o ReplicationGroupNodeGroupConfigurationOutput) Slots() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationGroupNodeGroupConfiguration) *string { return v.Slots }).(pulumi.StringPtrOutput)
}

type ReplicationGroupNodeGroupConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ReplicationGroupNodeGroupConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationGroupNodeGroupConfiguration)(nil)).Elem()
}

func (o ReplicationGroupNodeGroupConfigurationArrayOutput) ToReplicationGroupNodeGroupConfigurationArrayOutput() ReplicationGroupNodeGroupConfigurationArrayOutput {
	return o
}

func (o ReplicationGroupNodeGroupConfigurationArrayOutput) ToReplicationGroupNodeGroupConfigurationArrayOutputWithContext(ctx context.Context) ReplicationGroupNodeGroupConfigurationArrayOutput {
	return o
}

func (o ReplicationGroupNodeGroupConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationGroupNodeGroupConfiguration] {
	return pulumix.Output[[]ReplicationGroupNodeGroupConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationGroupNodeGroupConfigurationArrayOutput) Index(i pulumi.IntInput) ReplicationGroupNodeGroupConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationGroupNodeGroupConfiguration {
		return vs[0].([]ReplicationGroupNodeGroupConfiguration)[vs[1].(int)]
	}).(ReplicationGroupNodeGroupConfigurationOutput)
}

type ReplicationGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ReplicationGroupTagInput is an input type that accepts ReplicationGroupTagArgs and ReplicationGroupTagOutput values.
// You can construct a concrete instance of `ReplicationGroupTagInput` via:
//
//	ReplicationGroupTagArgs{...}
type ReplicationGroupTagInput interface {
	pulumi.Input

	ToReplicationGroupTagOutput() ReplicationGroupTagOutput
	ToReplicationGroupTagOutputWithContext(context.Context) ReplicationGroupTagOutput
}

type ReplicationGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ReplicationGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupTag)(nil)).Elem()
}

func (i ReplicationGroupTagArgs) ToReplicationGroupTagOutput() ReplicationGroupTagOutput {
	return i.ToReplicationGroupTagOutputWithContext(context.Background())
}

func (i ReplicationGroupTagArgs) ToReplicationGroupTagOutputWithContext(ctx context.Context) ReplicationGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupTagOutput)
}

func (i ReplicationGroupTagArgs) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroupTag] {
	return pulumix.Output[ReplicationGroupTag]{
		OutputState: i.ToReplicationGroupTagOutputWithContext(ctx).OutputState,
	}
}

// ReplicationGroupTagArrayInput is an input type that accepts ReplicationGroupTagArray and ReplicationGroupTagArrayOutput values.
// You can construct a concrete instance of `ReplicationGroupTagArrayInput` via:
//
//	ReplicationGroupTagArray{ ReplicationGroupTagArgs{...} }
type ReplicationGroupTagArrayInput interface {
	pulumi.Input

	ToReplicationGroupTagArrayOutput() ReplicationGroupTagArrayOutput
	ToReplicationGroupTagArrayOutputWithContext(context.Context) ReplicationGroupTagArrayOutput
}

type ReplicationGroupTagArray []ReplicationGroupTagInput

func (ReplicationGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationGroupTag)(nil)).Elem()
}

func (i ReplicationGroupTagArray) ToReplicationGroupTagArrayOutput() ReplicationGroupTagArrayOutput {
	return i.ToReplicationGroupTagArrayOutputWithContext(context.Background())
}

func (i ReplicationGroupTagArray) ToReplicationGroupTagArrayOutputWithContext(ctx context.Context) ReplicationGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationGroupTagArrayOutput)
}

func (i ReplicationGroupTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationGroupTag] {
	return pulumix.Output[[]ReplicationGroupTag]{
		OutputState: i.ToReplicationGroupTagArrayOutputWithContext(ctx).OutputState,
	}
}

type ReplicationGroupTagOutput struct{ *pulumi.OutputState }

func (ReplicationGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationGroupTag)(nil)).Elem()
}

func (o ReplicationGroupTagOutput) ToReplicationGroupTagOutput() ReplicationGroupTagOutput {
	return o
}

func (o ReplicationGroupTagOutput) ToReplicationGroupTagOutputWithContext(ctx context.Context) ReplicationGroupTagOutput {
	return o
}

func (o ReplicationGroupTagOutput) ToOutput(ctx context.Context) pulumix.Output[ReplicationGroupTag] {
	return pulumix.Output[ReplicationGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ReplicationGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type ReplicationGroupTagArrayOutput struct{ *pulumi.OutputState }

func (ReplicationGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationGroupTag)(nil)).Elem()
}

func (o ReplicationGroupTagArrayOutput) ToReplicationGroupTagArrayOutput() ReplicationGroupTagArrayOutput {
	return o
}

func (o ReplicationGroupTagArrayOutput) ToReplicationGroupTagArrayOutputWithContext(ctx context.Context) ReplicationGroupTagArrayOutput {
	return o
}

func (o ReplicationGroupTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ReplicationGroupTag] {
	return pulumix.Output[[]ReplicationGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o ReplicationGroupTagArrayOutput) Index(i pulumi.IntInput) ReplicationGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationGroupTag {
		return vs[0].([]ReplicationGroupTag)[vs[1].(int)]
	}).(ReplicationGroupTagOutput)
}

type SecurityGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// SecurityGroupTagInput is an input type that accepts SecurityGroupTagArgs and SecurityGroupTagOutput values.
// You can construct a concrete instance of `SecurityGroupTagInput` via:
//
//	SecurityGroupTagArgs{...}
type SecurityGroupTagInput interface {
	pulumi.Input

	ToSecurityGroupTagOutput() SecurityGroupTagOutput
	ToSecurityGroupTagOutputWithContext(context.Context) SecurityGroupTagOutput
}

type SecurityGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (SecurityGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupTag)(nil)).Elem()
}

func (i SecurityGroupTagArgs) ToSecurityGroupTagOutput() SecurityGroupTagOutput {
	return i.ToSecurityGroupTagOutputWithContext(context.Background())
}

func (i SecurityGroupTagArgs) ToSecurityGroupTagOutputWithContext(ctx context.Context) SecurityGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupTagOutput)
}

func (i SecurityGroupTagArgs) ToOutput(ctx context.Context) pulumix.Output[SecurityGroupTag] {
	return pulumix.Output[SecurityGroupTag]{
		OutputState: i.ToSecurityGroupTagOutputWithContext(ctx).OutputState,
	}
}

// SecurityGroupTagArrayInput is an input type that accepts SecurityGroupTagArray and SecurityGroupTagArrayOutput values.
// You can construct a concrete instance of `SecurityGroupTagArrayInput` via:
//
//	SecurityGroupTagArray{ SecurityGroupTagArgs{...} }
type SecurityGroupTagArrayInput interface {
	pulumi.Input

	ToSecurityGroupTagArrayOutput() SecurityGroupTagArrayOutput
	ToSecurityGroupTagArrayOutputWithContext(context.Context) SecurityGroupTagArrayOutput
}

type SecurityGroupTagArray []SecurityGroupTagInput

func (SecurityGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupTag)(nil)).Elem()
}

func (i SecurityGroupTagArray) ToSecurityGroupTagArrayOutput() SecurityGroupTagArrayOutput {
	return i.ToSecurityGroupTagArrayOutputWithContext(context.Background())
}

func (i SecurityGroupTagArray) ToSecurityGroupTagArrayOutputWithContext(ctx context.Context) SecurityGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupTagArrayOutput)
}

func (i SecurityGroupTagArray) ToOutput(ctx context.Context) pulumix.Output[[]SecurityGroupTag] {
	return pulumix.Output[[]SecurityGroupTag]{
		OutputState: i.ToSecurityGroupTagArrayOutputWithContext(ctx).OutputState,
	}
}

type SecurityGroupTagOutput struct{ *pulumi.OutputState }

func (SecurityGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroupTag)(nil)).Elem()
}

func (o SecurityGroupTagOutput) ToSecurityGroupTagOutput() SecurityGroupTagOutput {
	return o
}

func (o SecurityGroupTagOutput) ToSecurityGroupTagOutputWithContext(ctx context.Context) SecurityGroupTagOutput {
	return o
}

func (o SecurityGroupTagOutput) ToOutput(ctx context.Context) pulumix.Output[SecurityGroupTag] {
	return pulumix.Output[SecurityGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o SecurityGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o SecurityGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SecurityGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type SecurityGroupTagArrayOutput struct{ *pulumi.OutputState }

func (SecurityGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SecurityGroupTag)(nil)).Elem()
}

func (o SecurityGroupTagArrayOutput) ToSecurityGroupTagArrayOutput() SecurityGroupTagArrayOutput {
	return o
}

func (o SecurityGroupTagArrayOutput) ToSecurityGroupTagArrayOutputWithContext(ctx context.Context) SecurityGroupTagArrayOutput {
	return o
}

func (o SecurityGroupTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SecurityGroupTag] {
	return pulumix.Output[[]SecurityGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o SecurityGroupTagArrayOutput) Index(i pulumi.IntInput) SecurityGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SecurityGroupTag {
		return vs[0].([]SecurityGroupTag)[vs[1].(int)]
	}).(SecurityGroupTagOutput)
}

// The cache capacity limit of the Serverless Cache.
type ServerlessCacheCacheUsageLimits struct {
	DataStorage   *ServerlessCacheDataStorage   `pulumi:"dataStorage"`
	EcpuPerSecond *ServerlessCacheEcpuPerSecond `pulumi:"ecpuPerSecond"`
}

// ServerlessCacheCacheUsageLimitsInput is an input type that accepts ServerlessCacheCacheUsageLimitsArgs and ServerlessCacheCacheUsageLimitsOutput values.
// You can construct a concrete instance of `ServerlessCacheCacheUsageLimitsInput` via:
//
//	ServerlessCacheCacheUsageLimitsArgs{...}
type ServerlessCacheCacheUsageLimitsInput interface {
	pulumi.Input

	ToServerlessCacheCacheUsageLimitsOutput() ServerlessCacheCacheUsageLimitsOutput
	ToServerlessCacheCacheUsageLimitsOutputWithContext(context.Context) ServerlessCacheCacheUsageLimitsOutput
}

// The cache capacity limit of the Serverless Cache.
type ServerlessCacheCacheUsageLimitsArgs struct {
	DataStorage   ServerlessCacheDataStoragePtrInput   `pulumi:"dataStorage"`
	EcpuPerSecond ServerlessCacheEcpuPerSecondPtrInput `pulumi:"ecpuPerSecond"`
}

func (ServerlessCacheCacheUsageLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessCacheCacheUsageLimits)(nil)).Elem()
}

func (i ServerlessCacheCacheUsageLimitsArgs) ToServerlessCacheCacheUsageLimitsOutput() ServerlessCacheCacheUsageLimitsOutput {
	return i.ToServerlessCacheCacheUsageLimitsOutputWithContext(context.Background())
}

func (i ServerlessCacheCacheUsageLimitsArgs) ToServerlessCacheCacheUsageLimitsOutputWithContext(ctx context.Context) ServerlessCacheCacheUsageLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheCacheUsageLimitsOutput)
}

func (i ServerlessCacheCacheUsageLimitsArgs) ToOutput(ctx context.Context) pulumix.Output[ServerlessCacheCacheUsageLimits] {
	return pulumix.Output[ServerlessCacheCacheUsageLimits]{
		OutputState: i.ToServerlessCacheCacheUsageLimitsOutputWithContext(ctx).OutputState,
	}
}

func (i ServerlessCacheCacheUsageLimitsArgs) ToServerlessCacheCacheUsageLimitsPtrOutput() ServerlessCacheCacheUsageLimitsPtrOutput {
	return i.ToServerlessCacheCacheUsageLimitsPtrOutputWithContext(context.Background())
}

func (i ServerlessCacheCacheUsageLimitsArgs) ToServerlessCacheCacheUsageLimitsPtrOutputWithContext(ctx context.Context) ServerlessCacheCacheUsageLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheCacheUsageLimitsOutput).ToServerlessCacheCacheUsageLimitsPtrOutputWithContext(ctx)
}

// ServerlessCacheCacheUsageLimitsPtrInput is an input type that accepts ServerlessCacheCacheUsageLimitsArgs, ServerlessCacheCacheUsageLimitsPtr and ServerlessCacheCacheUsageLimitsPtrOutput values.
// You can construct a concrete instance of `ServerlessCacheCacheUsageLimitsPtrInput` via:
//
//	        ServerlessCacheCacheUsageLimitsArgs{...}
//
//	or:
//
//	        nil
type ServerlessCacheCacheUsageLimitsPtrInput interface {
	pulumi.Input

	ToServerlessCacheCacheUsageLimitsPtrOutput() ServerlessCacheCacheUsageLimitsPtrOutput
	ToServerlessCacheCacheUsageLimitsPtrOutputWithContext(context.Context) ServerlessCacheCacheUsageLimitsPtrOutput
}

type serverlessCacheCacheUsageLimitsPtrType ServerlessCacheCacheUsageLimitsArgs

func ServerlessCacheCacheUsageLimitsPtr(v *ServerlessCacheCacheUsageLimitsArgs) ServerlessCacheCacheUsageLimitsPtrInput {
	return (*serverlessCacheCacheUsageLimitsPtrType)(v)
}

func (*serverlessCacheCacheUsageLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessCacheCacheUsageLimits)(nil)).Elem()
}

func (i *serverlessCacheCacheUsageLimitsPtrType) ToServerlessCacheCacheUsageLimitsPtrOutput() ServerlessCacheCacheUsageLimitsPtrOutput {
	return i.ToServerlessCacheCacheUsageLimitsPtrOutputWithContext(context.Background())
}

func (i *serverlessCacheCacheUsageLimitsPtrType) ToServerlessCacheCacheUsageLimitsPtrOutputWithContext(ctx context.Context) ServerlessCacheCacheUsageLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheCacheUsageLimitsPtrOutput)
}

func (i *serverlessCacheCacheUsageLimitsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ServerlessCacheCacheUsageLimits] {
	return pulumix.Output[*ServerlessCacheCacheUsageLimits]{
		OutputState: i.ToServerlessCacheCacheUsageLimitsPtrOutputWithContext(ctx).OutputState,
	}
}

// The cache capacity limit of the Serverless Cache.
type ServerlessCacheCacheUsageLimitsOutput struct{ *pulumi.OutputState }

func (ServerlessCacheCacheUsageLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessCacheCacheUsageLimits)(nil)).Elem()
}

func (o ServerlessCacheCacheUsageLimitsOutput) ToServerlessCacheCacheUsageLimitsOutput() ServerlessCacheCacheUsageLimitsOutput {
	return o
}

func (o ServerlessCacheCacheUsageLimitsOutput) ToServerlessCacheCacheUsageLimitsOutputWithContext(ctx context.Context) ServerlessCacheCacheUsageLimitsOutput {
	return o
}

func (o ServerlessCacheCacheUsageLimitsOutput) ToServerlessCacheCacheUsageLimitsPtrOutput() ServerlessCacheCacheUsageLimitsPtrOutput {
	return o.ToServerlessCacheCacheUsageLimitsPtrOutputWithContext(context.Background())
}

func (o ServerlessCacheCacheUsageLimitsOutput) ToServerlessCacheCacheUsageLimitsPtrOutputWithContext(ctx context.Context) ServerlessCacheCacheUsageLimitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerlessCacheCacheUsageLimits) *ServerlessCacheCacheUsageLimits {
		return &v
	}).(ServerlessCacheCacheUsageLimitsPtrOutput)
}

func (o ServerlessCacheCacheUsageLimitsOutput) ToOutput(ctx context.Context) pulumix.Output[ServerlessCacheCacheUsageLimits] {
	return pulumix.Output[ServerlessCacheCacheUsageLimits]{
		OutputState: o.OutputState,
	}
}

func (o ServerlessCacheCacheUsageLimitsOutput) DataStorage() ServerlessCacheDataStoragePtrOutput {
	return o.ApplyT(func(v ServerlessCacheCacheUsageLimits) *ServerlessCacheDataStorage { return v.DataStorage }).(ServerlessCacheDataStoragePtrOutput)
}

func (o ServerlessCacheCacheUsageLimitsOutput) EcpuPerSecond() ServerlessCacheEcpuPerSecondPtrOutput {
	return o.ApplyT(func(v ServerlessCacheCacheUsageLimits) *ServerlessCacheEcpuPerSecond { return v.EcpuPerSecond }).(ServerlessCacheEcpuPerSecondPtrOutput)
}

type ServerlessCacheCacheUsageLimitsPtrOutput struct{ *pulumi.OutputState }

func (ServerlessCacheCacheUsageLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessCacheCacheUsageLimits)(nil)).Elem()
}

func (o ServerlessCacheCacheUsageLimitsPtrOutput) ToServerlessCacheCacheUsageLimitsPtrOutput() ServerlessCacheCacheUsageLimitsPtrOutput {
	return o
}

func (o ServerlessCacheCacheUsageLimitsPtrOutput) ToServerlessCacheCacheUsageLimitsPtrOutputWithContext(ctx context.Context) ServerlessCacheCacheUsageLimitsPtrOutput {
	return o
}

func (o ServerlessCacheCacheUsageLimitsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ServerlessCacheCacheUsageLimits] {
	return pulumix.Output[*ServerlessCacheCacheUsageLimits]{
		OutputState: o.OutputState,
	}
}

func (o ServerlessCacheCacheUsageLimitsPtrOutput) Elem() ServerlessCacheCacheUsageLimitsOutput {
	return o.ApplyT(func(v *ServerlessCacheCacheUsageLimits) ServerlessCacheCacheUsageLimits {
		if v != nil {
			return *v
		}
		var ret ServerlessCacheCacheUsageLimits
		return ret
	}).(ServerlessCacheCacheUsageLimitsOutput)
}

func (o ServerlessCacheCacheUsageLimitsPtrOutput) DataStorage() ServerlessCacheDataStoragePtrOutput {
	return o.ApplyT(func(v *ServerlessCacheCacheUsageLimits) *ServerlessCacheDataStorage {
		if v == nil {
			return nil
		}
		return v.DataStorage
	}).(ServerlessCacheDataStoragePtrOutput)
}

func (o ServerlessCacheCacheUsageLimitsPtrOutput) EcpuPerSecond() ServerlessCacheEcpuPerSecondPtrOutput {
	return o.ApplyT(func(v *ServerlessCacheCacheUsageLimits) *ServerlessCacheEcpuPerSecond {
		if v == nil {
			return nil
		}
		return v.EcpuPerSecond
	}).(ServerlessCacheEcpuPerSecondPtrOutput)
}

// The cached data capacity of the Serverless Cache.
type ServerlessCacheDataStorage struct {
	// The maximum cached data capacity of the Serverless Cache.
	Maximum int `pulumi:"maximum"`
	// The unix of cached data capacity of the Serverless Cache.
	Unit ServerlessCacheDataStorageUnit `pulumi:"unit"`
}

// ServerlessCacheDataStorageInput is an input type that accepts ServerlessCacheDataStorageArgs and ServerlessCacheDataStorageOutput values.
// You can construct a concrete instance of `ServerlessCacheDataStorageInput` via:
//
//	ServerlessCacheDataStorageArgs{...}
type ServerlessCacheDataStorageInput interface {
	pulumi.Input

	ToServerlessCacheDataStorageOutput() ServerlessCacheDataStorageOutput
	ToServerlessCacheDataStorageOutputWithContext(context.Context) ServerlessCacheDataStorageOutput
}

// The cached data capacity of the Serverless Cache.
type ServerlessCacheDataStorageArgs struct {
	// The maximum cached data capacity of the Serverless Cache.
	Maximum pulumi.IntInput `pulumi:"maximum"`
	// The unix of cached data capacity of the Serverless Cache.
	Unit ServerlessCacheDataStorageUnitInput `pulumi:"unit"`
}

func (ServerlessCacheDataStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessCacheDataStorage)(nil)).Elem()
}

func (i ServerlessCacheDataStorageArgs) ToServerlessCacheDataStorageOutput() ServerlessCacheDataStorageOutput {
	return i.ToServerlessCacheDataStorageOutputWithContext(context.Background())
}

func (i ServerlessCacheDataStorageArgs) ToServerlessCacheDataStorageOutputWithContext(ctx context.Context) ServerlessCacheDataStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheDataStorageOutput)
}

func (i ServerlessCacheDataStorageArgs) ToOutput(ctx context.Context) pulumix.Output[ServerlessCacheDataStorage] {
	return pulumix.Output[ServerlessCacheDataStorage]{
		OutputState: i.ToServerlessCacheDataStorageOutputWithContext(ctx).OutputState,
	}
}

func (i ServerlessCacheDataStorageArgs) ToServerlessCacheDataStoragePtrOutput() ServerlessCacheDataStoragePtrOutput {
	return i.ToServerlessCacheDataStoragePtrOutputWithContext(context.Background())
}

func (i ServerlessCacheDataStorageArgs) ToServerlessCacheDataStoragePtrOutputWithContext(ctx context.Context) ServerlessCacheDataStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheDataStorageOutput).ToServerlessCacheDataStoragePtrOutputWithContext(ctx)
}

// ServerlessCacheDataStoragePtrInput is an input type that accepts ServerlessCacheDataStorageArgs, ServerlessCacheDataStoragePtr and ServerlessCacheDataStoragePtrOutput values.
// You can construct a concrete instance of `ServerlessCacheDataStoragePtrInput` via:
//
//	        ServerlessCacheDataStorageArgs{...}
//
//	or:
//
//	        nil
type ServerlessCacheDataStoragePtrInput interface {
	pulumi.Input

	ToServerlessCacheDataStoragePtrOutput() ServerlessCacheDataStoragePtrOutput
	ToServerlessCacheDataStoragePtrOutputWithContext(context.Context) ServerlessCacheDataStoragePtrOutput
}

type serverlessCacheDataStoragePtrType ServerlessCacheDataStorageArgs

func ServerlessCacheDataStoragePtr(v *ServerlessCacheDataStorageArgs) ServerlessCacheDataStoragePtrInput {
	return (*serverlessCacheDataStoragePtrType)(v)
}

func (*serverlessCacheDataStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessCacheDataStorage)(nil)).Elem()
}

func (i *serverlessCacheDataStoragePtrType) ToServerlessCacheDataStoragePtrOutput() ServerlessCacheDataStoragePtrOutput {
	return i.ToServerlessCacheDataStoragePtrOutputWithContext(context.Background())
}

func (i *serverlessCacheDataStoragePtrType) ToServerlessCacheDataStoragePtrOutputWithContext(ctx context.Context) ServerlessCacheDataStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheDataStoragePtrOutput)
}

func (i *serverlessCacheDataStoragePtrType) ToOutput(ctx context.Context) pulumix.Output[*ServerlessCacheDataStorage] {
	return pulumix.Output[*ServerlessCacheDataStorage]{
		OutputState: i.ToServerlessCacheDataStoragePtrOutputWithContext(ctx).OutputState,
	}
}

// The cached data capacity of the Serverless Cache.
type ServerlessCacheDataStorageOutput struct{ *pulumi.OutputState }

func (ServerlessCacheDataStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessCacheDataStorage)(nil)).Elem()
}

func (o ServerlessCacheDataStorageOutput) ToServerlessCacheDataStorageOutput() ServerlessCacheDataStorageOutput {
	return o
}

func (o ServerlessCacheDataStorageOutput) ToServerlessCacheDataStorageOutputWithContext(ctx context.Context) ServerlessCacheDataStorageOutput {
	return o
}

func (o ServerlessCacheDataStorageOutput) ToServerlessCacheDataStoragePtrOutput() ServerlessCacheDataStoragePtrOutput {
	return o.ToServerlessCacheDataStoragePtrOutputWithContext(context.Background())
}

func (o ServerlessCacheDataStorageOutput) ToServerlessCacheDataStoragePtrOutputWithContext(ctx context.Context) ServerlessCacheDataStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerlessCacheDataStorage) *ServerlessCacheDataStorage {
		return &v
	}).(ServerlessCacheDataStoragePtrOutput)
}

func (o ServerlessCacheDataStorageOutput) ToOutput(ctx context.Context) pulumix.Output[ServerlessCacheDataStorage] {
	return pulumix.Output[ServerlessCacheDataStorage]{
		OutputState: o.OutputState,
	}
}

// The maximum cached data capacity of the Serverless Cache.
func (o ServerlessCacheDataStorageOutput) Maximum() pulumi.IntOutput {
	return o.ApplyT(func(v ServerlessCacheDataStorage) int { return v.Maximum }).(pulumi.IntOutput)
}

// The unix of cached data capacity of the Serverless Cache.
func (o ServerlessCacheDataStorageOutput) Unit() ServerlessCacheDataStorageUnitOutput {
	return o.ApplyT(func(v ServerlessCacheDataStorage) ServerlessCacheDataStorageUnit { return v.Unit }).(ServerlessCacheDataStorageUnitOutput)
}

type ServerlessCacheDataStoragePtrOutput struct{ *pulumi.OutputState }

func (ServerlessCacheDataStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessCacheDataStorage)(nil)).Elem()
}

func (o ServerlessCacheDataStoragePtrOutput) ToServerlessCacheDataStoragePtrOutput() ServerlessCacheDataStoragePtrOutput {
	return o
}

func (o ServerlessCacheDataStoragePtrOutput) ToServerlessCacheDataStoragePtrOutputWithContext(ctx context.Context) ServerlessCacheDataStoragePtrOutput {
	return o
}

func (o ServerlessCacheDataStoragePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ServerlessCacheDataStorage] {
	return pulumix.Output[*ServerlessCacheDataStorage]{
		OutputState: o.OutputState,
	}
}

func (o ServerlessCacheDataStoragePtrOutput) Elem() ServerlessCacheDataStorageOutput {
	return o.ApplyT(func(v *ServerlessCacheDataStorage) ServerlessCacheDataStorage {
		if v != nil {
			return *v
		}
		var ret ServerlessCacheDataStorage
		return ret
	}).(ServerlessCacheDataStorageOutput)
}

// The maximum cached data capacity of the Serverless Cache.
func (o ServerlessCacheDataStoragePtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerlessCacheDataStorage) *int {
		if v == nil {
			return nil
		}
		return &v.Maximum
	}).(pulumi.IntPtrOutput)
}

// The unix of cached data capacity of the Serverless Cache.
func (o ServerlessCacheDataStoragePtrOutput) Unit() ServerlessCacheDataStorageUnitPtrOutput {
	return o.ApplyT(func(v *ServerlessCacheDataStorage) *ServerlessCacheDataStorageUnit {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(ServerlessCacheDataStorageUnitPtrOutput)
}

// The ECPU per second of the Serverless Cache.
type ServerlessCacheEcpuPerSecond struct {
	// The maximum ECPU per second of the Serverless Cache.
	Maximum int `pulumi:"maximum"`
}

// ServerlessCacheEcpuPerSecondInput is an input type that accepts ServerlessCacheEcpuPerSecondArgs and ServerlessCacheEcpuPerSecondOutput values.
// You can construct a concrete instance of `ServerlessCacheEcpuPerSecondInput` via:
//
//	ServerlessCacheEcpuPerSecondArgs{...}
type ServerlessCacheEcpuPerSecondInput interface {
	pulumi.Input

	ToServerlessCacheEcpuPerSecondOutput() ServerlessCacheEcpuPerSecondOutput
	ToServerlessCacheEcpuPerSecondOutputWithContext(context.Context) ServerlessCacheEcpuPerSecondOutput
}

// The ECPU per second of the Serverless Cache.
type ServerlessCacheEcpuPerSecondArgs struct {
	// The maximum ECPU per second of the Serverless Cache.
	Maximum pulumi.IntInput `pulumi:"maximum"`
}

func (ServerlessCacheEcpuPerSecondArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessCacheEcpuPerSecond)(nil)).Elem()
}

func (i ServerlessCacheEcpuPerSecondArgs) ToServerlessCacheEcpuPerSecondOutput() ServerlessCacheEcpuPerSecondOutput {
	return i.ToServerlessCacheEcpuPerSecondOutputWithContext(context.Background())
}

func (i ServerlessCacheEcpuPerSecondArgs) ToServerlessCacheEcpuPerSecondOutputWithContext(ctx context.Context) ServerlessCacheEcpuPerSecondOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheEcpuPerSecondOutput)
}

func (i ServerlessCacheEcpuPerSecondArgs) ToOutput(ctx context.Context) pulumix.Output[ServerlessCacheEcpuPerSecond] {
	return pulumix.Output[ServerlessCacheEcpuPerSecond]{
		OutputState: i.ToServerlessCacheEcpuPerSecondOutputWithContext(ctx).OutputState,
	}
}

func (i ServerlessCacheEcpuPerSecondArgs) ToServerlessCacheEcpuPerSecondPtrOutput() ServerlessCacheEcpuPerSecondPtrOutput {
	return i.ToServerlessCacheEcpuPerSecondPtrOutputWithContext(context.Background())
}

func (i ServerlessCacheEcpuPerSecondArgs) ToServerlessCacheEcpuPerSecondPtrOutputWithContext(ctx context.Context) ServerlessCacheEcpuPerSecondPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheEcpuPerSecondOutput).ToServerlessCacheEcpuPerSecondPtrOutputWithContext(ctx)
}

// ServerlessCacheEcpuPerSecondPtrInput is an input type that accepts ServerlessCacheEcpuPerSecondArgs, ServerlessCacheEcpuPerSecondPtr and ServerlessCacheEcpuPerSecondPtrOutput values.
// You can construct a concrete instance of `ServerlessCacheEcpuPerSecondPtrInput` via:
//
//	        ServerlessCacheEcpuPerSecondArgs{...}
//
//	or:
//
//	        nil
type ServerlessCacheEcpuPerSecondPtrInput interface {
	pulumi.Input

	ToServerlessCacheEcpuPerSecondPtrOutput() ServerlessCacheEcpuPerSecondPtrOutput
	ToServerlessCacheEcpuPerSecondPtrOutputWithContext(context.Context) ServerlessCacheEcpuPerSecondPtrOutput
}

type serverlessCacheEcpuPerSecondPtrType ServerlessCacheEcpuPerSecondArgs

func ServerlessCacheEcpuPerSecondPtr(v *ServerlessCacheEcpuPerSecondArgs) ServerlessCacheEcpuPerSecondPtrInput {
	return (*serverlessCacheEcpuPerSecondPtrType)(v)
}

func (*serverlessCacheEcpuPerSecondPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessCacheEcpuPerSecond)(nil)).Elem()
}

func (i *serverlessCacheEcpuPerSecondPtrType) ToServerlessCacheEcpuPerSecondPtrOutput() ServerlessCacheEcpuPerSecondPtrOutput {
	return i.ToServerlessCacheEcpuPerSecondPtrOutputWithContext(context.Background())
}

func (i *serverlessCacheEcpuPerSecondPtrType) ToServerlessCacheEcpuPerSecondPtrOutputWithContext(ctx context.Context) ServerlessCacheEcpuPerSecondPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheEcpuPerSecondPtrOutput)
}

func (i *serverlessCacheEcpuPerSecondPtrType) ToOutput(ctx context.Context) pulumix.Output[*ServerlessCacheEcpuPerSecond] {
	return pulumix.Output[*ServerlessCacheEcpuPerSecond]{
		OutputState: i.ToServerlessCacheEcpuPerSecondPtrOutputWithContext(ctx).OutputState,
	}
}

// The ECPU per second of the Serverless Cache.
type ServerlessCacheEcpuPerSecondOutput struct{ *pulumi.OutputState }

func (ServerlessCacheEcpuPerSecondOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessCacheEcpuPerSecond)(nil)).Elem()
}

func (o ServerlessCacheEcpuPerSecondOutput) ToServerlessCacheEcpuPerSecondOutput() ServerlessCacheEcpuPerSecondOutput {
	return o
}

func (o ServerlessCacheEcpuPerSecondOutput) ToServerlessCacheEcpuPerSecondOutputWithContext(ctx context.Context) ServerlessCacheEcpuPerSecondOutput {
	return o
}

func (o ServerlessCacheEcpuPerSecondOutput) ToServerlessCacheEcpuPerSecondPtrOutput() ServerlessCacheEcpuPerSecondPtrOutput {
	return o.ToServerlessCacheEcpuPerSecondPtrOutputWithContext(context.Background())
}

func (o ServerlessCacheEcpuPerSecondOutput) ToServerlessCacheEcpuPerSecondPtrOutputWithContext(ctx context.Context) ServerlessCacheEcpuPerSecondPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerlessCacheEcpuPerSecond) *ServerlessCacheEcpuPerSecond {
		return &v
	}).(ServerlessCacheEcpuPerSecondPtrOutput)
}

func (o ServerlessCacheEcpuPerSecondOutput) ToOutput(ctx context.Context) pulumix.Output[ServerlessCacheEcpuPerSecond] {
	return pulumix.Output[ServerlessCacheEcpuPerSecond]{
		OutputState: o.OutputState,
	}
}

// The maximum ECPU per second of the Serverless Cache.
func (o ServerlessCacheEcpuPerSecondOutput) Maximum() pulumi.IntOutput {
	return o.ApplyT(func(v ServerlessCacheEcpuPerSecond) int { return v.Maximum }).(pulumi.IntOutput)
}

type ServerlessCacheEcpuPerSecondPtrOutput struct{ *pulumi.OutputState }

func (ServerlessCacheEcpuPerSecondPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessCacheEcpuPerSecond)(nil)).Elem()
}

func (o ServerlessCacheEcpuPerSecondPtrOutput) ToServerlessCacheEcpuPerSecondPtrOutput() ServerlessCacheEcpuPerSecondPtrOutput {
	return o
}

func (o ServerlessCacheEcpuPerSecondPtrOutput) ToServerlessCacheEcpuPerSecondPtrOutputWithContext(ctx context.Context) ServerlessCacheEcpuPerSecondPtrOutput {
	return o
}

func (o ServerlessCacheEcpuPerSecondPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ServerlessCacheEcpuPerSecond] {
	return pulumix.Output[*ServerlessCacheEcpuPerSecond]{
		OutputState: o.OutputState,
	}
}

func (o ServerlessCacheEcpuPerSecondPtrOutput) Elem() ServerlessCacheEcpuPerSecondOutput {
	return o.ApplyT(func(v *ServerlessCacheEcpuPerSecond) ServerlessCacheEcpuPerSecond {
		if v != nil {
			return *v
		}
		var ret ServerlessCacheEcpuPerSecond
		return ret
	}).(ServerlessCacheEcpuPerSecondOutput)
}

// The maximum ECPU per second of the Serverless Cache.
func (o ServerlessCacheEcpuPerSecondPtrOutput) Maximum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerlessCacheEcpuPerSecond) *int {
		if v == nil {
			return nil
		}
		return &v.Maximum
	}).(pulumi.IntPtrOutput)
}

// The address and the port.
type ServerlessCacheEndpoint struct {
	// Endpoint address.
	Address *string `pulumi:"address"`
	// Endpoint port.
	Port *int `pulumi:"port"`
}

// ServerlessCacheEndpointInput is an input type that accepts ServerlessCacheEndpointArgs and ServerlessCacheEndpointOutput values.
// You can construct a concrete instance of `ServerlessCacheEndpointInput` via:
//
//	ServerlessCacheEndpointArgs{...}
type ServerlessCacheEndpointInput interface {
	pulumi.Input

	ToServerlessCacheEndpointOutput() ServerlessCacheEndpointOutput
	ToServerlessCacheEndpointOutputWithContext(context.Context) ServerlessCacheEndpointOutput
}

// The address and the port.
type ServerlessCacheEndpointArgs struct {
	// Endpoint address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Endpoint port.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ServerlessCacheEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessCacheEndpoint)(nil)).Elem()
}

func (i ServerlessCacheEndpointArgs) ToServerlessCacheEndpointOutput() ServerlessCacheEndpointOutput {
	return i.ToServerlessCacheEndpointOutputWithContext(context.Background())
}

func (i ServerlessCacheEndpointArgs) ToServerlessCacheEndpointOutputWithContext(ctx context.Context) ServerlessCacheEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheEndpointOutput)
}

func (i ServerlessCacheEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[ServerlessCacheEndpoint] {
	return pulumix.Output[ServerlessCacheEndpoint]{
		OutputState: i.ToServerlessCacheEndpointOutputWithContext(ctx).OutputState,
	}
}

func (i ServerlessCacheEndpointArgs) ToServerlessCacheEndpointPtrOutput() ServerlessCacheEndpointPtrOutput {
	return i.ToServerlessCacheEndpointPtrOutputWithContext(context.Background())
}

func (i ServerlessCacheEndpointArgs) ToServerlessCacheEndpointPtrOutputWithContext(ctx context.Context) ServerlessCacheEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheEndpointOutput).ToServerlessCacheEndpointPtrOutputWithContext(ctx)
}

// ServerlessCacheEndpointPtrInput is an input type that accepts ServerlessCacheEndpointArgs, ServerlessCacheEndpointPtr and ServerlessCacheEndpointPtrOutput values.
// You can construct a concrete instance of `ServerlessCacheEndpointPtrInput` via:
//
//	        ServerlessCacheEndpointArgs{...}
//
//	or:
//
//	        nil
type ServerlessCacheEndpointPtrInput interface {
	pulumi.Input

	ToServerlessCacheEndpointPtrOutput() ServerlessCacheEndpointPtrOutput
	ToServerlessCacheEndpointPtrOutputWithContext(context.Context) ServerlessCacheEndpointPtrOutput
}

type serverlessCacheEndpointPtrType ServerlessCacheEndpointArgs

func ServerlessCacheEndpointPtr(v *ServerlessCacheEndpointArgs) ServerlessCacheEndpointPtrInput {
	return (*serverlessCacheEndpointPtrType)(v)
}

func (*serverlessCacheEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessCacheEndpoint)(nil)).Elem()
}

func (i *serverlessCacheEndpointPtrType) ToServerlessCacheEndpointPtrOutput() ServerlessCacheEndpointPtrOutput {
	return i.ToServerlessCacheEndpointPtrOutputWithContext(context.Background())
}

func (i *serverlessCacheEndpointPtrType) ToServerlessCacheEndpointPtrOutputWithContext(ctx context.Context) ServerlessCacheEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheEndpointPtrOutput)
}

func (i *serverlessCacheEndpointPtrType) ToOutput(ctx context.Context) pulumix.Output[*ServerlessCacheEndpoint] {
	return pulumix.Output[*ServerlessCacheEndpoint]{
		OutputState: i.ToServerlessCacheEndpointPtrOutputWithContext(ctx).OutputState,
	}
}

// The address and the port.
type ServerlessCacheEndpointOutput struct{ *pulumi.OutputState }

func (ServerlessCacheEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessCacheEndpoint)(nil)).Elem()
}

func (o ServerlessCacheEndpointOutput) ToServerlessCacheEndpointOutput() ServerlessCacheEndpointOutput {
	return o
}

func (o ServerlessCacheEndpointOutput) ToServerlessCacheEndpointOutputWithContext(ctx context.Context) ServerlessCacheEndpointOutput {
	return o
}

func (o ServerlessCacheEndpointOutput) ToServerlessCacheEndpointPtrOutput() ServerlessCacheEndpointPtrOutput {
	return o.ToServerlessCacheEndpointPtrOutputWithContext(context.Background())
}

func (o ServerlessCacheEndpointOutput) ToServerlessCacheEndpointPtrOutputWithContext(ctx context.Context) ServerlessCacheEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerlessCacheEndpoint) *ServerlessCacheEndpoint {
		return &v
	}).(ServerlessCacheEndpointPtrOutput)
}

func (o ServerlessCacheEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[ServerlessCacheEndpoint] {
	return pulumix.Output[ServerlessCacheEndpoint]{
		OutputState: o.OutputState,
	}
}

// Endpoint address.
func (o ServerlessCacheEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerlessCacheEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Endpoint port.
func (o ServerlessCacheEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerlessCacheEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ServerlessCacheEndpointPtrOutput struct{ *pulumi.OutputState }

func (ServerlessCacheEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessCacheEndpoint)(nil)).Elem()
}

func (o ServerlessCacheEndpointPtrOutput) ToServerlessCacheEndpointPtrOutput() ServerlessCacheEndpointPtrOutput {
	return o
}

func (o ServerlessCacheEndpointPtrOutput) ToServerlessCacheEndpointPtrOutputWithContext(ctx context.Context) ServerlessCacheEndpointPtrOutput {
	return o
}

func (o ServerlessCacheEndpointPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ServerlessCacheEndpoint] {
	return pulumix.Output[*ServerlessCacheEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o ServerlessCacheEndpointPtrOutput) Elem() ServerlessCacheEndpointOutput {
	return o.ApplyT(func(v *ServerlessCacheEndpoint) ServerlessCacheEndpoint {
		if v != nil {
			return *v
		}
		var ret ServerlessCacheEndpoint
		return ret
	}).(ServerlessCacheEndpointOutput)
}

// Endpoint address.
func (o ServerlessCacheEndpointPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessCacheEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Endpoint port.
func (o ServerlessCacheEndpointPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerlessCacheEndpoint) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// A key-value pair to associate with Serverless Cache.
type ServerlessCacheTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with 'aws:'. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// ServerlessCacheTagInput is an input type that accepts ServerlessCacheTagArgs and ServerlessCacheTagOutput values.
// You can construct a concrete instance of `ServerlessCacheTagInput` via:
//
//	ServerlessCacheTagArgs{...}
type ServerlessCacheTagInput interface {
	pulumi.Input

	ToServerlessCacheTagOutput() ServerlessCacheTagOutput
	ToServerlessCacheTagOutputWithContext(context.Context) ServerlessCacheTagOutput
}

// A key-value pair to associate with Serverless Cache.
type ServerlessCacheTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with 'aws:'. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServerlessCacheTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessCacheTag)(nil)).Elem()
}

func (i ServerlessCacheTagArgs) ToServerlessCacheTagOutput() ServerlessCacheTagOutput {
	return i.ToServerlessCacheTagOutputWithContext(context.Background())
}

func (i ServerlessCacheTagArgs) ToServerlessCacheTagOutputWithContext(ctx context.Context) ServerlessCacheTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheTagOutput)
}

func (i ServerlessCacheTagArgs) ToOutput(ctx context.Context) pulumix.Output[ServerlessCacheTag] {
	return pulumix.Output[ServerlessCacheTag]{
		OutputState: i.ToServerlessCacheTagOutputWithContext(ctx).OutputState,
	}
}

// ServerlessCacheTagArrayInput is an input type that accepts ServerlessCacheTagArray and ServerlessCacheTagArrayOutput values.
// You can construct a concrete instance of `ServerlessCacheTagArrayInput` via:
//
//	ServerlessCacheTagArray{ ServerlessCacheTagArgs{...} }
type ServerlessCacheTagArrayInput interface {
	pulumi.Input

	ToServerlessCacheTagArrayOutput() ServerlessCacheTagArrayOutput
	ToServerlessCacheTagArrayOutputWithContext(context.Context) ServerlessCacheTagArrayOutput
}

type ServerlessCacheTagArray []ServerlessCacheTagInput

func (ServerlessCacheTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerlessCacheTag)(nil)).Elem()
}

func (i ServerlessCacheTagArray) ToServerlessCacheTagArrayOutput() ServerlessCacheTagArrayOutput {
	return i.ToServerlessCacheTagArrayOutputWithContext(context.Background())
}

func (i ServerlessCacheTagArray) ToServerlessCacheTagArrayOutputWithContext(ctx context.Context) ServerlessCacheTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessCacheTagArrayOutput)
}

func (i ServerlessCacheTagArray) ToOutput(ctx context.Context) pulumix.Output[[]ServerlessCacheTag] {
	return pulumix.Output[[]ServerlessCacheTag]{
		OutputState: i.ToServerlessCacheTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with Serverless Cache.
type ServerlessCacheTagOutput struct{ *pulumi.OutputState }

func (ServerlessCacheTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessCacheTag)(nil)).Elem()
}

func (o ServerlessCacheTagOutput) ToServerlessCacheTagOutput() ServerlessCacheTagOutput {
	return o
}

func (o ServerlessCacheTagOutput) ToServerlessCacheTagOutputWithContext(ctx context.Context) ServerlessCacheTagOutput {
	return o
}

func (o ServerlessCacheTagOutput) ToOutput(ctx context.Context) pulumix.Output[ServerlessCacheTag] {
	return pulumix.Output[ServerlessCacheTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with 'aws:'. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ServerlessCacheTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServerlessCacheTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ServerlessCacheTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerlessCacheTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServerlessCacheTagArrayOutput struct{ *pulumi.OutputState }

func (ServerlessCacheTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerlessCacheTag)(nil)).Elem()
}

func (o ServerlessCacheTagArrayOutput) ToServerlessCacheTagArrayOutput() ServerlessCacheTagArrayOutput {
	return o
}

func (o ServerlessCacheTagArrayOutput) ToServerlessCacheTagArrayOutputWithContext(ctx context.Context) ServerlessCacheTagArrayOutput {
	return o
}

func (o ServerlessCacheTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ServerlessCacheTag] {
	return pulumix.Output[[]ServerlessCacheTag]{
		OutputState: o.OutputState,
	}
}

func (o ServerlessCacheTagArrayOutput) Index(i pulumi.IntInput) ServerlessCacheTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerlessCacheTag {
		return vs[0].([]ServerlessCacheTag)[vs[1].(int)]
	}).(ServerlessCacheTagOutput)
}

// A tag that can be added to an ElastiCache subnet group. Tags are composed of a Key/Value pair. You can use tags to categorize and track all your subnet groups. A tag with a null Value is permitted.
type SubnetGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// SubnetGroupTagInput is an input type that accepts SubnetGroupTagArgs and SubnetGroupTagOutput values.
// You can construct a concrete instance of `SubnetGroupTagInput` via:
//
//	SubnetGroupTagArgs{...}
type SubnetGroupTagInput interface {
	pulumi.Input

	ToSubnetGroupTagOutput() SubnetGroupTagOutput
	ToSubnetGroupTagOutputWithContext(context.Context) SubnetGroupTagOutput
}

// A tag that can be added to an ElastiCache subnet group. Tags are composed of a Key/Value pair. You can use tags to categorize and track all your subnet groups. A tag with a null Value is permitted.
type SubnetGroupTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (SubnetGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetGroupTag)(nil)).Elem()
}

func (i SubnetGroupTagArgs) ToSubnetGroupTagOutput() SubnetGroupTagOutput {
	return i.ToSubnetGroupTagOutputWithContext(context.Background())
}

func (i SubnetGroupTagArgs) ToSubnetGroupTagOutputWithContext(ctx context.Context) SubnetGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetGroupTagOutput)
}

func (i SubnetGroupTagArgs) ToOutput(ctx context.Context) pulumix.Output[SubnetGroupTag] {
	return pulumix.Output[SubnetGroupTag]{
		OutputState: i.ToSubnetGroupTagOutputWithContext(ctx).OutputState,
	}
}

// SubnetGroupTagArrayInput is an input type that accepts SubnetGroupTagArray and SubnetGroupTagArrayOutput values.
// You can construct a concrete instance of `SubnetGroupTagArrayInput` via:
//
//	SubnetGroupTagArray{ SubnetGroupTagArgs{...} }
type SubnetGroupTagArrayInput interface {
	pulumi.Input

	ToSubnetGroupTagArrayOutput() SubnetGroupTagArrayOutput
	ToSubnetGroupTagArrayOutputWithContext(context.Context) SubnetGroupTagArrayOutput
}

type SubnetGroupTagArray []SubnetGroupTagInput

func (SubnetGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetGroupTag)(nil)).Elem()
}

func (i SubnetGroupTagArray) ToSubnetGroupTagArrayOutput() SubnetGroupTagArrayOutput {
	return i.ToSubnetGroupTagArrayOutputWithContext(context.Background())
}

func (i SubnetGroupTagArray) ToSubnetGroupTagArrayOutputWithContext(ctx context.Context) SubnetGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubnetGroupTagArrayOutput)
}

func (i SubnetGroupTagArray) ToOutput(ctx context.Context) pulumix.Output[[]SubnetGroupTag] {
	return pulumix.Output[[]SubnetGroupTag]{
		OutputState: i.ToSubnetGroupTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A tag that can be added to an ElastiCache subnet group. Tags are composed of a Key/Value pair. You can use tags to categorize and track all your subnet groups. A tag with a null Value is permitted.
type SubnetGroupTagOutput struct{ *pulumi.OutputState }

func (SubnetGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubnetGroupTag)(nil)).Elem()
}

func (o SubnetGroupTagOutput) ToSubnetGroupTagOutput() SubnetGroupTagOutput {
	return o
}

func (o SubnetGroupTagOutput) ToSubnetGroupTagOutputWithContext(ctx context.Context) SubnetGroupTagOutput {
	return o
}

func (o SubnetGroupTagOutput) ToOutput(ctx context.Context) pulumix.Output[SubnetGroupTag] {
	return pulumix.Output[SubnetGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o SubnetGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o SubnetGroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SubnetGroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type SubnetGroupTagArrayOutput struct{ *pulumi.OutputState }

func (SubnetGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubnetGroupTag)(nil)).Elem()
}

func (o SubnetGroupTagArrayOutput) ToSubnetGroupTagArrayOutput() SubnetGroupTagArrayOutput {
	return o
}

func (o SubnetGroupTagArrayOutput) ToSubnetGroupTagArrayOutputWithContext(ctx context.Context) SubnetGroupTagArrayOutput {
	return o
}

func (o SubnetGroupTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SubnetGroupTag] {
	return pulumix.Output[[]SubnetGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o SubnetGroupTagArrayOutput) Index(i pulumi.IntInput) SubnetGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubnetGroupTag {
		return vs[0].([]SubnetGroupTag)[vs[1].(int)]
	}).(SubnetGroupTagOutput)
}

// A key-value pair to associate with a resource.
type UserGroupTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with 'aws:'. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// UserGroupTagInput is an input type that accepts UserGroupTagArgs and UserGroupTagOutput values.
// You can construct a concrete instance of `UserGroupTagInput` via:
//
//	UserGroupTagArgs{...}
type UserGroupTagInput interface {
	pulumi.Input

	ToUserGroupTagOutput() UserGroupTagOutput
	ToUserGroupTagOutputWithContext(context.Context) UserGroupTagOutput
}

// A key-value pair to associate with a resource.
type UserGroupTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with 'aws:'. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (UserGroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupTag)(nil)).Elem()
}

func (i UserGroupTagArgs) ToUserGroupTagOutput() UserGroupTagOutput {
	return i.ToUserGroupTagOutputWithContext(context.Background())
}

func (i UserGroupTagArgs) ToUserGroupTagOutputWithContext(ctx context.Context) UserGroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupTagOutput)
}

func (i UserGroupTagArgs) ToOutput(ctx context.Context) pulumix.Output[UserGroupTag] {
	return pulumix.Output[UserGroupTag]{
		OutputState: i.ToUserGroupTagOutputWithContext(ctx).OutputState,
	}
}

// UserGroupTagArrayInput is an input type that accepts UserGroupTagArray and UserGroupTagArrayOutput values.
// You can construct a concrete instance of `UserGroupTagArrayInput` via:
//
//	UserGroupTagArray{ UserGroupTagArgs{...} }
type UserGroupTagArrayInput interface {
	pulumi.Input

	ToUserGroupTagArrayOutput() UserGroupTagArrayOutput
	ToUserGroupTagArrayOutputWithContext(context.Context) UserGroupTagArrayOutput
}

type UserGroupTagArray []UserGroupTagInput

func (UserGroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupTag)(nil)).Elem()
}

func (i UserGroupTagArray) ToUserGroupTagArrayOutput() UserGroupTagArrayOutput {
	return i.ToUserGroupTagArrayOutputWithContext(context.Background())
}

func (i UserGroupTagArray) ToUserGroupTagArrayOutputWithContext(ctx context.Context) UserGroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupTagArrayOutput)
}

func (i UserGroupTagArray) ToOutput(ctx context.Context) pulumix.Output[[]UserGroupTag] {
	return pulumix.Output[[]UserGroupTag]{
		OutputState: i.ToUserGroupTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type UserGroupTagOutput struct{ *pulumi.OutputState }

func (UserGroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupTag)(nil)).Elem()
}

func (o UserGroupTagOutput) ToUserGroupTagOutput() UserGroupTagOutput {
	return o
}

func (o UserGroupTagOutput) ToUserGroupTagOutputWithContext(ctx context.Context) UserGroupTagOutput {
	return o
}

func (o UserGroupTagOutput) ToOutput(ctx context.Context) pulumix.Output[UserGroupTag] {
	return pulumix.Output[UserGroupTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with 'aws:'. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o UserGroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v UserGroupTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o UserGroupTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserGroupTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type UserGroupTagArrayOutput struct{ *pulumi.OutputState }

func (UserGroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupTag)(nil)).Elem()
}

func (o UserGroupTagArrayOutput) ToUserGroupTagArrayOutput() UserGroupTagArrayOutput {
	return o
}

func (o UserGroupTagArrayOutput) ToUserGroupTagArrayOutputWithContext(ctx context.Context) UserGroupTagArrayOutput {
	return o
}

func (o UserGroupTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserGroupTag] {
	return pulumix.Output[[]UserGroupTag]{
		OutputState: o.OutputState,
	}
}

func (o UserGroupTagArrayOutput) Index(i pulumi.IntInput) UserGroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserGroupTag {
		return vs[0].([]UserGroupTag)[vs[1].(int)]
	}).(UserGroupTagOutput)
}

// A key-value pair to associate with a resource.
type UserTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with 'aws:'. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// UserTagInput is an input type that accepts UserTagArgs and UserTagOutput values.
// You can construct a concrete instance of `UserTagInput` via:
//
//	UserTagArgs{...}
type UserTagInput interface {
	pulumi.Input

	ToUserTagOutput() UserTagOutput
	ToUserTagOutputWithContext(context.Context) UserTagOutput
}

// A key-value pair to associate with a resource.
type UserTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with 'aws:'. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (UserTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserTag)(nil)).Elem()
}

func (i UserTagArgs) ToUserTagOutput() UserTagOutput {
	return i.ToUserTagOutputWithContext(context.Background())
}

func (i UserTagArgs) ToUserTagOutputWithContext(ctx context.Context) UserTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserTagOutput)
}

func (i UserTagArgs) ToOutput(ctx context.Context) pulumix.Output[UserTag] {
	return pulumix.Output[UserTag]{
		OutputState: i.ToUserTagOutputWithContext(ctx).OutputState,
	}
}

// UserTagArrayInput is an input type that accepts UserTagArray and UserTagArrayOutput values.
// You can construct a concrete instance of `UserTagArrayInput` via:
//
//	UserTagArray{ UserTagArgs{...} }
type UserTagArrayInput interface {
	pulumi.Input

	ToUserTagArrayOutput() UserTagArrayOutput
	ToUserTagArrayOutputWithContext(context.Context) UserTagArrayOutput
}

type UserTagArray []UserTagInput

func (UserTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserTag)(nil)).Elem()
}

func (i UserTagArray) ToUserTagArrayOutput() UserTagArrayOutput {
	return i.ToUserTagArrayOutputWithContext(context.Background())
}

func (i UserTagArray) ToUserTagArrayOutputWithContext(ctx context.Context) UserTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserTagArrayOutput)
}

func (i UserTagArray) ToOutput(ctx context.Context) pulumix.Output[[]UserTag] {
	return pulumix.Output[[]UserTag]{
		OutputState: i.ToUserTagArrayOutputWithContext(ctx).OutputState,
	}
}

// A key-value pair to associate with a resource.
type UserTagOutput struct{ *pulumi.OutputState }

func (UserTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserTag)(nil)).Elem()
}

func (o UserTagOutput) ToUserTagOutput() UserTagOutput {
	return o
}

func (o UserTagOutput) ToUserTagOutputWithContext(ctx context.Context) UserTagOutput {
	return o
}

func (o UserTagOutput) ToOutput(ctx context.Context) pulumix.Output[UserTag] {
	return pulumix.Output[UserTag]{
		OutputState: o.OutputState,
	}
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with 'aws:'. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o UserTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v UserTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o UserTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type UserTagArrayOutput struct{ *pulumi.OutputState }

func (UserTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserTag)(nil)).Elem()
}

func (o UserTagArrayOutput) ToUserTagArrayOutput() UserTagArrayOutput {
	return o
}

func (o UserTagArrayOutput) ToUserTagArrayOutputWithContext(ctx context.Context) UserTagArrayOutput {
	return o
}

func (o UserTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserTag] {
	return pulumix.Output[[]UserTag]{
		OutputState: o.OutputState,
	}
}

func (o UserTagArrayOutput) Index(i pulumi.IntInput) UserTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserTag {
		return vs[0].([]UserTag)[vs[1].(int)]
	}).(UserTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationModePropertiesInput)(nil)).Elem(), AuthenticationModePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthenticationModePropertiesPtrInput)(nil)).Elem(), AuthenticationModePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheClusterCloudWatchLogsDestinationDetailsInput)(nil)).Elem(), CacheClusterCloudWatchLogsDestinationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheClusterCloudWatchLogsDestinationDetailsPtrInput)(nil)).Elem(), CacheClusterCloudWatchLogsDestinationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheClusterDestinationDetailsInput)(nil)).Elem(), CacheClusterDestinationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheClusterKinesisFirehoseDestinationDetailsInput)(nil)).Elem(), CacheClusterKinesisFirehoseDestinationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheClusterKinesisFirehoseDestinationDetailsPtrInput)(nil)).Elem(), CacheClusterKinesisFirehoseDestinationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheClusterLogDeliveryConfigurationRequestInput)(nil)).Elem(), CacheClusterLogDeliveryConfigurationRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheClusterLogDeliveryConfigurationRequestArrayInput)(nil)).Elem(), CacheClusterLogDeliveryConfigurationRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheClusterTagInput)(nil)).Elem(), CacheClusterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CacheClusterTagArrayInput)(nil)).Elem(), CacheClusterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalReplicationGroupMemberInput)(nil)).Elem(), GlobalReplicationGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalReplicationGroupMemberArrayInput)(nil)).Elem(), GlobalReplicationGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalReplicationGroupRegionalConfigurationInput)(nil)).Elem(), GlobalReplicationGroupRegionalConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalReplicationGroupRegionalConfigurationArrayInput)(nil)).Elem(), GlobalReplicationGroupRegionalConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalReplicationGroupReshardingConfigurationInput)(nil)).Elem(), GlobalReplicationGroupReshardingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalReplicationGroupReshardingConfigurationArrayInput)(nil)).Elem(), GlobalReplicationGroupReshardingConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupTagInput)(nil)).Elem(), ParameterGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupTagArrayInput)(nil)).Elem(), ParameterGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupCloudWatchLogsDestinationDetailsInput)(nil)).Elem(), ReplicationGroupCloudWatchLogsDestinationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupCloudWatchLogsDestinationDetailsPtrInput)(nil)).Elem(), ReplicationGroupCloudWatchLogsDestinationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupDestinationDetailsInput)(nil)).Elem(), ReplicationGroupDestinationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupKinesisFirehoseDestinationDetailsInput)(nil)).Elem(), ReplicationGroupKinesisFirehoseDestinationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupKinesisFirehoseDestinationDetailsPtrInput)(nil)).Elem(), ReplicationGroupKinesisFirehoseDestinationDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupLogDeliveryConfigurationRequestInput)(nil)).Elem(), ReplicationGroupLogDeliveryConfigurationRequestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupLogDeliveryConfigurationRequestArrayInput)(nil)).Elem(), ReplicationGroupLogDeliveryConfigurationRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupNodeGroupConfigurationInput)(nil)).Elem(), ReplicationGroupNodeGroupConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupNodeGroupConfigurationArrayInput)(nil)).Elem(), ReplicationGroupNodeGroupConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupTagInput)(nil)).Elem(), ReplicationGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationGroupTagArrayInput)(nil)).Elem(), ReplicationGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupTagInput)(nil)).Elem(), SecurityGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupTagArrayInput)(nil)).Elem(), SecurityGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCacheCacheUsageLimitsInput)(nil)).Elem(), ServerlessCacheCacheUsageLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCacheCacheUsageLimitsPtrInput)(nil)).Elem(), ServerlessCacheCacheUsageLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCacheDataStorageInput)(nil)).Elem(), ServerlessCacheDataStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCacheDataStoragePtrInput)(nil)).Elem(), ServerlessCacheDataStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCacheEcpuPerSecondInput)(nil)).Elem(), ServerlessCacheEcpuPerSecondArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCacheEcpuPerSecondPtrInput)(nil)).Elem(), ServerlessCacheEcpuPerSecondArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCacheEndpointInput)(nil)).Elem(), ServerlessCacheEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCacheEndpointPtrInput)(nil)).Elem(), ServerlessCacheEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCacheTagInput)(nil)).Elem(), ServerlessCacheTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessCacheTagArrayInput)(nil)).Elem(), ServerlessCacheTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetGroupTagInput)(nil)).Elem(), SubnetGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubnetGroupTagArrayInput)(nil)).Elem(), SubnetGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupTagInput)(nil)).Elem(), UserGroupTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupTagArrayInput)(nil)).Elem(), UserGroupTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserTagInput)(nil)).Elem(), UserTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserTagArrayInput)(nil)).Elem(), UserTagArray{})
	pulumi.RegisterOutputType(AuthenticationModePropertiesOutput{})
	pulumi.RegisterOutputType(AuthenticationModePropertiesPtrOutput{})
	pulumi.RegisterOutputType(CacheClusterCloudWatchLogsDestinationDetailsOutput{})
	pulumi.RegisterOutputType(CacheClusterCloudWatchLogsDestinationDetailsPtrOutput{})
	pulumi.RegisterOutputType(CacheClusterDestinationDetailsOutput{})
	pulumi.RegisterOutputType(CacheClusterKinesisFirehoseDestinationDetailsOutput{})
	pulumi.RegisterOutputType(CacheClusterKinesisFirehoseDestinationDetailsPtrOutput{})
	pulumi.RegisterOutputType(CacheClusterLogDeliveryConfigurationRequestOutput{})
	pulumi.RegisterOutputType(CacheClusterLogDeliveryConfigurationRequestArrayOutput{})
	pulumi.RegisterOutputType(CacheClusterTagOutput{})
	pulumi.RegisterOutputType(CacheClusterTagArrayOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupMemberOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupRegionalConfigurationOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupRegionalConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupReshardingConfigurationOutput{})
	pulumi.RegisterOutputType(GlobalReplicationGroupReshardingConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ParameterGroupTagOutput{})
	pulumi.RegisterOutputType(ParameterGroupTagArrayOutput{})
	pulumi.RegisterOutputType(ReplicationGroupCloudWatchLogsDestinationDetailsOutput{})
	pulumi.RegisterOutputType(ReplicationGroupCloudWatchLogsDestinationDetailsPtrOutput{})
	pulumi.RegisterOutputType(ReplicationGroupDestinationDetailsOutput{})
	pulumi.RegisterOutputType(ReplicationGroupKinesisFirehoseDestinationDetailsOutput{})
	pulumi.RegisterOutputType(ReplicationGroupKinesisFirehoseDestinationDetailsPtrOutput{})
	pulumi.RegisterOutputType(ReplicationGroupLogDeliveryConfigurationRequestOutput{})
	pulumi.RegisterOutputType(ReplicationGroupLogDeliveryConfigurationRequestArrayOutput{})
	pulumi.RegisterOutputType(ReplicationGroupNodeGroupConfigurationOutput{})
	pulumi.RegisterOutputType(ReplicationGroupNodeGroupConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ReplicationGroupTagOutput{})
	pulumi.RegisterOutputType(ReplicationGroupTagArrayOutput{})
	pulumi.RegisterOutputType(SecurityGroupTagOutput{})
	pulumi.RegisterOutputType(SecurityGroupTagArrayOutput{})
	pulumi.RegisterOutputType(ServerlessCacheCacheUsageLimitsOutput{})
	pulumi.RegisterOutputType(ServerlessCacheCacheUsageLimitsPtrOutput{})
	pulumi.RegisterOutputType(ServerlessCacheDataStorageOutput{})
	pulumi.RegisterOutputType(ServerlessCacheDataStoragePtrOutput{})
	pulumi.RegisterOutputType(ServerlessCacheEcpuPerSecondOutput{})
	pulumi.RegisterOutputType(ServerlessCacheEcpuPerSecondPtrOutput{})
	pulumi.RegisterOutputType(ServerlessCacheEndpointOutput{})
	pulumi.RegisterOutputType(ServerlessCacheEndpointPtrOutput{})
	pulumi.RegisterOutputType(ServerlessCacheTagOutput{})
	pulumi.RegisterOutputType(ServerlessCacheTagArrayOutput{})
	pulumi.RegisterOutputType(SubnetGroupTagOutput{})
	pulumi.RegisterOutputType(SubnetGroupTagArrayOutput{})
	pulumi.RegisterOutputType(UserGroupTagOutput{})
	pulumi.RegisterOutputType(UserGroupTagArrayOutput{})
	pulumi.RegisterOutputType(UserTagOutput{})
	pulumi.RegisterOutputType(UserTagArrayOutput{})
}
