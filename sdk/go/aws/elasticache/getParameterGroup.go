// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ElastiCache::ParameterGroup
func LookupParameterGroup(ctx *pulumi.Context, args *LookupParameterGroupArgs, opts ...pulumi.InvokeOption) (*LookupParameterGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupParameterGroupResult
	err := ctx.Invoke("aws-native:elasticache:getParameterGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupParameterGroupArgs struct {
	// The name of the Cache Parameter Group.
	CacheParameterGroupName string `pulumi:"cacheParameterGroupName"`
}

type LookupParameterGroupResult struct {
	// The name of the Cache Parameter Group.
	CacheParameterGroupName *string `pulumi:"cacheParameterGroupName"`
	// The description for this cache parameter group.
	Description *string `pulumi:"description"`
	// A comma-delimited list of parameter name/value pairs. For more information see ModifyCacheParameterGroup in the Amazon ElastiCache API Reference Guide.
	Properties map[string]string `pulumi:"properties"`
	// Tags are composed of a Key/Value pair. You can use tags to categorize and track each parameter group. The tag value null is permitted.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupParameterGroupOutput(ctx *pulumi.Context, args LookupParameterGroupOutputArgs, opts ...pulumi.InvokeOption) LookupParameterGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupParameterGroupResultOutput, error) {
			args := v.(LookupParameterGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:elasticache:getParameterGroup", args, LookupParameterGroupResultOutput{}, options).(LookupParameterGroupResultOutput), nil
		}).(LookupParameterGroupResultOutput)
}

type LookupParameterGroupOutputArgs struct {
	// The name of the Cache Parameter Group.
	CacheParameterGroupName pulumi.StringInput `pulumi:"cacheParameterGroupName"`
}

func (LookupParameterGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupParameterGroupArgs)(nil)).Elem()
}

type LookupParameterGroupResultOutput struct{ *pulumi.OutputState }

func (LookupParameterGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupParameterGroupResult)(nil)).Elem()
}

func (o LookupParameterGroupResultOutput) ToLookupParameterGroupResultOutput() LookupParameterGroupResultOutput {
	return o
}

func (o LookupParameterGroupResultOutput) ToLookupParameterGroupResultOutputWithContext(ctx context.Context) LookupParameterGroupResultOutput {
	return o
}

// The name of the Cache Parameter Group.
func (o LookupParameterGroupResultOutput) CacheParameterGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupParameterGroupResult) *string { return v.CacheParameterGroupName }).(pulumi.StringPtrOutput)
}

// The description for this cache parameter group.
func (o LookupParameterGroupResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupParameterGroupResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A comma-delimited list of parameter name/value pairs. For more information see ModifyCacheParameterGroup in the Amazon ElastiCache API Reference Guide.
func (o LookupParameterGroupResultOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupParameterGroupResult) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// Tags are composed of a Key/Value pair. You can use tags to categorize and track each parameter group. The tag value null is permitted.
func (o LookupParameterGroupResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupParameterGroupResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupParameterGroupResultOutput{})
}
