// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticache

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::ElastiCache::GlobalReplicationGroup resource creates an Amazon ElastiCache Global Replication Group.
func LookupGlobalReplicationGroup(ctx *pulumi.Context, args *LookupGlobalReplicationGroupArgs, opts ...pulumi.InvokeOption) (*LookupGlobalReplicationGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGlobalReplicationGroupResult
	err := ctx.Invoke("aws-native:elasticache:getGlobalReplicationGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGlobalReplicationGroupArgs struct {
	// The name of the Global Datastore, it is generated by ElastiCache adding a prefix to GlobalReplicationGroupIdSuffix.
	GlobalReplicationGroupId string `pulumi:"globalReplicationGroupId"`
}

type LookupGlobalReplicationGroupResult struct {
	// Cache parameter group name to use for the new engine version. This parameter cannot be modified independently.
	CacheParameterGroupName *string `pulumi:"cacheParameterGroupName"`
	// The engine of the Global Datastore.
	Engine *string `pulumi:"engine"`
	// The optional description of the Global Datastore
	GlobalReplicationGroupDescription *string `pulumi:"globalReplicationGroupDescription"`
	// The name of the Global Datastore, it is generated by ElastiCache adding a prefix to GlobalReplicationGroupIdSuffix.
	GlobalReplicationGroupId *string `pulumi:"globalReplicationGroupId"`
	// The replication groups that comprise the Global Datastore.
	Members []GlobalReplicationGroupMember `pulumi:"members"`
	// The status of the Global Datastore
	Status *string `pulumi:"status"`
}

func LookupGlobalReplicationGroupOutput(ctx *pulumi.Context, args LookupGlobalReplicationGroupOutputArgs, opts ...pulumi.InvokeOption) LookupGlobalReplicationGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGlobalReplicationGroupResultOutput, error) {
			args := v.(LookupGlobalReplicationGroupArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupGlobalReplicationGroupResult
			secret, err := ctx.InvokePackageRaw("aws-native:elasticache:getGlobalReplicationGroup", args, &rv, "", opts...)
			if err != nil {
				return LookupGlobalReplicationGroupResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupGlobalReplicationGroupResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupGlobalReplicationGroupResultOutput), nil
			}
			return output, nil
		}).(LookupGlobalReplicationGroupResultOutput)
}

type LookupGlobalReplicationGroupOutputArgs struct {
	// The name of the Global Datastore, it is generated by ElastiCache adding a prefix to GlobalReplicationGroupIdSuffix.
	GlobalReplicationGroupId pulumi.StringInput `pulumi:"globalReplicationGroupId"`
}

func (LookupGlobalReplicationGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGlobalReplicationGroupArgs)(nil)).Elem()
}

type LookupGlobalReplicationGroupResultOutput struct{ *pulumi.OutputState }

func (LookupGlobalReplicationGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGlobalReplicationGroupResult)(nil)).Elem()
}

func (o LookupGlobalReplicationGroupResultOutput) ToLookupGlobalReplicationGroupResultOutput() LookupGlobalReplicationGroupResultOutput {
	return o
}

func (o LookupGlobalReplicationGroupResultOutput) ToLookupGlobalReplicationGroupResultOutputWithContext(ctx context.Context) LookupGlobalReplicationGroupResultOutput {
	return o
}

// Cache parameter group name to use for the new engine version. This parameter cannot be modified independently.
func (o LookupGlobalReplicationGroupResultOutput) CacheParameterGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGlobalReplicationGroupResult) *string { return v.CacheParameterGroupName }).(pulumi.StringPtrOutput)
}

// The engine of the Global Datastore.
func (o LookupGlobalReplicationGroupResultOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGlobalReplicationGroupResult) *string { return v.Engine }).(pulumi.StringPtrOutput)
}

// The optional description of the Global Datastore
func (o LookupGlobalReplicationGroupResultOutput) GlobalReplicationGroupDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGlobalReplicationGroupResult) *string { return v.GlobalReplicationGroupDescription }).(pulumi.StringPtrOutput)
}

// The name of the Global Datastore, it is generated by ElastiCache adding a prefix to GlobalReplicationGroupIdSuffix.
func (o LookupGlobalReplicationGroupResultOutput) GlobalReplicationGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGlobalReplicationGroupResult) *string { return v.GlobalReplicationGroupId }).(pulumi.StringPtrOutput)
}

// The replication groups that comprise the Global Datastore.
func (o LookupGlobalReplicationGroupResultOutput) Members() GlobalReplicationGroupMemberArrayOutput {
	return o.ApplyT(func(v LookupGlobalReplicationGroupResult) []GlobalReplicationGroupMember { return v.Members }).(GlobalReplicationGroupMemberArrayOutput)
}

// The status of the Global Datastore
func (o LookupGlobalReplicationGroupResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGlobalReplicationGroupResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGlobalReplicationGroupResultOutput{})
}
