// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::NetworkManager::LinkAssociation type associates a link to a device. The device and link must be in the same global network and the same site.
func LookupLinkAssociation(ctx *pulumi.Context, args *LookupLinkAssociationArgs, opts ...pulumi.InvokeOption) (*LookupLinkAssociationResult, error) {
	var rv LookupLinkAssociationResult
	err := ctx.Invoke("aws-native:networkmanager:getLinkAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLinkAssociationArgs struct {
	// The ID of the device
	DeviceId string `pulumi:"deviceId"`
	// The ID of the global network.
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// The ID of the link
	LinkId string `pulumi:"linkId"`
}

type LookupLinkAssociationResult struct {
}

func LookupLinkAssociationOutput(ctx *pulumi.Context, args LookupLinkAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupLinkAssociationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLinkAssociationResult, error) {
			args := v.(LookupLinkAssociationArgs)
			r, err := LookupLinkAssociation(ctx, &args, opts...)
			var s LookupLinkAssociationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLinkAssociationResultOutput)
}

type LookupLinkAssociationOutputArgs struct {
	// The ID of the device
	DeviceId pulumi.StringInput `pulumi:"deviceId"`
	// The ID of the global network.
	GlobalNetworkId pulumi.StringInput `pulumi:"globalNetworkId"`
	// The ID of the link
	LinkId pulumi.StringInput `pulumi:"linkId"`
}

func (LookupLinkAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLinkAssociationArgs)(nil)).Elem()
}

type LookupLinkAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupLinkAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLinkAssociationResult)(nil)).Elem()
}

func (o LookupLinkAssociationResultOutput) ToLookupLinkAssociationResultOutput() LookupLinkAssociationResultOutput {
	return o
}

func (o LookupLinkAssociationResultOutput) ToLookupLinkAssociationResultOutputWithContext(ctx context.Context) LookupLinkAssociationResultOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LookupLinkAssociationResultOutput{})
}
