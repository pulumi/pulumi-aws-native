// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS::NetworkManager::ConnectAttachment Resource Type Definition
func LookupConnectAttachment(ctx *pulumi.Context, args *LookupConnectAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupConnectAttachmentResult, error) {
	var rv LookupConnectAttachmentResult
	err := ctx.Invoke("aws-native:networkmanager:getConnectAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConnectAttachmentArgs struct {
	// The ID of the attachment.
	AttachmentId string `pulumi:"attachmentId"`
}

type LookupConnectAttachmentResult struct {
	// The ID of the attachment.
	AttachmentId *string `pulumi:"attachmentId"`
	// The policy rule number associated with the attachment.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The type of attachment.
	AttachmentType *string `pulumi:"attachmentType"`
	// The ARN of a core network for the VPC attachment.
	CoreNetworkArn *string `pulumi:"coreNetworkArn"`
	// Creation time of the attachment.
	CreatedAt *string `pulumi:"createdAt"`
	// The ID of the attachment account owner.
	OwnerAccountId *string `pulumi:"ownerAccountId"`
	// The attachment to move from one segment to another.
	ProposedSegmentChange *ConnectAttachmentProposedSegmentChange `pulumi:"proposedSegmentChange"`
	// The attachment resource ARN.
	ResourceArn *string `pulumi:"resourceArn"`
	// The name of the segment attachment.
	SegmentName *string `pulumi:"segmentName"`
	// State of the attachment.
	State *string `pulumi:"state"`
	// Tags for the attachment.
	Tags []ConnectAttachmentTag `pulumi:"tags"`
	// Last update time of the attachment.
	UpdatedAt *string `pulumi:"updatedAt"`
}

func LookupConnectAttachmentOutput(ctx *pulumi.Context, args LookupConnectAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupConnectAttachmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectAttachmentResult, error) {
			args := v.(LookupConnectAttachmentArgs)
			r, err := LookupConnectAttachment(ctx, &args, opts...)
			var s LookupConnectAttachmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConnectAttachmentResultOutput)
}

type LookupConnectAttachmentOutputArgs struct {
	// The ID of the attachment.
	AttachmentId pulumi.StringInput `pulumi:"attachmentId"`
}

func (LookupConnectAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectAttachmentArgs)(nil)).Elem()
}

type LookupConnectAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupConnectAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectAttachmentResult)(nil)).Elem()
}

func (o LookupConnectAttachmentResultOutput) ToLookupConnectAttachmentResultOutput() LookupConnectAttachmentResultOutput {
	return o
}

func (o LookupConnectAttachmentResultOutput) ToLookupConnectAttachmentResultOutputWithContext(ctx context.Context) LookupConnectAttachmentResultOutput {
	return o
}

// The ID of the attachment.
func (o LookupConnectAttachmentResultOutput) AttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectAttachmentResult) *string { return v.AttachmentId }).(pulumi.StringPtrOutput)
}

// The policy rule number associated with the attachment.
func (o LookupConnectAttachmentResultOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupConnectAttachmentResult) *int { return v.AttachmentPolicyRuleNumber }).(pulumi.IntPtrOutput)
}

// The type of attachment.
func (o LookupConnectAttachmentResultOutput) AttachmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectAttachmentResult) *string { return v.AttachmentType }).(pulumi.StringPtrOutput)
}

// The ARN of a core network for the VPC attachment.
func (o LookupConnectAttachmentResultOutput) CoreNetworkArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectAttachmentResult) *string { return v.CoreNetworkArn }).(pulumi.StringPtrOutput)
}

// Creation time of the attachment.
func (o LookupConnectAttachmentResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectAttachmentResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The ID of the attachment account owner.
func (o LookupConnectAttachmentResultOutput) OwnerAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectAttachmentResult) *string { return v.OwnerAccountId }).(pulumi.StringPtrOutput)
}

// The attachment to move from one segment to another.
func (o LookupConnectAttachmentResultOutput) ProposedSegmentChange() ConnectAttachmentProposedSegmentChangePtrOutput {
	return o.ApplyT(func(v LookupConnectAttachmentResult) *ConnectAttachmentProposedSegmentChange {
		return v.ProposedSegmentChange
	}).(ConnectAttachmentProposedSegmentChangePtrOutput)
}

// The attachment resource ARN.
func (o LookupConnectAttachmentResultOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectAttachmentResult) *string { return v.ResourceArn }).(pulumi.StringPtrOutput)
}

// The name of the segment attachment.
func (o LookupConnectAttachmentResultOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectAttachmentResult) *string { return v.SegmentName }).(pulumi.StringPtrOutput)
}

// State of the attachment.
func (o LookupConnectAttachmentResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectAttachmentResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Tags for the attachment.
func (o LookupConnectAttachmentResultOutput) Tags() ConnectAttachmentTagArrayOutput {
	return o.ApplyT(func(v LookupConnectAttachmentResult) []ConnectAttachmentTag { return v.Tags }).(ConnectAttachmentTagArrayOutput)
}

// Last update time of the attachment.
func (o LookupConnectAttachmentResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectAttachmentResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectAttachmentResultOutput{})
}
