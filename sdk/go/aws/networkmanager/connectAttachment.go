// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS::NetworkManager::ConnectAttachment Resource Type Definition
//
// Deprecated: ConnectAttachment is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type ConnectAttachment struct {
	pulumi.CustomResourceState

	// The ID of the attachment.
	AttachmentId pulumi.StringOutput `pulumi:"attachmentId"`
	// The policy rule number associated with the attachment.
	AttachmentPolicyRuleNumber pulumi.IntOutput `pulumi:"attachmentPolicyRuleNumber"`
	// The type of attachment.
	AttachmentType pulumi.StringOutput `pulumi:"attachmentType"`
	// The ARN of a core network for the VPC attachment.
	CoreNetworkArn pulumi.StringOutput `pulumi:"coreNetworkArn"`
	// ID of the CoreNetwork that the attachment will be attached to.
	CoreNetworkId pulumi.StringPtrOutput `pulumi:"coreNetworkId"`
	// Creation time of the attachment.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Edge location of the attachment.
	EdgeLocation pulumi.StringPtrOutput `pulumi:"edgeLocation"`
	// Protocol options for connect attachment
	Options ConnectAttachmentOptionsPtrOutput `pulumi:"options"`
	// The ID of the attachment account owner.
	OwnerAccountId pulumi.StringOutput `pulumi:"ownerAccountId"`
	// The attachment to move from one segment to another.
	ProposedSegmentChange ConnectAttachmentProposedSegmentChangeOutput `pulumi:"proposedSegmentChange"`
	// The attachment resource ARN.
	ResourceArn pulumi.StringOutput `pulumi:"resourceArn"`
	// The name of the segment attachment.
	SegmentName pulumi.StringOutput `pulumi:"segmentName"`
	// State of the attachment.
	State pulumi.StringOutput `pulumi:"state"`
	// Tags for the attachment.
	Tags ConnectAttachmentTagArrayOutput `pulumi:"tags"`
	// Id of transport attachment
	TransportAttachmentId pulumi.StringPtrOutput `pulumi:"transportAttachmentId"`
	// Last update time of the attachment.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewConnectAttachment registers a new resource with the given unique name, arguments, and options.
func NewConnectAttachment(ctx *pulumi.Context,
	name string, args *ConnectAttachmentArgs, opts ...pulumi.ResourceOption) (*ConnectAttachment, error) {
	if args == nil {
		args = &ConnectAttachmentArgs{}
	}

	var resource ConnectAttachment
	err := ctx.RegisterResource("aws-native:networkmanager:ConnectAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectAttachment gets an existing ConnectAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectAttachmentState, opts ...pulumi.ResourceOption) (*ConnectAttachment, error) {
	var resource ConnectAttachment
	err := ctx.ReadResource("aws-native:networkmanager:ConnectAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectAttachment resources.
type connectAttachmentState struct {
}

type ConnectAttachmentState struct {
}

func (ConnectAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectAttachmentState)(nil)).Elem()
}

type connectAttachmentArgs struct {
	// ID of the CoreNetwork that the attachment will be attached to.
	CoreNetworkId *string `pulumi:"coreNetworkId"`
	// Edge location of the attachment.
	EdgeLocation *string `pulumi:"edgeLocation"`
	// Protocol options for connect attachment
	Options *ConnectAttachmentOptions `pulumi:"options"`
	// Tags for the attachment.
	Tags []ConnectAttachmentTag `pulumi:"tags"`
	// Id of transport attachment
	TransportAttachmentId *string `pulumi:"transportAttachmentId"`
}

// The set of arguments for constructing a ConnectAttachment resource.
type ConnectAttachmentArgs struct {
	// ID of the CoreNetwork that the attachment will be attached to.
	CoreNetworkId pulumi.StringPtrInput
	// Edge location of the attachment.
	EdgeLocation pulumi.StringPtrInput
	// Protocol options for connect attachment
	Options ConnectAttachmentOptionsPtrInput
	// Tags for the attachment.
	Tags ConnectAttachmentTagArrayInput
	// Id of transport attachment
	TransportAttachmentId pulumi.StringPtrInput
}

func (ConnectAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectAttachmentArgs)(nil)).Elem()
}

type ConnectAttachmentInput interface {
	pulumi.Input

	ToConnectAttachmentOutput() ConnectAttachmentOutput
	ToConnectAttachmentOutputWithContext(ctx context.Context) ConnectAttachmentOutput
}

func (*ConnectAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectAttachment)(nil)).Elem()
}

func (i *ConnectAttachment) ToConnectAttachmentOutput() ConnectAttachmentOutput {
	return i.ToConnectAttachmentOutputWithContext(context.Background())
}

func (i *ConnectAttachment) ToConnectAttachmentOutputWithContext(ctx context.Context) ConnectAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectAttachmentOutput)
}

type ConnectAttachmentOutput struct{ *pulumi.OutputState }

func (ConnectAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectAttachment)(nil)).Elem()
}

func (o ConnectAttachmentOutput) ToConnectAttachmentOutput() ConnectAttachmentOutput {
	return o
}

func (o ConnectAttachmentOutput) ToConnectAttachmentOutputWithContext(ctx context.Context) ConnectAttachmentOutput {
	return o
}

// The ID of the attachment.
func (o ConnectAttachmentOutput) AttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.StringOutput { return v.AttachmentId }).(pulumi.StringOutput)
}

// The policy rule number associated with the attachment.
func (o ConnectAttachmentOutput) AttachmentPolicyRuleNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.IntOutput { return v.AttachmentPolicyRuleNumber }).(pulumi.IntOutput)
}

// The type of attachment.
func (o ConnectAttachmentOutput) AttachmentType() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.StringOutput { return v.AttachmentType }).(pulumi.StringOutput)
}

// The ARN of a core network for the VPC attachment.
func (o ConnectAttachmentOutput) CoreNetworkArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.StringOutput { return v.CoreNetworkArn }).(pulumi.StringOutput)
}

// ID of the CoreNetwork that the attachment will be attached to.
func (o ConnectAttachmentOutput) CoreNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.StringPtrOutput { return v.CoreNetworkId }).(pulumi.StringPtrOutput)
}

// Creation time of the attachment.
func (o ConnectAttachmentOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Edge location of the attachment.
func (o ConnectAttachmentOutput) EdgeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.StringPtrOutput { return v.EdgeLocation }).(pulumi.StringPtrOutput)
}

// Protocol options for connect attachment
func (o ConnectAttachmentOutput) Options() ConnectAttachmentOptionsPtrOutput {
	return o.ApplyT(func(v *ConnectAttachment) ConnectAttachmentOptionsPtrOutput { return v.Options }).(ConnectAttachmentOptionsPtrOutput)
}

// The ID of the attachment account owner.
func (o ConnectAttachmentOutput) OwnerAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.StringOutput { return v.OwnerAccountId }).(pulumi.StringOutput)
}

// The attachment to move from one segment to another.
func (o ConnectAttachmentOutput) ProposedSegmentChange() ConnectAttachmentProposedSegmentChangeOutput {
	return o.ApplyT(func(v *ConnectAttachment) ConnectAttachmentProposedSegmentChangeOutput {
		return v.ProposedSegmentChange
	}).(ConnectAttachmentProposedSegmentChangeOutput)
}

// The attachment resource ARN.
func (o ConnectAttachmentOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.StringOutput { return v.ResourceArn }).(pulumi.StringOutput)
}

// The name of the segment attachment.
func (o ConnectAttachmentOutput) SegmentName() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.StringOutput { return v.SegmentName }).(pulumi.StringOutput)
}

// State of the attachment.
func (o ConnectAttachmentOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// Tags for the attachment.
func (o ConnectAttachmentOutput) Tags() ConnectAttachmentTagArrayOutput {
	return o.ApplyT(func(v *ConnectAttachment) ConnectAttachmentTagArrayOutput { return v.Tags }).(ConnectAttachmentTagArrayOutput)
}

// Id of transport attachment
func (o ConnectAttachmentOutput) TransportAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.StringPtrOutput { return v.TransportAttachmentId }).(pulumi.StringPtrOutput)
}

// Last update time of the attachment.
func (o ConnectAttachmentOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectAttachment) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectAttachmentInput)(nil)).Elem(), &ConnectAttachment{})
	pulumi.RegisterOutputType(ConnectAttachmentOutput{})
}
