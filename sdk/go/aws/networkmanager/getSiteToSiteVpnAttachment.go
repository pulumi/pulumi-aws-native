// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// AWS::NetworkManager::SiteToSiteVpnAttachment Resource Type definition.
func LookupSiteToSiteVpnAttachment(ctx *pulumi.Context, args *LookupSiteToSiteVpnAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupSiteToSiteVpnAttachmentResult, error) {
	var rv LookupSiteToSiteVpnAttachmentResult
	err := ctx.Invoke("aws-native:networkmanager:getSiteToSiteVpnAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSiteToSiteVpnAttachmentArgs struct {
	// The ID of the attachment.
	AttachmentId string `pulumi:"attachmentId"`
}

type LookupSiteToSiteVpnAttachmentResult struct {
	// The ID of the attachment.
	AttachmentId *string `pulumi:"attachmentId"`
	// The policy rule number associated with the attachment.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The type of attachment.
	AttachmentType *string `pulumi:"attachmentType"`
	// The ARN of a core network for the VPC attachment.
	CoreNetworkArn *string `pulumi:"coreNetworkArn"`
	// Creation time of the attachment.
	CreatedAt *string `pulumi:"createdAt"`
	// The Region where the edge is located.
	EdgeLocation *string `pulumi:"edgeLocation"`
	// Owner account of the attachment.
	OwnerAccountId *string `pulumi:"ownerAccountId"`
	// The attachment to move from one segment to another.
	ProposedSegmentChange *SiteToSiteVpnAttachmentProposedSegmentChange `pulumi:"proposedSegmentChange"`
	// The ARN of the Resource.
	ResourceArn *string `pulumi:"resourceArn"`
	// The name of the segment that attachment is in.
	SegmentName *string `pulumi:"segmentName"`
	// The state of the attachment.
	State *string `pulumi:"state"`
	// Tags for the attachment.
	Tags []SiteToSiteVpnAttachmentTag `pulumi:"tags"`
	// Last update time of the attachment.
	UpdatedAt *string `pulumi:"updatedAt"`
}

func LookupSiteToSiteVpnAttachmentOutput(ctx *pulumi.Context, args LookupSiteToSiteVpnAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupSiteToSiteVpnAttachmentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSiteToSiteVpnAttachmentResult, error) {
			args := v.(LookupSiteToSiteVpnAttachmentArgs)
			r, err := LookupSiteToSiteVpnAttachment(ctx, &args, opts...)
			var s LookupSiteToSiteVpnAttachmentResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSiteToSiteVpnAttachmentResultOutput)
}

type LookupSiteToSiteVpnAttachmentOutputArgs struct {
	// The ID of the attachment.
	AttachmentId pulumi.StringInput `pulumi:"attachmentId"`
}

func (LookupSiteToSiteVpnAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSiteToSiteVpnAttachmentArgs)(nil)).Elem()
}

type LookupSiteToSiteVpnAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupSiteToSiteVpnAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSiteToSiteVpnAttachmentResult)(nil)).Elem()
}

func (o LookupSiteToSiteVpnAttachmentResultOutput) ToLookupSiteToSiteVpnAttachmentResultOutput() LookupSiteToSiteVpnAttachmentResultOutput {
	return o
}

func (o LookupSiteToSiteVpnAttachmentResultOutput) ToLookupSiteToSiteVpnAttachmentResultOutputWithContext(ctx context.Context) LookupSiteToSiteVpnAttachmentResultOutput {
	return o
}

// The ID of the attachment.
func (o LookupSiteToSiteVpnAttachmentResultOutput) AttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) *string { return v.AttachmentId }).(pulumi.StringPtrOutput)
}

// The policy rule number associated with the attachment.
func (o LookupSiteToSiteVpnAttachmentResultOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) *int { return v.AttachmentPolicyRuleNumber }).(pulumi.IntPtrOutput)
}

// The type of attachment.
func (o LookupSiteToSiteVpnAttachmentResultOutput) AttachmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) *string { return v.AttachmentType }).(pulumi.StringPtrOutput)
}

// The ARN of a core network for the VPC attachment.
func (o LookupSiteToSiteVpnAttachmentResultOutput) CoreNetworkArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) *string { return v.CoreNetworkArn }).(pulumi.StringPtrOutput)
}

// Creation time of the attachment.
func (o LookupSiteToSiteVpnAttachmentResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The Region where the edge is located.
func (o LookupSiteToSiteVpnAttachmentResultOutput) EdgeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) *string { return v.EdgeLocation }).(pulumi.StringPtrOutput)
}

// Owner account of the attachment.
func (o LookupSiteToSiteVpnAttachmentResultOutput) OwnerAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) *string { return v.OwnerAccountId }).(pulumi.StringPtrOutput)
}

// The attachment to move from one segment to another.
func (o LookupSiteToSiteVpnAttachmentResultOutput) ProposedSegmentChange() SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) *SiteToSiteVpnAttachmentProposedSegmentChange {
		return v.ProposedSegmentChange
	}).(SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput)
}

// The ARN of the Resource.
func (o LookupSiteToSiteVpnAttachmentResultOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) *string { return v.ResourceArn }).(pulumi.StringPtrOutput)
}

// The name of the segment that attachment is in.
func (o LookupSiteToSiteVpnAttachmentResultOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) *string { return v.SegmentName }).(pulumi.StringPtrOutput)
}

// The state of the attachment.
func (o LookupSiteToSiteVpnAttachmentResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Tags for the attachment.
func (o LookupSiteToSiteVpnAttachmentResultOutput) Tags() SiteToSiteVpnAttachmentTagArrayOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) []SiteToSiteVpnAttachmentTag { return v.Tags }).(SiteToSiteVpnAttachmentTagArrayOutput)
}

// Last update time of the attachment.
func (o LookupSiteToSiteVpnAttachmentResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSiteToSiteVpnAttachmentResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSiteToSiteVpnAttachmentResultOutput{})
}
