// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Connect attachment options for protocol
type ConnectAttachmentOptions struct {
	// Tunnel protocol for connect attachment
	Protocol *string `pulumi:"protocol"`
}

// ConnectAttachmentOptionsInput is an input type that accepts ConnectAttachmentOptionsArgs and ConnectAttachmentOptionsOutput values.
// You can construct a concrete instance of `ConnectAttachmentOptionsInput` via:
//
//	ConnectAttachmentOptionsArgs{...}
type ConnectAttachmentOptionsInput interface {
	pulumi.Input

	ToConnectAttachmentOptionsOutput() ConnectAttachmentOptionsOutput
	ToConnectAttachmentOptionsOutputWithContext(context.Context) ConnectAttachmentOptionsOutput
}

// Connect attachment options for protocol
type ConnectAttachmentOptionsArgs struct {
	// Tunnel protocol for connect attachment
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ConnectAttachmentOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectAttachmentOptions)(nil)).Elem()
}

func (i ConnectAttachmentOptionsArgs) ToConnectAttachmentOptionsOutput() ConnectAttachmentOptionsOutput {
	return i.ToConnectAttachmentOptionsOutputWithContext(context.Background())
}

func (i ConnectAttachmentOptionsArgs) ToConnectAttachmentOptionsOutputWithContext(ctx context.Context) ConnectAttachmentOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectAttachmentOptionsOutput)
}

// Connect attachment options for protocol
type ConnectAttachmentOptionsOutput struct{ *pulumi.OutputState }

func (ConnectAttachmentOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectAttachmentOptions)(nil)).Elem()
}

func (o ConnectAttachmentOptionsOutput) ToConnectAttachmentOptionsOutput() ConnectAttachmentOptionsOutput {
	return o
}

func (o ConnectAttachmentOptionsOutput) ToConnectAttachmentOptionsOutputWithContext(ctx context.Context) ConnectAttachmentOptionsOutput {
	return o
}

// Tunnel protocol for connect attachment
func (o ConnectAttachmentOptionsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectAttachmentOptions) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The attachment to move from one network function group to another.
type ConnectAttachmentProposedNetworkFunctionGroupChange struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the network function group to change.
	NetworkFunctionGroupName *string `pulumi:"networkFunctionGroupName"`
	// The key-value tags that changed for the network function group.
	Tags []ConnectAttachmentTag `pulumi:"tags"`
}

// ConnectAttachmentProposedNetworkFunctionGroupChangeInput is an input type that accepts ConnectAttachmentProposedNetworkFunctionGroupChangeArgs and ConnectAttachmentProposedNetworkFunctionGroupChangeOutput values.
// You can construct a concrete instance of `ConnectAttachmentProposedNetworkFunctionGroupChangeInput` via:
//
//	ConnectAttachmentProposedNetworkFunctionGroupChangeArgs{...}
type ConnectAttachmentProposedNetworkFunctionGroupChangeInput interface {
	pulumi.Input

	ToConnectAttachmentProposedNetworkFunctionGroupChangeOutput() ConnectAttachmentProposedNetworkFunctionGroupChangeOutput
	ToConnectAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(context.Context) ConnectAttachmentProposedNetworkFunctionGroupChangeOutput
}

// The attachment to move from one network function group to another.
type ConnectAttachmentProposedNetworkFunctionGroupChangeArgs struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber pulumi.IntPtrInput `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the network function group to change.
	NetworkFunctionGroupName pulumi.StringPtrInput `pulumi:"networkFunctionGroupName"`
	// The key-value tags that changed for the network function group.
	Tags ConnectAttachmentTagArrayInput `pulumi:"tags"`
}

func (ConnectAttachmentProposedNetworkFunctionGroupChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (i ConnectAttachmentProposedNetworkFunctionGroupChangeArgs) ToConnectAttachmentProposedNetworkFunctionGroupChangeOutput() ConnectAttachmentProposedNetworkFunctionGroupChangeOutput {
	return i.ToConnectAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(context.Background())
}

func (i ConnectAttachmentProposedNetworkFunctionGroupChangeArgs) ToConnectAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(ctx context.Context) ConnectAttachmentProposedNetworkFunctionGroupChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectAttachmentProposedNetworkFunctionGroupChangeOutput)
}

func (i ConnectAttachmentProposedNetworkFunctionGroupChangeArgs) ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput() ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return i.ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (i ConnectAttachmentProposedNetworkFunctionGroupChangeArgs) ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectAttachmentProposedNetworkFunctionGroupChangeOutput).ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx)
}

// ConnectAttachmentProposedNetworkFunctionGroupChangePtrInput is an input type that accepts ConnectAttachmentProposedNetworkFunctionGroupChangeArgs, ConnectAttachmentProposedNetworkFunctionGroupChangePtr and ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput values.
// You can construct a concrete instance of `ConnectAttachmentProposedNetworkFunctionGroupChangePtrInput` via:
//
//	        ConnectAttachmentProposedNetworkFunctionGroupChangeArgs{...}
//
//	or:
//
//	        nil
type ConnectAttachmentProposedNetworkFunctionGroupChangePtrInput interface {
	pulumi.Input

	ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput() ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput
	ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Context) ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput
}

type connectAttachmentProposedNetworkFunctionGroupChangePtrType ConnectAttachmentProposedNetworkFunctionGroupChangeArgs

func ConnectAttachmentProposedNetworkFunctionGroupChangePtr(v *ConnectAttachmentProposedNetworkFunctionGroupChangeArgs) ConnectAttachmentProposedNetworkFunctionGroupChangePtrInput {
	return (*connectAttachmentProposedNetworkFunctionGroupChangePtrType)(v)
}

func (*connectAttachmentProposedNetworkFunctionGroupChangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (i *connectAttachmentProposedNetworkFunctionGroupChangePtrType) ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput() ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return i.ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (i *connectAttachmentProposedNetworkFunctionGroupChangePtrType) ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput)
}

// The attachment to move from one network function group to another.
type ConnectAttachmentProposedNetworkFunctionGroupChangeOutput struct{ *pulumi.OutputState }

func (ConnectAttachmentProposedNetworkFunctionGroupChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (o ConnectAttachmentProposedNetworkFunctionGroupChangeOutput) ToConnectAttachmentProposedNetworkFunctionGroupChangeOutput() ConnectAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o
}

func (o ConnectAttachmentProposedNetworkFunctionGroupChangeOutput) ToConnectAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(ctx context.Context) ConnectAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o
}

func (o ConnectAttachmentProposedNetworkFunctionGroupChangeOutput) ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput() ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o.ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (o ConnectAttachmentProposedNetworkFunctionGroupChangeOutput) ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectAttachmentProposedNetworkFunctionGroupChange) *ConnectAttachmentProposedNetworkFunctionGroupChange {
		return &v
	}).(ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput)
}

// The rule number in the policy document that applies to this change.
func (o ConnectAttachmentProposedNetworkFunctionGroupChangeOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectAttachmentProposedNetworkFunctionGroupChange) *int { return v.AttachmentPolicyRuleNumber }).(pulumi.IntPtrOutput)
}

// The name of the network function group to change.
func (o ConnectAttachmentProposedNetworkFunctionGroupChangeOutput) NetworkFunctionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectAttachmentProposedNetworkFunctionGroupChange) *string { return v.NetworkFunctionGroupName }).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the network function group.
func (o ConnectAttachmentProposedNetworkFunctionGroupChangeOutput) Tags() ConnectAttachmentTagArrayOutput {
	return o.ApplyT(func(v ConnectAttachmentProposedNetworkFunctionGroupChange) []ConnectAttachmentTag { return v.Tags }).(ConnectAttachmentTagArrayOutput)
}

type ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput struct{ *pulumi.OutputState }

func (ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (o ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput) ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput() ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o
}

func (o ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput) ToConnectAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o
}

func (o ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput) Elem() ConnectAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o.ApplyT(func(v *ConnectAttachmentProposedNetworkFunctionGroupChange) ConnectAttachmentProposedNetworkFunctionGroupChange {
		if v != nil {
			return *v
		}
		var ret ConnectAttachmentProposedNetworkFunctionGroupChange
		return ret
	}).(ConnectAttachmentProposedNetworkFunctionGroupChangeOutput)
}

// The rule number in the policy document that applies to this change.
func (o ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectAttachmentProposedNetworkFunctionGroupChange) *int {
		if v == nil {
			return nil
		}
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the network function group to change.
func (o ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput) NetworkFunctionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectAttachmentProposedNetworkFunctionGroupChange) *string {
		if v == nil {
			return nil
		}
		return v.NetworkFunctionGroupName
	}).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the network function group.
func (o ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput) Tags() ConnectAttachmentTagArrayOutput {
	return o.ApplyT(func(v *ConnectAttachmentProposedNetworkFunctionGroupChange) []ConnectAttachmentTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(ConnectAttachmentTagArrayOutput)
}

// The attachment to move from one segment to another.
type ConnectAttachmentProposedSegmentChange struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the segment to change.
	SegmentName *string `pulumi:"segmentName"`
	// The list of key-value tags that changed for the segment.
	Tags []ConnectAttachmentTag `pulumi:"tags"`
}

// ConnectAttachmentProposedSegmentChangeInput is an input type that accepts ConnectAttachmentProposedSegmentChangeArgs and ConnectAttachmentProposedSegmentChangeOutput values.
// You can construct a concrete instance of `ConnectAttachmentProposedSegmentChangeInput` via:
//
//	ConnectAttachmentProposedSegmentChangeArgs{...}
type ConnectAttachmentProposedSegmentChangeInput interface {
	pulumi.Input

	ToConnectAttachmentProposedSegmentChangeOutput() ConnectAttachmentProposedSegmentChangeOutput
	ToConnectAttachmentProposedSegmentChangeOutputWithContext(context.Context) ConnectAttachmentProposedSegmentChangeOutput
}

// The attachment to move from one segment to another.
type ConnectAttachmentProposedSegmentChangeArgs struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber pulumi.IntPtrInput `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the segment to change.
	SegmentName pulumi.StringPtrInput `pulumi:"segmentName"`
	// The list of key-value tags that changed for the segment.
	Tags ConnectAttachmentTagArrayInput `pulumi:"tags"`
}

func (ConnectAttachmentProposedSegmentChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectAttachmentProposedSegmentChange)(nil)).Elem()
}

func (i ConnectAttachmentProposedSegmentChangeArgs) ToConnectAttachmentProposedSegmentChangeOutput() ConnectAttachmentProposedSegmentChangeOutput {
	return i.ToConnectAttachmentProposedSegmentChangeOutputWithContext(context.Background())
}

func (i ConnectAttachmentProposedSegmentChangeArgs) ToConnectAttachmentProposedSegmentChangeOutputWithContext(ctx context.Context) ConnectAttachmentProposedSegmentChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectAttachmentProposedSegmentChangeOutput)
}

func (i ConnectAttachmentProposedSegmentChangeArgs) ToConnectAttachmentProposedSegmentChangePtrOutput() ConnectAttachmentProposedSegmentChangePtrOutput {
	return i.ToConnectAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (i ConnectAttachmentProposedSegmentChangeArgs) ToConnectAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) ConnectAttachmentProposedSegmentChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectAttachmentProposedSegmentChangeOutput).ToConnectAttachmentProposedSegmentChangePtrOutputWithContext(ctx)
}

// ConnectAttachmentProposedSegmentChangePtrInput is an input type that accepts ConnectAttachmentProposedSegmentChangeArgs, ConnectAttachmentProposedSegmentChangePtr and ConnectAttachmentProposedSegmentChangePtrOutput values.
// You can construct a concrete instance of `ConnectAttachmentProposedSegmentChangePtrInput` via:
//
//	        ConnectAttachmentProposedSegmentChangeArgs{...}
//
//	or:
//
//	        nil
type ConnectAttachmentProposedSegmentChangePtrInput interface {
	pulumi.Input

	ToConnectAttachmentProposedSegmentChangePtrOutput() ConnectAttachmentProposedSegmentChangePtrOutput
	ToConnectAttachmentProposedSegmentChangePtrOutputWithContext(context.Context) ConnectAttachmentProposedSegmentChangePtrOutput
}

type connectAttachmentProposedSegmentChangePtrType ConnectAttachmentProposedSegmentChangeArgs

func ConnectAttachmentProposedSegmentChangePtr(v *ConnectAttachmentProposedSegmentChangeArgs) ConnectAttachmentProposedSegmentChangePtrInput {
	return (*connectAttachmentProposedSegmentChangePtrType)(v)
}

func (*connectAttachmentProposedSegmentChangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectAttachmentProposedSegmentChange)(nil)).Elem()
}

func (i *connectAttachmentProposedSegmentChangePtrType) ToConnectAttachmentProposedSegmentChangePtrOutput() ConnectAttachmentProposedSegmentChangePtrOutput {
	return i.ToConnectAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (i *connectAttachmentProposedSegmentChangePtrType) ToConnectAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) ConnectAttachmentProposedSegmentChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectAttachmentProposedSegmentChangePtrOutput)
}

// The attachment to move from one segment to another.
type ConnectAttachmentProposedSegmentChangeOutput struct{ *pulumi.OutputState }

func (ConnectAttachmentProposedSegmentChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectAttachmentProposedSegmentChange)(nil)).Elem()
}

func (o ConnectAttachmentProposedSegmentChangeOutput) ToConnectAttachmentProposedSegmentChangeOutput() ConnectAttachmentProposedSegmentChangeOutput {
	return o
}

func (o ConnectAttachmentProposedSegmentChangeOutput) ToConnectAttachmentProposedSegmentChangeOutputWithContext(ctx context.Context) ConnectAttachmentProposedSegmentChangeOutput {
	return o
}

func (o ConnectAttachmentProposedSegmentChangeOutput) ToConnectAttachmentProposedSegmentChangePtrOutput() ConnectAttachmentProposedSegmentChangePtrOutput {
	return o.ToConnectAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (o ConnectAttachmentProposedSegmentChangeOutput) ToConnectAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) ConnectAttachmentProposedSegmentChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectAttachmentProposedSegmentChange) *ConnectAttachmentProposedSegmentChange {
		return &v
	}).(ConnectAttachmentProposedSegmentChangePtrOutput)
}

// The rule number in the policy document that applies to this change.
func (o ConnectAttachmentProposedSegmentChangeOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectAttachmentProposedSegmentChange) *int { return v.AttachmentPolicyRuleNumber }).(pulumi.IntPtrOutput)
}

// The name of the segment to change.
func (o ConnectAttachmentProposedSegmentChangeOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectAttachmentProposedSegmentChange) *string { return v.SegmentName }).(pulumi.StringPtrOutput)
}

// The list of key-value tags that changed for the segment.
func (o ConnectAttachmentProposedSegmentChangeOutput) Tags() ConnectAttachmentTagArrayOutput {
	return o.ApplyT(func(v ConnectAttachmentProposedSegmentChange) []ConnectAttachmentTag { return v.Tags }).(ConnectAttachmentTagArrayOutput)
}

type ConnectAttachmentProposedSegmentChangePtrOutput struct{ *pulumi.OutputState }

func (ConnectAttachmentProposedSegmentChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectAttachmentProposedSegmentChange)(nil)).Elem()
}

func (o ConnectAttachmentProposedSegmentChangePtrOutput) ToConnectAttachmentProposedSegmentChangePtrOutput() ConnectAttachmentProposedSegmentChangePtrOutput {
	return o
}

func (o ConnectAttachmentProposedSegmentChangePtrOutput) ToConnectAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) ConnectAttachmentProposedSegmentChangePtrOutput {
	return o
}

func (o ConnectAttachmentProposedSegmentChangePtrOutput) Elem() ConnectAttachmentProposedSegmentChangeOutput {
	return o.ApplyT(func(v *ConnectAttachmentProposedSegmentChange) ConnectAttachmentProposedSegmentChange {
		if v != nil {
			return *v
		}
		var ret ConnectAttachmentProposedSegmentChange
		return ret
	}).(ConnectAttachmentProposedSegmentChangeOutput)
}

// The rule number in the policy document that applies to this change.
func (o ConnectAttachmentProposedSegmentChangePtrOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectAttachmentProposedSegmentChange) *int {
		if v == nil {
			return nil
		}
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the segment to change.
func (o ConnectAttachmentProposedSegmentChangePtrOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectAttachmentProposedSegmentChange) *string {
		if v == nil {
			return nil
		}
		return v.SegmentName
	}).(pulumi.StringPtrOutput)
}

// The list of key-value tags that changed for the segment.
func (o ConnectAttachmentProposedSegmentChangePtrOutput) Tags() ConnectAttachmentTagArrayOutput {
	return o.ApplyT(func(v *ConnectAttachmentProposedSegmentChange) []ConnectAttachmentTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(ConnectAttachmentTagArrayOutput)
}

// A key-value pair to associate with a resource.
type ConnectAttachmentTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// ConnectAttachmentTagInput is an input type that accepts ConnectAttachmentTagArgs and ConnectAttachmentTagOutput values.
// You can construct a concrete instance of `ConnectAttachmentTagInput` via:
//
//	ConnectAttachmentTagArgs{...}
type ConnectAttachmentTagInput interface {
	pulumi.Input

	ToConnectAttachmentTagOutput() ConnectAttachmentTagOutput
	ToConnectAttachmentTagOutputWithContext(context.Context) ConnectAttachmentTagOutput
}

// A key-value pair to associate with a resource.
type ConnectAttachmentTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ConnectAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectAttachmentTag)(nil)).Elem()
}

func (i ConnectAttachmentTagArgs) ToConnectAttachmentTagOutput() ConnectAttachmentTagOutput {
	return i.ToConnectAttachmentTagOutputWithContext(context.Background())
}

func (i ConnectAttachmentTagArgs) ToConnectAttachmentTagOutputWithContext(ctx context.Context) ConnectAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectAttachmentTagOutput)
}

// ConnectAttachmentTagArrayInput is an input type that accepts ConnectAttachmentTagArray and ConnectAttachmentTagArrayOutput values.
// You can construct a concrete instance of `ConnectAttachmentTagArrayInput` via:
//
//	ConnectAttachmentTagArray{ ConnectAttachmentTagArgs{...} }
type ConnectAttachmentTagArrayInput interface {
	pulumi.Input

	ToConnectAttachmentTagArrayOutput() ConnectAttachmentTagArrayOutput
	ToConnectAttachmentTagArrayOutputWithContext(context.Context) ConnectAttachmentTagArrayOutput
}

type ConnectAttachmentTagArray []ConnectAttachmentTagInput

func (ConnectAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectAttachmentTag)(nil)).Elem()
}

func (i ConnectAttachmentTagArray) ToConnectAttachmentTagArrayOutput() ConnectAttachmentTagArrayOutput {
	return i.ToConnectAttachmentTagArrayOutputWithContext(context.Background())
}

func (i ConnectAttachmentTagArray) ToConnectAttachmentTagArrayOutputWithContext(ctx context.Context) ConnectAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectAttachmentTagArrayOutput)
}

// A key-value pair to associate with a resource.
type ConnectAttachmentTagOutput struct{ *pulumi.OutputState }

func (ConnectAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectAttachmentTag)(nil)).Elem()
}

func (o ConnectAttachmentTagOutput) ToConnectAttachmentTagOutput() ConnectAttachmentTagOutput {
	return o
}

func (o ConnectAttachmentTagOutput) ToConnectAttachmentTagOutputWithContext(ctx context.Context) ConnectAttachmentTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ConnectAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ConnectAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type ConnectAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (ConnectAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectAttachmentTag)(nil)).Elem()
}

func (o ConnectAttachmentTagArrayOutput) ToConnectAttachmentTagArrayOutput() ConnectAttachmentTagArrayOutput {
	return o
}

func (o ConnectAttachmentTagArrayOutput) ToConnectAttachmentTagArrayOutputWithContext(ctx context.Context) ConnectAttachmentTagArrayOutput {
	return o
}

func (o ConnectAttachmentTagArrayOutput) Index(i pulumi.IntInput) ConnectAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectAttachmentTag {
		return vs[0].([]ConnectAttachmentTag)[vs[1].(int)]
	}).(ConnectAttachmentTagOutput)
}

// Bgp configuration for connect peer
type ConnectPeerBgpConfiguration struct {
	// The address of a core network.
	CoreNetworkAddress *string `pulumi:"coreNetworkAddress"`
	// The ASN of the Coret Network.
	CoreNetworkAsn *float64 `pulumi:"coreNetworkAsn"`
	// The address of a core network Connect peer.
	PeerAddress *string `pulumi:"peerAddress"`
	// The ASN of the Connect peer.
	PeerAsn *float64 `pulumi:"peerAsn"`
}

// Bgp configuration for connect peer
type ConnectPeerBgpConfigurationOutput struct{ *pulumi.OutputState }

func (ConnectPeerBgpConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectPeerBgpConfiguration)(nil)).Elem()
}

func (o ConnectPeerBgpConfigurationOutput) ToConnectPeerBgpConfigurationOutput() ConnectPeerBgpConfigurationOutput {
	return o
}

func (o ConnectPeerBgpConfigurationOutput) ToConnectPeerBgpConfigurationOutputWithContext(ctx context.Context) ConnectPeerBgpConfigurationOutput {
	return o
}

// The address of a core network.
func (o ConnectPeerBgpConfigurationOutput) CoreNetworkAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectPeerBgpConfiguration) *string { return v.CoreNetworkAddress }).(pulumi.StringPtrOutput)
}

// The ASN of the Coret Network.
func (o ConnectPeerBgpConfigurationOutput) CoreNetworkAsn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ConnectPeerBgpConfiguration) *float64 { return v.CoreNetworkAsn }).(pulumi.Float64PtrOutput)
}

// The address of a core network Connect peer.
func (o ConnectPeerBgpConfigurationOutput) PeerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectPeerBgpConfiguration) *string { return v.PeerAddress }).(pulumi.StringPtrOutput)
}

// The ASN of the Connect peer.
func (o ConnectPeerBgpConfigurationOutput) PeerAsn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ConnectPeerBgpConfiguration) *float64 { return v.PeerAsn }).(pulumi.Float64PtrOutput)
}

type ConnectPeerBgpConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ConnectPeerBgpConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectPeerBgpConfiguration)(nil)).Elem()
}

func (o ConnectPeerBgpConfigurationArrayOutput) ToConnectPeerBgpConfigurationArrayOutput() ConnectPeerBgpConfigurationArrayOutput {
	return o
}

func (o ConnectPeerBgpConfigurationArrayOutput) ToConnectPeerBgpConfigurationArrayOutputWithContext(ctx context.Context) ConnectPeerBgpConfigurationArrayOutput {
	return o
}

func (o ConnectPeerBgpConfigurationArrayOutput) Index(i pulumi.IntInput) ConnectPeerBgpConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectPeerBgpConfiguration {
		return vs[0].([]ConnectPeerBgpConfiguration)[vs[1].(int)]
	}).(ConnectPeerBgpConfigurationOutput)
}

// Bgp options
type ConnectPeerBgpOptions struct {
	// The Peer ASN of the BGP.
	PeerAsn *float64 `pulumi:"peerAsn"`
}

// ConnectPeerBgpOptionsInput is an input type that accepts ConnectPeerBgpOptionsArgs and ConnectPeerBgpOptionsOutput values.
// You can construct a concrete instance of `ConnectPeerBgpOptionsInput` via:
//
//	ConnectPeerBgpOptionsArgs{...}
type ConnectPeerBgpOptionsInput interface {
	pulumi.Input

	ToConnectPeerBgpOptionsOutput() ConnectPeerBgpOptionsOutput
	ToConnectPeerBgpOptionsOutputWithContext(context.Context) ConnectPeerBgpOptionsOutput
}

// Bgp options
type ConnectPeerBgpOptionsArgs struct {
	// The Peer ASN of the BGP.
	PeerAsn pulumi.Float64PtrInput `pulumi:"peerAsn"`
}

func (ConnectPeerBgpOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectPeerBgpOptions)(nil)).Elem()
}

func (i ConnectPeerBgpOptionsArgs) ToConnectPeerBgpOptionsOutput() ConnectPeerBgpOptionsOutput {
	return i.ToConnectPeerBgpOptionsOutputWithContext(context.Background())
}

func (i ConnectPeerBgpOptionsArgs) ToConnectPeerBgpOptionsOutputWithContext(ctx context.Context) ConnectPeerBgpOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectPeerBgpOptionsOutput)
}

func (i ConnectPeerBgpOptionsArgs) ToConnectPeerBgpOptionsPtrOutput() ConnectPeerBgpOptionsPtrOutput {
	return i.ToConnectPeerBgpOptionsPtrOutputWithContext(context.Background())
}

func (i ConnectPeerBgpOptionsArgs) ToConnectPeerBgpOptionsPtrOutputWithContext(ctx context.Context) ConnectPeerBgpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectPeerBgpOptionsOutput).ToConnectPeerBgpOptionsPtrOutputWithContext(ctx)
}

// ConnectPeerBgpOptionsPtrInput is an input type that accepts ConnectPeerBgpOptionsArgs, ConnectPeerBgpOptionsPtr and ConnectPeerBgpOptionsPtrOutput values.
// You can construct a concrete instance of `ConnectPeerBgpOptionsPtrInput` via:
//
//	        ConnectPeerBgpOptionsArgs{...}
//
//	or:
//
//	        nil
type ConnectPeerBgpOptionsPtrInput interface {
	pulumi.Input

	ToConnectPeerBgpOptionsPtrOutput() ConnectPeerBgpOptionsPtrOutput
	ToConnectPeerBgpOptionsPtrOutputWithContext(context.Context) ConnectPeerBgpOptionsPtrOutput
}

type connectPeerBgpOptionsPtrType ConnectPeerBgpOptionsArgs

func ConnectPeerBgpOptionsPtr(v *ConnectPeerBgpOptionsArgs) ConnectPeerBgpOptionsPtrInput {
	return (*connectPeerBgpOptionsPtrType)(v)
}

func (*connectPeerBgpOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectPeerBgpOptions)(nil)).Elem()
}

func (i *connectPeerBgpOptionsPtrType) ToConnectPeerBgpOptionsPtrOutput() ConnectPeerBgpOptionsPtrOutput {
	return i.ToConnectPeerBgpOptionsPtrOutputWithContext(context.Background())
}

func (i *connectPeerBgpOptionsPtrType) ToConnectPeerBgpOptionsPtrOutputWithContext(ctx context.Context) ConnectPeerBgpOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectPeerBgpOptionsPtrOutput)
}

// Bgp options
type ConnectPeerBgpOptionsOutput struct{ *pulumi.OutputState }

func (ConnectPeerBgpOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectPeerBgpOptions)(nil)).Elem()
}

func (o ConnectPeerBgpOptionsOutput) ToConnectPeerBgpOptionsOutput() ConnectPeerBgpOptionsOutput {
	return o
}

func (o ConnectPeerBgpOptionsOutput) ToConnectPeerBgpOptionsOutputWithContext(ctx context.Context) ConnectPeerBgpOptionsOutput {
	return o
}

func (o ConnectPeerBgpOptionsOutput) ToConnectPeerBgpOptionsPtrOutput() ConnectPeerBgpOptionsPtrOutput {
	return o.ToConnectPeerBgpOptionsPtrOutputWithContext(context.Background())
}

func (o ConnectPeerBgpOptionsOutput) ToConnectPeerBgpOptionsPtrOutputWithContext(ctx context.Context) ConnectPeerBgpOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectPeerBgpOptions) *ConnectPeerBgpOptions {
		return &v
	}).(ConnectPeerBgpOptionsPtrOutput)
}

// The Peer ASN of the BGP.
func (o ConnectPeerBgpOptionsOutput) PeerAsn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ConnectPeerBgpOptions) *float64 { return v.PeerAsn }).(pulumi.Float64PtrOutput)
}

type ConnectPeerBgpOptionsPtrOutput struct{ *pulumi.OutputState }

func (ConnectPeerBgpOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectPeerBgpOptions)(nil)).Elem()
}

func (o ConnectPeerBgpOptionsPtrOutput) ToConnectPeerBgpOptionsPtrOutput() ConnectPeerBgpOptionsPtrOutput {
	return o
}

func (o ConnectPeerBgpOptionsPtrOutput) ToConnectPeerBgpOptionsPtrOutputWithContext(ctx context.Context) ConnectPeerBgpOptionsPtrOutput {
	return o
}

func (o ConnectPeerBgpOptionsPtrOutput) Elem() ConnectPeerBgpOptionsOutput {
	return o.ApplyT(func(v *ConnectPeerBgpOptions) ConnectPeerBgpOptions {
		if v != nil {
			return *v
		}
		var ret ConnectPeerBgpOptions
		return ret
	}).(ConnectPeerBgpOptionsOutput)
}

// The Peer ASN of the BGP.
func (o ConnectPeerBgpOptionsPtrOutput) PeerAsn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ConnectPeerBgpOptions) *float64 {
		if v == nil {
			return nil
		}
		return v.PeerAsn
	}).(pulumi.Float64PtrOutput)
}

type ConnectPeerConfiguration struct {
	// The Connect peer BGP configurations.
	BgpConfigurations []ConnectPeerBgpConfiguration `pulumi:"bgpConfigurations"`
	// The IP address of a core network.
	CoreNetworkAddress *string `pulumi:"coreNetworkAddress"`
	// The inside IP addresses used for a Connect peer configuration.
	InsideCidrBlocks []string `pulumi:"insideCidrBlocks"`
	// The IP address of the Connect peer.
	PeerAddress *string `pulumi:"peerAddress"`
	// The protocol used for a Connect peer configuration.
	Protocol *string `pulumi:"protocol"`
}

type ConnectPeerConfigurationOutput struct{ *pulumi.OutputState }

func (ConnectPeerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectPeerConfiguration)(nil)).Elem()
}

func (o ConnectPeerConfigurationOutput) ToConnectPeerConfigurationOutput() ConnectPeerConfigurationOutput {
	return o
}

func (o ConnectPeerConfigurationOutput) ToConnectPeerConfigurationOutputWithContext(ctx context.Context) ConnectPeerConfigurationOutput {
	return o
}

// The Connect peer BGP configurations.
func (o ConnectPeerConfigurationOutput) BgpConfigurations() ConnectPeerBgpConfigurationArrayOutput {
	return o.ApplyT(func(v ConnectPeerConfiguration) []ConnectPeerBgpConfiguration { return v.BgpConfigurations }).(ConnectPeerBgpConfigurationArrayOutput)
}

// The IP address of a core network.
func (o ConnectPeerConfigurationOutput) CoreNetworkAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectPeerConfiguration) *string { return v.CoreNetworkAddress }).(pulumi.StringPtrOutput)
}

// The inside IP addresses used for a Connect peer configuration.
func (o ConnectPeerConfigurationOutput) InsideCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectPeerConfiguration) []string { return v.InsideCidrBlocks }).(pulumi.StringArrayOutput)
}

// The IP address of the Connect peer.
func (o ConnectPeerConfigurationOutput) PeerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectPeerConfiguration) *string { return v.PeerAddress }).(pulumi.StringPtrOutput)
}

// The protocol used for a Connect peer configuration.
func (o ConnectPeerConfigurationOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectPeerConfiguration) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ConnectPeerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConnectPeerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectPeerConfiguration)(nil)).Elem()
}

func (o ConnectPeerConfigurationPtrOutput) ToConnectPeerConfigurationPtrOutput() ConnectPeerConfigurationPtrOutput {
	return o
}

func (o ConnectPeerConfigurationPtrOutput) ToConnectPeerConfigurationPtrOutputWithContext(ctx context.Context) ConnectPeerConfigurationPtrOutput {
	return o
}

func (o ConnectPeerConfigurationPtrOutput) Elem() ConnectPeerConfigurationOutput {
	return o.ApplyT(func(v *ConnectPeerConfiguration) ConnectPeerConfiguration {
		if v != nil {
			return *v
		}
		var ret ConnectPeerConfiguration
		return ret
	}).(ConnectPeerConfigurationOutput)
}

// The Connect peer BGP configurations.
func (o ConnectPeerConfigurationPtrOutput) BgpConfigurations() ConnectPeerBgpConfigurationArrayOutput {
	return o.ApplyT(func(v *ConnectPeerConfiguration) []ConnectPeerBgpConfiguration {
		if v == nil {
			return nil
		}
		return v.BgpConfigurations
	}).(ConnectPeerBgpConfigurationArrayOutput)
}

// The IP address of a core network.
func (o ConnectPeerConfigurationPtrOutput) CoreNetworkAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectPeerConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CoreNetworkAddress
	}).(pulumi.StringPtrOutput)
}

// The inside IP addresses used for a Connect peer configuration.
func (o ConnectPeerConfigurationPtrOutput) InsideCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectPeerConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.InsideCidrBlocks
	}).(pulumi.StringArrayOutput)
}

// The IP address of the Connect peer.
func (o ConnectPeerConfigurationPtrOutput) PeerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectPeerConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PeerAddress
	}).(pulumi.StringPtrOutput)
}

// The protocol used for a Connect peer configuration.
func (o ConnectPeerConfigurationPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectPeerConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type ConnectPeerTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type CoreNetworkEdge struct {
	// The ASN of a core network edge.
	Asn *float64 `pulumi:"asn"`
	// The Region where a core network edge is located.
	EdgeLocation *string `pulumi:"edgeLocation"`
	// The inside IP addresses used for core network edges.
	InsideCidrBlocks []string `pulumi:"insideCidrBlocks"`
}

type CoreNetworkEdgeOutput struct{ *pulumi.OutputState }

func (CoreNetworkEdgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreNetworkEdge)(nil)).Elem()
}

func (o CoreNetworkEdgeOutput) ToCoreNetworkEdgeOutput() CoreNetworkEdgeOutput {
	return o
}

func (o CoreNetworkEdgeOutput) ToCoreNetworkEdgeOutputWithContext(ctx context.Context) CoreNetworkEdgeOutput {
	return o
}

// The ASN of a core network edge.
func (o CoreNetworkEdgeOutput) Asn() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v CoreNetworkEdge) *float64 { return v.Asn }).(pulumi.Float64PtrOutput)
}

// The Region where a core network edge is located.
func (o CoreNetworkEdgeOutput) EdgeLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CoreNetworkEdge) *string { return v.EdgeLocation }).(pulumi.StringPtrOutput)
}

// The inside IP addresses used for core network edges.
func (o CoreNetworkEdgeOutput) InsideCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CoreNetworkEdge) []string { return v.InsideCidrBlocks }).(pulumi.StringArrayOutput)
}

type CoreNetworkEdgeArrayOutput struct{ *pulumi.OutputState }

func (CoreNetworkEdgeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreNetworkEdge)(nil)).Elem()
}

func (o CoreNetworkEdgeArrayOutput) ToCoreNetworkEdgeArrayOutput() CoreNetworkEdgeArrayOutput {
	return o
}

func (o CoreNetworkEdgeArrayOutput) ToCoreNetworkEdgeArrayOutputWithContext(ctx context.Context) CoreNetworkEdgeArrayOutput {
	return o
}

func (o CoreNetworkEdgeArrayOutput) Index(i pulumi.IntInput) CoreNetworkEdgeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreNetworkEdge {
		return vs[0].([]CoreNetworkEdge)[vs[1].(int)]
	}).(CoreNetworkEdgeOutput)
}

type CoreNetworkNetworkFunctionGroup struct {
	// The core network edge locations.
	EdgeLocations []string `pulumi:"edgeLocations"`
	// Name of network function group
	Name *string `pulumi:"name"`
	// The segments associated with the network function group.
	Segments *CoreNetworkNetworkFunctionGroupSegmentsProperties `pulumi:"segments"`
}

type CoreNetworkNetworkFunctionGroupOutput struct{ *pulumi.OutputState }

func (CoreNetworkNetworkFunctionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreNetworkNetworkFunctionGroup)(nil)).Elem()
}

func (o CoreNetworkNetworkFunctionGroupOutput) ToCoreNetworkNetworkFunctionGroupOutput() CoreNetworkNetworkFunctionGroupOutput {
	return o
}

func (o CoreNetworkNetworkFunctionGroupOutput) ToCoreNetworkNetworkFunctionGroupOutputWithContext(ctx context.Context) CoreNetworkNetworkFunctionGroupOutput {
	return o
}

// The core network edge locations.
func (o CoreNetworkNetworkFunctionGroupOutput) EdgeLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CoreNetworkNetworkFunctionGroup) []string { return v.EdgeLocations }).(pulumi.StringArrayOutput)
}

// Name of network function group
func (o CoreNetworkNetworkFunctionGroupOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CoreNetworkNetworkFunctionGroup) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The segments associated with the network function group.
func (o CoreNetworkNetworkFunctionGroupOutput) Segments() CoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput {
	return o.ApplyT(func(v CoreNetworkNetworkFunctionGroup) *CoreNetworkNetworkFunctionGroupSegmentsProperties {
		return v.Segments
	}).(CoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput)
}

type CoreNetworkNetworkFunctionGroupArrayOutput struct{ *pulumi.OutputState }

func (CoreNetworkNetworkFunctionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreNetworkNetworkFunctionGroup)(nil)).Elem()
}

func (o CoreNetworkNetworkFunctionGroupArrayOutput) ToCoreNetworkNetworkFunctionGroupArrayOutput() CoreNetworkNetworkFunctionGroupArrayOutput {
	return o
}

func (o CoreNetworkNetworkFunctionGroupArrayOutput) ToCoreNetworkNetworkFunctionGroupArrayOutputWithContext(ctx context.Context) CoreNetworkNetworkFunctionGroupArrayOutput {
	return o
}

func (o CoreNetworkNetworkFunctionGroupArrayOutput) Index(i pulumi.IntInput) CoreNetworkNetworkFunctionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreNetworkNetworkFunctionGroup {
		return vs[0].([]CoreNetworkNetworkFunctionGroup)[vs[1].(int)]
	}).(CoreNetworkNetworkFunctionGroupOutput)
}

// The segments associated with the network function group.
type CoreNetworkNetworkFunctionGroupSegmentsProperties struct {
	SendTo  []string `pulumi:"sendTo"`
	SendVia []string `pulumi:"sendVia"`
}

// The segments associated with the network function group.
type CoreNetworkNetworkFunctionGroupSegmentsPropertiesOutput struct{ *pulumi.OutputState }

func (CoreNetworkNetworkFunctionGroupSegmentsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreNetworkNetworkFunctionGroupSegmentsProperties)(nil)).Elem()
}

func (o CoreNetworkNetworkFunctionGroupSegmentsPropertiesOutput) ToCoreNetworkNetworkFunctionGroupSegmentsPropertiesOutput() CoreNetworkNetworkFunctionGroupSegmentsPropertiesOutput {
	return o
}

func (o CoreNetworkNetworkFunctionGroupSegmentsPropertiesOutput) ToCoreNetworkNetworkFunctionGroupSegmentsPropertiesOutputWithContext(ctx context.Context) CoreNetworkNetworkFunctionGroupSegmentsPropertiesOutput {
	return o
}

func (o CoreNetworkNetworkFunctionGroupSegmentsPropertiesOutput) SendTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CoreNetworkNetworkFunctionGroupSegmentsProperties) []string { return v.SendTo }).(pulumi.StringArrayOutput)
}

func (o CoreNetworkNetworkFunctionGroupSegmentsPropertiesOutput) SendVia() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CoreNetworkNetworkFunctionGroupSegmentsProperties) []string { return v.SendVia }).(pulumi.StringArrayOutput)
}

type CoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (CoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CoreNetworkNetworkFunctionGroupSegmentsProperties)(nil)).Elem()
}

func (o CoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput) ToCoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput() CoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput {
	return o
}

func (o CoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput) ToCoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutputWithContext(ctx context.Context) CoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput {
	return o
}

func (o CoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput) Elem() CoreNetworkNetworkFunctionGroupSegmentsPropertiesOutput {
	return o.ApplyT(func(v *CoreNetworkNetworkFunctionGroupSegmentsProperties) CoreNetworkNetworkFunctionGroupSegmentsProperties {
		if v != nil {
			return *v
		}
		var ret CoreNetworkNetworkFunctionGroupSegmentsProperties
		return ret
	}).(CoreNetworkNetworkFunctionGroupSegmentsPropertiesOutput)
}

func (o CoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput) SendTo() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CoreNetworkNetworkFunctionGroupSegmentsProperties) []string {
		if v == nil {
			return nil
		}
		return v.SendTo
	}).(pulumi.StringArrayOutput)
}

func (o CoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput) SendVia() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CoreNetworkNetworkFunctionGroupSegmentsProperties) []string {
		if v == nil {
			return nil
		}
		return v.SendVia
	}).(pulumi.StringArrayOutput)
}

type CoreNetworkSegment struct {
	// The Regions where the edges are located.
	EdgeLocations []string `pulumi:"edgeLocations"`
	// Name of segment
	Name *string `pulumi:"name"`
	// The shared segments of a core network.
	SharedSegments []string `pulumi:"sharedSegments"`
}

type CoreNetworkSegmentOutput struct{ *pulumi.OutputState }

func (CoreNetworkSegmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CoreNetworkSegment)(nil)).Elem()
}

func (o CoreNetworkSegmentOutput) ToCoreNetworkSegmentOutput() CoreNetworkSegmentOutput {
	return o
}

func (o CoreNetworkSegmentOutput) ToCoreNetworkSegmentOutputWithContext(ctx context.Context) CoreNetworkSegmentOutput {
	return o
}

// The Regions where the edges are located.
func (o CoreNetworkSegmentOutput) EdgeLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CoreNetworkSegment) []string { return v.EdgeLocations }).(pulumi.StringArrayOutput)
}

// Name of segment
func (o CoreNetworkSegmentOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CoreNetworkSegment) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The shared segments of a core network.
func (o CoreNetworkSegmentOutput) SharedSegments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CoreNetworkSegment) []string { return v.SharedSegments }).(pulumi.StringArrayOutput)
}

type CoreNetworkSegmentArrayOutput struct{ *pulumi.OutputState }

func (CoreNetworkSegmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CoreNetworkSegment)(nil)).Elem()
}

func (o CoreNetworkSegmentArrayOutput) ToCoreNetworkSegmentArrayOutput() CoreNetworkSegmentArrayOutput {
	return o
}

func (o CoreNetworkSegmentArrayOutput) ToCoreNetworkSegmentArrayOutputWithContext(ctx context.Context) CoreNetworkSegmentArrayOutput {
	return o
}

func (o CoreNetworkSegmentArrayOutput) Index(i pulumi.IntInput) CoreNetworkSegmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CoreNetworkSegment {
		return vs[0].([]CoreNetworkSegment)[vs[1].(int)]
	}).(CoreNetworkSegmentOutput)
}

// A key-value pair to associate with a resource.
type CoreNetworkTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The Amazon Web Services location of the device, if applicable.
type DeviceAwsLocation struct {
	// The Amazon Resource Name (ARN) of the subnet that the device is located in.
	SubnetArn *string `pulumi:"subnetArn"`
	// The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
	Zone *string `pulumi:"zone"`
}

// DeviceAwsLocationInput is an input type that accepts DeviceAwsLocationArgs and DeviceAwsLocationOutput values.
// You can construct a concrete instance of `DeviceAwsLocationInput` via:
//
//	DeviceAwsLocationArgs{...}
type DeviceAwsLocationInput interface {
	pulumi.Input

	ToDeviceAwsLocationOutput() DeviceAwsLocationOutput
	ToDeviceAwsLocationOutputWithContext(context.Context) DeviceAwsLocationOutput
}

// The Amazon Web Services location of the device, if applicable.
type DeviceAwsLocationArgs struct {
	// The Amazon Resource Name (ARN) of the subnet that the device is located in.
	SubnetArn pulumi.StringPtrInput `pulumi:"subnetArn"`
	// The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (DeviceAwsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceAwsLocation)(nil)).Elem()
}

func (i DeviceAwsLocationArgs) ToDeviceAwsLocationOutput() DeviceAwsLocationOutput {
	return i.ToDeviceAwsLocationOutputWithContext(context.Background())
}

func (i DeviceAwsLocationArgs) ToDeviceAwsLocationOutputWithContext(ctx context.Context) DeviceAwsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAwsLocationOutput)
}

func (i DeviceAwsLocationArgs) ToDeviceAwsLocationPtrOutput() DeviceAwsLocationPtrOutput {
	return i.ToDeviceAwsLocationPtrOutputWithContext(context.Background())
}

func (i DeviceAwsLocationArgs) ToDeviceAwsLocationPtrOutputWithContext(ctx context.Context) DeviceAwsLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAwsLocationOutput).ToDeviceAwsLocationPtrOutputWithContext(ctx)
}

// DeviceAwsLocationPtrInput is an input type that accepts DeviceAwsLocationArgs, DeviceAwsLocationPtr and DeviceAwsLocationPtrOutput values.
// You can construct a concrete instance of `DeviceAwsLocationPtrInput` via:
//
//	        DeviceAwsLocationArgs{...}
//
//	or:
//
//	        nil
type DeviceAwsLocationPtrInput interface {
	pulumi.Input

	ToDeviceAwsLocationPtrOutput() DeviceAwsLocationPtrOutput
	ToDeviceAwsLocationPtrOutputWithContext(context.Context) DeviceAwsLocationPtrOutput
}

type deviceAwsLocationPtrType DeviceAwsLocationArgs

func DeviceAwsLocationPtr(v *DeviceAwsLocationArgs) DeviceAwsLocationPtrInput {
	return (*deviceAwsLocationPtrType)(v)
}

func (*deviceAwsLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceAwsLocation)(nil)).Elem()
}

func (i *deviceAwsLocationPtrType) ToDeviceAwsLocationPtrOutput() DeviceAwsLocationPtrOutput {
	return i.ToDeviceAwsLocationPtrOutputWithContext(context.Background())
}

func (i *deviceAwsLocationPtrType) ToDeviceAwsLocationPtrOutputWithContext(ctx context.Context) DeviceAwsLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAwsLocationPtrOutput)
}

// The Amazon Web Services location of the device, if applicable.
type DeviceAwsLocationOutput struct{ *pulumi.OutputState }

func (DeviceAwsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceAwsLocation)(nil)).Elem()
}

func (o DeviceAwsLocationOutput) ToDeviceAwsLocationOutput() DeviceAwsLocationOutput {
	return o
}

func (o DeviceAwsLocationOutput) ToDeviceAwsLocationOutputWithContext(ctx context.Context) DeviceAwsLocationOutput {
	return o
}

func (o DeviceAwsLocationOutput) ToDeviceAwsLocationPtrOutput() DeviceAwsLocationPtrOutput {
	return o.ToDeviceAwsLocationPtrOutputWithContext(context.Background())
}

func (o DeviceAwsLocationOutput) ToDeviceAwsLocationPtrOutputWithContext(ctx context.Context) DeviceAwsLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceAwsLocation) *DeviceAwsLocation {
		return &v
	}).(DeviceAwsLocationPtrOutput)
}

// The Amazon Resource Name (ARN) of the subnet that the device is located in.
func (o DeviceAwsLocationOutput) SubnetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceAwsLocation) *string { return v.SubnetArn }).(pulumi.StringPtrOutput)
}

// The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
func (o DeviceAwsLocationOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceAwsLocation) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type DeviceAwsLocationPtrOutput struct{ *pulumi.OutputState }

func (DeviceAwsLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceAwsLocation)(nil)).Elem()
}

func (o DeviceAwsLocationPtrOutput) ToDeviceAwsLocationPtrOutput() DeviceAwsLocationPtrOutput {
	return o
}

func (o DeviceAwsLocationPtrOutput) ToDeviceAwsLocationPtrOutputWithContext(ctx context.Context) DeviceAwsLocationPtrOutput {
	return o
}

func (o DeviceAwsLocationPtrOutput) Elem() DeviceAwsLocationOutput {
	return o.ApplyT(func(v *DeviceAwsLocation) DeviceAwsLocation {
		if v != nil {
			return *v
		}
		var ret DeviceAwsLocation
		return ret
	}).(DeviceAwsLocationOutput)
}

// The Amazon Resource Name (ARN) of the subnet that the device is located in.
func (o DeviceAwsLocationPtrOutput) SubnetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAwsLocation) *string {
		if v == nil {
			return nil
		}
		return v.SubnetArn
	}).(pulumi.StringPtrOutput)
}

// The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
func (o DeviceAwsLocationPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAwsLocation) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

// The site location.
type DeviceLocation struct {
	// The physical address.
	Address *string `pulumi:"address"`
	// The latitude.
	Latitude *string `pulumi:"latitude"`
	// The longitude.
	Longitude *string `pulumi:"longitude"`
}

// DeviceLocationInput is an input type that accepts DeviceLocationArgs and DeviceLocationOutput values.
// You can construct a concrete instance of `DeviceLocationInput` via:
//
//	DeviceLocationArgs{...}
type DeviceLocationInput interface {
	pulumi.Input

	ToDeviceLocationOutput() DeviceLocationOutput
	ToDeviceLocationOutputWithContext(context.Context) DeviceLocationOutput
}

// The site location.
type DeviceLocationArgs struct {
	// The physical address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The latitude.
	Latitude pulumi.StringPtrInput `pulumi:"latitude"`
	// The longitude.
	Longitude pulumi.StringPtrInput `pulumi:"longitude"`
}

func (DeviceLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLocation)(nil)).Elem()
}

func (i DeviceLocationArgs) ToDeviceLocationOutput() DeviceLocationOutput {
	return i.ToDeviceLocationOutputWithContext(context.Background())
}

func (i DeviceLocationArgs) ToDeviceLocationOutputWithContext(ctx context.Context) DeviceLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLocationOutput)
}

func (i DeviceLocationArgs) ToDeviceLocationPtrOutput() DeviceLocationPtrOutput {
	return i.ToDeviceLocationPtrOutputWithContext(context.Background())
}

func (i DeviceLocationArgs) ToDeviceLocationPtrOutputWithContext(ctx context.Context) DeviceLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLocationOutput).ToDeviceLocationPtrOutputWithContext(ctx)
}

// DeviceLocationPtrInput is an input type that accepts DeviceLocationArgs, DeviceLocationPtr and DeviceLocationPtrOutput values.
// You can construct a concrete instance of `DeviceLocationPtrInput` via:
//
//	        DeviceLocationArgs{...}
//
//	or:
//
//	        nil
type DeviceLocationPtrInput interface {
	pulumi.Input

	ToDeviceLocationPtrOutput() DeviceLocationPtrOutput
	ToDeviceLocationPtrOutputWithContext(context.Context) DeviceLocationPtrOutput
}

type deviceLocationPtrType DeviceLocationArgs

func DeviceLocationPtr(v *DeviceLocationArgs) DeviceLocationPtrInput {
	return (*deviceLocationPtrType)(v)
}

func (*deviceLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLocation)(nil)).Elem()
}

func (i *deviceLocationPtrType) ToDeviceLocationPtrOutput() DeviceLocationPtrOutput {
	return i.ToDeviceLocationPtrOutputWithContext(context.Background())
}

func (i *deviceLocationPtrType) ToDeviceLocationPtrOutputWithContext(ctx context.Context) DeviceLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLocationPtrOutput)
}

// The site location.
type DeviceLocationOutput struct{ *pulumi.OutputState }

func (DeviceLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLocation)(nil)).Elem()
}

func (o DeviceLocationOutput) ToDeviceLocationOutput() DeviceLocationOutput {
	return o
}

func (o DeviceLocationOutput) ToDeviceLocationOutputWithContext(ctx context.Context) DeviceLocationOutput {
	return o
}

func (o DeviceLocationOutput) ToDeviceLocationPtrOutput() DeviceLocationPtrOutput {
	return o.ToDeviceLocationPtrOutputWithContext(context.Background())
}

func (o DeviceLocationOutput) ToDeviceLocationPtrOutputWithContext(ctx context.Context) DeviceLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceLocation) *DeviceLocation {
		return &v
	}).(DeviceLocationPtrOutput)
}

// The physical address.
func (o DeviceLocationOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLocation) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The latitude.
func (o DeviceLocationOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLocation) *string { return v.Latitude }).(pulumi.StringPtrOutput)
}

// The longitude.
func (o DeviceLocationOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLocation) *string { return v.Longitude }).(pulumi.StringPtrOutput)
}

type DeviceLocationPtrOutput struct{ *pulumi.OutputState }

func (DeviceLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLocation)(nil)).Elem()
}

func (o DeviceLocationPtrOutput) ToDeviceLocationPtrOutput() DeviceLocationPtrOutput {
	return o
}

func (o DeviceLocationPtrOutput) ToDeviceLocationPtrOutputWithContext(ctx context.Context) DeviceLocationPtrOutput {
	return o
}

func (o DeviceLocationPtrOutput) Elem() DeviceLocationOutput {
	return o.ApplyT(func(v *DeviceLocation) DeviceLocation {
		if v != nil {
			return *v
		}
		var ret DeviceLocation
		return ret
	}).(DeviceLocationOutput)
}

// The physical address.
func (o DeviceLocationPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLocation) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The latitude.
func (o DeviceLocationPtrOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLocation) *string {
		if v == nil {
			return nil
		}
		return v.Latitude
	}).(pulumi.StringPtrOutput)
}

// The longitude.
func (o DeviceLocationPtrOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLocation) *string {
		if v == nil {
			return nil
		}
		return v.Longitude
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a device resource.
type DeviceTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The attachment to move from one network function group to another.
type DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the network function group to change.
	NetworkFunctionGroupName *string `pulumi:"networkFunctionGroupName"`
	// The key-value tags that changed for the network function group.
	Tags []DirectConnectGatewayAttachmentTag `pulumi:"tags"`
}

// DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeInput is an input type that accepts DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs and DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeInput` via:
//
//	DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs{...}
type DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput() DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput
	ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(context.Context) DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput
}

// The attachment to move from one network function group to another.
type DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber pulumi.IntPtrInput `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the network function group to change.
	NetworkFunctionGroupName pulumi.StringPtrInput `pulumi:"networkFunctionGroupName"`
	// The key-value tags that changed for the network function group.
	Tags DirectConnectGatewayAttachmentTagArrayInput `pulumi:"tags"`
}

func (DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (i DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs) ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput() DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput {
	return i.ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs) ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput)
}

func (i DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs) ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput() DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return i.ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs) ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput).ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx)
}

// DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrInput is an input type that accepts DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs, DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtr and DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrInput` via:
//
//	        DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs{...}
//
//	or:
//
//	        nil
type DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput() DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput
	ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Context) DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput
}

type directConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrType DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs

func DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtr(v *DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs) DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrInput {
	return (*directConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrType)(v)
}

func (*directConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (i *directConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrType) ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput() DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return i.ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (i *directConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrType) ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput)
}

// The attachment to move from one network function group to another.
type DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput) ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput() DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o
}

func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput) ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o
}

func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput) ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput() DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o.ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput) ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange) *DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange {
		return &v
	}).(DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput)
}

// The rule number in the policy document that applies to this change.
func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange) *int {
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the network function group to change.
func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput) NetworkFunctionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange) *string {
		return v.NetworkFunctionGroupName
	}).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the network function group.
func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput) Tags() DirectConnectGatewayAttachmentTagArrayOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange) []DirectConnectGatewayAttachmentTag {
		return v.Tags
	}).(DirectConnectGatewayAttachmentTagArrayOutput)
}

type DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput) ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput() DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o
}

func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput) ToDirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o
}

func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput) Elem() DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o.ApplyT(func(v *DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange) DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange {
		if v != nil {
			return *v
		}
		var ret DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange
		return ret
	}).(DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput)
}

// The rule number in the policy document that applies to this change.
func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange) *int {
		if v == nil {
			return nil
		}
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the network function group to change.
func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput) NetworkFunctionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange) *string {
		if v == nil {
			return nil
		}
		return v.NetworkFunctionGroupName
	}).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the network function group.
func (o DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput) Tags() DirectConnectGatewayAttachmentTagArrayOutput {
	return o.ApplyT(func(v *DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChange) []DirectConnectGatewayAttachmentTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(DirectConnectGatewayAttachmentTagArrayOutput)
}

// The attachment to move from one segment to another.
type DirectConnectGatewayAttachmentProposedSegmentChange struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the segment to change.
	SegmentName *string `pulumi:"segmentName"`
	// The key-value tags that changed for the segment.
	Tags []DirectConnectGatewayAttachmentTag `pulumi:"tags"`
}

// DirectConnectGatewayAttachmentProposedSegmentChangeInput is an input type that accepts DirectConnectGatewayAttachmentProposedSegmentChangeArgs and DirectConnectGatewayAttachmentProposedSegmentChangeOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentProposedSegmentChangeInput` via:
//
//	DirectConnectGatewayAttachmentProposedSegmentChangeArgs{...}
type DirectConnectGatewayAttachmentProposedSegmentChangeInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentProposedSegmentChangeOutput() DirectConnectGatewayAttachmentProposedSegmentChangeOutput
	ToDirectConnectGatewayAttachmentProposedSegmentChangeOutputWithContext(context.Context) DirectConnectGatewayAttachmentProposedSegmentChangeOutput
}

// The attachment to move from one segment to another.
type DirectConnectGatewayAttachmentProposedSegmentChangeArgs struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber pulumi.IntPtrInput `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the segment to change.
	SegmentName pulumi.StringPtrInput `pulumi:"segmentName"`
	// The key-value tags that changed for the segment.
	Tags DirectConnectGatewayAttachmentTagArrayInput `pulumi:"tags"`
}

func (DirectConnectGatewayAttachmentProposedSegmentChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentProposedSegmentChange)(nil)).Elem()
}

func (i DirectConnectGatewayAttachmentProposedSegmentChangeArgs) ToDirectConnectGatewayAttachmentProposedSegmentChangeOutput() DirectConnectGatewayAttachmentProposedSegmentChangeOutput {
	return i.ToDirectConnectGatewayAttachmentProposedSegmentChangeOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentProposedSegmentChangeArgs) ToDirectConnectGatewayAttachmentProposedSegmentChangeOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentProposedSegmentChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentProposedSegmentChangeOutput)
}

func (i DirectConnectGatewayAttachmentProposedSegmentChangeArgs) ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutput() DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput {
	return i.ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentProposedSegmentChangeArgs) ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentProposedSegmentChangeOutput).ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutputWithContext(ctx)
}

// DirectConnectGatewayAttachmentProposedSegmentChangePtrInput is an input type that accepts DirectConnectGatewayAttachmentProposedSegmentChangeArgs, DirectConnectGatewayAttachmentProposedSegmentChangePtr and DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentProposedSegmentChangePtrInput` via:
//
//	        DirectConnectGatewayAttachmentProposedSegmentChangeArgs{...}
//
//	or:
//
//	        nil
type DirectConnectGatewayAttachmentProposedSegmentChangePtrInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutput() DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput
	ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutputWithContext(context.Context) DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput
}

type directConnectGatewayAttachmentProposedSegmentChangePtrType DirectConnectGatewayAttachmentProposedSegmentChangeArgs

func DirectConnectGatewayAttachmentProposedSegmentChangePtr(v *DirectConnectGatewayAttachmentProposedSegmentChangeArgs) DirectConnectGatewayAttachmentProposedSegmentChangePtrInput {
	return (*directConnectGatewayAttachmentProposedSegmentChangePtrType)(v)
}

func (*directConnectGatewayAttachmentProposedSegmentChangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectConnectGatewayAttachmentProposedSegmentChange)(nil)).Elem()
}

func (i *directConnectGatewayAttachmentProposedSegmentChangePtrType) ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutput() DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput {
	return i.ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (i *directConnectGatewayAttachmentProposedSegmentChangePtrType) ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput)
}

// The attachment to move from one segment to another.
type DirectConnectGatewayAttachmentProposedSegmentChangeOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentProposedSegmentChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentProposedSegmentChange)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentProposedSegmentChangeOutput) ToDirectConnectGatewayAttachmentProposedSegmentChangeOutput() DirectConnectGatewayAttachmentProposedSegmentChangeOutput {
	return o
}

func (o DirectConnectGatewayAttachmentProposedSegmentChangeOutput) ToDirectConnectGatewayAttachmentProposedSegmentChangeOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentProposedSegmentChangeOutput {
	return o
}

func (o DirectConnectGatewayAttachmentProposedSegmentChangeOutput) ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutput() DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput {
	return o.ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (o DirectConnectGatewayAttachmentProposedSegmentChangeOutput) ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectConnectGatewayAttachmentProposedSegmentChange) *DirectConnectGatewayAttachmentProposedSegmentChange {
		return &v
	}).(DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput)
}

// The rule number in the policy document that applies to this change.
func (o DirectConnectGatewayAttachmentProposedSegmentChangeOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentProposedSegmentChange) *int { return v.AttachmentPolicyRuleNumber }).(pulumi.IntPtrOutput)
}

// The name of the segment to change.
func (o DirectConnectGatewayAttachmentProposedSegmentChangeOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentProposedSegmentChange) *string { return v.SegmentName }).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the segment.
func (o DirectConnectGatewayAttachmentProposedSegmentChangeOutput) Tags() DirectConnectGatewayAttachmentTagArrayOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentProposedSegmentChange) []DirectConnectGatewayAttachmentTag {
		return v.Tags
	}).(DirectConnectGatewayAttachmentTagArrayOutput)
}

type DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectConnectGatewayAttachmentProposedSegmentChange)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput) ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutput() DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput {
	return o
}

func (o DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput) ToDirectConnectGatewayAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput {
	return o
}

func (o DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput) Elem() DirectConnectGatewayAttachmentProposedSegmentChangeOutput {
	return o.ApplyT(func(v *DirectConnectGatewayAttachmentProposedSegmentChange) DirectConnectGatewayAttachmentProposedSegmentChange {
		if v != nil {
			return *v
		}
		var ret DirectConnectGatewayAttachmentProposedSegmentChange
		return ret
	}).(DirectConnectGatewayAttachmentProposedSegmentChangeOutput)
}

// The rule number in the policy document that applies to this change.
func (o DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectConnectGatewayAttachmentProposedSegmentChange) *int {
		if v == nil {
			return nil
		}
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the segment to change.
func (o DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectConnectGatewayAttachmentProposedSegmentChange) *string {
		if v == nil {
			return nil
		}
		return v.SegmentName
	}).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the segment.
func (o DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput) Tags() DirectConnectGatewayAttachmentTagArrayOutput {
	return o.ApplyT(func(v *DirectConnectGatewayAttachmentProposedSegmentChange) []DirectConnectGatewayAttachmentTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(DirectConnectGatewayAttachmentTagArrayOutput)
}

// A key-value pair to associate with a resource.
type DirectConnectGatewayAttachmentTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// DirectConnectGatewayAttachmentTagInput is an input type that accepts DirectConnectGatewayAttachmentTagArgs and DirectConnectGatewayAttachmentTagOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentTagInput` via:
//
//	DirectConnectGatewayAttachmentTagArgs{...}
type DirectConnectGatewayAttachmentTagInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentTagOutput() DirectConnectGatewayAttachmentTagOutput
	ToDirectConnectGatewayAttachmentTagOutputWithContext(context.Context) DirectConnectGatewayAttachmentTagOutput
}

// A key-value pair to associate with a resource.
type DirectConnectGatewayAttachmentTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DirectConnectGatewayAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentTag)(nil)).Elem()
}

func (i DirectConnectGatewayAttachmentTagArgs) ToDirectConnectGatewayAttachmentTagOutput() DirectConnectGatewayAttachmentTagOutput {
	return i.ToDirectConnectGatewayAttachmentTagOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentTagArgs) ToDirectConnectGatewayAttachmentTagOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentTagOutput)
}

// DirectConnectGatewayAttachmentTagArrayInput is an input type that accepts DirectConnectGatewayAttachmentTagArray and DirectConnectGatewayAttachmentTagArrayOutput values.
// You can construct a concrete instance of `DirectConnectGatewayAttachmentTagArrayInput` via:
//
//	DirectConnectGatewayAttachmentTagArray{ DirectConnectGatewayAttachmentTagArgs{...} }
type DirectConnectGatewayAttachmentTagArrayInput interface {
	pulumi.Input

	ToDirectConnectGatewayAttachmentTagArrayOutput() DirectConnectGatewayAttachmentTagArrayOutput
	ToDirectConnectGatewayAttachmentTagArrayOutputWithContext(context.Context) DirectConnectGatewayAttachmentTagArrayOutput
}

type DirectConnectGatewayAttachmentTagArray []DirectConnectGatewayAttachmentTagInput

func (DirectConnectGatewayAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectConnectGatewayAttachmentTag)(nil)).Elem()
}

func (i DirectConnectGatewayAttachmentTagArray) ToDirectConnectGatewayAttachmentTagArrayOutput() DirectConnectGatewayAttachmentTagArrayOutput {
	return i.ToDirectConnectGatewayAttachmentTagArrayOutputWithContext(context.Background())
}

func (i DirectConnectGatewayAttachmentTagArray) ToDirectConnectGatewayAttachmentTagArrayOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectConnectGatewayAttachmentTagArrayOutput)
}

// A key-value pair to associate with a resource.
type DirectConnectGatewayAttachmentTagOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectConnectGatewayAttachmentTag)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentTagOutput) ToDirectConnectGatewayAttachmentTagOutput() DirectConnectGatewayAttachmentTagOutput {
	return o
}

func (o DirectConnectGatewayAttachmentTagOutput) ToDirectConnectGatewayAttachmentTagOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o DirectConnectGatewayAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o DirectConnectGatewayAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DirectConnectGatewayAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type DirectConnectGatewayAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (DirectConnectGatewayAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectConnectGatewayAttachmentTag)(nil)).Elem()
}

func (o DirectConnectGatewayAttachmentTagArrayOutput) ToDirectConnectGatewayAttachmentTagArrayOutput() DirectConnectGatewayAttachmentTagArrayOutput {
	return o
}

func (o DirectConnectGatewayAttachmentTagArrayOutput) ToDirectConnectGatewayAttachmentTagArrayOutputWithContext(ctx context.Context) DirectConnectGatewayAttachmentTagArrayOutput {
	return o
}

func (o DirectConnectGatewayAttachmentTagArrayOutput) Index(i pulumi.IntInput) DirectConnectGatewayAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectConnectGatewayAttachmentTag {
		return vs[0].([]DirectConnectGatewayAttachmentTag)[vs[1].(int)]
	}).(DirectConnectGatewayAttachmentTagOutput)
}

// A key-value pair to associate with a global network resource.
type GlobalNetworkTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The bandwidth for the link.
type LinkBandwidth struct {
	// Download speed in Mbps.
	DownloadSpeed *int `pulumi:"downloadSpeed"`
	// Upload speed in Mbps.
	UploadSpeed *int `pulumi:"uploadSpeed"`
}

// LinkBandwidthInput is an input type that accepts LinkBandwidthArgs and LinkBandwidthOutput values.
// You can construct a concrete instance of `LinkBandwidthInput` via:
//
//	LinkBandwidthArgs{...}
type LinkBandwidthInput interface {
	pulumi.Input

	ToLinkBandwidthOutput() LinkBandwidthOutput
	ToLinkBandwidthOutputWithContext(context.Context) LinkBandwidthOutput
}

// The bandwidth for the link.
type LinkBandwidthArgs struct {
	// Download speed in Mbps.
	DownloadSpeed pulumi.IntPtrInput `pulumi:"downloadSpeed"`
	// Upload speed in Mbps.
	UploadSpeed pulumi.IntPtrInput `pulumi:"uploadSpeed"`
}

func (LinkBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkBandwidth)(nil)).Elem()
}

func (i LinkBandwidthArgs) ToLinkBandwidthOutput() LinkBandwidthOutput {
	return i.ToLinkBandwidthOutputWithContext(context.Background())
}

func (i LinkBandwidthArgs) ToLinkBandwidthOutputWithContext(ctx context.Context) LinkBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkBandwidthOutput)
}

// The bandwidth for the link.
type LinkBandwidthOutput struct{ *pulumi.OutputState }

func (LinkBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkBandwidth)(nil)).Elem()
}

func (o LinkBandwidthOutput) ToLinkBandwidthOutput() LinkBandwidthOutput {
	return o
}

func (o LinkBandwidthOutput) ToLinkBandwidthOutputWithContext(ctx context.Context) LinkBandwidthOutput {
	return o
}

// Download speed in Mbps.
func (o LinkBandwidthOutput) DownloadSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinkBandwidth) *int { return v.DownloadSpeed }).(pulumi.IntPtrOutput)
}

// Upload speed in Mbps.
func (o LinkBandwidthOutput) UploadSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinkBandwidth) *int { return v.UploadSpeed }).(pulumi.IntPtrOutput)
}

type LinkBandwidthPtrOutput struct{ *pulumi.OutputState }

func (LinkBandwidthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkBandwidth)(nil)).Elem()
}

func (o LinkBandwidthPtrOutput) ToLinkBandwidthPtrOutput() LinkBandwidthPtrOutput {
	return o
}

func (o LinkBandwidthPtrOutput) ToLinkBandwidthPtrOutputWithContext(ctx context.Context) LinkBandwidthPtrOutput {
	return o
}

func (o LinkBandwidthPtrOutput) Elem() LinkBandwidthOutput {
	return o.ApplyT(func(v *LinkBandwidth) LinkBandwidth {
		if v != nil {
			return *v
		}
		var ret LinkBandwidth
		return ret
	}).(LinkBandwidthOutput)
}

// Download speed in Mbps.
func (o LinkBandwidthPtrOutput) DownloadSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinkBandwidth) *int {
		if v == nil {
			return nil
		}
		return v.DownloadSpeed
	}).(pulumi.IntPtrOutput)
}

// Upload speed in Mbps.
func (o LinkBandwidthPtrOutput) UploadSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinkBandwidth) *int {
		if v == nil {
			return nil
		}
		return v.UploadSpeed
	}).(pulumi.IntPtrOutput)
}

// A key-value pair to associate with a link resource.
type LinkTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The location of the site
type SiteLocation struct {
	// The physical address.
	Address *string `pulumi:"address"`
	// The latitude.
	Latitude *string `pulumi:"latitude"`
	// The longitude.
	Longitude *string `pulumi:"longitude"`
}

// SiteLocationInput is an input type that accepts SiteLocationArgs and SiteLocationOutput values.
// You can construct a concrete instance of `SiteLocationInput` via:
//
//	SiteLocationArgs{...}
type SiteLocationInput interface {
	pulumi.Input

	ToSiteLocationOutput() SiteLocationOutput
	ToSiteLocationOutputWithContext(context.Context) SiteLocationOutput
}

// The location of the site
type SiteLocationArgs struct {
	// The physical address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The latitude.
	Latitude pulumi.StringPtrInput `pulumi:"latitude"`
	// The longitude.
	Longitude pulumi.StringPtrInput `pulumi:"longitude"`
}

func (SiteLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLocation)(nil)).Elem()
}

func (i SiteLocationArgs) ToSiteLocationOutput() SiteLocationOutput {
	return i.ToSiteLocationOutputWithContext(context.Background())
}

func (i SiteLocationArgs) ToSiteLocationOutputWithContext(ctx context.Context) SiteLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLocationOutput)
}

func (i SiteLocationArgs) ToSiteLocationPtrOutput() SiteLocationPtrOutput {
	return i.ToSiteLocationPtrOutputWithContext(context.Background())
}

func (i SiteLocationArgs) ToSiteLocationPtrOutputWithContext(ctx context.Context) SiteLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLocationOutput).ToSiteLocationPtrOutputWithContext(ctx)
}

// SiteLocationPtrInput is an input type that accepts SiteLocationArgs, SiteLocationPtr and SiteLocationPtrOutput values.
// You can construct a concrete instance of `SiteLocationPtrInput` via:
//
//	        SiteLocationArgs{...}
//
//	or:
//
//	        nil
type SiteLocationPtrInput interface {
	pulumi.Input

	ToSiteLocationPtrOutput() SiteLocationPtrOutput
	ToSiteLocationPtrOutputWithContext(context.Context) SiteLocationPtrOutput
}

type siteLocationPtrType SiteLocationArgs

func SiteLocationPtr(v *SiteLocationArgs) SiteLocationPtrInput {
	return (*siteLocationPtrType)(v)
}

func (*siteLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLocation)(nil)).Elem()
}

func (i *siteLocationPtrType) ToSiteLocationPtrOutput() SiteLocationPtrOutput {
	return i.ToSiteLocationPtrOutputWithContext(context.Background())
}

func (i *siteLocationPtrType) ToSiteLocationPtrOutputWithContext(ctx context.Context) SiteLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLocationPtrOutput)
}

// The location of the site
type SiteLocationOutput struct{ *pulumi.OutputState }

func (SiteLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLocation)(nil)).Elem()
}

func (o SiteLocationOutput) ToSiteLocationOutput() SiteLocationOutput {
	return o
}

func (o SiteLocationOutput) ToSiteLocationOutputWithContext(ctx context.Context) SiteLocationOutput {
	return o
}

func (o SiteLocationOutput) ToSiteLocationPtrOutput() SiteLocationPtrOutput {
	return o.ToSiteLocationPtrOutputWithContext(context.Background())
}

func (o SiteLocationOutput) ToSiteLocationPtrOutputWithContext(ctx context.Context) SiteLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteLocation) *SiteLocation {
		return &v
	}).(SiteLocationPtrOutput)
}

// The physical address.
func (o SiteLocationOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteLocation) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The latitude.
func (o SiteLocationOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteLocation) *string { return v.Latitude }).(pulumi.StringPtrOutput)
}

// The longitude.
func (o SiteLocationOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteLocation) *string { return v.Longitude }).(pulumi.StringPtrOutput)
}

type SiteLocationPtrOutput struct{ *pulumi.OutputState }

func (SiteLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLocation)(nil)).Elem()
}

func (o SiteLocationPtrOutput) ToSiteLocationPtrOutput() SiteLocationPtrOutput {
	return o
}

func (o SiteLocationPtrOutput) ToSiteLocationPtrOutputWithContext(ctx context.Context) SiteLocationPtrOutput {
	return o
}

func (o SiteLocationPtrOutput) Elem() SiteLocationOutput {
	return o.ApplyT(func(v *SiteLocation) SiteLocation {
		if v != nil {
			return *v
		}
		var ret SiteLocation
		return ret
	}).(SiteLocationOutput)
}

// The physical address.
func (o SiteLocationPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteLocation) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The latitude.
func (o SiteLocationPtrOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteLocation) *string {
		if v == nil {
			return nil
		}
		return v.Latitude
	}).(pulumi.StringPtrOutput)
}

// The longitude.
func (o SiteLocationPtrOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteLocation) *string {
		if v == nil {
			return nil
		}
		return v.Longitude
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a site resource.
type SiteTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The attachment to move from one network function group to another.
type SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the network function group to change.
	NetworkFunctionGroupName *string `pulumi:"networkFunctionGroupName"`
	// The key-value tags that changed for the network function group.
	Tags []SiteToSiteVpnAttachmentTag `pulumi:"tags"`
}

// SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeInput is an input type that accepts SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs and SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput values.
// You can construct a concrete instance of `SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeInput` via:
//
//	SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs{...}
type SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeInput interface {
	pulumi.Input

	ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput() SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput
	ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(context.Context) SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput
}

// The attachment to move from one network function group to another.
type SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber pulumi.IntPtrInput `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the network function group to change.
	NetworkFunctionGroupName pulumi.StringPtrInput `pulumi:"networkFunctionGroupName"`
	// The key-value tags that changed for the network function group.
	Tags SiteToSiteVpnAttachmentTagArrayInput `pulumi:"tags"`
}

func (SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (i SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs) ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput() SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput {
	return i.ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(context.Background())
}

func (i SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs) ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput)
}

func (i SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs) ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput() SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return i.ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (i SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs) ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput).ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx)
}

// SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrInput is an input type that accepts SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs, SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtr and SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput values.
// You can construct a concrete instance of `SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrInput` via:
//
//	        SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs{...}
//
//	or:
//
//	        nil
type SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrInput interface {
	pulumi.Input

	ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput() SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput
	ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Context) SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput
}

type siteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrType SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs

func SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtr(v *SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs) SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrInput {
	return (*siteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrType)(v)
}

func (*siteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (i *siteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrType) ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput() SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return i.ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (i *siteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrType) ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput)
}

// The attachment to move from one network function group to another.
type SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput struct{ *pulumi.OutputState }

func (SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput) ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput() SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o
}

func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput) ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o
}

func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput) ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput() SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o.ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput) ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange) *SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange {
		return &v
	}).(SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput)
}

// The rule number in the policy document that applies to this change.
func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange) *int {
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the network function group to change.
func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput) NetworkFunctionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange) *string {
		return v.NetworkFunctionGroupName
	}).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the network function group.
func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput) Tags() SiteToSiteVpnAttachmentTagArrayOutput {
	return o.ApplyT(func(v SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange) []SiteToSiteVpnAttachmentTag {
		return v.Tags
	}).(SiteToSiteVpnAttachmentTagArrayOutput)
}

type SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput struct{ *pulumi.OutputState }

func (SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput) ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput() SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o
}

func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput) ToSiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o
}

func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput) Elem() SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o.ApplyT(func(v *SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange) SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange {
		if v != nil {
			return *v
		}
		var ret SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange
		return ret
	}).(SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput)
}

// The rule number in the policy document that applies to this change.
func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange) *int {
		if v == nil {
			return nil
		}
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the network function group to change.
func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput) NetworkFunctionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange) *string {
		if v == nil {
			return nil
		}
		return v.NetworkFunctionGroupName
	}).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the network function group.
func (o SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput) Tags() SiteToSiteVpnAttachmentTagArrayOutput {
	return o.ApplyT(func(v *SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChange) []SiteToSiteVpnAttachmentTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(SiteToSiteVpnAttachmentTagArrayOutput)
}

// The attachment to move from one segment to another.
type SiteToSiteVpnAttachmentProposedSegmentChange struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the segment to change.
	SegmentName *string `pulumi:"segmentName"`
	// The key-value tags that changed for the segment.
	Tags []SiteToSiteVpnAttachmentTag `pulumi:"tags"`
}

// SiteToSiteVpnAttachmentProposedSegmentChangeInput is an input type that accepts SiteToSiteVpnAttachmentProposedSegmentChangeArgs and SiteToSiteVpnAttachmentProposedSegmentChangeOutput values.
// You can construct a concrete instance of `SiteToSiteVpnAttachmentProposedSegmentChangeInput` via:
//
//	SiteToSiteVpnAttachmentProposedSegmentChangeArgs{...}
type SiteToSiteVpnAttachmentProposedSegmentChangeInput interface {
	pulumi.Input

	ToSiteToSiteVpnAttachmentProposedSegmentChangeOutput() SiteToSiteVpnAttachmentProposedSegmentChangeOutput
	ToSiteToSiteVpnAttachmentProposedSegmentChangeOutputWithContext(context.Context) SiteToSiteVpnAttachmentProposedSegmentChangeOutput
}

// The attachment to move from one segment to another.
type SiteToSiteVpnAttachmentProposedSegmentChangeArgs struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber pulumi.IntPtrInput `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the segment to change.
	SegmentName pulumi.StringPtrInput `pulumi:"segmentName"`
	// The key-value tags that changed for the segment.
	Tags SiteToSiteVpnAttachmentTagArrayInput `pulumi:"tags"`
}

func (SiteToSiteVpnAttachmentProposedSegmentChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteToSiteVpnAttachmentProposedSegmentChange)(nil)).Elem()
}

func (i SiteToSiteVpnAttachmentProposedSegmentChangeArgs) ToSiteToSiteVpnAttachmentProposedSegmentChangeOutput() SiteToSiteVpnAttachmentProposedSegmentChangeOutput {
	return i.ToSiteToSiteVpnAttachmentProposedSegmentChangeOutputWithContext(context.Background())
}

func (i SiteToSiteVpnAttachmentProposedSegmentChangeArgs) ToSiteToSiteVpnAttachmentProposedSegmentChangeOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentProposedSegmentChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteToSiteVpnAttachmentProposedSegmentChangeOutput)
}

func (i SiteToSiteVpnAttachmentProposedSegmentChangeArgs) ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutput() SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput {
	return i.ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (i SiteToSiteVpnAttachmentProposedSegmentChangeArgs) ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteToSiteVpnAttachmentProposedSegmentChangeOutput).ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutputWithContext(ctx)
}

// SiteToSiteVpnAttachmentProposedSegmentChangePtrInput is an input type that accepts SiteToSiteVpnAttachmentProposedSegmentChangeArgs, SiteToSiteVpnAttachmentProposedSegmentChangePtr and SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput values.
// You can construct a concrete instance of `SiteToSiteVpnAttachmentProposedSegmentChangePtrInput` via:
//
//	        SiteToSiteVpnAttachmentProposedSegmentChangeArgs{...}
//
//	or:
//
//	        nil
type SiteToSiteVpnAttachmentProposedSegmentChangePtrInput interface {
	pulumi.Input

	ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutput() SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput
	ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutputWithContext(context.Context) SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput
}

type siteToSiteVpnAttachmentProposedSegmentChangePtrType SiteToSiteVpnAttachmentProposedSegmentChangeArgs

func SiteToSiteVpnAttachmentProposedSegmentChangePtr(v *SiteToSiteVpnAttachmentProposedSegmentChangeArgs) SiteToSiteVpnAttachmentProposedSegmentChangePtrInput {
	return (*siteToSiteVpnAttachmentProposedSegmentChangePtrType)(v)
}

func (*siteToSiteVpnAttachmentProposedSegmentChangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteToSiteVpnAttachmentProposedSegmentChange)(nil)).Elem()
}

func (i *siteToSiteVpnAttachmentProposedSegmentChangePtrType) ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutput() SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput {
	return i.ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (i *siteToSiteVpnAttachmentProposedSegmentChangePtrType) ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput)
}

// The attachment to move from one segment to another.
type SiteToSiteVpnAttachmentProposedSegmentChangeOutput struct{ *pulumi.OutputState }

func (SiteToSiteVpnAttachmentProposedSegmentChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteToSiteVpnAttachmentProposedSegmentChange)(nil)).Elem()
}

func (o SiteToSiteVpnAttachmentProposedSegmentChangeOutput) ToSiteToSiteVpnAttachmentProposedSegmentChangeOutput() SiteToSiteVpnAttachmentProposedSegmentChangeOutput {
	return o
}

func (o SiteToSiteVpnAttachmentProposedSegmentChangeOutput) ToSiteToSiteVpnAttachmentProposedSegmentChangeOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentProposedSegmentChangeOutput {
	return o
}

func (o SiteToSiteVpnAttachmentProposedSegmentChangeOutput) ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutput() SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput {
	return o.ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (o SiteToSiteVpnAttachmentProposedSegmentChangeOutput) ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteToSiteVpnAttachmentProposedSegmentChange) *SiteToSiteVpnAttachmentProposedSegmentChange {
		return &v
	}).(SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput)
}

// The rule number in the policy document that applies to this change.
func (o SiteToSiteVpnAttachmentProposedSegmentChangeOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SiteToSiteVpnAttachmentProposedSegmentChange) *int { return v.AttachmentPolicyRuleNumber }).(pulumi.IntPtrOutput)
}

// The name of the segment to change.
func (o SiteToSiteVpnAttachmentProposedSegmentChangeOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteToSiteVpnAttachmentProposedSegmentChange) *string { return v.SegmentName }).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the segment.
func (o SiteToSiteVpnAttachmentProposedSegmentChangeOutput) Tags() SiteToSiteVpnAttachmentTagArrayOutput {
	return o.ApplyT(func(v SiteToSiteVpnAttachmentProposedSegmentChange) []SiteToSiteVpnAttachmentTag { return v.Tags }).(SiteToSiteVpnAttachmentTagArrayOutput)
}

type SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput struct{ *pulumi.OutputState }

func (SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteToSiteVpnAttachmentProposedSegmentChange)(nil)).Elem()
}

func (o SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput) ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutput() SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput {
	return o
}

func (o SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput) ToSiteToSiteVpnAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput {
	return o
}

func (o SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput) Elem() SiteToSiteVpnAttachmentProposedSegmentChangeOutput {
	return o.ApplyT(func(v *SiteToSiteVpnAttachmentProposedSegmentChange) SiteToSiteVpnAttachmentProposedSegmentChange {
		if v != nil {
			return *v
		}
		var ret SiteToSiteVpnAttachmentProposedSegmentChange
		return ret
	}).(SiteToSiteVpnAttachmentProposedSegmentChangeOutput)
}

// The rule number in the policy document that applies to this change.
func (o SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SiteToSiteVpnAttachmentProposedSegmentChange) *int {
		if v == nil {
			return nil
		}
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the segment to change.
func (o SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteToSiteVpnAttachmentProposedSegmentChange) *string {
		if v == nil {
			return nil
		}
		return v.SegmentName
	}).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the segment.
func (o SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput) Tags() SiteToSiteVpnAttachmentTagArrayOutput {
	return o.ApplyT(func(v *SiteToSiteVpnAttachmentProposedSegmentChange) []SiteToSiteVpnAttachmentTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(SiteToSiteVpnAttachmentTagArrayOutput)
}

// A key-value pair to associate with a resource.
type SiteToSiteVpnAttachmentTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// SiteToSiteVpnAttachmentTagInput is an input type that accepts SiteToSiteVpnAttachmentTagArgs and SiteToSiteVpnAttachmentTagOutput values.
// You can construct a concrete instance of `SiteToSiteVpnAttachmentTagInput` via:
//
//	SiteToSiteVpnAttachmentTagArgs{...}
type SiteToSiteVpnAttachmentTagInput interface {
	pulumi.Input

	ToSiteToSiteVpnAttachmentTagOutput() SiteToSiteVpnAttachmentTagOutput
	ToSiteToSiteVpnAttachmentTagOutputWithContext(context.Context) SiteToSiteVpnAttachmentTagOutput
}

// A key-value pair to associate with a resource.
type SiteToSiteVpnAttachmentTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SiteToSiteVpnAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteToSiteVpnAttachmentTag)(nil)).Elem()
}

func (i SiteToSiteVpnAttachmentTagArgs) ToSiteToSiteVpnAttachmentTagOutput() SiteToSiteVpnAttachmentTagOutput {
	return i.ToSiteToSiteVpnAttachmentTagOutputWithContext(context.Background())
}

func (i SiteToSiteVpnAttachmentTagArgs) ToSiteToSiteVpnAttachmentTagOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteToSiteVpnAttachmentTagOutput)
}

// SiteToSiteVpnAttachmentTagArrayInput is an input type that accepts SiteToSiteVpnAttachmentTagArray and SiteToSiteVpnAttachmentTagArrayOutput values.
// You can construct a concrete instance of `SiteToSiteVpnAttachmentTagArrayInput` via:
//
//	SiteToSiteVpnAttachmentTagArray{ SiteToSiteVpnAttachmentTagArgs{...} }
type SiteToSiteVpnAttachmentTagArrayInput interface {
	pulumi.Input

	ToSiteToSiteVpnAttachmentTagArrayOutput() SiteToSiteVpnAttachmentTagArrayOutput
	ToSiteToSiteVpnAttachmentTagArrayOutputWithContext(context.Context) SiteToSiteVpnAttachmentTagArrayOutput
}

type SiteToSiteVpnAttachmentTagArray []SiteToSiteVpnAttachmentTagInput

func (SiteToSiteVpnAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteToSiteVpnAttachmentTag)(nil)).Elem()
}

func (i SiteToSiteVpnAttachmentTagArray) ToSiteToSiteVpnAttachmentTagArrayOutput() SiteToSiteVpnAttachmentTagArrayOutput {
	return i.ToSiteToSiteVpnAttachmentTagArrayOutputWithContext(context.Background())
}

func (i SiteToSiteVpnAttachmentTagArray) ToSiteToSiteVpnAttachmentTagArrayOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteToSiteVpnAttachmentTagArrayOutput)
}

// A key-value pair to associate with a resource.
type SiteToSiteVpnAttachmentTagOutput struct{ *pulumi.OutputState }

func (SiteToSiteVpnAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteToSiteVpnAttachmentTag)(nil)).Elem()
}

func (o SiteToSiteVpnAttachmentTagOutput) ToSiteToSiteVpnAttachmentTagOutput() SiteToSiteVpnAttachmentTagOutput {
	return o
}

func (o SiteToSiteVpnAttachmentTagOutput) ToSiteToSiteVpnAttachmentTagOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o SiteToSiteVpnAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SiteToSiteVpnAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o SiteToSiteVpnAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SiteToSiteVpnAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type SiteToSiteVpnAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (SiteToSiteVpnAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteToSiteVpnAttachmentTag)(nil)).Elem()
}

func (o SiteToSiteVpnAttachmentTagArrayOutput) ToSiteToSiteVpnAttachmentTagArrayOutput() SiteToSiteVpnAttachmentTagArrayOutput {
	return o
}

func (o SiteToSiteVpnAttachmentTagArrayOutput) ToSiteToSiteVpnAttachmentTagArrayOutputWithContext(ctx context.Context) SiteToSiteVpnAttachmentTagArrayOutput {
	return o
}

func (o SiteToSiteVpnAttachmentTagArrayOutput) Index(i pulumi.IntInput) SiteToSiteVpnAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SiteToSiteVpnAttachmentTag {
		return vs[0].([]SiteToSiteVpnAttachmentTag)[vs[1].(int)]
	}).(SiteToSiteVpnAttachmentTagOutput)
}

// A key-value pair to associate with a resource.
type TransitGatewayPeeringTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// The attachment to move from one network function group to another.
type TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the network function group to change.
	NetworkFunctionGroupName *string `pulumi:"networkFunctionGroupName"`
	// The key-value tags that changed for the network function group.
	Tags []TransitGatewayRouteTableAttachmentTag `pulumi:"tags"`
}

// TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeInput is an input type that accepts TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs and TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput values.
// You can construct a concrete instance of `TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeInput` via:
//
//	TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs{...}
type TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeInput interface {
	pulumi.Input

	ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput() TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput
	ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(context.Context) TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput
}

// The attachment to move from one network function group to another.
type TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber pulumi.IntPtrInput `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the network function group to change.
	NetworkFunctionGroupName pulumi.StringPtrInput `pulumi:"networkFunctionGroupName"`
	// The key-value tags that changed for the network function group.
	Tags TransitGatewayRouteTableAttachmentTagArrayInput `pulumi:"tags"`
}

func (TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (i TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs) ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput() TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput {
	return i.ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(context.Background())
}

func (i TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs) ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput)
}

func (i TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs) ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput() TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return i.ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (i TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs) ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput).ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx)
}

// TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrInput is an input type that accepts TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs, TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtr and TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput values.
// You can construct a concrete instance of `TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrInput` via:
//
//	        TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs{...}
//
//	or:
//
//	        nil
type TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrInput interface {
	pulumi.Input

	ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput() TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput
	ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Context) TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput
}

type transitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrType TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs

func TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtr(v *TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs) TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrInput {
	return (*transitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrType)(v)
}

func (*transitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (i *transitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrType) ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput() TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return i.ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (i *transitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrType) ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput)
}

// The attachment to move from one network function group to another.
type TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput struct{ *pulumi.OutputState }

func (TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput) ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput() TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput) ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput) ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput() TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o.ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput) ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange) *TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange {
		return &v
	}).(TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput)
}

// The rule number in the policy document that applies to this change.
func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange) *int {
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the network function group to change.
func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput) NetworkFunctionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange) *string {
		return v.NetworkFunctionGroupName
	}).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the network function group.
func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput) Tags() TransitGatewayRouteTableAttachmentTagArrayOutput {
	return o.ApplyT(func(v TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange) []TransitGatewayRouteTableAttachmentTag {
		return v.Tags
	}).(TransitGatewayRouteTableAttachmentTagArrayOutput)
}

type TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput struct{ *pulumi.OutputState }

func (TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput) ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput() TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput) ToTransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput) Elem() TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o.ApplyT(func(v *TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange) TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange {
		if v != nil {
			return *v
		}
		var ret TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange
		return ret
	}).(TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput)
}

// The rule number in the policy document that applies to this change.
func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange) *int {
		if v == nil {
			return nil
		}
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the network function group to change.
func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput) NetworkFunctionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange) *string {
		if v == nil {
			return nil
		}
		return v.NetworkFunctionGroupName
	}).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the network function group.
func (o TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput) Tags() TransitGatewayRouteTableAttachmentTagArrayOutput {
	return o.ApplyT(func(v *TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChange) []TransitGatewayRouteTableAttachmentTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(TransitGatewayRouteTableAttachmentTagArrayOutput)
}

// The attachment to move from one segment to another.
type TransitGatewayRouteTableAttachmentProposedSegmentChange struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the segment to change.
	SegmentName *string `pulumi:"segmentName"`
	// The key-value tags that changed for the segment.
	Tags []TransitGatewayRouteTableAttachmentTag `pulumi:"tags"`
}

// TransitGatewayRouteTableAttachmentProposedSegmentChangeInput is an input type that accepts TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs and TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput values.
// You can construct a concrete instance of `TransitGatewayRouteTableAttachmentProposedSegmentChangeInput` via:
//
//	TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs{...}
type TransitGatewayRouteTableAttachmentProposedSegmentChangeInput interface {
	pulumi.Input

	ToTransitGatewayRouteTableAttachmentProposedSegmentChangeOutput() TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput
	ToTransitGatewayRouteTableAttachmentProposedSegmentChangeOutputWithContext(context.Context) TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput
}

// The attachment to move from one segment to another.
type TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber pulumi.IntPtrInput `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the segment to change.
	SegmentName pulumi.StringPtrInput `pulumi:"segmentName"`
	// The key-value tags that changed for the segment.
	Tags TransitGatewayRouteTableAttachmentTagArrayInput `pulumi:"tags"`
}

func (TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayRouteTableAttachmentProposedSegmentChange)(nil)).Elem()
}

func (i TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs) ToTransitGatewayRouteTableAttachmentProposedSegmentChangeOutput() TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput {
	return i.ToTransitGatewayRouteTableAttachmentProposedSegmentChangeOutputWithContext(context.Background())
}

func (i TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs) ToTransitGatewayRouteTableAttachmentProposedSegmentChangeOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput)
}

func (i TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs) ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput() TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput {
	return i.ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (i TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs) ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput).ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutputWithContext(ctx)
}

// TransitGatewayRouteTableAttachmentProposedSegmentChangePtrInput is an input type that accepts TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs, TransitGatewayRouteTableAttachmentProposedSegmentChangePtr and TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput values.
// You can construct a concrete instance of `TransitGatewayRouteTableAttachmentProposedSegmentChangePtrInput` via:
//
//	        TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs{...}
//
//	or:
//
//	        nil
type TransitGatewayRouteTableAttachmentProposedSegmentChangePtrInput interface {
	pulumi.Input

	ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput() TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput
	ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutputWithContext(context.Context) TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput
}

type transitGatewayRouteTableAttachmentProposedSegmentChangePtrType TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs

func TransitGatewayRouteTableAttachmentProposedSegmentChangePtr(v *TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs) TransitGatewayRouteTableAttachmentProposedSegmentChangePtrInput {
	return (*transitGatewayRouteTableAttachmentProposedSegmentChangePtrType)(v)
}

func (*transitGatewayRouteTableAttachmentProposedSegmentChangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayRouteTableAttachmentProposedSegmentChange)(nil)).Elem()
}

func (i *transitGatewayRouteTableAttachmentProposedSegmentChangePtrType) ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput() TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput {
	return i.ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (i *transitGatewayRouteTableAttachmentProposedSegmentChangePtrType) ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput)
}

// The attachment to move from one segment to another.
type TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput struct{ *pulumi.OutputState }

func (TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayRouteTableAttachmentProposedSegmentChange)(nil)).Elem()
}

func (o TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput) ToTransitGatewayRouteTableAttachmentProposedSegmentChangeOutput() TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput) ToTransitGatewayRouteTableAttachmentProposedSegmentChangeOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput) ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput() TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput {
	return o.ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (o TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput) ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TransitGatewayRouteTableAttachmentProposedSegmentChange) *TransitGatewayRouteTableAttachmentProposedSegmentChange {
		return &v
	}).(TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput)
}

// The rule number in the policy document that applies to this change.
func (o TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransitGatewayRouteTableAttachmentProposedSegmentChange) *int {
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the segment to change.
func (o TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransitGatewayRouteTableAttachmentProposedSegmentChange) *string { return v.SegmentName }).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the segment.
func (o TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput) Tags() TransitGatewayRouteTableAttachmentTagArrayOutput {
	return o.ApplyT(func(v TransitGatewayRouteTableAttachmentProposedSegmentChange) []TransitGatewayRouteTableAttachmentTag {
		return v.Tags
	}).(TransitGatewayRouteTableAttachmentTagArrayOutput)
}

type TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput struct{ *pulumi.OutputState }

func (TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayRouteTableAttachmentProposedSegmentChange)(nil)).Elem()
}

func (o TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput) ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput() TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput) ToTransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput) Elem() TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput {
	return o.ApplyT(func(v *TransitGatewayRouteTableAttachmentProposedSegmentChange) TransitGatewayRouteTableAttachmentProposedSegmentChange {
		if v != nil {
			return *v
		}
		var ret TransitGatewayRouteTableAttachmentProposedSegmentChange
		return ret
	}).(TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput)
}

// The rule number in the policy document that applies to this change.
func (o TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransitGatewayRouteTableAttachmentProposedSegmentChange) *int {
		if v == nil {
			return nil
		}
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the segment to change.
func (o TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransitGatewayRouteTableAttachmentProposedSegmentChange) *string {
		if v == nil {
			return nil
		}
		return v.SegmentName
	}).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the segment.
func (o TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput) Tags() TransitGatewayRouteTableAttachmentTagArrayOutput {
	return o.ApplyT(func(v *TransitGatewayRouteTableAttachmentProposedSegmentChange) []TransitGatewayRouteTableAttachmentTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(TransitGatewayRouteTableAttachmentTagArrayOutput)
}

// A key-value pair to associate with a resource.
type TransitGatewayRouteTableAttachmentTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// TransitGatewayRouteTableAttachmentTagInput is an input type that accepts TransitGatewayRouteTableAttachmentTagArgs and TransitGatewayRouteTableAttachmentTagOutput values.
// You can construct a concrete instance of `TransitGatewayRouteTableAttachmentTagInput` via:
//
//	TransitGatewayRouteTableAttachmentTagArgs{...}
type TransitGatewayRouteTableAttachmentTagInput interface {
	pulumi.Input

	ToTransitGatewayRouteTableAttachmentTagOutput() TransitGatewayRouteTableAttachmentTagOutput
	ToTransitGatewayRouteTableAttachmentTagOutputWithContext(context.Context) TransitGatewayRouteTableAttachmentTagOutput
}

// A key-value pair to associate with a resource.
type TransitGatewayRouteTableAttachmentTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (TransitGatewayRouteTableAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayRouteTableAttachmentTag)(nil)).Elem()
}

func (i TransitGatewayRouteTableAttachmentTagArgs) ToTransitGatewayRouteTableAttachmentTagOutput() TransitGatewayRouteTableAttachmentTagOutput {
	return i.ToTransitGatewayRouteTableAttachmentTagOutputWithContext(context.Background())
}

func (i TransitGatewayRouteTableAttachmentTagArgs) ToTransitGatewayRouteTableAttachmentTagOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayRouteTableAttachmentTagOutput)
}

// TransitGatewayRouteTableAttachmentTagArrayInput is an input type that accepts TransitGatewayRouteTableAttachmentTagArray and TransitGatewayRouteTableAttachmentTagArrayOutput values.
// You can construct a concrete instance of `TransitGatewayRouteTableAttachmentTagArrayInput` via:
//
//	TransitGatewayRouteTableAttachmentTagArray{ TransitGatewayRouteTableAttachmentTagArgs{...} }
type TransitGatewayRouteTableAttachmentTagArrayInput interface {
	pulumi.Input

	ToTransitGatewayRouteTableAttachmentTagArrayOutput() TransitGatewayRouteTableAttachmentTagArrayOutput
	ToTransitGatewayRouteTableAttachmentTagArrayOutputWithContext(context.Context) TransitGatewayRouteTableAttachmentTagArrayOutput
}

type TransitGatewayRouteTableAttachmentTagArray []TransitGatewayRouteTableAttachmentTagInput

func (TransitGatewayRouteTableAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitGatewayRouteTableAttachmentTag)(nil)).Elem()
}

func (i TransitGatewayRouteTableAttachmentTagArray) ToTransitGatewayRouteTableAttachmentTagArrayOutput() TransitGatewayRouteTableAttachmentTagArrayOutput {
	return i.ToTransitGatewayRouteTableAttachmentTagArrayOutputWithContext(context.Background())
}

func (i TransitGatewayRouteTableAttachmentTagArray) ToTransitGatewayRouteTableAttachmentTagArrayOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayRouteTableAttachmentTagArrayOutput)
}

// A key-value pair to associate with a resource.
type TransitGatewayRouteTableAttachmentTagOutput struct{ *pulumi.OutputState }

func (TransitGatewayRouteTableAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayRouteTableAttachmentTag)(nil)).Elem()
}

func (o TransitGatewayRouteTableAttachmentTagOutput) ToTransitGatewayRouteTableAttachmentTagOutput() TransitGatewayRouteTableAttachmentTagOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentTagOutput) ToTransitGatewayRouteTableAttachmentTagOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o TransitGatewayRouteTableAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TransitGatewayRouteTableAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o TransitGatewayRouteTableAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TransitGatewayRouteTableAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type TransitGatewayRouteTableAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (TransitGatewayRouteTableAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransitGatewayRouteTableAttachmentTag)(nil)).Elem()
}

func (o TransitGatewayRouteTableAttachmentTagArrayOutput) ToTransitGatewayRouteTableAttachmentTagArrayOutput() TransitGatewayRouteTableAttachmentTagArrayOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentTagArrayOutput) ToTransitGatewayRouteTableAttachmentTagArrayOutputWithContext(ctx context.Context) TransitGatewayRouteTableAttachmentTagArrayOutput {
	return o
}

func (o TransitGatewayRouteTableAttachmentTagArrayOutput) Index(i pulumi.IntInput) TransitGatewayRouteTableAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransitGatewayRouteTableAttachmentTag {
		return vs[0].([]TransitGatewayRouteTableAttachmentTag)[vs[1].(int)]
	}).(TransitGatewayRouteTableAttachmentTagOutput)
}

// The attachment to move from one network function group to another.
type VpcAttachmentProposedNetworkFunctionGroupChange struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the network function group to change.
	NetworkFunctionGroupName *string `pulumi:"networkFunctionGroupName"`
	// The key-value tags that changed for the network function group.
	Tags []VpcAttachmentTag `pulumi:"tags"`
}

// VpcAttachmentProposedNetworkFunctionGroupChangeInput is an input type that accepts VpcAttachmentProposedNetworkFunctionGroupChangeArgs and VpcAttachmentProposedNetworkFunctionGroupChangeOutput values.
// You can construct a concrete instance of `VpcAttachmentProposedNetworkFunctionGroupChangeInput` via:
//
//	VpcAttachmentProposedNetworkFunctionGroupChangeArgs{...}
type VpcAttachmentProposedNetworkFunctionGroupChangeInput interface {
	pulumi.Input

	ToVpcAttachmentProposedNetworkFunctionGroupChangeOutput() VpcAttachmentProposedNetworkFunctionGroupChangeOutput
	ToVpcAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(context.Context) VpcAttachmentProposedNetworkFunctionGroupChangeOutput
}

// The attachment to move from one network function group to another.
type VpcAttachmentProposedNetworkFunctionGroupChangeArgs struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber pulumi.IntPtrInput `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the network function group to change.
	NetworkFunctionGroupName pulumi.StringPtrInput `pulumi:"networkFunctionGroupName"`
	// The key-value tags that changed for the network function group.
	Tags VpcAttachmentTagArrayInput `pulumi:"tags"`
}

func (VpcAttachmentProposedNetworkFunctionGroupChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (i VpcAttachmentProposedNetworkFunctionGroupChangeArgs) ToVpcAttachmentProposedNetworkFunctionGroupChangeOutput() VpcAttachmentProposedNetworkFunctionGroupChangeOutput {
	return i.ToVpcAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(context.Background())
}

func (i VpcAttachmentProposedNetworkFunctionGroupChangeArgs) ToVpcAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(ctx context.Context) VpcAttachmentProposedNetworkFunctionGroupChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentProposedNetworkFunctionGroupChangeOutput)
}

func (i VpcAttachmentProposedNetworkFunctionGroupChangeArgs) ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutput() VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return i.ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (i VpcAttachmentProposedNetworkFunctionGroupChangeArgs) ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentProposedNetworkFunctionGroupChangeOutput).ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx)
}

// VpcAttachmentProposedNetworkFunctionGroupChangePtrInput is an input type that accepts VpcAttachmentProposedNetworkFunctionGroupChangeArgs, VpcAttachmentProposedNetworkFunctionGroupChangePtr and VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput values.
// You can construct a concrete instance of `VpcAttachmentProposedNetworkFunctionGroupChangePtrInput` via:
//
//	        VpcAttachmentProposedNetworkFunctionGroupChangeArgs{...}
//
//	or:
//
//	        nil
type VpcAttachmentProposedNetworkFunctionGroupChangePtrInput interface {
	pulumi.Input

	ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutput() VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput
	ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Context) VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput
}

type vpcAttachmentProposedNetworkFunctionGroupChangePtrType VpcAttachmentProposedNetworkFunctionGroupChangeArgs

func VpcAttachmentProposedNetworkFunctionGroupChangePtr(v *VpcAttachmentProposedNetworkFunctionGroupChangeArgs) VpcAttachmentProposedNetworkFunctionGroupChangePtrInput {
	return (*vpcAttachmentProposedNetworkFunctionGroupChangePtrType)(v)
}

func (*vpcAttachmentProposedNetworkFunctionGroupChangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (i *vpcAttachmentProposedNetworkFunctionGroupChangePtrType) ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutput() VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return i.ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (i *vpcAttachmentProposedNetworkFunctionGroupChangePtrType) ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput)
}

// The attachment to move from one network function group to another.
type VpcAttachmentProposedNetworkFunctionGroupChangeOutput struct{ *pulumi.OutputState }

func (VpcAttachmentProposedNetworkFunctionGroupChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (o VpcAttachmentProposedNetworkFunctionGroupChangeOutput) ToVpcAttachmentProposedNetworkFunctionGroupChangeOutput() VpcAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o
}

func (o VpcAttachmentProposedNetworkFunctionGroupChangeOutput) ToVpcAttachmentProposedNetworkFunctionGroupChangeOutputWithContext(ctx context.Context) VpcAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o
}

func (o VpcAttachmentProposedNetworkFunctionGroupChangeOutput) ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutput() VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o.ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(context.Background())
}

func (o VpcAttachmentProposedNetworkFunctionGroupChangeOutput) ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcAttachmentProposedNetworkFunctionGroupChange) *VpcAttachmentProposedNetworkFunctionGroupChange {
		return &v
	}).(VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput)
}

// The rule number in the policy document that applies to this change.
func (o VpcAttachmentProposedNetworkFunctionGroupChangeOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcAttachmentProposedNetworkFunctionGroupChange) *int { return v.AttachmentPolicyRuleNumber }).(pulumi.IntPtrOutput)
}

// The name of the network function group to change.
func (o VpcAttachmentProposedNetworkFunctionGroupChangeOutput) NetworkFunctionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAttachmentProposedNetworkFunctionGroupChange) *string { return v.NetworkFunctionGroupName }).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the network function group.
func (o VpcAttachmentProposedNetworkFunctionGroupChangeOutput) Tags() VpcAttachmentTagArrayOutput {
	return o.ApplyT(func(v VpcAttachmentProposedNetworkFunctionGroupChange) []VpcAttachmentTag { return v.Tags }).(VpcAttachmentTagArrayOutput)
}

type VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput struct{ *pulumi.OutputState }

func (VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAttachmentProposedNetworkFunctionGroupChange)(nil)).Elem()
}

func (o VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput) ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutput() VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o
}

func (o VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput) ToVpcAttachmentProposedNetworkFunctionGroupChangePtrOutputWithContext(ctx context.Context) VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput {
	return o
}

func (o VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput) Elem() VpcAttachmentProposedNetworkFunctionGroupChangeOutput {
	return o.ApplyT(func(v *VpcAttachmentProposedNetworkFunctionGroupChange) VpcAttachmentProposedNetworkFunctionGroupChange {
		if v != nil {
			return *v
		}
		var ret VpcAttachmentProposedNetworkFunctionGroupChange
		return ret
	}).(VpcAttachmentProposedNetworkFunctionGroupChangeOutput)
}

// The rule number in the policy document that applies to this change.
func (o VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpcAttachmentProposedNetworkFunctionGroupChange) *int {
		if v == nil {
			return nil
		}
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the network function group to change.
func (o VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput) NetworkFunctionGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcAttachmentProposedNetworkFunctionGroupChange) *string {
		if v == nil {
			return nil
		}
		return v.NetworkFunctionGroupName
	}).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the network function group.
func (o VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput) Tags() VpcAttachmentTagArrayOutput {
	return o.ApplyT(func(v *VpcAttachmentProposedNetworkFunctionGroupChange) []VpcAttachmentTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(VpcAttachmentTagArrayOutput)
}

// The attachment to move from one segment to another.
type VpcAttachmentProposedSegmentChange struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber *int `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the segment to change.
	SegmentName *string `pulumi:"segmentName"`
	// The key-value tags that changed for the segment.
	Tags []VpcAttachmentTag `pulumi:"tags"`
}

// VpcAttachmentProposedSegmentChangeInput is an input type that accepts VpcAttachmentProposedSegmentChangeArgs and VpcAttachmentProposedSegmentChangeOutput values.
// You can construct a concrete instance of `VpcAttachmentProposedSegmentChangeInput` via:
//
//	VpcAttachmentProposedSegmentChangeArgs{...}
type VpcAttachmentProposedSegmentChangeInput interface {
	pulumi.Input

	ToVpcAttachmentProposedSegmentChangeOutput() VpcAttachmentProposedSegmentChangeOutput
	ToVpcAttachmentProposedSegmentChangeOutputWithContext(context.Context) VpcAttachmentProposedSegmentChangeOutput
}

// The attachment to move from one segment to another.
type VpcAttachmentProposedSegmentChangeArgs struct {
	// The rule number in the policy document that applies to this change.
	AttachmentPolicyRuleNumber pulumi.IntPtrInput `pulumi:"attachmentPolicyRuleNumber"`
	// The name of the segment to change.
	SegmentName pulumi.StringPtrInput `pulumi:"segmentName"`
	// The key-value tags that changed for the segment.
	Tags VpcAttachmentTagArrayInput `pulumi:"tags"`
}

func (VpcAttachmentProposedSegmentChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentProposedSegmentChange)(nil)).Elem()
}

func (i VpcAttachmentProposedSegmentChangeArgs) ToVpcAttachmentProposedSegmentChangeOutput() VpcAttachmentProposedSegmentChangeOutput {
	return i.ToVpcAttachmentProposedSegmentChangeOutputWithContext(context.Background())
}

func (i VpcAttachmentProposedSegmentChangeArgs) ToVpcAttachmentProposedSegmentChangeOutputWithContext(ctx context.Context) VpcAttachmentProposedSegmentChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentProposedSegmentChangeOutput)
}

func (i VpcAttachmentProposedSegmentChangeArgs) ToVpcAttachmentProposedSegmentChangePtrOutput() VpcAttachmentProposedSegmentChangePtrOutput {
	return i.ToVpcAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (i VpcAttachmentProposedSegmentChangeArgs) ToVpcAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) VpcAttachmentProposedSegmentChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentProposedSegmentChangeOutput).ToVpcAttachmentProposedSegmentChangePtrOutputWithContext(ctx)
}

// VpcAttachmentProposedSegmentChangePtrInput is an input type that accepts VpcAttachmentProposedSegmentChangeArgs, VpcAttachmentProposedSegmentChangePtr and VpcAttachmentProposedSegmentChangePtrOutput values.
// You can construct a concrete instance of `VpcAttachmentProposedSegmentChangePtrInput` via:
//
//	        VpcAttachmentProposedSegmentChangeArgs{...}
//
//	or:
//
//	        nil
type VpcAttachmentProposedSegmentChangePtrInput interface {
	pulumi.Input

	ToVpcAttachmentProposedSegmentChangePtrOutput() VpcAttachmentProposedSegmentChangePtrOutput
	ToVpcAttachmentProposedSegmentChangePtrOutputWithContext(context.Context) VpcAttachmentProposedSegmentChangePtrOutput
}

type vpcAttachmentProposedSegmentChangePtrType VpcAttachmentProposedSegmentChangeArgs

func VpcAttachmentProposedSegmentChangePtr(v *VpcAttachmentProposedSegmentChangeArgs) VpcAttachmentProposedSegmentChangePtrInput {
	return (*vpcAttachmentProposedSegmentChangePtrType)(v)
}

func (*vpcAttachmentProposedSegmentChangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAttachmentProposedSegmentChange)(nil)).Elem()
}

func (i *vpcAttachmentProposedSegmentChangePtrType) ToVpcAttachmentProposedSegmentChangePtrOutput() VpcAttachmentProposedSegmentChangePtrOutput {
	return i.ToVpcAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (i *vpcAttachmentProposedSegmentChangePtrType) ToVpcAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) VpcAttachmentProposedSegmentChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentProposedSegmentChangePtrOutput)
}

// The attachment to move from one segment to another.
type VpcAttachmentProposedSegmentChangeOutput struct{ *pulumi.OutputState }

func (VpcAttachmentProposedSegmentChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentProposedSegmentChange)(nil)).Elem()
}

func (o VpcAttachmentProposedSegmentChangeOutput) ToVpcAttachmentProposedSegmentChangeOutput() VpcAttachmentProposedSegmentChangeOutput {
	return o
}

func (o VpcAttachmentProposedSegmentChangeOutput) ToVpcAttachmentProposedSegmentChangeOutputWithContext(ctx context.Context) VpcAttachmentProposedSegmentChangeOutput {
	return o
}

func (o VpcAttachmentProposedSegmentChangeOutput) ToVpcAttachmentProposedSegmentChangePtrOutput() VpcAttachmentProposedSegmentChangePtrOutput {
	return o.ToVpcAttachmentProposedSegmentChangePtrOutputWithContext(context.Background())
}

func (o VpcAttachmentProposedSegmentChangeOutput) ToVpcAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) VpcAttachmentProposedSegmentChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcAttachmentProposedSegmentChange) *VpcAttachmentProposedSegmentChange {
		return &v
	}).(VpcAttachmentProposedSegmentChangePtrOutput)
}

// The rule number in the policy document that applies to this change.
func (o VpcAttachmentProposedSegmentChangeOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v VpcAttachmentProposedSegmentChange) *int { return v.AttachmentPolicyRuleNumber }).(pulumi.IntPtrOutput)
}

// The name of the segment to change.
func (o VpcAttachmentProposedSegmentChangeOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcAttachmentProposedSegmentChange) *string { return v.SegmentName }).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the segment.
func (o VpcAttachmentProposedSegmentChangeOutput) Tags() VpcAttachmentTagArrayOutput {
	return o.ApplyT(func(v VpcAttachmentProposedSegmentChange) []VpcAttachmentTag { return v.Tags }).(VpcAttachmentTagArrayOutput)
}

type VpcAttachmentProposedSegmentChangePtrOutput struct{ *pulumi.OutputState }

func (VpcAttachmentProposedSegmentChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAttachmentProposedSegmentChange)(nil)).Elem()
}

func (o VpcAttachmentProposedSegmentChangePtrOutput) ToVpcAttachmentProposedSegmentChangePtrOutput() VpcAttachmentProposedSegmentChangePtrOutput {
	return o
}

func (o VpcAttachmentProposedSegmentChangePtrOutput) ToVpcAttachmentProposedSegmentChangePtrOutputWithContext(ctx context.Context) VpcAttachmentProposedSegmentChangePtrOutput {
	return o
}

func (o VpcAttachmentProposedSegmentChangePtrOutput) Elem() VpcAttachmentProposedSegmentChangeOutput {
	return o.ApplyT(func(v *VpcAttachmentProposedSegmentChange) VpcAttachmentProposedSegmentChange {
		if v != nil {
			return *v
		}
		var ret VpcAttachmentProposedSegmentChange
		return ret
	}).(VpcAttachmentProposedSegmentChangeOutput)
}

// The rule number in the policy document that applies to this change.
func (o VpcAttachmentProposedSegmentChangePtrOutput) AttachmentPolicyRuleNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpcAttachmentProposedSegmentChange) *int {
		if v == nil {
			return nil
		}
		return v.AttachmentPolicyRuleNumber
	}).(pulumi.IntPtrOutput)
}

// The name of the segment to change.
func (o VpcAttachmentProposedSegmentChangePtrOutput) SegmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcAttachmentProposedSegmentChange) *string {
		if v == nil {
			return nil
		}
		return v.SegmentName
	}).(pulumi.StringPtrOutput)
}

// The key-value tags that changed for the segment.
func (o VpcAttachmentProposedSegmentChangePtrOutput) Tags() VpcAttachmentTagArrayOutput {
	return o.ApplyT(func(v *VpcAttachmentProposedSegmentChange) []VpcAttachmentTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(VpcAttachmentTagArrayOutput)
}

// A key-value pair to associate with a resource.
type VpcAttachmentTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// VpcAttachmentTagInput is an input type that accepts VpcAttachmentTagArgs and VpcAttachmentTagOutput values.
// You can construct a concrete instance of `VpcAttachmentTagInput` via:
//
//	VpcAttachmentTagArgs{...}
type VpcAttachmentTagInput interface {
	pulumi.Input

	ToVpcAttachmentTagOutput() VpcAttachmentTagOutput
	ToVpcAttachmentTagOutputWithContext(context.Context) VpcAttachmentTagOutput
}

// A key-value pair to associate with a resource.
type VpcAttachmentTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (VpcAttachmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentTag)(nil)).Elem()
}

func (i VpcAttachmentTagArgs) ToVpcAttachmentTagOutput() VpcAttachmentTagOutput {
	return i.ToVpcAttachmentTagOutputWithContext(context.Background())
}

func (i VpcAttachmentTagArgs) ToVpcAttachmentTagOutputWithContext(ctx context.Context) VpcAttachmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentTagOutput)
}

// VpcAttachmentTagArrayInput is an input type that accepts VpcAttachmentTagArray and VpcAttachmentTagArrayOutput values.
// You can construct a concrete instance of `VpcAttachmentTagArrayInput` via:
//
//	VpcAttachmentTagArray{ VpcAttachmentTagArgs{...} }
type VpcAttachmentTagArrayInput interface {
	pulumi.Input

	ToVpcAttachmentTagArrayOutput() VpcAttachmentTagArrayOutput
	ToVpcAttachmentTagArrayOutputWithContext(context.Context) VpcAttachmentTagArrayOutput
}

type VpcAttachmentTagArray []VpcAttachmentTagInput

func (VpcAttachmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentTag)(nil)).Elem()
}

func (i VpcAttachmentTagArray) ToVpcAttachmentTagArrayOutput() VpcAttachmentTagArrayOutput {
	return i.ToVpcAttachmentTagArrayOutputWithContext(context.Background())
}

func (i VpcAttachmentTagArray) ToVpcAttachmentTagArrayOutputWithContext(ctx context.Context) VpcAttachmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentTagArrayOutput)
}

// A key-value pair to associate with a resource.
type VpcAttachmentTagOutput struct{ *pulumi.OutputState }

func (VpcAttachmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentTag)(nil)).Elem()
}

func (o VpcAttachmentTagOutput) ToVpcAttachmentTagOutput() VpcAttachmentTagOutput {
	return o
}

func (o VpcAttachmentTagOutput) ToVpcAttachmentTagOutputWithContext(ctx context.Context) VpcAttachmentTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o VpcAttachmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o VpcAttachmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v VpcAttachmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type VpcAttachmentTagArrayOutput struct{ *pulumi.OutputState }

func (VpcAttachmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VpcAttachmentTag)(nil)).Elem()
}

func (o VpcAttachmentTagArrayOutput) ToVpcAttachmentTagArrayOutput() VpcAttachmentTagArrayOutput {
	return o
}

func (o VpcAttachmentTagArrayOutput) ToVpcAttachmentTagArrayOutputWithContext(ctx context.Context) VpcAttachmentTagArrayOutput {
	return o
}

func (o VpcAttachmentTagArrayOutput) Index(i pulumi.IntInput) VpcAttachmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VpcAttachmentTag {
		return vs[0].([]VpcAttachmentTag)[vs[1].(int)]
	}).(VpcAttachmentTagOutput)
}

// Vpc options of the attachment.
type VpcAttachmentVpcOptions struct {
	// Indicates whether to enable ApplianceModeSupport Support for Vpc Attachment. Valid Values: true | false
	ApplianceModeSupport *bool `pulumi:"applianceModeSupport"`
	// Indicates whether to enable private DNS Support for Vpc Attachment. Valid Values: true | false
	DnsSupport *bool `pulumi:"dnsSupport"`
	// Indicates whether to enable Ipv6 Support for Vpc Attachment. Valid Values: enable | disable
	Ipv6Support *bool `pulumi:"ipv6Support"`
	// Indicates whether to enable Security Group Referencing Support for Vpc Attachment. Valid Values: true | false
	SecurityGroupReferencingSupport *bool `pulumi:"securityGroupReferencingSupport"`
}

// VpcAttachmentVpcOptionsInput is an input type that accepts VpcAttachmentVpcOptionsArgs and VpcAttachmentVpcOptionsOutput values.
// You can construct a concrete instance of `VpcAttachmentVpcOptionsInput` via:
//
//	VpcAttachmentVpcOptionsArgs{...}
type VpcAttachmentVpcOptionsInput interface {
	pulumi.Input

	ToVpcAttachmentVpcOptionsOutput() VpcAttachmentVpcOptionsOutput
	ToVpcAttachmentVpcOptionsOutputWithContext(context.Context) VpcAttachmentVpcOptionsOutput
}

// Vpc options of the attachment.
type VpcAttachmentVpcOptionsArgs struct {
	// Indicates whether to enable ApplianceModeSupport Support for Vpc Attachment. Valid Values: true | false
	ApplianceModeSupport pulumi.BoolPtrInput `pulumi:"applianceModeSupport"`
	// Indicates whether to enable private DNS Support for Vpc Attachment. Valid Values: true | false
	DnsSupport pulumi.BoolPtrInput `pulumi:"dnsSupport"`
	// Indicates whether to enable Ipv6 Support for Vpc Attachment. Valid Values: enable | disable
	Ipv6Support pulumi.BoolPtrInput `pulumi:"ipv6Support"`
	// Indicates whether to enable Security Group Referencing Support for Vpc Attachment. Valid Values: true | false
	SecurityGroupReferencingSupport pulumi.BoolPtrInput `pulumi:"securityGroupReferencingSupport"`
}

func (VpcAttachmentVpcOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentVpcOptions)(nil)).Elem()
}

func (i VpcAttachmentVpcOptionsArgs) ToVpcAttachmentVpcOptionsOutput() VpcAttachmentVpcOptionsOutput {
	return i.ToVpcAttachmentVpcOptionsOutputWithContext(context.Background())
}

func (i VpcAttachmentVpcOptionsArgs) ToVpcAttachmentVpcOptionsOutputWithContext(ctx context.Context) VpcAttachmentVpcOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentVpcOptionsOutput)
}

func (i VpcAttachmentVpcOptionsArgs) ToVpcAttachmentVpcOptionsPtrOutput() VpcAttachmentVpcOptionsPtrOutput {
	return i.ToVpcAttachmentVpcOptionsPtrOutputWithContext(context.Background())
}

func (i VpcAttachmentVpcOptionsArgs) ToVpcAttachmentVpcOptionsPtrOutputWithContext(ctx context.Context) VpcAttachmentVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentVpcOptionsOutput).ToVpcAttachmentVpcOptionsPtrOutputWithContext(ctx)
}

// VpcAttachmentVpcOptionsPtrInput is an input type that accepts VpcAttachmentVpcOptionsArgs, VpcAttachmentVpcOptionsPtr and VpcAttachmentVpcOptionsPtrOutput values.
// You can construct a concrete instance of `VpcAttachmentVpcOptionsPtrInput` via:
//
//	        VpcAttachmentVpcOptionsArgs{...}
//
//	or:
//
//	        nil
type VpcAttachmentVpcOptionsPtrInput interface {
	pulumi.Input

	ToVpcAttachmentVpcOptionsPtrOutput() VpcAttachmentVpcOptionsPtrOutput
	ToVpcAttachmentVpcOptionsPtrOutputWithContext(context.Context) VpcAttachmentVpcOptionsPtrOutput
}

type vpcAttachmentVpcOptionsPtrType VpcAttachmentVpcOptionsArgs

func VpcAttachmentVpcOptionsPtr(v *VpcAttachmentVpcOptionsArgs) VpcAttachmentVpcOptionsPtrInput {
	return (*vpcAttachmentVpcOptionsPtrType)(v)
}

func (*vpcAttachmentVpcOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAttachmentVpcOptions)(nil)).Elem()
}

func (i *vpcAttachmentVpcOptionsPtrType) ToVpcAttachmentVpcOptionsPtrOutput() VpcAttachmentVpcOptionsPtrOutput {
	return i.ToVpcAttachmentVpcOptionsPtrOutputWithContext(context.Background())
}

func (i *vpcAttachmentVpcOptionsPtrType) ToVpcAttachmentVpcOptionsPtrOutputWithContext(ctx context.Context) VpcAttachmentVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcAttachmentVpcOptionsPtrOutput)
}

// Vpc options of the attachment.
type VpcAttachmentVpcOptionsOutput struct{ *pulumi.OutputState }

func (VpcAttachmentVpcOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcAttachmentVpcOptions)(nil)).Elem()
}

func (o VpcAttachmentVpcOptionsOutput) ToVpcAttachmentVpcOptionsOutput() VpcAttachmentVpcOptionsOutput {
	return o
}

func (o VpcAttachmentVpcOptionsOutput) ToVpcAttachmentVpcOptionsOutputWithContext(ctx context.Context) VpcAttachmentVpcOptionsOutput {
	return o
}

func (o VpcAttachmentVpcOptionsOutput) ToVpcAttachmentVpcOptionsPtrOutput() VpcAttachmentVpcOptionsPtrOutput {
	return o.ToVpcAttachmentVpcOptionsPtrOutputWithContext(context.Background())
}

func (o VpcAttachmentVpcOptionsOutput) ToVpcAttachmentVpcOptionsPtrOutputWithContext(ctx context.Context) VpcAttachmentVpcOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcAttachmentVpcOptions) *VpcAttachmentVpcOptions {
		return &v
	}).(VpcAttachmentVpcOptionsPtrOutput)
}

// Indicates whether to enable ApplianceModeSupport Support for Vpc Attachment. Valid Values: true | false
func (o VpcAttachmentVpcOptionsOutput) ApplianceModeSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcAttachmentVpcOptions) *bool { return v.ApplianceModeSupport }).(pulumi.BoolPtrOutput)
}

// Indicates whether to enable private DNS Support for Vpc Attachment. Valid Values: true | false
func (o VpcAttachmentVpcOptionsOutput) DnsSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcAttachmentVpcOptions) *bool { return v.DnsSupport }).(pulumi.BoolPtrOutput)
}

// Indicates whether to enable Ipv6 Support for Vpc Attachment. Valid Values: enable | disable
func (o VpcAttachmentVpcOptionsOutput) Ipv6Support() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcAttachmentVpcOptions) *bool { return v.Ipv6Support }).(pulumi.BoolPtrOutput)
}

// Indicates whether to enable Security Group Referencing Support for Vpc Attachment. Valid Values: true | false
func (o VpcAttachmentVpcOptionsOutput) SecurityGroupReferencingSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VpcAttachmentVpcOptions) *bool { return v.SecurityGroupReferencingSupport }).(pulumi.BoolPtrOutput)
}

type VpcAttachmentVpcOptionsPtrOutput struct{ *pulumi.OutputState }

func (VpcAttachmentVpcOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcAttachmentVpcOptions)(nil)).Elem()
}

func (o VpcAttachmentVpcOptionsPtrOutput) ToVpcAttachmentVpcOptionsPtrOutput() VpcAttachmentVpcOptionsPtrOutput {
	return o
}

func (o VpcAttachmentVpcOptionsPtrOutput) ToVpcAttachmentVpcOptionsPtrOutputWithContext(ctx context.Context) VpcAttachmentVpcOptionsPtrOutput {
	return o
}

func (o VpcAttachmentVpcOptionsPtrOutput) Elem() VpcAttachmentVpcOptionsOutput {
	return o.ApplyT(func(v *VpcAttachmentVpcOptions) VpcAttachmentVpcOptions {
		if v != nil {
			return *v
		}
		var ret VpcAttachmentVpcOptions
		return ret
	}).(VpcAttachmentVpcOptionsOutput)
}

// Indicates whether to enable ApplianceModeSupport Support for Vpc Attachment. Valid Values: true | false
func (o VpcAttachmentVpcOptionsPtrOutput) ApplianceModeSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcAttachmentVpcOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ApplianceModeSupport
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to enable private DNS Support for Vpc Attachment. Valid Values: true | false
func (o VpcAttachmentVpcOptionsPtrOutput) DnsSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcAttachmentVpcOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DnsSupport
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to enable Ipv6 Support for Vpc Attachment. Valid Values: enable | disable
func (o VpcAttachmentVpcOptionsPtrOutput) Ipv6Support() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcAttachmentVpcOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Ipv6Support
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to enable Security Group Referencing Support for Vpc Attachment. Valid Values: true | false
func (o VpcAttachmentVpcOptionsPtrOutput) SecurityGroupReferencingSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcAttachmentVpcOptions) *bool {
		if v == nil {
			return nil
		}
		return v.SecurityGroupReferencingSupport
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectAttachmentOptionsInput)(nil)).Elem(), ConnectAttachmentOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectAttachmentProposedNetworkFunctionGroupChangeInput)(nil)).Elem(), ConnectAttachmentProposedNetworkFunctionGroupChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectAttachmentProposedNetworkFunctionGroupChangePtrInput)(nil)).Elem(), ConnectAttachmentProposedNetworkFunctionGroupChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectAttachmentProposedSegmentChangeInput)(nil)).Elem(), ConnectAttachmentProposedSegmentChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectAttachmentProposedSegmentChangePtrInput)(nil)).Elem(), ConnectAttachmentProposedSegmentChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectAttachmentTagInput)(nil)).Elem(), ConnectAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectAttachmentTagArrayInput)(nil)).Elem(), ConnectAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectPeerBgpOptionsInput)(nil)).Elem(), ConnectPeerBgpOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectPeerBgpOptionsPtrInput)(nil)).Elem(), ConnectPeerBgpOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAwsLocationInput)(nil)).Elem(), DeviceAwsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAwsLocationPtrInput)(nil)).Elem(), DeviceAwsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLocationInput)(nil)).Elem(), DeviceLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLocationPtrInput)(nil)).Elem(), DeviceLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeInput)(nil)).Elem(), DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrInput)(nil)).Elem(), DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentProposedSegmentChangeInput)(nil)).Elem(), DirectConnectGatewayAttachmentProposedSegmentChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentProposedSegmentChangePtrInput)(nil)).Elem(), DirectConnectGatewayAttachmentProposedSegmentChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentTagInput)(nil)).Elem(), DirectConnectGatewayAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectConnectGatewayAttachmentTagArrayInput)(nil)).Elem(), DirectConnectGatewayAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkBandwidthInput)(nil)).Elem(), LinkBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteLocationInput)(nil)).Elem(), SiteLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteLocationPtrInput)(nil)).Elem(), SiteLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeInput)(nil)).Elem(), SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrInput)(nil)).Elem(), SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteToSiteVpnAttachmentProposedSegmentChangeInput)(nil)).Elem(), SiteToSiteVpnAttachmentProposedSegmentChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteToSiteVpnAttachmentProposedSegmentChangePtrInput)(nil)).Elem(), SiteToSiteVpnAttachmentProposedSegmentChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteToSiteVpnAttachmentTagInput)(nil)).Elem(), SiteToSiteVpnAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteToSiteVpnAttachmentTagArrayInput)(nil)).Elem(), SiteToSiteVpnAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeInput)(nil)).Elem(), TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrInput)(nil)).Elem(), TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayRouteTableAttachmentProposedSegmentChangeInput)(nil)).Elem(), TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayRouteTableAttachmentProposedSegmentChangePtrInput)(nil)).Elem(), TransitGatewayRouteTableAttachmentProposedSegmentChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayRouteTableAttachmentTagInput)(nil)).Elem(), TransitGatewayRouteTableAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayRouteTableAttachmentTagArrayInput)(nil)).Elem(), TransitGatewayRouteTableAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentProposedNetworkFunctionGroupChangeInput)(nil)).Elem(), VpcAttachmentProposedNetworkFunctionGroupChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentProposedNetworkFunctionGroupChangePtrInput)(nil)).Elem(), VpcAttachmentProposedNetworkFunctionGroupChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentProposedSegmentChangeInput)(nil)).Elem(), VpcAttachmentProposedSegmentChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentProposedSegmentChangePtrInput)(nil)).Elem(), VpcAttachmentProposedSegmentChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentTagInput)(nil)).Elem(), VpcAttachmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentTagArrayInput)(nil)).Elem(), VpcAttachmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentVpcOptionsInput)(nil)).Elem(), VpcAttachmentVpcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcAttachmentVpcOptionsPtrInput)(nil)).Elem(), VpcAttachmentVpcOptionsArgs{})
	pulumi.RegisterOutputType(ConnectAttachmentOptionsOutput{})
	pulumi.RegisterOutputType(ConnectAttachmentProposedNetworkFunctionGroupChangeOutput{})
	pulumi.RegisterOutputType(ConnectAttachmentProposedNetworkFunctionGroupChangePtrOutput{})
	pulumi.RegisterOutputType(ConnectAttachmentProposedSegmentChangeOutput{})
	pulumi.RegisterOutputType(ConnectAttachmentProposedSegmentChangePtrOutput{})
	pulumi.RegisterOutputType(ConnectAttachmentTagOutput{})
	pulumi.RegisterOutputType(ConnectAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(ConnectPeerBgpConfigurationOutput{})
	pulumi.RegisterOutputType(ConnectPeerBgpConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ConnectPeerBgpOptionsOutput{})
	pulumi.RegisterOutputType(ConnectPeerBgpOptionsPtrOutput{})
	pulumi.RegisterOutputType(ConnectPeerConfigurationOutput{})
	pulumi.RegisterOutputType(ConnectPeerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CoreNetworkEdgeOutput{})
	pulumi.RegisterOutputType(CoreNetworkEdgeArrayOutput{})
	pulumi.RegisterOutputType(CoreNetworkNetworkFunctionGroupOutput{})
	pulumi.RegisterOutputType(CoreNetworkNetworkFunctionGroupArrayOutput{})
	pulumi.RegisterOutputType(CoreNetworkNetworkFunctionGroupSegmentsPropertiesOutput{})
	pulumi.RegisterOutputType(CoreNetworkNetworkFunctionGroupSegmentsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(CoreNetworkSegmentOutput{})
	pulumi.RegisterOutputType(CoreNetworkSegmentArrayOutput{})
	pulumi.RegisterOutputType(DeviceAwsLocationOutput{})
	pulumi.RegisterOutputType(DeviceAwsLocationPtrOutput{})
	pulumi.RegisterOutputType(DeviceLocationOutput{})
	pulumi.RegisterOutputType(DeviceLocationPtrOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangeOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentProposedNetworkFunctionGroupChangePtrOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentProposedSegmentChangeOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentProposedSegmentChangePtrOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentTagOutput{})
	pulumi.RegisterOutputType(DirectConnectGatewayAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(LinkBandwidthOutput{})
	pulumi.RegisterOutputType(LinkBandwidthPtrOutput{})
	pulumi.RegisterOutputType(SiteLocationOutput{})
	pulumi.RegisterOutputType(SiteLocationPtrOutput{})
	pulumi.RegisterOutputType(SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangeOutput{})
	pulumi.RegisterOutputType(SiteToSiteVpnAttachmentProposedNetworkFunctionGroupChangePtrOutput{})
	pulumi.RegisterOutputType(SiteToSiteVpnAttachmentProposedSegmentChangeOutput{})
	pulumi.RegisterOutputType(SiteToSiteVpnAttachmentProposedSegmentChangePtrOutput{})
	pulumi.RegisterOutputType(SiteToSiteVpnAttachmentTagOutput{})
	pulumi.RegisterOutputType(SiteToSiteVpnAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangeOutput{})
	pulumi.RegisterOutputType(TransitGatewayRouteTableAttachmentProposedNetworkFunctionGroupChangePtrOutput{})
	pulumi.RegisterOutputType(TransitGatewayRouteTableAttachmentProposedSegmentChangeOutput{})
	pulumi.RegisterOutputType(TransitGatewayRouteTableAttachmentProposedSegmentChangePtrOutput{})
	pulumi.RegisterOutputType(TransitGatewayRouteTableAttachmentTagOutput{})
	pulumi.RegisterOutputType(TransitGatewayRouteTableAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(VpcAttachmentProposedNetworkFunctionGroupChangeOutput{})
	pulumi.RegisterOutputType(VpcAttachmentProposedNetworkFunctionGroupChangePtrOutput{})
	pulumi.RegisterOutputType(VpcAttachmentProposedSegmentChangeOutput{})
	pulumi.RegisterOutputType(VpcAttachmentProposedSegmentChangePtrOutput{})
	pulumi.RegisterOutputType(VpcAttachmentTagOutput{})
	pulumi.RegisterOutputType(VpcAttachmentTagArrayOutput{})
	pulumi.RegisterOutputType(VpcAttachmentVpcOptionsOutput{})
	pulumi.RegisterOutputType(VpcAttachmentVpcOptionsPtrOutput{})
}
