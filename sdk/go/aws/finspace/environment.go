// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package finspace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An example resource schema demonstrating some basic constructs and validation rules.
type Environment struct {
	pulumi.CustomResourceState

	// AWS account ID associated with the Environment
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// ID for FinSpace created account used to store Environment artifacts
	DedicatedServiceAccountId pulumi.StringOutput `pulumi:"dedicatedServiceAccountId"`
	// Description of the Environment
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// ARN of the Environment
	EnvironmentArn pulumi.StringOutput `pulumi:"environmentArn"`
	// Unique identifier for representing FinSpace Environment
	EnvironmentId pulumi.StringOutput `pulumi:"environmentId"`
	// URL used to login to the Environment
	EnvironmentUrl pulumi.StringOutput `pulumi:"environmentUrl"`
	// Federation mode used with the Environment
	FederationMode       EnvironmentFederationModePtrOutput       `pulumi:"federationMode"`
	FederationParameters EnvironmentFederationParametersPtrOutput `pulumi:"federationParameters"`
	// KMS key used to encrypt customer data within FinSpace Environment infrastructure
	KmsKeyId pulumi.StringPtrOutput `pulumi:"kmsKeyId"`
	// Name of the Environment
	Name pulumi.StringOutput `pulumi:"name"`
	// SageMaker Studio Domain URL associated with the Environment
	SageMakerStudioDomainUrl pulumi.StringOutput `pulumi:"sageMakerStudioDomainUrl"`
	// State of the Environment
	Status EnvironmentStatusOutput `pulumi:"status"`
}

// NewEnvironment registers a new resource with the given unique name, arguments, and options.
func NewEnvironment(ctx *pulumi.Context,
	name string, args *EnvironmentArgs, opts ...pulumi.ResourceOption) (*Environment, error) {
	if args == nil {
		args = &EnvironmentArgs{}
	}

	var resource Environment
	err := ctx.RegisterResource("aws-native:finspace:Environment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironment gets an existing Environment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentState, opts ...pulumi.ResourceOption) (*Environment, error) {
	var resource Environment
	err := ctx.ReadResource("aws-native:finspace:Environment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Environment resources.
type environmentState struct {
}

type EnvironmentState struct {
}

func (EnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentState)(nil)).Elem()
}

type environmentArgs struct {
	// Description of the Environment
	Description *string `pulumi:"description"`
	// Federation mode used with the Environment
	FederationMode       *EnvironmentFederationMode       `pulumi:"federationMode"`
	FederationParameters *EnvironmentFederationParameters `pulumi:"federationParameters"`
	// KMS key used to encrypt customer data within FinSpace Environment infrastructure
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Name of the Environment
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Environment resource.
type EnvironmentArgs struct {
	// Description of the Environment
	Description pulumi.StringPtrInput
	// Federation mode used with the Environment
	FederationMode       EnvironmentFederationModePtrInput
	FederationParameters EnvironmentFederationParametersPtrInput
	// KMS key used to encrypt customer data within FinSpace Environment infrastructure
	KmsKeyId pulumi.StringPtrInput
	// Name of the Environment
	Name pulumi.StringPtrInput
}

func (EnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentArgs)(nil)).Elem()
}

type EnvironmentInput interface {
	pulumi.Input

	ToEnvironmentOutput() EnvironmentOutput
	ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput
}

func (*Environment) ElementType() reflect.Type {
	return reflect.TypeOf((*Environment)(nil))
}

func (i *Environment) ToEnvironmentOutput() EnvironmentOutput {
	return i.ToEnvironmentOutputWithContext(context.Background())
}

func (i *Environment) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOutput)
}

type EnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Environment)(nil))
}

func (o EnvironmentOutput) ToEnvironmentOutput() EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentInput)(nil)).Elem(), &Environment{})
	pulumi.RegisterOutputType(EnvironmentOutput{})
}
