// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databrew

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::DataBrew::Project.
func LookupProject(ctx *pulumi.Context, args *LookupProjectArgs, opts ...pulumi.InvokeOption) (*LookupProjectResult, error) {
	var rv LookupProjectResult
	err := ctx.Invoke("aws-native:databrew:getProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupProjectArgs struct {
	// Project name
	Name string `pulumi:"name"`
}

type LookupProjectResult struct {
	// Dataset name
	DatasetName *string `pulumi:"datasetName"`
	// Recipe name
	RecipeName *string `pulumi:"recipeName"`
	// Role arn
	RoleArn *string `pulumi:"roleArn"`
	// Sample
	Sample *ProjectSample `pulumi:"sample"`
}

func LookupProjectOutput(ctx *pulumi.Context, args LookupProjectOutputArgs, opts ...pulumi.InvokeOption) LookupProjectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProjectResult, error) {
			args := v.(LookupProjectArgs)
			r, err := LookupProject(ctx, &args, opts...)
			return *r, err
		}).(LookupProjectResultOutput)
}

type LookupProjectOutputArgs struct {
	// Project name
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectArgs)(nil)).Elem()
}

type LookupProjectResultOutput struct{ *pulumi.OutputState }

func (LookupProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectResult)(nil)).Elem()
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutput() LookupProjectResultOutput {
	return o
}

func (o LookupProjectResultOutput) ToLookupProjectResultOutputWithContext(ctx context.Context) LookupProjectResultOutput {
	return o
}

// Dataset name
func (o LookupProjectResultOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProjectResult) *string { return v.DatasetName }).(pulumi.StringPtrOutput)
}

// Recipe name
func (o LookupProjectResultOutput) RecipeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProjectResult) *string { return v.RecipeName }).(pulumi.StringPtrOutput)
}

// Role arn
func (o LookupProjectResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProjectResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Sample
func (o LookupProjectResultOutput) Sample() ProjectSamplePtrOutput {
	return o.ApplyT(func(v LookupProjectResult) *ProjectSample { return v.Sample }).(ProjectSamplePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectResultOutput{})
}
