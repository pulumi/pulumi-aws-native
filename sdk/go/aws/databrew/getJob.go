// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databrew

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::DataBrew::Job.
func LookupJob(ctx *pulumi.Context, args *LookupJobArgs, opts ...pulumi.InvokeOption) (*LookupJobResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupJobResult
	err := ctx.Invoke("aws-native:databrew:getJob", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupJobArgs struct {
	// Job name
	Name string `pulumi:"name"`
}

type LookupJobResult struct {
	// One or more artifacts that represent the AWS Glue Data Catalog output from running the job.
	DataCatalogOutputs []JobDataCatalogOutput `pulumi:"dataCatalogOutputs"`
	// Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
	DatabaseOutputs []JobDatabaseOutput `pulumi:"databaseOutputs"`
	// Dataset name
	DatasetName *string `pulumi:"datasetName"`
	// Encryption Key Arn
	EncryptionKeyArn *string `pulumi:"encryptionKeyArn"`
	// Encryption mode
	EncryptionMode *JobEncryptionMode `pulumi:"encryptionMode"`
	// Job Sample
	JobSample *JobSample `pulumi:"jobSample"`
	// Log subscription
	LogSubscription *JobLogSubscription `pulumi:"logSubscription"`
	// Max capacity
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Max retries
	MaxRetries *int `pulumi:"maxRetries"`
	// Output location
	OutputLocation *JobOutputLocation `pulumi:"outputLocation"`
	// One or more artifacts that represent output from running the job.
	Outputs []JobOutputType `pulumi:"outputs"`
	// Profile Job configuration
	ProfileConfiguration *JobProfileConfiguration `pulumi:"profileConfiguration"`
	// Project name
	ProjectName *string `pulumi:"projectName"`
	// A series of data transformation steps that the job runs.
	Recipe *JobRecipe `pulumi:"recipe"`
	// Role arn
	RoleArn *string `pulumi:"roleArn"`
	// Timeout
	Timeout *int `pulumi:"timeout"`
	// Data quality rules configuration
	ValidationConfigurations []JobValidationConfiguration `pulumi:"validationConfigurations"`
}

func LookupJobOutput(ctx *pulumi.Context, args LookupJobOutputArgs, opts ...pulumi.InvokeOption) LookupJobResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupJobResult, error) {
			args := v.(LookupJobArgs)
			r, err := LookupJob(ctx, &args, opts...)
			var s LookupJobResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupJobResultOutput)
}

type LookupJobOutputArgs struct {
	// Job name
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupJobOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobArgs)(nil)).Elem()
}

type LookupJobResultOutput struct{ *pulumi.OutputState }

func (LookupJobResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupJobResult)(nil)).Elem()
}

func (o LookupJobResultOutput) ToLookupJobResultOutput() LookupJobResultOutput {
	return o
}

func (o LookupJobResultOutput) ToLookupJobResultOutputWithContext(ctx context.Context) LookupJobResultOutput {
	return o
}

// One or more artifacts that represent the AWS Glue Data Catalog output from running the job.
func (o LookupJobResultOutput) DataCatalogOutputs() JobDataCatalogOutputArrayOutput {
	return o.ApplyT(func(v LookupJobResult) []JobDataCatalogOutput { return v.DataCatalogOutputs }).(JobDataCatalogOutputArrayOutput)
}

// Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
func (o LookupJobResultOutput) DatabaseOutputs() JobDatabaseOutputArrayOutput {
	return o.ApplyT(func(v LookupJobResult) []JobDatabaseOutput { return v.DatabaseOutputs }).(JobDatabaseOutputArrayOutput)
}

// Dataset name
func (o LookupJobResultOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *string { return v.DatasetName }).(pulumi.StringPtrOutput)
}

// Encryption Key Arn
func (o LookupJobResultOutput) EncryptionKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *string { return v.EncryptionKeyArn }).(pulumi.StringPtrOutput)
}

// Encryption mode
func (o LookupJobResultOutput) EncryptionMode() JobEncryptionModePtrOutput {
	return o.ApplyT(func(v LookupJobResult) *JobEncryptionMode { return v.EncryptionMode }).(JobEncryptionModePtrOutput)
}

// Job Sample
func (o LookupJobResultOutput) JobSample() JobSamplePtrOutput {
	return o.ApplyT(func(v LookupJobResult) *JobSample { return v.JobSample }).(JobSamplePtrOutput)
}

// Log subscription
func (o LookupJobResultOutput) LogSubscription() JobLogSubscriptionPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *JobLogSubscription { return v.LogSubscription }).(JobLogSubscriptionPtrOutput)
}

// Max capacity
func (o LookupJobResultOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// Max retries
func (o LookupJobResultOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *int { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// Output location
func (o LookupJobResultOutput) OutputLocation() JobOutputLocationPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *JobOutputLocation { return v.OutputLocation }).(JobOutputLocationPtrOutput)
}

// One or more artifacts that represent output from running the job.
func (o LookupJobResultOutput) Outputs() JobOutputTypeArrayOutput {
	return o.ApplyT(func(v LookupJobResult) []JobOutputType { return v.Outputs }).(JobOutputTypeArrayOutput)
}

// Profile Job configuration
func (o LookupJobResultOutput) ProfileConfiguration() JobProfileConfigurationPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *JobProfileConfiguration { return v.ProfileConfiguration }).(JobProfileConfigurationPtrOutput)
}

// Project name
func (o LookupJobResultOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *string { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// A series of data transformation steps that the job runs.
func (o LookupJobResultOutput) Recipe() JobRecipePtrOutput {
	return o.ApplyT(func(v LookupJobResult) *JobRecipe { return v.Recipe }).(JobRecipePtrOutput)
}

// Role arn
func (o LookupJobResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Timeout
func (o LookupJobResultOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupJobResult) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Data quality rules configuration
func (o LookupJobResultOutput) ValidationConfigurations() JobValidationConfigurationArrayOutput {
	return o.ApplyT(func(v LookupJobResult) []JobValidationConfiguration { return v.ValidationConfigurations }).(JobValidationConfigurationArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupJobResultOutput{})
}
