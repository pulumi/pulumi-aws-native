// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package databrew

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::DataBrew::Job.
//
// ## Example Usage
// ### Example
//
// ```go
// package main
//
// import (
//
//	awsnative "github.com/pulumi/pulumi-aws-native/sdk/go/aws"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/databrew"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := databrew.NewJob(ctx, "myDataBrewProfileJob", &databrew.JobArgs{
//				Type:        databrew.JobTypeProfile,
//				Name:        pulumi.String("job-test"),
//				DatasetName: pulumi.String("dataset-test"),
//				RoleArn:     pulumi.String("arn:aws:iam::1234567891011:role/PassRoleAdmin"),
//				JobSample: &databrew.JobSampleArgs{
//					Mode: databrew.JobSampleModeFullDataset,
//				},
//				OutputLocation: &databrew.JobOutputLocationArgs{
//					Bucket: pulumi.String("test-output"),
//					Key:    pulumi.String("job-output.json"),
//				},
//				Tags: aws.CreateOnlyTagArray{
//					&aws.CreateOnlyTagArgs{
//						Key:   pulumi.String("key00AtCreate"),
//						Value: pulumi.String("value001AtCreate"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type Job struct {
	pulumi.CustomResourceState

	// One or more artifacts that represent the AWS Glue Data Catalog output from running the job.
	DataCatalogOutputs JobDataCatalogOutputArrayOutput `pulumi:"dataCatalogOutputs"`
	// Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
	DatabaseOutputs JobDatabaseOutputArrayOutput `pulumi:"databaseOutputs"`
	// Dataset name
	DatasetName pulumi.StringPtrOutput `pulumi:"datasetName"`
	// Encryption Key Arn
	EncryptionKeyArn pulumi.StringPtrOutput `pulumi:"encryptionKeyArn"`
	// Encryption mode
	EncryptionMode JobEncryptionModePtrOutput `pulumi:"encryptionMode"`
	// Job Sample
	JobSample JobSamplePtrOutput `pulumi:"jobSample"`
	// Log subscription
	LogSubscription JobLogSubscriptionPtrOutput `pulumi:"logSubscription"`
	// Max capacity
	MaxCapacity pulumi.IntPtrOutput `pulumi:"maxCapacity"`
	// Max retries
	MaxRetries pulumi.IntPtrOutput `pulumi:"maxRetries"`
	// Job name
	Name pulumi.StringOutput `pulumi:"name"`
	// Output location
	OutputLocation JobOutputLocationPtrOutput `pulumi:"outputLocation"`
	// One or more artifacts that represent output from running the job.
	Outputs JobOutputTypeArrayOutput `pulumi:"outputs"`
	// Profile Job configuration
	ProfileConfiguration JobProfileConfigurationPtrOutput `pulumi:"profileConfiguration"`
	// Project name
	ProjectName pulumi.StringPtrOutput `pulumi:"projectName"`
	// A series of data transformation steps that the job runs.
	Recipe JobRecipePtrOutput `pulumi:"recipe"`
	// Role arn
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// Metadata tags that have been applied to the job.
	Tags aws.CreateOnlyTagArrayOutput `pulumi:"tags"`
	// Timeout
	Timeout pulumi.IntPtrOutput `pulumi:"timeout"`
	// Job type
	Type JobTypeOutput `pulumi:"type"`
	// Data quality rules configuration
	ValidationConfigurations JobValidationConfigurationArrayOutput `pulumi:"validationConfigurations"`
}

// NewJob registers a new resource with the given unique name, arguments, and options.
func NewJob(ctx *pulumi.Context,
	name string, args *JobArgs, opts ...pulumi.ResourceOption) (*Job, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
		"tags[*]",
		"type",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Job
	err := ctx.RegisterResource("aws-native:databrew:Job", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJob gets an existing Job resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobState, opts ...pulumi.ResourceOption) (*Job, error) {
	var resource Job
	err := ctx.ReadResource("aws-native:databrew:Job", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Job resources.
type jobState struct {
}

type JobState struct {
}

func (JobState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobState)(nil)).Elem()
}

type jobArgs struct {
	// One or more artifacts that represent the AWS Glue Data Catalog output from running the job.
	DataCatalogOutputs []JobDataCatalogOutput `pulumi:"dataCatalogOutputs"`
	// Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
	DatabaseOutputs []JobDatabaseOutput `pulumi:"databaseOutputs"`
	// Dataset name
	DatasetName *string `pulumi:"datasetName"`
	// Encryption Key Arn
	EncryptionKeyArn *string `pulumi:"encryptionKeyArn"`
	// Encryption mode
	EncryptionMode *JobEncryptionMode `pulumi:"encryptionMode"`
	// Job Sample
	JobSample *JobSample `pulumi:"jobSample"`
	// Log subscription
	LogSubscription *JobLogSubscription `pulumi:"logSubscription"`
	// Max capacity
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Max retries
	MaxRetries *int `pulumi:"maxRetries"`
	// Job name
	Name *string `pulumi:"name"`
	// Output location
	OutputLocation *JobOutputLocation `pulumi:"outputLocation"`
	// One or more artifacts that represent output from running the job.
	Outputs []JobOutputType `pulumi:"outputs"`
	// Profile Job configuration
	ProfileConfiguration *JobProfileConfiguration `pulumi:"profileConfiguration"`
	// Project name
	ProjectName *string `pulumi:"projectName"`
	// A series of data transformation steps that the job runs.
	Recipe *JobRecipe `pulumi:"recipe"`
	// Role arn
	RoleArn string `pulumi:"roleArn"`
	// Metadata tags that have been applied to the job.
	Tags []aws.CreateOnlyTag `pulumi:"tags"`
	// Timeout
	Timeout *int `pulumi:"timeout"`
	// Job type
	Type JobType `pulumi:"type"`
	// Data quality rules configuration
	ValidationConfigurations []JobValidationConfiguration `pulumi:"validationConfigurations"`
}

// The set of arguments for constructing a Job resource.
type JobArgs struct {
	// One or more artifacts that represent the AWS Glue Data Catalog output from running the job.
	DataCatalogOutputs JobDataCatalogOutputArrayInput
	// Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
	DatabaseOutputs JobDatabaseOutputArrayInput
	// Dataset name
	DatasetName pulumi.StringPtrInput
	// Encryption Key Arn
	EncryptionKeyArn pulumi.StringPtrInput
	// Encryption mode
	EncryptionMode JobEncryptionModePtrInput
	// Job Sample
	JobSample JobSamplePtrInput
	// Log subscription
	LogSubscription JobLogSubscriptionPtrInput
	// Max capacity
	MaxCapacity pulumi.IntPtrInput
	// Max retries
	MaxRetries pulumi.IntPtrInput
	// Job name
	Name pulumi.StringPtrInput
	// Output location
	OutputLocation JobOutputLocationPtrInput
	// One or more artifacts that represent output from running the job.
	Outputs JobOutputTypeArrayInput
	// Profile Job configuration
	ProfileConfiguration JobProfileConfigurationPtrInput
	// Project name
	ProjectName pulumi.StringPtrInput
	// A series of data transformation steps that the job runs.
	Recipe JobRecipePtrInput
	// Role arn
	RoleArn pulumi.StringInput
	// Metadata tags that have been applied to the job.
	Tags aws.CreateOnlyTagArrayInput
	// Timeout
	Timeout pulumi.IntPtrInput
	// Job type
	Type JobTypeInput
	// Data quality rules configuration
	ValidationConfigurations JobValidationConfigurationArrayInput
}

func (JobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobArgs)(nil)).Elem()
}

type JobInput interface {
	pulumi.Input

	ToJobOutput() JobOutput
	ToJobOutputWithContext(ctx context.Context) JobOutput
}

func (*Job) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (i *Job) ToJobOutput() JobOutput {
	return i.ToJobOutputWithContext(context.Background())
}

func (i *Job) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobOutput)
}

type JobOutput struct{ *pulumi.OutputState }

func (JobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Job)(nil)).Elem()
}

func (o JobOutput) ToJobOutput() JobOutput {
	return o
}

func (o JobOutput) ToJobOutputWithContext(ctx context.Context) JobOutput {
	return o
}

// One or more artifacts that represent the AWS Glue Data Catalog output from running the job.
func (o JobOutput) DataCatalogOutputs() JobDataCatalogOutputArrayOutput {
	return o.ApplyT(func(v *Job) JobDataCatalogOutputArrayOutput { return v.DataCatalogOutputs }).(JobDataCatalogOutputArrayOutput)
}

// Represents a list of JDBC database output objects which defines the output destination for a DataBrew recipe job to write into.
func (o JobOutput) DatabaseOutputs() JobDatabaseOutputArrayOutput {
	return o.ApplyT(func(v *Job) JobDatabaseOutputArrayOutput { return v.DatabaseOutputs }).(JobDatabaseOutputArrayOutput)
}

// Dataset name
func (o JobOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.DatasetName }).(pulumi.StringPtrOutput)
}

// Encryption Key Arn
func (o JobOutput) EncryptionKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.EncryptionKeyArn }).(pulumi.StringPtrOutput)
}

// Encryption mode
func (o JobOutput) EncryptionMode() JobEncryptionModePtrOutput {
	return o.ApplyT(func(v *Job) JobEncryptionModePtrOutput { return v.EncryptionMode }).(JobEncryptionModePtrOutput)
}

// Job Sample
func (o JobOutput) JobSample() JobSamplePtrOutput {
	return o.ApplyT(func(v *Job) JobSamplePtrOutput { return v.JobSample }).(JobSamplePtrOutput)
}

// Log subscription
func (o JobOutput) LogSubscription() JobLogSubscriptionPtrOutput {
	return o.ApplyT(func(v *Job) JobLogSubscriptionPtrOutput { return v.LogSubscription }).(JobLogSubscriptionPtrOutput)
}

// Max capacity
func (o JobOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.IntPtrOutput { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// Max retries
func (o JobOutput) MaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.IntPtrOutput { return v.MaxRetries }).(pulumi.IntPtrOutput)
}

// Job name
func (o JobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Output location
func (o JobOutput) OutputLocation() JobOutputLocationPtrOutput {
	return o.ApplyT(func(v *Job) JobOutputLocationPtrOutput { return v.OutputLocation }).(JobOutputLocationPtrOutput)
}

// One or more artifacts that represent output from running the job.
func (o JobOutput) Outputs() JobOutputTypeArrayOutput {
	return o.ApplyT(func(v *Job) JobOutputTypeArrayOutput { return v.Outputs }).(JobOutputTypeArrayOutput)
}

// Profile Job configuration
func (o JobOutput) ProfileConfiguration() JobProfileConfigurationPtrOutput {
	return o.ApplyT(func(v *Job) JobProfileConfigurationPtrOutput { return v.ProfileConfiguration }).(JobProfileConfigurationPtrOutput)
}

// Project name
func (o JobOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.StringPtrOutput { return v.ProjectName }).(pulumi.StringPtrOutput)
}

// A series of data transformation steps that the job runs.
func (o JobOutput) Recipe() JobRecipePtrOutput {
	return o.ApplyT(func(v *Job) JobRecipePtrOutput { return v.Recipe }).(JobRecipePtrOutput)
}

// Role arn
func (o JobOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Job) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// Metadata tags that have been applied to the job.
func (o JobOutput) Tags() aws.CreateOnlyTagArrayOutput {
	return o.ApplyT(func(v *Job) aws.CreateOnlyTagArrayOutput { return v.Tags }).(aws.CreateOnlyTagArrayOutput)
}

// Timeout
func (o JobOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Job) pulumi.IntPtrOutput { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Job type
func (o JobOutput) Type() JobTypeOutput {
	return o.ApplyT(func(v *Job) JobTypeOutput { return v.Type }).(JobTypeOutput)
}

// Data quality rules configuration
func (o JobOutput) ValidationConfigurations() JobValidationConfigurationArrayOutput {
	return o.ApplyT(func(v *Job) JobValidationConfigurationArrayOutput { return v.ValidationConfigurations }).(JobValidationConfigurationArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobInput)(nil)).Elem(), &Job{})
	pulumi.RegisterOutputType(JobOutput{})
}
