// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databrew

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Parameter type
type DatasetDatasetParameterType string

const (
	DatasetDatasetParameterTypeString   = DatasetDatasetParameterType("String")
	DatasetDatasetParameterTypeNumber   = DatasetDatasetParameterType("Number")
	DatasetDatasetParameterTypeDatetime = DatasetDatasetParameterType("Datetime")
)

func (DatasetDatasetParameterType) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDatasetParameterType)(nil)).Elem()
}

func (e DatasetDatasetParameterType) ToDatasetDatasetParameterTypeOutput() DatasetDatasetParameterTypeOutput {
	return pulumi.ToOutput(e).(DatasetDatasetParameterTypeOutput)
}

func (e DatasetDatasetParameterType) ToDatasetDatasetParameterTypeOutputWithContext(ctx context.Context) DatasetDatasetParameterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatasetDatasetParameterTypeOutput)
}

func (e DatasetDatasetParameterType) ToDatasetDatasetParameterTypePtrOutput() DatasetDatasetParameterTypePtrOutput {
	return e.ToDatasetDatasetParameterTypePtrOutputWithContext(context.Background())
}

func (e DatasetDatasetParameterType) ToDatasetDatasetParameterTypePtrOutputWithContext(ctx context.Context) DatasetDatasetParameterTypePtrOutput {
	return DatasetDatasetParameterType(e).ToDatasetDatasetParameterTypeOutputWithContext(ctx).ToDatasetDatasetParameterTypePtrOutputWithContext(ctx)
}

func (e DatasetDatasetParameterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatasetDatasetParameterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatasetDatasetParameterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatasetDatasetParameterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatasetDatasetParameterTypeOutput struct{ *pulumi.OutputState }

func (DatasetDatasetParameterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetDatasetParameterType)(nil)).Elem()
}

func (o DatasetDatasetParameterTypeOutput) ToDatasetDatasetParameterTypeOutput() DatasetDatasetParameterTypeOutput {
	return o
}

func (o DatasetDatasetParameterTypeOutput) ToDatasetDatasetParameterTypeOutputWithContext(ctx context.Context) DatasetDatasetParameterTypeOutput {
	return o
}

func (o DatasetDatasetParameterTypeOutput) ToDatasetDatasetParameterTypePtrOutput() DatasetDatasetParameterTypePtrOutput {
	return o.ToDatasetDatasetParameterTypePtrOutputWithContext(context.Background())
}

func (o DatasetDatasetParameterTypeOutput) ToDatasetDatasetParameterTypePtrOutputWithContext(ctx context.Context) DatasetDatasetParameterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetDatasetParameterType) *DatasetDatasetParameterType {
		return &v
	}).(DatasetDatasetParameterTypePtrOutput)
}

func (o DatasetDatasetParameterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatasetDatasetParameterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatasetDatasetParameterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatasetDatasetParameterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatasetDatasetParameterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatasetDatasetParameterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatasetDatasetParameterTypePtrOutput struct{ *pulumi.OutputState }

func (DatasetDatasetParameterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetDatasetParameterType)(nil)).Elem()
}

func (o DatasetDatasetParameterTypePtrOutput) ToDatasetDatasetParameterTypePtrOutput() DatasetDatasetParameterTypePtrOutput {
	return o
}

func (o DatasetDatasetParameterTypePtrOutput) ToDatasetDatasetParameterTypePtrOutputWithContext(ctx context.Context) DatasetDatasetParameterTypePtrOutput {
	return o
}

func (o DatasetDatasetParameterTypePtrOutput) Elem() DatasetDatasetParameterTypeOutput {
	return o.ApplyT(func(v *DatasetDatasetParameterType) DatasetDatasetParameterType {
		if v != nil {
			return *v
		}
		var ret DatasetDatasetParameterType
		return ret
	}).(DatasetDatasetParameterTypeOutput)
}

func (o DatasetDatasetParameterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatasetDatasetParameterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatasetDatasetParameterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatasetDatasetParameterTypeInput is an input type that accepts DatasetDatasetParameterTypeArgs and DatasetDatasetParameterTypeOutput values.
// You can construct a concrete instance of `DatasetDatasetParameterTypeInput` via:
//
//          DatasetDatasetParameterTypeArgs{...}
type DatasetDatasetParameterTypeInput interface {
	pulumi.Input

	ToDatasetDatasetParameterTypeOutput() DatasetDatasetParameterTypeOutput
	ToDatasetDatasetParameterTypeOutputWithContext(context.Context) DatasetDatasetParameterTypeOutput
}

var datasetDatasetParameterTypePtrType = reflect.TypeOf((**DatasetDatasetParameterType)(nil)).Elem()

type DatasetDatasetParameterTypePtrInput interface {
	pulumi.Input

	ToDatasetDatasetParameterTypePtrOutput() DatasetDatasetParameterTypePtrOutput
	ToDatasetDatasetParameterTypePtrOutputWithContext(context.Context) DatasetDatasetParameterTypePtrOutput
}

type datasetDatasetParameterTypePtr string

func DatasetDatasetParameterTypePtr(v string) DatasetDatasetParameterTypePtrInput {
	return (*datasetDatasetParameterTypePtr)(&v)
}

func (*datasetDatasetParameterTypePtr) ElementType() reflect.Type {
	return datasetDatasetParameterTypePtrType
}

func (in *datasetDatasetParameterTypePtr) ToDatasetDatasetParameterTypePtrOutput() DatasetDatasetParameterTypePtrOutput {
	return pulumi.ToOutput(in).(DatasetDatasetParameterTypePtrOutput)
}

func (in *datasetDatasetParameterTypePtr) ToDatasetDatasetParameterTypePtrOutputWithContext(ctx context.Context) DatasetDatasetParameterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatasetDatasetParameterTypePtrOutput)
}

// Order
type DatasetFilesLimitOrder string

const (
	DatasetFilesLimitOrderAscending  = DatasetFilesLimitOrder("ASCENDING")
	DatasetFilesLimitOrderDescending = DatasetFilesLimitOrder("DESCENDING")
)

func (DatasetFilesLimitOrder) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetFilesLimitOrder)(nil)).Elem()
}

func (e DatasetFilesLimitOrder) ToDatasetFilesLimitOrderOutput() DatasetFilesLimitOrderOutput {
	return pulumi.ToOutput(e).(DatasetFilesLimitOrderOutput)
}

func (e DatasetFilesLimitOrder) ToDatasetFilesLimitOrderOutputWithContext(ctx context.Context) DatasetFilesLimitOrderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatasetFilesLimitOrderOutput)
}

func (e DatasetFilesLimitOrder) ToDatasetFilesLimitOrderPtrOutput() DatasetFilesLimitOrderPtrOutput {
	return e.ToDatasetFilesLimitOrderPtrOutputWithContext(context.Background())
}

func (e DatasetFilesLimitOrder) ToDatasetFilesLimitOrderPtrOutputWithContext(ctx context.Context) DatasetFilesLimitOrderPtrOutput {
	return DatasetFilesLimitOrder(e).ToDatasetFilesLimitOrderOutputWithContext(ctx).ToDatasetFilesLimitOrderPtrOutputWithContext(ctx)
}

func (e DatasetFilesLimitOrder) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatasetFilesLimitOrder) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatasetFilesLimitOrder) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatasetFilesLimitOrder) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatasetFilesLimitOrderOutput struct{ *pulumi.OutputState }

func (DatasetFilesLimitOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetFilesLimitOrder)(nil)).Elem()
}

func (o DatasetFilesLimitOrderOutput) ToDatasetFilesLimitOrderOutput() DatasetFilesLimitOrderOutput {
	return o
}

func (o DatasetFilesLimitOrderOutput) ToDatasetFilesLimitOrderOutputWithContext(ctx context.Context) DatasetFilesLimitOrderOutput {
	return o
}

func (o DatasetFilesLimitOrderOutput) ToDatasetFilesLimitOrderPtrOutput() DatasetFilesLimitOrderPtrOutput {
	return o.ToDatasetFilesLimitOrderPtrOutputWithContext(context.Background())
}

func (o DatasetFilesLimitOrderOutput) ToDatasetFilesLimitOrderPtrOutputWithContext(ctx context.Context) DatasetFilesLimitOrderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetFilesLimitOrder) *DatasetFilesLimitOrder {
		return &v
	}).(DatasetFilesLimitOrderPtrOutput)
}

func (o DatasetFilesLimitOrderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatasetFilesLimitOrderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatasetFilesLimitOrder) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatasetFilesLimitOrderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatasetFilesLimitOrderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatasetFilesLimitOrder) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatasetFilesLimitOrderPtrOutput struct{ *pulumi.OutputState }

func (DatasetFilesLimitOrderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetFilesLimitOrder)(nil)).Elem()
}

func (o DatasetFilesLimitOrderPtrOutput) ToDatasetFilesLimitOrderPtrOutput() DatasetFilesLimitOrderPtrOutput {
	return o
}

func (o DatasetFilesLimitOrderPtrOutput) ToDatasetFilesLimitOrderPtrOutputWithContext(ctx context.Context) DatasetFilesLimitOrderPtrOutput {
	return o
}

func (o DatasetFilesLimitOrderPtrOutput) Elem() DatasetFilesLimitOrderOutput {
	return o.ApplyT(func(v *DatasetFilesLimitOrder) DatasetFilesLimitOrder {
		if v != nil {
			return *v
		}
		var ret DatasetFilesLimitOrder
		return ret
	}).(DatasetFilesLimitOrderOutput)
}

func (o DatasetFilesLimitOrderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatasetFilesLimitOrderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatasetFilesLimitOrder) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatasetFilesLimitOrderInput is an input type that accepts DatasetFilesLimitOrderArgs and DatasetFilesLimitOrderOutput values.
// You can construct a concrete instance of `DatasetFilesLimitOrderInput` via:
//
//          DatasetFilesLimitOrderArgs{...}
type DatasetFilesLimitOrderInput interface {
	pulumi.Input

	ToDatasetFilesLimitOrderOutput() DatasetFilesLimitOrderOutput
	ToDatasetFilesLimitOrderOutputWithContext(context.Context) DatasetFilesLimitOrderOutput
}

var datasetFilesLimitOrderPtrType = reflect.TypeOf((**DatasetFilesLimitOrder)(nil)).Elem()

type DatasetFilesLimitOrderPtrInput interface {
	pulumi.Input

	ToDatasetFilesLimitOrderPtrOutput() DatasetFilesLimitOrderPtrOutput
	ToDatasetFilesLimitOrderPtrOutputWithContext(context.Context) DatasetFilesLimitOrderPtrOutput
}

type datasetFilesLimitOrderPtr string

func DatasetFilesLimitOrderPtr(v string) DatasetFilesLimitOrderPtrInput {
	return (*datasetFilesLimitOrderPtr)(&v)
}

func (*datasetFilesLimitOrderPtr) ElementType() reflect.Type {
	return datasetFilesLimitOrderPtrType
}

func (in *datasetFilesLimitOrderPtr) ToDatasetFilesLimitOrderPtrOutput() DatasetFilesLimitOrderPtrOutput {
	return pulumi.ToOutput(in).(DatasetFilesLimitOrderPtrOutput)
}

func (in *datasetFilesLimitOrderPtr) ToDatasetFilesLimitOrderPtrOutputWithContext(ctx context.Context) DatasetFilesLimitOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatasetFilesLimitOrderPtrOutput)
}

// Ordered by
type DatasetFilesLimitOrderedBy string

const (
	DatasetFilesLimitOrderedByLastModifiedDate = DatasetFilesLimitOrderedBy("LAST_MODIFIED_DATE")
)

func (DatasetFilesLimitOrderedBy) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetFilesLimitOrderedBy)(nil)).Elem()
}

func (e DatasetFilesLimitOrderedBy) ToDatasetFilesLimitOrderedByOutput() DatasetFilesLimitOrderedByOutput {
	return pulumi.ToOutput(e).(DatasetFilesLimitOrderedByOutput)
}

func (e DatasetFilesLimitOrderedBy) ToDatasetFilesLimitOrderedByOutputWithContext(ctx context.Context) DatasetFilesLimitOrderedByOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatasetFilesLimitOrderedByOutput)
}

func (e DatasetFilesLimitOrderedBy) ToDatasetFilesLimitOrderedByPtrOutput() DatasetFilesLimitOrderedByPtrOutput {
	return e.ToDatasetFilesLimitOrderedByPtrOutputWithContext(context.Background())
}

func (e DatasetFilesLimitOrderedBy) ToDatasetFilesLimitOrderedByPtrOutputWithContext(ctx context.Context) DatasetFilesLimitOrderedByPtrOutput {
	return DatasetFilesLimitOrderedBy(e).ToDatasetFilesLimitOrderedByOutputWithContext(ctx).ToDatasetFilesLimitOrderedByPtrOutputWithContext(ctx)
}

func (e DatasetFilesLimitOrderedBy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatasetFilesLimitOrderedBy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatasetFilesLimitOrderedBy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatasetFilesLimitOrderedBy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatasetFilesLimitOrderedByOutput struct{ *pulumi.OutputState }

func (DatasetFilesLimitOrderedByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetFilesLimitOrderedBy)(nil)).Elem()
}

func (o DatasetFilesLimitOrderedByOutput) ToDatasetFilesLimitOrderedByOutput() DatasetFilesLimitOrderedByOutput {
	return o
}

func (o DatasetFilesLimitOrderedByOutput) ToDatasetFilesLimitOrderedByOutputWithContext(ctx context.Context) DatasetFilesLimitOrderedByOutput {
	return o
}

func (o DatasetFilesLimitOrderedByOutput) ToDatasetFilesLimitOrderedByPtrOutput() DatasetFilesLimitOrderedByPtrOutput {
	return o.ToDatasetFilesLimitOrderedByPtrOutputWithContext(context.Background())
}

func (o DatasetFilesLimitOrderedByOutput) ToDatasetFilesLimitOrderedByPtrOutputWithContext(ctx context.Context) DatasetFilesLimitOrderedByPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetFilesLimitOrderedBy) *DatasetFilesLimitOrderedBy {
		return &v
	}).(DatasetFilesLimitOrderedByPtrOutput)
}

func (o DatasetFilesLimitOrderedByOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatasetFilesLimitOrderedByOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatasetFilesLimitOrderedBy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatasetFilesLimitOrderedByOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatasetFilesLimitOrderedByOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatasetFilesLimitOrderedBy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatasetFilesLimitOrderedByPtrOutput struct{ *pulumi.OutputState }

func (DatasetFilesLimitOrderedByPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetFilesLimitOrderedBy)(nil)).Elem()
}

func (o DatasetFilesLimitOrderedByPtrOutput) ToDatasetFilesLimitOrderedByPtrOutput() DatasetFilesLimitOrderedByPtrOutput {
	return o
}

func (o DatasetFilesLimitOrderedByPtrOutput) ToDatasetFilesLimitOrderedByPtrOutputWithContext(ctx context.Context) DatasetFilesLimitOrderedByPtrOutput {
	return o
}

func (o DatasetFilesLimitOrderedByPtrOutput) Elem() DatasetFilesLimitOrderedByOutput {
	return o.ApplyT(func(v *DatasetFilesLimitOrderedBy) DatasetFilesLimitOrderedBy {
		if v != nil {
			return *v
		}
		var ret DatasetFilesLimitOrderedBy
		return ret
	}).(DatasetFilesLimitOrderedByOutput)
}

func (o DatasetFilesLimitOrderedByPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatasetFilesLimitOrderedByPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatasetFilesLimitOrderedBy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatasetFilesLimitOrderedByInput is an input type that accepts DatasetFilesLimitOrderedByArgs and DatasetFilesLimitOrderedByOutput values.
// You can construct a concrete instance of `DatasetFilesLimitOrderedByInput` via:
//
//          DatasetFilesLimitOrderedByArgs{...}
type DatasetFilesLimitOrderedByInput interface {
	pulumi.Input

	ToDatasetFilesLimitOrderedByOutput() DatasetFilesLimitOrderedByOutput
	ToDatasetFilesLimitOrderedByOutputWithContext(context.Context) DatasetFilesLimitOrderedByOutput
}

var datasetFilesLimitOrderedByPtrType = reflect.TypeOf((**DatasetFilesLimitOrderedBy)(nil)).Elem()

type DatasetFilesLimitOrderedByPtrInput interface {
	pulumi.Input

	ToDatasetFilesLimitOrderedByPtrOutput() DatasetFilesLimitOrderedByPtrOutput
	ToDatasetFilesLimitOrderedByPtrOutputWithContext(context.Context) DatasetFilesLimitOrderedByPtrOutput
}

type datasetFilesLimitOrderedByPtr string

func DatasetFilesLimitOrderedByPtr(v string) DatasetFilesLimitOrderedByPtrInput {
	return (*datasetFilesLimitOrderedByPtr)(&v)
}

func (*datasetFilesLimitOrderedByPtr) ElementType() reflect.Type {
	return datasetFilesLimitOrderedByPtrType
}

func (in *datasetFilesLimitOrderedByPtr) ToDatasetFilesLimitOrderedByPtrOutput() DatasetFilesLimitOrderedByPtrOutput {
	return pulumi.ToOutput(in).(DatasetFilesLimitOrderedByPtrOutput)
}

func (in *datasetFilesLimitOrderedByPtr) ToDatasetFilesLimitOrderedByPtrOutputWithContext(ctx context.Context) DatasetFilesLimitOrderedByPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatasetFilesLimitOrderedByPtrOutput)
}

// Dataset format
type DatasetFormat string

const (
	DatasetFormatCsv     = DatasetFormat("CSV")
	DatasetFormatJson    = DatasetFormat("JSON")
	DatasetFormatParquet = DatasetFormat("PARQUET")
	DatasetFormatExcel   = DatasetFormat("EXCEL")
)

func (DatasetFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetFormat)(nil)).Elem()
}

func (e DatasetFormat) ToDatasetFormatOutput() DatasetFormatOutput {
	return pulumi.ToOutput(e).(DatasetFormatOutput)
}

func (e DatasetFormat) ToDatasetFormatOutputWithContext(ctx context.Context) DatasetFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DatasetFormatOutput)
}

func (e DatasetFormat) ToDatasetFormatPtrOutput() DatasetFormatPtrOutput {
	return e.ToDatasetFormatPtrOutputWithContext(context.Background())
}

func (e DatasetFormat) ToDatasetFormatPtrOutputWithContext(ctx context.Context) DatasetFormatPtrOutput {
	return DatasetFormat(e).ToDatasetFormatOutputWithContext(ctx).ToDatasetFormatPtrOutputWithContext(ctx)
}

func (e DatasetFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatasetFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DatasetFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DatasetFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DatasetFormatOutput struct{ *pulumi.OutputState }

func (DatasetFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatasetFormat)(nil)).Elem()
}

func (o DatasetFormatOutput) ToDatasetFormatOutput() DatasetFormatOutput {
	return o
}

func (o DatasetFormatOutput) ToDatasetFormatOutputWithContext(ctx context.Context) DatasetFormatOutput {
	return o
}

func (o DatasetFormatOutput) ToDatasetFormatPtrOutput() DatasetFormatPtrOutput {
	return o.ToDatasetFormatPtrOutputWithContext(context.Background())
}

func (o DatasetFormatOutput) ToDatasetFormatPtrOutputWithContext(ctx context.Context) DatasetFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DatasetFormat) *DatasetFormat {
		return &v
	}).(DatasetFormatPtrOutput)
}

func (o DatasetFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DatasetFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatasetFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DatasetFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatasetFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DatasetFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DatasetFormatPtrOutput struct{ *pulumi.OutputState }

func (DatasetFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatasetFormat)(nil)).Elem()
}

func (o DatasetFormatPtrOutput) ToDatasetFormatPtrOutput() DatasetFormatPtrOutput {
	return o
}

func (o DatasetFormatPtrOutput) ToDatasetFormatPtrOutputWithContext(ctx context.Context) DatasetFormatPtrOutput {
	return o
}

func (o DatasetFormatPtrOutput) Elem() DatasetFormatOutput {
	return o.ApplyT(func(v *DatasetFormat) DatasetFormat {
		if v != nil {
			return *v
		}
		var ret DatasetFormat
		return ret
	}).(DatasetFormatOutput)
}

func (o DatasetFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DatasetFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DatasetFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DatasetFormatInput is an input type that accepts DatasetFormatArgs and DatasetFormatOutput values.
// You can construct a concrete instance of `DatasetFormatInput` via:
//
//          DatasetFormatArgs{...}
type DatasetFormatInput interface {
	pulumi.Input

	ToDatasetFormatOutput() DatasetFormatOutput
	ToDatasetFormatOutputWithContext(context.Context) DatasetFormatOutput
}

var datasetFormatPtrType = reflect.TypeOf((**DatasetFormat)(nil)).Elem()

type DatasetFormatPtrInput interface {
	pulumi.Input

	ToDatasetFormatPtrOutput() DatasetFormatPtrOutput
	ToDatasetFormatPtrOutputWithContext(context.Context) DatasetFormatPtrOutput
}

type datasetFormatPtr string

func DatasetFormatPtr(v string) DatasetFormatPtrInput {
	return (*datasetFormatPtr)(&v)
}

func (*datasetFormatPtr) ElementType() reflect.Type {
	return datasetFormatPtrType
}

func (in *datasetFormatPtr) ToDatasetFormatPtrOutput() DatasetFormatPtrOutput {
	return pulumi.ToOutput(in).(DatasetFormatPtrOutput)
}

func (in *datasetFormatPtr) ToDatasetFormatPtrOutputWithContext(ctx context.Context) DatasetFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DatasetFormatPtrOutput)
}

// Database table name
type JobDatabaseOutputDatabaseOutputMode string

const (
	JobDatabaseOutputDatabaseOutputModeNewTable = JobDatabaseOutputDatabaseOutputMode("NEW_TABLE")
)

func (JobDatabaseOutputDatabaseOutputMode) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDatabaseOutputDatabaseOutputMode)(nil)).Elem()
}

func (e JobDatabaseOutputDatabaseOutputMode) ToJobDatabaseOutputDatabaseOutputModeOutput() JobDatabaseOutputDatabaseOutputModeOutput {
	return pulumi.ToOutput(e).(JobDatabaseOutputDatabaseOutputModeOutput)
}

func (e JobDatabaseOutputDatabaseOutputMode) ToJobDatabaseOutputDatabaseOutputModeOutputWithContext(ctx context.Context) JobDatabaseOutputDatabaseOutputModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JobDatabaseOutputDatabaseOutputModeOutput)
}

func (e JobDatabaseOutputDatabaseOutputMode) ToJobDatabaseOutputDatabaseOutputModePtrOutput() JobDatabaseOutputDatabaseOutputModePtrOutput {
	return e.ToJobDatabaseOutputDatabaseOutputModePtrOutputWithContext(context.Background())
}

func (e JobDatabaseOutputDatabaseOutputMode) ToJobDatabaseOutputDatabaseOutputModePtrOutputWithContext(ctx context.Context) JobDatabaseOutputDatabaseOutputModePtrOutput {
	return JobDatabaseOutputDatabaseOutputMode(e).ToJobDatabaseOutputDatabaseOutputModeOutputWithContext(ctx).ToJobDatabaseOutputDatabaseOutputModePtrOutputWithContext(ctx)
}

func (e JobDatabaseOutputDatabaseOutputMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobDatabaseOutputDatabaseOutputMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobDatabaseOutputDatabaseOutputMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JobDatabaseOutputDatabaseOutputMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JobDatabaseOutputDatabaseOutputModeOutput struct{ *pulumi.OutputState }

func (JobDatabaseOutputDatabaseOutputModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDatabaseOutputDatabaseOutputMode)(nil)).Elem()
}

func (o JobDatabaseOutputDatabaseOutputModeOutput) ToJobDatabaseOutputDatabaseOutputModeOutput() JobDatabaseOutputDatabaseOutputModeOutput {
	return o
}

func (o JobDatabaseOutputDatabaseOutputModeOutput) ToJobDatabaseOutputDatabaseOutputModeOutputWithContext(ctx context.Context) JobDatabaseOutputDatabaseOutputModeOutput {
	return o
}

func (o JobDatabaseOutputDatabaseOutputModeOutput) ToJobDatabaseOutputDatabaseOutputModePtrOutput() JobDatabaseOutputDatabaseOutputModePtrOutput {
	return o.ToJobDatabaseOutputDatabaseOutputModePtrOutputWithContext(context.Background())
}

func (o JobDatabaseOutputDatabaseOutputModeOutput) ToJobDatabaseOutputDatabaseOutputModePtrOutputWithContext(ctx context.Context) JobDatabaseOutputDatabaseOutputModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDatabaseOutputDatabaseOutputMode) *JobDatabaseOutputDatabaseOutputMode {
		return &v
	}).(JobDatabaseOutputDatabaseOutputModePtrOutput)
}

func (o JobDatabaseOutputDatabaseOutputModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JobDatabaseOutputDatabaseOutputModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobDatabaseOutputDatabaseOutputMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JobDatabaseOutputDatabaseOutputModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobDatabaseOutputDatabaseOutputModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobDatabaseOutputDatabaseOutputMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JobDatabaseOutputDatabaseOutputModePtrOutput struct{ *pulumi.OutputState }

func (JobDatabaseOutputDatabaseOutputModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDatabaseOutputDatabaseOutputMode)(nil)).Elem()
}

func (o JobDatabaseOutputDatabaseOutputModePtrOutput) ToJobDatabaseOutputDatabaseOutputModePtrOutput() JobDatabaseOutputDatabaseOutputModePtrOutput {
	return o
}

func (o JobDatabaseOutputDatabaseOutputModePtrOutput) ToJobDatabaseOutputDatabaseOutputModePtrOutputWithContext(ctx context.Context) JobDatabaseOutputDatabaseOutputModePtrOutput {
	return o
}

func (o JobDatabaseOutputDatabaseOutputModePtrOutput) Elem() JobDatabaseOutputDatabaseOutputModeOutput {
	return o.ApplyT(func(v *JobDatabaseOutputDatabaseOutputMode) JobDatabaseOutputDatabaseOutputMode {
		if v != nil {
			return *v
		}
		var ret JobDatabaseOutputDatabaseOutputMode
		return ret
	}).(JobDatabaseOutputDatabaseOutputModeOutput)
}

func (o JobDatabaseOutputDatabaseOutputModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobDatabaseOutputDatabaseOutputModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JobDatabaseOutputDatabaseOutputMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JobDatabaseOutputDatabaseOutputModeInput is an input type that accepts JobDatabaseOutputDatabaseOutputModeArgs and JobDatabaseOutputDatabaseOutputModeOutput values.
// You can construct a concrete instance of `JobDatabaseOutputDatabaseOutputModeInput` via:
//
//          JobDatabaseOutputDatabaseOutputModeArgs{...}
type JobDatabaseOutputDatabaseOutputModeInput interface {
	pulumi.Input

	ToJobDatabaseOutputDatabaseOutputModeOutput() JobDatabaseOutputDatabaseOutputModeOutput
	ToJobDatabaseOutputDatabaseOutputModeOutputWithContext(context.Context) JobDatabaseOutputDatabaseOutputModeOutput
}

var jobDatabaseOutputDatabaseOutputModePtrType = reflect.TypeOf((**JobDatabaseOutputDatabaseOutputMode)(nil)).Elem()

type JobDatabaseOutputDatabaseOutputModePtrInput interface {
	pulumi.Input

	ToJobDatabaseOutputDatabaseOutputModePtrOutput() JobDatabaseOutputDatabaseOutputModePtrOutput
	ToJobDatabaseOutputDatabaseOutputModePtrOutputWithContext(context.Context) JobDatabaseOutputDatabaseOutputModePtrOutput
}

type jobDatabaseOutputDatabaseOutputModePtr string

func JobDatabaseOutputDatabaseOutputModePtr(v string) JobDatabaseOutputDatabaseOutputModePtrInput {
	return (*jobDatabaseOutputDatabaseOutputModePtr)(&v)
}

func (*jobDatabaseOutputDatabaseOutputModePtr) ElementType() reflect.Type {
	return jobDatabaseOutputDatabaseOutputModePtrType
}

func (in *jobDatabaseOutputDatabaseOutputModePtr) ToJobDatabaseOutputDatabaseOutputModePtrOutput() JobDatabaseOutputDatabaseOutputModePtrOutput {
	return pulumi.ToOutput(in).(JobDatabaseOutputDatabaseOutputModePtrOutput)
}

func (in *jobDatabaseOutputDatabaseOutputModePtr) ToJobDatabaseOutputDatabaseOutputModePtrOutputWithContext(ctx context.Context) JobDatabaseOutputDatabaseOutputModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JobDatabaseOutputDatabaseOutputModePtrOutput)
}

// Encryption mode
type JobEncryptionMode string

const (
	JobEncryptionModeSseKms = JobEncryptionMode("SSE-KMS")
	JobEncryptionModeSseS3  = JobEncryptionMode("SSE-S3")
)

func (JobEncryptionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*JobEncryptionMode)(nil)).Elem()
}

func (e JobEncryptionMode) ToJobEncryptionModeOutput() JobEncryptionModeOutput {
	return pulumi.ToOutput(e).(JobEncryptionModeOutput)
}

func (e JobEncryptionMode) ToJobEncryptionModeOutputWithContext(ctx context.Context) JobEncryptionModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JobEncryptionModeOutput)
}

func (e JobEncryptionMode) ToJobEncryptionModePtrOutput() JobEncryptionModePtrOutput {
	return e.ToJobEncryptionModePtrOutputWithContext(context.Background())
}

func (e JobEncryptionMode) ToJobEncryptionModePtrOutputWithContext(ctx context.Context) JobEncryptionModePtrOutput {
	return JobEncryptionMode(e).ToJobEncryptionModeOutputWithContext(ctx).ToJobEncryptionModePtrOutputWithContext(ctx)
}

func (e JobEncryptionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobEncryptionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobEncryptionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JobEncryptionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JobEncryptionModeOutput struct{ *pulumi.OutputState }

func (JobEncryptionModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobEncryptionMode)(nil)).Elem()
}

func (o JobEncryptionModeOutput) ToJobEncryptionModeOutput() JobEncryptionModeOutput {
	return o
}

func (o JobEncryptionModeOutput) ToJobEncryptionModeOutputWithContext(ctx context.Context) JobEncryptionModeOutput {
	return o
}

func (o JobEncryptionModeOutput) ToJobEncryptionModePtrOutput() JobEncryptionModePtrOutput {
	return o.ToJobEncryptionModePtrOutputWithContext(context.Background())
}

func (o JobEncryptionModeOutput) ToJobEncryptionModePtrOutputWithContext(ctx context.Context) JobEncryptionModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobEncryptionMode) *JobEncryptionMode {
		return &v
	}).(JobEncryptionModePtrOutput)
}

func (o JobEncryptionModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JobEncryptionModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobEncryptionMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JobEncryptionModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobEncryptionModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobEncryptionMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JobEncryptionModePtrOutput struct{ *pulumi.OutputState }

func (JobEncryptionModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobEncryptionMode)(nil)).Elem()
}

func (o JobEncryptionModePtrOutput) ToJobEncryptionModePtrOutput() JobEncryptionModePtrOutput {
	return o
}

func (o JobEncryptionModePtrOutput) ToJobEncryptionModePtrOutputWithContext(ctx context.Context) JobEncryptionModePtrOutput {
	return o
}

func (o JobEncryptionModePtrOutput) Elem() JobEncryptionModeOutput {
	return o.ApplyT(func(v *JobEncryptionMode) JobEncryptionMode {
		if v != nil {
			return *v
		}
		var ret JobEncryptionMode
		return ret
	}).(JobEncryptionModeOutput)
}

func (o JobEncryptionModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobEncryptionModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JobEncryptionMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JobEncryptionModeInput is an input type that accepts JobEncryptionModeArgs and JobEncryptionModeOutput values.
// You can construct a concrete instance of `JobEncryptionModeInput` via:
//
//          JobEncryptionModeArgs{...}
type JobEncryptionModeInput interface {
	pulumi.Input

	ToJobEncryptionModeOutput() JobEncryptionModeOutput
	ToJobEncryptionModeOutputWithContext(context.Context) JobEncryptionModeOutput
}

var jobEncryptionModePtrType = reflect.TypeOf((**JobEncryptionMode)(nil)).Elem()

type JobEncryptionModePtrInput interface {
	pulumi.Input

	ToJobEncryptionModePtrOutput() JobEncryptionModePtrOutput
	ToJobEncryptionModePtrOutputWithContext(context.Context) JobEncryptionModePtrOutput
}

type jobEncryptionModePtr string

func JobEncryptionModePtr(v string) JobEncryptionModePtrInput {
	return (*jobEncryptionModePtr)(&v)
}

func (*jobEncryptionModePtr) ElementType() reflect.Type {
	return jobEncryptionModePtrType
}

func (in *jobEncryptionModePtr) ToJobEncryptionModePtrOutput() JobEncryptionModePtrOutput {
	return pulumi.ToOutput(in).(JobEncryptionModePtrOutput)
}

func (in *jobEncryptionModePtr) ToJobEncryptionModePtrOutputWithContext(ctx context.Context) JobEncryptionModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JobEncryptionModePtrOutput)
}

// Log subscription
type JobLogSubscription string

const (
	JobLogSubscriptionEnable  = JobLogSubscription("ENABLE")
	JobLogSubscriptionDisable = JobLogSubscription("DISABLE")
)

func (JobLogSubscription) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLogSubscription)(nil)).Elem()
}

func (e JobLogSubscription) ToJobLogSubscriptionOutput() JobLogSubscriptionOutput {
	return pulumi.ToOutput(e).(JobLogSubscriptionOutput)
}

func (e JobLogSubscription) ToJobLogSubscriptionOutputWithContext(ctx context.Context) JobLogSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JobLogSubscriptionOutput)
}

func (e JobLogSubscription) ToJobLogSubscriptionPtrOutput() JobLogSubscriptionPtrOutput {
	return e.ToJobLogSubscriptionPtrOutputWithContext(context.Background())
}

func (e JobLogSubscription) ToJobLogSubscriptionPtrOutputWithContext(ctx context.Context) JobLogSubscriptionPtrOutput {
	return JobLogSubscription(e).ToJobLogSubscriptionOutputWithContext(ctx).ToJobLogSubscriptionPtrOutputWithContext(ctx)
}

func (e JobLogSubscription) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobLogSubscription) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobLogSubscription) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JobLogSubscription) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JobLogSubscriptionOutput struct{ *pulumi.OutputState }

func (JobLogSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLogSubscription)(nil)).Elem()
}

func (o JobLogSubscriptionOutput) ToJobLogSubscriptionOutput() JobLogSubscriptionOutput {
	return o
}

func (o JobLogSubscriptionOutput) ToJobLogSubscriptionOutputWithContext(ctx context.Context) JobLogSubscriptionOutput {
	return o
}

func (o JobLogSubscriptionOutput) ToJobLogSubscriptionPtrOutput() JobLogSubscriptionPtrOutput {
	return o.ToJobLogSubscriptionPtrOutputWithContext(context.Background())
}

func (o JobLogSubscriptionOutput) ToJobLogSubscriptionPtrOutputWithContext(ctx context.Context) JobLogSubscriptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobLogSubscription) *JobLogSubscription {
		return &v
	}).(JobLogSubscriptionPtrOutput)
}

func (o JobLogSubscriptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JobLogSubscriptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobLogSubscription) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JobLogSubscriptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobLogSubscriptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobLogSubscription) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JobLogSubscriptionPtrOutput struct{ *pulumi.OutputState }

func (JobLogSubscriptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobLogSubscription)(nil)).Elem()
}

func (o JobLogSubscriptionPtrOutput) ToJobLogSubscriptionPtrOutput() JobLogSubscriptionPtrOutput {
	return o
}

func (o JobLogSubscriptionPtrOutput) ToJobLogSubscriptionPtrOutputWithContext(ctx context.Context) JobLogSubscriptionPtrOutput {
	return o
}

func (o JobLogSubscriptionPtrOutput) Elem() JobLogSubscriptionOutput {
	return o.ApplyT(func(v *JobLogSubscription) JobLogSubscription {
		if v != nil {
			return *v
		}
		var ret JobLogSubscription
		return ret
	}).(JobLogSubscriptionOutput)
}

func (o JobLogSubscriptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobLogSubscriptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JobLogSubscription) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JobLogSubscriptionInput is an input type that accepts JobLogSubscriptionArgs and JobLogSubscriptionOutput values.
// You can construct a concrete instance of `JobLogSubscriptionInput` via:
//
//          JobLogSubscriptionArgs{...}
type JobLogSubscriptionInput interface {
	pulumi.Input

	ToJobLogSubscriptionOutput() JobLogSubscriptionOutput
	ToJobLogSubscriptionOutputWithContext(context.Context) JobLogSubscriptionOutput
}

var jobLogSubscriptionPtrType = reflect.TypeOf((**JobLogSubscription)(nil)).Elem()

type JobLogSubscriptionPtrInput interface {
	pulumi.Input

	ToJobLogSubscriptionPtrOutput() JobLogSubscriptionPtrOutput
	ToJobLogSubscriptionPtrOutputWithContext(context.Context) JobLogSubscriptionPtrOutput
}

type jobLogSubscriptionPtr string

func JobLogSubscriptionPtr(v string) JobLogSubscriptionPtrInput {
	return (*jobLogSubscriptionPtr)(&v)
}

func (*jobLogSubscriptionPtr) ElementType() reflect.Type {
	return jobLogSubscriptionPtrType
}

func (in *jobLogSubscriptionPtr) ToJobLogSubscriptionPtrOutput() JobLogSubscriptionPtrOutput {
	return pulumi.ToOutput(in).(JobLogSubscriptionPtrOutput)
}

func (in *jobLogSubscriptionPtr) ToJobLogSubscriptionPtrOutputWithContext(ctx context.Context) JobLogSubscriptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JobLogSubscriptionPtrOutput)
}

type JobOutputCompressionFormat string

const (
	JobOutputCompressionFormatGzip    = JobOutputCompressionFormat("GZIP")
	JobOutputCompressionFormatLz4     = JobOutputCompressionFormat("LZ4")
	JobOutputCompressionFormatSnappy  = JobOutputCompressionFormat("SNAPPY")
	JobOutputCompressionFormatBzip2   = JobOutputCompressionFormat("BZIP2")
	JobOutputCompressionFormatDeflate = JobOutputCompressionFormat("DEFLATE")
	JobOutputCompressionFormatLzo     = JobOutputCompressionFormat("LZO")
	JobOutputCompressionFormatBrotli  = JobOutputCompressionFormat("BROTLI")
	JobOutputCompressionFormatZstd    = JobOutputCompressionFormat("ZSTD")
	JobOutputCompressionFormatZlib    = JobOutputCompressionFormat("ZLIB")
)

func (JobOutputCompressionFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*JobOutputCompressionFormat)(nil)).Elem()
}

func (e JobOutputCompressionFormat) ToJobOutputCompressionFormatOutput() JobOutputCompressionFormatOutput {
	return pulumi.ToOutput(e).(JobOutputCompressionFormatOutput)
}

func (e JobOutputCompressionFormat) ToJobOutputCompressionFormatOutputWithContext(ctx context.Context) JobOutputCompressionFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JobOutputCompressionFormatOutput)
}

func (e JobOutputCompressionFormat) ToJobOutputCompressionFormatPtrOutput() JobOutputCompressionFormatPtrOutput {
	return e.ToJobOutputCompressionFormatPtrOutputWithContext(context.Background())
}

func (e JobOutputCompressionFormat) ToJobOutputCompressionFormatPtrOutputWithContext(ctx context.Context) JobOutputCompressionFormatPtrOutput {
	return JobOutputCompressionFormat(e).ToJobOutputCompressionFormatOutputWithContext(ctx).ToJobOutputCompressionFormatPtrOutputWithContext(ctx)
}

func (e JobOutputCompressionFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobOutputCompressionFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobOutputCompressionFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JobOutputCompressionFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JobOutputCompressionFormatOutput struct{ *pulumi.OutputState }

func (JobOutputCompressionFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobOutputCompressionFormat)(nil)).Elem()
}

func (o JobOutputCompressionFormatOutput) ToJobOutputCompressionFormatOutput() JobOutputCompressionFormatOutput {
	return o
}

func (o JobOutputCompressionFormatOutput) ToJobOutputCompressionFormatOutputWithContext(ctx context.Context) JobOutputCompressionFormatOutput {
	return o
}

func (o JobOutputCompressionFormatOutput) ToJobOutputCompressionFormatPtrOutput() JobOutputCompressionFormatPtrOutput {
	return o.ToJobOutputCompressionFormatPtrOutputWithContext(context.Background())
}

func (o JobOutputCompressionFormatOutput) ToJobOutputCompressionFormatPtrOutputWithContext(ctx context.Context) JobOutputCompressionFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobOutputCompressionFormat) *JobOutputCompressionFormat {
		return &v
	}).(JobOutputCompressionFormatPtrOutput)
}

func (o JobOutputCompressionFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JobOutputCompressionFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobOutputCompressionFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JobOutputCompressionFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobOutputCompressionFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobOutputCompressionFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JobOutputCompressionFormatPtrOutput struct{ *pulumi.OutputState }

func (JobOutputCompressionFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobOutputCompressionFormat)(nil)).Elem()
}

func (o JobOutputCompressionFormatPtrOutput) ToJobOutputCompressionFormatPtrOutput() JobOutputCompressionFormatPtrOutput {
	return o
}

func (o JobOutputCompressionFormatPtrOutput) ToJobOutputCompressionFormatPtrOutputWithContext(ctx context.Context) JobOutputCompressionFormatPtrOutput {
	return o
}

func (o JobOutputCompressionFormatPtrOutput) Elem() JobOutputCompressionFormatOutput {
	return o.ApplyT(func(v *JobOutputCompressionFormat) JobOutputCompressionFormat {
		if v != nil {
			return *v
		}
		var ret JobOutputCompressionFormat
		return ret
	}).(JobOutputCompressionFormatOutput)
}

func (o JobOutputCompressionFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobOutputCompressionFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JobOutputCompressionFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JobOutputCompressionFormatInput is an input type that accepts JobOutputCompressionFormatArgs and JobOutputCompressionFormatOutput values.
// You can construct a concrete instance of `JobOutputCompressionFormatInput` via:
//
//          JobOutputCompressionFormatArgs{...}
type JobOutputCompressionFormatInput interface {
	pulumi.Input

	ToJobOutputCompressionFormatOutput() JobOutputCompressionFormatOutput
	ToJobOutputCompressionFormatOutputWithContext(context.Context) JobOutputCompressionFormatOutput
}

var jobOutputCompressionFormatPtrType = reflect.TypeOf((**JobOutputCompressionFormat)(nil)).Elem()

type JobOutputCompressionFormatPtrInput interface {
	pulumi.Input

	ToJobOutputCompressionFormatPtrOutput() JobOutputCompressionFormatPtrOutput
	ToJobOutputCompressionFormatPtrOutputWithContext(context.Context) JobOutputCompressionFormatPtrOutput
}

type jobOutputCompressionFormatPtr string

func JobOutputCompressionFormatPtr(v string) JobOutputCompressionFormatPtrInput {
	return (*jobOutputCompressionFormatPtr)(&v)
}

func (*jobOutputCompressionFormatPtr) ElementType() reflect.Type {
	return jobOutputCompressionFormatPtrType
}

func (in *jobOutputCompressionFormatPtr) ToJobOutputCompressionFormatPtrOutput() JobOutputCompressionFormatPtrOutput {
	return pulumi.ToOutput(in).(JobOutputCompressionFormatPtrOutput)
}

func (in *jobOutputCompressionFormatPtr) ToJobOutputCompressionFormatPtrOutputWithContext(ctx context.Context) JobOutputCompressionFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JobOutputCompressionFormatPtrOutput)
}

type JobOutputFormat string

const (
	JobOutputFormatCsv          = JobOutputFormat("CSV")
	JobOutputFormatJson         = JobOutputFormat("JSON")
	JobOutputFormatParquet      = JobOutputFormat("PARQUET")
	JobOutputFormatGlueparquet  = JobOutputFormat("GLUEPARQUET")
	JobOutputFormatAvro         = JobOutputFormat("AVRO")
	JobOutputFormatOrc          = JobOutputFormat("ORC")
	JobOutputFormatXml          = JobOutputFormat("XML")
	JobOutputFormatTableauhyper = JobOutputFormat("TABLEAUHYPER")
)

func (JobOutputFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*JobOutputFormat)(nil)).Elem()
}

func (e JobOutputFormat) ToJobOutputFormatOutput() JobOutputFormatOutput {
	return pulumi.ToOutput(e).(JobOutputFormatOutput)
}

func (e JobOutputFormat) ToJobOutputFormatOutputWithContext(ctx context.Context) JobOutputFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JobOutputFormatOutput)
}

func (e JobOutputFormat) ToJobOutputFormatPtrOutput() JobOutputFormatPtrOutput {
	return e.ToJobOutputFormatPtrOutputWithContext(context.Background())
}

func (e JobOutputFormat) ToJobOutputFormatPtrOutputWithContext(ctx context.Context) JobOutputFormatPtrOutput {
	return JobOutputFormat(e).ToJobOutputFormatOutputWithContext(ctx).ToJobOutputFormatPtrOutputWithContext(ctx)
}

func (e JobOutputFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobOutputFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobOutputFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JobOutputFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JobOutputFormatOutput struct{ *pulumi.OutputState }

func (JobOutputFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobOutputFormat)(nil)).Elem()
}

func (o JobOutputFormatOutput) ToJobOutputFormatOutput() JobOutputFormatOutput {
	return o
}

func (o JobOutputFormatOutput) ToJobOutputFormatOutputWithContext(ctx context.Context) JobOutputFormatOutput {
	return o
}

func (o JobOutputFormatOutput) ToJobOutputFormatPtrOutput() JobOutputFormatPtrOutput {
	return o.ToJobOutputFormatPtrOutputWithContext(context.Background())
}

func (o JobOutputFormatOutput) ToJobOutputFormatPtrOutputWithContext(ctx context.Context) JobOutputFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobOutputFormat) *JobOutputFormat {
		return &v
	}).(JobOutputFormatPtrOutput)
}

func (o JobOutputFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JobOutputFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobOutputFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JobOutputFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobOutputFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobOutputFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JobOutputFormatPtrOutput struct{ *pulumi.OutputState }

func (JobOutputFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobOutputFormat)(nil)).Elem()
}

func (o JobOutputFormatPtrOutput) ToJobOutputFormatPtrOutput() JobOutputFormatPtrOutput {
	return o
}

func (o JobOutputFormatPtrOutput) ToJobOutputFormatPtrOutputWithContext(ctx context.Context) JobOutputFormatPtrOutput {
	return o
}

func (o JobOutputFormatPtrOutput) Elem() JobOutputFormatOutput {
	return o.ApplyT(func(v *JobOutputFormat) JobOutputFormat {
		if v != nil {
			return *v
		}
		var ret JobOutputFormat
		return ret
	}).(JobOutputFormatOutput)
}

func (o JobOutputFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobOutputFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JobOutputFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JobOutputFormatInput is an input type that accepts JobOutputFormatArgs and JobOutputFormatOutput values.
// You can construct a concrete instance of `JobOutputFormatInput` via:
//
//          JobOutputFormatArgs{...}
type JobOutputFormatInput interface {
	pulumi.Input

	ToJobOutputFormatOutput() JobOutputFormatOutput
	ToJobOutputFormatOutputWithContext(context.Context) JobOutputFormatOutput
}

var jobOutputFormatPtrType = reflect.TypeOf((**JobOutputFormat)(nil)).Elem()

type JobOutputFormatPtrInput interface {
	pulumi.Input

	ToJobOutputFormatPtrOutput() JobOutputFormatPtrOutput
	ToJobOutputFormatPtrOutputWithContext(context.Context) JobOutputFormatPtrOutput
}

type jobOutputFormatPtr string

func JobOutputFormatPtr(v string) JobOutputFormatPtrInput {
	return (*jobOutputFormatPtr)(&v)
}

func (*jobOutputFormatPtr) ElementType() reflect.Type {
	return jobOutputFormatPtrType
}

func (in *jobOutputFormatPtr) ToJobOutputFormatPtrOutput() JobOutputFormatPtrOutput {
	return pulumi.ToOutput(in).(JobOutputFormatPtrOutput)
}

func (in *jobOutputFormatPtr) ToJobOutputFormatPtrOutputWithContext(ctx context.Context) JobOutputFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JobOutputFormatPtrOutput)
}

// Sample configuration mode for profile jobs.
type JobSampleMode string

const (
	JobSampleModeFullDataset = JobSampleMode("FULL_DATASET")
	JobSampleModeCustomRows  = JobSampleMode("CUSTOM_ROWS")
)

func (JobSampleMode) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSampleMode)(nil)).Elem()
}

func (e JobSampleMode) ToJobSampleModeOutput() JobSampleModeOutput {
	return pulumi.ToOutput(e).(JobSampleModeOutput)
}

func (e JobSampleMode) ToJobSampleModeOutputWithContext(ctx context.Context) JobSampleModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JobSampleModeOutput)
}

func (e JobSampleMode) ToJobSampleModePtrOutput() JobSampleModePtrOutput {
	return e.ToJobSampleModePtrOutputWithContext(context.Background())
}

func (e JobSampleMode) ToJobSampleModePtrOutputWithContext(ctx context.Context) JobSampleModePtrOutput {
	return JobSampleMode(e).ToJobSampleModeOutputWithContext(ctx).ToJobSampleModePtrOutputWithContext(ctx)
}

func (e JobSampleMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobSampleMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobSampleMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JobSampleMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JobSampleModeOutput struct{ *pulumi.OutputState }

func (JobSampleModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobSampleMode)(nil)).Elem()
}

func (o JobSampleModeOutput) ToJobSampleModeOutput() JobSampleModeOutput {
	return o
}

func (o JobSampleModeOutput) ToJobSampleModeOutputWithContext(ctx context.Context) JobSampleModeOutput {
	return o
}

func (o JobSampleModeOutput) ToJobSampleModePtrOutput() JobSampleModePtrOutput {
	return o.ToJobSampleModePtrOutputWithContext(context.Background())
}

func (o JobSampleModeOutput) ToJobSampleModePtrOutputWithContext(ctx context.Context) JobSampleModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobSampleMode) *JobSampleMode {
		return &v
	}).(JobSampleModePtrOutput)
}

func (o JobSampleModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JobSampleModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobSampleMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JobSampleModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobSampleModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobSampleMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JobSampleModePtrOutput struct{ *pulumi.OutputState }

func (JobSampleModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobSampleMode)(nil)).Elem()
}

func (o JobSampleModePtrOutput) ToJobSampleModePtrOutput() JobSampleModePtrOutput {
	return o
}

func (o JobSampleModePtrOutput) ToJobSampleModePtrOutputWithContext(ctx context.Context) JobSampleModePtrOutput {
	return o
}

func (o JobSampleModePtrOutput) Elem() JobSampleModeOutput {
	return o.ApplyT(func(v *JobSampleMode) JobSampleMode {
		if v != nil {
			return *v
		}
		var ret JobSampleMode
		return ret
	}).(JobSampleModeOutput)
}

func (o JobSampleModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobSampleModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JobSampleMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JobSampleModeInput is an input type that accepts JobSampleModeArgs and JobSampleModeOutput values.
// You can construct a concrete instance of `JobSampleModeInput` via:
//
//          JobSampleModeArgs{...}
type JobSampleModeInput interface {
	pulumi.Input

	ToJobSampleModeOutput() JobSampleModeOutput
	ToJobSampleModeOutputWithContext(context.Context) JobSampleModeOutput
}

var jobSampleModePtrType = reflect.TypeOf((**JobSampleMode)(nil)).Elem()

type JobSampleModePtrInput interface {
	pulumi.Input

	ToJobSampleModePtrOutput() JobSampleModePtrOutput
	ToJobSampleModePtrOutputWithContext(context.Context) JobSampleModePtrOutput
}

type jobSampleModePtr string

func JobSampleModePtr(v string) JobSampleModePtrInput {
	return (*jobSampleModePtr)(&v)
}

func (*jobSampleModePtr) ElementType() reflect.Type {
	return jobSampleModePtrType
}

func (in *jobSampleModePtr) ToJobSampleModePtrOutput() JobSampleModePtrOutput {
	return pulumi.ToOutput(in).(JobSampleModePtrOutput)
}

func (in *jobSampleModePtr) ToJobSampleModePtrOutputWithContext(ctx context.Context) JobSampleModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JobSampleModePtrOutput)
}

// Job type
type JobType string

const (
	JobTypeProfile = JobType("PROFILE")
	JobTypeRecipe  = JobType("RECIPE")
)

func (JobType) ElementType() reflect.Type {
	return reflect.TypeOf((*JobType)(nil)).Elem()
}

func (e JobType) ToJobTypeOutput() JobTypeOutput {
	return pulumi.ToOutput(e).(JobTypeOutput)
}

func (e JobType) ToJobTypeOutputWithContext(ctx context.Context) JobTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(JobTypeOutput)
}

func (e JobType) ToJobTypePtrOutput() JobTypePtrOutput {
	return e.ToJobTypePtrOutputWithContext(context.Background())
}

func (e JobType) ToJobTypePtrOutputWithContext(ctx context.Context) JobTypePtrOutput {
	return JobType(e).ToJobTypeOutputWithContext(ctx).ToJobTypePtrOutputWithContext(ctx)
}

func (e JobType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e JobType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e JobType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type JobTypeOutput struct{ *pulumi.OutputState }

func (JobTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobType)(nil)).Elem()
}

func (o JobTypeOutput) ToJobTypeOutput() JobTypeOutput {
	return o
}

func (o JobTypeOutput) ToJobTypeOutputWithContext(ctx context.Context) JobTypeOutput {
	return o
}

func (o JobTypeOutput) ToJobTypePtrOutput() JobTypePtrOutput {
	return o.ToJobTypePtrOutputWithContext(context.Background())
}

func (o JobTypeOutput) ToJobTypePtrOutputWithContext(ctx context.Context) JobTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobType) *JobType {
		return &v
	}).(JobTypePtrOutput)
}

func (o JobTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o JobTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o JobTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e JobType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type JobTypePtrOutput struct{ *pulumi.OutputState }

func (JobTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobType)(nil)).Elem()
}

func (o JobTypePtrOutput) ToJobTypePtrOutput() JobTypePtrOutput {
	return o
}

func (o JobTypePtrOutput) ToJobTypePtrOutputWithContext(ctx context.Context) JobTypePtrOutput {
	return o
}

func (o JobTypePtrOutput) Elem() JobTypeOutput {
	return o.ApplyT(func(v *JobType) JobType {
		if v != nil {
			return *v
		}
		var ret JobType
		return ret
	}).(JobTypeOutput)
}

func (o JobTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o JobTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *JobType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// JobTypeInput is an input type that accepts JobTypeArgs and JobTypeOutput values.
// You can construct a concrete instance of `JobTypeInput` via:
//
//          JobTypeArgs{...}
type JobTypeInput interface {
	pulumi.Input

	ToJobTypeOutput() JobTypeOutput
	ToJobTypeOutputWithContext(context.Context) JobTypeOutput
}

var jobTypePtrType = reflect.TypeOf((**JobType)(nil)).Elem()

type JobTypePtrInput interface {
	pulumi.Input

	ToJobTypePtrOutput() JobTypePtrOutput
	ToJobTypePtrOutputWithContext(context.Context) JobTypePtrOutput
}

type jobTypePtr string

func JobTypePtr(v string) JobTypePtrInput {
	return (*jobTypePtr)(&v)
}

func (*jobTypePtr) ElementType() reflect.Type {
	return jobTypePtrType
}

func (in *jobTypePtr) ToJobTypePtrOutput() JobTypePtrOutput {
	return pulumi.ToOutput(in).(JobTypePtrOutput)
}

func (in *jobTypePtr) ToJobTypePtrOutputWithContext(ctx context.Context) JobTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(JobTypePtrOutput)
}

// Sample type
type ProjectSampleType string

const (
	ProjectSampleTypeFirstN = ProjectSampleType("FIRST_N")
	ProjectSampleTypeLastN  = ProjectSampleType("LAST_N")
	ProjectSampleTypeRandom = ProjectSampleType("RANDOM")
)

func (ProjectSampleType) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSampleType)(nil)).Elem()
}

func (e ProjectSampleType) ToProjectSampleTypeOutput() ProjectSampleTypeOutput {
	return pulumi.ToOutput(e).(ProjectSampleTypeOutput)
}

func (e ProjectSampleType) ToProjectSampleTypeOutputWithContext(ctx context.Context) ProjectSampleTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ProjectSampleTypeOutput)
}

func (e ProjectSampleType) ToProjectSampleTypePtrOutput() ProjectSampleTypePtrOutput {
	return e.ToProjectSampleTypePtrOutputWithContext(context.Background())
}

func (e ProjectSampleType) ToProjectSampleTypePtrOutputWithContext(ctx context.Context) ProjectSampleTypePtrOutput {
	return ProjectSampleType(e).ToProjectSampleTypeOutputWithContext(ctx).ToProjectSampleTypePtrOutputWithContext(ctx)
}

func (e ProjectSampleType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProjectSampleType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ProjectSampleType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ProjectSampleType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ProjectSampleTypeOutput struct{ *pulumi.OutputState }

func (ProjectSampleTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSampleType)(nil)).Elem()
}

func (o ProjectSampleTypeOutput) ToProjectSampleTypeOutput() ProjectSampleTypeOutput {
	return o
}

func (o ProjectSampleTypeOutput) ToProjectSampleTypeOutputWithContext(ctx context.Context) ProjectSampleTypeOutput {
	return o
}

func (o ProjectSampleTypeOutput) ToProjectSampleTypePtrOutput() ProjectSampleTypePtrOutput {
	return o.ToProjectSampleTypePtrOutputWithContext(context.Background())
}

func (o ProjectSampleTypeOutput) ToProjectSampleTypePtrOutputWithContext(ctx context.Context) ProjectSampleTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSampleType) *ProjectSampleType {
		return &v
	}).(ProjectSampleTypePtrOutput)
}

func (o ProjectSampleTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ProjectSampleTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProjectSampleType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ProjectSampleTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProjectSampleTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ProjectSampleType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ProjectSampleTypePtrOutput struct{ *pulumi.OutputState }

func (ProjectSampleTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSampleType)(nil)).Elem()
}

func (o ProjectSampleTypePtrOutput) ToProjectSampleTypePtrOutput() ProjectSampleTypePtrOutput {
	return o
}

func (o ProjectSampleTypePtrOutput) ToProjectSampleTypePtrOutputWithContext(ctx context.Context) ProjectSampleTypePtrOutput {
	return o
}

func (o ProjectSampleTypePtrOutput) Elem() ProjectSampleTypeOutput {
	return o.ApplyT(func(v *ProjectSampleType) ProjectSampleType {
		if v != nil {
			return *v
		}
		var ret ProjectSampleType
		return ret
	}).(ProjectSampleTypeOutput)
}

func (o ProjectSampleTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ProjectSampleTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ProjectSampleType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ProjectSampleTypeInput is an input type that accepts ProjectSampleTypeArgs and ProjectSampleTypeOutput values.
// You can construct a concrete instance of `ProjectSampleTypeInput` via:
//
//          ProjectSampleTypeArgs{...}
type ProjectSampleTypeInput interface {
	pulumi.Input

	ToProjectSampleTypeOutput() ProjectSampleTypeOutput
	ToProjectSampleTypeOutputWithContext(context.Context) ProjectSampleTypeOutput
}

var projectSampleTypePtrType = reflect.TypeOf((**ProjectSampleType)(nil)).Elem()

type ProjectSampleTypePtrInput interface {
	pulumi.Input

	ToProjectSampleTypePtrOutput() ProjectSampleTypePtrOutput
	ToProjectSampleTypePtrOutputWithContext(context.Context) ProjectSampleTypePtrOutput
}

type projectSampleTypePtr string

func ProjectSampleTypePtr(v string) ProjectSampleTypePtrInput {
	return (*projectSampleTypePtr)(&v)
}

func (*projectSampleTypePtr) ElementType() reflect.Type {
	return projectSampleTypePtrType
}

func (in *projectSampleTypePtr) ToProjectSampleTypePtrOutput() ProjectSampleTypePtrOutput {
	return pulumi.ToOutput(in).(ProjectSampleTypePtrOutput)
}

func (in *projectSampleTypePtr) ToProjectSampleTypePtrOutputWithContext(ctx context.Context) ProjectSampleTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ProjectSampleTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(DatasetDatasetParameterTypeOutput{})
	pulumi.RegisterOutputType(DatasetDatasetParameterTypePtrOutput{})
	pulumi.RegisterOutputType(DatasetFilesLimitOrderOutput{})
	pulumi.RegisterOutputType(DatasetFilesLimitOrderPtrOutput{})
	pulumi.RegisterOutputType(DatasetFilesLimitOrderedByOutput{})
	pulumi.RegisterOutputType(DatasetFilesLimitOrderedByPtrOutput{})
	pulumi.RegisterOutputType(DatasetFormatOutput{})
	pulumi.RegisterOutputType(DatasetFormatPtrOutput{})
	pulumi.RegisterOutputType(JobDatabaseOutputDatabaseOutputModeOutput{})
	pulumi.RegisterOutputType(JobDatabaseOutputDatabaseOutputModePtrOutput{})
	pulumi.RegisterOutputType(JobEncryptionModeOutput{})
	pulumi.RegisterOutputType(JobEncryptionModePtrOutput{})
	pulumi.RegisterOutputType(JobLogSubscriptionOutput{})
	pulumi.RegisterOutputType(JobLogSubscriptionPtrOutput{})
	pulumi.RegisterOutputType(JobOutputCompressionFormatOutput{})
	pulumi.RegisterOutputType(JobOutputCompressionFormatPtrOutput{})
	pulumi.RegisterOutputType(JobOutputFormatOutput{})
	pulumi.RegisterOutputType(JobOutputFormatPtrOutput{})
	pulumi.RegisterOutputType(JobSampleModeOutput{})
	pulumi.RegisterOutputType(JobSampleModePtrOutput{})
	pulumi.RegisterOutputType(JobTypeOutput{})
	pulumi.RegisterOutputType(JobTypePtrOutput{})
	pulumi.RegisterOutputType(ProjectSampleTypeOutput{})
	pulumi.RegisterOutputType(ProjectSampleTypePtrOutput{})
}
