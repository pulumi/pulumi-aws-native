// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Contains the information of an Agent Action Group
type AgentActionGroup struct {
	// The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action or the custom control method for handling the information elicited from the user.
	ActionGroupExecutor interface{} `pulumi:"actionGroupExecutor"`
	// Name of the action group
	ActionGroupName string `pulumi:"actionGroupName"`
	// Specifies whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request.
	ActionGroupState *AgentActionGroupState `pulumi:"actionGroupState"`
	// Contains either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html) .
	ApiSchema interface{} `pulumi:"apiSchema"`
	// Description of action group
	Description *string `pulumi:"description"`
	// Defines functions that each define parameters that the agent needs to invoke from the user. Each function represents an action in an action group.
	FunctionSchema *AgentFunctionSchema `pulumi:"functionSchema"`
	// If this field is set as `AMAZON.UserInput` , the agent can request the user for additional information when trying to complete a task. The `description` , `apiSchema` , and `actionGroupExecutor` fields must be blank for this action group.
	//
	// During orchestration, if the agent determines that it needs to invoke an API in an action group, but doesn't have enough information to complete the API request, it will invoke this action group instead and return an [Observation](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Observation.html) reprompting the user for more information.
	ParentActionGroupSignature *AgentActionGroupSignature `pulumi:"parentActionGroupSignature"`
	// Specifies whether to allow deleting action group while it is in use.
	SkipResourceInUseCheckOnDelete *bool `pulumi:"skipResourceInUseCheckOnDelete"`
}

// AgentActionGroupInput is an input type that accepts AgentActionGroupArgs and AgentActionGroupOutput values.
// You can construct a concrete instance of `AgentActionGroupInput` via:
//
//	AgentActionGroupArgs{...}
type AgentActionGroupInput interface {
	pulumi.Input

	ToAgentActionGroupOutput() AgentActionGroupOutput
	ToAgentActionGroupOutputWithContext(context.Context) AgentActionGroupOutput
}

// Contains the information of an Agent Action Group
type AgentActionGroupArgs struct {
	// The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action or the custom control method for handling the information elicited from the user.
	ActionGroupExecutor pulumi.Input `pulumi:"actionGroupExecutor"`
	// Name of the action group
	ActionGroupName pulumi.StringInput `pulumi:"actionGroupName"`
	// Specifies whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request.
	ActionGroupState AgentActionGroupStatePtrInput `pulumi:"actionGroupState"`
	// Contains either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html) .
	ApiSchema pulumi.Input `pulumi:"apiSchema"`
	// Description of action group
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Defines functions that each define parameters that the agent needs to invoke from the user. Each function represents an action in an action group.
	FunctionSchema AgentFunctionSchemaPtrInput `pulumi:"functionSchema"`
	// If this field is set as `AMAZON.UserInput` , the agent can request the user for additional information when trying to complete a task. The `description` , `apiSchema` , and `actionGroupExecutor` fields must be blank for this action group.
	//
	// During orchestration, if the agent determines that it needs to invoke an API in an action group, but doesn't have enough information to complete the API request, it will invoke this action group instead and return an [Observation](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Observation.html) reprompting the user for more information.
	ParentActionGroupSignature AgentActionGroupSignaturePtrInput `pulumi:"parentActionGroupSignature"`
	// Specifies whether to allow deleting action group while it is in use.
	SkipResourceInUseCheckOnDelete pulumi.BoolPtrInput `pulumi:"skipResourceInUseCheckOnDelete"`
}

func (AgentActionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentActionGroup)(nil)).Elem()
}

func (i AgentActionGroupArgs) ToAgentActionGroupOutput() AgentActionGroupOutput {
	return i.ToAgentActionGroupOutputWithContext(context.Background())
}

func (i AgentActionGroupArgs) ToAgentActionGroupOutputWithContext(ctx context.Context) AgentActionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupOutput)
}

// AgentActionGroupArrayInput is an input type that accepts AgentActionGroupArray and AgentActionGroupArrayOutput values.
// You can construct a concrete instance of `AgentActionGroupArrayInput` via:
//
//	AgentActionGroupArray{ AgentActionGroupArgs{...} }
type AgentActionGroupArrayInput interface {
	pulumi.Input

	ToAgentActionGroupArrayOutput() AgentActionGroupArrayOutput
	ToAgentActionGroupArrayOutputWithContext(context.Context) AgentActionGroupArrayOutput
}

type AgentActionGroupArray []AgentActionGroupInput

func (AgentActionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentActionGroup)(nil)).Elem()
}

func (i AgentActionGroupArray) ToAgentActionGroupArrayOutput() AgentActionGroupArrayOutput {
	return i.ToAgentActionGroupArrayOutputWithContext(context.Background())
}

func (i AgentActionGroupArray) ToAgentActionGroupArrayOutputWithContext(ctx context.Context) AgentActionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupArrayOutput)
}

// Contains the information of an Agent Action Group
type AgentActionGroupOutput struct{ *pulumi.OutputState }

func (AgentActionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentActionGroup)(nil)).Elem()
}

func (o AgentActionGroupOutput) ToAgentActionGroupOutput() AgentActionGroupOutput {
	return o
}

func (o AgentActionGroupOutput) ToAgentActionGroupOutputWithContext(ctx context.Context) AgentActionGroupOutput {
	return o
}

// The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action or the custom control method for handling the information elicited from the user.
func (o AgentActionGroupOutput) ActionGroupExecutor() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentActionGroup) interface{} { return v.ActionGroupExecutor }).(pulumi.AnyOutput)
}

// Name of the action group
func (o AgentActionGroupOutput) ActionGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v AgentActionGroup) string { return v.ActionGroupName }).(pulumi.StringOutput)
}

// Specifies whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request.
func (o AgentActionGroupOutput) ActionGroupState() AgentActionGroupStatePtrOutput {
	return o.ApplyT(func(v AgentActionGroup) *AgentActionGroupState { return v.ActionGroupState }).(AgentActionGroupStatePtrOutput)
}

// Contains either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html) .
func (o AgentActionGroupOutput) ApiSchema() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentActionGroup) interface{} { return v.ApiSchema }).(pulumi.AnyOutput)
}

// Description of action group
func (o AgentActionGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentActionGroup) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Defines functions that each define parameters that the agent needs to invoke from the user. Each function represents an action in an action group.
func (o AgentActionGroupOutput) FunctionSchema() AgentFunctionSchemaPtrOutput {
	return o.ApplyT(func(v AgentActionGroup) *AgentFunctionSchema { return v.FunctionSchema }).(AgentFunctionSchemaPtrOutput)
}

// If this field is set as `AMAZON.UserInput` , the agent can request the user for additional information when trying to complete a task. The `description` , `apiSchema` , and `actionGroupExecutor` fields must be blank for this action group.
//
// During orchestration, if the agent determines that it needs to invoke an API in an action group, but doesn't have enough information to complete the API request, it will invoke this action group instead and return an [Observation](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Observation.html) reprompting the user for more information.
func (o AgentActionGroupOutput) ParentActionGroupSignature() AgentActionGroupSignaturePtrOutput {
	return o.ApplyT(func(v AgentActionGroup) *AgentActionGroupSignature { return v.ParentActionGroupSignature }).(AgentActionGroupSignaturePtrOutput)
}

// Specifies whether to allow deleting action group while it is in use.
func (o AgentActionGroupOutput) SkipResourceInUseCheckOnDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentActionGroup) *bool { return v.SkipResourceInUseCheckOnDelete }).(pulumi.BoolPtrOutput)
}

type AgentActionGroupArrayOutput struct{ *pulumi.OutputState }

func (AgentActionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentActionGroup)(nil)).Elem()
}

func (o AgentActionGroupArrayOutput) ToAgentActionGroupArrayOutput() AgentActionGroupArrayOutput {
	return o
}

func (o AgentActionGroupArrayOutput) ToAgentActionGroupArrayOutputWithContext(ctx context.Context) AgentActionGroupArrayOutput {
	return o
}

func (o AgentActionGroupArrayOutput) Index(i pulumi.IntInput) AgentActionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentActionGroup {
		return vs[0].([]AgentActionGroup)[vs[1].(int)]
	}).(AgentActionGroupOutput)
}

// Type of Executors for an Action Group
type AgentActionGroupExecutor0Properties struct {
	// ARN of a Lambda.
	Lambda string `pulumi:"lambda"`
}

// AgentActionGroupExecutor0PropertiesInput is an input type that accepts AgentActionGroupExecutor0PropertiesArgs and AgentActionGroupExecutor0PropertiesOutput values.
// You can construct a concrete instance of `AgentActionGroupExecutor0PropertiesInput` via:
//
//	AgentActionGroupExecutor0PropertiesArgs{...}
type AgentActionGroupExecutor0PropertiesInput interface {
	pulumi.Input

	ToAgentActionGroupExecutor0PropertiesOutput() AgentActionGroupExecutor0PropertiesOutput
	ToAgentActionGroupExecutor0PropertiesOutputWithContext(context.Context) AgentActionGroupExecutor0PropertiesOutput
}

// Type of Executors for an Action Group
type AgentActionGroupExecutor0PropertiesArgs struct {
	// ARN of a Lambda.
	Lambda pulumi.StringInput `pulumi:"lambda"`
}

func (AgentActionGroupExecutor0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentActionGroupExecutor0Properties)(nil)).Elem()
}

func (i AgentActionGroupExecutor0PropertiesArgs) ToAgentActionGroupExecutor0PropertiesOutput() AgentActionGroupExecutor0PropertiesOutput {
	return i.ToAgentActionGroupExecutor0PropertiesOutputWithContext(context.Background())
}

func (i AgentActionGroupExecutor0PropertiesArgs) ToAgentActionGroupExecutor0PropertiesOutputWithContext(ctx context.Context) AgentActionGroupExecutor0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupExecutor0PropertiesOutput)
}

func (i AgentActionGroupExecutor0PropertiesArgs) ToAgentActionGroupExecutor0PropertiesPtrOutput() AgentActionGroupExecutor0PropertiesPtrOutput {
	return i.ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(context.Background())
}

func (i AgentActionGroupExecutor0PropertiesArgs) ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupExecutor0PropertiesOutput).ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(ctx)
}

// AgentActionGroupExecutor0PropertiesPtrInput is an input type that accepts AgentActionGroupExecutor0PropertiesArgs, AgentActionGroupExecutor0PropertiesPtr and AgentActionGroupExecutor0PropertiesPtrOutput values.
// You can construct a concrete instance of `AgentActionGroupExecutor0PropertiesPtrInput` via:
//
//	        AgentActionGroupExecutor0PropertiesArgs{...}
//
//	or:
//
//	        nil
type AgentActionGroupExecutor0PropertiesPtrInput interface {
	pulumi.Input

	ToAgentActionGroupExecutor0PropertiesPtrOutput() AgentActionGroupExecutor0PropertiesPtrOutput
	ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(context.Context) AgentActionGroupExecutor0PropertiesPtrOutput
}

type agentActionGroupExecutor0PropertiesPtrType AgentActionGroupExecutor0PropertiesArgs

func AgentActionGroupExecutor0PropertiesPtr(v *AgentActionGroupExecutor0PropertiesArgs) AgentActionGroupExecutor0PropertiesPtrInput {
	return (*agentActionGroupExecutor0PropertiesPtrType)(v)
}

func (*agentActionGroupExecutor0PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentActionGroupExecutor0Properties)(nil)).Elem()
}

func (i *agentActionGroupExecutor0PropertiesPtrType) ToAgentActionGroupExecutor0PropertiesPtrOutput() AgentActionGroupExecutor0PropertiesPtrOutput {
	return i.ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(context.Background())
}

func (i *agentActionGroupExecutor0PropertiesPtrType) ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupExecutor0PropertiesPtrOutput)
}

// Type of Executors for an Action Group
type AgentActionGroupExecutor0PropertiesOutput struct{ *pulumi.OutputState }

func (AgentActionGroupExecutor0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentActionGroupExecutor0Properties)(nil)).Elem()
}

func (o AgentActionGroupExecutor0PropertiesOutput) ToAgentActionGroupExecutor0PropertiesOutput() AgentActionGroupExecutor0PropertiesOutput {
	return o
}

func (o AgentActionGroupExecutor0PropertiesOutput) ToAgentActionGroupExecutor0PropertiesOutputWithContext(ctx context.Context) AgentActionGroupExecutor0PropertiesOutput {
	return o
}

func (o AgentActionGroupExecutor0PropertiesOutput) ToAgentActionGroupExecutor0PropertiesPtrOutput() AgentActionGroupExecutor0PropertiesPtrOutput {
	return o.ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(context.Background())
}

func (o AgentActionGroupExecutor0PropertiesOutput) ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor0PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentActionGroupExecutor0Properties) *AgentActionGroupExecutor0Properties {
		return &v
	}).(AgentActionGroupExecutor0PropertiesPtrOutput)
}

// ARN of a Lambda.
func (o AgentActionGroupExecutor0PropertiesOutput) Lambda() pulumi.StringOutput {
	return o.ApplyT(func(v AgentActionGroupExecutor0Properties) string { return v.Lambda }).(pulumi.StringOutput)
}

type AgentActionGroupExecutor0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (AgentActionGroupExecutor0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentActionGroupExecutor0Properties)(nil)).Elem()
}

func (o AgentActionGroupExecutor0PropertiesPtrOutput) ToAgentActionGroupExecutor0PropertiesPtrOutput() AgentActionGroupExecutor0PropertiesPtrOutput {
	return o
}

func (o AgentActionGroupExecutor0PropertiesPtrOutput) ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor0PropertiesPtrOutput {
	return o
}

func (o AgentActionGroupExecutor0PropertiesPtrOutput) Elem() AgentActionGroupExecutor0PropertiesOutput {
	return o.ApplyT(func(v *AgentActionGroupExecutor0Properties) AgentActionGroupExecutor0Properties {
		if v != nil {
			return *v
		}
		var ret AgentActionGroupExecutor0Properties
		return ret
	}).(AgentActionGroupExecutor0PropertiesOutput)
}

// ARN of a Lambda.
func (o AgentActionGroupExecutor0PropertiesPtrOutput) Lambda() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentActionGroupExecutor0Properties) *string {
		if v == nil {
			return nil
		}
		return &v.Lambda
	}).(pulumi.StringPtrOutput)
}

// Type of Executors for an Action Group
type AgentActionGroupExecutor1Properties struct {
	CustomControl AgentCustomControlMethod `pulumi:"customControl"`
}

// AgentActionGroupExecutor1PropertiesInput is an input type that accepts AgentActionGroupExecutor1PropertiesArgs and AgentActionGroupExecutor1PropertiesOutput values.
// You can construct a concrete instance of `AgentActionGroupExecutor1PropertiesInput` via:
//
//	AgentActionGroupExecutor1PropertiesArgs{...}
type AgentActionGroupExecutor1PropertiesInput interface {
	pulumi.Input

	ToAgentActionGroupExecutor1PropertiesOutput() AgentActionGroupExecutor1PropertiesOutput
	ToAgentActionGroupExecutor1PropertiesOutputWithContext(context.Context) AgentActionGroupExecutor1PropertiesOutput
}

// Type of Executors for an Action Group
type AgentActionGroupExecutor1PropertiesArgs struct {
	CustomControl AgentCustomControlMethodInput `pulumi:"customControl"`
}

func (AgentActionGroupExecutor1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentActionGroupExecutor1Properties)(nil)).Elem()
}

func (i AgentActionGroupExecutor1PropertiesArgs) ToAgentActionGroupExecutor1PropertiesOutput() AgentActionGroupExecutor1PropertiesOutput {
	return i.ToAgentActionGroupExecutor1PropertiesOutputWithContext(context.Background())
}

func (i AgentActionGroupExecutor1PropertiesArgs) ToAgentActionGroupExecutor1PropertiesOutputWithContext(ctx context.Context) AgentActionGroupExecutor1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupExecutor1PropertiesOutput)
}

func (i AgentActionGroupExecutor1PropertiesArgs) ToAgentActionGroupExecutor1PropertiesPtrOutput() AgentActionGroupExecutor1PropertiesPtrOutput {
	return i.ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(context.Background())
}

func (i AgentActionGroupExecutor1PropertiesArgs) ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupExecutor1PropertiesOutput).ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(ctx)
}

// AgentActionGroupExecutor1PropertiesPtrInput is an input type that accepts AgentActionGroupExecutor1PropertiesArgs, AgentActionGroupExecutor1PropertiesPtr and AgentActionGroupExecutor1PropertiesPtrOutput values.
// You can construct a concrete instance of `AgentActionGroupExecutor1PropertiesPtrInput` via:
//
//	        AgentActionGroupExecutor1PropertiesArgs{...}
//
//	or:
//
//	        nil
type AgentActionGroupExecutor1PropertiesPtrInput interface {
	pulumi.Input

	ToAgentActionGroupExecutor1PropertiesPtrOutput() AgentActionGroupExecutor1PropertiesPtrOutput
	ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(context.Context) AgentActionGroupExecutor1PropertiesPtrOutput
}

type agentActionGroupExecutor1PropertiesPtrType AgentActionGroupExecutor1PropertiesArgs

func AgentActionGroupExecutor1PropertiesPtr(v *AgentActionGroupExecutor1PropertiesArgs) AgentActionGroupExecutor1PropertiesPtrInput {
	return (*agentActionGroupExecutor1PropertiesPtrType)(v)
}

func (*agentActionGroupExecutor1PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentActionGroupExecutor1Properties)(nil)).Elem()
}

func (i *agentActionGroupExecutor1PropertiesPtrType) ToAgentActionGroupExecutor1PropertiesPtrOutput() AgentActionGroupExecutor1PropertiesPtrOutput {
	return i.ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(context.Background())
}

func (i *agentActionGroupExecutor1PropertiesPtrType) ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupExecutor1PropertiesPtrOutput)
}

// Type of Executors for an Action Group
type AgentActionGroupExecutor1PropertiesOutput struct{ *pulumi.OutputState }

func (AgentActionGroupExecutor1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentActionGroupExecutor1Properties)(nil)).Elem()
}

func (o AgentActionGroupExecutor1PropertiesOutput) ToAgentActionGroupExecutor1PropertiesOutput() AgentActionGroupExecutor1PropertiesOutput {
	return o
}

func (o AgentActionGroupExecutor1PropertiesOutput) ToAgentActionGroupExecutor1PropertiesOutputWithContext(ctx context.Context) AgentActionGroupExecutor1PropertiesOutput {
	return o
}

func (o AgentActionGroupExecutor1PropertiesOutput) ToAgentActionGroupExecutor1PropertiesPtrOutput() AgentActionGroupExecutor1PropertiesPtrOutput {
	return o.ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(context.Background())
}

func (o AgentActionGroupExecutor1PropertiesOutput) ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor1PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentActionGroupExecutor1Properties) *AgentActionGroupExecutor1Properties {
		return &v
	}).(AgentActionGroupExecutor1PropertiesPtrOutput)
}

func (o AgentActionGroupExecutor1PropertiesOutput) CustomControl() AgentCustomControlMethodOutput {
	return o.ApplyT(func(v AgentActionGroupExecutor1Properties) AgentCustomControlMethod { return v.CustomControl }).(AgentCustomControlMethodOutput)
}

type AgentActionGroupExecutor1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (AgentActionGroupExecutor1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentActionGroupExecutor1Properties)(nil)).Elem()
}

func (o AgentActionGroupExecutor1PropertiesPtrOutput) ToAgentActionGroupExecutor1PropertiesPtrOutput() AgentActionGroupExecutor1PropertiesPtrOutput {
	return o
}

func (o AgentActionGroupExecutor1PropertiesPtrOutput) ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor1PropertiesPtrOutput {
	return o
}

func (o AgentActionGroupExecutor1PropertiesPtrOutput) Elem() AgentActionGroupExecutor1PropertiesOutput {
	return o.ApplyT(func(v *AgentActionGroupExecutor1Properties) AgentActionGroupExecutor1Properties {
		if v != nil {
			return *v
		}
		var ret AgentActionGroupExecutor1Properties
		return ret
	}).(AgentActionGroupExecutor1PropertiesOutput)
}

func (o AgentActionGroupExecutor1PropertiesPtrOutput) CustomControl() AgentCustomControlMethodPtrOutput {
	return o.ApplyT(func(v *AgentActionGroupExecutor1Properties) *AgentCustomControlMethod {
		if v == nil {
			return nil
		}
		return &v.CustomControl
	}).(AgentCustomControlMethodPtrOutput)
}

// History event for an alias for an Agent.
type AgentAliasHistoryEvent struct {
	// Time Stamp.
	EndDate *string `pulumi:"endDate"`
	// Routing configuration for an Agent alias.
	RoutingConfiguration []AgentAliasRoutingConfigurationListItem `pulumi:"routingConfiguration"`
	// Time Stamp.
	StartDate *string `pulumi:"startDate"`
}

// History event for an alias for an Agent.
type AgentAliasHistoryEventOutput struct{ *pulumi.OutputState }

func (AgentAliasHistoryEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentAliasHistoryEvent)(nil)).Elem()
}

func (o AgentAliasHistoryEventOutput) ToAgentAliasHistoryEventOutput() AgentAliasHistoryEventOutput {
	return o
}

func (o AgentAliasHistoryEventOutput) ToAgentAliasHistoryEventOutputWithContext(ctx context.Context) AgentAliasHistoryEventOutput {
	return o
}

// Time Stamp.
func (o AgentAliasHistoryEventOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentAliasHistoryEvent) *string { return v.EndDate }).(pulumi.StringPtrOutput)
}

// Routing configuration for an Agent alias.
func (o AgentAliasHistoryEventOutput) RoutingConfiguration() AgentAliasRoutingConfigurationListItemArrayOutput {
	return o.ApplyT(func(v AgentAliasHistoryEvent) []AgentAliasRoutingConfigurationListItem { return v.RoutingConfiguration }).(AgentAliasRoutingConfigurationListItemArrayOutput)
}

// Time Stamp.
func (o AgentAliasHistoryEventOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentAliasHistoryEvent) *string { return v.StartDate }).(pulumi.StringPtrOutput)
}

type AgentAliasHistoryEventArrayOutput struct{ *pulumi.OutputState }

func (AgentAliasHistoryEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentAliasHistoryEvent)(nil)).Elem()
}

func (o AgentAliasHistoryEventArrayOutput) ToAgentAliasHistoryEventArrayOutput() AgentAliasHistoryEventArrayOutput {
	return o
}

func (o AgentAliasHistoryEventArrayOutput) ToAgentAliasHistoryEventArrayOutputWithContext(ctx context.Context) AgentAliasHistoryEventArrayOutput {
	return o
}

func (o AgentAliasHistoryEventArrayOutput) Index(i pulumi.IntInput) AgentAliasHistoryEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentAliasHistoryEvent {
		return vs[0].([]AgentAliasHistoryEvent)[vs[1].(int)]
	}).(AgentAliasHistoryEventOutput)
}

// Details about the routing configuration for an Agent alias.
type AgentAliasRoutingConfigurationListItem struct {
	// Agent Version.
	AgentVersion string `pulumi:"agentVersion"`
}

// AgentAliasRoutingConfigurationListItemInput is an input type that accepts AgentAliasRoutingConfigurationListItemArgs and AgentAliasRoutingConfigurationListItemOutput values.
// You can construct a concrete instance of `AgentAliasRoutingConfigurationListItemInput` via:
//
//	AgentAliasRoutingConfigurationListItemArgs{...}
type AgentAliasRoutingConfigurationListItemInput interface {
	pulumi.Input

	ToAgentAliasRoutingConfigurationListItemOutput() AgentAliasRoutingConfigurationListItemOutput
	ToAgentAliasRoutingConfigurationListItemOutputWithContext(context.Context) AgentAliasRoutingConfigurationListItemOutput
}

// Details about the routing configuration for an Agent alias.
type AgentAliasRoutingConfigurationListItemArgs struct {
	// Agent Version.
	AgentVersion pulumi.StringInput `pulumi:"agentVersion"`
}

func (AgentAliasRoutingConfigurationListItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentAliasRoutingConfigurationListItem)(nil)).Elem()
}

func (i AgentAliasRoutingConfigurationListItemArgs) ToAgentAliasRoutingConfigurationListItemOutput() AgentAliasRoutingConfigurationListItemOutput {
	return i.ToAgentAliasRoutingConfigurationListItemOutputWithContext(context.Background())
}

func (i AgentAliasRoutingConfigurationListItemArgs) ToAgentAliasRoutingConfigurationListItemOutputWithContext(ctx context.Context) AgentAliasRoutingConfigurationListItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAliasRoutingConfigurationListItemOutput)
}

// AgentAliasRoutingConfigurationListItemArrayInput is an input type that accepts AgentAliasRoutingConfigurationListItemArray and AgentAliasRoutingConfigurationListItemArrayOutput values.
// You can construct a concrete instance of `AgentAliasRoutingConfigurationListItemArrayInput` via:
//
//	AgentAliasRoutingConfigurationListItemArray{ AgentAliasRoutingConfigurationListItemArgs{...} }
type AgentAliasRoutingConfigurationListItemArrayInput interface {
	pulumi.Input

	ToAgentAliasRoutingConfigurationListItemArrayOutput() AgentAliasRoutingConfigurationListItemArrayOutput
	ToAgentAliasRoutingConfigurationListItemArrayOutputWithContext(context.Context) AgentAliasRoutingConfigurationListItemArrayOutput
}

type AgentAliasRoutingConfigurationListItemArray []AgentAliasRoutingConfigurationListItemInput

func (AgentAliasRoutingConfigurationListItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentAliasRoutingConfigurationListItem)(nil)).Elem()
}

func (i AgentAliasRoutingConfigurationListItemArray) ToAgentAliasRoutingConfigurationListItemArrayOutput() AgentAliasRoutingConfigurationListItemArrayOutput {
	return i.ToAgentAliasRoutingConfigurationListItemArrayOutputWithContext(context.Background())
}

func (i AgentAliasRoutingConfigurationListItemArray) ToAgentAliasRoutingConfigurationListItemArrayOutputWithContext(ctx context.Context) AgentAliasRoutingConfigurationListItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAliasRoutingConfigurationListItemArrayOutput)
}

// Details about the routing configuration for an Agent alias.
type AgentAliasRoutingConfigurationListItemOutput struct{ *pulumi.OutputState }

func (AgentAliasRoutingConfigurationListItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentAliasRoutingConfigurationListItem)(nil)).Elem()
}

func (o AgentAliasRoutingConfigurationListItemOutput) ToAgentAliasRoutingConfigurationListItemOutput() AgentAliasRoutingConfigurationListItemOutput {
	return o
}

func (o AgentAliasRoutingConfigurationListItemOutput) ToAgentAliasRoutingConfigurationListItemOutputWithContext(ctx context.Context) AgentAliasRoutingConfigurationListItemOutput {
	return o
}

// Agent Version.
func (o AgentAliasRoutingConfigurationListItemOutput) AgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v AgentAliasRoutingConfigurationListItem) string { return v.AgentVersion }).(pulumi.StringOutput)
}

type AgentAliasRoutingConfigurationListItemArrayOutput struct{ *pulumi.OutputState }

func (AgentAliasRoutingConfigurationListItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentAliasRoutingConfigurationListItem)(nil)).Elem()
}

func (o AgentAliasRoutingConfigurationListItemArrayOutput) ToAgentAliasRoutingConfigurationListItemArrayOutput() AgentAliasRoutingConfigurationListItemArrayOutput {
	return o
}

func (o AgentAliasRoutingConfigurationListItemArrayOutput) ToAgentAliasRoutingConfigurationListItemArrayOutputWithContext(ctx context.Context) AgentAliasRoutingConfigurationListItemArrayOutput {
	return o
}

func (o AgentAliasRoutingConfigurationListItemArrayOutput) Index(i pulumi.IntInput) AgentAliasRoutingConfigurationListItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentAliasRoutingConfigurationListItem {
		return vs[0].([]AgentAliasRoutingConfigurationListItem)[vs[1].(int)]
	}).(AgentAliasRoutingConfigurationListItemOutput)
}

// Contains information about the API Schema for the Action Group
type AgentApiSchema0Properties struct {
	S3 AgentS3Identifier `pulumi:"s3"`
}

// AgentApiSchema0PropertiesInput is an input type that accepts AgentApiSchema0PropertiesArgs and AgentApiSchema0PropertiesOutput values.
// You can construct a concrete instance of `AgentApiSchema0PropertiesInput` via:
//
//	AgentApiSchema0PropertiesArgs{...}
type AgentApiSchema0PropertiesInput interface {
	pulumi.Input

	ToAgentApiSchema0PropertiesOutput() AgentApiSchema0PropertiesOutput
	ToAgentApiSchema0PropertiesOutputWithContext(context.Context) AgentApiSchema0PropertiesOutput
}

// Contains information about the API Schema for the Action Group
type AgentApiSchema0PropertiesArgs struct {
	S3 AgentS3IdentifierInput `pulumi:"s3"`
}

func (AgentApiSchema0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentApiSchema0Properties)(nil)).Elem()
}

func (i AgentApiSchema0PropertiesArgs) ToAgentApiSchema0PropertiesOutput() AgentApiSchema0PropertiesOutput {
	return i.ToAgentApiSchema0PropertiesOutputWithContext(context.Background())
}

func (i AgentApiSchema0PropertiesArgs) ToAgentApiSchema0PropertiesOutputWithContext(ctx context.Context) AgentApiSchema0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentApiSchema0PropertiesOutput)
}

func (i AgentApiSchema0PropertiesArgs) ToAgentApiSchema0PropertiesPtrOutput() AgentApiSchema0PropertiesPtrOutput {
	return i.ToAgentApiSchema0PropertiesPtrOutputWithContext(context.Background())
}

func (i AgentApiSchema0PropertiesArgs) ToAgentApiSchema0PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentApiSchema0PropertiesOutput).ToAgentApiSchema0PropertiesPtrOutputWithContext(ctx)
}

// AgentApiSchema0PropertiesPtrInput is an input type that accepts AgentApiSchema0PropertiesArgs, AgentApiSchema0PropertiesPtr and AgentApiSchema0PropertiesPtrOutput values.
// You can construct a concrete instance of `AgentApiSchema0PropertiesPtrInput` via:
//
//	        AgentApiSchema0PropertiesArgs{...}
//
//	or:
//
//	        nil
type AgentApiSchema0PropertiesPtrInput interface {
	pulumi.Input

	ToAgentApiSchema0PropertiesPtrOutput() AgentApiSchema0PropertiesPtrOutput
	ToAgentApiSchema0PropertiesPtrOutputWithContext(context.Context) AgentApiSchema0PropertiesPtrOutput
}

type agentApiSchema0PropertiesPtrType AgentApiSchema0PropertiesArgs

func AgentApiSchema0PropertiesPtr(v *AgentApiSchema0PropertiesArgs) AgentApiSchema0PropertiesPtrInput {
	return (*agentApiSchema0PropertiesPtrType)(v)
}

func (*agentApiSchema0PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentApiSchema0Properties)(nil)).Elem()
}

func (i *agentApiSchema0PropertiesPtrType) ToAgentApiSchema0PropertiesPtrOutput() AgentApiSchema0PropertiesPtrOutput {
	return i.ToAgentApiSchema0PropertiesPtrOutputWithContext(context.Background())
}

func (i *agentApiSchema0PropertiesPtrType) ToAgentApiSchema0PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentApiSchema0PropertiesPtrOutput)
}

// Contains information about the API Schema for the Action Group
type AgentApiSchema0PropertiesOutput struct{ *pulumi.OutputState }

func (AgentApiSchema0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentApiSchema0Properties)(nil)).Elem()
}

func (o AgentApiSchema0PropertiesOutput) ToAgentApiSchema0PropertiesOutput() AgentApiSchema0PropertiesOutput {
	return o
}

func (o AgentApiSchema0PropertiesOutput) ToAgentApiSchema0PropertiesOutputWithContext(ctx context.Context) AgentApiSchema0PropertiesOutput {
	return o
}

func (o AgentApiSchema0PropertiesOutput) ToAgentApiSchema0PropertiesPtrOutput() AgentApiSchema0PropertiesPtrOutput {
	return o.ToAgentApiSchema0PropertiesPtrOutputWithContext(context.Background())
}

func (o AgentApiSchema0PropertiesOutput) ToAgentApiSchema0PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema0PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentApiSchema0Properties) *AgentApiSchema0Properties {
		return &v
	}).(AgentApiSchema0PropertiesPtrOutput)
}

func (o AgentApiSchema0PropertiesOutput) S3() AgentS3IdentifierOutput {
	return o.ApplyT(func(v AgentApiSchema0Properties) AgentS3Identifier { return v.S3 }).(AgentS3IdentifierOutput)
}

type AgentApiSchema0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (AgentApiSchema0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentApiSchema0Properties)(nil)).Elem()
}

func (o AgentApiSchema0PropertiesPtrOutput) ToAgentApiSchema0PropertiesPtrOutput() AgentApiSchema0PropertiesPtrOutput {
	return o
}

func (o AgentApiSchema0PropertiesPtrOutput) ToAgentApiSchema0PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema0PropertiesPtrOutput {
	return o
}

func (o AgentApiSchema0PropertiesPtrOutput) Elem() AgentApiSchema0PropertiesOutput {
	return o.ApplyT(func(v *AgentApiSchema0Properties) AgentApiSchema0Properties {
		if v != nil {
			return *v
		}
		var ret AgentApiSchema0Properties
		return ret
	}).(AgentApiSchema0PropertiesOutput)
}

func (o AgentApiSchema0PropertiesPtrOutput) S3() AgentS3IdentifierPtrOutput {
	return o.ApplyT(func(v *AgentApiSchema0Properties) *AgentS3Identifier {
		if v == nil {
			return nil
		}
		return &v.S3
	}).(AgentS3IdentifierPtrOutput)
}

// Contains information about the API Schema for the Action Group
type AgentApiSchema1Properties struct {
	// String OpenAPI Payload
	Payload string `pulumi:"payload"`
}

// AgentApiSchema1PropertiesInput is an input type that accepts AgentApiSchema1PropertiesArgs and AgentApiSchema1PropertiesOutput values.
// You can construct a concrete instance of `AgentApiSchema1PropertiesInput` via:
//
//	AgentApiSchema1PropertiesArgs{...}
type AgentApiSchema1PropertiesInput interface {
	pulumi.Input

	ToAgentApiSchema1PropertiesOutput() AgentApiSchema1PropertiesOutput
	ToAgentApiSchema1PropertiesOutputWithContext(context.Context) AgentApiSchema1PropertiesOutput
}

// Contains information about the API Schema for the Action Group
type AgentApiSchema1PropertiesArgs struct {
	// String OpenAPI Payload
	Payload pulumi.StringInput `pulumi:"payload"`
}

func (AgentApiSchema1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentApiSchema1Properties)(nil)).Elem()
}

func (i AgentApiSchema1PropertiesArgs) ToAgentApiSchema1PropertiesOutput() AgentApiSchema1PropertiesOutput {
	return i.ToAgentApiSchema1PropertiesOutputWithContext(context.Background())
}

func (i AgentApiSchema1PropertiesArgs) ToAgentApiSchema1PropertiesOutputWithContext(ctx context.Context) AgentApiSchema1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentApiSchema1PropertiesOutput)
}

func (i AgentApiSchema1PropertiesArgs) ToAgentApiSchema1PropertiesPtrOutput() AgentApiSchema1PropertiesPtrOutput {
	return i.ToAgentApiSchema1PropertiesPtrOutputWithContext(context.Background())
}

func (i AgentApiSchema1PropertiesArgs) ToAgentApiSchema1PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentApiSchema1PropertiesOutput).ToAgentApiSchema1PropertiesPtrOutputWithContext(ctx)
}

// AgentApiSchema1PropertiesPtrInput is an input type that accepts AgentApiSchema1PropertiesArgs, AgentApiSchema1PropertiesPtr and AgentApiSchema1PropertiesPtrOutput values.
// You can construct a concrete instance of `AgentApiSchema1PropertiesPtrInput` via:
//
//	        AgentApiSchema1PropertiesArgs{...}
//
//	or:
//
//	        nil
type AgentApiSchema1PropertiesPtrInput interface {
	pulumi.Input

	ToAgentApiSchema1PropertiesPtrOutput() AgentApiSchema1PropertiesPtrOutput
	ToAgentApiSchema1PropertiesPtrOutputWithContext(context.Context) AgentApiSchema1PropertiesPtrOutput
}

type agentApiSchema1PropertiesPtrType AgentApiSchema1PropertiesArgs

func AgentApiSchema1PropertiesPtr(v *AgentApiSchema1PropertiesArgs) AgentApiSchema1PropertiesPtrInput {
	return (*agentApiSchema1PropertiesPtrType)(v)
}

func (*agentApiSchema1PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentApiSchema1Properties)(nil)).Elem()
}

func (i *agentApiSchema1PropertiesPtrType) ToAgentApiSchema1PropertiesPtrOutput() AgentApiSchema1PropertiesPtrOutput {
	return i.ToAgentApiSchema1PropertiesPtrOutputWithContext(context.Background())
}

func (i *agentApiSchema1PropertiesPtrType) ToAgentApiSchema1PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentApiSchema1PropertiesPtrOutput)
}

// Contains information about the API Schema for the Action Group
type AgentApiSchema1PropertiesOutput struct{ *pulumi.OutputState }

func (AgentApiSchema1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentApiSchema1Properties)(nil)).Elem()
}

func (o AgentApiSchema1PropertiesOutput) ToAgentApiSchema1PropertiesOutput() AgentApiSchema1PropertiesOutput {
	return o
}

func (o AgentApiSchema1PropertiesOutput) ToAgentApiSchema1PropertiesOutputWithContext(ctx context.Context) AgentApiSchema1PropertiesOutput {
	return o
}

func (o AgentApiSchema1PropertiesOutput) ToAgentApiSchema1PropertiesPtrOutput() AgentApiSchema1PropertiesPtrOutput {
	return o.ToAgentApiSchema1PropertiesPtrOutputWithContext(context.Background())
}

func (o AgentApiSchema1PropertiesOutput) ToAgentApiSchema1PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema1PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentApiSchema1Properties) *AgentApiSchema1Properties {
		return &v
	}).(AgentApiSchema1PropertiesPtrOutput)
}

// String OpenAPI Payload
func (o AgentApiSchema1PropertiesOutput) Payload() pulumi.StringOutput {
	return o.ApplyT(func(v AgentApiSchema1Properties) string { return v.Payload }).(pulumi.StringOutput)
}

type AgentApiSchema1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (AgentApiSchema1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentApiSchema1Properties)(nil)).Elem()
}

func (o AgentApiSchema1PropertiesPtrOutput) ToAgentApiSchema1PropertiesPtrOutput() AgentApiSchema1PropertiesPtrOutput {
	return o
}

func (o AgentApiSchema1PropertiesPtrOutput) ToAgentApiSchema1PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema1PropertiesPtrOutput {
	return o
}

func (o AgentApiSchema1PropertiesPtrOutput) Elem() AgentApiSchema1PropertiesOutput {
	return o.ApplyT(func(v *AgentApiSchema1Properties) AgentApiSchema1Properties {
		if v != nil {
			return *v
		}
		var ret AgentApiSchema1Properties
		return ret
	}).(AgentApiSchema1PropertiesOutput)
}

// String OpenAPI Payload
func (o AgentApiSchema1PropertiesPtrOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentApiSchema1Properties) *string {
		if v == nil {
			return nil
		}
		return &v.Payload
	}).(pulumi.StringPtrOutput)
}

// Function definition
type AgentFunction struct {
	// Description of function
	Description *string `pulumi:"description"`
	// Name for a resource.
	Name string `pulumi:"name"`
	// The parameters that the agent elicits from the user to fulfill the function.
	Parameters map[string]AgentParameterDetail `pulumi:"parameters"`
}

// AgentFunctionInput is an input type that accepts AgentFunctionArgs and AgentFunctionOutput values.
// You can construct a concrete instance of `AgentFunctionInput` via:
//
//	AgentFunctionArgs{...}
type AgentFunctionInput interface {
	pulumi.Input

	ToAgentFunctionOutput() AgentFunctionOutput
	ToAgentFunctionOutputWithContext(context.Context) AgentFunctionOutput
}

// Function definition
type AgentFunctionArgs struct {
	// Description of function
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name for a resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The parameters that the agent elicits from the user to fulfill the function.
	Parameters AgentParameterDetailMapInput `pulumi:"parameters"`
}

func (AgentFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentFunction)(nil)).Elem()
}

func (i AgentFunctionArgs) ToAgentFunctionOutput() AgentFunctionOutput {
	return i.ToAgentFunctionOutputWithContext(context.Background())
}

func (i AgentFunctionArgs) ToAgentFunctionOutputWithContext(ctx context.Context) AgentFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentFunctionOutput)
}

// AgentFunctionArrayInput is an input type that accepts AgentFunctionArray and AgentFunctionArrayOutput values.
// You can construct a concrete instance of `AgentFunctionArrayInput` via:
//
//	AgentFunctionArray{ AgentFunctionArgs{...} }
type AgentFunctionArrayInput interface {
	pulumi.Input

	ToAgentFunctionArrayOutput() AgentFunctionArrayOutput
	ToAgentFunctionArrayOutputWithContext(context.Context) AgentFunctionArrayOutput
}

type AgentFunctionArray []AgentFunctionInput

func (AgentFunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentFunction)(nil)).Elem()
}

func (i AgentFunctionArray) ToAgentFunctionArrayOutput() AgentFunctionArrayOutput {
	return i.ToAgentFunctionArrayOutputWithContext(context.Background())
}

func (i AgentFunctionArray) ToAgentFunctionArrayOutputWithContext(ctx context.Context) AgentFunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentFunctionArrayOutput)
}

// Function definition
type AgentFunctionOutput struct{ *pulumi.OutputState }

func (AgentFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentFunction)(nil)).Elem()
}

func (o AgentFunctionOutput) ToAgentFunctionOutput() AgentFunctionOutput {
	return o
}

func (o AgentFunctionOutput) ToAgentFunctionOutputWithContext(ctx context.Context) AgentFunctionOutput {
	return o
}

// Description of function
func (o AgentFunctionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentFunction) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name for a resource.
func (o AgentFunctionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AgentFunction) string { return v.Name }).(pulumi.StringOutput)
}

// The parameters that the agent elicits from the user to fulfill the function.
func (o AgentFunctionOutput) Parameters() AgentParameterDetailMapOutput {
	return o.ApplyT(func(v AgentFunction) map[string]AgentParameterDetail { return v.Parameters }).(AgentParameterDetailMapOutput)
}

type AgentFunctionArrayOutput struct{ *pulumi.OutputState }

func (AgentFunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentFunction)(nil)).Elem()
}

func (o AgentFunctionArrayOutput) ToAgentFunctionArrayOutput() AgentFunctionArrayOutput {
	return o
}

func (o AgentFunctionArrayOutput) ToAgentFunctionArrayOutputWithContext(ctx context.Context) AgentFunctionArrayOutput {
	return o
}

func (o AgentFunctionArrayOutput) Index(i pulumi.IntInput) AgentFunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentFunction {
		return vs[0].([]AgentFunction)[vs[1].(int)]
	}).(AgentFunctionOutput)
}

// Schema of Functions
type AgentFunctionSchema struct {
	// List of Function definitions
	Functions []AgentFunction `pulumi:"functions"`
}

// AgentFunctionSchemaInput is an input type that accepts AgentFunctionSchemaArgs and AgentFunctionSchemaOutput values.
// You can construct a concrete instance of `AgentFunctionSchemaInput` via:
//
//	AgentFunctionSchemaArgs{...}
type AgentFunctionSchemaInput interface {
	pulumi.Input

	ToAgentFunctionSchemaOutput() AgentFunctionSchemaOutput
	ToAgentFunctionSchemaOutputWithContext(context.Context) AgentFunctionSchemaOutput
}

// Schema of Functions
type AgentFunctionSchemaArgs struct {
	// List of Function definitions
	Functions AgentFunctionArrayInput `pulumi:"functions"`
}

func (AgentFunctionSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentFunctionSchema)(nil)).Elem()
}

func (i AgentFunctionSchemaArgs) ToAgentFunctionSchemaOutput() AgentFunctionSchemaOutput {
	return i.ToAgentFunctionSchemaOutputWithContext(context.Background())
}

func (i AgentFunctionSchemaArgs) ToAgentFunctionSchemaOutputWithContext(ctx context.Context) AgentFunctionSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentFunctionSchemaOutput)
}

func (i AgentFunctionSchemaArgs) ToAgentFunctionSchemaPtrOutput() AgentFunctionSchemaPtrOutput {
	return i.ToAgentFunctionSchemaPtrOutputWithContext(context.Background())
}

func (i AgentFunctionSchemaArgs) ToAgentFunctionSchemaPtrOutputWithContext(ctx context.Context) AgentFunctionSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentFunctionSchemaOutput).ToAgentFunctionSchemaPtrOutputWithContext(ctx)
}

// AgentFunctionSchemaPtrInput is an input type that accepts AgentFunctionSchemaArgs, AgentFunctionSchemaPtr and AgentFunctionSchemaPtrOutput values.
// You can construct a concrete instance of `AgentFunctionSchemaPtrInput` via:
//
//	        AgentFunctionSchemaArgs{...}
//
//	or:
//
//	        nil
type AgentFunctionSchemaPtrInput interface {
	pulumi.Input

	ToAgentFunctionSchemaPtrOutput() AgentFunctionSchemaPtrOutput
	ToAgentFunctionSchemaPtrOutputWithContext(context.Context) AgentFunctionSchemaPtrOutput
}

type agentFunctionSchemaPtrType AgentFunctionSchemaArgs

func AgentFunctionSchemaPtr(v *AgentFunctionSchemaArgs) AgentFunctionSchemaPtrInput {
	return (*agentFunctionSchemaPtrType)(v)
}

func (*agentFunctionSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentFunctionSchema)(nil)).Elem()
}

func (i *agentFunctionSchemaPtrType) ToAgentFunctionSchemaPtrOutput() AgentFunctionSchemaPtrOutput {
	return i.ToAgentFunctionSchemaPtrOutputWithContext(context.Background())
}

func (i *agentFunctionSchemaPtrType) ToAgentFunctionSchemaPtrOutputWithContext(ctx context.Context) AgentFunctionSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentFunctionSchemaPtrOutput)
}

// Schema of Functions
type AgentFunctionSchemaOutput struct{ *pulumi.OutputState }

func (AgentFunctionSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentFunctionSchema)(nil)).Elem()
}

func (o AgentFunctionSchemaOutput) ToAgentFunctionSchemaOutput() AgentFunctionSchemaOutput {
	return o
}

func (o AgentFunctionSchemaOutput) ToAgentFunctionSchemaOutputWithContext(ctx context.Context) AgentFunctionSchemaOutput {
	return o
}

func (o AgentFunctionSchemaOutput) ToAgentFunctionSchemaPtrOutput() AgentFunctionSchemaPtrOutput {
	return o.ToAgentFunctionSchemaPtrOutputWithContext(context.Background())
}

func (o AgentFunctionSchemaOutput) ToAgentFunctionSchemaPtrOutputWithContext(ctx context.Context) AgentFunctionSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentFunctionSchema) *AgentFunctionSchema {
		return &v
	}).(AgentFunctionSchemaPtrOutput)
}

// List of Function definitions
func (o AgentFunctionSchemaOutput) Functions() AgentFunctionArrayOutput {
	return o.ApplyT(func(v AgentFunctionSchema) []AgentFunction { return v.Functions }).(AgentFunctionArrayOutput)
}

type AgentFunctionSchemaPtrOutput struct{ *pulumi.OutputState }

func (AgentFunctionSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentFunctionSchema)(nil)).Elem()
}

func (o AgentFunctionSchemaPtrOutput) ToAgentFunctionSchemaPtrOutput() AgentFunctionSchemaPtrOutput {
	return o
}

func (o AgentFunctionSchemaPtrOutput) ToAgentFunctionSchemaPtrOutputWithContext(ctx context.Context) AgentFunctionSchemaPtrOutput {
	return o
}

func (o AgentFunctionSchemaPtrOutput) Elem() AgentFunctionSchemaOutput {
	return o.ApplyT(func(v *AgentFunctionSchema) AgentFunctionSchema {
		if v != nil {
			return *v
		}
		var ret AgentFunctionSchema
		return ret
	}).(AgentFunctionSchemaOutput)
}

// List of Function definitions
func (o AgentFunctionSchemaPtrOutput) Functions() AgentFunctionArrayOutput {
	return o.ApplyT(func(v *AgentFunctionSchema) []AgentFunction {
		if v == nil {
			return nil
		}
		return v.Functions
	}).(AgentFunctionArrayOutput)
}

// Configuration for a guardrail.
type AgentGuardrailConfiguration struct {
	// Identifier for the guardrail, could be the id or the arn
	GuardrailIdentifier *string `pulumi:"guardrailIdentifier"`
	// Version of the guardrail
	GuardrailVersion *string `pulumi:"guardrailVersion"`
}

// AgentGuardrailConfigurationInput is an input type that accepts AgentGuardrailConfigurationArgs and AgentGuardrailConfigurationOutput values.
// You can construct a concrete instance of `AgentGuardrailConfigurationInput` via:
//
//	AgentGuardrailConfigurationArgs{...}
type AgentGuardrailConfigurationInput interface {
	pulumi.Input

	ToAgentGuardrailConfigurationOutput() AgentGuardrailConfigurationOutput
	ToAgentGuardrailConfigurationOutputWithContext(context.Context) AgentGuardrailConfigurationOutput
}

// Configuration for a guardrail.
type AgentGuardrailConfigurationArgs struct {
	// Identifier for the guardrail, could be the id or the arn
	GuardrailIdentifier pulumi.StringPtrInput `pulumi:"guardrailIdentifier"`
	// Version of the guardrail
	GuardrailVersion pulumi.StringPtrInput `pulumi:"guardrailVersion"`
}

func (AgentGuardrailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentGuardrailConfiguration)(nil)).Elem()
}

func (i AgentGuardrailConfigurationArgs) ToAgentGuardrailConfigurationOutput() AgentGuardrailConfigurationOutput {
	return i.ToAgentGuardrailConfigurationOutputWithContext(context.Background())
}

func (i AgentGuardrailConfigurationArgs) ToAgentGuardrailConfigurationOutputWithContext(ctx context.Context) AgentGuardrailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentGuardrailConfigurationOutput)
}

func (i AgentGuardrailConfigurationArgs) ToAgentGuardrailConfigurationPtrOutput() AgentGuardrailConfigurationPtrOutput {
	return i.ToAgentGuardrailConfigurationPtrOutputWithContext(context.Background())
}

func (i AgentGuardrailConfigurationArgs) ToAgentGuardrailConfigurationPtrOutputWithContext(ctx context.Context) AgentGuardrailConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentGuardrailConfigurationOutput).ToAgentGuardrailConfigurationPtrOutputWithContext(ctx)
}

// AgentGuardrailConfigurationPtrInput is an input type that accepts AgentGuardrailConfigurationArgs, AgentGuardrailConfigurationPtr and AgentGuardrailConfigurationPtrOutput values.
// You can construct a concrete instance of `AgentGuardrailConfigurationPtrInput` via:
//
//	        AgentGuardrailConfigurationArgs{...}
//
//	or:
//
//	        nil
type AgentGuardrailConfigurationPtrInput interface {
	pulumi.Input

	ToAgentGuardrailConfigurationPtrOutput() AgentGuardrailConfigurationPtrOutput
	ToAgentGuardrailConfigurationPtrOutputWithContext(context.Context) AgentGuardrailConfigurationPtrOutput
}

type agentGuardrailConfigurationPtrType AgentGuardrailConfigurationArgs

func AgentGuardrailConfigurationPtr(v *AgentGuardrailConfigurationArgs) AgentGuardrailConfigurationPtrInput {
	return (*agentGuardrailConfigurationPtrType)(v)
}

func (*agentGuardrailConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentGuardrailConfiguration)(nil)).Elem()
}

func (i *agentGuardrailConfigurationPtrType) ToAgentGuardrailConfigurationPtrOutput() AgentGuardrailConfigurationPtrOutput {
	return i.ToAgentGuardrailConfigurationPtrOutputWithContext(context.Background())
}

func (i *agentGuardrailConfigurationPtrType) ToAgentGuardrailConfigurationPtrOutputWithContext(ctx context.Context) AgentGuardrailConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentGuardrailConfigurationPtrOutput)
}

// Configuration for a guardrail.
type AgentGuardrailConfigurationOutput struct{ *pulumi.OutputState }

func (AgentGuardrailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentGuardrailConfiguration)(nil)).Elem()
}

func (o AgentGuardrailConfigurationOutput) ToAgentGuardrailConfigurationOutput() AgentGuardrailConfigurationOutput {
	return o
}

func (o AgentGuardrailConfigurationOutput) ToAgentGuardrailConfigurationOutputWithContext(ctx context.Context) AgentGuardrailConfigurationOutput {
	return o
}

func (o AgentGuardrailConfigurationOutput) ToAgentGuardrailConfigurationPtrOutput() AgentGuardrailConfigurationPtrOutput {
	return o.ToAgentGuardrailConfigurationPtrOutputWithContext(context.Background())
}

func (o AgentGuardrailConfigurationOutput) ToAgentGuardrailConfigurationPtrOutputWithContext(ctx context.Context) AgentGuardrailConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentGuardrailConfiguration) *AgentGuardrailConfiguration {
		return &v
	}).(AgentGuardrailConfigurationPtrOutput)
}

// Identifier for the guardrail, could be the id or the arn
func (o AgentGuardrailConfigurationOutput) GuardrailIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentGuardrailConfiguration) *string { return v.GuardrailIdentifier }).(pulumi.StringPtrOutput)
}

// Version of the guardrail
func (o AgentGuardrailConfigurationOutput) GuardrailVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentGuardrailConfiguration) *string { return v.GuardrailVersion }).(pulumi.StringPtrOutput)
}

type AgentGuardrailConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AgentGuardrailConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentGuardrailConfiguration)(nil)).Elem()
}

func (o AgentGuardrailConfigurationPtrOutput) ToAgentGuardrailConfigurationPtrOutput() AgentGuardrailConfigurationPtrOutput {
	return o
}

func (o AgentGuardrailConfigurationPtrOutput) ToAgentGuardrailConfigurationPtrOutputWithContext(ctx context.Context) AgentGuardrailConfigurationPtrOutput {
	return o
}

func (o AgentGuardrailConfigurationPtrOutput) Elem() AgentGuardrailConfigurationOutput {
	return o.ApplyT(func(v *AgentGuardrailConfiguration) AgentGuardrailConfiguration {
		if v != nil {
			return *v
		}
		var ret AgentGuardrailConfiguration
		return ret
	}).(AgentGuardrailConfigurationOutput)
}

// Identifier for the guardrail, could be the id or the arn
func (o AgentGuardrailConfigurationPtrOutput) GuardrailIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentGuardrailConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.GuardrailIdentifier
	}).(pulumi.StringPtrOutput)
}

// Version of the guardrail
func (o AgentGuardrailConfigurationPtrOutput) GuardrailVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentGuardrailConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.GuardrailVersion
	}).(pulumi.StringPtrOutput)
}

// Configuration for inference in prompt configuration
type AgentInferenceConfiguration struct {
	// Maximum length of output
	MaximumLength *float64 `pulumi:"maximumLength"`
	// List of stop sequences
	StopSequences []string `pulumi:"stopSequences"`
	// Controls randomness, higher values increase diversity
	Temperature *float64 `pulumi:"temperature"`
	// Sample from the k most likely next tokens
	TopK *float64 `pulumi:"topK"`
	// Cumulative probability cutoff for token selection
	TopP *float64 `pulumi:"topP"`
}

// AgentInferenceConfigurationInput is an input type that accepts AgentInferenceConfigurationArgs and AgentInferenceConfigurationOutput values.
// You can construct a concrete instance of `AgentInferenceConfigurationInput` via:
//
//	AgentInferenceConfigurationArgs{...}
type AgentInferenceConfigurationInput interface {
	pulumi.Input

	ToAgentInferenceConfigurationOutput() AgentInferenceConfigurationOutput
	ToAgentInferenceConfigurationOutputWithContext(context.Context) AgentInferenceConfigurationOutput
}

// Configuration for inference in prompt configuration
type AgentInferenceConfigurationArgs struct {
	// Maximum length of output
	MaximumLength pulumi.Float64PtrInput `pulumi:"maximumLength"`
	// List of stop sequences
	StopSequences pulumi.StringArrayInput `pulumi:"stopSequences"`
	// Controls randomness, higher values increase diversity
	Temperature pulumi.Float64PtrInput `pulumi:"temperature"`
	// Sample from the k most likely next tokens
	TopK pulumi.Float64PtrInput `pulumi:"topK"`
	// Cumulative probability cutoff for token selection
	TopP pulumi.Float64PtrInput `pulumi:"topP"`
}

func (AgentInferenceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentInferenceConfiguration)(nil)).Elem()
}

func (i AgentInferenceConfigurationArgs) ToAgentInferenceConfigurationOutput() AgentInferenceConfigurationOutput {
	return i.ToAgentInferenceConfigurationOutputWithContext(context.Background())
}

func (i AgentInferenceConfigurationArgs) ToAgentInferenceConfigurationOutputWithContext(ctx context.Context) AgentInferenceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentInferenceConfigurationOutput)
}

func (i AgentInferenceConfigurationArgs) ToAgentInferenceConfigurationPtrOutput() AgentInferenceConfigurationPtrOutput {
	return i.ToAgentInferenceConfigurationPtrOutputWithContext(context.Background())
}

func (i AgentInferenceConfigurationArgs) ToAgentInferenceConfigurationPtrOutputWithContext(ctx context.Context) AgentInferenceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentInferenceConfigurationOutput).ToAgentInferenceConfigurationPtrOutputWithContext(ctx)
}

// AgentInferenceConfigurationPtrInput is an input type that accepts AgentInferenceConfigurationArgs, AgentInferenceConfigurationPtr and AgentInferenceConfigurationPtrOutput values.
// You can construct a concrete instance of `AgentInferenceConfigurationPtrInput` via:
//
//	        AgentInferenceConfigurationArgs{...}
//
//	or:
//
//	        nil
type AgentInferenceConfigurationPtrInput interface {
	pulumi.Input

	ToAgentInferenceConfigurationPtrOutput() AgentInferenceConfigurationPtrOutput
	ToAgentInferenceConfigurationPtrOutputWithContext(context.Context) AgentInferenceConfigurationPtrOutput
}

type agentInferenceConfigurationPtrType AgentInferenceConfigurationArgs

func AgentInferenceConfigurationPtr(v *AgentInferenceConfigurationArgs) AgentInferenceConfigurationPtrInput {
	return (*agentInferenceConfigurationPtrType)(v)
}

func (*agentInferenceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentInferenceConfiguration)(nil)).Elem()
}

func (i *agentInferenceConfigurationPtrType) ToAgentInferenceConfigurationPtrOutput() AgentInferenceConfigurationPtrOutput {
	return i.ToAgentInferenceConfigurationPtrOutputWithContext(context.Background())
}

func (i *agentInferenceConfigurationPtrType) ToAgentInferenceConfigurationPtrOutputWithContext(ctx context.Context) AgentInferenceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentInferenceConfigurationPtrOutput)
}

// Configuration for inference in prompt configuration
type AgentInferenceConfigurationOutput struct{ *pulumi.OutputState }

func (AgentInferenceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentInferenceConfiguration)(nil)).Elem()
}

func (o AgentInferenceConfigurationOutput) ToAgentInferenceConfigurationOutput() AgentInferenceConfigurationOutput {
	return o
}

func (o AgentInferenceConfigurationOutput) ToAgentInferenceConfigurationOutputWithContext(ctx context.Context) AgentInferenceConfigurationOutput {
	return o
}

func (o AgentInferenceConfigurationOutput) ToAgentInferenceConfigurationPtrOutput() AgentInferenceConfigurationPtrOutput {
	return o.ToAgentInferenceConfigurationPtrOutputWithContext(context.Background())
}

func (o AgentInferenceConfigurationOutput) ToAgentInferenceConfigurationPtrOutputWithContext(ctx context.Context) AgentInferenceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentInferenceConfiguration) *AgentInferenceConfiguration {
		return &v
	}).(AgentInferenceConfigurationPtrOutput)
}

// Maximum length of output
func (o AgentInferenceConfigurationOutput) MaximumLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AgentInferenceConfiguration) *float64 { return v.MaximumLength }).(pulumi.Float64PtrOutput)
}

// List of stop sequences
func (o AgentInferenceConfigurationOutput) StopSequences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentInferenceConfiguration) []string { return v.StopSequences }).(pulumi.StringArrayOutput)
}

// Controls randomness, higher values increase diversity
func (o AgentInferenceConfigurationOutput) Temperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AgentInferenceConfiguration) *float64 { return v.Temperature }).(pulumi.Float64PtrOutput)
}

// Sample from the k most likely next tokens
func (o AgentInferenceConfigurationOutput) TopK() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AgentInferenceConfiguration) *float64 { return v.TopK }).(pulumi.Float64PtrOutput)
}

// Cumulative probability cutoff for token selection
func (o AgentInferenceConfigurationOutput) TopP() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AgentInferenceConfiguration) *float64 { return v.TopP }).(pulumi.Float64PtrOutput)
}

type AgentInferenceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AgentInferenceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentInferenceConfiguration)(nil)).Elem()
}

func (o AgentInferenceConfigurationPtrOutput) ToAgentInferenceConfigurationPtrOutput() AgentInferenceConfigurationPtrOutput {
	return o
}

func (o AgentInferenceConfigurationPtrOutput) ToAgentInferenceConfigurationPtrOutputWithContext(ctx context.Context) AgentInferenceConfigurationPtrOutput {
	return o
}

func (o AgentInferenceConfigurationPtrOutput) Elem() AgentInferenceConfigurationOutput {
	return o.ApplyT(func(v *AgentInferenceConfiguration) AgentInferenceConfiguration {
		if v != nil {
			return *v
		}
		var ret AgentInferenceConfiguration
		return ret
	}).(AgentInferenceConfigurationOutput)
}

// Maximum length of output
func (o AgentInferenceConfigurationPtrOutput) MaximumLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AgentInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.MaximumLength
	}).(pulumi.Float64PtrOutput)
}

// List of stop sequences
func (o AgentInferenceConfigurationPtrOutput) StopSequences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentInferenceConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.StopSequences
	}).(pulumi.StringArrayOutput)
}

// Controls randomness, higher values increase diversity
func (o AgentInferenceConfigurationPtrOutput) Temperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AgentInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.Temperature
	}).(pulumi.Float64PtrOutput)
}

// Sample from the k most likely next tokens
func (o AgentInferenceConfigurationPtrOutput) TopK() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AgentInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TopK
	}).(pulumi.Float64PtrOutput)
}

// Cumulative probability cutoff for token selection
func (o AgentInferenceConfigurationPtrOutput) TopP() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AgentInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TopP
	}).(pulumi.Float64PtrOutput)
}

// Agent Knowledge Base
type AgentKnowledgeBase struct {
	// Description of the Resource.
	Description string `pulumi:"description"`
	// Identifier for a resource.
	KnowledgeBaseId string `pulumi:"knowledgeBaseId"`
	// Specifies whether to use the knowledge base or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request.
	KnowledgeBaseState *AgentKnowledgeBaseState `pulumi:"knowledgeBaseState"`
}

// AgentKnowledgeBaseInput is an input type that accepts AgentKnowledgeBaseArgs and AgentKnowledgeBaseOutput values.
// You can construct a concrete instance of `AgentKnowledgeBaseInput` via:
//
//	AgentKnowledgeBaseArgs{...}
type AgentKnowledgeBaseInput interface {
	pulumi.Input

	ToAgentKnowledgeBaseOutput() AgentKnowledgeBaseOutput
	ToAgentKnowledgeBaseOutputWithContext(context.Context) AgentKnowledgeBaseOutput
}

// Agent Knowledge Base
type AgentKnowledgeBaseArgs struct {
	// Description of the Resource.
	Description pulumi.StringInput `pulumi:"description"`
	// Identifier for a resource.
	KnowledgeBaseId pulumi.StringInput `pulumi:"knowledgeBaseId"`
	// Specifies whether to use the knowledge base or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request.
	KnowledgeBaseState AgentKnowledgeBaseStatePtrInput `pulumi:"knowledgeBaseState"`
}

func (AgentKnowledgeBaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentKnowledgeBase)(nil)).Elem()
}

func (i AgentKnowledgeBaseArgs) ToAgentKnowledgeBaseOutput() AgentKnowledgeBaseOutput {
	return i.ToAgentKnowledgeBaseOutputWithContext(context.Background())
}

func (i AgentKnowledgeBaseArgs) ToAgentKnowledgeBaseOutputWithContext(ctx context.Context) AgentKnowledgeBaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentKnowledgeBaseOutput)
}

// AgentKnowledgeBaseArrayInput is an input type that accepts AgentKnowledgeBaseArray and AgentKnowledgeBaseArrayOutput values.
// You can construct a concrete instance of `AgentKnowledgeBaseArrayInput` via:
//
//	AgentKnowledgeBaseArray{ AgentKnowledgeBaseArgs{...} }
type AgentKnowledgeBaseArrayInput interface {
	pulumi.Input

	ToAgentKnowledgeBaseArrayOutput() AgentKnowledgeBaseArrayOutput
	ToAgentKnowledgeBaseArrayOutputWithContext(context.Context) AgentKnowledgeBaseArrayOutput
}

type AgentKnowledgeBaseArray []AgentKnowledgeBaseInput

func (AgentKnowledgeBaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentKnowledgeBase)(nil)).Elem()
}

func (i AgentKnowledgeBaseArray) ToAgentKnowledgeBaseArrayOutput() AgentKnowledgeBaseArrayOutput {
	return i.ToAgentKnowledgeBaseArrayOutputWithContext(context.Background())
}

func (i AgentKnowledgeBaseArray) ToAgentKnowledgeBaseArrayOutputWithContext(ctx context.Context) AgentKnowledgeBaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentKnowledgeBaseArrayOutput)
}

// Agent Knowledge Base
type AgentKnowledgeBaseOutput struct{ *pulumi.OutputState }

func (AgentKnowledgeBaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentKnowledgeBase)(nil)).Elem()
}

func (o AgentKnowledgeBaseOutput) ToAgentKnowledgeBaseOutput() AgentKnowledgeBaseOutput {
	return o
}

func (o AgentKnowledgeBaseOutput) ToAgentKnowledgeBaseOutputWithContext(ctx context.Context) AgentKnowledgeBaseOutput {
	return o
}

// Description of the Resource.
func (o AgentKnowledgeBaseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AgentKnowledgeBase) string { return v.Description }).(pulumi.StringOutput)
}

// Identifier for a resource.
func (o AgentKnowledgeBaseOutput) KnowledgeBaseId() pulumi.StringOutput {
	return o.ApplyT(func(v AgentKnowledgeBase) string { return v.KnowledgeBaseId }).(pulumi.StringOutput)
}

// Specifies whether to use the knowledge base or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request.
func (o AgentKnowledgeBaseOutput) KnowledgeBaseState() AgentKnowledgeBaseStatePtrOutput {
	return o.ApplyT(func(v AgentKnowledgeBase) *AgentKnowledgeBaseState { return v.KnowledgeBaseState }).(AgentKnowledgeBaseStatePtrOutput)
}

type AgentKnowledgeBaseArrayOutput struct{ *pulumi.OutputState }

func (AgentKnowledgeBaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentKnowledgeBase)(nil)).Elem()
}

func (o AgentKnowledgeBaseArrayOutput) ToAgentKnowledgeBaseArrayOutput() AgentKnowledgeBaseArrayOutput {
	return o
}

func (o AgentKnowledgeBaseArrayOutput) ToAgentKnowledgeBaseArrayOutputWithContext(ctx context.Context) AgentKnowledgeBaseArrayOutput {
	return o
}

func (o AgentKnowledgeBaseArrayOutput) Index(i pulumi.IntInput) AgentKnowledgeBaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentKnowledgeBase {
		return vs[0].([]AgentKnowledgeBase)[vs[1].(int)]
	}).(AgentKnowledgeBaseOutput)
}

// Parameter detail
type AgentParameterDetail struct {
	// Description of function parameter.
	Description *string `pulumi:"description"`
	// Information about if a parameter is required for function call. Default to false.
	Required *bool `pulumi:"required"`
	// The data type of the parameter.
	Type AgentType `pulumi:"type"`
}

// AgentParameterDetailInput is an input type that accepts AgentParameterDetailArgs and AgentParameterDetailOutput values.
// You can construct a concrete instance of `AgentParameterDetailInput` via:
//
//	AgentParameterDetailArgs{...}
type AgentParameterDetailInput interface {
	pulumi.Input

	ToAgentParameterDetailOutput() AgentParameterDetailOutput
	ToAgentParameterDetailOutputWithContext(context.Context) AgentParameterDetailOutput
}

// Parameter detail
type AgentParameterDetailArgs struct {
	// Description of function parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Information about if a parameter is required for function call. Default to false.
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// The data type of the parameter.
	Type AgentTypeInput `pulumi:"type"`
}

func (AgentParameterDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentParameterDetail)(nil)).Elem()
}

func (i AgentParameterDetailArgs) ToAgentParameterDetailOutput() AgentParameterDetailOutput {
	return i.ToAgentParameterDetailOutputWithContext(context.Background())
}

func (i AgentParameterDetailArgs) ToAgentParameterDetailOutputWithContext(ctx context.Context) AgentParameterDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentParameterDetailOutput)
}

// AgentParameterDetailMapInput is an input type that accepts AgentParameterDetailMap and AgentParameterDetailMapOutput values.
// You can construct a concrete instance of `AgentParameterDetailMapInput` via:
//
//	AgentParameterDetailMap{ "key": AgentParameterDetailArgs{...} }
type AgentParameterDetailMapInput interface {
	pulumi.Input

	ToAgentParameterDetailMapOutput() AgentParameterDetailMapOutput
	ToAgentParameterDetailMapOutputWithContext(context.Context) AgentParameterDetailMapOutput
}

type AgentParameterDetailMap map[string]AgentParameterDetailInput

func (AgentParameterDetailMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AgentParameterDetail)(nil)).Elem()
}

func (i AgentParameterDetailMap) ToAgentParameterDetailMapOutput() AgentParameterDetailMapOutput {
	return i.ToAgentParameterDetailMapOutputWithContext(context.Background())
}

func (i AgentParameterDetailMap) ToAgentParameterDetailMapOutputWithContext(ctx context.Context) AgentParameterDetailMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentParameterDetailMapOutput)
}

// Parameter detail
type AgentParameterDetailOutput struct{ *pulumi.OutputState }

func (AgentParameterDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentParameterDetail)(nil)).Elem()
}

func (o AgentParameterDetailOutput) ToAgentParameterDetailOutput() AgentParameterDetailOutput {
	return o
}

func (o AgentParameterDetailOutput) ToAgentParameterDetailOutputWithContext(ctx context.Context) AgentParameterDetailOutput {
	return o
}

// Description of function parameter.
func (o AgentParameterDetailOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentParameterDetail) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Information about if a parameter is required for function call. Default to false.
func (o AgentParameterDetailOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentParameterDetail) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// The data type of the parameter.
func (o AgentParameterDetailOutput) Type() AgentTypeOutput {
	return o.ApplyT(func(v AgentParameterDetail) AgentType { return v.Type }).(AgentTypeOutput)
}

type AgentParameterDetailMapOutput struct{ *pulumi.OutputState }

func (AgentParameterDetailMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AgentParameterDetail)(nil)).Elem()
}

func (o AgentParameterDetailMapOutput) ToAgentParameterDetailMapOutput() AgentParameterDetailMapOutput {
	return o
}

func (o AgentParameterDetailMapOutput) ToAgentParameterDetailMapOutputWithContext(ctx context.Context) AgentParameterDetailMapOutput {
	return o
}

func (o AgentParameterDetailMapOutput) MapIndex(k pulumi.StringInput) AgentParameterDetailOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AgentParameterDetail {
		return vs[0].(map[string]AgentParameterDetail)[vs[1].(string)]
	}).(AgentParameterDetailOutput)
}

// BasePromptConfiguration per Prompt Type.
type AgentPromptConfiguration struct {
	// Base Prompt Template.
	BasePromptTemplate *string `pulumi:"basePromptTemplate"`
	// Contains inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the `promptType` . For more information, see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html) .
	InferenceConfiguration *AgentInferenceConfiguration `pulumi:"inferenceConfiguration"`
	// Specifies whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the `promptType` . If you set the field as `OVERRIDEN` , the `overrideLambda` field in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html) must be specified with the ARN of a Lambda function.
	ParserMode *AgentCreationMode `pulumi:"parserMode"`
	// Specifies whether to override the default prompt template for this `promptType` . Set this value to `OVERRIDDEN` to use the prompt that you provide in the `basePromptTemplate` . If you leave it as `DEFAULT` , the agent uses a default prompt template.
	PromptCreationMode *AgentCreationMode `pulumi:"promptCreationMode"`
	// Specifies whether to allow the agent to carry out the step specified in the `promptType` . If you set this value to `DISABLED` , the agent skips that step. The default state for each `promptType` is as follows.
	//
	// - `PRE_PROCESSING` – `ENABLED`
	// - `ORCHESTRATION` – `ENABLED`
	// - `KNOWLEDGE_BASE_RESPONSE_GENERATION` – `ENABLED`
	// - `POST_PROCESSING` – `DISABLED`
	PromptState *AgentPromptState `pulumi:"promptState"`
	// The step in the agent sequence that this prompt configuration applies to.
	PromptType *AgentPromptType `pulumi:"promptType"`
}

// AgentPromptConfigurationInput is an input type that accepts AgentPromptConfigurationArgs and AgentPromptConfigurationOutput values.
// You can construct a concrete instance of `AgentPromptConfigurationInput` via:
//
//	AgentPromptConfigurationArgs{...}
type AgentPromptConfigurationInput interface {
	pulumi.Input

	ToAgentPromptConfigurationOutput() AgentPromptConfigurationOutput
	ToAgentPromptConfigurationOutputWithContext(context.Context) AgentPromptConfigurationOutput
}

// BasePromptConfiguration per Prompt Type.
type AgentPromptConfigurationArgs struct {
	// Base Prompt Template.
	BasePromptTemplate pulumi.StringPtrInput `pulumi:"basePromptTemplate"`
	// Contains inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the `promptType` . For more information, see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html) .
	InferenceConfiguration AgentInferenceConfigurationPtrInput `pulumi:"inferenceConfiguration"`
	// Specifies whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the `promptType` . If you set the field as `OVERRIDEN` , the `overrideLambda` field in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html) must be specified with the ARN of a Lambda function.
	ParserMode AgentCreationModePtrInput `pulumi:"parserMode"`
	// Specifies whether to override the default prompt template for this `promptType` . Set this value to `OVERRIDDEN` to use the prompt that you provide in the `basePromptTemplate` . If you leave it as `DEFAULT` , the agent uses a default prompt template.
	PromptCreationMode AgentCreationModePtrInput `pulumi:"promptCreationMode"`
	// Specifies whether to allow the agent to carry out the step specified in the `promptType` . If you set this value to `DISABLED` , the agent skips that step. The default state for each `promptType` is as follows.
	//
	// - `PRE_PROCESSING` – `ENABLED`
	// - `ORCHESTRATION` – `ENABLED`
	// - `KNOWLEDGE_BASE_RESPONSE_GENERATION` – `ENABLED`
	// - `POST_PROCESSING` – `DISABLED`
	PromptState AgentPromptStatePtrInput `pulumi:"promptState"`
	// The step in the agent sequence that this prompt configuration applies to.
	PromptType AgentPromptTypePtrInput `pulumi:"promptType"`
}

func (AgentPromptConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPromptConfiguration)(nil)).Elem()
}

func (i AgentPromptConfigurationArgs) ToAgentPromptConfigurationOutput() AgentPromptConfigurationOutput {
	return i.ToAgentPromptConfigurationOutputWithContext(context.Background())
}

func (i AgentPromptConfigurationArgs) ToAgentPromptConfigurationOutputWithContext(ctx context.Context) AgentPromptConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptConfigurationOutput)
}

// AgentPromptConfigurationArrayInput is an input type that accepts AgentPromptConfigurationArray and AgentPromptConfigurationArrayOutput values.
// You can construct a concrete instance of `AgentPromptConfigurationArrayInput` via:
//
//	AgentPromptConfigurationArray{ AgentPromptConfigurationArgs{...} }
type AgentPromptConfigurationArrayInput interface {
	pulumi.Input

	ToAgentPromptConfigurationArrayOutput() AgentPromptConfigurationArrayOutput
	ToAgentPromptConfigurationArrayOutputWithContext(context.Context) AgentPromptConfigurationArrayOutput
}

type AgentPromptConfigurationArray []AgentPromptConfigurationInput

func (AgentPromptConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentPromptConfiguration)(nil)).Elem()
}

func (i AgentPromptConfigurationArray) ToAgentPromptConfigurationArrayOutput() AgentPromptConfigurationArrayOutput {
	return i.ToAgentPromptConfigurationArrayOutputWithContext(context.Background())
}

func (i AgentPromptConfigurationArray) ToAgentPromptConfigurationArrayOutputWithContext(ctx context.Context) AgentPromptConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptConfigurationArrayOutput)
}

// BasePromptConfiguration per Prompt Type.
type AgentPromptConfigurationOutput struct{ *pulumi.OutputState }

func (AgentPromptConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPromptConfiguration)(nil)).Elem()
}

func (o AgentPromptConfigurationOutput) ToAgentPromptConfigurationOutput() AgentPromptConfigurationOutput {
	return o
}

func (o AgentPromptConfigurationOutput) ToAgentPromptConfigurationOutputWithContext(ctx context.Context) AgentPromptConfigurationOutput {
	return o
}

// Base Prompt Template.
func (o AgentPromptConfigurationOutput) BasePromptTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPromptConfiguration) *string { return v.BasePromptTemplate }).(pulumi.StringPtrOutput)
}

// Contains inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the `promptType` . For more information, see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html) .
func (o AgentPromptConfigurationOutput) InferenceConfiguration() AgentInferenceConfigurationPtrOutput {
	return o.ApplyT(func(v AgentPromptConfiguration) *AgentInferenceConfiguration { return v.InferenceConfiguration }).(AgentInferenceConfigurationPtrOutput)
}

// Specifies whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the `promptType` . If you set the field as `OVERRIDEN` , the `overrideLambda` field in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html) must be specified with the ARN of a Lambda function.
func (o AgentPromptConfigurationOutput) ParserMode() AgentCreationModePtrOutput {
	return o.ApplyT(func(v AgentPromptConfiguration) *AgentCreationMode { return v.ParserMode }).(AgentCreationModePtrOutput)
}

// Specifies whether to override the default prompt template for this `promptType` . Set this value to `OVERRIDDEN` to use the prompt that you provide in the `basePromptTemplate` . If you leave it as `DEFAULT` , the agent uses a default prompt template.
func (o AgentPromptConfigurationOutput) PromptCreationMode() AgentCreationModePtrOutput {
	return o.ApplyT(func(v AgentPromptConfiguration) *AgentCreationMode { return v.PromptCreationMode }).(AgentCreationModePtrOutput)
}

// Specifies whether to allow the agent to carry out the step specified in the `promptType` . If you set this value to `DISABLED` , the agent skips that step. The default state for each `promptType` is as follows.
//
// - `PRE_PROCESSING` – `ENABLED`
// - `ORCHESTRATION` – `ENABLED`
// - `KNOWLEDGE_BASE_RESPONSE_GENERATION` – `ENABLED`
// - `POST_PROCESSING` – `DISABLED`
func (o AgentPromptConfigurationOutput) PromptState() AgentPromptStatePtrOutput {
	return o.ApplyT(func(v AgentPromptConfiguration) *AgentPromptState { return v.PromptState }).(AgentPromptStatePtrOutput)
}

// The step in the agent sequence that this prompt configuration applies to.
func (o AgentPromptConfigurationOutput) PromptType() AgentPromptTypePtrOutput {
	return o.ApplyT(func(v AgentPromptConfiguration) *AgentPromptType { return v.PromptType }).(AgentPromptTypePtrOutput)
}

type AgentPromptConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AgentPromptConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentPromptConfiguration)(nil)).Elem()
}

func (o AgentPromptConfigurationArrayOutput) ToAgentPromptConfigurationArrayOutput() AgentPromptConfigurationArrayOutput {
	return o
}

func (o AgentPromptConfigurationArrayOutput) ToAgentPromptConfigurationArrayOutputWithContext(ctx context.Context) AgentPromptConfigurationArrayOutput {
	return o
}

func (o AgentPromptConfigurationArrayOutput) Index(i pulumi.IntInput) AgentPromptConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentPromptConfiguration {
		return vs[0].([]AgentPromptConfiguration)[vs[1].(int)]
	}).(AgentPromptConfigurationOutput)
}

// Configuration for prompt override.
type AgentPromptOverrideConfiguration struct {
	// ARN of a Lambda.
	OverrideLambda *string `pulumi:"overrideLambda"`
	// List of BasePromptConfiguration
	PromptConfigurations []AgentPromptConfiguration `pulumi:"promptConfigurations"`
}

// AgentPromptOverrideConfigurationInput is an input type that accepts AgentPromptOverrideConfigurationArgs and AgentPromptOverrideConfigurationOutput values.
// You can construct a concrete instance of `AgentPromptOverrideConfigurationInput` via:
//
//	AgentPromptOverrideConfigurationArgs{...}
type AgentPromptOverrideConfigurationInput interface {
	pulumi.Input

	ToAgentPromptOverrideConfigurationOutput() AgentPromptOverrideConfigurationOutput
	ToAgentPromptOverrideConfigurationOutputWithContext(context.Context) AgentPromptOverrideConfigurationOutput
}

// Configuration for prompt override.
type AgentPromptOverrideConfigurationArgs struct {
	// ARN of a Lambda.
	OverrideLambda pulumi.StringPtrInput `pulumi:"overrideLambda"`
	// List of BasePromptConfiguration
	PromptConfigurations AgentPromptConfigurationArrayInput `pulumi:"promptConfigurations"`
}

func (AgentPromptOverrideConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPromptOverrideConfiguration)(nil)).Elem()
}

func (i AgentPromptOverrideConfigurationArgs) ToAgentPromptOverrideConfigurationOutput() AgentPromptOverrideConfigurationOutput {
	return i.ToAgentPromptOverrideConfigurationOutputWithContext(context.Background())
}

func (i AgentPromptOverrideConfigurationArgs) ToAgentPromptOverrideConfigurationOutputWithContext(ctx context.Context) AgentPromptOverrideConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptOverrideConfigurationOutput)
}

func (i AgentPromptOverrideConfigurationArgs) ToAgentPromptOverrideConfigurationPtrOutput() AgentPromptOverrideConfigurationPtrOutput {
	return i.ToAgentPromptOverrideConfigurationPtrOutputWithContext(context.Background())
}

func (i AgentPromptOverrideConfigurationArgs) ToAgentPromptOverrideConfigurationPtrOutputWithContext(ctx context.Context) AgentPromptOverrideConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptOverrideConfigurationOutput).ToAgentPromptOverrideConfigurationPtrOutputWithContext(ctx)
}

// AgentPromptOverrideConfigurationPtrInput is an input type that accepts AgentPromptOverrideConfigurationArgs, AgentPromptOverrideConfigurationPtr and AgentPromptOverrideConfigurationPtrOutput values.
// You can construct a concrete instance of `AgentPromptOverrideConfigurationPtrInput` via:
//
//	        AgentPromptOverrideConfigurationArgs{...}
//
//	or:
//
//	        nil
type AgentPromptOverrideConfigurationPtrInput interface {
	pulumi.Input

	ToAgentPromptOverrideConfigurationPtrOutput() AgentPromptOverrideConfigurationPtrOutput
	ToAgentPromptOverrideConfigurationPtrOutputWithContext(context.Context) AgentPromptOverrideConfigurationPtrOutput
}

type agentPromptOverrideConfigurationPtrType AgentPromptOverrideConfigurationArgs

func AgentPromptOverrideConfigurationPtr(v *AgentPromptOverrideConfigurationArgs) AgentPromptOverrideConfigurationPtrInput {
	return (*agentPromptOverrideConfigurationPtrType)(v)
}

func (*agentPromptOverrideConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPromptOverrideConfiguration)(nil)).Elem()
}

func (i *agentPromptOverrideConfigurationPtrType) ToAgentPromptOverrideConfigurationPtrOutput() AgentPromptOverrideConfigurationPtrOutput {
	return i.ToAgentPromptOverrideConfigurationPtrOutputWithContext(context.Background())
}

func (i *agentPromptOverrideConfigurationPtrType) ToAgentPromptOverrideConfigurationPtrOutputWithContext(ctx context.Context) AgentPromptOverrideConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptOverrideConfigurationPtrOutput)
}

// Configuration for prompt override.
type AgentPromptOverrideConfigurationOutput struct{ *pulumi.OutputState }

func (AgentPromptOverrideConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPromptOverrideConfiguration)(nil)).Elem()
}

func (o AgentPromptOverrideConfigurationOutput) ToAgentPromptOverrideConfigurationOutput() AgentPromptOverrideConfigurationOutput {
	return o
}

func (o AgentPromptOverrideConfigurationOutput) ToAgentPromptOverrideConfigurationOutputWithContext(ctx context.Context) AgentPromptOverrideConfigurationOutput {
	return o
}

func (o AgentPromptOverrideConfigurationOutput) ToAgentPromptOverrideConfigurationPtrOutput() AgentPromptOverrideConfigurationPtrOutput {
	return o.ToAgentPromptOverrideConfigurationPtrOutputWithContext(context.Background())
}

func (o AgentPromptOverrideConfigurationOutput) ToAgentPromptOverrideConfigurationPtrOutputWithContext(ctx context.Context) AgentPromptOverrideConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentPromptOverrideConfiguration) *AgentPromptOverrideConfiguration {
		return &v
	}).(AgentPromptOverrideConfigurationPtrOutput)
}

// ARN of a Lambda.
func (o AgentPromptOverrideConfigurationOutput) OverrideLambda() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPromptOverrideConfiguration) *string { return v.OverrideLambda }).(pulumi.StringPtrOutput)
}

// List of BasePromptConfiguration
func (o AgentPromptOverrideConfigurationOutput) PromptConfigurations() AgentPromptConfigurationArrayOutput {
	return o.ApplyT(func(v AgentPromptOverrideConfiguration) []AgentPromptConfiguration { return v.PromptConfigurations }).(AgentPromptConfigurationArrayOutput)
}

type AgentPromptOverrideConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AgentPromptOverrideConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPromptOverrideConfiguration)(nil)).Elem()
}

func (o AgentPromptOverrideConfigurationPtrOutput) ToAgentPromptOverrideConfigurationPtrOutput() AgentPromptOverrideConfigurationPtrOutput {
	return o
}

func (o AgentPromptOverrideConfigurationPtrOutput) ToAgentPromptOverrideConfigurationPtrOutputWithContext(ctx context.Context) AgentPromptOverrideConfigurationPtrOutput {
	return o
}

func (o AgentPromptOverrideConfigurationPtrOutput) Elem() AgentPromptOverrideConfigurationOutput {
	return o.ApplyT(func(v *AgentPromptOverrideConfiguration) AgentPromptOverrideConfiguration {
		if v != nil {
			return *v
		}
		var ret AgentPromptOverrideConfiguration
		return ret
	}).(AgentPromptOverrideConfigurationOutput)
}

// ARN of a Lambda.
func (o AgentPromptOverrideConfigurationPtrOutput) OverrideLambda() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPromptOverrideConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.OverrideLambda
	}).(pulumi.StringPtrOutput)
}

// List of BasePromptConfiguration
func (o AgentPromptOverrideConfigurationPtrOutput) PromptConfigurations() AgentPromptConfigurationArrayOutput {
	return o.ApplyT(func(v *AgentPromptOverrideConfiguration) []AgentPromptConfiguration {
		if v == nil {
			return nil
		}
		return v.PromptConfigurations
	}).(AgentPromptConfigurationArrayOutput)
}

// The identifier for the S3 resource.
type AgentS3Identifier struct {
	// A bucket in S3.
	S3BucketName *string `pulumi:"s3BucketName"`
	// A object key in S3.
	S3ObjectKey *string `pulumi:"s3ObjectKey"`
}

// AgentS3IdentifierInput is an input type that accepts AgentS3IdentifierArgs and AgentS3IdentifierOutput values.
// You can construct a concrete instance of `AgentS3IdentifierInput` via:
//
//	AgentS3IdentifierArgs{...}
type AgentS3IdentifierInput interface {
	pulumi.Input

	ToAgentS3IdentifierOutput() AgentS3IdentifierOutput
	ToAgentS3IdentifierOutputWithContext(context.Context) AgentS3IdentifierOutput
}

// The identifier for the S3 resource.
type AgentS3IdentifierArgs struct {
	// A bucket in S3.
	S3BucketName pulumi.StringPtrInput `pulumi:"s3BucketName"`
	// A object key in S3.
	S3ObjectKey pulumi.StringPtrInput `pulumi:"s3ObjectKey"`
}

func (AgentS3IdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentS3Identifier)(nil)).Elem()
}

func (i AgentS3IdentifierArgs) ToAgentS3IdentifierOutput() AgentS3IdentifierOutput {
	return i.ToAgentS3IdentifierOutputWithContext(context.Background())
}

func (i AgentS3IdentifierArgs) ToAgentS3IdentifierOutputWithContext(ctx context.Context) AgentS3IdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentS3IdentifierOutput)
}

func (i AgentS3IdentifierArgs) ToAgentS3IdentifierPtrOutput() AgentS3IdentifierPtrOutput {
	return i.ToAgentS3IdentifierPtrOutputWithContext(context.Background())
}

func (i AgentS3IdentifierArgs) ToAgentS3IdentifierPtrOutputWithContext(ctx context.Context) AgentS3IdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentS3IdentifierOutput).ToAgentS3IdentifierPtrOutputWithContext(ctx)
}

// AgentS3IdentifierPtrInput is an input type that accepts AgentS3IdentifierArgs, AgentS3IdentifierPtr and AgentS3IdentifierPtrOutput values.
// You can construct a concrete instance of `AgentS3IdentifierPtrInput` via:
//
//	        AgentS3IdentifierArgs{...}
//
//	or:
//
//	        nil
type AgentS3IdentifierPtrInput interface {
	pulumi.Input

	ToAgentS3IdentifierPtrOutput() AgentS3IdentifierPtrOutput
	ToAgentS3IdentifierPtrOutputWithContext(context.Context) AgentS3IdentifierPtrOutput
}

type agentS3IdentifierPtrType AgentS3IdentifierArgs

func AgentS3IdentifierPtr(v *AgentS3IdentifierArgs) AgentS3IdentifierPtrInput {
	return (*agentS3IdentifierPtrType)(v)
}

func (*agentS3IdentifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentS3Identifier)(nil)).Elem()
}

func (i *agentS3IdentifierPtrType) ToAgentS3IdentifierPtrOutput() AgentS3IdentifierPtrOutput {
	return i.ToAgentS3IdentifierPtrOutputWithContext(context.Background())
}

func (i *agentS3IdentifierPtrType) ToAgentS3IdentifierPtrOutputWithContext(ctx context.Context) AgentS3IdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentS3IdentifierPtrOutput)
}

// The identifier for the S3 resource.
type AgentS3IdentifierOutput struct{ *pulumi.OutputState }

func (AgentS3IdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentS3Identifier)(nil)).Elem()
}

func (o AgentS3IdentifierOutput) ToAgentS3IdentifierOutput() AgentS3IdentifierOutput {
	return o
}

func (o AgentS3IdentifierOutput) ToAgentS3IdentifierOutputWithContext(ctx context.Context) AgentS3IdentifierOutput {
	return o
}

func (o AgentS3IdentifierOutput) ToAgentS3IdentifierPtrOutput() AgentS3IdentifierPtrOutput {
	return o.ToAgentS3IdentifierPtrOutputWithContext(context.Background())
}

func (o AgentS3IdentifierOutput) ToAgentS3IdentifierPtrOutputWithContext(ctx context.Context) AgentS3IdentifierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentS3Identifier) *AgentS3Identifier {
		return &v
	}).(AgentS3IdentifierPtrOutput)
}

// A bucket in S3.
func (o AgentS3IdentifierOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentS3Identifier) *string { return v.S3BucketName }).(pulumi.StringPtrOutput)
}

// A object key in S3.
func (o AgentS3IdentifierOutput) S3ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentS3Identifier) *string { return v.S3ObjectKey }).(pulumi.StringPtrOutput)
}

type AgentS3IdentifierPtrOutput struct{ *pulumi.OutputState }

func (AgentS3IdentifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentS3Identifier)(nil)).Elem()
}

func (o AgentS3IdentifierPtrOutput) ToAgentS3IdentifierPtrOutput() AgentS3IdentifierPtrOutput {
	return o
}

func (o AgentS3IdentifierPtrOutput) ToAgentS3IdentifierPtrOutputWithContext(ctx context.Context) AgentS3IdentifierPtrOutput {
	return o
}

func (o AgentS3IdentifierPtrOutput) Elem() AgentS3IdentifierOutput {
	return o.ApplyT(func(v *AgentS3Identifier) AgentS3Identifier {
		if v != nil {
			return *v
		}
		var ret AgentS3Identifier
		return ret
	}).(AgentS3IdentifierOutput)
}

// A bucket in S3.
func (o AgentS3IdentifierPtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentS3Identifier) *string {
		if v == nil {
			return nil
		}
		return v.S3BucketName
	}).(pulumi.StringPtrOutput)
}

// A object key in S3.
func (o AgentS3IdentifierPtrOutput) S3ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentS3Identifier) *string {
		if v == nil {
			return nil
		}
		return v.S3ObjectKey
	}).(pulumi.StringPtrOutput)
}

// Settings for a foundation model used to parse documents for a data source.
type DataSourceBedrockFoundationModelConfiguration struct {
	// The model's ARN.
	ModelArn string `pulumi:"modelArn"`
	// Instructions for interpreting the contents of a document.
	ParsingPrompt *DataSourceParsingPrompt `pulumi:"parsingPrompt"`
}

// DataSourceBedrockFoundationModelConfigurationInput is an input type that accepts DataSourceBedrockFoundationModelConfigurationArgs and DataSourceBedrockFoundationModelConfigurationOutput values.
// You can construct a concrete instance of `DataSourceBedrockFoundationModelConfigurationInput` via:
//
//	DataSourceBedrockFoundationModelConfigurationArgs{...}
type DataSourceBedrockFoundationModelConfigurationInput interface {
	pulumi.Input

	ToDataSourceBedrockFoundationModelConfigurationOutput() DataSourceBedrockFoundationModelConfigurationOutput
	ToDataSourceBedrockFoundationModelConfigurationOutputWithContext(context.Context) DataSourceBedrockFoundationModelConfigurationOutput
}

// Settings for a foundation model used to parse documents for a data source.
type DataSourceBedrockFoundationModelConfigurationArgs struct {
	// The model's ARN.
	ModelArn pulumi.StringInput `pulumi:"modelArn"`
	// Instructions for interpreting the contents of a document.
	ParsingPrompt DataSourceParsingPromptPtrInput `pulumi:"parsingPrompt"`
}

func (DataSourceBedrockFoundationModelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceBedrockFoundationModelConfiguration)(nil)).Elem()
}

func (i DataSourceBedrockFoundationModelConfigurationArgs) ToDataSourceBedrockFoundationModelConfigurationOutput() DataSourceBedrockFoundationModelConfigurationOutput {
	return i.ToDataSourceBedrockFoundationModelConfigurationOutputWithContext(context.Background())
}

func (i DataSourceBedrockFoundationModelConfigurationArgs) ToDataSourceBedrockFoundationModelConfigurationOutputWithContext(ctx context.Context) DataSourceBedrockFoundationModelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceBedrockFoundationModelConfigurationOutput)
}

func (i DataSourceBedrockFoundationModelConfigurationArgs) ToDataSourceBedrockFoundationModelConfigurationPtrOutput() DataSourceBedrockFoundationModelConfigurationPtrOutput {
	return i.ToDataSourceBedrockFoundationModelConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceBedrockFoundationModelConfigurationArgs) ToDataSourceBedrockFoundationModelConfigurationPtrOutputWithContext(ctx context.Context) DataSourceBedrockFoundationModelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceBedrockFoundationModelConfigurationOutput).ToDataSourceBedrockFoundationModelConfigurationPtrOutputWithContext(ctx)
}

// DataSourceBedrockFoundationModelConfigurationPtrInput is an input type that accepts DataSourceBedrockFoundationModelConfigurationArgs, DataSourceBedrockFoundationModelConfigurationPtr and DataSourceBedrockFoundationModelConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceBedrockFoundationModelConfigurationPtrInput` via:
//
//	        DataSourceBedrockFoundationModelConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceBedrockFoundationModelConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceBedrockFoundationModelConfigurationPtrOutput() DataSourceBedrockFoundationModelConfigurationPtrOutput
	ToDataSourceBedrockFoundationModelConfigurationPtrOutputWithContext(context.Context) DataSourceBedrockFoundationModelConfigurationPtrOutput
}

type dataSourceBedrockFoundationModelConfigurationPtrType DataSourceBedrockFoundationModelConfigurationArgs

func DataSourceBedrockFoundationModelConfigurationPtr(v *DataSourceBedrockFoundationModelConfigurationArgs) DataSourceBedrockFoundationModelConfigurationPtrInput {
	return (*dataSourceBedrockFoundationModelConfigurationPtrType)(v)
}

func (*dataSourceBedrockFoundationModelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceBedrockFoundationModelConfiguration)(nil)).Elem()
}

func (i *dataSourceBedrockFoundationModelConfigurationPtrType) ToDataSourceBedrockFoundationModelConfigurationPtrOutput() DataSourceBedrockFoundationModelConfigurationPtrOutput {
	return i.ToDataSourceBedrockFoundationModelConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceBedrockFoundationModelConfigurationPtrType) ToDataSourceBedrockFoundationModelConfigurationPtrOutputWithContext(ctx context.Context) DataSourceBedrockFoundationModelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceBedrockFoundationModelConfigurationPtrOutput)
}

// Settings for a foundation model used to parse documents for a data source.
type DataSourceBedrockFoundationModelConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceBedrockFoundationModelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceBedrockFoundationModelConfiguration)(nil)).Elem()
}

func (o DataSourceBedrockFoundationModelConfigurationOutput) ToDataSourceBedrockFoundationModelConfigurationOutput() DataSourceBedrockFoundationModelConfigurationOutput {
	return o
}

func (o DataSourceBedrockFoundationModelConfigurationOutput) ToDataSourceBedrockFoundationModelConfigurationOutputWithContext(ctx context.Context) DataSourceBedrockFoundationModelConfigurationOutput {
	return o
}

func (o DataSourceBedrockFoundationModelConfigurationOutput) ToDataSourceBedrockFoundationModelConfigurationPtrOutput() DataSourceBedrockFoundationModelConfigurationPtrOutput {
	return o.ToDataSourceBedrockFoundationModelConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceBedrockFoundationModelConfigurationOutput) ToDataSourceBedrockFoundationModelConfigurationPtrOutputWithContext(ctx context.Context) DataSourceBedrockFoundationModelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceBedrockFoundationModelConfiguration) *DataSourceBedrockFoundationModelConfiguration {
		return &v
	}).(DataSourceBedrockFoundationModelConfigurationPtrOutput)
}

// The model's ARN.
func (o DataSourceBedrockFoundationModelConfigurationOutput) ModelArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceBedrockFoundationModelConfiguration) string { return v.ModelArn }).(pulumi.StringOutput)
}

// Instructions for interpreting the contents of a document.
func (o DataSourceBedrockFoundationModelConfigurationOutput) ParsingPrompt() DataSourceParsingPromptPtrOutput {
	return o.ApplyT(func(v DataSourceBedrockFoundationModelConfiguration) *DataSourceParsingPrompt { return v.ParsingPrompt }).(DataSourceParsingPromptPtrOutput)
}

type DataSourceBedrockFoundationModelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceBedrockFoundationModelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceBedrockFoundationModelConfiguration)(nil)).Elem()
}

func (o DataSourceBedrockFoundationModelConfigurationPtrOutput) ToDataSourceBedrockFoundationModelConfigurationPtrOutput() DataSourceBedrockFoundationModelConfigurationPtrOutput {
	return o
}

func (o DataSourceBedrockFoundationModelConfigurationPtrOutput) ToDataSourceBedrockFoundationModelConfigurationPtrOutputWithContext(ctx context.Context) DataSourceBedrockFoundationModelConfigurationPtrOutput {
	return o
}

func (o DataSourceBedrockFoundationModelConfigurationPtrOutput) Elem() DataSourceBedrockFoundationModelConfigurationOutput {
	return o.ApplyT(func(v *DataSourceBedrockFoundationModelConfiguration) DataSourceBedrockFoundationModelConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceBedrockFoundationModelConfiguration
		return ret
	}).(DataSourceBedrockFoundationModelConfigurationOutput)
}

// The model's ARN.
func (o DataSourceBedrockFoundationModelConfigurationPtrOutput) ModelArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceBedrockFoundationModelConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ModelArn
	}).(pulumi.StringPtrOutput)
}

// Instructions for interpreting the contents of a document.
func (o DataSourceBedrockFoundationModelConfigurationPtrOutput) ParsingPrompt() DataSourceParsingPromptPtrOutput {
	return o.ApplyT(func(v *DataSourceBedrockFoundationModelConfiguration) *DataSourceParsingPrompt {
		if v == nil {
			return nil
		}
		return v.ParsingPrompt
	}).(DataSourceParsingPromptPtrOutput)
}

// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
type DataSourceChunkingConfiguration struct {
	// Knowledge base can split your source data into chunks. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for `NONE` , then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.
	//
	// - `FIXED_SIZE` – Amazon Bedrock splits your source data into chunks of the approximate size that you set in the `fixedSizeChunkingConfiguration` .
	// - `HIERARCHICAL` – Split documents into layers of chunks where the first layer contains large chunks, and the second layer contains smaller chunks derived from the first layer.
	// - `SEMANTIC` – Split documents into chunks based on groups of similar content derived with natural language processing.
	// - `NONE` – Amazon Bedrock treats each file as one chunk. If you choose this option, you may want to pre-process your documents by splitting them into separate files.
	ChunkingStrategy DataSourceChunkingStrategy `pulumi:"chunkingStrategy"`
	// Configurations for when you choose fixed-size chunking. If you set the `chunkingStrategy` as `NONE` , exclude this field.
	FixedSizeChunkingConfiguration *DataSourceFixedSizeChunkingConfiguration `pulumi:"fixedSizeChunkingConfiguration"`
	// Settings for hierarchical document chunking for a data source. Hierarchical chunking splits documents into layers of chunks where the first layer contains large chunks, and the second layer contains smaller chunks derived from the first layer.
	HierarchicalChunkingConfiguration *DataSourceHierarchicalChunkingConfiguration `pulumi:"hierarchicalChunkingConfiguration"`
	// Settings for semantic document chunking for a data source. Semantic chunking splits a document into into smaller documents based on groups of similar content derived from the text with natural language processing.
	SemanticChunkingConfiguration *DataSourceSemanticChunkingConfiguration `pulumi:"semanticChunkingConfiguration"`
}

// DataSourceChunkingConfigurationInput is an input type that accepts DataSourceChunkingConfigurationArgs and DataSourceChunkingConfigurationOutput values.
// You can construct a concrete instance of `DataSourceChunkingConfigurationInput` via:
//
//	DataSourceChunkingConfigurationArgs{...}
type DataSourceChunkingConfigurationInput interface {
	pulumi.Input

	ToDataSourceChunkingConfigurationOutput() DataSourceChunkingConfigurationOutput
	ToDataSourceChunkingConfigurationOutputWithContext(context.Context) DataSourceChunkingConfigurationOutput
}

// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
type DataSourceChunkingConfigurationArgs struct {
	// Knowledge base can split your source data into chunks. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for `NONE` , then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.
	//
	// - `FIXED_SIZE` – Amazon Bedrock splits your source data into chunks of the approximate size that you set in the `fixedSizeChunkingConfiguration` .
	// - `HIERARCHICAL` – Split documents into layers of chunks where the first layer contains large chunks, and the second layer contains smaller chunks derived from the first layer.
	// - `SEMANTIC` – Split documents into chunks based on groups of similar content derived with natural language processing.
	// - `NONE` – Amazon Bedrock treats each file as one chunk. If you choose this option, you may want to pre-process your documents by splitting them into separate files.
	ChunkingStrategy DataSourceChunkingStrategyInput `pulumi:"chunkingStrategy"`
	// Configurations for when you choose fixed-size chunking. If you set the `chunkingStrategy` as `NONE` , exclude this field.
	FixedSizeChunkingConfiguration DataSourceFixedSizeChunkingConfigurationPtrInput `pulumi:"fixedSizeChunkingConfiguration"`
	// Settings for hierarchical document chunking for a data source. Hierarchical chunking splits documents into layers of chunks where the first layer contains large chunks, and the second layer contains smaller chunks derived from the first layer.
	HierarchicalChunkingConfiguration DataSourceHierarchicalChunkingConfigurationPtrInput `pulumi:"hierarchicalChunkingConfiguration"`
	// Settings for semantic document chunking for a data source. Semantic chunking splits a document into into smaller documents based on groups of similar content derived from the text with natural language processing.
	SemanticChunkingConfiguration DataSourceSemanticChunkingConfigurationPtrInput `pulumi:"semanticChunkingConfiguration"`
}

func (DataSourceChunkingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceChunkingConfiguration)(nil)).Elem()
}

func (i DataSourceChunkingConfigurationArgs) ToDataSourceChunkingConfigurationOutput() DataSourceChunkingConfigurationOutput {
	return i.ToDataSourceChunkingConfigurationOutputWithContext(context.Background())
}

func (i DataSourceChunkingConfigurationArgs) ToDataSourceChunkingConfigurationOutputWithContext(ctx context.Context) DataSourceChunkingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceChunkingConfigurationOutput)
}

func (i DataSourceChunkingConfigurationArgs) ToDataSourceChunkingConfigurationPtrOutput() DataSourceChunkingConfigurationPtrOutput {
	return i.ToDataSourceChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceChunkingConfigurationArgs) ToDataSourceChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceChunkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceChunkingConfigurationOutput).ToDataSourceChunkingConfigurationPtrOutputWithContext(ctx)
}

// DataSourceChunkingConfigurationPtrInput is an input type that accepts DataSourceChunkingConfigurationArgs, DataSourceChunkingConfigurationPtr and DataSourceChunkingConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceChunkingConfigurationPtrInput` via:
//
//	        DataSourceChunkingConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceChunkingConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceChunkingConfigurationPtrOutput() DataSourceChunkingConfigurationPtrOutput
	ToDataSourceChunkingConfigurationPtrOutputWithContext(context.Context) DataSourceChunkingConfigurationPtrOutput
}

type dataSourceChunkingConfigurationPtrType DataSourceChunkingConfigurationArgs

func DataSourceChunkingConfigurationPtr(v *DataSourceChunkingConfigurationArgs) DataSourceChunkingConfigurationPtrInput {
	return (*dataSourceChunkingConfigurationPtrType)(v)
}

func (*dataSourceChunkingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceChunkingConfiguration)(nil)).Elem()
}

func (i *dataSourceChunkingConfigurationPtrType) ToDataSourceChunkingConfigurationPtrOutput() DataSourceChunkingConfigurationPtrOutput {
	return i.ToDataSourceChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceChunkingConfigurationPtrType) ToDataSourceChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceChunkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceChunkingConfigurationPtrOutput)
}

// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
type DataSourceChunkingConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceChunkingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceChunkingConfiguration)(nil)).Elem()
}

func (o DataSourceChunkingConfigurationOutput) ToDataSourceChunkingConfigurationOutput() DataSourceChunkingConfigurationOutput {
	return o
}

func (o DataSourceChunkingConfigurationOutput) ToDataSourceChunkingConfigurationOutputWithContext(ctx context.Context) DataSourceChunkingConfigurationOutput {
	return o
}

func (o DataSourceChunkingConfigurationOutput) ToDataSourceChunkingConfigurationPtrOutput() DataSourceChunkingConfigurationPtrOutput {
	return o.ToDataSourceChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceChunkingConfigurationOutput) ToDataSourceChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceChunkingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceChunkingConfiguration) *DataSourceChunkingConfiguration {
		return &v
	}).(DataSourceChunkingConfigurationPtrOutput)
}

// Knowledge base can split your source data into chunks. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for `NONE` , then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.
//
// - `FIXED_SIZE` – Amazon Bedrock splits your source data into chunks of the approximate size that you set in the `fixedSizeChunkingConfiguration` .
// - `HIERARCHICAL` – Split documents into layers of chunks where the first layer contains large chunks, and the second layer contains smaller chunks derived from the first layer.
// - `SEMANTIC` – Split documents into chunks based on groups of similar content derived with natural language processing.
// - `NONE` – Amazon Bedrock treats each file as one chunk. If you choose this option, you may want to pre-process your documents by splitting them into separate files.
func (o DataSourceChunkingConfigurationOutput) ChunkingStrategy() DataSourceChunkingStrategyOutput {
	return o.ApplyT(func(v DataSourceChunkingConfiguration) DataSourceChunkingStrategy { return v.ChunkingStrategy }).(DataSourceChunkingStrategyOutput)
}

// Configurations for when you choose fixed-size chunking. If you set the `chunkingStrategy` as `NONE` , exclude this field.
func (o DataSourceChunkingConfigurationOutput) FixedSizeChunkingConfiguration() DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceChunkingConfiguration) *DataSourceFixedSizeChunkingConfiguration {
		return v.FixedSizeChunkingConfiguration
	}).(DataSourceFixedSizeChunkingConfigurationPtrOutput)
}

// Settings for hierarchical document chunking for a data source. Hierarchical chunking splits documents into layers of chunks where the first layer contains large chunks, and the second layer contains smaller chunks derived from the first layer.
func (o DataSourceChunkingConfigurationOutput) HierarchicalChunkingConfiguration() DataSourceHierarchicalChunkingConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceChunkingConfiguration) *DataSourceHierarchicalChunkingConfiguration {
		return v.HierarchicalChunkingConfiguration
	}).(DataSourceHierarchicalChunkingConfigurationPtrOutput)
}

// Settings for semantic document chunking for a data source. Semantic chunking splits a document into into smaller documents based on groups of similar content derived from the text with natural language processing.
func (o DataSourceChunkingConfigurationOutput) SemanticChunkingConfiguration() DataSourceSemanticChunkingConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceChunkingConfiguration) *DataSourceSemanticChunkingConfiguration {
		return v.SemanticChunkingConfiguration
	}).(DataSourceSemanticChunkingConfigurationPtrOutput)
}

type DataSourceChunkingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceChunkingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceChunkingConfiguration)(nil)).Elem()
}

func (o DataSourceChunkingConfigurationPtrOutput) ToDataSourceChunkingConfigurationPtrOutput() DataSourceChunkingConfigurationPtrOutput {
	return o
}

func (o DataSourceChunkingConfigurationPtrOutput) ToDataSourceChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceChunkingConfigurationPtrOutput {
	return o
}

func (o DataSourceChunkingConfigurationPtrOutput) Elem() DataSourceChunkingConfigurationOutput {
	return o.ApplyT(func(v *DataSourceChunkingConfiguration) DataSourceChunkingConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceChunkingConfiguration
		return ret
	}).(DataSourceChunkingConfigurationOutput)
}

// Knowledge base can split your source data into chunks. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for `NONE` , then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.
//
// - `FIXED_SIZE` – Amazon Bedrock splits your source data into chunks of the approximate size that you set in the `fixedSizeChunkingConfiguration` .
// - `HIERARCHICAL` – Split documents into layers of chunks where the first layer contains large chunks, and the second layer contains smaller chunks derived from the first layer.
// - `SEMANTIC` – Split documents into chunks based on groups of similar content derived with natural language processing.
// - `NONE` – Amazon Bedrock treats each file as one chunk. If you choose this option, you may want to pre-process your documents by splitting them into separate files.
func (o DataSourceChunkingConfigurationPtrOutput) ChunkingStrategy() DataSourceChunkingStrategyPtrOutput {
	return o.ApplyT(func(v *DataSourceChunkingConfiguration) *DataSourceChunkingStrategy {
		if v == nil {
			return nil
		}
		return &v.ChunkingStrategy
	}).(DataSourceChunkingStrategyPtrOutput)
}

// Configurations for when you choose fixed-size chunking. If you set the `chunkingStrategy` as `NONE` , exclude this field.
func (o DataSourceChunkingConfigurationPtrOutput) FixedSizeChunkingConfiguration() DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceChunkingConfiguration) *DataSourceFixedSizeChunkingConfiguration {
		if v == nil {
			return nil
		}
		return v.FixedSizeChunkingConfiguration
	}).(DataSourceFixedSizeChunkingConfigurationPtrOutput)
}

// Settings for hierarchical document chunking for a data source. Hierarchical chunking splits documents into layers of chunks where the first layer contains large chunks, and the second layer contains smaller chunks derived from the first layer.
func (o DataSourceChunkingConfigurationPtrOutput) HierarchicalChunkingConfiguration() DataSourceHierarchicalChunkingConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceChunkingConfiguration) *DataSourceHierarchicalChunkingConfiguration {
		if v == nil {
			return nil
		}
		return v.HierarchicalChunkingConfiguration
	}).(DataSourceHierarchicalChunkingConfigurationPtrOutput)
}

// Settings for semantic document chunking for a data source. Semantic chunking splits a document into into smaller documents based on groups of similar content derived from the text with natural language processing.
func (o DataSourceChunkingConfigurationPtrOutput) SemanticChunkingConfiguration() DataSourceSemanticChunkingConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceChunkingConfiguration) *DataSourceSemanticChunkingConfiguration {
		if v == nil {
			return nil
		}
		return v.SemanticChunkingConfiguration
	}).(DataSourceSemanticChunkingConfigurationPtrOutput)
}

// Specifies a raw data source location to ingest.
type DataSourceConfiguration struct {
	// The configuration information to connect to Confluence as your data source.
	//
	// > Confluence data source connector is in preview release and is subject to change.
	ConfluenceConfiguration *DataSourceConfluenceDataSourceConfiguration `pulumi:"confluenceConfiguration"`
	// The configuration information to connect to Amazon S3 as your data source.
	S3Configuration *DataSourceS3DataSourceConfiguration `pulumi:"s3Configuration"`
	// The configuration information to connect to Salesforce as your data source.
	//
	// > Salesforce data source connector is in preview release and is subject to change.
	SalesforceConfiguration *DataSourceSalesforceDataSourceConfiguration `pulumi:"salesforceConfiguration"`
	// The configuration information to connect to SharePoint as your data source.
	//
	// > SharePoint data source connector is in preview release and is subject to change.
	SharePointConfiguration *DataSourceSharePointDataSourceConfiguration `pulumi:"sharePointConfiguration"`
	// The type of data source.
	Type DataSourceType `pulumi:"type"`
	// The configuration of web URLs to crawl for your data source. You should be authorized to crawl the URLs.
	//
	// > Crawling web URLs as your data source is in preview release and is subject to change.
	WebConfiguration *DataSourceWebDataSourceConfiguration `pulumi:"webConfiguration"`
}

// DataSourceConfigurationInput is an input type that accepts DataSourceConfigurationArgs and DataSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceConfigurationInput` via:
//
//	DataSourceConfigurationArgs{...}
type DataSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceConfigurationOutput() DataSourceConfigurationOutput
	ToDataSourceConfigurationOutputWithContext(context.Context) DataSourceConfigurationOutput
}

// Specifies a raw data source location to ingest.
type DataSourceConfigurationArgs struct {
	// The configuration information to connect to Confluence as your data source.
	//
	// > Confluence data source connector is in preview release and is subject to change.
	ConfluenceConfiguration DataSourceConfluenceDataSourceConfigurationPtrInput `pulumi:"confluenceConfiguration"`
	// The configuration information to connect to Amazon S3 as your data source.
	S3Configuration DataSourceS3DataSourceConfigurationPtrInput `pulumi:"s3Configuration"`
	// The configuration information to connect to Salesforce as your data source.
	//
	// > Salesforce data source connector is in preview release and is subject to change.
	SalesforceConfiguration DataSourceSalesforceDataSourceConfigurationPtrInput `pulumi:"salesforceConfiguration"`
	// The configuration information to connect to SharePoint as your data source.
	//
	// > SharePoint data source connector is in preview release and is subject to change.
	SharePointConfiguration DataSourceSharePointDataSourceConfigurationPtrInput `pulumi:"sharePointConfiguration"`
	// The type of data source.
	Type DataSourceTypeInput `pulumi:"type"`
	// The configuration of web URLs to crawl for your data source. You should be authorized to crawl the URLs.
	//
	// > Crawling web URLs as your data source is in preview release and is subject to change.
	WebConfiguration DataSourceWebDataSourceConfigurationPtrInput `pulumi:"webConfiguration"`
}

func (DataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfiguration)(nil)).Elem()
}

func (i DataSourceConfigurationArgs) ToDataSourceConfigurationOutput() DataSourceConfigurationOutput {
	return i.ToDataSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationArgs) ToDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationOutput)
}

// Specifies a raw data source location to ingest.
type DataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationOutput) ToDataSourceConfigurationOutput() DataSourceConfigurationOutput {
	return o
}

func (o DataSourceConfigurationOutput) ToDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationOutput {
	return o
}

// The configuration information to connect to Confluence as your data source.
//
// > Confluence data source connector is in preview release and is subject to change.
func (o DataSourceConfigurationOutput) ConfluenceConfiguration() DataSourceConfluenceDataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceConfiguration) *DataSourceConfluenceDataSourceConfiguration {
		return v.ConfluenceConfiguration
	}).(DataSourceConfluenceDataSourceConfigurationPtrOutput)
}

// The configuration information to connect to Amazon S3 as your data source.
func (o DataSourceConfigurationOutput) S3Configuration() DataSourceS3DataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceConfiguration) *DataSourceS3DataSourceConfiguration { return v.S3Configuration }).(DataSourceS3DataSourceConfigurationPtrOutput)
}

// The configuration information to connect to Salesforce as your data source.
//
// > Salesforce data source connector is in preview release and is subject to change.
func (o DataSourceConfigurationOutput) SalesforceConfiguration() DataSourceSalesforceDataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceConfiguration) *DataSourceSalesforceDataSourceConfiguration {
		return v.SalesforceConfiguration
	}).(DataSourceSalesforceDataSourceConfigurationPtrOutput)
}

// The configuration information to connect to SharePoint as your data source.
//
// > SharePoint data source connector is in preview release and is subject to change.
func (o DataSourceConfigurationOutput) SharePointConfiguration() DataSourceSharePointDataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceConfiguration) *DataSourceSharePointDataSourceConfiguration {
		return v.SharePointConfiguration
	}).(DataSourceSharePointDataSourceConfigurationPtrOutput)
}

// The type of data source.
func (o DataSourceConfigurationOutput) Type() DataSourceTypeOutput {
	return o.ApplyT(func(v DataSourceConfiguration) DataSourceType { return v.Type }).(DataSourceTypeOutput)
}

// The configuration of web URLs to crawl for your data source. You should be authorized to crawl the URLs.
//
// > Crawling web URLs as your data source is in preview release and is subject to change.
func (o DataSourceConfigurationOutput) WebConfiguration() DataSourceWebDataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceConfiguration) *DataSourceWebDataSourceConfiguration { return v.WebConfiguration }).(DataSourceWebDataSourceConfigurationPtrOutput)
}

type DataSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationPtrOutput) ToDataSourceConfigurationPtrOutput() DataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceConfigurationPtrOutput) ToDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceConfigurationPtrOutput) Elem() DataSourceConfigurationOutput {
	return o.ApplyT(func(v *DataSourceConfiguration) DataSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceConfiguration
		return ret
	}).(DataSourceConfigurationOutput)
}

// The configuration information to connect to Confluence as your data source.
//
// > Confluence data source connector is in preview release and is subject to change.
func (o DataSourceConfigurationPtrOutput) ConfluenceConfiguration() DataSourceConfluenceDataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceConfiguration) *DataSourceConfluenceDataSourceConfiguration {
		if v == nil {
			return nil
		}
		return v.ConfluenceConfiguration
	}).(DataSourceConfluenceDataSourceConfigurationPtrOutput)
}

// The configuration information to connect to Amazon S3 as your data source.
func (o DataSourceConfigurationPtrOutput) S3Configuration() DataSourceS3DataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceConfiguration) *DataSourceS3DataSourceConfiguration {
		if v == nil {
			return nil
		}
		return v.S3Configuration
	}).(DataSourceS3DataSourceConfigurationPtrOutput)
}

// The configuration information to connect to Salesforce as your data source.
//
// > Salesforce data source connector is in preview release and is subject to change.
func (o DataSourceConfigurationPtrOutput) SalesforceConfiguration() DataSourceSalesforceDataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceConfiguration) *DataSourceSalesforceDataSourceConfiguration {
		if v == nil {
			return nil
		}
		return v.SalesforceConfiguration
	}).(DataSourceSalesforceDataSourceConfigurationPtrOutput)
}

// The configuration information to connect to SharePoint as your data source.
//
// > SharePoint data source connector is in preview release and is subject to change.
func (o DataSourceConfigurationPtrOutput) SharePointConfiguration() DataSourceSharePointDataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceConfiguration) *DataSourceSharePointDataSourceConfiguration {
		if v == nil {
			return nil
		}
		return v.SharePointConfiguration
	}).(DataSourceSharePointDataSourceConfigurationPtrOutput)
}

// The type of data source.
func (o DataSourceConfigurationPtrOutput) Type() DataSourceTypePtrOutput {
	return o.ApplyT(func(v *DataSourceConfiguration) *DataSourceType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(DataSourceTypePtrOutput)
}

// The configuration of web URLs to crawl for your data source. You should be authorized to crawl the URLs.
//
// > Crawling web URLs as your data source is in preview release and is subject to change.
func (o DataSourceConfigurationPtrOutput) WebConfiguration() DataSourceWebDataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceConfiguration) *DataSourceWebDataSourceConfiguration {
		if v == nil {
			return nil
		}
		return v.WebConfiguration
	}).(DataSourceWebDataSourceConfigurationPtrOutput)
}

// The configuration of the Confluence content. For example, configuring specific types of Confluence content.
type DataSourceConfluenceCrawlerConfiguration struct {
	// The configuration of filtering the Confluence content. For example, configuring regular expression patterns to include or exclude certain content.
	FilterConfiguration *DataSourceCrawlFilterConfiguration `pulumi:"filterConfiguration"`
}

// DataSourceConfluenceCrawlerConfigurationInput is an input type that accepts DataSourceConfluenceCrawlerConfigurationArgs and DataSourceConfluenceCrawlerConfigurationOutput values.
// You can construct a concrete instance of `DataSourceConfluenceCrawlerConfigurationInput` via:
//
//	DataSourceConfluenceCrawlerConfigurationArgs{...}
type DataSourceConfluenceCrawlerConfigurationInput interface {
	pulumi.Input

	ToDataSourceConfluenceCrawlerConfigurationOutput() DataSourceConfluenceCrawlerConfigurationOutput
	ToDataSourceConfluenceCrawlerConfigurationOutputWithContext(context.Context) DataSourceConfluenceCrawlerConfigurationOutput
}

// The configuration of the Confluence content. For example, configuring specific types of Confluence content.
type DataSourceConfluenceCrawlerConfigurationArgs struct {
	// The configuration of filtering the Confluence content. For example, configuring regular expression patterns to include or exclude certain content.
	FilterConfiguration DataSourceCrawlFilterConfigurationPtrInput `pulumi:"filterConfiguration"`
}

func (DataSourceConfluenceCrawlerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceCrawlerConfiguration)(nil)).Elem()
}

func (i DataSourceConfluenceCrawlerConfigurationArgs) ToDataSourceConfluenceCrawlerConfigurationOutput() DataSourceConfluenceCrawlerConfigurationOutput {
	return i.ToDataSourceConfluenceCrawlerConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfluenceCrawlerConfigurationArgs) ToDataSourceConfluenceCrawlerConfigurationOutputWithContext(ctx context.Context) DataSourceConfluenceCrawlerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfluenceCrawlerConfigurationOutput)
}

func (i DataSourceConfluenceCrawlerConfigurationArgs) ToDataSourceConfluenceCrawlerConfigurationPtrOutput() DataSourceConfluenceCrawlerConfigurationPtrOutput {
	return i.ToDataSourceConfluenceCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceConfluenceCrawlerConfigurationArgs) ToDataSourceConfluenceCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfluenceCrawlerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfluenceCrawlerConfigurationOutput).ToDataSourceConfluenceCrawlerConfigurationPtrOutputWithContext(ctx)
}

// DataSourceConfluenceCrawlerConfigurationPtrInput is an input type that accepts DataSourceConfluenceCrawlerConfigurationArgs, DataSourceConfluenceCrawlerConfigurationPtr and DataSourceConfluenceCrawlerConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceConfluenceCrawlerConfigurationPtrInput` via:
//
//	        DataSourceConfluenceCrawlerConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceConfluenceCrawlerConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceConfluenceCrawlerConfigurationPtrOutput() DataSourceConfluenceCrawlerConfigurationPtrOutput
	ToDataSourceConfluenceCrawlerConfigurationPtrOutputWithContext(context.Context) DataSourceConfluenceCrawlerConfigurationPtrOutput
}

type dataSourceConfluenceCrawlerConfigurationPtrType DataSourceConfluenceCrawlerConfigurationArgs

func DataSourceConfluenceCrawlerConfigurationPtr(v *DataSourceConfluenceCrawlerConfigurationArgs) DataSourceConfluenceCrawlerConfigurationPtrInput {
	return (*dataSourceConfluenceCrawlerConfigurationPtrType)(v)
}

func (*dataSourceConfluenceCrawlerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfluenceCrawlerConfiguration)(nil)).Elem()
}

func (i *dataSourceConfluenceCrawlerConfigurationPtrType) ToDataSourceConfluenceCrawlerConfigurationPtrOutput() DataSourceConfluenceCrawlerConfigurationPtrOutput {
	return i.ToDataSourceConfluenceCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceConfluenceCrawlerConfigurationPtrType) ToDataSourceConfluenceCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfluenceCrawlerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfluenceCrawlerConfigurationPtrOutput)
}

// The configuration of the Confluence content. For example, configuring specific types of Confluence content.
type DataSourceConfluenceCrawlerConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceCrawlerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceCrawlerConfiguration)(nil)).Elem()
}

func (o DataSourceConfluenceCrawlerConfigurationOutput) ToDataSourceConfluenceCrawlerConfigurationOutput() DataSourceConfluenceCrawlerConfigurationOutput {
	return o
}

func (o DataSourceConfluenceCrawlerConfigurationOutput) ToDataSourceConfluenceCrawlerConfigurationOutputWithContext(ctx context.Context) DataSourceConfluenceCrawlerConfigurationOutput {
	return o
}

func (o DataSourceConfluenceCrawlerConfigurationOutput) ToDataSourceConfluenceCrawlerConfigurationPtrOutput() DataSourceConfluenceCrawlerConfigurationPtrOutput {
	return o.ToDataSourceConfluenceCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceCrawlerConfigurationOutput) ToDataSourceConfluenceCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfluenceCrawlerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceConfluenceCrawlerConfiguration) *DataSourceConfluenceCrawlerConfiguration {
		return &v
	}).(DataSourceConfluenceCrawlerConfigurationPtrOutput)
}

// The configuration of filtering the Confluence content. For example, configuring regular expression patterns to include or exclude certain content.
func (o DataSourceConfluenceCrawlerConfigurationOutput) FilterConfiguration() DataSourceCrawlFilterConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceConfluenceCrawlerConfiguration) *DataSourceCrawlFilterConfiguration {
		return v.FilterConfiguration
	}).(DataSourceCrawlFilterConfigurationPtrOutput)
}

type DataSourceConfluenceCrawlerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceCrawlerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfluenceCrawlerConfiguration)(nil)).Elem()
}

func (o DataSourceConfluenceCrawlerConfigurationPtrOutput) ToDataSourceConfluenceCrawlerConfigurationPtrOutput() DataSourceConfluenceCrawlerConfigurationPtrOutput {
	return o
}

func (o DataSourceConfluenceCrawlerConfigurationPtrOutput) ToDataSourceConfluenceCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfluenceCrawlerConfigurationPtrOutput {
	return o
}

func (o DataSourceConfluenceCrawlerConfigurationPtrOutput) Elem() DataSourceConfluenceCrawlerConfigurationOutput {
	return o.ApplyT(func(v *DataSourceConfluenceCrawlerConfiguration) DataSourceConfluenceCrawlerConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceConfluenceCrawlerConfiguration
		return ret
	}).(DataSourceConfluenceCrawlerConfigurationOutput)
}

// The configuration of filtering the Confluence content. For example, configuring regular expression patterns to include or exclude certain content.
func (o DataSourceConfluenceCrawlerConfigurationPtrOutput) FilterConfiguration() DataSourceCrawlFilterConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceConfluenceCrawlerConfiguration) *DataSourceCrawlFilterConfiguration {
		if v == nil {
			return nil
		}
		return v.FilterConfiguration
	}).(DataSourceCrawlFilterConfigurationPtrOutput)
}

// The configuration information to connect to Confluence as your data source.
type DataSourceConfluenceDataSourceConfiguration struct {
	// The configuration of the Confluence content. For example, configuring specific types of Confluence content.
	CrawlerConfiguration *DataSourceConfluenceCrawlerConfiguration `pulumi:"crawlerConfiguration"`
	// The endpoint information to connect to your Confluence data source.
	SourceConfiguration DataSourceConfluenceSourceConfiguration `pulumi:"sourceConfiguration"`
}

// DataSourceConfluenceDataSourceConfigurationInput is an input type that accepts DataSourceConfluenceDataSourceConfigurationArgs and DataSourceConfluenceDataSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceConfluenceDataSourceConfigurationInput` via:
//
//	DataSourceConfluenceDataSourceConfigurationArgs{...}
type DataSourceConfluenceDataSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceConfluenceDataSourceConfigurationOutput() DataSourceConfluenceDataSourceConfigurationOutput
	ToDataSourceConfluenceDataSourceConfigurationOutputWithContext(context.Context) DataSourceConfluenceDataSourceConfigurationOutput
}

// The configuration information to connect to Confluence as your data source.
type DataSourceConfluenceDataSourceConfigurationArgs struct {
	// The configuration of the Confluence content. For example, configuring specific types of Confluence content.
	CrawlerConfiguration DataSourceConfluenceCrawlerConfigurationPtrInput `pulumi:"crawlerConfiguration"`
	// The endpoint information to connect to your Confluence data source.
	SourceConfiguration DataSourceConfluenceSourceConfigurationInput `pulumi:"sourceConfiguration"`
}

func (DataSourceConfluenceDataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceDataSourceConfiguration)(nil)).Elem()
}

func (i DataSourceConfluenceDataSourceConfigurationArgs) ToDataSourceConfluenceDataSourceConfigurationOutput() DataSourceConfluenceDataSourceConfigurationOutput {
	return i.ToDataSourceConfluenceDataSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfluenceDataSourceConfigurationArgs) ToDataSourceConfluenceDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceConfluenceDataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfluenceDataSourceConfigurationOutput)
}

func (i DataSourceConfluenceDataSourceConfigurationArgs) ToDataSourceConfluenceDataSourceConfigurationPtrOutput() DataSourceConfluenceDataSourceConfigurationPtrOutput {
	return i.ToDataSourceConfluenceDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceConfluenceDataSourceConfigurationArgs) ToDataSourceConfluenceDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfluenceDataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfluenceDataSourceConfigurationOutput).ToDataSourceConfluenceDataSourceConfigurationPtrOutputWithContext(ctx)
}

// DataSourceConfluenceDataSourceConfigurationPtrInput is an input type that accepts DataSourceConfluenceDataSourceConfigurationArgs, DataSourceConfluenceDataSourceConfigurationPtr and DataSourceConfluenceDataSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceConfluenceDataSourceConfigurationPtrInput` via:
//
//	        DataSourceConfluenceDataSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceConfluenceDataSourceConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceConfluenceDataSourceConfigurationPtrOutput() DataSourceConfluenceDataSourceConfigurationPtrOutput
	ToDataSourceConfluenceDataSourceConfigurationPtrOutputWithContext(context.Context) DataSourceConfluenceDataSourceConfigurationPtrOutput
}

type dataSourceConfluenceDataSourceConfigurationPtrType DataSourceConfluenceDataSourceConfigurationArgs

func DataSourceConfluenceDataSourceConfigurationPtr(v *DataSourceConfluenceDataSourceConfigurationArgs) DataSourceConfluenceDataSourceConfigurationPtrInput {
	return (*dataSourceConfluenceDataSourceConfigurationPtrType)(v)
}

func (*dataSourceConfluenceDataSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfluenceDataSourceConfiguration)(nil)).Elem()
}

func (i *dataSourceConfluenceDataSourceConfigurationPtrType) ToDataSourceConfluenceDataSourceConfigurationPtrOutput() DataSourceConfluenceDataSourceConfigurationPtrOutput {
	return i.ToDataSourceConfluenceDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceConfluenceDataSourceConfigurationPtrType) ToDataSourceConfluenceDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfluenceDataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfluenceDataSourceConfigurationPtrOutput)
}

// The configuration information to connect to Confluence as your data source.
type DataSourceConfluenceDataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceDataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceDataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceConfluenceDataSourceConfigurationOutput) ToDataSourceConfluenceDataSourceConfigurationOutput() DataSourceConfluenceDataSourceConfigurationOutput {
	return o
}

func (o DataSourceConfluenceDataSourceConfigurationOutput) ToDataSourceConfluenceDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceConfluenceDataSourceConfigurationOutput {
	return o
}

func (o DataSourceConfluenceDataSourceConfigurationOutput) ToDataSourceConfluenceDataSourceConfigurationPtrOutput() DataSourceConfluenceDataSourceConfigurationPtrOutput {
	return o.ToDataSourceConfluenceDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceDataSourceConfigurationOutput) ToDataSourceConfluenceDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfluenceDataSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceConfluenceDataSourceConfiguration) *DataSourceConfluenceDataSourceConfiguration {
		return &v
	}).(DataSourceConfluenceDataSourceConfigurationPtrOutput)
}

// The configuration of the Confluence content. For example, configuring specific types of Confluence content.
func (o DataSourceConfluenceDataSourceConfigurationOutput) CrawlerConfiguration() DataSourceConfluenceCrawlerConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceConfluenceDataSourceConfiguration) *DataSourceConfluenceCrawlerConfiguration {
		return v.CrawlerConfiguration
	}).(DataSourceConfluenceCrawlerConfigurationPtrOutput)
}

// The endpoint information to connect to your Confluence data source.
func (o DataSourceConfluenceDataSourceConfigurationOutput) SourceConfiguration() DataSourceConfluenceSourceConfigurationOutput {
	return o.ApplyT(func(v DataSourceConfluenceDataSourceConfiguration) DataSourceConfluenceSourceConfiguration {
		return v.SourceConfiguration
	}).(DataSourceConfluenceSourceConfigurationOutput)
}

type DataSourceConfluenceDataSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceDataSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfluenceDataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceConfluenceDataSourceConfigurationPtrOutput) ToDataSourceConfluenceDataSourceConfigurationPtrOutput() DataSourceConfluenceDataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceConfluenceDataSourceConfigurationPtrOutput) ToDataSourceConfluenceDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfluenceDataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceConfluenceDataSourceConfigurationPtrOutput) Elem() DataSourceConfluenceDataSourceConfigurationOutput {
	return o.ApplyT(func(v *DataSourceConfluenceDataSourceConfiguration) DataSourceConfluenceDataSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceConfluenceDataSourceConfiguration
		return ret
	}).(DataSourceConfluenceDataSourceConfigurationOutput)
}

// The configuration of the Confluence content. For example, configuring specific types of Confluence content.
func (o DataSourceConfluenceDataSourceConfigurationPtrOutput) CrawlerConfiguration() DataSourceConfluenceCrawlerConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceConfluenceDataSourceConfiguration) *DataSourceConfluenceCrawlerConfiguration {
		if v == nil {
			return nil
		}
		return v.CrawlerConfiguration
	}).(DataSourceConfluenceCrawlerConfigurationPtrOutput)
}

// The endpoint information to connect to your Confluence data source.
func (o DataSourceConfluenceDataSourceConfigurationPtrOutput) SourceConfiguration() DataSourceConfluenceSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceConfluenceDataSourceConfiguration) *DataSourceConfluenceSourceConfiguration {
		if v == nil {
			return nil
		}
		return &v.SourceConfiguration
	}).(DataSourceConfluenceSourceConfigurationPtrOutput)
}

// The endpoint information to connect to your Confluence data source.
type DataSourceConfluenceSourceConfiguration struct {
	// The supported authentication type to authenticate and connect to your Confluence instance.
	AuthType DataSourceConfluenceSourceConfigurationAuthType `pulumi:"authType"`
	// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your Confluence instance URL. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see Confluence connection configuration.
	CredentialsSecretArn string `pulumi:"credentialsSecretArn"`
	// The supported host type, whether online/cloud or server/on-premises.
	HostType DataSourceConfluenceSourceConfigurationHostType `pulumi:"hostType"`
	// The Confluence host URL or instance URL.
	HostUrl string `pulumi:"hostUrl"`
}

// DataSourceConfluenceSourceConfigurationInput is an input type that accepts DataSourceConfluenceSourceConfigurationArgs and DataSourceConfluenceSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceConfluenceSourceConfigurationInput` via:
//
//	DataSourceConfluenceSourceConfigurationArgs{...}
type DataSourceConfluenceSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceConfluenceSourceConfigurationOutput() DataSourceConfluenceSourceConfigurationOutput
	ToDataSourceConfluenceSourceConfigurationOutputWithContext(context.Context) DataSourceConfluenceSourceConfigurationOutput
}

// The endpoint information to connect to your Confluence data source.
type DataSourceConfluenceSourceConfigurationArgs struct {
	// The supported authentication type to authenticate and connect to your Confluence instance.
	AuthType DataSourceConfluenceSourceConfigurationAuthTypeInput `pulumi:"authType"`
	// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your Confluence instance URL. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see Confluence connection configuration.
	CredentialsSecretArn pulumi.StringInput `pulumi:"credentialsSecretArn"`
	// The supported host type, whether online/cloud or server/on-premises.
	HostType DataSourceConfluenceSourceConfigurationHostTypeInput `pulumi:"hostType"`
	// The Confluence host URL or instance URL.
	HostUrl pulumi.StringInput `pulumi:"hostUrl"`
}

func (DataSourceConfluenceSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceSourceConfiguration)(nil)).Elem()
}

func (i DataSourceConfluenceSourceConfigurationArgs) ToDataSourceConfluenceSourceConfigurationOutput() DataSourceConfluenceSourceConfigurationOutput {
	return i.ToDataSourceConfluenceSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfluenceSourceConfigurationArgs) ToDataSourceConfluenceSourceConfigurationOutputWithContext(ctx context.Context) DataSourceConfluenceSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfluenceSourceConfigurationOutput)
}

func (i DataSourceConfluenceSourceConfigurationArgs) ToDataSourceConfluenceSourceConfigurationPtrOutput() DataSourceConfluenceSourceConfigurationPtrOutput {
	return i.ToDataSourceConfluenceSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceConfluenceSourceConfigurationArgs) ToDataSourceConfluenceSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfluenceSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfluenceSourceConfigurationOutput).ToDataSourceConfluenceSourceConfigurationPtrOutputWithContext(ctx)
}

// DataSourceConfluenceSourceConfigurationPtrInput is an input type that accepts DataSourceConfluenceSourceConfigurationArgs, DataSourceConfluenceSourceConfigurationPtr and DataSourceConfluenceSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceConfluenceSourceConfigurationPtrInput` via:
//
//	        DataSourceConfluenceSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceConfluenceSourceConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceConfluenceSourceConfigurationPtrOutput() DataSourceConfluenceSourceConfigurationPtrOutput
	ToDataSourceConfluenceSourceConfigurationPtrOutputWithContext(context.Context) DataSourceConfluenceSourceConfigurationPtrOutput
}

type dataSourceConfluenceSourceConfigurationPtrType DataSourceConfluenceSourceConfigurationArgs

func DataSourceConfluenceSourceConfigurationPtr(v *DataSourceConfluenceSourceConfigurationArgs) DataSourceConfluenceSourceConfigurationPtrInput {
	return (*dataSourceConfluenceSourceConfigurationPtrType)(v)
}

func (*dataSourceConfluenceSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfluenceSourceConfiguration)(nil)).Elem()
}

func (i *dataSourceConfluenceSourceConfigurationPtrType) ToDataSourceConfluenceSourceConfigurationPtrOutput() DataSourceConfluenceSourceConfigurationPtrOutput {
	return i.ToDataSourceConfluenceSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceConfluenceSourceConfigurationPtrType) ToDataSourceConfluenceSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfluenceSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfluenceSourceConfigurationPtrOutput)
}

// The endpoint information to connect to your Confluence data source.
type DataSourceConfluenceSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceSourceConfiguration)(nil)).Elem()
}

func (o DataSourceConfluenceSourceConfigurationOutput) ToDataSourceConfluenceSourceConfigurationOutput() DataSourceConfluenceSourceConfigurationOutput {
	return o
}

func (o DataSourceConfluenceSourceConfigurationOutput) ToDataSourceConfluenceSourceConfigurationOutputWithContext(ctx context.Context) DataSourceConfluenceSourceConfigurationOutput {
	return o
}

func (o DataSourceConfluenceSourceConfigurationOutput) ToDataSourceConfluenceSourceConfigurationPtrOutput() DataSourceConfluenceSourceConfigurationPtrOutput {
	return o.ToDataSourceConfluenceSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceSourceConfigurationOutput) ToDataSourceConfluenceSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfluenceSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceConfluenceSourceConfiguration) *DataSourceConfluenceSourceConfiguration {
		return &v
	}).(DataSourceConfluenceSourceConfigurationPtrOutput)
}

// The supported authentication type to authenticate and connect to your Confluence instance.
func (o DataSourceConfluenceSourceConfigurationOutput) AuthType() DataSourceConfluenceSourceConfigurationAuthTypeOutput {
	return o.ApplyT(func(v DataSourceConfluenceSourceConfiguration) DataSourceConfluenceSourceConfigurationAuthType {
		return v.AuthType
	}).(DataSourceConfluenceSourceConfigurationAuthTypeOutput)
}

// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your Confluence instance URL. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see Confluence connection configuration.
func (o DataSourceConfluenceSourceConfigurationOutput) CredentialsSecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceConfluenceSourceConfiguration) string { return v.CredentialsSecretArn }).(pulumi.StringOutput)
}

// The supported host type, whether online/cloud or server/on-premises.
func (o DataSourceConfluenceSourceConfigurationOutput) HostType() DataSourceConfluenceSourceConfigurationHostTypeOutput {
	return o.ApplyT(func(v DataSourceConfluenceSourceConfiguration) DataSourceConfluenceSourceConfigurationHostType {
		return v.HostType
	}).(DataSourceConfluenceSourceConfigurationHostTypeOutput)
}

// The Confluence host URL or instance URL.
func (o DataSourceConfluenceSourceConfigurationOutput) HostUrl() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceConfluenceSourceConfiguration) string { return v.HostUrl }).(pulumi.StringOutput)
}

type DataSourceConfluenceSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfluenceSourceConfiguration)(nil)).Elem()
}

func (o DataSourceConfluenceSourceConfigurationPtrOutput) ToDataSourceConfluenceSourceConfigurationPtrOutput() DataSourceConfluenceSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceConfluenceSourceConfigurationPtrOutput) ToDataSourceConfluenceSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfluenceSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceConfluenceSourceConfigurationPtrOutput) Elem() DataSourceConfluenceSourceConfigurationOutput {
	return o.ApplyT(func(v *DataSourceConfluenceSourceConfiguration) DataSourceConfluenceSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceConfluenceSourceConfiguration
		return ret
	}).(DataSourceConfluenceSourceConfigurationOutput)
}

// The supported authentication type to authenticate and connect to your Confluence instance.
func (o DataSourceConfluenceSourceConfigurationPtrOutput) AuthType() DataSourceConfluenceSourceConfigurationAuthTypePtrOutput {
	return o.ApplyT(func(v *DataSourceConfluenceSourceConfiguration) *DataSourceConfluenceSourceConfigurationAuthType {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(DataSourceConfluenceSourceConfigurationAuthTypePtrOutput)
}

// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your Confluence instance URL. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see Confluence connection configuration.
func (o DataSourceConfluenceSourceConfigurationPtrOutput) CredentialsSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceConfluenceSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialsSecretArn
	}).(pulumi.StringPtrOutput)
}

// The supported host type, whether online/cloud or server/on-premises.
func (o DataSourceConfluenceSourceConfigurationPtrOutput) HostType() DataSourceConfluenceSourceConfigurationHostTypePtrOutput {
	return o.ApplyT(func(v *DataSourceConfluenceSourceConfiguration) *DataSourceConfluenceSourceConfigurationHostType {
		if v == nil {
			return nil
		}
		return &v.HostType
	}).(DataSourceConfluenceSourceConfigurationHostTypePtrOutput)
}

// The Confluence host URL or instance URL.
func (o DataSourceConfluenceSourceConfigurationPtrOutput) HostUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceConfluenceSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.HostUrl
	}).(pulumi.StringPtrOutput)
}

// The type of filtering that you want to apply to certain objects or content of the data source. For example, the PATTERN type is regular expression patterns you can apply to filter your content.
type DataSourceCrawlFilterConfiguration struct {
	// The configuration of filtering certain objects or content types of the data source.
	PatternObjectFilter *DataSourcePatternObjectFilterConfiguration `pulumi:"patternObjectFilter"`
	// The crawl filter type.
	Type DataSourceCrawlFilterConfigurationType `pulumi:"type"`
}

// DataSourceCrawlFilterConfigurationInput is an input type that accepts DataSourceCrawlFilterConfigurationArgs and DataSourceCrawlFilterConfigurationOutput values.
// You can construct a concrete instance of `DataSourceCrawlFilterConfigurationInput` via:
//
//	DataSourceCrawlFilterConfigurationArgs{...}
type DataSourceCrawlFilterConfigurationInput interface {
	pulumi.Input

	ToDataSourceCrawlFilterConfigurationOutput() DataSourceCrawlFilterConfigurationOutput
	ToDataSourceCrawlFilterConfigurationOutputWithContext(context.Context) DataSourceCrawlFilterConfigurationOutput
}

// The type of filtering that you want to apply to certain objects or content of the data source. For example, the PATTERN type is regular expression patterns you can apply to filter your content.
type DataSourceCrawlFilterConfigurationArgs struct {
	// The configuration of filtering certain objects or content types of the data source.
	PatternObjectFilter DataSourcePatternObjectFilterConfigurationPtrInput `pulumi:"patternObjectFilter"`
	// The crawl filter type.
	Type DataSourceCrawlFilterConfigurationTypeInput `pulumi:"type"`
}

func (DataSourceCrawlFilterConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCrawlFilterConfiguration)(nil)).Elem()
}

func (i DataSourceCrawlFilterConfigurationArgs) ToDataSourceCrawlFilterConfigurationOutput() DataSourceCrawlFilterConfigurationOutput {
	return i.ToDataSourceCrawlFilterConfigurationOutputWithContext(context.Background())
}

func (i DataSourceCrawlFilterConfigurationArgs) ToDataSourceCrawlFilterConfigurationOutputWithContext(ctx context.Context) DataSourceCrawlFilterConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCrawlFilterConfigurationOutput)
}

func (i DataSourceCrawlFilterConfigurationArgs) ToDataSourceCrawlFilterConfigurationPtrOutput() DataSourceCrawlFilterConfigurationPtrOutput {
	return i.ToDataSourceCrawlFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceCrawlFilterConfigurationArgs) ToDataSourceCrawlFilterConfigurationPtrOutputWithContext(ctx context.Context) DataSourceCrawlFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCrawlFilterConfigurationOutput).ToDataSourceCrawlFilterConfigurationPtrOutputWithContext(ctx)
}

// DataSourceCrawlFilterConfigurationPtrInput is an input type that accepts DataSourceCrawlFilterConfigurationArgs, DataSourceCrawlFilterConfigurationPtr and DataSourceCrawlFilterConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceCrawlFilterConfigurationPtrInput` via:
//
//	        DataSourceCrawlFilterConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceCrawlFilterConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceCrawlFilterConfigurationPtrOutput() DataSourceCrawlFilterConfigurationPtrOutput
	ToDataSourceCrawlFilterConfigurationPtrOutputWithContext(context.Context) DataSourceCrawlFilterConfigurationPtrOutput
}

type dataSourceCrawlFilterConfigurationPtrType DataSourceCrawlFilterConfigurationArgs

func DataSourceCrawlFilterConfigurationPtr(v *DataSourceCrawlFilterConfigurationArgs) DataSourceCrawlFilterConfigurationPtrInput {
	return (*dataSourceCrawlFilterConfigurationPtrType)(v)
}

func (*dataSourceCrawlFilterConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCrawlFilterConfiguration)(nil)).Elem()
}

func (i *dataSourceCrawlFilterConfigurationPtrType) ToDataSourceCrawlFilterConfigurationPtrOutput() DataSourceCrawlFilterConfigurationPtrOutput {
	return i.ToDataSourceCrawlFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceCrawlFilterConfigurationPtrType) ToDataSourceCrawlFilterConfigurationPtrOutputWithContext(ctx context.Context) DataSourceCrawlFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCrawlFilterConfigurationPtrOutput)
}

// The type of filtering that you want to apply to certain objects or content of the data source. For example, the PATTERN type is regular expression patterns you can apply to filter your content.
type DataSourceCrawlFilterConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceCrawlFilterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCrawlFilterConfiguration)(nil)).Elem()
}

func (o DataSourceCrawlFilterConfigurationOutput) ToDataSourceCrawlFilterConfigurationOutput() DataSourceCrawlFilterConfigurationOutput {
	return o
}

func (o DataSourceCrawlFilterConfigurationOutput) ToDataSourceCrawlFilterConfigurationOutputWithContext(ctx context.Context) DataSourceCrawlFilterConfigurationOutput {
	return o
}

func (o DataSourceCrawlFilterConfigurationOutput) ToDataSourceCrawlFilterConfigurationPtrOutput() DataSourceCrawlFilterConfigurationPtrOutput {
	return o.ToDataSourceCrawlFilterConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceCrawlFilterConfigurationOutput) ToDataSourceCrawlFilterConfigurationPtrOutputWithContext(ctx context.Context) DataSourceCrawlFilterConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceCrawlFilterConfiguration) *DataSourceCrawlFilterConfiguration {
		return &v
	}).(DataSourceCrawlFilterConfigurationPtrOutput)
}

// The configuration of filtering certain objects or content types of the data source.
func (o DataSourceCrawlFilterConfigurationOutput) PatternObjectFilter() DataSourcePatternObjectFilterConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceCrawlFilterConfiguration) *DataSourcePatternObjectFilterConfiguration {
		return v.PatternObjectFilter
	}).(DataSourcePatternObjectFilterConfigurationPtrOutput)
}

// The crawl filter type.
func (o DataSourceCrawlFilterConfigurationOutput) Type() DataSourceCrawlFilterConfigurationTypeOutput {
	return o.ApplyT(func(v DataSourceCrawlFilterConfiguration) DataSourceCrawlFilterConfigurationType { return v.Type }).(DataSourceCrawlFilterConfigurationTypeOutput)
}

type DataSourceCrawlFilterConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceCrawlFilterConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCrawlFilterConfiguration)(nil)).Elem()
}

func (o DataSourceCrawlFilterConfigurationPtrOutput) ToDataSourceCrawlFilterConfigurationPtrOutput() DataSourceCrawlFilterConfigurationPtrOutput {
	return o
}

func (o DataSourceCrawlFilterConfigurationPtrOutput) ToDataSourceCrawlFilterConfigurationPtrOutputWithContext(ctx context.Context) DataSourceCrawlFilterConfigurationPtrOutput {
	return o
}

func (o DataSourceCrawlFilterConfigurationPtrOutput) Elem() DataSourceCrawlFilterConfigurationOutput {
	return o.ApplyT(func(v *DataSourceCrawlFilterConfiguration) DataSourceCrawlFilterConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceCrawlFilterConfiguration
		return ret
	}).(DataSourceCrawlFilterConfigurationOutput)
}

// The configuration of filtering certain objects or content types of the data source.
func (o DataSourceCrawlFilterConfigurationPtrOutput) PatternObjectFilter() DataSourcePatternObjectFilterConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceCrawlFilterConfiguration) *DataSourcePatternObjectFilterConfiguration {
		if v == nil {
			return nil
		}
		return v.PatternObjectFilter
	}).(DataSourcePatternObjectFilterConfigurationPtrOutput)
}

// The crawl filter type.
func (o DataSourceCrawlFilterConfigurationPtrOutput) Type() DataSourceCrawlFilterConfigurationTypePtrOutput {
	return o.ApplyT(func(v *DataSourceCrawlFilterConfiguration) *DataSourceCrawlFilterConfigurationType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(DataSourceCrawlFilterConfigurationTypePtrOutput)
}

// Settings for customizing steps in the data source content ingestion pipeline.
type DataSourceCustomTransformationConfiguration struct {
	// An S3 bucket path for input and output objects.
	IntermediateStorage DataSourceIntermediateStorage `pulumi:"intermediateStorage"`
	// A list of Lambda functions that process documents.
	Transformations []DataSourceTransformation `pulumi:"transformations"`
}

// DataSourceCustomTransformationConfigurationInput is an input type that accepts DataSourceCustomTransformationConfigurationArgs and DataSourceCustomTransformationConfigurationOutput values.
// You can construct a concrete instance of `DataSourceCustomTransformationConfigurationInput` via:
//
//	DataSourceCustomTransformationConfigurationArgs{...}
type DataSourceCustomTransformationConfigurationInput interface {
	pulumi.Input

	ToDataSourceCustomTransformationConfigurationOutput() DataSourceCustomTransformationConfigurationOutput
	ToDataSourceCustomTransformationConfigurationOutputWithContext(context.Context) DataSourceCustomTransformationConfigurationOutput
}

// Settings for customizing steps in the data source content ingestion pipeline.
type DataSourceCustomTransformationConfigurationArgs struct {
	// An S3 bucket path for input and output objects.
	IntermediateStorage DataSourceIntermediateStorageInput `pulumi:"intermediateStorage"`
	// A list of Lambda functions that process documents.
	Transformations DataSourceTransformationArrayInput `pulumi:"transformations"`
}

func (DataSourceCustomTransformationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomTransformationConfiguration)(nil)).Elem()
}

func (i DataSourceCustomTransformationConfigurationArgs) ToDataSourceCustomTransformationConfigurationOutput() DataSourceCustomTransformationConfigurationOutput {
	return i.ToDataSourceCustomTransformationConfigurationOutputWithContext(context.Background())
}

func (i DataSourceCustomTransformationConfigurationArgs) ToDataSourceCustomTransformationConfigurationOutputWithContext(ctx context.Context) DataSourceCustomTransformationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomTransformationConfigurationOutput)
}

func (i DataSourceCustomTransformationConfigurationArgs) ToDataSourceCustomTransformationConfigurationPtrOutput() DataSourceCustomTransformationConfigurationPtrOutput {
	return i.ToDataSourceCustomTransformationConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceCustomTransformationConfigurationArgs) ToDataSourceCustomTransformationConfigurationPtrOutputWithContext(ctx context.Context) DataSourceCustomTransformationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomTransformationConfigurationOutput).ToDataSourceCustomTransformationConfigurationPtrOutputWithContext(ctx)
}

// DataSourceCustomTransformationConfigurationPtrInput is an input type that accepts DataSourceCustomTransformationConfigurationArgs, DataSourceCustomTransformationConfigurationPtr and DataSourceCustomTransformationConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceCustomTransformationConfigurationPtrInput` via:
//
//	        DataSourceCustomTransformationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceCustomTransformationConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceCustomTransformationConfigurationPtrOutput() DataSourceCustomTransformationConfigurationPtrOutput
	ToDataSourceCustomTransformationConfigurationPtrOutputWithContext(context.Context) DataSourceCustomTransformationConfigurationPtrOutput
}

type dataSourceCustomTransformationConfigurationPtrType DataSourceCustomTransformationConfigurationArgs

func DataSourceCustomTransformationConfigurationPtr(v *DataSourceCustomTransformationConfigurationArgs) DataSourceCustomTransformationConfigurationPtrInput {
	return (*dataSourceCustomTransformationConfigurationPtrType)(v)
}

func (*dataSourceCustomTransformationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCustomTransformationConfiguration)(nil)).Elem()
}

func (i *dataSourceCustomTransformationConfigurationPtrType) ToDataSourceCustomTransformationConfigurationPtrOutput() DataSourceCustomTransformationConfigurationPtrOutput {
	return i.ToDataSourceCustomTransformationConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceCustomTransformationConfigurationPtrType) ToDataSourceCustomTransformationConfigurationPtrOutputWithContext(ctx context.Context) DataSourceCustomTransformationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceCustomTransformationConfigurationPtrOutput)
}

// Settings for customizing steps in the data source content ingestion pipeline.
type DataSourceCustomTransformationConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceCustomTransformationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceCustomTransformationConfiguration)(nil)).Elem()
}

func (o DataSourceCustomTransformationConfigurationOutput) ToDataSourceCustomTransformationConfigurationOutput() DataSourceCustomTransformationConfigurationOutput {
	return o
}

func (o DataSourceCustomTransformationConfigurationOutput) ToDataSourceCustomTransformationConfigurationOutputWithContext(ctx context.Context) DataSourceCustomTransformationConfigurationOutput {
	return o
}

func (o DataSourceCustomTransformationConfigurationOutput) ToDataSourceCustomTransformationConfigurationPtrOutput() DataSourceCustomTransformationConfigurationPtrOutput {
	return o.ToDataSourceCustomTransformationConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceCustomTransformationConfigurationOutput) ToDataSourceCustomTransformationConfigurationPtrOutputWithContext(ctx context.Context) DataSourceCustomTransformationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceCustomTransformationConfiguration) *DataSourceCustomTransformationConfiguration {
		return &v
	}).(DataSourceCustomTransformationConfigurationPtrOutput)
}

// An S3 bucket path for input and output objects.
func (o DataSourceCustomTransformationConfigurationOutput) IntermediateStorage() DataSourceIntermediateStorageOutput {
	return o.ApplyT(func(v DataSourceCustomTransformationConfiguration) DataSourceIntermediateStorage {
		return v.IntermediateStorage
	}).(DataSourceIntermediateStorageOutput)
}

// A list of Lambda functions that process documents.
func (o DataSourceCustomTransformationConfigurationOutput) Transformations() DataSourceTransformationArrayOutput {
	return o.ApplyT(func(v DataSourceCustomTransformationConfiguration) []DataSourceTransformation {
		return v.Transformations
	}).(DataSourceTransformationArrayOutput)
}

type DataSourceCustomTransformationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceCustomTransformationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceCustomTransformationConfiguration)(nil)).Elem()
}

func (o DataSourceCustomTransformationConfigurationPtrOutput) ToDataSourceCustomTransformationConfigurationPtrOutput() DataSourceCustomTransformationConfigurationPtrOutput {
	return o
}

func (o DataSourceCustomTransformationConfigurationPtrOutput) ToDataSourceCustomTransformationConfigurationPtrOutputWithContext(ctx context.Context) DataSourceCustomTransformationConfigurationPtrOutput {
	return o
}

func (o DataSourceCustomTransformationConfigurationPtrOutput) Elem() DataSourceCustomTransformationConfigurationOutput {
	return o.ApplyT(func(v *DataSourceCustomTransformationConfiguration) DataSourceCustomTransformationConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceCustomTransformationConfiguration
		return ret
	}).(DataSourceCustomTransformationConfigurationOutput)
}

// An S3 bucket path for input and output objects.
func (o DataSourceCustomTransformationConfigurationPtrOutput) IntermediateStorage() DataSourceIntermediateStoragePtrOutput {
	return o.ApplyT(func(v *DataSourceCustomTransformationConfiguration) *DataSourceIntermediateStorage {
		if v == nil {
			return nil
		}
		return &v.IntermediateStorage
	}).(DataSourceIntermediateStoragePtrOutput)
}

// A list of Lambda functions that process documents.
func (o DataSourceCustomTransformationConfigurationPtrOutput) Transformations() DataSourceTransformationArrayOutput {
	return o.ApplyT(func(v *DataSourceCustomTransformationConfiguration) []DataSourceTransformation {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(DataSourceTransformationArrayOutput)
}

// Configurations for when you choose fixed-size chunking. If you set the chunkingStrategy as NONE, exclude this field.
type DataSourceFixedSizeChunkingConfiguration struct {
	// The maximum number of tokens to include in a chunk.
	MaxTokens int `pulumi:"maxTokens"`
	// The percentage of overlap between adjacent chunks of a data source.
	OverlapPercentage int `pulumi:"overlapPercentage"`
}

// DataSourceFixedSizeChunkingConfigurationInput is an input type that accepts DataSourceFixedSizeChunkingConfigurationArgs and DataSourceFixedSizeChunkingConfigurationOutput values.
// You can construct a concrete instance of `DataSourceFixedSizeChunkingConfigurationInput` via:
//
//	DataSourceFixedSizeChunkingConfigurationArgs{...}
type DataSourceFixedSizeChunkingConfigurationInput interface {
	pulumi.Input

	ToDataSourceFixedSizeChunkingConfigurationOutput() DataSourceFixedSizeChunkingConfigurationOutput
	ToDataSourceFixedSizeChunkingConfigurationOutputWithContext(context.Context) DataSourceFixedSizeChunkingConfigurationOutput
}

// Configurations for when you choose fixed-size chunking. If you set the chunkingStrategy as NONE, exclude this field.
type DataSourceFixedSizeChunkingConfigurationArgs struct {
	// The maximum number of tokens to include in a chunk.
	MaxTokens pulumi.IntInput `pulumi:"maxTokens"`
	// The percentage of overlap between adjacent chunks of a data source.
	OverlapPercentage pulumi.IntInput `pulumi:"overlapPercentage"`
}

func (DataSourceFixedSizeChunkingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceFixedSizeChunkingConfiguration)(nil)).Elem()
}

func (i DataSourceFixedSizeChunkingConfigurationArgs) ToDataSourceFixedSizeChunkingConfigurationOutput() DataSourceFixedSizeChunkingConfigurationOutput {
	return i.ToDataSourceFixedSizeChunkingConfigurationOutputWithContext(context.Background())
}

func (i DataSourceFixedSizeChunkingConfigurationArgs) ToDataSourceFixedSizeChunkingConfigurationOutputWithContext(ctx context.Context) DataSourceFixedSizeChunkingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceFixedSizeChunkingConfigurationOutput)
}

func (i DataSourceFixedSizeChunkingConfigurationArgs) ToDataSourceFixedSizeChunkingConfigurationPtrOutput() DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return i.ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceFixedSizeChunkingConfigurationArgs) ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceFixedSizeChunkingConfigurationOutput).ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(ctx)
}

// DataSourceFixedSizeChunkingConfigurationPtrInput is an input type that accepts DataSourceFixedSizeChunkingConfigurationArgs, DataSourceFixedSizeChunkingConfigurationPtr and DataSourceFixedSizeChunkingConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceFixedSizeChunkingConfigurationPtrInput` via:
//
//	        DataSourceFixedSizeChunkingConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceFixedSizeChunkingConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceFixedSizeChunkingConfigurationPtrOutput() DataSourceFixedSizeChunkingConfigurationPtrOutput
	ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(context.Context) DataSourceFixedSizeChunkingConfigurationPtrOutput
}

type dataSourceFixedSizeChunkingConfigurationPtrType DataSourceFixedSizeChunkingConfigurationArgs

func DataSourceFixedSizeChunkingConfigurationPtr(v *DataSourceFixedSizeChunkingConfigurationArgs) DataSourceFixedSizeChunkingConfigurationPtrInput {
	return (*dataSourceFixedSizeChunkingConfigurationPtrType)(v)
}

func (*dataSourceFixedSizeChunkingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceFixedSizeChunkingConfiguration)(nil)).Elem()
}

func (i *dataSourceFixedSizeChunkingConfigurationPtrType) ToDataSourceFixedSizeChunkingConfigurationPtrOutput() DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return i.ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceFixedSizeChunkingConfigurationPtrType) ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceFixedSizeChunkingConfigurationPtrOutput)
}

// Configurations for when you choose fixed-size chunking. If you set the chunkingStrategy as NONE, exclude this field.
type DataSourceFixedSizeChunkingConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceFixedSizeChunkingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceFixedSizeChunkingConfiguration)(nil)).Elem()
}

func (o DataSourceFixedSizeChunkingConfigurationOutput) ToDataSourceFixedSizeChunkingConfigurationOutput() DataSourceFixedSizeChunkingConfigurationOutput {
	return o
}

func (o DataSourceFixedSizeChunkingConfigurationOutput) ToDataSourceFixedSizeChunkingConfigurationOutputWithContext(ctx context.Context) DataSourceFixedSizeChunkingConfigurationOutput {
	return o
}

func (o DataSourceFixedSizeChunkingConfigurationOutput) ToDataSourceFixedSizeChunkingConfigurationPtrOutput() DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return o.ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceFixedSizeChunkingConfigurationOutput) ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceFixedSizeChunkingConfiguration) *DataSourceFixedSizeChunkingConfiguration {
		return &v
	}).(DataSourceFixedSizeChunkingConfigurationPtrOutput)
}

// The maximum number of tokens to include in a chunk.
func (o DataSourceFixedSizeChunkingConfigurationOutput) MaxTokens() pulumi.IntOutput {
	return o.ApplyT(func(v DataSourceFixedSizeChunkingConfiguration) int { return v.MaxTokens }).(pulumi.IntOutput)
}

// The percentage of overlap between adjacent chunks of a data source.
func (o DataSourceFixedSizeChunkingConfigurationOutput) OverlapPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v DataSourceFixedSizeChunkingConfiguration) int { return v.OverlapPercentage }).(pulumi.IntOutput)
}

type DataSourceFixedSizeChunkingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceFixedSizeChunkingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceFixedSizeChunkingConfiguration)(nil)).Elem()
}

func (o DataSourceFixedSizeChunkingConfigurationPtrOutput) ToDataSourceFixedSizeChunkingConfigurationPtrOutput() DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return o
}

func (o DataSourceFixedSizeChunkingConfigurationPtrOutput) ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return o
}

func (o DataSourceFixedSizeChunkingConfigurationPtrOutput) Elem() DataSourceFixedSizeChunkingConfigurationOutput {
	return o.ApplyT(func(v *DataSourceFixedSizeChunkingConfiguration) DataSourceFixedSizeChunkingConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceFixedSizeChunkingConfiguration
		return ret
	}).(DataSourceFixedSizeChunkingConfigurationOutput)
}

// The maximum number of tokens to include in a chunk.
func (o DataSourceFixedSizeChunkingConfigurationPtrOutput) MaxTokens() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceFixedSizeChunkingConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.MaxTokens
	}).(pulumi.IntPtrOutput)
}

// The percentage of overlap between adjacent chunks of a data source.
func (o DataSourceFixedSizeChunkingConfigurationPtrOutput) OverlapPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceFixedSizeChunkingConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.OverlapPercentage
	}).(pulumi.IntPtrOutput)
}

// Configurations for when you choose hierarchical chunking. If you set the chunkingStrategy as NONE, exclude this field.
type DataSourceHierarchicalChunkingConfiguration struct {
	// Token settings for each layer.
	LevelConfigurations []DataSourceHierarchicalChunkingLevelConfiguration `pulumi:"levelConfigurations"`
	// The number of tokens to repeat across chunks in the same layer.
	OverlapTokens int `pulumi:"overlapTokens"`
}

// DataSourceHierarchicalChunkingConfigurationInput is an input type that accepts DataSourceHierarchicalChunkingConfigurationArgs and DataSourceHierarchicalChunkingConfigurationOutput values.
// You can construct a concrete instance of `DataSourceHierarchicalChunkingConfigurationInput` via:
//
//	DataSourceHierarchicalChunkingConfigurationArgs{...}
type DataSourceHierarchicalChunkingConfigurationInput interface {
	pulumi.Input

	ToDataSourceHierarchicalChunkingConfigurationOutput() DataSourceHierarchicalChunkingConfigurationOutput
	ToDataSourceHierarchicalChunkingConfigurationOutputWithContext(context.Context) DataSourceHierarchicalChunkingConfigurationOutput
}

// Configurations for when you choose hierarchical chunking. If you set the chunkingStrategy as NONE, exclude this field.
type DataSourceHierarchicalChunkingConfigurationArgs struct {
	// Token settings for each layer.
	LevelConfigurations DataSourceHierarchicalChunkingLevelConfigurationArrayInput `pulumi:"levelConfigurations"`
	// The number of tokens to repeat across chunks in the same layer.
	OverlapTokens pulumi.IntInput `pulumi:"overlapTokens"`
}

func (DataSourceHierarchicalChunkingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHierarchicalChunkingConfiguration)(nil)).Elem()
}

func (i DataSourceHierarchicalChunkingConfigurationArgs) ToDataSourceHierarchicalChunkingConfigurationOutput() DataSourceHierarchicalChunkingConfigurationOutput {
	return i.ToDataSourceHierarchicalChunkingConfigurationOutputWithContext(context.Background())
}

func (i DataSourceHierarchicalChunkingConfigurationArgs) ToDataSourceHierarchicalChunkingConfigurationOutputWithContext(ctx context.Context) DataSourceHierarchicalChunkingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHierarchicalChunkingConfigurationOutput)
}

func (i DataSourceHierarchicalChunkingConfigurationArgs) ToDataSourceHierarchicalChunkingConfigurationPtrOutput() DataSourceHierarchicalChunkingConfigurationPtrOutput {
	return i.ToDataSourceHierarchicalChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceHierarchicalChunkingConfigurationArgs) ToDataSourceHierarchicalChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceHierarchicalChunkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHierarchicalChunkingConfigurationOutput).ToDataSourceHierarchicalChunkingConfigurationPtrOutputWithContext(ctx)
}

// DataSourceHierarchicalChunkingConfigurationPtrInput is an input type that accepts DataSourceHierarchicalChunkingConfigurationArgs, DataSourceHierarchicalChunkingConfigurationPtr and DataSourceHierarchicalChunkingConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceHierarchicalChunkingConfigurationPtrInput` via:
//
//	        DataSourceHierarchicalChunkingConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceHierarchicalChunkingConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceHierarchicalChunkingConfigurationPtrOutput() DataSourceHierarchicalChunkingConfigurationPtrOutput
	ToDataSourceHierarchicalChunkingConfigurationPtrOutputWithContext(context.Context) DataSourceHierarchicalChunkingConfigurationPtrOutput
}

type dataSourceHierarchicalChunkingConfigurationPtrType DataSourceHierarchicalChunkingConfigurationArgs

func DataSourceHierarchicalChunkingConfigurationPtr(v *DataSourceHierarchicalChunkingConfigurationArgs) DataSourceHierarchicalChunkingConfigurationPtrInput {
	return (*dataSourceHierarchicalChunkingConfigurationPtrType)(v)
}

func (*dataSourceHierarchicalChunkingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHierarchicalChunkingConfiguration)(nil)).Elem()
}

func (i *dataSourceHierarchicalChunkingConfigurationPtrType) ToDataSourceHierarchicalChunkingConfigurationPtrOutput() DataSourceHierarchicalChunkingConfigurationPtrOutput {
	return i.ToDataSourceHierarchicalChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceHierarchicalChunkingConfigurationPtrType) ToDataSourceHierarchicalChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceHierarchicalChunkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHierarchicalChunkingConfigurationPtrOutput)
}

// Configurations for when you choose hierarchical chunking. If you set the chunkingStrategy as NONE, exclude this field.
type DataSourceHierarchicalChunkingConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceHierarchicalChunkingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHierarchicalChunkingConfiguration)(nil)).Elem()
}

func (o DataSourceHierarchicalChunkingConfigurationOutput) ToDataSourceHierarchicalChunkingConfigurationOutput() DataSourceHierarchicalChunkingConfigurationOutput {
	return o
}

func (o DataSourceHierarchicalChunkingConfigurationOutput) ToDataSourceHierarchicalChunkingConfigurationOutputWithContext(ctx context.Context) DataSourceHierarchicalChunkingConfigurationOutput {
	return o
}

func (o DataSourceHierarchicalChunkingConfigurationOutput) ToDataSourceHierarchicalChunkingConfigurationPtrOutput() DataSourceHierarchicalChunkingConfigurationPtrOutput {
	return o.ToDataSourceHierarchicalChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceHierarchicalChunkingConfigurationOutput) ToDataSourceHierarchicalChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceHierarchicalChunkingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceHierarchicalChunkingConfiguration) *DataSourceHierarchicalChunkingConfiguration {
		return &v
	}).(DataSourceHierarchicalChunkingConfigurationPtrOutput)
}

// Token settings for each layer.
func (o DataSourceHierarchicalChunkingConfigurationOutput) LevelConfigurations() DataSourceHierarchicalChunkingLevelConfigurationArrayOutput {
	return o.ApplyT(func(v DataSourceHierarchicalChunkingConfiguration) []DataSourceHierarchicalChunkingLevelConfiguration {
		return v.LevelConfigurations
	}).(DataSourceHierarchicalChunkingLevelConfigurationArrayOutput)
}

// The number of tokens to repeat across chunks in the same layer.
func (o DataSourceHierarchicalChunkingConfigurationOutput) OverlapTokens() pulumi.IntOutput {
	return o.ApplyT(func(v DataSourceHierarchicalChunkingConfiguration) int { return v.OverlapTokens }).(pulumi.IntOutput)
}

type DataSourceHierarchicalChunkingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceHierarchicalChunkingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHierarchicalChunkingConfiguration)(nil)).Elem()
}

func (o DataSourceHierarchicalChunkingConfigurationPtrOutput) ToDataSourceHierarchicalChunkingConfigurationPtrOutput() DataSourceHierarchicalChunkingConfigurationPtrOutput {
	return o
}

func (o DataSourceHierarchicalChunkingConfigurationPtrOutput) ToDataSourceHierarchicalChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceHierarchicalChunkingConfigurationPtrOutput {
	return o
}

func (o DataSourceHierarchicalChunkingConfigurationPtrOutput) Elem() DataSourceHierarchicalChunkingConfigurationOutput {
	return o.ApplyT(func(v *DataSourceHierarchicalChunkingConfiguration) DataSourceHierarchicalChunkingConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceHierarchicalChunkingConfiguration
		return ret
	}).(DataSourceHierarchicalChunkingConfigurationOutput)
}

// Token settings for each layer.
func (o DataSourceHierarchicalChunkingConfigurationPtrOutput) LevelConfigurations() DataSourceHierarchicalChunkingLevelConfigurationArrayOutput {
	return o.ApplyT(func(v *DataSourceHierarchicalChunkingConfiguration) []DataSourceHierarchicalChunkingLevelConfiguration {
		if v == nil {
			return nil
		}
		return v.LevelConfigurations
	}).(DataSourceHierarchicalChunkingLevelConfigurationArrayOutput)
}

// The number of tokens to repeat across chunks in the same layer.
func (o DataSourceHierarchicalChunkingConfigurationPtrOutput) OverlapTokens() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceHierarchicalChunkingConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.OverlapTokens
	}).(pulumi.IntPtrOutput)
}

// Token settings for a layer in a hierarchical chunking configuration.
type DataSourceHierarchicalChunkingLevelConfiguration struct {
	// The maximum number of tokens that a chunk can contain in this layer.
	MaxTokens int `pulumi:"maxTokens"`
}

// DataSourceHierarchicalChunkingLevelConfigurationInput is an input type that accepts DataSourceHierarchicalChunkingLevelConfigurationArgs and DataSourceHierarchicalChunkingLevelConfigurationOutput values.
// You can construct a concrete instance of `DataSourceHierarchicalChunkingLevelConfigurationInput` via:
//
//	DataSourceHierarchicalChunkingLevelConfigurationArgs{...}
type DataSourceHierarchicalChunkingLevelConfigurationInput interface {
	pulumi.Input

	ToDataSourceHierarchicalChunkingLevelConfigurationOutput() DataSourceHierarchicalChunkingLevelConfigurationOutput
	ToDataSourceHierarchicalChunkingLevelConfigurationOutputWithContext(context.Context) DataSourceHierarchicalChunkingLevelConfigurationOutput
}

// Token settings for a layer in a hierarchical chunking configuration.
type DataSourceHierarchicalChunkingLevelConfigurationArgs struct {
	// The maximum number of tokens that a chunk can contain in this layer.
	MaxTokens pulumi.IntInput `pulumi:"maxTokens"`
}

func (DataSourceHierarchicalChunkingLevelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHierarchicalChunkingLevelConfiguration)(nil)).Elem()
}

func (i DataSourceHierarchicalChunkingLevelConfigurationArgs) ToDataSourceHierarchicalChunkingLevelConfigurationOutput() DataSourceHierarchicalChunkingLevelConfigurationOutput {
	return i.ToDataSourceHierarchicalChunkingLevelConfigurationOutputWithContext(context.Background())
}

func (i DataSourceHierarchicalChunkingLevelConfigurationArgs) ToDataSourceHierarchicalChunkingLevelConfigurationOutputWithContext(ctx context.Context) DataSourceHierarchicalChunkingLevelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHierarchicalChunkingLevelConfigurationOutput)
}

// DataSourceHierarchicalChunkingLevelConfigurationArrayInput is an input type that accepts DataSourceHierarchicalChunkingLevelConfigurationArray and DataSourceHierarchicalChunkingLevelConfigurationArrayOutput values.
// You can construct a concrete instance of `DataSourceHierarchicalChunkingLevelConfigurationArrayInput` via:
//
//	DataSourceHierarchicalChunkingLevelConfigurationArray{ DataSourceHierarchicalChunkingLevelConfigurationArgs{...} }
type DataSourceHierarchicalChunkingLevelConfigurationArrayInput interface {
	pulumi.Input

	ToDataSourceHierarchicalChunkingLevelConfigurationArrayOutput() DataSourceHierarchicalChunkingLevelConfigurationArrayOutput
	ToDataSourceHierarchicalChunkingLevelConfigurationArrayOutputWithContext(context.Context) DataSourceHierarchicalChunkingLevelConfigurationArrayOutput
}

type DataSourceHierarchicalChunkingLevelConfigurationArray []DataSourceHierarchicalChunkingLevelConfigurationInput

func (DataSourceHierarchicalChunkingLevelConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceHierarchicalChunkingLevelConfiguration)(nil)).Elem()
}

func (i DataSourceHierarchicalChunkingLevelConfigurationArray) ToDataSourceHierarchicalChunkingLevelConfigurationArrayOutput() DataSourceHierarchicalChunkingLevelConfigurationArrayOutput {
	return i.ToDataSourceHierarchicalChunkingLevelConfigurationArrayOutputWithContext(context.Background())
}

func (i DataSourceHierarchicalChunkingLevelConfigurationArray) ToDataSourceHierarchicalChunkingLevelConfigurationArrayOutputWithContext(ctx context.Context) DataSourceHierarchicalChunkingLevelConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHierarchicalChunkingLevelConfigurationArrayOutput)
}

// Token settings for a layer in a hierarchical chunking configuration.
type DataSourceHierarchicalChunkingLevelConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceHierarchicalChunkingLevelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHierarchicalChunkingLevelConfiguration)(nil)).Elem()
}

func (o DataSourceHierarchicalChunkingLevelConfigurationOutput) ToDataSourceHierarchicalChunkingLevelConfigurationOutput() DataSourceHierarchicalChunkingLevelConfigurationOutput {
	return o
}

func (o DataSourceHierarchicalChunkingLevelConfigurationOutput) ToDataSourceHierarchicalChunkingLevelConfigurationOutputWithContext(ctx context.Context) DataSourceHierarchicalChunkingLevelConfigurationOutput {
	return o
}

// The maximum number of tokens that a chunk can contain in this layer.
func (o DataSourceHierarchicalChunkingLevelConfigurationOutput) MaxTokens() pulumi.IntOutput {
	return o.ApplyT(func(v DataSourceHierarchicalChunkingLevelConfiguration) int { return v.MaxTokens }).(pulumi.IntOutput)
}

type DataSourceHierarchicalChunkingLevelConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DataSourceHierarchicalChunkingLevelConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceHierarchicalChunkingLevelConfiguration)(nil)).Elem()
}

func (o DataSourceHierarchicalChunkingLevelConfigurationArrayOutput) ToDataSourceHierarchicalChunkingLevelConfigurationArrayOutput() DataSourceHierarchicalChunkingLevelConfigurationArrayOutput {
	return o
}

func (o DataSourceHierarchicalChunkingLevelConfigurationArrayOutput) ToDataSourceHierarchicalChunkingLevelConfigurationArrayOutputWithContext(ctx context.Context) DataSourceHierarchicalChunkingLevelConfigurationArrayOutput {
	return o
}

func (o DataSourceHierarchicalChunkingLevelConfigurationArrayOutput) Index(i pulumi.IntInput) DataSourceHierarchicalChunkingLevelConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceHierarchicalChunkingLevelConfiguration {
		return vs[0].([]DataSourceHierarchicalChunkingLevelConfiguration)[vs[1].(int)]
	}).(DataSourceHierarchicalChunkingLevelConfigurationOutput)
}

// A location for storing content from data sources temporarily as it is processed by custom components in the ingestion pipeline.
type DataSourceIntermediateStorage struct {
	// An S3 bucket path.
	S3Location DataSourceS3Location `pulumi:"s3Location"`
}

// DataSourceIntermediateStorageInput is an input type that accepts DataSourceIntermediateStorageArgs and DataSourceIntermediateStorageOutput values.
// You can construct a concrete instance of `DataSourceIntermediateStorageInput` via:
//
//	DataSourceIntermediateStorageArgs{...}
type DataSourceIntermediateStorageInput interface {
	pulumi.Input

	ToDataSourceIntermediateStorageOutput() DataSourceIntermediateStorageOutput
	ToDataSourceIntermediateStorageOutputWithContext(context.Context) DataSourceIntermediateStorageOutput
}

// A location for storing content from data sources temporarily as it is processed by custom components in the ingestion pipeline.
type DataSourceIntermediateStorageArgs struct {
	// An S3 bucket path.
	S3Location DataSourceS3LocationInput `pulumi:"s3Location"`
}

func (DataSourceIntermediateStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceIntermediateStorage)(nil)).Elem()
}

func (i DataSourceIntermediateStorageArgs) ToDataSourceIntermediateStorageOutput() DataSourceIntermediateStorageOutput {
	return i.ToDataSourceIntermediateStorageOutputWithContext(context.Background())
}

func (i DataSourceIntermediateStorageArgs) ToDataSourceIntermediateStorageOutputWithContext(ctx context.Context) DataSourceIntermediateStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceIntermediateStorageOutput)
}

func (i DataSourceIntermediateStorageArgs) ToDataSourceIntermediateStoragePtrOutput() DataSourceIntermediateStoragePtrOutput {
	return i.ToDataSourceIntermediateStoragePtrOutputWithContext(context.Background())
}

func (i DataSourceIntermediateStorageArgs) ToDataSourceIntermediateStoragePtrOutputWithContext(ctx context.Context) DataSourceIntermediateStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceIntermediateStorageOutput).ToDataSourceIntermediateStoragePtrOutputWithContext(ctx)
}

// DataSourceIntermediateStoragePtrInput is an input type that accepts DataSourceIntermediateStorageArgs, DataSourceIntermediateStoragePtr and DataSourceIntermediateStoragePtrOutput values.
// You can construct a concrete instance of `DataSourceIntermediateStoragePtrInput` via:
//
//	        DataSourceIntermediateStorageArgs{...}
//
//	or:
//
//	        nil
type DataSourceIntermediateStoragePtrInput interface {
	pulumi.Input

	ToDataSourceIntermediateStoragePtrOutput() DataSourceIntermediateStoragePtrOutput
	ToDataSourceIntermediateStoragePtrOutputWithContext(context.Context) DataSourceIntermediateStoragePtrOutput
}

type dataSourceIntermediateStoragePtrType DataSourceIntermediateStorageArgs

func DataSourceIntermediateStoragePtr(v *DataSourceIntermediateStorageArgs) DataSourceIntermediateStoragePtrInput {
	return (*dataSourceIntermediateStoragePtrType)(v)
}

func (*dataSourceIntermediateStoragePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceIntermediateStorage)(nil)).Elem()
}

func (i *dataSourceIntermediateStoragePtrType) ToDataSourceIntermediateStoragePtrOutput() DataSourceIntermediateStoragePtrOutput {
	return i.ToDataSourceIntermediateStoragePtrOutputWithContext(context.Background())
}

func (i *dataSourceIntermediateStoragePtrType) ToDataSourceIntermediateStoragePtrOutputWithContext(ctx context.Context) DataSourceIntermediateStoragePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceIntermediateStoragePtrOutput)
}

// A location for storing content from data sources temporarily as it is processed by custom components in the ingestion pipeline.
type DataSourceIntermediateStorageOutput struct{ *pulumi.OutputState }

func (DataSourceIntermediateStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceIntermediateStorage)(nil)).Elem()
}

func (o DataSourceIntermediateStorageOutput) ToDataSourceIntermediateStorageOutput() DataSourceIntermediateStorageOutput {
	return o
}

func (o DataSourceIntermediateStorageOutput) ToDataSourceIntermediateStorageOutputWithContext(ctx context.Context) DataSourceIntermediateStorageOutput {
	return o
}

func (o DataSourceIntermediateStorageOutput) ToDataSourceIntermediateStoragePtrOutput() DataSourceIntermediateStoragePtrOutput {
	return o.ToDataSourceIntermediateStoragePtrOutputWithContext(context.Background())
}

func (o DataSourceIntermediateStorageOutput) ToDataSourceIntermediateStoragePtrOutputWithContext(ctx context.Context) DataSourceIntermediateStoragePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceIntermediateStorage) *DataSourceIntermediateStorage {
		return &v
	}).(DataSourceIntermediateStoragePtrOutput)
}

// An S3 bucket path.
func (o DataSourceIntermediateStorageOutput) S3Location() DataSourceS3LocationOutput {
	return o.ApplyT(func(v DataSourceIntermediateStorage) DataSourceS3Location { return v.S3Location }).(DataSourceS3LocationOutput)
}

type DataSourceIntermediateStoragePtrOutput struct{ *pulumi.OutputState }

func (DataSourceIntermediateStoragePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceIntermediateStorage)(nil)).Elem()
}

func (o DataSourceIntermediateStoragePtrOutput) ToDataSourceIntermediateStoragePtrOutput() DataSourceIntermediateStoragePtrOutput {
	return o
}

func (o DataSourceIntermediateStoragePtrOutput) ToDataSourceIntermediateStoragePtrOutputWithContext(ctx context.Context) DataSourceIntermediateStoragePtrOutput {
	return o
}

func (o DataSourceIntermediateStoragePtrOutput) Elem() DataSourceIntermediateStorageOutput {
	return o.ApplyT(func(v *DataSourceIntermediateStorage) DataSourceIntermediateStorage {
		if v != nil {
			return *v
		}
		var ret DataSourceIntermediateStorage
		return ret
	}).(DataSourceIntermediateStorageOutput)
}

// An S3 bucket path.
func (o DataSourceIntermediateStoragePtrOutput) S3Location() DataSourceS3LocationPtrOutput {
	return o.ApplyT(func(v *DataSourceIntermediateStorage) *DataSourceS3Location {
		if v == nil {
			return nil
		}
		return &v.S3Location
	}).(DataSourceS3LocationPtrOutput)
}

// Settings for parsing document contents
type DataSourceParsingConfiguration struct {
	// Settings for a foundation model used to parse documents for a data source.
	BedrockFoundationModelConfiguration *DataSourceBedrockFoundationModelConfiguration `pulumi:"bedrockFoundationModelConfiguration"`
	// The parsing strategy for the data source.
	ParsingStrategy DataSourceParsingStrategy `pulumi:"parsingStrategy"`
}

// DataSourceParsingConfigurationInput is an input type that accepts DataSourceParsingConfigurationArgs and DataSourceParsingConfigurationOutput values.
// You can construct a concrete instance of `DataSourceParsingConfigurationInput` via:
//
//	DataSourceParsingConfigurationArgs{...}
type DataSourceParsingConfigurationInput interface {
	pulumi.Input

	ToDataSourceParsingConfigurationOutput() DataSourceParsingConfigurationOutput
	ToDataSourceParsingConfigurationOutputWithContext(context.Context) DataSourceParsingConfigurationOutput
}

// Settings for parsing document contents
type DataSourceParsingConfigurationArgs struct {
	// Settings for a foundation model used to parse documents for a data source.
	BedrockFoundationModelConfiguration DataSourceBedrockFoundationModelConfigurationPtrInput `pulumi:"bedrockFoundationModelConfiguration"`
	// The parsing strategy for the data source.
	ParsingStrategy DataSourceParsingStrategyInput `pulumi:"parsingStrategy"`
}

func (DataSourceParsingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceParsingConfiguration)(nil)).Elem()
}

func (i DataSourceParsingConfigurationArgs) ToDataSourceParsingConfigurationOutput() DataSourceParsingConfigurationOutput {
	return i.ToDataSourceParsingConfigurationOutputWithContext(context.Background())
}

func (i DataSourceParsingConfigurationArgs) ToDataSourceParsingConfigurationOutputWithContext(ctx context.Context) DataSourceParsingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParsingConfigurationOutput)
}

func (i DataSourceParsingConfigurationArgs) ToDataSourceParsingConfigurationPtrOutput() DataSourceParsingConfigurationPtrOutput {
	return i.ToDataSourceParsingConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceParsingConfigurationArgs) ToDataSourceParsingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceParsingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParsingConfigurationOutput).ToDataSourceParsingConfigurationPtrOutputWithContext(ctx)
}

// DataSourceParsingConfigurationPtrInput is an input type that accepts DataSourceParsingConfigurationArgs, DataSourceParsingConfigurationPtr and DataSourceParsingConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceParsingConfigurationPtrInput` via:
//
//	        DataSourceParsingConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceParsingConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceParsingConfigurationPtrOutput() DataSourceParsingConfigurationPtrOutput
	ToDataSourceParsingConfigurationPtrOutputWithContext(context.Context) DataSourceParsingConfigurationPtrOutput
}

type dataSourceParsingConfigurationPtrType DataSourceParsingConfigurationArgs

func DataSourceParsingConfigurationPtr(v *DataSourceParsingConfigurationArgs) DataSourceParsingConfigurationPtrInput {
	return (*dataSourceParsingConfigurationPtrType)(v)
}

func (*dataSourceParsingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceParsingConfiguration)(nil)).Elem()
}

func (i *dataSourceParsingConfigurationPtrType) ToDataSourceParsingConfigurationPtrOutput() DataSourceParsingConfigurationPtrOutput {
	return i.ToDataSourceParsingConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceParsingConfigurationPtrType) ToDataSourceParsingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceParsingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParsingConfigurationPtrOutput)
}

// Settings for parsing document contents
type DataSourceParsingConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceParsingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceParsingConfiguration)(nil)).Elem()
}

func (o DataSourceParsingConfigurationOutput) ToDataSourceParsingConfigurationOutput() DataSourceParsingConfigurationOutput {
	return o
}

func (o DataSourceParsingConfigurationOutput) ToDataSourceParsingConfigurationOutputWithContext(ctx context.Context) DataSourceParsingConfigurationOutput {
	return o
}

func (o DataSourceParsingConfigurationOutput) ToDataSourceParsingConfigurationPtrOutput() DataSourceParsingConfigurationPtrOutput {
	return o.ToDataSourceParsingConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceParsingConfigurationOutput) ToDataSourceParsingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceParsingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceParsingConfiguration) *DataSourceParsingConfiguration {
		return &v
	}).(DataSourceParsingConfigurationPtrOutput)
}

// Settings for a foundation model used to parse documents for a data source.
func (o DataSourceParsingConfigurationOutput) BedrockFoundationModelConfiguration() DataSourceBedrockFoundationModelConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceParsingConfiguration) *DataSourceBedrockFoundationModelConfiguration {
		return v.BedrockFoundationModelConfiguration
	}).(DataSourceBedrockFoundationModelConfigurationPtrOutput)
}

// The parsing strategy for the data source.
func (o DataSourceParsingConfigurationOutput) ParsingStrategy() DataSourceParsingStrategyOutput {
	return o.ApplyT(func(v DataSourceParsingConfiguration) DataSourceParsingStrategy { return v.ParsingStrategy }).(DataSourceParsingStrategyOutput)
}

type DataSourceParsingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceParsingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceParsingConfiguration)(nil)).Elem()
}

func (o DataSourceParsingConfigurationPtrOutput) ToDataSourceParsingConfigurationPtrOutput() DataSourceParsingConfigurationPtrOutput {
	return o
}

func (o DataSourceParsingConfigurationPtrOutput) ToDataSourceParsingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceParsingConfigurationPtrOutput {
	return o
}

func (o DataSourceParsingConfigurationPtrOutput) Elem() DataSourceParsingConfigurationOutput {
	return o.ApplyT(func(v *DataSourceParsingConfiguration) DataSourceParsingConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceParsingConfiguration
		return ret
	}).(DataSourceParsingConfigurationOutput)
}

// Settings for a foundation model used to parse documents for a data source.
func (o DataSourceParsingConfigurationPtrOutput) BedrockFoundationModelConfiguration() DataSourceBedrockFoundationModelConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceParsingConfiguration) *DataSourceBedrockFoundationModelConfiguration {
		if v == nil {
			return nil
		}
		return v.BedrockFoundationModelConfiguration
	}).(DataSourceBedrockFoundationModelConfigurationPtrOutput)
}

// The parsing strategy for the data source.
func (o DataSourceParsingConfigurationPtrOutput) ParsingStrategy() DataSourceParsingStrategyPtrOutput {
	return o.ApplyT(func(v *DataSourceParsingConfiguration) *DataSourceParsingStrategy {
		if v == nil {
			return nil
		}
		return &v.ParsingStrategy
	}).(DataSourceParsingStrategyPtrOutput)
}

// Instructions for interpreting the contents of a document.
type DataSourceParsingPrompt struct {
	// Instructions for interpreting the contents of a document.
	ParsingPromptText string `pulumi:"parsingPromptText"`
}

// DataSourceParsingPromptInput is an input type that accepts DataSourceParsingPromptArgs and DataSourceParsingPromptOutput values.
// You can construct a concrete instance of `DataSourceParsingPromptInput` via:
//
//	DataSourceParsingPromptArgs{...}
type DataSourceParsingPromptInput interface {
	pulumi.Input

	ToDataSourceParsingPromptOutput() DataSourceParsingPromptOutput
	ToDataSourceParsingPromptOutputWithContext(context.Context) DataSourceParsingPromptOutput
}

// Instructions for interpreting the contents of a document.
type DataSourceParsingPromptArgs struct {
	// Instructions for interpreting the contents of a document.
	ParsingPromptText pulumi.StringInput `pulumi:"parsingPromptText"`
}

func (DataSourceParsingPromptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceParsingPrompt)(nil)).Elem()
}

func (i DataSourceParsingPromptArgs) ToDataSourceParsingPromptOutput() DataSourceParsingPromptOutput {
	return i.ToDataSourceParsingPromptOutputWithContext(context.Background())
}

func (i DataSourceParsingPromptArgs) ToDataSourceParsingPromptOutputWithContext(ctx context.Context) DataSourceParsingPromptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParsingPromptOutput)
}

func (i DataSourceParsingPromptArgs) ToDataSourceParsingPromptPtrOutput() DataSourceParsingPromptPtrOutput {
	return i.ToDataSourceParsingPromptPtrOutputWithContext(context.Background())
}

func (i DataSourceParsingPromptArgs) ToDataSourceParsingPromptPtrOutputWithContext(ctx context.Context) DataSourceParsingPromptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParsingPromptOutput).ToDataSourceParsingPromptPtrOutputWithContext(ctx)
}

// DataSourceParsingPromptPtrInput is an input type that accepts DataSourceParsingPromptArgs, DataSourceParsingPromptPtr and DataSourceParsingPromptPtrOutput values.
// You can construct a concrete instance of `DataSourceParsingPromptPtrInput` via:
//
//	        DataSourceParsingPromptArgs{...}
//
//	or:
//
//	        nil
type DataSourceParsingPromptPtrInput interface {
	pulumi.Input

	ToDataSourceParsingPromptPtrOutput() DataSourceParsingPromptPtrOutput
	ToDataSourceParsingPromptPtrOutputWithContext(context.Context) DataSourceParsingPromptPtrOutput
}

type dataSourceParsingPromptPtrType DataSourceParsingPromptArgs

func DataSourceParsingPromptPtr(v *DataSourceParsingPromptArgs) DataSourceParsingPromptPtrInput {
	return (*dataSourceParsingPromptPtrType)(v)
}

func (*dataSourceParsingPromptPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceParsingPrompt)(nil)).Elem()
}

func (i *dataSourceParsingPromptPtrType) ToDataSourceParsingPromptPtrOutput() DataSourceParsingPromptPtrOutput {
	return i.ToDataSourceParsingPromptPtrOutputWithContext(context.Background())
}

func (i *dataSourceParsingPromptPtrType) ToDataSourceParsingPromptPtrOutputWithContext(ctx context.Context) DataSourceParsingPromptPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceParsingPromptPtrOutput)
}

// Instructions for interpreting the contents of a document.
type DataSourceParsingPromptOutput struct{ *pulumi.OutputState }

func (DataSourceParsingPromptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceParsingPrompt)(nil)).Elem()
}

func (o DataSourceParsingPromptOutput) ToDataSourceParsingPromptOutput() DataSourceParsingPromptOutput {
	return o
}

func (o DataSourceParsingPromptOutput) ToDataSourceParsingPromptOutputWithContext(ctx context.Context) DataSourceParsingPromptOutput {
	return o
}

func (o DataSourceParsingPromptOutput) ToDataSourceParsingPromptPtrOutput() DataSourceParsingPromptPtrOutput {
	return o.ToDataSourceParsingPromptPtrOutputWithContext(context.Background())
}

func (o DataSourceParsingPromptOutput) ToDataSourceParsingPromptPtrOutputWithContext(ctx context.Context) DataSourceParsingPromptPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceParsingPrompt) *DataSourceParsingPrompt {
		return &v
	}).(DataSourceParsingPromptPtrOutput)
}

// Instructions for interpreting the contents of a document.
func (o DataSourceParsingPromptOutput) ParsingPromptText() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceParsingPrompt) string { return v.ParsingPromptText }).(pulumi.StringOutput)
}

type DataSourceParsingPromptPtrOutput struct{ *pulumi.OutputState }

func (DataSourceParsingPromptPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceParsingPrompt)(nil)).Elem()
}

func (o DataSourceParsingPromptPtrOutput) ToDataSourceParsingPromptPtrOutput() DataSourceParsingPromptPtrOutput {
	return o
}

func (o DataSourceParsingPromptPtrOutput) ToDataSourceParsingPromptPtrOutputWithContext(ctx context.Context) DataSourceParsingPromptPtrOutput {
	return o
}

func (o DataSourceParsingPromptPtrOutput) Elem() DataSourceParsingPromptOutput {
	return o.ApplyT(func(v *DataSourceParsingPrompt) DataSourceParsingPrompt {
		if v != nil {
			return *v
		}
		var ret DataSourceParsingPrompt
		return ret
	}).(DataSourceParsingPromptOutput)
}

// Instructions for interpreting the contents of a document.
func (o DataSourceParsingPromptPtrOutput) ParsingPromptText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceParsingPrompt) *string {
		if v == nil {
			return nil
		}
		return &v.ParsingPromptText
	}).(pulumi.StringPtrOutput)
}

// The specific filters applied to your data source content. You can filter out or include certain content.
type DataSourcePatternObjectFilter struct {
	ExclusionFilters []string `pulumi:"exclusionFilters"`
	InclusionFilters []string `pulumi:"inclusionFilters"`
	// The supported object type or content type of the data source.
	ObjectType string `pulumi:"objectType"`
}

// DataSourcePatternObjectFilterInput is an input type that accepts DataSourcePatternObjectFilterArgs and DataSourcePatternObjectFilterOutput values.
// You can construct a concrete instance of `DataSourcePatternObjectFilterInput` via:
//
//	DataSourcePatternObjectFilterArgs{...}
type DataSourcePatternObjectFilterInput interface {
	pulumi.Input

	ToDataSourcePatternObjectFilterOutput() DataSourcePatternObjectFilterOutput
	ToDataSourcePatternObjectFilterOutputWithContext(context.Context) DataSourcePatternObjectFilterOutput
}

// The specific filters applied to your data source content. You can filter out or include certain content.
type DataSourcePatternObjectFilterArgs struct {
	ExclusionFilters pulumi.StringArrayInput `pulumi:"exclusionFilters"`
	InclusionFilters pulumi.StringArrayInput `pulumi:"inclusionFilters"`
	// The supported object type or content type of the data source.
	ObjectType pulumi.StringInput `pulumi:"objectType"`
}

func (DataSourcePatternObjectFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePatternObjectFilter)(nil)).Elem()
}

func (i DataSourcePatternObjectFilterArgs) ToDataSourcePatternObjectFilterOutput() DataSourcePatternObjectFilterOutput {
	return i.ToDataSourcePatternObjectFilterOutputWithContext(context.Background())
}

func (i DataSourcePatternObjectFilterArgs) ToDataSourcePatternObjectFilterOutputWithContext(ctx context.Context) DataSourcePatternObjectFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePatternObjectFilterOutput)
}

// DataSourcePatternObjectFilterArrayInput is an input type that accepts DataSourcePatternObjectFilterArray and DataSourcePatternObjectFilterArrayOutput values.
// You can construct a concrete instance of `DataSourcePatternObjectFilterArrayInput` via:
//
//	DataSourcePatternObjectFilterArray{ DataSourcePatternObjectFilterArgs{...} }
type DataSourcePatternObjectFilterArrayInput interface {
	pulumi.Input

	ToDataSourcePatternObjectFilterArrayOutput() DataSourcePatternObjectFilterArrayOutput
	ToDataSourcePatternObjectFilterArrayOutputWithContext(context.Context) DataSourcePatternObjectFilterArrayOutput
}

type DataSourcePatternObjectFilterArray []DataSourcePatternObjectFilterInput

func (DataSourcePatternObjectFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourcePatternObjectFilter)(nil)).Elem()
}

func (i DataSourcePatternObjectFilterArray) ToDataSourcePatternObjectFilterArrayOutput() DataSourcePatternObjectFilterArrayOutput {
	return i.ToDataSourcePatternObjectFilterArrayOutputWithContext(context.Background())
}

func (i DataSourcePatternObjectFilterArray) ToDataSourcePatternObjectFilterArrayOutputWithContext(ctx context.Context) DataSourcePatternObjectFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePatternObjectFilterArrayOutput)
}

// The specific filters applied to your data source content. You can filter out or include certain content.
type DataSourcePatternObjectFilterOutput struct{ *pulumi.OutputState }

func (DataSourcePatternObjectFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePatternObjectFilter)(nil)).Elem()
}

func (o DataSourcePatternObjectFilterOutput) ToDataSourcePatternObjectFilterOutput() DataSourcePatternObjectFilterOutput {
	return o
}

func (o DataSourcePatternObjectFilterOutput) ToDataSourcePatternObjectFilterOutputWithContext(ctx context.Context) DataSourcePatternObjectFilterOutput {
	return o
}

func (o DataSourcePatternObjectFilterOutput) ExclusionFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSourcePatternObjectFilter) []string { return v.ExclusionFilters }).(pulumi.StringArrayOutput)
}

func (o DataSourcePatternObjectFilterOutput) InclusionFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSourcePatternObjectFilter) []string { return v.InclusionFilters }).(pulumi.StringArrayOutput)
}

// The supported object type or content type of the data source.
func (o DataSourcePatternObjectFilterOutput) ObjectType() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourcePatternObjectFilter) string { return v.ObjectType }).(pulumi.StringOutput)
}

type DataSourcePatternObjectFilterArrayOutput struct{ *pulumi.OutputState }

func (DataSourcePatternObjectFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourcePatternObjectFilter)(nil)).Elem()
}

func (o DataSourcePatternObjectFilterArrayOutput) ToDataSourcePatternObjectFilterArrayOutput() DataSourcePatternObjectFilterArrayOutput {
	return o
}

func (o DataSourcePatternObjectFilterArrayOutput) ToDataSourcePatternObjectFilterArrayOutputWithContext(ctx context.Context) DataSourcePatternObjectFilterArrayOutput {
	return o
}

func (o DataSourcePatternObjectFilterArrayOutput) Index(i pulumi.IntInput) DataSourcePatternObjectFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourcePatternObjectFilter {
		return vs[0].([]DataSourcePatternObjectFilter)[vs[1].(int)]
	}).(DataSourcePatternObjectFilterOutput)
}

// The configuration of specific filters applied to your data source content. You can filter out or include certain content.
type DataSourcePatternObjectFilterConfiguration struct {
	// The configuration of specific filters applied to your data source content. You can filter out or include certain content.
	Filters []DataSourcePatternObjectFilter `pulumi:"filters"`
}

// DataSourcePatternObjectFilterConfigurationInput is an input type that accepts DataSourcePatternObjectFilterConfigurationArgs and DataSourcePatternObjectFilterConfigurationOutput values.
// You can construct a concrete instance of `DataSourcePatternObjectFilterConfigurationInput` via:
//
//	DataSourcePatternObjectFilterConfigurationArgs{...}
type DataSourcePatternObjectFilterConfigurationInput interface {
	pulumi.Input

	ToDataSourcePatternObjectFilterConfigurationOutput() DataSourcePatternObjectFilterConfigurationOutput
	ToDataSourcePatternObjectFilterConfigurationOutputWithContext(context.Context) DataSourcePatternObjectFilterConfigurationOutput
}

// The configuration of specific filters applied to your data source content. You can filter out or include certain content.
type DataSourcePatternObjectFilterConfigurationArgs struct {
	// The configuration of specific filters applied to your data source content. You can filter out or include certain content.
	Filters DataSourcePatternObjectFilterArrayInput `pulumi:"filters"`
}

func (DataSourcePatternObjectFilterConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePatternObjectFilterConfiguration)(nil)).Elem()
}

func (i DataSourcePatternObjectFilterConfigurationArgs) ToDataSourcePatternObjectFilterConfigurationOutput() DataSourcePatternObjectFilterConfigurationOutput {
	return i.ToDataSourcePatternObjectFilterConfigurationOutputWithContext(context.Background())
}

func (i DataSourcePatternObjectFilterConfigurationArgs) ToDataSourcePatternObjectFilterConfigurationOutputWithContext(ctx context.Context) DataSourcePatternObjectFilterConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePatternObjectFilterConfigurationOutput)
}

func (i DataSourcePatternObjectFilterConfigurationArgs) ToDataSourcePatternObjectFilterConfigurationPtrOutput() DataSourcePatternObjectFilterConfigurationPtrOutput {
	return i.ToDataSourcePatternObjectFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourcePatternObjectFilterConfigurationArgs) ToDataSourcePatternObjectFilterConfigurationPtrOutputWithContext(ctx context.Context) DataSourcePatternObjectFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePatternObjectFilterConfigurationOutput).ToDataSourcePatternObjectFilterConfigurationPtrOutputWithContext(ctx)
}

// DataSourcePatternObjectFilterConfigurationPtrInput is an input type that accepts DataSourcePatternObjectFilterConfigurationArgs, DataSourcePatternObjectFilterConfigurationPtr and DataSourcePatternObjectFilterConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourcePatternObjectFilterConfigurationPtrInput` via:
//
//	        DataSourcePatternObjectFilterConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourcePatternObjectFilterConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourcePatternObjectFilterConfigurationPtrOutput() DataSourcePatternObjectFilterConfigurationPtrOutput
	ToDataSourcePatternObjectFilterConfigurationPtrOutputWithContext(context.Context) DataSourcePatternObjectFilterConfigurationPtrOutput
}

type dataSourcePatternObjectFilterConfigurationPtrType DataSourcePatternObjectFilterConfigurationArgs

func DataSourcePatternObjectFilterConfigurationPtr(v *DataSourcePatternObjectFilterConfigurationArgs) DataSourcePatternObjectFilterConfigurationPtrInput {
	return (*dataSourcePatternObjectFilterConfigurationPtrType)(v)
}

func (*dataSourcePatternObjectFilterConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePatternObjectFilterConfiguration)(nil)).Elem()
}

func (i *dataSourcePatternObjectFilterConfigurationPtrType) ToDataSourcePatternObjectFilterConfigurationPtrOutput() DataSourcePatternObjectFilterConfigurationPtrOutput {
	return i.ToDataSourcePatternObjectFilterConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourcePatternObjectFilterConfigurationPtrType) ToDataSourcePatternObjectFilterConfigurationPtrOutputWithContext(ctx context.Context) DataSourcePatternObjectFilterConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourcePatternObjectFilterConfigurationPtrOutput)
}

// The configuration of specific filters applied to your data source content. You can filter out or include certain content.
type DataSourcePatternObjectFilterConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourcePatternObjectFilterConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourcePatternObjectFilterConfiguration)(nil)).Elem()
}

func (o DataSourcePatternObjectFilterConfigurationOutput) ToDataSourcePatternObjectFilterConfigurationOutput() DataSourcePatternObjectFilterConfigurationOutput {
	return o
}

func (o DataSourcePatternObjectFilterConfigurationOutput) ToDataSourcePatternObjectFilterConfigurationOutputWithContext(ctx context.Context) DataSourcePatternObjectFilterConfigurationOutput {
	return o
}

func (o DataSourcePatternObjectFilterConfigurationOutput) ToDataSourcePatternObjectFilterConfigurationPtrOutput() DataSourcePatternObjectFilterConfigurationPtrOutput {
	return o.ToDataSourcePatternObjectFilterConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourcePatternObjectFilterConfigurationOutput) ToDataSourcePatternObjectFilterConfigurationPtrOutputWithContext(ctx context.Context) DataSourcePatternObjectFilterConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourcePatternObjectFilterConfiguration) *DataSourcePatternObjectFilterConfiguration {
		return &v
	}).(DataSourcePatternObjectFilterConfigurationPtrOutput)
}

// The configuration of specific filters applied to your data source content. You can filter out or include certain content.
func (o DataSourcePatternObjectFilterConfigurationOutput) Filters() DataSourcePatternObjectFilterArrayOutput {
	return o.ApplyT(func(v DataSourcePatternObjectFilterConfiguration) []DataSourcePatternObjectFilter { return v.Filters }).(DataSourcePatternObjectFilterArrayOutput)
}

type DataSourcePatternObjectFilterConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourcePatternObjectFilterConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourcePatternObjectFilterConfiguration)(nil)).Elem()
}

func (o DataSourcePatternObjectFilterConfigurationPtrOutput) ToDataSourcePatternObjectFilterConfigurationPtrOutput() DataSourcePatternObjectFilterConfigurationPtrOutput {
	return o
}

func (o DataSourcePatternObjectFilterConfigurationPtrOutput) ToDataSourcePatternObjectFilterConfigurationPtrOutputWithContext(ctx context.Context) DataSourcePatternObjectFilterConfigurationPtrOutput {
	return o
}

func (o DataSourcePatternObjectFilterConfigurationPtrOutput) Elem() DataSourcePatternObjectFilterConfigurationOutput {
	return o.ApplyT(func(v *DataSourcePatternObjectFilterConfiguration) DataSourcePatternObjectFilterConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourcePatternObjectFilterConfiguration
		return ret
	}).(DataSourcePatternObjectFilterConfigurationOutput)
}

// The configuration of specific filters applied to your data source content. You can filter out or include certain content.
func (o DataSourcePatternObjectFilterConfigurationPtrOutput) Filters() DataSourcePatternObjectFilterArrayOutput {
	return o.ApplyT(func(v *DataSourcePatternObjectFilterConfiguration) []DataSourcePatternObjectFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(DataSourcePatternObjectFilterArrayOutput)
}

// The configuration information to connect to Amazon S3 as your data source.
type DataSourceS3DataSourceConfiguration struct {
	// The ARN of the bucket that contains the data source.
	BucketArn string `pulumi:"bucketArn"`
	// The account ID for the owner of the S3 bucket.
	BucketOwnerAccountId *string `pulumi:"bucketOwnerAccountId"`
	// A list of S3 prefixes that define the object containing the data sources.
	InclusionPrefixes []string `pulumi:"inclusionPrefixes"`
}

// DataSourceS3DataSourceConfigurationInput is an input type that accepts DataSourceS3DataSourceConfigurationArgs and DataSourceS3DataSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceS3DataSourceConfigurationInput` via:
//
//	DataSourceS3DataSourceConfigurationArgs{...}
type DataSourceS3DataSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceS3DataSourceConfigurationOutput() DataSourceS3DataSourceConfigurationOutput
	ToDataSourceS3DataSourceConfigurationOutputWithContext(context.Context) DataSourceS3DataSourceConfigurationOutput
}

// The configuration information to connect to Amazon S3 as your data source.
type DataSourceS3DataSourceConfigurationArgs struct {
	// The ARN of the bucket that contains the data source.
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// The account ID for the owner of the S3 bucket.
	BucketOwnerAccountId pulumi.StringPtrInput `pulumi:"bucketOwnerAccountId"`
	// A list of S3 prefixes that define the object containing the data sources.
	InclusionPrefixes pulumi.StringArrayInput `pulumi:"inclusionPrefixes"`
}

func (DataSourceS3DataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceS3DataSourceConfiguration)(nil)).Elem()
}

func (i DataSourceS3DataSourceConfigurationArgs) ToDataSourceS3DataSourceConfigurationOutput() DataSourceS3DataSourceConfigurationOutput {
	return i.ToDataSourceS3DataSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceS3DataSourceConfigurationArgs) ToDataSourceS3DataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceS3DataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3DataSourceConfigurationOutput)
}

func (i DataSourceS3DataSourceConfigurationArgs) ToDataSourceS3DataSourceConfigurationPtrOutput() DataSourceS3DataSourceConfigurationPtrOutput {
	return i.ToDataSourceS3DataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceS3DataSourceConfigurationArgs) ToDataSourceS3DataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceS3DataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3DataSourceConfigurationOutput).ToDataSourceS3DataSourceConfigurationPtrOutputWithContext(ctx)
}

// DataSourceS3DataSourceConfigurationPtrInput is an input type that accepts DataSourceS3DataSourceConfigurationArgs, DataSourceS3DataSourceConfigurationPtr and DataSourceS3DataSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceS3DataSourceConfigurationPtrInput` via:
//
//	        DataSourceS3DataSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceS3DataSourceConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceS3DataSourceConfigurationPtrOutput() DataSourceS3DataSourceConfigurationPtrOutput
	ToDataSourceS3DataSourceConfigurationPtrOutputWithContext(context.Context) DataSourceS3DataSourceConfigurationPtrOutput
}

type dataSourceS3DataSourceConfigurationPtrType DataSourceS3DataSourceConfigurationArgs

func DataSourceS3DataSourceConfigurationPtr(v *DataSourceS3DataSourceConfigurationArgs) DataSourceS3DataSourceConfigurationPtrInput {
	return (*dataSourceS3DataSourceConfigurationPtrType)(v)
}

func (*dataSourceS3DataSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceS3DataSourceConfiguration)(nil)).Elem()
}

func (i *dataSourceS3DataSourceConfigurationPtrType) ToDataSourceS3DataSourceConfigurationPtrOutput() DataSourceS3DataSourceConfigurationPtrOutput {
	return i.ToDataSourceS3DataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceS3DataSourceConfigurationPtrType) ToDataSourceS3DataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceS3DataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3DataSourceConfigurationPtrOutput)
}

// The configuration information to connect to Amazon S3 as your data source.
type DataSourceS3DataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceS3DataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceS3DataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceS3DataSourceConfigurationOutput) ToDataSourceS3DataSourceConfigurationOutput() DataSourceS3DataSourceConfigurationOutput {
	return o
}

func (o DataSourceS3DataSourceConfigurationOutput) ToDataSourceS3DataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceS3DataSourceConfigurationOutput {
	return o
}

func (o DataSourceS3DataSourceConfigurationOutput) ToDataSourceS3DataSourceConfigurationPtrOutput() DataSourceS3DataSourceConfigurationPtrOutput {
	return o.ToDataSourceS3DataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceS3DataSourceConfigurationOutput) ToDataSourceS3DataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceS3DataSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceS3DataSourceConfiguration) *DataSourceS3DataSourceConfiguration {
		return &v
	}).(DataSourceS3DataSourceConfigurationPtrOutput)
}

// The ARN of the bucket that contains the data source.
func (o DataSourceS3DataSourceConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceS3DataSourceConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// The account ID for the owner of the S3 bucket.
func (o DataSourceS3DataSourceConfigurationOutput) BucketOwnerAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceS3DataSourceConfiguration) *string { return v.BucketOwnerAccountId }).(pulumi.StringPtrOutput)
}

// A list of S3 prefixes that define the object containing the data sources.
func (o DataSourceS3DataSourceConfigurationOutput) InclusionPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSourceS3DataSourceConfiguration) []string { return v.InclusionPrefixes }).(pulumi.StringArrayOutput)
}

type DataSourceS3DataSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceS3DataSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceS3DataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceS3DataSourceConfigurationPtrOutput) ToDataSourceS3DataSourceConfigurationPtrOutput() DataSourceS3DataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceS3DataSourceConfigurationPtrOutput) ToDataSourceS3DataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceS3DataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceS3DataSourceConfigurationPtrOutput) Elem() DataSourceS3DataSourceConfigurationOutput {
	return o.ApplyT(func(v *DataSourceS3DataSourceConfiguration) DataSourceS3DataSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceS3DataSourceConfiguration
		return ret
	}).(DataSourceS3DataSourceConfigurationOutput)
}

// The ARN of the bucket that contains the data source.
func (o DataSourceS3DataSourceConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceS3DataSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// The account ID for the owner of the S3 bucket.
func (o DataSourceS3DataSourceConfigurationPtrOutput) BucketOwnerAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceS3DataSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.BucketOwnerAccountId
	}).(pulumi.StringPtrOutput)
}

// A list of S3 prefixes that define the object containing the data sources.
func (o DataSourceS3DataSourceConfigurationPtrOutput) InclusionPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataSourceS3DataSourceConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.InclusionPrefixes
	}).(pulumi.StringArrayOutput)
}

// An Amazon S3 location.
type DataSourceS3Location struct {
	// The location's URI
	Uri string `pulumi:"uri"`
}

// DataSourceS3LocationInput is an input type that accepts DataSourceS3LocationArgs and DataSourceS3LocationOutput values.
// You can construct a concrete instance of `DataSourceS3LocationInput` via:
//
//	DataSourceS3LocationArgs{...}
type DataSourceS3LocationInput interface {
	pulumi.Input

	ToDataSourceS3LocationOutput() DataSourceS3LocationOutput
	ToDataSourceS3LocationOutputWithContext(context.Context) DataSourceS3LocationOutput
}

// An Amazon S3 location.
type DataSourceS3LocationArgs struct {
	// The location's URI
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (DataSourceS3LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceS3Location)(nil)).Elem()
}

func (i DataSourceS3LocationArgs) ToDataSourceS3LocationOutput() DataSourceS3LocationOutput {
	return i.ToDataSourceS3LocationOutputWithContext(context.Background())
}

func (i DataSourceS3LocationArgs) ToDataSourceS3LocationOutputWithContext(ctx context.Context) DataSourceS3LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3LocationOutput)
}

func (i DataSourceS3LocationArgs) ToDataSourceS3LocationPtrOutput() DataSourceS3LocationPtrOutput {
	return i.ToDataSourceS3LocationPtrOutputWithContext(context.Background())
}

func (i DataSourceS3LocationArgs) ToDataSourceS3LocationPtrOutputWithContext(ctx context.Context) DataSourceS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3LocationOutput).ToDataSourceS3LocationPtrOutputWithContext(ctx)
}

// DataSourceS3LocationPtrInput is an input type that accepts DataSourceS3LocationArgs, DataSourceS3LocationPtr and DataSourceS3LocationPtrOutput values.
// You can construct a concrete instance of `DataSourceS3LocationPtrInput` via:
//
//	        DataSourceS3LocationArgs{...}
//
//	or:
//
//	        nil
type DataSourceS3LocationPtrInput interface {
	pulumi.Input

	ToDataSourceS3LocationPtrOutput() DataSourceS3LocationPtrOutput
	ToDataSourceS3LocationPtrOutputWithContext(context.Context) DataSourceS3LocationPtrOutput
}

type dataSourceS3LocationPtrType DataSourceS3LocationArgs

func DataSourceS3LocationPtr(v *DataSourceS3LocationArgs) DataSourceS3LocationPtrInput {
	return (*dataSourceS3LocationPtrType)(v)
}

func (*dataSourceS3LocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceS3Location)(nil)).Elem()
}

func (i *dataSourceS3LocationPtrType) ToDataSourceS3LocationPtrOutput() DataSourceS3LocationPtrOutput {
	return i.ToDataSourceS3LocationPtrOutputWithContext(context.Background())
}

func (i *dataSourceS3LocationPtrType) ToDataSourceS3LocationPtrOutputWithContext(ctx context.Context) DataSourceS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3LocationPtrOutput)
}

// An Amazon S3 location.
type DataSourceS3LocationOutput struct{ *pulumi.OutputState }

func (DataSourceS3LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceS3Location)(nil)).Elem()
}

func (o DataSourceS3LocationOutput) ToDataSourceS3LocationOutput() DataSourceS3LocationOutput {
	return o
}

func (o DataSourceS3LocationOutput) ToDataSourceS3LocationOutputWithContext(ctx context.Context) DataSourceS3LocationOutput {
	return o
}

func (o DataSourceS3LocationOutput) ToDataSourceS3LocationPtrOutput() DataSourceS3LocationPtrOutput {
	return o.ToDataSourceS3LocationPtrOutputWithContext(context.Background())
}

func (o DataSourceS3LocationOutput) ToDataSourceS3LocationPtrOutputWithContext(ctx context.Context) DataSourceS3LocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceS3Location) *DataSourceS3Location {
		return &v
	}).(DataSourceS3LocationPtrOutput)
}

// The location's URI
func (o DataSourceS3LocationOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceS3Location) string { return v.Uri }).(pulumi.StringOutput)
}

type DataSourceS3LocationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceS3LocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceS3Location)(nil)).Elem()
}

func (o DataSourceS3LocationPtrOutput) ToDataSourceS3LocationPtrOutput() DataSourceS3LocationPtrOutput {
	return o
}

func (o DataSourceS3LocationPtrOutput) ToDataSourceS3LocationPtrOutputWithContext(ctx context.Context) DataSourceS3LocationPtrOutput {
	return o
}

func (o DataSourceS3LocationPtrOutput) Elem() DataSourceS3LocationOutput {
	return o.ApplyT(func(v *DataSourceS3Location) DataSourceS3Location {
		if v != nil {
			return *v
		}
		var ret DataSourceS3Location
		return ret
	}).(DataSourceS3LocationOutput)
}

// The location's URI
func (o DataSourceS3LocationPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

// The configuration of filtering the Salesforce content. For example, configuring regular expression patterns to include or exclude certain content.
type DataSourceSalesforceCrawlerConfiguration struct {
	// The configuration of filtering the Salesforce content. For example, configuring regular expression patterns to include or exclude certain content.
	FilterConfiguration *DataSourceCrawlFilterConfiguration `pulumi:"filterConfiguration"`
}

// DataSourceSalesforceCrawlerConfigurationInput is an input type that accepts DataSourceSalesforceCrawlerConfigurationArgs and DataSourceSalesforceCrawlerConfigurationOutput values.
// You can construct a concrete instance of `DataSourceSalesforceCrawlerConfigurationInput` via:
//
//	DataSourceSalesforceCrawlerConfigurationArgs{...}
type DataSourceSalesforceCrawlerConfigurationInput interface {
	pulumi.Input

	ToDataSourceSalesforceCrawlerConfigurationOutput() DataSourceSalesforceCrawlerConfigurationOutput
	ToDataSourceSalesforceCrawlerConfigurationOutputWithContext(context.Context) DataSourceSalesforceCrawlerConfigurationOutput
}

// The configuration of filtering the Salesforce content. For example, configuring regular expression patterns to include or exclude certain content.
type DataSourceSalesforceCrawlerConfigurationArgs struct {
	// The configuration of filtering the Salesforce content. For example, configuring regular expression patterns to include or exclude certain content.
	FilterConfiguration DataSourceCrawlFilterConfigurationPtrInput `pulumi:"filterConfiguration"`
}

func (DataSourceSalesforceCrawlerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSalesforceCrawlerConfiguration)(nil)).Elem()
}

func (i DataSourceSalesforceCrawlerConfigurationArgs) ToDataSourceSalesforceCrawlerConfigurationOutput() DataSourceSalesforceCrawlerConfigurationOutput {
	return i.ToDataSourceSalesforceCrawlerConfigurationOutputWithContext(context.Background())
}

func (i DataSourceSalesforceCrawlerConfigurationArgs) ToDataSourceSalesforceCrawlerConfigurationOutputWithContext(ctx context.Context) DataSourceSalesforceCrawlerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSalesforceCrawlerConfigurationOutput)
}

func (i DataSourceSalesforceCrawlerConfigurationArgs) ToDataSourceSalesforceCrawlerConfigurationPtrOutput() DataSourceSalesforceCrawlerConfigurationPtrOutput {
	return i.ToDataSourceSalesforceCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceSalesforceCrawlerConfigurationArgs) ToDataSourceSalesforceCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSalesforceCrawlerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSalesforceCrawlerConfigurationOutput).ToDataSourceSalesforceCrawlerConfigurationPtrOutputWithContext(ctx)
}

// DataSourceSalesforceCrawlerConfigurationPtrInput is an input type that accepts DataSourceSalesforceCrawlerConfigurationArgs, DataSourceSalesforceCrawlerConfigurationPtr and DataSourceSalesforceCrawlerConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceSalesforceCrawlerConfigurationPtrInput` via:
//
//	        DataSourceSalesforceCrawlerConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceSalesforceCrawlerConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceSalesforceCrawlerConfigurationPtrOutput() DataSourceSalesforceCrawlerConfigurationPtrOutput
	ToDataSourceSalesforceCrawlerConfigurationPtrOutputWithContext(context.Context) DataSourceSalesforceCrawlerConfigurationPtrOutput
}

type dataSourceSalesforceCrawlerConfigurationPtrType DataSourceSalesforceCrawlerConfigurationArgs

func DataSourceSalesforceCrawlerConfigurationPtr(v *DataSourceSalesforceCrawlerConfigurationArgs) DataSourceSalesforceCrawlerConfigurationPtrInput {
	return (*dataSourceSalesforceCrawlerConfigurationPtrType)(v)
}

func (*dataSourceSalesforceCrawlerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSalesforceCrawlerConfiguration)(nil)).Elem()
}

func (i *dataSourceSalesforceCrawlerConfigurationPtrType) ToDataSourceSalesforceCrawlerConfigurationPtrOutput() DataSourceSalesforceCrawlerConfigurationPtrOutput {
	return i.ToDataSourceSalesforceCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceSalesforceCrawlerConfigurationPtrType) ToDataSourceSalesforceCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSalesforceCrawlerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSalesforceCrawlerConfigurationPtrOutput)
}

// The configuration of filtering the Salesforce content. For example, configuring regular expression patterns to include or exclude certain content.
type DataSourceSalesforceCrawlerConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceCrawlerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSalesforceCrawlerConfiguration)(nil)).Elem()
}

func (o DataSourceSalesforceCrawlerConfigurationOutput) ToDataSourceSalesforceCrawlerConfigurationOutput() DataSourceSalesforceCrawlerConfigurationOutput {
	return o
}

func (o DataSourceSalesforceCrawlerConfigurationOutput) ToDataSourceSalesforceCrawlerConfigurationOutputWithContext(ctx context.Context) DataSourceSalesforceCrawlerConfigurationOutput {
	return o
}

func (o DataSourceSalesforceCrawlerConfigurationOutput) ToDataSourceSalesforceCrawlerConfigurationPtrOutput() DataSourceSalesforceCrawlerConfigurationPtrOutput {
	return o.ToDataSourceSalesforceCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceSalesforceCrawlerConfigurationOutput) ToDataSourceSalesforceCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSalesforceCrawlerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSalesforceCrawlerConfiguration) *DataSourceSalesforceCrawlerConfiguration {
		return &v
	}).(DataSourceSalesforceCrawlerConfigurationPtrOutput)
}

// The configuration of filtering the Salesforce content. For example, configuring regular expression patterns to include or exclude certain content.
func (o DataSourceSalesforceCrawlerConfigurationOutput) FilterConfiguration() DataSourceCrawlFilterConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceSalesforceCrawlerConfiguration) *DataSourceCrawlFilterConfiguration {
		return v.FilterConfiguration
	}).(DataSourceCrawlFilterConfigurationPtrOutput)
}

type DataSourceSalesforceCrawlerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceCrawlerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSalesforceCrawlerConfiguration)(nil)).Elem()
}

func (o DataSourceSalesforceCrawlerConfigurationPtrOutput) ToDataSourceSalesforceCrawlerConfigurationPtrOutput() DataSourceSalesforceCrawlerConfigurationPtrOutput {
	return o
}

func (o DataSourceSalesforceCrawlerConfigurationPtrOutput) ToDataSourceSalesforceCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSalesforceCrawlerConfigurationPtrOutput {
	return o
}

func (o DataSourceSalesforceCrawlerConfigurationPtrOutput) Elem() DataSourceSalesforceCrawlerConfigurationOutput {
	return o.ApplyT(func(v *DataSourceSalesforceCrawlerConfiguration) DataSourceSalesforceCrawlerConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceSalesforceCrawlerConfiguration
		return ret
	}).(DataSourceSalesforceCrawlerConfigurationOutput)
}

// The configuration of filtering the Salesforce content. For example, configuring regular expression patterns to include or exclude certain content.
func (o DataSourceSalesforceCrawlerConfigurationPtrOutput) FilterConfiguration() DataSourceCrawlFilterConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceSalesforceCrawlerConfiguration) *DataSourceCrawlFilterConfiguration {
		if v == nil {
			return nil
		}
		return v.FilterConfiguration
	}).(DataSourceCrawlFilterConfigurationPtrOutput)
}

// The configuration information to connect to Salesforce as your data source.
type DataSourceSalesforceDataSourceConfiguration struct {
	// The configuration of the Salesforce content. For example, configuring specific types of Salesforce content.
	CrawlerConfiguration *DataSourceSalesforceCrawlerConfiguration `pulumi:"crawlerConfiguration"`
	// The endpoint information to connect to your Salesforce data source.
	SourceConfiguration DataSourceSalesforceSourceConfiguration `pulumi:"sourceConfiguration"`
}

// DataSourceSalesforceDataSourceConfigurationInput is an input type that accepts DataSourceSalesforceDataSourceConfigurationArgs and DataSourceSalesforceDataSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceSalesforceDataSourceConfigurationInput` via:
//
//	DataSourceSalesforceDataSourceConfigurationArgs{...}
type DataSourceSalesforceDataSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceSalesforceDataSourceConfigurationOutput() DataSourceSalesforceDataSourceConfigurationOutput
	ToDataSourceSalesforceDataSourceConfigurationOutputWithContext(context.Context) DataSourceSalesforceDataSourceConfigurationOutput
}

// The configuration information to connect to Salesforce as your data source.
type DataSourceSalesforceDataSourceConfigurationArgs struct {
	// The configuration of the Salesforce content. For example, configuring specific types of Salesforce content.
	CrawlerConfiguration DataSourceSalesforceCrawlerConfigurationPtrInput `pulumi:"crawlerConfiguration"`
	// The endpoint information to connect to your Salesforce data source.
	SourceConfiguration DataSourceSalesforceSourceConfigurationInput `pulumi:"sourceConfiguration"`
}

func (DataSourceSalesforceDataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSalesforceDataSourceConfiguration)(nil)).Elem()
}

func (i DataSourceSalesforceDataSourceConfigurationArgs) ToDataSourceSalesforceDataSourceConfigurationOutput() DataSourceSalesforceDataSourceConfigurationOutput {
	return i.ToDataSourceSalesforceDataSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceSalesforceDataSourceConfigurationArgs) ToDataSourceSalesforceDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceSalesforceDataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSalesforceDataSourceConfigurationOutput)
}

func (i DataSourceSalesforceDataSourceConfigurationArgs) ToDataSourceSalesforceDataSourceConfigurationPtrOutput() DataSourceSalesforceDataSourceConfigurationPtrOutput {
	return i.ToDataSourceSalesforceDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceSalesforceDataSourceConfigurationArgs) ToDataSourceSalesforceDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSalesforceDataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSalesforceDataSourceConfigurationOutput).ToDataSourceSalesforceDataSourceConfigurationPtrOutputWithContext(ctx)
}

// DataSourceSalesforceDataSourceConfigurationPtrInput is an input type that accepts DataSourceSalesforceDataSourceConfigurationArgs, DataSourceSalesforceDataSourceConfigurationPtr and DataSourceSalesforceDataSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceSalesforceDataSourceConfigurationPtrInput` via:
//
//	        DataSourceSalesforceDataSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceSalesforceDataSourceConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceSalesforceDataSourceConfigurationPtrOutput() DataSourceSalesforceDataSourceConfigurationPtrOutput
	ToDataSourceSalesforceDataSourceConfigurationPtrOutputWithContext(context.Context) DataSourceSalesforceDataSourceConfigurationPtrOutput
}

type dataSourceSalesforceDataSourceConfigurationPtrType DataSourceSalesforceDataSourceConfigurationArgs

func DataSourceSalesforceDataSourceConfigurationPtr(v *DataSourceSalesforceDataSourceConfigurationArgs) DataSourceSalesforceDataSourceConfigurationPtrInput {
	return (*dataSourceSalesforceDataSourceConfigurationPtrType)(v)
}

func (*dataSourceSalesforceDataSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSalesforceDataSourceConfiguration)(nil)).Elem()
}

func (i *dataSourceSalesforceDataSourceConfigurationPtrType) ToDataSourceSalesforceDataSourceConfigurationPtrOutput() DataSourceSalesforceDataSourceConfigurationPtrOutput {
	return i.ToDataSourceSalesforceDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceSalesforceDataSourceConfigurationPtrType) ToDataSourceSalesforceDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSalesforceDataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSalesforceDataSourceConfigurationPtrOutput)
}

// The configuration information to connect to Salesforce as your data source.
type DataSourceSalesforceDataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceDataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSalesforceDataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceSalesforceDataSourceConfigurationOutput) ToDataSourceSalesforceDataSourceConfigurationOutput() DataSourceSalesforceDataSourceConfigurationOutput {
	return o
}

func (o DataSourceSalesforceDataSourceConfigurationOutput) ToDataSourceSalesforceDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceSalesforceDataSourceConfigurationOutput {
	return o
}

func (o DataSourceSalesforceDataSourceConfigurationOutput) ToDataSourceSalesforceDataSourceConfigurationPtrOutput() DataSourceSalesforceDataSourceConfigurationPtrOutput {
	return o.ToDataSourceSalesforceDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceSalesforceDataSourceConfigurationOutput) ToDataSourceSalesforceDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSalesforceDataSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSalesforceDataSourceConfiguration) *DataSourceSalesforceDataSourceConfiguration {
		return &v
	}).(DataSourceSalesforceDataSourceConfigurationPtrOutput)
}

// The configuration of the Salesforce content. For example, configuring specific types of Salesforce content.
func (o DataSourceSalesforceDataSourceConfigurationOutput) CrawlerConfiguration() DataSourceSalesforceCrawlerConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceSalesforceDataSourceConfiguration) *DataSourceSalesforceCrawlerConfiguration {
		return v.CrawlerConfiguration
	}).(DataSourceSalesforceCrawlerConfigurationPtrOutput)
}

// The endpoint information to connect to your Salesforce data source.
func (o DataSourceSalesforceDataSourceConfigurationOutput) SourceConfiguration() DataSourceSalesforceSourceConfigurationOutput {
	return o.ApplyT(func(v DataSourceSalesforceDataSourceConfiguration) DataSourceSalesforceSourceConfiguration {
		return v.SourceConfiguration
	}).(DataSourceSalesforceSourceConfigurationOutput)
}

type DataSourceSalesforceDataSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceDataSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSalesforceDataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceSalesforceDataSourceConfigurationPtrOutput) ToDataSourceSalesforceDataSourceConfigurationPtrOutput() DataSourceSalesforceDataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceSalesforceDataSourceConfigurationPtrOutput) ToDataSourceSalesforceDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSalesforceDataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceSalesforceDataSourceConfigurationPtrOutput) Elem() DataSourceSalesforceDataSourceConfigurationOutput {
	return o.ApplyT(func(v *DataSourceSalesforceDataSourceConfiguration) DataSourceSalesforceDataSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceSalesforceDataSourceConfiguration
		return ret
	}).(DataSourceSalesforceDataSourceConfigurationOutput)
}

// The configuration of the Salesforce content. For example, configuring specific types of Salesforce content.
func (o DataSourceSalesforceDataSourceConfigurationPtrOutput) CrawlerConfiguration() DataSourceSalesforceCrawlerConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceSalesforceDataSourceConfiguration) *DataSourceSalesforceCrawlerConfiguration {
		if v == nil {
			return nil
		}
		return v.CrawlerConfiguration
	}).(DataSourceSalesforceCrawlerConfigurationPtrOutput)
}

// The endpoint information to connect to your Salesforce data source.
func (o DataSourceSalesforceDataSourceConfigurationPtrOutput) SourceConfiguration() DataSourceSalesforceSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceSalesforceDataSourceConfiguration) *DataSourceSalesforceSourceConfiguration {
		if v == nil {
			return nil
		}
		return &v.SourceConfiguration
	}).(DataSourceSalesforceSourceConfigurationPtrOutput)
}

// The endpoint information to connect to your Salesforce data source.
type DataSourceSalesforceSourceConfiguration struct {
	// The supported authentication type to authenticate and connect to your Salesforce instance.
	AuthType DataSourceSalesforceSourceConfigurationAuthType `pulumi:"authType"`
	// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your Salesforce instance URL. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see Salesforce connection configuration.
	CredentialsSecretArn string `pulumi:"credentialsSecretArn"`
	// The Salesforce host URL or instance URL.
	HostUrl string `pulumi:"hostUrl"`
}

// DataSourceSalesforceSourceConfigurationInput is an input type that accepts DataSourceSalesforceSourceConfigurationArgs and DataSourceSalesforceSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceSalesforceSourceConfigurationInput` via:
//
//	DataSourceSalesforceSourceConfigurationArgs{...}
type DataSourceSalesforceSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceSalesforceSourceConfigurationOutput() DataSourceSalesforceSourceConfigurationOutput
	ToDataSourceSalesforceSourceConfigurationOutputWithContext(context.Context) DataSourceSalesforceSourceConfigurationOutput
}

// The endpoint information to connect to your Salesforce data source.
type DataSourceSalesforceSourceConfigurationArgs struct {
	// The supported authentication type to authenticate and connect to your Salesforce instance.
	AuthType DataSourceSalesforceSourceConfigurationAuthTypeInput `pulumi:"authType"`
	// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your Salesforce instance URL. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see Salesforce connection configuration.
	CredentialsSecretArn pulumi.StringInput `pulumi:"credentialsSecretArn"`
	// The Salesforce host URL or instance URL.
	HostUrl pulumi.StringInput `pulumi:"hostUrl"`
}

func (DataSourceSalesforceSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSalesforceSourceConfiguration)(nil)).Elem()
}

func (i DataSourceSalesforceSourceConfigurationArgs) ToDataSourceSalesforceSourceConfigurationOutput() DataSourceSalesforceSourceConfigurationOutput {
	return i.ToDataSourceSalesforceSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceSalesforceSourceConfigurationArgs) ToDataSourceSalesforceSourceConfigurationOutputWithContext(ctx context.Context) DataSourceSalesforceSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSalesforceSourceConfigurationOutput)
}

func (i DataSourceSalesforceSourceConfigurationArgs) ToDataSourceSalesforceSourceConfigurationPtrOutput() DataSourceSalesforceSourceConfigurationPtrOutput {
	return i.ToDataSourceSalesforceSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceSalesforceSourceConfigurationArgs) ToDataSourceSalesforceSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSalesforceSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSalesforceSourceConfigurationOutput).ToDataSourceSalesforceSourceConfigurationPtrOutputWithContext(ctx)
}

// DataSourceSalesforceSourceConfigurationPtrInput is an input type that accepts DataSourceSalesforceSourceConfigurationArgs, DataSourceSalesforceSourceConfigurationPtr and DataSourceSalesforceSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceSalesforceSourceConfigurationPtrInput` via:
//
//	        DataSourceSalesforceSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceSalesforceSourceConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceSalesforceSourceConfigurationPtrOutput() DataSourceSalesforceSourceConfigurationPtrOutput
	ToDataSourceSalesforceSourceConfigurationPtrOutputWithContext(context.Context) DataSourceSalesforceSourceConfigurationPtrOutput
}

type dataSourceSalesforceSourceConfigurationPtrType DataSourceSalesforceSourceConfigurationArgs

func DataSourceSalesforceSourceConfigurationPtr(v *DataSourceSalesforceSourceConfigurationArgs) DataSourceSalesforceSourceConfigurationPtrInput {
	return (*dataSourceSalesforceSourceConfigurationPtrType)(v)
}

func (*dataSourceSalesforceSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSalesforceSourceConfiguration)(nil)).Elem()
}

func (i *dataSourceSalesforceSourceConfigurationPtrType) ToDataSourceSalesforceSourceConfigurationPtrOutput() DataSourceSalesforceSourceConfigurationPtrOutput {
	return i.ToDataSourceSalesforceSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceSalesforceSourceConfigurationPtrType) ToDataSourceSalesforceSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSalesforceSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSalesforceSourceConfigurationPtrOutput)
}

// The endpoint information to connect to your Salesforce data source.
type DataSourceSalesforceSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSalesforceSourceConfiguration)(nil)).Elem()
}

func (o DataSourceSalesforceSourceConfigurationOutput) ToDataSourceSalesforceSourceConfigurationOutput() DataSourceSalesforceSourceConfigurationOutput {
	return o
}

func (o DataSourceSalesforceSourceConfigurationOutput) ToDataSourceSalesforceSourceConfigurationOutputWithContext(ctx context.Context) DataSourceSalesforceSourceConfigurationOutput {
	return o
}

func (o DataSourceSalesforceSourceConfigurationOutput) ToDataSourceSalesforceSourceConfigurationPtrOutput() DataSourceSalesforceSourceConfigurationPtrOutput {
	return o.ToDataSourceSalesforceSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceSalesforceSourceConfigurationOutput) ToDataSourceSalesforceSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSalesforceSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSalesforceSourceConfiguration) *DataSourceSalesforceSourceConfiguration {
		return &v
	}).(DataSourceSalesforceSourceConfigurationPtrOutput)
}

// The supported authentication type to authenticate and connect to your Salesforce instance.
func (o DataSourceSalesforceSourceConfigurationOutput) AuthType() DataSourceSalesforceSourceConfigurationAuthTypeOutput {
	return o.ApplyT(func(v DataSourceSalesforceSourceConfiguration) DataSourceSalesforceSourceConfigurationAuthType {
		return v.AuthType
	}).(DataSourceSalesforceSourceConfigurationAuthTypeOutput)
}

// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your Salesforce instance URL. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see Salesforce connection configuration.
func (o DataSourceSalesforceSourceConfigurationOutput) CredentialsSecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSalesforceSourceConfiguration) string { return v.CredentialsSecretArn }).(pulumi.StringOutput)
}

// The Salesforce host URL or instance URL.
func (o DataSourceSalesforceSourceConfigurationOutput) HostUrl() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSalesforceSourceConfiguration) string { return v.HostUrl }).(pulumi.StringOutput)
}

type DataSourceSalesforceSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSalesforceSourceConfiguration)(nil)).Elem()
}

func (o DataSourceSalesforceSourceConfigurationPtrOutput) ToDataSourceSalesforceSourceConfigurationPtrOutput() DataSourceSalesforceSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceSalesforceSourceConfigurationPtrOutput) ToDataSourceSalesforceSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSalesforceSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceSalesforceSourceConfigurationPtrOutput) Elem() DataSourceSalesforceSourceConfigurationOutput {
	return o.ApplyT(func(v *DataSourceSalesforceSourceConfiguration) DataSourceSalesforceSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceSalesforceSourceConfiguration
		return ret
	}).(DataSourceSalesforceSourceConfigurationOutput)
}

// The supported authentication type to authenticate and connect to your Salesforce instance.
func (o DataSourceSalesforceSourceConfigurationPtrOutput) AuthType() DataSourceSalesforceSourceConfigurationAuthTypePtrOutput {
	return o.ApplyT(func(v *DataSourceSalesforceSourceConfiguration) *DataSourceSalesforceSourceConfigurationAuthType {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(DataSourceSalesforceSourceConfigurationAuthTypePtrOutput)
}

// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your Salesforce instance URL. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see Salesforce connection configuration.
func (o DataSourceSalesforceSourceConfigurationPtrOutput) CredentialsSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSalesforceSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialsSecretArn
	}).(pulumi.StringPtrOutput)
}

// The Salesforce host URL or instance URL.
func (o DataSourceSalesforceSourceConfigurationPtrOutput) HostUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSalesforceSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.HostUrl
	}).(pulumi.StringPtrOutput)
}

// A seed url object.
type DataSourceSeedUrl struct {
	// A web url.
	Url string `pulumi:"url"`
}

// DataSourceSeedUrlInput is an input type that accepts DataSourceSeedUrlArgs and DataSourceSeedUrlOutput values.
// You can construct a concrete instance of `DataSourceSeedUrlInput` via:
//
//	DataSourceSeedUrlArgs{...}
type DataSourceSeedUrlInput interface {
	pulumi.Input

	ToDataSourceSeedUrlOutput() DataSourceSeedUrlOutput
	ToDataSourceSeedUrlOutputWithContext(context.Context) DataSourceSeedUrlOutput
}

// A seed url object.
type DataSourceSeedUrlArgs struct {
	// A web url.
	Url pulumi.StringInput `pulumi:"url"`
}

func (DataSourceSeedUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSeedUrl)(nil)).Elem()
}

func (i DataSourceSeedUrlArgs) ToDataSourceSeedUrlOutput() DataSourceSeedUrlOutput {
	return i.ToDataSourceSeedUrlOutputWithContext(context.Background())
}

func (i DataSourceSeedUrlArgs) ToDataSourceSeedUrlOutputWithContext(ctx context.Context) DataSourceSeedUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSeedUrlOutput)
}

// DataSourceSeedUrlArrayInput is an input type that accepts DataSourceSeedUrlArray and DataSourceSeedUrlArrayOutput values.
// You can construct a concrete instance of `DataSourceSeedUrlArrayInput` via:
//
//	DataSourceSeedUrlArray{ DataSourceSeedUrlArgs{...} }
type DataSourceSeedUrlArrayInput interface {
	pulumi.Input

	ToDataSourceSeedUrlArrayOutput() DataSourceSeedUrlArrayOutput
	ToDataSourceSeedUrlArrayOutputWithContext(context.Context) DataSourceSeedUrlArrayOutput
}

type DataSourceSeedUrlArray []DataSourceSeedUrlInput

func (DataSourceSeedUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceSeedUrl)(nil)).Elem()
}

func (i DataSourceSeedUrlArray) ToDataSourceSeedUrlArrayOutput() DataSourceSeedUrlArrayOutput {
	return i.ToDataSourceSeedUrlArrayOutputWithContext(context.Background())
}

func (i DataSourceSeedUrlArray) ToDataSourceSeedUrlArrayOutputWithContext(ctx context.Context) DataSourceSeedUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSeedUrlArrayOutput)
}

// A seed url object.
type DataSourceSeedUrlOutput struct{ *pulumi.OutputState }

func (DataSourceSeedUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSeedUrl)(nil)).Elem()
}

func (o DataSourceSeedUrlOutput) ToDataSourceSeedUrlOutput() DataSourceSeedUrlOutput {
	return o
}

func (o DataSourceSeedUrlOutput) ToDataSourceSeedUrlOutputWithContext(ctx context.Context) DataSourceSeedUrlOutput {
	return o
}

// A web url.
func (o DataSourceSeedUrlOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSeedUrl) string { return v.Url }).(pulumi.StringOutput)
}

type DataSourceSeedUrlArrayOutput struct{ *pulumi.OutputState }

func (DataSourceSeedUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceSeedUrl)(nil)).Elem()
}

func (o DataSourceSeedUrlArrayOutput) ToDataSourceSeedUrlArrayOutput() DataSourceSeedUrlArrayOutput {
	return o
}

func (o DataSourceSeedUrlArrayOutput) ToDataSourceSeedUrlArrayOutputWithContext(ctx context.Context) DataSourceSeedUrlArrayOutput {
	return o
}

func (o DataSourceSeedUrlArrayOutput) Index(i pulumi.IntInput) DataSourceSeedUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceSeedUrl {
		return vs[0].([]DataSourceSeedUrl)[vs[1].(int)]
	}).(DataSourceSeedUrlOutput)
}

// Configurations for when you choose semantic chunking. If you set the chunkingStrategy as NONE, exclude this field.
type DataSourceSemanticChunkingConfiguration struct {
	// The dissimilarity threshold for splitting chunks.
	BreakpointPercentileThreshold int `pulumi:"breakpointPercentileThreshold"`
	// The buffer size.
	BufferSize int `pulumi:"bufferSize"`
	// The maximum number of tokens that a chunk can contain.
	MaxTokens int `pulumi:"maxTokens"`
}

// DataSourceSemanticChunkingConfigurationInput is an input type that accepts DataSourceSemanticChunkingConfigurationArgs and DataSourceSemanticChunkingConfigurationOutput values.
// You can construct a concrete instance of `DataSourceSemanticChunkingConfigurationInput` via:
//
//	DataSourceSemanticChunkingConfigurationArgs{...}
type DataSourceSemanticChunkingConfigurationInput interface {
	pulumi.Input

	ToDataSourceSemanticChunkingConfigurationOutput() DataSourceSemanticChunkingConfigurationOutput
	ToDataSourceSemanticChunkingConfigurationOutputWithContext(context.Context) DataSourceSemanticChunkingConfigurationOutput
}

// Configurations for when you choose semantic chunking. If you set the chunkingStrategy as NONE, exclude this field.
type DataSourceSemanticChunkingConfigurationArgs struct {
	// The dissimilarity threshold for splitting chunks.
	BreakpointPercentileThreshold pulumi.IntInput `pulumi:"breakpointPercentileThreshold"`
	// The buffer size.
	BufferSize pulumi.IntInput `pulumi:"bufferSize"`
	// The maximum number of tokens that a chunk can contain.
	MaxTokens pulumi.IntInput `pulumi:"maxTokens"`
}

func (DataSourceSemanticChunkingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSemanticChunkingConfiguration)(nil)).Elem()
}

func (i DataSourceSemanticChunkingConfigurationArgs) ToDataSourceSemanticChunkingConfigurationOutput() DataSourceSemanticChunkingConfigurationOutput {
	return i.ToDataSourceSemanticChunkingConfigurationOutputWithContext(context.Background())
}

func (i DataSourceSemanticChunkingConfigurationArgs) ToDataSourceSemanticChunkingConfigurationOutputWithContext(ctx context.Context) DataSourceSemanticChunkingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSemanticChunkingConfigurationOutput)
}

func (i DataSourceSemanticChunkingConfigurationArgs) ToDataSourceSemanticChunkingConfigurationPtrOutput() DataSourceSemanticChunkingConfigurationPtrOutput {
	return i.ToDataSourceSemanticChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceSemanticChunkingConfigurationArgs) ToDataSourceSemanticChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSemanticChunkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSemanticChunkingConfigurationOutput).ToDataSourceSemanticChunkingConfigurationPtrOutputWithContext(ctx)
}

// DataSourceSemanticChunkingConfigurationPtrInput is an input type that accepts DataSourceSemanticChunkingConfigurationArgs, DataSourceSemanticChunkingConfigurationPtr and DataSourceSemanticChunkingConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceSemanticChunkingConfigurationPtrInput` via:
//
//	        DataSourceSemanticChunkingConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceSemanticChunkingConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceSemanticChunkingConfigurationPtrOutput() DataSourceSemanticChunkingConfigurationPtrOutput
	ToDataSourceSemanticChunkingConfigurationPtrOutputWithContext(context.Context) DataSourceSemanticChunkingConfigurationPtrOutput
}

type dataSourceSemanticChunkingConfigurationPtrType DataSourceSemanticChunkingConfigurationArgs

func DataSourceSemanticChunkingConfigurationPtr(v *DataSourceSemanticChunkingConfigurationArgs) DataSourceSemanticChunkingConfigurationPtrInput {
	return (*dataSourceSemanticChunkingConfigurationPtrType)(v)
}

func (*dataSourceSemanticChunkingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSemanticChunkingConfiguration)(nil)).Elem()
}

func (i *dataSourceSemanticChunkingConfigurationPtrType) ToDataSourceSemanticChunkingConfigurationPtrOutput() DataSourceSemanticChunkingConfigurationPtrOutput {
	return i.ToDataSourceSemanticChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceSemanticChunkingConfigurationPtrType) ToDataSourceSemanticChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSemanticChunkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSemanticChunkingConfigurationPtrOutput)
}

// Configurations for when you choose semantic chunking. If you set the chunkingStrategy as NONE, exclude this field.
type DataSourceSemanticChunkingConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceSemanticChunkingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSemanticChunkingConfiguration)(nil)).Elem()
}

func (o DataSourceSemanticChunkingConfigurationOutput) ToDataSourceSemanticChunkingConfigurationOutput() DataSourceSemanticChunkingConfigurationOutput {
	return o
}

func (o DataSourceSemanticChunkingConfigurationOutput) ToDataSourceSemanticChunkingConfigurationOutputWithContext(ctx context.Context) DataSourceSemanticChunkingConfigurationOutput {
	return o
}

func (o DataSourceSemanticChunkingConfigurationOutput) ToDataSourceSemanticChunkingConfigurationPtrOutput() DataSourceSemanticChunkingConfigurationPtrOutput {
	return o.ToDataSourceSemanticChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceSemanticChunkingConfigurationOutput) ToDataSourceSemanticChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSemanticChunkingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSemanticChunkingConfiguration) *DataSourceSemanticChunkingConfiguration {
		return &v
	}).(DataSourceSemanticChunkingConfigurationPtrOutput)
}

// The dissimilarity threshold for splitting chunks.
func (o DataSourceSemanticChunkingConfigurationOutput) BreakpointPercentileThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v DataSourceSemanticChunkingConfiguration) int { return v.BreakpointPercentileThreshold }).(pulumi.IntOutput)
}

// The buffer size.
func (o DataSourceSemanticChunkingConfigurationOutput) BufferSize() pulumi.IntOutput {
	return o.ApplyT(func(v DataSourceSemanticChunkingConfiguration) int { return v.BufferSize }).(pulumi.IntOutput)
}

// The maximum number of tokens that a chunk can contain.
func (o DataSourceSemanticChunkingConfigurationOutput) MaxTokens() pulumi.IntOutput {
	return o.ApplyT(func(v DataSourceSemanticChunkingConfiguration) int { return v.MaxTokens }).(pulumi.IntOutput)
}

type DataSourceSemanticChunkingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSemanticChunkingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSemanticChunkingConfiguration)(nil)).Elem()
}

func (o DataSourceSemanticChunkingConfigurationPtrOutput) ToDataSourceSemanticChunkingConfigurationPtrOutput() DataSourceSemanticChunkingConfigurationPtrOutput {
	return o
}

func (o DataSourceSemanticChunkingConfigurationPtrOutput) ToDataSourceSemanticChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSemanticChunkingConfigurationPtrOutput {
	return o
}

func (o DataSourceSemanticChunkingConfigurationPtrOutput) Elem() DataSourceSemanticChunkingConfigurationOutput {
	return o.ApplyT(func(v *DataSourceSemanticChunkingConfiguration) DataSourceSemanticChunkingConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceSemanticChunkingConfiguration
		return ret
	}).(DataSourceSemanticChunkingConfigurationOutput)
}

// The dissimilarity threshold for splitting chunks.
func (o DataSourceSemanticChunkingConfigurationPtrOutput) BreakpointPercentileThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceSemanticChunkingConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.BreakpointPercentileThreshold
	}).(pulumi.IntPtrOutput)
}

// The buffer size.
func (o DataSourceSemanticChunkingConfigurationPtrOutput) BufferSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceSemanticChunkingConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.BufferSize
	}).(pulumi.IntPtrOutput)
}

// The maximum number of tokens that a chunk can contain.
func (o DataSourceSemanticChunkingConfigurationPtrOutput) MaxTokens() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceSemanticChunkingConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.MaxTokens
	}).(pulumi.IntPtrOutput)
}

// Contains details about the server-side encryption for the data source.
type DataSourceServerSideEncryptionConfiguration struct {
	// The ARN of the AWS KMS key used to encrypt the resource.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
}

// DataSourceServerSideEncryptionConfigurationInput is an input type that accepts DataSourceServerSideEncryptionConfigurationArgs and DataSourceServerSideEncryptionConfigurationOutput values.
// You can construct a concrete instance of `DataSourceServerSideEncryptionConfigurationInput` via:
//
//	DataSourceServerSideEncryptionConfigurationArgs{...}
type DataSourceServerSideEncryptionConfigurationInput interface {
	pulumi.Input

	ToDataSourceServerSideEncryptionConfigurationOutput() DataSourceServerSideEncryptionConfigurationOutput
	ToDataSourceServerSideEncryptionConfigurationOutputWithContext(context.Context) DataSourceServerSideEncryptionConfigurationOutput
}

// Contains details about the server-side encryption for the data source.
type DataSourceServerSideEncryptionConfigurationArgs struct {
	// The ARN of the AWS KMS key used to encrypt the resource.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
}

func (DataSourceServerSideEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceServerSideEncryptionConfiguration)(nil)).Elem()
}

func (i DataSourceServerSideEncryptionConfigurationArgs) ToDataSourceServerSideEncryptionConfigurationOutput() DataSourceServerSideEncryptionConfigurationOutput {
	return i.ToDataSourceServerSideEncryptionConfigurationOutputWithContext(context.Background())
}

func (i DataSourceServerSideEncryptionConfigurationArgs) ToDataSourceServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) DataSourceServerSideEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceServerSideEncryptionConfigurationOutput)
}

func (i DataSourceServerSideEncryptionConfigurationArgs) ToDataSourceServerSideEncryptionConfigurationPtrOutput() DataSourceServerSideEncryptionConfigurationPtrOutput {
	return i.ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceServerSideEncryptionConfigurationArgs) ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceServerSideEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceServerSideEncryptionConfigurationOutput).ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(ctx)
}

// DataSourceServerSideEncryptionConfigurationPtrInput is an input type that accepts DataSourceServerSideEncryptionConfigurationArgs, DataSourceServerSideEncryptionConfigurationPtr and DataSourceServerSideEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceServerSideEncryptionConfigurationPtrInput` via:
//
//	        DataSourceServerSideEncryptionConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceServerSideEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceServerSideEncryptionConfigurationPtrOutput() DataSourceServerSideEncryptionConfigurationPtrOutput
	ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(context.Context) DataSourceServerSideEncryptionConfigurationPtrOutput
}

type dataSourceServerSideEncryptionConfigurationPtrType DataSourceServerSideEncryptionConfigurationArgs

func DataSourceServerSideEncryptionConfigurationPtr(v *DataSourceServerSideEncryptionConfigurationArgs) DataSourceServerSideEncryptionConfigurationPtrInput {
	return (*dataSourceServerSideEncryptionConfigurationPtrType)(v)
}

func (*dataSourceServerSideEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceServerSideEncryptionConfiguration)(nil)).Elem()
}

func (i *dataSourceServerSideEncryptionConfigurationPtrType) ToDataSourceServerSideEncryptionConfigurationPtrOutput() DataSourceServerSideEncryptionConfigurationPtrOutput {
	return i.ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceServerSideEncryptionConfigurationPtrType) ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceServerSideEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceServerSideEncryptionConfigurationPtrOutput)
}

// Contains details about the server-side encryption for the data source.
type DataSourceServerSideEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceServerSideEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceServerSideEncryptionConfiguration)(nil)).Elem()
}

func (o DataSourceServerSideEncryptionConfigurationOutput) ToDataSourceServerSideEncryptionConfigurationOutput() DataSourceServerSideEncryptionConfigurationOutput {
	return o
}

func (o DataSourceServerSideEncryptionConfigurationOutput) ToDataSourceServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) DataSourceServerSideEncryptionConfigurationOutput {
	return o
}

func (o DataSourceServerSideEncryptionConfigurationOutput) ToDataSourceServerSideEncryptionConfigurationPtrOutput() DataSourceServerSideEncryptionConfigurationPtrOutput {
	return o.ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceServerSideEncryptionConfigurationOutput) ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceServerSideEncryptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceServerSideEncryptionConfiguration) *DataSourceServerSideEncryptionConfiguration {
		return &v
	}).(DataSourceServerSideEncryptionConfigurationPtrOutput)
}

// The ARN of the AWS KMS key used to encrypt the resource.
func (o DataSourceServerSideEncryptionConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceServerSideEncryptionConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

type DataSourceServerSideEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceServerSideEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceServerSideEncryptionConfiguration)(nil)).Elem()
}

func (o DataSourceServerSideEncryptionConfigurationPtrOutput) ToDataSourceServerSideEncryptionConfigurationPtrOutput() DataSourceServerSideEncryptionConfigurationPtrOutput {
	return o
}

func (o DataSourceServerSideEncryptionConfigurationPtrOutput) ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceServerSideEncryptionConfigurationPtrOutput {
	return o
}

func (o DataSourceServerSideEncryptionConfigurationPtrOutput) Elem() DataSourceServerSideEncryptionConfigurationOutput {
	return o.ApplyT(func(v *DataSourceServerSideEncryptionConfiguration) DataSourceServerSideEncryptionConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceServerSideEncryptionConfiguration
		return ret
	}).(DataSourceServerSideEncryptionConfigurationOutput)
}

// The ARN of the AWS KMS key used to encrypt the resource.
func (o DataSourceServerSideEncryptionConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceServerSideEncryptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// The configuration of the SharePoint content. For example, configuring specific types of SharePoint content.
type DataSourceSharePointCrawlerConfiguration struct {
	// The configuration of filtering the SharePoint content. For example, configuring regular expression patterns to include or exclude certain content.
	FilterConfiguration *DataSourceCrawlFilterConfiguration `pulumi:"filterConfiguration"`
}

// DataSourceSharePointCrawlerConfigurationInput is an input type that accepts DataSourceSharePointCrawlerConfigurationArgs and DataSourceSharePointCrawlerConfigurationOutput values.
// You can construct a concrete instance of `DataSourceSharePointCrawlerConfigurationInput` via:
//
//	DataSourceSharePointCrawlerConfigurationArgs{...}
type DataSourceSharePointCrawlerConfigurationInput interface {
	pulumi.Input

	ToDataSourceSharePointCrawlerConfigurationOutput() DataSourceSharePointCrawlerConfigurationOutput
	ToDataSourceSharePointCrawlerConfigurationOutputWithContext(context.Context) DataSourceSharePointCrawlerConfigurationOutput
}

// The configuration of the SharePoint content. For example, configuring specific types of SharePoint content.
type DataSourceSharePointCrawlerConfigurationArgs struct {
	// The configuration of filtering the SharePoint content. For example, configuring regular expression patterns to include or exclude certain content.
	FilterConfiguration DataSourceCrawlFilterConfigurationPtrInput `pulumi:"filterConfiguration"`
}

func (DataSourceSharePointCrawlerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSharePointCrawlerConfiguration)(nil)).Elem()
}

func (i DataSourceSharePointCrawlerConfigurationArgs) ToDataSourceSharePointCrawlerConfigurationOutput() DataSourceSharePointCrawlerConfigurationOutput {
	return i.ToDataSourceSharePointCrawlerConfigurationOutputWithContext(context.Background())
}

func (i DataSourceSharePointCrawlerConfigurationArgs) ToDataSourceSharePointCrawlerConfigurationOutputWithContext(ctx context.Context) DataSourceSharePointCrawlerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSharePointCrawlerConfigurationOutput)
}

func (i DataSourceSharePointCrawlerConfigurationArgs) ToDataSourceSharePointCrawlerConfigurationPtrOutput() DataSourceSharePointCrawlerConfigurationPtrOutput {
	return i.ToDataSourceSharePointCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceSharePointCrawlerConfigurationArgs) ToDataSourceSharePointCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSharePointCrawlerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSharePointCrawlerConfigurationOutput).ToDataSourceSharePointCrawlerConfigurationPtrOutputWithContext(ctx)
}

// DataSourceSharePointCrawlerConfigurationPtrInput is an input type that accepts DataSourceSharePointCrawlerConfigurationArgs, DataSourceSharePointCrawlerConfigurationPtr and DataSourceSharePointCrawlerConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceSharePointCrawlerConfigurationPtrInput` via:
//
//	        DataSourceSharePointCrawlerConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceSharePointCrawlerConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceSharePointCrawlerConfigurationPtrOutput() DataSourceSharePointCrawlerConfigurationPtrOutput
	ToDataSourceSharePointCrawlerConfigurationPtrOutputWithContext(context.Context) DataSourceSharePointCrawlerConfigurationPtrOutput
}

type dataSourceSharePointCrawlerConfigurationPtrType DataSourceSharePointCrawlerConfigurationArgs

func DataSourceSharePointCrawlerConfigurationPtr(v *DataSourceSharePointCrawlerConfigurationArgs) DataSourceSharePointCrawlerConfigurationPtrInput {
	return (*dataSourceSharePointCrawlerConfigurationPtrType)(v)
}

func (*dataSourceSharePointCrawlerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSharePointCrawlerConfiguration)(nil)).Elem()
}

func (i *dataSourceSharePointCrawlerConfigurationPtrType) ToDataSourceSharePointCrawlerConfigurationPtrOutput() DataSourceSharePointCrawlerConfigurationPtrOutput {
	return i.ToDataSourceSharePointCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceSharePointCrawlerConfigurationPtrType) ToDataSourceSharePointCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSharePointCrawlerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSharePointCrawlerConfigurationPtrOutput)
}

// The configuration of the SharePoint content. For example, configuring specific types of SharePoint content.
type DataSourceSharePointCrawlerConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceSharePointCrawlerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSharePointCrawlerConfiguration)(nil)).Elem()
}

func (o DataSourceSharePointCrawlerConfigurationOutput) ToDataSourceSharePointCrawlerConfigurationOutput() DataSourceSharePointCrawlerConfigurationOutput {
	return o
}

func (o DataSourceSharePointCrawlerConfigurationOutput) ToDataSourceSharePointCrawlerConfigurationOutputWithContext(ctx context.Context) DataSourceSharePointCrawlerConfigurationOutput {
	return o
}

func (o DataSourceSharePointCrawlerConfigurationOutput) ToDataSourceSharePointCrawlerConfigurationPtrOutput() DataSourceSharePointCrawlerConfigurationPtrOutput {
	return o.ToDataSourceSharePointCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceSharePointCrawlerConfigurationOutput) ToDataSourceSharePointCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSharePointCrawlerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSharePointCrawlerConfiguration) *DataSourceSharePointCrawlerConfiguration {
		return &v
	}).(DataSourceSharePointCrawlerConfigurationPtrOutput)
}

// The configuration of filtering the SharePoint content. For example, configuring regular expression patterns to include or exclude certain content.
func (o DataSourceSharePointCrawlerConfigurationOutput) FilterConfiguration() DataSourceCrawlFilterConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceSharePointCrawlerConfiguration) *DataSourceCrawlFilterConfiguration {
		return v.FilterConfiguration
	}).(DataSourceCrawlFilterConfigurationPtrOutput)
}

type DataSourceSharePointCrawlerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSharePointCrawlerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSharePointCrawlerConfiguration)(nil)).Elem()
}

func (o DataSourceSharePointCrawlerConfigurationPtrOutput) ToDataSourceSharePointCrawlerConfigurationPtrOutput() DataSourceSharePointCrawlerConfigurationPtrOutput {
	return o
}

func (o DataSourceSharePointCrawlerConfigurationPtrOutput) ToDataSourceSharePointCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSharePointCrawlerConfigurationPtrOutput {
	return o
}

func (o DataSourceSharePointCrawlerConfigurationPtrOutput) Elem() DataSourceSharePointCrawlerConfigurationOutput {
	return o.ApplyT(func(v *DataSourceSharePointCrawlerConfiguration) DataSourceSharePointCrawlerConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceSharePointCrawlerConfiguration
		return ret
	}).(DataSourceSharePointCrawlerConfigurationOutput)
}

// The configuration of filtering the SharePoint content. For example, configuring regular expression patterns to include or exclude certain content.
func (o DataSourceSharePointCrawlerConfigurationPtrOutput) FilterConfiguration() DataSourceCrawlFilterConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceSharePointCrawlerConfiguration) *DataSourceCrawlFilterConfiguration {
		if v == nil {
			return nil
		}
		return v.FilterConfiguration
	}).(DataSourceCrawlFilterConfigurationPtrOutput)
}

// The configuration information to connect to SharePoint as your data source.
type DataSourceSharePointDataSourceConfiguration struct {
	// The configuration of the SharePoint content. For example, configuring specific types of SharePoint content.
	CrawlerConfiguration *DataSourceSharePointCrawlerConfiguration `pulumi:"crawlerConfiguration"`
	// The endpoint information to connect to your SharePoint data source.
	SourceConfiguration DataSourceSharePointSourceConfiguration `pulumi:"sourceConfiguration"`
}

// DataSourceSharePointDataSourceConfigurationInput is an input type that accepts DataSourceSharePointDataSourceConfigurationArgs and DataSourceSharePointDataSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceSharePointDataSourceConfigurationInput` via:
//
//	DataSourceSharePointDataSourceConfigurationArgs{...}
type DataSourceSharePointDataSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceSharePointDataSourceConfigurationOutput() DataSourceSharePointDataSourceConfigurationOutput
	ToDataSourceSharePointDataSourceConfigurationOutputWithContext(context.Context) DataSourceSharePointDataSourceConfigurationOutput
}

// The configuration information to connect to SharePoint as your data source.
type DataSourceSharePointDataSourceConfigurationArgs struct {
	// The configuration of the SharePoint content. For example, configuring specific types of SharePoint content.
	CrawlerConfiguration DataSourceSharePointCrawlerConfigurationPtrInput `pulumi:"crawlerConfiguration"`
	// The endpoint information to connect to your SharePoint data source.
	SourceConfiguration DataSourceSharePointSourceConfigurationInput `pulumi:"sourceConfiguration"`
}

func (DataSourceSharePointDataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSharePointDataSourceConfiguration)(nil)).Elem()
}

func (i DataSourceSharePointDataSourceConfigurationArgs) ToDataSourceSharePointDataSourceConfigurationOutput() DataSourceSharePointDataSourceConfigurationOutput {
	return i.ToDataSourceSharePointDataSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceSharePointDataSourceConfigurationArgs) ToDataSourceSharePointDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceSharePointDataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSharePointDataSourceConfigurationOutput)
}

func (i DataSourceSharePointDataSourceConfigurationArgs) ToDataSourceSharePointDataSourceConfigurationPtrOutput() DataSourceSharePointDataSourceConfigurationPtrOutput {
	return i.ToDataSourceSharePointDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceSharePointDataSourceConfigurationArgs) ToDataSourceSharePointDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSharePointDataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSharePointDataSourceConfigurationOutput).ToDataSourceSharePointDataSourceConfigurationPtrOutputWithContext(ctx)
}

// DataSourceSharePointDataSourceConfigurationPtrInput is an input type that accepts DataSourceSharePointDataSourceConfigurationArgs, DataSourceSharePointDataSourceConfigurationPtr and DataSourceSharePointDataSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceSharePointDataSourceConfigurationPtrInput` via:
//
//	        DataSourceSharePointDataSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceSharePointDataSourceConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceSharePointDataSourceConfigurationPtrOutput() DataSourceSharePointDataSourceConfigurationPtrOutput
	ToDataSourceSharePointDataSourceConfigurationPtrOutputWithContext(context.Context) DataSourceSharePointDataSourceConfigurationPtrOutput
}

type dataSourceSharePointDataSourceConfigurationPtrType DataSourceSharePointDataSourceConfigurationArgs

func DataSourceSharePointDataSourceConfigurationPtr(v *DataSourceSharePointDataSourceConfigurationArgs) DataSourceSharePointDataSourceConfigurationPtrInput {
	return (*dataSourceSharePointDataSourceConfigurationPtrType)(v)
}

func (*dataSourceSharePointDataSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSharePointDataSourceConfiguration)(nil)).Elem()
}

func (i *dataSourceSharePointDataSourceConfigurationPtrType) ToDataSourceSharePointDataSourceConfigurationPtrOutput() DataSourceSharePointDataSourceConfigurationPtrOutput {
	return i.ToDataSourceSharePointDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceSharePointDataSourceConfigurationPtrType) ToDataSourceSharePointDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSharePointDataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSharePointDataSourceConfigurationPtrOutput)
}

// The configuration information to connect to SharePoint as your data source.
type DataSourceSharePointDataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceSharePointDataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSharePointDataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceSharePointDataSourceConfigurationOutput) ToDataSourceSharePointDataSourceConfigurationOutput() DataSourceSharePointDataSourceConfigurationOutput {
	return o
}

func (o DataSourceSharePointDataSourceConfigurationOutput) ToDataSourceSharePointDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceSharePointDataSourceConfigurationOutput {
	return o
}

func (o DataSourceSharePointDataSourceConfigurationOutput) ToDataSourceSharePointDataSourceConfigurationPtrOutput() DataSourceSharePointDataSourceConfigurationPtrOutput {
	return o.ToDataSourceSharePointDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceSharePointDataSourceConfigurationOutput) ToDataSourceSharePointDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSharePointDataSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSharePointDataSourceConfiguration) *DataSourceSharePointDataSourceConfiguration {
		return &v
	}).(DataSourceSharePointDataSourceConfigurationPtrOutput)
}

// The configuration of the SharePoint content. For example, configuring specific types of SharePoint content.
func (o DataSourceSharePointDataSourceConfigurationOutput) CrawlerConfiguration() DataSourceSharePointCrawlerConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceSharePointDataSourceConfiguration) *DataSourceSharePointCrawlerConfiguration {
		return v.CrawlerConfiguration
	}).(DataSourceSharePointCrawlerConfigurationPtrOutput)
}

// The endpoint information to connect to your SharePoint data source.
func (o DataSourceSharePointDataSourceConfigurationOutput) SourceConfiguration() DataSourceSharePointSourceConfigurationOutput {
	return o.ApplyT(func(v DataSourceSharePointDataSourceConfiguration) DataSourceSharePointSourceConfiguration {
		return v.SourceConfiguration
	}).(DataSourceSharePointSourceConfigurationOutput)
}

type DataSourceSharePointDataSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSharePointDataSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSharePointDataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceSharePointDataSourceConfigurationPtrOutput) ToDataSourceSharePointDataSourceConfigurationPtrOutput() DataSourceSharePointDataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceSharePointDataSourceConfigurationPtrOutput) ToDataSourceSharePointDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSharePointDataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceSharePointDataSourceConfigurationPtrOutput) Elem() DataSourceSharePointDataSourceConfigurationOutput {
	return o.ApplyT(func(v *DataSourceSharePointDataSourceConfiguration) DataSourceSharePointDataSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceSharePointDataSourceConfiguration
		return ret
	}).(DataSourceSharePointDataSourceConfigurationOutput)
}

// The configuration of the SharePoint content. For example, configuring specific types of SharePoint content.
func (o DataSourceSharePointDataSourceConfigurationPtrOutput) CrawlerConfiguration() DataSourceSharePointCrawlerConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceSharePointDataSourceConfiguration) *DataSourceSharePointCrawlerConfiguration {
		if v == nil {
			return nil
		}
		return v.CrawlerConfiguration
	}).(DataSourceSharePointCrawlerConfigurationPtrOutput)
}

// The endpoint information to connect to your SharePoint data source.
func (o DataSourceSharePointDataSourceConfigurationPtrOutput) SourceConfiguration() DataSourceSharePointSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceSharePointDataSourceConfiguration) *DataSourceSharePointSourceConfiguration {
		if v == nil {
			return nil
		}
		return &v.SourceConfiguration
	}).(DataSourceSharePointSourceConfigurationPtrOutput)
}

// The endpoint information to connect to your SharePoint data source.
type DataSourceSharePointSourceConfiguration struct {
	// The supported authentication type to authenticate and connect to your SharePoint site/sites.
	AuthType DataSourceSharePointSourceConfigurationAuthType `pulumi:"authType"`
	// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site/sites. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration.
	CredentialsSecretArn string `pulumi:"credentialsSecretArn"`
	// The domain of your SharePoint instance or site URL/URLs.
	Domain string `pulumi:"domain"`
	// The supported host type, whether online/cloud or server/on-premises.
	HostType DataSourceSharePointSourceConfigurationHostType `pulumi:"hostType"`
	// A list of one or more SharePoint site URLs.
	SiteUrls []string `pulumi:"siteUrls"`
	// The identifier of your Microsoft 365 tenant.
	TenantId *string `pulumi:"tenantId"`
}

// DataSourceSharePointSourceConfigurationInput is an input type that accepts DataSourceSharePointSourceConfigurationArgs and DataSourceSharePointSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceSharePointSourceConfigurationInput` via:
//
//	DataSourceSharePointSourceConfigurationArgs{...}
type DataSourceSharePointSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceSharePointSourceConfigurationOutput() DataSourceSharePointSourceConfigurationOutput
	ToDataSourceSharePointSourceConfigurationOutputWithContext(context.Context) DataSourceSharePointSourceConfigurationOutput
}

// The endpoint information to connect to your SharePoint data source.
type DataSourceSharePointSourceConfigurationArgs struct {
	// The supported authentication type to authenticate and connect to your SharePoint site/sites.
	AuthType DataSourceSharePointSourceConfigurationAuthTypeInput `pulumi:"authType"`
	// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site/sites. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration.
	CredentialsSecretArn pulumi.StringInput `pulumi:"credentialsSecretArn"`
	// The domain of your SharePoint instance or site URL/URLs.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The supported host type, whether online/cloud or server/on-premises.
	HostType DataSourceSharePointSourceConfigurationHostTypeInput `pulumi:"hostType"`
	// A list of one or more SharePoint site URLs.
	SiteUrls pulumi.StringArrayInput `pulumi:"siteUrls"`
	// The identifier of your Microsoft 365 tenant.
	TenantId pulumi.StringPtrInput `pulumi:"tenantId"`
}

func (DataSourceSharePointSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSharePointSourceConfiguration)(nil)).Elem()
}

func (i DataSourceSharePointSourceConfigurationArgs) ToDataSourceSharePointSourceConfigurationOutput() DataSourceSharePointSourceConfigurationOutput {
	return i.ToDataSourceSharePointSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceSharePointSourceConfigurationArgs) ToDataSourceSharePointSourceConfigurationOutputWithContext(ctx context.Context) DataSourceSharePointSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSharePointSourceConfigurationOutput)
}

func (i DataSourceSharePointSourceConfigurationArgs) ToDataSourceSharePointSourceConfigurationPtrOutput() DataSourceSharePointSourceConfigurationPtrOutput {
	return i.ToDataSourceSharePointSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceSharePointSourceConfigurationArgs) ToDataSourceSharePointSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSharePointSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSharePointSourceConfigurationOutput).ToDataSourceSharePointSourceConfigurationPtrOutputWithContext(ctx)
}

// DataSourceSharePointSourceConfigurationPtrInput is an input type that accepts DataSourceSharePointSourceConfigurationArgs, DataSourceSharePointSourceConfigurationPtr and DataSourceSharePointSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceSharePointSourceConfigurationPtrInput` via:
//
//	        DataSourceSharePointSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceSharePointSourceConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceSharePointSourceConfigurationPtrOutput() DataSourceSharePointSourceConfigurationPtrOutput
	ToDataSourceSharePointSourceConfigurationPtrOutputWithContext(context.Context) DataSourceSharePointSourceConfigurationPtrOutput
}

type dataSourceSharePointSourceConfigurationPtrType DataSourceSharePointSourceConfigurationArgs

func DataSourceSharePointSourceConfigurationPtr(v *DataSourceSharePointSourceConfigurationArgs) DataSourceSharePointSourceConfigurationPtrInput {
	return (*dataSourceSharePointSourceConfigurationPtrType)(v)
}

func (*dataSourceSharePointSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSharePointSourceConfiguration)(nil)).Elem()
}

func (i *dataSourceSharePointSourceConfigurationPtrType) ToDataSourceSharePointSourceConfigurationPtrOutput() DataSourceSharePointSourceConfigurationPtrOutput {
	return i.ToDataSourceSharePointSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceSharePointSourceConfigurationPtrType) ToDataSourceSharePointSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSharePointSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSharePointSourceConfigurationPtrOutput)
}

// The endpoint information to connect to your SharePoint data source.
type DataSourceSharePointSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceSharePointSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSharePointSourceConfiguration)(nil)).Elem()
}

func (o DataSourceSharePointSourceConfigurationOutput) ToDataSourceSharePointSourceConfigurationOutput() DataSourceSharePointSourceConfigurationOutput {
	return o
}

func (o DataSourceSharePointSourceConfigurationOutput) ToDataSourceSharePointSourceConfigurationOutputWithContext(ctx context.Context) DataSourceSharePointSourceConfigurationOutput {
	return o
}

func (o DataSourceSharePointSourceConfigurationOutput) ToDataSourceSharePointSourceConfigurationPtrOutput() DataSourceSharePointSourceConfigurationPtrOutput {
	return o.ToDataSourceSharePointSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceSharePointSourceConfigurationOutput) ToDataSourceSharePointSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSharePointSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSharePointSourceConfiguration) *DataSourceSharePointSourceConfiguration {
		return &v
	}).(DataSourceSharePointSourceConfigurationPtrOutput)
}

// The supported authentication type to authenticate and connect to your SharePoint site/sites.
func (o DataSourceSharePointSourceConfigurationOutput) AuthType() DataSourceSharePointSourceConfigurationAuthTypeOutput {
	return o.ApplyT(func(v DataSourceSharePointSourceConfiguration) DataSourceSharePointSourceConfigurationAuthType {
		return v.AuthType
	}).(DataSourceSharePointSourceConfigurationAuthTypeOutput)
}

// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site/sites. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration.
func (o DataSourceSharePointSourceConfigurationOutput) CredentialsSecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSharePointSourceConfiguration) string { return v.CredentialsSecretArn }).(pulumi.StringOutput)
}

// The domain of your SharePoint instance or site URL/URLs.
func (o DataSourceSharePointSourceConfigurationOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceSharePointSourceConfiguration) string { return v.Domain }).(pulumi.StringOutput)
}

// The supported host type, whether online/cloud or server/on-premises.
func (o DataSourceSharePointSourceConfigurationOutput) HostType() DataSourceSharePointSourceConfigurationHostTypeOutput {
	return o.ApplyT(func(v DataSourceSharePointSourceConfiguration) DataSourceSharePointSourceConfigurationHostType {
		return v.HostType
	}).(DataSourceSharePointSourceConfigurationHostTypeOutput)
}

// A list of one or more SharePoint site URLs.
func (o DataSourceSharePointSourceConfigurationOutput) SiteUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSourceSharePointSourceConfiguration) []string { return v.SiteUrls }).(pulumi.StringArrayOutput)
}

// The identifier of your Microsoft 365 tenant.
func (o DataSourceSharePointSourceConfigurationOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceSharePointSourceConfiguration) *string { return v.TenantId }).(pulumi.StringPtrOutput)
}

type DataSourceSharePointSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSharePointSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSharePointSourceConfiguration)(nil)).Elem()
}

func (o DataSourceSharePointSourceConfigurationPtrOutput) ToDataSourceSharePointSourceConfigurationPtrOutput() DataSourceSharePointSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceSharePointSourceConfigurationPtrOutput) ToDataSourceSharePointSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceSharePointSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceSharePointSourceConfigurationPtrOutput) Elem() DataSourceSharePointSourceConfigurationOutput {
	return o.ApplyT(func(v *DataSourceSharePointSourceConfiguration) DataSourceSharePointSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceSharePointSourceConfiguration
		return ret
	}).(DataSourceSharePointSourceConfigurationOutput)
}

// The supported authentication type to authenticate and connect to your SharePoint site/sites.
func (o DataSourceSharePointSourceConfigurationPtrOutput) AuthType() DataSourceSharePointSourceConfigurationAuthTypePtrOutput {
	return o.ApplyT(func(v *DataSourceSharePointSourceConfiguration) *DataSourceSharePointSourceConfigurationAuthType {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(DataSourceSharePointSourceConfigurationAuthTypePtrOutput)
}

// The Amazon Resource Name of an AWS Secrets Manager secret that stores your authentication credentials for your SharePoint site/sites. For more information on the key-value pairs that must be included in your secret, depending on your authentication type, see SharePoint connection configuration.
func (o DataSourceSharePointSourceConfigurationPtrOutput) CredentialsSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSharePointSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialsSecretArn
	}).(pulumi.StringPtrOutput)
}

// The domain of your SharePoint instance or site URL/URLs.
func (o DataSourceSharePointSourceConfigurationPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSharePointSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Domain
	}).(pulumi.StringPtrOutput)
}

// The supported host type, whether online/cloud or server/on-premises.
func (o DataSourceSharePointSourceConfigurationPtrOutput) HostType() DataSourceSharePointSourceConfigurationHostTypePtrOutput {
	return o.ApplyT(func(v *DataSourceSharePointSourceConfiguration) *DataSourceSharePointSourceConfigurationHostType {
		if v == nil {
			return nil
		}
		return &v.HostType
	}).(DataSourceSharePointSourceConfigurationHostTypePtrOutput)
}

// A list of one or more SharePoint site URLs.
func (o DataSourceSharePointSourceConfigurationPtrOutput) SiteUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataSourceSharePointSourceConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SiteUrls
	}).(pulumi.StringArrayOutput)
}

// The identifier of your Microsoft 365 tenant.
func (o DataSourceSharePointSourceConfigurationPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceSharePointSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TenantId
	}).(pulumi.StringPtrOutput)
}

// A Lambda function that processes documents.
type DataSourceTransformation struct {
	// When the service applies the transformation.
	StepToApply DataSourceTransformationStepToApply `pulumi:"stepToApply"`
	// A Lambda function that processes documents.
	TransformationFunction DataSourceTransformationFunction `pulumi:"transformationFunction"`
}

// DataSourceTransformationInput is an input type that accepts DataSourceTransformationArgs and DataSourceTransformationOutput values.
// You can construct a concrete instance of `DataSourceTransformationInput` via:
//
//	DataSourceTransformationArgs{...}
type DataSourceTransformationInput interface {
	pulumi.Input

	ToDataSourceTransformationOutput() DataSourceTransformationOutput
	ToDataSourceTransformationOutputWithContext(context.Context) DataSourceTransformationOutput
}

// A Lambda function that processes documents.
type DataSourceTransformationArgs struct {
	// When the service applies the transformation.
	StepToApply DataSourceTransformationStepToApplyInput `pulumi:"stepToApply"`
	// A Lambda function that processes documents.
	TransformationFunction DataSourceTransformationFunctionInput `pulumi:"transformationFunction"`
}

func (DataSourceTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTransformation)(nil)).Elem()
}

func (i DataSourceTransformationArgs) ToDataSourceTransformationOutput() DataSourceTransformationOutput {
	return i.ToDataSourceTransformationOutputWithContext(context.Background())
}

func (i DataSourceTransformationArgs) ToDataSourceTransformationOutputWithContext(ctx context.Context) DataSourceTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTransformationOutput)
}

// DataSourceTransformationArrayInput is an input type that accepts DataSourceTransformationArray and DataSourceTransformationArrayOutput values.
// You can construct a concrete instance of `DataSourceTransformationArrayInput` via:
//
//	DataSourceTransformationArray{ DataSourceTransformationArgs{...} }
type DataSourceTransformationArrayInput interface {
	pulumi.Input

	ToDataSourceTransformationArrayOutput() DataSourceTransformationArrayOutput
	ToDataSourceTransformationArrayOutputWithContext(context.Context) DataSourceTransformationArrayOutput
}

type DataSourceTransformationArray []DataSourceTransformationInput

func (DataSourceTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceTransformation)(nil)).Elem()
}

func (i DataSourceTransformationArray) ToDataSourceTransformationArrayOutput() DataSourceTransformationArrayOutput {
	return i.ToDataSourceTransformationArrayOutputWithContext(context.Background())
}

func (i DataSourceTransformationArray) ToDataSourceTransformationArrayOutputWithContext(ctx context.Context) DataSourceTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTransformationArrayOutput)
}

// A Lambda function that processes documents.
type DataSourceTransformationOutput struct{ *pulumi.OutputState }

func (DataSourceTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTransformation)(nil)).Elem()
}

func (o DataSourceTransformationOutput) ToDataSourceTransformationOutput() DataSourceTransformationOutput {
	return o
}

func (o DataSourceTransformationOutput) ToDataSourceTransformationOutputWithContext(ctx context.Context) DataSourceTransformationOutput {
	return o
}

// When the service applies the transformation.
func (o DataSourceTransformationOutput) StepToApply() DataSourceTransformationStepToApplyOutput {
	return o.ApplyT(func(v DataSourceTransformation) DataSourceTransformationStepToApply { return v.StepToApply }).(DataSourceTransformationStepToApplyOutput)
}

// A Lambda function that processes documents.
func (o DataSourceTransformationOutput) TransformationFunction() DataSourceTransformationFunctionOutput {
	return o.ApplyT(func(v DataSourceTransformation) DataSourceTransformationFunction { return v.TransformationFunction }).(DataSourceTransformationFunctionOutput)
}

type DataSourceTransformationArrayOutput struct{ *pulumi.OutputState }

func (DataSourceTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceTransformation)(nil)).Elem()
}

func (o DataSourceTransformationArrayOutput) ToDataSourceTransformationArrayOutput() DataSourceTransformationArrayOutput {
	return o
}

func (o DataSourceTransformationArrayOutput) ToDataSourceTransformationArrayOutputWithContext(ctx context.Context) DataSourceTransformationArrayOutput {
	return o
}

func (o DataSourceTransformationArrayOutput) Index(i pulumi.IntInput) DataSourceTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceTransformation {
		return vs[0].([]DataSourceTransformation)[vs[1].(int)]
	}).(DataSourceTransformationOutput)
}

// A Lambda function that processes documents.
type DataSourceTransformationFunction struct {
	// The Lambda function.
	TransformationLambdaConfiguration DataSourceTransformationLambdaConfiguration `pulumi:"transformationLambdaConfiguration"`
}

// DataSourceTransformationFunctionInput is an input type that accepts DataSourceTransformationFunctionArgs and DataSourceTransformationFunctionOutput values.
// You can construct a concrete instance of `DataSourceTransformationFunctionInput` via:
//
//	DataSourceTransformationFunctionArgs{...}
type DataSourceTransformationFunctionInput interface {
	pulumi.Input

	ToDataSourceTransformationFunctionOutput() DataSourceTransformationFunctionOutput
	ToDataSourceTransformationFunctionOutputWithContext(context.Context) DataSourceTransformationFunctionOutput
}

// A Lambda function that processes documents.
type DataSourceTransformationFunctionArgs struct {
	// The Lambda function.
	TransformationLambdaConfiguration DataSourceTransformationLambdaConfigurationInput `pulumi:"transformationLambdaConfiguration"`
}

func (DataSourceTransformationFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTransformationFunction)(nil)).Elem()
}

func (i DataSourceTransformationFunctionArgs) ToDataSourceTransformationFunctionOutput() DataSourceTransformationFunctionOutput {
	return i.ToDataSourceTransformationFunctionOutputWithContext(context.Background())
}

func (i DataSourceTransformationFunctionArgs) ToDataSourceTransformationFunctionOutputWithContext(ctx context.Context) DataSourceTransformationFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTransformationFunctionOutput)
}

// A Lambda function that processes documents.
type DataSourceTransformationFunctionOutput struct{ *pulumi.OutputState }

func (DataSourceTransformationFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTransformationFunction)(nil)).Elem()
}

func (o DataSourceTransformationFunctionOutput) ToDataSourceTransformationFunctionOutput() DataSourceTransformationFunctionOutput {
	return o
}

func (o DataSourceTransformationFunctionOutput) ToDataSourceTransformationFunctionOutputWithContext(ctx context.Context) DataSourceTransformationFunctionOutput {
	return o
}

// The Lambda function.
func (o DataSourceTransformationFunctionOutput) TransformationLambdaConfiguration() DataSourceTransformationLambdaConfigurationOutput {
	return o.ApplyT(func(v DataSourceTransformationFunction) DataSourceTransformationLambdaConfiguration {
		return v.TransformationLambdaConfiguration
	}).(DataSourceTransformationLambdaConfigurationOutput)
}

// A Lambda function that processes documents.
type DataSourceTransformationLambdaConfiguration struct {
	// The function's ARN identifier.
	LambdaArn string `pulumi:"lambdaArn"`
}

// DataSourceTransformationLambdaConfigurationInput is an input type that accepts DataSourceTransformationLambdaConfigurationArgs and DataSourceTransformationLambdaConfigurationOutput values.
// You can construct a concrete instance of `DataSourceTransformationLambdaConfigurationInput` via:
//
//	DataSourceTransformationLambdaConfigurationArgs{...}
type DataSourceTransformationLambdaConfigurationInput interface {
	pulumi.Input

	ToDataSourceTransformationLambdaConfigurationOutput() DataSourceTransformationLambdaConfigurationOutput
	ToDataSourceTransformationLambdaConfigurationOutputWithContext(context.Context) DataSourceTransformationLambdaConfigurationOutput
}

// A Lambda function that processes documents.
type DataSourceTransformationLambdaConfigurationArgs struct {
	// The function's ARN identifier.
	LambdaArn pulumi.StringInput `pulumi:"lambdaArn"`
}

func (DataSourceTransformationLambdaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTransformationLambdaConfiguration)(nil)).Elem()
}

func (i DataSourceTransformationLambdaConfigurationArgs) ToDataSourceTransformationLambdaConfigurationOutput() DataSourceTransformationLambdaConfigurationOutput {
	return i.ToDataSourceTransformationLambdaConfigurationOutputWithContext(context.Background())
}

func (i DataSourceTransformationLambdaConfigurationArgs) ToDataSourceTransformationLambdaConfigurationOutputWithContext(ctx context.Context) DataSourceTransformationLambdaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceTransformationLambdaConfigurationOutput)
}

// A Lambda function that processes documents.
type DataSourceTransformationLambdaConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceTransformationLambdaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceTransformationLambdaConfiguration)(nil)).Elem()
}

func (o DataSourceTransformationLambdaConfigurationOutput) ToDataSourceTransformationLambdaConfigurationOutput() DataSourceTransformationLambdaConfigurationOutput {
	return o
}

func (o DataSourceTransformationLambdaConfigurationOutput) ToDataSourceTransformationLambdaConfigurationOutputWithContext(ctx context.Context) DataSourceTransformationLambdaConfigurationOutput {
	return o
}

// The function's ARN identifier.
func (o DataSourceTransformationLambdaConfigurationOutput) LambdaArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceTransformationLambdaConfiguration) string { return v.LambdaArn }).(pulumi.StringOutput)
}

// A url configuration.
type DataSourceUrlConfiguration struct {
	// One or more seed or starting point URLs.
	SeedUrls []DataSourceSeedUrl `pulumi:"seedUrls"`
}

// DataSourceUrlConfigurationInput is an input type that accepts DataSourceUrlConfigurationArgs and DataSourceUrlConfigurationOutput values.
// You can construct a concrete instance of `DataSourceUrlConfigurationInput` via:
//
//	DataSourceUrlConfigurationArgs{...}
type DataSourceUrlConfigurationInput interface {
	pulumi.Input

	ToDataSourceUrlConfigurationOutput() DataSourceUrlConfigurationOutput
	ToDataSourceUrlConfigurationOutputWithContext(context.Context) DataSourceUrlConfigurationOutput
}

// A url configuration.
type DataSourceUrlConfigurationArgs struct {
	// One or more seed or starting point URLs.
	SeedUrls DataSourceSeedUrlArrayInput `pulumi:"seedUrls"`
}

func (DataSourceUrlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceUrlConfiguration)(nil)).Elem()
}

func (i DataSourceUrlConfigurationArgs) ToDataSourceUrlConfigurationOutput() DataSourceUrlConfigurationOutput {
	return i.ToDataSourceUrlConfigurationOutputWithContext(context.Background())
}

func (i DataSourceUrlConfigurationArgs) ToDataSourceUrlConfigurationOutputWithContext(ctx context.Context) DataSourceUrlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceUrlConfigurationOutput)
}

func (i DataSourceUrlConfigurationArgs) ToDataSourceUrlConfigurationPtrOutput() DataSourceUrlConfigurationPtrOutput {
	return i.ToDataSourceUrlConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceUrlConfigurationArgs) ToDataSourceUrlConfigurationPtrOutputWithContext(ctx context.Context) DataSourceUrlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceUrlConfigurationOutput).ToDataSourceUrlConfigurationPtrOutputWithContext(ctx)
}

// DataSourceUrlConfigurationPtrInput is an input type that accepts DataSourceUrlConfigurationArgs, DataSourceUrlConfigurationPtr and DataSourceUrlConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceUrlConfigurationPtrInput` via:
//
//	        DataSourceUrlConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceUrlConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceUrlConfigurationPtrOutput() DataSourceUrlConfigurationPtrOutput
	ToDataSourceUrlConfigurationPtrOutputWithContext(context.Context) DataSourceUrlConfigurationPtrOutput
}

type dataSourceUrlConfigurationPtrType DataSourceUrlConfigurationArgs

func DataSourceUrlConfigurationPtr(v *DataSourceUrlConfigurationArgs) DataSourceUrlConfigurationPtrInput {
	return (*dataSourceUrlConfigurationPtrType)(v)
}

func (*dataSourceUrlConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceUrlConfiguration)(nil)).Elem()
}

func (i *dataSourceUrlConfigurationPtrType) ToDataSourceUrlConfigurationPtrOutput() DataSourceUrlConfigurationPtrOutput {
	return i.ToDataSourceUrlConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceUrlConfigurationPtrType) ToDataSourceUrlConfigurationPtrOutputWithContext(ctx context.Context) DataSourceUrlConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceUrlConfigurationPtrOutput)
}

// A url configuration.
type DataSourceUrlConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceUrlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceUrlConfiguration)(nil)).Elem()
}

func (o DataSourceUrlConfigurationOutput) ToDataSourceUrlConfigurationOutput() DataSourceUrlConfigurationOutput {
	return o
}

func (o DataSourceUrlConfigurationOutput) ToDataSourceUrlConfigurationOutputWithContext(ctx context.Context) DataSourceUrlConfigurationOutput {
	return o
}

func (o DataSourceUrlConfigurationOutput) ToDataSourceUrlConfigurationPtrOutput() DataSourceUrlConfigurationPtrOutput {
	return o.ToDataSourceUrlConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceUrlConfigurationOutput) ToDataSourceUrlConfigurationPtrOutputWithContext(ctx context.Context) DataSourceUrlConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceUrlConfiguration) *DataSourceUrlConfiguration {
		return &v
	}).(DataSourceUrlConfigurationPtrOutput)
}

// One or more seed or starting point URLs.
func (o DataSourceUrlConfigurationOutput) SeedUrls() DataSourceSeedUrlArrayOutput {
	return o.ApplyT(func(v DataSourceUrlConfiguration) []DataSourceSeedUrl { return v.SeedUrls }).(DataSourceSeedUrlArrayOutput)
}

type DataSourceUrlConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceUrlConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceUrlConfiguration)(nil)).Elem()
}

func (o DataSourceUrlConfigurationPtrOutput) ToDataSourceUrlConfigurationPtrOutput() DataSourceUrlConfigurationPtrOutput {
	return o
}

func (o DataSourceUrlConfigurationPtrOutput) ToDataSourceUrlConfigurationPtrOutputWithContext(ctx context.Context) DataSourceUrlConfigurationPtrOutput {
	return o
}

func (o DataSourceUrlConfigurationPtrOutput) Elem() DataSourceUrlConfigurationOutput {
	return o.ApplyT(func(v *DataSourceUrlConfiguration) DataSourceUrlConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceUrlConfiguration
		return ret
	}).(DataSourceUrlConfigurationOutput)
}

// One or more seed or starting point URLs.
func (o DataSourceUrlConfigurationPtrOutput) SeedUrls() DataSourceSeedUrlArrayOutput {
	return o.ApplyT(func(v *DataSourceUrlConfiguration) []DataSourceSeedUrl {
		if v == nil {
			return nil
		}
		return v.SeedUrls
	}).(DataSourceSeedUrlArrayOutput)
}

// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
type DataSourceVectorIngestionConfiguration struct {
	// Details about how to chunk the documents in the data source. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
	ChunkingConfiguration *DataSourceChunkingConfiguration `pulumi:"chunkingConfiguration"`
	// A custom document transformer for parsed data source documents.
	CustomTransformationConfiguration *DataSourceCustomTransformationConfiguration `pulumi:"customTransformationConfiguration"`
	// A custom parser for data source documents.
	ParsingConfiguration *DataSourceParsingConfiguration `pulumi:"parsingConfiguration"`
}

// DataSourceVectorIngestionConfigurationInput is an input type that accepts DataSourceVectorIngestionConfigurationArgs and DataSourceVectorIngestionConfigurationOutput values.
// You can construct a concrete instance of `DataSourceVectorIngestionConfigurationInput` via:
//
//	DataSourceVectorIngestionConfigurationArgs{...}
type DataSourceVectorIngestionConfigurationInput interface {
	pulumi.Input

	ToDataSourceVectorIngestionConfigurationOutput() DataSourceVectorIngestionConfigurationOutput
	ToDataSourceVectorIngestionConfigurationOutputWithContext(context.Context) DataSourceVectorIngestionConfigurationOutput
}

// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
type DataSourceVectorIngestionConfigurationArgs struct {
	// Details about how to chunk the documents in the data source. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
	ChunkingConfiguration DataSourceChunkingConfigurationPtrInput `pulumi:"chunkingConfiguration"`
	// A custom document transformer for parsed data source documents.
	CustomTransformationConfiguration DataSourceCustomTransformationConfigurationPtrInput `pulumi:"customTransformationConfiguration"`
	// A custom parser for data source documents.
	ParsingConfiguration DataSourceParsingConfigurationPtrInput `pulumi:"parsingConfiguration"`
}

func (DataSourceVectorIngestionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceVectorIngestionConfiguration)(nil)).Elem()
}

func (i DataSourceVectorIngestionConfigurationArgs) ToDataSourceVectorIngestionConfigurationOutput() DataSourceVectorIngestionConfigurationOutput {
	return i.ToDataSourceVectorIngestionConfigurationOutputWithContext(context.Background())
}

func (i DataSourceVectorIngestionConfigurationArgs) ToDataSourceVectorIngestionConfigurationOutputWithContext(ctx context.Context) DataSourceVectorIngestionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVectorIngestionConfigurationOutput)
}

func (i DataSourceVectorIngestionConfigurationArgs) ToDataSourceVectorIngestionConfigurationPtrOutput() DataSourceVectorIngestionConfigurationPtrOutput {
	return i.ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceVectorIngestionConfigurationArgs) ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceVectorIngestionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVectorIngestionConfigurationOutput).ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(ctx)
}

// DataSourceVectorIngestionConfigurationPtrInput is an input type that accepts DataSourceVectorIngestionConfigurationArgs, DataSourceVectorIngestionConfigurationPtr and DataSourceVectorIngestionConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceVectorIngestionConfigurationPtrInput` via:
//
//	        DataSourceVectorIngestionConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceVectorIngestionConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceVectorIngestionConfigurationPtrOutput() DataSourceVectorIngestionConfigurationPtrOutput
	ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(context.Context) DataSourceVectorIngestionConfigurationPtrOutput
}

type dataSourceVectorIngestionConfigurationPtrType DataSourceVectorIngestionConfigurationArgs

func DataSourceVectorIngestionConfigurationPtr(v *DataSourceVectorIngestionConfigurationArgs) DataSourceVectorIngestionConfigurationPtrInput {
	return (*dataSourceVectorIngestionConfigurationPtrType)(v)
}

func (*dataSourceVectorIngestionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceVectorIngestionConfiguration)(nil)).Elem()
}

func (i *dataSourceVectorIngestionConfigurationPtrType) ToDataSourceVectorIngestionConfigurationPtrOutput() DataSourceVectorIngestionConfigurationPtrOutput {
	return i.ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceVectorIngestionConfigurationPtrType) ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceVectorIngestionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVectorIngestionConfigurationPtrOutput)
}

// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
type DataSourceVectorIngestionConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceVectorIngestionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceVectorIngestionConfiguration)(nil)).Elem()
}

func (o DataSourceVectorIngestionConfigurationOutput) ToDataSourceVectorIngestionConfigurationOutput() DataSourceVectorIngestionConfigurationOutput {
	return o
}

func (o DataSourceVectorIngestionConfigurationOutput) ToDataSourceVectorIngestionConfigurationOutputWithContext(ctx context.Context) DataSourceVectorIngestionConfigurationOutput {
	return o
}

func (o DataSourceVectorIngestionConfigurationOutput) ToDataSourceVectorIngestionConfigurationPtrOutput() DataSourceVectorIngestionConfigurationPtrOutput {
	return o.ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceVectorIngestionConfigurationOutput) ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceVectorIngestionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceVectorIngestionConfiguration) *DataSourceVectorIngestionConfiguration {
		return &v
	}).(DataSourceVectorIngestionConfigurationPtrOutput)
}

// Details about how to chunk the documents in the data source. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
func (o DataSourceVectorIngestionConfigurationOutput) ChunkingConfiguration() DataSourceChunkingConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceVectorIngestionConfiguration) *DataSourceChunkingConfiguration {
		return v.ChunkingConfiguration
	}).(DataSourceChunkingConfigurationPtrOutput)
}

// A custom document transformer for parsed data source documents.
func (o DataSourceVectorIngestionConfigurationOutput) CustomTransformationConfiguration() DataSourceCustomTransformationConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceVectorIngestionConfiguration) *DataSourceCustomTransformationConfiguration {
		return v.CustomTransformationConfiguration
	}).(DataSourceCustomTransformationConfigurationPtrOutput)
}

// A custom parser for data source documents.
func (o DataSourceVectorIngestionConfigurationOutput) ParsingConfiguration() DataSourceParsingConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceVectorIngestionConfiguration) *DataSourceParsingConfiguration {
		return v.ParsingConfiguration
	}).(DataSourceParsingConfigurationPtrOutput)
}

type DataSourceVectorIngestionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceVectorIngestionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceVectorIngestionConfiguration)(nil)).Elem()
}

func (o DataSourceVectorIngestionConfigurationPtrOutput) ToDataSourceVectorIngestionConfigurationPtrOutput() DataSourceVectorIngestionConfigurationPtrOutput {
	return o
}

func (o DataSourceVectorIngestionConfigurationPtrOutput) ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceVectorIngestionConfigurationPtrOutput {
	return o
}

func (o DataSourceVectorIngestionConfigurationPtrOutput) Elem() DataSourceVectorIngestionConfigurationOutput {
	return o.ApplyT(func(v *DataSourceVectorIngestionConfiguration) DataSourceVectorIngestionConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceVectorIngestionConfiguration
		return ret
	}).(DataSourceVectorIngestionConfigurationOutput)
}

// Details about how to chunk the documents in the data source. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
func (o DataSourceVectorIngestionConfigurationPtrOutput) ChunkingConfiguration() DataSourceChunkingConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceVectorIngestionConfiguration) *DataSourceChunkingConfiguration {
		if v == nil {
			return nil
		}
		return v.ChunkingConfiguration
	}).(DataSourceChunkingConfigurationPtrOutput)
}

// A custom document transformer for parsed data source documents.
func (o DataSourceVectorIngestionConfigurationPtrOutput) CustomTransformationConfiguration() DataSourceCustomTransformationConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceVectorIngestionConfiguration) *DataSourceCustomTransformationConfiguration {
		if v == nil {
			return nil
		}
		return v.CustomTransformationConfiguration
	}).(DataSourceCustomTransformationConfigurationPtrOutput)
}

// A custom parser for data source documents.
func (o DataSourceVectorIngestionConfigurationPtrOutput) ParsingConfiguration() DataSourceParsingConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceVectorIngestionConfiguration) *DataSourceParsingConfiguration {
		if v == nil {
			return nil
		}
		return v.ParsingConfiguration
	}).(DataSourceParsingConfigurationPtrOutput)
}

// Configuration for the web crawler.
type DataSourceWebCrawlerConfiguration struct {
	// The configuration of crawl limits for the web URLs.
	CrawlerLimits *DataSourceWebCrawlerLimits `pulumi:"crawlerLimits"`
	// A list of one or more exclusion regular expression patterns to exclude certain URLs. If you specify an inclusion and exclusion filter/pattern and both match a URL, the exclusion filter takes precedence and the web content of the URL isn’t crawled.
	ExclusionFilters []string `pulumi:"exclusionFilters"`
	// A list of one or more inclusion regular expression patterns to include certain URLs. If you specify an inclusion and exclusion filter/pattern and both match a URL, the exclusion filter takes precedence and the web content of the URL isn’t crawled.
	InclusionFilters []string `pulumi:"inclusionFilters"`
	// The scope of what is crawled for your URLs.
	//
	// You can choose to crawl only web pages that belong to the same host or primary domain. For example, only web pages that contain the seed URL "https://docs.aws.amazon.com/bedrock/latest/userguide/" and no other domains. You can choose to include sub domains in addition to the host or primary domain. For example, web pages that contain "aws.amazon.com" can also include sub domain "docs.aws.amazon.com".
	Scope *DataSourceWebScopeType `pulumi:"scope"`
}

// DataSourceWebCrawlerConfigurationInput is an input type that accepts DataSourceWebCrawlerConfigurationArgs and DataSourceWebCrawlerConfigurationOutput values.
// You can construct a concrete instance of `DataSourceWebCrawlerConfigurationInput` via:
//
//	DataSourceWebCrawlerConfigurationArgs{...}
type DataSourceWebCrawlerConfigurationInput interface {
	pulumi.Input

	ToDataSourceWebCrawlerConfigurationOutput() DataSourceWebCrawlerConfigurationOutput
	ToDataSourceWebCrawlerConfigurationOutputWithContext(context.Context) DataSourceWebCrawlerConfigurationOutput
}

// Configuration for the web crawler.
type DataSourceWebCrawlerConfigurationArgs struct {
	// The configuration of crawl limits for the web URLs.
	CrawlerLimits DataSourceWebCrawlerLimitsPtrInput `pulumi:"crawlerLimits"`
	// A list of one or more exclusion regular expression patterns to exclude certain URLs. If you specify an inclusion and exclusion filter/pattern and both match a URL, the exclusion filter takes precedence and the web content of the URL isn’t crawled.
	ExclusionFilters pulumi.StringArrayInput `pulumi:"exclusionFilters"`
	// A list of one or more inclusion regular expression patterns to include certain URLs. If you specify an inclusion and exclusion filter/pattern and both match a URL, the exclusion filter takes precedence and the web content of the URL isn’t crawled.
	InclusionFilters pulumi.StringArrayInput `pulumi:"inclusionFilters"`
	// The scope of what is crawled for your URLs.
	//
	// You can choose to crawl only web pages that belong to the same host or primary domain. For example, only web pages that contain the seed URL "https://docs.aws.amazon.com/bedrock/latest/userguide/" and no other domains. You can choose to include sub domains in addition to the host or primary domain. For example, web pages that contain "aws.amazon.com" can also include sub domain "docs.aws.amazon.com".
	Scope DataSourceWebScopeTypePtrInput `pulumi:"scope"`
}

func (DataSourceWebCrawlerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceWebCrawlerConfiguration)(nil)).Elem()
}

func (i DataSourceWebCrawlerConfigurationArgs) ToDataSourceWebCrawlerConfigurationOutput() DataSourceWebCrawlerConfigurationOutput {
	return i.ToDataSourceWebCrawlerConfigurationOutputWithContext(context.Background())
}

func (i DataSourceWebCrawlerConfigurationArgs) ToDataSourceWebCrawlerConfigurationOutputWithContext(ctx context.Context) DataSourceWebCrawlerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceWebCrawlerConfigurationOutput)
}

func (i DataSourceWebCrawlerConfigurationArgs) ToDataSourceWebCrawlerConfigurationPtrOutput() DataSourceWebCrawlerConfigurationPtrOutput {
	return i.ToDataSourceWebCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceWebCrawlerConfigurationArgs) ToDataSourceWebCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceWebCrawlerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceWebCrawlerConfigurationOutput).ToDataSourceWebCrawlerConfigurationPtrOutputWithContext(ctx)
}

// DataSourceWebCrawlerConfigurationPtrInput is an input type that accepts DataSourceWebCrawlerConfigurationArgs, DataSourceWebCrawlerConfigurationPtr and DataSourceWebCrawlerConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceWebCrawlerConfigurationPtrInput` via:
//
//	        DataSourceWebCrawlerConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceWebCrawlerConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceWebCrawlerConfigurationPtrOutput() DataSourceWebCrawlerConfigurationPtrOutput
	ToDataSourceWebCrawlerConfigurationPtrOutputWithContext(context.Context) DataSourceWebCrawlerConfigurationPtrOutput
}

type dataSourceWebCrawlerConfigurationPtrType DataSourceWebCrawlerConfigurationArgs

func DataSourceWebCrawlerConfigurationPtr(v *DataSourceWebCrawlerConfigurationArgs) DataSourceWebCrawlerConfigurationPtrInput {
	return (*dataSourceWebCrawlerConfigurationPtrType)(v)
}

func (*dataSourceWebCrawlerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceWebCrawlerConfiguration)(nil)).Elem()
}

func (i *dataSourceWebCrawlerConfigurationPtrType) ToDataSourceWebCrawlerConfigurationPtrOutput() DataSourceWebCrawlerConfigurationPtrOutput {
	return i.ToDataSourceWebCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceWebCrawlerConfigurationPtrType) ToDataSourceWebCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceWebCrawlerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceWebCrawlerConfigurationPtrOutput)
}

// Configuration for the web crawler.
type DataSourceWebCrawlerConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceWebCrawlerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceWebCrawlerConfiguration)(nil)).Elem()
}

func (o DataSourceWebCrawlerConfigurationOutput) ToDataSourceWebCrawlerConfigurationOutput() DataSourceWebCrawlerConfigurationOutput {
	return o
}

func (o DataSourceWebCrawlerConfigurationOutput) ToDataSourceWebCrawlerConfigurationOutputWithContext(ctx context.Context) DataSourceWebCrawlerConfigurationOutput {
	return o
}

func (o DataSourceWebCrawlerConfigurationOutput) ToDataSourceWebCrawlerConfigurationPtrOutput() DataSourceWebCrawlerConfigurationPtrOutput {
	return o.ToDataSourceWebCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceWebCrawlerConfigurationOutput) ToDataSourceWebCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceWebCrawlerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceWebCrawlerConfiguration) *DataSourceWebCrawlerConfiguration {
		return &v
	}).(DataSourceWebCrawlerConfigurationPtrOutput)
}

// The configuration of crawl limits for the web URLs.
func (o DataSourceWebCrawlerConfigurationOutput) CrawlerLimits() DataSourceWebCrawlerLimitsPtrOutput {
	return o.ApplyT(func(v DataSourceWebCrawlerConfiguration) *DataSourceWebCrawlerLimits { return v.CrawlerLimits }).(DataSourceWebCrawlerLimitsPtrOutput)
}

// A list of one or more exclusion regular expression patterns to exclude certain URLs. If you specify an inclusion and exclusion filter/pattern and both match a URL, the exclusion filter takes precedence and the web content of the URL isn’t crawled.
func (o DataSourceWebCrawlerConfigurationOutput) ExclusionFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSourceWebCrawlerConfiguration) []string { return v.ExclusionFilters }).(pulumi.StringArrayOutput)
}

// A list of one or more inclusion regular expression patterns to include certain URLs. If you specify an inclusion and exclusion filter/pattern and both match a URL, the exclusion filter takes precedence and the web content of the URL isn’t crawled.
func (o DataSourceWebCrawlerConfigurationOutput) InclusionFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSourceWebCrawlerConfiguration) []string { return v.InclusionFilters }).(pulumi.StringArrayOutput)
}

// The scope of what is crawled for your URLs.
//
// You can choose to crawl only web pages that belong to the same host or primary domain. For example, only web pages that contain the seed URL "https://docs.aws.amazon.com/bedrock/latest/userguide/" and no other domains. You can choose to include sub domains in addition to the host or primary domain. For example, web pages that contain "aws.amazon.com" can also include sub domain "docs.aws.amazon.com".
func (o DataSourceWebCrawlerConfigurationOutput) Scope() DataSourceWebScopeTypePtrOutput {
	return o.ApplyT(func(v DataSourceWebCrawlerConfiguration) *DataSourceWebScopeType { return v.Scope }).(DataSourceWebScopeTypePtrOutput)
}

type DataSourceWebCrawlerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceWebCrawlerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceWebCrawlerConfiguration)(nil)).Elem()
}

func (o DataSourceWebCrawlerConfigurationPtrOutput) ToDataSourceWebCrawlerConfigurationPtrOutput() DataSourceWebCrawlerConfigurationPtrOutput {
	return o
}

func (o DataSourceWebCrawlerConfigurationPtrOutput) ToDataSourceWebCrawlerConfigurationPtrOutputWithContext(ctx context.Context) DataSourceWebCrawlerConfigurationPtrOutput {
	return o
}

func (o DataSourceWebCrawlerConfigurationPtrOutput) Elem() DataSourceWebCrawlerConfigurationOutput {
	return o.ApplyT(func(v *DataSourceWebCrawlerConfiguration) DataSourceWebCrawlerConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceWebCrawlerConfiguration
		return ret
	}).(DataSourceWebCrawlerConfigurationOutput)
}

// The configuration of crawl limits for the web URLs.
func (o DataSourceWebCrawlerConfigurationPtrOutput) CrawlerLimits() DataSourceWebCrawlerLimitsPtrOutput {
	return o.ApplyT(func(v *DataSourceWebCrawlerConfiguration) *DataSourceWebCrawlerLimits {
		if v == nil {
			return nil
		}
		return v.CrawlerLimits
	}).(DataSourceWebCrawlerLimitsPtrOutput)
}

// A list of one or more exclusion regular expression patterns to exclude certain URLs. If you specify an inclusion and exclusion filter/pattern and both match a URL, the exclusion filter takes precedence and the web content of the URL isn’t crawled.
func (o DataSourceWebCrawlerConfigurationPtrOutput) ExclusionFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataSourceWebCrawlerConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ExclusionFilters
	}).(pulumi.StringArrayOutput)
}

// A list of one or more inclusion regular expression patterns to include certain URLs. If you specify an inclusion and exclusion filter/pattern and both match a URL, the exclusion filter takes precedence and the web content of the URL isn’t crawled.
func (o DataSourceWebCrawlerConfigurationPtrOutput) InclusionFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataSourceWebCrawlerConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.InclusionFilters
	}).(pulumi.StringArrayOutput)
}

// The scope of what is crawled for your URLs.
//
// You can choose to crawl only web pages that belong to the same host or primary domain. For example, only web pages that contain the seed URL "https://docs.aws.amazon.com/bedrock/latest/userguide/" and no other domains. You can choose to include sub domains in addition to the host or primary domain. For example, web pages that contain "aws.amazon.com" can also include sub domain "docs.aws.amazon.com".
func (o DataSourceWebCrawlerConfigurationPtrOutput) Scope() DataSourceWebScopeTypePtrOutput {
	return o.ApplyT(func(v *DataSourceWebCrawlerConfiguration) *DataSourceWebScopeType {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(DataSourceWebScopeTypePtrOutput)
}

// Limit settings for the web crawler.
type DataSourceWebCrawlerLimits struct {
	// Rate of web URLs retrieved per minute.
	RateLimit *int `pulumi:"rateLimit"`
}

// DataSourceWebCrawlerLimitsInput is an input type that accepts DataSourceWebCrawlerLimitsArgs and DataSourceWebCrawlerLimitsOutput values.
// You can construct a concrete instance of `DataSourceWebCrawlerLimitsInput` via:
//
//	DataSourceWebCrawlerLimitsArgs{...}
type DataSourceWebCrawlerLimitsInput interface {
	pulumi.Input

	ToDataSourceWebCrawlerLimitsOutput() DataSourceWebCrawlerLimitsOutput
	ToDataSourceWebCrawlerLimitsOutputWithContext(context.Context) DataSourceWebCrawlerLimitsOutput
}

// Limit settings for the web crawler.
type DataSourceWebCrawlerLimitsArgs struct {
	// Rate of web URLs retrieved per minute.
	RateLimit pulumi.IntPtrInput `pulumi:"rateLimit"`
}

func (DataSourceWebCrawlerLimitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceWebCrawlerLimits)(nil)).Elem()
}

func (i DataSourceWebCrawlerLimitsArgs) ToDataSourceWebCrawlerLimitsOutput() DataSourceWebCrawlerLimitsOutput {
	return i.ToDataSourceWebCrawlerLimitsOutputWithContext(context.Background())
}

func (i DataSourceWebCrawlerLimitsArgs) ToDataSourceWebCrawlerLimitsOutputWithContext(ctx context.Context) DataSourceWebCrawlerLimitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceWebCrawlerLimitsOutput)
}

func (i DataSourceWebCrawlerLimitsArgs) ToDataSourceWebCrawlerLimitsPtrOutput() DataSourceWebCrawlerLimitsPtrOutput {
	return i.ToDataSourceWebCrawlerLimitsPtrOutputWithContext(context.Background())
}

func (i DataSourceWebCrawlerLimitsArgs) ToDataSourceWebCrawlerLimitsPtrOutputWithContext(ctx context.Context) DataSourceWebCrawlerLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceWebCrawlerLimitsOutput).ToDataSourceWebCrawlerLimitsPtrOutputWithContext(ctx)
}

// DataSourceWebCrawlerLimitsPtrInput is an input type that accepts DataSourceWebCrawlerLimitsArgs, DataSourceWebCrawlerLimitsPtr and DataSourceWebCrawlerLimitsPtrOutput values.
// You can construct a concrete instance of `DataSourceWebCrawlerLimitsPtrInput` via:
//
//	        DataSourceWebCrawlerLimitsArgs{...}
//
//	or:
//
//	        nil
type DataSourceWebCrawlerLimitsPtrInput interface {
	pulumi.Input

	ToDataSourceWebCrawlerLimitsPtrOutput() DataSourceWebCrawlerLimitsPtrOutput
	ToDataSourceWebCrawlerLimitsPtrOutputWithContext(context.Context) DataSourceWebCrawlerLimitsPtrOutput
}

type dataSourceWebCrawlerLimitsPtrType DataSourceWebCrawlerLimitsArgs

func DataSourceWebCrawlerLimitsPtr(v *DataSourceWebCrawlerLimitsArgs) DataSourceWebCrawlerLimitsPtrInput {
	return (*dataSourceWebCrawlerLimitsPtrType)(v)
}

func (*dataSourceWebCrawlerLimitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceWebCrawlerLimits)(nil)).Elem()
}

func (i *dataSourceWebCrawlerLimitsPtrType) ToDataSourceWebCrawlerLimitsPtrOutput() DataSourceWebCrawlerLimitsPtrOutput {
	return i.ToDataSourceWebCrawlerLimitsPtrOutputWithContext(context.Background())
}

func (i *dataSourceWebCrawlerLimitsPtrType) ToDataSourceWebCrawlerLimitsPtrOutputWithContext(ctx context.Context) DataSourceWebCrawlerLimitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceWebCrawlerLimitsPtrOutput)
}

// Limit settings for the web crawler.
type DataSourceWebCrawlerLimitsOutput struct{ *pulumi.OutputState }

func (DataSourceWebCrawlerLimitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceWebCrawlerLimits)(nil)).Elem()
}

func (o DataSourceWebCrawlerLimitsOutput) ToDataSourceWebCrawlerLimitsOutput() DataSourceWebCrawlerLimitsOutput {
	return o
}

func (o DataSourceWebCrawlerLimitsOutput) ToDataSourceWebCrawlerLimitsOutputWithContext(ctx context.Context) DataSourceWebCrawlerLimitsOutput {
	return o
}

func (o DataSourceWebCrawlerLimitsOutput) ToDataSourceWebCrawlerLimitsPtrOutput() DataSourceWebCrawlerLimitsPtrOutput {
	return o.ToDataSourceWebCrawlerLimitsPtrOutputWithContext(context.Background())
}

func (o DataSourceWebCrawlerLimitsOutput) ToDataSourceWebCrawlerLimitsPtrOutputWithContext(ctx context.Context) DataSourceWebCrawlerLimitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceWebCrawlerLimits) *DataSourceWebCrawlerLimits {
		return &v
	}).(DataSourceWebCrawlerLimitsPtrOutput)
}

// Rate of web URLs retrieved per minute.
func (o DataSourceWebCrawlerLimitsOutput) RateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataSourceWebCrawlerLimits) *int { return v.RateLimit }).(pulumi.IntPtrOutput)
}

type DataSourceWebCrawlerLimitsPtrOutput struct{ *pulumi.OutputState }

func (DataSourceWebCrawlerLimitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceWebCrawlerLimits)(nil)).Elem()
}

func (o DataSourceWebCrawlerLimitsPtrOutput) ToDataSourceWebCrawlerLimitsPtrOutput() DataSourceWebCrawlerLimitsPtrOutput {
	return o
}

func (o DataSourceWebCrawlerLimitsPtrOutput) ToDataSourceWebCrawlerLimitsPtrOutputWithContext(ctx context.Context) DataSourceWebCrawlerLimitsPtrOutput {
	return o
}

func (o DataSourceWebCrawlerLimitsPtrOutput) Elem() DataSourceWebCrawlerLimitsOutput {
	return o.ApplyT(func(v *DataSourceWebCrawlerLimits) DataSourceWebCrawlerLimits {
		if v != nil {
			return *v
		}
		var ret DataSourceWebCrawlerLimits
		return ret
	}).(DataSourceWebCrawlerLimitsOutput)
}

// Rate of web URLs retrieved per minute.
func (o DataSourceWebCrawlerLimitsPtrOutput) RateLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceWebCrawlerLimits) *int {
		if v == nil {
			return nil
		}
		return v.RateLimit
	}).(pulumi.IntPtrOutput)
}

// Configures a web data source location.
type DataSourceWebDataSourceConfiguration struct {
	// The Web Crawler configuration details for the web data source.
	CrawlerConfiguration *DataSourceWebCrawlerConfiguration `pulumi:"crawlerConfiguration"`
	// The source configuration details for the web data source.
	SourceConfiguration DataSourceWebSourceConfiguration `pulumi:"sourceConfiguration"`
}

// DataSourceWebDataSourceConfigurationInput is an input type that accepts DataSourceWebDataSourceConfigurationArgs and DataSourceWebDataSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceWebDataSourceConfigurationInput` via:
//
//	DataSourceWebDataSourceConfigurationArgs{...}
type DataSourceWebDataSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceWebDataSourceConfigurationOutput() DataSourceWebDataSourceConfigurationOutput
	ToDataSourceWebDataSourceConfigurationOutputWithContext(context.Context) DataSourceWebDataSourceConfigurationOutput
}

// Configures a web data source location.
type DataSourceWebDataSourceConfigurationArgs struct {
	// The Web Crawler configuration details for the web data source.
	CrawlerConfiguration DataSourceWebCrawlerConfigurationPtrInput `pulumi:"crawlerConfiguration"`
	// The source configuration details for the web data source.
	SourceConfiguration DataSourceWebSourceConfigurationInput `pulumi:"sourceConfiguration"`
}

func (DataSourceWebDataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceWebDataSourceConfiguration)(nil)).Elem()
}

func (i DataSourceWebDataSourceConfigurationArgs) ToDataSourceWebDataSourceConfigurationOutput() DataSourceWebDataSourceConfigurationOutput {
	return i.ToDataSourceWebDataSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceWebDataSourceConfigurationArgs) ToDataSourceWebDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceWebDataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceWebDataSourceConfigurationOutput)
}

func (i DataSourceWebDataSourceConfigurationArgs) ToDataSourceWebDataSourceConfigurationPtrOutput() DataSourceWebDataSourceConfigurationPtrOutput {
	return i.ToDataSourceWebDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceWebDataSourceConfigurationArgs) ToDataSourceWebDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceWebDataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceWebDataSourceConfigurationOutput).ToDataSourceWebDataSourceConfigurationPtrOutputWithContext(ctx)
}

// DataSourceWebDataSourceConfigurationPtrInput is an input type that accepts DataSourceWebDataSourceConfigurationArgs, DataSourceWebDataSourceConfigurationPtr and DataSourceWebDataSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceWebDataSourceConfigurationPtrInput` via:
//
//	        DataSourceWebDataSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceWebDataSourceConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceWebDataSourceConfigurationPtrOutput() DataSourceWebDataSourceConfigurationPtrOutput
	ToDataSourceWebDataSourceConfigurationPtrOutputWithContext(context.Context) DataSourceWebDataSourceConfigurationPtrOutput
}

type dataSourceWebDataSourceConfigurationPtrType DataSourceWebDataSourceConfigurationArgs

func DataSourceWebDataSourceConfigurationPtr(v *DataSourceWebDataSourceConfigurationArgs) DataSourceWebDataSourceConfigurationPtrInput {
	return (*dataSourceWebDataSourceConfigurationPtrType)(v)
}

func (*dataSourceWebDataSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceWebDataSourceConfiguration)(nil)).Elem()
}

func (i *dataSourceWebDataSourceConfigurationPtrType) ToDataSourceWebDataSourceConfigurationPtrOutput() DataSourceWebDataSourceConfigurationPtrOutput {
	return i.ToDataSourceWebDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceWebDataSourceConfigurationPtrType) ToDataSourceWebDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceWebDataSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceWebDataSourceConfigurationPtrOutput)
}

// Configures a web data source location.
type DataSourceWebDataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceWebDataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceWebDataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceWebDataSourceConfigurationOutput) ToDataSourceWebDataSourceConfigurationOutput() DataSourceWebDataSourceConfigurationOutput {
	return o
}

func (o DataSourceWebDataSourceConfigurationOutput) ToDataSourceWebDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceWebDataSourceConfigurationOutput {
	return o
}

func (o DataSourceWebDataSourceConfigurationOutput) ToDataSourceWebDataSourceConfigurationPtrOutput() DataSourceWebDataSourceConfigurationPtrOutput {
	return o.ToDataSourceWebDataSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceWebDataSourceConfigurationOutput) ToDataSourceWebDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceWebDataSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceWebDataSourceConfiguration) *DataSourceWebDataSourceConfiguration {
		return &v
	}).(DataSourceWebDataSourceConfigurationPtrOutput)
}

// The Web Crawler configuration details for the web data source.
func (o DataSourceWebDataSourceConfigurationOutput) CrawlerConfiguration() DataSourceWebCrawlerConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceWebDataSourceConfiguration) *DataSourceWebCrawlerConfiguration {
		return v.CrawlerConfiguration
	}).(DataSourceWebCrawlerConfigurationPtrOutput)
}

// The source configuration details for the web data source.
func (o DataSourceWebDataSourceConfigurationOutput) SourceConfiguration() DataSourceWebSourceConfigurationOutput {
	return o.ApplyT(func(v DataSourceWebDataSourceConfiguration) DataSourceWebSourceConfiguration {
		return v.SourceConfiguration
	}).(DataSourceWebSourceConfigurationOutput)
}

type DataSourceWebDataSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceWebDataSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceWebDataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceWebDataSourceConfigurationPtrOutput) ToDataSourceWebDataSourceConfigurationPtrOutput() DataSourceWebDataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceWebDataSourceConfigurationPtrOutput) ToDataSourceWebDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceWebDataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceWebDataSourceConfigurationPtrOutput) Elem() DataSourceWebDataSourceConfigurationOutput {
	return o.ApplyT(func(v *DataSourceWebDataSourceConfiguration) DataSourceWebDataSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceWebDataSourceConfiguration
		return ret
	}).(DataSourceWebDataSourceConfigurationOutput)
}

// The Web Crawler configuration details for the web data source.
func (o DataSourceWebDataSourceConfigurationPtrOutput) CrawlerConfiguration() DataSourceWebCrawlerConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceWebDataSourceConfiguration) *DataSourceWebCrawlerConfiguration {
		if v == nil {
			return nil
		}
		return v.CrawlerConfiguration
	}).(DataSourceWebCrawlerConfigurationPtrOutput)
}

// The source configuration details for the web data source.
func (o DataSourceWebDataSourceConfigurationPtrOutput) SourceConfiguration() DataSourceWebSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceWebDataSourceConfiguration) *DataSourceWebSourceConfiguration {
		if v == nil {
			return nil
		}
		return &v.SourceConfiguration
	}).(DataSourceWebSourceConfigurationPtrOutput)
}

// A web source configuration.
type DataSourceWebSourceConfiguration struct {
	// The configuration of the URL/URLs.
	UrlConfiguration DataSourceUrlConfiguration `pulumi:"urlConfiguration"`
}

// DataSourceWebSourceConfigurationInput is an input type that accepts DataSourceWebSourceConfigurationArgs and DataSourceWebSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceWebSourceConfigurationInput` via:
//
//	DataSourceWebSourceConfigurationArgs{...}
type DataSourceWebSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceWebSourceConfigurationOutput() DataSourceWebSourceConfigurationOutput
	ToDataSourceWebSourceConfigurationOutputWithContext(context.Context) DataSourceWebSourceConfigurationOutput
}

// A web source configuration.
type DataSourceWebSourceConfigurationArgs struct {
	// The configuration of the URL/URLs.
	UrlConfiguration DataSourceUrlConfigurationInput `pulumi:"urlConfiguration"`
}

func (DataSourceWebSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceWebSourceConfiguration)(nil)).Elem()
}

func (i DataSourceWebSourceConfigurationArgs) ToDataSourceWebSourceConfigurationOutput() DataSourceWebSourceConfigurationOutput {
	return i.ToDataSourceWebSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceWebSourceConfigurationArgs) ToDataSourceWebSourceConfigurationOutputWithContext(ctx context.Context) DataSourceWebSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceWebSourceConfigurationOutput)
}

func (i DataSourceWebSourceConfigurationArgs) ToDataSourceWebSourceConfigurationPtrOutput() DataSourceWebSourceConfigurationPtrOutput {
	return i.ToDataSourceWebSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceWebSourceConfigurationArgs) ToDataSourceWebSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceWebSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceWebSourceConfigurationOutput).ToDataSourceWebSourceConfigurationPtrOutputWithContext(ctx)
}

// DataSourceWebSourceConfigurationPtrInput is an input type that accepts DataSourceWebSourceConfigurationArgs, DataSourceWebSourceConfigurationPtr and DataSourceWebSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceWebSourceConfigurationPtrInput` via:
//
//	        DataSourceWebSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceWebSourceConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceWebSourceConfigurationPtrOutput() DataSourceWebSourceConfigurationPtrOutput
	ToDataSourceWebSourceConfigurationPtrOutputWithContext(context.Context) DataSourceWebSourceConfigurationPtrOutput
}

type dataSourceWebSourceConfigurationPtrType DataSourceWebSourceConfigurationArgs

func DataSourceWebSourceConfigurationPtr(v *DataSourceWebSourceConfigurationArgs) DataSourceWebSourceConfigurationPtrInput {
	return (*dataSourceWebSourceConfigurationPtrType)(v)
}

func (*dataSourceWebSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceWebSourceConfiguration)(nil)).Elem()
}

func (i *dataSourceWebSourceConfigurationPtrType) ToDataSourceWebSourceConfigurationPtrOutput() DataSourceWebSourceConfigurationPtrOutput {
	return i.ToDataSourceWebSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceWebSourceConfigurationPtrType) ToDataSourceWebSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceWebSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceWebSourceConfigurationPtrOutput)
}

// A web source configuration.
type DataSourceWebSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceWebSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceWebSourceConfiguration)(nil)).Elem()
}

func (o DataSourceWebSourceConfigurationOutput) ToDataSourceWebSourceConfigurationOutput() DataSourceWebSourceConfigurationOutput {
	return o
}

func (o DataSourceWebSourceConfigurationOutput) ToDataSourceWebSourceConfigurationOutputWithContext(ctx context.Context) DataSourceWebSourceConfigurationOutput {
	return o
}

func (o DataSourceWebSourceConfigurationOutput) ToDataSourceWebSourceConfigurationPtrOutput() DataSourceWebSourceConfigurationPtrOutput {
	return o.ToDataSourceWebSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceWebSourceConfigurationOutput) ToDataSourceWebSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceWebSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceWebSourceConfiguration) *DataSourceWebSourceConfiguration {
		return &v
	}).(DataSourceWebSourceConfigurationPtrOutput)
}

// The configuration of the URL/URLs.
func (o DataSourceWebSourceConfigurationOutput) UrlConfiguration() DataSourceUrlConfigurationOutput {
	return o.ApplyT(func(v DataSourceWebSourceConfiguration) DataSourceUrlConfiguration { return v.UrlConfiguration }).(DataSourceUrlConfigurationOutput)
}

type DataSourceWebSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceWebSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceWebSourceConfiguration)(nil)).Elem()
}

func (o DataSourceWebSourceConfigurationPtrOutput) ToDataSourceWebSourceConfigurationPtrOutput() DataSourceWebSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceWebSourceConfigurationPtrOutput) ToDataSourceWebSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceWebSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceWebSourceConfigurationPtrOutput) Elem() DataSourceWebSourceConfigurationOutput {
	return o.ApplyT(func(v *DataSourceWebSourceConfiguration) DataSourceWebSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceWebSourceConfiguration
		return ret
	}).(DataSourceWebSourceConfigurationOutput)
}

// The configuration of the URL/URLs.
func (o DataSourceWebSourceConfigurationPtrOutput) UrlConfiguration() DataSourceUrlConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceWebSourceConfiguration) *DataSourceUrlConfiguration {
		if v == nil {
			return nil
		}
		return &v.UrlConfiguration
	}).(DataSourceUrlConfigurationPtrOutput)
}

// Agent flow node configuration
type FlowAgentFlowNodeConfiguration struct {
	// Arn representation of the Agent Alias.
	AgentAliasArn string `pulumi:"agentAliasArn"`
}

// FlowAgentFlowNodeConfigurationInput is an input type that accepts FlowAgentFlowNodeConfigurationArgs and FlowAgentFlowNodeConfigurationOutput values.
// You can construct a concrete instance of `FlowAgentFlowNodeConfigurationInput` via:
//
//	FlowAgentFlowNodeConfigurationArgs{...}
type FlowAgentFlowNodeConfigurationInput interface {
	pulumi.Input

	ToFlowAgentFlowNodeConfigurationOutput() FlowAgentFlowNodeConfigurationOutput
	ToFlowAgentFlowNodeConfigurationOutputWithContext(context.Context) FlowAgentFlowNodeConfigurationOutput
}

// Agent flow node configuration
type FlowAgentFlowNodeConfigurationArgs struct {
	// Arn representation of the Agent Alias.
	AgentAliasArn pulumi.StringInput `pulumi:"agentAliasArn"`
}

func (FlowAgentFlowNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowAgentFlowNodeConfiguration)(nil)).Elem()
}

func (i FlowAgentFlowNodeConfigurationArgs) ToFlowAgentFlowNodeConfigurationOutput() FlowAgentFlowNodeConfigurationOutput {
	return i.ToFlowAgentFlowNodeConfigurationOutputWithContext(context.Background())
}

func (i FlowAgentFlowNodeConfigurationArgs) ToFlowAgentFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowAgentFlowNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAgentFlowNodeConfigurationOutput)
}

func (i FlowAgentFlowNodeConfigurationArgs) ToFlowAgentFlowNodeConfigurationPtrOutput() FlowAgentFlowNodeConfigurationPtrOutput {
	return i.ToFlowAgentFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowAgentFlowNodeConfigurationArgs) ToFlowAgentFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowAgentFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAgentFlowNodeConfigurationOutput).ToFlowAgentFlowNodeConfigurationPtrOutputWithContext(ctx)
}

// FlowAgentFlowNodeConfigurationPtrInput is an input type that accepts FlowAgentFlowNodeConfigurationArgs, FlowAgentFlowNodeConfigurationPtr and FlowAgentFlowNodeConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowAgentFlowNodeConfigurationPtrInput` via:
//
//	        FlowAgentFlowNodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowAgentFlowNodeConfigurationPtrInput interface {
	pulumi.Input

	ToFlowAgentFlowNodeConfigurationPtrOutput() FlowAgentFlowNodeConfigurationPtrOutput
	ToFlowAgentFlowNodeConfigurationPtrOutputWithContext(context.Context) FlowAgentFlowNodeConfigurationPtrOutput
}

type flowAgentFlowNodeConfigurationPtrType FlowAgentFlowNodeConfigurationArgs

func FlowAgentFlowNodeConfigurationPtr(v *FlowAgentFlowNodeConfigurationArgs) FlowAgentFlowNodeConfigurationPtrInput {
	return (*flowAgentFlowNodeConfigurationPtrType)(v)
}

func (*flowAgentFlowNodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowAgentFlowNodeConfiguration)(nil)).Elem()
}

func (i *flowAgentFlowNodeConfigurationPtrType) ToFlowAgentFlowNodeConfigurationPtrOutput() FlowAgentFlowNodeConfigurationPtrOutput {
	return i.ToFlowAgentFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowAgentFlowNodeConfigurationPtrType) ToFlowAgentFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowAgentFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAgentFlowNodeConfigurationPtrOutput)
}

// Agent flow node configuration
type FlowAgentFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowAgentFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowAgentFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowAgentFlowNodeConfigurationOutput) ToFlowAgentFlowNodeConfigurationOutput() FlowAgentFlowNodeConfigurationOutput {
	return o
}

func (o FlowAgentFlowNodeConfigurationOutput) ToFlowAgentFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowAgentFlowNodeConfigurationOutput {
	return o
}

func (o FlowAgentFlowNodeConfigurationOutput) ToFlowAgentFlowNodeConfigurationPtrOutput() FlowAgentFlowNodeConfigurationPtrOutput {
	return o.ToFlowAgentFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowAgentFlowNodeConfigurationOutput) ToFlowAgentFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowAgentFlowNodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowAgentFlowNodeConfiguration) *FlowAgentFlowNodeConfiguration {
		return &v
	}).(FlowAgentFlowNodeConfigurationPtrOutput)
}

// Arn representation of the Agent Alias.
func (o FlowAgentFlowNodeConfigurationOutput) AgentAliasArn() pulumi.StringOutput {
	return o.ApplyT(func(v FlowAgentFlowNodeConfiguration) string { return v.AgentAliasArn }).(pulumi.StringOutput)
}

type FlowAgentFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowAgentFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowAgentFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowAgentFlowNodeConfigurationPtrOutput) ToFlowAgentFlowNodeConfigurationPtrOutput() FlowAgentFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowAgentFlowNodeConfigurationPtrOutput) ToFlowAgentFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowAgentFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowAgentFlowNodeConfigurationPtrOutput) Elem() FlowAgentFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowAgentFlowNodeConfiguration) FlowAgentFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowAgentFlowNodeConfiguration
		return ret
	}).(FlowAgentFlowNodeConfigurationOutput)
}

// Arn representation of the Agent Alias.
func (o FlowAgentFlowNodeConfigurationPtrOutput) AgentAliasArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowAgentFlowNodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.AgentAliasArn
	}).(pulumi.StringPtrOutput)
}

// Details about the routing configuration for a Flow alias.
type FlowAliasRoutingConfigurationListItem struct {
	// Version.
	FlowVersion *string `pulumi:"flowVersion"`
}

// FlowAliasRoutingConfigurationListItemInput is an input type that accepts FlowAliasRoutingConfigurationListItemArgs and FlowAliasRoutingConfigurationListItemOutput values.
// You can construct a concrete instance of `FlowAliasRoutingConfigurationListItemInput` via:
//
//	FlowAliasRoutingConfigurationListItemArgs{...}
type FlowAliasRoutingConfigurationListItemInput interface {
	pulumi.Input

	ToFlowAliasRoutingConfigurationListItemOutput() FlowAliasRoutingConfigurationListItemOutput
	ToFlowAliasRoutingConfigurationListItemOutputWithContext(context.Context) FlowAliasRoutingConfigurationListItemOutput
}

// Details about the routing configuration for a Flow alias.
type FlowAliasRoutingConfigurationListItemArgs struct {
	// Version.
	FlowVersion pulumi.StringPtrInput `pulumi:"flowVersion"`
}

func (FlowAliasRoutingConfigurationListItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowAliasRoutingConfigurationListItem)(nil)).Elem()
}

func (i FlowAliasRoutingConfigurationListItemArgs) ToFlowAliasRoutingConfigurationListItemOutput() FlowAliasRoutingConfigurationListItemOutput {
	return i.ToFlowAliasRoutingConfigurationListItemOutputWithContext(context.Background())
}

func (i FlowAliasRoutingConfigurationListItemArgs) ToFlowAliasRoutingConfigurationListItemOutputWithContext(ctx context.Context) FlowAliasRoutingConfigurationListItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAliasRoutingConfigurationListItemOutput)
}

// FlowAliasRoutingConfigurationListItemArrayInput is an input type that accepts FlowAliasRoutingConfigurationListItemArray and FlowAliasRoutingConfigurationListItemArrayOutput values.
// You can construct a concrete instance of `FlowAliasRoutingConfigurationListItemArrayInput` via:
//
//	FlowAliasRoutingConfigurationListItemArray{ FlowAliasRoutingConfigurationListItemArgs{...} }
type FlowAliasRoutingConfigurationListItemArrayInput interface {
	pulumi.Input

	ToFlowAliasRoutingConfigurationListItemArrayOutput() FlowAliasRoutingConfigurationListItemArrayOutput
	ToFlowAliasRoutingConfigurationListItemArrayOutputWithContext(context.Context) FlowAliasRoutingConfigurationListItemArrayOutput
}

type FlowAliasRoutingConfigurationListItemArray []FlowAliasRoutingConfigurationListItemInput

func (FlowAliasRoutingConfigurationListItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowAliasRoutingConfigurationListItem)(nil)).Elem()
}

func (i FlowAliasRoutingConfigurationListItemArray) ToFlowAliasRoutingConfigurationListItemArrayOutput() FlowAliasRoutingConfigurationListItemArrayOutput {
	return i.ToFlowAliasRoutingConfigurationListItemArrayOutputWithContext(context.Background())
}

func (i FlowAliasRoutingConfigurationListItemArray) ToFlowAliasRoutingConfigurationListItemArrayOutputWithContext(ctx context.Context) FlowAliasRoutingConfigurationListItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowAliasRoutingConfigurationListItemArrayOutput)
}

// Details about the routing configuration for a Flow alias.
type FlowAliasRoutingConfigurationListItemOutput struct{ *pulumi.OutputState }

func (FlowAliasRoutingConfigurationListItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowAliasRoutingConfigurationListItem)(nil)).Elem()
}

func (o FlowAliasRoutingConfigurationListItemOutput) ToFlowAliasRoutingConfigurationListItemOutput() FlowAliasRoutingConfigurationListItemOutput {
	return o
}

func (o FlowAliasRoutingConfigurationListItemOutput) ToFlowAliasRoutingConfigurationListItemOutputWithContext(ctx context.Context) FlowAliasRoutingConfigurationListItemOutput {
	return o
}

// Version.
func (o FlowAliasRoutingConfigurationListItemOutput) FlowVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowAliasRoutingConfigurationListItem) *string { return v.FlowVersion }).(pulumi.StringPtrOutput)
}

type FlowAliasRoutingConfigurationListItemArrayOutput struct{ *pulumi.OutputState }

func (FlowAliasRoutingConfigurationListItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowAliasRoutingConfigurationListItem)(nil)).Elem()
}

func (o FlowAliasRoutingConfigurationListItemArrayOutput) ToFlowAliasRoutingConfigurationListItemArrayOutput() FlowAliasRoutingConfigurationListItemArrayOutput {
	return o
}

func (o FlowAliasRoutingConfigurationListItemArrayOutput) ToFlowAliasRoutingConfigurationListItemArrayOutputWithContext(ctx context.Context) FlowAliasRoutingConfigurationListItemArrayOutput {
	return o
}

func (o FlowAliasRoutingConfigurationListItemArrayOutput) Index(i pulumi.IntInput) FlowAliasRoutingConfigurationListItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowAliasRoutingConfigurationListItem {
		return vs[0].([]FlowAliasRoutingConfigurationListItem)[vs[1].(int)]
	}).(FlowAliasRoutingConfigurationListItemOutput)
}

// Collector flow node configuration
type FlowCollectorFlowNodeConfiguration struct {
}

// FlowCollectorFlowNodeConfigurationInput is an input type that accepts FlowCollectorFlowNodeConfigurationArgs and FlowCollectorFlowNodeConfigurationOutput values.
// You can construct a concrete instance of `FlowCollectorFlowNodeConfigurationInput` via:
//
//	FlowCollectorFlowNodeConfigurationArgs{...}
type FlowCollectorFlowNodeConfigurationInput interface {
	pulumi.Input

	ToFlowCollectorFlowNodeConfigurationOutput() FlowCollectorFlowNodeConfigurationOutput
	ToFlowCollectorFlowNodeConfigurationOutputWithContext(context.Context) FlowCollectorFlowNodeConfigurationOutput
}

// Collector flow node configuration
type FlowCollectorFlowNodeConfigurationArgs struct {
}

func (FlowCollectorFlowNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowCollectorFlowNodeConfiguration)(nil)).Elem()
}

func (i FlowCollectorFlowNodeConfigurationArgs) ToFlowCollectorFlowNodeConfigurationOutput() FlowCollectorFlowNodeConfigurationOutput {
	return i.ToFlowCollectorFlowNodeConfigurationOutputWithContext(context.Background())
}

func (i FlowCollectorFlowNodeConfigurationArgs) ToFlowCollectorFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowCollectorFlowNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowCollectorFlowNodeConfigurationOutput)
}

func (i FlowCollectorFlowNodeConfigurationArgs) ToFlowCollectorFlowNodeConfigurationPtrOutput() FlowCollectorFlowNodeConfigurationPtrOutput {
	return i.ToFlowCollectorFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowCollectorFlowNodeConfigurationArgs) ToFlowCollectorFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowCollectorFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowCollectorFlowNodeConfigurationOutput).ToFlowCollectorFlowNodeConfigurationPtrOutputWithContext(ctx)
}

// FlowCollectorFlowNodeConfigurationPtrInput is an input type that accepts FlowCollectorFlowNodeConfigurationArgs, FlowCollectorFlowNodeConfigurationPtr and FlowCollectorFlowNodeConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowCollectorFlowNodeConfigurationPtrInput` via:
//
//	        FlowCollectorFlowNodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowCollectorFlowNodeConfigurationPtrInput interface {
	pulumi.Input

	ToFlowCollectorFlowNodeConfigurationPtrOutput() FlowCollectorFlowNodeConfigurationPtrOutput
	ToFlowCollectorFlowNodeConfigurationPtrOutputWithContext(context.Context) FlowCollectorFlowNodeConfigurationPtrOutput
}

type flowCollectorFlowNodeConfigurationPtrType FlowCollectorFlowNodeConfigurationArgs

func FlowCollectorFlowNodeConfigurationPtr(v *FlowCollectorFlowNodeConfigurationArgs) FlowCollectorFlowNodeConfigurationPtrInput {
	return (*flowCollectorFlowNodeConfigurationPtrType)(v)
}

func (*flowCollectorFlowNodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowCollectorFlowNodeConfiguration)(nil)).Elem()
}

func (i *flowCollectorFlowNodeConfigurationPtrType) ToFlowCollectorFlowNodeConfigurationPtrOutput() FlowCollectorFlowNodeConfigurationPtrOutput {
	return i.ToFlowCollectorFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowCollectorFlowNodeConfigurationPtrType) ToFlowCollectorFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowCollectorFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowCollectorFlowNodeConfigurationPtrOutput)
}

// Collector flow node configuration
type FlowCollectorFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowCollectorFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowCollectorFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowCollectorFlowNodeConfigurationOutput) ToFlowCollectorFlowNodeConfigurationOutput() FlowCollectorFlowNodeConfigurationOutput {
	return o
}

func (o FlowCollectorFlowNodeConfigurationOutput) ToFlowCollectorFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowCollectorFlowNodeConfigurationOutput {
	return o
}

func (o FlowCollectorFlowNodeConfigurationOutput) ToFlowCollectorFlowNodeConfigurationPtrOutput() FlowCollectorFlowNodeConfigurationPtrOutput {
	return o.ToFlowCollectorFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowCollectorFlowNodeConfigurationOutput) ToFlowCollectorFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowCollectorFlowNodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowCollectorFlowNodeConfiguration) *FlowCollectorFlowNodeConfiguration {
		return &v
	}).(FlowCollectorFlowNodeConfigurationPtrOutput)
}

type FlowCollectorFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowCollectorFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowCollectorFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowCollectorFlowNodeConfigurationPtrOutput) ToFlowCollectorFlowNodeConfigurationPtrOutput() FlowCollectorFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowCollectorFlowNodeConfigurationPtrOutput) ToFlowCollectorFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowCollectorFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowCollectorFlowNodeConfigurationPtrOutput) Elem() FlowCollectorFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowCollectorFlowNodeConfiguration) FlowCollectorFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowCollectorFlowNodeConfiguration
		return ret
	}).(FlowCollectorFlowNodeConfigurationOutput)
}

// Condition branch for a condition node
type FlowCondition struct {
	// Expression for a condition in a flow
	Expression *string `pulumi:"expression"`
	// Name of a condition in a flow
	Name string `pulumi:"name"`
}

// FlowConditionInput is an input type that accepts FlowConditionArgs and FlowConditionOutput values.
// You can construct a concrete instance of `FlowConditionInput` via:
//
//	FlowConditionArgs{...}
type FlowConditionInput interface {
	pulumi.Input

	ToFlowConditionOutput() FlowConditionOutput
	ToFlowConditionOutputWithContext(context.Context) FlowConditionOutput
}

// Condition branch for a condition node
type FlowConditionArgs struct {
	// Expression for a condition in a flow
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Name of a condition in a flow
	Name pulumi.StringInput `pulumi:"name"`
}

func (FlowConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowCondition)(nil)).Elem()
}

func (i FlowConditionArgs) ToFlowConditionOutput() FlowConditionOutput {
	return i.ToFlowConditionOutputWithContext(context.Background())
}

func (i FlowConditionArgs) ToFlowConditionOutputWithContext(ctx context.Context) FlowConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConditionOutput)
}

// FlowConditionArrayInput is an input type that accepts FlowConditionArray and FlowConditionArrayOutput values.
// You can construct a concrete instance of `FlowConditionArrayInput` via:
//
//	FlowConditionArray{ FlowConditionArgs{...} }
type FlowConditionArrayInput interface {
	pulumi.Input

	ToFlowConditionArrayOutput() FlowConditionArrayOutput
	ToFlowConditionArrayOutputWithContext(context.Context) FlowConditionArrayOutput
}

type FlowConditionArray []FlowConditionInput

func (FlowConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowCondition)(nil)).Elem()
}

func (i FlowConditionArray) ToFlowConditionArrayOutput() FlowConditionArrayOutput {
	return i.ToFlowConditionArrayOutputWithContext(context.Background())
}

func (i FlowConditionArray) ToFlowConditionArrayOutputWithContext(ctx context.Context) FlowConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConditionArrayOutput)
}

// Condition branch for a condition node
type FlowConditionOutput struct{ *pulumi.OutputState }

func (FlowConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowCondition)(nil)).Elem()
}

func (o FlowConditionOutput) ToFlowConditionOutput() FlowConditionOutput {
	return o
}

func (o FlowConditionOutput) ToFlowConditionOutputWithContext(ctx context.Context) FlowConditionOutput {
	return o
}

// Expression for a condition in a flow
func (o FlowConditionOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowCondition) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Name of a condition in a flow
func (o FlowConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowCondition) string { return v.Name }).(pulumi.StringOutput)
}

type FlowConditionArrayOutput struct{ *pulumi.OutputState }

func (FlowConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowCondition)(nil)).Elem()
}

func (o FlowConditionArrayOutput) ToFlowConditionArrayOutput() FlowConditionArrayOutput {
	return o
}

func (o FlowConditionArrayOutput) ToFlowConditionArrayOutputWithContext(ctx context.Context) FlowConditionArrayOutput {
	return o
}

func (o FlowConditionArrayOutput) Index(i pulumi.IntInput) FlowConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowCondition {
		return vs[0].([]FlowCondition)[vs[1].(int)]
	}).(FlowConditionOutput)
}

// Condition flow node configuration
type FlowConditionFlowNodeConfiguration struct {
	// List of conditions in a condition node
	Conditions []FlowCondition `pulumi:"conditions"`
}

// FlowConditionFlowNodeConfigurationInput is an input type that accepts FlowConditionFlowNodeConfigurationArgs and FlowConditionFlowNodeConfigurationOutput values.
// You can construct a concrete instance of `FlowConditionFlowNodeConfigurationInput` via:
//
//	FlowConditionFlowNodeConfigurationArgs{...}
type FlowConditionFlowNodeConfigurationInput interface {
	pulumi.Input

	ToFlowConditionFlowNodeConfigurationOutput() FlowConditionFlowNodeConfigurationOutput
	ToFlowConditionFlowNodeConfigurationOutputWithContext(context.Context) FlowConditionFlowNodeConfigurationOutput
}

// Condition flow node configuration
type FlowConditionFlowNodeConfigurationArgs struct {
	// List of conditions in a condition node
	Conditions FlowConditionArrayInput `pulumi:"conditions"`
}

func (FlowConditionFlowNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowConditionFlowNodeConfiguration)(nil)).Elem()
}

func (i FlowConditionFlowNodeConfigurationArgs) ToFlowConditionFlowNodeConfigurationOutput() FlowConditionFlowNodeConfigurationOutput {
	return i.ToFlowConditionFlowNodeConfigurationOutputWithContext(context.Background())
}

func (i FlowConditionFlowNodeConfigurationArgs) ToFlowConditionFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowConditionFlowNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConditionFlowNodeConfigurationOutput)
}

func (i FlowConditionFlowNodeConfigurationArgs) ToFlowConditionFlowNodeConfigurationPtrOutput() FlowConditionFlowNodeConfigurationPtrOutput {
	return i.ToFlowConditionFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowConditionFlowNodeConfigurationArgs) ToFlowConditionFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowConditionFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConditionFlowNodeConfigurationOutput).ToFlowConditionFlowNodeConfigurationPtrOutputWithContext(ctx)
}

// FlowConditionFlowNodeConfigurationPtrInput is an input type that accepts FlowConditionFlowNodeConfigurationArgs, FlowConditionFlowNodeConfigurationPtr and FlowConditionFlowNodeConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowConditionFlowNodeConfigurationPtrInput` via:
//
//	        FlowConditionFlowNodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowConditionFlowNodeConfigurationPtrInput interface {
	pulumi.Input

	ToFlowConditionFlowNodeConfigurationPtrOutput() FlowConditionFlowNodeConfigurationPtrOutput
	ToFlowConditionFlowNodeConfigurationPtrOutputWithContext(context.Context) FlowConditionFlowNodeConfigurationPtrOutput
}

type flowConditionFlowNodeConfigurationPtrType FlowConditionFlowNodeConfigurationArgs

func FlowConditionFlowNodeConfigurationPtr(v *FlowConditionFlowNodeConfigurationArgs) FlowConditionFlowNodeConfigurationPtrInput {
	return (*flowConditionFlowNodeConfigurationPtrType)(v)
}

func (*flowConditionFlowNodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowConditionFlowNodeConfiguration)(nil)).Elem()
}

func (i *flowConditionFlowNodeConfigurationPtrType) ToFlowConditionFlowNodeConfigurationPtrOutput() FlowConditionFlowNodeConfigurationPtrOutput {
	return i.ToFlowConditionFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowConditionFlowNodeConfigurationPtrType) ToFlowConditionFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowConditionFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConditionFlowNodeConfigurationPtrOutput)
}

// Condition flow node configuration
type FlowConditionFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowConditionFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowConditionFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowConditionFlowNodeConfigurationOutput) ToFlowConditionFlowNodeConfigurationOutput() FlowConditionFlowNodeConfigurationOutput {
	return o
}

func (o FlowConditionFlowNodeConfigurationOutput) ToFlowConditionFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowConditionFlowNodeConfigurationOutput {
	return o
}

func (o FlowConditionFlowNodeConfigurationOutput) ToFlowConditionFlowNodeConfigurationPtrOutput() FlowConditionFlowNodeConfigurationPtrOutput {
	return o.ToFlowConditionFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowConditionFlowNodeConfigurationOutput) ToFlowConditionFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowConditionFlowNodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowConditionFlowNodeConfiguration) *FlowConditionFlowNodeConfiguration {
		return &v
	}).(FlowConditionFlowNodeConfigurationPtrOutput)
}

// List of conditions in a condition node
func (o FlowConditionFlowNodeConfigurationOutput) Conditions() FlowConditionArrayOutput {
	return o.ApplyT(func(v FlowConditionFlowNodeConfiguration) []FlowCondition { return v.Conditions }).(FlowConditionArrayOutput)
}

type FlowConditionFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowConditionFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowConditionFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowConditionFlowNodeConfigurationPtrOutput) ToFlowConditionFlowNodeConfigurationPtrOutput() FlowConditionFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowConditionFlowNodeConfigurationPtrOutput) ToFlowConditionFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowConditionFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowConditionFlowNodeConfigurationPtrOutput) Elem() FlowConditionFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowConditionFlowNodeConfiguration) FlowConditionFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowConditionFlowNodeConfiguration
		return ret
	}).(FlowConditionFlowNodeConfigurationOutput)
}

// List of conditions in a condition node
func (o FlowConditionFlowNodeConfigurationPtrOutput) Conditions() FlowConditionArrayOutput {
	return o.ApplyT(func(v *FlowConditionFlowNodeConfiguration) []FlowCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(FlowConditionArrayOutput)
}

// Conditional connection configuration
type FlowConditionalConnectionConfiguration struct {
	// Name of a condition in a flow
	Condition string `pulumi:"condition"`
}

// FlowConditionalConnectionConfigurationInput is an input type that accepts FlowConditionalConnectionConfigurationArgs and FlowConditionalConnectionConfigurationOutput values.
// You can construct a concrete instance of `FlowConditionalConnectionConfigurationInput` via:
//
//	FlowConditionalConnectionConfigurationArgs{...}
type FlowConditionalConnectionConfigurationInput interface {
	pulumi.Input

	ToFlowConditionalConnectionConfigurationOutput() FlowConditionalConnectionConfigurationOutput
	ToFlowConditionalConnectionConfigurationOutputWithContext(context.Context) FlowConditionalConnectionConfigurationOutput
}

// Conditional connection configuration
type FlowConditionalConnectionConfigurationArgs struct {
	// Name of a condition in a flow
	Condition pulumi.StringInput `pulumi:"condition"`
}

func (FlowConditionalConnectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowConditionalConnectionConfiguration)(nil)).Elem()
}

func (i FlowConditionalConnectionConfigurationArgs) ToFlowConditionalConnectionConfigurationOutput() FlowConditionalConnectionConfigurationOutput {
	return i.ToFlowConditionalConnectionConfigurationOutputWithContext(context.Background())
}

func (i FlowConditionalConnectionConfigurationArgs) ToFlowConditionalConnectionConfigurationOutputWithContext(ctx context.Context) FlowConditionalConnectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConditionalConnectionConfigurationOutput)
}

func (i FlowConditionalConnectionConfigurationArgs) ToFlowConditionalConnectionConfigurationPtrOutput() FlowConditionalConnectionConfigurationPtrOutput {
	return i.ToFlowConditionalConnectionConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowConditionalConnectionConfigurationArgs) ToFlowConditionalConnectionConfigurationPtrOutputWithContext(ctx context.Context) FlowConditionalConnectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConditionalConnectionConfigurationOutput).ToFlowConditionalConnectionConfigurationPtrOutputWithContext(ctx)
}

// FlowConditionalConnectionConfigurationPtrInput is an input type that accepts FlowConditionalConnectionConfigurationArgs, FlowConditionalConnectionConfigurationPtr and FlowConditionalConnectionConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowConditionalConnectionConfigurationPtrInput` via:
//
//	        FlowConditionalConnectionConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowConditionalConnectionConfigurationPtrInput interface {
	pulumi.Input

	ToFlowConditionalConnectionConfigurationPtrOutput() FlowConditionalConnectionConfigurationPtrOutput
	ToFlowConditionalConnectionConfigurationPtrOutputWithContext(context.Context) FlowConditionalConnectionConfigurationPtrOutput
}

type flowConditionalConnectionConfigurationPtrType FlowConditionalConnectionConfigurationArgs

func FlowConditionalConnectionConfigurationPtr(v *FlowConditionalConnectionConfigurationArgs) FlowConditionalConnectionConfigurationPtrInput {
	return (*flowConditionalConnectionConfigurationPtrType)(v)
}

func (*flowConditionalConnectionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowConditionalConnectionConfiguration)(nil)).Elem()
}

func (i *flowConditionalConnectionConfigurationPtrType) ToFlowConditionalConnectionConfigurationPtrOutput() FlowConditionalConnectionConfigurationPtrOutput {
	return i.ToFlowConditionalConnectionConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowConditionalConnectionConfigurationPtrType) ToFlowConditionalConnectionConfigurationPtrOutputWithContext(ctx context.Context) FlowConditionalConnectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConditionalConnectionConfigurationPtrOutput)
}

// Conditional connection configuration
type FlowConditionalConnectionConfigurationOutput struct{ *pulumi.OutputState }

func (FlowConditionalConnectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowConditionalConnectionConfiguration)(nil)).Elem()
}

func (o FlowConditionalConnectionConfigurationOutput) ToFlowConditionalConnectionConfigurationOutput() FlowConditionalConnectionConfigurationOutput {
	return o
}

func (o FlowConditionalConnectionConfigurationOutput) ToFlowConditionalConnectionConfigurationOutputWithContext(ctx context.Context) FlowConditionalConnectionConfigurationOutput {
	return o
}

func (o FlowConditionalConnectionConfigurationOutput) ToFlowConditionalConnectionConfigurationPtrOutput() FlowConditionalConnectionConfigurationPtrOutput {
	return o.ToFlowConditionalConnectionConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowConditionalConnectionConfigurationOutput) ToFlowConditionalConnectionConfigurationPtrOutputWithContext(ctx context.Context) FlowConditionalConnectionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowConditionalConnectionConfiguration) *FlowConditionalConnectionConfiguration {
		return &v
	}).(FlowConditionalConnectionConfigurationPtrOutput)
}

// Name of a condition in a flow
func (o FlowConditionalConnectionConfigurationOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v FlowConditionalConnectionConfiguration) string { return v.Condition }).(pulumi.StringOutput)
}

type FlowConditionalConnectionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowConditionalConnectionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowConditionalConnectionConfiguration)(nil)).Elem()
}

func (o FlowConditionalConnectionConfigurationPtrOutput) ToFlowConditionalConnectionConfigurationPtrOutput() FlowConditionalConnectionConfigurationPtrOutput {
	return o
}

func (o FlowConditionalConnectionConfigurationPtrOutput) ToFlowConditionalConnectionConfigurationPtrOutputWithContext(ctx context.Context) FlowConditionalConnectionConfigurationPtrOutput {
	return o
}

func (o FlowConditionalConnectionConfigurationPtrOutput) Elem() FlowConditionalConnectionConfigurationOutput {
	return o.ApplyT(func(v *FlowConditionalConnectionConfiguration) FlowConditionalConnectionConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowConditionalConnectionConfiguration
		return ret
	}).(FlowConditionalConnectionConfigurationOutput)
}

// Name of a condition in a flow
func (o FlowConditionalConnectionConfigurationPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowConditionalConnectionConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Condition
	}).(pulumi.StringPtrOutput)
}

// Flow connection
type FlowConnection struct {
	// The configuration of the connection.
	Configuration interface{} `pulumi:"configuration"`
	// Name of a connection in a flow
	Name string `pulumi:"name"`
	// Name of a node in a flow
	Source string `pulumi:"source"`
	// Name of a node in a flow
	Target string `pulumi:"target"`
	// Whether the source node that the connection begins from is a condition node ( `Conditional` ) or not ( `Data` ).
	Type FlowConnectionType `pulumi:"type"`
}

// FlowConnectionInput is an input type that accepts FlowConnectionArgs and FlowConnectionOutput values.
// You can construct a concrete instance of `FlowConnectionInput` via:
//
//	FlowConnectionArgs{...}
type FlowConnectionInput interface {
	pulumi.Input

	ToFlowConnectionOutput() FlowConnectionOutput
	ToFlowConnectionOutputWithContext(context.Context) FlowConnectionOutput
}

// Flow connection
type FlowConnectionArgs struct {
	// The configuration of the connection.
	Configuration pulumi.Input `pulumi:"configuration"`
	// Name of a connection in a flow
	Name pulumi.StringInput `pulumi:"name"`
	// Name of a node in a flow
	Source pulumi.StringInput `pulumi:"source"`
	// Name of a node in a flow
	Target pulumi.StringInput `pulumi:"target"`
	// Whether the source node that the connection begins from is a condition node ( `Conditional` ) or not ( `Data` ).
	Type FlowConnectionTypeInput `pulumi:"type"`
}

func (FlowConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowConnection)(nil)).Elem()
}

func (i FlowConnectionArgs) ToFlowConnectionOutput() FlowConnectionOutput {
	return i.ToFlowConnectionOutputWithContext(context.Background())
}

func (i FlowConnectionArgs) ToFlowConnectionOutputWithContext(ctx context.Context) FlowConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConnectionOutput)
}

// FlowConnectionArrayInput is an input type that accepts FlowConnectionArray and FlowConnectionArrayOutput values.
// You can construct a concrete instance of `FlowConnectionArrayInput` via:
//
//	FlowConnectionArray{ FlowConnectionArgs{...} }
type FlowConnectionArrayInput interface {
	pulumi.Input

	ToFlowConnectionArrayOutput() FlowConnectionArrayOutput
	ToFlowConnectionArrayOutputWithContext(context.Context) FlowConnectionArrayOutput
}

type FlowConnectionArray []FlowConnectionInput

func (FlowConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowConnection)(nil)).Elem()
}

func (i FlowConnectionArray) ToFlowConnectionArrayOutput() FlowConnectionArrayOutput {
	return i.ToFlowConnectionArrayOutputWithContext(context.Background())
}

func (i FlowConnectionArray) ToFlowConnectionArrayOutputWithContext(ctx context.Context) FlowConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConnectionArrayOutput)
}

// Flow connection
type FlowConnectionOutput struct{ *pulumi.OutputState }

func (FlowConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowConnection)(nil)).Elem()
}

func (o FlowConnectionOutput) ToFlowConnectionOutput() FlowConnectionOutput {
	return o
}

func (o FlowConnectionOutput) ToFlowConnectionOutputWithContext(ctx context.Context) FlowConnectionOutput {
	return o
}

// The configuration of the connection.
func (o FlowConnectionOutput) Configuration() pulumi.AnyOutput {
	return o.ApplyT(func(v FlowConnection) interface{} { return v.Configuration }).(pulumi.AnyOutput)
}

// Name of a connection in a flow
func (o FlowConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowConnection) string { return v.Name }).(pulumi.StringOutput)
}

// Name of a node in a flow
func (o FlowConnectionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v FlowConnection) string { return v.Source }).(pulumi.StringOutput)
}

// Name of a node in a flow
func (o FlowConnectionOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v FlowConnection) string { return v.Target }).(pulumi.StringOutput)
}

// Whether the source node that the connection begins from is a condition node ( `Conditional` ) or not ( `Data` ).
func (o FlowConnectionOutput) Type() FlowConnectionTypeOutput {
	return o.ApplyT(func(v FlowConnection) FlowConnectionType { return v.Type }).(FlowConnectionTypeOutput)
}

type FlowConnectionArrayOutput struct{ *pulumi.OutputState }

func (FlowConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowConnection)(nil)).Elem()
}

func (o FlowConnectionArrayOutput) ToFlowConnectionArrayOutput() FlowConnectionArrayOutput {
	return o
}

func (o FlowConnectionArrayOutput) ToFlowConnectionArrayOutputWithContext(ctx context.Context) FlowConnectionArrayOutput {
	return o
}

func (o FlowConnectionArrayOutput) Index(i pulumi.IntInput) FlowConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowConnection {
		return vs[0].([]FlowConnection)[vs[1].(int)]
	}).(FlowConnectionOutput)
}

// Connection configuration
type FlowConnectionConfiguration0Properties struct {
	Data FlowDataConnectionConfiguration `pulumi:"data"`
}

// FlowConnectionConfiguration0PropertiesInput is an input type that accepts FlowConnectionConfiguration0PropertiesArgs and FlowConnectionConfiguration0PropertiesOutput values.
// You can construct a concrete instance of `FlowConnectionConfiguration0PropertiesInput` via:
//
//	FlowConnectionConfiguration0PropertiesArgs{...}
type FlowConnectionConfiguration0PropertiesInput interface {
	pulumi.Input

	ToFlowConnectionConfiguration0PropertiesOutput() FlowConnectionConfiguration0PropertiesOutput
	ToFlowConnectionConfiguration0PropertiesOutputWithContext(context.Context) FlowConnectionConfiguration0PropertiesOutput
}

// Connection configuration
type FlowConnectionConfiguration0PropertiesArgs struct {
	Data FlowDataConnectionConfigurationInput `pulumi:"data"`
}

func (FlowConnectionConfiguration0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowConnectionConfiguration0Properties)(nil)).Elem()
}

func (i FlowConnectionConfiguration0PropertiesArgs) ToFlowConnectionConfiguration0PropertiesOutput() FlowConnectionConfiguration0PropertiesOutput {
	return i.ToFlowConnectionConfiguration0PropertiesOutputWithContext(context.Background())
}

func (i FlowConnectionConfiguration0PropertiesArgs) ToFlowConnectionConfiguration0PropertiesOutputWithContext(ctx context.Context) FlowConnectionConfiguration0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConnectionConfiguration0PropertiesOutput)
}

func (i FlowConnectionConfiguration0PropertiesArgs) ToFlowConnectionConfiguration0PropertiesPtrOutput() FlowConnectionConfiguration0PropertiesPtrOutput {
	return i.ToFlowConnectionConfiguration0PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowConnectionConfiguration0PropertiesArgs) ToFlowConnectionConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowConnectionConfiguration0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConnectionConfiguration0PropertiesOutput).ToFlowConnectionConfiguration0PropertiesPtrOutputWithContext(ctx)
}

// FlowConnectionConfiguration0PropertiesPtrInput is an input type that accepts FlowConnectionConfiguration0PropertiesArgs, FlowConnectionConfiguration0PropertiesPtr and FlowConnectionConfiguration0PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowConnectionConfiguration0PropertiesPtrInput` via:
//
//	        FlowConnectionConfiguration0PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowConnectionConfiguration0PropertiesPtrInput interface {
	pulumi.Input

	ToFlowConnectionConfiguration0PropertiesPtrOutput() FlowConnectionConfiguration0PropertiesPtrOutput
	ToFlowConnectionConfiguration0PropertiesPtrOutputWithContext(context.Context) FlowConnectionConfiguration0PropertiesPtrOutput
}

type flowConnectionConfiguration0PropertiesPtrType FlowConnectionConfiguration0PropertiesArgs

func FlowConnectionConfiguration0PropertiesPtr(v *FlowConnectionConfiguration0PropertiesArgs) FlowConnectionConfiguration0PropertiesPtrInput {
	return (*flowConnectionConfiguration0PropertiesPtrType)(v)
}

func (*flowConnectionConfiguration0PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowConnectionConfiguration0Properties)(nil)).Elem()
}

func (i *flowConnectionConfiguration0PropertiesPtrType) ToFlowConnectionConfiguration0PropertiesPtrOutput() FlowConnectionConfiguration0PropertiesPtrOutput {
	return i.ToFlowConnectionConfiguration0PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowConnectionConfiguration0PropertiesPtrType) ToFlowConnectionConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowConnectionConfiguration0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConnectionConfiguration0PropertiesPtrOutput)
}

// Connection configuration
type FlowConnectionConfiguration0PropertiesOutput struct{ *pulumi.OutputState }

func (FlowConnectionConfiguration0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowConnectionConfiguration0Properties)(nil)).Elem()
}

func (o FlowConnectionConfiguration0PropertiesOutput) ToFlowConnectionConfiguration0PropertiesOutput() FlowConnectionConfiguration0PropertiesOutput {
	return o
}

func (o FlowConnectionConfiguration0PropertiesOutput) ToFlowConnectionConfiguration0PropertiesOutputWithContext(ctx context.Context) FlowConnectionConfiguration0PropertiesOutput {
	return o
}

func (o FlowConnectionConfiguration0PropertiesOutput) ToFlowConnectionConfiguration0PropertiesPtrOutput() FlowConnectionConfiguration0PropertiesPtrOutput {
	return o.ToFlowConnectionConfiguration0PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowConnectionConfiguration0PropertiesOutput) ToFlowConnectionConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowConnectionConfiguration0PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowConnectionConfiguration0Properties) *FlowConnectionConfiguration0Properties {
		return &v
	}).(FlowConnectionConfiguration0PropertiesPtrOutput)
}

func (o FlowConnectionConfiguration0PropertiesOutput) Data() FlowDataConnectionConfigurationOutput {
	return o.ApplyT(func(v FlowConnectionConfiguration0Properties) FlowDataConnectionConfiguration { return v.Data }).(FlowDataConnectionConfigurationOutput)
}

type FlowConnectionConfiguration0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowConnectionConfiguration0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowConnectionConfiguration0Properties)(nil)).Elem()
}

func (o FlowConnectionConfiguration0PropertiesPtrOutput) ToFlowConnectionConfiguration0PropertiesPtrOutput() FlowConnectionConfiguration0PropertiesPtrOutput {
	return o
}

func (o FlowConnectionConfiguration0PropertiesPtrOutput) ToFlowConnectionConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowConnectionConfiguration0PropertiesPtrOutput {
	return o
}

func (o FlowConnectionConfiguration0PropertiesPtrOutput) Elem() FlowConnectionConfiguration0PropertiesOutput {
	return o.ApplyT(func(v *FlowConnectionConfiguration0Properties) FlowConnectionConfiguration0Properties {
		if v != nil {
			return *v
		}
		var ret FlowConnectionConfiguration0Properties
		return ret
	}).(FlowConnectionConfiguration0PropertiesOutput)
}

func (o FlowConnectionConfiguration0PropertiesPtrOutput) Data() FlowDataConnectionConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowConnectionConfiguration0Properties) *FlowDataConnectionConfiguration {
		if v == nil {
			return nil
		}
		return &v.Data
	}).(FlowDataConnectionConfigurationPtrOutput)
}

// Connection configuration
type FlowConnectionConfiguration1Properties struct {
	Conditional FlowConditionalConnectionConfiguration `pulumi:"conditional"`
}

// FlowConnectionConfiguration1PropertiesInput is an input type that accepts FlowConnectionConfiguration1PropertiesArgs and FlowConnectionConfiguration1PropertiesOutput values.
// You can construct a concrete instance of `FlowConnectionConfiguration1PropertiesInput` via:
//
//	FlowConnectionConfiguration1PropertiesArgs{...}
type FlowConnectionConfiguration1PropertiesInput interface {
	pulumi.Input

	ToFlowConnectionConfiguration1PropertiesOutput() FlowConnectionConfiguration1PropertiesOutput
	ToFlowConnectionConfiguration1PropertiesOutputWithContext(context.Context) FlowConnectionConfiguration1PropertiesOutput
}

// Connection configuration
type FlowConnectionConfiguration1PropertiesArgs struct {
	Conditional FlowConditionalConnectionConfigurationInput `pulumi:"conditional"`
}

func (FlowConnectionConfiguration1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowConnectionConfiguration1Properties)(nil)).Elem()
}

func (i FlowConnectionConfiguration1PropertiesArgs) ToFlowConnectionConfiguration1PropertiesOutput() FlowConnectionConfiguration1PropertiesOutput {
	return i.ToFlowConnectionConfiguration1PropertiesOutputWithContext(context.Background())
}

func (i FlowConnectionConfiguration1PropertiesArgs) ToFlowConnectionConfiguration1PropertiesOutputWithContext(ctx context.Context) FlowConnectionConfiguration1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConnectionConfiguration1PropertiesOutput)
}

func (i FlowConnectionConfiguration1PropertiesArgs) ToFlowConnectionConfiguration1PropertiesPtrOutput() FlowConnectionConfiguration1PropertiesPtrOutput {
	return i.ToFlowConnectionConfiguration1PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowConnectionConfiguration1PropertiesArgs) ToFlowConnectionConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowConnectionConfiguration1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConnectionConfiguration1PropertiesOutput).ToFlowConnectionConfiguration1PropertiesPtrOutputWithContext(ctx)
}

// FlowConnectionConfiguration1PropertiesPtrInput is an input type that accepts FlowConnectionConfiguration1PropertiesArgs, FlowConnectionConfiguration1PropertiesPtr and FlowConnectionConfiguration1PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowConnectionConfiguration1PropertiesPtrInput` via:
//
//	        FlowConnectionConfiguration1PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowConnectionConfiguration1PropertiesPtrInput interface {
	pulumi.Input

	ToFlowConnectionConfiguration1PropertiesPtrOutput() FlowConnectionConfiguration1PropertiesPtrOutput
	ToFlowConnectionConfiguration1PropertiesPtrOutputWithContext(context.Context) FlowConnectionConfiguration1PropertiesPtrOutput
}

type flowConnectionConfiguration1PropertiesPtrType FlowConnectionConfiguration1PropertiesArgs

func FlowConnectionConfiguration1PropertiesPtr(v *FlowConnectionConfiguration1PropertiesArgs) FlowConnectionConfiguration1PropertiesPtrInput {
	return (*flowConnectionConfiguration1PropertiesPtrType)(v)
}

func (*flowConnectionConfiguration1PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowConnectionConfiguration1Properties)(nil)).Elem()
}

func (i *flowConnectionConfiguration1PropertiesPtrType) ToFlowConnectionConfiguration1PropertiesPtrOutput() FlowConnectionConfiguration1PropertiesPtrOutput {
	return i.ToFlowConnectionConfiguration1PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowConnectionConfiguration1PropertiesPtrType) ToFlowConnectionConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowConnectionConfiguration1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowConnectionConfiguration1PropertiesPtrOutput)
}

// Connection configuration
type FlowConnectionConfiguration1PropertiesOutput struct{ *pulumi.OutputState }

func (FlowConnectionConfiguration1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowConnectionConfiguration1Properties)(nil)).Elem()
}

func (o FlowConnectionConfiguration1PropertiesOutput) ToFlowConnectionConfiguration1PropertiesOutput() FlowConnectionConfiguration1PropertiesOutput {
	return o
}

func (o FlowConnectionConfiguration1PropertiesOutput) ToFlowConnectionConfiguration1PropertiesOutputWithContext(ctx context.Context) FlowConnectionConfiguration1PropertiesOutput {
	return o
}

func (o FlowConnectionConfiguration1PropertiesOutput) ToFlowConnectionConfiguration1PropertiesPtrOutput() FlowConnectionConfiguration1PropertiesPtrOutput {
	return o.ToFlowConnectionConfiguration1PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowConnectionConfiguration1PropertiesOutput) ToFlowConnectionConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowConnectionConfiguration1PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowConnectionConfiguration1Properties) *FlowConnectionConfiguration1Properties {
		return &v
	}).(FlowConnectionConfiguration1PropertiesPtrOutput)
}

func (o FlowConnectionConfiguration1PropertiesOutput) Conditional() FlowConditionalConnectionConfigurationOutput {
	return o.ApplyT(func(v FlowConnectionConfiguration1Properties) FlowConditionalConnectionConfiguration {
		return v.Conditional
	}).(FlowConditionalConnectionConfigurationOutput)
}

type FlowConnectionConfiguration1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowConnectionConfiguration1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowConnectionConfiguration1Properties)(nil)).Elem()
}

func (o FlowConnectionConfiguration1PropertiesPtrOutput) ToFlowConnectionConfiguration1PropertiesPtrOutput() FlowConnectionConfiguration1PropertiesPtrOutput {
	return o
}

func (o FlowConnectionConfiguration1PropertiesPtrOutput) ToFlowConnectionConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowConnectionConfiguration1PropertiesPtrOutput {
	return o
}

func (o FlowConnectionConfiguration1PropertiesPtrOutput) Elem() FlowConnectionConfiguration1PropertiesOutput {
	return o.ApplyT(func(v *FlowConnectionConfiguration1Properties) FlowConnectionConfiguration1Properties {
		if v != nil {
			return *v
		}
		var ret FlowConnectionConfiguration1Properties
		return ret
	}).(FlowConnectionConfiguration1PropertiesOutput)
}

func (o FlowConnectionConfiguration1PropertiesPtrOutput) Conditional() FlowConditionalConnectionConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowConnectionConfiguration1Properties) *FlowConditionalConnectionConfiguration {
		if v == nil {
			return nil
		}
		return &v.Conditional
	}).(FlowConditionalConnectionConfigurationPtrOutput)
}

// Data connection configuration
type FlowDataConnectionConfiguration struct {
	// Name of a node output in a flow
	SourceOutput string `pulumi:"sourceOutput"`
	// Name of a node input in a flow
	TargetInput string `pulumi:"targetInput"`
}

// FlowDataConnectionConfigurationInput is an input type that accepts FlowDataConnectionConfigurationArgs and FlowDataConnectionConfigurationOutput values.
// You can construct a concrete instance of `FlowDataConnectionConfigurationInput` via:
//
//	FlowDataConnectionConfigurationArgs{...}
type FlowDataConnectionConfigurationInput interface {
	pulumi.Input

	ToFlowDataConnectionConfigurationOutput() FlowDataConnectionConfigurationOutput
	ToFlowDataConnectionConfigurationOutputWithContext(context.Context) FlowDataConnectionConfigurationOutput
}

// Data connection configuration
type FlowDataConnectionConfigurationArgs struct {
	// Name of a node output in a flow
	SourceOutput pulumi.StringInput `pulumi:"sourceOutput"`
	// Name of a node input in a flow
	TargetInput pulumi.StringInput `pulumi:"targetInput"`
}

func (FlowDataConnectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDataConnectionConfiguration)(nil)).Elem()
}

func (i FlowDataConnectionConfigurationArgs) ToFlowDataConnectionConfigurationOutput() FlowDataConnectionConfigurationOutput {
	return i.ToFlowDataConnectionConfigurationOutputWithContext(context.Background())
}

func (i FlowDataConnectionConfigurationArgs) ToFlowDataConnectionConfigurationOutputWithContext(ctx context.Context) FlowDataConnectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDataConnectionConfigurationOutput)
}

func (i FlowDataConnectionConfigurationArgs) ToFlowDataConnectionConfigurationPtrOutput() FlowDataConnectionConfigurationPtrOutput {
	return i.ToFlowDataConnectionConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowDataConnectionConfigurationArgs) ToFlowDataConnectionConfigurationPtrOutputWithContext(ctx context.Context) FlowDataConnectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDataConnectionConfigurationOutput).ToFlowDataConnectionConfigurationPtrOutputWithContext(ctx)
}

// FlowDataConnectionConfigurationPtrInput is an input type that accepts FlowDataConnectionConfigurationArgs, FlowDataConnectionConfigurationPtr and FlowDataConnectionConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowDataConnectionConfigurationPtrInput` via:
//
//	        FlowDataConnectionConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowDataConnectionConfigurationPtrInput interface {
	pulumi.Input

	ToFlowDataConnectionConfigurationPtrOutput() FlowDataConnectionConfigurationPtrOutput
	ToFlowDataConnectionConfigurationPtrOutputWithContext(context.Context) FlowDataConnectionConfigurationPtrOutput
}

type flowDataConnectionConfigurationPtrType FlowDataConnectionConfigurationArgs

func FlowDataConnectionConfigurationPtr(v *FlowDataConnectionConfigurationArgs) FlowDataConnectionConfigurationPtrInput {
	return (*flowDataConnectionConfigurationPtrType)(v)
}

func (*flowDataConnectionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDataConnectionConfiguration)(nil)).Elem()
}

func (i *flowDataConnectionConfigurationPtrType) ToFlowDataConnectionConfigurationPtrOutput() FlowDataConnectionConfigurationPtrOutput {
	return i.ToFlowDataConnectionConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowDataConnectionConfigurationPtrType) ToFlowDataConnectionConfigurationPtrOutputWithContext(ctx context.Context) FlowDataConnectionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDataConnectionConfigurationPtrOutput)
}

// Data connection configuration
type FlowDataConnectionConfigurationOutput struct{ *pulumi.OutputState }

func (FlowDataConnectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDataConnectionConfiguration)(nil)).Elem()
}

func (o FlowDataConnectionConfigurationOutput) ToFlowDataConnectionConfigurationOutput() FlowDataConnectionConfigurationOutput {
	return o
}

func (o FlowDataConnectionConfigurationOutput) ToFlowDataConnectionConfigurationOutputWithContext(ctx context.Context) FlowDataConnectionConfigurationOutput {
	return o
}

func (o FlowDataConnectionConfigurationOutput) ToFlowDataConnectionConfigurationPtrOutput() FlowDataConnectionConfigurationPtrOutput {
	return o.ToFlowDataConnectionConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowDataConnectionConfigurationOutput) ToFlowDataConnectionConfigurationPtrOutputWithContext(ctx context.Context) FlowDataConnectionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDataConnectionConfiguration) *FlowDataConnectionConfiguration {
		return &v
	}).(FlowDataConnectionConfigurationPtrOutput)
}

// Name of a node output in a flow
func (o FlowDataConnectionConfigurationOutput) SourceOutput() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDataConnectionConfiguration) string { return v.SourceOutput }).(pulumi.StringOutput)
}

// Name of a node input in a flow
func (o FlowDataConnectionConfigurationOutput) TargetInput() pulumi.StringOutput {
	return o.ApplyT(func(v FlowDataConnectionConfiguration) string { return v.TargetInput }).(pulumi.StringOutput)
}

type FlowDataConnectionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowDataConnectionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDataConnectionConfiguration)(nil)).Elem()
}

func (o FlowDataConnectionConfigurationPtrOutput) ToFlowDataConnectionConfigurationPtrOutput() FlowDataConnectionConfigurationPtrOutput {
	return o
}

func (o FlowDataConnectionConfigurationPtrOutput) ToFlowDataConnectionConfigurationPtrOutputWithContext(ctx context.Context) FlowDataConnectionConfigurationPtrOutput {
	return o
}

func (o FlowDataConnectionConfigurationPtrOutput) Elem() FlowDataConnectionConfigurationOutput {
	return o.ApplyT(func(v *FlowDataConnectionConfiguration) FlowDataConnectionConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowDataConnectionConfiguration
		return ret
	}).(FlowDataConnectionConfigurationOutput)
}

// Name of a node output in a flow
func (o FlowDataConnectionConfigurationPtrOutput) SourceOutput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDataConnectionConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SourceOutput
	}).(pulumi.StringPtrOutput)
}

// Name of a node input in a flow
func (o FlowDataConnectionConfigurationPtrOutput) TargetInput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowDataConnectionConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TargetInput
	}).(pulumi.StringPtrOutput)
}

// Flow definition
type FlowDefinition struct {
	// List of connections
	Connections []FlowConnection `pulumi:"connections"`
	// List of nodes in a flow
	Nodes []FlowNode `pulumi:"nodes"`
}

// FlowDefinitionInput is an input type that accepts FlowDefinitionArgs and FlowDefinitionOutput values.
// You can construct a concrete instance of `FlowDefinitionInput` via:
//
//	FlowDefinitionArgs{...}
type FlowDefinitionInput interface {
	pulumi.Input

	ToFlowDefinitionOutput() FlowDefinitionOutput
	ToFlowDefinitionOutputWithContext(context.Context) FlowDefinitionOutput
}

// Flow definition
type FlowDefinitionArgs struct {
	// List of connections
	Connections FlowConnectionArrayInput `pulumi:"connections"`
	// List of nodes in a flow
	Nodes FlowNodeArrayInput `pulumi:"nodes"`
}

func (FlowDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinition)(nil)).Elem()
}

func (i FlowDefinitionArgs) ToFlowDefinitionOutput() FlowDefinitionOutput {
	return i.ToFlowDefinitionOutputWithContext(context.Background())
}

func (i FlowDefinitionArgs) ToFlowDefinitionOutputWithContext(ctx context.Context) FlowDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDefinitionOutput)
}

func (i FlowDefinitionArgs) ToFlowDefinitionPtrOutput() FlowDefinitionPtrOutput {
	return i.ToFlowDefinitionPtrOutputWithContext(context.Background())
}

func (i FlowDefinitionArgs) ToFlowDefinitionPtrOutputWithContext(ctx context.Context) FlowDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDefinitionOutput).ToFlowDefinitionPtrOutputWithContext(ctx)
}

// FlowDefinitionPtrInput is an input type that accepts FlowDefinitionArgs, FlowDefinitionPtr and FlowDefinitionPtrOutput values.
// You can construct a concrete instance of `FlowDefinitionPtrInput` via:
//
//	        FlowDefinitionArgs{...}
//
//	or:
//
//	        nil
type FlowDefinitionPtrInput interface {
	pulumi.Input

	ToFlowDefinitionPtrOutput() FlowDefinitionPtrOutput
	ToFlowDefinitionPtrOutputWithContext(context.Context) FlowDefinitionPtrOutput
}

type flowDefinitionPtrType FlowDefinitionArgs

func FlowDefinitionPtr(v *FlowDefinitionArgs) FlowDefinitionPtrInput {
	return (*flowDefinitionPtrType)(v)
}

func (*flowDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDefinition)(nil)).Elem()
}

func (i *flowDefinitionPtrType) ToFlowDefinitionPtrOutput() FlowDefinitionPtrOutput {
	return i.ToFlowDefinitionPtrOutputWithContext(context.Background())
}

func (i *flowDefinitionPtrType) ToFlowDefinitionPtrOutputWithContext(ctx context.Context) FlowDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowDefinitionPtrOutput)
}

// Flow definition
type FlowDefinitionOutput struct{ *pulumi.OutputState }

func (FlowDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowDefinition)(nil)).Elem()
}

func (o FlowDefinitionOutput) ToFlowDefinitionOutput() FlowDefinitionOutput {
	return o
}

func (o FlowDefinitionOutput) ToFlowDefinitionOutputWithContext(ctx context.Context) FlowDefinitionOutput {
	return o
}

func (o FlowDefinitionOutput) ToFlowDefinitionPtrOutput() FlowDefinitionPtrOutput {
	return o.ToFlowDefinitionPtrOutputWithContext(context.Background())
}

func (o FlowDefinitionOutput) ToFlowDefinitionPtrOutputWithContext(ctx context.Context) FlowDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowDefinition) *FlowDefinition {
		return &v
	}).(FlowDefinitionPtrOutput)
}

// List of connections
func (o FlowDefinitionOutput) Connections() FlowConnectionArrayOutput {
	return o.ApplyT(func(v FlowDefinition) []FlowConnection { return v.Connections }).(FlowConnectionArrayOutput)
}

// List of nodes in a flow
func (o FlowDefinitionOutput) Nodes() FlowNodeArrayOutput {
	return o.ApplyT(func(v FlowDefinition) []FlowNode { return v.Nodes }).(FlowNodeArrayOutput)
}

type FlowDefinitionPtrOutput struct{ *pulumi.OutputState }

func (FlowDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowDefinition)(nil)).Elem()
}

func (o FlowDefinitionPtrOutput) ToFlowDefinitionPtrOutput() FlowDefinitionPtrOutput {
	return o
}

func (o FlowDefinitionPtrOutput) ToFlowDefinitionPtrOutputWithContext(ctx context.Context) FlowDefinitionPtrOutput {
	return o
}

func (o FlowDefinitionPtrOutput) Elem() FlowDefinitionOutput {
	return o.ApplyT(func(v *FlowDefinition) FlowDefinition {
		if v != nil {
			return *v
		}
		var ret FlowDefinition
		return ret
	}).(FlowDefinitionOutput)
}

// List of connections
func (o FlowDefinitionPtrOutput) Connections() FlowConnectionArrayOutput {
	return o.ApplyT(func(v *FlowDefinition) []FlowConnection {
		if v == nil {
			return nil
		}
		return v.Connections
	}).(FlowConnectionArrayOutput)
}

// List of nodes in a flow
func (o FlowDefinitionPtrOutput) Nodes() FlowNodeArrayOutput {
	return o.ApplyT(func(v *FlowDefinition) []FlowNode {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(FlowNodeArrayOutput)
}

// Input flow node configuration
type FlowInputFlowNodeConfiguration struct {
}

// FlowInputFlowNodeConfigurationInput is an input type that accepts FlowInputFlowNodeConfigurationArgs and FlowInputFlowNodeConfigurationOutput values.
// You can construct a concrete instance of `FlowInputFlowNodeConfigurationInput` via:
//
//	FlowInputFlowNodeConfigurationArgs{...}
type FlowInputFlowNodeConfigurationInput interface {
	pulumi.Input

	ToFlowInputFlowNodeConfigurationOutput() FlowInputFlowNodeConfigurationOutput
	ToFlowInputFlowNodeConfigurationOutputWithContext(context.Context) FlowInputFlowNodeConfigurationOutput
}

// Input flow node configuration
type FlowInputFlowNodeConfigurationArgs struct {
}

func (FlowInputFlowNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowInputFlowNodeConfiguration)(nil)).Elem()
}

func (i FlowInputFlowNodeConfigurationArgs) ToFlowInputFlowNodeConfigurationOutput() FlowInputFlowNodeConfigurationOutput {
	return i.ToFlowInputFlowNodeConfigurationOutputWithContext(context.Background())
}

func (i FlowInputFlowNodeConfigurationArgs) ToFlowInputFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowInputFlowNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowInputFlowNodeConfigurationOutput)
}

func (i FlowInputFlowNodeConfigurationArgs) ToFlowInputFlowNodeConfigurationPtrOutput() FlowInputFlowNodeConfigurationPtrOutput {
	return i.ToFlowInputFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowInputFlowNodeConfigurationArgs) ToFlowInputFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowInputFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowInputFlowNodeConfigurationOutput).ToFlowInputFlowNodeConfigurationPtrOutputWithContext(ctx)
}

// FlowInputFlowNodeConfigurationPtrInput is an input type that accepts FlowInputFlowNodeConfigurationArgs, FlowInputFlowNodeConfigurationPtr and FlowInputFlowNodeConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowInputFlowNodeConfigurationPtrInput` via:
//
//	        FlowInputFlowNodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowInputFlowNodeConfigurationPtrInput interface {
	pulumi.Input

	ToFlowInputFlowNodeConfigurationPtrOutput() FlowInputFlowNodeConfigurationPtrOutput
	ToFlowInputFlowNodeConfigurationPtrOutputWithContext(context.Context) FlowInputFlowNodeConfigurationPtrOutput
}

type flowInputFlowNodeConfigurationPtrType FlowInputFlowNodeConfigurationArgs

func FlowInputFlowNodeConfigurationPtr(v *FlowInputFlowNodeConfigurationArgs) FlowInputFlowNodeConfigurationPtrInput {
	return (*flowInputFlowNodeConfigurationPtrType)(v)
}

func (*flowInputFlowNodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowInputFlowNodeConfiguration)(nil)).Elem()
}

func (i *flowInputFlowNodeConfigurationPtrType) ToFlowInputFlowNodeConfigurationPtrOutput() FlowInputFlowNodeConfigurationPtrOutput {
	return i.ToFlowInputFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowInputFlowNodeConfigurationPtrType) ToFlowInputFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowInputFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowInputFlowNodeConfigurationPtrOutput)
}

// Input flow node configuration
type FlowInputFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowInputFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowInputFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowInputFlowNodeConfigurationOutput) ToFlowInputFlowNodeConfigurationOutput() FlowInputFlowNodeConfigurationOutput {
	return o
}

func (o FlowInputFlowNodeConfigurationOutput) ToFlowInputFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowInputFlowNodeConfigurationOutput {
	return o
}

func (o FlowInputFlowNodeConfigurationOutput) ToFlowInputFlowNodeConfigurationPtrOutput() FlowInputFlowNodeConfigurationPtrOutput {
	return o.ToFlowInputFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowInputFlowNodeConfigurationOutput) ToFlowInputFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowInputFlowNodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowInputFlowNodeConfiguration) *FlowInputFlowNodeConfiguration {
		return &v
	}).(FlowInputFlowNodeConfigurationPtrOutput)
}

type FlowInputFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowInputFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowInputFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowInputFlowNodeConfigurationPtrOutput) ToFlowInputFlowNodeConfigurationPtrOutput() FlowInputFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowInputFlowNodeConfigurationPtrOutput) ToFlowInputFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowInputFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowInputFlowNodeConfigurationPtrOutput) Elem() FlowInputFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowInputFlowNodeConfiguration) FlowInputFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowInputFlowNodeConfiguration
		return ret
	}).(FlowInputFlowNodeConfigurationOutput)
}

// Iterator flow node configuration
type FlowIteratorFlowNodeConfiguration struct {
}

// FlowIteratorFlowNodeConfigurationInput is an input type that accepts FlowIteratorFlowNodeConfigurationArgs and FlowIteratorFlowNodeConfigurationOutput values.
// You can construct a concrete instance of `FlowIteratorFlowNodeConfigurationInput` via:
//
//	FlowIteratorFlowNodeConfigurationArgs{...}
type FlowIteratorFlowNodeConfigurationInput interface {
	pulumi.Input

	ToFlowIteratorFlowNodeConfigurationOutput() FlowIteratorFlowNodeConfigurationOutput
	ToFlowIteratorFlowNodeConfigurationOutputWithContext(context.Context) FlowIteratorFlowNodeConfigurationOutput
}

// Iterator flow node configuration
type FlowIteratorFlowNodeConfigurationArgs struct {
}

func (FlowIteratorFlowNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowIteratorFlowNodeConfiguration)(nil)).Elem()
}

func (i FlowIteratorFlowNodeConfigurationArgs) ToFlowIteratorFlowNodeConfigurationOutput() FlowIteratorFlowNodeConfigurationOutput {
	return i.ToFlowIteratorFlowNodeConfigurationOutputWithContext(context.Background())
}

func (i FlowIteratorFlowNodeConfigurationArgs) ToFlowIteratorFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowIteratorFlowNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowIteratorFlowNodeConfigurationOutput)
}

func (i FlowIteratorFlowNodeConfigurationArgs) ToFlowIteratorFlowNodeConfigurationPtrOutput() FlowIteratorFlowNodeConfigurationPtrOutput {
	return i.ToFlowIteratorFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowIteratorFlowNodeConfigurationArgs) ToFlowIteratorFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowIteratorFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowIteratorFlowNodeConfigurationOutput).ToFlowIteratorFlowNodeConfigurationPtrOutputWithContext(ctx)
}

// FlowIteratorFlowNodeConfigurationPtrInput is an input type that accepts FlowIteratorFlowNodeConfigurationArgs, FlowIteratorFlowNodeConfigurationPtr and FlowIteratorFlowNodeConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowIteratorFlowNodeConfigurationPtrInput` via:
//
//	        FlowIteratorFlowNodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowIteratorFlowNodeConfigurationPtrInput interface {
	pulumi.Input

	ToFlowIteratorFlowNodeConfigurationPtrOutput() FlowIteratorFlowNodeConfigurationPtrOutput
	ToFlowIteratorFlowNodeConfigurationPtrOutputWithContext(context.Context) FlowIteratorFlowNodeConfigurationPtrOutput
}

type flowIteratorFlowNodeConfigurationPtrType FlowIteratorFlowNodeConfigurationArgs

func FlowIteratorFlowNodeConfigurationPtr(v *FlowIteratorFlowNodeConfigurationArgs) FlowIteratorFlowNodeConfigurationPtrInput {
	return (*flowIteratorFlowNodeConfigurationPtrType)(v)
}

func (*flowIteratorFlowNodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowIteratorFlowNodeConfiguration)(nil)).Elem()
}

func (i *flowIteratorFlowNodeConfigurationPtrType) ToFlowIteratorFlowNodeConfigurationPtrOutput() FlowIteratorFlowNodeConfigurationPtrOutput {
	return i.ToFlowIteratorFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowIteratorFlowNodeConfigurationPtrType) ToFlowIteratorFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowIteratorFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowIteratorFlowNodeConfigurationPtrOutput)
}

// Iterator flow node configuration
type FlowIteratorFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowIteratorFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowIteratorFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowIteratorFlowNodeConfigurationOutput) ToFlowIteratorFlowNodeConfigurationOutput() FlowIteratorFlowNodeConfigurationOutput {
	return o
}

func (o FlowIteratorFlowNodeConfigurationOutput) ToFlowIteratorFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowIteratorFlowNodeConfigurationOutput {
	return o
}

func (o FlowIteratorFlowNodeConfigurationOutput) ToFlowIteratorFlowNodeConfigurationPtrOutput() FlowIteratorFlowNodeConfigurationPtrOutput {
	return o.ToFlowIteratorFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowIteratorFlowNodeConfigurationOutput) ToFlowIteratorFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowIteratorFlowNodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowIteratorFlowNodeConfiguration) *FlowIteratorFlowNodeConfiguration {
		return &v
	}).(FlowIteratorFlowNodeConfigurationPtrOutput)
}

type FlowIteratorFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowIteratorFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowIteratorFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowIteratorFlowNodeConfigurationPtrOutput) ToFlowIteratorFlowNodeConfigurationPtrOutput() FlowIteratorFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowIteratorFlowNodeConfigurationPtrOutput) ToFlowIteratorFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowIteratorFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowIteratorFlowNodeConfigurationPtrOutput) Elem() FlowIteratorFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowIteratorFlowNodeConfiguration) FlowIteratorFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowIteratorFlowNodeConfiguration
		return ret
	}).(FlowIteratorFlowNodeConfigurationOutput)
}

// Knowledge base flow node configuration
type FlowKnowledgeBaseFlowNodeConfiguration struct {
	// Identifier of the KnowledgeBase
	KnowledgeBaseId string `pulumi:"knowledgeBaseId"`
	// ARN or name of a Bedrock model.
	ModelId *string `pulumi:"modelId"`
}

// FlowKnowledgeBaseFlowNodeConfigurationInput is an input type that accepts FlowKnowledgeBaseFlowNodeConfigurationArgs and FlowKnowledgeBaseFlowNodeConfigurationOutput values.
// You can construct a concrete instance of `FlowKnowledgeBaseFlowNodeConfigurationInput` via:
//
//	FlowKnowledgeBaseFlowNodeConfigurationArgs{...}
type FlowKnowledgeBaseFlowNodeConfigurationInput interface {
	pulumi.Input

	ToFlowKnowledgeBaseFlowNodeConfigurationOutput() FlowKnowledgeBaseFlowNodeConfigurationOutput
	ToFlowKnowledgeBaseFlowNodeConfigurationOutputWithContext(context.Context) FlowKnowledgeBaseFlowNodeConfigurationOutput
}

// Knowledge base flow node configuration
type FlowKnowledgeBaseFlowNodeConfigurationArgs struct {
	// Identifier of the KnowledgeBase
	KnowledgeBaseId pulumi.StringInput `pulumi:"knowledgeBaseId"`
	// ARN or name of a Bedrock model.
	ModelId pulumi.StringPtrInput `pulumi:"modelId"`
}

func (FlowKnowledgeBaseFlowNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowKnowledgeBaseFlowNodeConfiguration)(nil)).Elem()
}

func (i FlowKnowledgeBaseFlowNodeConfigurationArgs) ToFlowKnowledgeBaseFlowNodeConfigurationOutput() FlowKnowledgeBaseFlowNodeConfigurationOutput {
	return i.ToFlowKnowledgeBaseFlowNodeConfigurationOutputWithContext(context.Background())
}

func (i FlowKnowledgeBaseFlowNodeConfigurationArgs) ToFlowKnowledgeBaseFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowKnowledgeBaseFlowNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowKnowledgeBaseFlowNodeConfigurationOutput)
}

func (i FlowKnowledgeBaseFlowNodeConfigurationArgs) ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutput() FlowKnowledgeBaseFlowNodeConfigurationPtrOutput {
	return i.ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowKnowledgeBaseFlowNodeConfigurationArgs) ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowKnowledgeBaseFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowKnowledgeBaseFlowNodeConfigurationOutput).ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutputWithContext(ctx)
}

// FlowKnowledgeBaseFlowNodeConfigurationPtrInput is an input type that accepts FlowKnowledgeBaseFlowNodeConfigurationArgs, FlowKnowledgeBaseFlowNodeConfigurationPtr and FlowKnowledgeBaseFlowNodeConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowKnowledgeBaseFlowNodeConfigurationPtrInput` via:
//
//	        FlowKnowledgeBaseFlowNodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowKnowledgeBaseFlowNodeConfigurationPtrInput interface {
	pulumi.Input

	ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutput() FlowKnowledgeBaseFlowNodeConfigurationPtrOutput
	ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutputWithContext(context.Context) FlowKnowledgeBaseFlowNodeConfigurationPtrOutput
}

type flowKnowledgeBaseFlowNodeConfigurationPtrType FlowKnowledgeBaseFlowNodeConfigurationArgs

func FlowKnowledgeBaseFlowNodeConfigurationPtr(v *FlowKnowledgeBaseFlowNodeConfigurationArgs) FlowKnowledgeBaseFlowNodeConfigurationPtrInput {
	return (*flowKnowledgeBaseFlowNodeConfigurationPtrType)(v)
}

func (*flowKnowledgeBaseFlowNodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowKnowledgeBaseFlowNodeConfiguration)(nil)).Elem()
}

func (i *flowKnowledgeBaseFlowNodeConfigurationPtrType) ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutput() FlowKnowledgeBaseFlowNodeConfigurationPtrOutput {
	return i.ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowKnowledgeBaseFlowNodeConfigurationPtrType) ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowKnowledgeBaseFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowKnowledgeBaseFlowNodeConfigurationPtrOutput)
}

// Knowledge base flow node configuration
type FlowKnowledgeBaseFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowKnowledgeBaseFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowKnowledgeBaseFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowKnowledgeBaseFlowNodeConfigurationOutput) ToFlowKnowledgeBaseFlowNodeConfigurationOutput() FlowKnowledgeBaseFlowNodeConfigurationOutput {
	return o
}

func (o FlowKnowledgeBaseFlowNodeConfigurationOutput) ToFlowKnowledgeBaseFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowKnowledgeBaseFlowNodeConfigurationOutput {
	return o
}

func (o FlowKnowledgeBaseFlowNodeConfigurationOutput) ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutput() FlowKnowledgeBaseFlowNodeConfigurationPtrOutput {
	return o.ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowKnowledgeBaseFlowNodeConfigurationOutput) ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowKnowledgeBaseFlowNodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowKnowledgeBaseFlowNodeConfiguration) *FlowKnowledgeBaseFlowNodeConfiguration {
		return &v
	}).(FlowKnowledgeBaseFlowNodeConfigurationPtrOutput)
}

// Identifier of the KnowledgeBase
func (o FlowKnowledgeBaseFlowNodeConfigurationOutput) KnowledgeBaseId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowKnowledgeBaseFlowNodeConfiguration) string { return v.KnowledgeBaseId }).(pulumi.StringOutput)
}

// ARN or name of a Bedrock model.
func (o FlowKnowledgeBaseFlowNodeConfigurationOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowKnowledgeBaseFlowNodeConfiguration) *string { return v.ModelId }).(pulumi.StringPtrOutput)
}

type FlowKnowledgeBaseFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowKnowledgeBaseFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowKnowledgeBaseFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowKnowledgeBaseFlowNodeConfigurationPtrOutput) ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutput() FlowKnowledgeBaseFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowKnowledgeBaseFlowNodeConfigurationPtrOutput) ToFlowKnowledgeBaseFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowKnowledgeBaseFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowKnowledgeBaseFlowNodeConfigurationPtrOutput) Elem() FlowKnowledgeBaseFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowKnowledgeBaseFlowNodeConfiguration) FlowKnowledgeBaseFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowKnowledgeBaseFlowNodeConfiguration
		return ret
	}).(FlowKnowledgeBaseFlowNodeConfigurationOutput)
}

// Identifier of the KnowledgeBase
func (o FlowKnowledgeBaseFlowNodeConfigurationPtrOutput) KnowledgeBaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowKnowledgeBaseFlowNodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.KnowledgeBaseId
	}).(pulumi.StringPtrOutput)
}

// ARN or name of a Bedrock model.
func (o FlowKnowledgeBaseFlowNodeConfigurationPtrOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowKnowledgeBaseFlowNodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ModelId
	}).(pulumi.StringPtrOutput)
}

// Lambda function flow node configuration
type FlowLambdaFunctionFlowNodeConfiguration struct {
	// ARN of a Lambda.
	LambdaArn string `pulumi:"lambdaArn"`
}

// FlowLambdaFunctionFlowNodeConfigurationInput is an input type that accepts FlowLambdaFunctionFlowNodeConfigurationArgs and FlowLambdaFunctionFlowNodeConfigurationOutput values.
// You can construct a concrete instance of `FlowLambdaFunctionFlowNodeConfigurationInput` via:
//
//	FlowLambdaFunctionFlowNodeConfigurationArgs{...}
type FlowLambdaFunctionFlowNodeConfigurationInput interface {
	pulumi.Input

	ToFlowLambdaFunctionFlowNodeConfigurationOutput() FlowLambdaFunctionFlowNodeConfigurationOutput
	ToFlowLambdaFunctionFlowNodeConfigurationOutputWithContext(context.Context) FlowLambdaFunctionFlowNodeConfigurationOutput
}

// Lambda function flow node configuration
type FlowLambdaFunctionFlowNodeConfigurationArgs struct {
	// ARN of a Lambda.
	LambdaArn pulumi.StringInput `pulumi:"lambdaArn"`
}

func (FlowLambdaFunctionFlowNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLambdaFunctionFlowNodeConfiguration)(nil)).Elem()
}

func (i FlowLambdaFunctionFlowNodeConfigurationArgs) ToFlowLambdaFunctionFlowNodeConfigurationOutput() FlowLambdaFunctionFlowNodeConfigurationOutput {
	return i.ToFlowLambdaFunctionFlowNodeConfigurationOutputWithContext(context.Background())
}

func (i FlowLambdaFunctionFlowNodeConfigurationArgs) ToFlowLambdaFunctionFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowLambdaFunctionFlowNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLambdaFunctionFlowNodeConfigurationOutput)
}

func (i FlowLambdaFunctionFlowNodeConfigurationArgs) ToFlowLambdaFunctionFlowNodeConfigurationPtrOutput() FlowLambdaFunctionFlowNodeConfigurationPtrOutput {
	return i.ToFlowLambdaFunctionFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowLambdaFunctionFlowNodeConfigurationArgs) ToFlowLambdaFunctionFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowLambdaFunctionFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLambdaFunctionFlowNodeConfigurationOutput).ToFlowLambdaFunctionFlowNodeConfigurationPtrOutputWithContext(ctx)
}

// FlowLambdaFunctionFlowNodeConfigurationPtrInput is an input type that accepts FlowLambdaFunctionFlowNodeConfigurationArgs, FlowLambdaFunctionFlowNodeConfigurationPtr and FlowLambdaFunctionFlowNodeConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowLambdaFunctionFlowNodeConfigurationPtrInput` via:
//
//	        FlowLambdaFunctionFlowNodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowLambdaFunctionFlowNodeConfigurationPtrInput interface {
	pulumi.Input

	ToFlowLambdaFunctionFlowNodeConfigurationPtrOutput() FlowLambdaFunctionFlowNodeConfigurationPtrOutput
	ToFlowLambdaFunctionFlowNodeConfigurationPtrOutputWithContext(context.Context) FlowLambdaFunctionFlowNodeConfigurationPtrOutput
}

type flowLambdaFunctionFlowNodeConfigurationPtrType FlowLambdaFunctionFlowNodeConfigurationArgs

func FlowLambdaFunctionFlowNodeConfigurationPtr(v *FlowLambdaFunctionFlowNodeConfigurationArgs) FlowLambdaFunctionFlowNodeConfigurationPtrInput {
	return (*flowLambdaFunctionFlowNodeConfigurationPtrType)(v)
}

func (*flowLambdaFunctionFlowNodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLambdaFunctionFlowNodeConfiguration)(nil)).Elem()
}

func (i *flowLambdaFunctionFlowNodeConfigurationPtrType) ToFlowLambdaFunctionFlowNodeConfigurationPtrOutput() FlowLambdaFunctionFlowNodeConfigurationPtrOutput {
	return i.ToFlowLambdaFunctionFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowLambdaFunctionFlowNodeConfigurationPtrType) ToFlowLambdaFunctionFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowLambdaFunctionFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLambdaFunctionFlowNodeConfigurationPtrOutput)
}

// Lambda function flow node configuration
type FlowLambdaFunctionFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowLambdaFunctionFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLambdaFunctionFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowLambdaFunctionFlowNodeConfigurationOutput) ToFlowLambdaFunctionFlowNodeConfigurationOutput() FlowLambdaFunctionFlowNodeConfigurationOutput {
	return o
}

func (o FlowLambdaFunctionFlowNodeConfigurationOutput) ToFlowLambdaFunctionFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowLambdaFunctionFlowNodeConfigurationOutput {
	return o
}

func (o FlowLambdaFunctionFlowNodeConfigurationOutput) ToFlowLambdaFunctionFlowNodeConfigurationPtrOutput() FlowLambdaFunctionFlowNodeConfigurationPtrOutput {
	return o.ToFlowLambdaFunctionFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowLambdaFunctionFlowNodeConfigurationOutput) ToFlowLambdaFunctionFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowLambdaFunctionFlowNodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowLambdaFunctionFlowNodeConfiguration) *FlowLambdaFunctionFlowNodeConfiguration {
		return &v
	}).(FlowLambdaFunctionFlowNodeConfigurationPtrOutput)
}

// ARN of a Lambda.
func (o FlowLambdaFunctionFlowNodeConfigurationOutput) LambdaArn() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLambdaFunctionFlowNodeConfiguration) string { return v.LambdaArn }).(pulumi.StringOutput)
}

type FlowLambdaFunctionFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowLambdaFunctionFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLambdaFunctionFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowLambdaFunctionFlowNodeConfigurationPtrOutput) ToFlowLambdaFunctionFlowNodeConfigurationPtrOutput() FlowLambdaFunctionFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowLambdaFunctionFlowNodeConfigurationPtrOutput) ToFlowLambdaFunctionFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowLambdaFunctionFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowLambdaFunctionFlowNodeConfigurationPtrOutput) Elem() FlowLambdaFunctionFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowLambdaFunctionFlowNodeConfiguration) FlowLambdaFunctionFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowLambdaFunctionFlowNodeConfiguration
		return ret
	}).(FlowLambdaFunctionFlowNodeConfigurationOutput)
}

// ARN of a Lambda.
func (o FlowLambdaFunctionFlowNodeConfigurationPtrOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowLambdaFunctionFlowNodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.LambdaArn
	}).(pulumi.StringPtrOutput)
}

// Lex flow node configuration
type FlowLexFlowNodeConfiguration struct {
	// ARN of a Lex bot alias
	BotAliasArn string `pulumi:"botAliasArn"`
	// Lex bot locale id
	LocaleId string `pulumi:"localeId"`
}

// FlowLexFlowNodeConfigurationInput is an input type that accepts FlowLexFlowNodeConfigurationArgs and FlowLexFlowNodeConfigurationOutput values.
// You can construct a concrete instance of `FlowLexFlowNodeConfigurationInput` via:
//
//	FlowLexFlowNodeConfigurationArgs{...}
type FlowLexFlowNodeConfigurationInput interface {
	pulumi.Input

	ToFlowLexFlowNodeConfigurationOutput() FlowLexFlowNodeConfigurationOutput
	ToFlowLexFlowNodeConfigurationOutputWithContext(context.Context) FlowLexFlowNodeConfigurationOutput
}

// Lex flow node configuration
type FlowLexFlowNodeConfigurationArgs struct {
	// ARN of a Lex bot alias
	BotAliasArn pulumi.StringInput `pulumi:"botAliasArn"`
	// Lex bot locale id
	LocaleId pulumi.StringInput `pulumi:"localeId"`
}

func (FlowLexFlowNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLexFlowNodeConfiguration)(nil)).Elem()
}

func (i FlowLexFlowNodeConfigurationArgs) ToFlowLexFlowNodeConfigurationOutput() FlowLexFlowNodeConfigurationOutput {
	return i.ToFlowLexFlowNodeConfigurationOutputWithContext(context.Background())
}

func (i FlowLexFlowNodeConfigurationArgs) ToFlowLexFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowLexFlowNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLexFlowNodeConfigurationOutput)
}

func (i FlowLexFlowNodeConfigurationArgs) ToFlowLexFlowNodeConfigurationPtrOutput() FlowLexFlowNodeConfigurationPtrOutput {
	return i.ToFlowLexFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowLexFlowNodeConfigurationArgs) ToFlowLexFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowLexFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLexFlowNodeConfigurationOutput).ToFlowLexFlowNodeConfigurationPtrOutputWithContext(ctx)
}

// FlowLexFlowNodeConfigurationPtrInput is an input type that accepts FlowLexFlowNodeConfigurationArgs, FlowLexFlowNodeConfigurationPtr and FlowLexFlowNodeConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowLexFlowNodeConfigurationPtrInput` via:
//
//	        FlowLexFlowNodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowLexFlowNodeConfigurationPtrInput interface {
	pulumi.Input

	ToFlowLexFlowNodeConfigurationPtrOutput() FlowLexFlowNodeConfigurationPtrOutput
	ToFlowLexFlowNodeConfigurationPtrOutputWithContext(context.Context) FlowLexFlowNodeConfigurationPtrOutput
}

type flowLexFlowNodeConfigurationPtrType FlowLexFlowNodeConfigurationArgs

func FlowLexFlowNodeConfigurationPtr(v *FlowLexFlowNodeConfigurationArgs) FlowLexFlowNodeConfigurationPtrInput {
	return (*flowLexFlowNodeConfigurationPtrType)(v)
}

func (*flowLexFlowNodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLexFlowNodeConfiguration)(nil)).Elem()
}

func (i *flowLexFlowNodeConfigurationPtrType) ToFlowLexFlowNodeConfigurationPtrOutput() FlowLexFlowNodeConfigurationPtrOutput {
	return i.ToFlowLexFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowLexFlowNodeConfigurationPtrType) ToFlowLexFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowLexFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowLexFlowNodeConfigurationPtrOutput)
}

// Lex flow node configuration
type FlowLexFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowLexFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowLexFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowLexFlowNodeConfigurationOutput) ToFlowLexFlowNodeConfigurationOutput() FlowLexFlowNodeConfigurationOutput {
	return o
}

func (o FlowLexFlowNodeConfigurationOutput) ToFlowLexFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowLexFlowNodeConfigurationOutput {
	return o
}

func (o FlowLexFlowNodeConfigurationOutput) ToFlowLexFlowNodeConfigurationPtrOutput() FlowLexFlowNodeConfigurationPtrOutput {
	return o.ToFlowLexFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowLexFlowNodeConfigurationOutput) ToFlowLexFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowLexFlowNodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowLexFlowNodeConfiguration) *FlowLexFlowNodeConfiguration {
		return &v
	}).(FlowLexFlowNodeConfigurationPtrOutput)
}

// ARN of a Lex bot alias
func (o FlowLexFlowNodeConfigurationOutput) BotAliasArn() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLexFlowNodeConfiguration) string { return v.BotAliasArn }).(pulumi.StringOutput)
}

// Lex bot locale id
func (o FlowLexFlowNodeConfigurationOutput) LocaleId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowLexFlowNodeConfiguration) string { return v.LocaleId }).(pulumi.StringOutput)
}

type FlowLexFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowLexFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowLexFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowLexFlowNodeConfigurationPtrOutput) ToFlowLexFlowNodeConfigurationPtrOutput() FlowLexFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowLexFlowNodeConfigurationPtrOutput) ToFlowLexFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowLexFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowLexFlowNodeConfigurationPtrOutput) Elem() FlowLexFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowLexFlowNodeConfiguration) FlowLexFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowLexFlowNodeConfiguration
		return ret
	}).(FlowLexFlowNodeConfigurationOutput)
}

// ARN of a Lex bot alias
func (o FlowLexFlowNodeConfigurationPtrOutput) BotAliasArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowLexFlowNodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.BotAliasArn
	}).(pulumi.StringPtrOutput)
}

// Lex bot locale id
func (o FlowLexFlowNodeConfigurationPtrOutput) LocaleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowLexFlowNodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.LocaleId
	}).(pulumi.StringPtrOutput)
}

// Internal mixin for flow node
type FlowNode struct {
	// Contains configurations for the node.
	Configuration interface{} `pulumi:"configuration"`
	// List of node inputs in a flow
	Inputs []FlowNodeInputType `pulumi:"inputs"`
	// Name of a node in a flow
	Name string `pulumi:"name"`
	// List of node outputs in a flow
	Outputs []FlowNodeOutputType `pulumi:"outputs"`
	// The type of node. This value must match the name of the key that you provide in the configuration you provide in the `FlowNodeConfiguration` field.
	Type FlowNodeType `pulumi:"type"`
}

// FlowNodeInput is an input type that accepts FlowNodeArgs and FlowNodeOutput values.
// You can construct a concrete instance of `FlowNodeInput` via:
//
//	FlowNodeArgs{...}
type FlowNodeInput interface {
	pulumi.Input

	ToFlowNodeOutput() FlowNodeOutput
	ToFlowNodeOutputWithContext(context.Context) FlowNodeOutput
}

// Internal mixin for flow node
type FlowNodeArgs struct {
	// Contains configurations for the node.
	Configuration pulumi.Input `pulumi:"configuration"`
	// List of node inputs in a flow
	Inputs FlowNodeInputTypeArrayInput `pulumi:"inputs"`
	// Name of a node in a flow
	Name pulumi.StringInput `pulumi:"name"`
	// List of node outputs in a flow
	Outputs FlowNodeOutputTypeArrayInput `pulumi:"outputs"`
	// The type of node. This value must match the name of the key that you provide in the configuration you provide in the `FlowNodeConfiguration` field.
	Type FlowNodeTypeInput `pulumi:"type"`
}

func (FlowNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNode)(nil)).Elem()
}

func (i FlowNodeArgs) ToFlowNodeOutput() FlowNodeOutput {
	return i.ToFlowNodeOutputWithContext(context.Background())
}

func (i FlowNodeArgs) ToFlowNodeOutputWithContext(ctx context.Context) FlowNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeOutput)
}

// FlowNodeArrayInput is an input type that accepts FlowNodeArray and FlowNodeArrayOutput values.
// You can construct a concrete instance of `FlowNodeArrayInput` via:
//
//	FlowNodeArray{ FlowNodeArgs{...} }
type FlowNodeArrayInput interface {
	pulumi.Input

	ToFlowNodeArrayOutput() FlowNodeArrayOutput
	ToFlowNodeArrayOutputWithContext(context.Context) FlowNodeArrayOutput
}

type FlowNodeArray []FlowNodeInput

func (FlowNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowNode)(nil)).Elem()
}

func (i FlowNodeArray) ToFlowNodeArrayOutput() FlowNodeArrayOutput {
	return i.ToFlowNodeArrayOutputWithContext(context.Background())
}

func (i FlowNodeArray) ToFlowNodeArrayOutputWithContext(ctx context.Context) FlowNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeArrayOutput)
}

// Internal mixin for flow node
type FlowNodeOutput struct{ *pulumi.OutputState }

func (FlowNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNode)(nil)).Elem()
}

func (o FlowNodeOutput) ToFlowNodeOutput() FlowNodeOutput {
	return o
}

func (o FlowNodeOutput) ToFlowNodeOutputWithContext(ctx context.Context) FlowNodeOutput {
	return o
}

// Contains configurations for the node.
func (o FlowNodeOutput) Configuration() pulumi.AnyOutput {
	return o.ApplyT(func(v FlowNode) interface{} { return v.Configuration }).(pulumi.AnyOutput)
}

// List of node inputs in a flow
func (o FlowNodeOutput) Inputs() FlowNodeInputTypeArrayOutput {
	return o.ApplyT(func(v FlowNode) []FlowNodeInputType { return v.Inputs }).(FlowNodeInputTypeArrayOutput)
}

// Name of a node in a flow
func (o FlowNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowNode) string { return v.Name }).(pulumi.StringOutput)
}

// List of node outputs in a flow
func (o FlowNodeOutput) Outputs() FlowNodeOutputTypeArrayOutput {
	return o.ApplyT(func(v FlowNode) []FlowNodeOutputType { return v.Outputs }).(FlowNodeOutputTypeArrayOutput)
}

// The type of node. This value must match the name of the key that you provide in the configuration you provide in the `FlowNodeConfiguration` field.
func (o FlowNodeOutput) Type() FlowNodeTypeOutput {
	return o.ApplyT(func(v FlowNode) FlowNodeType { return v.Type }).(FlowNodeTypeOutput)
}

type FlowNodeArrayOutput struct{ *pulumi.OutputState }

func (FlowNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowNode)(nil)).Elem()
}

func (o FlowNodeArrayOutput) ToFlowNodeArrayOutput() FlowNodeArrayOutput {
	return o
}

func (o FlowNodeArrayOutput) ToFlowNodeArrayOutputWithContext(ctx context.Context) FlowNodeArrayOutput {
	return o
}

func (o FlowNodeArrayOutput) Index(i pulumi.IntInput) FlowNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowNode {
		return vs[0].([]FlowNode)[vs[1].(int)]
	}).(FlowNodeOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration0Properties struct {
	Input FlowInputFlowNodeConfiguration `pulumi:"input"`
}

// FlowNodeConfiguration0PropertiesInput is an input type that accepts FlowNodeConfiguration0PropertiesArgs and FlowNodeConfiguration0PropertiesOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration0PropertiesInput` via:
//
//	FlowNodeConfiguration0PropertiesArgs{...}
type FlowNodeConfiguration0PropertiesInput interface {
	pulumi.Input

	ToFlowNodeConfiguration0PropertiesOutput() FlowNodeConfiguration0PropertiesOutput
	ToFlowNodeConfiguration0PropertiesOutputWithContext(context.Context) FlowNodeConfiguration0PropertiesOutput
}

// Node configuration in a flow
type FlowNodeConfiguration0PropertiesArgs struct {
	Input FlowInputFlowNodeConfigurationInput `pulumi:"input"`
}

func (FlowNodeConfiguration0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration0Properties)(nil)).Elem()
}

func (i FlowNodeConfiguration0PropertiesArgs) ToFlowNodeConfiguration0PropertiesOutput() FlowNodeConfiguration0PropertiesOutput {
	return i.ToFlowNodeConfiguration0PropertiesOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration0PropertiesArgs) ToFlowNodeConfiguration0PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration0PropertiesOutput)
}

func (i FlowNodeConfiguration0PropertiesArgs) ToFlowNodeConfiguration0PropertiesPtrOutput() FlowNodeConfiguration0PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration0PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration0PropertiesArgs) ToFlowNodeConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration0PropertiesOutput).ToFlowNodeConfiguration0PropertiesPtrOutputWithContext(ctx)
}

// FlowNodeConfiguration0PropertiesPtrInput is an input type that accepts FlowNodeConfiguration0PropertiesArgs, FlowNodeConfiguration0PropertiesPtr and FlowNodeConfiguration0PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration0PropertiesPtrInput` via:
//
//	        FlowNodeConfiguration0PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowNodeConfiguration0PropertiesPtrInput interface {
	pulumi.Input

	ToFlowNodeConfiguration0PropertiesPtrOutput() FlowNodeConfiguration0PropertiesPtrOutput
	ToFlowNodeConfiguration0PropertiesPtrOutputWithContext(context.Context) FlowNodeConfiguration0PropertiesPtrOutput
}

type flowNodeConfiguration0PropertiesPtrType FlowNodeConfiguration0PropertiesArgs

func FlowNodeConfiguration0PropertiesPtr(v *FlowNodeConfiguration0PropertiesArgs) FlowNodeConfiguration0PropertiesPtrInput {
	return (*flowNodeConfiguration0PropertiesPtrType)(v)
}

func (*flowNodeConfiguration0PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration0Properties)(nil)).Elem()
}

func (i *flowNodeConfiguration0PropertiesPtrType) ToFlowNodeConfiguration0PropertiesPtrOutput() FlowNodeConfiguration0PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration0PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowNodeConfiguration0PropertiesPtrType) ToFlowNodeConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration0PropertiesPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration0PropertiesOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration0Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration0PropertiesOutput) ToFlowNodeConfiguration0PropertiesOutput() FlowNodeConfiguration0PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration0PropertiesOutput) ToFlowNodeConfiguration0PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration0PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration0PropertiesOutput) ToFlowNodeConfiguration0PropertiesPtrOutput() FlowNodeConfiguration0PropertiesPtrOutput {
	return o.ToFlowNodeConfiguration0PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowNodeConfiguration0PropertiesOutput) ToFlowNodeConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration0PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowNodeConfiguration0Properties) *FlowNodeConfiguration0Properties {
		return &v
	}).(FlowNodeConfiguration0PropertiesPtrOutput)
}

func (o FlowNodeConfiguration0PropertiesOutput) Input() FlowInputFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowNodeConfiguration0Properties) FlowInputFlowNodeConfiguration { return v.Input }).(FlowInputFlowNodeConfigurationOutput)
}

type FlowNodeConfiguration0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration0Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration0PropertiesPtrOutput) ToFlowNodeConfiguration0PropertiesPtrOutput() FlowNodeConfiguration0PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration0PropertiesPtrOutput) ToFlowNodeConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration0PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration0PropertiesPtrOutput) Elem() FlowNodeConfiguration0PropertiesOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration0Properties) FlowNodeConfiguration0Properties {
		if v != nil {
			return *v
		}
		var ret FlowNodeConfiguration0Properties
		return ret
	}).(FlowNodeConfiguration0PropertiesOutput)
}

func (o FlowNodeConfiguration0PropertiesPtrOutput) Input() FlowInputFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration0Properties) *FlowInputFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Input
	}).(FlowInputFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration10Properties struct {
	Collector FlowCollectorFlowNodeConfiguration `pulumi:"collector"`
}

// FlowNodeConfiguration10PropertiesInput is an input type that accepts FlowNodeConfiguration10PropertiesArgs and FlowNodeConfiguration10PropertiesOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration10PropertiesInput` via:
//
//	FlowNodeConfiguration10PropertiesArgs{...}
type FlowNodeConfiguration10PropertiesInput interface {
	pulumi.Input

	ToFlowNodeConfiguration10PropertiesOutput() FlowNodeConfiguration10PropertiesOutput
	ToFlowNodeConfiguration10PropertiesOutputWithContext(context.Context) FlowNodeConfiguration10PropertiesOutput
}

// Node configuration in a flow
type FlowNodeConfiguration10PropertiesArgs struct {
	Collector FlowCollectorFlowNodeConfigurationInput `pulumi:"collector"`
}

func (FlowNodeConfiguration10PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration10Properties)(nil)).Elem()
}

func (i FlowNodeConfiguration10PropertiesArgs) ToFlowNodeConfiguration10PropertiesOutput() FlowNodeConfiguration10PropertiesOutput {
	return i.ToFlowNodeConfiguration10PropertiesOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration10PropertiesArgs) ToFlowNodeConfiguration10PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration10PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration10PropertiesOutput)
}

func (i FlowNodeConfiguration10PropertiesArgs) ToFlowNodeConfiguration10PropertiesPtrOutput() FlowNodeConfiguration10PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration10PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration10PropertiesArgs) ToFlowNodeConfiguration10PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration10PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration10PropertiesOutput).ToFlowNodeConfiguration10PropertiesPtrOutputWithContext(ctx)
}

// FlowNodeConfiguration10PropertiesPtrInput is an input type that accepts FlowNodeConfiguration10PropertiesArgs, FlowNodeConfiguration10PropertiesPtr and FlowNodeConfiguration10PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration10PropertiesPtrInput` via:
//
//	        FlowNodeConfiguration10PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowNodeConfiguration10PropertiesPtrInput interface {
	pulumi.Input

	ToFlowNodeConfiguration10PropertiesPtrOutput() FlowNodeConfiguration10PropertiesPtrOutput
	ToFlowNodeConfiguration10PropertiesPtrOutputWithContext(context.Context) FlowNodeConfiguration10PropertiesPtrOutput
}

type flowNodeConfiguration10PropertiesPtrType FlowNodeConfiguration10PropertiesArgs

func FlowNodeConfiguration10PropertiesPtr(v *FlowNodeConfiguration10PropertiesArgs) FlowNodeConfiguration10PropertiesPtrInput {
	return (*flowNodeConfiguration10PropertiesPtrType)(v)
}

func (*flowNodeConfiguration10PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration10Properties)(nil)).Elem()
}

func (i *flowNodeConfiguration10PropertiesPtrType) ToFlowNodeConfiguration10PropertiesPtrOutput() FlowNodeConfiguration10PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration10PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowNodeConfiguration10PropertiesPtrType) ToFlowNodeConfiguration10PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration10PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration10PropertiesPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration10PropertiesOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration10PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration10Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration10PropertiesOutput) ToFlowNodeConfiguration10PropertiesOutput() FlowNodeConfiguration10PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration10PropertiesOutput) ToFlowNodeConfiguration10PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration10PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration10PropertiesOutput) ToFlowNodeConfiguration10PropertiesPtrOutput() FlowNodeConfiguration10PropertiesPtrOutput {
	return o.ToFlowNodeConfiguration10PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowNodeConfiguration10PropertiesOutput) ToFlowNodeConfiguration10PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration10PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowNodeConfiguration10Properties) *FlowNodeConfiguration10Properties {
		return &v
	}).(FlowNodeConfiguration10PropertiesPtrOutput)
}

func (o FlowNodeConfiguration10PropertiesOutput) Collector() FlowCollectorFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowNodeConfiguration10Properties) FlowCollectorFlowNodeConfiguration { return v.Collector }).(FlowCollectorFlowNodeConfigurationOutput)
}

type FlowNodeConfiguration10PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration10PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration10Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration10PropertiesPtrOutput) ToFlowNodeConfiguration10PropertiesPtrOutput() FlowNodeConfiguration10PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration10PropertiesPtrOutput) ToFlowNodeConfiguration10PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration10PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration10PropertiesPtrOutput) Elem() FlowNodeConfiguration10PropertiesOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration10Properties) FlowNodeConfiguration10Properties {
		if v != nil {
			return *v
		}
		var ret FlowNodeConfiguration10Properties
		return ret
	}).(FlowNodeConfiguration10PropertiesOutput)
}

func (o FlowNodeConfiguration10PropertiesPtrOutput) Collector() FlowCollectorFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration10Properties) *FlowCollectorFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Collector
	}).(FlowCollectorFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration11Properties struct {
	Retrieval FlowRetrievalFlowNodeConfiguration `pulumi:"retrieval"`
}

// FlowNodeConfiguration11PropertiesInput is an input type that accepts FlowNodeConfiguration11PropertiesArgs and FlowNodeConfiguration11PropertiesOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration11PropertiesInput` via:
//
//	FlowNodeConfiguration11PropertiesArgs{...}
type FlowNodeConfiguration11PropertiesInput interface {
	pulumi.Input

	ToFlowNodeConfiguration11PropertiesOutput() FlowNodeConfiguration11PropertiesOutput
	ToFlowNodeConfiguration11PropertiesOutputWithContext(context.Context) FlowNodeConfiguration11PropertiesOutput
}

// Node configuration in a flow
type FlowNodeConfiguration11PropertiesArgs struct {
	Retrieval FlowRetrievalFlowNodeConfigurationInput `pulumi:"retrieval"`
}

func (FlowNodeConfiguration11PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration11Properties)(nil)).Elem()
}

func (i FlowNodeConfiguration11PropertiesArgs) ToFlowNodeConfiguration11PropertiesOutput() FlowNodeConfiguration11PropertiesOutput {
	return i.ToFlowNodeConfiguration11PropertiesOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration11PropertiesArgs) ToFlowNodeConfiguration11PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration11PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration11PropertiesOutput)
}

func (i FlowNodeConfiguration11PropertiesArgs) ToFlowNodeConfiguration11PropertiesPtrOutput() FlowNodeConfiguration11PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration11PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration11PropertiesArgs) ToFlowNodeConfiguration11PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration11PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration11PropertiesOutput).ToFlowNodeConfiguration11PropertiesPtrOutputWithContext(ctx)
}

// FlowNodeConfiguration11PropertiesPtrInput is an input type that accepts FlowNodeConfiguration11PropertiesArgs, FlowNodeConfiguration11PropertiesPtr and FlowNodeConfiguration11PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration11PropertiesPtrInput` via:
//
//	        FlowNodeConfiguration11PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowNodeConfiguration11PropertiesPtrInput interface {
	pulumi.Input

	ToFlowNodeConfiguration11PropertiesPtrOutput() FlowNodeConfiguration11PropertiesPtrOutput
	ToFlowNodeConfiguration11PropertiesPtrOutputWithContext(context.Context) FlowNodeConfiguration11PropertiesPtrOutput
}

type flowNodeConfiguration11PropertiesPtrType FlowNodeConfiguration11PropertiesArgs

func FlowNodeConfiguration11PropertiesPtr(v *FlowNodeConfiguration11PropertiesArgs) FlowNodeConfiguration11PropertiesPtrInput {
	return (*flowNodeConfiguration11PropertiesPtrType)(v)
}

func (*flowNodeConfiguration11PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration11Properties)(nil)).Elem()
}

func (i *flowNodeConfiguration11PropertiesPtrType) ToFlowNodeConfiguration11PropertiesPtrOutput() FlowNodeConfiguration11PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration11PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowNodeConfiguration11PropertiesPtrType) ToFlowNodeConfiguration11PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration11PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration11PropertiesPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration11PropertiesOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration11PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration11Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration11PropertiesOutput) ToFlowNodeConfiguration11PropertiesOutput() FlowNodeConfiguration11PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration11PropertiesOutput) ToFlowNodeConfiguration11PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration11PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration11PropertiesOutput) ToFlowNodeConfiguration11PropertiesPtrOutput() FlowNodeConfiguration11PropertiesPtrOutput {
	return o.ToFlowNodeConfiguration11PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowNodeConfiguration11PropertiesOutput) ToFlowNodeConfiguration11PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration11PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowNodeConfiguration11Properties) *FlowNodeConfiguration11Properties {
		return &v
	}).(FlowNodeConfiguration11PropertiesPtrOutput)
}

func (o FlowNodeConfiguration11PropertiesOutput) Retrieval() FlowRetrievalFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowNodeConfiguration11Properties) FlowRetrievalFlowNodeConfiguration { return v.Retrieval }).(FlowRetrievalFlowNodeConfigurationOutput)
}

type FlowNodeConfiguration11PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration11PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration11Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration11PropertiesPtrOutput) ToFlowNodeConfiguration11PropertiesPtrOutput() FlowNodeConfiguration11PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration11PropertiesPtrOutput) ToFlowNodeConfiguration11PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration11PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration11PropertiesPtrOutput) Elem() FlowNodeConfiguration11PropertiesOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration11Properties) FlowNodeConfiguration11Properties {
		if v != nil {
			return *v
		}
		var ret FlowNodeConfiguration11Properties
		return ret
	}).(FlowNodeConfiguration11PropertiesOutput)
}

func (o FlowNodeConfiguration11PropertiesPtrOutput) Retrieval() FlowRetrievalFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration11Properties) *FlowRetrievalFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Retrieval
	}).(FlowRetrievalFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration1Properties struct {
	Output FlowOutputFlowNodeConfiguration `pulumi:"output"`
}

// FlowNodeConfiguration1PropertiesInput is an input type that accepts FlowNodeConfiguration1PropertiesArgs and FlowNodeConfiguration1PropertiesOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration1PropertiesInput` via:
//
//	FlowNodeConfiguration1PropertiesArgs{...}
type FlowNodeConfiguration1PropertiesInput interface {
	pulumi.Input

	ToFlowNodeConfiguration1PropertiesOutput() FlowNodeConfiguration1PropertiesOutput
	ToFlowNodeConfiguration1PropertiesOutputWithContext(context.Context) FlowNodeConfiguration1PropertiesOutput
}

// Node configuration in a flow
type FlowNodeConfiguration1PropertiesArgs struct {
	Output FlowOutputFlowNodeConfigurationInput `pulumi:"output"`
}

func (FlowNodeConfiguration1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration1Properties)(nil)).Elem()
}

func (i FlowNodeConfiguration1PropertiesArgs) ToFlowNodeConfiguration1PropertiesOutput() FlowNodeConfiguration1PropertiesOutput {
	return i.ToFlowNodeConfiguration1PropertiesOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration1PropertiesArgs) ToFlowNodeConfiguration1PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration1PropertiesOutput)
}

func (i FlowNodeConfiguration1PropertiesArgs) ToFlowNodeConfiguration1PropertiesPtrOutput() FlowNodeConfiguration1PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration1PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration1PropertiesArgs) ToFlowNodeConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration1PropertiesOutput).ToFlowNodeConfiguration1PropertiesPtrOutputWithContext(ctx)
}

// FlowNodeConfiguration1PropertiesPtrInput is an input type that accepts FlowNodeConfiguration1PropertiesArgs, FlowNodeConfiguration1PropertiesPtr and FlowNodeConfiguration1PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration1PropertiesPtrInput` via:
//
//	        FlowNodeConfiguration1PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowNodeConfiguration1PropertiesPtrInput interface {
	pulumi.Input

	ToFlowNodeConfiguration1PropertiesPtrOutput() FlowNodeConfiguration1PropertiesPtrOutput
	ToFlowNodeConfiguration1PropertiesPtrOutputWithContext(context.Context) FlowNodeConfiguration1PropertiesPtrOutput
}

type flowNodeConfiguration1PropertiesPtrType FlowNodeConfiguration1PropertiesArgs

func FlowNodeConfiguration1PropertiesPtr(v *FlowNodeConfiguration1PropertiesArgs) FlowNodeConfiguration1PropertiesPtrInput {
	return (*flowNodeConfiguration1PropertiesPtrType)(v)
}

func (*flowNodeConfiguration1PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration1Properties)(nil)).Elem()
}

func (i *flowNodeConfiguration1PropertiesPtrType) ToFlowNodeConfiguration1PropertiesPtrOutput() FlowNodeConfiguration1PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration1PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowNodeConfiguration1PropertiesPtrType) ToFlowNodeConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration1PropertiesPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration1PropertiesOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration1Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration1PropertiesOutput) ToFlowNodeConfiguration1PropertiesOutput() FlowNodeConfiguration1PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration1PropertiesOutput) ToFlowNodeConfiguration1PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration1PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration1PropertiesOutput) ToFlowNodeConfiguration1PropertiesPtrOutput() FlowNodeConfiguration1PropertiesPtrOutput {
	return o.ToFlowNodeConfiguration1PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowNodeConfiguration1PropertiesOutput) ToFlowNodeConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration1PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowNodeConfiguration1Properties) *FlowNodeConfiguration1Properties {
		return &v
	}).(FlowNodeConfiguration1PropertiesPtrOutput)
}

func (o FlowNodeConfiguration1PropertiesOutput) Output() FlowOutputFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowNodeConfiguration1Properties) FlowOutputFlowNodeConfiguration { return v.Output }).(FlowOutputFlowNodeConfigurationOutput)
}

type FlowNodeConfiguration1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration1Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration1PropertiesPtrOutput) ToFlowNodeConfiguration1PropertiesPtrOutput() FlowNodeConfiguration1PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration1PropertiesPtrOutput) ToFlowNodeConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration1PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration1PropertiesPtrOutput) Elem() FlowNodeConfiguration1PropertiesOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration1Properties) FlowNodeConfiguration1Properties {
		if v != nil {
			return *v
		}
		var ret FlowNodeConfiguration1Properties
		return ret
	}).(FlowNodeConfiguration1PropertiesOutput)
}

func (o FlowNodeConfiguration1PropertiesPtrOutput) Output() FlowOutputFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration1Properties) *FlowOutputFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Output
	}).(FlowOutputFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration2Properties struct {
	KnowledgeBase FlowKnowledgeBaseFlowNodeConfiguration `pulumi:"knowledgeBase"`
}

// FlowNodeConfiguration2PropertiesInput is an input type that accepts FlowNodeConfiguration2PropertiesArgs and FlowNodeConfiguration2PropertiesOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration2PropertiesInput` via:
//
//	FlowNodeConfiguration2PropertiesArgs{...}
type FlowNodeConfiguration2PropertiesInput interface {
	pulumi.Input

	ToFlowNodeConfiguration2PropertiesOutput() FlowNodeConfiguration2PropertiesOutput
	ToFlowNodeConfiguration2PropertiesOutputWithContext(context.Context) FlowNodeConfiguration2PropertiesOutput
}

// Node configuration in a flow
type FlowNodeConfiguration2PropertiesArgs struct {
	KnowledgeBase FlowKnowledgeBaseFlowNodeConfigurationInput `pulumi:"knowledgeBase"`
}

func (FlowNodeConfiguration2PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration2Properties)(nil)).Elem()
}

func (i FlowNodeConfiguration2PropertiesArgs) ToFlowNodeConfiguration2PropertiesOutput() FlowNodeConfiguration2PropertiesOutput {
	return i.ToFlowNodeConfiguration2PropertiesOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration2PropertiesArgs) ToFlowNodeConfiguration2PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration2PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration2PropertiesOutput)
}

func (i FlowNodeConfiguration2PropertiesArgs) ToFlowNodeConfiguration2PropertiesPtrOutput() FlowNodeConfiguration2PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration2PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration2PropertiesArgs) ToFlowNodeConfiguration2PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration2PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration2PropertiesOutput).ToFlowNodeConfiguration2PropertiesPtrOutputWithContext(ctx)
}

// FlowNodeConfiguration2PropertiesPtrInput is an input type that accepts FlowNodeConfiguration2PropertiesArgs, FlowNodeConfiguration2PropertiesPtr and FlowNodeConfiguration2PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration2PropertiesPtrInput` via:
//
//	        FlowNodeConfiguration2PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowNodeConfiguration2PropertiesPtrInput interface {
	pulumi.Input

	ToFlowNodeConfiguration2PropertiesPtrOutput() FlowNodeConfiguration2PropertiesPtrOutput
	ToFlowNodeConfiguration2PropertiesPtrOutputWithContext(context.Context) FlowNodeConfiguration2PropertiesPtrOutput
}

type flowNodeConfiguration2PropertiesPtrType FlowNodeConfiguration2PropertiesArgs

func FlowNodeConfiguration2PropertiesPtr(v *FlowNodeConfiguration2PropertiesArgs) FlowNodeConfiguration2PropertiesPtrInput {
	return (*flowNodeConfiguration2PropertiesPtrType)(v)
}

func (*flowNodeConfiguration2PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration2Properties)(nil)).Elem()
}

func (i *flowNodeConfiguration2PropertiesPtrType) ToFlowNodeConfiguration2PropertiesPtrOutput() FlowNodeConfiguration2PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration2PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowNodeConfiguration2PropertiesPtrType) ToFlowNodeConfiguration2PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration2PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration2PropertiesPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration2PropertiesOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration2PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration2Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration2PropertiesOutput) ToFlowNodeConfiguration2PropertiesOutput() FlowNodeConfiguration2PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration2PropertiesOutput) ToFlowNodeConfiguration2PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration2PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration2PropertiesOutput) ToFlowNodeConfiguration2PropertiesPtrOutput() FlowNodeConfiguration2PropertiesPtrOutput {
	return o.ToFlowNodeConfiguration2PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowNodeConfiguration2PropertiesOutput) ToFlowNodeConfiguration2PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration2PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowNodeConfiguration2Properties) *FlowNodeConfiguration2Properties {
		return &v
	}).(FlowNodeConfiguration2PropertiesPtrOutput)
}

func (o FlowNodeConfiguration2PropertiesOutput) KnowledgeBase() FlowKnowledgeBaseFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowNodeConfiguration2Properties) FlowKnowledgeBaseFlowNodeConfiguration {
		return v.KnowledgeBase
	}).(FlowKnowledgeBaseFlowNodeConfigurationOutput)
}

type FlowNodeConfiguration2PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration2PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration2Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration2PropertiesPtrOutput) ToFlowNodeConfiguration2PropertiesPtrOutput() FlowNodeConfiguration2PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration2PropertiesPtrOutput) ToFlowNodeConfiguration2PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration2PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration2PropertiesPtrOutput) Elem() FlowNodeConfiguration2PropertiesOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration2Properties) FlowNodeConfiguration2Properties {
		if v != nil {
			return *v
		}
		var ret FlowNodeConfiguration2Properties
		return ret
	}).(FlowNodeConfiguration2PropertiesOutput)
}

func (o FlowNodeConfiguration2PropertiesPtrOutput) KnowledgeBase() FlowKnowledgeBaseFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration2Properties) *FlowKnowledgeBaseFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.KnowledgeBase
	}).(FlowKnowledgeBaseFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration3Properties struct {
	Condition FlowConditionFlowNodeConfiguration `pulumi:"condition"`
}

// FlowNodeConfiguration3PropertiesInput is an input type that accepts FlowNodeConfiguration3PropertiesArgs and FlowNodeConfiguration3PropertiesOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration3PropertiesInput` via:
//
//	FlowNodeConfiguration3PropertiesArgs{...}
type FlowNodeConfiguration3PropertiesInput interface {
	pulumi.Input

	ToFlowNodeConfiguration3PropertiesOutput() FlowNodeConfiguration3PropertiesOutput
	ToFlowNodeConfiguration3PropertiesOutputWithContext(context.Context) FlowNodeConfiguration3PropertiesOutput
}

// Node configuration in a flow
type FlowNodeConfiguration3PropertiesArgs struct {
	Condition FlowConditionFlowNodeConfigurationInput `pulumi:"condition"`
}

func (FlowNodeConfiguration3PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration3Properties)(nil)).Elem()
}

func (i FlowNodeConfiguration3PropertiesArgs) ToFlowNodeConfiguration3PropertiesOutput() FlowNodeConfiguration3PropertiesOutput {
	return i.ToFlowNodeConfiguration3PropertiesOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration3PropertiesArgs) ToFlowNodeConfiguration3PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration3PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration3PropertiesOutput)
}

func (i FlowNodeConfiguration3PropertiesArgs) ToFlowNodeConfiguration3PropertiesPtrOutput() FlowNodeConfiguration3PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration3PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration3PropertiesArgs) ToFlowNodeConfiguration3PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration3PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration3PropertiesOutput).ToFlowNodeConfiguration3PropertiesPtrOutputWithContext(ctx)
}

// FlowNodeConfiguration3PropertiesPtrInput is an input type that accepts FlowNodeConfiguration3PropertiesArgs, FlowNodeConfiguration3PropertiesPtr and FlowNodeConfiguration3PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration3PropertiesPtrInput` via:
//
//	        FlowNodeConfiguration3PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowNodeConfiguration3PropertiesPtrInput interface {
	pulumi.Input

	ToFlowNodeConfiguration3PropertiesPtrOutput() FlowNodeConfiguration3PropertiesPtrOutput
	ToFlowNodeConfiguration3PropertiesPtrOutputWithContext(context.Context) FlowNodeConfiguration3PropertiesPtrOutput
}

type flowNodeConfiguration3PropertiesPtrType FlowNodeConfiguration3PropertiesArgs

func FlowNodeConfiguration3PropertiesPtr(v *FlowNodeConfiguration3PropertiesArgs) FlowNodeConfiguration3PropertiesPtrInput {
	return (*flowNodeConfiguration3PropertiesPtrType)(v)
}

func (*flowNodeConfiguration3PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration3Properties)(nil)).Elem()
}

func (i *flowNodeConfiguration3PropertiesPtrType) ToFlowNodeConfiguration3PropertiesPtrOutput() FlowNodeConfiguration3PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration3PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowNodeConfiguration3PropertiesPtrType) ToFlowNodeConfiguration3PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration3PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration3PropertiesPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration3PropertiesOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration3PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration3Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration3PropertiesOutput) ToFlowNodeConfiguration3PropertiesOutput() FlowNodeConfiguration3PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration3PropertiesOutput) ToFlowNodeConfiguration3PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration3PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration3PropertiesOutput) ToFlowNodeConfiguration3PropertiesPtrOutput() FlowNodeConfiguration3PropertiesPtrOutput {
	return o.ToFlowNodeConfiguration3PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowNodeConfiguration3PropertiesOutput) ToFlowNodeConfiguration3PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration3PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowNodeConfiguration3Properties) *FlowNodeConfiguration3Properties {
		return &v
	}).(FlowNodeConfiguration3PropertiesPtrOutput)
}

func (o FlowNodeConfiguration3PropertiesOutput) Condition() FlowConditionFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowNodeConfiguration3Properties) FlowConditionFlowNodeConfiguration { return v.Condition }).(FlowConditionFlowNodeConfigurationOutput)
}

type FlowNodeConfiguration3PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration3PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration3Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration3PropertiesPtrOutput) ToFlowNodeConfiguration3PropertiesPtrOutput() FlowNodeConfiguration3PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration3PropertiesPtrOutput) ToFlowNodeConfiguration3PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration3PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration3PropertiesPtrOutput) Elem() FlowNodeConfiguration3PropertiesOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration3Properties) FlowNodeConfiguration3Properties {
		if v != nil {
			return *v
		}
		var ret FlowNodeConfiguration3Properties
		return ret
	}).(FlowNodeConfiguration3PropertiesOutput)
}

func (o FlowNodeConfiguration3PropertiesPtrOutput) Condition() FlowConditionFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration3Properties) *FlowConditionFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Condition
	}).(FlowConditionFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration4Properties struct {
	Lex FlowLexFlowNodeConfiguration `pulumi:"lex"`
}

// FlowNodeConfiguration4PropertiesInput is an input type that accepts FlowNodeConfiguration4PropertiesArgs and FlowNodeConfiguration4PropertiesOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration4PropertiesInput` via:
//
//	FlowNodeConfiguration4PropertiesArgs{...}
type FlowNodeConfiguration4PropertiesInput interface {
	pulumi.Input

	ToFlowNodeConfiguration4PropertiesOutput() FlowNodeConfiguration4PropertiesOutput
	ToFlowNodeConfiguration4PropertiesOutputWithContext(context.Context) FlowNodeConfiguration4PropertiesOutput
}

// Node configuration in a flow
type FlowNodeConfiguration4PropertiesArgs struct {
	Lex FlowLexFlowNodeConfigurationInput `pulumi:"lex"`
}

func (FlowNodeConfiguration4PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration4Properties)(nil)).Elem()
}

func (i FlowNodeConfiguration4PropertiesArgs) ToFlowNodeConfiguration4PropertiesOutput() FlowNodeConfiguration4PropertiesOutput {
	return i.ToFlowNodeConfiguration4PropertiesOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration4PropertiesArgs) ToFlowNodeConfiguration4PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration4PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration4PropertiesOutput)
}

func (i FlowNodeConfiguration4PropertiesArgs) ToFlowNodeConfiguration4PropertiesPtrOutput() FlowNodeConfiguration4PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration4PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration4PropertiesArgs) ToFlowNodeConfiguration4PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration4PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration4PropertiesOutput).ToFlowNodeConfiguration4PropertiesPtrOutputWithContext(ctx)
}

// FlowNodeConfiguration4PropertiesPtrInput is an input type that accepts FlowNodeConfiguration4PropertiesArgs, FlowNodeConfiguration4PropertiesPtr and FlowNodeConfiguration4PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration4PropertiesPtrInput` via:
//
//	        FlowNodeConfiguration4PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowNodeConfiguration4PropertiesPtrInput interface {
	pulumi.Input

	ToFlowNodeConfiguration4PropertiesPtrOutput() FlowNodeConfiguration4PropertiesPtrOutput
	ToFlowNodeConfiguration4PropertiesPtrOutputWithContext(context.Context) FlowNodeConfiguration4PropertiesPtrOutput
}

type flowNodeConfiguration4PropertiesPtrType FlowNodeConfiguration4PropertiesArgs

func FlowNodeConfiguration4PropertiesPtr(v *FlowNodeConfiguration4PropertiesArgs) FlowNodeConfiguration4PropertiesPtrInput {
	return (*flowNodeConfiguration4PropertiesPtrType)(v)
}

func (*flowNodeConfiguration4PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration4Properties)(nil)).Elem()
}

func (i *flowNodeConfiguration4PropertiesPtrType) ToFlowNodeConfiguration4PropertiesPtrOutput() FlowNodeConfiguration4PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration4PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowNodeConfiguration4PropertiesPtrType) ToFlowNodeConfiguration4PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration4PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration4PropertiesPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration4PropertiesOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration4PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration4Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration4PropertiesOutput) ToFlowNodeConfiguration4PropertiesOutput() FlowNodeConfiguration4PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration4PropertiesOutput) ToFlowNodeConfiguration4PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration4PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration4PropertiesOutput) ToFlowNodeConfiguration4PropertiesPtrOutput() FlowNodeConfiguration4PropertiesPtrOutput {
	return o.ToFlowNodeConfiguration4PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowNodeConfiguration4PropertiesOutput) ToFlowNodeConfiguration4PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration4PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowNodeConfiguration4Properties) *FlowNodeConfiguration4Properties {
		return &v
	}).(FlowNodeConfiguration4PropertiesPtrOutput)
}

func (o FlowNodeConfiguration4PropertiesOutput) Lex() FlowLexFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowNodeConfiguration4Properties) FlowLexFlowNodeConfiguration { return v.Lex }).(FlowLexFlowNodeConfigurationOutput)
}

type FlowNodeConfiguration4PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration4PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration4Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration4PropertiesPtrOutput) ToFlowNodeConfiguration4PropertiesPtrOutput() FlowNodeConfiguration4PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration4PropertiesPtrOutput) ToFlowNodeConfiguration4PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration4PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration4PropertiesPtrOutput) Elem() FlowNodeConfiguration4PropertiesOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration4Properties) FlowNodeConfiguration4Properties {
		if v != nil {
			return *v
		}
		var ret FlowNodeConfiguration4Properties
		return ret
	}).(FlowNodeConfiguration4PropertiesOutput)
}

func (o FlowNodeConfiguration4PropertiesPtrOutput) Lex() FlowLexFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration4Properties) *FlowLexFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Lex
	}).(FlowLexFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration5Properties struct {
	Prompt FlowPromptFlowNodeConfiguration `pulumi:"prompt"`
}

// FlowNodeConfiguration5PropertiesInput is an input type that accepts FlowNodeConfiguration5PropertiesArgs and FlowNodeConfiguration5PropertiesOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration5PropertiesInput` via:
//
//	FlowNodeConfiguration5PropertiesArgs{...}
type FlowNodeConfiguration5PropertiesInput interface {
	pulumi.Input

	ToFlowNodeConfiguration5PropertiesOutput() FlowNodeConfiguration5PropertiesOutput
	ToFlowNodeConfiguration5PropertiesOutputWithContext(context.Context) FlowNodeConfiguration5PropertiesOutput
}

// Node configuration in a flow
type FlowNodeConfiguration5PropertiesArgs struct {
	Prompt FlowPromptFlowNodeConfigurationInput `pulumi:"prompt"`
}

func (FlowNodeConfiguration5PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration5Properties)(nil)).Elem()
}

func (i FlowNodeConfiguration5PropertiesArgs) ToFlowNodeConfiguration5PropertiesOutput() FlowNodeConfiguration5PropertiesOutput {
	return i.ToFlowNodeConfiguration5PropertiesOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration5PropertiesArgs) ToFlowNodeConfiguration5PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration5PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration5PropertiesOutput)
}

func (i FlowNodeConfiguration5PropertiesArgs) ToFlowNodeConfiguration5PropertiesPtrOutput() FlowNodeConfiguration5PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration5PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration5PropertiesArgs) ToFlowNodeConfiguration5PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration5PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration5PropertiesOutput).ToFlowNodeConfiguration5PropertiesPtrOutputWithContext(ctx)
}

// FlowNodeConfiguration5PropertiesPtrInput is an input type that accepts FlowNodeConfiguration5PropertiesArgs, FlowNodeConfiguration5PropertiesPtr and FlowNodeConfiguration5PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration5PropertiesPtrInput` via:
//
//	        FlowNodeConfiguration5PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowNodeConfiguration5PropertiesPtrInput interface {
	pulumi.Input

	ToFlowNodeConfiguration5PropertiesPtrOutput() FlowNodeConfiguration5PropertiesPtrOutput
	ToFlowNodeConfiguration5PropertiesPtrOutputWithContext(context.Context) FlowNodeConfiguration5PropertiesPtrOutput
}

type flowNodeConfiguration5PropertiesPtrType FlowNodeConfiguration5PropertiesArgs

func FlowNodeConfiguration5PropertiesPtr(v *FlowNodeConfiguration5PropertiesArgs) FlowNodeConfiguration5PropertiesPtrInput {
	return (*flowNodeConfiguration5PropertiesPtrType)(v)
}

func (*flowNodeConfiguration5PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration5Properties)(nil)).Elem()
}

func (i *flowNodeConfiguration5PropertiesPtrType) ToFlowNodeConfiguration5PropertiesPtrOutput() FlowNodeConfiguration5PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration5PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowNodeConfiguration5PropertiesPtrType) ToFlowNodeConfiguration5PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration5PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration5PropertiesPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration5PropertiesOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration5PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration5Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration5PropertiesOutput) ToFlowNodeConfiguration5PropertiesOutput() FlowNodeConfiguration5PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration5PropertiesOutput) ToFlowNodeConfiguration5PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration5PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration5PropertiesOutput) ToFlowNodeConfiguration5PropertiesPtrOutput() FlowNodeConfiguration5PropertiesPtrOutput {
	return o.ToFlowNodeConfiguration5PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowNodeConfiguration5PropertiesOutput) ToFlowNodeConfiguration5PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration5PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowNodeConfiguration5Properties) *FlowNodeConfiguration5Properties {
		return &v
	}).(FlowNodeConfiguration5PropertiesPtrOutput)
}

func (o FlowNodeConfiguration5PropertiesOutput) Prompt() FlowPromptFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowNodeConfiguration5Properties) FlowPromptFlowNodeConfiguration { return v.Prompt }).(FlowPromptFlowNodeConfigurationOutput)
}

type FlowNodeConfiguration5PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration5PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration5Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration5PropertiesPtrOutput) ToFlowNodeConfiguration5PropertiesPtrOutput() FlowNodeConfiguration5PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration5PropertiesPtrOutput) ToFlowNodeConfiguration5PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration5PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration5PropertiesPtrOutput) Elem() FlowNodeConfiguration5PropertiesOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration5Properties) FlowNodeConfiguration5Properties {
		if v != nil {
			return *v
		}
		var ret FlowNodeConfiguration5Properties
		return ret
	}).(FlowNodeConfiguration5PropertiesOutput)
}

func (o FlowNodeConfiguration5PropertiesPtrOutput) Prompt() FlowPromptFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration5Properties) *FlowPromptFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Prompt
	}).(FlowPromptFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration6Properties struct {
	LambdaFunction FlowLambdaFunctionFlowNodeConfiguration `pulumi:"lambdaFunction"`
}

// FlowNodeConfiguration6PropertiesInput is an input type that accepts FlowNodeConfiguration6PropertiesArgs and FlowNodeConfiguration6PropertiesOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration6PropertiesInput` via:
//
//	FlowNodeConfiguration6PropertiesArgs{...}
type FlowNodeConfiguration6PropertiesInput interface {
	pulumi.Input

	ToFlowNodeConfiguration6PropertiesOutput() FlowNodeConfiguration6PropertiesOutput
	ToFlowNodeConfiguration6PropertiesOutputWithContext(context.Context) FlowNodeConfiguration6PropertiesOutput
}

// Node configuration in a flow
type FlowNodeConfiguration6PropertiesArgs struct {
	LambdaFunction FlowLambdaFunctionFlowNodeConfigurationInput `pulumi:"lambdaFunction"`
}

func (FlowNodeConfiguration6PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration6Properties)(nil)).Elem()
}

func (i FlowNodeConfiguration6PropertiesArgs) ToFlowNodeConfiguration6PropertiesOutput() FlowNodeConfiguration6PropertiesOutput {
	return i.ToFlowNodeConfiguration6PropertiesOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration6PropertiesArgs) ToFlowNodeConfiguration6PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration6PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration6PropertiesOutput)
}

func (i FlowNodeConfiguration6PropertiesArgs) ToFlowNodeConfiguration6PropertiesPtrOutput() FlowNodeConfiguration6PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration6PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration6PropertiesArgs) ToFlowNodeConfiguration6PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration6PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration6PropertiesOutput).ToFlowNodeConfiguration6PropertiesPtrOutputWithContext(ctx)
}

// FlowNodeConfiguration6PropertiesPtrInput is an input type that accepts FlowNodeConfiguration6PropertiesArgs, FlowNodeConfiguration6PropertiesPtr and FlowNodeConfiguration6PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration6PropertiesPtrInput` via:
//
//	        FlowNodeConfiguration6PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowNodeConfiguration6PropertiesPtrInput interface {
	pulumi.Input

	ToFlowNodeConfiguration6PropertiesPtrOutput() FlowNodeConfiguration6PropertiesPtrOutput
	ToFlowNodeConfiguration6PropertiesPtrOutputWithContext(context.Context) FlowNodeConfiguration6PropertiesPtrOutput
}

type flowNodeConfiguration6PropertiesPtrType FlowNodeConfiguration6PropertiesArgs

func FlowNodeConfiguration6PropertiesPtr(v *FlowNodeConfiguration6PropertiesArgs) FlowNodeConfiguration6PropertiesPtrInput {
	return (*flowNodeConfiguration6PropertiesPtrType)(v)
}

func (*flowNodeConfiguration6PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration6Properties)(nil)).Elem()
}

func (i *flowNodeConfiguration6PropertiesPtrType) ToFlowNodeConfiguration6PropertiesPtrOutput() FlowNodeConfiguration6PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration6PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowNodeConfiguration6PropertiesPtrType) ToFlowNodeConfiguration6PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration6PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration6PropertiesPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration6PropertiesOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration6PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration6Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration6PropertiesOutput) ToFlowNodeConfiguration6PropertiesOutput() FlowNodeConfiguration6PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration6PropertiesOutput) ToFlowNodeConfiguration6PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration6PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration6PropertiesOutput) ToFlowNodeConfiguration6PropertiesPtrOutput() FlowNodeConfiguration6PropertiesPtrOutput {
	return o.ToFlowNodeConfiguration6PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowNodeConfiguration6PropertiesOutput) ToFlowNodeConfiguration6PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration6PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowNodeConfiguration6Properties) *FlowNodeConfiguration6Properties {
		return &v
	}).(FlowNodeConfiguration6PropertiesPtrOutput)
}

func (o FlowNodeConfiguration6PropertiesOutput) LambdaFunction() FlowLambdaFunctionFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowNodeConfiguration6Properties) FlowLambdaFunctionFlowNodeConfiguration {
		return v.LambdaFunction
	}).(FlowLambdaFunctionFlowNodeConfigurationOutput)
}

type FlowNodeConfiguration6PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration6PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration6Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration6PropertiesPtrOutput) ToFlowNodeConfiguration6PropertiesPtrOutput() FlowNodeConfiguration6PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration6PropertiesPtrOutput) ToFlowNodeConfiguration6PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration6PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration6PropertiesPtrOutput) Elem() FlowNodeConfiguration6PropertiesOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration6Properties) FlowNodeConfiguration6Properties {
		if v != nil {
			return *v
		}
		var ret FlowNodeConfiguration6Properties
		return ret
	}).(FlowNodeConfiguration6PropertiesOutput)
}

func (o FlowNodeConfiguration6PropertiesPtrOutput) LambdaFunction() FlowLambdaFunctionFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration6Properties) *FlowLambdaFunctionFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.LambdaFunction
	}).(FlowLambdaFunctionFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration7Properties struct {
	Agent FlowAgentFlowNodeConfiguration `pulumi:"agent"`
}

// FlowNodeConfiguration7PropertiesInput is an input type that accepts FlowNodeConfiguration7PropertiesArgs and FlowNodeConfiguration7PropertiesOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration7PropertiesInput` via:
//
//	FlowNodeConfiguration7PropertiesArgs{...}
type FlowNodeConfiguration7PropertiesInput interface {
	pulumi.Input

	ToFlowNodeConfiguration7PropertiesOutput() FlowNodeConfiguration7PropertiesOutput
	ToFlowNodeConfiguration7PropertiesOutputWithContext(context.Context) FlowNodeConfiguration7PropertiesOutput
}

// Node configuration in a flow
type FlowNodeConfiguration7PropertiesArgs struct {
	Agent FlowAgentFlowNodeConfigurationInput `pulumi:"agent"`
}

func (FlowNodeConfiguration7PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration7Properties)(nil)).Elem()
}

func (i FlowNodeConfiguration7PropertiesArgs) ToFlowNodeConfiguration7PropertiesOutput() FlowNodeConfiguration7PropertiesOutput {
	return i.ToFlowNodeConfiguration7PropertiesOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration7PropertiesArgs) ToFlowNodeConfiguration7PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration7PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration7PropertiesOutput)
}

func (i FlowNodeConfiguration7PropertiesArgs) ToFlowNodeConfiguration7PropertiesPtrOutput() FlowNodeConfiguration7PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration7PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration7PropertiesArgs) ToFlowNodeConfiguration7PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration7PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration7PropertiesOutput).ToFlowNodeConfiguration7PropertiesPtrOutputWithContext(ctx)
}

// FlowNodeConfiguration7PropertiesPtrInput is an input type that accepts FlowNodeConfiguration7PropertiesArgs, FlowNodeConfiguration7PropertiesPtr and FlowNodeConfiguration7PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration7PropertiesPtrInput` via:
//
//	        FlowNodeConfiguration7PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowNodeConfiguration7PropertiesPtrInput interface {
	pulumi.Input

	ToFlowNodeConfiguration7PropertiesPtrOutput() FlowNodeConfiguration7PropertiesPtrOutput
	ToFlowNodeConfiguration7PropertiesPtrOutputWithContext(context.Context) FlowNodeConfiguration7PropertiesPtrOutput
}

type flowNodeConfiguration7PropertiesPtrType FlowNodeConfiguration7PropertiesArgs

func FlowNodeConfiguration7PropertiesPtr(v *FlowNodeConfiguration7PropertiesArgs) FlowNodeConfiguration7PropertiesPtrInput {
	return (*flowNodeConfiguration7PropertiesPtrType)(v)
}

func (*flowNodeConfiguration7PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration7Properties)(nil)).Elem()
}

func (i *flowNodeConfiguration7PropertiesPtrType) ToFlowNodeConfiguration7PropertiesPtrOutput() FlowNodeConfiguration7PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration7PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowNodeConfiguration7PropertiesPtrType) ToFlowNodeConfiguration7PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration7PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration7PropertiesPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration7PropertiesOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration7PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration7Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration7PropertiesOutput) ToFlowNodeConfiguration7PropertiesOutput() FlowNodeConfiguration7PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration7PropertiesOutput) ToFlowNodeConfiguration7PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration7PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration7PropertiesOutput) ToFlowNodeConfiguration7PropertiesPtrOutput() FlowNodeConfiguration7PropertiesPtrOutput {
	return o.ToFlowNodeConfiguration7PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowNodeConfiguration7PropertiesOutput) ToFlowNodeConfiguration7PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration7PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowNodeConfiguration7Properties) *FlowNodeConfiguration7Properties {
		return &v
	}).(FlowNodeConfiguration7PropertiesPtrOutput)
}

func (o FlowNodeConfiguration7PropertiesOutput) Agent() FlowAgentFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowNodeConfiguration7Properties) FlowAgentFlowNodeConfiguration { return v.Agent }).(FlowAgentFlowNodeConfigurationOutput)
}

type FlowNodeConfiguration7PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration7PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration7Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration7PropertiesPtrOutput) ToFlowNodeConfiguration7PropertiesPtrOutput() FlowNodeConfiguration7PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration7PropertiesPtrOutput) ToFlowNodeConfiguration7PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration7PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration7PropertiesPtrOutput) Elem() FlowNodeConfiguration7PropertiesOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration7Properties) FlowNodeConfiguration7Properties {
		if v != nil {
			return *v
		}
		var ret FlowNodeConfiguration7Properties
		return ret
	}).(FlowNodeConfiguration7PropertiesOutput)
}

func (o FlowNodeConfiguration7PropertiesPtrOutput) Agent() FlowAgentFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration7Properties) *FlowAgentFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Agent
	}).(FlowAgentFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration8Properties struct {
	Storage FlowStorageFlowNodeConfiguration `pulumi:"storage"`
}

// FlowNodeConfiguration8PropertiesInput is an input type that accepts FlowNodeConfiguration8PropertiesArgs and FlowNodeConfiguration8PropertiesOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration8PropertiesInput` via:
//
//	FlowNodeConfiguration8PropertiesArgs{...}
type FlowNodeConfiguration8PropertiesInput interface {
	pulumi.Input

	ToFlowNodeConfiguration8PropertiesOutput() FlowNodeConfiguration8PropertiesOutput
	ToFlowNodeConfiguration8PropertiesOutputWithContext(context.Context) FlowNodeConfiguration8PropertiesOutput
}

// Node configuration in a flow
type FlowNodeConfiguration8PropertiesArgs struct {
	Storage FlowStorageFlowNodeConfigurationInput `pulumi:"storage"`
}

func (FlowNodeConfiguration8PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration8Properties)(nil)).Elem()
}

func (i FlowNodeConfiguration8PropertiesArgs) ToFlowNodeConfiguration8PropertiesOutput() FlowNodeConfiguration8PropertiesOutput {
	return i.ToFlowNodeConfiguration8PropertiesOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration8PropertiesArgs) ToFlowNodeConfiguration8PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration8PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration8PropertiesOutput)
}

func (i FlowNodeConfiguration8PropertiesArgs) ToFlowNodeConfiguration8PropertiesPtrOutput() FlowNodeConfiguration8PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration8PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration8PropertiesArgs) ToFlowNodeConfiguration8PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration8PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration8PropertiesOutput).ToFlowNodeConfiguration8PropertiesPtrOutputWithContext(ctx)
}

// FlowNodeConfiguration8PropertiesPtrInput is an input type that accepts FlowNodeConfiguration8PropertiesArgs, FlowNodeConfiguration8PropertiesPtr and FlowNodeConfiguration8PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration8PropertiesPtrInput` via:
//
//	        FlowNodeConfiguration8PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowNodeConfiguration8PropertiesPtrInput interface {
	pulumi.Input

	ToFlowNodeConfiguration8PropertiesPtrOutput() FlowNodeConfiguration8PropertiesPtrOutput
	ToFlowNodeConfiguration8PropertiesPtrOutputWithContext(context.Context) FlowNodeConfiguration8PropertiesPtrOutput
}

type flowNodeConfiguration8PropertiesPtrType FlowNodeConfiguration8PropertiesArgs

func FlowNodeConfiguration8PropertiesPtr(v *FlowNodeConfiguration8PropertiesArgs) FlowNodeConfiguration8PropertiesPtrInput {
	return (*flowNodeConfiguration8PropertiesPtrType)(v)
}

func (*flowNodeConfiguration8PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration8Properties)(nil)).Elem()
}

func (i *flowNodeConfiguration8PropertiesPtrType) ToFlowNodeConfiguration8PropertiesPtrOutput() FlowNodeConfiguration8PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration8PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowNodeConfiguration8PropertiesPtrType) ToFlowNodeConfiguration8PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration8PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration8PropertiesPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration8PropertiesOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration8PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration8Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration8PropertiesOutput) ToFlowNodeConfiguration8PropertiesOutput() FlowNodeConfiguration8PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration8PropertiesOutput) ToFlowNodeConfiguration8PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration8PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration8PropertiesOutput) ToFlowNodeConfiguration8PropertiesPtrOutput() FlowNodeConfiguration8PropertiesPtrOutput {
	return o.ToFlowNodeConfiguration8PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowNodeConfiguration8PropertiesOutput) ToFlowNodeConfiguration8PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration8PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowNodeConfiguration8Properties) *FlowNodeConfiguration8Properties {
		return &v
	}).(FlowNodeConfiguration8PropertiesPtrOutput)
}

func (o FlowNodeConfiguration8PropertiesOutput) Storage() FlowStorageFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowNodeConfiguration8Properties) FlowStorageFlowNodeConfiguration { return v.Storage }).(FlowStorageFlowNodeConfigurationOutput)
}

type FlowNodeConfiguration8PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration8PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration8Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration8PropertiesPtrOutput) ToFlowNodeConfiguration8PropertiesPtrOutput() FlowNodeConfiguration8PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration8PropertiesPtrOutput) ToFlowNodeConfiguration8PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration8PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration8PropertiesPtrOutput) Elem() FlowNodeConfiguration8PropertiesOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration8Properties) FlowNodeConfiguration8Properties {
		if v != nil {
			return *v
		}
		var ret FlowNodeConfiguration8Properties
		return ret
	}).(FlowNodeConfiguration8PropertiesOutput)
}

func (o FlowNodeConfiguration8PropertiesPtrOutput) Storage() FlowStorageFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration8Properties) *FlowStorageFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Storage
	}).(FlowStorageFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration9Properties struct {
	Iterator FlowIteratorFlowNodeConfiguration `pulumi:"iterator"`
}

// FlowNodeConfiguration9PropertiesInput is an input type that accepts FlowNodeConfiguration9PropertiesArgs and FlowNodeConfiguration9PropertiesOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration9PropertiesInput` via:
//
//	FlowNodeConfiguration9PropertiesArgs{...}
type FlowNodeConfiguration9PropertiesInput interface {
	pulumi.Input

	ToFlowNodeConfiguration9PropertiesOutput() FlowNodeConfiguration9PropertiesOutput
	ToFlowNodeConfiguration9PropertiesOutputWithContext(context.Context) FlowNodeConfiguration9PropertiesOutput
}

// Node configuration in a flow
type FlowNodeConfiguration9PropertiesArgs struct {
	Iterator FlowIteratorFlowNodeConfigurationInput `pulumi:"iterator"`
}

func (FlowNodeConfiguration9PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration9Properties)(nil)).Elem()
}

func (i FlowNodeConfiguration9PropertiesArgs) ToFlowNodeConfiguration9PropertiesOutput() FlowNodeConfiguration9PropertiesOutput {
	return i.ToFlowNodeConfiguration9PropertiesOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration9PropertiesArgs) ToFlowNodeConfiguration9PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration9PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration9PropertiesOutput)
}

func (i FlowNodeConfiguration9PropertiesArgs) ToFlowNodeConfiguration9PropertiesPtrOutput() FlowNodeConfiguration9PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration9PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowNodeConfiguration9PropertiesArgs) ToFlowNodeConfiguration9PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration9PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration9PropertiesOutput).ToFlowNodeConfiguration9PropertiesPtrOutputWithContext(ctx)
}

// FlowNodeConfiguration9PropertiesPtrInput is an input type that accepts FlowNodeConfiguration9PropertiesArgs, FlowNodeConfiguration9PropertiesPtr and FlowNodeConfiguration9PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowNodeConfiguration9PropertiesPtrInput` via:
//
//	        FlowNodeConfiguration9PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowNodeConfiguration9PropertiesPtrInput interface {
	pulumi.Input

	ToFlowNodeConfiguration9PropertiesPtrOutput() FlowNodeConfiguration9PropertiesPtrOutput
	ToFlowNodeConfiguration9PropertiesPtrOutputWithContext(context.Context) FlowNodeConfiguration9PropertiesPtrOutput
}

type flowNodeConfiguration9PropertiesPtrType FlowNodeConfiguration9PropertiesArgs

func FlowNodeConfiguration9PropertiesPtr(v *FlowNodeConfiguration9PropertiesArgs) FlowNodeConfiguration9PropertiesPtrInput {
	return (*flowNodeConfiguration9PropertiesPtrType)(v)
}

func (*flowNodeConfiguration9PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration9Properties)(nil)).Elem()
}

func (i *flowNodeConfiguration9PropertiesPtrType) ToFlowNodeConfiguration9PropertiesPtrOutput() FlowNodeConfiguration9PropertiesPtrOutput {
	return i.ToFlowNodeConfiguration9PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowNodeConfiguration9PropertiesPtrType) ToFlowNodeConfiguration9PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration9PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeConfiguration9PropertiesPtrOutput)
}

// Node configuration in a flow
type FlowNodeConfiguration9PropertiesOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration9PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeConfiguration9Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration9PropertiesOutput) ToFlowNodeConfiguration9PropertiesOutput() FlowNodeConfiguration9PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration9PropertiesOutput) ToFlowNodeConfiguration9PropertiesOutputWithContext(ctx context.Context) FlowNodeConfiguration9PropertiesOutput {
	return o
}

func (o FlowNodeConfiguration9PropertiesOutput) ToFlowNodeConfiguration9PropertiesPtrOutput() FlowNodeConfiguration9PropertiesPtrOutput {
	return o.ToFlowNodeConfiguration9PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowNodeConfiguration9PropertiesOutput) ToFlowNodeConfiguration9PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration9PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowNodeConfiguration9Properties) *FlowNodeConfiguration9Properties {
		return &v
	}).(FlowNodeConfiguration9PropertiesPtrOutput)
}

func (o FlowNodeConfiguration9PropertiesOutput) Iterator() FlowIteratorFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowNodeConfiguration9Properties) FlowIteratorFlowNodeConfiguration { return v.Iterator }).(FlowIteratorFlowNodeConfigurationOutput)
}

type FlowNodeConfiguration9PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowNodeConfiguration9PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowNodeConfiguration9Properties)(nil)).Elem()
}

func (o FlowNodeConfiguration9PropertiesPtrOutput) ToFlowNodeConfiguration9PropertiesPtrOutput() FlowNodeConfiguration9PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration9PropertiesPtrOutput) ToFlowNodeConfiguration9PropertiesPtrOutputWithContext(ctx context.Context) FlowNodeConfiguration9PropertiesPtrOutput {
	return o
}

func (o FlowNodeConfiguration9PropertiesPtrOutput) Elem() FlowNodeConfiguration9PropertiesOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration9Properties) FlowNodeConfiguration9Properties {
		if v != nil {
			return *v
		}
		var ret FlowNodeConfiguration9Properties
		return ret
	}).(FlowNodeConfiguration9PropertiesOutput)
}

func (o FlowNodeConfiguration9PropertiesPtrOutput) Iterator() FlowIteratorFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowNodeConfiguration9Properties) *FlowIteratorFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Iterator
	}).(FlowIteratorFlowNodeConfigurationPtrOutput)
}

// Input to a node in a flow
type FlowNodeInputType struct {
	// Expression for a node input in a flow
	Expression string `pulumi:"expression"`
	// Name of a node input in a flow
	Name string `pulumi:"name"`
	// The data type of the input. If the input doesn't match this type at runtime, a validation error will be thrown.
	Type FlowNodeIoDataType `pulumi:"type"`
}

// FlowNodeInputTypeInput is an input type that accepts FlowNodeInputTypeArgs and FlowNodeInputTypeOutput values.
// You can construct a concrete instance of `FlowNodeInputTypeInput` via:
//
//	FlowNodeInputTypeArgs{...}
type FlowNodeInputTypeInput interface {
	pulumi.Input

	ToFlowNodeInputTypeOutput() FlowNodeInputTypeOutput
	ToFlowNodeInputTypeOutputWithContext(context.Context) FlowNodeInputTypeOutput
}

// Input to a node in a flow
type FlowNodeInputTypeArgs struct {
	// Expression for a node input in a flow
	Expression pulumi.StringInput `pulumi:"expression"`
	// Name of a node input in a flow
	Name pulumi.StringInput `pulumi:"name"`
	// The data type of the input. If the input doesn't match this type at runtime, a validation error will be thrown.
	Type FlowNodeIoDataTypeInput `pulumi:"type"`
}

func (FlowNodeInputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeInputType)(nil)).Elem()
}

func (i FlowNodeInputTypeArgs) ToFlowNodeInputTypeOutput() FlowNodeInputTypeOutput {
	return i.ToFlowNodeInputTypeOutputWithContext(context.Background())
}

func (i FlowNodeInputTypeArgs) ToFlowNodeInputTypeOutputWithContext(ctx context.Context) FlowNodeInputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeInputTypeOutput)
}

// FlowNodeInputTypeArrayInput is an input type that accepts FlowNodeInputTypeArray and FlowNodeInputTypeArrayOutput values.
// You can construct a concrete instance of `FlowNodeInputTypeArrayInput` via:
//
//	FlowNodeInputTypeArray{ FlowNodeInputTypeArgs{...} }
type FlowNodeInputTypeArrayInput interface {
	pulumi.Input

	ToFlowNodeInputTypeArrayOutput() FlowNodeInputTypeArrayOutput
	ToFlowNodeInputTypeArrayOutputWithContext(context.Context) FlowNodeInputTypeArrayOutput
}

type FlowNodeInputTypeArray []FlowNodeInputTypeInput

func (FlowNodeInputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowNodeInputType)(nil)).Elem()
}

func (i FlowNodeInputTypeArray) ToFlowNodeInputTypeArrayOutput() FlowNodeInputTypeArrayOutput {
	return i.ToFlowNodeInputTypeArrayOutputWithContext(context.Background())
}

func (i FlowNodeInputTypeArray) ToFlowNodeInputTypeArrayOutputWithContext(ctx context.Context) FlowNodeInputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeInputTypeArrayOutput)
}

// Input to a node in a flow
type FlowNodeInputTypeOutput struct{ *pulumi.OutputState }

func (FlowNodeInputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeInputType)(nil)).Elem()
}

func (o FlowNodeInputTypeOutput) ToFlowNodeInputTypeOutput() FlowNodeInputTypeOutput {
	return o
}

func (o FlowNodeInputTypeOutput) ToFlowNodeInputTypeOutputWithContext(ctx context.Context) FlowNodeInputTypeOutput {
	return o
}

// Expression for a node input in a flow
func (o FlowNodeInputTypeOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v FlowNodeInputType) string { return v.Expression }).(pulumi.StringOutput)
}

// Name of a node input in a flow
func (o FlowNodeInputTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowNodeInputType) string { return v.Name }).(pulumi.StringOutput)
}

// The data type of the input. If the input doesn't match this type at runtime, a validation error will be thrown.
func (o FlowNodeInputTypeOutput) Type() FlowNodeIoDataTypeOutput {
	return o.ApplyT(func(v FlowNodeInputType) FlowNodeIoDataType { return v.Type }).(FlowNodeIoDataTypeOutput)
}

type FlowNodeInputTypeArrayOutput struct{ *pulumi.OutputState }

func (FlowNodeInputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowNodeInputType)(nil)).Elem()
}

func (o FlowNodeInputTypeArrayOutput) ToFlowNodeInputTypeArrayOutput() FlowNodeInputTypeArrayOutput {
	return o
}

func (o FlowNodeInputTypeArrayOutput) ToFlowNodeInputTypeArrayOutputWithContext(ctx context.Context) FlowNodeInputTypeArrayOutput {
	return o
}

func (o FlowNodeInputTypeArrayOutput) Index(i pulumi.IntInput) FlowNodeInputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowNodeInputType {
		return vs[0].([]FlowNodeInputType)[vs[1].(int)]
	}).(FlowNodeInputTypeOutput)
}

// Output of a node in a flow
type FlowNodeOutputType struct {
	// Name of a node output in a flow
	Name string `pulumi:"name"`
	// The data type of the output. If the output doesn't match this type at runtime, a validation error will be thrown.
	Type FlowNodeIoDataType `pulumi:"type"`
}

// FlowNodeOutputTypeInput is an input type that accepts FlowNodeOutputTypeArgs and FlowNodeOutputTypeOutput values.
// You can construct a concrete instance of `FlowNodeOutputTypeInput` via:
//
//	FlowNodeOutputTypeArgs{...}
type FlowNodeOutputTypeInput interface {
	pulumi.Input

	ToFlowNodeOutputTypeOutput() FlowNodeOutputTypeOutput
	ToFlowNodeOutputTypeOutputWithContext(context.Context) FlowNodeOutputTypeOutput
}

// Output of a node in a flow
type FlowNodeOutputTypeArgs struct {
	// Name of a node output in a flow
	Name pulumi.StringInput `pulumi:"name"`
	// The data type of the output. If the output doesn't match this type at runtime, a validation error will be thrown.
	Type FlowNodeIoDataTypeInput `pulumi:"type"`
}

func (FlowNodeOutputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeOutputType)(nil)).Elem()
}

func (i FlowNodeOutputTypeArgs) ToFlowNodeOutputTypeOutput() FlowNodeOutputTypeOutput {
	return i.ToFlowNodeOutputTypeOutputWithContext(context.Background())
}

func (i FlowNodeOutputTypeArgs) ToFlowNodeOutputTypeOutputWithContext(ctx context.Context) FlowNodeOutputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeOutputTypeOutput)
}

// FlowNodeOutputTypeArrayInput is an input type that accepts FlowNodeOutputTypeArray and FlowNodeOutputTypeArrayOutput values.
// You can construct a concrete instance of `FlowNodeOutputTypeArrayInput` via:
//
//	FlowNodeOutputTypeArray{ FlowNodeOutputTypeArgs{...} }
type FlowNodeOutputTypeArrayInput interface {
	pulumi.Input

	ToFlowNodeOutputTypeArrayOutput() FlowNodeOutputTypeArrayOutput
	ToFlowNodeOutputTypeArrayOutputWithContext(context.Context) FlowNodeOutputTypeArrayOutput
}

type FlowNodeOutputTypeArray []FlowNodeOutputTypeInput

func (FlowNodeOutputTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowNodeOutputType)(nil)).Elem()
}

func (i FlowNodeOutputTypeArray) ToFlowNodeOutputTypeArrayOutput() FlowNodeOutputTypeArrayOutput {
	return i.ToFlowNodeOutputTypeArrayOutputWithContext(context.Background())
}

func (i FlowNodeOutputTypeArray) ToFlowNodeOutputTypeArrayOutputWithContext(ctx context.Context) FlowNodeOutputTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowNodeOutputTypeArrayOutput)
}

// Output of a node in a flow
type FlowNodeOutputTypeOutput struct{ *pulumi.OutputState }

func (FlowNodeOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowNodeOutputType)(nil)).Elem()
}

func (o FlowNodeOutputTypeOutput) ToFlowNodeOutputTypeOutput() FlowNodeOutputTypeOutput {
	return o
}

func (o FlowNodeOutputTypeOutput) ToFlowNodeOutputTypeOutputWithContext(ctx context.Context) FlowNodeOutputTypeOutput {
	return o
}

// Name of a node output in a flow
func (o FlowNodeOutputTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowNodeOutputType) string { return v.Name }).(pulumi.StringOutput)
}

// The data type of the output. If the output doesn't match this type at runtime, a validation error will be thrown.
func (o FlowNodeOutputTypeOutput) Type() FlowNodeIoDataTypeOutput {
	return o.ApplyT(func(v FlowNodeOutputType) FlowNodeIoDataType { return v.Type }).(FlowNodeIoDataTypeOutput)
}

type FlowNodeOutputTypeArrayOutput struct{ *pulumi.OutputState }

func (FlowNodeOutputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowNodeOutputType)(nil)).Elem()
}

func (o FlowNodeOutputTypeArrayOutput) ToFlowNodeOutputTypeArrayOutput() FlowNodeOutputTypeArrayOutput {
	return o
}

func (o FlowNodeOutputTypeArrayOutput) ToFlowNodeOutputTypeArrayOutputWithContext(ctx context.Context) FlowNodeOutputTypeArrayOutput {
	return o
}

func (o FlowNodeOutputTypeArrayOutput) Index(i pulumi.IntInput) FlowNodeOutputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowNodeOutputType {
		return vs[0].([]FlowNodeOutputType)[vs[1].(int)]
	}).(FlowNodeOutputTypeOutput)
}

// Output flow node configuration
type FlowOutputFlowNodeConfiguration struct {
}

// FlowOutputFlowNodeConfigurationInput is an input type that accepts FlowOutputFlowNodeConfigurationArgs and FlowOutputFlowNodeConfigurationOutput values.
// You can construct a concrete instance of `FlowOutputFlowNodeConfigurationInput` via:
//
//	FlowOutputFlowNodeConfigurationArgs{...}
type FlowOutputFlowNodeConfigurationInput interface {
	pulumi.Input

	ToFlowOutputFlowNodeConfigurationOutput() FlowOutputFlowNodeConfigurationOutput
	ToFlowOutputFlowNodeConfigurationOutputWithContext(context.Context) FlowOutputFlowNodeConfigurationOutput
}

// Output flow node configuration
type FlowOutputFlowNodeConfigurationArgs struct {
}

func (FlowOutputFlowNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutputFlowNodeConfiguration)(nil)).Elem()
}

func (i FlowOutputFlowNodeConfigurationArgs) ToFlowOutputFlowNodeConfigurationOutput() FlowOutputFlowNodeConfigurationOutput {
	return i.ToFlowOutputFlowNodeConfigurationOutputWithContext(context.Background())
}

func (i FlowOutputFlowNodeConfigurationArgs) ToFlowOutputFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowOutputFlowNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowOutputFlowNodeConfigurationOutput)
}

func (i FlowOutputFlowNodeConfigurationArgs) ToFlowOutputFlowNodeConfigurationPtrOutput() FlowOutputFlowNodeConfigurationPtrOutput {
	return i.ToFlowOutputFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowOutputFlowNodeConfigurationArgs) ToFlowOutputFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowOutputFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowOutputFlowNodeConfigurationOutput).ToFlowOutputFlowNodeConfigurationPtrOutputWithContext(ctx)
}

// FlowOutputFlowNodeConfigurationPtrInput is an input type that accepts FlowOutputFlowNodeConfigurationArgs, FlowOutputFlowNodeConfigurationPtr and FlowOutputFlowNodeConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowOutputFlowNodeConfigurationPtrInput` via:
//
//	        FlowOutputFlowNodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowOutputFlowNodeConfigurationPtrInput interface {
	pulumi.Input

	ToFlowOutputFlowNodeConfigurationPtrOutput() FlowOutputFlowNodeConfigurationPtrOutput
	ToFlowOutputFlowNodeConfigurationPtrOutputWithContext(context.Context) FlowOutputFlowNodeConfigurationPtrOutput
}

type flowOutputFlowNodeConfigurationPtrType FlowOutputFlowNodeConfigurationArgs

func FlowOutputFlowNodeConfigurationPtr(v *FlowOutputFlowNodeConfigurationArgs) FlowOutputFlowNodeConfigurationPtrInput {
	return (*flowOutputFlowNodeConfigurationPtrType)(v)
}

func (*flowOutputFlowNodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowOutputFlowNodeConfiguration)(nil)).Elem()
}

func (i *flowOutputFlowNodeConfigurationPtrType) ToFlowOutputFlowNodeConfigurationPtrOutput() FlowOutputFlowNodeConfigurationPtrOutput {
	return i.ToFlowOutputFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowOutputFlowNodeConfigurationPtrType) ToFlowOutputFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowOutputFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowOutputFlowNodeConfigurationPtrOutput)
}

// Output flow node configuration
type FlowOutputFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowOutputFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutputFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowOutputFlowNodeConfigurationOutput) ToFlowOutputFlowNodeConfigurationOutput() FlowOutputFlowNodeConfigurationOutput {
	return o
}

func (o FlowOutputFlowNodeConfigurationOutput) ToFlowOutputFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowOutputFlowNodeConfigurationOutput {
	return o
}

func (o FlowOutputFlowNodeConfigurationOutput) ToFlowOutputFlowNodeConfigurationPtrOutput() FlowOutputFlowNodeConfigurationPtrOutput {
	return o.ToFlowOutputFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowOutputFlowNodeConfigurationOutput) ToFlowOutputFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowOutputFlowNodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowOutputFlowNodeConfiguration) *FlowOutputFlowNodeConfiguration {
		return &v
	}).(FlowOutputFlowNodeConfigurationPtrOutput)
}

type FlowOutputFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowOutputFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowOutputFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowOutputFlowNodeConfigurationPtrOutput) ToFlowOutputFlowNodeConfigurationPtrOutput() FlowOutputFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowOutputFlowNodeConfigurationPtrOutput) ToFlowOutputFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowOutputFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowOutputFlowNodeConfigurationPtrOutput) Elem() FlowOutputFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowOutputFlowNodeConfiguration) FlowOutputFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowOutputFlowNodeConfiguration
		return ret
	}).(FlowOutputFlowNodeConfigurationOutput)
}

// Prompt flow node configuration
type FlowPromptFlowNodeConfiguration struct {
	SourceConfiguration interface{} `pulumi:"sourceConfiguration"`
}

// FlowPromptFlowNodeConfigurationInput is an input type that accepts FlowPromptFlowNodeConfigurationArgs and FlowPromptFlowNodeConfigurationOutput values.
// You can construct a concrete instance of `FlowPromptFlowNodeConfigurationInput` via:
//
//	FlowPromptFlowNodeConfigurationArgs{...}
type FlowPromptFlowNodeConfigurationInput interface {
	pulumi.Input

	ToFlowPromptFlowNodeConfigurationOutput() FlowPromptFlowNodeConfigurationOutput
	ToFlowPromptFlowNodeConfigurationOutputWithContext(context.Context) FlowPromptFlowNodeConfigurationOutput
}

// Prompt flow node configuration
type FlowPromptFlowNodeConfigurationArgs struct {
	SourceConfiguration pulumi.Input `pulumi:"sourceConfiguration"`
}

func (FlowPromptFlowNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptFlowNodeConfiguration)(nil)).Elem()
}

func (i FlowPromptFlowNodeConfigurationArgs) ToFlowPromptFlowNodeConfigurationOutput() FlowPromptFlowNodeConfigurationOutput {
	return i.ToFlowPromptFlowNodeConfigurationOutputWithContext(context.Background())
}

func (i FlowPromptFlowNodeConfigurationArgs) ToFlowPromptFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowPromptFlowNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeConfigurationOutput)
}

func (i FlowPromptFlowNodeConfigurationArgs) ToFlowPromptFlowNodeConfigurationPtrOutput() FlowPromptFlowNodeConfigurationPtrOutput {
	return i.ToFlowPromptFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowPromptFlowNodeConfigurationArgs) ToFlowPromptFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeConfigurationOutput).ToFlowPromptFlowNodeConfigurationPtrOutputWithContext(ctx)
}

// FlowPromptFlowNodeConfigurationPtrInput is an input type that accepts FlowPromptFlowNodeConfigurationArgs, FlowPromptFlowNodeConfigurationPtr and FlowPromptFlowNodeConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowPromptFlowNodeConfigurationPtrInput` via:
//
//	        FlowPromptFlowNodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowPromptFlowNodeConfigurationPtrInput interface {
	pulumi.Input

	ToFlowPromptFlowNodeConfigurationPtrOutput() FlowPromptFlowNodeConfigurationPtrOutput
	ToFlowPromptFlowNodeConfigurationPtrOutputWithContext(context.Context) FlowPromptFlowNodeConfigurationPtrOutput
}

type flowPromptFlowNodeConfigurationPtrType FlowPromptFlowNodeConfigurationArgs

func FlowPromptFlowNodeConfigurationPtr(v *FlowPromptFlowNodeConfigurationArgs) FlowPromptFlowNodeConfigurationPtrInput {
	return (*flowPromptFlowNodeConfigurationPtrType)(v)
}

func (*flowPromptFlowNodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptFlowNodeConfiguration)(nil)).Elem()
}

func (i *flowPromptFlowNodeConfigurationPtrType) ToFlowPromptFlowNodeConfigurationPtrOutput() FlowPromptFlowNodeConfigurationPtrOutput {
	return i.ToFlowPromptFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowPromptFlowNodeConfigurationPtrType) ToFlowPromptFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeConfigurationPtrOutput)
}

// Prompt flow node configuration
type FlowPromptFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowPromptFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowPromptFlowNodeConfigurationOutput) ToFlowPromptFlowNodeConfigurationOutput() FlowPromptFlowNodeConfigurationOutput {
	return o
}

func (o FlowPromptFlowNodeConfigurationOutput) ToFlowPromptFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowPromptFlowNodeConfigurationOutput {
	return o
}

func (o FlowPromptFlowNodeConfigurationOutput) ToFlowPromptFlowNodeConfigurationPtrOutput() FlowPromptFlowNodeConfigurationPtrOutput {
	return o.ToFlowPromptFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowPromptFlowNodeConfigurationOutput) ToFlowPromptFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowPromptFlowNodeConfiguration) *FlowPromptFlowNodeConfiguration {
		return &v
	}).(FlowPromptFlowNodeConfigurationPtrOutput)
}

func (o FlowPromptFlowNodeConfigurationOutput) SourceConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v FlowPromptFlowNodeConfiguration) interface{} { return v.SourceConfiguration }).(pulumi.AnyOutput)
}

type FlowPromptFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowPromptFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowPromptFlowNodeConfigurationPtrOutput) ToFlowPromptFlowNodeConfigurationPtrOutput() FlowPromptFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowPromptFlowNodeConfigurationPtrOutput) ToFlowPromptFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowPromptFlowNodeConfigurationPtrOutput) Elem() FlowPromptFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeConfiguration) FlowPromptFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowPromptFlowNodeConfiguration
		return ret
	}).(FlowPromptFlowNodeConfigurationOutput)
}

func (o FlowPromptFlowNodeConfigurationPtrOutput) SourceConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeConfiguration) interface{} {
		if v == nil {
			return nil
		}
		return v.SourceConfiguration
	}).(pulumi.AnyOutput)
}

// Inline prompt configuration for prompt node
type FlowPromptFlowNodeInlineConfiguration struct {
	InferenceConfiguration *FlowPromptInferenceConfigurationProperties `pulumi:"inferenceConfiguration"`
	// ARN or name of a Bedrock model.
	ModelId               string                                    `pulumi:"modelId"`
	TemplateConfiguration FlowPromptTemplateConfigurationProperties `pulumi:"templateConfiguration"`
	TemplateType          FlowPromptTemplateType                    `pulumi:"templateType"`
}

// FlowPromptFlowNodeInlineConfigurationInput is an input type that accepts FlowPromptFlowNodeInlineConfigurationArgs and FlowPromptFlowNodeInlineConfigurationOutput values.
// You can construct a concrete instance of `FlowPromptFlowNodeInlineConfigurationInput` via:
//
//	FlowPromptFlowNodeInlineConfigurationArgs{...}
type FlowPromptFlowNodeInlineConfigurationInput interface {
	pulumi.Input

	ToFlowPromptFlowNodeInlineConfigurationOutput() FlowPromptFlowNodeInlineConfigurationOutput
	ToFlowPromptFlowNodeInlineConfigurationOutputWithContext(context.Context) FlowPromptFlowNodeInlineConfigurationOutput
}

// Inline prompt configuration for prompt node
type FlowPromptFlowNodeInlineConfigurationArgs struct {
	InferenceConfiguration FlowPromptInferenceConfigurationPropertiesPtrInput `pulumi:"inferenceConfiguration"`
	// ARN or name of a Bedrock model.
	ModelId               pulumi.StringInput                             `pulumi:"modelId"`
	TemplateConfiguration FlowPromptTemplateConfigurationPropertiesInput `pulumi:"templateConfiguration"`
	TemplateType          FlowPromptTemplateTypeInput                    `pulumi:"templateType"`
}

func (FlowPromptFlowNodeInlineConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptFlowNodeInlineConfiguration)(nil)).Elem()
}

func (i FlowPromptFlowNodeInlineConfigurationArgs) ToFlowPromptFlowNodeInlineConfigurationOutput() FlowPromptFlowNodeInlineConfigurationOutput {
	return i.ToFlowPromptFlowNodeInlineConfigurationOutputWithContext(context.Background())
}

func (i FlowPromptFlowNodeInlineConfigurationArgs) ToFlowPromptFlowNodeInlineConfigurationOutputWithContext(ctx context.Context) FlowPromptFlowNodeInlineConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeInlineConfigurationOutput)
}

func (i FlowPromptFlowNodeInlineConfigurationArgs) ToFlowPromptFlowNodeInlineConfigurationPtrOutput() FlowPromptFlowNodeInlineConfigurationPtrOutput {
	return i.ToFlowPromptFlowNodeInlineConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowPromptFlowNodeInlineConfigurationArgs) ToFlowPromptFlowNodeInlineConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeInlineConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeInlineConfigurationOutput).ToFlowPromptFlowNodeInlineConfigurationPtrOutputWithContext(ctx)
}

// FlowPromptFlowNodeInlineConfigurationPtrInput is an input type that accepts FlowPromptFlowNodeInlineConfigurationArgs, FlowPromptFlowNodeInlineConfigurationPtr and FlowPromptFlowNodeInlineConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowPromptFlowNodeInlineConfigurationPtrInput` via:
//
//	        FlowPromptFlowNodeInlineConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowPromptFlowNodeInlineConfigurationPtrInput interface {
	pulumi.Input

	ToFlowPromptFlowNodeInlineConfigurationPtrOutput() FlowPromptFlowNodeInlineConfigurationPtrOutput
	ToFlowPromptFlowNodeInlineConfigurationPtrOutputWithContext(context.Context) FlowPromptFlowNodeInlineConfigurationPtrOutput
}

type flowPromptFlowNodeInlineConfigurationPtrType FlowPromptFlowNodeInlineConfigurationArgs

func FlowPromptFlowNodeInlineConfigurationPtr(v *FlowPromptFlowNodeInlineConfigurationArgs) FlowPromptFlowNodeInlineConfigurationPtrInput {
	return (*flowPromptFlowNodeInlineConfigurationPtrType)(v)
}

func (*flowPromptFlowNodeInlineConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptFlowNodeInlineConfiguration)(nil)).Elem()
}

func (i *flowPromptFlowNodeInlineConfigurationPtrType) ToFlowPromptFlowNodeInlineConfigurationPtrOutput() FlowPromptFlowNodeInlineConfigurationPtrOutput {
	return i.ToFlowPromptFlowNodeInlineConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowPromptFlowNodeInlineConfigurationPtrType) ToFlowPromptFlowNodeInlineConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeInlineConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeInlineConfigurationPtrOutput)
}

// Inline prompt configuration for prompt node
type FlowPromptFlowNodeInlineConfigurationOutput struct{ *pulumi.OutputState }

func (FlowPromptFlowNodeInlineConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptFlowNodeInlineConfiguration)(nil)).Elem()
}

func (o FlowPromptFlowNodeInlineConfigurationOutput) ToFlowPromptFlowNodeInlineConfigurationOutput() FlowPromptFlowNodeInlineConfigurationOutput {
	return o
}

func (o FlowPromptFlowNodeInlineConfigurationOutput) ToFlowPromptFlowNodeInlineConfigurationOutputWithContext(ctx context.Context) FlowPromptFlowNodeInlineConfigurationOutput {
	return o
}

func (o FlowPromptFlowNodeInlineConfigurationOutput) ToFlowPromptFlowNodeInlineConfigurationPtrOutput() FlowPromptFlowNodeInlineConfigurationPtrOutput {
	return o.ToFlowPromptFlowNodeInlineConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowPromptFlowNodeInlineConfigurationOutput) ToFlowPromptFlowNodeInlineConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeInlineConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowPromptFlowNodeInlineConfiguration) *FlowPromptFlowNodeInlineConfiguration {
		return &v
	}).(FlowPromptFlowNodeInlineConfigurationPtrOutput)
}

func (o FlowPromptFlowNodeInlineConfigurationOutput) InferenceConfiguration() FlowPromptInferenceConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v FlowPromptFlowNodeInlineConfiguration) *FlowPromptInferenceConfigurationProperties {
		return v.InferenceConfiguration
	}).(FlowPromptInferenceConfigurationPropertiesPtrOutput)
}

// ARN or name of a Bedrock model.
func (o FlowPromptFlowNodeInlineConfigurationOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowPromptFlowNodeInlineConfiguration) string { return v.ModelId }).(pulumi.StringOutput)
}

func (o FlowPromptFlowNodeInlineConfigurationOutput) TemplateConfiguration() FlowPromptTemplateConfigurationPropertiesOutput {
	return o.ApplyT(func(v FlowPromptFlowNodeInlineConfiguration) FlowPromptTemplateConfigurationProperties {
		return v.TemplateConfiguration
	}).(FlowPromptTemplateConfigurationPropertiesOutput)
}

func (o FlowPromptFlowNodeInlineConfigurationOutput) TemplateType() FlowPromptTemplateTypeOutput {
	return o.ApplyT(func(v FlowPromptFlowNodeInlineConfiguration) FlowPromptTemplateType { return v.TemplateType }).(FlowPromptTemplateTypeOutput)
}

type FlowPromptFlowNodeInlineConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowPromptFlowNodeInlineConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptFlowNodeInlineConfiguration)(nil)).Elem()
}

func (o FlowPromptFlowNodeInlineConfigurationPtrOutput) ToFlowPromptFlowNodeInlineConfigurationPtrOutput() FlowPromptFlowNodeInlineConfigurationPtrOutput {
	return o
}

func (o FlowPromptFlowNodeInlineConfigurationPtrOutput) ToFlowPromptFlowNodeInlineConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeInlineConfigurationPtrOutput {
	return o
}

func (o FlowPromptFlowNodeInlineConfigurationPtrOutput) Elem() FlowPromptFlowNodeInlineConfigurationOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeInlineConfiguration) FlowPromptFlowNodeInlineConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowPromptFlowNodeInlineConfiguration
		return ret
	}).(FlowPromptFlowNodeInlineConfigurationOutput)
}

func (o FlowPromptFlowNodeInlineConfigurationPtrOutput) InferenceConfiguration() FlowPromptInferenceConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeInlineConfiguration) *FlowPromptInferenceConfigurationProperties {
		if v == nil {
			return nil
		}
		return v.InferenceConfiguration
	}).(FlowPromptInferenceConfigurationPropertiesPtrOutput)
}

// ARN or name of a Bedrock model.
func (o FlowPromptFlowNodeInlineConfigurationPtrOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeInlineConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ModelId
	}).(pulumi.StringPtrOutput)
}

func (o FlowPromptFlowNodeInlineConfigurationPtrOutput) TemplateConfiguration() FlowPromptTemplateConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeInlineConfiguration) *FlowPromptTemplateConfigurationProperties {
		if v == nil {
			return nil
		}
		return &v.TemplateConfiguration
	}).(FlowPromptTemplateConfigurationPropertiesPtrOutput)
}

func (o FlowPromptFlowNodeInlineConfigurationPtrOutput) TemplateType() FlowPromptTemplateTypePtrOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeInlineConfiguration) *FlowPromptTemplateType {
		if v == nil {
			return nil
		}
		return &v.TemplateType
	}).(FlowPromptTemplateTypePtrOutput)
}

// Resource prompt configuration for prompt node
type FlowPromptFlowNodeResourceConfiguration struct {
	// ARN of a prompt resource possibly with a version
	PromptArn string `pulumi:"promptArn"`
}

// FlowPromptFlowNodeResourceConfigurationInput is an input type that accepts FlowPromptFlowNodeResourceConfigurationArgs and FlowPromptFlowNodeResourceConfigurationOutput values.
// You can construct a concrete instance of `FlowPromptFlowNodeResourceConfigurationInput` via:
//
//	FlowPromptFlowNodeResourceConfigurationArgs{...}
type FlowPromptFlowNodeResourceConfigurationInput interface {
	pulumi.Input

	ToFlowPromptFlowNodeResourceConfigurationOutput() FlowPromptFlowNodeResourceConfigurationOutput
	ToFlowPromptFlowNodeResourceConfigurationOutputWithContext(context.Context) FlowPromptFlowNodeResourceConfigurationOutput
}

// Resource prompt configuration for prompt node
type FlowPromptFlowNodeResourceConfigurationArgs struct {
	// ARN of a prompt resource possibly with a version
	PromptArn pulumi.StringInput `pulumi:"promptArn"`
}

func (FlowPromptFlowNodeResourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptFlowNodeResourceConfiguration)(nil)).Elem()
}

func (i FlowPromptFlowNodeResourceConfigurationArgs) ToFlowPromptFlowNodeResourceConfigurationOutput() FlowPromptFlowNodeResourceConfigurationOutput {
	return i.ToFlowPromptFlowNodeResourceConfigurationOutputWithContext(context.Background())
}

func (i FlowPromptFlowNodeResourceConfigurationArgs) ToFlowPromptFlowNodeResourceConfigurationOutputWithContext(ctx context.Context) FlowPromptFlowNodeResourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeResourceConfigurationOutput)
}

func (i FlowPromptFlowNodeResourceConfigurationArgs) ToFlowPromptFlowNodeResourceConfigurationPtrOutput() FlowPromptFlowNodeResourceConfigurationPtrOutput {
	return i.ToFlowPromptFlowNodeResourceConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowPromptFlowNodeResourceConfigurationArgs) ToFlowPromptFlowNodeResourceConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeResourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeResourceConfigurationOutput).ToFlowPromptFlowNodeResourceConfigurationPtrOutputWithContext(ctx)
}

// FlowPromptFlowNodeResourceConfigurationPtrInput is an input type that accepts FlowPromptFlowNodeResourceConfigurationArgs, FlowPromptFlowNodeResourceConfigurationPtr and FlowPromptFlowNodeResourceConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowPromptFlowNodeResourceConfigurationPtrInput` via:
//
//	        FlowPromptFlowNodeResourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowPromptFlowNodeResourceConfigurationPtrInput interface {
	pulumi.Input

	ToFlowPromptFlowNodeResourceConfigurationPtrOutput() FlowPromptFlowNodeResourceConfigurationPtrOutput
	ToFlowPromptFlowNodeResourceConfigurationPtrOutputWithContext(context.Context) FlowPromptFlowNodeResourceConfigurationPtrOutput
}

type flowPromptFlowNodeResourceConfigurationPtrType FlowPromptFlowNodeResourceConfigurationArgs

func FlowPromptFlowNodeResourceConfigurationPtr(v *FlowPromptFlowNodeResourceConfigurationArgs) FlowPromptFlowNodeResourceConfigurationPtrInput {
	return (*flowPromptFlowNodeResourceConfigurationPtrType)(v)
}

func (*flowPromptFlowNodeResourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptFlowNodeResourceConfiguration)(nil)).Elem()
}

func (i *flowPromptFlowNodeResourceConfigurationPtrType) ToFlowPromptFlowNodeResourceConfigurationPtrOutput() FlowPromptFlowNodeResourceConfigurationPtrOutput {
	return i.ToFlowPromptFlowNodeResourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowPromptFlowNodeResourceConfigurationPtrType) ToFlowPromptFlowNodeResourceConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeResourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeResourceConfigurationPtrOutput)
}

// Resource prompt configuration for prompt node
type FlowPromptFlowNodeResourceConfigurationOutput struct{ *pulumi.OutputState }

func (FlowPromptFlowNodeResourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptFlowNodeResourceConfiguration)(nil)).Elem()
}

func (o FlowPromptFlowNodeResourceConfigurationOutput) ToFlowPromptFlowNodeResourceConfigurationOutput() FlowPromptFlowNodeResourceConfigurationOutput {
	return o
}

func (o FlowPromptFlowNodeResourceConfigurationOutput) ToFlowPromptFlowNodeResourceConfigurationOutputWithContext(ctx context.Context) FlowPromptFlowNodeResourceConfigurationOutput {
	return o
}

func (o FlowPromptFlowNodeResourceConfigurationOutput) ToFlowPromptFlowNodeResourceConfigurationPtrOutput() FlowPromptFlowNodeResourceConfigurationPtrOutput {
	return o.ToFlowPromptFlowNodeResourceConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowPromptFlowNodeResourceConfigurationOutput) ToFlowPromptFlowNodeResourceConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeResourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowPromptFlowNodeResourceConfiguration) *FlowPromptFlowNodeResourceConfiguration {
		return &v
	}).(FlowPromptFlowNodeResourceConfigurationPtrOutput)
}

// ARN of a prompt resource possibly with a version
func (o FlowPromptFlowNodeResourceConfigurationOutput) PromptArn() pulumi.StringOutput {
	return o.ApplyT(func(v FlowPromptFlowNodeResourceConfiguration) string { return v.PromptArn }).(pulumi.StringOutput)
}

type FlowPromptFlowNodeResourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowPromptFlowNodeResourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptFlowNodeResourceConfiguration)(nil)).Elem()
}

func (o FlowPromptFlowNodeResourceConfigurationPtrOutput) ToFlowPromptFlowNodeResourceConfigurationPtrOutput() FlowPromptFlowNodeResourceConfigurationPtrOutput {
	return o
}

func (o FlowPromptFlowNodeResourceConfigurationPtrOutput) ToFlowPromptFlowNodeResourceConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeResourceConfigurationPtrOutput {
	return o
}

func (o FlowPromptFlowNodeResourceConfigurationPtrOutput) Elem() FlowPromptFlowNodeResourceConfigurationOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeResourceConfiguration) FlowPromptFlowNodeResourceConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowPromptFlowNodeResourceConfiguration
		return ret
	}).(FlowPromptFlowNodeResourceConfigurationOutput)
}

// ARN of a prompt resource possibly with a version
func (o FlowPromptFlowNodeResourceConfigurationPtrOutput) PromptArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeResourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.PromptArn
	}).(pulumi.StringPtrOutput)
}

// Prompt source configuration for prompt node
type FlowPromptFlowNodeSourceConfiguration0Properties struct {
	Resource FlowPromptFlowNodeResourceConfiguration `pulumi:"resource"`
}

// FlowPromptFlowNodeSourceConfiguration0PropertiesInput is an input type that accepts FlowPromptFlowNodeSourceConfiguration0PropertiesArgs and FlowPromptFlowNodeSourceConfiguration0PropertiesOutput values.
// You can construct a concrete instance of `FlowPromptFlowNodeSourceConfiguration0PropertiesInput` via:
//
//	FlowPromptFlowNodeSourceConfiguration0PropertiesArgs{...}
type FlowPromptFlowNodeSourceConfiguration0PropertiesInput interface {
	pulumi.Input

	ToFlowPromptFlowNodeSourceConfiguration0PropertiesOutput() FlowPromptFlowNodeSourceConfiguration0PropertiesOutput
	ToFlowPromptFlowNodeSourceConfiguration0PropertiesOutputWithContext(context.Context) FlowPromptFlowNodeSourceConfiguration0PropertiesOutput
}

// Prompt source configuration for prompt node
type FlowPromptFlowNodeSourceConfiguration0PropertiesArgs struct {
	Resource FlowPromptFlowNodeResourceConfigurationInput `pulumi:"resource"`
}

func (FlowPromptFlowNodeSourceConfiguration0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptFlowNodeSourceConfiguration0Properties)(nil)).Elem()
}

func (i FlowPromptFlowNodeSourceConfiguration0PropertiesArgs) ToFlowPromptFlowNodeSourceConfiguration0PropertiesOutput() FlowPromptFlowNodeSourceConfiguration0PropertiesOutput {
	return i.ToFlowPromptFlowNodeSourceConfiguration0PropertiesOutputWithContext(context.Background())
}

func (i FlowPromptFlowNodeSourceConfiguration0PropertiesArgs) ToFlowPromptFlowNodeSourceConfiguration0PropertiesOutputWithContext(ctx context.Context) FlowPromptFlowNodeSourceConfiguration0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeSourceConfiguration0PropertiesOutput)
}

func (i FlowPromptFlowNodeSourceConfiguration0PropertiesArgs) ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput() FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput {
	return i.ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowPromptFlowNodeSourceConfiguration0PropertiesArgs) ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeSourceConfiguration0PropertiesOutput).ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutputWithContext(ctx)
}

// FlowPromptFlowNodeSourceConfiguration0PropertiesPtrInput is an input type that accepts FlowPromptFlowNodeSourceConfiguration0PropertiesArgs, FlowPromptFlowNodeSourceConfiguration0PropertiesPtr and FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowPromptFlowNodeSourceConfiguration0PropertiesPtrInput` via:
//
//	        FlowPromptFlowNodeSourceConfiguration0PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowPromptFlowNodeSourceConfiguration0PropertiesPtrInput interface {
	pulumi.Input

	ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput() FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput
	ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutputWithContext(context.Context) FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput
}

type flowPromptFlowNodeSourceConfiguration0PropertiesPtrType FlowPromptFlowNodeSourceConfiguration0PropertiesArgs

func FlowPromptFlowNodeSourceConfiguration0PropertiesPtr(v *FlowPromptFlowNodeSourceConfiguration0PropertiesArgs) FlowPromptFlowNodeSourceConfiguration0PropertiesPtrInput {
	return (*flowPromptFlowNodeSourceConfiguration0PropertiesPtrType)(v)
}

func (*flowPromptFlowNodeSourceConfiguration0PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptFlowNodeSourceConfiguration0Properties)(nil)).Elem()
}

func (i *flowPromptFlowNodeSourceConfiguration0PropertiesPtrType) ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput() FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput {
	return i.ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowPromptFlowNodeSourceConfiguration0PropertiesPtrType) ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput)
}

// Prompt source configuration for prompt node
type FlowPromptFlowNodeSourceConfiguration0PropertiesOutput struct{ *pulumi.OutputState }

func (FlowPromptFlowNodeSourceConfiguration0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptFlowNodeSourceConfiguration0Properties)(nil)).Elem()
}

func (o FlowPromptFlowNodeSourceConfiguration0PropertiesOutput) ToFlowPromptFlowNodeSourceConfiguration0PropertiesOutput() FlowPromptFlowNodeSourceConfiguration0PropertiesOutput {
	return o
}

func (o FlowPromptFlowNodeSourceConfiguration0PropertiesOutput) ToFlowPromptFlowNodeSourceConfiguration0PropertiesOutputWithContext(ctx context.Context) FlowPromptFlowNodeSourceConfiguration0PropertiesOutput {
	return o
}

func (o FlowPromptFlowNodeSourceConfiguration0PropertiesOutput) ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput() FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput {
	return o.ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowPromptFlowNodeSourceConfiguration0PropertiesOutput) ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowPromptFlowNodeSourceConfiguration0Properties) *FlowPromptFlowNodeSourceConfiguration0Properties {
		return &v
	}).(FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput)
}

func (o FlowPromptFlowNodeSourceConfiguration0PropertiesOutput) Resource() FlowPromptFlowNodeResourceConfigurationOutput {
	return o.ApplyT(func(v FlowPromptFlowNodeSourceConfiguration0Properties) FlowPromptFlowNodeResourceConfiguration {
		return v.Resource
	}).(FlowPromptFlowNodeResourceConfigurationOutput)
}

type FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptFlowNodeSourceConfiguration0Properties)(nil)).Elem()
}

func (o FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput) ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput() FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput {
	return o
}

func (o FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput) ToFlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput {
	return o
}

func (o FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput) Elem() FlowPromptFlowNodeSourceConfiguration0PropertiesOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeSourceConfiguration0Properties) FlowPromptFlowNodeSourceConfiguration0Properties {
		if v != nil {
			return *v
		}
		var ret FlowPromptFlowNodeSourceConfiguration0Properties
		return ret
	}).(FlowPromptFlowNodeSourceConfiguration0PropertiesOutput)
}

func (o FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput) Resource() FlowPromptFlowNodeResourceConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeSourceConfiguration0Properties) *FlowPromptFlowNodeResourceConfiguration {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(FlowPromptFlowNodeResourceConfigurationPtrOutput)
}

// Prompt source configuration for prompt node
type FlowPromptFlowNodeSourceConfiguration1Properties struct {
	Inline FlowPromptFlowNodeInlineConfiguration `pulumi:"inline"`
}

// FlowPromptFlowNodeSourceConfiguration1PropertiesInput is an input type that accepts FlowPromptFlowNodeSourceConfiguration1PropertiesArgs and FlowPromptFlowNodeSourceConfiguration1PropertiesOutput values.
// You can construct a concrete instance of `FlowPromptFlowNodeSourceConfiguration1PropertiesInput` via:
//
//	FlowPromptFlowNodeSourceConfiguration1PropertiesArgs{...}
type FlowPromptFlowNodeSourceConfiguration1PropertiesInput interface {
	pulumi.Input

	ToFlowPromptFlowNodeSourceConfiguration1PropertiesOutput() FlowPromptFlowNodeSourceConfiguration1PropertiesOutput
	ToFlowPromptFlowNodeSourceConfiguration1PropertiesOutputWithContext(context.Context) FlowPromptFlowNodeSourceConfiguration1PropertiesOutput
}

// Prompt source configuration for prompt node
type FlowPromptFlowNodeSourceConfiguration1PropertiesArgs struct {
	Inline FlowPromptFlowNodeInlineConfigurationInput `pulumi:"inline"`
}

func (FlowPromptFlowNodeSourceConfiguration1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptFlowNodeSourceConfiguration1Properties)(nil)).Elem()
}

func (i FlowPromptFlowNodeSourceConfiguration1PropertiesArgs) ToFlowPromptFlowNodeSourceConfiguration1PropertiesOutput() FlowPromptFlowNodeSourceConfiguration1PropertiesOutput {
	return i.ToFlowPromptFlowNodeSourceConfiguration1PropertiesOutputWithContext(context.Background())
}

func (i FlowPromptFlowNodeSourceConfiguration1PropertiesArgs) ToFlowPromptFlowNodeSourceConfiguration1PropertiesOutputWithContext(ctx context.Context) FlowPromptFlowNodeSourceConfiguration1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeSourceConfiguration1PropertiesOutput)
}

func (i FlowPromptFlowNodeSourceConfiguration1PropertiesArgs) ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput() FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput {
	return i.ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutputWithContext(context.Background())
}

func (i FlowPromptFlowNodeSourceConfiguration1PropertiesArgs) ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeSourceConfiguration1PropertiesOutput).ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutputWithContext(ctx)
}

// FlowPromptFlowNodeSourceConfiguration1PropertiesPtrInput is an input type that accepts FlowPromptFlowNodeSourceConfiguration1PropertiesArgs, FlowPromptFlowNodeSourceConfiguration1PropertiesPtr and FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput values.
// You can construct a concrete instance of `FlowPromptFlowNodeSourceConfiguration1PropertiesPtrInput` via:
//
//	        FlowPromptFlowNodeSourceConfiguration1PropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowPromptFlowNodeSourceConfiguration1PropertiesPtrInput interface {
	pulumi.Input

	ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput() FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput
	ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutputWithContext(context.Context) FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput
}

type flowPromptFlowNodeSourceConfiguration1PropertiesPtrType FlowPromptFlowNodeSourceConfiguration1PropertiesArgs

func FlowPromptFlowNodeSourceConfiguration1PropertiesPtr(v *FlowPromptFlowNodeSourceConfiguration1PropertiesArgs) FlowPromptFlowNodeSourceConfiguration1PropertiesPtrInput {
	return (*flowPromptFlowNodeSourceConfiguration1PropertiesPtrType)(v)
}

func (*flowPromptFlowNodeSourceConfiguration1PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptFlowNodeSourceConfiguration1Properties)(nil)).Elem()
}

func (i *flowPromptFlowNodeSourceConfiguration1PropertiesPtrType) ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput() FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput {
	return i.ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutputWithContext(context.Background())
}

func (i *flowPromptFlowNodeSourceConfiguration1PropertiesPtrType) ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput)
}

// Prompt source configuration for prompt node
type FlowPromptFlowNodeSourceConfiguration1PropertiesOutput struct{ *pulumi.OutputState }

func (FlowPromptFlowNodeSourceConfiguration1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptFlowNodeSourceConfiguration1Properties)(nil)).Elem()
}

func (o FlowPromptFlowNodeSourceConfiguration1PropertiesOutput) ToFlowPromptFlowNodeSourceConfiguration1PropertiesOutput() FlowPromptFlowNodeSourceConfiguration1PropertiesOutput {
	return o
}

func (o FlowPromptFlowNodeSourceConfiguration1PropertiesOutput) ToFlowPromptFlowNodeSourceConfiguration1PropertiesOutputWithContext(ctx context.Context) FlowPromptFlowNodeSourceConfiguration1PropertiesOutput {
	return o
}

func (o FlowPromptFlowNodeSourceConfiguration1PropertiesOutput) ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput() FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput {
	return o.ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutputWithContext(context.Background())
}

func (o FlowPromptFlowNodeSourceConfiguration1PropertiesOutput) ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowPromptFlowNodeSourceConfiguration1Properties) *FlowPromptFlowNodeSourceConfiguration1Properties {
		return &v
	}).(FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput)
}

func (o FlowPromptFlowNodeSourceConfiguration1PropertiesOutput) Inline() FlowPromptFlowNodeInlineConfigurationOutput {
	return o.ApplyT(func(v FlowPromptFlowNodeSourceConfiguration1Properties) FlowPromptFlowNodeInlineConfiguration {
		return v.Inline
	}).(FlowPromptFlowNodeInlineConfigurationOutput)
}

type FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptFlowNodeSourceConfiguration1Properties)(nil)).Elem()
}

func (o FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput) ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput() FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput {
	return o
}

func (o FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput) ToFlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput {
	return o
}

func (o FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput) Elem() FlowPromptFlowNodeSourceConfiguration1PropertiesOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeSourceConfiguration1Properties) FlowPromptFlowNodeSourceConfiguration1Properties {
		if v != nil {
			return *v
		}
		var ret FlowPromptFlowNodeSourceConfiguration1Properties
		return ret
	}).(FlowPromptFlowNodeSourceConfiguration1PropertiesOutput)
}

func (o FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput) Inline() FlowPromptFlowNodeInlineConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowPromptFlowNodeSourceConfiguration1Properties) *FlowPromptFlowNodeInlineConfiguration {
		if v == nil {
			return nil
		}
		return &v.Inline
	}).(FlowPromptFlowNodeInlineConfigurationPtrOutput)
}

// Model inference configuration
type FlowPromptInferenceConfiguration0Properties struct {
	Text FlowPromptModelInferenceConfiguration `pulumi:"text"`
}

// Model inference configuration
type FlowPromptInferenceConfigurationProperties struct {
	Text FlowPromptModelInferenceConfiguration `pulumi:"text"`
}

// FlowPromptInferenceConfigurationPropertiesInput is an input type that accepts FlowPromptInferenceConfigurationPropertiesArgs and FlowPromptInferenceConfigurationPropertiesOutput values.
// You can construct a concrete instance of `FlowPromptInferenceConfigurationPropertiesInput` via:
//
//	FlowPromptInferenceConfigurationPropertiesArgs{...}
type FlowPromptInferenceConfigurationPropertiesInput interface {
	pulumi.Input

	ToFlowPromptInferenceConfigurationPropertiesOutput() FlowPromptInferenceConfigurationPropertiesOutput
	ToFlowPromptInferenceConfigurationPropertiesOutputWithContext(context.Context) FlowPromptInferenceConfigurationPropertiesOutput
}

// Model inference configuration
type FlowPromptInferenceConfigurationPropertiesArgs struct {
	Text FlowPromptModelInferenceConfigurationInput `pulumi:"text"`
}

func (FlowPromptInferenceConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptInferenceConfigurationProperties)(nil)).Elem()
}

func (i FlowPromptInferenceConfigurationPropertiesArgs) ToFlowPromptInferenceConfigurationPropertiesOutput() FlowPromptInferenceConfigurationPropertiesOutput {
	return i.ToFlowPromptInferenceConfigurationPropertiesOutputWithContext(context.Background())
}

func (i FlowPromptInferenceConfigurationPropertiesArgs) ToFlowPromptInferenceConfigurationPropertiesOutputWithContext(ctx context.Context) FlowPromptInferenceConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptInferenceConfigurationPropertiesOutput)
}

func (i FlowPromptInferenceConfigurationPropertiesArgs) ToFlowPromptInferenceConfigurationPropertiesPtrOutput() FlowPromptInferenceConfigurationPropertiesPtrOutput {
	return i.ToFlowPromptInferenceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowPromptInferenceConfigurationPropertiesArgs) ToFlowPromptInferenceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowPromptInferenceConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptInferenceConfigurationPropertiesOutput).ToFlowPromptInferenceConfigurationPropertiesPtrOutputWithContext(ctx)
}

// FlowPromptInferenceConfigurationPropertiesPtrInput is an input type that accepts FlowPromptInferenceConfigurationPropertiesArgs, FlowPromptInferenceConfigurationPropertiesPtr and FlowPromptInferenceConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowPromptInferenceConfigurationPropertiesPtrInput` via:
//
//	        FlowPromptInferenceConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowPromptInferenceConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToFlowPromptInferenceConfigurationPropertiesPtrOutput() FlowPromptInferenceConfigurationPropertiesPtrOutput
	ToFlowPromptInferenceConfigurationPropertiesPtrOutputWithContext(context.Context) FlowPromptInferenceConfigurationPropertiesPtrOutput
}

type flowPromptInferenceConfigurationPropertiesPtrType FlowPromptInferenceConfigurationPropertiesArgs

func FlowPromptInferenceConfigurationPropertiesPtr(v *FlowPromptInferenceConfigurationPropertiesArgs) FlowPromptInferenceConfigurationPropertiesPtrInput {
	return (*flowPromptInferenceConfigurationPropertiesPtrType)(v)
}

func (*flowPromptInferenceConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptInferenceConfigurationProperties)(nil)).Elem()
}

func (i *flowPromptInferenceConfigurationPropertiesPtrType) ToFlowPromptInferenceConfigurationPropertiesPtrOutput() FlowPromptInferenceConfigurationPropertiesPtrOutput {
	return i.ToFlowPromptInferenceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowPromptInferenceConfigurationPropertiesPtrType) ToFlowPromptInferenceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowPromptInferenceConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptInferenceConfigurationPropertiesPtrOutput)
}

// Model inference configuration
type FlowPromptInferenceConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowPromptInferenceConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptInferenceConfigurationProperties)(nil)).Elem()
}

func (o FlowPromptInferenceConfigurationPropertiesOutput) ToFlowPromptInferenceConfigurationPropertiesOutput() FlowPromptInferenceConfigurationPropertiesOutput {
	return o
}

func (o FlowPromptInferenceConfigurationPropertiesOutput) ToFlowPromptInferenceConfigurationPropertiesOutputWithContext(ctx context.Context) FlowPromptInferenceConfigurationPropertiesOutput {
	return o
}

func (o FlowPromptInferenceConfigurationPropertiesOutput) ToFlowPromptInferenceConfigurationPropertiesPtrOutput() FlowPromptInferenceConfigurationPropertiesPtrOutput {
	return o.ToFlowPromptInferenceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowPromptInferenceConfigurationPropertiesOutput) ToFlowPromptInferenceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowPromptInferenceConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowPromptInferenceConfigurationProperties) *FlowPromptInferenceConfigurationProperties {
		return &v
	}).(FlowPromptInferenceConfigurationPropertiesPtrOutput)
}

func (o FlowPromptInferenceConfigurationPropertiesOutput) Text() FlowPromptModelInferenceConfigurationOutput {
	return o.ApplyT(func(v FlowPromptInferenceConfigurationProperties) FlowPromptModelInferenceConfiguration {
		return v.Text
	}).(FlowPromptModelInferenceConfigurationOutput)
}

type FlowPromptInferenceConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowPromptInferenceConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptInferenceConfigurationProperties)(nil)).Elem()
}

func (o FlowPromptInferenceConfigurationPropertiesPtrOutput) ToFlowPromptInferenceConfigurationPropertiesPtrOutput() FlowPromptInferenceConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowPromptInferenceConfigurationPropertiesPtrOutput) ToFlowPromptInferenceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowPromptInferenceConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowPromptInferenceConfigurationPropertiesPtrOutput) Elem() FlowPromptInferenceConfigurationPropertiesOutput {
	return o.ApplyT(func(v *FlowPromptInferenceConfigurationProperties) FlowPromptInferenceConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret FlowPromptInferenceConfigurationProperties
		return ret
	}).(FlowPromptInferenceConfigurationPropertiesOutput)
}

func (o FlowPromptInferenceConfigurationPropertiesPtrOutput) Text() FlowPromptModelInferenceConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowPromptInferenceConfigurationProperties) *FlowPromptModelInferenceConfiguration {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(FlowPromptModelInferenceConfigurationPtrOutput)
}

// Input variable
type FlowPromptInputVariable struct {
	// Name for an input variable
	Name *string `pulumi:"name"`
}

// FlowPromptInputVariableInput is an input type that accepts FlowPromptInputVariableArgs and FlowPromptInputVariableOutput values.
// You can construct a concrete instance of `FlowPromptInputVariableInput` via:
//
//	FlowPromptInputVariableArgs{...}
type FlowPromptInputVariableInput interface {
	pulumi.Input

	ToFlowPromptInputVariableOutput() FlowPromptInputVariableOutput
	ToFlowPromptInputVariableOutputWithContext(context.Context) FlowPromptInputVariableOutput
}

// Input variable
type FlowPromptInputVariableArgs struct {
	// Name for an input variable
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (FlowPromptInputVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptInputVariable)(nil)).Elem()
}

func (i FlowPromptInputVariableArgs) ToFlowPromptInputVariableOutput() FlowPromptInputVariableOutput {
	return i.ToFlowPromptInputVariableOutputWithContext(context.Background())
}

func (i FlowPromptInputVariableArgs) ToFlowPromptInputVariableOutputWithContext(ctx context.Context) FlowPromptInputVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptInputVariableOutput)
}

// FlowPromptInputVariableArrayInput is an input type that accepts FlowPromptInputVariableArray and FlowPromptInputVariableArrayOutput values.
// You can construct a concrete instance of `FlowPromptInputVariableArrayInput` via:
//
//	FlowPromptInputVariableArray{ FlowPromptInputVariableArgs{...} }
type FlowPromptInputVariableArrayInput interface {
	pulumi.Input

	ToFlowPromptInputVariableArrayOutput() FlowPromptInputVariableArrayOutput
	ToFlowPromptInputVariableArrayOutputWithContext(context.Context) FlowPromptInputVariableArrayOutput
}

type FlowPromptInputVariableArray []FlowPromptInputVariableInput

func (FlowPromptInputVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowPromptInputVariable)(nil)).Elem()
}

func (i FlowPromptInputVariableArray) ToFlowPromptInputVariableArrayOutput() FlowPromptInputVariableArrayOutput {
	return i.ToFlowPromptInputVariableArrayOutputWithContext(context.Background())
}

func (i FlowPromptInputVariableArray) ToFlowPromptInputVariableArrayOutputWithContext(ctx context.Context) FlowPromptInputVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptInputVariableArrayOutput)
}

// Input variable
type FlowPromptInputVariableOutput struct{ *pulumi.OutputState }

func (FlowPromptInputVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptInputVariable)(nil)).Elem()
}

func (o FlowPromptInputVariableOutput) ToFlowPromptInputVariableOutput() FlowPromptInputVariableOutput {
	return o
}

func (o FlowPromptInputVariableOutput) ToFlowPromptInputVariableOutputWithContext(ctx context.Context) FlowPromptInputVariableOutput {
	return o
}

// Name for an input variable
func (o FlowPromptInputVariableOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowPromptInputVariable) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FlowPromptInputVariableArrayOutput struct{ *pulumi.OutputState }

func (FlowPromptInputVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowPromptInputVariable)(nil)).Elem()
}

func (o FlowPromptInputVariableArrayOutput) ToFlowPromptInputVariableArrayOutput() FlowPromptInputVariableArrayOutput {
	return o
}

func (o FlowPromptInputVariableArrayOutput) ToFlowPromptInputVariableArrayOutputWithContext(ctx context.Context) FlowPromptInputVariableArrayOutput {
	return o
}

func (o FlowPromptInputVariableArrayOutput) Index(i pulumi.IntInput) FlowPromptInputVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowPromptInputVariable {
		return vs[0].([]FlowPromptInputVariable)[vs[1].(int)]
	}).(FlowPromptInputVariableOutput)
}

// Prompt model inference configuration
type FlowPromptModelInferenceConfiguration struct {
	// Maximum length of output
	MaxTokens *float64 `pulumi:"maxTokens"`
	// List of stop sequences
	StopSequences []string `pulumi:"stopSequences"`
	// Controls randomness, higher values increase diversity
	Temperature *float64 `pulumi:"temperature"`
	// Sample from the k most likely next tokens
	TopK *float64 `pulumi:"topK"`
	// Cumulative probability cutoff for token selection
	TopP *float64 `pulumi:"topP"`
}

// FlowPromptModelInferenceConfigurationInput is an input type that accepts FlowPromptModelInferenceConfigurationArgs and FlowPromptModelInferenceConfigurationOutput values.
// You can construct a concrete instance of `FlowPromptModelInferenceConfigurationInput` via:
//
//	FlowPromptModelInferenceConfigurationArgs{...}
type FlowPromptModelInferenceConfigurationInput interface {
	pulumi.Input

	ToFlowPromptModelInferenceConfigurationOutput() FlowPromptModelInferenceConfigurationOutput
	ToFlowPromptModelInferenceConfigurationOutputWithContext(context.Context) FlowPromptModelInferenceConfigurationOutput
}

// Prompt model inference configuration
type FlowPromptModelInferenceConfigurationArgs struct {
	// Maximum length of output
	MaxTokens pulumi.Float64PtrInput `pulumi:"maxTokens"`
	// List of stop sequences
	StopSequences pulumi.StringArrayInput `pulumi:"stopSequences"`
	// Controls randomness, higher values increase diversity
	Temperature pulumi.Float64PtrInput `pulumi:"temperature"`
	// Sample from the k most likely next tokens
	TopK pulumi.Float64PtrInput `pulumi:"topK"`
	// Cumulative probability cutoff for token selection
	TopP pulumi.Float64PtrInput `pulumi:"topP"`
}

func (FlowPromptModelInferenceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptModelInferenceConfiguration)(nil)).Elem()
}

func (i FlowPromptModelInferenceConfigurationArgs) ToFlowPromptModelInferenceConfigurationOutput() FlowPromptModelInferenceConfigurationOutput {
	return i.ToFlowPromptModelInferenceConfigurationOutputWithContext(context.Background())
}

func (i FlowPromptModelInferenceConfigurationArgs) ToFlowPromptModelInferenceConfigurationOutputWithContext(ctx context.Context) FlowPromptModelInferenceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptModelInferenceConfigurationOutput)
}

func (i FlowPromptModelInferenceConfigurationArgs) ToFlowPromptModelInferenceConfigurationPtrOutput() FlowPromptModelInferenceConfigurationPtrOutput {
	return i.ToFlowPromptModelInferenceConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowPromptModelInferenceConfigurationArgs) ToFlowPromptModelInferenceConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptModelInferenceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptModelInferenceConfigurationOutput).ToFlowPromptModelInferenceConfigurationPtrOutputWithContext(ctx)
}

// FlowPromptModelInferenceConfigurationPtrInput is an input type that accepts FlowPromptModelInferenceConfigurationArgs, FlowPromptModelInferenceConfigurationPtr and FlowPromptModelInferenceConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowPromptModelInferenceConfigurationPtrInput` via:
//
//	        FlowPromptModelInferenceConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowPromptModelInferenceConfigurationPtrInput interface {
	pulumi.Input

	ToFlowPromptModelInferenceConfigurationPtrOutput() FlowPromptModelInferenceConfigurationPtrOutput
	ToFlowPromptModelInferenceConfigurationPtrOutputWithContext(context.Context) FlowPromptModelInferenceConfigurationPtrOutput
}

type flowPromptModelInferenceConfigurationPtrType FlowPromptModelInferenceConfigurationArgs

func FlowPromptModelInferenceConfigurationPtr(v *FlowPromptModelInferenceConfigurationArgs) FlowPromptModelInferenceConfigurationPtrInput {
	return (*flowPromptModelInferenceConfigurationPtrType)(v)
}

func (*flowPromptModelInferenceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptModelInferenceConfiguration)(nil)).Elem()
}

func (i *flowPromptModelInferenceConfigurationPtrType) ToFlowPromptModelInferenceConfigurationPtrOutput() FlowPromptModelInferenceConfigurationPtrOutput {
	return i.ToFlowPromptModelInferenceConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowPromptModelInferenceConfigurationPtrType) ToFlowPromptModelInferenceConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptModelInferenceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptModelInferenceConfigurationPtrOutput)
}

// Prompt model inference configuration
type FlowPromptModelInferenceConfigurationOutput struct{ *pulumi.OutputState }

func (FlowPromptModelInferenceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptModelInferenceConfiguration)(nil)).Elem()
}

func (o FlowPromptModelInferenceConfigurationOutput) ToFlowPromptModelInferenceConfigurationOutput() FlowPromptModelInferenceConfigurationOutput {
	return o
}

func (o FlowPromptModelInferenceConfigurationOutput) ToFlowPromptModelInferenceConfigurationOutputWithContext(ctx context.Context) FlowPromptModelInferenceConfigurationOutput {
	return o
}

func (o FlowPromptModelInferenceConfigurationOutput) ToFlowPromptModelInferenceConfigurationPtrOutput() FlowPromptModelInferenceConfigurationPtrOutput {
	return o.ToFlowPromptModelInferenceConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowPromptModelInferenceConfigurationOutput) ToFlowPromptModelInferenceConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptModelInferenceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowPromptModelInferenceConfiguration) *FlowPromptModelInferenceConfiguration {
		return &v
	}).(FlowPromptModelInferenceConfigurationPtrOutput)
}

// Maximum length of output
func (o FlowPromptModelInferenceConfigurationOutput) MaxTokens() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FlowPromptModelInferenceConfiguration) *float64 { return v.MaxTokens }).(pulumi.Float64PtrOutput)
}

// List of stop sequences
func (o FlowPromptModelInferenceConfigurationOutput) StopSequences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlowPromptModelInferenceConfiguration) []string { return v.StopSequences }).(pulumi.StringArrayOutput)
}

// Controls randomness, higher values increase diversity
func (o FlowPromptModelInferenceConfigurationOutput) Temperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FlowPromptModelInferenceConfiguration) *float64 { return v.Temperature }).(pulumi.Float64PtrOutput)
}

// Sample from the k most likely next tokens
func (o FlowPromptModelInferenceConfigurationOutput) TopK() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FlowPromptModelInferenceConfiguration) *float64 { return v.TopK }).(pulumi.Float64PtrOutput)
}

// Cumulative probability cutoff for token selection
func (o FlowPromptModelInferenceConfigurationOutput) TopP() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FlowPromptModelInferenceConfiguration) *float64 { return v.TopP }).(pulumi.Float64PtrOutput)
}

type FlowPromptModelInferenceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowPromptModelInferenceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptModelInferenceConfiguration)(nil)).Elem()
}

func (o FlowPromptModelInferenceConfigurationPtrOutput) ToFlowPromptModelInferenceConfigurationPtrOutput() FlowPromptModelInferenceConfigurationPtrOutput {
	return o
}

func (o FlowPromptModelInferenceConfigurationPtrOutput) ToFlowPromptModelInferenceConfigurationPtrOutputWithContext(ctx context.Context) FlowPromptModelInferenceConfigurationPtrOutput {
	return o
}

func (o FlowPromptModelInferenceConfigurationPtrOutput) Elem() FlowPromptModelInferenceConfigurationOutput {
	return o.ApplyT(func(v *FlowPromptModelInferenceConfiguration) FlowPromptModelInferenceConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowPromptModelInferenceConfiguration
		return ret
	}).(FlowPromptModelInferenceConfigurationOutput)
}

// Maximum length of output
func (o FlowPromptModelInferenceConfigurationPtrOutput) MaxTokens() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FlowPromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxTokens
	}).(pulumi.Float64PtrOutput)
}

// List of stop sequences
func (o FlowPromptModelInferenceConfigurationPtrOutput) StopSequences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlowPromptModelInferenceConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.StopSequences
	}).(pulumi.StringArrayOutput)
}

// Controls randomness, higher values increase diversity
func (o FlowPromptModelInferenceConfigurationPtrOutput) Temperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FlowPromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.Temperature
	}).(pulumi.Float64PtrOutput)
}

// Sample from the k most likely next tokens
func (o FlowPromptModelInferenceConfigurationPtrOutput) TopK() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FlowPromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TopK
	}).(pulumi.Float64PtrOutput)
}

// Cumulative probability cutoff for token selection
func (o FlowPromptModelInferenceConfigurationPtrOutput) TopP() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FlowPromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TopP
	}).(pulumi.Float64PtrOutput)
}

// Prompt template configuration
type FlowPromptTemplateConfiguration0Properties struct {
	Text FlowTextPromptTemplateConfiguration `pulumi:"text"`
}

// Prompt template configuration
type FlowPromptTemplateConfigurationProperties struct {
	Text FlowTextPromptTemplateConfiguration `pulumi:"text"`
}

// FlowPromptTemplateConfigurationPropertiesInput is an input type that accepts FlowPromptTemplateConfigurationPropertiesArgs and FlowPromptTemplateConfigurationPropertiesOutput values.
// You can construct a concrete instance of `FlowPromptTemplateConfigurationPropertiesInput` via:
//
//	FlowPromptTemplateConfigurationPropertiesArgs{...}
type FlowPromptTemplateConfigurationPropertiesInput interface {
	pulumi.Input

	ToFlowPromptTemplateConfigurationPropertiesOutput() FlowPromptTemplateConfigurationPropertiesOutput
	ToFlowPromptTemplateConfigurationPropertiesOutputWithContext(context.Context) FlowPromptTemplateConfigurationPropertiesOutput
}

// Prompt template configuration
type FlowPromptTemplateConfigurationPropertiesArgs struct {
	Text FlowTextPromptTemplateConfigurationInput `pulumi:"text"`
}

func (FlowPromptTemplateConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptTemplateConfigurationProperties)(nil)).Elem()
}

func (i FlowPromptTemplateConfigurationPropertiesArgs) ToFlowPromptTemplateConfigurationPropertiesOutput() FlowPromptTemplateConfigurationPropertiesOutput {
	return i.ToFlowPromptTemplateConfigurationPropertiesOutputWithContext(context.Background())
}

func (i FlowPromptTemplateConfigurationPropertiesArgs) ToFlowPromptTemplateConfigurationPropertiesOutputWithContext(ctx context.Context) FlowPromptTemplateConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptTemplateConfigurationPropertiesOutput)
}

func (i FlowPromptTemplateConfigurationPropertiesArgs) ToFlowPromptTemplateConfigurationPropertiesPtrOutput() FlowPromptTemplateConfigurationPropertiesPtrOutput {
	return i.ToFlowPromptTemplateConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowPromptTemplateConfigurationPropertiesArgs) ToFlowPromptTemplateConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowPromptTemplateConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptTemplateConfigurationPropertiesOutput).ToFlowPromptTemplateConfigurationPropertiesPtrOutputWithContext(ctx)
}

// FlowPromptTemplateConfigurationPropertiesPtrInput is an input type that accepts FlowPromptTemplateConfigurationPropertiesArgs, FlowPromptTemplateConfigurationPropertiesPtr and FlowPromptTemplateConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowPromptTemplateConfigurationPropertiesPtrInput` via:
//
//	        FlowPromptTemplateConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowPromptTemplateConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToFlowPromptTemplateConfigurationPropertiesPtrOutput() FlowPromptTemplateConfigurationPropertiesPtrOutput
	ToFlowPromptTemplateConfigurationPropertiesPtrOutputWithContext(context.Context) FlowPromptTemplateConfigurationPropertiesPtrOutput
}

type flowPromptTemplateConfigurationPropertiesPtrType FlowPromptTemplateConfigurationPropertiesArgs

func FlowPromptTemplateConfigurationPropertiesPtr(v *FlowPromptTemplateConfigurationPropertiesArgs) FlowPromptTemplateConfigurationPropertiesPtrInput {
	return (*flowPromptTemplateConfigurationPropertiesPtrType)(v)
}

func (*flowPromptTemplateConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptTemplateConfigurationProperties)(nil)).Elem()
}

func (i *flowPromptTemplateConfigurationPropertiesPtrType) ToFlowPromptTemplateConfigurationPropertiesPtrOutput() FlowPromptTemplateConfigurationPropertiesPtrOutput {
	return i.ToFlowPromptTemplateConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowPromptTemplateConfigurationPropertiesPtrType) ToFlowPromptTemplateConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowPromptTemplateConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowPromptTemplateConfigurationPropertiesPtrOutput)
}

// Prompt template configuration
type FlowPromptTemplateConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowPromptTemplateConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowPromptTemplateConfigurationProperties)(nil)).Elem()
}

func (o FlowPromptTemplateConfigurationPropertiesOutput) ToFlowPromptTemplateConfigurationPropertiesOutput() FlowPromptTemplateConfigurationPropertiesOutput {
	return o
}

func (o FlowPromptTemplateConfigurationPropertiesOutput) ToFlowPromptTemplateConfigurationPropertiesOutputWithContext(ctx context.Context) FlowPromptTemplateConfigurationPropertiesOutput {
	return o
}

func (o FlowPromptTemplateConfigurationPropertiesOutput) ToFlowPromptTemplateConfigurationPropertiesPtrOutput() FlowPromptTemplateConfigurationPropertiesPtrOutput {
	return o.ToFlowPromptTemplateConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowPromptTemplateConfigurationPropertiesOutput) ToFlowPromptTemplateConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowPromptTemplateConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowPromptTemplateConfigurationProperties) *FlowPromptTemplateConfigurationProperties {
		return &v
	}).(FlowPromptTemplateConfigurationPropertiesPtrOutput)
}

func (o FlowPromptTemplateConfigurationPropertiesOutput) Text() FlowTextPromptTemplateConfigurationOutput {
	return o.ApplyT(func(v FlowPromptTemplateConfigurationProperties) FlowTextPromptTemplateConfiguration { return v.Text }).(FlowTextPromptTemplateConfigurationOutput)
}

type FlowPromptTemplateConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowPromptTemplateConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowPromptTemplateConfigurationProperties)(nil)).Elem()
}

func (o FlowPromptTemplateConfigurationPropertiesPtrOutput) ToFlowPromptTemplateConfigurationPropertiesPtrOutput() FlowPromptTemplateConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowPromptTemplateConfigurationPropertiesPtrOutput) ToFlowPromptTemplateConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowPromptTemplateConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowPromptTemplateConfigurationPropertiesPtrOutput) Elem() FlowPromptTemplateConfigurationPropertiesOutput {
	return o.ApplyT(func(v *FlowPromptTemplateConfigurationProperties) FlowPromptTemplateConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret FlowPromptTemplateConfigurationProperties
		return ret
	}).(FlowPromptTemplateConfigurationPropertiesOutput)
}

func (o FlowPromptTemplateConfigurationPropertiesPtrOutput) Text() FlowTextPromptTemplateConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowPromptTemplateConfigurationProperties) *FlowTextPromptTemplateConfiguration {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(FlowTextPromptTemplateConfigurationPtrOutput)
}

// Retrieval flow node configuration
type FlowRetrievalFlowNodeConfiguration struct {
	ServiceConfiguration FlowRetrievalFlowNodeServiceConfigurationProperties `pulumi:"serviceConfiguration"`
}

// FlowRetrievalFlowNodeConfigurationInput is an input type that accepts FlowRetrievalFlowNodeConfigurationArgs and FlowRetrievalFlowNodeConfigurationOutput values.
// You can construct a concrete instance of `FlowRetrievalFlowNodeConfigurationInput` via:
//
//	FlowRetrievalFlowNodeConfigurationArgs{...}
type FlowRetrievalFlowNodeConfigurationInput interface {
	pulumi.Input

	ToFlowRetrievalFlowNodeConfigurationOutput() FlowRetrievalFlowNodeConfigurationOutput
	ToFlowRetrievalFlowNodeConfigurationOutputWithContext(context.Context) FlowRetrievalFlowNodeConfigurationOutput
}

// Retrieval flow node configuration
type FlowRetrievalFlowNodeConfigurationArgs struct {
	ServiceConfiguration FlowRetrievalFlowNodeServiceConfigurationPropertiesInput `pulumi:"serviceConfiguration"`
}

func (FlowRetrievalFlowNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowRetrievalFlowNodeConfiguration)(nil)).Elem()
}

func (i FlowRetrievalFlowNodeConfigurationArgs) ToFlowRetrievalFlowNodeConfigurationOutput() FlowRetrievalFlowNodeConfigurationOutput {
	return i.ToFlowRetrievalFlowNodeConfigurationOutputWithContext(context.Background())
}

func (i FlowRetrievalFlowNodeConfigurationArgs) ToFlowRetrievalFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowRetrievalFlowNodeConfigurationOutput)
}

func (i FlowRetrievalFlowNodeConfigurationArgs) ToFlowRetrievalFlowNodeConfigurationPtrOutput() FlowRetrievalFlowNodeConfigurationPtrOutput {
	return i.ToFlowRetrievalFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowRetrievalFlowNodeConfigurationArgs) ToFlowRetrievalFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowRetrievalFlowNodeConfigurationOutput).ToFlowRetrievalFlowNodeConfigurationPtrOutputWithContext(ctx)
}

// FlowRetrievalFlowNodeConfigurationPtrInput is an input type that accepts FlowRetrievalFlowNodeConfigurationArgs, FlowRetrievalFlowNodeConfigurationPtr and FlowRetrievalFlowNodeConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowRetrievalFlowNodeConfigurationPtrInput` via:
//
//	        FlowRetrievalFlowNodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowRetrievalFlowNodeConfigurationPtrInput interface {
	pulumi.Input

	ToFlowRetrievalFlowNodeConfigurationPtrOutput() FlowRetrievalFlowNodeConfigurationPtrOutput
	ToFlowRetrievalFlowNodeConfigurationPtrOutputWithContext(context.Context) FlowRetrievalFlowNodeConfigurationPtrOutput
}

type flowRetrievalFlowNodeConfigurationPtrType FlowRetrievalFlowNodeConfigurationArgs

func FlowRetrievalFlowNodeConfigurationPtr(v *FlowRetrievalFlowNodeConfigurationArgs) FlowRetrievalFlowNodeConfigurationPtrInput {
	return (*flowRetrievalFlowNodeConfigurationPtrType)(v)
}

func (*flowRetrievalFlowNodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowRetrievalFlowNodeConfiguration)(nil)).Elem()
}

func (i *flowRetrievalFlowNodeConfigurationPtrType) ToFlowRetrievalFlowNodeConfigurationPtrOutput() FlowRetrievalFlowNodeConfigurationPtrOutput {
	return i.ToFlowRetrievalFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowRetrievalFlowNodeConfigurationPtrType) ToFlowRetrievalFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowRetrievalFlowNodeConfigurationPtrOutput)
}

// Retrieval flow node configuration
type FlowRetrievalFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowRetrievalFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowRetrievalFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowRetrievalFlowNodeConfigurationOutput) ToFlowRetrievalFlowNodeConfigurationOutput() FlowRetrievalFlowNodeConfigurationOutput {
	return o
}

func (o FlowRetrievalFlowNodeConfigurationOutput) ToFlowRetrievalFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeConfigurationOutput {
	return o
}

func (o FlowRetrievalFlowNodeConfigurationOutput) ToFlowRetrievalFlowNodeConfigurationPtrOutput() FlowRetrievalFlowNodeConfigurationPtrOutput {
	return o.ToFlowRetrievalFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowRetrievalFlowNodeConfigurationOutput) ToFlowRetrievalFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowRetrievalFlowNodeConfiguration) *FlowRetrievalFlowNodeConfiguration {
		return &v
	}).(FlowRetrievalFlowNodeConfigurationPtrOutput)
}

func (o FlowRetrievalFlowNodeConfigurationOutput) ServiceConfiguration() FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput {
	return o.ApplyT(func(v FlowRetrievalFlowNodeConfiguration) FlowRetrievalFlowNodeServiceConfigurationProperties {
		return v.ServiceConfiguration
	}).(FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput)
}

type FlowRetrievalFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowRetrievalFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowRetrievalFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowRetrievalFlowNodeConfigurationPtrOutput) ToFlowRetrievalFlowNodeConfigurationPtrOutput() FlowRetrievalFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowRetrievalFlowNodeConfigurationPtrOutput) ToFlowRetrievalFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowRetrievalFlowNodeConfigurationPtrOutput) Elem() FlowRetrievalFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowRetrievalFlowNodeConfiguration) FlowRetrievalFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowRetrievalFlowNodeConfiguration
		return ret
	}).(FlowRetrievalFlowNodeConfigurationOutput)
}

func (o FlowRetrievalFlowNodeConfigurationPtrOutput) ServiceConfiguration() FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *FlowRetrievalFlowNodeConfiguration) *FlowRetrievalFlowNodeServiceConfigurationProperties {
		if v == nil {
			return nil
		}
		return &v.ServiceConfiguration
	}).(FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput)
}

// s3 Retrieval configuration for Retrieval node
type FlowRetrievalFlowNodeS3Configuration struct {
	// bucket name of an s3 that will be used for Retrieval flow node configuration
	BucketName string `pulumi:"bucketName"`
}

// FlowRetrievalFlowNodeS3ConfigurationInput is an input type that accepts FlowRetrievalFlowNodeS3ConfigurationArgs and FlowRetrievalFlowNodeS3ConfigurationOutput values.
// You can construct a concrete instance of `FlowRetrievalFlowNodeS3ConfigurationInput` via:
//
//	FlowRetrievalFlowNodeS3ConfigurationArgs{...}
type FlowRetrievalFlowNodeS3ConfigurationInput interface {
	pulumi.Input

	ToFlowRetrievalFlowNodeS3ConfigurationOutput() FlowRetrievalFlowNodeS3ConfigurationOutput
	ToFlowRetrievalFlowNodeS3ConfigurationOutputWithContext(context.Context) FlowRetrievalFlowNodeS3ConfigurationOutput
}

// s3 Retrieval configuration for Retrieval node
type FlowRetrievalFlowNodeS3ConfigurationArgs struct {
	// bucket name of an s3 that will be used for Retrieval flow node configuration
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (FlowRetrievalFlowNodeS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowRetrievalFlowNodeS3Configuration)(nil)).Elem()
}

func (i FlowRetrievalFlowNodeS3ConfigurationArgs) ToFlowRetrievalFlowNodeS3ConfigurationOutput() FlowRetrievalFlowNodeS3ConfigurationOutput {
	return i.ToFlowRetrievalFlowNodeS3ConfigurationOutputWithContext(context.Background())
}

func (i FlowRetrievalFlowNodeS3ConfigurationArgs) ToFlowRetrievalFlowNodeS3ConfigurationOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowRetrievalFlowNodeS3ConfigurationOutput)
}

func (i FlowRetrievalFlowNodeS3ConfigurationArgs) ToFlowRetrievalFlowNodeS3ConfigurationPtrOutput() FlowRetrievalFlowNodeS3ConfigurationPtrOutput {
	return i.ToFlowRetrievalFlowNodeS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowRetrievalFlowNodeS3ConfigurationArgs) ToFlowRetrievalFlowNodeS3ConfigurationPtrOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowRetrievalFlowNodeS3ConfigurationOutput).ToFlowRetrievalFlowNodeS3ConfigurationPtrOutputWithContext(ctx)
}

// FlowRetrievalFlowNodeS3ConfigurationPtrInput is an input type that accepts FlowRetrievalFlowNodeS3ConfigurationArgs, FlowRetrievalFlowNodeS3ConfigurationPtr and FlowRetrievalFlowNodeS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowRetrievalFlowNodeS3ConfigurationPtrInput` via:
//
//	        FlowRetrievalFlowNodeS3ConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowRetrievalFlowNodeS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFlowRetrievalFlowNodeS3ConfigurationPtrOutput() FlowRetrievalFlowNodeS3ConfigurationPtrOutput
	ToFlowRetrievalFlowNodeS3ConfigurationPtrOutputWithContext(context.Context) FlowRetrievalFlowNodeS3ConfigurationPtrOutput
}

type flowRetrievalFlowNodeS3ConfigurationPtrType FlowRetrievalFlowNodeS3ConfigurationArgs

func FlowRetrievalFlowNodeS3ConfigurationPtr(v *FlowRetrievalFlowNodeS3ConfigurationArgs) FlowRetrievalFlowNodeS3ConfigurationPtrInput {
	return (*flowRetrievalFlowNodeS3ConfigurationPtrType)(v)
}

func (*flowRetrievalFlowNodeS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowRetrievalFlowNodeS3Configuration)(nil)).Elem()
}

func (i *flowRetrievalFlowNodeS3ConfigurationPtrType) ToFlowRetrievalFlowNodeS3ConfigurationPtrOutput() FlowRetrievalFlowNodeS3ConfigurationPtrOutput {
	return i.ToFlowRetrievalFlowNodeS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowRetrievalFlowNodeS3ConfigurationPtrType) ToFlowRetrievalFlowNodeS3ConfigurationPtrOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowRetrievalFlowNodeS3ConfigurationPtrOutput)
}

// s3 Retrieval configuration for Retrieval node
type FlowRetrievalFlowNodeS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FlowRetrievalFlowNodeS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowRetrievalFlowNodeS3Configuration)(nil)).Elem()
}

func (o FlowRetrievalFlowNodeS3ConfigurationOutput) ToFlowRetrievalFlowNodeS3ConfigurationOutput() FlowRetrievalFlowNodeS3ConfigurationOutput {
	return o
}

func (o FlowRetrievalFlowNodeS3ConfigurationOutput) ToFlowRetrievalFlowNodeS3ConfigurationOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeS3ConfigurationOutput {
	return o
}

func (o FlowRetrievalFlowNodeS3ConfigurationOutput) ToFlowRetrievalFlowNodeS3ConfigurationPtrOutput() FlowRetrievalFlowNodeS3ConfigurationPtrOutput {
	return o.ToFlowRetrievalFlowNodeS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowRetrievalFlowNodeS3ConfigurationOutput) ToFlowRetrievalFlowNodeS3ConfigurationPtrOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeS3ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowRetrievalFlowNodeS3Configuration) *FlowRetrievalFlowNodeS3Configuration {
		return &v
	}).(FlowRetrievalFlowNodeS3ConfigurationPtrOutput)
}

// bucket name of an s3 that will be used for Retrieval flow node configuration
func (o FlowRetrievalFlowNodeS3ConfigurationOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowRetrievalFlowNodeS3Configuration) string { return v.BucketName }).(pulumi.StringOutput)
}

type FlowRetrievalFlowNodeS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowRetrievalFlowNodeS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowRetrievalFlowNodeS3Configuration)(nil)).Elem()
}

func (o FlowRetrievalFlowNodeS3ConfigurationPtrOutput) ToFlowRetrievalFlowNodeS3ConfigurationPtrOutput() FlowRetrievalFlowNodeS3ConfigurationPtrOutput {
	return o
}

func (o FlowRetrievalFlowNodeS3ConfigurationPtrOutput) ToFlowRetrievalFlowNodeS3ConfigurationPtrOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeS3ConfigurationPtrOutput {
	return o
}

func (o FlowRetrievalFlowNodeS3ConfigurationPtrOutput) Elem() FlowRetrievalFlowNodeS3ConfigurationOutput {
	return o.ApplyT(func(v *FlowRetrievalFlowNodeS3Configuration) FlowRetrievalFlowNodeS3Configuration {
		if v != nil {
			return *v
		}
		var ret FlowRetrievalFlowNodeS3Configuration
		return ret
	}).(FlowRetrievalFlowNodeS3ConfigurationOutput)
}

// bucket name of an s3 that will be used for Retrieval flow node configuration
func (o FlowRetrievalFlowNodeS3ConfigurationPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowRetrievalFlowNodeS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Retrieval service configuration for Retrieval node
type FlowRetrievalFlowNodeServiceConfiguration0Properties struct {
	S3 *FlowRetrievalFlowNodeS3Configuration `pulumi:"s3"`
}

// Retrieval service configuration for Retrieval node
type FlowRetrievalFlowNodeServiceConfigurationProperties struct {
	S3 *FlowRetrievalFlowNodeS3Configuration `pulumi:"s3"`
}

// FlowRetrievalFlowNodeServiceConfigurationPropertiesInput is an input type that accepts FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs and FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput values.
// You can construct a concrete instance of `FlowRetrievalFlowNodeServiceConfigurationPropertiesInput` via:
//
//	FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs{...}
type FlowRetrievalFlowNodeServiceConfigurationPropertiesInput interface {
	pulumi.Input

	ToFlowRetrievalFlowNodeServiceConfigurationPropertiesOutput() FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput
	ToFlowRetrievalFlowNodeServiceConfigurationPropertiesOutputWithContext(context.Context) FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput
}

// Retrieval service configuration for Retrieval node
type FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs struct {
	S3 FlowRetrievalFlowNodeS3ConfigurationPtrInput `pulumi:"s3"`
}

func (FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowRetrievalFlowNodeServiceConfigurationProperties)(nil)).Elem()
}

func (i FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs) ToFlowRetrievalFlowNodeServiceConfigurationPropertiesOutput() FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput {
	return i.ToFlowRetrievalFlowNodeServiceConfigurationPropertiesOutputWithContext(context.Background())
}

func (i FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs) ToFlowRetrievalFlowNodeServiceConfigurationPropertiesOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput)
}

func (i FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs) ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput() FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput {
	return i.ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs) ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput).ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(ctx)
}

// FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrInput is an input type that accepts FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs, FlowRetrievalFlowNodeServiceConfigurationPropertiesPtr and FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrInput` via:
//
//	        FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput() FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput
	ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(context.Context) FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput
}

type flowRetrievalFlowNodeServiceConfigurationPropertiesPtrType FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs

func FlowRetrievalFlowNodeServiceConfigurationPropertiesPtr(v *FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs) FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrInput {
	return (*flowRetrievalFlowNodeServiceConfigurationPropertiesPtrType)(v)
}

func (*flowRetrievalFlowNodeServiceConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowRetrievalFlowNodeServiceConfigurationProperties)(nil)).Elem()
}

func (i *flowRetrievalFlowNodeServiceConfigurationPropertiesPtrType) ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput() FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput {
	return i.ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowRetrievalFlowNodeServiceConfigurationPropertiesPtrType) ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput)
}

// Retrieval service configuration for Retrieval node
type FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowRetrievalFlowNodeServiceConfigurationProperties)(nil)).Elem()
}

func (o FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput) ToFlowRetrievalFlowNodeServiceConfigurationPropertiesOutput() FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput {
	return o
}

func (o FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput) ToFlowRetrievalFlowNodeServiceConfigurationPropertiesOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput {
	return o
}

func (o FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput) ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput() FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o.ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput) ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowRetrievalFlowNodeServiceConfigurationProperties) *FlowRetrievalFlowNodeServiceConfigurationProperties {
		return &v
	}).(FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput)
}

func (o FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput) S3() FlowRetrievalFlowNodeS3ConfigurationPtrOutput {
	return o.ApplyT(func(v FlowRetrievalFlowNodeServiceConfigurationProperties) *FlowRetrievalFlowNodeS3Configuration {
		return v.S3
	}).(FlowRetrievalFlowNodeS3ConfigurationPtrOutput)
}

type FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowRetrievalFlowNodeServiceConfigurationProperties)(nil)).Elem()
}

func (o FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput) ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput() FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput) ToFlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput) Elem() FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput {
	return o.ApplyT(func(v *FlowRetrievalFlowNodeServiceConfigurationProperties) FlowRetrievalFlowNodeServiceConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret FlowRetrievalFlowNodeServiceConfigurationProperties
		return ret
	}).(FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput)
}

func (o FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput) S3() FlowRetrievalFlowNodeS3ConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowRetrievalFlowNodeServiceConfigurationProperties) *FlowRetrievalFlowNodeS3Configuration {
		if v == nil {
			return nil
		}
		return v.S3
	}).(FlowRetrievalFlowNodeS3ConfigurationPtrOutput)
}

// A bucket, key and optional version pointing to an S3 object containing a UTF-8 encoded JSON string Definition with the same schema as the Definition property of this resource
type FlowS3Location struct {
	// A bucket in S3
	Bucket string `pulumi:"bucket"`
	// A object key in S3
	Key string `pulumi:"key"`
	// The version of the the S3 object to use
	Version *string `pulumi:"version"`
}

// FlowS3LocationInput is an input type that accepts FlowS3LocationArgs and FlowS3LocationOutput values.
// You can construct a concrete instance of `FlowS3LocationInput` via:
//
//	FlowS3LocationArgs{...}
type FlowS3LocationInput interface {
	pulumi.Input

	ToFlowS3LocationOutput() FlowS3LocationOutput
	ToFlowS3LocationOutputWithContext(context.Context) FlowS3LocationOutput
}

// A bucket, key and optional version pointing to an S3 object containing a UTF-8 encoded JSON string Definition with the same schema as the Definition property of this resource
type FlowS3LocationArgs struct {
	// A bucket in S3
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// A object key in S3
	Key pulumi.StringInput `pulumi:"key"`
	// The version of the the S3 object to use
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (FlowS3LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowS3Location)(nil)).Elem()
}

func (i FlowS3LocationArgs) ToFlowS3LocationOutput() FlowS3LocationOutput {
	return i.ToFlowS3LocationOutputWithContext(context.Background())
}

func (i FlowS3LocationArgs) ToFlowS3LocationOutputWithContext(ctx context.Context) FlowS3LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowS3LocationOutput)
}

func (i FlowS3LocationArgs) ToFlowS3LocationPtrOutput() FlowS3LocationPtrOutput {
	return i.ToFlowS3LocationPtrOutputWithContext(context.Background())
}

func (i FlowS3LocationArgs) ToFlowS3LocationPtrOutputWithContext(ctx context.Context) FlowS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowS3LocationOutput).ToFlowS3LocationPtrOutputWithContext(ctx)
}

// FlowS3LocationPtrInput is an input type that accepts FlowS3LocationArgs, FlowS3LocationPtr and FlowS3LocationPtrOutput values.
// You can construct a concrete instance of `FlowS3LocationPtrInput` via:
//
//	        FlowS3LocationArgs{...}
//
//	or:
//
//	        nil
type FlowS3LocationPtrInput interface {
	pulumi.Input

	ToFlowS3LocationPtrOutput() FlowS3LocationPtrOutput
	ToFlowS3LocationPtrOutputWithContext(context.Context) FlowS3LocationPtrOutput
}

type flowS3LocationPtrType FlowS3LocationArgs

func FlowS3LocationPtr(v *FlowS3LocationArgs) FlowS3LocationPtrInput {
	return (*flowS3LocationPtrType)(v)
}

func (*flowS3LocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowS3Location)(nil)).Elem()
}

func (i *flowS3LocationPtrType) ToFlowS3LocationPtrOutput() FlowS3LocationPtrOutput {
	return i.ToFlowS3LocationPtrOutputWithContext(context.Background())
}

func (i *flowS3LocationPtrType) ToFlowS3LocationPtrOutputWithContext(ctx context.Context) FlowS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowS3LocationPtrOutput)
}

// A bucket, key and optional version pointing to an S3 object containing a UTF-8 encoded JSON string Definition with the same schema as the Definition property of this resource
type FlowS3LocationOutput struct{ *pulumi.OutputState }

func (FlowS3LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowS3Location)(nil)).Elem()
}

func (o FlowS3LocationOutput) ToFlowS3LocationOutput() FlowS3LocationOutput {
	return o
}

func (o FlowS3LocationOutput) ToFlowS3LocationOutputWithContext(ctx context.Context) FlowS3LocationOutput {
	return o
}

func (o FlowS3LocationOutput) ToFlowS3LocationPtrOutput() FlowS3LocationPtrOutput {
	return o.ToFlowS3LocationPtrOutputWithContext(context.Background())
}

func (o FlowS3LocationOutput) ToFlowS3LocationPtrOutputWithContext(ctx context.Context) FlowS3LocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowS3Location) *FlowS3Location {
		return &v
	}).(FlowS3LocationPtrOutput)
}

// A bucket in S3
func (o FlowS3LocationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v FlowS3Location) string { return v.Bucket }).(pulumi.StringOutput)
}

// A object key in S3
func (o FlowS3LocationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FlowS3Location) string { return v.Key }).(pulumi.StringOutput)
}

// The version of the the S3 object to use
func (o FlowS3LocationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowS3Location) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type FlowS3LocationPtrOutput struct{ *pulumi.OutputState }

func (FlowS3LocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowS3Location)(nil)).Elem()
}

func (o FlowS3LocationPtrOutput) ToFlowS3LocationPtrOutput() FlowS3LocationPtrOutput {
	return o
}

func (o FlowS3LocationPtrOutput) ToFlowS3LocationPtrOutputWithContext(ctx context.Context) FlowS3LocationPtrOutput {
	return o
}

func (o FlowS3LocationPtrOutput) Elem() FlowS3LocationOutput {
	return o.ApplyT(func(v *FlowS3Location) FlowS3Location {
		if v != nil {
			return *v
		}
		var ret FlowS3Location
		return ret
	}).(FlowS3LocationOutput)
}

// A bucket in S3
func (o FlowS3LocationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// A object key in S3
func (o FlowS3LocationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The version of the the S3 object to use
func (o FlowS3LocationPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowS3Location) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Storage flow node configuration
type FlowStorageFlowNodeConfiguration struct {
	ServiceConfiguration FlowStorageFlowNodeServiceConfigurationProperties `pulumi:"serviceConfiguration"`
}

// FlowStorageFlowNodeConfigurationInput is an input type that accepts FlowStorageFlowNodeConfigurationArgs and FlowStorageFlowNodeConfigurationOutput values.
// You can construct a concrete instance of `FlowStorageFlowNodeConfigurationInput` via:
//
//	FlowStorageFlowNodeConfigurationArgs{...}
type FlowStorageFlowNodeConfigurationInput interface {
	pulumi.Input

	ToFlowStorageFlowNodeConfigurationOutput() FlowStorageFlowNodeConfigurationOutput
	ToFlowStorageFlowNodeConfigurationOutputWithContext(context.Context) FlowStorageFlowNodeConfigurationOutput
}

// Storage flow node configuration
type FlowStorageFlowNodeConfigurationArgs struct {
	ServiceConfiguration FlowStorageFlowNodeServiceConfigurationPropertiesInput `pulumi:"serviceConfiguration"`
}

func (FlowStorageFlowNodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowStorageFlowNodeConfiguration)(nil)).Elem()
}

func (i FlowStorageFlowNodeConfigurationArgs) ToFlowStorageFlowNodeConfigurationOutput() FlowStorageFlowNodeConfigurationOutput {
	return i.ToFlowStorageFlowNodeConfigurationOutputWithContext(context.Background())
}

func (i FlowStorageFlowNodeConfigurationArgs) ToFlowStorageFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowStorageFlowNodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowStorageFlowNodeConfigurationOutput)
}

func (i FlowStorageFlowNodeConfigurationArgs) ToFlowStorageFlowNodeConfigurationPtrOutput() FlowStorageFlowNodeConfigurationPtrOutput {
	return i.ToFlowStorageFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowStorageFlowNodeConfigurationArgs) ToFlowStorageFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowStorageFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowStorageFlowNodeConfigurationOutput).ToFlowStorageFlowNodeConfigurationPtrOutputWithContext(ctx)
}

// FlowStorageFlowNodeConfigurationPtrInput is an input type that accepts FlowStorageFlowNodeConfigurationArgs, FlowStorageFlowNodeConfigurationPtr and FlowStorageFlowNodeConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowStorageFlowNodeConfigurationPtrInput` via:
//
//	        FlowStorageFlowNodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowStorageFlowNodeConfigurationPtrInput interface {
	pulumi.Input

	ToFlowStorageFlowNodeConfigurationPtrOutput() FlowStorageFlowNodeConfigurationPtrOutput
	ToFlowStorageFlowNodeConfigurationPtrOutputWithContext(context.Context) FlowStorageFlowNodeConfigurationPtrOutput
}

type flowStorageFlowNodeConfigurationPtrType FlowStorageFlowNodeConfigurationArgs

func FlowStorageFlowNodeConfigurationPtr(v *FlowStorageFlowNodeConfigurationArgs) FlowStorageFlowNodeConfigurationPtrInput {
	return (*flowStorageFlowNodeConfigurationPtrType)(v)
}

func (*flowStorageFlowNodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowStorageFlowNodeConfiguration)(nil)).Elem()
}

func (i *flowStorageFlowNodeConfigurationPtrType) ToFlowStorageFlowNodeConfigurationPtrOutput() FlowStorageFlowNodeConfigurationPtrOutput {
	return i.ToFlowStorageFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowStorageFlowNodeConfigurationPtrType) ToFlowStorageFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowStorageFlowNodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowStorageFlowNodeConfigurationPtrOutput)
}

// Storage flow node configuration
type FlowStorageFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowStorageFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowStorageFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowStorageFlowNodeConfigurationOutput) ToFlowStorageFlowNodeConfigurationOutput() FlowStorageFlowNodeConfigurationOutput {
	return o
}

func (o FlowStorageFlowNodeConfigurationOutput) ToFlowStorageFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowStorageFlowNodeConfigurationOutput {
	return o
}

func (o FlowStorageFlowNodeConfigurationOutput) ToFlowStorageFlowNodeConfigurationPtrOutput() FlowStorageFlowNodeConfigurationPtrOutput {
	return o.ToFlowStorageFlowNodeConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowStorageFlowNodeConfigurationOutput) ToFlowStorageFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowStorageFlowNodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowStorageFlowNodeConfiguration) *FlowStorageFlowNodeConfiguration {
		return &v
	}).(FlowStorageFlowNodeConfigurationPtrOutput)
}

func (o FlowStorageFlowNodeConfigurationOutput) ServiceConfiguration() FlowStorageFlowNodeServiceConfigurationPropertiesOutput {
	return o.ApplyT(func(v FlowStorageFlowNodeConfiguration) FlowStorageFlowNodeServiceConfigurationProperties {
		return v.ServiceConfiguration
	}).(FlowStorageFlowNodeServiceConfigurationPropertiesOutput)
}

type FlowStorageFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowStorageFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowStorageFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowStorageFlowNodeConfigurationPtrOutput) ToFlowStorageFlowNodeConfigurationPtrOutput() FlowStorageFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowStorageFlowNodeConfigurationPtrOutput) ToFlowStorageFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowStorageFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowStorageFlowNodeConfigurationPtrOutput) Elem() FlowStorageFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowStorageFlowNodeConfiguration) FlowStorageFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowStorageFlowNodeConfiguration
		return ret
	}).(FlowStorageFlowNodeConfigurationOutput)
}

func (o FlowStorageFlowNodeConfigurationPtrOutput) ServiceConfiguration() FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *FlowStorageFlowNodeConfiguration) *FlowStorageFlowNodeServiceConfigurationProperties {
		if v == nil {
			return nil
		}
		return &v.ServiceConfiguration
	}).(FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput)
}

// s3 storage configuration for storage node
type FlowStorageFlowNodeS3Configuration struct {
	// bucket name of an s3 that will be used for storage flow node configuration
	BucketName string `pulumi:"bucketName"`
}

// FlowStorageFlowNodeS3ConfigurationInput is an input type that accepts FlowStorageFlowNodeS3ConfigurationArgs and FlowStorageFlowNodeS3ConfigurationOutput values.
// You can construct a concrete instance of `FlowStorageFlowNodeS3ConfigurationInput` via:
//
//	FlowStorageFlowNodeS3ConfigurationArgs{...}
type FlowStorageFlowNodeS3ConfigurationInput interface {
	pulumi.Input

	ToFlowStorageFlowNodeS3ConfigurationOutput() FlowStorageFlowNodeS3ConfigurationOutput
	ToFlowStorageFlowNodeS3ConfigurationOutputWithContext(context.Context) FlowStorageFlowNodeS3ConfigurationOutput
}

// s3 storage configuration for storage node
type FlowStorageFlowNodeS3ConfigurationArgs struct {
	// bucket name of an s3 that will be used for storage flow node configuration
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (FlowStorageFlowNodeS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowStorageFlowNodeS3Configuration)(nil)).Elem()
}

func (i FlowStorageFlowNodeS3ConfigurationArgs) ToFlowStorageFlowNodeS3ConfigurationOutput() FlowStorageFlowNodeS3ConfigurationOutput {
	return i.ToFlowStorageFlowNodeS3ConfigurationOutputWithContext(context.Background())
}

func (i FlowStorageFlowNodeS3ConfigurationArgs) ToFlowStorageFlowNodeS3ConfigurationOutputWithContext(ctx context.Context) FlowStorageFlowNodeS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowStorageFlowNodeS3ConfigurationOutput)
}

func (i FlowStorageFlowNodeS3ConfigurationArgs) ToFlowStorageFlowNodeS3ConfigurationPtrOutput() FlowStorageFlowNodeS3ConfigurationPtrOutput {
	return i.ToFlowStorageFlowNodeS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowStorageFlowNodeS3ConfigurationArgs) ToFlowStorageFlowNodeS3ConfigurationPtrOutputWithContext(ctx context.Context) FlowStorageFlowNodeS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowStorageFlowNodeS3ConfigurationOutput).ToFlowStorageFlowNodeS3ConfigurationPtrOutputWithContext(ctx)
}

// FlowStorageFlowNodeS3ConfigurationPtrInput is an input type that accepts FlowStorageFlowNodeS3ConfigurationArgs, FlowStorageFlowNodeS3ConfigurationPtr and FlowStorageFlowNodeS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowStorageFlowNodeS3ConfigurationPtrInput` via:
//
//	        FlowStorageFlowNodeS3ConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowStorageFlowNodeS3ConfigurationPtrInput interface {
	pulumi.Input

	ToFlowStorageFlowNodeS3ConfigurationPtrOutput() FlowStorageFlowNodeS3ConfigurationPtrOutput
	ToFlowStorageFlowNodeS3ConfigurationPtrOutputWithContext(context.Context) FlowStorageFlowNodeS3ConfigurationPtrOutput
}

type flowStorageFlowNodeS3ConfigurationPtrType FlowStorageFlowNodeS3ConfigurationArgs

func FlowStorageFlowNodeS3ConfigurationPtr(v *FlowStorageFlowNodeS3ConfigurationArgs) FlowStorageFlowNodeS3ConfigurationPtrInput {
	return (*flowStorageFlowNodeS3ConfigurationPtrType)(v)
}

func (*flowStorageFlowNodeS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowStorageFlowNodeS3Configuration)(nil)).Elem()
}

func (i *flowStorageFlowNodeS3ConfigurationPtrType) ToFlowStorageFlowNodeS3ConfigurationPtrOutput() FlowStorageFlowNodeS3ConfigurationPtrOutput {
	return i.ToFlowStorageFlowNodeS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowStorageFlowNodeS3ConfigurationPtrType) ToFlowStorageFlowNodeS3ConfigurationPtrOutputWithContext(ctx context.Context) FlowStorageFlowNodeS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowStorageFlowNodeS3ConfigurationPtrOutput)
}

// s3 storage configuration for storage node
type FlowStorageFlowNodeS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FlowStorageFlowNodeS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowStorageFlowNodeS3Configuration)(nil)).Elem()
}

func (o FlowStorageFlowNodeS3ConfigurationOutput) ToFlowStorageFlowNodeS3ConfigurationOutput() FlowStorageFlowNodeS3ConfigurationOutput {
	return o
}

func (o FlowStorageFlowNodeS3ConfigurationOutput) ToFlowStorageFlowNodeS3ConfigurationOutputWithContext(ctx context.Context) FlowStorageFlowNodeS3ConfigurationOutput {
	return o
}

func (o FlowStorageFlowNodeS3ConfigurationOutput) ToFlowStorageFlowNodeS3ConfigurationPtrOutput() FlowStorageFlowNodeS3ConfigurationPtrOutput {
	return o.ToFlowStorageFlowNodeS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowStorageFlowNodeS3ConfigurationOutput) ToFlowStorageFlowNodeS3ConfigurationPtrOutputWithContext(ctx context.Context) FlowStorageFlowNodeS3ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowStorageFlowNodeS3Configuration) *FlowStorageFlowNodeS3Configuration {
		return &v
	}).(FlowStorageFlowNodeS3ConfigurationPtrOutput)
}

// bucket name of an s3 that will be used for storage flow node configuration
func (o FlowStorageFlowNodeS3ConfigurationOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowStorageFlowNodeS3Configuration) string { return v.BucketName }).(pulumi.StringOutput)
}

type FlowStorageFlowNodeS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowStorageFlowNodeS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowStorageFlowNodeS3Configuration)(nil)).Elem()
}

func (o FlowStorageFlowNodeS3ConfigurationPtrOutput) ToFlowStorageFlowNodeS3ConfigurationPtrOutput() FlowStorageFlowNodeS3ConfigurationPtrOutput {
	return o
}

func (o FlowStorageFlowNodeS3ConfigurationPtrOutput) ToFlowStorageFlowNodeS3ConfigurationPtrOutputWithContext(ctx context.Context) FlowStorageFlowNodeS3ConfigurationPtrOutput {
	return o
}

func (o FlowStorageFlowNodeS3ConfigurationPtrOutput) Elem() FlowStorageFlowNodeS3ConfigurationOutput {
	return o.ApplyT(func(v *FlowStorageFlowNodeS3Configuration) FlowStorageFlowNodeS3Configuration {
		if v != nil {
			return *v
		}
		var ret FlowStorageFlowNodeS3Configuration
		return ret
	}).(FlowStorageFlowNodeS3ConfigurationOutput)
}

// bucket name of an s3 that will be used for storage flow node configuration
func (o FlowStorageFlowNodeS3ConfigurationPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowStorageFlowNodeS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// storage service configuration for storage node
type FlowStorageFlowNodeServiceConfiguration0Properties struct {
	S3 *FlowStorageFlowNodeS3Configuration `pulumi:"s3"`
}

// storage service configuration for storage node
type FlowStorageFlowNodeServiceConfigurationProperties struct {
	S3 *FlowStorageFlowNodeS3Configuration `pulumi:"s3"`
}

// FlowStorageFlowNodeServiceConfigurationPropertiesInput is an input type that accepts FlowStorageFlowNodeServiceConfigurationPropertiesArgs and FlowStorageFlowNodeServiceConfigurationPropertiesOutput values.
// You can construct a concrete instance of `FlowStorageFlowNodeServiceConfigurationPropertiesInput` via:
//
//	FlowStorageFlowNodeServiceConfigurationPropertiesArgs{...}
type FlowStorageFlowNodeServiceConfigurationPropertiesInput interface {
	pulumi.Input

	ToFlowStorageFlowNodeServiceConfigurationPropertiesOutput() FlowStorageFlowNodeServiceConfigurationPropertiesOutput
	ToFlowStorageFlowNodeServiceConfigurationPropertiesOutputWithContext(context.Context) FlowStorageFlowNodeServiceConfigurationPropertiesOutput
}

// storage service configuration for storage node
type FlowStorageFlowNodeServiceConfigurationPropertiesArgs struct {
	S3 FlowStorageFlowNodeS3ConfigurationPtrInput `pulumi:"s3"`
}

func (FlowStorageFlowNodeServiceConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowStorageFlowNodeServiceConfigurationProperties)(nil)).Elem()
}

func (i FlowStorageFlowNodeServiceConfigurationPropertiesArgs) ToFlowStorageFlowNodeServiceConfigurationPropertiesOutput() FlowStorageFlowNodeServiceConfigurationPropertiesOutput {
	return i.ToFlowStorageFlowNodeServiceConfigurationPropertiesOutputWithContext(context.Background())
}

func (i FlowStorageFlowNodeServiceConfigurationPropertiesArgs) ToFlowStorageFlowNodeServiceConfigurationPropertiesOutputWithContext(ctx context.Context) FlowStorageFlowNodeServiceConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowStorageFlowNodeServiceConfigurationPropertiesOutput)
}

func (i FlowStorageFlowNodeServiceConfigurationPropertiesArgs) ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput() FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput {
	return i.ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i FlowStorageFlowNodeServiceConfigurationPropertiesArgs) ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowStorageFlowNodeServiceConfigurationPropertiesOutput).ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(ctx)
}

// FlowStorageFlowNodeServiceConfigurationPropertiesPtrInput is an input type that accepts FlowStorageFlowNodeServiceConfigurationPropertiesArgs, FlowStorageFlowNodeServiceConfigurationPropertiesPtr and FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `FlowStorageFlowNodeServiceConfigurationPropertiesPtrInput` via:
//
//	        FlowStorageFlowNodeServiceConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type FlowStorageFlowNodeServiceConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput() FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput
	ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(context.Context) FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput
}

type flowStorageFlowNodeServiceConfigurationPropertiesPtrType FlowStorageFlowNodeServiceConfigurationPropertiesArgs

func FlowStorageFlowNodeServiceConfigurationPropertiesPtr(v *FlowStorageFlowNodeServiceConfigurationPropertiesArgs) FlowStorageFlowNodeServiceConfigurationPropertiesPtrInput {
	return (*flowStorageFlowNodeServiceConfigurationPropertiesPtrType)(v)
}

func (*flowStorageFlowNodeServiceConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowStorageFlowNodeServiceConfigurationProperties)(nil)).Elem()
}

func (i *flowStorageFlowNodeServiceConfigurationPropertiesPtrType) ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput() FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput {
	return i.ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *flowStorageFlowNodeServiceConfigurationPropertiesPtrType) ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput)
}

// storage service configuration for storage node
type FlowStorageFlowNodeServiceConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowStorageFlowNodeServiceConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowStorageFlowNodeServiceConfigurationProperties)(nil)).Elem()
}

func (o FlowStorageFlowNodeServiceConfigurationPropertiesOutput) ToFlowStorageFlowNodeServiceConfigurationPropertiesOutput() FlowStorageFlowNodeServiceConfigurationPropertiesOutput {
	return o
}

func (o FlowStorageFlowNodeServiceConfigurationPropertiesOutput) ToFlowStorageFlowNodeServiceConfigurationPropertiesOutputWithContext(ctx context.Context) FlowStorageFlowNodeServiceConfigurationPropertiesOutput {
	return o
}

func (o FlowStorageFlowNodeServiceConfigurationPropertiesOutput) ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput() FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o.ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o FlowStorageFlowNodeServiceConfigurationPropertiesOutput) ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowStorageFlowNodeServiceConfigurationProperties) *FlowStorageFlowNodeServiceConfigurationProperties {
		return &v
	}).(FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput)
}

func (o FlowStorageFlowNodeServiceConfigurationPropertiesOutput) S3() FlowStorageFlowNodeS3ConfigurationPtrOutput {
	return o.ApplyT(func(v FlowStorageFlowNodeServiceConfigurationProperties) *FlowStorageFlowNodeS3Configuration {
		return v.S3
	}).(FlowStorageFlowNodeS3ConfigurationPtrOutput)
}

type FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowStorageFlowNodeServiceConfigurationProperties)(nil)).Elem()
}

func (o FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput) ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput() FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput) ToFlowStorageFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput) Elem() FlowStorageFlowNodeServiceConfigurationPropertiesOutput {
	return o.ApplyT(func(v *FlowStorageFlowNodeServiceConfigurationProperties) FlowStorageFlowNodeServiceConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret FlowStorageFlowNodeServiceConfigurationProperties
		return ret
	}).(FlowStorageFlowNodeServiceConfigurationPropertiesOutput)
}

func (o FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput) S3() FlowStorageFlowNodeS3ConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowStorageFlowNodeServiceConfigurationProperties) *FlowStorageFlowNodeS3Configuration {
		if v == nil {
			return nil
		}
		return v.S3
	}).(FlowStorageFlowNodeS3ConfigurationPtrOutput)
}

// Configuration for text prompt template
type FlowTextPromptTemplateConfiguration struct {
	// List of input variables
	InputVariables []FlowPromptInputVariable `pulumi:"inputVariables"`
	// Prompt content for String prompt template
	Text string `pulumi:"text"`
}

// FlowTextPromptTemplateConfigurationInput is an input type that accepts FlowTextPromptTemplateConfigurationArgs and FlowTextPromptTemplateConfigurationOutput values.
// You can construct a concrete instance of `FlowTextPromptTemplateConfigurationInput` via:
//
//	FlowTextPromptTemplateConfigurationArgs{...}
type FlowTextPromptTemplateConfigurationInput interface {
	pulumi.Input

	ToFlowTextPromptTemplateConfigurationOutput() FlowTextPromptTemplateConfigurationOutput
	ToFlowTextPromptTemplateConfigurationOutputWithContext(context.Context) FlowTextPromptTemplateConfigurationOutput
}

// Configuration for text prompt template
type FlowTextPromptTemplateConfigurationArgs struct {
	// List of input variables
	InputVariables FlowPromptInputVariableArrayInput `pulumi:"inputVariables"`
	// Prompt content for String prompt template
	Text pulumi.StringInput `pulumi:"text"`
}

func (FlowTextPromptTemplateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTextPromptTemplateConfiguration)(nil)).Elem()
}

func (i FlowTextPromptTemplateConfigurationArgs) ToFlowTextPromptTemplateConfigurationOutput() FlowTextPromptTemplateConfigurationOutput {
	return i.ToFlowTextPromptTemplateConfigurationOutputWithContext(context.Background())
}

func (i FlowTextPromptTemplateConfigurationArgs) ToFlowTextPromptTemplateConfigurationOutputWithContext(ctx context.Context) FlowTextPromptTemplateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTextPromptTemplateConfigurationOutput)
}

func (i FlowTextPromptTemplateConfigurationArgs) ToFlowTextPromptTemplateConfigurationPtrOutput() FlowTextPromptTemplateConfigurationPtrOutput {
	return i.ToFlowTextPromptTemplateConfigurationPtrOutputWithContext(context.Background())
}

func (i FlowTextPromptTemplateConfigurationArgs) ToFlowTextPromptTemplateConfigurationPtrOutputWithContext(ctx context.Context) FlowTextPromptTemplateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTextPromptTemplateConfigurationOutput).ToFlowTextPromptTemplateConfigurationPtrOutputWithContext(ctx)
}

// FlowTextPromptTemplateConfigurationPtrInput is an input type that accepts FlowTextPromptTemplateConfigurationArgs, FlowTextPromptTemplateConfigurationPtr and FlowTextPromptTemplateConfigurationPtrOutput values.
// You can construct a concrete instance of `FlowTextPromptTemplateConfigurationPtrInput` via:
//
//	        FlowTextPromptTemplateConfigurationArgs{...}
//
//	or:
//
//	        nil
type FlowTextPromptTemplateConfigurationPtrInput interface {
	pulumi.Input

	ToFlowTextPromptTemplateConfigurationPtrOutput() FlowTextPromptTemplateConfigurationPtrOutput
	ToFlowTextPromptTemplateConfigurationPtrOutputWithContext(context.Context) FlowTextPromptTemplateConfigurationPtrOutput
}

type flowTextPromptTemplateConfigurationPtrType FlowTextPromptTemplateConfigurationArgs

func FlowTextPromptTemplateConfigurationPtr(v *FlowTextPromptTemplateConfigurationArgs) FlowTextPromptTemplateConfigurationPtrInput {
	return (*flowTextPromptTemplateConfigurationPtrType)(v)
}

func (*flowTextPromptTemplateConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowTextPromptTemplateConfiguration)(nil)).Elem()
}

func (i *flowTextPromptTemplateConfigurationPtrType) ToFlowTextPromptTemplateConfigurationPtrOutput() FlowTextPromptTemplateConfigurationPtrOutput {
	return i.ToFlowTextPromptTemplateConfigurationPtrOutputWithContext(context.Background())
}

func (i *flowTextPromptTemplateConfigurationPtrType) ToFlowTextPromptTemplateConfigurationPtrOutputWithContext(ctx context.Context) FlowTextPromptTemplateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowTextPromptTemplateConfigurationPtrOutput)
}

// Configuration for text prompt template
type FlowTextPromptTemplateConfigurationOutput struct{ *pulumi.OutputState }

func (FlowTextPromptTemplateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowTextPromptTemplateConfiguration)(nil)).Elem()
}

func (o FlowTextPromptTemplateConfigurationOutput) ToFlowTextPromptTemplateConfigurationOutput() FlowTextPromptTemplateConfigurationOutput {
	return o
}

func (o FlowTextPromptTemplateConfigurationOutput) ToFlowTextPromptTemplateConfigurationOutputWithContext(ctx context.Context) FlowTextPromptTemplateConfigurationOutput {
	return o
}

func (o FlowTextPromptTemplateConfigurationOutput) ToFlowTextPromptTemplateConfigurationPtrOutput() FlowTextPromptTemplateConfigurationPtrOutput {
	return o.ToFlowTextPromptTemplateConfigurationPtrOutputWithContext(context.Background())
}

func (o FlowTextPromptTemplateConfigurationOutput) ToFlowTextPromptTemplateConfigurationPtrOutputWithContext(ctx context.Context) FlowTextPromptTemplateConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowTextPromptTemplateConfiguration) *FlowTextPromptTemplateConfiguration {
		return &v
	}).(FlowTextPromptTemplateConfigurationPtrOutput)
}

// List of input variables
func (o FlowTextPromptTemplateConfigurationOutput) InputVariables() FlowPromptInputVariableArrayOutput {
	return o.ApplyT(func(v FlowTextPromptTemplateConfiguration) []FlowPromptInputVariable { return v.InputVariables }).(FlowPromptInputVariableArrayOutput)
}

// Prompt content for String prompt template
func (o FlowTextPromptTemplateConfigurationOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v FlowTextPromptTemplateConfiguration) string { return v.Text }).(pulumi.StringOutput)
}

type FlowTextPromptTemplateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowTextPromptTemplateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowTextPromptTemplateConfiguration)(nil)).Elem()
}

func (o FlowTextPromptTemplateConfigurationPtrOutput) ToFlowTextPromptTemplateConfigurationPtrOutput() FlowTextPromptTemplateConfigurationPtrOutput {
	return o
}

func (o FlowTextPromptTemplateConfigurationPtrOutput) ToFlowTextPromptTemplateConfigurationPtrOutputWithContext(ctx context.Context) FlowTextPromptTemplateConfigurationPtrOutput {
	return o
}

func (o FlowTextPromptTemplateConfigurationPtrOutput) Elem() FlowTextPromptTemplateConfigurationOutput {
	return o.ApplyT(func(v *FlowTextPromptTemplateConfiguration) FlowTextPromptTemplateConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowTextPromptTemplateConfiguration
		return ret
	}).(FlowTextPromptTemplateConfigurationOutput)
}

// List of input variables
func (o FlowTextPromptTemplateConfigurationPtrOutput) InputVariables() FlowPromptInputVariableArrayOutput {
	return o.ApplyT(func(v *FlowTextPromptTemplateConfiguration) []FlowPromptInputVariable {
		if v == nil {
			return nil
		}
		return v.InputVariables
	}).(FlowPromptInputVariableArrayOutput)
}

// Prompt content for String prompt template
func (o FlowTextPromptTemplateConfigurationPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowTextPromptTemplateConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(pulumi.StringPtrOutput)
}

// Validation for Flow
type FlowValidation struct {
	// validation message
	Message string `pulumi:"message"`
}

// Validation for Flow
type FlowValidationOutput struct{ *pulumi.OutputState }

func (FlowValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowValidation)(nil)).Elem()
}

func (o FlowValidationOutput) ToFlowValidationOutput() FlowValidationOutput {
	return o
}

func (o FlowValidationOutput) ToFlowValidationOutputWithContext(ctx context.Context) FlowValidationOutput {
	return o
}

// validation message
func (o FlowValidationOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v FlowValidation) string { return v.Message }).(pulumi.StringOutput)
}

type FlowValidationArrayOutput struct{ *pulumi.OutputState }

func (FlowValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowValidation)(nil)).Elem()
}

func (o FlowValidationArrayOutput) ToFlowValidationArrayOutput() FlowValidationArrayOutput {
	return o
}

func (o FlowValidationArrayOutput) ToFlowValidationArrayOutputWithContext(ctx context.Context) FlowValidationArrayOutput {
	return o
}

func (o FlowValidationArrayOutput) Index(i pulumi.IntInput) FlowValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowValidation {
		return vs[0].([]FlowValidation)[vs[1].(int)]
	}).(FlowValidationOutput)
}

// Agent flow node configuration
type FlowVersionAgentFlowNodeConfiguration struct {
	// Arn representation of the Agent Alias.
	AgentAliasArn string `pulumi:"agentAliasArn"`
}

// Agent flow node configuration
type FlowVersionAgentFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionAgentFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionAgentFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionAgentFlowNodeConfigurationOutput) ToFlowVersionAgentFlowNodeConfigurationOutput() FlowVersionAgentFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionAgentFlowNodeConfigurationOutput) ToFlowVersionAgentFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowVersionAgentFlowNodeConfigurationOutput {
	return o
}

// Arn representation of the Agent Alias.
func (o FlowVersionAgentFlowNodeConfigurationOutput) AgentAliasArn() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionAgentFlowNodeConfiguration) string { return v.AgentAliasArn }).(pulumi.StringOutput)
}

type FlowVersionAgentFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionAgentFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionAgentFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionAgentFlowNodeConfigurationPtrOutput) ToFlowVersionAgentFlowNodeConfigurationPtrOutput() FlowVersionAgentFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionAgentFlowNodeConfigurationPtrOutput) ToFlowVersionAgentFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionAgentFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionAgentFlowNodeConfigurationPtrOutput) Elem() FlowVersionAgentFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionAgentFlowNodeConfiguration) FlowVersionAgentFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionAgentFlowNodeConfiguration
		return ret
	}).(FlowVersionAgentFlowNodeConfigurationOutput)
}

// Arn representation of the Agent Alias.
func (o FlowVersionAgentFlowNodeConfigurationPtrOutput) AgentAliasArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionAgentFlowNodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.AgentAliasArn
	}).(pulumi.StringPtrOutput)
}

// Collector flow node configuration
type FlowVersionCollectorFlowNodeConfiguration struct {
}

// Collector flow node configuration
type FlowVersionCollectorFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionCollectorFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionCollectorFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionCollectorFlowNodeConfigurationOutput) ToFlowVersionCollectorFlowNodeConfigurationOutput() FlowVersionCollectorFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionCollectorFlowNodeConfigurationOutput) ToFlowVersionCollectorFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowVersionCollectorFlowNodeConfigurationOutput {
	return o
}

type FlowVersionCollectorFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionCollectorFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionCollectorFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionCollectorFlowNodeConfigurationPtrOutput) ToFlowVersionCollectorFlowNodeConfigurationPtrOutput() FlowVersionCollectorFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionCollectorFlowNodeConfigurationPtrOutput) ToFlowVersionCollectorFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionCollectorFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionCollectorFlowNodeConfigurationPtrOutput) Elem() FlowVersionCollectorFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionCollectorFlowNodeConfiguration) FlowVersionCollectorFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionCollectorFlowNodeConfiguration
		return ret
	}).(FlowVersionCollectorFlowNodeConfigurationOutput)
}

// Condition flow node configuration
type FlowVersionConditionFlowNodeConfiguration struct {
	// List of conditions in a condition node
	Conditions []FlowVersionFlowCondition `pulumi:"conditions"`
}

// Condition flow node configuration
type FlowVersionConditionFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionConditionFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionConditionFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionConditionFlowNodeConfigurationOutput) ToFlowVersionConditionFlowNodeConfigurationOutput() FlowVersionConditionFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionConditionFlowNodeConfigurationOutput) ToFlowVersionConditionFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowVersionConditionFlowNodeConfigurationOutput {
	return o
}

// List of conditions in a condition node
func (o FlowVersionConditionFlowNodeConfigurationOutput) Conditions() FlowVersionFlowConditionArrayOutput {
	return o.ApplyT(func(v FlowVersionConditionFlowNodeConfiguration) []FlowVersionFlowCondition { return v.Conditions }).(FlowVersionFlowConditionArrayOutput)
}

type FlowVersionConditionFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionConditionFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionConditionFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionConditionFlowNodeConfigurationPtrOutput) ToFlowVersionConditionFlowNodeConfigurationPtrOutput() FlowVersionConditionFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionConditionFlowNodeConfigurationPtrOutput) ToFlowVersionConditionFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionConditionFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionConditionFlowNodeConfigurationPtrOutput) Elem() FlowVersionConditionFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionConditionFlowNodeConfiguration) FlowVersionConditionFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionConditionFlowNodeConfiguration
		return ret
	}).(FlowVersionConditionFlowNodeConfigurationOutput)
}

// List of conditions in a condition node
func (o FlowVersionConditionFlowNodeConfigurationPtrOutput) Conditions() FlowVersionFlowConditionArrayOutput {
	return o.ApplyT(func(v *FlowVersionConditionFlowNodeConfiguration) []FlowVersionFlowCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(FlowVersionFlowConditionArrayOutput)
}

// Condition branch for a condition node
type FlowVersionFlowCondition struct {
	// Expression for a condition in a flow
	Expression *string `pulumi:"expression"`
	// Name of a condition in a flow
	Name string `pulumi:"name"`
}

// Condition branch for a condition node
type FlowVersionFlowConditionOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowCondition)(nil)).Elem()
}

func (o FlowVersionFlowConditionOutput) ToFlowVersionFlowConditionOutput() FlowVersionFlowConditionOutput {
	return o
}

func (o FlowVersionFlowConditionOutput) ToFlowVersionFlowConditionOutputWithContext(ctx context.Context) FlowVersionFlowConditionOutput {
	return o
}

// Expression for a condition in a flow
func (o FlowVersionFlowConditionOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowVersionFlowCondition) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Name of a condition in a flow
func (o FlowVersionFlowConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionFlowCondition) string { return v.Name }).(pulumi.StringOutput)
}

type FlowVersionFlowConditionArrayOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowVersionFlowCondition)(nil)).Elem()
}

func (o FlowVersionFlowConditionArrayOutput) ToFlowVersionFlowConditionArrayOutput() FlowVersionFlowConditionArrayOutput {
	return o
}

func (o FlowVersionFlowConditionArrayOutput) ToFlowVersionFlowConditionArrayOutputWithContext(ctx context.Context) FlowVersionFlowConditionArrayOutput {
	return o
}

func (o FlowVersionFlowConditionArrayOutput) Index(i pulumi.IntInput) FlowVersionFlowConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowVersionFlowCondition {
		return vs[0].([]FlowVersionFlowCondition)[vs[1].(int)]
	}).(FlowVersionFlowConditionOutput)
}

// Conditional connection configuration
type FlowVersionFlowConditionalConnectionConfiguration struct {
	// Name of a condition in a flow
	Condition string `pulumi:"condition"`
}

// Conditional connection configuration
type FlowVersionFlowConditionalConnectionConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowConditionalConnectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowConditionalConnectionConfiguration)(nil)).Elem()
}

func (o FlowVersionFlowConditionalConnectionConfigurationOutput) ToFlowVersionFlowConditionalConnectionConfigurationOutput() FlowVersionFlowConditionalConnectionConfigurationOutput {
	return o
}

func (o FlowVersionFlowConditionalConnectionConfigurationOutput) ToFlowVersionFlowConditionalConnectionConfigurationOutputWithContext(ctx context.Context) FlowVersionFlowConditionalConnectionConfigurationOutput {
	return o
}

// Name of a condition in a flow
func (o FlowVersionFlowConditionalConnectionConfigurationOutput) Condition() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionFlowConditionalConnectionConfiguration) string { return v.Condition }).(pulumi.StringOutput)
}

type FlowVersionFlowConditionalConnectionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowConditionalConnectionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowConditionalConnectionConfiguration)(nil)).Elem()
}

func (o FlowVersionFlowConditionalConnectionConfigurationPtrOutput) ToFlowVersionFlowConditionalConnectionConfigurationPtrOutput() FlowVersionFlowConditionalConnectionConfigurationPtrOutput {
	return o
}

func (o FlowVersionFlowConditionalConnectionConfigurationPtrOutput) ToFlowVersionFlowConditionalConnectionConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionFlowConditionalConnectionConfigurationPtrOutput {
	return o
}

func (o FlowVersionFlowConditionalConnectionConfigurationPtrOutput) Elem() FlowVersionFlowConditionalConnectionConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionFlowConditionalConnectionConfiguration) FlowVersionFlowConditionalConnectionConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowConditionalConnectionConfiguration
		return ret
	}).(FlowVersionFlowConditionalConnectionConfigurationOutput)
}

// Name of a condition in a flow
func (o FlowVersionFlowConditionalConnectionConfigurationPtrOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowConditionalConnectionConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Condition
	}).(pulumi.StringPtrOutput)
}

// Flow connection
type FlowVersionFlowConnection struct {
	// The configuration of the connection.
	Configuration interface{} `pulumi:"configuration"`
	// Name of a connection in a flow
	Name string `pulumi:"name"`
	// Name of a node in a flow
	Source string `pulumi:"source"`
	// Name of a node in a flow
	Target string `pulumi:"target"`
	// Whether the source node that the connection begins from is a condition node ( `Conditional` ) or not ( `Data` ).
	Type FlowVersionFlowConnectionType `pulumi:"type"`
}

// Flow connection
type FlowVersionFlowConnectionOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowConnection)(nil)).Elem()
}

func (o FlowVersionFlowConnectionOutput) ToFlowVersionFlowConnectionOutput() FlowVersionFlowConnectionOutput {
	return o
}

func (o FlowVersionFlowConnectionOutput) ToFlowVersionFlowConnectionOutputWithContext(ctx context.Context) FlowVersionFlowConnectionOutput {
	return o
}

// The configuration of the connection.
func (o FlowVersionFlowConnectionOutput) Configuration() pulumi.AnyOutput {
	return o.ApplyT(func(v FlowVersionFlowConnection) interface{} { return v.Configuration }).(pulumi.AnyOutput)
}

// Name of a connection in a flow
func (o FlowVersionFlowConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionFlowConnection) string { return v.Name }).(pulumi.StringOutput)
}

// Name of a node in a flow
func (o FlowVersionFlowConnectionOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionFlowConnection) string { return v.Source }).(pulumi.StringOutput)
}

// Name of a node in a flow
func (o FlowVersionFlowConnectionOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionFlowConnection) string { return v.Target }).(pulumi.StringOutput)
}

// Whether the source node that the connection begins from is a condition node ( `Conditional` ) or not ( `Data` ).
func (o FlowVersionFlowConnectionOutput) Type() FlowVersionFlowConnectionTypeOutput {
	return o.ApplyT(func(v FlowVersionFlowConnection) FlowVersionFlowConnectionType { return v.Type }).(FlowVersionFlowConnectionTypeOutput)
}

type FlowVersionFlowConnectionArrayOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowVersionFlowConnection)(nil)).Elem()
}

func (o FlowVersionFlowConnectionArrayOutput) ToFlowVersionFlowConnectionArrayOutput() FlowVersionFlowConnectionArrayOutput {
	return o
}

func (o FlowVersionFlowConnectionArrayOutput) ToFlowVersionFlowConnectionArrayOutputWithContext(ctx context.Context) FlowVersionFlowConnectionArrayOutput {
	return o
}

func (o FlowVersionFlowConnectionArrayOutput) Index(i pulumi.IntInput) FlowVersionFlowConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowVersionFlowConnection {
		return vs[0].([]FlowVersionFlowConnection)[vs[1].(int)]
	}).(FlowVersionFlowConnectionOutput)
}

// Connection configuration
type FlowVersionFlowConnectionConfiguration0Properties struct {
	Data FlowVersionFlowDataConnectionConfiguration `pulumi:"data"`
}

// Connection configuration
type FlowVersionFlowConnectionConfiguration0PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowConnectionConfiguration0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowConnectionConfiguration0Properties)(nil)).Elem()
}

func (o FlowVersionFlowConnectionConfiguration0PropertiesOutput) ToFlowVersionFlowConnectionConfiguration0PropertiesOutput() FlowVersionFlowConnectionConfiguration0PropertiesOutput {
	return o
}

func (o FlowVersionFlowConnectionConfiguration0PropertiesOutput) ToFlowVersionFlowConnectionConfiguration0PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowConnectionConfiguration0PropertiesOutput {
	return o
}

func (o FlowVersionFlowConnectionConfiguration0PropertiesOutput) Data() FlowVersionFlowDataConnectionConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowConnectionConfiguration0Properties) FlowVersionFlowDataConnectionConfiguration {
		return v.Data
	}).(FlowVersionFlowDataConnectionConfigurationOutput)
}

type FlowVersionFlowConnectionConfiguration0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowConnectionConfiguration0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowConnectionConfiguration0Properties)(nil)).Elem()
}

func (o FlowVersionFlowConnectionConfiguration0PropertiesPtrOutput) ToFlowVersionFlowConnectionConfiguration0PropertiesPtrOutput() FlowVersionFlowConnectionConfiguration0PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowConnectionConfiguration0PropertiesPtrOutput) ToFlowVersionFlowConnectionConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowConnectionConfiguration0PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowConnectionConfiguration0PropertiesPtrOutput) Elem() FlowVersionFlowConnectionConfiguration0PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowConnectionConfiguration0Properties) FlowVersionFlowConnectionConfiguration0Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowConnectionConfiguration0Properties
		return ret
	}).(FlowVersionFlowConnectionConfiguration0PropertiesOutput)
}

func (o FlowVersionFlowConnectionConfiguration0PropertiesPtrOutput) Data() FlowVersionFlowDataConnectionConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowConnectionConfiguration0Properties) *FlowVersionFlowDataConnectionConfiguration {
		if v == nil {
			return nil
		}
		return &v.Data
	}).(FlowVersionFlowDataConnectionConfigurationPtrOutput)
}

// Connection configuration
type FlowVersionFlowConnectionConfiguration1Properties struct {
	Conditional FlowVersionFlowConditionalConnectionConfiguration `pulumi:"conditional"`
}

// Connection configuration
type FlowVersionFlowConnectionConfiguration1PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowConnectionConfiguration1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowConnectionConfiguration1Properties)(nil)).Elem()
}

func (o FlowVersionFlowConnectionConfiguration1PropertiesOutput) ToFlowVersionFlowConnectionConfiguration1PropertiesOutput() FlowVersionFlowConnectionConfiguration1PropertiesOutput {
	return o
}

func (o FlowVersionFlowConnectionConfiguration1PropertiesOutput) ToFlowVersionFlowConnectionConfiguration1PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowConnectionConfiguration1PropertiesOutput {
	return o
}

func (o FlowVersionFlowConnectionConfiguration1PropertiesOutput) Conditional() FlowVersionFlowConditionalConnectionConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowConnectionConfiguration1Properties) FlowVersionFlowConditionalConnectionConfiguration {
		return v.Conditional
	}).(FlowVersionFlowConditionalConnectionConfigurationOutput)
}

type FlowVersionFlowConnectionConfiguration1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowConnectionConfiguration1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowConnectionConfiguration1Properties)(nil)).Elem()
}

func (o FlowVersionFlowConnectionConfiguration1PropertiesPtrOutput) ToFlowVersionFlowConnectionConfiguration1PropertiesPtrOutput() FlowVersionFlowConnectionConfiguration1PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowConnectionConfiguration1PropertiesPtrOutput) ToFlowVersionFlowConnectionConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowConnectionConfiguration1PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowConnectionConfiguration1PropertiesPtrOutput) Elem() FlowVersionFlowConnectionConfiguration1PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowConnectionConfiguration1Properties) FlowVersionFlowConnectionConfiguration1Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowConnectionConfiguration1Properties
		return ret
	}).(FlowVersionFlowConnectionConfiguration1PropertiesOutput)
}

func (o FlowVersionFlowConnectionConfiguration1PropertiesPtrOutput) Conditional() FlowVersionFlowConditionalConnectionConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowConnectionConfiguration1Properties) *FlowVersionFlowConditionalConnectionConfiguration {
		if v == nil {
			return nil
		}
		return &v.Conditional
	}).(FlowVersionFlowConditionalConnectionConfigurationPtrOutput)
}

// Data connection configuration
type FlowVersionFlowDataConnectionConfiguration struct {
	// Name of a node output in a flow
	SourceOutput string `pulumi:"sourceOutput"`
	// Name of a node input in a flow
	TargetInput string `pulumi:"targetInput"`
}

// Data connection configuration
type FlowVersionFlowDataConnectionConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowDataConnectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowDataConnectionConfiguration)(nil)).Elem()
}

func (o FlowVersionFlowDataConnectionConfigurationOutput) ToFlowVersionFlowDataConnectionConfigurationOutput() FlowVersionFlowDataConnectionConfigurationOutput {
	return o
}

func (o FlowVersionFlowDataConnectionConfigurationOutput) ToFlowVersionFlowDataConnectionConfigurationOutputWithContext(ctx context.Context) FlowVersionFlowDataConnectionConfigurationOutput {
	return o
}

// Name of a node output in a flow
func (o FlowVersionFlowDataConnectionConfigurationOutput) SourceOutput() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionFlowDataConnectionConfiguration) string { return v.SourceOutput }).(pulumi.StringOutput)
}

// Name of a node input in a flow
func (o FlowVersionFlowDataConnectionConfigurationOutput) TargetInput() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionFlowDataConnectionConfiguration) string { return v.TargetInput }).(pulumi.StringOutput)
}

type FlowVersionFlowDataConnectionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowDataConnectionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowDataConnectionConfiguration)(nil)).Elem()
}

func (o FlowVersionFlowDataConnectionConfigurationPtrOutput) ToFlowVersionFlowDataConnectionConfigurationPtrOutput() FlowVersionFlowDataConnectionConfigurationPtrOutput {
	return o
}

func (o FlowVersionFlowDataConnectionConfigurationPtrOutput) ToFlowVersionFlowDataConnectionConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionFlowDataConnectionConfigurationPtrOutput {
	return o
}

func (o FlowVersionFlowDataConnectionConfigurationPtrOutput) Elem() FlowVersionFlowDataConnectionConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionFlowDataConnectionConfiguration) FlowVersionFlowDataConnectionConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowDataConnectionConfiguration
		return ret
	}).(FlowVersionFlowDataConnectionConfigurationOutput)
}

// Name of a node output in a flow
func (o FlowVersionFlowDataConnectionConfigurationPtrOutput) SourceOutput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowDataConnectionConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SourceOutput
	}).(pulumi.StringPtrOutput)
}

// Name of a node input in a flow
func (o FlowVersionFlowDataConnectionConfigurationPtrOutput) TargetInput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowDataConnectionConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TargetInput
	}).(pulumi.StringPtrOutput)
}

// Flow definition
type FlowVersionFlowDefinition struct {
	// List of connections
	Connections []FlowVersionFlowConnection `pulumi:"connections"`
	// List of nodes in a flow
	Nodes []FlowVersionFlowNode `pulumi:"nodes"`
}

// Flow definition
type FlowVersionFlowDefinitionOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowDefinition)(nil)).Elem()
}

func (o FlowVersionFlowDefinitionOutput) ToFlowVersionFlowDefinitionOutput() FlowVersionFlowDefinitionOutput {
	return o
}

func (o FlowVersionFlowDefinitionOutput) ToFlowVersionFlowDefinitionOutputWithContext(ctx context.Context) FlowVersionFlowDefinitionOutput {
	return o
}

// List of connections
func (o FlowVersionFlowDefinitionOutput) Connections() FlowVersionFlowConnectionArrayOutput {
	return o.ApplyT(func(v FlowVersionFlowDefinition) []FlowVersionFlowConnection { return v.Connections }).(FlowVersionFlowConnectionArrayOutput)
}

// List of nodes in a flow
func (o FlowVersionFlowDefinitionOutput) Nodes() FlowVersionFlowNodeArrayOutput {
	return o.ApplyT(func(v FlowVersionFlowDefinition) []FlowVersionFlowNode { return v.Nodes }).(FlowVersionFlowNodeArrayOutput)
}

type FlowVersionFlowDefinitionPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowDefinition)(nil)).Elem()
}

func (o FlowVersionFlowDefinitionPtrOutput) ToFlowVersionFlowDefinitionPtrOutput() FlowVersionFlowDefinitionPtrOutput {
	return o
}

func (o FlowVersionFlowDefinitionPtrOutput) ToFlowVersionFlowDefinitionPtrOutputWithContext(ctx context.Context) FlowVersionFlowDefinitionPtrOutput {
	return o
}

func (o FlowVersionFlowDefinitionPtrOutput) Elem() FlowVersionFlowDefinitionOutput {
	return o.ApplyT(func(v *FlowVersionFlowDefinition) FlowVersionFlowDefinition {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowDefinition
		return ret
	}).(FlowVersionFlowDefinitionOutput)
}

// List of connections
func (o FlowVersionFlowDefinitionPtrOutput) Connections() FlowVersionFlowConnectionArrayOutput {
	return o.ApplyT(func(v *FlowVersionFlowDefinition) []FlowVersionFlowConnection {
		if v == nil {
			return nil
		}
		return v.Connections
	}).(FlowVersionFlowConnectionArrayOutput)
}

// List of nodes in a flow
func (o FlowVersionFlowDefinitionPtrOutput) Nodes() FlowVersionFlowNodeArrayOutput {
	return o.ApplyT(func(v *FlowVersionFlowDefinition) []FlowVersionFlowNode {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(FlowVersionFlowNodeArrayOutput)
}

// Internal mixin for flow node
type FlowVersionFlowNode struct {
	// Contains configurations for the node.
	Configuration interface{} `pulumi:"configuration"`
	// List of node inputs in a flow
	Inputs []FlowVersionFlowNodeInputType `pulumi:"inputs"`
	// Name of a node in a flow
	Name string `pulumi:"name"`
	// List of node outputs in a flow
	Outputs []FlowVersionFlowNodeOutputType `pulumi:"outputs"`
	// The type of node. This value must match the name of the key that you provide in the configuration you provide in the `FlowNodeConfiguration` field.
	Type FlowVersionFlowNodeType `pulumi:"type"`
}

// Internal mixin for flow node
type FlowVersionFlowNodeOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNode)(nil)).Elem()
}

func (o FlowVersionFlowNodeOutput) ToFlowVersionFlowNodeOutput() FlowVersionFlowNodeOutput {
	return o
}

func (o FlowVersionFlowNodeOutput) ToFlowVersionFlowNodeOutputWithContext(ctx context.Context) FlowVersionFlowNodeOutput {
	return o
}

// Contains configurations for the node.
func (o FlowVersionFlowNodeOutput) Configuration() pulumi.AnyOutput {
	return o.ApplyT(func(v FlowVersionFlowNode) interface{} { return v.Configuration }).(pulumi.AnyOutput)
}

// List of node inputs in a flow
func (o FlowVersionFlowNodeOutput) Inputs() FlowVersionFlowNodeInputTypeArrayOutput {
	return o.ApplyT(func(v FlowVersionFlowNode) []FlowVersionFlowNodeInputType { return v.Inputs }).(FlowVersionFlowNodeInputTypeArrayOutput)
}

// Name of a node in a flow
func (o FlowVersionFlowNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionFlowNode) string { return v.Name }).(pulumi.StringOutput)
}

// List of node outputs in a flow
func (o FlowVersionFlowNodeOutput) Outputs() FlowVersionFlowNodeOutputTypeArrayOutput {
	return o.ApplyT(func(v FlowVersionFlowNode) []FlowVersionFlowNodeOutputType { return v.Outputs }).(FlowVersionFlowNodeOutputTypeArrayOutput)
}

// The type of node. This value must match the name of the key that you provide in the configuration you provide in the `FlowNodeConfiguration` field.
func (o FlowVersionFlowNodeOutput) Type() FlowVersionFlowNodeTypeOutput {
	return o.ApplyT(func(v FlowVersionFlowNode) FlowVersionFlowNodeType { return v.Type }).(FlowVersionFlowNodeTypeOutput)
}

type FlowVersionFlowNodeArrayOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowVersionFlowNode)(nil)).Elem()
}

func (o FlowVersionFlowNodeArrayOutput) ToFlowVersionFlowNodeArrayOutput() FlowVersionFlowNodeArrayOutput {
	return o
}

func (o FlowVersionFlowNodeArrayOutput) ToFlowVersionFlowNodeArrayOutputWithContext(ctx context.Context) FlowVersionFlowNodeArrayOutput {
	return o
}

func (o FlowVersionFlowNodeArrayOutput) Index(i pulumi.IntInput) FlowVersionFlowNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowVersionFlowNode {
		return vs[0].([]FlowVersionFlowNode)[vs[1].(int)]
	}).(FlowVersionFlowNodeOutput)
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration0Properties struct {
	Input FlowVersionInputFlowNodeConfiguration `pulumi:"input"`
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration0PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeConfiguration0Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration0PropertiesOutput) ToFlowVersionFlowNodeConfiguration0PropertiesOutput() FlowVersionFlowNodeConfiguration0PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration0PropertiesOutput) ToFlowVersionFlowNodeConfiguration0PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration0PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration0PropertiesOutput) Input() FlowVersionInputFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeConfiguration0Properties) FlowVersionInputFlowNodeConfiguration {
		return v.Input
	}).(FlowVersionInputFlowNodeConfigurationOutput)
}

type FlowVersionFlowNodeConfiguration0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowNodeConfiguration0Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration0PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration0PropertiesPtrOutput() FlowVersionFlowNodeConfiguration0PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration0PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration0PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration0PropertiesPtrOutput) Elem() FlowVersionFlowNodeConfiguration0PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration0Properties) FlowVersionFlowNodeConfiguration0Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowNodeConfiguration0Properties
		return ret
	}).(FlowVersionFlowNodeConfiguration0PropertiesOutput)
}

func (o FlowVersionFlowNodeConfiguration0PropertiesPtrOutput) Input() FlowVersionInputFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration0Properties) *FlowVersionInputFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Input
	}).(FlowVersionInputFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration10Properties struct {
	Iterator FlowVersionIteratorFlowNodeConfiguration `pulumi:"iterator"`
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration10PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration10PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeConfiguration10Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration10PropertiesOutput) ToFlowVersionFlowNodeConfiguration10PropertiesOutput() FlowVersionFlowNodeConfiguration10PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration10PropertiesOutput) ToFlowVersionFlowNodeConfiguration10PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration10PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration10PropertiesOutput) Iterator() FlowVersionIteratorFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeConfiguration10Properties) FlowVersionIteratorFlowNodeConfiguration {
		return v.Iterator
	}).(FlowVersionIteratorFlowNodeConfigurationOutput)
}

type FlowVersionFlowNodeConfiguration10PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration10PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowNodeConfiguration10Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration10PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration10PropertiesPtrOutput() FlowVersionFlowNodeConfiguration10PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration10PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration10PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration10PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration10PropertiesPtrOutput) Elem() FlowVersionFlowNodeConfiguration10PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration10Properties) FlowVersionFlowNodeConfiguration10Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowNodeConfiguration10Properties
		return ret
	}).(FlowVersionFlowNodeConfiguration10PropertiesOutput)
}

func (o FlowVersionFlowNodeConfiguration10PropertiesPtrOutput) Iterator() FlowVersionIteratorFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration10Properties) *FlowVersionIteratorFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Iterator
	}).(FlowVersionIteratorFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration11Properties struct {
	Collector FlowVersionCollectorFlowNodeConfiguration `pulumi:"collector"`
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration11PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration11PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeConfiguration11Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration11PropertiesOutput) ToFlowVersionFlowNodeConfiguration11PropertiesOutput() FlowVersionFlowNodeConfiguration11PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration11PropertiesOutput) ToFlowVersionFlowNodeConfiguration11PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration11PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration11PropertiesOutput) Collector() FlowVersionCollectorFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeConfiguration11Properties) FlowVersionCollectorFlowNodeConfiguration {
		return v.Collector
	}).(FlowVersionCollectorFlowNodeConfigurationOutput)
}

type FlowVersionFlowNodeConfiguration11PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration11PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowNodeConfiguration11Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration11PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration11PropertiesPtrOutput() FlowVersionFlowNodeConfiguration11PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration11PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration11PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration11PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration11PropertiesPtrOutput) Elem() FlowVersionFlowNodeConfiguration11PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration11Properties) FlowVersionFlowNodeConfiguration11Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowNodeConfiguration11Properties
		return ret
	}).(FlowVersionFlowNodeConfiguration11PropertiesOutput)
}

func (o FlowVersionFlowNodeConfiguration11PropertiesPtrOutput) Collector() FlowVersionCollectorFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration11Properties) *FlowVersionCollectorFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Collector
	}).(FlowVersionCollectorFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration1Properties struct {
	Output FlowVersionOutputFlowNodeConfiguration `pulumi:"output"`
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration1PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeConfiguration1Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration1PropertiesOutput) ToFlowVersionFlowNodeConfiguration1PropertiesOutput() FlowVersionFlowNodeConfiguration1PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration1PropertiesOutput) ToFlowVersionFlowNodeConfiguration1PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration1PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration1PropertiesOutput) Output() FlowVersionOutputFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeConfiguration1Properties) FlowVersionOutputFlowNodeConfiguration {
		return v.Output
	}).(FlowVersionOutputFlowNodeConfigurationOutput)
}

type FlowVersionFlowNodeConfiguration1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowNodeConfiguration1Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration1PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration1PropertiesPtrOutput() FlowVersionFlowNodeConfiguration1PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration1PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration1PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration1PropertiesPtrOutput) Elem() FlowVersionFlowNodeConfiguration1PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration1Properties) FlowVersionFlowNodeConfiguration1Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowNodeConfiguration1Properties
		return ret
	}).(FlowVersionFlowNodeConfiguration1PropertiesOutput)
}

func (o FlowVersionFlowNodeConfiguration1PropertiesPtrOutput) Output() FlowVersionOutputFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration1Properties) *FlowVersionOutputFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Output
	}).(FlowVersionOutputFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration2Properties struct {
	KnowledgeBase FlowVersionKnowledgeBaseFlowNodeConfiguration `pulumi:"knowledgeBase"`
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration2PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration2PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeConfiguration2Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration2PropertiesOutput) ToFlowVersionFlowNodeConfiguration2PropertiesOutput() FlowVersionFlowNodeConfiguration2PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration2PropertiesOutput) ToFlowVersionFlowNodeConfiguration2PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration2PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration2PropertiesOutput) KnowledgeBase() FlowVersionKnowledgeBaseFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeConfiguration2Properties) FlowVersionKnowledgeBaseFlowNodeConfiguration {
		return v.KnowledgeBase
	}).(FlowVersionKnowledgeBaseFlowNodeConfigurationOutput)
}

type FlowVersionFlowNodeConfiguration2PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration2PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowNodeConfiguration2Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration2PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration2PropertiesPtrOutput() FlowVersionFlowNodeConfiguration2PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration2PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration2PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration2PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration2PropertiesPtrOutput) Elem() FlowVersionFlowNodeConfiguration2PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration2Properties) FlowVersionFlowNodeConfiguration2Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowNodeConfiguration2Properties
		return ret
	}).(FlowVersionFlowNodeConfiguration2PropertiesOutput)
}

func (o FlowVersionFlowNodeConfiguration2PropertiesPtrOutput) KnowledgeBase() FlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration2Properties) *FlowVersionKnowledgeBaseFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.KnowledgeBase
	}).(FlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration3Properties struct {
	Condition FlowVersionConditionFlowNodeConfiguration `pulumi:"condition"`
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration3PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration3PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeConfiguration3Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration3PropertiesOutput) ToFlowVersionFlowNodeConfiguration3PropertiesOutput() FlowVersionFlowNodeConfiguration3PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration3PropertiesOutput) ToFlowVersionFlowNodeConfiguration3PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration3PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration3PropertiesOutput) Condition() FlowVersionConditionFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeConfiguration3Properties) FlowVersionConditionFlowNodeConfiguration {
		return v.Condition
	}).(FlowVersionConditionFlowNodeConfigurationOutput)
}

type FlowVersionFlowNodeConfiguration3PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration3PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowNodeConfiguration3Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration3PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration3PropertiesPtrOutput() FlowVersionFlowNodeConfiguration3PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration3PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration3PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration3PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration3PropertiesPtrOutput) Elem() FlowVersionFlowNodeConfiguration3PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration3Properties) FlowVersionFlowNodeConfiguration3Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowNodeConfiguration3Properties
		return ret
	}).(FlowVersionFlowNodeConfiguration3PropertiesOutput)
}

func (o FlowVersionFlowNodeConfiguration3PropertiesPtrOutput) Condition() FlowVersionConditionFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration3Properties) *FlowVersionConditionFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Condition
	}).(FlowVersionConditionFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration4Properties struct {
	Lex FlowVersionLexFlowNodeConfiguration `pulumi:"lex"`
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration4PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration4PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeConfiguration4Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration4PropertiesOutput) ToFlowVersionFlowNodeConfiguration4PropertiesOutput() FlowVersionFlowNodeConfiguration4PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration4PropertiesOutput) ToFlowVersionFlowNodeConfiguration4PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration4PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration4PropertiesOutput) Lex() FlowVersionLexFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeConfiguration4Properties) FlowVersionLexFlowNodeConfiguration { return v.Lex }).(FlowVersionLexFlowNodeConfigurationOutput)
}

type FlowVersionFlowNodeConfiguration4PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration4PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowNodeConfiguration4Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration4PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration4PropertiesPtrOutput() FlowVersionFlowNodeConfiguration4PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration4PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration4PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration4PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration4PropertiesPtrOutput) Elem() FlowVersionFlowNodeConfiguration4PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration4Properties) FlowVersionFlowNodeConfiguration4Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowNodeConfiguration4Properties
		return ret
	}).(FlowVersionFlowNodeConfiguration4PropertiesOutput)
}

func (o FlowVersionFlowNodeConfiguration4PropertiesPtrOutput) Lex() FlowVersionLexFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration4Properties) *FlowVersionLexFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Lex
	}).(FlowVersionLexFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration5Properties struct {
	Prompt FlowVersionPromptFlowNodeConfiguration `pulumi:"prompt"`
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration5PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration5PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeConfiguration5Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration5PropertiesOutput) ToFlowVersionFlowNodeConfiguration5PropertiesOutput() FlowVersionFlowNodeConfiguration5PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration5PropertiesOutput) ToFlowVersionFlowNodeConfiguration5PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration5PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration5PropertiesOutput) Prompt() FlowVersionPromptFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeConfiguration5Properties) FlowVersionPromptFlowNodeConfiguration {
		return v.Prompt
	}).(FlowVersionPromptFlowNodeConfigurationOutput)
}

type FlowVersionFlowNodeConfiguration5PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration5PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowNodeConfiguration5Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration5PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration5PropertiesPtrOutput() FlowVersionFlowNodeConfiguration5PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration5PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration5PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration5PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration5PropertiesPtrOutput) Elem() FlowVersionFlowNodeConfiguration5PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration5Properties) FlowVersionFlowNodeConfiguration5Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowNodeConfiguration5Properties
		return ret
	}).(FlowVersionFlowNodeConfiguration5PropertiesOutput)
}

func (o FlowVersionFlowNodeConfiguration5PropertiesPtrOutput) Prompt() FlowVersionPromptFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration5Properties) *FlowVersionPromptFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Prompt
	}).(FlowVersionPromptFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration6Properties struct {
	LambdaFunction FlowVersionLambdaFunctionFlowNodeConfiguration `pulumi:"lambdaFunction"`
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration6PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration6PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeConfiguration6Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration6PropertiesOutput) ToFlowVersionFlowNodeConfiguration6PropertiesOutput() FlowVersionFlowNodeConfiguration6PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration6PropertiesOutput) ToFlowVersionFlowNodeConfiguration6PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration6PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration6PropertiesOutput) LambdaFunction() FlowVersionLambdaFunctionFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeConfiguration6Properties) FlowVersionLambdaFunctionFlowNodeConfiguration {
		return v.LambdaFunction
	}).(FlowVersionLambdaFunctionFlowNodeConfigurationOutput)
}

type FlowVersionFlowNodeConfiguration6PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration6PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowNodeConfiguration6Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration6PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration6PropertiesPtrOutput() FlowVersionFlowNodeConfiguration6PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration6PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration6PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration6PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration6PropertiesPtrOutput) Elem() FlowVersionFlowNodeConfiguration6PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration6Properties) FlowVersionFlowNodeConfiguration6Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowNodeConfiguration6Properties
		return ret
	}).(FlowVersionFlowNodeConfiguration6PropertiesOutput)
}

func (o FlowVersionFlowNodeConfiguration6PropertiesPtrOutput) LambdaFunction() FlowVersionLambdaFunctionFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration6Properties) *FlowVersionLambdaFunctionFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.LambdaFunction
	}).(FlowVersionLambdaFunctionFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration7Properties struct {
	Agent FlowVersionAgentFlowNodeConfiguration `pulumi:"agent"`
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration7PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration7PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeConfiguration7Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration7PropertiesOutput) ToFlowVersionFlowNodeConfiguration7PropertiesOutput() FlowVersionFlowNodeConfiguration7PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration7PropertiesOutput) ToFlowVersionFlowNodeConfiguration7PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration7PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration7PropertiesOutput) Agent() FlowVersionAgentFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeConfiguration7Properties) FlowVersionAgentFlowNodeConfiguration {
		return v.Agent
	}).(FlowVersionAgentFlowNodeConfigurationOutput)
}

type FlowVersionFlowNodeConfiguration7PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration7PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowNodeConfiguration7Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration7PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration7PropertiesPtrOutput() FlowVersionFlowNodeConfiguration7PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration7PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration7PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration7PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration7PropertiesPtrOutput) Elem() FlowVersionFlowNodeConfiguration7PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration7Properties) FlowVersionFlowNodeConfiguration7Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowNodeConfiguration7Properties
		return ret
	}).(FlowVersionFlowNodeConfiguration7PropertiesOutput)
}

func (o FlowVersionFlowNodeConfiguration7PropertiesPtrOutput) Agent() FlowVersionAgentFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration7Properties) *FlowVersionAgentFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Agent
	}).(FlowVersionAgentFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration8Properties struct {
	Storage FlowVersionStorageFlowNodeConfiguration `pulumi:"storage"`
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration8PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration8PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeConfiguration8Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration8PropertiesOutput) ToFlowVersionFlowNodeConfiguration8PropertiesOutput() FlowVersionFlowNodeConfiguration8PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration8PropertiesOutput) ToFlowVersionFlowNodeConfiguration8PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration8PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration8PropertiesOutput) Storage() FlowVersionStorageFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeConfiguration8Properties) FlowVersionStorageFlowNodeConfiguration {
		return v.Storage
	}).(FlowVersionStorageFlowNodeConfigurationOutput)
}

type FlowVersionFlowNodeConfiguration8PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration8PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowNodeConfiguration8Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration8PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration8PropertiesPtrOutput() FlowVersionFlowNodeConfiguration8PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration8PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration8PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration8PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration8PropertiesPtrOutput) Elem() FlowVersionFlowNodeConfiguration8PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration8Properties) FlowVersionFlowNodeConfiguration8Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowNodeConfiguration8Properties
		return ret
	}).(FlowVersionFlowNodeConfiguration8PropertiesOutput)
}

func (o FlowVersionFlowNodeConfiguration8PropertiesPtrOutput) Storage() FlowVersionStorageFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration8Properties) *FlowVersionStorageFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Storage
	}).(FlowVersionStorageFlowNodeConfigurationPtrOutput)
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration9Properties struct {
	Retrieval FlowVersionRetrievalFlowNodeConfiguration `pulumi:"retrieval"`
}

// Node configuration in a flow
type FlowVersionFlowNodeConfiguration9PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration9PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeConfiguration9Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration9PropertiesOutput) ToFlowVersionFlowNodeConfiguration9PropertiesOutput() FlowVersionFlowNodeConfiguration9PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration9PropertiesOutput) ToFlowVersionFlowNodeConfiguration9PropertiesOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration9PropertiesOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration9PropertiesOutput) Retrieval() FlowVersionRetrievalFlowNodeConfigurationOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeConfiguration9Properties) FlowVersionRetrievalFlowNodeConfiguration {
		return v.Retrieval
	}).(FlowVersionRetrievalFlowNodeConfigurationOutput)
}

type FlowVersionFlowNodeConfiguration9PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeConfiguration9PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionFlowNodeConfiguration9Properties)(nil)).Elem()
}

func (o FlowVersionFlowNodeConfiguration9PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration9PropertiesPtrOutput() FlowVersionFlowNodeConfiguration9PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration9PropertiesPtrOutput) ToFlowVersionFlowNodeConfiguration9PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionFlowNodeConfiguration9PropertiesPtrOutput {
	return o
}

func (o FlowVersionFlowNodeConfiguration9PropertiesPtrOutput) Elem() FlowVersionFlowNodeConfiguration9PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration9Properties) FlowVersionFlowNodeConfiguration9Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionFlowNodeConfiguration9Properties
		return ret
	}).(FlowVersionFlowNodeConfiguration9PropertiesOutput)
}

func (o FlowVersionFlowNodeConfiguration9PropertiesPtrOutput) Retrieval() FlowVersionRetrievalFlowNodeConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionFlowNodeConfiguration9Properties) *FlowVersionRetrievalFlowNodeConfiguration {
		if v == nil {
			return nil
		}
		return &v.Retrieval
	}).(FlowVersionRetrievalFlowNodeConfigurationPtrOutput)
}

// Input to a node in a flow
type FlowVersionFlowNodeInputType struct {
	// Expression for a node input in a flow
	Expression string `pulumi:"expression"`
	// Name of a node input in a flow
	Name string `pulumi:"name"`
	// The data type of the input. If the input doesn't match this type at runtime, a validation error will be thrown.
	Type FlowVersionFlowNodeIoDataType `pulumi:"type"`
}

// Input to a node in a flow
type FlowVersionFlowNodeInputTypeOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeInputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeInputType)(nil)).Elem()
}

func (o FlowVersionFlowNodeInputTypeOutput) ToFlowVersionFlowNodeInputTypeOutput() FlowVersionFlowNodeInputTypeOutput {
	return o
}

func (o FlowVersionFlowNodeInputTypeOutput) ToFlowVersionFlowNodeInputTypeOutputWithContext(ctx context.Context) FlowVersionFlowNodeInputTypeOutput {
	return o
}

// Expression for a node input in a flow
func (o FlowVersionFlowNodeInputTypeOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeInputType) string { return v.Expression }).(pulumi.StringOutput)
}

// Name of a node input in a flow
func (o FlowVersionFlowNodeInputTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeInputType) string { return v.Name }).(pulumi.StringOutput)
}

// The data type of the input. If the input doesn't match this type at runtime, a validation error will be thrown.
func (o FlowVersionFlowNodeInputTypeOutput) Type() FlowVersionFlowNodeIoDataTypeOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeInputType) FlowVersionFlowNodeIoDataType { return v.Type }).(FlowVersionFlowNodeIoDataTypeOutput)
}

type FlowVersionFlowNodeInputTypeArrayOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeInputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowVersionFlowNodeInputType)(nil)).Elem()
}

func (o FlowVersionFlowNodeInputTypeArrayOutput) ToFlowVersionFlowNodeInputTypeArrayOutput() FlowVersionFlowNodeInputTypeArrayOutput {
	return o
}

func (o FlowVersionFlowNodeInputTypeArrayOutput) ToFlowVersionFlowNodeInputTypeArrayOutputWithContext(ctx context.Context) FlowVersionFlowNodeInputTypeArrayOutput {
	return o
}

func (o FlowVersionFlowNodeInputTypeArrayOutput) Index(i pulumi.IntInput) FlowVersionFlowNodeInputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowVersionFlowNodeInputType {
		return vs[0].([]FlowVersionFlowNodeInputType)[vs[1].(int)]
	}).(FlowVersionFlowNodeInputTypeOutput)
}

// Output of a node in a flow
type FlowVersionFlowNodeOutputType struct {
	// Name of a node output in a flow
	Name string `pulumi:"name"`
	// The data type of the output. If the output doesn't match this type at runtime, a validation error will be thrown.
	Type FlowVersionFlowNodeIoDataType `pulumi:"type"`
}

// Output of a node in a flow
type FlowVersionFlowNodeOutputTypeOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeOutputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionFlowNodeOutputType)(nil)).Elem()
}

func (o FlowVersionFlowNodeOutputTypeOutput) ToFlowVersionFlowNodeOutputTypeOutput() FlowVersionFlowNodeOutputTypeOutput {
	return o
}

func (o FlowVersionFlowNodeOutputTypeOutput) ToFlowVersionFlowNodeOutputTypeOutputWithContext(ctx context.Context) FlowVersionFlowNodeOutputTypeOutput {
	return o
}

// Name of a node output in a flow
func (o FlowVersionFlowNodeOutputTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeOutputType) string { return v.Name }).(pulumi.StringOutput)
}

// The data type of the output. If the output doesn't match this type at runtime, a validation error will be thrown.
func (o FlowVersionFlowNodeOutputTypeOutput) Type() FlowVersionFlowNodeIoDataTypeOutput {
	return o.ApplyT(func(v FlowVersionFlowNodeOutputType) FlowVersionFlowNodeIoDataType { return v.Type }).(FlowVersionFlowNodeIoDataTypeOutput)
}

type FlowVersionFlowNodeOutputTypeArrayOutput struct{ *pulumi.OutputState }

func (FlowVersionFlowNodeOutputTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowVersionFlowNodeOutputType)(nil)).Elem()
}

func (o FlowVersionFlowNodeOutputTypeArrayOutput) ToFlowVersionFlowNodeOutputTypeArrayOutput() FlowVersionFlowNodeOutputTypeArrayOutput {
	return o
}

func (o FlowVersionFlowNodeOutputTypeArrayOutput) ToFlowVersionFlowNodeOutputTypeArrayOutputWithContext(ctx context.Context) FlowVersionFlowNodeOutputTypeArrayOutput {
	return o
}

func (o FlowVersionFlowNodeOutputTypeArrayOutput) Index(i pulumi.IntInput) FlowVersionFlowNodeOutputTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowVersionFlowNodeOutputType {
		return vs[0].([]FlowVersionFlowNodeOutputType)[vs[1].(int)]
	}).(FlowVersionFlowNodeOutputTypeOutput)
}

// Input flow node configuration
type FlowVersionInputFlowNodeConfiguration struct {
}

// Input flow node configuration
type FlowVersionInputFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionInputFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionInputFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionInputFlowNodeConfigurationOutput) ToFlowVersionInputFlowNodeConfigurationOutput() FlowVersionInputFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionInputFlowNodeConfigurationOutput) ToFlowVersionInputFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowVersionInputFlowNodeConfigurationOutput {
	return o
}

type FlowVersionInputFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionInputFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionInputFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionInputFlowNodeConfigurationPtrOutput) ToFlowVersionInputFlowNodeConfigurationPtrOutput() FlowVersionInputFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionInputFlowNodeConfigurationPtrOutput) ToFlowVersionInputFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionInputFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionInputFlowNodeConfigurationPtrOutput) Elem() FlowVersionInputFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionInputFlowNodeConfiguration) FlowVersionInputFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionInputFlowNodeConfiguration
		return ret
	}).(FlowVersionInputFlowNodeConfigurationOutput)
}

// Iterator flow node configuration
type FlowVersionIteratorFlowNodeConfiguration struct {
}

// Iterator flow node configuration
type FlowVersionIteratorFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionIteratorFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionIteratorFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionIteratorFlowNodeConfigurationOutput) ToFlowVersionIteratorFlowNodeConfigurationOutput() FlowVersionIteratorFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionIteratorFlowNodeConfigurationOutput) ToFlowVersionIteratorFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowVersionIteratorFlowNodeConfigurationOutput {
	return o
}

type FlowVersionIteratorFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionIteratorFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionIteratorFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionIteratorFlowNodeConfigurationPtrOutput) ToFlowVersionIteratorFlowNodeConfigurationPtrOutput() FlowVersionIteratorFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionIteratorFlowNodeConfigurationPtrOutput) ToFlowVersionIteratorFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionIteratorFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionIteratorFlowNodeConfigurationPtrOutput) Elem() FlowVersionIteratorFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionIteratorFlowNodeConfiguration) FlowVersionIteratorFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionIteratorFlowNodeConfiguration
		return ret
	}).(FlowVersionIteratorFlowNodeConfigurationOutput)
}

// Knowledge base flow node configuration
type FlowVersionKnowledgeBaseFlowNodeConfiguration struct {
	// Identifier of the KnowledgeBase
	KnowledgeBaseId string `pulumi:"knowledgeBaseId"`
	// ARN or name of a Bedrock model.
	ModelId *string `pulumi:"modelId"`
}

// Knowledge base flow node configuration
type FlowVersionKnowledgeBaseFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionKnowledgeBaseFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionKnowledgeBaseFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionKnowledgeBaseFlowNodeConfigurationOutput) ToFlowVersionKnowledgeBaseFlowNodeConfigurationOutput() FlowVersionKnowledgeBaseFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionKnowledgeBaseFlowNodeConfigurationOutput) ToFlowVersionKnowledgeBaseFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowVersionKnowledgeBaseFlowNodeConfigurationOutput {
	return o
}

// Identifier of the KnowledgeBase
func (o FlowVersionKnowledgeBaseFlowNodeConfigurationOutput) KnowledgeBaseId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionKnowledgeBaseFlowNodeConfiguration) string { return v.KnowledgeBaseId }).(pulumi.StringOutput)
}

// ARN or name of a Bedrock model.
func (o FlowVersionKnowledgeBaseFlowNodeConfigurationOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowVersionKnowledgeBaseFlowNodeConfiguration) *string { return v.ModelId }).(pulumi.StringPtrOutput)
}

type FlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionKnowledgeBaseFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput) ToFlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput() FlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput) ToFlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput) Elem() FlowVersionKnowledgeBaseFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionKnowledgeBaseFlowNodeConfiguration) FlowVersionKnowledgeBaseFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionKnowledgeBaseFlowNodeConfiguration
		return ret
	}).(FlowVersionKnowledgeBaseFlowNodeConfigurationOutput)
}

// Identifier of the KnowledgeBase
func (o FlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput) KnowledgeBaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionKnowledgeBaseFlowNodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.KnowledgeBaseId
	}).(pulumi.StringPtrOutput)
}

// ARN or name of a Bedrock model.
func (o FlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionKnowledgeBaseFlowNodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ModelId
	}).(pulumi.StringPtrOutput)
}

// Lambda function flow node configuration
type FlowVersionLambdaFunctionFlowNodeConfiguration struct {
	// ARN of a Lambda.
	LambdaArn string `pulumi:"lambdaArn"`
}

// Lambda function flow node configuration
type FlowVersionLambdaFunctionFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionLambdaFunctionFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionLambdaFunctionFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionLambdaFunctionFlowNodeConfigurationOutput) ToFlowVersionLambdaFunctionFlowNodeConfigurationOutput() FlowVersionLambdaFunctionFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionLambdaFunctionFlowNodeConfigurationOutput) ToFlowVersionLambdaFunctionFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowVersionLambdaFunctionFlowNodeConfigurationOutput {
	return o
}

// ARN of a Lambda.
func (o FlowVersionLambdaFunctionFlowNodeConfigurationOutput) LambdaArn() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionLambdaFunctionFlowNodeConfiguration) string { return v.LambdaArn }).(pulumi.StringOutput)
}

type FlowVersionLambdaFunctionFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionLambdaFunctionFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionLambdaFunctionFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionLambdaFunctionFlowNodeConfigurationPtrOutput) ToFlowVersionLambdaFunctionFlowNodeConfigurationPtrOutput() FlowVersionLambdaFunctionFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionLambdaFunctionFlowNodeConfigurationPtrOutput) ToFlowVersionLambdaFunctionFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionLambdaFunctionFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionLambdaFunctionFlowNodeConfigurationPtrOutput) Elem() FlowVersionLambdaFunctionFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionLambdaFunctionFlowNodeConfiguration) FlowVersionLambdaFunctionFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionLambdaFunctionFlowNodeConfiguration
		return ret
	}).(FlowVersionLambdaFunctionFlowNodeConfigurationOutput)
}

// ARN of a Lambda.
func (o FlowVersionLambdaFunctionFlowNodeConfigurationPtrOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionLambdaFunctionFlowNodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.LambdaArn
	}).(pulumi.StringPtrOutput)
}

// Lex flow node configuration
type FlowVersionLexFlowNodeConfiguration struct {
	// ARN of a Lex bot alias
	BotAliasArn string `pulumi:"botAliasArn"`
	// Lex bot locale id
	LocaleId string `pulumi:"localeId"`
}

// Lex flow node configuration
type FlowVersionLexFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionLexFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionLexFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionLexFlowNodeConfigurationOutput) ToFlowVersionLexFlowNodeConfigurationOutput() FlowVersionLexFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionLexFlowNodeConfigurationOutput) ToFlowVersionLexFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowVersionLexFlowNodeConfigurationOutput {
	return o
}

// ARN of a Lex bot alias
func (o FlowVersionLexFlowNodeConfigurationOutput) BotAliasArn() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionLexFlowNodeConfiguration) string { return v.BotAliasArn }).(pulumi.StringOutput)
}

// Lex bot locale id
func (o FlowVersionLexFlowNodeConfigurationOutput) LocaleId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionLexFlowNodeConfiguration) string { return v.LocaleId }).(pulumi.StringOutput)
}

type FlowVersionLexFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionLexFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionLexFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionLexFlowNodeConfigurationPtrOutput) ToFlowVersionLexFlowNodeConfigurationPtrOutput() FlowVersionLexFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionLexFlowNodeConfigurationPtrOutput) ToFlowVersionLexFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionLexFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionLexFlowNodeConfigurationPtrOutput) Elem() FlowVersionLexFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionLexFlowNodeConfiguration) FlowVersionLexFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionLexFlowNodeConfiguration
		return ret
	}).(FlowVersionLexFlowNodeConfigurationOutput)
}

// ARN of a Lex bot alias
func (o FlowVersionLexFlowNodeConfigurationPtrOutput) BotAliasArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionLexFlowNodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.BotAliasArn
	}).(pulumi.StringPtrOutput)
}

// Lex bot locale id
func (o FlowVersionLexFlowNodeConfigurationPtrOutput) LocaleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionLexFlowNodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.LocaleId
	}).(pulumi.StringPtrOutput)
}

// Output flow node configuration
type FlowVersionOutputFlowNodeConfiguration struct {
}

// Output flow node configuration
type FlowVersionOutputFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionOutputFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionOutputFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionOutputFlowNodeConfigurationOutput) ToFlowVersionOutputFlowNodeConfigurationOutput() FlowVersionOutputFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionOutputFlowNodeConfigurationOutput) ToFlowVersionOutputFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowVersionOutputFlowNodeConfigurationOutput {
	return o
}

type FlowVersionOutputFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionOutputFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionOutputFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionOutputFlowNodeConfigurationPtrOutput) ToFlowVersionOutputFlowNodeConfigurationPtrOutput() FlowVersionOutputFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionOutputFlowNodeConfigurationPtrOutput) ToFlowVersionOutputFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionOutputFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionOutputFlowNodeConfigurationPtrOutput) Elem() FlowVersionOutputFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionOutputFlowNodeConfiguration) FlowVersionOutputFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionOutputFlowNodeConfiguration
		return ret
	}).(FlowVersionOutputFlowNodeConfigurationOutput)
}

// Prompt flow node configuration
type FlowVersionPromptFlowNodeConfiguration struct {
	SourceConfiguration interface{} `pulumi:"sourceConfiguration"`
}

// Prompt flow node configuration
type FlowVersionPromptFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionPromptFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionPromptFlowNodeConfigurationOutput) ToFlowVersionPromptFlowNodeConfigurationOutput() FlowVersionPromptFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionPromptFlowNodeConfigurationOutput) ToFlowVersionPromptFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowVersionPromptFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionPromptFlowNodeConfigurationOutput) SourceConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v FlowVersionPromptFlowNodeConfiguration) interface{} { return v.SourceConfiguration }).(pulumi.AnyOutput)
}

type FlowVersionPromptFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionPromptFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionPromptFlowNodeConfigurationPtrOutput) ToFlowVersionPromptFlowNodeConfigurationPtrOutput() FlowVersionPromptFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionPromptFlowNodeConfigurationPtrOutput) ToFlowVersionPromptFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionPromptFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionPromptFlowNodeConfigurationPtrOutput) Elem() FlowVersionPromptFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeConfiguration) FlowVersionPromptFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionPromptFlowNodeConfiguration
		return ret
	}).(FlowVersionPromptFlowNodeConfigurationOutput)
}

func (o FlowVersionPromptFlowNodeConfigurationPtrOutput) SourceConfiguration() pulumi.AnyOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeConfiguration) interface{} {
		if v == nil {
			return nil
		}
		return v.SourceConfiguration
	}).(pulumi.AnyOutput)
}

// Inline prompt configuration for prompt node
type FlowVersionPromptFlowNodeInlineConfiguration struct {
	InferenceConfiguration *FlowVersionPromptInferenceConfigurationProperties `pulumi:"inferenceConfiguration"`
	// ARN or name of a Bedrock model.
	ModelId               string                                           `pulumi:"modelId"`
	TemplateConfiguration FlowVersionPromptTemplateConfigurationProperties `pulumi:"templateConfiguration"`
	TemplateType          FlowVersionPromptTemplateType                    `pulumi:"templateType"`
}

// Inline prompt configuration for prompt node
type FlowVersionPromptFlowNodeInlineConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptFlowNodeInlineConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionPromptFlowNodeInlineConfiguration)(nil)).Elem()
}

func (o FlowVersionPromptFlowNodeInlineConfigurationOutput) ToFlowVersionPromptFlowNodeInlineConfigurationOutput() FlowVersionPromptFlowNodeInlineConfigurationOutput {
	return o
}

func (o FlowVersionPromptFlowNodeInlineConfigurationOutput) ToFlowVersionPromptFlowNodeInlineConfigurationOutputWithContext(ctx context.Context) FlowVersionPromptFlowNodeInlineConfigurationOutput {
	return o
}

func (o FlowVersionPromptFlowNodeInlineConfigurationOutput) InferenceConfiguration() FlowVersionPromptInferenceConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v FlowVersionPromptFlowNodeInlineConfiguration) *FlowVersionPromptInferenceConfigurationProperties {
		return v.InferenceConfiguration
	}).(FlowVersionPromptInferenceConfigurationPropertiesPtrOutput)
}

// ARN or name of a Bedrock model.
func (o FlowVersionPromptFlowNodeInlineConfigurationOutput) ModelId() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionPromptFlowNodeInlineConfiguration) string { return v.ModelId }).(pulumi.StringOutput)
}

func (o FlowVersionPromptFlowNodeInlineConfigurationOutput) TemplateConfiguration() FlowVersionPromptTemplateConfigurationPropertiesOutput {
	return o.ApplyT(func(v FlowVersionPromptFlowNodeInlineConfiguration) FlowVersionPromptTemplateConfigurationProperties {
		return v.TemplateConfiguration
	}).(FlowVersionPromptTemplateConfigurationPropertiesOutput)
}

func (o FlowVersionPromptFlowNodeInlineConfigurationOutput) TemplateType() FlowVersionPromptTemplateTypeOutput {
	return o.ApplyT(func(v FlowVersionPromptFlowNodeInlineConfiguration) FlowVersionPromptTemplateType {
		return v.TemplateType
	}).(FlowVersionPromptTemplateTypeOutput)
}

type FlowVersionPromptFlowNodeInlineConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptFlowNodeInlineConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionPromptFlowNodeInlineConfiguration)(nil)).Elem()
}

func (o FlowVersionPromptFlowNodeInlineConfigurationPtrOutput) ToFlowVersionPromptFlowNodeInlineConfigurationPtrOutput() FlowVersionPromptFlowNodeInlineConfigurationPtrOutput {
	return o
}

func (o FlowVersionPromptFlowNodeInlineConfigurationPtrOutput) ToFlowVersionPromptFlowNodeInlineConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionPromptFlowNodeInlineConfigurationPtrOutput {
	return o
}

func (o FlowVersionPromptFlowNodeInlineConfigurationPtrOutput) Elem() FlowVersionPromptFlowNodeInlineConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeInlineConfiguration) FlowVersionPromptFlowNodeInlineConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionPromptFlowNodeInlineConfiguration
		return ret
	}).(FlowVersionPromptFlowNodeInlineConfigurationOutput)
}

func (o FlowVersionPromptFlowNodeInlineConfigurationPtrOutput) InferenceConfiguration() FlowVersionPromptInferenceConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeInlineConfiguration) *FlowVersionPromptInferenceConfigurationProperties {
		if v == nil {
			return nil
		}
		return v.InferenceConfiguration
	}).(FlowVersionPromptInferenceConfigurationPropertiesPtrOutput)
}

// ARN or name of a Bedrock model.
func (o FlowVersionPromptFlowNodeInlineConfigurationPtrOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeInlineConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ModelId
	}).(pulumi.StringPtrOutput)
}

func (o FlowVersionPromptFlowNodeInlineConfigurationPtrOutput) TemplateConfiguration() FlowVersionPromptTemplateConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeInlineConfiguration) *FlowVersionPromptTemplateConfigurationProperties {
		if v == nil {
			return nil
		}
		return &v.TemplateConfiguration
	}).(FlowVersionPromptTemplateConfigurationPropertiesPtrOutput)
}

func (o FlowVersionPromptFlowNodeInlineConfigurationPtrOutput) TemplateType() FlowVersionPromptTemplateTypePtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeInlineConfiguration) *FlowVersionPromptTemplateType {
		if v == nil {
			return nil
		}
		return &v.TemplateType
	}).(FlowVersionPromptTemplateTypePtrOutput)
}

// Resource prompt configuration for prompt node
type FlowVersionPromptFlowNodeResourceConfiguration struct {
	// ARN of a prompt resource possibly with a version
	PromptArn string `pulumi:"promptArn"`
}

// Resource prompt configuration for prompt node
type FlowVersionPromptFlowNodeResourceConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptFlowNodeResourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionPromptFlowNodeResourceConfiguration)(nil)).Elem()
}

func (o FlowVersionPromptFlowNodeResourceConfigurationOutput) ToFlowVersionPromptFlowNodeResourceConfigurationOutput() FlowVersionPromptFlowNodeResourceConfigurationOutput {
	return o
}

func (o FlowVersionPromptFlowNodeResourceConfigurationOutput) ToFlowVersionPromptFlowNodeResourceConfigurationOutputWithContext(ctx context.Context) FlowVersionPromptFlowNodeResourceConfigurationOutput {
	return o
}

// ARN of a prompt resource possibly with a version
func (o FlowVersionPromptFlowNodeResourceConfigurationOutput) PromptArn() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionPromptFlowNodeResourceConfiguration) string { return v.PromptArn }).(pulumi.StringOutput)
}

type FlowVersionPromptFlowNodeResourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptFlowNodeResourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionPromptFlowNodeResourceConfiguration)(nil)).Elem()
}

func (o FlowVersionPromptFlowNodeResourceConfigurationPtrOutput) ToFlowVersionPromptFlowNodeResourceConfigurationPtrOutput() FlowVersionPromptFlowNodeResourceConfigurationPtrOutput {
	return o
}

func (o FlowVersionPromptFlowNodeResourceConfigurationPtrOutput) ToFlowVersionPromptFlowNodeResourceConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionPromptFlowNodeResourceConfigurationPtrOutput {
	return o
}

func (o FlowVersionPromptFlowNodeResourceConfigurationPtrOutput) Elem() FlowVersionPromptFlowNodeResourceConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeResourceConfiguration) FlowVersionPromptFlowNodeResourceConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionPromptFlowNodeResourceConfiguration
		return ret
	}).(FlowVersionPromptFlowNodeResourceConfigurationOutput)
}

// ARN of a prompt resource possibly with a version
func (o FlowVersionPromptFlowNodeResourceConfigurationPtrOutput) PromptArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeResourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.PromptArn
	}).(pulumi.StringPtrOutput)
}

// Prompt source configuration for prompt node
type FlowVersionPromptFlowNodeSourceConfiguration0Properties struct {
	Resource FlowVersionPromptFlowNodeResourceConfiguration `pulumi:"resource"`
}

// Prompt source configuration for prompt node
type FlowVersionPromptFlowNodeSourceConfiguration0PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptFlowNodeSourceConfiguration0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionPromptFlowNodeSourceConfiguration0Properties)(nil)).Elem()
}

func (o FlowVersionPromptFlowNodeSourceConfiguration0PropertiesOutput) ToFlowVersionPromptFlowNodeSourceConfiguration0PropertiesOutput() FlowVersionPromptFlowNodeSourceConfiguration0PropertiesOutput {
	return o
}

func (o FlowVersionPromptFlowNodeSourceConfiguration0PropertiesOutput) ToFlowVersionPromptFlowNodeSourceConfiguration0PropertiesOutputWithContext(ctx context.Context) FlowVersionPromptFlowNodeSourceConfiguration0PropertiesOutput {
	return o
}

func (o FlowVersionPromptFlowNodeSourceConfiguration0PropertiesOutput) Resource() FlowVersionPromptFlowNodeResourceConfigurationOutput {
	return o.ApplyT(func(v FlowVersionPromptFlowNodeSourceConfiguration0Properties) FlowVersionPromptFlowNodeResourceConfiguration {
		return v.Resource
	}).(FlowVersionPromptFlowNodeResourceConfigurationOutput)
}

type FlowVersionPromptFlowNodeSourceConfiguration0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptFlowNodeSourceConfiguration0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionPromptFlowNodeSourceConfiguration0Properties)(nil)).Elem()
}

func (o FlowVersionPromptFlowNodeSourceConfiguration0PropertiesPtrOutput) ToFlowVersionPromptFlowNodeSourceConfiguration0PropertiesPtrOutput() FlowVersionPromptFlowNodeSourceConfiguration0PropertiesPtrOutput {
	return o
}

func (o FlowVersionPromptFlowNodeSourceConfiguration0PropertiesPtrOutput) ToFlowVersionPromptFlowNodeSourceConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionPromptFlowNodeSourceConfiguration0PropertiesPtrOutput {
	return o
}

func (o FlowVersionPromptFlowNodeSourceConfiguration0PropertiesPtrOutput) Elem() FlowVersionPromptFlowNodeSourceConfiguration0PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeSourceConfiguration0Properties) FlowVersionPromptFlowNodeSourceConfiguration0Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionPromptFlowNodeSourceConfiguration0Properties
		return ret
	}).(FlowVersionPromptFlowNodeSourceConfiguration0PropertiesOutput)
}

func (o FlowVersionPromptFlowNodeSourceConfiguration0PropertiesPtrOutput) Resource() FlowVersionPromptFlowNodeResourceConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeSourceConfiguration0Properties) *FlowVersionPromptFlowNodeResourceConfiguration {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(FlowVersionPromptFlowNodeResourceConfigurationPtrOutput)
}

// Prompt source configuration for prompt node
type FlowVersionPromptFlowNodeSourceConfiguration1Properties struct {
	Inline FlowVersionPromptFlowNodeInlineConfiguration `pulumi:"inline"`
}

// Prompt source configuration for prompt node
type FlowVersionPromptFlowNodeSourceConfiguration1PropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptFlowNodeSourceConfiguration1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionPromptFlowNodeSourceConfiguration1Properties)(nil)).Elem()
}

func (o FlowVersionPromptFlowNodeSourceConfiguration1PropertiesOutput) ToFlowVersionPromptFlowNodeSourceConfiguration1PropertiesOutput() FlowVersionPromptFlowNodeSourceConfiguration1PropertiesOutput {
	return o
}

func (o FlowVersionPromptFlowNodeSourceConfiguration1PropertiesOutput) ToFlowVersionPromptFlowNodeSourceConfiguration1PropertiesOutputWithContext(ctx context.Context) FlowVersionPromptFlowNodeSourceConfiguration1PropertiesOutput {
	return o
}

func (o FlowVersionPromptFlowNodeSourceConfiguration1PropertiesOutput) Inline() FlowVersionPromptFlowNodeInlineConfigurationOutput {
	return o.ApplyT(func(v FlowVersionPromptFlowNodeSourceConfiguration1Properties) FlowVersionPromptFlowNodeInlineConfiguration {
		return v.Inline
	}).(FlowVersionPromptFlowNodeInlineConfigurationOutput)
}

type FlowVersionPromptFlowNodeSourceConfiguration1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptFlowNodeSourceConfiguration1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionPromptFlowNodeSourceConfiguration1Properties)(nil)).Elem()
}

func (o FlowVersionPromptFlowNodeSourceConfiguration1PropertiesPtrOutput) ToFlowVersionPromptFlowNodeSourceConfiguration1PropertiesPtrOutput() FlowVersionPromptFlowNodeSourceConfiguration1PropertiesPtrOutput {
	return o
}

func (o FlowVersionPromptFlowNodeSourceConfiguration1PropertiesPtrOutput) ToFlowVersionPromptFlowNodeSourceConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FlowVersionPromptFlowNodeSourceConfiguration1PropertiesPtrOutput {
	return o
}

func (o FlowVersionPromptFlowNodeSourceConfiguration1PropertiesPtrOutput) Elem() FlowVersionPromptFlowNodeSourceConfiguration1PropertiesOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeSourceConfiguration1Properties) FlowVersionPromptFlowNodeSourceConfiguration1Properties {
		if v != nil {
			return *v
		}
		var ret FlowVersionPromptFlowNodeSourceConfiguration1Properties
		return ret
	}).(FlowVersionPromptFlowNodeSourceConfiguration1PropertiesOutput)
}

func (o FlowVersionPromptFlowNodeSourceConfiguration1PropertiesPtrOutput) Inline() FlowVersionPromptFlowNodeInlineConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptFlowNodeSourceConfiguration1Properties) *FlowVersionPromptFlowNodeInlineConfiguration {
		if v == nil {
			return nil
		}
		return &v.Inline
	}).(FlowVersionPromptFlowNodeInlineConfigurationPtrOutput)
}

// Model inference configuration
type FlowVersionPromptInferenceConfiguration0Properties struct {
	Text FlowVersionPromptModelInferenceConfiguration `pulumi:"text"`
}

// Model inference configuration
type FlowVersionPromptInferenceConfigurationProperties struct {
	Text FlowVersionPromptModelInferenceConfiguration `pulumi:"text"`
}

// Model inference configuration
type FlowVersionPromptInferenceConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptInferenceConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionPromptInferenceConfigurationProperties)(nil)).Elem()
}

func (o FlowVersionPromptInferenceConfigurationPropertiesOutput) ToFlowVersionPromptInferenceConfigurationPropertiesOutput() FlowVersionPromptInferenceConfigurationPropertiesOutput {
	return o
}

func (o FlowVersionPromptInferenceConfigurationPropertiesOutput) ToFlowVersionPromptInferenceConfigurationPropertiesOutputWithContext(ctx context.Context) FlowVersionPromptInferenceConfigurationPropertiesOutput {
	return o
}

func (o FlowVersionPromptInferenceConfigurationPropertiesOutput) Text() FlowVersionPromptModelInferenceConfigurationOutput {
	return o.ApplyT(func(v FlowVersionPromptInferenceConfigurationProperties) FlowVersionPromptModelInferenceConfiguration {
		return v.Text
	}).(FlowVersionPromptModelInferenceConfigurationOutput)
}

type FlowVersionPromptInferenceConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptInferenceConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionPromptInferenceConfigurationProperties)(nil)).Elem()
}

func (o FlowVersionPromptInferenceConfigurationPropertiesPtrOutput) ToFlowVersionPromptInferenceConfigurationPropertiesPtrOutput() FlowVersionPromptInferenceConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowVersionPromptInferenceConfigurationPropertiesPtrOutput) ToFlowVersionPromptInferenceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowVersionPromptInferenceConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowVersionPromptInferenceConfigurationPropertiesPtrOutput) Elem() FlowVersionPromptInferenceConfigurationPropertiesOutput {
	return o.ApplyT(func(v *FlowVersionPromptInferenceConfigurationProperties) FlowVersionPromptInferenceConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret FlowVersionPromptInferenceConfigurationProperties
		return ret
	}).(FlowVersionPromptInferenceConfigurationPropertiesOutput)
}

func (o FlowVersionPromptInferenceConfigurationPropertiesPtrOutput) Text() FlowVersionPromptModelInferenceConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptInferenceConfigurationProperties) *FlowVersionPromptModelInferenceConfiguration {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(FlowVersionPromptModelInferenceConfigurationPtrOutput)
}

// Input variable
type FlowVersionPromptInputVariable struct {
	// Name for an input variable
	Name *string `pulumi:"name"`
}

// Input variable
type FlowVersionPromptInputVariableOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptInputVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionPromptInputVariable)(nil)).Elem()
}

func (o FlowVersionPromptInputVariableOutput) ToFlowVersionPromptInputVariableOutput() FlowVersionPromptInputVariableOutput {
	return o
}

func (o FlowVersionPromptInputVariableOutput) ToFlowVersionPromptInputVariableOutputWithContext(ctx context.Context) FlowVersionPromptInputVariableOutput {
	return o
}

// Name for an input variable
func (o FlowVersionPromptInputVariableOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FlowVersionPromptInputVariable) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type FlowVersionPromptInputVariableArrayOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptInputVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FlowVersionPromptInputVariable)(nil)).Elem()
}

func (o FlowVersionPromptInputVariableArrayOutput) ToFlowVersionPromptInputVariableArrayOutput() FlowVersionPromptInputVariableArrayOutput {
	return o
}

func (o FlowVersionPromptInputVariableArrayOutput) ToFlowVersionPromptInputVariableArrayOutputWithContext(ctx context.Context) FlowVersionPromptInputVariableArrayOutput {
	return o
}

func (o FlowVersionPromptInputVariableArrayOutput) Index(i pulumi.IntInput) FlowVersionPromptInputVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FlowVersionPromptInputVariable {
		return vs[0].([]FlowVersionPromptInputVariable)[vs[1].(int)]
	}).(FlowVersionPromptInputVariableOutput)
}

// Prompt model inference configuration
type FlowVersionPromptModelInferenceConfiguration struct {
	// Maximum length of output
	MaxTokens *float64 `pulumi:"maxTokens"`
	// List of stop sequences
	StopSequences []string `pulumi:"stopSequences"`
	// Controls randomness, higher values increase diversity
	Temperature *float64 `pulumi:"temperature"`
	// Sample from the k most likely next tokens
	TopK *float64 `pulumi:"topK"`
	// Cumulative probability cutoff for token selection
	TopP *float64 `pulumi:"topP"`
}

// Prompt model inference configuration
type FlowVersionPromptModelInferenceConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptModelInferenceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionPromptModelInferenceConfiguration)(nil)).Elem()
}

func (o FlowVersionPromptModelInferenceConfigurationOutput) ToFlowVersionPromptModelInferenceConfigurationOutput() FlowVersionPromptModelInferenceConfigurationOutput {
	return o
}

func (o FlowVersionPromptModelInferenceConfigurationOutput) ToFlowVersionPromptModelInferenceConfigurationOutputWithContext(ctx context.Context) FlowVersionPromptModelInferenceConfigurationOutput {
	return o
}

// Maximum length of output
func (o FlowVersionPromptModelInferenceConfigurationOutput) MaxTokens() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FlowVersionPromptModelInferenceConfiguration) *float64 { return v.MaxTokens }).(pulumi.Float64PtrOutput)
}

// List of stop sequences
func (o FlowVersionPromptModelInferenceConfigurationOutput) StopSequences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FlowVersionPromptModelInferenceConfiguration) []string { return v.StopSequences }).(pulumi.StringArrayOutput)
}

// Controls randomness, higher values increase diversity
func (o FlowVersionPromptModelInferenceConfigurationOutput) Temperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FlowVersionPromptModelInferenceConfiguration) *float64 { return v.Temperature }).(pulumi.Float64PtrOutput)
}

// Sample from the k most likely next tokens
func (o FlowVersionPromptModelInferenceConfigurationOutput) TopK() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FlowVersionPromptModelInferenceConfiguration) *float64 { return v.TopK }).(pulumi.Float64PtrOutput)
}

// Cumulative probability cutoff for token selection
func (o FlowVersionPromptModelInferenceConfigurationOutput) TopP() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FlowVersionPromptModelInferenceConfiguration) *float64 { return v.TopP }).(pulumi.Float64PtrOutput)
}

type FlowVersionPromptModelInferenceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptModelInferenceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionPromptModelInferenceConfiguration)(nil)).Elem()
}

func (o FlowVersionPromptModelInferenceConfigurationPtrOutput) ToFlowVersionPromptModelInferenceConfigurationPtrOutput() FlowVersionPromptModelInferenceConfigurationPtrOutput {
	return o
}

func (o FlowVersionPromptModelInferenceConfigurationPtrOutput) ToFlowVersionPromptModelInferenceConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionPromptModelInferenceConfigurationPtrOutput {
	return o
}

func (o FlowVersionPromptModelInferenceConfigurationPtrOutput) Elem() FlowVersionPromptModelInferenceConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionPromptModelInferenceConfiguration) FlowVersionPromptModelInferenceConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionPromptModelInferenceConfiguration
		return ret
	}).(FlowVersionPromptModelInferenceConfigurationOutput)
}

// Maximum length of output
func (o FlowVersionPromptModelInferenceConfigurationPtrOutput) MaxTokens() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxTokens
	}).(pulumi.Float64PtrOutput)
}

// List of stop sequences
func (o FlowVersionPromptModelInferenceConfigurationPtrOutput) StopSequences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FlowVersionPromptModelInferenceConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.StopSequences
	}).(pulumi.StringArrayOutput)
}

// Controls randomness, higher values increase diversity
func (o FlowVersionPromptModelInferenceConfigurationPtrOutput) Temperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.Temperature
	}).(pulumi.Float64PtrOutput)
}

// Sample from the k most likely next tokens
func (o FlowVersionPromptModelInferenceConfigurationPtrOutput) TopK() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TopK
	}).(pulumi.Float64PtrOutput)
}

// Cumulative probability cutoff for token selection
func (o FlowVersionPromptModelInferenceConfigurationPtrOutput) TopP() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TopP
	}).(pulumi.Float64PtrOutput)
}

// Prompt template configuration
type FlowVersionPromptTemplateConfiguration0Properties struct {
	Text FlowVersionTextPromptTemplateConfiguration `pulumi:"text"`
}

// Prompt template configuration
type FlowVersionPromptTemplateConfigurationProperties struct {
	Text FlowVersionTextPromptTemplateConfiguration `pulumi:"text"`
}

// Prompt template configuration
type FlowVersionPromptTemplateConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptTemplateConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionPromptTemplateConfigurationProperties)(nil)).Elem()
}

func (o FlowVersionPromptTemplateConfigurationPropertiesOutput) ToFlowVersionPromptTemplateConfigurationPropertiesOutput() FlowVersionPromptTemplateConfigurationPropertiesOutput {
	return o
}

func (o FlowVersionPromptTemplateConfigurationPropertiesOutput) ToFlowVersionPromptTemplateConfigurationPropertiesOutputWithContext(ctx context.Context) FlowVersionPromptTemplateConfigurationPropertiesOutput {
	return o
}

func (o FlowVersionPromptTemplateConfigurationPropertiesOutput) Text() FlowVersionTextPromptTemplateConfigurationOutput {
	return o.ApplyT(func(v FlowVersionPromptTemplateConfigurationProperties) FlowVersionTextPromptTemplateConfiguration {
		return v.Text
	}).(FlowVersionTextPromptTemplateConfigurationOutput)
}

type FlowVersionPromptTemplateConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionPromptTemplateConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionPromptTemplateConfigurationProperties)(nil)).Elem()
}

func (o FlowVersionPromptTemplateConfigurationPropertiesPtrOutput) ToFlowVersionPromptTemplateConfigurationPropertiesPtrOutput() FlowVersionPromptTemplateConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowVersionPromptTemplateConfigurationPropertiesPtrOutput) ToFlowVersionPromptTemplateConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowVersionPromptTemplateConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowVersionPromptTemplateConfigurationPropertiesPtrOutput) Elem() FlowVersionPromptTemplateConfigurationPropertiesOutput {
	return o.ApplyT(func(v *FlowVersionPromptTemplateConfigurationProperties) FlowVersionPromptTemplateConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret FlowVersionPromptTemplateConfigurationProperties
		return ret
	}).(FlowVersionPromptTemplateConfigurationPropertiesOutput)
}

func (o FlowVersionPromptTemplateConfigurationPropertiesPtrOutput) Text() FlowVersionTextPromptTemplateConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionPromptTemplateConfigurationProperties) *FlowVersionTextPromptTemplateConfiguration {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(FlowVersionTextPromptTemplateConfigurationPtrOutput)
}

// Retrieval flow node configuration
type FlowVersionRetrievalFlowNodeConfiguration struct {
	ServiceConfiguration FlowVersionRetrievalFlowNodeServiceConfigurationProperties `pulumi:"serviceConfiguration"`
}

// Retrieval flow node configuration
type FlowVersionRetrievalFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionRetrievalFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionRetrievalFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionRetrievalFlowNodeConfigurationOutput) ToFlowVersionRetrievalFlowNodeConfigurationOutput() FlowVersionRetrievalFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionRetrievalFlowNodeConfigurationOutput) ToFlowVersionRetrievalFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowVersionRetrievalFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionRetrievalFlowNodeConfigurationOutput) ServiceConfiguration() FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput {
	return o.ApplyT(func(v FlowVersionRetrievalFlowNodeConfiguration) FlowVersionRetrievalFlowNodeServiceConfigurationProperties {
		return v.ServiceConfiguration
	}).(FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput)
}

type FlowVersionRetrievalFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionRetrievalFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionRetrievalFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionRetrievalFlowNodeConfigurationPtrOutput) ToFlowVersionRetrievalFlowNodeConfigurationPtrOutput() FlowVersionRetrievalFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionRetrievalFlowNodeConfigurationPtrOutput) ToFlowVersionRetrievalFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionRetrievalFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionRetrievalFlowNodeConfigurationPtrOutput) Elem() FlowVersionRetrievalFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionRetrievalFlowNodeConfiguration) FlowVersionRetrievalFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionRetrievalFlowNodeConfiguration
		return ret
	}).(FlowVersionRetrievalFlowNodeConfigurationOutput)
}

func (o FlowVersionRetrievalFlowNodeConfigurationPtrOutput) ServiceConfiguration() FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *FlowVersionRetrievalFlowNodeConfiguration) *FlowVersionRetrievalFlowNodeServiceConfigurationProperties {
		if v == nil {
			return nil
		}
		return &v.ServiceConfiguration
	}).(FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput)
}

// s3 Retrieval configuration for Retrieval node
type FlowVersionRetrievalFlowNodeS3Configuration struct {
	// bucket name of an s3 that will be used for Retrieval flow node configuration
	BucketName string `pulumi:"bucketName"`
}

// s3 Retrieval configuration for Retrieval node
type FlowVersionRetrievalFlowNodeS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionRetrievalFlowNodeS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionRetrievalFlowNodeS3Configuration)(nil)).Elem()
}

func (o FlowVersionRetrievalFlowNodeS3ConfigurationOutput) ToFlowVersionRetrievalFlowNodeS3ConfigurationOutput() FlowVersionRetrievalFlowNodeS3ConfigurationOutput {
	return o
}

func (o FlowVersionRetrievalFlowNodeS3ConfigurationOutput) ToFlowVersionRetrievalFlowNodeS3ConfigurationOutputWithContext(ctx context.Context) FlowVersionRetrievalFlowNodeS3ConfigurationOutput {
	return o
}

// bucket name of an s3 that will be used for Retrieval flow node configuration
func (o FlowVersionRetrievalFlowNodeS3ConfigurationOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionRetrievalFlowNodeS3Configuration) string { return v.BucketName }).(pulumi.StringOutput)
}

type FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionRetrievalFlowNodeS3Configuration)(nil)).Elem()
}

func (o FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput) ToFlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput() FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput {
	return o
}

func (o FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput) ToFlowVersionRetrievalFlowNodeS3ConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput {
	return o
}

func (o FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput) Elem() FlowVersionRetrievalFlowNodeS3ConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionRetrievalFlowNodeS3Configuration) FlowVersionRetrievalFlowNodeS3Configuration {
		if v != nil {
			return *v
		}
		var ret FlowVersionRetrievalFlowNodeS3Configuration
		return ret
	}).(FlowVersionRetrievalFlowNodeS3ConfigurationOutput)
}

// bucket name of an s3 that will be used for Retrieval flow node configuration
func (o FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionRetrievalFlowNodeS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Retrieval service configuration for Retrieval node
type FlowVersionRetrievalFlowNodeServiceConfiguration0Properties struct {
	S3 *FlowVersionRetrievalFlowNodeS3Configuration `pulumi:"s3"`
}

// Retrieval service configuration for Retrieval node
type FlowVersionRetrievalFlowNodeServiceConfigurationProperties struct {
	S3 *FlowVersionRetrievalFlowNodeS3Configuration `pulumi:"s3"`
}

// Retrieval service configuration for Retrieval node
type FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionRetrievalFlowNodeServiceConfigurationProperties)(nil)).Elem()
}

func (o FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput) ToFlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput() FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput {
	return o
}

func (o FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput) ToFlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutputWithContext(ctx context.Context) FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput {
	return o
}

func (o FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput) S3() FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput {
	return o.ApplyT(func(v FlowVersionRetrievalFlowNodeServiceConfigurationProperties) *FlowVersionRetrievalFlowNodeS3Configuration {
		return v.S3
	}).(FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput)
}

type FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionRetrievalFlowNodeServiceConfigurationProperties)(nil)).Elem()
}

func (o FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput) ToFlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput() FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput) ToFlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput) Elem() FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput {
	return o.ApplyT(func(v *FlowVersionRetrievalFlowNodeServiceConfigurationProperties) FlowVersionRetrievalFlowNodeServiceConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret FlowVersionRetrievalFlowNodeServiceConfigurationProperties
		return ret
	}).(FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput)
}

func (o FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput) S3() FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionRetrievalFlowNodeServiceConfigurationProperties) *FlowVersionRetrievalFlowNodeS3Configuration {
		if v == nil {
			return nil
		}
		return v.S3
	}).(FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput)
}

// Storage flow node configuration
type FlowVersionStorageFlowNodeConfiguration struct {
	ServiceConfiguration FlowVersionStorageFlowNodeServiceConfigurationProperties `pulumi:"serviceConfiguration"`
}

// Storage flow node configuration
type FlowVersionStorageFlowNodeConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionStorageFlowNodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionStorageFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionStorageFlowNodeConfigurationOutput) ToFlowVersionStorageFlowNodeConfigurationOutput() FlowVersionStorageFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionStorageFlowNodeConfigurationOutput) ToFlowVersionStorageFlowNodeConfigurationOutputWithContext(ctx context.Context) FlowVersionStorageFlowNodeConfigurationOutput {
	return o
}

func (o FlowVersionStorageFlowNodeConfigurationOutput) ServiceConfiguration() FlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput {
	return o.ApplyT(func(v FlowVersionStorageFlowNodeConfiguration) FlowVersionStorageFlowNodeServiceConfigurationProperties {
		return v.ServiceConfiguration
	}).(FlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput)
}

type FlowVersionStorageFlowNodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionStorageFlowNodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionStorageFlowNodeConfiguration)(nil)).Elem()
}

func (o FlowVersionStorageFlowNodeConfigurationPtrOutput) ToFlowVersionStorageFlowNodeConfigurationPtrOutput() FlowVersionStorageFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionStorageFlowNodeConfigurationPtrOutput) ToFlowVersionStorageFlowNodeConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionStorageFlowNodeConfigurationPtrOutput {
	return o
}

func (o FlowVersionStorageFlowNodeConfigurationPtrOutput) Elem() FlowVersionStorageFlowNodeConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionStorageFlowNodeConfiguration) FlowVersionStorageFlowNodeConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionStorageFlowNodeConfiguration
		return ret
	}).(FlowVersionStorageFlowNodeConfigurationOutput)
}

func (o FlowVersionStorageFlowNodeConfigurationPtrOutput) ServiceConfiguration() FlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v *FlowVersionStorageFlowNodeConfiguration) *FlowVersionStorageFlowNodeServiceConfigurationProperties {
		if v == nil {
			return nil
		}
		return &v.ServiceConfiguration
	}).(FlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutput)
}

// s3 storage configuration for storage node
type FlowVersionStorageFlowNodeS3Configuration struct {
	// bucket name of an s3 that will be used for storage flow node configuration
	BucketName string `pulumi:"bucketName"`
}

// s3 storage configuration for storage node
type FlowVersionStorageFlowNodeS3ConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionStorageFlowNodeS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionStorageFlowNodeS3Configuration)(nil)).Elem()
}

func (o FlowVersionStorageFlowNodeS3ConfigurationOutput) ToFlowVersionStorageFlowNodeS3ConfigurationOutput() FlowVersionStorageFlowNodeS3ConfigurationOutput {
	return o
}

func (o FlowVersionStorageFlowNodeS3ConfigurationOutput) ToFlowVersionStorageFlowNodeS3ConfigurationOutputWithContext(ctx context.Context) FlowVersionStorageFlowNodeS3ConfigurationOutput {
	return o
}

// bucket name of an s3 that will be used for storage flow node configuration
func (o FlowVersionStorageFlowNodeS3ConfigurationOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionStorageFlowNodeS3Configuration) string { return v.BucketName }).(pulumi.StringOutput)
}

type FlowVersionStorageFlowNodeS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionStorageFlowNodeS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionStorageFlowNodeS3Configuration)(nil)).Elem()
}

func (o FlowVersionStorageFlowNodeS3ConfigurationPtrOutput) ToFlowVersionStorageFlowNodeS3ConfigurationPtrOutput() FlowVersionStorageFlowNodeS3ConfigurationPtrOutput {
	return o
}

func (o FlowVersionStorageFlowNodeS3ConfigurationPtrOutput) ToFlowVersionStorageFlowNodeS3ConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionStorageFlowNodeS3ConfigurationPtrOutput {
	return o
}

func (o FlowVersionStorageFlowNodeS3ConfigurationPtrOutput) Elem() FlowVersionStorageFlowNodeS3ConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionStorageFlowNodeS3Configuration) FlowVersionStorageFlowNodeS3Configuration {
		if v != nil {
			return *v
		}
		var ret FlowVersionStorageFlowNodeS3Configuration
		return ret
	}).(FlowVersionStorageFlowNodeS3ConfigurationOutput)
}

// bucket name of an s3 that will be used for storage flow node configuration
func (o FlowVersionStorageFlowNodeS3ConfigurationPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionStorageFlowNodeS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// storage service configuration for storage node
type FlowVersionStorageFlowNodeServiceConfiguration0Properties struct {
	S3 *FlowVersionStorageFlowNodeS3Configuration `pulumi:"s3"`
}

// storage service configuration for storage node
type FlowVersionStorageFlowNodeServiceConfigurationProperties struct {
	S3 *FlowVersionStorageFlowNodeS3Configuration `pulumi:"s3"`
}

// storage service configuration for storage node
type FlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (FlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionStorageFlowNodeServiceConfigurationProperties)(nil)).Elem()
}

func (o FlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput) ToFlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput() FlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput {
	return o
}

func (o FlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput) ToFlowVersionStorageFlowNodeServiceConfigurationPropertiesOutputWithContext(ctx context.Context) FlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput {
	return o
}

func (o FlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput) S3() FlowVersionStorageFlowNodeS3ConfigurationPtrOutput {
	return o.ApplyT(func(v FlowVersionStorageFlowNodeServiceConfigurationProperties) *FlowVersionStorageFlowNodeS3Configuration {
		return v.S3
	}).(FlowVersionStorageFlowNodeS3ConfigurationPtrOutput)
}

type FlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionStorageFlowNodeServiceConfigurationProperties)(nil)).Elem()
}

func (o FlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutput) ToFlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutput() FlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutput) ToFlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) FlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutput {
	return o
}

func (o FlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutput) Elem() FlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput {
	return o.ApplyT(func(v *FlowVersionStorageFlowNodeServiceConfigurationProperties) FlowVersionStorageFlowNodeServiceConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret FlowVersionStorageFlowNodeServiceConfigurationProperties
		return ret
	}).(FlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput)
}

func (o FlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutput) S3() FlowVersionStorageFlowNodeS3ConfigurationPtrOutput {
	return o.ApplyT(func(v *FlowVersionStorageFlowNodeServiceConfigurationProperties) *FlowVersionStorageFlowNodeS3Configuration {
		if v == nil {
			return nil
		}
		return v.S3
	}).(FlowVersionStorageFlowNodeS3ConfigurationPtrOutput)
}

// Configuration for text prompt template
type FlowVersionTextPromptTemplateConfiguration struct {
	// List of input variables
	InputVariables []FlowVersionPromptInputVariable `pulumi:"inputVariables"`
	// Prompt content for String prompt template
	Text string `pulumi:"text"`
}

// Configuration for text prompt template
type FlowVersionTextPromptTemplateConfigurationOutput struct{ *pulumi.OutputState }

func (FlowVersionTextPromptTemplateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVersionTextPromptTemplateConfiguration)(nil)).Elem()
}

func (o FlowVersionTextPromptTemplateConfigurationOutput) ToFlowVersionTextPromptTemplateConfigurationOutput() FlowVersionTextPromptTemplateConfigurationOutput {
	return o
}

func (o FlowVersionTextPromptTemplateConfigurationOutput) ToFlowVersionTextPromptTemplateConfigurationOutputWithContext(ctx context.Context) FlowVersionTextPromptTemplateConfigurationOutput {
	return o
}

// List of input variables
func (o FlowVersionTextPromptTemplateConfigurationOutput) InputVariables() FlowVersionPromptInputVariableArrayOutput {
	return o.ApplyT(func(v FlowVersionTextPromptTemplateConfiguration) []FlowVersionPromptInputVariable {
		return v.InputVariables
	}).(FlowVersionPromptInputVariableArrayOutput)
}

// Prompt content for String prompt template
func (o FlowVersionTextPromptTemplateConfigurationOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v FlowVersionTextPromptTemplateConfiguration) string { return v.Text }).(pulumi.StringOutput)
}

type FlowVersionTextPromptTemplateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FlowVersionTextPromptTemplateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVersionTextPromptTemplateConfiguration)(nil)).Elem()
}

func (o FlowVersionTextPromptTemplateConfigurationPtrOutput) ToFlowVersionTextPromptTemplateConfigurationPtrOutput() FlowVersionTextPromptTemplateConfigurationPtrOutput {
	return o
}

func (o FlowVersionTextPromptTemplateConfigurationPtrOutput) ToFlowVersionTextPromptTemplateConfigurationPtrOutputWithContext(ctx context.Context) FlowVersionTextPromptTemplateConfigurationPtrOutput {
	return o
}

func (o FlowVersionTextPromptTemplateConfigurationPtrOutput) Elem() FlowVersionTextPromptTemplateConfigurationOutput {
	return o.ApplyT(func(v *FlowVersionTextPromptTemplateConfiguration) FlowVersionTextPromptTemplateConfiguration {
		if v != nil {
			return *v
		}
		var ret FlowVersionTextPromptTemplateConfiguration
		return ret
	}).(FlowVersionTextPromptTemplateConfigurationOutput)
}

// List of input variables
func (o FlowVersionTextPromptTemplateConfigurationPtrOutput) InputVariables() FlowVersionPromptInputVariableArrayOutput {
	return o.ApplyT(func(v *FlowVersionTextPromptTemplateConfiguration) []FlowVersionPromptInputVariable {
		if v == nil {
			return nil
		}
		return v.InputVariables
	}).(FlowVersionPromptInputVariableArrayOutput)
}

// Prompt content for String prompt template
func (o FlowVersionTextPromptTemplateConfigurationPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FlowVersionTextPromptTemplateConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(pulumi.StringPtrOutput)
}

// Content filter config in content policy.
type GuardrailContentFilterConfig struct {
	// The strength of the content filter to apply to prompts. As you increase the filter strength, the likelihood of filtering harmful content increases and the probability of seeing harmful content in your application reduces.
	InputStrength GuardrailFilterStrength `pulumi:"inputStrength"`
	// The strength of the content filter to apply to model responses. As you increase the filter strength, the likelihood of filtering harmful content increases and the probability of seeing harmful content in your application reduces.
	OutputStrength GuardrailFilterStrength `pulumi:"outputStrength"`
	// The harmful category that the content filter is applied to.
	Type GuardrailContentFilterType `pulumi:"type"`
}

// GuardrailContentFilterConfigInput is an input type that accepts GuardrailContentFilterConfigArgs and GuardrailContentFilterConfigOutput values.
// You can construct a concrete instance of `GuardrailContentFilterConfigInput` via:
//
//	GuardrailContentFilterConfigArgs{...}
type GuardrailContentFilterConfigInput interface {
	pulumi.Input

	ToGuardrailContentFilterConfigOutput() GuardrailContentFilterConfigOutput
	ToGuardrailContentFilterConfigOutputWithContext(context.Context) GuardrailContentFilterConfigOutput
}

// Content filter config in content policy.
type GuardrailContentFilterConfigArgs struct {
	// The strength of the content filter to apply to prompts. As you increase the filter strength, the likelihood of filtering harmful content increases and the probability of seeing harmful content in your application reduces.
	InputStrength GuardrailFilterStrengthInput `pulumi:"inputStrength"`
	// The strength of the content filter to apply to model responses. As you increase the filter strength, the likelihood of filtering harmful content increases and the probability of seeing harmful content in your application reduces.
	OutputStrength GuardrailFilterStrengthInput `pulumi:"outputStrength"`
	// The harmful category that the content filter is applied to.
	Type GuardrailContentFilterTypeInput `pulumi:"type"`
}

func (GuardrailContentFilterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailContentFilterConfig)(nil)).Elem()
}

func (i GuardrailContentFilterConfigArgs) ToGuardrailContentFilterConfigOutput() GuardrailContentFilterConfigOutput {
	return i.ToGuardrailContentFilterConfigOutputWithContext(context.Background())
}

func (i GuardrailContentFilterConfigArgs) ToGuardrailContentFilterConfigOutputWithContext(ctx context.Context) GuardrailContentFilterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContentFilterConfigOutput)
}

// GuardrailContentFilterConfigArrayInput is an input type that accepts GuardrailContentFilterConfigArray and GuardrailContentFilterConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailContentFilterConfigArrayInput` via:
//
//	GuardrailContentFilterConfigArray{ GuardrailContentFilterConfigArgs{...} }
type GuardrailContentFilterConfigArrayInput interface {
	pulumi.Input

	ToGuardrailContentFilterConfigArrayOutput() GuardrailContentFilterConfigArrayOutput
	ToGuardrailContentFilterConfigArrayOutputWithContext(context.Context) GuardrailContentFilterConfigArrayOutput
}

type GuardrailContentFilterConfigArray []GuardrailContentFilterConfigInput

func (GuardrailContentFilterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailContentFilterConfig)(nil)).Elem()
}

func (i GuardrailContentFilterConfigArray) ToGuardrailContentFilterConfigArrayOutput() GuardrailContentFilterConfigArrayOutput {
	return i.ToGuardrailContentFilterConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailContentFilterConfigArray) ToGuardrailContentFilterConfigArrayOutputWithContext(ctx context.Context) GuardrailContentFilterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContentFilterConfigArrayOutput)
}

// Content filter config in content policy.
type GuardrailContentFilterConfigOutput struct{ *pulumi.OutputState }

func (GuardrailContentFilterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailContentFilterConfig)(nil)).Elem()
}

func (o GuardrailContentFilterConfigOutput) ToGuardrailContentFilterConfigOutput() GuardrailContentFilterConfigOutput {
	return o
}

func (o GuardrailContentFilterConfigOutput) ToGuardrailContentFilterConfigOutputWithContext(ctx context.Context) GuardrailContentFilterConfigOutput {
	return o
}

// The strength of the content filter to apply to prompts. As you increase the filter strength, the likelihood of filtering harmful content increases and the probability of seeing harmful content in your application reduces.
func (o GuardrailContentFilterConfigOutput) InputStrength() GuardrailFilterStrengthOutput {
	return o.ApplyT(func(v GuardrailContentFilterConfig) GuardrailFilterStrength { return v.InputStrength }).(GuardrailFilterStrengthOutput)
}

// The strength of the content filter to apply to model responses. As you increase the filter strength, the likelihood of filtering harmful content increases and the probability of seeing harmful content in your application reduces.
func (o GuardrailContentFilterConfigOutput) OutputStrength() GuardrailFilterStrengthOutput {
	return o.ApplyT(func(v GuardrailContentFilterConfig) GuardrailFilterStrength { return v.OutputStrength }).(GuardrailFilterStrengthOutput)
}

// The harmful category that the content filter is applied to.
func (o GuardrailContentFilterConfigOutput) Type() GuardrailContentFilterTypeOutput {
	return o.ApplyT(func(v GuardrailContentFilterConfig) GuardrailContentFilterType { return v.Type }).(GuardrailContentFilterTypeOutput)
}

type GuardrailContentFilterConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailContentFilterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailContentFilterConfig)(nil)).Elem()
}

func (o GuardrailContentFilterConfigArrayOutput) ToGuardrailContentFilterConfigArrayOutput() GuardrailContentFilterConfigArrayOutput {
	return o
}

func (o GuardrailContentFilterConfigArrayOutput) ToGuardrailContentFilterConfigArrayOutputWithContext(ctx context.Context) GuardrailContentFilterConfigArrayOutput {
	return o
}

func (o GuardrailContentFilterConfigArrayOutput) Index(i pulumi.IntInput) GuardrailContentFilterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailContentFilterConfig {
		return vs[0].([]GuardrailContentFilterConfig)[vs[1].(int)]
	}).(GuardrailContentFilterConfigOutput)
}

// Content policy config for a guardrail.
type GuardrailContentPolicyConfig struct {
	// List of content filter configs in content policy.
	FiltersConfig []GuardrailContentFilterConfig `pulumi:"filtersConfig"`
}

// GuardrailContentPolicyConfigInput is an input type that accepts GuardrailContentPolicyConfigArgs and GuardrailContentPolicyConfigOutput values.
// You can construct a concrete instance of `GuardrailContentPolicyConfigInput` via:
//
//	GuardrailContentPolicyConfigArgs{...}
type GuardrailContentPolicyConfigInput interface {
	pulumi.Input

	ToGuardrailContentPolicyConfigOutput() GuardrailContentPolicyConfigOutput
	ToGuardrailContentPolicyConfigOutputWithContext(context.Context) GuardrailContentPolicyConfigOutput
}

// Content policy config for a guardrail.
type GuardrailContentPolicyConfigArgs struct {
	// List of content filter configs in content policy.
	FiltersConfig GuardrailContentFilterConfigArrayInput `pulumi:"filtersConfig"`
}

func (GuardrailContentPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailContentPolicyConfig)(nil)).Elem()
}

func (i GuardrailContentPolicyConfigArgs) ToGuardrailContentPolicyConfigOutput() GuardrailContentPolicyConfigOutput {
	return i.ToGuardrailContentPolicyConfigOutputWithContext(context.Background())
}

func (i GuardrailContentPolicyConfigArgs) ToGuardrailContentPolicyConfigOutputWithContext(ctx context.Context) GuardrailContentPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContentPolicyConfigOutput)
}

func (i GuardrailContentPolicyConfigArgs) ToGuardrailContentPolicyConfigPtrOutput() GuardrailContentPolicyConfigPtrOutput {
	return i.ToGuardrailContentPolicyConfigPtrOutputWithContext(context.Background())
}

func (i GuardrailContentPolicyConfigArgs) ToGuardrailContentPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailContentPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContentPolicyConfigOutput).ToGuardrailContentPolicyConfigPtrOutputWithContext(ctx)
}

// GuardrailContentPolicyConfigPtrInput is an input type that accepts GuardrailContentPolicyConfigArgs, GuardrailContentPolicyConfigPtr and GuardrailContentPolicyConfigPtrOutput values.
// You can construct a concrete instance of `GuardrailContentPolicyConfigPtrInput` via:
//
//	        GuardrailContentPolicyConfigArgs{...}
//
//	or:
//
//	        nil
type GuardrailContentPolicyConfigPtrInput interface {
	pulumi.Input

	ToGuardrailContentPolicyConfigPtrOutput() GuardrailContentPolicyConfigPtrOutput
	ToGuardrailContentPolicyConfigPtrOutputWithContext(context.Context) GuardrailContentPolicyConfigPtrOutput
}

type guardrailContentPolicyConfigPtrType GuardrailContentPolicyConfigArgs

func GuardrailContentPolicyConfigPtr(v *GuardrailContentPolicyConfigArgs) GuardrailContentPolicyConfigPtrInput {
	return (*guardrailContentPolicyConfigPtrType)(v)
}

func (*guardrailContentPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailContentPolicyConfig)(nil)).Elem()
}

func (i *guardrailContentPolicyConfigPtrType) ToGuardrailContentPolicyConfigPtrOutput() GuardrailContentPolicyConfigPtrOutput {
	return i.ToGuardrailContentPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *guardrailContentPolicyConfigPtrType) ToGuardrailContentPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailContentPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContentPolicyConfigPtrOutput)
}

// Content policy config for a guardrail.
type GuardrailContentPolicyConfigOutput struct{ *pulumi.OutputState }

func (GuardrailContentPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailContentPolicyConfig)(nil)).Elem()
}

func (o GuardrailContentPolicyConfigOutput) ToGuardrailContentPolicyConfigOutput() GuardrailContentPolicyConfigOutput {
	return o
}

func (o GuardrailContentPolicyConfigOutput) ToGuardrailContentPolicyConfigOutputWithContext(ctx context.Context) GuardrailContentPolicyConfigOutput {
	return o
}

func (o GuardrailContentPolicyConfigOutput) ToGuardrailContentPolicyConfigPtrOutput() GuardrailContentPolicyConfigPtrOutput {
	return o.ToGuardrailContentPolicyConfigPtrOutputWithContext(context.Background())
}

func (o GuardrailContentPolicyConfigOutput) ToGuardrailContentPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailContentPolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardrailContentPolicyConfig) *GuardrailContentPolicyConfig {
		return &v
	}).(GuardrailContentPolicyConfigPtrOutput)
}

// List of content filter configs in content policy.
func (o GuardrailContentPolicyConfigOutput) FiltersConfig() GuardrailContentFilterConfigArrayOutput {
	return o.ApplyT(func(v GuardrailContentPolicyConfig) []GuardrailContentFilterConfig { return v.FiltersConfig }).(GuardrailContentFilterConfigArrayOutput)
}

type GuardrailContentPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (GuardrailContentPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailContentPolicyConfig)(nil)).Elem()
}

func (o GuardrailContentPolicyConfigPtrOutput) ToGuardrailContentPolicyConfigPtrOutput() GuardrailContentPolicyConfigPtrOutput {
	return o
}

func (o GuardrailContentPolicyConfigPtrOutput) ToGuardrailContentPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailContentPolicyConfigPtrOutput {
	return o
}

func (o GuardrailContentPolicyConfigPtrOutput) Elem() GuardrailContentPolicyConfigOutput {
	return o.ApplyT(func(v *GuardrailContentPolicyConfig) GuardrailContentPolicyConfig {
		if v != nil {
			return *v
		}
		var ret GuardrailContentPolicyConfig
		return ret
	}).(GuardrailContentPolicyConfigOutput)
}

// List of content filter configs in content policy.
func (o GuardrailContentPolicyConfigPtrOutput) FiltersConfig() GuardrailContentFilterConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailContentPolicyConfig) []GuardrailContentFilterConfig {
		if v == nil {
			return nil
		}
		return v.FiltersConfig
	}).(GuardrailContentFilterConfigArrayOutput)
}

// A config for grounding filter.
type GuardrailContextualGroundingFilterConfig struct {
	// The threshold for this filter.
	Threshold float64 `pulumi:"threshold"`
	// The filter details for the guardrails contextual grounding filter.
	Type GuardrailContextualGroundingFilterType `pulumi:"type"`
}

// GuardrailContextualGroundingFilterConfigInput is an input type that accepts GuardrailContextualGroundingFilterConfigArgs and GuardrailContextualGroundingFilterConfigOutput values.
// You can construct a concrete instance of `GuardrailContextualGroundingFilterConfigInput` via:
//
//	GuardrailContextualGroundingFilterConfigArgs{...}
type GuardrailContextualGroundingFilterConfigInput interface {
	pulumi.Input

	ToGuardrailContextualGroundingFilterConfigOutput() GuardrailContextualGroundingFilterConfigOutput
	ToGuardrailContextualGroundingFilterConfigOutputWithContext(context.Context) GuardrailContextualGroundingFilterConfigOutput
}

// A config for grounding filter.
type GuardrailContextualGroundingFilterConfigArgs struct {
	// The threshold for this filter.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// The filter details for the guardrails contextual grounding filter.
	Type GuardrailContextualGroundingFilterTypeInput `pulumi:"type"`
}

func (GuardrailContextualGroundingFilterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailContextualGroundingFilterConfig)(nil)).Elem()
}

func (i GuardrailContextualGroundingFilterConfigArgs) ToGuardrailContextualGroundingFilterConfigOutput() GuardrailContextualGroundingFilterConfigOutput {
	return i.ToGuardrailContextualGroundingFilterConfigOutputWithContext(context.Background())
}

func (i GuardrailContextualGroundingFilterConfigArgs) ToGuardrailContextualGroundingFilterConfigOutputWithContext(ctx context.Context) GuardrailContextualGroundingFilterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContextualGroundingFilterConfigOutput)
}

// GuardrailContextualGroundingFilterConfigArrayInput is an input type that accepts GuardrailContextualGroundingFilterConfigArray and GuardrailContextualGroundingFilterConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailContextualGroundingFilterConfigArrayInput` via:
//
//	GuardrailContextualGroundingFilterConfigArray{ GuardrailContextualGroundingFilterConfigArgs{...} }
type GuardrailContextualGroundingFilterConfigArrayInput interface {
	pulumi.Input

	ToGuardrailContextualGroundingFilterConfigArrayOutput() GuardrailContextualGroundingFilterConfigArrayOutput
	ToGuardrailContextualGroundingFilterConfigArrayOutputWithContext(context.Context) GuardrailContextualGroundingFilterConfigArrayOutput
}

type GuardrailContextualGroundingFilterConfigArray []GuardrailContextualGroundingFilterConfigInput

func (GuardrailContextualGroundingFilterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailContextualGroundingFilterConfig)(nil)).Elem()
}

func (i GuardrailContextualGroundingFilterConfigArray) ToGuardrailContextualGroundingFilterConfigArrayOutput() GuardrailContextualGroundingFilterConfigArrayOutput {
	return i.ToGuardrailContextualGroundingFilterConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailContextualGroundingFilterConfigArray) ToGuardrailContextualGroundingFilterConfigArrayOutputWithContext(ctx context.Context) GuardrailContextualGroundingFilterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContextualGroundingFilterConfigArrayOutput)
}

// A config for grounding filter.
type GuardrailContextualGroundingFilterConfigOutput struct{ *pulumi.OutputState }

func (GuardrailContextualGroundingFilterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailContextualGroundingFilterConfig)(nil)).Elem()
}

func (o GuardrailContextualGroundingFilterConfigOutput) ToGuardrailContextualGroundingFilterConfigOutput() GuardrailContextualGroundingFilterConfigOutput {
	return o
}

func (o GuardrailContextualGroundingFilterConfigOutput) ToGuardrailContextualGroundingFilterConfigOutputWithContext(ctx context.Context) GuardrailContextualGroundingFilterConfigOutput {
	return o
}

// The threshold for this filter.
func (o GuardrailContextualGroundingFilterConfigOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v GuardrailContextualGroundingFilterConfig) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// The filter details for the guardrails contextual grounding filter.
func (o GuardrailContextualGroundingFilterConfigOutput) Type() GuardrailContextualGroundingFilterTypeOutput {
	return o.ApplyT(func(v GuardrailContextualGroundingFilterConfig) GuardrailContextualGroundingFilterType { return v.Type }).(GuardrailContextualGroundingFilterTypeOutput)
}

type GuardrailContextualGroundingFilterConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailContextualGroundingFilterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailContextualGroundingFilterConfig)(nil)).Elem()
}

func (o GuardrailContextualGroundingFilterConfigArrayOutput) ToGuardrailContextualGroundingFilterConfigArrayOutput() GuardrailContextualGroundingFilterConfigArrayOutput {
	return o
}

func (o GuardrailContextualGroundingFilterConfigArrayOutput) ToGuardrailContextualGroundingFilterConfigArrayOutputWithContext(ctx context.Context) GuardrailContextualGroundingFilterConfigArrayOutput {
	return o
}

func (o GuardrailContextualGroundingFilterConfigArrayOutput) Index(i pulumi.IntInput) GuardrailContextualGroundingFilterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailContextualGroundingFilterConfig {
		return vs[0].([]GuardrailContextualGroundingFilterConfig)[vs[1].(int)]
	}).(GuardrailContextualGroundingFilterConfigOutput)
}

// Contextual grounding policy config for a guardrail.
type GuardrailContextualGroundingPolicyConfig struct {
	// List of contextual grounding filter configs.
	FiltersConfig []GuardrailContextualGroundingFilterConfig `pulumi:"filtersConfig"`
}

// GuardrailContextualGroundingPolicyConfigInput is an input type that accepts GuardrailContextualGroundingPolicyConfigArgs and GuardrailContextualGroundingPolicyConfigOutput values.
// You can construct a concrete instance of `GuardrailContextualGroundingPolicyConfigInput` via:
//
//	GuardrailContextualGroundingPolicyConfigArgs{...}
type GuardrailContextualGroundingPolicyConfigInput interface {
	pulumi.Input

	ToGuardrailContextualGroundingPolicyConfigOutput() GuardrailContextualGroundingPolicyConfigOutput
	ToGuardrailContextualGroundingPolicyConfigOutputWithContext(context.Context) GuardrailContextualGroundingPolicyConfigOutput
}

// Contextual grounding policy config for a guardrail.
type GuardrailContextualGroundingPolicyConfigArgs struct {
	// List of contextual grounding filter configs.
	FiltersConfig GuardrailContextualGroundingFilterConfigArrayInput `pulumi:"filtersConfig"`
}

func (GuardrailContextualGroundingPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailContextualGroundingPolicyConfig)(nil)).Elem()
}

func (i GuardrailContextualGroundingPolicyConfigArgs) ToGuardrailContextualGroundingPolicyConfigOutput() GuardrailContextualGroundingPolicyConfigOutput {
	return i.ToGuardrailContextualGroundingPolicyConfigOutputWithContext(context.Background())
}

func (i GuardrailContextualGroundingPolicyConfigArgs) ToGuardrailContextualGroundingPolicyConfigOutputWithContext(ctx context.Context) GuardrailContextualGroundingPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContextualGroundingPolicyConfigOutput)
}

func (i GuardrailContextualGroundingPolicyConfigArgs) ToGuardrailContextualGroundingPolicyConfigPtrOutput() GuardrailContextualGroundingPolicyConfigPtrOutput {
	return i.ToGuardrailContextualGroundingPolicyConfigPtrOutputWithContext(context.Background())
}

func (i GuardrailContextualGroundingPolicyConfigArgs) ToGuardrailContextualGroundingPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailContextualGroundingPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContextualGroundingPolicyConfigOutput).ToGuardrailContextualGroundingPolicyConfigPtrOutputWithContext(ctx)
}

// GuardrailContextualGroundingPolicyConfigPtrInput is an input type that accepts GuardrailContextualGroundingPolicyConfigArgs, GuardrailContextualGroundingPolicyConfigPtr and GuardrailContextualGroundingPolicyConfigPtrOutput values.
// You can construct a concrete instance of `GuardrailContextualGroundingPolicyConfigPtrInput` via:
//
//	        GuardrailContextualGroundingPolicyConfigArgs{...}
//
//	or:
//
//	        nil
type GuardrailContextualGroundingPolicyConfigPtrInput interface {
	pulumi.Input

	ToGuardrailContextualGroundingPolicyConfigPtrOutput() GuardrailContextualGroundingPolicyConfigPtrOutput
	ToGuardrailContextualGroundingPolicyConfigPtrOutputWithContext(context.Context) GuardrailContextualGroundingPolicyConfigPtrOutput
}

type guardrailContextualGroundingPolicyConfigPtrType GuardrailContextualGroundingPolicyConfigArgs

func GuardrailContextualGroundingPolicyConfigPtr(v *GuardrailContextualGroundingPolicyConfigArgs) GuardrailContextualGroundingPolicyConfigPtrInput {
	return (*guardrailContextualGroundingPolicyConfigPtrType)(v)
}

func (*guardrailContextualGroundingPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailContextualGroundingPolicyConfig)(nil)).Elem()
}

func (i *guardrailContextualGroundingPolicyConfigPtrType) ToGuardrailContextualGroundingPolicyConfigPtrOutput() GuardrailContextualGroundingPolicyConfigPtrOutput {
	return i.ToGuardrailContextualGroundingPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *guardrailContextualGroundingPolicyConfigPtrType) ToGuardrailContextualGroundingPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailContextualGroundingPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContextualGroundingPolicyConfigPtrOutput)
}

// Contextual grounding policy config for a guardrail.
type GuardrailContextualGroundingPolicyConfigOutput struct{ *pulumi.OutputState }

func (GuardrailContextualGroundingPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailContextualGroundingPolicyConfig)(nil)).Elem()
}

func (o GuardrailContextualGroundingPolicyConfigOutput) ToGuardrailContextualGroundingPolicyConfigOutput() GuardrailContextualGroundingPolicyConfigOutput {
	return o
}

func (o GuardrailContextualGroundingPolicyConfigOutput) ToGuardrailContextualGroundingPolicyConfigOutputWithContext(ctx context.Context) GuardrailContextualGroundingPolicyConfigOutput {
	return o
}

func (o GuardrailContextualGroundingPolicyConfigOutput) ToGuardrailContextualGroundingPolicyConfigPtrOutput() GuardrailContextualGroundingPolicyConfigPtrOutput {
	return o.ToGuardrailContextualGroundingPolicyConfigPtrOutputWithContext(context.Background())
}

func (o GuardrailContextualGroundingPolicyConfigOutput) ToGuardrailContextualGroundingPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailContextualGroundingPolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardrailContextualGroundingPolicyConfig) *GuardrailContextualGroundingPolicyConfig {
		return &v
	}).(GuardrailContextualGroundingPolicyConfigPtrOutput)
}

// List of contextual grounding filter configs.
func (o GuardrailContextualGroundingPolicyConfigOutput) FiltersConfig() GuardrailContextualGroundingFilterConfigArrayOutput {
	return o.ApplyT(func(v GuardrailContextualGroundingPolicyConfig) []GuardrailContextualGroundingFilterConfig {
		return v.FiltersConfig
	}).(GuardrailContextualGroundingFilterConfigArrayOutput)
}

type GuardrailContextualGroundingPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (GuardrailContextualGroundingPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailContextualGroundingPolicyConfig)(nil)).Elem()
}

func (o GuardrailContextualGroundingPolicyConfigPtrOutput) ToGuardrailContextualGroundingPolicyConfigPtrOutput() GuardrailContextualGroundingPolicyConfigPtrOutput {
	return o
}

func (o GuardrailContextualGroundingPolicyConfigPtrOutput) ToGuardrailContextualGroundingPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailContextualGroundingPolicyConfigPtrOutput {
	return o
}

func (o GuardrailContextualGroundingPolicyConfigPtrOutput) Elem() GuardrailContextualGroundingPolicyConfigOutput {
	return o.ApplyT(func(v *GuardrailContextualGroundingPolicyConfig) GuardrailContextualGroundingPolicyConfig {
		if v != nil {
			return *v
		}
		var ret GuardrailContextualGroundingPolicyConfig
		return ret
	}).(GuardrailContextualGroundingPolicyConfigOutput)
}

// List of contextual grounding filter configs.
func (o GuardrailContextualGroundingPolicyConfigPtrOutput) FiltersConfig() GuardrailContextualGroundingFilterConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailContextualGroundingPolicyConfig) []GuardrailContextualGroundingFilterConfig {
		if v == nil {
			return nil
		}
		return v.FiltersConfig
	}).(GuardrailContextualGroundingFilterConfigArrayOutput)
}

// A managed words config.
type GuardrailManagedWordsConfig struct {
	// The managed word type to configure for the guardrail.
	Type GuardrailManagedWordsType `pulumi:"type"`
}

// GuardrailManagedWordsConfigInput is an input type that accepts GuardrailManagedWordsConfigArgs and GuardrailManagedWordsConfigOutput values.
// You can construct a concrete instance of `GuardrailManagedWordsConfigInput` via:
//
//	GuardrailManagedWordsConfigArgs{...}
type GuardrailManagedWordsConfigInput interface {
	pulumi.Input

	ToGuardrailManagedWordsConfigOutput() GuardrailManagedWordsConfigOutput
	ToGuardrailManagedWordsConfigOutputWithContext(context.Context) GuardrailManagedWordsConfigOutput
}

// A managed words config.
type GuardrailManagedWordsConfigArgs struct {
	// The managed word type to configure for the guardrail.
	Type GuardrailManagedWordsTypeInput `pulumi:"type"`
}

func (GuardrailManagedWordsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailManagedWordsConfig)(nil)).Elem()
}

func (i GuardrailManagedWordsConfigArgs) ToGuardrailManagedWordsConfigOutput() GuardrailManagedWordsConfigOutput {
	return i.ToGuardrailManagedWordsConfigOutputWithContext(context.Background())
}

func (i GuardrailManagedWordsConfigArgs) ToGuardrailManagedWordsConfigOutputWithContext(ctx context.Context) GuardrailManagedWordsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailManagedWordsConfigOutput)
}

// GuardrailManagedWordsConfigArrayInput is an input type that accepts GuardrailManagedWordsConfigArray and GuardrailManagedWordsConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailManagedWordsConfigArrayInput` via:
//
//	GuardrailManagedWordsConfigArray{ GuardrailManagedWordsConfigArgs{...} }
type GuardrailManagedWordsConfigArrayInput interface {
	pulumi.Input

	ToGuardrailManagedWordsConfigArrayOutput() GuardrailManagedWordsConfigArrayOutput
	ToGuardrailManagedWordsConfigArrayOutputWithContext(context.Context) GuardrailManagedWordsConfigArrayOutput
}

type GuardrailManagedWordsConfigArray []GuardrailManagedWordsConfigInput

func (GuardrailManagedWordsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailManagedWordsConfig)(nil)).Elem()
}

func (i GuardrailManagedWordsConfigArray) ToGuardrailManagedWordsConfigArrayOutput() GuardrailManagedWordsConfigArrayOutput {
	return i.ToGuardrailManagedWordsConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailManagedWordsConfigArray) ToGuardrailManagedWordsConfigArrayOutputWithContext(ctx context.Context) GuardrailManagedWordsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailManagedWordsConfigArrayOutput)
}

// A managed words config.
type GuardrailManagedWordsConfigOutput struct{ *pulumi.OutputState }

func (GuardrailManagedWordsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailManagedWordsConfig)(nil)).Elem()
}

func (o GuardrailManagedWordsConfigOutput) ToGuardrailManagedWordsConfigOutput() GuardrailManagedWordsConfigOutput {
	return o
}

func (o GuardrailManagedWordsConfigOutput) ToGuardrailManagedWordsConfigOutputWithContext(ctx context.Context) GuardrailManagedWordsConfigOutput {
	return o
}

// The managed word type to configure for the guardrail.
func (o GuardrailManagedWordsConfigOutput) Type() GuardrailManagedWordsTypeOutput {
	return o.ApplyT(func(v GuardrailManagedWordsConfig) GuardrailManagedWordsType { return v.Type }).(GuardrailManagedWordsTypeOutput)
}

type GuardrailManagedWordsConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailManagedWordsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailManagedWordsConfig)(nil)).Elem()
}

func (o GuardrailManagedWordsConfigArrayOutput) ToGuardrailManagedWordsConfigArrayOutput() GuardrailManagedWordsConfigArrayOutput {
	return o
}

func (o GuardrailManagedWordsConfigArrayOutput) ToGuardrailManagedWordsConfigArrayOutputWithContext(ctx context.Context) GuardrailManagedWordsConfigArrayOutput {
	return o
}

func (o GuardrailManagedWordsConfigArrayOutput) Index(i pulumi.IntInput) GuardrailManagedWordsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailManagedWordsConfig {
		return vs[0].([]GuardrailManagedWordsConfig)[vs[1].(int)]
	}).(GuardrailManagedWordsConfigOutput)
}

// Pii entity configuration.
type GuardrailPiiEntityConfig struct {
	// Configure guardrail action when the PII entity is detected.
	Action GuardrailSensitiveInformationAction `pulumi:"action"`
	// Configure guardrail type when the PII entity is detected.
	//
	// The following PIIs are used to block or mask sensitive information:
	//
	// - *General*
	//
	// - *ADDRESS*
	//
	// A physical address, such as "100 Main Street, Anytown, USA" or "Suite #12, Building 123". An address can include information such as the street, building, location, city, state, country, county, zip code, precinct, and neighborhood.
	// - *AGE*
	//
	// An individual's age, including the quantity and unit of time. For example, in the phrase "I am 40 years old," Guarrails recognizes "40 years" as an age.
	// - *NAME*
	//
	// An individual's name. This entity type does not include titles, such as Dr., Mr., Mrs., or Miss. guardrails doesn't apply this entity type to names that are part of organizations or addresses. For example, guardrails recognizes the "John Doe Organization" as an organization, and it recognizes "Jane Doe Street" as an address.
	// - *EMAIL*
	//
	// An email address, such as *marymajor@email.com* .
	// - *PHONE*
	//
	// A phone number. This entity type also includes fax and pager numbers.
	// - *USERNAME*
	//
	// A user name that identifies an account, such as a login name, screen name, nick name, or handle.
	// - *PASSWORD*
	//
	// An alphanumeric string that is used as a password, such as "* *very20special#pass** ".
	// - *DRIVER_ID*
	//
	// The number assigned to a driver's license, which is an official document permitting an individual to operate one or more motorized vehicles on a public road. A driver's license number consists of alphanumeric characters.
	// - *LICENSE_PLATE*
	//
	// A license plate for a vehicle is issued by the state or country where the vehicle is registered. The format for passenger vehicles is typically five to eight digits, consisting of upper-case letters and numbers. The format varies depending on the location of the issuing state or country.
	// - *VEHICLE_IDENTIFICATION_NUMBER*
	//
	// A Vehicle Identification Number (VIN) uniquely identifies a vehicle. VIN content and format are defined in the *ISO 3779* specification. Each country has specific codes and formats for VINs.
	// - *Finance*
	//
	// - *REDIT_DEBIT_CARD_CVV*
	//
	// A three-digit card verification code (CVV) that is present on VISA, MasterCard, and Discover credit and debit cards. For American Express credit or debit cards, the CVV is a four-digit numeric code.
	// - *CREDIT_DEBIT_CARD_EXPIRY*
	//
	// The expiration date for a credit or debit card. This number is usually four digits long and is often formatted as *month/year* or *MM/YY* . Guardrails recognizes expiration dates such as *01/21* , *01/2021* , and *Jan 2021* .
	// - *CREDIT_DEBIT_CARD_NUMBER*
	//
	// The number for a credit or debit card. These numbers can vary from 13 to 16 digits in length. However, Amazon Comprehend also recognizes credit or debit card numbers when only the last four digits are present.
	// - *PIN*
	//
	// A four-digit personal identification number (PIN) with which you can access your bank account.
	// - *INTERNATIONAL_BANK_ACCOUNT_NUMBER*
	//
	// An International Bank Account Number has specific formats in each country. For more information, see [www.iban.com/structure](https://docs.aws.amazon.com/https://www.iban.com/structure) .
	// - *SWIFT_CODE*
	//
	// A SWIFT code is a standard format of Bank Identifier Code (BIC) used to specify a particular bank or branch. Banks use these codes for money transfers such as international wire transfers.
	//
	// SWIFT codes consist of eight or 11 characters. The 11-digit codes refer to specific branches, while eight-digit codes (or 11-digit codes ending in 'XXX') refer to the head or primary office.
	// - *IT*
	//
	// - *IP_ADDRESS*
	//
	// An IPv4 address, such as *198.51.100.0* .
	// - *MAC_ADDRESS*
	//
	// A *media access control* (MAC) address is a unique identifier assigned to a network interface controller (NIC).
	// - *URL*
	//
	// A web address, such as *www.example.com* .
	// - *AWS_ACCESS_KEY*
	//
	// A unique identifier that's associated with a secret access key; you use the access key ID and secret access key to sign programmatic AWS requests cryptographically.
	// - *AWS_SECRET_KEY*
	//
	// A unique identifier that's associated with an access key. You use the access key ID and secret access key to sign programmatic AWS requests cryptographically.
	// - *USA specific*
	//
	// - *US_BANK_ACCOUNT_NUMBER*
	//
	// A US bank account number, which is typically 10 to 12 digits long.
	// - *US_BANK_ROUTING_NUMBER*
	//
	// A US bank account routing number. These are typically nine digits long,
	// - *US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER*
	//
	// A US Individual Taxpayer Identification Number (ITIN) is a nine-digit number that starts with a "9" and contain a "7" or "8" as the fourth digit. An ITIN can be formatted with a space or a dash after the third and forth digits.
	// - *US_PASSPORT_NUMBER*
	//
	// A US passport number. Passport numbers range from six to nine alphanumeric characters.
	// - *US_SOCIAL_SECURITY_NUMBER*
	//
	// A US Social Security Number (SSN) is a nine-digit number that is issued to US citizens, permanent residents, and temporary working residents.
	// - *Canada specific*
	//
	// - *CA_HEALTH_NUMBER*
	//
	// A Canadian Health Service Number is a 10-digit unique identifier, required for individuals to access healthcare benefits.
	// - *CA_SOCIAL_INSURANCE_NUMBER*
	//
	// A Canadian Social Insurance Number (SIN) is a nine-digit unique identifier, required for individuals to access government programs and benefits.
	//
	// The SIN is formatted as three groups of three digits, such as *123-456-789* . A SIN can be validated through a simple check-digit process called the [Luhn algorithm](https://docs.aws.amazon.com/https://www.wikipedia.org/wiki/Luhn_algorithm) .
	// - *UK Specific*
	//
	// - *UK_NATIONAL_HEALTH_SERVICE_NUMBER*
	//
	// A UK National Health Service Number is a 10-17 digit number, such as *485 777 3456* . The current system formats the 10-digit number with spaces after the third and sixth digits. The final digit is an error-detecting checksum.
	// - *UK_NATIONAL_INSURANCE_NUMBER*
	//
	// A UK National Insurance Number (NINO) provides individuals with access to National Insurance (social security) benefits. It is also used for some purposes in the UK tax system.
	//
	// The number is nine digits long and starts with two letters, followed by six numbers and one letter. A NINO can be formatted with a space or a dash after the two letters and after the second, forth, and sixth digits.
	// - *UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER*
	//
	// A UK Unique Taxpayer Reference (UTR) is a 10-digit number that identifies a taxpayer or a business.
	// - *Custom*
	//
	// - *Regex filter* - You can use a regular expressions to define patterns for a guardrail to recognize and act upon such as serial number, booking ID etc..
	Type GuardrailPiiEntityType `pulumi:"type"`
}

// GuardrailPiiEntityConfigInput is an input type that accepts GuardrailPiiEntityConfigArgs and GuardrailPiiEntityConfigOutput values.
// You can construct a concrete instance of `GuardrailPiiEntityConfigInput` via:
//
//	GuardrailPiiEntityConfigArgs{...}
type GuardrailPiiEntityConfigInput interface {
	pulumi.Input

	ToGuardrailPiiEntityConfigOutput() GuardrailPiiEntityConfigOutput
	ToGuardrailPiiEntityConfigOutputWithContext(context.Context) GuardrailPiiEntityConfigOutput
}

// Pii entity configuration.
type GuardrailPiiEntityConfigArgs struct {
	// Configure guardrail action when the PII entity is detected.
	Action GuardrailSensitiveInformationActionInput `pulumi:"action"`
	// Configure guardrail type when the PII entity is detected.
	//
	// The following PIIs are used to block or mask sensitive information:
	//
	// - *General*
	//
	// - *ADDRESS*
	//
	// A physical address, such as "100 Main Street, Anytown, USA" or "Suite #12, Building 123". An address can include information such as the street, building, location, city, state, country, county, zip code, precinct, and neighborhood.
	// - *AGE*
	//
	// An individual's age, including the quantity and unit of time. For example, in the phrase "I am 40 years old," Guarrails recognizes "40 years" as an age.
	// - *NAME*
	//
	// An individual's name. This entity type does not include titles, such as Dr., Mr., Mrs., or Miss. guardrails doesn't apply this entity type to names that are part of organizations or addresses. For example, guardrails recognizes the "John Doe Organization" as an organization, and it recognizes "Jane Doe Street" as an address.
	// - *EMAIL*
	//
	// An email address, such as *marymajor@email.com* .
	// - *PHONE*
	//
	// A phone number. This entity type also includes fax and pager numbers.
	// - *USERNAME*
	//
	// A user name that identifies an account, such as a login name, screen name, nick name, or handle.
	// - *PASSWORD*
	//
	// An alphanumeric string that is used as a password, such as "* *very20special#pass** ".
	// - *DRIVER_ID*
	//
	// The number assigned to a driver's license, which is an official document permitting an individual to operate one or more motorized vehicles on a public road. A driver's license number consists of alphanumeric characters.
	// - *LICENSE_PLATE*
	//
	// A license plate for a vehicle is issued by the state or country where the vehicle is registered. The format for passenger vehicles is typically five to eight digits, consisting of upper-case letters and numbers. The format varies depending on the location of the issuing state or country.
	// - *VEHICLE_IDENTIFICATION_NUMBER*
	//
	// A Vehicle Identification Number (VIN) uniquely identifies a vehicle. VIN content and format are defined in the *ISO 3779* specification. Each country has specific codes and formats for VINs.
	// - *Finance*
	//
	// - *REDIT_DEBIT_CARD_CVV*
	//
	// A three-digit card verification code (CVV) that is present on VISA, MasterCard, and Discover credit and debit cards. For American Express credit or debit cards, the CVV is a four-digit numeric code.
	// - *CREDIT_DEBIT_CARD_EXPIRY*
	//
	// The expiration date for a credit or debit card. This number is usually four digits long and is often formatted as *month/year* or *MM/YY* . Guardrails recognizes expiration dates such as *01/21* , *01/2021* , and *Jan 2021* .
	// - *CREDIT_DEBIT_CARD_NUMBER*
	//
	// The number for a credit or debit card. These numbers can vary from 13 to 16 digits in length. However, Amazon Comprehend also recognizes credit or debit card numbers when only the last four digits are present.
	// - *PIN*
	//
	// A four-digit personal identification number (PIN) with which you can access your bank account.
	// - *INTERNATIONAL_BANK_ACCOUNT_NUMBER*
	//
	// An International Bank Account Number has specific formats in each country. For more information, see [www.iban.com/structure](https://docs.aws.amazon.com/https://www.iban.com/structure) .
	// - *SWIFT_CODE*
	//
	// A SWIFT code is a standard format of Bank Identifier Code (BIC) used to specify a particular bank or branch. Banks use these codes for money transfers such as international wire transfers.
	//
	// SWIFT codes consist of eight or 11 characters. The 11-digit codes refer to specific branches, while eight-digit codes (or 11-digit codes ending in 'XXX') refer to the head or primary office.
	// - *IT*
	//
	// - *IP_ADDRESS*
	//
	// An IPv4 address, such as *198.51.100.0* .
	// - *MAC_ADDRESS*
	//
	// A *media access control* (MAC) address is a unique identifier assigned to a network interface controller (NIC).
	// - *URL*
	//
	// A web address, such as *www.example.com* .
	// - *AWS_ACCESS_KEY*
	//
	// A unique identifier that's associated with a secret access key; you use the access key ID and secret access key to sign programmatic AWS requests cryptographically.
	// - *AWS_SECRET_KEY*
	//
	// A unique identifier that's associated with an access key. You use the access key ID and secret access key to sign programmatic AWS requests cryptographically.
	// - *USA specific*
	//
	// - *US_BANK_ACCOUNT_NUMBER*
	//
	// A US bank account number, which is typically 10 to 12 digits long.
	// - *US_BANK_ROUTING_NUMBER*
	//
	// A US bank account routing number. These are typically nine digits long,
	// - *US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER*
	//
	// A US Individual Taxpayer Identification Number (ITIN) is a nine-digit number that starts with a "9" and contain a "7" or "8" as the fourth digit. An ITIN can be formatted with a space or a dash after the third and forth digits.
	// - *US_PASSPORT_NUMBER*
	//
	// A US passport number. Passport numbers range from six to nine alphanumeric characters.
	// - *US_SOCIAL_SECURITY_NUMBER*
	//
	// A US Social Security Number (SSN) is a nine-digit number that is issued to US citizens, permanent residents, and temporary working residents.
	// - *Canada specific*
	//
	// - *CA_HEALTH_NUMBER*
	//
	// A Canadian Health Service Number is a 10-digit unique identifier, required for individuals to access healthcare benefits.
	// - *CA_SOCIAL_INSURANCE_NUMBER*
	//
	// A Canadian Social Insurance Number (SIN) is a nine-digit unique identifier, required for individuals to access government programs and benefits.
	//
	// The SIN is formatted as three groups of three digits, such as *123-456-789* . A SIN can be validated through a simple check-digit process called the [Luhn algorithm](https://docs.aws.amazon.com/https://www.wikipedia.org/wiki/Luhn_algorithm) .
	// - *UK Specific*
	//
	// - *UK_NATIONAL_HEALTH_SERVICE_NUMBER*
	//
	// A UK National Health Service Number is a 10-17 digit number, such as *485 777 3456* . The current system formats the 10-digit number with spaces after the third and sixth digits. The final digit is an error-detecting checksum.
	// - *UK_NATIONAL_INSURANCE_NUMBER*
	//
	// A UK National Insurance Number (NINO) provides individuals with access to National Insurance (social security) benefits. It is also used for some purposes in the UK tax system.
	//
	// The number is nine digits long and starts with two letters, followed by six numbers and one letter. A NINO can be formatted with a space or a dash after the two letters and after the second, forth, and sixth digits.
	// - *UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER*
	//
	// A UK Unique Taxpayer Reference (UTR) is a 10-digit number that identifies a taxpayer or a business.
	// - *Custom*
	//
	// - *Regex filter* - You can use a regular expressions to define patterns for a guardrail to recognize and act upon such as serial number, booking ID etc..
	Type GuardrailPiiEntityTypeInput `pulumi:"type"`
}

func (GuardrailPiiEntityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailPiiEntityConfig)(nil)).Elem()
}

func (i GuardrailPiiEntityConfigArgs) ToGuardrailPiiEntityConfigOutput() GuardrailPiiEntityConfigOutput {
	return i.ToGuardrailPiiEntityConfigOutputWithContext(context.Background())
}

func (i GuardrailPiiEntityConfigArgs) ToGuardrailPiiEntityConfigOutputWithContext(ctx context.Context) GuardrailPiiEntityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailPiiEntityConfigOutput)
}

// GuardrailPiiEntityConfigArrayInput is an input type that accepts GuardrailPiiEntityConfigArray and GuardrailPiiEntityConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailPiiEntityConfigArrayInput` via:
//
//	GuardrailPiiEntityConfigArray{ GuardrailPiiEntityConfigArgs{...} }
type GuardrailPiiEntityConfigArrayInput interface {
	pulumi.Input

	ToGuardrailPiiEntityConfigArrayOutput() GuardrailPiiEntityConfigArrayOutput
	ToGuardrailPiiEntityConfigArrayOutputWithContext(context.Context) GuardrailPiiEntityConfigArrayOutput
}

type GuardrailPiiEntityConfigArray []GuardrailPiiEntityConfigInput

func (GuardrailPiiEntityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailPiiEntityConfig)(nil)).Elem()
}

func (i GuardrailPiiEntityConfigArray) ToGuardrailPiiEntityConfigArrayOutput() GuardrailPiiEntityConfigArrayOutput {
	return i.ToGuardrailPiiEntityConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailPiiEntityConfigArray) ToGuardrailPiiEntityConfigArrayOutputWithContext(ctx context.Context) GuardrailPiiEntityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailPiiEntityConfigArrayOutput)
}

// Pii entity configuration.
type GuardrailPiiEntityConfigOutput struct{ *pulumi.OutputState }

func (GuardrailPiiEntityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailPiiEntityConfig)(nil)).Elem()
}

func (o GuardrailPiiEntityConfigOutput) ToGuardrailPiiEntityConfigOutput() GuardrailPiiEntityConfigOutput {
	return o
}

func (o GuardrailPiiEntityConfigOutput) ToGuardrailPiiEntityConfigOutputWithContext(ctx context.Context) GuardrailPiiEntityConfigOutput {
	return o
}

// Configure guardrail action when the PII entity is detected.
func (o GuardrailPiiEntityConfigOutput) Action() GuardrailSensitiveInformationActionOutput {
	return o.ApplyT(func(v GuardrailPiiEntityConfig) GuardrailSensitiveInformationAction { return v.Action }).(GuardrailSensitiveInformationActionOutput)
}

// Configure guardrail type when the PII entity is detected.
//
// The following PIIs are used to block or mask sensitive information:
//
// - *General*
//
// - *ADDRESS*
//
// A physical address, such as "100 Main Street, Anytown, USA" or "Suite #12, Building 123". An address can include information such as the street, building, location, city, state, country, county, zip code, precinct, and neighborhood.
// - *AGE*
//
// An individual's age, including the quantity and unit of time. For example, in the phrase "I am 40 years old," Guarrails recognizes "40 years" as an age.
// - *NAME*
//
// An individual's name. This entity type does not include titles, such as Dr., Mr., Mrs., or Miss. guardrails doesn't apply this entity type to names that are part of organizations or addresses. For example, guardrails recognizes the "John Doe Organization" as an organization, and it recognizes "Jane Doe Street" as an address.
// - *EMAIL*
//
// An email address, such as *marymajor@email.com* .
// - *PHONE*
//
// A phone number. This entity type also includes fax and pager numbers.
// - *USERNAME*
//
// A user name that identifies an account, such as a login name, screen name, nick name, or handle.
// - *PASSWORD*
//
// An alphanumeric string that is used as a password, such as "* *very20special#pass** ".
// - *DRIVER_ID*
//
// The number assigned to a driver's license, which is an official document permitting an individual to operate one or more motorized vehicles on a public road. A driver's license number consists of alphanumeric characters.
// - *LICENSE_PLATE*
//
// A license plate for a vehicle is issued by the state or country where the vehicle is registered. The format for passenger vehicles is typically five to eight digits, consisting of upper-case letters and numbers. The format varies depending on the location of the issuing state or country.
// - *VEHICLE_IDENTIFICATION_NUMBER*
//
// A Vehicle Identification Number (VIN) uniquely identifies a vehicle. VIN content and format are defined in the *ISO 3779* specification. Each country has specific codes and formats for VINs.
// - *Finance*
//
// - *REDIT_DEBIT_CARD_CVV*
//
// A three-digit card verification code (CVV) that is present on VISA, MasterCard, and Discover credit and debit cards. For American Express credit or debit cards, the CVV is a four-digit numeric code.
// - *CREDIT_DEBIT_CARD_EXPIRY*
//
// The expiration date for a credit or debit card. This number is usually four digits long and is often formatted as *month/year* or *MM/YY* . Guardrails recognizes expiration dates such as *01/21* , *01/2021* , and *Jan 2021* .
// - *CREDIT_DEBIT_CARD_NUMBER*
//
// The number for a credit or debit card. These numbers can vary from 13 to 16 digits in length. However, Amazon Comprehend also recognizes credit or debit card numbers when only the last four digits are present.
// - *PIN*
//
// A four-digit personal identification number (PIN) with which you can access your bank account.
// - *INTERNATIONAL_BANK_ACCOUNT_NUMBER*
//
// An International Bank Account Number has specific formats in each country. For more information, see [www.iban.com/structure](https://docs.aws.amazon.com/https://www.iban.com/structure) .
// - *SWIFT_CODE*
//
// A SWIFT code is a standard format of Bank Identifier Code (BIC) used to specify a particular bank or branch. Banks use these codes for money transfers such as international wire transfers.
//
// SWIFT codes consist of eight or 11 characters. The 11-digit codes refer to specific branches, while eight-digit codes (or 11-digit codes ending in 'XXX') refer to the head or primary office.
// - *IT*
//
// - *IP_ADDRESS*
//
// An IPv4 address, such as *198.51.100.0* .
// - *MAC_ADDRESS*
//
// A *media access control* (MAC) address is a unique identifier assigned to a network interface controller (NIC).
// - *URL*
//
// A web address, such as *www.example.com* .
// - *AWS_ACCESS_KEY*
//
// A unique identifier that's associated with a secret access key; you use the access key ID and secret access key to sign programmatic AWS requests cryptographically.
// - *AWS_SECRET_KEY*
//
// A unique identifier that's associated with an access key. You use the access key ID and secret access key to sign programmatic AWS requests cryptographically.
// - *USA specific*
//
// - *US_BANK_ACCOUNT_NUMBER*
//
// A US bank account number, which is typically 10 to 12 digits long.
// - *US_BANK_ROUTING_NUMBER*
//
// A US bank account routing number. These are typically nine digits long,
// - *US_INDIVIDUAL_TAX_IDENTIFICATION_NUMBER*
//
// A US Individual Taxpayer Identification Number (ITIN) is a nine-digit number that starts with a "9" and contain a "7" or "8" as the fourth digit. An ITIN can be formatted with a space or a dash after the third and forth digits.
// - *US_PASSPORT_NUMBER*
//
// A US passport number. Passport numbers range from six to nine alphanumeric characters.
// - *US_SOCIAL_SECURITY_NUMBER*
//
// A US Social Security Number (SSN) is a nine-digit number that is issued to US citizens, permanent residents, and temporary working residents.
// - *Canada specific*
//
// - *CA_HEALTH_NUMBER*
//
// A Canadian Health Service Number is a 10-digit unique identifier, required for individuals to access healthcare benefits.
// - *CA_SOCIAL_INSURANCE_NUMBER*
//
// A Canadian Social Insurance Number (SIN) is a nine-digit unique identifier, required for individuals to access government programs and benefits.
//
// The SIN is formatted as three groups of three digits, such as *123-456-789* . A SIN can be validated through a simple check-digit process called the [Luhn algorithm](https://docs.aws.amazon.com/https://www.wikipedia.org/wiki/Luhn_algorithm) .
// - *UK Specific*
//
// - *UK_NATIONAL_HEALTH_SERVICE_NUMBER*
//
// A UK National Health Service Number is a 10-17 digit number, such as *485 777 3456* . The current system formats the 10-digit number with spaces after the third and sixth digits. The final digit is an error-detecting checksum.
// - *UK_NATIONAL_INSURANCE_NUMBER*
//
// A UK National Insurance Number (NINO) provides individuals with access to National Insurance (social security) benefits. It is also used for some purposes in the UK tax system.
//
// The number is nine digits long and starts with two letters, followed by six numbers and one letter. A NINO can be formatted with a space or a dash after the two letters and after the second, forth, and sixth digits.
// - *UK_UNIQUE_TAXPAYER_REFERENCE_NUMBER*
//
// A UK Unique Taxpayer Reference (UTR) is a 10-digit number that identifies a taxpayer or a business.
// - *Custom*
//
// - *Regex filter* - You can use a regular expressions to define patterns for a guardrail to recognize and act upon such as serial number, booking ID etc..
func (o GuardrailPiiEntityConfigOutput) Type() GuardrailPiiEntityTypeOutput {
	return o.ApplyT(func(v GuardrailPiiEntityConfig) GuardrailPiiEntityType { return v.Type }).(GuardrailPiiEntityTypeOutput)
}

type GuardrailPiiEntityConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailPiiEntityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailPiiEntityConfig)(nil)).Elem()
}

func (o GuardrailPiiEntityConfigArrayOutput) ToGuardrailPiiEntityConfigArrayOutput() GuardrailPiiEntityConfigArrayOutput {
	return o
}

func (o GuardrailPiiEntityConfigArrayOutput) ToGuardrailPiiEntityConfigArrayOutputWithContext(ctx context.Context) GuardrailPiiEntityConfigArrayOutput {
	return o
}

func (o GuardrailPiiEntityConfigArrayOutput) Index(i pulumi.IntInput) GuardrailPiiEntityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailPiiEntityConfig {
		return vs[0].([]GuardrailPiiEntityConfig)[vs[1].(int)]
	}).(GuardrailPiiEntityConfigOutput)
}

// A regex configuration.
type GuardrailRegexConfig struct {
	// The guardrail action to configure when matching regular expression is detected.
	Action GuardrailSensitiveInformationAction `pulumi:"action"`
	// The regex description.
	Description *string `pulumi:"description"`
	// The regex name.
	Name string `pulumi:"name"`
	// The regex pattern.
	Pattern string `pulumi:"pattern"`
}

// GuardrailRegexConfigInput is an input type that accepts GuardrailRegexConfigArgs and GuardrailRegexConfigOutput values.
// You can construct a concrete instance of `GuardrailRegexConfigInput` via:
//
//	GuardrailRegexConfigArgs{...}
type GuardrailRegexConfigInput interface {
	pulumi.Input

	ToGuardrailRegexConfigOutput() GuardrailRegexConfigOutput
	ToGuardrailRegexConfigOutputWithContext(context.Context) GuardrailRegexConfigOutput
}

// A regex configuration.
type GuardrailRegexConfigArgs struct {
	// The guardrail action to configure when matching regular expression is detected.
	Action GuardrailSensitiveInformationActionInput `pulumi:"action"`
	// The regex description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The regex name.
	Name pulumi.StringInput `pulumi:"name"`
	// The regex pattern.
	Pattern pulumi.StringInput `pulumi:"pattern"`
}

func (GuardrailRegexConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailRegexConfig)(nil)).Elem()
}

func (i GuardrailRegexConfigArgs) ToGuardrailRegexConfigOutput() GuardrailRegexConfigOutput {
	return i.ToGuardrailRegexConfigOutputWithContext(context.Background())
}

func (i GuardrailRegexConfigArgs) ToGuardrailRegexConfigOutputWithContext(ctx context.Context) GuardrailRegexConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailRegexConfigOutput)
}

// GuardrailRegexConfigArrayInput is an input type that accepts GuardrailRegexConfigArray and GuardrailRegexConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailRegexConfigArrayInput` via:
//
//	GuardrailRegexConfigArray{ GuardrailRegexConfigArgs{...} }
type GuardrailRegexConfigArrayInput interface {
	pulumi.Input

	ToGuardrailRegexConfigArrayOutput() GuardrailRegexConfigArrayOutput
	ToGuardrailRegexConfigArrayOutputWithContext(context.Context) GuardrailRegexConfigArrayOutput
}

type GuardrailRegexConfigArray []GuardrailRegexConfigInput

func (GuardrailRegexConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailRegexConfig)(nil)).Elem()
}

func (i GuardrailRegexConfigArray) ToGuardrailRegexConfigArrayOutput() GuardrailRegexConfigArrayOutput {
	return i.ToGuardrailRegexConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailRegexConfigArray) ToGuardrailRegexConfigArrayOutputWithContext(ctx context.Context) GuardrailRegexConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailRegexConfigArrayOutput)
}

// A regex configuration.
type GuardrailRegexConfigOutput struct{ *pulumi.OutputState }

func (GuardrailRegexConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailRegexConfig)(nil)).Elem()
}

func (o GuardrailRegexConfigOutput) ToGuardrailRegexConfigOutput() GuardrailRegexConfigOutput {
	return o
}

func (o GuardrailRegexConfigOutput) ToGuardrailRegexConfigOutputWithContext(ctx context.Context) GuardrailRegexConfigOutput {
	return o
}

// The guardrail action to configure when matching regular expression is detected.
func (o GuardrailRegexConfigOutput) Action() GuardrailSensitiveInformationActionOutput {
	return o.ApplyT(func(v GuardrailRegexConfig) GuardrailSensitiveInformationAction { return v.Action }).(GuardrailSensitiveInformationActionOutput)
}

// The regex description.
func (o GuardrailRegexConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardrailRegexConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The regex name.
func (o GuardrailRegexConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GuardrailRegexConfig) string { return v.Name }).(pulumi.StringOutput)
}

// The regex pattern.
func (o GuardrailRegexConfigOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v GuardrailRegexConfig) string { return v.Pattern }).(pulumi.StringOutput)
}

type GuardrailRegexConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailRegexConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailRegexConfig)(nil)).Elem()
}

func (o GuardrailRegexConfigArrayOutput) ToGuardrailRegexConfigArrayOutput() GuardrailRegexConfigArrayOutput {
	return o
}

func (o GuardrailRegexConfigArrayOutput) ToGuardrailRegexConfigArrayOutputWithContext(ctx context.Context) GuardrailRegexConfigArrayOutput {
	return o
}

func (o GuardrailRegexConfigArrayOutput) Index(i pulumi.IntInput) GuardrailRegexConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailRegexConfig {
		return vs[0].([]GuardrailRegexConfig)[vs[1].(int)]
	}).(GuardrailRegexConfigOutput)
}

// Sensitive information policy config for a guardrail.
type GuardrailSensitiveInformationPolicyConfig struct {
	// List of entities.
	PiiEntitiesConfig []GuardrailPiiEntityConfig `pulumi:"piiEntitiesConfig"`
	// List of regex.
	RegexesConfig []GuardrailRegexConfig `pulumi:"regexesConfig"`
}

// GuardrailSensitiveInformationPolicyConfigInput is an input type that accepts GuardrailSensitiveInformationPolicyConfigArgs and GuardrailSensitiveInformationPolicyConfigOutput values.
// You can construct a concrete instance of `GuardrailSensitiveInformationPolicyConfigInput` via:
//
//	GuardrailSensitiveInformationPolicyConfigArgs{...}
type GuardrailSensitiveInformationPolicyConfigInput interface {
	pulumi.Input

	ToGuardrailSensitiveInformationPolicyConfigOutput() GuardrailSensitiveInformationPolicyConfigOutput
	ToGuardrailSensitiveInformationPolicyConfigOutputWithContext(context.Context) GuardrailSensitiveInformationPolicyConfigOutput
}

// Sensitive information policy config for a guardrail.
type GuardrailSensitiveInformationPolicyConfigArgs struct {
	// List of entities.
	PiiEntitiesConfig GuardrailPiiEntityConfigArrayInput `pulumi:"piiEntitiesConfig"`
	// List of regex.
	RegexesConfig GuardrailRegexConfigArrayInput `pulumi:"regexesConfig"`
}

func (GuardrailSensitiveInformationPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailSensitiveInformationPolicyConfig)(nil)).Elem()
}

func (i GuardrailSensitiveInformationPolicyConfigArgs) ToGuardrailSensitiveInformationPolicyConfigOutput() GuardrailSensitiveInformationPolicyConfigOutput {
	return i.ToGuardrailSensitiveInformationPolicyConfigOutputWithContext(context.Background())
}

func (i GuardrailSensitiveInformationPolicyConfigArgs) ToGuardrailSensitiveInformationPolicyConfigOutputWithContext(ctx context.Context) GuardrailSensitiveInformationPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailSensitiveInformationPolicyConfigOutput)
}

func (i GuardrailSensitiveInformationPolicyConfigArgs) ToGuardrailSensitiveInformationPolicyConfigPtrOutput() GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return i.ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(context.Background())
}

func (i GuardrailSensitiveInformationPolicyConfigArgs) ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailSensitiveInformationPolicyConfigOutput).ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(ctx)
}

// GuardrailSensitiveInformationPolicyConfigPtrInput is an input type that accepts GuardrailSensitiveInformationPolicyConfigArgs, GuardrailSensitiveInformationPolicyConfigPtr and GuardrailSensitiveInformationPolicyConfigPtrOutput values.
// You can construct a concrete instance of `GuardrailSensitiveInformationPolicyConfigPtrInput` via:
//
//	        GuardrailSensitiveInformationPolicyConfigArgs{...}
//
//	or:
//
//	        nil
type GuardrailSensitiveInformationPolicyConfigPtrInput interface {
	pulumi.Input

	ToGuardrailSensitiveInformationPolicyConfigPtrOutput() GuardrailSensitiveInformationPolicyConfigPtrOutput
	ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(context.Context) GuardrailSensitiveInformationPolicyConfigPtrOutput
}

type guardrailSensitiveInformationPolicyConfigPtrType GuardrailSensitiveInformationPolicyConfigArgs

func GuardrailSensitiveInformationPolicyConfigPtr(v *GuardrailSensitiveInformationPolicyConfigArgs) GuardrailSensitiveInformationPolicyConfigPtrInput {
	return (*guardrailSensitiveInformationPolicyConfigPtrType)(v)
}

func (*guardrailSensitiveInformationPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailSensitiveInformationPolicyConfig)(nil)).Elem()
}

func (i *guardrailSensitiveInformationPolicyConfigPtrType) ToGuardrailSensitiveInformationPolicyConfigPtrOutput() GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return i.ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *guardrailSensitiveInformationPolicyConfigPtrType) ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailSensitiveInformationPolicyConfigPtrOutput)
}

// Sensitive information policy config for a guardrail.
type GuardrailSensitiveInformationPolicyConfigOutput struct{ *pulumi.OutputState }

func (GuardrailSensitiveInformationPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailSensitiveInformationPolicyConfig)(nil)).Elem()
}

func (o GuardrailSensitiveInformationPolicyConfigOutput) ToGuardrailSensitiveInformationPolicyConfigOutput() GuardrailSensitiveInformationPolicyConfigOutput {
	return o
}

func (o GuardrailSensitiveInformationPolicyConfigOutput) ToGuardrailSensitiveInformationPolicyConfigOutputWithContext(ctx context.Context) GuardrailSensitiveInformationPolicyConfigOutput {
	return o
}

func (o GuardrailSensitiveInformationPolicyConfigOutput) ToGuardrailSensitiveInformationPolicyConfigPtrOutput() GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return o.ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(context.Background())
}

func (o GuardrailSensitiveInformationPolicyConfigOutput) ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardrailSensitiveInformationPolicyConfig) *GuardrailSensitiveInformationPolicyConfig {
		return &v
	}).(GuardrailSensitiveInformationPolicyConfigPtrOutput)
}

// List of entities.
func (o GuardrailSensitiveInformationPolicyConfigOutput) PiiEntitiesConfig() GuardrailPiiEntityConfigArrayOutput {
	return o.ApplyT(func(v GuardrailSensitiveInformationPolicyConfig) []GuardrailPiiEntityConfig {
		return v.PiiEntitiesConfig
	}).(GuardrailPiiEntityConfigArrayOutput)
}

// List of regex.
func (o GuardrailSensitiveInformationPolicyConfigOutput) RegexesConfig() GuardrailRegexConfigArrayOutput {
	return o.ApplyT(func(v GuardrailSensitiveInformationPolicyConfig) []GuardrailRegexConfig { return v.RegexesConfig }).(GuardrailRegexConfigArrayOutput)
}

type GuardrailSensitiveInformationPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (GuardrailSensitiveInformationPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailSensitiveInformationPolicyConfig)(nil)).Elem()
}

func (o GuardrailSensitiveInformationPolicyConfigPtrOutput) ToGuardrailSensitiveInformationPolicyConfigPtrOutput() GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return o
}

func (o GuardrailSensitiveInformationPolicyConfigPtrOutput) ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return o
}

func (o GuardrailSensitiveInformationPolicyConfigPtrOutput) Elem() GuardrailSensitiveInformationPolicyConfigOutput {
	return o.ApplyT(func(v *GuardrailSensitiveInformationPolicyConfig) GuardrailSensitiveInformationPolicyConfig {
		if v != nil {
			return *v
		}
		var ret GuardrailSensitiveInformationPolicyConfig
		return ret
	}).(GuardrailSensitiveInformationPolicyConfigOutput)
}

// List of entities.
func (o GuardrailSensitiveInformationPolicyConfigPtrOutput) PiiEntitiesConfig() GuardrailPiiEntityConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailSensitiveInformationPolicyConfig) []GuardrailPiiEntityConfig {
		if v == nil {
			return nil
		}
		return v.PiiEntitiesConfig
	}).(GuardrailPiiEntityConfigArrayOutput)
}

// List of regex.
func (o GuardrailSensitiveInformationPolicyConfigPtrOutput) RegexesConfig() GuardrailRegexConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailSensitiveInformationPolicyConfig) []GuardrailRegexConfig {
		if v == nil {
			return nil
		}
		return v.RegexesConfig
	}).(GuardrailRegexConfigArrayOutput)
}

// Definition of the key/value pair for a tag
type GuardrailTag struct {
	// Tag Key
	Key string `pulumi:"key"`
	// Tag Value
	Value string `pulumi:"value"`
}

// Topic config in topic policy.
type GuardrailTopicConfig struct {
	// Definition of topic in topic policy
	Definition string `pulumi:"definition"`
	// List of text examples
	Examples []string `pulumi:"examples"`
	// Name of topic in topic policy
	Name string `pulumi:"name"`
	// Specifies to deny the topic.
	Type GuardrailTopicType `pulumi:"type"`
}

// GuardrailTopicConfigInput is an input type that accepts GuardrailTopicConfigArgs and GuardrailTopicConfigOutput values.
// You can construct a concrete instance of `GuardrailTopicConfigInput` via:
//
//	GuardrailTopicConfigArgs{...}
type GuardrailTopicConfigInput interface {
	pulumi.Input

	ToGuardrailTopicConfigOutput() GuardrailTopicConfigOutput
	ToGuardrailTopicConfigOutputWithContext(context.Context) GuardrailTopicConfigOutput
}

// Topic config in topic policy.
type GuardrailTopicConfigArgs struct {
	// Definition of topic in topic policy
	Definition pulumi.StringInput `pulumi:"definition"`
	// List of text examples
	Examples pulumi.StringArrayInput `pulumi:"examples"`
	// Name of topic in topic policy
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies to deny the topic.
	Type GuardrailTopicTypeInput `pulumi:"type"`
}

func (GuardrailTopicConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailTopicConfig)(nil)).Elem()
}

func (i GuardrailTopicConfigArgs) ToGuardrailTopicConfigOutput() GuardrailTopicConfigOutput {
	return i.ToGuardrailTopicConfigOutputWithContext(context.Background())
}

func (i GuardrailTopicConfigArgs) ToGuardrailTopicConfigOutputWithContext(ctx context.Context) GuardrailTopicConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailTopicConfigOutput)
}

// GuardrailTopicConfigArrayInput is an input type that accepts GuardrailTopicConfigArray and GuardrailTopicConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailTopicConfigArrayInput` via:
//
//	GuardrailTopicConfigArray{ GuardrailTopicConfigArgs{...} }
type GuardrailTopicConfigArrayInput interface {
	pulumi.Input

	ToGuardrailTopicConfigArrayOutput() GuardrailTopicConfigArrayOutput
	ToGuardrailTopicConfigArrayOutputWithContext(context.Context) GuardrailTopicConfigArrayOutput
}

type GuardrailTopicConfigArray []GuardrailTopicConfigInput

func (GuardrailTopicConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailTopicConfig)(nil)).Elem()
}

func (i GuardrailTopicConfigArray) ToGuardrailTopicConfigArrayOutput() GuardrailTopicConfigArrayOutput {
	return i.ToGuardrailTopicConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailTopicConfigArray) ToGuardrailTopicConfigArrayOutputWithContext(ctx context.Context) GuardrailTopicConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailTopicConfigArrayOutput)
}

// Topic config in topic policy.
type GuardrailTopicConfigOutput struct{ *pulumi.OutputState }

func (GuardrailTopicConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailTopicConfig)(nil)).Elem()
}

func (o GuardrailTopicConfigOutput) ToGuardrailTopicConfigOutput() GuardrailTopicConfigOutput {
	return o
}

func (o GuardrailTopicConfigOutput) ToGuardrailTopicConfigOutputWithContext(ctx context.Context) GuardrailTopicConfigOutput {
	return o
}

// Definition of topic in topic policy
func (o GuardrailTopicConfigOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GuardrailTopicConfig) string { return v.Definition }).(pulumi.StringOutput)
}

// List of text examples
func (o GuardrailTopicConfigOutput) Examples() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuardrailTopicConfig) []string { return v.Examples }).(pulumi.StringArrayOutput)
}

// Name of topic in topic policy
func (o GuardrailTopicConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GuardrailTopicConfig) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies to deny the topic.
func (o GuardrailTopicConfigOutput) Type() GuardrailTopicTypeOutput {
	return o.ApplyT(func(v GuardrailTopicConfig) GuardrailTopicType { return v.Type }).(GuardrailTopicTypeOutput)
}

type GuardrailTopicConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailTopicConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailTopicConfig)(nil)).Elem()
}

func (o GuardrailTopicConfigArrayOutput) ToGuardrailTopicConfigArrayOutput() GuardrailTopicConfigArrayOutput {
	return o
}

func (o GuardrailTopicConfigArrayOutput) ToGuardrailTopicConfigArrayOutputWithContext(ctx context.Context) GuardrailTopicConfigArrayOutput {
	return o
}

func (o GuardrailTopicConfigArrayOutput) Index(i pulumi.IntInput) GuardrailTopicConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailTopicConfig {
		return vs[0].([]GuardrailTopicConfig)[vs[1].(int)]
	}).(GuardrailTopicConfigOutput)
}

// Topic policy config for a guardrail.
type GuardrailTopicPolicyConfig struct {
	// List of topic configs in topic policy.
	TopicsConfig []GuardrailTopicConfig `pulumi:"topicsConfig"`
}

// GuardrailTopicPolicyConfigInput is an input type that accepts GuardrailTopicPolicyConfigArgs and GuardrailTopicPolicyConfigOutput values.
// You can construct a concrete instance of `GuardrailTopicPolicyConfigInput` via:
//
//	GuardrailTopicPolicyConfigArgs{...}
type GuardrailTopicPolicyConfigInput interface {
	pulumi.Input

	ToGuardrailTopicPolicyConfigOutput() GuardrailTopicPolicyConfigOutput
	ToGuardrailTopicPolicyConfigOutputWithContext(context.Context) GuardrailTopicPolicyConfigOutput
}

// Topic policy config for a guardrail.
type GuardrailTopicPolicyConfigArgs struct {
	// List of topic configs in topic policy.
	TopicsConfig GuardrailTopicConfigArrayInput `pulumi:"topicsConfig"`
}

func (GuardrailTopicPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailTopicPolicyConfig)(nil)).Elem()
}

func (i GuardrailTopicPolicyConfigArgs) ToGuardrailTopicPolicyConfigOutput() GuardrailTopicPolicyConfigOutput {
	return i.ToGuardrailTopicPolicyConfigOutputWithContext(context.Background())
}

func (i GuardrailTopicPolicyConfigArgs) ToGuardrailTopicPolicyConfigOutputWithContext(ctx context.Context) GuardrailTopicPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailTopicPolicyConfigOutput)
}

func (i GuardrailTopicPolicyConfigArgs) ToGuardrailTopicPolicyConfigPtrOutput() GuardrailTopicPolicyConfigPtrOutput {
	return i.ToGuardrailTopicPolicyConfigPtrOutputWithContext(context.Background())
}

func (i GuardrailTopicPolicyConfigArgs) ToGuardrailTopicPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailTopicPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailTopicPolicyConfigOutput).ToGuardrailTopicPolicyConfigPtrOutputWithContext(ctx)
}

// GuardrailTopicPolicyConfigPtrInput is an input type that accepts GuardrailTopicPolicyConfigArgs, GuardrailTopicPolicyConfigPtr and GuardrailTopicPolicyConfigPtrOutput values.
// You can construct a concrete instance of `GuardrailTopicPolicyConfigPtrInput` via:
//
//	        GuardrailTopicPolicyConfigArgs{...}
//
//	or:
//
//	        nil
type GuardrailTopicPolicyConfigPtrInput interface {
	pulumi.Input

	ToGuardrailTopicPolicyConfigPtrOutput() GuardrailTopicPolicyConfigPtrOutput
	ToGuardrailTopicPolicyConfigPtrOutputWithContext(context.Context) GuardrailTopicPolicyConfigPtrOutput
}

type guardrailTopicPolicyConfigPtrType GuardrailTopicPolicyConfigArgs

func GuardrailTopicPolicyConfigPtr(v *GuardrailTopicPolicyConfigArgs) GuardrailTopicPolicyConfigPtrInput {
	return (*guardrailTopicPolicyConfigPtrType)(v)
}

func (*guardrailTopicPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailTopicPolicyConfig)(nil)).Elem()
}

func (i *guardrailTopicPolicyConfigPtrType) ToGuardrailTopicPolicyConfigPtrOutput() GuardrailTopicPolicyConfigPtrOutput {
	return i.ToGuardrailTopicPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *guardrailTopicPolicyConfigPtrType) ToGuardrailTopicPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailTopicPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailTopicPolicyConfigPtrOutput)
}

// Topic policy config for a guardrail.
type GuardrailTopicPolicyConfigOutput struct{ *pulumi.OutputState }

func (GuardrailTopicPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailTopicPolicyConfig)(nil)).Elem()
}

func (o GuardrailTopicPolicyConfigOutput) ToGuardrailTopicPolicyConfigOutput() GuardrailTopicPolicyConfigOutput {
	return o
}

func (o GuardrailTopicPolicyConfigOutput) ToGuardrailTopicPolicyConfigOutputWithContext(ctx context.Context) GuardrailTopicPolicyConfigOutput {
	return o
}

func (o GuardrailTopicPolicyConfigOutput) ToGuardrailTopicPolicyConfigPtrOutput() GuardrailTopicPolicyConfigPtrOutput {
	return o.ToGuardrailTopicPolicyConfigPtrOutputWithContext(context.Background())
}

func (o GuardrailTopicPolicyConfigOutput) ToGuardrailTopicPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailTopicPolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardrailTopicPolicyConfig) *GuardrailTopicPolicyConfig {
		return &v
	}).(GuardrailTopicPolicyConfigPtrOutput)
}

// List of topic configs in topic policy.
func (o GuardrailTopicPolicyConfigOutput) TopicsConfig() GuardrailTopicConfigArrayOutput {
	return o.ApplyT(func(v GuardrailTopicPolicyConfig) []GuardrailTopicConfig { return v.TopicsConfig }).(GuardrailTopicConfigArrayOutput)
}

type GuardrailTopicPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (GuardrailTopicPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailTopicPolicyConfig)(nil)).Elem()
}

func (o GuardrailTopicPolicyConfigPtrOutput) ToGuardrailTopicPolicyConfigPtrOutput() GuardrailTopicPolicyConfigPtrOutput {
	return o
}

func (o GuardrailTopicPolicyConfigPtrOutput) ToGuardrailTopicPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailTopicPolicyConfigPtrOutput {
	return o
}

func (o GuardrailTopicPolicyConfigPtrOutput) Elem() GuardrailTopicPolicyConfigOutput {
	return o.ApplyT(func(v *GuardrailTopicPolicyConfig) GuardrailTopicPolicyConfig {
		if v != nil {
			return *v
		}
		var ret GuardrailTopicPolicyConfig
		return ret
	}).(GuardrailTopicPolicyConfigOutput)
}

// List of topic configs in topic policy.
func (o GuardrailTopicPolicyConfigPtrOutput) TopicsConfig() GuardrailTopicConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailTopicPolicyConfig) []GuardrailTopicConfig {
		if v == nil {
			return nil
		}
		return v.TopicsConfig
	}).(GuardrailTopicConfigArrayOutput)
}

// A custom word config.
type GuardrailWordConfig struct {
	// The custom word text.
	Text string `pulumi:"text"`
}

// GuardrailWordConfigInput is an input type that accepts GuardrailWordConfigArgs and GuardrailWordConfigOutput values.
// You can construct a concrete instance of `GuardrailWordConfigInput` via:
//
//	GuardrailWordConfigArgs{...}
type GuardrailWordConfigInput interface {
	pulumi.Input

	ToGuardrailWordConfigOutput() GuardrailWordConfigOutput
	ToGuardrailWordConfigOutputWithContext(context.Context) GuardrailWordConfigOutput
}

// A custom word config.
type GuardrailWordConfigArgs struct {
	// The custom word text.
	Text pulumi.StringInput `pulumi:"text"`
}

func (GuardrailWordConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailWordConfig)(nil)).Elem()
}

func (i GuardrailWordConfigArgs) ToGuardrailWordConfigOutput() GuardrailWordConfigOutput {
	return i.ToGuardrailWordConfigOutputWithContext(context.Background())
}

func (i GuardrailWordConfigArgs) ToGuardrailWordConfigOutputWithContext(ctx context.Context) GuardrailWordConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailWordConfigOutput)
}

// GuardrailWordConfigArrayInput is an input type that accepts GuardrailWordConfigArray and GuardrailWordConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailWordConfigArrayInput` via:
//
//	GuardrailWordConfigArray{ GuardrailWordConfigArgs{...} }
type GuardrailWordConfigArrayInput interface {
	pulumi.Input

	ToGuardrailWordConfigArrayOutput() GuardrailWordConfigArrayOutput
	ToGuardrailWordConfigArrayOutputWithContext(context.Context) GuardrailWordConfigArrayOutput
}

type GuardrailWordConfigArray []GuardrailWordConfigInput

func (GuardrailWordConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailWordConfig)(nil)).Elem()
}

func (i GuardrailWordConfigArray) ToGuardrailWordConfigArrayOutput() GuardrailWordConfigArrayOutput {
	return i.ToGuardrailWordConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailWordConfigArray) ToGuardrailWordConfigArrayOutputWithContext(ctx context.Context) GuardrailWordConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailWordConfigArrayOutput)
}

// A custom word config.
type GuardrailWordConfigOutput struct{ *pulumi.OutputState }

func (GuardrailWordConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailWordConfig)(nil)).Elem()
}

func (o GuardrailWordConfigOutput) ToGuardrailWordConfigOutput() GuardrailWordConfigOutput {
	return o
}

func (o GuardrailWordConfigOutput) ToGuardrailWordConfigOutputWithContext(ctx context.Context) GuardrailWordConfigOutput {
	return o
}

// The custom word text.
func (o GuardrailWordConfigOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GuardrailWordConfig) string { return v.Text }).(pulumi.StringOutput)
}

type GuardrailWordConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailWordConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailWordConfig)(nil)).Elem()
}

func (o GuardrailWordConfigArrayOutput) ToGuardrailWordConfigArrayOutput() GuardrailWordConfigArrayOutput {
	return o
}

func (o GuardrailWordConfigArrayOutput) ToGuardrailWordConfigArrayOutputWithContext(ctx context.Context) GuardrailWordConfigArrayOutput {
	return o
}

func (o GuardrailWordConfigArrayOutput) Index(i pulumi.IntInput) GuardrailWordConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailWordConfig {
		return vs[0].([]GuardrailWordConfig)[vs[1].(int)]
	}).(GuardrailWordConfigOutput)
}

// Word policy config for a guardrail.
type GuardrailWordPolicyConfig struct {
	// A config for the list of managed words.
	ManagedWordListsConfig []GuardrailManagedWordsConfig `pulumi:"managedWordListsConfig"`
	// List of custom word configs.
	WordsConfig []GuardrailWordConfig `pulumi:"wordsConfig"`
}

// GuardrailWordPolicyConfigInput is an input type that accepts GuardrailWordPolicyConfigArgs and GuardrailWordPolicyConfigOutput values.
// You can construct a concrete instance of `GuardrailWordPolicyConfigInput` via:
//
//	GuardrailWordPolicyConfigArgs{...}
type GuardrailWordPolicyConfigInput interface {
	pulumi.Input

	ToGuardrailWordPolicyConfigOutput() GuardrailWordPolicyConfigOutput
	ToGuardrailWordPolicyConfigOutputWithContext(context.Context) GuardrailWordPolicyConfigOutput
}

// Word policy config for a guardrail.
type GuardrailWordPolicyConfigArgs struct {
	// A config for the list of managed words.
	ManagedWordListsConfig GuardrailManagedWordsConfigArrayInput `pulumi:"managedWordListsConfig"`
	// List of custom word configs.
	WordsConfig GuardrailWordConfigArrayInput `pulumi:"wordsConfig"`
}

func (GuardrailWordPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailWordPolicyConfig)(nil)).Elem()
}

func (i GuardrailWordPolicyConfigArgs) ToGuardrailWordPolicyConfigOutput() GuardrailWordPolicyConfigOutput {
	return i.ToGuardrailWordPolicyConfigOutputWithContext(context.Background())
}

func (i GuardrailWordPolicyConfigArgs) ToGuardrailWordPolicyConfigOutputWithContext(ctx context.Context) GuardrailWordPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailWordPolicyConfigOutput)
}

func (i GuardrailWordPolicyConfigArgs) ToGuardrailWordPolicyConfigPtrOutput() GuardrailWordPolicyConfigPtrOutput {
	return i.ToGuardrailWordPolicyConfigPtrOutputWithContext(context.Background())
}

func (i GuardrailWordPolicyConfigArgs) ToGuardrailWordPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailWordPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailWordPolicyConfigOutput).ToGuardrailWordPolicyConfigPtrOutputWithContext(ctx)
}

// GuardrailWordPolicyConfigPtrInput is an input type that accepts GuardrailWordPolicyConfigArgs, GuardrailWordPolicyConfigPtr and GuardrailWordPolicyConfigPtrOutput values.
// You can construct a concrete instance of `GuardrailWordPolicyConfigPtrInput` via:
//
//	        GuardrailWordPolicyConfigArgs{...}
//
//	or:
//
//	        nil
type GuardrailWordPolicyConfigPtrInput interface {
	pulumi.Input

	ToGuardrailWordPolicyConfigPtrOutput() GuardrailWordPolicyConfigPtrOutput
	ToGuardrailWordPolicyConfigPtrOutputWithContext(context.Context) GuardrailWordPolicyConfigPtrOutput
}

type guardrailWordPolicyConfigPtrType GuardrailWordPolicyConfigArgs

func GuardrailWordPolicyConfigPtr(v *GuardrailWordPolicyConfigArgs) GuardrailWordPolicyConfigPtrInput {
	return (*guardrailWordPolicyConfigPtrType)(v)
}

func (*guardrailWordPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailWordPolicyConfig)(nil)).Elem()
}

func (i *guardrailWordPolicyConfigPtrType) ToGuardrailWordPolicyConfigPtrOutput() GuardrailWordPolicyConfigPtrOutput {
	return i.ToGuardrailWordPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *guardrailWordPolicyConfigPtrType) ToGuardrailWordPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailWordPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailWordPolicyConfigPtrOutput)
}

// Word policy config for a guardrail.
type GuardrailWordPolicyConfigOutput struct{ *pulumi.OutputState }

func (GuardrailWordPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailWordPolicyConfig)(nil)).Elem()
}

func (o GuardrailWordPolicyConfigOutput) ToGuardrailWordPolicyConfigOutput() GuardrailWordPolicyConfigOutput {
	return o
}

func (o GuardrailWordPolicyConfigOutput) ToGuardrailWordPolicyConfigOutputWithContext(ctx context.Context) GuardrailWordPolicyConfigOutput {
	return o
}

func (o GuardrailWordPolicyConfigOutput) ToGuardrailWordPolicyConfigPtrOutput() GuardrailWordPolicyConfigPtrOutput {
	return o.ToGuardrailWordPolicyConfigPtrOutputWithContext(context.Background())
}

func (o GuardrailWordPolicyConfigOutput) ToGuardrailWordPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailWordPolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardrailWordPolicyConfig) *GuardrailWordPolicyConfig {
		return &v
	}).(GuardrailWordPolicyConfigPtrOutput)
}

// A config for the list of managed words.
func (o GuardrailWordPolicyConfigOutput) ManagedWordListsConfig() GuardrailManagedWordsConfigArrayOutput {
	return o.ApplyT(func(v GuardrailWordPolicyConfig) []GuardrailManagedWordsConfig { return v.ManagedWordListsConfig }).(GuardrailManagedWordsConfigArrayOutput)
}

// List of custom word configs.
func (o GuardrailWordPolicyConfigOutput) WordsConfig() GuardrailWordConfigArrayOutput {
	return o.ApplyT(func(v GuardrailWordPolicyConfig) []GuardrailWordConfig { return v.WordsConfig }).(GuardrailWordConfigArrayOutput)
}

type GuardrailWordPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (GuardrailWordPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailWordPolicyConfig)(nil)).Elem()
}

func (o GuardrailWordPolicyConfigPtrOutput) ToGuardrailWordPolicyConfigPtrOutput() GuardrailWordPolicyConfigPtrOutput {
	return o
}

func (o GuardrailWordPolicyConfigPtrOutput) ToGuardrailWordPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailWordPolicyConfigPtrOutput {
	return o
}

func (o GuardrailWordPolicyConfigPtrOutput) Elem() GuardrailWordPolicyConfigOutput {
	return o.ApplyT(func(v *GuardrailWordPolicyConfig) GuardrailWordPolicyConfig {
		if v != nil {
			return *v
		}
		var ret GuardrailWordPolicyConfig
		return ret
	}).(GuardrailWordPolicyConfigOutput)
}

// A config for the list of managed words.
func (o GuardrailWordPolicyConfigPtrOutput) ManagedWordListsConfig() GuardrailManagedWordsConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailWordPolicyConfig) []GuardrailManagedWordsConfig {
		if v == nil {
			return nil
		}
		return v.ManagedWordListsConfig
	}).(GuardrailManagedWordsConfigArrayOutput)
}

// List of custom word configs.
func (o GuardrailWordPolicyConfigPtrOutput) WordsConfig() GuardrailWordConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailWordPolicyConfig) []GuardrailWordConfig {
		if v == nil {
			return nil
		}
		return v.WordsConfig
	}).(GuardrailWordConfigArrayOutput)
}

// The vector configuration details for the Bedrock embeddings model.
type KnowledgeBaseBedrockEmbeddingModelConfiguration struct {
	// The dimensions details for the vector configuration used on the Bedrock embeddings model.
	Dimensions *int `pulumi:"dimensions"`
}

// KnowledgeBaseBedrockEmbeddingModelConfigurationInput is an input type that accepts KnowledgeBaseBedrockEmbeddingModelConfigurationArgs and KnowledgeBaseBedrockEmbeddingModelConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseBedrockEmbeddingModelConfigurationInput` via:
//
//	KnowledgeBaseBedrockEmbeddingModelConfigurationArgs{...}
type KnowledgeBaseBedrockEmbeddingModelConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseBedrockEmbeddingModelConfigurationOutput() KnowledgeBaseBedrockEmbeddingModelConfigurationOutput
	ToKnowledgeBaseBedrockEmbeddingModelConfigurationOutputWithContext(context.Context) KnowledgeBaseBedrockEmbeddingModelConfigurationOutput
}

// The vector configuration details for the Bedrock embeddings model.
type KnowledgeBaseBedrockEmbeddingModelConfigurationArgs struct {
	// The dimensions details for the vector configuration used on the Bedrock embeddings model.
	Dimensions pulumi.IntPtrInput `pulumi:"dimensions"`
}

func (KnowledgeBaseBedrockEmbeddingModelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseBedrockEmbeddingModelConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseBedrockEmbeddingModelConfigurationArgs) ToKnowledgeBaseBedrockEmbeddingModelConfigurationOutput() KnowledgeBaseBedrockEmbeddingModelConfigurationOutput {
	return i.ToKnowledgeBaseBedrockEmbeddingModelConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseBedrockEmbeddingModelConfigurationArgs) ToKnowledgeBaseBedrockEmbeddingModelConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseBedrockEmbeddingModelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseBedrockEmbeddingModelConfigurationOutput)
}

func (i KnowledgeBaseBedrockEmbeddingModelConfigurationArgs) ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput() KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput {
	return i.ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutputWithContext(context.Background())
}

func (i KnowledgeBaseBedrockEmbeddingModelConfigurationArgs) ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseBedrockEmbeddingModelConfigurationOutput).ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutputWithContext(ctx)
}

// KnowledgeBaseBedrockEmbeddingModelConfigurationPtrInput is an input type that accepts KnowledgeBaseBedrockEmbeddingModelConfigurationArgs, KnowledgeBaseBedrockEmbeddingModelConfigurationPtr and KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput values.
// You can construct a concrete instance of `KnowledgeBaseBedrockEmbeddingModelConfigurationPtrInput` via:
//
//	        KnowledgeBaseBedrockEmbeddingModelConfigurationArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBaseBedrockEmbeddingModelConfigurationPtrInput interface {
	pulumi.Input

	ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput() KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput
	ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutputWithContext(context.Context) KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput
}

type knowledgeBaseBedrockEmbeddingModelConfigurationPtrType KnowledgeBaseBedrockEmbeddingModelConfigurationArgs

func KnowledgeBaseBedrockEmbeddingModelConfigurationPtr(v *KnowledgeBaseBedrockEmbeddingModelConfigurationArgs) KnowledgeBaseBedrockEmbeddingModelConfigurationPtrInput {
	return (*knowledgeBaseBedrockEmbeddingModelConfigurationPtrType)(v)
}

func (*knowledgeBaseBedrockEmbeddingModelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseBedrockEmbeddingModelConfiguration)(nil)).Elem()
}

func (i *knowledgeBaseBedrockEmbeddingModelConfigurationPtrType) ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput() KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput {
	return i.ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutputWithContext(context.Background())
}

func (i *knowledgeBaseBedrockEmbeddingModelConfigurationPtrType) ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput)
}

// The vector configuration details for the Bedrock embeddings model.
type KnowledgeBaseBedrockEmbeddingModelConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseBedrockEmbeddingModelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseBedrockEmbeddingModelConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseBedrockEmbeddingModelConfigurationOutput) ToKnowledgeBaseBedrockEmbeddingModelConfigurationOutput() KnowledgeBaseBedrockEmbeddingModelConfigurationOutput {
	return o
}

func (o KnowledgeBaseBedrockEmbeddingModelConfigurationOutput) ToKnowledgeBaseBedrockEmbeddingModelConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseBedrockEmbeddingModelConfigurationOutput {
	return o
}

func (o KnowledgeBaseBedrockEmbeddingModelConfigurationOutput) ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput() KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput {
	return o.ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutputWithContext(context.Background())
}

func (o KnowledgeBaseBedrockEmbeddingModelConfigurationOutput) ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBaseBedrockEmbeddingModelConfiguration) *KnowledgeBaseBedrockEmbeddingModelConfiguration {
		return &v
	}).(KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput)
}

// The dimensions details for the vector configuration used on the Bedrock embeddings model.
func (o KnowledgeBaseBedrockEmbeddingModelConfigurationOutput) Dimensions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KnowledgeBaseBedrockEmbeddingModelConfiguration) *int { return v.Dimensions }).(pulumi.IntPtrOutput)
}

type KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseBedrockEmbeddingModelConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput) ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput() KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput) ToKnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput) Elem() KnowledgeBaseBedrockEmbeddingModelConfigurationOutput {
	return o.ApplyT(func(v *KnowledgeBaseBedrockEmbeddingModelConfiguration) KnowledgeBaseBedrockEmbeddingModelConfiguration {
		if v != nil {
			return *v
		}
		var ret KnowledgeBaseBedrockEmbeddingModelConfiguration
		return ret
	}).(KnowledgeBaseBedrockEmbeddingModelConfigurationOutput)
}

// The dimensions details for the vector configuration used on the Bedrock embeddings model.
func (o KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput) Dimensions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseBedrockEmbeddingModelConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(pulumi.IntPtrOutput)
}

// Contains details about the embeddings model used for the knowledge base.
type KnowledgeBaseConfiguration struct {
	// The type of data that the data source is converted into for the knowledge base.
	Type KnowledgeBaseType `pulumi:"type"`
	// Contains details about the model that's used to convert the data source into vector embeddings.
	VectorKnowledgeBaseConfiguration KnowledgeBaseVectorKnowledgeBaseConfiguration `pulumi:"vectorKnowledgeBaseConfiguration"`
}

// KnowledgeBaseConfigurationInput is an input type that accepts KnowledgeBaseConfigurationArgs and KnowledgeBaseConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseConfigurationInput` via:
//
//	KnowledgeBaseConfigurationArgs{...}
type KnowledgeBaseConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseConfigurationOutput() KnowledgeBaseConfigurationOutput
	ToKnowledgeBaseConfigurationOutputWithContext(context.Context) KnowledgeBaseConfigurationOutput
}

// Contains details about the embeddings model used for the knowledge base.
type KnowledgeBaseConfigurationArgs struct {
	// The type of data that the data source is converted into for the knowledge base.
	Type KnowledgeBaseTypeInput `pulumi:"type"`
	// Contains details about the model that's used to convert the data source into vector embeddings.
	VectorKnowledgeBaseConfiguration KnowledgeBaseVectorKnowledgeBaseConfigurationInput `pulumi:"vectorKnowledgeBaseConfiguration"`
}

func (KnowledgeBaseConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseConfigurationArgs) ToKnowledgeBaseConfigurationOutput() KnowledgeBaseConfigurationOutput {
	return i.ToKnowledgeBaseConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseConfigurationArgs) ToKnowledgeBaseConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseConfigurationOutput)
}

// Contains details about the embeddings model used for the knowledge base.
type KnowledgeBaseConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseConfigurationOutput) ToKnowledgeBaseConfigurationOutput() KnowledgeBaseConfigurationOutput {
	return o
}

func (o KnowledgeBaseConfigurationOutput) ToKnowledgeBaseConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseConfigurationOutput {
	return o
}

// The type of data that the data source is converted into for the knowledge base.
func (o KnowledgeBaseConfigurationOutput) Type() KnowledgeBaseTypeOutput {
	return o.ApplyT(func(v KnowledgeBaseConfiguration) KnowledgeBaseType { return v.Type }).(KnowledgeBaseTypeOutput)
}

// Contains details about the model that's used to convert the data source into vector embeddings.
func (o KnowledgeBaseConfigurationOutput) VectorKnowledgeBaseConfiguration() KnowledgeBaseVectorKnowledgeBaseConfigurationOutput {
	return o.ApplyT(func(v KnowledgeBaseConfiguration) KnowledgeBaseVectorKnowledgeBaseConfiguration {
		return v.VectorKnowledgeBaseConfiguration
	}).(KnowledgeBaseVectorKnowledgeBaseConfigurationOutput)
}

// The embeddings model configuration details for the vector model used in Knowledge Base.
type KnowledgeBaseEmbeddingModelConfiguration struct {
	// The vector configuration details on the Bedrock embeddings model.
	BedrockEmbeddingModelConfiguration *KnowledgeBaseBedrockEmbeddingModelConfiguration `pulumi:"bedrockEmbeddingModelConfiguration"`
}

// KnowledgeBaseEmbeddingModelConfigurationInput is an input type that accepts KnowledgeBaseEmbeddingModelConfigurationArgs and KnowledgeBaseEmbeddingModelConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseEmbeddingModelConfigurationInput` via:
//
//	KnowledgeBaseEmbeddingModelConfigurationArgs{...}
type KnowledgeBaseEmbeddingModelConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseEmbeddingModelConfigurationOutput() KnowledgeBaseEmbeddingModelConfigurationOutput
	ToKnowledgeBaseEmbeddingModelConfigurationOutputWithContext(context.Context) KnowledgeBaseEmbeddingModelConfigurationOutput
}

// The embeddings model configuration details for the vector model used in Knowledge Base.
type KnowledgeBaseEmbeddingModelConfigurationArgs struct {
	// The vector configuration details on the Bedrock embeddings model.
	BedrockEmbeddingModelConfiguration KnowledgeBaseBedrockEmbeddingModelConfigurationPtrInput `pulumi:"bedrockEmbeddingModelConfiguration"`
}

func (KnowledgeBaseEmbeddingModelConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseEmbeddingModelConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseEmbeddingModelConfigurationArgs) ToKnowledgeBaseEmbeddingModelConfigurationOutput() KnowledgeBaseEmbeddingModelConfigurationOutput {
	return i.ToKnowledgeBaseEmbeddingModelConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseEmbeddingModelConfigurationArgs) ToKnowledgeBaseEmbeddingModelConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseEmbeddingModelConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseEmbeddingModelConfigurationOutput)
}

func (i KnowledgeBaseEmbeddingModelConfigurationArgs) ToKnowledgeBaseEmbeddingModelConfigurationPtrOutput() KnowledgeBaseEmbeddingModelConfigurationPtrOutput {
	return i.ToKnowledgeBaseEmbeddingModelConfigurationPtrOutputWithContext(context.Background())
}

func (i KnowledgeBaseEmbeddingModelConfigurationArgs) ToKnowledgeBaseEmbeddingModelConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseEmbeddingModelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseEmbeddingModelConfigurationOutput).ToKnowledgeBaseEmbeddingModelConfigurationPtrOutputWithContext(ctx)
}

// KnowledgeBaseEmbeddingModelConfigurationPtrInput is an input type that accepts KnowledgeBaseEmbeddingModelConfigurationArgs, KnowledgeBaseEmbeddingModelConfigurationPtr and KnowledgeBaseEmbeddingModelConfigurationPtrOutput values.
// You can construct a concrete instance of `KnowledgeBaseEmbeddingModelConfigurationPtrInput` via:
//
//	        KnowledgeBaseEmbeddingModelConfigurationArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBaseEmbeddingModelConfigurationPtrInput interface {
	pulumi.Input

	ToKnowledgeBaseEmbeddingModelConfigurationPtrOutput() KnowledgeBaseEmbeddingModelConfigurationPtrOutput
	ToKnowledgeBaseEmbeddingModelConfigurationPtrOutputWithContext(context.Context) KnowledgeBaseEmbeddingModelConfigurationPtrOutput
}

type knowledgeBaseEmbeddingModelConfigurationPtrType KnowledgeBaseEmbeddingModelConfigurationArgs

func KnowledgeBaseEmbeddingModelConfigurationPtr(v *KnowledgeBaseEmbeddingModelConfigurationArgs) KnowledgeBaseEmbeddingModelConfigurationPtrInput {
	return (*knowledgeBaseEmbeddingModelConfigurationPtrType)(v)
}

func (*knowledgeBaseEmbeddingModelConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseEmbeddingModelConfiguration)(nil)).Elem()
}

func (i *knowledgeBaseEmbeddingModelConfigurationPtrType) ToKnowledgeBaseEmbeddingModelConfigurationPtrOutput() KnowledgeBaseEmbeddingModelConfigurationPtrOutput {
	return i.ToKnowledgeBaseEmbeddingModelConfigurationPtrOutputWithContext(context.Background())
}

func (i *knowledgeBaseEmbeddingModelConfigurationPtrType) ToKnowledgeBaseEmbeddingModelConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseEmbeddingModelConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseEmbeddingModelConfigurationPtrOutput)
}

// The embeddings model configuration details for the vector model used in Knowledge Base.
type KnowledgeBaseEmbeddingModelConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseEmbeddingModelConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseEmbeddingModelConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseEmbeddingModelConfigurationOutput) ToKnowledgeBaseEmbeddingModelConfigurationOutput() KnowledgeBaseEmbeddingModelConfigurationOutput {
	return o
}

func (o KnowledgeBaseEmbeddingModelConfigurationOutput) ToKnowledgeBaseEmbeddingModelConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseEmbeddingModelConfigurationOutput {
	return o
}

func (o KnowledgeBaseEmbeddingModelConfigurationOutput) ToKnowledgeBaseEmbeddingModelConfigurationPtrOutput() KnowledgeBaseEmbeddingModelConfigurationPtrOutput {
	return o.ToKnowledgeBaseEmbeddingModelConfigurationPtrOutputWithContext(context.Background())
}

func (o KnowledgeBaseEmbeddingModelConfigurationOutput) ToKnowledgeBaseEmbeddingModelConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseEmbeddingModelConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBaseEmbeddingModelConfiguration) *KnowledgeBaseEmbeddingModelConfiguration {
		return &v
	}).(KnowledgeBaseEmbeddingModelConfigurationPtrOutput)
}

// The vector configuration details on the Bedrock embeddings model.
func (o KnowledgeBaseEmbeddingModelConfigurationOutput) BedrockEmbeddingModelConfiguration() KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput {
	return o.ApplyT(func(v KnowledgeBaseEmbeddingModelConfiguration) *KnowledgeBaseBedrockEmbeddingModelConfiguration {
		return v.BedrockEmbeddingModelConfiguration
	}).(KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput)
}

type KnowledgeBaseEmbeddingModelConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseEmbeddingModelConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseEmbeddingModelConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseEmbeddingModelConfigurationPtrOutput) ToKnowledgeBaseEmbeddingModelConfigurationPtrOutput() KnowledgeBaseEmbeddingModelConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseEmbeddingModelConfigurationPtrOutput) ToKnowledgeBaseEmbeddingModelConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseEmbeddingModelConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseEmbeddingModelConfigurationPtrOutput) Elem() KnowledgeBaseEmbeddingModelConfigurationOutput {
	return o.ApplyT(func(v *KnowledgeBaseEmbeddingModelConfiguration) KnowledgeBaseEmbeddingModelConfiguration {
		if v != nil {
			return *v
		}
		var ret KnowledgeBaseEmbeddingModelConfiguration
		return ret
	}).(KnowledgeBaseEmbeddingModelConfigurationOutput)
}

// The vector configuration details on the Bedrock embeddings model.
func (o KnowledgeBaseEmbeddingModelConfigurationPtrOutput) BedrockEmbeddingModelConfiguration() KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseEmbeddingModelConfiguration) *KnowledgeBaseBedrockEmbeddingModelConfiguration {
		if v == nil {
			return nil
		}
		return v.BedrockEmbeddingModelConfiguration
	}).(KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput)
}

// Contains the storage configuration of the knowledge base in MongoDb Atlas Cloud.
type KnowledgeBaseMongoDbAtlasConfiguration struct {
	// Name of the collection within MongoDB Atlas.
	CollectionName string `pulumi:"collectionName"`
	// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon Mongo database.
	CredentialsSecretArn string `pulumi:"credentialsSecretArn"`
	// Name of the database within MongoDB Atlas.
	DatabaseName string `pulumi:"databaseName"`
	// MongoDB Atlas endpoint.
	Endpoint string `pulumi:"endpoint"`
	// MongoDB Atlas endpoint service name.
	EndpointServiceName *string `pulumi:"endpointServiceName"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBaseMongoDbAtlasFieldMapping `pulumi:"fieldMapping"`
	// Name of a MongoDB Atlas index.
	VectorIndexName string `pulumi:"vectorIndexName"`
}

// KnowledgeBaseMongoDbAtlasConfigurationInput is an input type that accepts KnowledgeBaseMongoDbAtlasConfigurationArgs and KnowledgeBaseMongoDbAtlasConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseMongoDbAtlasConfigurationInput` via:
//
//	KnowledgeBaseMongoDbAtlasConfigurationArgs{...}
type KnowledgeBaseMongoDbAtlasConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseMongoDbAtlasConfigurationOutput() KnowledgeBaseMongoDbAtlasConfigurationOutput
	ToKnowledgeBaseMongoDbAtlasConfigurationOutputWithContext(context.Context) KnowledgeBaseMongoDbAtlasConfigurationOutput
}

// Contains the storage configuration of the knowledge base in MongoDb Atlas Cloud.
type KnowledgeBaseMongoDbAtlasConfigurationArgs struct {
	// Name of the collection within MongoDB Atlas.
	CollectionName pulumi.StringInput `pulumi:"collectionName"`
	// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon Mongo database.
	CredentialsSecretArn pulumi.StringInput `pulumi:"credentialsSecretArn"`
	// Name of the database within MongoDB Atlas.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// MongoDB Atlas endpoint.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// MongoDB Atlas endpoint service name.
	EndpointServiceName pulumi.StringPtrInput `pulumi:"endpointServiceName"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBaseMongoDbAtlasFieldMappingInput `pulumi:"fieldMapping"`
	// Name of a MongoDB Atlas index.
	VectorIndexName pulumi.StringInput `pulumi:"vectorIndexName"`
}

func (KnowledgeBaseMongoDbAtlasConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseMongoDbAtlasConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseMongoDbAtlasConfigurationArgs) ToKnowledgeBaseMongoDbAtlasConfigurationOutput() KnowledgeBaseMongoDbAtlasConfigurationOutput {
	return i.ToKnowledgeBaseMongoDbAtlasConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseMongoDbAtlasConfigurationArgs) ToKnowledgeBaseMongoDbAtlasConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseMongoDbAtlasConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseMongoDbAtlasConfigurationOutput)
}

func (i KnowledgeBaseMongoDbAtlasConfigurationArgs) ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutput() KnowledgeBaseMongoDbAtlasConfigurationPtrOutput {
	return i.ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutputWithContext(context.Background())
}

func (i KnowledgeBaseMongoDbAtlasConfigurationArgs) ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseMongoDbAtlasConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseMongoDbAtlasConfigurationOutput).ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutputWithContext(ctx)
}

// KnowledgeBaseMongoDbAtlasConfigurationPtrInput is an input type that accepts KnowledgeBaseMongoDbAtlasConfigurationArgs, KnowledgeBaseMongoDbAtlasConfigurationPtr and KnowledgeBaseMongoDbAtlasConfigurationPtrOutput values.
// You can construct a concrete instance of `KnowledgeBaseMongoDbAtlasConfigurationPtrInput` via:
//
//	        KnowledgeBaseMongoDbAtlasConfigurationArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBaseMongoDbAtlasConfigurationPtrInput interface {
	pulumi.Input

	ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutput() KnowledgeBaseMongoDbAtlasConfigurationPtrOutput
	ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutputWithContext(context.Context) KnowledgeBaseMongoDbAtlasConfigurationPtrOutput
}

type knowledgeBaseMongoDbAtlasConfigurationPtrType KnowledgeBaseMongoDbAtlasConfigurationArgs

func KnowledgeBaseMongoDbAtlasConfigurationPtr(v *KnowledgeBaseMongoDbAtlasConfigurationArgs) KnowledgeBaseMongoDbAtlasConfigurationPtrInput {
	return (*knowledgeBaseMongoDbAtlasConfigurationPtrType)(v)
}

func (*knowledgeBaseMongoDbAtlasConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseMongoDbAtlasConfiguration)(nil)).Elem()
}

func (i *knowledgeBaseMongoDbAtlasConfigurationPtrType) ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutput() KnowledgeBaseMongoDbAtlasConfigurationPtrOutput {
	return i.ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutputWithContext(context.Background())
}

func (i *knowledgeBaseMongoDbAtlasConfigurationPtrType) ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseMongoDbAtlasConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseMongoDbAtlasConfigurationPtrOutput)
}

// Contains the storage configuration of the knowledge base in MongoDb Atlas Cloud.
type KnowledgeBaseMongoDbAtlasConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseMongoDbAtlasConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseMongoDbAtlasConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseMongoDbAtlasConfigurationOutput) ToKnowledgeBaseMongoDbAtlasConfigurationOutput() KnowledgeBaseMongoDbAtlasConfigurationOutput {
	return o
}

func (o KnowledgeBaseMongoDbAtlasConfigurationOutput) ToKnowledgeBaseMongoDbAtlasConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseMongoDbAtlasConfigurationOutput {
	return o
}

func (o KnowledgeBaseMongoDbAtlasConfigurationOutput) ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutput() KnowledgeBaseMongoDbAtlasConfigurationPtrOutput {
	return o.ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutputWithContext(context.Background())
}

func (o KnowledgeBaseMongoDbAtlasConfigurationOutput) ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseMongoDbAtlasConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBaseMongoDbAtlasConfiguration) *KnowledgeBaseMongoDbAtlasConfiguration {
		return &v
	}).(KnowledgeBaseMongoDbAtlasConfigurationPtrOutput)
}

// Name of the collection within MongoDB Atlas.
func (o KnowledgeBaseMongoDbAtlasConfigurationOutput) CollectionName() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseMongoDbAtlasConfiguration) string { return v.CollectionName }).(pulumi.StringOutput)
}

// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon Mongo database.
func (o KnowledgeBaseMongoDbAtlasConfigurationOutput) CredentialsSecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseMongoDbAtlasConfiguration) string { return v.CredentialsSecretArn }).(pulumi.StringOutput)
}

// Name of the database within MongoDB Atlas.
func (o KnowledgeBaseMongoDbAtlasConfigurationOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseMongoDbAtlasConfiguration) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// MongoDB Atlas endpoint.
func (o KnowledgeBaseMongoDbAtlasConfigurationOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseMongoDbAtlasConfiguration) string { return v.Endpoint }).(pulumi.StringOutput)
}

// MongoDB Atlas endpoint service name.
func (o KnowledgeBaseMongoDbAtlasConfigurationOutput) EndpointServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KnowledgeBaseMongoDbAtlasConfiguration) *string { return v.EndpointServiceName }).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBaseMongoDbAtlasConfigurationOutput) FieldMapping() KnowledgeBaseMongoDbAtlasFieldMappingOutput {
	return o.ApplyT(func(v KnowledgeBaseMongoDbAtlasConfiguration) KnowledgeBaseMongoDbAtlasFieldMapping {
		return v.FieldMapping
	}).(KnowledgeBaseMongoDbAtlasFieldMappingOutput)
}

// Name of a MongoDB Atlas index.
func (o KnowledgeBaseMongoDbAtlasConfigurationOutput) VectorIndexName() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseMongoDbAtlasConfiguration) string { return v.VectorIndexName }).(pulumi.StringOutput)
}

type KnowledgeBaseMongoDbAtlasConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseMongoDbAtlasConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseMongoDbAtlasConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseMongoDbAtlasConfigurationPtrOutput) ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutput() KnowledgeBaseMongoDbAtlasConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseMongoDbAtlasConfigurationPtrOutput) ToKnowledgeBaseMongoDbAtlasConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseMongoDbAtlasConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseMongoDbAtlasConfigurationPtrOutput) Elem() KnowledgeBaseMongoDbAtlasConfigurationOutput {
	return o.ApplyT(func(v *KnowledgeBaseMongoDbAtlasConfiguration) KnowledgeBaseMongoDbAtlasConfiguration {
		if v != nil {
			return *v
		}
		var ret KnowledgeBaseMongoDbAtlasConfiguration
		return ret
	}).(KnowledgeBaseMongoDbAtlasConfigurationOutput)
}

// Name of the collection within MongoDB Atlas.
func (o KnowledgeBaseMongoDbAtlasConfigurationPtrOutput) CollectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseMongoDbAtlasConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CollectionName
	}).(pulumi.StringPtrOutput)
}

// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon Mongo database.
func (o KnowledgeBaseMongoDbAtlasConfigurationPtrOutput) CredentialsSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseMongoDbAtlasConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialsSecretArn
	}).(pulumi.StringPtrOutput)
}

// Name of the database within MongoDB Atlas.
func (o KnowledgeBaseMongoDbAtlasConfigurationPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseMongoDbAtlasConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// MongoDB Atlas endpoint.
func (o KnowledgeBaseMongoDbAtlasConfigurationPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseMongoDbAtlasConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// MongoDB Atlas endpoint service name.
func (o KnowledgeBaseMongoDbAtlasConfigurationPtrOutput) EndpointServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseMongoDbAtlasConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.EndpointServiceName
	}).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBaseMongoDbAtlasConfigurationPtrOutput) FieldMapping() KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseMongoDbAtlasConfiguration) *KnowledgeBaseMongoDbAtlasFieldMapping {
		if v == nil {
			return nil
		}
		return &v.FieldMapping
	}).(KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput)
}

// Name of a MongoDB Atlas index.
func (o KnowledgeBaseMongoDbAtlasConfigurationPtrOutput) VectorIndexName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseMongoDbAtlasConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.VectorIndexName
	}).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBaseMongoDbAtlasFieldMapping struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField string `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField string `pulumi:"textField"`
	// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
	VectorField string `pulumi:"vectorField"`
}

// KnowledgeBaseMongoDbAtlasFieldMappingInput is an input type that accepts KnowledgeBaseMongoDbAtlasFieldMappingArgs and KnowledgeBaseMongoDbAtlasFieldMappingOutput values.
// You can construct a concrete instance of `KnowledgeBaseMongoDbAtlasFieldMappingInput` via:
//
//	KnowledgeBaseMongoDbAtlasFieldMappingArgs{...}
type KnowledgeBaseMongoDbAtlasFieldMappingInput interface {
	pulumi.Input

	ToKnowledgeBaseMongoDbAtlasFieldMappingOutput() KnowledgeBaseMongoDbAtlasFieldMappingOutput
	ToKnowledgeBaseMongoDbAtlasFieldMappingOutputWithContext(context.Context) KnowledgeBaseMongoDbAtlasFieldMappingOutput
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBaseMongoDbAtlasFieldMappingArgs struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField pulumi.StringInput `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField pulumi.StringInput `pulumi:"textField"`
	// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
	VectorField pulumi.StringInput `pulumi:"vectorField"`
}

func (KnowledgeBaseMongoDbAtlasFieldMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseMongoDbAtlasFieldMapping)(nil)).Elem()
}

func (i KnowledgeBaseMongoDbAtlasFieldMappingArgs) ToKnowledgeBaseMongoDbAtlasFieldMappingOutput() KnowledgeBaseMongoDbAtlasFieldMappingOutput {
	return i.ToKnowledgeBaseMongoDbAtlasFieldMappingOutputWithContext(context.Background())
}

func (i KnowledgeBaseMongoDbAtlasFieldMappingArgs) ToKnowledgeBaseMongoDbAtlasFieldMappingOutputWithContext(ctx context.Context) KnowledgeBaseMongoDbAtlasFieldMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseMongoDbAtlasFieldMappingOutput)
}

func (i KnowledgeBaseMongoDbAtlasFieldMappingArgs) ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutput() KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput {
	return i.ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutputWithContext(context.Background())
}

func (i KnowledgeBaseMongoDbAtlasFieldMappingArgs) ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseMongoDbAtlasFieldMappingOutput).ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutputWithContext(ctx)
}

// KnowledgeBaseMongoDbAtlasFieldMappingPtrInput is an input type that accepts KnowledgeBaseMongoDbAtlasFieldMappingArgs, KnowledgeBaseMongoDbAtlasFieldMappingPtr and KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput values.
// You can construct a concrete instance of `KnowledgeBaseMongoDbAtlasFieldMappingPtrInput` via:
//
//	        KnowledgeBaseMongoDbAtlasFieldMappingArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBaseMongoDbAtlasFieldMappingPtrInput interface {
	pulumi.Input

	ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutput() KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput
	ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutputWithContext(context.Context) KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput
}

type knowledgeBaseMongoDbAtlasFieldMappingPtrType KnowledgeBaseMongoDbAtlasFieldMappingArgs

func KnowledgeBaseMongoDbAtlasFieldMappingPtr(v *KnowledgeBaseMongoDbAtlasFieldMappingArgs) KnowledgeBaseMongoDbAtlasFieldMappingPtrInput {
	return (*knowledgeBaseMongoDbAtlasFieldMappingPtrType)(v)
}

func (*knowledgeBaseMongoDbAtlasFieldMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseMongoDbAtlasFieldMapping)(nil)).Elem()
}

func (i *knowledgeBaseMongoDbAtlasFieldMappingPtrType) ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutput() KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput {
	return i.ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutputWithContext(context.Background())
}

func (i *knowledgeBaseMongoDbAtlasFieldMappingPtrType) ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBaseMongoDbAtlasFieldMappingOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseMongoDbAtlasFieldMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseMongoDbAtlasFieldMapping)(nil)).Elem()
}

func (o KnowledgeBaseMongoDbAtlasFieldMappingOutput) ToKnowledgeBaseMongoDbAtlasFieldMappingOutput() KnowledgeBaseMongoDbAtlasFieldMappingOutput {
	return o
}

func (o KnowledgeBaseMongoDbAtlasFieldMappingOutput) ToKnowledgeBaseMongoDbAtlasFieldMappingOutputWithContext(ctx context.Context) KnowledgeBaseMongoDbAtlasFieldMappingOutput {
	return o
}

func (o KnowledgeBaseMongoDbAtlasFieldMappingOutput) ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutput() KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput {
	return o.ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutputWithContext(context.Background())
}

func (o KnowledgeBaseMongoDbAtlasFieldMappingOutput) ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBaseMongoDbAtlasFieldMapping) *KnowledgeBaseMongoDbAtlasFieldMapping {
		return &v
	}).(KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBaseMongoDbAtlasFieldMappingOutput) MetadataField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseMongoDbAtlasFieldMapping) string { return v.MetadataField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBaseMongoDbAtlasFieldMappingOutput) TextField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseMongoDbAtlasFieldMapping) string { return v.TextField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
func (o KnowledgeBaseMongoDbAtlasFieldMappingOutput) VectorField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseMongoDbAtlasFieldMapping) string { return v.VectorField }).(pulumi.StringOutput)
}

type KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseMongoDbAtlasFieldMapping)(nil)).Elem()
}

func (o KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput) ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutput() KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput) ToKnowledgeBaseMongoDbAtlasFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput) Elem() KnowledgeBaseMongoDbAtlasFieldMappingOutput {
	return o.ApplyT(func(v *KnowledgeBaseMongoDbAtlasFieldMapping) KnowledgeBaseMongoDbAtlasFieldMapping {
		if v != nil {
			return *v
		}
		var ret KnowledgeBaseMongoDbAtlasFieldMapping
		return ret
	}).(KnowledgeBaseMongoDbAtlasFieldMappingOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput) MetadataField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseMongoDbAtlasFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.MetadataField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput) TextField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseMongoDbAtlasFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.TextField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
func (o KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput) VectorField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseMongoDbAtlasFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.VectorField
	}).(pulumi.StringPtrOutput)
}

// Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
type KnowledgeBaseOpenSearchServerlessConfiguration struct {
	// The ARN of the OpenSearch Service vector store.
	CollectionArn string `pulumi:"collectionArn"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBaseOpenSearchServerlessFieldMapping `pulumi:"fieldMapping"`
	// The name of the vector store.
	VectorIndexName string `pulumi:"vectorIndexName"`
}

// KnowledgeBaseOpenSearchServerlessConfigurationInput is an input type that accepts KnowledgeBaseOpenSearchServerlessConfigurationArgs and KnowledgeBaseOpenSearchServerlessConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseOpenSearchServerlessConfigurationInput` via:
//
//	KnowledgeBaseOpenSearchServerlessConfigurationArgs{...}
type KnowledgeBaseOpenSearchServerlessConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseOpenSearchServerlessConfigurationOutput() KnowledgeBaseOpenSearchServerlessConfigurationOutput
	ToKnowledgeBaseOpenSearchServerlessConfigurationOutputWithContext(context.Context) KnowledgeBaseOpenSearchServerlessConfigurationOutput
}

// Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
type KnowledgeBaseOpenSearchServerlessConfigurationArgs struct {
	// The ARN of the OpenSearch Service vector store.
	CollectionArn pulumi.StringInput `pulumi:"collectionArn"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBaseOpenSearchServerlessFieldMappingInput `pulumi:"fieldMapping"`
	// The name of the vector store.
	VectorIndexName pulumi.StringInput `pulumi:"vectorIndexName"`
}

func (KnowledgeBaseOpenSearchServerlessConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseOpenSearchServerlessConfigurationArgs) ToKnowledgeBaseOpenSearchServerlessConfigurationOutput() KnowledgeBaseOpenSearchServerlessConfigurationOutput {
	return i.ToKnowledgeBaseOpenSearchServerlessConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseOpenSearchServerlessConfigurationArgs) ToKnowledgeBaseOpenSearchServerlessConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOpenSearchServerlessConfigurationOutput)
}

func (i KnowledgeBaseOpenSearchServerlessConfigurationArgs) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutput() KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return i.ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(context.Background())
}

func (i KnowledgeBaseOpenSearchServerlessConfigurationArgs) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOpenSearchServerlessConfigurationOutput).ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(ctx)
}

// KnowledgeBaseOpenSearchServerlessConfigurationPtrInput is an input type that accepts KnowledgeBaseOpenSearchServerlessConfigurationArgs, KnowledgeBaseOpenSearchServerlessConfigurationPtr and KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput values.
// You can construct a concrete instance of `KnowledgeBaseOpenSearchServerlessConfigurationPtrInput` via:
//
//	        KnowledgeBaseOpenSearchServerlessConfigurationArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBaseOpenSearchServerlessConfigurationPtrInput interface {
	pulumi.Input

	ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutput() KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput
	ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(context.Context) KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput
}

type knowledgeBaseOpenSearchServerlessConfigurationPtrType KnowledgeBaseOpenSearchServerlessConfigurationArgs

func KnowledgeBaseOpenSearchServerlessConfigurationPtr(v *KnowledgeBaseOpenSearchServerlessConfigurationArgs) KnowledgeBaseOpenSearchServerlessConfigurationPtrInput {
	return (*knowledgeBaseOpenSearchServerlessConfigurationPtrType)(v)
}

func (*knowledgeBaseOpenSearchServerlessConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseOpenSearchServerlessConfiguration)(nil)).Elem()
}

func (i *knowledgeBaseOpenSearchServerlessConfigurationPtrType) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutput() KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return i.ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(context.Background())
}

func (i *knowledgeBaseOpenSearchServerlessConfigurationPtrType) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput)
}

// Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
type KnowledgeBaseOpenSearchServerlessConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseOpenSearchServerlessConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) ToKnowledgeBaseOpenSearchServerlessConfigurationOutput() KnowledgeBaseOpenSearchServerlessConfigurationOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) ToKnowledgeBaseOpenSearchServerlessConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessConfigurationOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutput() KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return o.ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(context.Background())
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBaseOpenSearchServerlessConfiguration) *KnowledgeBaseOpenSearchServerlessConfiguration {
		return &v
	}).(KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput)
}

// The ARN of the OpenSearch Service vector store.
func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) CollectionArn() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseOpenSearchServerlessConfiguration) string { return v.CollectionArn }).(pulumi.StringOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) FieldMapping() KnowledgeBaseOpenSearchServerlessFieldMappingOutput {
	return o.ApplyT(func(v KnowledgeBaseOpenSearchServerlessConfiguration) KnowledgeBaseOpenSearchServerlessFieldMapping {
		return v.FieldMapping
	}).(KnowledgeBaseOpenSearchServerlessFieldMappingOutput)
}

// The name of the vector store.
func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) VectorIndexName() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseOpenSearchServerlessConfiguration) string { return v.VectorIndexName }).(pulumi.StringOutput)
}

type KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseOpenSearchServerlessConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutput() KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) Elem() KnowledgeBaseOpenSearchServerlessConfigurationOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessConfiguration) KnowledgeBaseOpenSearchServerlessConfiguration {
		if v != nil {
			return *v
		}
		var ret KnowledgeBaseOpenSearchServerlessConfiguration
		return ret
	}).(KnowledgeBaseOpenSearchServerlessConfigurationOutput)
}

// The ARN of the OpenSearch Service vector store.
func (o KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) CollectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CollectionArn
	}).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) FieldMapping() KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessConfiguration) *KnowledgeBaseOpenSearchServerlessFieldMapping {
		if v == nil {
			return nil
		}
		return &v.FieldMapping
	}).(KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput)
}

// The name of the vector store.
func (o KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) VectorIndexName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.VectorIndexName
	}).(pulumi.StringPtrOutput)
}

// A mapping of Bedrock Knowledge Base fields to OpenSearch Serverless field names
type KnowledgeBaseOpenSearchServerlessFieldMapping struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField string `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField string `pulumi:"textField"`
	// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
	VectorField string `pulumi:"vectorField"`
}

// KnowledgeBaseOpenSearchServerlessFieldMappingInput is an input type that accepts KnowledgeBaseOpenSearchServerlessFieldMappingArgs and KnowledgeBaseOpenSearchServerlessFieldMappingOutput values.
// You can construct a concrete instance of `KnowledgeBaseOpenSearchServerlessFieldMappingInput` via:
//
//	KnowledgeBaseOpenSearchServerlessFieldMappingArgs{...}
type KnowledgeBaseOpenSearchServerlessFieldMappingInput interface {
	pulumi.Input

	ToKnowledgeBaseOpenSearchServerlessFieldMappingOutput() KnowledgeBaseOpenSearchServerlessFieldMappingOutput
	ToKnowledgeBaseOpenSearchServerlessFieldMappingOutputWithContext(context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingOutput
}

// A mapping of Bedrock Knowledge Base fields to OpenSearch Serverless field names
type KnowledgeBaseOpenSearchServerlessFieldMappingArgs struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField pulumi.StringInput `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField pulumi.StringInput `pulumi:"textField"`
	// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
	VectorField pulumi.StringInput `pulumi:"vectorField"`
}

func (KnowledgeBaseOpenSearchServerlessFieldMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessFieldMapping)(nil)).Elem()
}

func (i KnowledgeBaseOpenSearchServerlessFieldMappingArgs) ToKnowledgeBaseOpenSearchServerlessFieldMappingOutput() KnowledgeBaseOpenSearchServerlessFieldMappingOutput {
	return i.ToKnowledgeBaseOpenSearchServerlessFieldMappingOutputWithContext(context.Background())
}

func (i KnowledgeBaseOpenSearchServerlessFieldMappingArgs) ToKnowledgeBaseOpenSearchServerlessFieldMappingOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOpenSearchServerlessFieldMappingOutput)
}

func (i KnowledgeBaseOpenSearchServerlessFieldMappingArgs) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput() KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return i.ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(context.Background())
}

func (i KnowledgeBaseOpenSearchServerlessFieldMappingArgs) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOpenSearchServerlessFieldMappingOutput).ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(ctx)
}

// KnowledgeBaseOpenSearchServerlessFieldMappingPtrInput is an input type that accepts KnowledgeBaseOpenSearchServerlessFieldMappingArgs, KnowledgeBaseOpenSearchServerlessFieldMappingPtr and KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput values.
// You can construct a concrete instance of `KnowledgeBaseOpenSearchServerlessFieldMappingPtrInput` via:
//
//	        KnowledgeBaseOpenSearchServerlessFieldMappingArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBaseOpenSearchServerlessFieldMappingPtrInput interface {
	pulumi.Input

	ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput() KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput
	ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput
}

type knowledgeBaseOpenSearchServerlessFieldMappingPtrType KnowledgeBaseOpenSearchServerlessFieldMappingArgs

func KnowledgeBaseOpenSearchServerlessFieldMappingPtr(v *KnowledgeBaseOpenSearchServerlessFieldMappingArgs) KnowledgeBaseOpenSearchServerlessFieldMappingPtrInput {
	return (*knowledgeBaseOpenSearchServerlessFieldMappingPtrType)(v)
}

func (*knowledgeBaseOpenSearchServerlessFieldMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseOpenSearchServerlessFieldMapping)(nil)).Elem()
}

func (i *knowledgeBaseOpenSearchServerlessFieldMappingPtrType) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput() KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return i.ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(context.Background())
}

func (i *knowledgeBaseOpenSearchServerlessFieldMappingPtrType) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput)
}

// A mapping of Bedrock Knowledge Base fields to OpenSearch Serverless field names
type KnowledgeBaseOpenSearchServerlessFieldMappingOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseOpenSearchServerlessFieldMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessFieldMapping)(nil)).Elem()
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) ToKnowledgeBaseOpenSearchServerlessFieldMappingOutput() KnowledgeBaseOpenSearchServerlessFieldMappingOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) ToKnowledgeBaseOpenSearchServerlessFieldMappingOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput() KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return o.ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(context.Background())
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBaseOpenSearchServerlessFieldMapping) *KnowledgeBaseOpenSearchServerlessFieldMapping {
		return &v
	}).(KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) MetadataField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseOpenSearchServerlessFieldMapping) string { return v.MetadataField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) TextField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseOpenSearchServerlessFieldMapping) string { return v.TextField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) VectorField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseOpenSearchServerlessFieldMapping) string { return v.VectorField }).(pulumi.StringOutput)
}

type KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseOpenSearchServerlessFieldMapping)(nil)).Elem()
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput() KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) Elem() KnowledgeBaseOpenSearchServerlessFieldMappingOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessFieldMapping) KnowledgeBaseOpenSearchServerlessFieldMapping {
		if v != nil {
			return *v
		}
		var ret KnowledgeBaseOpenSearchServerlessFieldMapping
		return ret
	}).(KnowledgeBaseOpenSearchServerlessFieldMappingOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) MetadataField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.MetadataField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) TextField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.TextField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
func (o KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) VectorField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.VectorField
	}).(pulumi.StringPtrOutput)
}

// Contains the storage configuration of the knowledge base in Pinecone.
type KnowledgeBasePineconeConfiguration struct {
	// The endpoint URL for your index management page.
	ConnectionString string `pulumi:"connectionString"`
	// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Pinecone API key.
	CredentialsSecretArn string `pulumi:"credentialsSecretArn"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBasePineconeFieldMapping `pulumi:"fieldMapping"`
	// The namespace to be used to write new data to your database.
	Namespace *string `pulumi:"namespace"`
}

// KnowledgeBasePineconeConfigurationInput is an input type that accepts KnowledgeBasePineconeConfigurationArgs and KnowledgeBasePineconeConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBasePineconeConfigurationInput` via:
//
//	KnowledgeBasePineconeConfigurationArgs{...}
type KnowledgeBasePineconeConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBasePineconeConfigurationOutput() KnowledgeBasePineconeConfigurationOutput
	ToKnowledgeBasePineconeConfigurationOutputWithContext(context.Context) KnowledgeBasePineconeConfigurationOutput
}

// Contains the storage configuration of the knowledge base in Pinecone.
type KnowledgeBasePineconeConfigurationArgs struct {
	// The endpoint URL for your index management page.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Pinecone API key.
	CredentialsSecretArn pulumi.StringInput `pulumi:"credentialsSecretArn"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBasePineconeFieldMappingInput `pulumi:"fieldMapping"`
	// The namespace to be used to write new data to your database.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (KnowledgeBasePineconeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBasePineconeConfiguration)(nil)).Elem()
}

func (i KnowledgeBasePineconeConfigurationArgs) ToKnowledgeBasePineconeConfigurationOutput() KnowledgeBasePineconeConfigurationOutput {
	return i.ToKnowledgeBasePineconeConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBasePineconeConfigurationArgs) ToKnowledgeBasePineconeConfigurationOutputWithContext(ctx context.Context) KnowledgeBasePineconeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBasePineconeConfigurationOutput)
}

func (i KnowledgeBasePineconeConfigurationArgs) ToKnowledgeBasePineconeConfigurationPtrOutput() KnowledgeBasePineconeConfigurationPtrOutput {
	return i.ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(context.Background())
}

func (i KnowledgeBasePineconeConfigurationArgs) ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBasePineconeConfigurationOutput).ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(ctx)
}

// KnowledgeBasePineconeConfigurationPtrInput is an input type that accepts KnowledgeBasePineconeConfigurationArgs, KnowledgeBasePineconeConfigurationPtr and KnowledgeBasePineconeConfigurationPtrOutput values.
// You can construct a concrete instance of `KnowledgeBasePineconeConfigurationPtrInput` via:
//
//	        KnowledgeBasePineconeConfigurationArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBasePineconeConfigurationPtrInput interface {
	pulumi.Input

	ToKnowledgeBasePineconeConfigurationPtrOutput() KnowledgeBasePineconeConfigurationPtrOutput
	ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(context.Context) KnowledgeBasePineconeConfigurationPtrOutput
}

type knowledgeBasePineconeConfigurationPtrType KnowledgeBasePineconeConfigurationArgs

func KnowledgeBasePineconeConfigurationPtr(v *KnowledgeBasePineconeConfigurationArgs) KnowledgeBasePineconeConfigurationPtrInput {
	return (*knowledgeBasePineconeConfigurationPtrType)(v)
}

func (*knowledgeBasePineconeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBasePineconeConfiguration)(nil)).Elem()
}

func (i *knowledgeBasePineconeConfigurationPtrType) ToKnowledgeBasePineconeConfigurationPtrOutput() KnowledgeBasePineconeConfigurationPtrOutput {
	return i.ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(context.Background())
}

func (i *knowledgeBasePineconeConfigurationPtrType) ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBasePineconeConfigurationPtrOutput)
}

// Contains the storage configuration of the knowledge base in Pinecone.
type KnowledgeBasePineconeConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBasePineconeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBasePineconeConfiguration)(nil)).Elem()
}

func (o KnowledgeBasePineconeConfigurationOutput) ToKnowledgeBasePineconeConfigurationOutput() KnowledgeBasePineconeConfigurationOutput {
	return o
}

func (o KnowledgeBasePineconeConfigurationOutput) ToKnowledgeBasePineconeConfigurationOutputWithContext(ctx context.Context) KnowledgeBasePineconeConfigurationOutput {
	return o
}

func (o KnowledgeBasePineconeConfigurationOutput) ToKnowledgeBasePineconeConfigurationPtrOutput() KnowledgeBasePineconeConfigurationPtrOutput {
	return o.ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(context.Background())
}

func (o KnowledgeBasePineconeConfigurationOutput) ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBasePineconeConfiguration) *KnowledgeBasePineconeConfiguration {
		return &v
	}).(KnowledgeBasePineconeConfigurationPtrOutput)
}

// The endpoint URL for your index management page.
func (o KnowledgeBasePineconeConfigurationOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBasePineconeConfiguration) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Pinecone API key.
func (o KnowledgeBasePineconeConfigurationOutput) CredentialsSecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBasePineconeConfiguration) string { return v.CredentialsSecretArn }).(pulumi.StringOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBasePineconeConfigurationOutput) FieldMapping() KnowledgeBasePineconeFieldMappingOutput {
	return o.ApplyT(func(v KnowledgeBasePineconeConfiguration) KnowledgeBasePineconeFieldMapping { return v.FieldMapping }).(KnowledgeBasePineconeFieldMappingOutput)
}

// The namespace to be used to write new data to your database.
func (o KnowledgeBasePineconeConfigurationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KnowledgeBasePineconeConfiguration) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type KnowledgeBasePineconeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBasePineconeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBasePineconeConfiguration)(nil)).Elem()
}

func (o KnowledgeBasePineconeConfigurationPtrOutput) ToKnowledgeBasePineconeConfigurationPtrOutput() KnowledgeBasePineconeConfigurationPtrOutput {
	return o
}

func (o KnowledgeBasePineconeConfigurationPtrOutput) ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeConfigurationPtrOutput {
	return o
}

func (o KnowledgeBasePineconeConfigurationPtrOutput) Elem() KnowledgeBasePineconeConfigurationOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeConfiguration) KnowledgeBasePineconeConfiguration {
		if v != nil {
			return *v
		}
		var ret KnowledgeBasePineconeConfiguration
		return ret
	}).(KnowledgeBasePineconeConfigurationOutput)
}

// The endpoint URL for your index management page.
func (o KnowledgeBasePineconeConfigurationPtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Pinecone API key.
func (o KnowledgeBasePineconeConfigurationPtrOutput) CredentialsSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialsSecretArn
	}).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBasePineconeConfigurationPtrOutput) FieldMapping() KnowledgeBasePineconeFieldMappingPtrOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeConfiguration) *KnowledgeBasePineconeFieldMapping {
		if v == nil {
			return nil
		}
		return &v.FieldMapping
	}).(KnowledgeBasePineconeFieldMappingPtrOutput)
}

// The namespace to be used to write new data to your database.
func (o KnowledgeBasePineconeConfigurationPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBasePineconeFieldMapping struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField string `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField string `pulumi:"textField"`
}

// KnowledgeBasePineconeFieldMappingInput is an input type that accepts KnowledgeBasePineconeFieldMappingArgs and KnowledgeBasePineconeFieldMappingOutput values.
// You can construct a concrete instance of `KnowledgeBasePineconeFieldMappingInput` via:
//
//	KnowledgeBasePineconeFieldMappingArgs{...}
type KnowledgeBasePineconeFieldMappingInput interface {
	pulumi.Input

	ToKnowledgeBasePineconeFieldMappingOutput() KnowledgeBasePineconeFieldMappingOutput
	ToKnowledgeBasePineconeFieldMappingOutputWithContext(context.Context) KnowledgeBasePineconeFieldMappingOutput
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBasePineconeFieldMappingArgs struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField pulumi.StringInput `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField pulumi.StringInput `pulumi:"textField"`
}

func (KnowledgeBasePineconeFieldMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBasePineconeFieldMapping)(nil)).Elem()
}

func (i KnowledgeBasePineconeFieldMappingArgs) ToKnowledgeBasePineconeFieldMappingOutput() KnowledgeBasePineconeFieldMappingOutput {
	return i.ToKnowledgeBasePineconeFieldMappingOutputWithContext(context.Background())
}

func (i KnowledgeBasePineconeFieldMappingArgs) ToKnowledgeBasePineconeFieldMappingOutputWithContext(ctx context.Context) KnowledgeBasePineconeFieldMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBasePineconeFieldMappingOutput)
}

func (i KnowledgeBasePineconeFieldMappingArgs) ToKnowledgeBasePineconeFieldMappingPtrOutput() KnowledgeBasePineconeFieldMappingPtrOutput {
	return i.ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(context.Background())
}

func (i KnowledgeBasePineconeFieldMappingArgs) ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBasePineconeFieldMappingOutput).ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(ctx)
}

// KnowledgeBasePineconeFieldMappingPtrInput is an input type that accepts KnowledgeBasePineconeFieldMappingArgs, KnowledgeBasePineconeFieldMappingPtr and KnowledgeBasePineconeFieldMappingPtrOutput values.
// You can construct a concrete instance of `KnowledgeBasePineconeFieldMappingPtrInput` via:
//
//	        KnowledgeBasePineconeFieldMappingArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBasePineconeFieldMappingPtrInput interface {
	pulumi.Input

	ToKnowledgeBasePineconeFieldMappingPtrOutput() KnowledgeBasePineconeFieldMappingPtrOutput
	ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(context.Context) KnowledgeBasePineconeFieldMappingPtrOutput
}

type knowledgeBasePineconeFieldMappingPtrType KnowledgeBasePineconeFieldMappingArgs

func KnowledgeBasePineconeFieldMappingPtr(v *KnowledgeBasePineconeFieldMappingArgs) KnowledgeBasePineconeFieldMappingPtrInput {
	return (*knowledgeBasePineconeFieldMappingPtrType)(v)
}

func (*knowledgeBasePineconeFieldMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBasePineconeFieldMapping)(nil)).Elem()
}

func (i *knowledgeBasePineconeFieldMappingPtrType) ToKnowledgeBasePineconeFieldMappingPtrOutput() KnowledgeBasePineconeFieldMappingPtrOutput {
	return i.ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(context.Background())
}

func (i *knowledgeBasePineconeFieldMappingPtrType) ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBasePineconeFieldMappingPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBasePineconeFieldMappingOutput struct{ *pulumi.OutputState }

func (KnowledgeBasePineconeFieldMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBasePineconeFieldMapping)(nil)).Elem()
}

func (o KnowledgeBasePineconeFieldMappingOutput) ToKnowledgeBasePineconeFieldMappingOutput() KnowledgeBasePineconeFieldMappingOutput {
	return o
}

func (o KnowledgeBasePineconeFieldMappingOutput) ToKnowledgeBasePineconeFieldMappingOutputWithContext(ctx context.Context) KnowledgeBasePineconeFieldMappingOutput {
	return o
}

func (o KnowledgeBasePineconeFieldMappingOutput) ToKnowledgeBasePineconeFieldMappingPtrOutput() KnowledgeBasePineconeFieldMappingPtrOutput {
	return o.ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(context.Background())
}

func (o KnowledgeBasePineconeFieldMappingOutput) ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeFieldMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBasePineconeFieldMapping) *KnowledgeBasePineconeFieldMapping {
		return &v
	}).(KnowledgeBasePineconeFieldMappingPtrOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBasePineconeFieldMappingOutput) MetadataField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBasePineconeFieldMapping) string { return v.MetadataField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBasePineconeFieldMappingOutput) TextField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBasePineconeFieldMapping) string { return v.TextField }).(pulumi.StringOutput)
}

type KnowledgeBasePineconeFieldMappingPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBasePineconeFieldMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBasePineconeFieldMapping)(nil)).Elem()
}

func (o KnowledgeBasePineconeFieldMappingPtrOutput) ToKnowledgeBasePineconeFieldMappingPtrOutput() KnowledgeBasePineconeFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBasePineconeFieldMappingPtrOutput) ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBasePineconeFieldMappingPtrOutput) Elem() KnowledgeBasePineconeFieldMappingOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeFieldMapping) KnowledgeBasePineconeFieldMapping {
		if v != nil {
			return *v
		}
		var ret KnowledgeBasePineconeFieldMapping
		return ret
	}).(KnowledgeBasePineconeFieldMappingOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBasePineconeFieldMappingPtrOutput) MetadataField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.MetadataField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBasePineconeFieldMappingPtrOutput) TextField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.TextField
	}).(pulumi.StringPtrOutput)
}

// Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see Create a vector index in Amazon RDS.
type KnowledgeBaseRdsConfiguration struct {
	// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon RDS database.
	CredentialsSecretArn string `pulumi:"credentialsSecretArn"`
	// The name of your Amazon RDS database.
	DatabaseName string `pulumi:"databaseName"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBaseRdsFieldMapping `pulumi:"fieldMapping"`
	// The ARN of the vector store.
	ResourceArn string `pulumi:"resourceArn"`
	// The name of the table in the database.
	TableName string `pulumi:"tableName"`
}

// KnowledgeBaseRdsConfigurationInput is an input type that accepts KnowledgeBaseRdsConfigurationArgs and KnowledgeBaseRdsConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseRdsConfigurationInput` via:
//
//	KnowledgeBaseRdsConfigurationArgs{...}
type KnowledgeBaseRdsConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseRdsConfigurationOutput() KnowledgeBaseRdsConfigurationOutput
	ToKnowledgeBaseRdsConfigurationOutputWithContext(context.Context) KnowledgeBaseRdsConfigurationOutput
}

// Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see Create a vector index in Amazon RDS.
type KnowledgeBaseRdsConfigurationArgs struct {
	// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon RDS database.
	CredentialsSecretArn pulumi.StringInput `pulumi:"credentialsSecretArn"`
	// The name of your Amazon RDS database.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBaseRdsFieldMappingInput `pulumi:"fieldMapping"`
	// The ARN of the vector store.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The name of the table in the database.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (KnowledgeBaseRdsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseRdsConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseRdsConfigurationArgs) ToKnowledgeBaseRdsConfigurationOutput() KnowledgeBaseRdsConfigurationOutput {
	return i.ToKnowledgeBaseRdsConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseRdsConfigurationArgs) ToKnowledgeBaseRdsConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseRdsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseRdsConfigurationOutput)
}

func (i KnowledgeBaseRdsConfigurationArgs) ToKnowledgeBaseRdsConfigurationPtrOutput() KnowledgeBaseRdsConfigurationPtrOutput {
	return i.ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(context.Background())
}

func (i KnowledgeBaseRdsConfigurationArgs) ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseRdsConfigurationOutput).ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(ctx)
}

// KnowledgeBaseRdsConfigurationPtrInput is an input type that accepts KnowledgeBaseRdsConfigurationArgs, KnowledgeBaseRdsConfigurationPtr and KnowledgeBaseRdsConfigurationPtrOutput values.
// You can construct a concrete instance of `KnowledgeBaseRdsConfigurationPtrInput` via:
//
//	        KnowledgeBaseRdsConfigurationArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBaseRdsConfigurationPtrInput interface {
	pulumi.Input

	ToKnowledgeBaseRdsConfigurationPtrOutput() KnowledgeBaseRdsConfigurationPtrOutput
	ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(context.Context) KnowledgeBaseRdsConfigurationPtrOutput
}

type knowledgeBaseRdsConfigurationPtrType KnowledgeBaseRdsConfigurationArgs

func KnowledgeBaseRdsConfigurationPtr(v *KnowledgeBaseRdsConfigurationArgs) KnowledgeBaseRdsConfigurationPtrInput {
	return (*knowledgeBaseRdsConfigurationPtrType)(v)
}

func (*knowledgeBaseRdsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseRdsConfiguration)(nil)).Elem()
}

func (i *knowledgeBaseRdsConfigurationPtrType) ToKnowledgeBaseRdsConfigurationPtrOutput() KnowledgeBaseRdsConfigurationPtrOutput {
	return i.ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(context.Background())
}

func (i *knowledgeBaseRdsConfigurationPtrType) ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseRdsConfigurationPtrOutput)
}

// Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see Create a vector index in Amazon RDS.
type KnowledgeBaseRdsConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseRdsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseRdsConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseRdsConfigurationOutput) ToKnowledgeBaseRdsConfigurationOutput() KnowledgeBaseRdsConfigurationOutput {
	return o
}

func (o KnowledgeBaseRdsConfigurationOutput) ToKnowledgeBaseRdsConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseRdsConfigurationOutput {
	return o
}

func (o KnowledgeBaseRdsConfigurationOutput) ToKnowledgeBaseRdsConfigurationPtrOutput() KnowledgeBaseRdsConfigurationPtrOutput {
	return o.ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(context.Background())
}

func (o KnowledgeBaseRdsConfigurationOutput) ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBaseRdsConfiguration) *KnowledgeBaseRdsConfiguration {
		return &v
	}).(KnowledgeBaseRdsConfigurationPtrOutput)
}

// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon RDS database.
func (o KnowledgeBaseRdsConfigurationOutput) CredentialsSecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsConfiguration) string { return v.CredentialsSecretArn }).(pulumi.StringOutput)
}

// The name of your Amazon RDS database.
func (o KnowledgeBaseRdsConfigurationOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsConfiguration) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBaseRdsConfigurationOutput) FieldMapping() KnowledgeBaseRdsFieldMappingOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsConfiguration) KnowledgeBaseRdsFieldMapping { return v.FieldMapping }).(KnowledgeBaseRdsFieldMappingOutput)
}

// The ARN of the vector store.
func (o KnowledgeBaseRdsConfigurationOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsConfiguration) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The name of the table in the database.
func (o KnowledgeBaseRdsConfigurationOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsConfiguration) string { return v.TableName }).(pulumi.StringOutput)
}

type KnowledgeBaseRdsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseRdsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseRdsConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseRdsConfigurationPtrOutput) ToKnowledgeBaseRdsConfigurationPtrOutput() KnowledgeBaseRdsConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseRdsConfigurationPtrOutput) ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseRdsConfigurationPtrOutput) Elem() KnowledgeBaseRdsConfigurationOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsConfiguration) KnowledgeBaseRdsConfiguration {
		if v != nil {
			return *v
		}
		var ret KnowledgeBaseRdsConfiguration
		return ret
	}).(KnowledgeBaseRdsConfigurationOutput)
}

// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon RDS database.
func (o KnowledgeBaseRdsConfigurationPtrOutput) CredentialsSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialsSecretArn
	}).(pulumi.StringPtrOutput)
}

// The name of your Amazon RDS database.
func (o KnowledgeBaseRdsConfigurationPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBaseRdsConfigurationPtrOutput) FieldMapping() KnowledgeBaseRdsFieldMappingPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsConfiguration) *KnowledgeBaseRdsFieldMapping {
		if v == nil {
			return nil
		}
		return &v.FieldMapping
	}).(KnowledgeBaseRdsFieldMappingPtrOutput)
}

// The ARN of the vector store.
func (o KnowledgeBaseRdsConfigurationPtrOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceArn
	}).(pulumi.StringPtrOutput)
}

// The name of the table in the database.
func (o KnowledgeBaseRdsConfigurationPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBaseRdsFieldMapping struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField string `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the ID for each entry.
	PrimaryKeyField string `pulumi:"primaryKeyField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField string `pulumi:"textField"`
	// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
	VectorField string `pulumi:"vectorField"`
}

// KnowledgeBaseRdsFieldMappingInput is an input type that accepts KnowledgeBaseRdsFieldMappingArgs and KnowledgeBaseRdsFieldMappingOutput values.
// You can construct a concrete instance of `KnowledgeBaseRdsFieldMappingInput` via:
//
//	KnowledgeBaseRdsFieldMappingArgs{...}
type KnowledgeBaseRdsFieldMappingInput interface {
	pulumi.Input

	ToKnowledgeBaseRdsFieldMappingOutput() KnowledgeBaseRdsFieldMappingOutput
	ToKnowledgeBaseRdsFieldMappingOutputWithContext(context.Context) KnowledgeBaseRdsFieldMappingOutput
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBaseRdsFieldMappingArgs struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField pulumi.StringInput `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the ID for each entry.
	PrimaryKeyField pulumi.StringInput `pulumi:"primaryKeyField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField pulumi.StringInput `pulumi:"textField"`
	// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
	VectorField pulumi.StringInput `pulumi:"vectorField"`
}

func (KnowledgeBaseRdsFieldMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseRdsFieldMapping)(nil)).Elem()
}

func (i KnowledgeBaseRdsFieldMappingArgs) ToKnowledgeBaseRdsFieldMappingOutput() KnowledgeBaseRdsFieldMappingOutput {
	return i.ToKnowledgeBaseRdsFieldMappingOutputWithContext(context.Background())
}

func (i KnowledgeBaseRdsFieldMappingArgs) ToKnowledgeBaseRdsFieldMappingOutputWithContext(ctx context.Context) KnowledgeBaseRdsFieldMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseRdsFieldMappingOutput)
}

func (i KnowledgeBaseRdsFieldMappingArgs) ToKnowledgeBaseRdsFieldMappingPtrOutput() KnowledgeBaseRdsFieldMappingPtrOutput {
	return i.ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(context.Background())
}

func (i KnowledgeBaseRdsFieldMappingArgs) ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseRdsFieldMappingOutput).ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(ctx)
}

// KnowledgeBaseRdsFieldMappingPtrInput is an input type that accepts KnowledgeBaseRdsFieldMappingArgs, KnowledgeBaseRdsFieldMappingPtr and KnowledgeBaseRdsFieldMappingPtrOutput values.
// You can construct a concrete instance of `KnowledgeBaseRdsFieldMappingPtrInput` via:
//
//	        KnowledgeBaseRdsFieldMappingArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBaseRdsFieldMappingPtrInput interface {
	pulumi.Input

	ToKnowledgeBaseRdsFieldMappingPtrOutput() KnowledgeBaseRdsFieldMappingPtrOutput
	ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(context.Context) KnowledgeBaseRdsFieldMappingPtrOutput
}

type knowledgeBaseRdsFieldMappingPtrType KnowledgeBaseRdsFieldMappingArgs

func KnowledgeBaseRdsFieldMappingPtr(v *KnowledgeBaseRdsFieldMappingArgs) KnowledgeBaseRdsFieldMappingPtrInput {
	return (*knowledgeBaseRdsFieldMappingPtrType)(v)
}

func (*knowledgeBaseRdsFieldMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseRdsFieldMapping)(nil)).Elem()
}

func (i *knowledgeBaseRdsFieldMappingPtrType) ToKnowledgeBaseRdsFieldMappingPtrOutput() KnowledgeBaseRdsFieldMappingPtrOutput {
	return i.ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(context.Background())
}

func (i *knowledgeBaseRdsFieldMappingPtrType) ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseRdsFieldMappingPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBaseRdsFieldMappingOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseRdsFieldMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseRdsFieldMapping)(nil)).Elem()
}

func (o KnowledgeBaseRdsFieldMappingOutput) ToKnowledgeBaseRdsFieldMappingOutput() KnowledgeBaseRdsFieldMappingOutput {
	return o
}

func (o KnowledgeBaseRdsFieldMappingOutput) ToKnowledgeBaseRdsFieldMappingOutputWithContext(ctx context.Context) KnowledgeBaseRdsFieldMappingOutput {
	return o
}

func (o KnowledgeBaseRdsFieldMappingOutput) ToKnowledgeBaseRdsFieldMappingPtrOutput() KnowledgeBaseRdsFieldMappingPtrOutput {
	return o.ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(context.Background())
}

func (o KnowledgeBaseRdsFieldMappingOutput) ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsFieldMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBaseRdsFieldMapping) *KnowledgeBaseRdsFieldMapping {
		return &v
	}).(KnowledgeBaseRdsFieldMappingPtrOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBaseRdsFieldMappingOutput) MetadataField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsFieldMapping) string { return v.MetadataField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the ID for each entry.
func (o KnowledgeBaseRdsFieldMappingOutput) PrimaryKeyField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsFieldMapping) string { return v.PrimaryKeyField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBaseRdsFieldMappingOutput) TextField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsFieldMapping) string { return v.TextField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
func (o KnowledgeBaseRdsFieldMappingOutput) VectorField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsFieldMapping) string { return v.VectorField }).(pulumi.StringOutput)
}

type KnowledgeBaseRdsFieldMappingPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseRdsFieldMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseRdsFieldMapping)(nil)).Elem()
}

func (o KnowledgeBaseRdsFieldMappingPtrOutput) ToKnowledgeBaseRdsFieldMappingPtrOutput() KnowledgeBaseRdsFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBaseRdsFieldMappingPtrOutput) ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBaseRdsFieldMappingPtrOutput) Elem() KnowledgeBaseRdsFieldMappingOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsFieldMapping) KnowledgeBaseRdsFieldMapping {
		if v != nil {
			return *v
		}
		var ret KnowledgeBaseRdsFieldMapping
		return ret
	}).(KnowledgeBaseRdsFieldMappingOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBaseRdsFieldMappingPtrOutput) MetadataField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.MetadataField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the ID for each entry.
func (o KnowledgeBaseRdsFieldMappingPtrOutput) PrimaryKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryKeyField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBaseRdsFieldMappingPtrOutput) TextField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.TextField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
func (o KnowledgeBaseRdsFieldMappingPtrOutput) VectorField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.VectorField
	}).(pulumi.StringPtrOutput)
}

// The vector store service in which the knowledge base is stored.
type KnowledgeBaseStorageConfiguration struct {
	// Contains the storage configuration of the knowledge base in MongoDB Atlas.
	MongoDbAtlasConfiguration *KnowledgeBaseMongoDbAtlasConfiguration `pulumi:"mongoDbAtlasConfiguration"`
	// Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
	OpensearchServerlessConfiguration *KnowledgeBaseOpenSearchServerlessConfiguration `pulumi:"opensearchServerlessConfiguration"`
	// Contains the storage configuration of the knowledge base in Pinecone.
	PineconeConfiguration *KnowledgeBasePineconeConfiguration `pulumi:"pineconeConfiguration"`
	// Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see [Create a vector index in Amazon RDS](https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-rds.html) .
	RdsConfiguration *KnowledgeBaseRdsConfiguration `pulumi:"rdsConfiguration"`
	// The vector store service in which the knowledge base is stored.
	Type KnowledgeBaseStorageType `pulumi:"type"`
}

// KnowledgeBaseStorageConfigurationInput is an input type that accepts KnowledgeBaseStorageConfigurationArgs and KnowledgeBaseStorageConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseStorageConfigurationInput` via:
//
//	KnowledgeBaseStorageConfigurationArgs{...}
type KnowledgeBaseStorageConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseStorageConfigurationOutput() KnowledgeBaseStorageConfigurationOutput
	ToKnowledgeBaseStorageConfigurationOutputWithContext(context.Context) KnowledgeBaseStorageConfigurationOutput
}

// The vector store service in which the knowledge base is stored.
type KnowledgeBaseStorageConfigurationArgs struct {
	// Contains the storage configuration of the knowledge base in MongoDB Atlas.
	MongoDbAtlasConfiguration KnowledgeBaseMongoDbAtlasConfigurationPtrInput `pulumi:"mongoDbAtlasConfiguration"`
	// Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
	OpensearchServerlessConfiguration KnowledgeBaseOpenSearchServerlessConfigurationPtrInput `pulumi:"opensearchServerlessConfiguration"`
	// Contains the storage configuration of the knowledge base in Pinecone.
	PineconeConfiguration KnowledgeBasePineconeConfigurationPtrInput `pulumi:"pineconeConfiguration"`
	// Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see [Create a vector index in Amazon RDS](https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-rds.html) .
	RdsConfiguration KnowledgeBaseRdsConfigurationPtrInput `pulumi:"rdsConfiguration"`
	// The vector store service in which the knowledge base is stored.
	Type KnowledgeBaseStorageTypeInput `pulumi:"type"`
}

func (KnowledgeBaseStorageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseStorageConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseStorageConfigurationArgs) ToKnowledgeBaseStorageConfigurationOutput() KnowledgeBaseStorageConfigurationOutput {
	return i.ToKnowledgeBaseStorageConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseStorageConfigurationArgs) ToKnowledgeBaseStorageConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseStorageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseStorageConfigurationOutput)
}

// The vector store service in which the knowledge base is stored.
type KnowledgeBaseStorageConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseStorageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseStorageConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseStorageConfigurationOutput) ToKnowledgeBaseStorageConfigurationOutput() KnowledgeBaseStorageConfigurationOutput {
	return o
}

func (o KnowledgeBaseStorageConfigurationOutput) ToKnowledgeBaseStorageConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseStorageConfigurationOutput {
	return o
}

// Contains the storage configuration of the knowledge base in MongoDB Atlas.
func (o KnowledgeBaseStorageConfigurationOutput) MongoDbAtlasConfiguration() KnowledgeBaseMongoDbAtlasConfigurationPtrOutput {
	return o.ApplyT(func(v KnowledgeBaseStorageConfiguration) *KnowledgeBaseMongoDbAtlasConfiguration {
		return v.MongoDbAtlasConfiguration
	}).(KnowledgeBaseMongoDbAtlasConfigurationPtrOutput)
}

// Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
func (o KnowledgeBaseStorageConfigurationOutput) OpensearchServerlessConfiguration() KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return o.ApplyT(func(v KnowledgeBaseStorageConfiguration) *KnowledgeBaseOpenSearchServerlessConfiguration {
		return v.OpensearchServerlessConfiguration
	}).(KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput)
}

// Contains the storage configuration of the knowledge base in Pinecone.
func (o KnowledgeBaseStorageConfigurationOutput) PineconeConfiguration() KnowledgeBasePineconeConfigurationPtrOutput {
	return o.ApplyT(func(v KnowledgeBaseStorageConfiguration) *KnowledgeBasePineconeConfiguration {
		return v.PineconeConfiguration
	}).(KnowledgeBasePineconeConfigurationPtrOutput)
}

// Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see [Create a vector index in Amazon RDS](https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-rds.html) .
func (o KnowledgeBaseStorageConfigurationOutput) RdsConfiguration() KnowledgeBaseRdsConfigurationPtrOutput {
	return o.ApplyT(func(v KnowledgeBaseStorageConfiguration) *KnowledgeBaseRdsConfiguration { return v.RdsConfiguration }).(KnowledgeBaseRdsConfigurationPtrOutput)
}

// The vector store service in which the knowledge base is stored.
func (o KnowledgeBaseStorageConfigurationOutput) Type() KnowledgeBaseStorageTypeOutput {
	return o.ApplyT(func(v KnowledgeBaseStorageConfiguration) KnowledgeBaseStorageType { return v.Type }).(KnowledgeBaseStorageTypeOutput)
}

// Contains details about the model used to create vector embeddings for the knowledge base.
type KnowledgeBaseVectorKnowledgeBaseConfiguration struct {
	// The ARN of the model used to create vector embeddings for the knowledge base.
	EmbeddingModelArn string `pulumi:"embeddingModelArn"`
	// The embeddings model configuration details for the vector model used in Knowledge Base.
	EmbeddingModelConfiguration *KnowledgeBaseEmbeddingModelConfiguration `pulumi:"embeddingModelConfiguration"`
}

// KnowledgeBaseVectorKnowledgeBaseConfigurationInput is an input type that accepts KnowledgeBaseVectorKnowledgeBaseConfigurationArgs and KnowledgeBaseVectorKnowledgeBaseConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseVectorKnowledgeBaseConfigurationInput` via:
//
//	KnowledgeBaseVectorKnowledgeBaseConfigurationArgs{...}
type KnowledgeBaseVectorKnowledgeBaseConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutput() KnowledgeBaseVectorKnowledgeBaseConfigurationOutput
	ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutputWithContext(context.Context) KnowledgeBaseVectorKnowledgeBaseConfigurationOutput
}

// Contains details about the model used to create vector embeddings for the knowledge base.
type KnowledgeBaseVectorKnowledgeBaseConfigurationArgs struct {
	// The ARN of the model used to create vector embeddings for the knowledge base.
	EmbeddingModelArn pulumi.StringInput `pulumi:"embeddingModelArn"`
	// The embeddings model configuration details for the vector model used in Knowledge Base.
	EmbeddingModelConfiguration KnowledgeBaseEmbeddingModelConfigurationPtrInput `pulumi:"embeddingModelConfiguration"`
}

func (KnowledgeBaseVectorKnowledgeBaseConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseVectorKnowledgeBaseConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseVectorKnowledgeBaseConfigurationArgs) ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutput() KnowledgeBaseVectorKnowledgeBaseConfigurationOutput {
	return i.ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseVectorKnowledgeBaseConfigurationArgs) ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseVectorKnowledgeBaseConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseVectorKnowledgeBaseConfigurationOutput)
}

// Contains details about the model used to create vector embeddings for the knowledge base.
type KnowledgeBaseVectorKnowledgeBaseConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseVectorKnowledgeBaseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseVectorKnowledgeBaseConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseVectorKnowledgeBaseConfigurationOutput) ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutput() KnowledgeBaseVectorKnowledgeBaseConfigurationOutput {
	return o
}

func (o KnowledgeBaseVectorKnowledgeBaseConfigurationOutput) ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseVectorKnowledgeBaseConfigurationOutput {
	return o
}

// The ARN of the model used to create vector embeddings for the knowledge base.
func (o KnowledgeBaseVectorKnowledgeBaseConfigurationOutput) EmbeddingModelArn() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseVectorKnowledgeBaseConfiguration) string { return v.EmbeddingModelArn }).(pulumi.StringOutput)
}

// The embeddings model configuration details for the vector model used in Knowledge Base.
func (o KnowledgeBaseVectorKnowledgeBaseConfigurationOutput) EmbeddingModelConfiguration() KnowledgeBaseEmbeddingModelConfigurationPtrOutput {
	return o.ApplyT(func(v KnowledgeBaseVectorKnowledgeBaseConfiguration) *KnowledgeBaseEmbeddingModelConfiguration {
		return v.EmbeddingModelConfiguration
	}).(KnowledgeBaseEmbeddingModelConfigurationPtrOutput)
}

// Model inference configuration
type PromptInferenceConfiguration0Properties struct {
	Text PromptModelInferenceConfiguration `pulumi:"text"`
}

// Model inference configuration
type PromptInferenceConfigurationProperties struct {
	Text PromptModelInferenceConfiguration `pulumi:"text"`
}

// PromptInferenceConfigurationPropertiesInput is an input type that accepts PromptInferenceConfigurationPropertiesArgs and PromptInferenceConfigurationPropertiesOutput values.
// You can construct a concrete instance of `PromptInferenceConfigurationPropertiesInput` via:
//
//	PromptInferenceConfigurationPropertiesArgs{...}
type PromptInferenceConfigurationPropertiesInput interface {
	pulumi.Input

	ToPromptInferenceConfigurationPropertiesOutput() PromptInferenceConfigurationPropertiesOutput
	ToPromptInferenceConfigurationPropertiesOutputWithContext(context.Context) PromptInferenceConfigurationPropertiesOutput
}

// Model inference configuration
type PromptInferenceConfigurationPropertiesArgs struct {
	Text PromptModelInferenceConfigurationInput `pulumi:"text"`
}

func (PromptInferenceConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptInferenceConfigurationProperties)(nil)).Elem()
}

func (i PromptInferenceConfigurationPropertiesArgs) ToPromptInferenceConfigurationPropertiesOutput() PromptInferenceConfigurationPropertiesOutput {
	return i.ToPromptInferenceConfigurationPropertiesOutputWithContext(context.Background())
}

func (i PromptInferenceConfigurationPropertiesArgs) ToPromptInferenceConfigurationPropertiesOutputWithContext(ctx context.Context) PromptInferenceConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptInferenceConfigurationPropertiesOutput)
}

func (i PromptInferenceConfigurationPropertiesArgs) ToPromptInferenceConfigurationPropertiesPtrOutput() PromptInferenceConfigurationPropertiesPtrOutput {
	return i.ToPromptInferenceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i PromptInferenceConfigurationPropertiesArgs) ToPromptInferenceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) PromptInferenceConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptInferenceConfigurationPropertiesOutput).ToPromptInferenceConfigurationPropertiesPtrOutputWithContext(ctx)
}

// PromptInferenceConfigurationPropertiesPtrInput is an input type that accepts PromptInferenceConfigurationPropertiesArgs, PromptInferenceConfigurationPropertiesPtr and PromptInferenceConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `PromptInferenceConfigurationPropertiesPtrInput` via:
//
//	        PromptInferenceConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type PromptInferenceConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToPromptInferenceConfigurationPropertiesPtrOutput() PromptInferenceConfigurationPropertiesPtrOutput
	ToPromptInferenceConfigurationPropertiesPtrOutputWithContext(context.Context) PromptInferenceConfigurationPropertiesPtrOutput
}

type promptInferenceConfigurationPropertiesPtrType PromptInferenceConfigurationPropertiesArgs

func PromptInferenceConfigurationPropertiesPtr(v *PromptInferenceConfigurationPropertiesArgs) PromptInferenceConfigurationPropertiesPtrInput {
	return (*promptInferenceConfigurationPropertiesPtrType)(v)
}

func (*promptInferenceConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptInferenceConfigurationProperties)(nil)).Elem()
}

func (i *promptInferenceConfigurationPropertiesPtrType) ToPromptInferenceConfigurationPropertiesPtrOutput() PromptInferenceConfigurationPropertiesPtrOutput {
	return i.ToPromptInferenceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *promptInferenceConfigurationPropertiesPtrType) ToPromptInferenceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) PromptInferenceConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptInferenceConfigurationPropertiesPtrOutput)
}

// Model inference configuration
type PromptInferenceConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (PromptInferenceConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptInferenceConfigurationProperties)(nil)).Elem()
}

func (o PromptInferenceConfigurationPropertiesOutput) ToPromptInferenceConfigurationPropertiesOutput() PromptInferenceConfigurationPropertiesOutput {
	return o
}

func (o PromptInferenceConfigurationPropertiesOutput) ToPromptInferenceConfigurationPropertiesOutputWithContext(ctx context.Context) PromptInferenceConfigurationPropertiesOutput {
	return o
}

func (o PromptInferenceConfigurationPropertiesOutput) ToPromptInferenceConfigurationPropertiesPtrOutput() PromptInferenceConfigurationPropertiesPtrOutput {
	return o.ToPromptInferenceConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o PromptInferenceConfigurationPropertiesOutput) ToPromptInferenceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) PromptInferenceConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromptInferenceConfigurationProperties) *PromptInferenceConfigurationProperties {
		return &v
	}).(PromptInferenceConfigurationPropertiesPtrOutput)
}

func (o PromptInferenceConfigurationPropertiesOutput) Text() PromptModelInferenceConfigurationOutput {
	return o.ApplyT(func(v PromptInferenceConfigurationProperties) PromptModelInferenceConfiguration { return v.Text }).(PromptModelInferenceConfigurationOutput)
}

type PromptInferenceConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PromptInferenceConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptInferenceConfigurationProperties)(nil)).Elem()
}

func (o PromptInferenceConfigurationPropertiesPtrOutput) ToPromptInferenceConfigurationPropertiesPtrOutput() PromptInferenceConfigurationPropertiesPtrOutput {
	return o
}

func (o PromptInferenceConfigurationPropertiesPtrOutput) ToPromptInferenceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) PromptInferenceConfigurationPropertiesPtrOutput {
	return o
}

func (o PromptInferenceConfigurationPropertiesPtrOutput) Elem() PromptInferenceConfigurationPropertiesOutput {
	return o.ApplyT(func(v *PromptInferenceConfigurationProperties) PromptInferenceConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret PromptInferenceConfigurationProperties
		return ret
	}).(PromptInferenceConfigurationPropertiesOutput)
}

func (o PromptInferenceConfigurationPropertiesPtrOutput) Text() PromptModelInferenceConfigurationPtrOutput {
	return o.ApplyT(func(v *PromptInferenceConfigurationProperties) *PromptModelInferenceConfiguration {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(PromptModelInferenceConfigurationPtrOutput)
}

// Input variable
type PromptInputVariable struct {
	// Name for an input variable
	Name *string `pulumi:"name"`
}

// PromptInputVariableInput is an input type that accepts PromptInputVariableArgs and PromptInputVariableOutput values.
// You can construct a concrete instance of `PromptInputVariableInput` via:
//
//	PromptInputVariableArgs{...}
type PromptInputVariableInput interface {
	pulumi.Input

	ToPromptInputVariableOutput() PromptInputVariableOutput
	ToPromptInputVariableOutputWithContext(context.Context) PromptInputVariableOutput
}

// Input variable
type PromptInputVariableArgs struct {
	// Name for an input variable
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (PromptInputVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptInputVariable)(nil)).Elem()
}

func (i PromptInputVariableArgs) ToPromptInputVariableOutput() PromptInputVariableOutput {
	return i.ToPromptInputVariableOutputWithContext(context.Background())
}

func (i PromptInputVariableArgs) ToPromptInputVariableOutputWithContext(ctx context.Context) PromptInputVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptInputVariableOutput)
}

// PromptInputVariableArrayInput is an input type that accepts PromptInputVariableArray and PromptInputVariableArrayOutput values.
// You can construct a concrete instance of `PromptInputVariableArrayInput` via:
//
//	PromptInputVariableArray{ PromptInputVariableArgs{...} }
type PromptInputVariableArrayInput interface {
	pulumi.Input

	ToPromptInputVariableArrayOutput() PromptInputVariableArrayOutput
	ToPromptInputVariableArrayOutputWithContext(context.Context) PromptInputVariableArrayOutput
}

type PromptInputVariableArray []PromptInputVariableInput

func (PromptInputVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromptInputVariable)(nil)).Elem()
}

func (i PromptInputVariableArray) ToPromptInputVariableArrayOutput() PromptInputVariableArrayOutput {
	return i.ToPromptInputVariableArrayOutputWithContext(context.Background())
}

func (i PromptInputVariableArray) ToPromptInputVariableArrayOutputWithContext(ctx context.Context) PromptInputVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptInputVariableArrayOutput)
}

// Input variable
type PromptInputVariableOutput struct{ *pulumi.OutputState }

func (PromptInputVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptInputVariable)(nil)).Elem()
}

func (o PromptInputVariableOutput) ToPromptInputVariableOutput() PromptInputVariableOutput {
	return o
}

func (o PromptInputVariableOutput) ToPromptInputVariableOutputWithContext(ctx context.Context) PromptInputVariableOutput {
	return o
}

// Name for an input variable
func (o PromptInputVariableOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromptInputVariable) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PromptInputVariableArrayOutput struct{ *pulumi.OutputState }

func (PromptInputVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromptInputVariable)(nil)).Elem()
}

func (o PromptInputVariableArrayOutput) ToPromptInputVariableArrayOutput() PromptInputVariableArrayOutput {
	return o
}

func (o PromptInputVariableArrayOutput) ToPromptInputVariableArrayOutputWithContext(ctx context.Context) PromptInputVariableArrayOutput {
	return o
}

func (o PromptInputVariableArrayOutput) Index(i pulumi.IntInput) PromptInputVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromptInputVariable {
		return vs[0].([]PromptInputVariable)[vs[1].(int)]
	}).(PromptInputVariableOutput)
}

// Prompt model inference configuration
type PromptModelInferenceConfiguration struct {
	// Maximum length of output
	MaxTokens *float64 `pulumi:"maxTokens"`
	// List of stop sequences
	StopSequences []string `pulumi:"stopSequences"`
	// Controls randomness, higher values increase diversity
	Temperature *float64 `pulumi:"temperature"`
	// Sample from the k most likely next tokens
	TopK *float64 `pulumi:"topK"`
	// Cumulative probability cutoff for token selection
	TopP *float64 `pulumi:"topP"`
}

// PromptModelInferenceConfigurationInput is an input type that accepts PromptModelInferenceConfigurationArgs and PromptModelInferenceConfigurationOutput values.
// You can construct a concrete instance of `PromptModelInferenceConfigurationInput` via:
//
//	PromptModelInferenceConfigurationArgs{...}
type PromptModelInferenceConfigurationInput interface {
	pulumi.Input

	ToPromptModelInferenceConfigurationOutput() PromptModelInferenceConfigurationOutput
	ToPromptModelInferenceConfigurationOutputWithContext(context.Context) PromptModelInferenceConfigurationOutput
}

// Prompt model inference configuration
type PromptModelInferenceConfigurationArgs struct {
	// Maximum length of output
	MaxTokens pulumi.Float64PtrInput `pulumi:"maxTokens"`
	// List of stop sequences
	StopSequences pulumi.StringArrayInput `pulumi:"stopSequences"`
	// Controls randomness, higher values increase diversity
	Temperature pulumi.Float64PtrInput `pulumi:"temperature"`
	// Sample from the k most likely next tokens
	TopK pulumi.Float64PtrInput `pulumi:"topK"`
	// Cumulative probability cutoff for token selection
	TopP pulumi.Float64PtrInput `pulumi:"topP"`
}

func (PromptModelInferenceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptModelInferenceConfiguration)(nil)).Elem()
}

func (i PromptModelInferenceConfigurationArgs) ToPromptModelInferenceConfigurationOutput() PromptModelInferenceConfigurationOutput {
	return i.ToPromptModelInferenceConfigurationOutputWithContext(context.Background())
}

func (i PromptModelInferenceConfigurationArgs) ToPromptModelInferenceConfigurationOutputWithContext(ctx context.Context) PromptModelInferenceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptModelInferenceConfigurationOutput)
}

func (i PromptModelInferenceConfigurationArgs) ToPromptModelInferenceConfigurationPtrOutput() PromptModelInferenceConfigurationPtrOutput {
	return i.ToPromptModelInferenceConfigurationPtrOutputWithContext(context.Background())
}

func (i PromptModelInferenceConfigurationArgs) ToPromptModelInferenceConfigurationPtrOutputWithContext(ctx context.Context) PromptModelInferenceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptModelInferenceConfigurationOutput).ToPromptModelInferenceConfigurationPtrOutputWithContext(ctx)
}

// PromptModelInferenceConfigurationPtrInput is an input type that accepts PromptModelInferenceConfigurationArgs, PromptModelInferenceConfigurationPtr and PromptModelInferenceConfigurationPtrOutput values.
// You can construct a concrete instance of `PromptModelInferenceConfigurationPtrInput` via:
//
//	        PromptModelInferenceConfigurationArgs{...}
//
//	or:
//
//	        nil
type PromptModelInferenceConfigurationPtrInput interface {
	pulumi.Input

	ToPromptModelInferenceConfigurationPtrOutput() PromptModelInferenceConfigurationPtrOutput
	ToPromptModelInferenceConfigurationPtrOutputWithContext(context.Context) PromptModelInferenceConfigurationPtrOutput
}

type promptModelInferenceConfigurationPtrType PromptModelInferenceConfigurationArgs

func PromptModelInferenceConfigurationPtr(v *PromptModelInferenceConfigurationArgs) PromptModelInferenceConfigurationPtrInput {
	return (*promptModelInferenceConfigurationPtrType)(v)
}

func (*promptModelInferenceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptModelInferenceConfiguration)(nil)).Elem()
}

func (i *promptModelInferenceConfigurationPtrType) ToPromptModelInferenceConfigurationPtrOutput() PromptModelInferenceConfigurationPtrOutput {
	return i.ToPromptModelInferenceConfigurationPtrOutputWithContext(context.Background())
}

func (i *promptModelInferenceConfigurationPtrType) ToPromptModelInferenceConfigurationPtrOutputWithContext(ctx context.Context) PromptModelInferenceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptModelInferenceConfigurationPtrOutput)
}

// Prompt model inference configuration
type PromptModelInferenceConfigurationOutput struct{ *pulumi.OutputState }

func (PromptModelInferenceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptModelInferenceConfiguration)(nil)).Elem()
}

func (o PromptModelInferenceConfigurationOutput) ToPromptModelInferenceConfigurationOutput() PromptModelInferenceConfigurationOutput {
	return o
}

func (o PromptModelInferenceConfigurationOutput) ToPromptModelInferenceConfigurationOutputWithContext(ctx context.Context) PromptModelInferenceConfigurationOutput {
	return o
}

func (o PromptModelInferenceConfigurationOutput) ToPromptModelInferenceConfigurationPtrOutput() PromptModelInferenceConfigurationPtrOutput {
	return o.ToPromptModelInferenceConfigurationPtrOutputWithContext(context.Background())
}

func (o PromptModelInferenceConfigurationOutput) ToPromptModelInferenceConfigurationPtrOutputWithContext(ctx context.Context) PromptModelInferenceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromptModelInferenceConfiguration) *PromptModelInferenceConfiguration {
		return &v
	}).(PromptModelInferenceConfigurationPtrOutput)
}

// Maximum length of output
func (o PromptModelInferenceConfigurationOutput) MaxTokens() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PromptModelInferenceConfiguration) *float64 { return v.MaxTokens }).(pulumi.Float64PtrOutput)
}

// List of stop sequences
func (o PromptModelInferenceConfigurationOutput) StopSequences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PromptModelInferenceConfiguration) []string { return v.StopSequences }).(pulumi.StringArrayOutput)
}

// Controls randomness, higher values increase diversity
func (o PromptModelInferenceConfigurationOutput) Temperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PromptModelInferenceConfiguration) *float64 { return v.Temperature }).(pulumi.Float64PtrOutput)
}

// Sample from the k most likely next tokens
func (o PromptModelInferenceConfigurationOutput) TopK() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PromptModelInferenceConfiguration) *float64 { return v.TopK }).(pulumi.Float64PtrOutput)
}

// Cumulative probability cutoff for token selection
func (o PromptModelInferenceConfigurationOutput) TopP() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PromptModelInferenceConfiguration) *float64 { return v.TopP }).(pulumi.Float64PtrOutput)
}

type PromptModelInferenceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PromptModelInferenceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptModelInferenceConfiguration)(nil)).Elem()
}

func (o PromptModelInferenceConfigurationPtrOutput) ToPromptModelInferenceConfigurationPtrOutput() PromptModelInferenceConfigurationPtrOutput {
	return o
}

func (o PromptModelInferenceConfigurationPtrOutput) ToPromptModelInferenceConfigurationPtrOutputWithContext(ctx context.Context) PromptModelInferenceConfigurationPtrOutput {
	return o
}

func (o PromptModelInferenceConfigurationPtrOutput) Elem() PromptModelInferenceConfigurationOutput {
	return o.ApplyT(func(v *PromptModelInferenceConfiguration) PromptModelInferenceConfiguration {
		if v != nil {
			return *v
		}
		var ret PromptModelInferenceConfiguration
		return ret
	}).(PromptModelInferenceConfigurationOutput)
}

// Maximum length of output
func (o PromptModelInferenceConfigurationPtrOutput) MaxTokens() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxTokens
	}).(pulumi.Float64PtrOutput)
}

// List of stop sequences
func (o PromptModelInferenceConfigurationPtrOutput) StopSequences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PromptModelInferenceConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.StopSequences
	}).(pulumi.StringArrayOutput)
}

// Controls randomness, higher values increase diversity
func (o PromptModelInferenceConfigurationPtrOutput) Temperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.Temperature
	}).(pulumi.Float64PtrOutput)
}

// Sample from the k most likely next tokens
func (o PromptModelInferenceConfigurationPtrOutput) TopK() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TopK
	}).(pulumi.Float64PtrOutput)
}

// Cumulative probability cutoff for token selection
func (o PromptModelInferenceConfigurationPtrOutput) TopP() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TopP
	}).(pulumi.Float64PtrOutput)
}

// Prompt template configuration
type PromptTemplateConfiguration0Properties struct {
	Text PromptTextPromptTemplateConfiguration `pulumi:"text"`
}

// Prompt template configuration
type PromptTemplateConfigurationProperties struct {
	Text PromptTextPromptTemplateConfiguration `pulumi:"text"`
}

// PromptTemplateConfigurationPropertiesInput is an input type that accepts PromptTemplateConfigurationPropertiesArgs and PromptTemplateConfigurationPropertiesOutput values.
// You can construct a concrete instance of `PromptTemplateConfigurationPropertiesInput` via:
//
//	PromptTemplateConfigurationPropertiesArgs{...}
type PromptTemplateConfigurationPropertiesInput interface {
	pulumi.Input

	ToPromptTemplateConfigurationPropertiesOutput() PromptTemplateConfigurationPropertiesOutput
	ToPromptTemplateConfigurationPropertiesOutputWithContext(context.Context) PromptTemplateConfigurationPropertiesOutput
}

// Prompt template configuration
type PromptTemplateConfigurationPropertiesArgs struct {
	Text PromptTextPromptTemplateConfigurationInput `pulumi:"text"`
}

func (PromptTemplateConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptTemplateConfigurationProperties)(nil)).Elem()
}

func (i PromptTemplateConfigurationPropertiesArgs) ToPromptTemplateConfigurationPropertiesOutput() PromptTemplateConfigurationPropertiesOutput {
	return i.ToPromptTemplateConfigurationPropertiesOutputWithContext(context.Background())
}

func (i PromptTemplateConfigurationPropertiesArgs) ToPromptTemplateConfigurationPropertiesOutputWithContext(ctx context.Context) PromptTemplateConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptTemplateConfigurationPropertiesOutput)
}

func (i PromptTemplateConfigurationPropertiesArgs) ToPromptTemplateConfigurationPropertiesPtrOutput() PromptTemplateConfigurationPropertiesPtrOutput {
	return i.ToPromptTemplateConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i PromptTemplateConfigurationPropertiesArgs) ToPromptTemplateConfigurationPropertiesPtrOutputWithContext(ctx context.Context) PromptTemplateConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptTemplateConfigurationPropertiesOutput).ToPromptTemplateConfigurationPropertiesPtrOutputWithContext(ctx)
}

// PromptTemplateConfigurationPropertiesPtrInput is an input type that accepts PromptTemplateConfigurationPropertiesArgs, PromptTemplateConfigurationPropertiesPtr and PromptTemplateConfigurationPropertiesPtrOutput values.
// You can construct a concrete instance of `PromptTemplateConfigurationPropertiesPtrInput` via:
//
//	        PromptTemplateConfigurationPropertiesArgs{...}
//
//	or:
//
//	        nil
type PromptTemplateConfigurationPropertiesPtrInput interface {
	pulumi.Input

	ToPromptTemplateConfigurationPropertiesPtrOutput() PromptTemplateConfigurationPropertiesPtrOutput
	ToPromptTemplateConfigurationPropertiesPtrOutputWithContext(context.Context) PromptTemplateConfigurationPropertiesPtrOutput
}

type promptTemplateConfigurationPropertiesPtrType PromptTemplateConfigurationPropertiesArgs

func PromptTemplateConfigurationPropertiesPtr(v *PromptTemplateConfigurationPropertiesArgs) PromptTemplateConfigurationPropertiesPtrInput {
	return (*promptTemplateConfigurationPropertiesPtrType)(v)
}

func (*promptTemplateConfigurationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptTemplateConfigurationProperties)(nil)).Elem()
}

func (i *promptTemplateConfigurationPropertiesPtrType) ToPromptTemplateConfigurationPropertiesPtrOutput() PromptTemplateConfigurationPropertiesPtrOutput {
	return i.ToPromptTemplateConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (i *promptTemplateConfigurationPropertiesPtrType) ToPromptTemplateConfigurationPropertiesPtrOutputWithContext(ctx context.Context) PromptTemplateConfigurationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptTemplateConfigurationPropertiesPtrOutput)
}

// Prompt template configuration
type PromptTemplateConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (PromptTemplateConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptTemplateConfigurationProperties)(nil)).Elem()
}

func (o PromptTemplateConfigurationPropertiesOutput) ToPromptTemplateConfigurationPropertiesOutput() PromptTemplateConfigurationPropertiesOutput {
	return o
}

func (o PromptTemplateConfigurationPropertiesOutput) ToPromptTemplateConfigurationPropertiesOutputWithContext(ctx context.Context) PromptTemplateConfigurationPropertiesOutput {
	return o
}

func (o PromptTemplateConfigurationPropertiesOutput) ToPromptTemplateConfigurationPropertiesPtrOutput() PromptTemplateConfigurationPropertiesPtrOutput {
	return o.ToPromptTemplateConfigurationPropertiesPtrOutputWithContext(context.Background())
}

func (o PromptTemplateConfigurationPropertiesOutput) ToPromptTemplateConfigurationPropertiesPtrOutputWithContext(ctx context.Context) PromptTemplateConfigurationPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromptTemplateConfigurationProperties) *PromptTemplateConfigurationProperties {
		return &v
	}).(PromptTemplateConfigurationPropertiesPtrOutput)
}

func (o PromptTemplateConfigurationPropertiesOutput) Text() PromptTextPromptTemplateConfigurationOutput {
	return o.ApplyT(func(v PromptTemplateConfigurationProperties) PromptTextPromptTemplateConfiguration { return v.Text }).(PromptTextPromptTemplateConfigurationOutput)
}

type PromptTemplateConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PromptTemplateConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptTemplateConfigurationProperties)(nil)).Elem()
}

func (o PromptTemplateConfigurationPropertiesPtrOutput) ToPromptTemplateConfigurationPropertiesPtrOutput() PromptTemplateConfigurationPropertiesPtrOutput {
	return o
}

func (o PromptTemplateConfigurationPropertiesPtrOutput) ToPromptTemplateConfigurationPropertiesPtrOutputWithContext(ctx context.Context) PromptTemplateConfigurationPropertiesPtrOutput {
	return o
}

func (o PromptTemplateConfigurationPropertiesPtrOutput) Elem() PromptTemplateConfigurationPropertiesOutput {
	return o.ApplyT(func(v *PromptTemplateConfigurationProperties) PromptTemplateConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret PromptTemplateConfigurationProperties
		return ret
	}).(PromptTemplateConfigurationPropertiesOutput)
}

func (o PromptTemplateConfigurationPropertiesPtrOutput) Text() PromptTextPromptTemplateConfigurationPtrOutput {
	return o.ApplyT(func(v *PromptTemplateConfigurationProperties) *PromptTextPromptTemplateConfiguration {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(PromptTextPromptTemplateConfigurationPtrOutput)
}

// Configuration for text prompt template
type PromptTextPromptTemplateConfiguration struct {
	// List of input variables
	InputVariables []PromptInputVariable `pulumi:"inputVariables"`
	// Prompt content for String prompt template
	Text           *string               `pulumi:"text"`
	TextS3Location *PromptTextS3Location `pulumi:"textS3Location"`
}

// PromptTextPromptTemplateConfigurationInput is an input type that accepts PromptTextPromptTemplateConfigurationArgs and PromptTextPromptTemplateConfigurationOutput values.
// You can construct a concrete instance of `PromptTextPromptTemplateConfigurationInput` via:
//
//	PromptTextPromptTemplateConfigurationArgs{...}
type PromptTextPromptTemplateConfigurationInput interface {
	pulumi.Input

	ToPromptTextPromptTemplateConfigurationOutput() PromptTextPromptTemplateConfigurationOutput
	ToPromptTextPromptTemplateConfigurationOutputWithContext(context.Context) PromptTextPromptTemplateConfigurationOutput
}

// Configuration for text prompt template
type PromptTextPromptTemplateConfigurationArgs struct {
	// List of input variables
	InputVariables PromptInputVariableArrayInput `pulumi:"inputVariables"`
	// Prompt content for String prompt template
	Text           pulumi.StringPtrInput        `pulumi:"text"`
	TextS3Location PromptTextS3LocationPtrInput `pulumi:"textS3Location"`
}

func (PromptTextPromptTemplateConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptTextPromptTemplateConfiguration)(nil)).Elem()
}

func (i PromptTextPromptTemplateConfigurationArgs) ToPromptTextPromptTemplateConfigurationOutput() PromptTextPromptTemplateConfigurationOutput {
	return i.ToPromptTextPromptTemplateConfigurationOutputWithContext(context.Background())
}

func (i PromptTextPromptTemplateConfigurationArgs) ToPromptTextPromptTemplateConfigurationOutputWithContext(ctx context.Context) PromptTextPromptTemplateConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptTextPromptTemplateConfigurationOutput)
}

func (i PromptTextPromptTemplateConfigurationArgs) ToPromptTextPromptTemplateConfigurationPtrOutput() PromptTextPromptTemplateConfigurationPtrOutput {
	return i.ToPromptTextPromptTemplateConfigurationPtrOutputWithContext(context.Background())
}

func (i PromptTextPromptTemplateConfigurationArgs) ToPromptTextPromptTemplateConfigurationPtrOutputWithContext(ctx context.Context) PromptTextPromptTemplateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptTextPromptTemplateConfigurationOutput).ToPromptTextPromptTemplateConfigurationPtrOutputWithContext(ctx)
}

// PromptTextPromptTemplateConfigurationPtrInput is an input type that accepts PromptTextPromptTemplateConfigurationArgs, PromptTextPromptTemplateConfigurationPtr and PromptTextPromptTemplateConfigurationPtrOutput values.
// You can construct a concrete instance of `PromptTextPromptTemplateConfigurationPtrInput` via:
//
//	        PromptTextPromptTemplateConfigurationArgs{...}
//
//	or:
//
//	        nil
type PromptTextPromptTemplateConfigurationPtrInput interface {
	pulumi.Input

	ToPromptTextPromptTemplateConfigurationPtrOutput() PromptTextPromptTemplateConfigurationPtrOutput
	ToPromptTextPromptTemplateConfigurationPtrOutputWithContext(context.Context) PromptTextPromptTemplateConfigurationPtrOutput
}

type promptTextPromptTemplateConfigurationPtrType PromptTextPromptTemplateConfigurationArgs

func PromptTextPromptTemplateConfigurationPtr(v *PromptTextPromptTemplateConfigurationArgs) PromptTextPromptTemplateConfigurationPtrInput {
	return (*promptTextPromptTemplateConfigurationPtrType)(v)
}

func (*promptTextPromptTemplateConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptTextPromptTemplateConfiguration)(nil)).Elem()
}

func (i *promptTextPromptTemplateConfigurationPtrType) ToPromptTextPromptTemplateConfigurationPtrOutput() PromptTextPromptTemplateConfigurationPtrOutput {
	return i.ToPromptTextPromptTemplateConfigurationPtrOutputWithContext(context.Background())
}

func (i *promptTextPromptTemplateConfigurationPtrType) ToPromptTextPromptTemplateConfigurationPtrOutputWithContext(ctx context.Context) PromptTextPromptTemplateConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptTextPromptTemplateConfigurationPtrOutput)
}

// Configuration for text prompt template
type PromptTextPromptTemplateConfigurationOutput struct{ *pulumi.OutputState }

func (PromptTextPromptTemplateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptTextPromptTemplateConfiguration)(nil)).Elem()
}

func (o PromptTextPromptTemplateConfigurationOutput) ToPromptTextPromptTemplateConfigurationOutput() PromptTextPromptTemplateConfigurationOutput {
	return o
}

func (o PromptTextPromptTemplateConfigurationOutput) ToPromptTextPromptTemplateConfigurationOutputWithContext(ctx context.Context) PromptTextPromptTemplateConfigurationOutput {
	return o
}

func (o PromptTextPromptTemplateConfigurationOutput) ToPromptTextPromptTemplateConfigurationPtrOutput() PromptTextPromptTemplateConfigurationPtrOutput {
	return o.ToPromptTextPromptTemplateConfigurationPtrOutputWithContext(context.Background())
}

func (o PromptTextPromptTemplateConfigurationOutput) ToPromptTextPromptTemplateConfigurationPtrOutputWithContext(ctx context.Context) PromptTextPromptTemplateConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromptTextPromptTemplateConfiguration) *PromptTextPromptTemplateConfiguration {
		return &v
	}).(PromptTextPromptTemplateConfigurationPtrOutput)
}

// List of input variables
func (o PromptTextPromptTemplateConfigurationOutput) InputVariables() PromptInputVariableArrayOutput {
	return o.ApplyT(func(v PromptTextPromptTemplateConfiguration) []PromptInputVariable { return v.InputVariables }).(PromptInputVariableArrayOutput)
}

// Prompt content for String prompt template
func (o PromptTextPromptTemplateConfigurationOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromptTextPromptTemplateConfiguration) *string { return v.Text }).(pulumi.StringPtrOutput)
}

func (o PromptTextPromptTemplateConfigurationOutput) TextS3Location() PromptTextS3LocationPtrOutput {
	return o.ApplyT(func(v PromptTextPromptTemplateConfiguration) *PromptTextS3Location { return v.TextS3Location }).(PromptTextS3LocationPtrOutput)
}

type PromptTextPromptTemplateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PromptTextPromptTemplateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptTextPromptTemplateConfiguration)(nil)).Elem()
}

func (o PromptTextPromptTemplateConfigurationPtrOutput) ToPromptTextPromptTemplateConfigurationPtrOutput() PromptTextPromptTemplateConfigurationPtrOutput {
	return o
}

func (o PromptTextPromptTemplateConfigurationPtrOutput) ToPromptTextPromptTemplateConfigurationPtrOutputWithContext(ctx context.Context) PromptTextPromptTemplateConfigurationPtrOutput {
	return o
}

func (o PromptTextPromptTemplateConfigurationPtrOutput) Elem() PromptTextPromptTemplateConfigurationOutput {
	return o.ApplyT(func(v *PromptTextPromptTemplateConfiguration) PromptTextPromptTemplateConfiguration {
		if v != nil {
			return *v
		}
		var ret PromptTextPromptTemplateConfiguration
		return ret
	}).(PromptTextPromptTemplateConfigurationOutput)
}

// List of input variables
func (o PromptTextPromptTemplateConfigurationPtrOutput) InputVariables() PromptInputVariableArrayOutput {
	return o.ApplyT(func(v *PromptTextPromptTemplateConfiguration) []PromptInputVariable {
		if v == nil {
			return nil
		}
		return v.InputVariables
	}).(PromptInputVariableArrayOutput)
}

// Prompt content for String prompt template
func (o PromptTextPromptTemplateConfigurationPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromptTextPromptTemplateConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Text
	}).(pulumi.StringPtrOutput)
}

func (o PromptTextPromptTemplateConfigurationPtrOutput) TextS3Location() PromptTextS3LocationPtrOutput {
	return o.ApplyT(func(v *PromptTextPromptTemplateConfiguration) *PromptTextS3Location {
		if v == nil {
			return nil
		}
		return v.TextS3Location
	}).(PromptTextS3LocationPtrOutput)
}

// The identifier for the S3 resource.
type PromptTextS3Location struct {
	// A bucket in S3
	Bucket string `pulumi:"bucket"`
	// A object key in S3
	Key string `pulumi:"key"`
	// The version of the the S3 object to use
	Version *string `pulumi:"version"`
}

// PromptTextS3LocationInput is an input type that accepts PromptTextS3LocationArgs and PromptTextS3LocationOutput values.
// You can construct a concrete instance of `PromptTextS3LocationInput` via:
//
//	PromptTextS3LocationArgs{...}
type PromptTextS3LocationInput interface {
	pulumi.Input

	ToPromptTextS3LocationOutput() PromptTextS3LocationOutput
	ToPromptTextS3LocationOutputWithContext(context.Context) PromptTextS3LocationOutput
}

// The identifier for the S3 resource.
type PromptTextS3LocationArgs struct {
	// A bucket in S3
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// A object key in S3
	Key pulumi.StringInput `pulumi:"key"`
	// The version of the the S3 object to use
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PromptTextS3LocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptTextS3Location)(nil)).Elem()
}

func (i PromptTextS3LocationArgs) ToPromptTextS3LocationOutput() PromptTextS3LocationOutput {
	return i.ToPromptTextS3LocationOutputWithContext(context.Background())
}

func (i PromptTextS3LocationArgs) ToPromptTextS3LocationOutputWithContext(ctx context.Context) PromptTextS3LocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptTextS3LocationOutput)
}

func (i PromptTextS3LocationArgs) ToPromptTextS3LocationPtrOutput() PromptTextS3LocationPtrOutput {
	return i.ToPromptTextS3LocationPtrOutputWithContext(context.Background())
}

func (i PromptTextS3LocationArgs) ToPromptTextS3LocationPtrOutputWithContext(ctx context.Context) PromptTextS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptTextS3LocationOutput).ToPromptTextS3LocationPtrOutputWithContext(ctx)
}

// PromptTextS3LocationPtrInput is an input type that accepts PromptTextS3LocationArgs, PromptTextS3LocationPtr and PromptTextS3LocationPtrOutput values.
// You can construct a concrete instance of `PromptTextS3LocationPtrInput` via:
//
//	        PromptTextS3LocationArgs{...}
//
//	or:
//
//	        nil
type PromptTextS3LocationPtrInput interface {
	pulumi.Input

	ToPromptTextS3LocationPtrOutput() PromptTextS3LocationPtrOutput
	ToPromptTextS3LocationPtrOutputWithContext(context.Context) PromptTextS3LocationPtrOutput
}

type promptTextS3LocationPtrType PromptTextS3LocationArgs

func PromptTextS3LocationPtr(v *PromptTextS3LocationArgs) PromptTextS3LocationPtrInput {
	return (*promptTextS3LocationPtrType)(v)
}

func (*promptTextS3LocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptTextS3Location)(nil)).Elem()
}

func (i *promptTextS3LocationPtrType) ToPromptTextS3LocationPtrOutput() PromptTextS3LocationPtrOutput {
	return i.ToPromptTextS3LocationPtrOutputWithContext(context.Background())
}

func (i *promptTextS3LocationPtrType) ToPromptTextS3LocationPtrOutputWithContext(ctx context.Context) PromptTextS3LocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptTextS3LocationPtrOutput)
}

// The identifier for the S3 resource.
type PromptTextS3LocationOutput struct{ *pulumi.OutputState }

func (PromptTextS3LocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptTextS3Location)(nil)).Elem()
}

func (o PromptTextS3LocationOutput) ToPromptTextS3LocationOutput() PromptTextS3LocationOutput {
	return o
}

func (o PromptTextS3LocationOutput) ToPromptTextS3LocationOutputWithContext(ctx context.Context) PromptTextS3LocationOutput {
	return o
}

func (o PromptTextS3LocationOutput) ToPromptTextS3LocationPtrOutput() PromptTextS3LocationPtrOutput {
	return o.ToPromptTextS3LocationPtrOutputWithContext(context.Background())
}

func (o PromptTextS3LocationOutput) ToPromptTextS3LocationPtrOutputWithContext(ctx context.Context) PromptTextS3LocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PromptTextS3Location) *PromptTextS3Location {
		return &v
	}).(PromptTextS3LocationPtrOutput)
}

// A bucket in S3
func (o PromptTextS3LocationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v PromptTextS3Location) string { return v.Bucket }).(pulumi.StringOutput)
}

// A object key in S3
func (o PromptTextS3LocationOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PromptTextS3Location) string { return v.Key }).(pulumi.StringOutput)
}

// The version of the the S3 object to use
func (o PromptTextS3LocationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromptTextS3Location) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PromptTextS3LocationPtrOutput struct{ *pulumi.OutputState }

func (PromptTextS3LocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptTextS3Location)(nil)).Elem()
}

func (o PromptTextS3LocationPtrOutput) ToPromptTextS3LocationPtrOutput() PromptTextS3LocationPtrOutput {
	return o
}

func (o PromptTextS3LocationPtrOutput) ToPromptTextS3LocationPtrOutputWithContext(ctx context.Context) PromptTextS3LocationPtrOutput {
	return o
}

func (o PromptTextS3LocationPtrOutput) Elem() PromptTextS3LocationOutput {
	return o.ApplyT(func(v *PromptTextS3Location) PromptTextS3Location {
		if v != nil {
			return *v
		}
		var ret PromptTextS3Location
		return ret
	}).(PromptTextS3LocationOutput)
}

// A bucket in S3
func (o PromptTextS3LocationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromptTextS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// A object key in S3
func (o PromptTextS3LocationPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromptTextS3Location) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// The version of the the S3 object to use
func (o PromptTextS3LocationPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromptTextS3Location) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// Prompt variant
type PromptVariant struct {
	// Contains inference configurations for the prompt variant.
	InferenceConfiguration *PromptInferenceConfigurationProperties `pulumi:"inferenceConfiguration"`
	// ARN or name of a Bedrock model.
	ModelId *string `pulumi:"modelId"`
	// Name for a variant.
	Name string `pulumi:"name"`
	// Contains configurations for the prompt template.
	TemplateConfiguration *PromptTemplateConfigurationProperties `pulumi:"templateConfiguration"`
	// The type of prompt template to use.
	TemplateType PromptTemplateType `pulumi:"templateType"`
}

// PromptVariantInput is an input type that accepts PromptVariantArgs and PromptVariantOutput values.
// You can construct a concrete instance of `PromptVariantInput` via:
//
//	PromptVariantArgs{...}
type PromptVariantInput interface {
	pulumi.Input

	ToPromptVariantOutput() PromptVariantOutput
	ToPromptVariantOutputWithContext(context.Context) PromptVariantOutput
}

// Prompt variant
type PromptVariantArgs struct {
	// Contains inference configurations for the prompt variant.
	InferenceConfiguration PromptInferenceConfigurationPropertiesPtrInput `pulumi:"inferenceConfiguration"`
	// ARN or name of a Bedrock model.
	ModelId pulumi.StringPtrInput `pulumi:"modelId"`
	// Name for a variant.
	Name pulumi.StringInput `pulumi:"name"`
	// Contains configurations for the prompt template.
	TemplateConfiguration PromptTemplateConfigurationPropertiesPtrInput `pulumi:"templateConfiguration"`
	// The type of prompt template to use.
	TemplateType PromptTemplateTypeInput `pulumi:"templateType"`
}

func (PromptVariantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptVariant)(nil)).Elem()
}

func (i PromptVariantArgs) ToPromptVariantOutput() PromptVariantOutput {
	return i.ToPromptVariantOutputWithContext(context.Background())
}

func (i PromptVariantArgs) ToPromptVariantOutputWithContext(ctx context.Context) PromptVariantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptVariantOutput)
}

// PromptVariantArrayInput is an input type that accepts PromptVariantArray and PromptVariantArrayOutput values.
// You can construct a concrete instance of `PromptVariantArrayInput` via:
//
//	PromptVariantArray{ PromptVariantArgs{...} }
type PromptVariantArrayInput interface {
	pulumi.Input

	ToPromptVariantArrayOutput() PromptVariantArrayOutput
	ToPromptVariantArrayOutputWithContext(context.Context) PromptVariantArrayOutput
}

type PromptVariantArray []PromptVariantInput

func (PromptVariantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromptVariant)(nil)).Elem()
}

func (i PromptVariantArray) ToPromptVariantArrayOutput() PromptVariantArrayOutput {
	return i.ToPromptVariantArrayOutputWithContext(context.Background())
}

func (i PromptVariantArray) ToPromptVariantArrayOutputWithContext(ctx context.Context) PromptVariantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptVariantArrayOutput)
}

// Prompt variant
type PromptVariantOutput struct{ *pulumi.OutputState }

func (PromptVariantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptVariant)(nil)).Elem()
}

func (o PromptVariantOutput) ToPromptVariantOutput() PromptVariantOutput {
	return o
}

func (o PromptVariantOutput) ToPromptVariantOutputWithContext(ctx context.Context) PromptVariantOutput {
	return o
}

// Contains inference configurations for the prompt variant.
func (o PromptVariantOutput) InferenceConfiguration() PromptInferenceConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v PromptVariant) *PromptInferenceConfigurationProperties { return v.InferenceConfiguration }).(PromptInferenceConfigurationPropertiesPtrOutput)
}

// ARN or name of a Bedrock model.
func (o PromptVariantOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromptVariant) *string { return v.ModelId }).(pulumi.StringPtrOutput)
}

// Name for a variant.
func (o PromptVariantOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PromptVariant) string { return v.Name }).(pulumi.StringOutput)
}

// Contains configurations for the prompt template.
func (o PromptVariantOutput) TemplateConfiguration() PromptTemplateConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v PromptVariant) *PromptTemplateConfigurationProperties { return v.TemplateConfiguration }).(PromptTemplateConfigurationPropertiesPtrOutput)
}

// The type of prompt template to use.
func (o PromptVariantOutput) TemplateType() PromptTemplateTypeOutput {
	return o.ApplyT(func(v PromptVariant) PromptTemplateType { return v.TemplateType }).(PromptTemplateTypeOutput)
}

type PromptVariantArrayOutput struct{ *pulumi.OutputState }

func (PromptVariantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromptVariant)(nil)).Elem()
}

func (o PromptVariantArrayOutput) ToPromptVariantArrayOutput() PromptVariantArrayOutput {
	return o
}

func (o PromptVariantArrayOutput) ToPromptVariantArrayOutputWithContext(ctx context.Context) PromptVariantArrayOutput {
	return o
}

func (o PromptVariantArrayOutput) Index(i pulumi.IntInput) PromptVariantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromptVariant {
		return vs[0].([]PromptVariant)[vs[1].(int)]
	}).(PromptVariantOutput)
}

// Model inference configuration
type PromptVersionPromptInferenceConfiguration0Properties struct {
	Text PromptVersionPromptModelInferenceConfiguration `pulumi:"text"`
}

// Model inference configuration
type PromptVersionPromptInferenceConfigurationProperties struct {
	Text PromptVersionPromptModelInferenceConfiguration `pulumi:"text"`
}

// Model inference configuration
type PromptVersionPromptInferenceConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (PromptVersionPromptInferenceConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptVersionPromptInferenceConfigurationProperties)(nil)).Elem()
}

func (o PromptVersionPromptInferenceConfigurationPropertiesOutput) ToPromptVersionPromptInferenceConfigurationPropertiesOutput() PromptVersionPromptInferenceConfigurationPropertiesOutput {
	return o
}

func (o PromptVersionPromptInferenceConfigurationPropertiesOutput) ToPromptVersionPromptInferenceConfigurationPropertiesOutputWithContext(ctx context.Context) PromptVersionPromptInferenceConfigurationPropertiesOutput {
	return o
}

func (o PromptVersionPromptInferenceConfigurationPropertiesOutput) Text() PromptVersionPromptModelInferenceConfigurationOutput {
	return o.ApplyT(func(v PromptVersionPromptInferenceConfigurationProperties) PromptVersionPromptModelInferenceConfiguration {
		return v.Text
	}).(PromptVersionPromptModelInferenceConfigurationOutput)
}

type PromptVersionPromptInferenceConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PromptVersionPromptInferenceConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptVersionPromptInferenceConfigurationProperties)(nil)).Elem()
}

func (o PromptVersionPromptInferenceConfigurationPropertiesPtrOutput) ToPromptVersionPromptInferenceConfigurationPropertiesPtrOutput() PromptVersionPromptInferenceConfigurationPropertiesPtrOutput {
	return o
}

func (o PromptVersionPromptInferenceConfigurationPropertiesPtrOutput) ToPromptVersionPromptInferenceConfigurationPropertiesPtrOutputWithContext(ctx context.Context) PromptVersionPromptInferenceConfigurationPropertiesPtrOutput {
	return o
}

func (o PromptVersionPromptInferenceConfigurationPropertiesPtrOutput) Elem() PromptVersionPromptInferenceConfigurationPropertiesOutput {
	return o.ApplyT(func(v *PromptVersionPromptInferenceConfigurationProperties) PromptVersionPromptInferenceConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret PromptVersionPromptInferenceConfigurationProperties
		return ret
	}).(PromptVersionPromptInferenceConfigurationPropertiesOutput)
}

func (o PromptVersionPromptInferenceConfigurationPropertiesPtrOutput) Text() PromptVersionPromptModelInferenceConfigurationPtrOutput {
	return o.ApplyT(func(v *PromptVersionPromptInferenceConfigurationProperties) *PromptVersionPromptModelInferenceConfiguration {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(PromptVersionPromptModelInferenceConfigurationPtrOutput)
}

// Input variable
type PromptVersionPromptInputVariable struct {
	// Name for an input variable
	Name *string `pulumi:"name"`
}

// Input variable
type PromptVersionPromptInputVariableOutput struct{ *pulumi.OutputState }

func (PromptVersionPromptInputVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptVersionPromptInputVariable)(nil)).Elem()
}

func (o PromptVersionPromptInputVariableOutput) ToPromptVersionPromptInputVariableOutput() PromptVersionPromptInputVariableOutput {
	return o
}

func (o PromptVersionPromptInputVariableOutput) ToPromptVersionPromptInputVariableOutputWithContext(ctx context.Context) PromptVersionPromptInputVariableOutput {
	return o
}

// Name for an input variable
func (o PromptVersionPromptInputVariableOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromptVersionPromptInputVariable) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PromptVersionPromptInputVariableArrayOutput struct{ *pulumi.OutputState }

func (PromptVersionPromptInputVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromptVersionPromptInputVariable)(nil)).Elem()
}

func (o PromptVersionPromptInputVariableArrayOutput) ToPromptVersionPromptInputVariableArrayOutput() PromptVersionPromptInputVariableArrayOutput {
	return o
}

func (o PromptVersionPromptInputVariableArrayOutput) ToPromptVersionPromptInputVariableArrayOutputWithContext(ctx context.Context) PromptVersionPromptInputVariableArrayOutput {
	return o
}

func (o PromptVersionPromptInputVariableArrayOutput) Index(i pulumi.IntInput) PromptVersionPromptInputVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromptVersionPromptInputVariable {
		return vs[0].([]PromptVersionPromptInputVariable)[vs[1].(int)]
	}).(PromptVersionPromptInputVariableOutput)
}

// Prompt model inference configuration
type PromptVersionPromptModelInferenceConfiguration struct {
	// Maximum length of output
	MaxTokens *float64 `pulumi:"maxTokens"`
	// List of stop sequences
	StopSequences []string `pulumi:"stopSequences"`
	// Controls randomness, higher values increase diversity
	Temperature *float64 `pulumi:"temperature"`
	// Sample from the k most likely next tokens
	TopK *float64 `pulumi:"topK"`
	// Cumulative probability cutoff for token selection
	TopP *float64 `pulumi:"topP"`
}

// Prompt model inference configuration
type PromptVersionPromptModelInferenceConfigurationOutput struct{ *pulumi.OutputState }

func (PromptVersionPromptModelInferenceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptVersionPromptModelInferenceConfiguration)(nil)).Elem()
}

func (o PromptVersionPromptModelInferenceConfigurationOutput) ToPromptVersionPromptModelInferenceConfigurationOutput() PromptVersionPromptModelInferenceConfigurationOutput {
	return o
}

func (o PromptVersionPromptModelInferenceConfigurationOutput) ToPromptVersionPromptModelInferenceConfigurationOutputWithContext(ctx context.Context) PromptVersionPromptModelInferenceConfigurationOutput {
	return o
}

// Maximum length of output
func (o PromptVersionPromptModelInferenceConfigurationOutput) MaxTokens() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PromptVersionPromptModelInferenceConfiguration) *float64 { return v.MaxTokens }).(pulumi.Float64PtrOutput)
}

// List of stop sequences
func (o PromptVersionPromptModelInferenceConfigurationOutput) StopSequences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PromptVersionPromptModelInferenceConfiguration) []string { return v.StopSequences }).(pulumi.StringArrayOutput)
}

// Controls randomness, higher values increase diversity
func (o PromptVersionPromptModelInferenceConfigurationOutput) Temperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PromptVersionPromptModelInferenceConfiguration) *float64 { return v.Temperature }).(pulumi.Float64PtrOutput)
}

// Sample from the k most likely next tokens
func (o PromptVersionPromptModelInferenceConfigurationOutput) TopK() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PromptVersionPromptModelInferenceConfiguration) *float64 { return v.TopK }).(pulumi.Float64PtrOutput)
}

// Cumulative probability cutoff for token selection
func (o PromptVersionPromptModelInferenceConfigurationOutput) TopP() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PromptVersionPromptModelInferenceConfiguration) *float64 { return v.TopP }).(pulumi.Float64PtrOutput)
}

type PromptVersionPromptModelInferenceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PromptVersionPromptModelInferenceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptVersionPromptModelInferenceConfiguration)(nil)).Elem()
}

func (o PromptVersionPromptModelInferenceConfigurationPtrOutput) ToPromptVersionPromptModelInferenceConfigurationPtrOutput() PromptVersionPromptModelInferenceConfigurationPtrOutput {
	return o
}

func (o PromptVersionPromptModelInferenceConfigurationPtrOutput) ToPromptVersionPromptModelInferenceConfigurationPtrOutputWithContext(ctx context.Context) PromptVersionPromptModelInferenceConfigurationPtrOutput {
	return o
}

func (o PromptVersionPromptModelInferenceConfigurationPtrOutput) Elem() PromptVersionPromptModelInferenceConfigurationOutput {
	return o.ApplyT(func(v *PromptVersionPromptModelInferenceConfiguration) PromptVersionPromptModelInferenceConfiguration {
		if v != nil {
			return *v
		}
		var ret PromptVersionPromptModelInferenceConfiguration
		return ret
	}).(PromptVersionPromptModelInferenceConfigurationOutput)
}

// Maximum length of output
func (o PromptVersionPromptModelInferenceConfigurationPtrOutput) MaxTokens() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PromptVersionPromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxTokens
	}).(pulumi.Float64PtrOutput)
}

// List of stop sequences
func (o PromptVersionPromptModelInferenceConfigurationPtrOutput) StopSequences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PromptVersionPromptModelInferenceConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.StopSequences
	}).(pulumi.StringArrayOutput)
}

// Controls randomness, higher values increase diversity
func (o PromptVersionPromptModelInferenceConfigurationPtrOutput) Temperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PromptVersionPromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.Temperature
	}).(pulumi.Float64PtrOutput)
}

// Sample from the k most likely next tokens
func (o PromptVersionPromptModelInferenceConfigurationPtrOutput) TopK() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PromptVersionPromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TopK
	}).(pulumi.Float64PtrOutput)
}

// Cumulative probability cutoff for token selection
func (o PromptVersionPromptModelInferenceConfigurationPtrOutput) TopP() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PromptVersionPromptModelInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TopP
	}).(pulumi.Float64PtrOutput)
}

// Prompt template configuration
type PromptVersionPromptTemplateConfiguration0Properties struct {
	Text PromptVersionTextPromptTemplateConfiguration `pulumi:"text"`
}

// Prompt template configuration
type PromptVersionPromptTemplateConfigurationProperties struct {
	Text PromptVersionTextPromptTemplateConfiguration `pulumi:"text"`
}

// Prompt template configuration
type PromptVersionPromptTemplateConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (PromptVersionPromptTemplateConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptVersionPromptTemplateConfigurationProperties)(nil)).Elem()
}

func (o PromptVersionPromptTemplateConfigurationPropertiesOutput) ToPromptVersionPromptTemplateConfigurationPropertiesOutput() PromptVersionPromptTemplateConfigurationPropertiesOutput {
	return o
}

func (o PromptVersionPromptTemplateConfigurationPropertiesOutput) ToPromptVersionPromptTemplateConfigurationPropertiesOutputWithContext(ctx context.Context) PromptVersionPromptTemplateConfigurationPropertiesOutput {
	return o
}

func (o PromptVersionPromptTemplateConfigurationPropertiesOutput) Text() PromptVersionTextPromptTemplateConfigurationOutput {
	return o.ApplyT(func(v PromptVersionPromptTemplateConfigurationProperties) PromptVersionTextPromptTemplateConfiguration {
		return v.Text
	}).(PromptVersionTextPromptTemplateConfigurationOutput)
}

type PromptVersionPromptTemplateConfigurationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (PromptVersionPromptTemplateConfigurationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptVersionPromptTemplateConfigurationProperties)(nil)).Elem()
}

func (o PromptVersionPromptTemplateConfigurationPropertiesPtrOutput) ToPromptVersionPromptTemplateConfigurationPropertiesPtrOutput() PromptVersionPromptTemplateConfigurationPropertiesPtrOutput {
	return o
}

func (o PromptVersionPromptTemplateConfigurationPropertiesPtrOutput) ToPromptVersionPromptTemplateConfigurationPropertiesPtrOutputWithContext(ctx context.Context) PromptVersionPromptTemplateConfigurationPropertiesPtrOutput {
	return o
}

func (o PromptVersionPromptTemplateConfigurationPropertiesPtrOutput) Elem() PromptVersionPromptTemplateConfigurationPropertiesOutput {
	return o.ApplyT(func(v *PromptVersionPromptTemplateConfigurationProperties) PromptVersionPromptTemplateConfigurationProperties {
		if v != nil {
			return *v
		}
		var ret PromptVersionPromptTemplateConfigurationProperties
		return ret
	}).(PromptVersionPromptTemplateConfigurationPropertiesOutput)
}

func (o PromptVersionPromptTemplateConfigurationPropertiesPtrOutput) Text() PromptVersionTextPromptTemplateConfigurationPtrOutput {
	return o.ApplyT(func(v *PromptVersionPromptTemplateConfigurationProperties) *PromptVersionTextPromptTemplateConfiguration {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(PromptVersionTextPromptTemplateConfigurationPtrOutput)
}

// Prompt variant
type PromptVersionPromptVariant struct {
	// Contains inference configurations for the prompt variant.
	InferenceConfiguration *PromptVersionPromptInferenceConfigurationProperties `pulumi:"inferenceConfiguration"`
	// ARN or name of a Bedrock model.
	ModelId *string `pulumi:"modelId"`
	// Name for a variant.
	Name string `pulumi:"name"`
	// Contains configurations for the prompt template.
	TemplateConfiguration *PromptVersionPromptTemplateConfigurationProperties `pulumi:"templateConfiguration"`
	// The type of prompt template to use.
	TemplateType PromptVersionPromptTemplateType `pulumi:"templateType"`
}

// Prompt variant
type PromptVersionPromptVariantOutput struct{ *pulumi.OutputState }

func (PromptVersionPromptVariantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptVersionPromptVariant)(nil)).Elem()
}

func (o PromptVersionPromptVariantOutput) ToPromptVersionPromptVariantOutput() PromptVersionPromptVariantOutput {
	return o
}

func (o PromptVersionPromptVariantOutput) ToPromptVersionPromptVariantOutputWithContext(ctx context.Context) PromptVersionPromptVariantOutput {
	return o
}

// Contains inference configurations for the prompt variant.
func (o PromptVersionPromptVariantOutput) InferenceConfiguration() PromptVersionPromptInferenceConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v PromptVersionPromptVariant) *PromptVersionPromptInferenceConfigurationProperties {
		return v.InferenceConfiguration
	}).(PromptVersionPromptInferenceConfigurationPropertiesPtrOutput)
}

// ARN or name of a Bedrock model.
func (o PromptVersionPromptVariantOutput) ModelId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PromptVersionPromptVariant) *string { return v.ModelId }).(pulumi.StringPtrOutput)
}

// Name for a variant.
func (o PromptVersionPromptVariantOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PromptVersionPromptVariant) string { return v.Name }).(pulumi.StringOutput)
}

// Contains configurations for the prompt template.
func (o PromptVersionPromptVariantOutput) TemplateConfiguration() PromptVersionPromptTemplateConfigurationPropertiesPtrOutput {
	return o.ApplyT(func(v PromptVersionPromptVariant) *PromptVersionPromptTemplateConfigurationProperties {
		return v.TemplateConfiguration
	}).(PromptVersionPromptTemplateConfigurationPropertiesPtrOutput)
}

// The type of prompt template to use.
func (o PromptVersionPromptVariantOutput) TemplateType() PromptVersionPromptTemplateTypeOutput {
	return o.ApplyT(func(v PromptVersionPromptVariant) PromptVersionPromptTemplateType { return v.TemplateType }).(PromptVersionPromptTemplateTypeOutput)
}

type PromptVersionPromptVariantArrayOutput struct{ *pulumi.OutputState }

func (PromptVersionPromptVariantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PromptVersionPromptVariant)(nil)).Elem()
}

func (o PromptVersionPromptVariantArrayOutput) ToPromptVersionPromptVariantArrayOutput() PromptVersionPromptVariantArrayOutput {
	return o
}

func (o PromptVersionPromptVariantArrayOutput) ToPromptVersionPromptVariantArrayOutputWithContext(ctx context.Context) PromptVersionPromptVariantArrayOutput {
	return o
}

func (o PromptVersionPromptVariantArrayOutput) Index(i pulumi.IntInput) PromptVersionPromptVariantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PromptVersionPromptVariant {
		return vs[0].([]PromptVersionPromptVariant)[vs[1].(int)]
	}).(PromptVersionPromptVariantOutput)
}

// Configuration for text prompt template
type PromptVersionTextPromptTemplateConfiguration struct {
	// List of input variables
	InputVariables []PromptVersionPromptInputVariable `pulumi:"inputVariables"`
	// Prompt content for String prompt template
	Text string `pulumi:"text"`
}

// Configuration for text prompt template
type PromptVersionTextPromptTemplateConfigurationOutput struct{ *pulumi.OutputState }

func (PromptVersionTextPromptTemplateConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PromptVersionTextPromptTemplateConfiguration)(nil)).Elem()
}

func (o PromptVersionTextPromptTemplateConfigurationOutput) ToPromptVersionTextPromptTemplateConfigurationOutput() PromptVersionTextPromptTemplateConfigurationOutput {
	return o
}

func (o PromptVersionTextPromptTemplateConfigurationOutput) ToPromptVersionTextPromptTemplateConfigurationOutputWithContext(ctx context.Context) PromptVersionTextPromptTemplateConfigurationOutput {
	return o
}

// List of input variables
func (o PromptVersionTextPromptTemplateConfigurationOutput) InputVariables() PromptVersionPromptInputVariableArrayOutput {
	return o.ApplyT(func(v PromptVersionTextPromptTemplateConfiguration) []PromptVersionPromptInputVariable {
		return v.InputVariables
	}).(PromptVersionPromptInputVariableArrayOutput)
}

// Prompt content for String prompt template
func (o PromptVersionTextPromptTemplateConfigurationOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v PromptVersionTextPromptTemplateConfiguration) string { return v.Text }).(pulumi.StringOutput)
}

type PromptVersionTextPromptTemplateConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PromptVersionTextPromptTemplateConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptVersionTextPromptTemplateConfiguration)(nil)).Elem()
}

func (o PromptVersionTextPromptTemplateConfigurationPtrOutput) ToPromptVersionTextPromptTemplateConfigurationPtrOutput() PromptVersionTextPromptTemplateConfigurationPtrOutput {
	return o
}

func (o PromptVersionTextPromptTemplateConfigurationPtrOutput) ToPromptVersionTextPromptTemplateConfigurationPtrOutputWithContext(ctx context.Context) PromptVersionTextPromptTemplateConfigurationPtrOutput {
	return o
}

func (o PromptVersionTextPromptTemplateConfigurationPtrOutput) Elem() PromptVersionTextPromptTemplateConfigurationOutput {
	return o.ApplyT(func(v *PromptVersionTextPromptTemplateConfiguration) PromptVersionTextPromptTemplateConfiguration {
		if v != nil {
			return *v
		}
		var ret PromptVersionTextPromptTemplateConfiguration
		return ret
	}).(PromptVersionTextPromptTemplateConfigurationOutput)
}

// List of input variables
func (o PromptVersionTextPromptTemplateConfigurationPtrOutput) InputVariables() PromptVersionPromptInputVariableArrayOutput {
	return o.ApplyT(func(v *PromptVersionTextPromptTemplateConfiguration) []PromptVersionPromptInputVariable {
		if v == nil {
			return nil
		}
		return v.InputVariables
	}).(PromptVersionPromptInputVariableArrayOutput)
}

// Prompt content for String prompt template
func (o PromptVersionTextPromptTemplateConfigurationPtrOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromptVersionTextPromptTemplateConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Text
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentActionGroupInput)(nil)).Elem(), AgentActionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentActionGroupArrayInput)(nil)).Elem(), AgentActionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentActionGroupExecutor0PropertiesInput)(nil)).Elem(), AgentActionGroupExecutor0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentActionGroupExecutor0PropertiesPtrInput)(nil)).Elem(), AgentActionGroupExecutor0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentActionGroupExecutor1PropertiesInput)(nil)).Elem(), AgentActionGroupExecutor1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentActionGroupExecutor1PropertiesPtrInput)(nil)).Elem(), AgentActionGroupExecutor1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAliasRoutingConfigurationListItemInput)(nil)).Elem(), AgentAliasRoutingConfigurationListItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAliasRoutingConfigurationListItemArrayInput)(nil)).Elem(), AgentAliasRoutingConfigurationListItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentApiSchema0PropertiesInput)(nil)).Elem(), AgentApiSchema0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentApiSchema0PropertiesPtrInput)(nil)).Elem(), AgentApiSchema0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentApiSchema1PropertiesInput)(nil)).Elem(), AgentApiSchema1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentApiSchema1PropertiesPtrInput)(nil)).Elem(), AgentApiSchema1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentFunctionInput)(nil)).Elem(), AgentFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentFunctionArrayInput)(nil)).Elem(), AgentFunctionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentFunctionSchemaInput)(nil)).Elem(), AgentFunctionSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentFunctionSchemaPtrInput)(nil)).Elem(), AgentFunctionSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentGuardrailConfigurationInput)(nil)).Elem(), AgentGuardrailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentGuardrailConfigurationPtrInput)(nil)).Elem(), AgentGuardrailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentInferenceConfigurationInput)(nil)).Elem(), AgentInferenceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentInferenceConfigurationPtrInput)(nil)).Elem(), AgentInferenceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentKnowledgeBaseInput)(nil)).Elem(), AgentKnowledgeBaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentKnowledgeBaseArrayInput)(nil)).Elem(), AgentKnowledgeBaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentParameterDetailInput)(nil)).Elem(), AgentParameterDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentParameterDetailMapInput)(nil)).Elem(), AgentParameterDetailMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPromptConfigurationInput)(nil)).Elem(), AgentPromptConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPromptConfigurationArrayInput)(nil)).Elem(), AgentPromptConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPromptOverrideConfigurationInput)(nil)).Elem(), AgentPromptOverrideConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPromptOverrideConfigurationPtrInput)(nil)).Elem(), AgentPromptOverrideConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentS3IdentifierInput)(nil)).Elem(), AgentS3IdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentS3IdentifierPtrInput)(nil)).Elem(), AgentS3IdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceBedrockFoundationModelConfigurationInput)(nil)).Elem(), DataSourceBedrockFoundationModelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceBedrockFoundationModelConfigurationPtrInput)(nil)).Elem(), DataSourceBedrockFoundationModelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceChunkingConfigurationInput)(nil)).Elem(), DataSourceChunkingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceChunkingConfigurationPtrInput)(nil)).Elem(), DataSourceChunkingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfigurationInput)(nil)).Elem(), DataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceCrawlerConfigurationInput)(nil)).Elem(), DataSourceConfluenceCrawlerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceCrawlerConfigurationPtrInput)(nil)).Elem(), DataSourceConfluenceCrawlerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceDataSourceConfigurationInput)(nil)).Elem(), DataSourceConfluenceDataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceDataSourceConfigurationPtrInput)(nil)).Elem(), DataSourceConfluenceDataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceSourceConfigurationInput)(nil)).Elem(), DataSourceConfluenceSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceSourceConfigurationPtrInput)(nil)).Elem(), DataSourceConfluenceSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceCrawlFilterConfigurationInput)(nil)).Elem(), DataSourceCrawlFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceCrawlFilterConfigurationPtrInput)(nil)).Elem(), DataSourceCrawlFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceCustomTransformationConfigurationInput)(nil)).Elem(), DataSourceCustomTransformationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceCustomTransformationConfigurationPtrInput)(nil)).Elem(), DataSourceCustomTransformationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceFixedSizeChunkingConfigurationInput)(nil)).Elem(), DataSourceFixedSizeChunkingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceFixedSizeChunkingConfigurationPtrInput)(nil)).Elem(), DataSourceFixedSizeChunkingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHierarchicalChunkingConfigurationInput)(nil)).Elem(), DataSourceHierarchicalChunkingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHierarchicalChunkingConfigurationPtrInput)(nil)).Elem(), DataSourceHierarchicalChunkingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHierarchicalChunkingLevelConfigurationInput)(nil)).Elem(), DataSourceHierarchicalChunkingLevelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHierarchicalChunkingLevelConfigurationArrayInput)(nil)).Elem(), DataSourceHierarchicalChunkingLevelConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceIntermediateStorageInput)(nil)).Elem(), DataSourceIntermediateStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceIntermediateStoragePtrInput)(nil)).Elem(), DataSourceIntermediateStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceParsingConfigurationInput)(nil)).Elem(), DataSourceParsingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceParsingConfigurationPtrInput)(nil)).Elem(), DataSourceParsingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceParsingPromptInput)(nil)).Elem(), DataSourceParsingPromptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceParsingPromptPtrInput)(nil)).Elem(), DataSourceParsingPromptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourcePatternObjectFilterInput)(nil)).Elem(), DataSourcePatternObjectFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourcePatternObjectFilterArrayInput)(nil)).Elem(), DataSourcePatternObjectFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourcePatternObjectFilterConfigurationInput)(nil)).Elem(), DataSourcePatternObjectFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourcePatternObjectFilterConfigurationPtrInput)(nil)).Elem(), DataSourcePatternObjectFilterConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceS3DataSourceConfigurationInput)(nil)).Elem(), DataSourceS3DataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceS3DataSourceConfigurationPtrInput)(nil)).Elem(), DataSourceS3DataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceS3LocationInput)(nil)).Elem(), DataSourceS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceS3LocationPtrInput)(nil)).Elem(), DataSourceS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceCrawlerConfigurationInput)(nil)).Elem(), DataSourceSalesforceCrawlerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceCrawlerConfigurationPtrInput)(nil)).Elem(), DataSourceSalesforceCrawlerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceDataSourceConfigurationInput)(nil)).Elem(), DataSourceSalesforceDataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceDataSourceConfigurationPtrInput)(nil)).Elem(), DataSourceSalesforceDataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceSourceConfigurationInput)(nil)).Elem(), DataSourceSalesforceSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceSourceConfigurationPtrInput)(nil)).Elem(), DataSourceSalesforceSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSeedUrlInput)(nil)).Elem(), DataSourceSeedUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSeedUrlArrayInput)(nil)).Elem(), DataSourceSeedUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSemanticChunkingConfigurationInput)(nil)).Elem(), DataSourceSemanticChunkingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSemanticChunkingConfigurationPtrInput)(nil)).Elem(), DataSourceSemanticChunkingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceServerSideEncryptionConfigurationInput)(nil)).Elem(), DataSourceServerSideEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceServerSideEncryptionConfigurationPtrInput)(nil)).Elem(), DataSourceServerSideEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSharePointCrawlerConfigurationInput)(nil)).Elem(), DataSourceSharePointCrawlerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSharePointCrawlerConfigurationPtrInput)(nil)).Elem(), DataSourceSharePointCrawlerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSharePointDataSourceConfigurationInput)(nil)).Elem(), DataSourceSharePointDataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSharePointDataSourceConfigurationPtrInput)(nil)).Elem(), DataSourceSharePointDataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSharePointSourceConfigurationInput)(nil)).Elem(), DataSourceSharePointSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSharePointSourceConfigurationPtrInput)(nil)).Elem(), DataSourceSharePointSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTransformationInput)(nil)).Elem(), DataSourceTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTransformationArrayInput)(nil)).Elem(), DataSourceTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTransformationFunctionInput)(nil)).Elem(), DataSourceTransformationFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTransformationLambdaConfigurationInput)(nil)).Elem(), DataSourceTransformationLambdaConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceUrlConfigurationInput)(nil)).Elem(), DataSourceUrlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceUrlConfigurationPtrInput)(nil)).Elem(), DataSourceUrlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceVectorIngestionConfigurationInput)(nil)).Elem(), DataSourceVectorIngestionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceVectorIngestionConfigurationPtrInput)(nil)).Elem(), DataSourceVectorIngestionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceWebCrawlerConfigurationInput)(nil)).Elem(), DataSourceWebCrawlerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceWebCrawlerConfigurationPtrInput)(nil)).Elem(), DataSourceWebCrawlerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceWebCrawlerLimitsInput)(nil)).Elem(), DataSourceWebCrawlerLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceWebCrawlerLimitsPtrInput)(nil)).Elem(), DataSourceWebCrawlerLimitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceWebDataSourceConfigurationInput)(nil)).Elem(), DataSourceWebDataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceWebDataSourceConfigurationPtrInput)(nil)).Elem(), DataSourceWebDataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceWebSourceConfigurationInput)(nil)).Elem(), DataSourceWebSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceWebSourceConfigurationPtrInput)(nil)).Elem(), DataSourceWebSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowAgentFlowNodeConfigurationInput)(nil)).Elem(), FlowAgentFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowAgentFlowNodeConfigurationPtrInput)(nil)).Elem(), FlowAgentFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowAliasRoutingConfigurationListItemInput)(nil)).Elem(), FlowAliasRoutingConfigurationListItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowAliasRoutingConfigurationListItemArrayInput)(nil)).Elem(), FlowAliasRoutingConfigurationListItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowCollectorFlowNodeConfigurationInput)(nil)).Elem(), FlowCollectorFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowCollectorFlowNodeConfigurationPtrInput)(nil)).Elem(), FlowCollectorFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowConditionInput)(nil)).Elem(), FlowConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowConditionArrayInput)(nil)).Elem(), FlowConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowConditionFlowNodeConfigurationInput)(nil)).Elem(), FlowConditionFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowConditionFlowNodeConfigurationPtrInput)(nil)).Elem(), FlowConditionFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowConditionalConnectionConfigurationInput)(nil)).Elem(), FlowConditionalConnectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowConditionalConnectionConfigurationPtrInput)(nil)).Elem(), FlowConditionalConnectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowConnectionInput)(nil)).Elem(), FlowConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowConnectionArrayInput)(nil)).Elem(), FlowConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowConnectionConfiguration0PropertiesInput)(nil)).Elem(), FlowConnectionConfiguration0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowConnectionConfiguration0PropertiesPtrInput)(nil)).Elem(), FlowConnectionConfiguration0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowConnectionConfiguration1PropertiesInput)(nil)).Elem(), FlowConnectionConfiguration1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowConnectionConfiguration1PropertiesPtrInput)(nil)).Elem(), FlowConnectionConfiguration1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDataConnectionConfigurationInput)(nil)).Elem(), FlowDataConnectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDataConnectionConfigurationPtrInput)(nil)).Elem(), FlowDataConnectionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDefinitionInput)(nil)).Elem(), FlowDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowDefinitionPtrInput)(nil)).Elem(), FlowDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowInputFlowNodeConfigurationInput)(nil)).Elem(), FlowInputFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowInputFlowNodeConfigurationPtrInput)(nil)).Elem(), FlowInputFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowIteratorFlowNodeConfigurationInput)(nil)).Elem(), FlowIteratorFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowIteratorFlowNodeConfigurationPtrInput)(nil)).Elem(), FlowIteratorFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowKnowledgeBaseFlowNodeConfigurationInput)(nil)).Elem(), FlowKnowledgeBaseFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowKnowledgeBaseFlowNodeConfigurationPtrInput)(nil)).Elem(), FlowKnowledgeBaseFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLambdaFunctionFlowNodeConfigurationInput)(nil)).Elem(), FlowLambdaFunctionFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLambdaFunctionFlowNodeConfigurationPtrInput)(nil)).Elem(), FlowLambdaFunctionFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLexFlowNodeConfigurationInput)(nil)).Elem(), FlowLexFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowLexFlowNodeConfigurationPtrInput)(nil)).Elem(), FlowLexFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeInput)(nil)).Elem(), FlowNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeArrayInput)(nil)).Elem(), FlowNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration0PropertiesInput)(nil)).Elem(), FlowNodeConfiguration0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration0PropertiesPtrInput)(nil)).Elem(), FlowNodeConfiguration0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration10PropertiesInput)(nil)).Elem(), FlowNodeConfiguration10PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration10PropertiesPtrInput)(nil)).Elem(), FlowNodeConfiguration10PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration11PropertiesInput)(nil)).Elem(), FlowNodeConfiguration11PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration11PropertiesPtrInput)(nil)).Elem(), FlowNodeConfiguration11PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration1PropertiesInput)(nil)).Elem(), FlowNodeConfiguration1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration1PropertiesPtrInput)(nil)).Elem(), FlowNodeConfiguration1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration2PropertiesInput)(nil)).Elem(), FlowNodeConfiguration2PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration2PropertiesPtrInput)(nil)).Elem(), FlowNodeConfiguration2PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration3PropertiesInput)(nil)).Elem(), FlowNodeConfiguration3PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration3PropertiesPtrInput)(nil)).Elem(), FlowNodeConfiguration3PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration4PropertiesInput)(nil)).Elem(), FlowNodeConfiguration4PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration4PropertiesPtrInput)(nil)).Elem(), FlowNodeConfiguration4PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration5PropertiesInput)(nil)).Elem(), FlowNodeConfiguration5PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration5PropertiesPtrInput)(nil)).Elem(), FlowNodeConfiguration5PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration6PropertiesInput)(nil)).Elem(), FlowNodeConfiguration6PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration6PropertiesPtrInput)(nil)).Elem(), FlowNodeConfiguration6PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration7PropertiesInput)(nil)).Elem(), FlowNodeConfiguration7PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration7PropertiesPtrInput)(nil)).Elem(), FlowNodeConfiguration7PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration8PropertiesInput)(nil)).Elem(), FlowNodeConfiguration8PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration8PropertiesPtrInput)(nil)).Elem(), FlowNodeConfiguration8PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration9PropertiesInput)(nil)).Elem(), FlowNodeConfiguration9PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeConfiguration9PropertiesPtrInput)(nil)).Elem(), FlowNodeConfiguration9PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeInputTypeInput)(nil)).Elem(), FlowNodeInputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeInputTypeArrayInput)(nil)).Elem(), FlowNodeInputTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeOutputTypeInput)(nil)).Elem(), FlowNodeOutputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowNodeOutputTypeArrayInput)(nil)).Elem(), FlowNodeOutputTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowOutputFlowNodeConfigurationInput)(nil)).Elem(), FlowOutputFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowOutputFlowNodeConfigurationPtrInput)(nil)).Elem(), FlowOutputFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptFlowNodeConfigurationInput)(nil)).Elem(), FlowPromptFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptFlowNodeConfigurationPtrInput)(nil)).Elem(), FlowPromptFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptFlowNodeInlineConfigurationInput)(nil)).Elem(), FlowPromptFlowNodeInlineConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptFlowNodeInlineConfigurationPtrInput)(nil)).Elem(), FlowPromptFlowNodeInlineConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptFlowNodeResourceConfigurationInput)(nil)).Elem(), FlowPromptFlowNodeResourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptFlowNodeResourceConfigurationPtrInput)(nil)).Elem(), FlowPromptFlowNodeResourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptFlowNodeSourceConfiguration0PropertiesInput)(nil)).Elem(), FlowPromptFlowNodeSourceConfiguration0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptFlowNodeSourceConfiguration0PropertiesPtrInput)(nil)).Elem(), FlowPromptFlowNodeSourceConfiguration0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptFlowNodeSourceConfiguration1PropertiesInput)(nil)).Elem(), FlowPromptFlowNodeSourceConfiguration1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptFlowNodeSourceConfiguration1PropertiesPtrInput)(nil)).Elem(), FlowPromptFlowNodeSourceConfiguration1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptInferenceConfigurationPropertiesInput)(nil)).Elem(), FlowPromptInferenceConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptInferenceConfigurationPropertiesPtrInput)(nil)).Elem(), FlowPromptInferenceConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptInputVariableInput)(nil)).Elem(), FlowPromptInputVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptInputVariableArrayInput)(nil)).Elem(), FlowPromptInputVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptModelInferenceConfigurationInput)(nil)).Elem(), FlowPromptModelInferenceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptModelInferenceConfigurationPtrInput)(nil)).Elem(), FlowPromptModelInferenceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptTemplateConfigurationPropertiesInput)(nil)).Elem(), FlowPromptTemplateConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowPromptTemplateConfigurationPropertiesPtrInput)(nil)).Elem(), FlowPromptTemplateConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowRetrievalFlowNodeConfigurationInput)(nil)).Elem(), FlowRetrievalFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowRetrievalFlowNodeConfigurationPtrInput)(nil)).Elem(), FlowRetrievalFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowRetrievalFlowNodeS3ConfigurationInput)(nil)).Elem(), FlowRetrievalFlowNodeS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowRetrievalFlowNodeS3ConfigurationPtrInput)(nil)).Elem(), FlowRetrievalFlowNodeS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowRetrievalFlowNodeServiceConfigurationPropertiesInput)(nil)).Elem(), FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrInput)(nil)).Elem(), FlowRetrievalFlowNodeServiceConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowS3LocationInput)(nil)).Elem(), FlowS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowS3LocationPtrInput)(nil)).Elem(), FlowS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowStorageFlowNodeConfigurationInput)(nil)).Elem(), FlowStorageFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowStorageFlowNodeConfigurationPtrInput)(nil)).Elem(), FlowStorageFlowNodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowStorageFlowNodeS3ConfigurationInput)(nil)).Elem(), FlowStorageFlowNodeS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowStorageFlowNodeS3ConfigurationPtrInput)(nil)).Elem(), FlowStorageFlowNodeS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowStorageFlowNodeServiceConfigurationPropertiesInput)(nil)).Elem(), FlowStorageFlowNodeServiceConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowStorageFlowNodeServiceConfigurationPropertiesPtrInput)(nil)).Elem(), FlowStorageFlowNodeServiceConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTextPromptTemplateConfigurationInput)(nil)).Elem(), FlowTextPromptTemplateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FlowTextPromptTemplateConfigurationPtrInput)(nil)).Elem(), FlowTextPromptTemplateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailContentFilterConfigInput)(nil)).Elem(), GuardrailContentFilterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailContentFilterConfigArrayInput)(nil)).Elem(), GuardrailContentFilterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailContentPolicyConfigInput)(nil)).Elem(), GuardrailContentPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailContentPolicyConfigPtrInput)(nil)).Elem(), GuardrailContentPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailContextualGroundingFilterConfigInput)(nil)).Elem(), GuardrailContextualGroundingFilterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailContextualGroundingFilterConfigArrayInput)(nil)).Elem(), GuardrailContextualGroundingFilterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailContextualGroundingPolicyConfigInput)(nil)).Elem(), GuardrailContextualGroundingPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailContextualGroundingPolicyConfigPtrInput)(nil)).Elem(), GuardrailContextualGroundingPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailManagedWordsConfigInput)(nil)).Elem(), GuardrailManagedWordsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailManagedWordsConfigArrayInput)(nil)).Elem(), GuardrailManagedWordsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailPiiEntityConfigInput)(nil)).Elem(), GuardrailPiiEntityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailPiiEntityConfigArrayInput)(nil)).Elem(), GuardrailPiiEntityConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailRegexConfigInput)(nil)).Elem(), GuardrailRegexConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailRegexConfigArrayInput)(nil)).Elem(), GuardrailRegexConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailSensitiveInformationPolicyConfigInput)(nil)).Elem(), GuardrailSensitiveInformationPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailSensitiveInformationPolicyConfigPtrInput)(nil)).Elem(), GuardrailSensitiveInformationPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailTopicConfigInput)(nil)).Elem(), GuardrailTopicConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailTopicConfigArrayInput)(nil)).Elem(), GuardrailTopicConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailTopicPolicyConfigInput)(nil)).Elem(), GuardrailTopicPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailTopicPolicyConfigPtrInput)(nil)).Elem(), GuardrailTopicPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailWordConfigInput)(nil)).Elem(), GuardrailWordConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailWordConfigArrayInput)(nil)).Elem(), GuardrailWordConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailWordPolicyConfigInput)(nil)).Elem(), GuardrailWordPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailWordPolicyConfigPtrInput)(nil)).Elem(), GuardrailWordPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseBedrockEmbeddingModelConfigurationInput)(nil)).Elem(), KnowledgeBaseBedrockEmbeddingModelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseBedrockEmbeddingModelConfigurationPtrInput)(nil)).Elem(), KnowledgeBaseBedrockEmbeddingModelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseConfigurationInput)(nil)).Elem(), KnowledgeBaseConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseEmbeddingModelConfigurationInput)(nil)).Elem(), KnowledgeBaseEmbeddingModelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseEmbeddingModelConfigurationPtrInput)(nil)).Elem(), KnowledgeBaseEmbeddingModelConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseMongoDbAtlasConfigurationInput)(nil)).Elem(), KnowledgeBaseMongoDbAtlasConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseMongoDbAtlasConfigurationPtrInput)(nil)).Elem(), KnowledgeBaseMongoDbAtlasConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseMongoDbAtlasFieldMappingInput)(nil)).Elem(), KnowledgeBaseMongoDbAtlasFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseMongoDbAtlasFieldMappingPtrInput)(nil)).Elem(), KnowledgeBaseMongoDbAtlasFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessConfigurationInput)(nil)).Elem(), KnowledgeBaseOpenSearchServerlessConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessConfigurationPtrInput)(nil)).Elem(), KnowledgeBaseOpenSearchServerlessConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessFieldMappingInput)(nil)).Elem(), KnowledgeBaseOpenSearchServerlessFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessFieldMappingPtrInput)(nil)).Elem(), KnowledgeBaseOpenSearchServerlessFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBasePineconeConfigurationInput)(nil)).Elem(), KnowledgeBasePineconeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBasePineconeConfigurationPtrInput)(nil)).Elem(), KnowledgeBasePineconeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBasePineconeFieldMappingInput)(nil)).Elem(), KnowledgeBasePineconeFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBasePineconeFieldMappingPtrInput)(nil)).Elem(), KnowledgeBasePineconeFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseRdsConfigurationInput)(nil)).Elem(), KnowledgeBaseRdsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseRdsConfigurationPtrInput)(nil)).Elem(), KnowledgeBaseRdsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseRdsFieldMappingInput)(nil)).Elem(), KnowledgeBaseRdsFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseRdsFieldMappingPtrInput)(nil)).Elem(), KnowledgeBaseRdsFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseStorageConfigurationInput)(nil)).Elem(), KnowledgeBaseStorageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseVectorKnowledgeBaseConfigurationInput)(nil)).Elem(), KnowledgeBaseVectorKnowledgeBaseConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptInferenceConfigurationPropertiesInput)(nil)).Elem(), PromptInferenceConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptInferenceConfigurationPropertiesPtrInput)(nil)).Elem(), PromptInferenceConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptInputVariableInput)(nil)).Elem(), PromptInputVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptInputVariableArrayInput)(nil)).Elem(), PromptInputVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptModelInferenceConfigurationInput)(nil)).Elem(), PromptModelInferenceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptModelInferenceConfigurationPtrInput)(nil)).Elem(), PromptModelInferenceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptTemplateConfigurationPropertiesInput)(nil)).Elem(), PromptTemplateConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptTemplateConfigurationPropertiesPtrInput)(nil)).Elem(), PromptTemplateConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptTextPromptTemplateConfigurationInput)(nil)).Elem(), PromptTextPromptTemplateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptTextPromptTemplateConfigurationPtrInput)(nil)).Elem(), PromptTextPromptTemplateConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptTextS3LocationInput)(nil)).Elem(), PromptTextS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptTextS3LocationPtrInput)(nil)).Elem(), PromptTextS3LocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptVariantInput)(nil)).Elem(), PromptVariantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PromptVariantArrayInput)(nil)).Elem(), PromptVariantArray{})
	pulumi.RegisterOutputType(AgentActionGroupOutput{})
	pulumi.RegisterOutputType(AgentActionGroupArrayOutput{})
	pulumi.RegisterOutputType(AgentActionGroupExecutor0PropertiesOutput{})
	pulumi.RegisterOutputType(AgentActionGroupExecutor0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(AgentActionGroupExecutor1PropertiesOutput{})
	pulumi.RegisterOutputType(AgentActionGroupExecutor1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(AgentAliasHistoryEventOutput{})
	pulumi.RegisterOutputType(AgentAliasHistoryEventArrayOutput{})
	pulumi.RegisterOutputType(AgentAliasRoutingConfigurationListItemOutput{})
	pulumi.RegisterOutputType(AgentAliasRoutingConfigurationListItemArrayOutput{})
	pulumi.RegisterOutputType(AgentApiSchema0PropertiesOutput{})
	pulumi.RegisterOutputType(AgentApiSchema0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(AgentApiSchema1PropertiesOutput{})
	pulumi.RegisterOutputType(AgentApiSchema1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(AgentFunctionOutput{})
	pulumi.RegisterOutputType(AgentFunctionArrayOutput{})
	pulumi.RegisterOutputType(AgentFunctionSchemaOutput{})
	pulumi.RegisterOutputType(AgentFunctionSchemaPtrOutput{})
	pulumi.RegisterOutputType(AgentGuardrailConfigurationOutput{})
	pulumi.RegisterOutputType(AgentGuardrailConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AgentInferenceConfigurationOutput{})
	pulumi.RegisterOutputType(AgentInferenceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AgentKnowledgeBaseOutput{})
	pulumi.RegisterOutputType(AgentKnowledgeBaseArrayOutput{})
	pulumi.RegisterOutputType(AgentParameterDetailOutput{})
	pulumi.RegisterOutputType(AgentParameterDetailMapOutput{})
	pulumi.RegisterOutputType(AgentPromptConfigurationOutput{})
	pulumi.RegisterOutputType(AgentPromptConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AgentPromptOverrideConfigurationOutput{})
	pulumi.RegisterOutputType(AgentPromptOverrideConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AgentS3IdentifierOutput{})
	pulumi.RegisterOutputType(AgentS3IdentifierPtrOutput{})
	pulumi.RegisterOutputType(DataSourceBedrockFoundationModelConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceBedrockFoundationModelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceChunkingConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceChunkingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceCrawlerConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceCrawlerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceDataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceDataSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceCrawlFilterConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceCrawlFilterConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceCustomTransformationConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceCustomTransformationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceFixedSizeChunkingConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceFixedSizeChunkingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceHierarchicalChunkingConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceHierarchicalChunkingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceHierarchicalChunkingLevelConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceHierarchicalChunkingLevelConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DataSourceIntermediateStorageOutput{})
	pulumi.RegisterOutputType(DataSourceIntermediateStoragePtrOutput{})
	pulumi.RegisterOutputType(DataSourceParsingConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceParsingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceParsingPromptOutput{})
	pulumi.RegisterOutputType(DataSourceParsingPromptPtrOutput{})
	pulumi.RegisterOutputType(DataSourcePatternObjectFilterOutput{})
	pulumi.RegisterOutputType(DataSourcePatternObjectFilterArrayOutput{})
	pulumi.RegisterOutputType(DataSourcePatternObjectFilterConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourcePatternObjectFilterConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceS3DataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceS3DataSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceS3LocationOutput{})
	pulumi.RegisterOutputType(DataSourceS3LocationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceCrawlerConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceCrawlerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceDataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceDataSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSeedUrlOutput{})
	pulumi.RegisterOutputType(DataSourceSeedUrlArrayOutput{})
	pulumi.RegisterOutputType(DataSourceSemanticChunkingConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceSemanticChunkingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceServerSideEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceServerSideEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSharePointCrawlerConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceSharePointCrawlerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSharePointDataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceSharePointDataSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSharePointSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceSharePointSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceTransformationOutput{})
	pulumi.RegisterOutputType(DataSourceTransformationArrayOutput{})
	pulumi.RegisterOutputType(DataSourceTransformationFunctionOutput{})
	pulumi.RegisterOutputType(DataSourceTransformationLambdaConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceUrlConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceUrlConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceVectorIngestionConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceVectorIngestionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceWebCrawlerConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceWebCrawlerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceWebCrawlerLimitsOutput{})
	pulumi.RegisterOutputType(DataSourceWebCrawlerLimitsPtrOutput{})
	pulumi.RegisterOutputType(DataSourceWebDataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceWebDataSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceWebSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceWebSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowAgentFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowAgentFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowAliasRoutingConfigurationListItemOutput{})
	pulumi.RegisterOutputType(FlowAliasRoutingConfigurationListItemArrayOutput{})
	pulumi.RegisterOutputType(FlowCollectorFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowCollectorFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowConditionOutput{})
	pulumi.RegisterOutputType(FlowConditionArrayOutput{})
	pulumi.RegisterOutputType(FlowConditionFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowConditionFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowConditionalConnectionConfigurationOutput{})
	pulumi.RegisterOutputType(FlowConditionalConnectionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowConnectionOutput{})
	pulumi.RegisterOutputType(FlowConnectionArrayOutput{})
	pulumi.RegisterOutputType(FlowConnectionConfiguration0PropertiesOutput{})
	pulumi.RegisterOutputType(FlowConnectionConfiguration0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowConnectionConfiguration1PropertiesOutput{})
	pulumi.RegisterOutputType(FlowConnectionConfiguration1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowDataConnectionConfigurationOutput{})
	pulumi.RegisterOutputType(FlowDataConnectionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowDefinitionOutput{})
	pulumi.RegisterOutputType(FlowDefinitionPtrOutput{})
	pulumi.RegisterOutputType(FlowInputFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowInputFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowIteratorFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowIteratorFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowKnowledgeBaseFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowKnowledgeBaseFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowLambdaFunctionFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowLambdaFunctionFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowLexFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowLexFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeOutput{})
	pulumi.RegisterOutputType(FlowNodeArrayOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration0PropertiesOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration10PropertiesOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration10PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration11PropertiesOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration11PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration1PropertiesOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration2PropertiesOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration2PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration3PropertiesOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration3PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration4PropertiesOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration4PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration5PropertiesOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration5PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration6PropertiesOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration6PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration7PropertiesOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration7PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration8PropertiesOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration8PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration9PropertiesOutput{})
	pulumi.RegisterOutputType(FlowNodeConfiguration9PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowNodeInputTypeOutput{})
	pulumi.RegisterOutputType(FlowNodeInputTypeArrayOutput{})
	pulumi.RegisterOutputType(FlowNodeOutputTypeOutput{})
	pulumi.RegisterOutputType(FlowNodeOutputTypeArrayOutput{})
	pulumi.RegisterOutputType(FlowOutputFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowOutputFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowPromptFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowPromptFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowPromptFlowNodeInlineConfigurationOutput{})
	pulumi.RegisterOutputType(FlowPromptFlowNodeInlineConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowPromptFlowNodeResourceConfigurationOutput{})
	pulumi.RegisterOutputType(FlowPromptFlowNodeResourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowPromptFlowNodeSourceConfiguration0PropertiesOutput{})
	pulumi.RegisterOutputType(FlowPromptFlowNodeSourceConfiguration0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowPromptFlowNodeSourceConfiguration1PropertiesOutput{})
	pulumi.RegisterOutputType(FlowPromptFlowNodeSourceConfiguration1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowPromptInferenceConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowPromptInferenceConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowPromptInputVariableOutput{})
	pulumi.RegisterOutputType(FlowPromptInputVariableArrayOutput{})
	pulumi.RegisterOutputType(FlowPromptModelInferenceConfigurationOutput{})
	pulumi.RegisterOutputType(FlowPromptModelInferenceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowPromptTemplateConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowPromptTemplateConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowRetrievalFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowRetrievalFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowRetrievalFlowNodeS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FlowRetrievalFlowNodeS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowRetrievalFlowNodeServiceConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowS3LocationOutput{})
	pulumi.RegisterOutputType(FlowS3LocationPtrOutput{})
	pulumi.RegisterOutputType(FlowStorageFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowStorageFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowStorageFlowNodeS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FlowStorageFlowNodeS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowStorageFlowNodeServiceConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowStorageFlowNodeServiceConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowTextPromptTemplateConfigurationOutput{})
	pulumi.RegisterOutputType(FlowTextPromptTemplateConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowValidationOutput{})
	pulumi.RegisterOutputType(FlowValidationArrayOutput{})
	pulumi.RegisterOutputType(FlowVersionAgentFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionAgentFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionCollectorFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionCollectorFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionConditionFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionConditionFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowConditionOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowConditionArrayOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowConditionalConnectionConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowConditionalConnectionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowConnectionOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowConnectionArrayOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowConnectionConfiguration0PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowConnectionConfiguration0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowConnectionConfiguration1PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowConnectionConfiguration1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowDataConnectionConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowDataConnectionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowDefinitionOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowDefinitionPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeArrayOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration0PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration10PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration10PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration11PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration11PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration1PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration2PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration2PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration3PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration3PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration4PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration4PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration5PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration5PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration6PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration6PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration7PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration7PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration8PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration8PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration9PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeConfiguration9PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeInputTypeOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeInputTypeArrayOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeOutputTypeOutput{})
	pulumi.RegisterOutputType(FlowVersionFlowNodeOutputTypeArrayOutput{})
	pulumi.RegisterOutputType(FlowVersionInputFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionInputFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionIteratorFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionIteratorFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionKnowledgeBaseFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionKnowledgeBaseFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionLambdaFunctionFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionLambdaFunctionFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionLexFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionLexFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionOutputFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionOutputFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptFlowNodeInlineConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptFlowNodeInlineConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptFlowNodeResourceConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptFlowNodeResourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptFlowNodeSourceConfiguration0PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptFlowNodeSourceConfiguration0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptFlowNodeSourceConfiguration1PropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptFlowNodeSourceConfiguration1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptInferenceConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptInferenceConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptInputVariableOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptInputVariableArrayOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptModelInferenceConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptModelInferenceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptTemplateConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionPromptTemplateConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionRetrievalFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionRetrievalFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionRetrievalFlowNodeS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionRetrievalFlowNodeS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionRetrievalFlowNodeServiceConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionStorageFlowNodeConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionStorageFlowNodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionStorageFlowNodeS3ConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionStorageFlowNodeS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionStorageFlowNodeServiceConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(FlowVersionStorageFlowNodeServiceConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(FlowVersionTextPromptTemplateConfigurationOutput{})
	pulumi.RegisterOutputType(FlowVersionTextPromptTemplateConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GuardrailContentFilterConfigOutput{})
	pulumi.RegisterOutputType(GuardrailContentFilterConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailContentPolicyConfigOutput{})
	pulumi.RegisterOutputType(GuardrailContentPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(GuardrailContextualGroundingFilterConfigOutput{})
	pulumi.RegisterOutputType(GuardrailContextualGroundingFilterConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailContextualGroundingPolicyConfigOutput{})
	pulumi.RegisterOutputType(GuardrailContextualGroundingPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(GuardrailManagedWordsConfigOutput{})
	pulumi.RegisterOutputType(GuardrailManagedWordsConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailPiiEntityConfigOutput{})
	pulumi.RegisterOutputType(GuardrailPiiEntityConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailRegexConfigOutput{})
	pulumi.RegisterOutputType(GuardrailRegexConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailSensitiveInformationPolicyConfigOutput{})
	pulumi.RegisterOutputType(GuardrailSensitiveInformationPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(GuardrailTopicConfigOutput{})
	pulumi.RegisterOutputType(GuardrailTopicConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailTopicPolicyConfigOutput{})
	pulumi.RegisterOutputType(GuardrailTopicPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(GuardrailWordConfigOutput{})
	pulumi.RegisterOutputType(GuardrailWordConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailWordPolicyConfigOutput{})
	pulumi.RegisterOutputType(GuardrailWordPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseBedrockEmbeddingModelConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseBedrockEmbeddingModelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseEmbeddingModelConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseEmbeddingModelConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseMongoDbAtlasConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseMongoDbAtlasConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseMongoDbAtlasFieldMappingOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseMongoDbAtlasFieldMappingPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseOpenSearchServerlessConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseOpenSearchServerlessFieldMappingOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBasePineconeConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBasePineconeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBasePineconeFieldMappingOutput{})
	pulumi.RegisterOutputType(KnowledgeBasePineconeFieldMappingPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseRdsConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseRdsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseRdsFieldMappingOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseRdsFieldMappingPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseStorageConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseVectorKnowledgeBaseConfigurationOutput{})
	pulumi.RegisterOutputType(PromptInferenceConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(PromptInferenceConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PromptInputVariableOutput{})
	pulumi.RegisterOutputType(PromptInputVariableArrayOutput{})
	pulumi.RegisterOutputType(PromptModelInferenceConfigurationOutput{})
	pulumi.RegisterOutputType(PromptModelInferenceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PromptTemplateConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(PromptTemplateConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PromptTextPromptTemplateConfigurationOutput{})
	pulumi.RegisterOutputType(PromptTextPromptTemplateConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PromptTextS3LocationOutput{})
	pulumi.RegisterOutputType(PromptTextS3LocationPtrOutput{})
	pulumi.RegisterOutputType(PromptVariantOutput{})
	pulumi.RegisterOutputType(PromptVariantArrayOutput{})
	pulumi.RegisterOutputType(PromptVersionPromptInferenceConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(PromptVersionPromptInferenceConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PromptVersionPromptInputVariableOutput{})
	pulumi.RegisterOutputType(PromptVersionPromptInputVariableArrayOutput{})
	pulumi.RegisterOutputType(PromptVersionPromptModelInferenceConfigurationOutput{})
	pulumi.RegisterOutputType(PromptVersionPromptModelInferenceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PromptVersionPromptTemplateConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(PromptVersionPromptTemplateConfigurationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(PromptVersionPromptVariantOutput{})
	pulumi.RegisterOutputType(PromptVersionPromptVariantArrayOutput{})
	pulumi.RegisterOutputType(PromptVersionTextPromptTemplateConfigurationOutput{})
	pulumi.RegisterOutputType(PromptVersionTextPromptTemplateConfigurationPtrOutput{})
}
