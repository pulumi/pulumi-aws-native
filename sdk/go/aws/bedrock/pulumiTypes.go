// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Contains the information of an Agent Action Group
type AgentActionGroup struct {
	// The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action or the custom control method for handling the information elicited from the user.
	ActionGroupExecutor interface{} `pulumi:"actionGroupExecutor"`
	// Name of the action group
	ActionGroupName string `pulumi:"actionGroupName"`
	// Specifies whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request.
	ActionGroupState *AgentActionGroupState `pulumi:"actionGroupState"`
	// Contains either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html) .
	ApiSchema interface{} `pulumi:"apiSchema"`
	// Description of action group
	Description *string `pulumi:"description"`
	// Defines functions that each define parameters that the agent needs to invoke from the user. Each function represents an action in an action group.
	FunctionSchema *AgentFunctionSchema `pulumi:"functionSchema"`
	// If this field is set as `AMAZON.UserInput` , the agent can request the user for additional information when trying to complete a task. The `description` , `apiSchema` , and `actionGroupExecutor` fields must be blank for this action group.
	//
	// During orchestration, if the agent determines that it needs to invoke an API in an action group, but doesn't have enough information to complete the API request, it will invoke this action group instead and return an [Observation](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Observation.html) reprompting the user for more information.
	ParentActionGroupSignature *AgentActionGroupSignature `pulumi:"parentActionGroupSignature"`
	// Specifies whether to allow deleting action group while it is in use.
	SkipResourceInUseCheckOnDelete *bool `pulumi:"skipResourceInUseCheckOnDelete"`
}

// AgentActionGroupInput is an input type that accepts AgentActionGroupArgs and AgentActionGroupOutput values.
// You can construct a concrete instance of `AgentActionGroupInput` via:
//
//	AgentActionGroupArgs{...}
type AgentActionGroupInput interface {
	pulumi.Input

	ToAgentActionGroupOutput() AgentActionGroupOutput
	ToAgentActionGroupOutputWithContext(context.Context) AgentActionGroupOutput
}

// Contains the information of an Agent Action Group
type AgentActionGroupArgs struct {
	// The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action or the custom control method for handling the information elicited from the user.
	ActionGroupExecutor pulumi.Input `pulumi:"actionGroupExecutor"`
	// Name of the action group
	ActionGroupName pulumi.StringInput `pulumi:"actionGroupName"`
	// Specifies whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request.
	ActionGroupState AgentActionGroupStatePtrInput `pulumi:"actionGroupState"`
	// Contains either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html) .
	ApiSchema pulumi.Input `pulumi:"apiSchema"`
	// Description of action group
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Defines functions that each define parameters that the agent needs to invoke from the user. Each function represents an action in an action group.
	FunctionSchema AgentFunctionSchemaPtrInput `pulumi:"functionSchema"`
	// If this field is set as `AMAZON.UserInput` , the agent can request the user for additional information when trying to complete a task. The `description` , `apiSchema` , and `actionGroupExecutor` fields must be blank for this action group.
	//
	// During orchestration, if the agent determines that it needs to invoke an API in an action group, but doesn't have enough information to complete the API request, it will invoke this action group instead and return an [Observation](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Observation.html) reprompting the user for more information.
	ParentActionGroupSignature AgentActionGroupSignaturePtrInput `pulumi:"parentActionGroupSignature"`
	// Specifies whether to allow deleting action group while it is in use.
	SkipResourceInUseCheckOnDelete pulumi.BoolPtrInput `pulumi:"skipResourceInUseCheckOnDelete"`
}

func (AgentActionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentActionGroup)(nil)).Elem()
}

func (i AgentActionGroupArgs) ToAgentActionGroupOutput() AgentActionGroupOutput {
	return i.ToAgentActionGroupOutputWithContext(context.Background())
}

func (i AgentActionGroupArgs) ToAgentActionGroupOutputWithContext(ctx context.Context) AgentActionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupOutput)
}

// AgentActionGroupArrayInput is an input type that accepts AgentActionGroupArray and AgentActionGroupArrayOutput values.
// You can construct a concrete instance of `AgentActionGroupArrayInput` via:
//
//	AgentActionGroupArray{ AgentActionGroupArgs{...} }
type AgentActionGroupArrayInput interface {
	pulumi.Input

	ToAgentActionGroupArrayOutput() AgentActionGroupArrayOutput
	ToAgentActionGroupArrayOutputWithContext(context.Context) AgentActionGroupArrayOutput
}

type AgentActionGroupArray []AgentActionGroupInput

func (AgentActionGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentActionGroup)(nil)).Elem()
}

func (i AgentActionGroupArray) ToAgentActionGroupArrayOutput() AgentActionGroupArrayOutput {
	return i.ToAgentActionGroupArrayOutputWithContext(context.Background())
}

func (i AgentActionGroupArray) ToAgentActionGroupArrayOutputWithContext(ctx context.Context) AgentActionGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupArrayOutput)
}

// Contains the information of an Agent Action Group
type AgentActionGroupOutput struct{ *pulumi.OutputState }

func (AgentActionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentActionGroup)(nil)).Elem()
}

func (o AgentActionGroupOutput) ToAgentActionGroupOutput() AgentActionGroupOutput {
	return o
}

func (o AgentActionGroupOutput) ToAgentActionGroupOutputWithContext(ctx context.Context) AgentActionGroupOutput {
	return o
}

// The Amazon Resource Name (ARN) of the Lambda function containing the business logic that is carried out upon invoking the action or the custom control method for handling the information elicited from the user.
func (o AgentActionGroupOutput) ActionGroupExecutor() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentActionGroup) interface{} { return v.ActionGroupExecutor }).(pulumi.AnyOutput)
}

// Name of the action group
func (o AgentActionGroupOutput) ActionGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v AgentActionGroup) string { return v.ActionGroupName }).(pulumi.StringOutput)
}

// Specifies whether the action group is available for the agent to invoke or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request.
func (o AgentActionGroupOutput) ActionGroupState() AgentActionGroupStatePtrOutput {
	return o.ApplyT(func(v AgentActionGroup) *AgentActionGroupState { return v.ActionGroupState }).(AgentActionGroupStatePtrOutput)
}

// Contains either details about the S3 object containing the OpenAPI schema for the action group or the JSON or YAML-formatted payload defining the schema. For more information, see [Action group OpenAPI schemas](https://docs.aws.amazon.com/bedrock/latest/userguide/agents-api-schema.html) .
func (o AgentActionGroupOutput) ApiSchema() pulumi.AnyOutput {
	return o.ApplyT(func(v AgentActionGroup) interface{} { return v.ApiSchema }).(pulumi.AnyOutput)
}

// Description of action group
func (o AgentActionGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentActionGroup) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Defines functions that each define parameters that the agent needs to invoke from the user. Each function represents an action in an action group.
func (o AgentActionGroupOutput) FunctionSchema() AgentFunctionSchemaPtrOutput {
	return o.ApplyT(func(v AgentActionGroup) *AgentFunctionSchema { return v.FunctionSchema }).(AgentFunctionSchemaPtrOutput)
}

// If this field is set as `AMAZON.UserInput` , the agent can request the user for additional information when trying to complete a task. The `description` , `apiSchema` , and `actionGroupExecutor` fields must be blank for this action group.
//
// During orchestration, if the agent determines that it needs to invoke an API in an action group, but doesn't have enough information to complete the API request, it will invoke this action group instead and return an [Observation](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_Observation.html) reprompting the user for more information.
func (o AgentActionGroupOutput) ParentActionGroupSignature() AgentActionGroupSignaturePtrOutput {
	return o.ApplyT(func(v AgentActionGroup) *AgentActionGroupSignature { return v.ParentActionGroupSignature }).(AgentActionGroupSignaturePtrOutput)
}

// Specifies whether to allow deleting action group while it is in use.
func (o AgentActionGroupOutput) SkipResourceInUseCheckOnDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentActionGroup) *bool { return v.SkipResourceInUseCheckOnDelete }).(pulumi.BoolPtrOutput)
}

type AgentActionGroupArrayOutput struct{ *pulumi.OutputState }

func (AgentActionGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentActionGroup)(nil)).Elem()
}

func (o AgentActionGroupArrayOutput) ToAgentActionGroupArrayOutput() AgentActionGroupArrayOutput {
	return o
}

func (o AgentActionGroupArrayOutput) ToAgentActionGroupArrayOutputWithContext(ctx context.Context) AgentActionGroupArrayOutput {
	return o
}

func (o AgentActionGroupArrayOutput) Index(i pulumi.IntInput) AgentActionGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentActionGroup {
		return vs[0].([]AgentActionGroup)[vs[1].(int)]
	}).(AgentActionGroupOutput)
}

// Type of Executors for an Action Group
type AgentActionGroupExecutor0Properties struct {
	// ARN of a Lambda.
	Lambda string `pulumi:"lambda"`
}

// AgentActionGroupExecutor0PropertiesInput is an input type that accepts AgentActionGroupExecutor0PropertiesArgs and AgentActionGroupExecutor0PropertiesOutput values.
// You can construct a concrete instance of `AgentActionGroupExecutor0PropertiesInput` via:
//
//	AgentActionGroupExecutor0PropertiesArgs{...}
type AgentActionGroupExecutor0PropertiesInput interface {
	pulumi.Input

	ToAgentActionGroupExecutor0PropertiesOutput() AgentActionGroupExecutor0PropertiesOutput
	ToAgentActionGroupExecutor0PropertiesOutputWithContext(context.Context) AgentActionGroupExecutor0PropertiesOutput
}

// Type of Executors for an Action Group
type AgentActionGroupExecutor0PropertiesArgs struct {
	// ARN of a Lambda.
	Lambda pulumi.StringInput `pulumi:"lambda"`
}

func (AgentActionGroupExecutor0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentActionGroupExecutor0Properties)(nil)).Elem()
}

func (i AgentActionGroupExecutor0PropertiesArgs) ToAgentActionGroupExecutor0PropertiesOutput() AgentActionGroupExecutor0PropertiesOutput {
	return i.ToAgentActionGroupExecutor0PropertiesOutputWithContext(context.Background())
}

func (i AgentActionGroupExecutor0PropertiesArgs) ToAgentActionGroupExecutor0PropertiesOutputWithContext(ctx context.Context) AgentActionGroupExecutor0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupExecutor0PropertiesOutput)
}

func (i AgentActionGroupExecutor0PropertiesArgs) ToAgentActionGroupExecutor0PropertiesPtrOutput() AgentActionGroupExecutor0PropertiesPtrOutput {
	return i.ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(context.Background())
}

func (i AgentActionGroupExecutor0PropertiesArgs) ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupExecutor0PropertiesOutput).ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(ctx)
}

// AgentActionGroupExecutor0PropertiesPtrInput is an input type that accepts AgentActionGroupExecutor0PropertiesArgs, AgentActionGroupExecutor0PropertiesPtr and AgentActionGroupExecutor0PropertiesPtrOutput values.
// You can construct a concrete instance of `AgentActionGroupExecutor0PropertiesPtrInput` via:
//
//	        AgentActionGroupExecutor0PropertiesArgs{...}
//
//	or:
//
//	        nil
type AgentActionGroupExecutor0PropertiesPtrInput interface {
	pulumi.Input

	ToAgentActionGroupExecutor0PropertiesPtrOutput() AgentActionGroupExecutor0PropertiesPtrOutput
	ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(context.Context) AgentActionGroupExecutor0PropertiesPtrOutput
}

type agentActionGroupExecutor0PropertiesPtrType AgentActionGroupExecutor0PropertiesArgs

func AgentActionGroupExecutor0PropertiesPtr(v *AgentActionGroupExecutor0PropertiesArgs) AgentActionGroupExecutor0PropertiesPtrInput {
	return (*agentActionGroupExecutor0PropertiesPtrType)(v)
}

func (*agentActionGroupExecutor0PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentActionGroupExecutor0Properties)(nil)).Elem()
}

func (i *agentActionGroupExecutor0PropertiesPtrType) ToAgentActionGroupExecutor0PropertiesPtrOutput() AgentActionGroupExecutor0PropertiesPtrOutput {
	return i.ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(context.Background())
}

func (i *agentActionGroupExecutor0PropertiesPtrType) ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupExecutor0PropertiesPtrOutput)
}

// Type of Executors for an Action Group
type AgentActionGroupExecutor0PropertiesOutput struct{ *pulumi.OutputState }

func (AgentActionGroupExecutor0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentActionGroupExecutor0Properties)(nil)).Elem()
}

func (o AgentActionGroupExecutor0PropertiesOutput) ToAgentActionGroupExecutor0PropertiesOutput() AgentActionGroupExecutor0PropertiesOutput {
	return o
}

func (o AgentActionGroupExecutor0PropertiesOutput) ToAgentActionGroupExecutor0PropertiesOutputWithContext(ctx context.Context) AgentActionGroupExecutor0PropertiesOutput {
	return o
}

func (o AgentActionGroupExecutor0PropertiesOutput) ToAgentActionGroupExecutor0PropertiesPtrOutput() AgentActionGroupExecutor0PropertiesPtrOutput {
	return o.ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(context.Background())
}

func (o AgentActionGroupExecutor0PropertiesOutput) ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor0PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentActionGroupExecutor0Properties) *AgentActionGroupExecutor0Properties {
		return &v
	}).(AgentActionGroupExecutor0PropertiesPtrOutput)
}

// ARN of a Lambda.
func (o AgentActionGroupExecutor0PropertiesOutput) Lambda() pulumi.StringOutput {
	return o.ApplyT(func(v AgentActionGroupExecutor0Properties) string { return v.Lambda }).(pulumi.StringOutput)
}

type AgentActionGroupExecutor0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (AgentActionGroupExecutor0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentActionGroupExecutor0Properties)(nil)).Elem()
}

func (o AgentActionGroupExecutor0PropertiesPtrOutput) ToAgentActionGroupExecutor0PropertiesPtrOutput() AgentActionGroupExecutor0PropertiesPtrOutput {
	return o
}

func (o AgentActionGroupExecutor0PropertiesPtrOutput) ToAgentActionGroupExecutor0PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor0PropertiesPtrOutput {
	return o
}

func (o AgentActionGroupExecutor0PropertiesPtrOutput) Elem() AgentActionGroupExecutor0PropertiesOutput {
	return o.ApplyT(func(v *AgentActionGroupExecutor0Properties) AgentActionGroupExecutor0Properties {
		if v != nil {
			return *v
		}
		var ret AgentActionGroupExecutor0Properties
		return ret
	}).(AgentActionGroupExecutor0PropertiesOutput)
}

// ARN of a Lambda.
func (o AgentActionGroupExecutor0PropertiesPtrOutput) Lambda() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentActionGroupExecutor0Properties) *string {
		if v == nil {
			return nil
		}
		return &v.Lambda
	}).(pulumi.StringPtrOutput)
}

// Type of Executors for an Action Group
type AgentActionGroupExecutor1Properties struct {
	CustomControl AgentCustomControlMethod `pulumi:"customControl"`
}

// AgentActionGroupExecutor1PropertiesInput is an input type that accepts AgentActionGroupExecutor1PropertiesArgs and AgentActionGroupExecutor1PropertiesOutput values.
// You can construct a concrete instance of `AgentActionGroupExecutor1PropertiesInput` via:
//
//	AgentActionGroupExecutor1PropertiesArgs{...}
type AgentActionGroupExecutor1PropertiesInput interface {
	pulumi.Input

	ToAgentActionGroupExecutor1PropertiesOutput() AgentActionGroupExecutor1PropertiesOutput
	ToAgentActionGroupExecutor1PropertiesOutputWithContext(context.Context) AgentActionGroupExecutor1PropertiesOutput
}

// Type of Executors for an Action Group
type AgentActionGroupExecutor1PropertiesArgs struct {
	CustomControl AgentCustomControlMethodInput `pulumi:"customControl"`
}

func (AgentActionGroupExecutor1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentActionGroupExecutor1Properties)(nil)).Elem()
}

func (i AgentActionGroupExecutor1PropertiesArgs) ToAgentActionGroupExecutor1PropertiesOutput() AgentActionGroupExecutor1PropertiesOutput {
	return i.ToAgentActionGroupExecutor1PropertiesOutputWithContext(context.Background())
}

func (i AgentActionGroupExecutor1PropertiesArgs) ToAgentActionGroupExecutor1PropertiesOutputWithContext(ctx context.Context) AgentActionGroupExecutor1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupExecutor1PropertiesOutput)
}

func (i AgentActionGroupExecutor1PropertiesArgs) ToAgentActionGroupExecutor1PropertiesPtrOutput() AgentActionGroupExecutor1PropertiesPtrOutput {
	return i.ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(context.Background())
}

func (i AgentActionGroupExecutor1PropertiesArgs) ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupExecutor1PropertiesOutput).ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(ctx)
}

// AgentActionGroupExecutor1PropertiesPtrInput is an input type that accepts AgentActionGroupExecutor1PropertiesArgs, AgentActionGroupExecutor1PropertiesPtr and AgentActionGroupExecutor1PropertiesPtrOutput values.
// You can construct a concrete instance of `AgentActionGroupExecutor1PropertiesPtrInput` via:
//
//	        AgentActionGroupExecutor1PropertiesArgs{...}
//
//	or:
//
//	        nil
type AgentActionGroupExecutor1PropertiesPtrInput interface {
	pulumi.Input

	ToAgentActionGroupExecutor1PropertiesPtrOutput() AgentActionGroupExecutor1PropertiesPtrOutput
	ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(context.Context) AgentActionGroupExecutor1PropertiesPtrOutput
}

type agentActionGroupExecutor1PropertiesPtrType AgentActionGroupExecutor1PropertiesArgs

func AgentActionGroupExecutor1PropertiesPtr(v *AgentActionGroupExecutor1PropertiesArgs) AgentActionGroupExecutor1PropertiesPtrInput {
	return (*agentActionGroupExecutor1PropertiesPtrType)(v)
}

func (*agentActionGroupExecutor1PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentActionGroupExecutor1Properties)(nil)).Elem()
}

func (i *agentActionGroupExecutor1PropertiesPtrType) ToAgentActionGroupExecutor1PropertiesPtrOutput() AgentActionGroupExecutor1PropertiesPtrOutput {
	return i.ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(context.Background())
}

func (i *agentActionGroupExecutor1PropertiesPtrType) ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentActionGroupExecutor1PropertiesPtrOutput)
}

// Type of Executors for an Action Group
type AgentActionGroupExecutor1PropertiesOutput struct{ *pulumi.OutputState }

func (AgentActionGroupExecutor1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentActionGroupExecutor1Properties)(nil)).Elem()
}

func (o AgentActionGroupExecutor1PropertiesOutput) ToAgentActionGroupExecutor1PropertiesOutput() AgentActionGroupExecutor1PropertiesOutput {
	return o
}

func (o AgentActionGroupExecutor1PropertiesOutput) ToAgentActionGroupExecutor1PropertiesOutputWithContext(ctx context.Context) AgentActionGroupExecutor1PropertiesOutput {
	return o
}

func (o AgentActionGroupExecutor1PropertiesOutput) ToAgentActionGroupExecutor1PropertiesPtrOutput() AgentActionGroupExecutor1PropertiesPtrOutput {
	return o.ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(context.Background())
}

func (o AgentActionGroupExecutor1PropertiesOutput) ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor1PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentActionGroupExecutor1Properties) *AgentActionGroupExecutor1Properties {
		return &v
	}).(AgentActionGroupExecutor1PropertiesPtrOutput)
}

func (o AgentActionGroupExecutor1PropertiesOutput) CustomControl() AgentCustomControlMethodOutput {
	return o.ApplyT(func(v AgentActionGroupExecutor1Properties) AgentCustomControlMethod { return v.CustomControl }).(AgentCustomControlMethodOutput)
}

type AgentActionGroupExecutor1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (AgentActionGroupExecutor1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentActionGroupExecutor1Properties)(nil)).Elem()
}

func (o AgentActionGroupExecutor1PropertiesPtrOutput) ToAgentActionGroupExecutor1PropertiesPtrOutput() AgentActionGroupExecutor1PropertiesPtrOutput {
	return o
}

func (o AgentActionGroupExecutor1PropertiesPtrOutput) ToAgentActionGroupExecutor1PropertiesPtrOutputWithContext(ctx context.Context) AgentActionGroupExecutor1PropertiesPtrOutput {
	return o
}

func (o AgentActionGroupExecutor1PropertiesPtrOutput) Elem() AgentActionGroupExecutor1PropertiesOutput {
	return o.ApplyT(func(v *AgentActionGroupExecutor1Properties) AgentActionGroupExecutor1Properties {
		if v != nil {
			return *v
		}
		var ret AgentActionGroupExecutor1Properties
		return ret
	}).(AgentActionGroupExecutor1PropertiesOutput)
}

func (o AgentActionGroupExecutor1PropertiesPtrOutput) CustomControl() AgentCustomControlMethodPtrOutput {
	return o.ApplyT(func(v *AgentActionGroupExecutor1Properties) *AgentCustomControlMethod {
		if v == nil {
			return nil
		}
		return &v.CustomControl
	}).(AgentCustomControlMethodPtrOutput)
}

// History event for an alias for an Agent.
type AgentAliasHistoryEvent struct {
	// Time Stamp.
	EndDate *string `pulumi:"endDate"`
	// Routing configuration for an Agent alias.
	RoutingConfiguration []AgentAliasRoutingConfigurationListItem `pulumi:"routingConfiguration"`
	// Time Stamp.
	StartDate *string `pulumi:"startDate"`
}

// History event for an alias for an Agent.
type AgentAliasHistoryEventOutput struct{ *pulumi.OutputState }

func (AgentAliasHistoryEventOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentAliasHistoryEvent)(nil)).Elem()
}

func (o AgentAliasHistoryEventOutput) ToAgentAliasHistoryEventOutput() AgentAliasHistoryEventOutput {
	return o
}

func (o AgentAliasHistoryEventOutput) ToAgentAliasHistoryEventOutputWithContext(ctx context.Context) AgentAliasHistoryEventOutput {
	return o
}

// Time Stamp.
func (o AgentAliasHistoryEventOutput) EndDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentAliasHistoryEvent) *string { return v.EndDate }).(pulumi.StringPtrOutput)
}

// Routing configuration for an Agent alias.
func (o AgentAliasHistoryEventOutput) RoutingConfiguration() AgentAliasRoutingConfigurationListItemArrayOutput {
	return o.ApplyT(func(v AgentAliasHistoryEvent) []AgentAliasRoutingConfigurationListItem { return v.RoutingConfiguration }).(AgentAliasRoutingConfigurationListItemArrayOutput)
}

// Time Stamp.
func (o AgentAliasHistoryEventOutput) StartDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentAliasHistoryEvent) *string { return v.StartDate }).(pulumi.StringPtrOutput)
}

type AgentAliasHistoryEventArrayOutput struct{ *pulumi.OutputState }

func (AgentAliasHistoryEventArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentAliasHistoryEvent)(nil)).Elem()
}

func (o AgentAliasHistoryEventArrayOutput) ToAgentAliasHistoryEventArrayOutput() AgentAliasHistoryEventArrayOutput {
	return o
}

func (o AgentAliasHistoryEventArrayOutput) ToAgentAliasHistoryEventArrayOutputWithContext(ctx context.Context) AgentAliasHistoryEventArrayOutput {
	return o
}

func (o AgentAliasHistoryEventArrayOutput) Index(i pulumi.IntInput) AgentAliasHistoryEventOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentAliasHistoryEvent {
		return vs[0].([]AgentAliasHistoryEvent)[vs[1].(int)]
	}).(AgentAliasHistoryEventOutput)
}

// Details about the routing configuration for an Agent alias.
type AgentAliasRoutingConfigurationListItem struct {
	// Agent Version.
	AgentVersion string `pulumi:"agentVersion"`
}

// AgentAliasRoutingConfigurationListItemInput is an input type that accepts AgentAliasRoutingConfigurationListItemArgs and AgentAliasRoutingConfigurationListItemOutput values.
// You can construct a concrete instance of `AgentAliasRoutingConfigurationListItemInput` via:
//
//	AgentAliasRoutingConfigurationListItemArgs{...}
type AgentAliasRoutingConfigurationListItemInput interface {
	pulumi.Input

	ToAgentAliasRoutingConfigurationListItemOutput() AgentAliasRoutingConfigurationListItemOutput
	ToAgentAliasRoutingConfigurationListItemOutputWithContext(context.Context) AgentAliasRoutingConfigurationListItemOutput
}

// Details about the routing configuration for an Agent alias.
type AgentAliasRoutingConfigurationListItemArgs struct {
	// Agent Version.
	AgentVersion pulumi.StringInput `pulumi:"agentVersion"`
}

func (AgentAliasRoutingConfigurationListItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentAliasRoutingConfigurationListItem)(nil)).Elem()
}

func (i AgentAliasRoutingConfigurationListItemArgs) ToAgentAliasRoutingConfigurationListItemOutput() AgentAliasRoutingConfigurationListItemOutput {
	return i.ToAgentAliasRoutingConfigurationListItemOutputWithContext(context.Background())
}

func (i AgentAliasRoutingConfigurationListItemArgs) ToAgentAliasRoutingConfigurationListItemOutputWithContext(ctx context.Context) AgentAliasRoutingConfigurationListItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAliasRoutingConfigurationListItemOutput)
}

// AgentAliasRoutingConfigurationListItemArrayInput is an input type that accepts AgentAliasRoutingConfigurationListItemArray and AgentAliasRoutingConfigurationListItemArrayOutput values.
// You can construct a concrete instance of `AgentAliasRoutingConfigurationListItemArrayInput` via:
//
//	AgentAliasRoutingConfigurationListItemArray{ AgentAliasRoutingConfigurationListItemArgs{...} }
type AgentAliasRoutingConfigurationListItemArrayInput interface {
	pulumi.Input

	ToAgentAliasRoutingConfigurationListItemArrayOutput() AgentAliasRoutingConfigurationListItemArrayOutput
	ToAgentAliasRoutingConfigurationListItemArrayOutputWithContext(context.Context) AgentAliasRoutingConfigurationListItemArrayOutput
}

type AgentAliasRoutingConfigurationListItemArray []AgentAliasRoutingConfigurationListItemInput

func (AgentAliasRoutingConfigurationListItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentAliasRoutingConfigurationListItem)(nil)).Elem()
}

func (i AgentAliasRoutingConfigurationListItemArray) ToAgentAliasRoutingConfigurationListItemArrayOutput() AgentAliasRoutingConfigurationListItemArrayOutput {
	return i.ToAgentAliasRoutingConfigurationListItemArrayOutputWithContext(context.Background())
}

func (i AgentAliasRoutingConfigurationListItemArray) ToAgentAliasRoutingConfigurationListItemArrayOutputWithContext(ctx context.Context) AgentAliasRoutingConfigurationListItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAliasRoutingConfigurationListItemArrayOutput)
}

// Details about the routing configuration for an Agent alias.
type AgentAliasRoutingConfigurationListItemOutput struct{ *pulumi.OutputState }

func (AgentAliasRoutingConfigurationListItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentAliasRoutingConfigurationListItem)(nil)).Elem()
}

func (o AgentAliasRoutingConfigurationListItemOutput) ToAgentAliasRoutingConfigurationListItemOutput() AgentAliasRoutingConfigurationListItemOutput {
	return o
}

func (o AgentAliasRoutingConfigurationListItemOutput) ToAgentAliasRoutingConfigurationListItemOutputWithContext(ctx context.Context) AgentAliasRoutingConfigurationListItemOutput {
	return o
}

// Agent Version.
func (o AgentAliasRoutingConfigurationListItemOutput) AgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v AgentAliasRoutingConfigurationListItem) string { return v.AgentVersion }).(pulumi.StringOutput)
}

type AgentAliasRoutingConfigurationListItemArrayOutput struct{ *pulumi.OutputState }

func (AgentAliasRoutingConfigurationListItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentAliasRoutingConfigurationListItem)(nil)).Elem()
}

func (o AgentAliasRoutingConfigurationListItemArrayOutput) ToAgentAliasRoutingConfigurationListItemArrayOutput() AgentAliasRoutingConfigurationListItemArrayOutput {
	return o
}

func (o AgentAliasRoutingConfigurationListItemArrayOutput) ToAgentAliasRoutingConfigurationListItemArrayOutputWithContext(ctx context.Context) AgentAliasRoutingConfigurationListItemArrayOutput {
	return o
}

func (o AgentAliasRoutingConfigurationListItemArrayOutput) Index(i pulumi.IntInput) AgentAliasRoutingConfigurationListItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentAliasRoutingConfigurationListItem {
		return vs[0].([]AgentAliasRoutingConfigurationListItem)[vs[1].(int)]
	}).(AgentAliasRoutingConfigurationListItemOutput)
}

// Contains information about the API Schema for the Action Group
type AgentApiSchema0Properties struct {
	S3 AgentS3Identifier `pulumi:"s3"`
}

// AgentApiSchema0PropertiesInput is an input type that accepts AgentApiSchema0PropertiesArgs and AgentApiSchema0PropertiesOutput values.
// You can construct a concrete instance of `AgentApiSchema0PropertiesInput` via:
//
//	AgentApiSchema0PropertiesArgs{...}
type AgentApiSchema0PropertiesInput interface {
	pulumi.Input

	ToAgentApiSchema0PropertiesOutput() AgentApiSchema0PropertiesOutput
	ToAgentApiSchema0PropertiesOutputWithContext(context.Context) AgentApiSchema0PropertiesOutput
}

// Contains information about the API Schema for the Action Group
type AgentApiSchema0PropertiesArgs struct {
	S3 AgentS3IdentifierInput `pulumi:"s3"`
}

func (AgentApiSchema0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentApiSchema0Properties)(nil)).Elem()
}

func (i AgentApiSchema0PropertiesArgs) ToAgentApiSchema0PropertiesOutput() AgentApiSchema0PropertiesOutput {
	return i.ToAgentApiSchema0PropertiesOutputWithContext(context.Background())
}

func (i AgentApiSchema0PropertiesArgs) ToAgentApiSchema0PropertiesOutputWithContext(ctx context.Context) AgentApiSchema0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentApiSchema0PropertiesOutput)
}

func (i AgentApiSchema0PropertiesArgs) ToAgentApiSchema0PropertiesPtrOutput() AgentApiSchema0PropertiesPtrOutput {
	return i.ToAgentApiSchema0PropertiesPtrOutputWithContext(context.Background())
}

func (i AgentApiSchema0PropertiesArgs) ToAgentApiSchema0PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentApiSchema0PropertiesOutput).ToAgentApiSchema0PropertiesPtrOutputWithContext(ctx)
}

// AgentApiSchema0PropertiesPtrInput is an input type that accepts AgentApiSchema0PropertiesArgs, AgentApiSchema0PropertiesPtr and AgentApiSchema0PropertiesPtrOutput values.
// You can construct a concrete instance of `AgentApiSchema0PropertiesPtrInput` via:
//
//	        AgentApiSchema0PropertiesArgs{...}
//
//	or:
//
//	        nil
type AgentApiSchema0PropertiesPtrInput interface {
	pulumi.Input

	ToAgentApiSchema0PropertiesPtrOutput() AgentApiSchema0PropertiesPtrOutput
	ToAgentApiSchema0PropertiesPtrOutputWithContext(context.Context) AgentApiSchema0PropertiesPtrOutput
}

type agentApiSchema0PropertiesPtrType AgentApiSchema0PropertiesArgs

func AgentApiSchema0PropertiesPtr(v *AgentApiSchema0PropertiesArgs) AgentApiSchema0PropertiesPtrInput {
	return (*agentApiSchema0PropertiesPtrType)(v)
}

func (*agentApiSchema0PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentApiSchema0Properties)(nil)).Elem()
}

func (i *agentApiSchema0PropertiesPtrType) ToAgentApiSchema0PropertiesPtrOutput() AgentApiSchema0PropertiesPtrOutput {
	return i.ToAgentApiSchema0PropertiesPtrOutputWithContext(context.Background())
}

func (i *agentApiSchema0PropertiesPtrType) ToAgentApiSchema0PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema0PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentApiSchema0PropertiesPtrOutput)
}

// Contains information about the API Schema for the Action Group
type AgentApiSchema0PropertiesOutput struct{ *pulumi.OutputState }

func (AgentApiSchema0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentApiSchema0Properties)(nil)).Elem()
}

func (o AgentApiSchema0PropertiesOutput) ToAgentApiSchema0PropertiesOutput() AgentApiSchema0PropertiesOutput {
	return o
}

func (o AgentApiSchema0PropertiesOutput) ToAgentApiSchema0PropertiesOutputWithContext(ctx context.Context) AgentApiSchema0PropertiesOutput {
	return o
}

func (o AgentApiSchema0PropertiesOutput) ToAgentApiSchema0PropertiesPtrOutput() AgentApiSchema0PropertiesPtrOutput {
	return o.ToAgentApiSchema0PropertiesPtrOutputWithContext(context.Background())
}

func (o AgentApiSchema0PropertiesOutput) ToAgentApiSchema0PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema0PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentApiSchema0Properties) *AgentApiSchema0Properties {
		return &v
	}).(AgentApiSchema0PropertiesPtrOutput)
}

func (o AgentApiSchema0PropertiesOutput) S3() AgentS3IdentifierOutput {
	return o.ApplyT(func(v AgentApiSchema0Properties) AgentS3Identifier { return v.S3 }).(AgentS3IdentifierOutput)
}

type AgentApiSchema0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (AgentApiSchema0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentApiSchema0Properties)(nil)).Elem()
}

func (o AgentApiSchema0PropertiesPtrOutput) ToAgentApiSchema0PropertiesPtrOutput() AgentApiSchema0PropertiesPtrOutput {
	return o
}

func (o AgentApiSchema0PropertiesPtrOutput) ToAgentApiSchema0PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema0PropertiesPtrOutput {
	return o
}

func (o AgentApiSchema0PropertiesPtrOutput) Elem() AgentApiSchema0PropertiesOutput {
	return o.ApplyT(func(v *AgentApiSchema0Properties) AgentApiSchema0Properties {
		if v != nil {
			return *v
		}
		var ret AgentApiSchema0Properties
		return ret
	}).(AgentApiSchema0PropertiesOutput)
}

func (o AgentApiSchema0PropertiesPtrOutput) S3() AgentS3IdentifierPtrOutput {
	return o.ApplyT(func(v *AgentApiSchema0Properties) *AgentS3Identifier {
		if v == nil {
			return nil
		}
		return &v.S3
	}).(AgentS3IdentifierPtrOutput)
}

// Contains information about the API Schema for the Action Group
type AgentApiSchema1Properties struct {
	// String OpenAPI Payload
	Payload string `pulumi:"payload"`
}

// AgentApiSchema1PropertiesInput is an input type that accepts AgentApiSchema1PropertiesArgs and AgentApiSchema1PropertiesOutput values.
// You can construct a concrete instance of `AgentApiSchema1PropertiesInput` via:
//
//	AgentApiSchema1PropertiesArgs{...}
type AgentApiSchema1PropertiesInput interface {
	pulumi.Input

	ToAgentApiSchema1PropertiesOutput() AgentApiSchema1PropertiesOutput
	ToAgentApiSchema1PropertiesOutputWithContext(context.Context) AgentApiSchema1PropertiesOutput
}

// Contains information about the API Schema for the Action Group
type AgentApiSchema1PropertiesArgs struct {
	// String OpenAPI Payload
	Payload pulumi.StringInput `pulumi:"payload"`
}

func (AgentApiSchema1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentApiSchema1Properties)(nil)).Elem()
}

func (i AgentApiSchema1PropertiesArgs) ToAgentApiSchema1PropertiesOutput() AgentApiSchema1PropertiesOutput {
	return i.ToAgentApiSchema1PropertiesOutputWithContext(context.Background())
}

func (i AgentApiSchema1PropertiesArgs) ToAgentApiSchema1PropertiesOutputWithContext(ctx context.Context) AgentApiSchema1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentApiSchema1PropertiesOutput)
}

func (i AgentApiSchema1PropertiesArgs) ToAgentApiSchema1PropertiesPtrOutput() AgentApiSchema1PropertiesPtrOutput {
	return i.ToAgentApiSchema1PropertiesPtrOutputWithContext(context.Background())
}

func (i AgentApiSchema1PropertiesArgs) ToAgentApiSchema1PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentApiSchema1PropertiesOutput).ToAgentApiSchema1PropertiesPtrOutputWithContext(ctx)
}

// AgentApiSchema1PropertiesPtrInput is an input type that accepts AgentApiSchema1PropertiesArgs, AgentApiSchema1PropertiesPtr and AgentApiSchema1PropertiesPtrOutput values.
// You can construct a concrete instance of `AgentApiSchema1PropertiesPtrInput` via:
//
//	        AgentApiSchema1PropertiesArgs{...}
//
//	or:
//
//	        nil
type AgentApiSchema1PropertiesPtrInput interface {
	pulumi.Input

	ToAgentApiSchema1PropertiesPtrOutput() AgentApiSchema1PropertiesPtrOutput
	ToAgentApiSchema1PropertiesPtrOutputWithContext(context.Context) AgentApiSchema1PropertiesPtrOutput
}

type agentApiSchema1PropertiesPtrType AgentApiSchema1PropertiesArgs

func AgentApiSchema1PropertiesPtr(v *AgentApiSchema1PropertiesArgs) AgentApiSchema1PropertiesPtrInput {
	return (*agentApiSchema1PropertiesPtrType)(v)
}

func (*agentApiSchema1PropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentApiSchema1Properties)(nil)).Elem()
}

func (i *agentApiSchema1PropertiesPtrType) ToAgentApiSchema1PropertiesPtrOutput() AgentApiSchema1PropertiesPtrOutput {
	return i.ToAgentApiSchema1PropertiesPtrOutputWithContext(context.Background())
}

func (i *agentApiSchema1PropertiesPtrType) ToAgentApiSchema1PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema1PropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentApiSchema1PropertiesPtrOutput)
}

// Contains information about the API Schema for the Action Group
type AgentApiSchema1PropertiesOutput struct{ *pulumi.OutputState }

func (AgentApiSchema1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentApiSchema1Properties)(nil)).Elem()
}

func (o AgentApiSchema1PropertiesOutput) ToAgentApiSchema1PropertiesOutput() AgentApiSchema1PropertiesOutput {
	return o
}

func (o AgentApiSchema1PropertiesOutput) ToAgentApiSchema1PropertiesOutputWithContext(ctx context.Context) AgentApiSchema1PropertiesOutput {
	return o
}

func (o AgentApiSchema1PropertiesOutput) ToAgentApiSchema1PropertiesPtrOutput() AgentApiSchema1PropertiesPtrOutput {
	return o.ToAgentApiSchema1PropertiesPtrOutputWithContext(context.Background())
}

func (o AgentApiSchema1PropertiesOutput) ToAgentApiSchema1PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema1PropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentApiSchema1Properties) *AgentApiSchema1Properties {
		return &v
	}).(AgentApiSchema1PropertiesPtrOutput)
}

// String OpenAPI Payload
func (o AgentApiSchema1PropertiesOutput) Payload() pulumi.StringOutput {
	return o.ApplyT(func(v AgentApiSchema1Properties) string { return v.Payload }).(pulumi.StringOutput)
}

type AgentApiSchema1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (AgentApiSchema1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentApiSchema1Properties)(nil)).Elem()
}

func (o AgentApiSchema1PropertiesPtrOutput) ToAgentApiSchema1PropertiesPtrOutput() AgentApiSchema1PropertiesPtrOutput {
	return o
}

func (o AgentApiSchema1PropertiesPtrOutput) ToAgentApiSchema1PropertiesPtrOutputWithContext(ctx context.Context) AgentApiSchema1PropertiesPtrOutput {
	return o
}

func (o AgentApiSchema1PropertiesPtrOutput) Elem() AgentApiSchema1PropertiesOutput {
	return o.ApplyT(func(v *AgentApiSchema1Properties) AgentApiSchema1Properties {
		if v != nil {
			return *v
		}
		var ret AgentApiSchema1Properties
		return ret
	}).(AgentApiSchema1PropertiesOutput)
}

// String OpenAPI Payload
func (o AgentApiSchema1PropertiesPtrOutput) Payload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentApiSchema1Properties) *string {
		if v == nil {
			return nil
		}
		return &v.Payload
	}).(pulumi.StringPtrOutput)
}

// Function definition
type AgentFunction struct {
	// Description of function
	Description *string `pulumi:"description"`
	// Name for a resource.
	Name string `pulumi:"name"`
	// The parameters that the agent elicits from the user to fulfill the function.
	Parameters map[string]AgentParameterDetail `pulumi:"parameters"`
}

// AgentFunctionInput is an input type that accepts AgentFunctionArgs and AgentFunctionOutput values.
// You can construct a concrete instance of `AgentFunctionInput` via:
//
//	AgentFunctionArgs{...}
type AgentFunctionInput interface {
	pulumi.Input

	ToAgentFunctionOutput() AgentFunctionOutput
	ToAgentFunctionOutputWithContext(context.Context) AgentFunctionOutput
}

// Function definition
type AgentFunctionArgs struct {
	// Description of function
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name for a resource.
	Name pulumi.StringInput `pulumi:"name"`
	// The parameters that the agent elicits from the user to fulfill the function.
	Parameters AgentParameterDetailMapInput `pulumi:"parameters"`
}

func (AgentFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentFunction)(nil)).Elem()
}

func (i AgentFunctionArgs) ToAgentFunctionOutput() AgentFunctionOutput {
	return i.ToAgentFunctionOutputWithContext(context.Background())
}

func (i AgentFunctionArgs) ToAgentFunctionOutputWithContext(ctx context.Context) AgentFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentFunctionOutput)
}

// AgentFunctionArrayInput is an input type that accepts AgentFunctionArray and AgentFunctionArrayOutput values.
// You can construct a concrete instance of `AgentFunctionArrayInput` via:
//
//	AgentFunctionArray{ AgentFunctionArgs{...} }
type AgentFunctionArrayInput interface {
	pulumi.Input

	ToAgentFunctionArrayOutput() AgentFunctionArrayOutput
	ToAgentFunctionArrayOutputWithContext(context.Context) AgentFunctionArrayOutput
}

type AgentFunctionArray []AgentFunctionInput

func (AgentFunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentFunction)(nil)).Elem()
}

func (i AgentFunctionArray) ToAgentFunctionArrayOutput() AgentFunctionArrayOutput {
	return i.ToAgentFunctionArrayOutputWithContext(context.Background())
}

func (i AgentFunctionArray) ToAgentFunctionArrayOutputWithContext(ctx context.Context) AgentFunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentFunctionArrayOutput)
}

// Function definition
type AgentFunctionOutput struct{ *pulumi.OutputState }

func (AgentFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentFunction)(nil)).Elem()
}

func (o AgentFunctionOutput) ToAgentFunctionOutput() AgentFunctionOutput {
	return o
}

func (o AgentFunctionOutput) ToAgentFunctionOutputWithContext(ctx context.Context) AgentFunctionOutput {
	return o
}

// Description of function
func (o AgentFunctionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentFunction) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name for a resource.
func (o AgentFunctionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AgentFunction) string { return v.Name }).(pulumi.StringOutput)
}

// The parameters that the agent elicits from the user to fulfill the function.
func (o AgentFunctionOutput) Parameters() AgentParameterDetailMapOutput {
	return o.ApplyT(func(v AgentFunction) map[string]AgentParameterDetail { return v.Parameters }).(AgentParameterDetailMapOutput)
}

type AgentFunctionArrayOutput struct{ *pulumi.OutputState }

func (AgentFunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentFunction)(nil)).Elem()
}

func (o AgentFunctionArrayOutput) ToAgentFunctionArrayOutput() AgentFunctionArrayOutput {
	return o
}

func (o AgentFunctionArrayOutput) ToAgentFunctionArrayOutputWithContext(ctx context.Context) AgentFunctionArrayOutput {
	return o
}

func (o AgentFunctionArrayOutput) Index(i pulumi.IntInput) AgentFunctionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentFunction {
		return vs[0].([]AgentFunction)[vs[1].(int)]
	}).(AgentFunctionOutput)
}

// Schema of Functions
type AgentFunctionSchema struct {
	// List of Function definitions
	Functions []AgentFunction `pulumi:"functions"`
}

// AgentFunctionSchemaInput is an input type that accepts AgentFunctionSchemaArgs and AgentFunctionSchemaOutput values.
// You can construct a concrete instance of `AgentFunctionSchemaInput` via:
//
//	AgentFunctionSchemaArgs{...}
type AgentFunctionSchemaInput interface {
	pulumi.Input

	ToAgentFunctionSchemaOutput() AgentFunctionSchemaOutput
	ToAgentFunctionSchemaOutputWithContext(context.Context) AgentFunctionSchemaOutput
}

// Schema of Functions
type AgentFunctionSchemaArgs struct {
	// List of Function definitions
	Functions AgentFunctionArrayInput `pulumi:"functions"`
}

func (AgentFunctionSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentFunctionSchema)(nil)).Elem()
}

func (i AgentFunctionSchemaArgs) ToAgentFunctionSchemaOutput() AgentFunctionSchemaOutput {
	return i.ToAgentFunctionSchemaOutputWithContext(context.Background())
}

func (i AgentFunctionSchemaArgs) ToAgentFunctionSchemaOutputWithContext(ctx context.Context) AgentFunctionSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentFunctionSchemaOutput)
}

func (i AgentFunctionSchemaArgs) ToAgentFunctionSchemaPtrOutput() AgentFunctionSchemaPtrOutput {
	return i.ToAgentFunctionSchemaPtrOutputWithContext(context.Background())
}

func (i AgentFunctionSchemaArgs) ToAgentFunctionSchemaPtrOutputWithContext(ctx context.Context) AgentFunctionSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentFunctionSchemaOutput).ToAgentFunctionSchemaPtrOutputWithContext(ctx)
}

// AgentFunctionSchemaPtrInput is an input type that accepts AgentFunctionSchemaArgs, AgentFunctionSchemaPtr and AgentFunctionSchemaPtrOutput values.
// You can construct a concrete instance of `AgentFunctionSchemaPtrInput` via:
//
//	        AgentFunctionSchemaArgs{...}
//
//	or:
//
//	        nil
type AgentFunctionSchemaPtrInput interface {
	pulumi.Input

	ToAgentFunctionSchemaPtrOutput() AgentFunctionSchemaPtrOutput
	ToAgentFunctionSchemaPtrOutputWithContext(context.Context) AgentFunctionSchemaPtrOutput
}

type agentFunctionSchemaPtrType AgentFunctionSchemaArgs

func AgentFunctionSchemaPtr(v *AgentFunctionSchemaArgs) AgentFunctionSchemaPtrInput {
	return (*agentFunctionSchemaPtrType)(v)
}

func (*agentFunctionSchemaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentFunctionSchema)(nil)).Elem()
}

func (i *agentFunctionSchemaPtrType) ToAgentFunctionSchemaPtrOutput() AgentFunctionSchemaPtrOutput {
	return i.ToAgentFunctionSchemaPtrOutputWithContext(context.Background())
}

func (i *agentFunctionSchemaPtrType) ToAgentFunctionSchemaPtrOutputWithContext(ctx context.Context) AgentFunctionSchemaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentFunctionSchemaPtrOutput)
}

// Schema of Functions
type AgentFunctionSchemaOutput struct{ *pulumi.OutputState }

func (AgentFunctionSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentFunctionSchema)(nil)).Elem()
}

func (o AgentFunctionSchemaOutput) ToAgentFunctionSchemaOutput() AgentFunctionSchemaOutput {
	return o
}

func (o AgentFunctionSchemaOutput) ToAgentFunctionSchemaOutputWithContext(ctx context.Context) AgentFunctionSchemaOutput {
	return o
}

func (o AgentFunctionSchemaOutput) ToAgentFunctionSchemaPtrOutput() AgentFunctionSchemaPtrOutput {
	return o.ToAgentFunctionSchemaPtrOutputWithContext(context.Background())
}

func (o AgentFunctionSchemaOutput) ToAgentFunctionSchemaPtrOutputWithContext(ctx context.Context) AgentFunctionSchemaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentFunctionSchema) *AgentFunctionSchema {
		return &v
	}).(AgentFunctionSchemaPtrOutput)
}

// List of Function definitions
func (o AgentFunctionSchemaOutput) Functions() AgentFunctionArrayOutput {
	return o.ApplyT(func(v AgentFunctionSchema) []AgentFunction { return v.Functions }).(AgentFunctionArrayOutput)
}

type AgentFunctionSchemaPtrOutput struct{ *pulumi.OutputState }

func (AgentFunctionSchemaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentFunctionSchema)(nil)).Elem()
}

func (o AgentFunctionSchemaPtrOutput) ToAgentFunctionSchemaPtrOutput() AgentFunctionSchemaPtrOutput {
	return o
}

func (o AgentFunctionSchemaPtrOutput) ToAgentFunctionSchemaPtrOutputWithContext(ctx context.Context) AgentFunctionSchemaPtrOutput {
	return o
}

func (o AgentFunctionSchemaPtrOutput) Elem() AgentFunctionSchemaOutput {
	return o.ApplyT(func(v *AgentFunctionSchema) AgentFunctionSchema {
		if v != nil {
			return *v
		}
		var ret AgentFunctionSchema
		return ret
	}).(AgentFunctionSchemaOutput)
}

// List of Function definitions
func (o AgentFunctionSchemaPtrOutput) Functions() AgentFunctionArrayOutput {
	return o.ApplyT(func(v *AgentFunctionSchema) []AgentFunction {
		if v == nil {
			return nil
		}
		return v.Functions
	}).(AgentFunctionArrayOutput)
}

// Configuration for inference in prompt configuration
type AgentInferenceConfiguration struct {
	// Maximum length of output
	MaximumLength *float64 `pulumi:"maximumLength"`
	// List of stop sequences
	StopSequences []string `pulumi:"stopSequences"`
	// Controls randomness, higher values increase diversity
	Temperature *float64 `pulumi:"temperature"`
	// Sample from the k most likely next tokens
	TopK *float64 `pulumi:"topK"`
	// Cumulative probability cutoff for token selection
	TopP *float64 `pulumi:"topP"`
}

// AgentInferenceConfigurationInput is an input type that accepts AgentInferenceConfigurationArgs and AgentInferenceConfigurationOutput values.
// You can construct a concrete instance of `AgentInferenceConfigurationInput` via:
//
//	AgentInferenceConfigurationArgs{...}
type AgentInferenceConfigurationInput interface {
	pulumi.Input

	ToAgentInferenceConfigurationOutput() AgentInferenceConfigurationOutput
	ToAgentInferenceConfigurationOutputWithContext(context.Context) AgentInferenceConfigurationOutput
}

// Configuration for inference in prompt configuration
type AgentInferenceConfigurationArgs struct {
	// Maximum length of output
	MaximumLength pulumi.Float64PtrInput `pulumi:"maximumLength"`
	// List of stop sequences
	StopSequences pulumi.StringArrayInput `pulumi:"stopSequences"`
	// Controls randomness, higher values increase diversity
	Temperature pulumi.Float64PtrInput `pulumi:"temperature"`
	// Sample from the k most likely next tokens
	TopK pulumi.Float64PtrInput `pulumi:"topK"`
	// Cumulative probability cutoff for token selection
	TopP pulumi.Float64PtrInput `pulumi:"topP"`
}

func (AgentInferenceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentInferenceConfiguration)(nil)).Elem()
}

func (i AgentInferenceConfigurationArgs) ToAgentInferenceConfigurationOutput() AgentInferenceConfigurationOutput {
	return i.ToAgentInferenceConfigurationOutputWithContext(context.Background())
}

func (i AgentInferenceConfigurationArgs) ToAgentInferenceConfigurationOutputWithContext(ctx context.Context) AgentInferenceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentInferenceConfigurationOutput)
}

func (i AgentInferenceConfigurationArgs) ToAgentInferenceConfigurationPtrOutput() AgentInferenceConfigurationPtrOutput {
	return i.ToAgentInferenceConfigurationPtrOutputWithContext(context.Background())
}

func (i AgentInferenceConfigurationArgs) ToAgentInferenceConfigurationPtrOutputWithContext(ctx context.Context) AgentInferenceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentInferenceConfigurationOutput).ToAgentInferenceConfigurationPtrOutputWithContext(ctx)
}

// AgentInferenceConfigurationPtrInput is an input type that accepts AgentInferenceConfigurationArgs, AgentInferenceConfigurationPtr and AgentInferenceConfigurationPtrOutput values.
// You can construct a concrete instance of `AgentInferenceConfigurationPtrInput` via:
//
//	        AgentInferenceConfigurationArgs{...}
//
//	or:
//
//	        nil
type AgentInferenceConfigurationPtrInput interface {
	pulumi.Input

	ToAgentInferenceConfigurationPtrOutput() AgentInferenceConfigurationPtrOutput
	ToAgentInferenceConfigurationPtrOutputWithContext(context.Context) AgentInferenceConfigurationPtrOutput
}

type agentInferenceConfigurationPtrType AgentInferenceConfigurationArgs

func AgentInferenceConfigurationPtr(v *AgentInferenceConfigurationArgs) AgentInferenceConfigurationPtrInput {
	return (*agentInferenceConfigurationPtrType)(v)
}

func (*agentInferenceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentInferenceConfiguration)(nil)).Elem()
}

func (i *agentInferenceConfigurationPtrType) ToAgentInferenceConfigurationPtrOutput() AgentInferenceConfigurationPtrOutput {
	return i.ToAgentInferenceConfigurationPtrOutputWithContext(context.Background())
}

func (i *agentInferenceConfigurationPtrType) ToAgentInferenceConfigurationPtrOutputWithContext(ctx context.Context) AgentInferenceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentInferenceConfigurationPtrOutput)
}

// Configuration for inference in prompt configuration
type AgentInferenceConfigurationOutput struct{ *pulumi.OutputState }

func (AgentInferenceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentInferenceConfiguration)(nil)).Elem()
}

func (o AgentInferenceConfigurationOutput) ToAgentInferenceConfigurationOutput() AgentInferenceConfigurationOutput {
	return o
}

func (o AgentInferenceConfigurationOutput) ToAgentInferenceConfigurationOutputWithContext(ctx context.Context) AgentInferenceConfigurationOutput {
	return o
}

func (o AgentInferenceConfigurationOutput) ToAgentInferenceConfigurationPtrOutput() AgentInferenceConfigurationPtrOutput {
	return o.ToAgentInferenceConfigurationPtrOutputWithContext(context.Background())
}

func (o AgentInferenceConfigurationOutput) ToAgentInferenceConfigurationPtrOutputWithContext(ctx context.Context) AgentInferenceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentInferenceConfiguration) *AgentInferenceConfiguration {
		return &v
	}).(AgentInferenceConfigurationPtrOutput)
}

// Maximum length of output
func (o AgentInferenceConfigurationOutput) MaximumLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AgentInferenceConfiguration) *float64 { return v.MaximumLength }).(pulumi.Float64PtrOutput)
}

// List of stop sequences
func (o AgentInferenceConfigurationOutput) StopSequences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AgentInferenceConfiguration) []string { return v.StopSequences }).(pulumi.StringArrayOutput)
}

// Controls randomness, higher values increase diversity
func (o AgentInferenceConfigurationOutput) Temperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AgentInferenceConfiguration) *float64 { return v.Temperature }).(pulumi.Float64PtrOutput)
}

// Sample from the k most likely next tokens
func (o AgentInferenceConfigurationOutput) TopK() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AgentInferenceConfiguration) *float64 { return v.TopK }).(pulumi.Float64PtrOutput)
}

// Cumulative probability cutoff for token selection
func (o AgentInferenceConfigurationOutput) TopP() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AgentInferenceConfiguration) *float64 { return v.TopP }).(pulumi.Float64PtrOutput)
}

type AgentInferenceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AgentInferenceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentInferenceConfiguration)(nil)).Elem()
}

func (o AgentInferenceConfigurationPtrOutput) ToAgentInferenceConfigurationPtrOutput() AgentInferenceConfigurationPtrOutput {
	return o
}

func (o AgentInferenceConfigurationPtrOutput) ToAgentInferenceConfigurationPtrOutputWithContext(ctx context.Context) AgentInferenceConfigurationPtrOutput {
	return o
}

func (o AgentInferenceConfigurationPtrOutput) Elem() AgentInferenceConfigurationOutput {
	return o.ApplyT(func(v *AgentInferenceConfiguration) AgentInferenceConfiguration {
		if v != nil {
			return *v
		}
		var ret AgentInferenceConfiguration
		return ret
	}).(AgentInferenceConfigurationOutput)
}

// Maximum length of output
func (o AgentInferenceConfigurationPtrOutput) MaximumLength() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AgentInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.MaximumLength
	}).(pulumi.Float64PtrOutput)
}

// List of stop sequences
func (o AgentInferenceConfigurationPtrOutput) StopSequences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AgentInferenceConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.StopSequences
	}).(pulumi.StringArrayOutput)
}

// Controls randomness, higher values increase diversity
func (o AgentInferenceConfigurationPtrOutput) Temperature() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AgentInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.Temperature
	}).(pulumi.Float64PtrOutput)
}

// Sample from the k most likely next tokens
func (o AgentInferenceConfigurationPtrOutput) TopK() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AgentInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TopK
	}).(pulumi.Float64PtrOutput)
}

// Cumulative probability cutoff for token selection
func (o AgentInferenceConfigurationPtrOutput) TopP() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *AgentInferenceConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return v.TopP
	}).(pulumi.Float64PtrOutput)
}

// Agent Knowledge Base
type AgentKnowledgeBase struct {
	// Description of the Resource.
	Description string `pulumi:"description"`
	// Identifier for a resource.
	KnowledgeBaseId string `pulumi:"knowledgeBaseId"`
	// Specifies whether to use the knowledge base or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request.
	KnowledgeBaseState *AgentKnowledgeBaseState `pulumi:"knowledgeBaseState"`
}

// AgentKnowledgeBaseInput is an input type that accepts AgentKnowledgeBaseArgs and AgentKnowledgeBaseOutput values.
// You can construct a concrete instance of `AgentKnowledgeBaseInput` via:
//
//	AgentKnowledgeBaseArgs{...}
type AgentKnowledgeBaseInput interface {
	pulumi.Input

	ToAgentKnowledgeBaseOutput() AgentKnowledgeBaseOutput
	ToAgentKnowledgeBaseOutputWithContext(context.Context) AgentKnowledgeBaseOutput
}

// Agent Knowledge Base
type AgentKnowledgeBaseArgs struct {
	// Description of the Resource.
	Description pulumi.StringInput `pulumi:"description"`
	// Identifier for a resource.
	KnowledgeBaseId pulumi.StringInput `pulumi:"knowledgeBaseId"`
	// Specifies whether to use the knowledge base or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request.
	KnowledgeBaseState AgentKnowledgeBaseStatePtrInput `pulumi:"knowledgeBaseState"`
}

func (AgentKnowledgeBaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentKnowledgeBase)(nil)).Elem()
}

func (i AgentKnowledgeBaseArgs) ToAgentKnowledgeBaseOutput() AgentKnowledgeBaseOutput {
	return i.ToAgentKnowledgeBaseOutputWithContext(context.Background())
}

func (i AgentKnowledgeBaseArgs) ToAgentKnowledgeBaseOutputWithContext(ctx context.Context) AgentKnowledgeBaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentKnowledgeBaseOutput)
}

// AgentKnowledgeBaseArrayInput is an input type that accepts AgentKnowledgeBaseArray and AgentKnowledgeBaseArrayOutput values.
// You can construct a concrete instance of `AgentKnowledgeBaseArrayInput` via:
//
//	AgentKnowledgeBaseArray{ AgentKnowledgeBaseArgs{...} }
type AgentKnowledgeBaseArrayInput interface {
	pulumi.Input

	ToAgentKnowledgeBaseArrayOutput() AgentKnowledgeBaseArrayOutput
	ToAgentKnowledgeBaseArrayOutputWithContext(context.Context) AgentKnowledgeBaseArrayOutput
}

type AgentKnowledgeBaseArray []AgentKnowledgeBaseInput

func (AgentKnowledgeBaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentKnowledgeBase)(nil)).Elem()
}

func (i AgentKnowledgeBaseArray) ToAgentKnowledgeBaseArrayOutput() AgentKnowledgeBaseArrayOutput {
	return i.ToAgentKnowledgeBaseArrayOutputWithContext(context.Background())
}

func (i AgentKnowledgeBaseArray) ToAgentKnowledgeBaseArrayOutputWithContext(ctx context.Context) AgentKnowledgeBaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentKnowledgeBaseArrayOutput)
}

// Agent Knowledge Base
type AgentKnowledgeBaseOutput struct{ *pulumi.OutputState }

func (AgentKnowledgeBaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentKnowledgeBase)(nil)).Elem()
}

func (o AgentKnowledgeBaseOutput) ToAgentKnowledgeBaseOutput() AgentKnowledgeBaseOutput {
	return o
}

func (o AgentKnowledgeBaseOutput) ToAgentKnowledgeBaseOutputWithContext(ctx context.Context) AgentKnowledgeBaseOutput {
	return o
}

// Description of the Resource.
func (o AgentKnowledgeBaseOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v AgentKnowledgeBase) string { return v.Description }).(pulumi.StringOutput)
}

// Identifier for a resource.
func (o AgentKnowledgeBaseOutput) KnowledgeBaseId() pulumi.StringOutput {
	return o.ApplyT(func(v AgentKnowledgeBase) string { return v.KnowledgeBaseId }).(pulumi.StringOutput)
}

// Specifies whether to use the knowledge base or not when sending an [InvokeAgent](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent-runtime_InvokeAgent.html) request.
func (o AgentKnowledgeBaseOutput) KnowledgeBaseState() AgentKnowledgeBaseStatePtrOutput {
	return o.ApplyT(func(v AgentKnowledgeBase) *AgentKnowledgeBaseState { return v.KnowledgeBaseState }).(AgentKnowledgeBaseStatePtrOutput)
}

type AgentKnowledgeBaseArrayOutput struct{ *pulumi.OutputState }

func (AgentKnowledgeBaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentKnowledgeBase)(nil)).Elem()
}

func (o AgentKnowledgeBaseArrayOutput) ToAgentKnowledgeBaseArrayOutput() AgentKnowledgeBaseArrayOutput {
	return o
}

func (o AgentKnowledgeBaseArrayOutput) ToAgentKnowledgeBaseArrayOutputWithContext(ctx context.Context) AgentKnowledgeBaseArrayOutput {
	return o
}

func (o AgentKnowledgeBaseArrayOutput) Index(i pulumi.IntInput) AgentKnowledgeBaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentKnowledgeBase {
		return vs[0].([]AgentKnowledgeBase)[vs[1].(int)]
	}).(AgentKnowledgeBaseOutput)
}

// Parameter detail
type AgentParameterDetail struct {
	// Description of function parameter.
	Description *string `pulumi:"description"`
	// Information about if a parameter is required for function call. Default to false.
	Required *bool `pulumi:"required"`
	// The data type of the parameter.
	Type AgentType `pulumi:"type"`
}

// AgentParameterDetailInput is an input type that accepts AgentParameterDetailArgs and AgentParameterDetailOutput values.
// You can construct a concrete instance of `AgentParameterDetailInput` via:
//
//	AgentParameterDetailArgs{...}
type AgentParameterDetailInput interface {
	pulumi.Input

	ToAgentParameterDetailOutput() AgentParameterDetailOutput
	ToAgentParameterDetailOutputWithContext(context.Context) AgentParameterDetailOutput
}

// Parameter detail
type AgentParameterDetailArgs struct {
	// Description of function parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Information about if a parameter is required for function call. Default to false.
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// The data type of the parameter.
	Type AgentTypeInput `pulumi:"type"`
}

func (AgentParameterDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentParameterDetail)(nil)).Elem()
}

func (i AgentParameterDetailArgs) ToAgentParameterDetailOutput() AgentParameterDetailOutput {
	return i.ToAgentParameterDetailOutputWithContext(context.Background())
}

func (i AgentParameterDetailArgs) ToAgentParameterDetailOutputWithContext(ctx context.Context) AgentParameterDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentParameterDetailOutput)
}

// AgentParameterDetailMapInput is an input type that accepts AgentParameterDetailMap and AgentParameterDetailMapOutput values.
// You can construct a concrete instance of `AgentParameterDetailMapInput` via:
//
//	AgentParameterDetailMap{ "key": AgentParameterDetailArgs{...} }
type AgentParameterDetailMapInput interface {
	pulumi.Input

	ToAgentParameterDetailMapOutput() AgentParameterDetailMapOutput
	ToAgentParameterDetailMapOutputWithContext(context.Context) AgentParameterDetailMapOutput
}

type AgentParameterDetailMap map[string]AgentParameterDetailInput

func (AgentParameterDetailMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AgentParameterDetail)(nil)).Elem()
}

func (i AgentParameterDetailMap) ToAgentParameterDetailMapOutput() AgentParameterDetailMapOutput {
	return i.ToAgentParameterDetailMapOutputWithContext(context.Background())
}

func (i AgentParameterDetailMap) ToAgentParameterDetailMapOutputWithContext(ctx context.Context) AgentParameterDetailMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentParameterDetailMapOutput)
}

// Parameter detail
type AgentParameterDetailOutput struct{ *pulumi.OutputState }

func (AgentParameterDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentParameterDetail)(nil)).Elem()
}

func (o AgentParameterDetailOutput) ToAgentParameterDetailOutput() AgentParameterDetailOutput {
	return o
}

func (o AgentParameterDetailOutput) ToAgentParameterDetailOutputWithContext(ctx context.Context) AgentParameterDetailOutput {
	return o
}

// Description of function parameter.
func (o AgentParameterDetailOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentParameterDetail) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Information about if a parameter is required for function call. Default to false.
func (o AgentParameterDetailOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AgentParameterDetail) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// The data type of the parameter.
func (o AgentParameterDetailOutput) Type() AgentTypeOutput {
	return o.ApplyT(func(v AgentParameterDetail) AgentType { return v.Type }).(AgentTypeOutput)
}

type AgentParameterDetailMapOutput struct{ *pulumi.OutputState }

func (AgentParameterDetailMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AgentParameterDetail)(nil)).Elem()
}

func (o AgentParameterDetailMapOutput) ToAgentParameterDetailMapOutput() AgentParameterDetailMapOutput {
	return o
}

func (o AgentParameterDetailMapOutput) ToAgentParameterDetailMapOutputWithContext(ctx context.Context) AgentParameterDetailMapOutput {
	return o
}

func (o AgentParameterDetailMapOutput) MapIndex(k pulumi.StringInput) AgentParameterDetailOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AgentParameterDetail {
		return vs[0].(map[string]AgentParameterDetail)[vs[1].(string)]
	}).(AgentParameterDetailOutput)
}

// BasePromptConfiguration per Prompt Type.
type AgentPromptConfiguration struct {
	// Base Prompt Template.
	BasePromptTemplate *string `pulumi:"basePromptTemplate"`
	// Contains inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the `promptType` . For more information, see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html) .
	InferenceConfiguration *AgentInferenceConfiguration `pulumi:"inferenceConfiguration"`
	// Specifies whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the `promptType` . If you set the field as `OVERRIDEN` , the `overrideLambda` field in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html) must be specified with the ARN of a Lambda function.
	ParserMode *AgentCreationMode `pulumi:"parserMode"`
	// Specifies whether to override the default prompt template for this `promptType` . Set this value to `OVERRIDDEN` to use the prompt that you provide in the `basePromptTemplate` . If you leave it as `DEFAULT` , the agent uses a default prompt template.
	PromptCreationMode *AgentCreationMode `pulumi:"promptCreationMode"`
	// Specifies whether to allow the agent to carry out the step specified in the `promptType` . If you set this value to `DISABLED` , the agent skips that step. The default state for each `promptType` is as follows.
	//
	// - `PRE_PROCESSING` – `ENABLED`
	// - `ORCHESTRATION` – `ENABLED`
	// - `KNOWLEDGE_BASE_RESPONSE_GENERATION` – `ENABLED`
	// - `POST_PROCESSING` – `DISABLED`
	PromptState *AgentPromptState `pulumi:"promptState"`
	// The step in the agent sequence that this prompt configuration applies to.
	PromptType *AgentPromptType `pulumi:"promptType"`
}

// AgentPromptConfigurationInput is an input type that accepts AgentPromptConfigurationArgs and AgentPromptConfigurationOutput values.
// You can construct a concrete instance of `AgentPromptConfigurationInput` via:
//
//	AgentPromptConfigurationArgs{...}
type AgentPromptConfigurationInput interface {
	pulumi.Input

	ToAgentPromptConfigurationOutput() AgentPromptConfigurationOutput
	ToAgentPromptConfigurationOutputWithContext(context.Context) AgentPromptConfigurationOutput
}

// BasePromptConfiguration per Prompt Type.
type AgentPromptConfigurationArgs struct {
	// Base Prompt Template.
	BasePromptTemplate pulumi.StringPtrInput `pulumi:"basePromptTemplate"`
	// Contains inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the `promptType` . For more information, see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html) .
	InferenceConfiguration AgentInferenceConfigurationPtrInput `pulumi:"inferenceConfiguration"`
	// Specifies whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the `promptType` . If you set the field as `OVERRIDEN` , the `overrideLambda` field in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html) must be specified with the ARN of a Lambda function.
	ParserMode AgentCreationModePtrInput `pulumi:"parserMode"`
	// Specifies whether to override the default prompt template for this `promptType` . Set this value to `OVERRIDDEN` to use the prompt that you provide in the `basePromptTemplate` . If you leave it as `DEFAULT` , the agent uses a default prompt template.
	PromptCreationMode AgentCreationModePtrInput `pulumi:"promptCreationMode"`
	// Specifies whether to allow the agent to carry out the step specified in the `promptType` . If you set this value to `DISABLED` , the agent skips that step. The default state for each `promptType` is as follows.
	//
	// - `PRE_PROCESSING` – `ENABLED`
	// - `ORCHESTRATION` – `ENABLED`
	// - `KNOWLEDGE_BASE_RESPONSE_GENERATION` – `ENABLED`
	// - `POST_PROCESSING` – `DISABLED`
	PromptState AgentPromptStatePtrInput `pulumi:"promptState"`
	// The step in the agent sequence that this prompt configuration applies to.
	PromptType AgentPromptTypePtrInput `pulumi:"promptType"`
}

func (AgentPromptConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPromptConfiguration)(nil)).Elem()
}

func (i AgentPromptConfigurationArgs) ToAgentPromptConfigurationOutput() AgentPromptConfigurationOutput {
	return i.ToAgentPromptConfigurationOutputWithContext(context.Background())
}

func (i AgentPromptConfigurationArgs) ToAgentPromptConfigurationOutputWithContext(ctx context.Context) AgentPromptConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptConfigurationOutput)
}

// AgentPromptConfigurationArrayInput is an input type that accepts AgentPromptConfigurationArray and AgentPromptConfigurationArrayOutput values.
// You can construct a concrete instance of `AgentPromptConfigurationArrayInput` via:
//
//	AgentPromptConfigurationArray{ AgentPromptConfigurationArgs{...} }
type AgentPromptConfigurationArrayInput interface {
	pulumi.Input

	ToAgentPromptConfigurationArrayOutput() AgentPromptConfigurationArrayOutput
	ToAgentPromptConfigurationArrayOutputWithContext(context.Context) AgentPromptConfigurationArrayOutput
}

type AgentPromptConfigurationArray []AgentPromptConfigurationInput

func (AgentPromptConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentPromptConfiguration)(nil)).Elem()
}

func (i AgentPromptConfigurationArray) ToAgentPromptConfigurationArrayOutput() AgentPromptConfigurationArrayOutput {
	return i.ToAgentPromptConfigurationArrayOutputWithContext(context.Background())
}

func (i AgentPromptConfigurationArray) ToAgentPromptConfigurationArrayOutputWithContext(ctx context.Context) AgentPromptConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptConfigurationArrayOutput)
}

// BasePromptConfiguration per Prompt Type.
type AgentPromptConfigurationOutput struct{ *pulumi.OutputState }

func (AgentPromptConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPromptConfiguration)(nil)).Elem()
}

func (o AgentPromptConfigurationOutput) ToAgentPromptConfigurationOutput() AgentPromptConfigurationOutput {
	return o
}

func (o AgentPromptConfigurationOutput) ToAgentPromptConfigurationOutputWithContext(ctx context.Context) AgentPromptConfigurationOutput {
	return o
}

// Base Prompt Template.
func (o AgentPromptConfigurationOutput) BasePromptTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPromptConfiguration) *string { return v.BasePromptTemplate }).(pulumi.StringPtrOutput)
}

// Contains inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the `promptType` . For more information, see [Inference parameters for foundation models](https://docs.aws.amazon.com/bedrock/latest/userguide/model-parameters.html) .
func (o AgentPromptConfigurationOutput) InferenceConfiguration() AgentInferenceConfigurationPtrOutput {
	return o.ApplyT(func(v AgentPromptConfiguration) *AgentInferenceConfiguration { return v.InferenceConfiguration }).(AgentInferenceConfigurationPtrOutput)
}

// Specifies whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the `promptType` . If you set the field as `OVERRIDEN` , the `overrideLambda` field in the [PromptOverrideConfiguration](https://docs.aws.amazon.com/bedrock/latest/APIReference/API_agent_PromptOverrideConfiguration.html) must be specified with the ARN of a Lambda function.
func (o AgentPromptConfigurationOutput) ParserMode() AgentCreationModePtrOutput {
	return o.ApplyT(func(v AgentPromptConfiguration) *AgentCreationMode { return v.ParserMode }).(AgentCreationModePtrOutput)
}

// Specifies whether to override the default prompt template for this `promptType` . Set this value to `OVERRIDDEN` to use the prompt that you provide in the `basePromptTemplate` . If you leave it as `DEFAULT` , the agent uses a default prompt template.
func (o AgentPromptConfigurationOutput) PromptCreationMode() AgentCreationModePtrOutput {
	return o.ApplyT(func(v AgentPromptConfiguration) *AgentCreationMode { return v.PromptCreationMode }).(AgentCreationModePtrOutput)
}

// Specifies whether to allow the agent to carry out the step specified in the `promptType` . If you set this value to `DISABLED` , the agent skips that step. The default state for each `promptType` is as follows.
//
// - `PRE_PROCESSING` – `ENABLED`
// - `ORCHESTRATION` – `ENABLED`
// - `KNOWLEDGE_BASE_RESPONSE_GENERATION` – `ENABLED`
// - `POST_PROCESSING` – `DISABLED`
func (o AgentPromptConfigurationOutput) PromptState() AgentPromptStatePtrOutput {
	return o.ApplyT(func(v AgentPromptConfiguration) *AgentPromptState { return v.PromptState }).(AgentPromptStatePtrOutput)
}

// The step in the agent sequence that this prompt configuration applies to.
func (o AgentPromptConfigurationOutput) PromptType() AgentPromptTypePtrOutput {
	return o.ApplyT(func(v AgentPromptConfiguration) *AgentPromptType { return v.PromptType }).(AgentPromptTypePtrOutput)
}

type AgentPromptConfigurationArrayOutput struct{ *pulumi.OutputState }

func (AgentPromptConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentPromptConfiguration)(nil)).Elem()
}

func (o AgentPromptConfigurationArrayOutput) ToAgentPromptConfigurationArrayOutput() AgentPromptConfigurationArrayOutput {
	return o
}

func (o AgentPromptConfigurationArrayOutput) ToAgentPromptConfigurationArrayOutputWithContext(ctx context.Context) AgentPromptConfigurationArrayOutput {
	return o
}

func (o AgentPromptConfigurationArrayOutput) Index(i pulumi.IntInput) AgentPromptConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentPromptConfiguration {
		return vs[0].([]AgentPromptConfiguration)[vs[1].(int)]
	}).(AgentPromptConfigurationOutput)
}

// Configuration for prompt override.
type AgentPromptOverrideConfiguration struct {
	// ARN of a Lambda.
	OverrideLambda *string `pulumi:"overrideLambda"`
	// List of BasePromptConfiguration
	PromptConfigurations []AgentPromptConfiguration `pulumi:"promptConfigurations"`
}

// AgentPromptOverrideConfigurationInput is an input type that accepts AgentPromptOverrideConfigurationArgs and AgentPromptOverrideConfigurationOutput values.
// You can construct a concrete instance of `AgentPromptOverrideConfigurationInput` via:
//
//	AgentPromptOverrideConfigurationArgs{...}
type AgentPromptOverrideConfigurationInput interface {
	pulumi.Input

	ToAgentPromptOverrideConfigurationOutput() AgentPromptOverrideConfigurationOutput
	ToAgentPromptOverrideConfigurationOutputWithContext(context.Context) AgentPromptOverrideConfigurationOutput
}

// Configuration for prompt override.
type AgentPromptOverrideConfigurationArgs struct {
	// ARN of a Lambda.
	OverrideLambda pulumi.StringPtrInput `pulumi:"overrideLambda"`
	// List of BasePromptConfiguration
	PromptConfigurations AgentPromptConfigurationArrayInput `pulumi:"promptConfigurations"`
}

func (AgentPromptOverrideConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPromptOverrideConfiguration)(nil)).Elem()
}

func (i AgentPromptOverrideConfigurationArgs) ToAgentPromptOverrideConfigurationOutput() AgentPromptOverrideConfigurationOutput {
	return i.ToAgentPromptOverrideConfigurationOutputWithContext(context.Background())
}

func (i AgentPromptOverrideConfigurationArgs) ToAgentPromptOverrideConfigurationOutputWithContext(ctx context.Context) AgentPromptOverrideConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptOverrideConfigurationOutput)
}

func (i AgentPromptOverrideConfigurationArgs) ToAgentPromptOverrideConfigurationPtrOutput() AgentPromptOverrideConfigurationPtrOutput {
	return i.ToAgentPromptOverrideConfigurationPtrOutputWithContext(context.Background())
}

func (i AgentPromptOverrideConfigurationArgs) ToAgentPromptOverrideConfigurationPtrOutputWithContext(ctx context.Context) AgentPromptOverrideConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptOverrideConfigurationOutput).ToAgentPromptOverrideConfigurationPtrOutputWithContext(ctx)
}

// AgentPromptOverrideConfigurationPtrInput is an input type that accepts AgentPromptOverrideConfigurationArgs, AgentPromptOverrideConfigurationPtr and AgentPromptOverrideConfigurationPtrOutput values.
// You can construct a concrete instance of `AgentPromptOverrideConfigurationPtrInput` via:
//
//	        AgentPromptOverrideConfigurationArgs{...}
//
//	or:
//
//	        nil
type AgentPromptOverrideConfigurationPtrInput interface {
	pulumi.Input

	ToAgentPromptOverrideConfigurationPtrOutput() AgentPromptOverrideConfigurationPtrOutput
	ToAgentPromptOverrideConfigurationPtrOutputWithContext(context.Context) AgentPromptOverrideConfigurationPtrOutput
}

type agentPromptOverrideConfigurationPtrType AgentPromptOverrideConfigurationArgs

func AgentPromptOverrideConfigurationPtr(v *AgentPromptOverrideConfigurationArgs) AgentPromptOverrideConfigurationPtrInput {
	return (*agentPromptOverrideConfigurationPtrType)(v)
}

func (*agentPromptOverrideConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPromptOverrideConfiguration)(nil)).Elem()
}

func (i *agentPromptOverrideConfigurationPtrType) ToAgentPromptOverrideConfigurationPtrOutput() AgentPromptOverrideConfigurationPtrOutput {
	return i.ToAgentPromptOverrideConfigurationPtrOutputWithContext(context.Background())
}

func (i *agentPromptOverrideConfigurationPtrType) ToAgentPromptOverrideConfigurationPtrOutputWithContext(ctx context.Context) AgentPromptOverrideConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptOverrideConfigurationPtrOutput)
}

// Configuration for prompt override.
type AgentPromptOverrideConfigurationOutput struct{ *pulumi.OutputState }

func (AgentPromptOverrideConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPromptOverrideConfiguration)(nil)).Elem()
}

func (o AgentPromptOverrideConfigurationOutput) ToAgentPromptOverrideConfigurationOutput() AgentPromptOverrideConfigurationOutput {
	return o
}

func (o AgentPromptOverrideConfigurationOutput) ToAgentPromptOverrideConfigurationOutputWithContext(ctx context.Context) AgentPromptOverrideConfigurationOutput {
	return o
}

func (o AgentPromptOverrideConfigurationOutput) ToAgentPromptOverrideConfigurationPtrOutput() AgentPromptOverrideConfigurationPtrOutput {
	return o.ToAgentPromptOverrideConfigurationPtrOutputWithContext(context.Background())
}

func (o AgentPromptOverrideConfigurationOutput) ToAgentPromptOverrideConfigurationPtrOutputWithContext(ctx context.Context) AgentPromptOverrideConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentPromptOverrideConfiguration) *AgentPromptOverrideConfiguration {
		return &v
	}).(AgentPromptOverrideConfigurationPtrOutput)
}

// ARN of a Lambda.
func (o AgentPromptOverrideConfigurationOutput) OverrideLambda() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentPromptOverrideConfiguration) *string { return v.OverrideLambda }).(pulumi.StringPtrOutput)
}

// List of BasePromptConfiguration
func (o AgentPromptOverrideConfigurationOutput) PromptConfigurations() AgentPromptConfigurationArrayOutput {
	return o.ApplyT(func(v AgentPromptOverrideConfiguration) []AgentPromptConfiguration { return v.PromptConfigurations }).(AgentPromptConfigurationArrayOutput)
}

type AgentPromptOverrideConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AgentPromptOverrideConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPromptOverrideConfiguration)(nil)).Elem()
}

func (o AgentPromptOverrideConfigurationPtrOutput) ToAgentPromptOverrideConfigurationPtrOutput() AgentPromptOverrideConfigurationPtrOutput {
	return o
}

func (o AgentPromptOverrideConfigurationPtrOutput) ToAgentPromptOverrideConfigurationPtrOutputWithContext(ctx context.Context) AgentPromptOverrideConfigurationPtrOutput {
	return o
}

func (o AgentPromptOverrideConfigurationPtrOutput) Elem() AgentPromptOverrideConfigurationOutput {
	return o.ApplyT(func(v *AgentPromptOverrideConfiguration) AgentPromptOverrideConfiguration {
		if v != nil {
			return *v
		}
		var ret AgentPromptOverrideConfiguration
		return ret
	}).(AgentPromptOverrideConfigurationOutput)
}

// ARN of a Lambda.
func (o AgentPromptOverrideConfigurationPtrOutput) OverrideLambda() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPromptOverrideConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.OverrideLambda
	}).(pulumi.StringPtrOutput)
}

// List of BasePromptConfiguration
func (o AgentPromptOverrideConfigurationPtrOutput) PromptConfigurations() AgentPromptConfigurationArrayOutput {
	return o.ApplyT(func(v *AgentPromptOverrideConfiguration) []AgentPromptConfiguration {
		if v == nil {
			return nil
		}
		return v.PromptConfigurations
	}).(AgentPromptConfigurationArrayOutput)
}

// The identifier for the S3 resource.
type AgentS3Identifier struct {
	// A bucket in S3.
	S3BucketName *string `pulumi:"s3BucketName"`
	// A object key in S3.
	S3ObjectKey *string `pulumi:"s3ObjectKey"`
}

// AgentS3IdentifierInput is an input type that accepts AgentS3IdentifierArgs and AgentS3IdentifierOutput values.
// You can construct a concrete instance of `AgentS3IdentifierInput` via:
//
//	AgentS3IdentifierArgs{...}
type AgentS3IdentifierInput interface {
	pulumi.Input

	ToAgentS3IdentifierOutput() AgentS3IdentifierOutput
	ToAgentS3IdentifierOutputWithContext(context.Context) AgentS3IdentifierOutput
}

// The identifier for the S3 resource.
type AgentS3IdentifierArgs struct {
	// A bucket in S3.
	S3BucketName pulumi.StringPtrInput `pulumi:"s3BucketName"`
	// A object key in S3.
	S3ObjectKey pulumi.StringPtrInput `pulumi:"s3ObjectKey"`
}

func (AgentS3IdentifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentS3Identifier)(nil)).Elem()
}

func (i AgentS3IdentifierArgs) ToAgentS3IdentifierOutput() AgentS3IdentifierOutput {
	return i.ToAgentS3IdentifierOutputWithContext(context.Background())
}

func (i AgentS3IdentifierArgs) ToAgentS3IdentifierOutputWithContext(ctx context.Context) AgentS3IdentifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentS3IdentifierOutput)
}

func (i AgentS3IdentifierArgs) ToAgentS3IdentifierPtrOutput() AgentS3IdentifierPtrOutput {
	return i.ToAgentS3IdentifierPtrOutputWithContext(context.Background())
}

func (i AgentS3IdentifierArgs) ToAgentS3IdentifierPtrOutputWithContext(ctx context.Context) AgentS3IdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentS3IdentifierOutput).ToAgentS3IdentifierPtrOutputWithContext(ctx)
}

// AgentS3IdentifierPtrInput is an input type that accepts AgentS3IdentifierArgs, AgentS3IdentifierPtr and AgentS3IdentifierPtrOutput values.
// You can construct a concrete instance of `AgentS3IdentifierPtrInput` via:
//
//	        AgentS3IdentifierArgs{...}
//
//	or:
//
//	        nil
type AgentS3IdentifierPtrInput interface {
	pulumi.Input

	ToAgentS3IdentifierPtrOutput() AgentS3IdentifierPtrOutput
	ToAgentS3IdentifierPtrOutputWithContext(context.Context) AgentS3IdentifierPtrOutput
}

type agentS3IdentifierPtrType AgentS3IdentifierArgs

func AgentS3IdentifierPtr(v *AgentS3IdentifierArgs) AgentS3IdentifierPtrInput {
	return (*agentS3IdentifierPtrType)(v)
}

func (*agentS3IdentifierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentS3Identifier)(nil)).Elem()
}

func (i *agentS3IdentifierPtrType) ToAgentS3IdentifierPtrOutput() AgentS3IdentifierPtrOutput {
	return i.ToAgentS3IdentifierPtrOutputWithContext(context.Background())
}

func (i *agentS3IdentifierPtrType) ToAgentS3IdentifierPtrOutputWithContext(ctx context.Context) AgentS3IdentifierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentS3IdentifierPtrOutput)
}

// The identifier for the S3 resource.
type AgentS3IdentifierOutput struct{ *pulumi.OutputState }

func (AgentS3IdentifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentS3Identifier)(nil)).Elem()
}

func (o AgentS3IdentifierOutput) ToAgentS3IdentifierOutput() AgentS3IdentifierOutput {
	return o
}

func (o AgentS3IdentifierOutput) ToAgentS3IdentifierOutputWithContext(ctx context.Context) AgentS3IdentifierOutput {
	return o
}

func (o AgentS3IdentifierOutput) ToAgentS3IdentifierPtrOutput() AgentS3IdentifierPtrOutput {
	return o.ToAgentS3IdentifierPtrOutputWithContext(context.Background())
}

func (o AgentS3IdentifierOutput) ToAgentS3IdentifierPtrOutputWithContext(ctx context.Context) AgentS3IdentifierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentS3Identifier) *AgentS3Identifier {
		return &v
	}).(AgentS3IdentifierPtrOutput)
}

// A bucket in S3.
func (o AgentS3IdentifierOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentS3Identifier) *string { return v.S3BucketName }).(pulumi.StringPtrOutput)
}

// A object key in S3.
func (o AgentS3IdentifierOutput) S3ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentS3Identifier) *string { return v.S3ObjectKey }).(pulumi.StringPtrOutput)
}

type AgentS3IdentifierPtrOutput struct{ *pulumi.OutputState }

func (AgentS3IdentifierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentS3Identifier)(nil)).Elem()
}

func (o AgentS3IdentifierPtrOutput) ToAgentS3IdentifierPtrOutput() AgentS3IdentifierPtrOutput {
	return o
}

func (o AgentS3IdentifierPtrOutput) ToAgentS3IdentifierPtrOutputWithContext(ctx context.Context) AgentS3IdentifierPtrOutput {
	return o
}

func (o AgentS3IdentifierPtrOutput) Elem() AgentS3IdentifierOutput {
	return o.ApplyT(func(v *AgentS3Identifier) AgentS3Identifier {
		if v != nil {
			return *v
		}
		var ret AgentS3Identifier
		return ret
	}).(AgentS3IdentifierOutput)
}

// A bucket in S3.
func (o AgentS3IdentifierPtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentS3Identifier) *string {
		if v == nil {
			return nil
		}
		return v.S3BucketName
	}).(pulumi.StringPtrOutput)
}

// A object key in S3.
func (o AgentS3IdentifierPtrOutput) S3ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentS3Identifier) *string {
		if v == nil {
			return nil
		}
		return v.S3ObjectKey
	}).(pulumi.StringPtrOutput)
}

// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
type DataSourceChunkingConfiguration struct {
	// Knowledge base can split your source data into chunks. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for `NONE` , then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.
	//
	// - `FIXED_SIZE` – Amazon Bedrock splits your source data into chunks of the approximate size that you set in the `fixedSizeChunkingConfiguration` .
	// - `NONE` – Amazon Bedrock treats each file as one chunk. If you choose this option, you may want to pre-process your documents by splitting them into separate files.
	ChunkingStrategy DataSourceChunkingStrategy `pulumi:"chunkingStrategy"`
	// Configurations for when you choose fixed-size chunking. If you set the `chunkingStrategy` as `NONE` , exclude this field.
	FixedSizeChunkingConfiguration *DataSourceFixedSizeChunkingConfiguration `pulumi:"fixedSizeChunkingConfiguration"`
}

// DataSourceChunkingConfigurationInput is an input type that accepts DataSourceChunkingConfigurationArgs and DataSourceChunkingConfigurationOutput values.
// You can construct a concrete instance of `DataSourceChunkingConfigurationInput` via:
//
//	DataSourceChunkingConfigurationArgs{...}
type DataSourceChunkingConfigurationInput interface {
	pulumi.Input

	ToDataSourceChunkingConfigurationOutput() DataSourceChunkingConfigurationOutput
	ToDataSourceChunkingConfigurationOutputWithContext(context.Context) DataSourceChunkingConfigurationOutput
}

// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
type DataSourceChunkingConfigurationArgs struct {
	// Knowledge base can split your source data into chunks. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for `NONE` , then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.
	//
	// - `FIXED_SIZE` – Amazon Bedrock splits your source data into chunks of the approximate size that you set in the `fixedSizeChunkingConfiguration` .
	// - `NONE` – Amazon Bedrock treats each file as one chunk. If you choose this option, you may want to pre-process your documents by splitting them into separate files.
	ChunkingStrategy DataSourceChunkingStrategyInput `pulumi:"chunkingStrategy"`
	// Configurations for when you choose fixed-size chunking. If you set the `chunkingStrategy` as `NONE` , exclude this field.
	FixedSizeChunkingConfiguration DataSourceFixedSizeChunkingConfigurationPtrInput `pulumi:"fixedSizeChunkingConfiguration"`
}

func (DataSourceChunkingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceChunkingConfiguration)(nil)).Elem()
}

func (i DataSourceChunkingConfigurationArgs) ToDataSourceChunkingConfigurationOutput() DataSourceChunkingConfigurationOutput {
	return i.ToDataSourceChunkingConfigurationOutputWithContext(context.Background())
}

func (i DataSourceChunkingConfigurationArgs) ToDataSourceChunkingConfigurationOutputWithContext(ctx context.Context) DataSourceChunkingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceChunkingConfigurationOutput)
}

func (i DataSourceChunkingConfigurationArgs) ToDataSourceChunkingConfigurationPtrOutput() DataSourceChunkingConfigurationPtrOutput {
	return i.ToDataSourceChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceChunkingConfigurationArgs) ToDataSourceChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceChunkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceChunkingConfigurationOutput).ToDataSourceChunkingConfigurationPtrOutputWithContext(ctx)
}

// DataSourceChunkingConfigurationPtrInput is an input type that accepts DataSourceChunkingConfigurationArgs, DataSourceChunkingConfigurationPtr and DataSourceChunkingConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceChunkingConfigurationPtrInput` via:
//
//	        DataSourceChunkingConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceChunkingConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceChunkingConfigurationPtrOutput() DataSourceChunkingConfigurationPtrOutput
	ToDataSourceChunkingConfigurationPtrOutputWithContext(context.Context) DataSourceChunkingConfigurationPtrOutput
}

type dataSourceChunkingConfigurationPtrType DataSourceChunkingConfigurationArgs

func DataSourceChunkingConfigurationPtr(v *DataSourceChunkingConfigurationArgs) DataSourceChunkingConfigurationPtrInput {
	return (*dataSourceChunkingConfigurationPtrType)(v)
}

func (*dataSourceChunkingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceChunkingConfiguration)(nil)).Elem()
}

func (i *dataSourceChunkingConfigurationPtrType) ToDataSourceChunkingConfigurationPtrOutput() DataSourceChunkingConfigurationPtrOutput {
	return i.ToDataSourceChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceChunkingConfigurationPtrType) ToDataSourceChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceChunkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceChunkingConfigurationPtrOutput)
}

// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
type DataSourceChunkingConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceChunkingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceChunkingConfiguration)(nil)).Elem()
}

func (o DataSourceChunkingConfigurationOutput) ToDataSourceChunkingConfigurationOutput() DataSourceChunkingConfigurationOutput {
	return o
}

func (o DataSourceChunkingConfigurationOutput) ToDataSourceChunkingConfigurationOutputWithContext(ctx context.Context) DataSourceChunkingConfigurationOutput {
	return o
}

func (o DataSourceChunkingConfigurationOutput) ToDataSourceChunkingConfigurationPtrOutput() DataSourceChunkingConfigurationPtrOutput {
	return o.ToDataSourceChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceChunkingConfigurationOutput) ToDataSourceChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceChunkingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceChunkingConfiguration) *DataSourceChunkingConfiguration {
		return &v
	}).(DataSourceChunkingConfigurationPtrOutput)
}

// Knowledge base can split your source data into chunks. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for `NONE` , then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.
//
// - `FIXED_SIZE` – Amazon Bedrock splits your source data into chunks of the approximate size that you set in the `fixedSizeChunkingConfiguration` .
// - `NONE` – Amazon Bedrock treats each file as one chunk. If you choose this option, you may want to pre-process your documents by splitting them into separate files.
func (o DataSourceChunkingConfigurationOutput) ChunkingStrategy() DataSourceChunkingStrategyOutput {
	return o.ApplyT(func(v DataSourceChunkingConfiguration) DataSourceChunkingStrategy { return v.ChunkingStrategy }).(DataSourceChunkingStrategyOutput)
}

// Configurations for when you choose fixed-size chunking. If you set the `chunkingStrategy` as `NONE` , exclude this field.
func (o DataSourceChunkingConfigurationOutput) FixedSizeChunkingConfiguration() DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceChunkingConfiguration) *DataSourceFixedSizeChunkingConfiguration {
		return v.FixedSizeChunkingConfiguration
	}).(DataSourceFixedSizeChunkingConfigurationPtrOutput)
}

type DataSourceChunkingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceChunkingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceChunkingConfiguration)(nil)).Elem()
}

func (o DataSourceChunkingConfigurationPtrOutput) ToDataSourceChunkingConfigurationPtrOutput() DataSourceChunkingConfigurationPtrOutput {
	return o
}

func (o DataSourceChunkingConfigurationPtrOutput) ToDataSourceChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceChunkingConfigurationPtrOutput {
	return o
}

func (o DataSourceChunkingConfigurationPtrOutput) Elem() DataSourceChunkingConfigurationOutput {
	return o.ApplyT(func(v *DataSourceChunkingConfiguration) DataSourceChunkingConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceChunkingConfiguration
		return ret
	}).(DataSourceChunkingConfigurationOutput)
}

// Knowledge base can split your source data into chunks. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for `NONE` , then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.
//
// - `FIXED_SIZE` – Amazon Bedrock splits your source data into chunks of the approximate size that you set in the `fixedSizeChunkingConfiguration` .
// - `NONE` – Amazon Bedrock treats each file as one chunk. If you choose this option, you may want to pre-process your documents by splitting them into separate files.
func (o DataSourceChunkingConfigurationPtrOutput) ChunkingStrategy() DataSourceChunkingStrategyPtrOutput {
	return o.ApplyT(func(v *DataSourceChunkingConfiguration) *DataSourceChunkingStrategy {
		if v == nil {
			return nil
		}
		return &v.ChunkingStrategy
	}).(DataSourceChunkingStrategyPtrOutput)
}

// Configurations for when you choose fixed-size chunking. If you set the `chunkingStrategy` as `NONE` , exclude this field.
func (o DataSourceChunkingConfigurationPtrOutput) FixedSizeChunkingConfiguration() DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceChunkingConfiguration) *DataSourceFixedSizeChunkingConfiguration {
		if v == nil {
			return nil
		}
		return v.FixedSizeChunkingConfiguration
	}).(DataSourceFixedSizeChunkingConfigurationPtrOutput)
}

// Specifies a raw data source location to ingest.
type DataSourceConfiguration struct {
	// Contains details about the configuration of the S3 object containing the data source.
	S3Configuration DataSourceS3DataSourceConfiguration `pulumi:"s3Configuration"`
	// The type of storage for the data source.
	Type DataSourceType `pulumi:"type"`
}

// DataSourceConfigurationInput is an input type that accepts DataSourceConfigurationArgs and DataSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceConfigurationInput` via:
//
//	DataSourceConfigurationArgs{...}
type DataSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceConfigurationOutput() DataSourceConfigurationOutput
	ToDataSourceConfigurationOutputWithContext(context.Context) DataSourceConfigurationOutput
}

// Specifies a raw data source location to ingest.
type DataSourceConfigurationArgs struct {
	// Contains details about the configuration of the S3 object containing the data source.
	S3Configuration DataSourceS3DataSourceConfigurationInput `pulumi:"s3Configuration"`
	// The type of storage for the data source.
	Type DataSourceTypeInput `pulumi:"type"`
}

func (DataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfiguration)(nil)).Elem()
}

func (i DataSourceConfigurationArgs) ToDataSourceConfigurationOutput() DataSourceConfigurationOutput {
	return i.ToDataSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceConfigurationArgs) ToDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceConfigurationOutput)
}

// Specifies a raw data source location to ingest.
type DataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationOutput) ToDataSourceConfigurationOutput() DataSourceConfigurationOutput {
	return o
}

func (o DataSourceConfigurationOutput) ToDataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceConfigurationOutput {
	return o
}

// Contains details about the configuration of the S3 object containing the data source.
func (o DataSourceConfigurationOutput) S3Configuration() DataSourceS3DataSourceConfigurationOutput {
	return o.ApplyT(func(v DataSourceConfiguration) DataSourceS3DataSourceConfiguration { return v.S3Configuration }).(DataSourceS3DataSourceConfigurationOutput)
}

// The type of storage for the data source.
func (o DataSourceConfigurationOutput) Type() DataSourceTypeOutput {
	return o.ApplyT(func(v DataSourceConfiguration) DataSourceType { return v.Type }).(DataSourceTypeOutput)
}

type DataSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceConfigurationPtrOutput) ToDataSourceConfigurationPtrOutput() DataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceConfigurationPtrOutput) ToDataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceConfigurationPtrOutput) Elem() DataSourceConfigurationOutput {
	return o.ApplyT(func(v *DataSourceConfiguration) DataSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceConfiguration
		return ret
	}).(DataSourceConfigurationOutput)
}

// Contains details about the configuration of the S3 object containing the data source.
func (o DataSourceConfigurationPtrOutput) S3Configuration() DataSourceS3DataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceConfiguration) *DataSourceS3DataSourceConfiguration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(DataSourceS3DataSourceConfigurationPtrOutput)
}

// The type of storage for the data source.
func (o DataSourceConfigurationPtrOutput) Type() DataSourceTypePtrOutput {
	return o.ApplyT(func(v *DataSourceConfiguration) *DataSourceType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(DataSourceTypePtrOutput)
}

// Configurations for when you choose fixed-size chunking. If you set the chunkingStrategy as NONE, exclude this field.
type DataSourceFixedSizeChunkingConfiguration struct {
	// The maximum number of tokens to include in a chunk.
	MaxTokens int `pulumi:"maxTokens"`
	// The percentage of overlap between adjacent chunks of a data source.
	OverlapPercentage int `pulumi:"overlapPercentage"`
}

// DataSourceFixedSizeChunkingConfigurationInput is an input type that accepts DataSourceFixedSizeChunkingConfigurationArgs and DataSourceFixedSizeChunkingConfigurationOutput values.
// You can construct a concrete instance of `DataSourceFixedSizeChunkingConfigurationInput` via:
//
//	DataSourceFixedSizeChunkingConfigurationArgs{...}
type DataSourceFixedSizeChunkingConfigurationInput interface {
	pulumi.Input

	ToDataSourceFixedSizeChunkingConfigurationOutput() DataSourceFixedSizeChunkingConfigurationOutput
	ToDataSourceFixedSizeChunkingConfigurationOutputWithContext(context.Context) DataSourceFixedSizeChunkingConfigurationOutput
}

// Configurations for when you choose fixed-size chunking. If you set the chunkingStrategy as NONE, exclude this field.
type DataSourceFixedSizeChunkingConfigurationArgs struct {
	// The maximum number of tokens to include in a chunk.
	MaxTokens pulumi.IntInput `pulumi:"maxTokens"`
	// The percentage of overlap between adjacent chunks of a data source.
	OverlapPercentage pulumi.IntInput `pulumi:"overlapPercentage"`
}

func (DataSourceFixedSizeChunkingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceFixedSizeChunkingConfiguration)(nil)).Elem()
}

func (i DataSourceFixedSizeChunkingConfigurationArgs) ToDataSourceFixedSizeChunkingConfigurationOutput() DataSourceFixedSizeChunkingConfigurationOutput {
	return i.ToDataSourceFixedSizeChunkingConfigurationOutputWithContext(context.Background())
}

func (i DataSourceFixedSizeChunkingConfigurationArgs) ToDataSourceFixedSizeChunkingConfigurationOutputWithContext(ctx context.Context) DataSourceFixedSizeChunkingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceFixedSizeChunkingConfigurationOutput)
}

func (i DataSourceFixedSizeChunkingConfigurationArgs) ToDataSourceFixedSizeChunkingConfigurationPtrOutput() DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return i.ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceFixedSizeChunkingConfigurationArgs) ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceFixedSizeChunkingConfigurationOutput).ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(ctx)
}

// DataSourceFixedSizeChunkingConfigurationPtrInput is an input type that accepts DataSourceFixedSizeChunkingConfigurationArgs, DataSourceFixedSizeChunkingConfigurationPtr and DataSourceFixedSizeChunkingConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceFixedSizeChunkingConfigurationPtrInput` via:
//
//	        DataSourceFixedSizeChunkingConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceFixedSizeChunkingConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceFixedSizeChunkingConfigurationPtrOutput() DataSourceFixedSizeChunkingConfigurationPtrOutput
	ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(context.Context) DataSourceFixedSizeChunkingConfigurationPtrOutput
}

type dataSourceFixedSizeChunkingConfigurationPtrType DataSourceFixedSizeChunkingConfigurationArgs

func DataSourceFixedSizeChunkingConfigurationPtr(v *DataSourceFixedSizeChunkingConfigurationArgs) DataSourceFixedSizeChunkingConfigurationPtrInput {
	return (*dataSourceFixedSizeChunkingConfigurationPtrType)(v)
}

func (*dataSourceFixedSizeChunkingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceFixedSizeChunkingConfiguration)(nil)).Elem()
}

func (i *dataSourceFixedSizeChunkingConfigurationPtrType) ToDataSourceFixedSizeChunkingConfigurationPtrOutput() DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return i.ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceFixedSizeChunkingConfigurationPtrType) ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceFixedSizeChunkingConfigurationPtrOutput)
}

// Configurations for when you choose fixed-size chunking. If you set the chunkingStrategy as NONE, exclude this field.
type DataSourceFixedSizeChunkingConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceFixedSizeChunkingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceFixedSizeChunkingConfiguration)(nil)).Elem()
}

func (o DataSourceFixedSizeChunkingConfigurationOutput) ToDataSourceFixedSizeChunkingConfigurationOutput() DataSourceFixedSizeChunkingConfigurationOutput {
	return o
}

func (o DataSourceFixedSizeChunkingConfigurationOutput) ToDataSourceFixedSizeChunkingConfigurationOutputWithContext(ctx context.Context) DataSourceFixedSizeChunkingConfigurationOutput {
	return o
}

func (o DataSourceFixedSizeChunkingConfigurationOutput) ToDataSourceFixedSizeChunkingConfigurationPtrOutput() DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return o.ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceFixedSizeChunkingConfigurationOutput) ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceFixedSizeChunkingConfiguration) *DataSourceFixedSizeChunkingConfiguration {
		return &v
	}).(DataSourceFixedSizeChunkingConfigurationPtrOutput)
}

// The maximum number of tokens to include in a chunk.
func (o DataSourceFixedSizeChunkingConfigurationOutput) MaxTokens() pulumi.IntOutput {
	return o.ApplyT(func(v DataSourceFixedSizeChunkingConfiguration) int { return v.MaxTokens }).(pulumi.IntOutput)
}

// The percentage of overlap between adjacent chunks of a data source.
func (o DataSourceFixedSizeChunkingConfigurationOutput) OverlapPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v DataSourceFixedSizeChunkingConfiguration) int { return v.OverlapPercentage }).(pulumi.IntOutput)
}

type DataSourceFixedSizeChunkingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceFixedSizeChunkingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceFixedSizeChunkingConfiguration)(nil)).Elem()
}

func (o DataSourceFixedSizeChunkingConfigurationPtrOutput) ToDataSourceFixedSizeChunkingConfigurationPtrOutput() DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return o
}

func (o DataSourceFixedSizeChunkingConfigurationPtrOutput) ToDataSourceFixedSizeChunkingConfigurationPtrOutputWithContext(ctx context.Context) DataSourceFixedSizeChunkingConfigurationPtrOutput {
	return o
}

func (o DataSourceFixedSizeChunkingConfigurationPtrOutput) Elem() DataSourceFixedSizeChunkingConfigurationOutput {
	return o.ApplyT(func(v *DataSourceFixedSizeChunkingConfiguration) DataSourceFixedSizeChunkingConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceFixedSizeChunkingConfiguration
		return ret
	}).(DataSourceFixedSizeChunkingConfigurationOutput)
}

// The maximum number of tokens to include in a chunk.
func (o DataSourceFixedSizeChunkingConfigurationPtrOutput) MaxTokens() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceFixedSizeChunkingConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.MaxTokens
	}).(pulumi.IntPtrOutput)
}

// The percentage of overlap between adjacent chunks of a data source.
func (o DataSourceFixedSizeChunkingConfigurationPtrOutput) OverlapPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceFixedSizeChunkingConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.OverlapPercentage
	}).(pulumi.IntPtrOutput)
}

// Contains information about the S3 configuration of the data source.
type DataSourceS3DataSourceConfiguration struct {
	// The ARN of the bucket that contains the data source.
	BucketArn string `pulumi:"bucketArn"`
	// The account ID for the owner of the S3 bucket.
	BucketOwnerAccountId *string `pulumi:"bucketOwnerAccountId"`
	// A list of S3 prefixes that define the object containing the data sources.
	InclusionPrefixes []string `pulumi:"inclusionPrefixes"`
}

// DataSourceS3DataSourceConfigurationInput is an input type that accepts DataSourceS3DataSourceConfigurationArgs and DataSourceS3DataSourceConfigurationOutput values.
// You can construct a concrete instance of `DataSourceS3DataSourceConfigurationInput` via:
//
//	DataSourceS3DataSourceConfigurationArgs{...}
type DataSourceS3DataSourceConfigurationInput interface {
	pulumi.Input

	ToDataSourceS3DataSourceConfigurationOutput() DataSourceS3DataSourceConfigurationOutput
	ToDataSourceS3DataSourceConfigurationOutputWithContext(context.Context) DataSourceS3DataSourceConfigurationOutput
}

// Contains information about the S3 configuration of the data source.
type DataSourceS3DataSourceConfigurationArgs struct {
	// The ARN of the bucket that contains the data source.
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// The account ID for the owner of the S3 bucket.
	BucketOwnerAccountId pulumi.StringPtrInput `pulumi:"bucketOwnerAccountId"`
	// A list of S3 prefixes that define the object containing the data sources.
	InclusionPrefixes pulumi.StringArrayInput `pulumi:"inclusionPrefixes"`
}

func (DataSourceS3DataSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceS3DataSourceConfiguration)(nil)).Elem()
}

func (i DataSourceS3DataSourceConfigurationArgs) ToDataSourceS3DataSourceConfigurationOutput() DataSourceS3DataSourceConfigurationOutput {
	return i.ToDataSourceS3DataSourceConfigurationOutputWithContext(context.Background())
}

func (i DataSourceS3DataSourceConfigurationArgs) ToDataSourceS3DataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceS3DataSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceS3DataSourceConfigurationOutput)
}

// Contains information about the S3 configuration of the data source.
type DataSourceS3DataSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceS3DataSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceS3DataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceS3DataSourceConfigurationOutput) ToDataSourceS3DataSourceConfigurationOutput() DataSourceS3DataSourceConfigurationOutput {
	return o
}

func (o DataSourceS3DataSourceConfigurationOutput) ToDataSourceS3DataSourceConfigurationOutputWithContext(ctx context.Context) DataSourceS3DataSourceConfigurationOutput {
	return o
}

// The ARN of the bucket that contains the data source.
func (o DataSourceS3DataSourceConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceS3DataSourceConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// The account ID for the owner of the S3 bucket.
func (o DataSourceS3DataSourceConfigurationOutput) BucketOwnerAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceS3DataSourceConfiguration) *string { return v.BucketOwnerAccountId }).(pulumi.StringPtrOutput)
}

// A list of S3 prefixes that define the object containing the data sources.
func (o DataSourceS3DataSourceConfigurationOutput) InclusionPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataSourceS3DataSourceConfiguration) []string { return v.InclusionPrefixes }).(pulumi.StringArrayOutput)
}

type DataSourceS3DataSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceS3DataSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceS3DataSourceConfiguration)(nil)).Elem()
}

func (o DataSourceS3DataSourceConfigurationPtrOutput) ToDataSourceS3DataSourceConfigurationPtrOutput() DataSourceS3DataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceS3DataSourceConfigurationPtrOutput) ToDataSourceS3DataSourceConfigurationPtrOutputWithContext(ctx context.Context) DataSourceS3DataSourceConfigurationPtrOutput {
	return o
}

func (o DataSourceS3DataSourceConfigurationPtrOutput) Elem() DataSourceS3DataSourceConfigurationOutput {
	return o.ApplyT(func(v *DataSourceS3DataSourceConfiguration) DataSourceS3DataSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceS3DataSourceConfiguration
		return ret
	}).(DataSourceS3DataSourceConfigurationOutput)
}

// The ARN of the bucket that contains the data source.
func (o DataSourceS3DataSourceConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceS3DataSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// The account ID for the owner of the S3 bucket.
func (o DataSourceS3DataSourceConfigurationPtrOutput) BucketOwnerAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceS3DataSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.BucketOwnerAccountId
	}).(pulumi.StringPtrOutput)
}

// A list of S3 prefixes that define the object containing the data sources.
func (o DataSourceS3DataSourceConfigurationPtrOutput) InclusionPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataSourceS3DataSourceConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.InclusionPrefixes
	}).(pulumi.StringArrayOutput)
}

// Contains details about the server-side encryption for the data source.
type DataSourceServerSideEncryptionConfiguration struct {
	// The ARN of the AWS KMS key used to encrypt the resource.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
}

// DataSourceServerSideEncryptionConfigurationInput is an input type that accepts DataSourceServerSideEncryptionConfigurationArgs and DataSourceServerSideEncryptionConfigurationOutput values.
// You can construct a concrete instance of `DataSourceServerSideEncryptionConfigurationInput` via:
//
//	DataSourceServerSideEncryptionConfigurationArgs{...}
type DataSourceServerSideEncryptionConfigurationInput interface {
	pulumi.Input

	ToDataSourceServerSideEncryptionConfigurationOutput() DataSourceServerSideEncryptionConfigurationOutput
	ToDataSourceServerSideEncryptionConfigurationOutputWithContext(context.Context) DataSourceServerSideEncryptionConfigurationOutput
}

// Contains details about the server-side encryption for the data source.
type DataSourceServerSideEncryptionConfigurationArgs struct {
	// The ARN of the AWS KMS key used to encrypt the resource.
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
}

func (DataSourceServerSideEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceServerSideEncryptionConfiguration)(nil)).Elem()
}

func (i DataSourceServerSideEncryptionConfigurationArgs) ToDataSourceServerSideEncryptionConfigurationOutput() DataSourceServerSideEncryptionConfigurationOutput {
	return i.ToDataSourceServerSideEncryptionConfigurationOutputWithContext(context.Background())
}

func (i DataSourceServerSideEncryptionConfigurationArgs) ToDataSourceServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) DataSourceServerSideEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceServerSideEncryptionConfigurationOutput)
}

func (i DataSourceServerSideEncryptionConfigurationArgs) ToDataSourceServerSideEncryptionConfigurationPtrOutput() DataSourceServerSideEncryptionConfigurationPtrOutput {
	return i.ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceServerSideEncryptionConfigurationArgs) ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceServerSideEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceServerSideEncryptionConfigurationOutput).ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(ctx)
}

// DataSourceServerSideEncryptionConfigurationPtrInput is an input type that accepts DataSourceServerSideEncryptionConfigurationArgs, DataSourceServerSideEncryptionConfigurationPtr and DataSourceServerSideEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceServerSideEncryptionConfigurationPtrInput` via:
//
//	        DataSourceServerSideEncryptionConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceServerSideEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceServerSideEncryptionConfigurationPtrOutput() DataSourceServerSideEncryptionConfigurationPtrOutput
	ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(context.Context) DataSourceServerSideEncryptionConfigurationPtrOutput
}

type dataSourceServerSideEncryptionConfigurationPtrType DataSourceServerSideEncryptionConfigurationArgs

func DataSourceServerSideEncryptionConfigurationPtr(v *DataSourceServerSideEncryptionConfigurationArgs) DataSourceServerSideEncryptionConfigurationPtrInput {
	return (*dataSourceServerSideEncryptionConfigurationPtrType)(v)
}

func (*dataSourceServerSideEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceServerSideEncryptionConfiguration)(nil)).Elem()
}

func (i *dataSourceServerSideEncryptionConfigurationPtrType) ToDataSourceServerSideEncryptionConfigurationPtrOutput() DataSourceServerSideEncryptionConfigurationPtrOutput {
	return i.ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceServerSideEncryptionConfigurationPtrType) ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceServerSideEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceServerSideEncryptionConfigurationPtrOutput)
}

// Contains details about the server-side encryption for the data source.
type DataSourceServerSideEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceServerSideEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceServerSideEncryptionConfiguration)(nil)).Elem()
}

func (o DataSourceServerSideEncryptionConfigurationOutput) ToDataSourceServerSideEncryptionConfigurationOutput() DataSourceServerSideEncryptionConfigurationOutput {
	return o
}

func (o DataSourceServerSideEncryptionConfigurationOutput) ToDataSourceServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) DataSourceServerSideEncryptionConfigurationOutput {
	return o
}

func (o DataSourceServerSideEncryptionConfigurationOutput) ToDataSourceServerSideEncryptionConfigurationPtrOutput() DataSourceServerSideEncryptionConfigurationPtrOutput {
	return o.ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceServerSideEncryptionConfigurationOutput) ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceServerSideEncryptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceServerSideEncryptionConfiguration) *DataSourceServerSideEncryptionConfiguration {
		return &v
	}).(DataSourceServerSideEncryptionConfigurationPtrOutput)
}

// The ARN of the AWS KMS key used to encrypt the resource.
func (o DataSourceServerSideEncryptionConfigurationOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceServerSideEncryptionConfiguration) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

type DataSourceServerSideEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceServerSideEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceServerSideEncryptionConfiguration)(nil)).Elem()
}

func (o DataSourceServerSideEncryptionConfigurationPtrOutput) ToDataSourceServerSideEncryptionConfigurationPtrOutput() DataSourceServerSideEncryptionConfigurationPtrOutput {
	return o
}

func (o DataSourceServerSideEncryptionConfigurationPtrOutput) ToDataSourceServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceServerSideEncryptionConfigurationPtrOutput {
	return o
}

func (o DataSourceServerSideEncryptionConfigurationPtrOutput) Elem() DataSourceServerSideEncryptionConfigurationOutput {
	return o.ApplyT(func(v *DataSourceServerSideEncryptionConfiguration) DataSourceServerSideEncryptionConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceServerSideEncryptionConfiguration
		return ret
	}).(DataSourceServerSideEncryptionConfigurationOutput)
}

// The ARN of the AWS KMS key used to encrypt the resource.
func (o DataSourceServerSideEncryptionConfigurationPtrOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceServerSideEncryptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
type DataSourceVectorIngestionConfiguration struct {
	// Details about how to chunk the documents in the data source. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
	ChunkingConfiguration *DataSourceChunkingConfiguration `pulumi:"chunkingConfiguration"`
}

// DataSourceVectorIngestionConfigurationInput is an input type that accepts DataSourceVectorIngestionConfigurationArgs and DataSourceVectorIngestionConfigurationOutput values.
// You can construct a concrete instance of `DataSourceVectorIngestionConfigurationInput` via:
//
//	DataSourceVectorIngestionConfigurationArgs{...}
type DataSourceVectorIngestionConfigurationInput interface {
	pulumi.Input

	ToDataSourceVectorIngestionConfigurationOutput() DataSourceVectorIngestionConfigurationOutput
	ToDataSourceVectorIngestionConfigurationOutputWithContext(context.Context) DataSourceVectorIngestionConfigurationOutput
}

// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
type DataSourceVectorIngestionConfigurationArgs struct {
	// Details about how to chunk the documents in the data source. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
	ChunkingConfiguration DataSourceChunkingConfigurationPtrInput `pulumi:"chunkingConfiguration"`
}

func (DataSourceVectorIngestionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceVectorIngestionConfiguration)(nil)).Elem()
}

func (i DataSourceVectorIngestionConfigurationArgs) ToDataSourceVectorIngestionConfigurationOutput() DataSourceVectorIngestionConfigurationOutput {
	return i.ToDataSourceVectorIngestionConfigurationOutputWithContext(context.Background())
}

func (i DataSourceVectorIngestionConfigurationArgs) ToDataSourceVectorIngestionConfigurationOutputWithContext(ctx context.Context) DataSourceVectorIngestionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVectorIngestionConfigurationOutput)
}

func (i DataSourceVectorIngestionConfigurationArgs) ToDataSourceVectorIngestionConfigurationPtrOutput() DataSourceVectorIngestionConfigurationPtrOutput {
	return i.ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(context.Background())
}

func (i DataSourceVectorIngestionConfigurationArgs) ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceVectorIngestionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVectorIngestionConfigurationOutput).ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(ctx)
}

// DataSourceVectorIngestionConfigurationPtrInput is an input type that accepts DataSourceVectorIngestionConfigurationArgs, DataSourceVectorIngestionConfigurationPtr and DataSourceVectorIngestionConfigurationPtrOutput values.
// You can construct a concrete instance of `DataSourceVectorIngestionConfigurationPtrInput` via:
//
//	        DataSourceVectorIngestionConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataSourceVectorIngestionConfigurationPtrInput interface {
	pulumi.Input

	ToDataSourceVectorIngestionConfigurationPtrOutput() DataSourceVectorIngestionConfigurationPtrOutput
	ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(context.Context) DataSourceVectorIngestionConfigurationPtrOutput
}

type dataSourceVectorIngestionConfigurationPtrType DataSourceVectorIngestionConfigurationArgs

func DataSourceVectorIngestionConfigurationPtr(v *DataSourceVectorIngestionConfigurationArgs) DataSourceVectorIngestionConfigurationPtrInput {
	return (*dataSourceVectorIngestionConfigurationPtrType)(v)
}

func (*dataSourceVectorIngestionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceVectorIngestionConfiguration)(nil)).Elem()
}

func (i *dataSourceVectorIngestionConfigurationPtrType) ToDataSourceVectorIngestionConfigurationPtrOutput() DataSourceVectorIngestionConfigurationPtrOutput {
	return i.ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataSourceVectorIngestionConfigurationPtrType) ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceVectorIngestionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceVectorIngestionConfigurationPtrOutput)
}

// Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
type DataSourceVectorIngestionConfigurationOutput struct{ *pulumi.OutputState }

func (DataSourceVectorIngestionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceVectorIngestionConfiguration)(nil)).Elem()
}

func (o DataSourceVectorIngestionConfigurationOutput) ToDataSourceVectorIngestionConfigurationOutput() DataSourceVectorIngestionConfigurationOutput {
	return o
}

func (o DataSourceVectorIngestionConfigurationOutput) ToDataSourceVectorIngestionConfigurationOutputWithContext(ctx context.Context) DataSourceVectorIngestionConfigurationOutput {
	return o
}

func (o DataSourceVectorIngestionConfigurationOutput) ToDataSourceVectorIngestionConfigurationPtrOutput() DataSourceVectorIngestionConfigurationPtrOutput {
	return o.ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(context.Background())
}

func (o DataSourceVectorIngestionConfigurationOutput) ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceVectorIngestionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceVectorIngestionConfiguration) *DataSourceVectorIngestionConfiguration {
		return &v
	}).(DataSourceVectorIngestionConfigurationPtrOutput)
}

// Details about how to chunk the documents in the data source. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
func (o DataSourceVectorIngestionConfigurationOutput) ChunkingConfiguration() DataSourceChunkingConfigurationPtrOutput {
	return o.ApplyT(func(v DataSourceVectorIngestionConfiguration) *DataSourceChunkingConfiguration {
		return v.ChunkingConfiguration
	}).(DataSourceChunkingConfigurationPtrOutput)
}

type DataSourceVectorIngestionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataSourceVectorIngestionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceVectorIngestionConfiguration)(nil)).Elem()
}

func (o DataSourceVectorIngestionConfigurationPtrOutput) ToDataSourceVectorIngestionConfigurationPtrOutput() DataSourceVectorIngestionConfigurationPtrOutput {
	return o
}

func (o DataSourceVectorIngestionConfigurationPtrOutput) ToDataSourceVectorIngestionConfigurationPtrOutputWithContext(ctx context.Context) DataSourceVectorIngestionConfigurationPtrOutput {
	return o
}

func (o DataSourceVectorIngestionConfigurationPtrOutput) Elem() DataSourceVectorIngestionConfigurationOutput {
	return o.ApplyT(func(v *DataSourceVectorIngestionConfiguration) DataSourceVectorIngestionConfiguration {
		if v != nil {
			return *v
		}
		var ret DataSourceVectorIngestionConfiguration
		return ret
	}).(DataSourceVectorIngestionConfigurationOutput)
}

// Details about how to chunk the documents in the data source. A *chunk* refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.
func (o DataSourceVectorIngestionConfigurationPtrOutput) ChunkingConfiguration() DataSourceChunkingConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSourceVectorIngestionConfiguration) *DataSourceChunkingConfiguration {
		if v == nil {
			return nil
		}
		return v.ChunkingConfiguration
	}).(DataSourceChunkingConfigurationPtrOutput)
}

// Content filter config in content policy.
type GuardrailContentFilterConfig struct {
	InputStrength  GuardrailFilterStrength    `pulumi:"inputStrength"`
	OutputStrength GuardrailFilterStrength    `pulumi:"outputStrength"`
	Type           GuardrailContentFilterType `pulumi:"type"`
}

// GuardrailContentFilterConfigInput is an input type that accepts GuardrailContentFilterConfigArgs and GuardrailContentFilterConfigOutput values.
// You can construct a concrete instance of `GuardrailContentFilterConfigInput` via:
//
//	GuardrailContentFilterConfigArgs{...}
type GuardrailContentFilterConfigInput interface {
	pulumi.Input

	ToGuardrailContentFilterConfigOutput() GuardrailContentFilterConfigOutput
	ToGuardrailContentFilterConfigOutputWithContext(context.Context) GuardrailContentFilterConfigOutput
}

// Content filter config in content policy.
type GuardrailContentFilterConfigArgs struct {
	InputStrength  GuardrailFilterStrengthInput    `pulumi:"inputStrength"`
	OutputStrength GuardrailFilterStrengthInput    `pulumi:"outputStrength"`
	Type           GuardrailContentFilterTypeInput `pulumi:"type"`
}

func (GuardrailContentFilterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailContentFilterConfig)(nil)).Elem()
}

func (i GuardrailContentFilterConfigArgs) ToGuardrailContentFilterConfigOutput() GuardrailContentFilterConfigOutput {
	return i.ToGuardrailContentFilterConfigOutputWithContext(context.Background())
}

func (i GuardrailContentFilterConfigArgs) ToGuardrailContentFilterConfigOutputWithContext(ctx context.Context) GuardrailContentFilterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContentFilterConfigOutput)
}

// GuardrailContentFilterConfigArrayInput is an input type that accepts GuardrailContentFilterConfigArray and GuardrailContentFilterConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailContentFilterConfigArrayInput` via:
//
//	GuardrailContentFilterConfigArray{ GuardrailContentFilterConfigArgs{...} }
type GuardrailContentFilterConfigArrayInput interface {
	pulumi.Input

	ToGuardrailContentFilterConfigArrayOutput() GuardrailContentFilterConfigArrayOutput
	ToGuardrailContentFilterConfigArrayOutputWithContext(context.Context) GuardrailContentFilterConfigArrayOutput
}

type GuardrailContentFilterConfigArray []GuardrailContentFilterConfigInput

func (GuardrailContentFilterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailContentFilterConfig)(nil)).Elem()
}

func (i GuardrailContentFilterConfigArray) ToGuardrailContentFilterConfigArrayOutput() GuardrailContentFilterConfigArrayOutput {
	return i.ToGuardrailContentFilterConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailContentFilterConfigArray) ToGuardrailContentFilterConfigArrayOutputWithContext(ctx context.Context) GuardrailContentFilterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContentFilterConfigArrayOutput)
}

// Content filter config in content policy.
type GuardrailContentFilterConfigOutput struct{ *pulumi.OutputState }

func (GuardrailContentFilterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailContentFilterConfig)(nil)).Elem()
}

func (o GuardrailContentFilterConfigOutput) ToGuardrailContentFilterConfigOutput() GuardrailContentFilterConfigOutput {
	return o
}

func (o GuardrailContentFilterConfigOutput) ToGuardrailContentFilterConfigOutputWithContext(ctx context.Context) GuardrailContentFilterConfigOutput {
	return o
}

func (o GuardrailContentFilterConfigOutput) InputStrength() GuardrailFilterStrengthOutput {
	return o.ApplyT(func(v GuardrailContentFilterConfig) GuardrailFilterStrength { return v.InputStrength }).(GuardrailFilterStrengthOutput)
}

func (o GuardrailContentFilterConfigOutput) OutputStrength() GuardrailFilterStrengthOutput {
	return o.ApplyT(func(v GuardrailContentFilterConfig) GuardrailFilterStrength { return v.OutputStrength }).(GuardrailFilterStrengthOutput)
}

func (o GuardrailContentFilterConfigOutput) Type() GuardrailContentFilterTypeOutput {
	return o.ApplyT(func(v GuardrailContentFilterConfig) GuardrailContentFilterType { return v.Type }).(GuardrailContentFilterTypeOutput)
}

type GuardrailContentFilterConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailContentFilterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailContentFilterConfig)(nil)).Elem()
}

func (o GuardrailContentFilterConfigArrayOutput) ToGuardrailContentFilterConfigArrayOutput() GuardrailContentFilterConfigArrayOutput {
	return o
}

func (o GuardrailContentFilterConfigArrayOutput) ToGuardrailContentFilterConfigArrayOutputWithContext(ctx context.Context) GuardrailContentFilterConfigArrayOutput {
	return o
}

func (o GuardrailContentFilterConfigArrayOutput) Index(i pulumi.IntInput) GuardrailContentFilterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailContentFilterConfig {
		return vs[0].([]GuardrailContentFilterConfig)[vs[1].(int)]
	}).(GuardrailContentFilterConfigOutput)
}

// Content policy config for a guardrail.
type GuardrailContentPolicyConfig struct {
	// List of content filter configs in content policy.
	FiltersConfig []GuardrailContentFilterConfig `pulumi:"filtersConfig"`
}

// GuardrailContentPolicyConfigInput is an input type that accepts GuardrailContentPolicyConfigArgs and GuardrailContentPolicyConfigOutput values.
// You can construct a concrete instance of `GuardrailContentPolicyConfigInput` via:
//
//	GuardrailContentPolicyConfigArgs{...}
type GuardrailContentPolicyConfigInput interface {
	pulumi.Input

	ToGuardrailContentPolicyConfigOutput() GuardrailContentPolicyConfigOutput
	ToGuardrailContentPolicyConfigOutputWithContext(context.Context) GuardrailContentPolicyConfigOutput
}

// Content policy config for a guardrail.
type GuardrailContentPolicyConfigArgs struct {
	// List of content filter configs in content policy.
	FiltersConfig GuardrailContentFilterConfigArrayInput `pulumi:"filtersConfig"`
}

func (GuardrailContentPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailContentPolicyConfig)(nil)).Elem()
}

func (i GuardrailContentPolicyConfigArgs) ToGuardrailContentPolicyConfigOutput() GuardrailContentPolicyConfigOutput {
	return i.ToGuardrailContentPolicyConfigOutputWithContext(context.Background())
}

func (i GuardrailContentPolicyConfigArgs) ToGuardrailContentPolicyConfigOutputWithContext(ctx context.Context) GuardrailContentPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContentPolicyConfigOutput)
}

func (i GuardrailContentPolicyConfigArgs) ToGuardrailContentPolicyConfigPtrOutput() GuardrailContentPolicyConfigPtrOutput {
	return i.ToGuardrailContentPolicyConfigPtrOutputWithContext(context.Background())
}

func (i GuardrailContentPolicyConfigArgs) ToGuardrailContentPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailContentPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContentPolicyConfigOutput).ToGuardrailContentPolicyConfigPtrOutputWithContext(ctx)
}

// GuardrailContentPolicyConfigPtrInput is an input type that accepts GuardrailContentPolicyConfigArgs, GuardrailContentPolicyConfigPtr and GuardrailContentPolicyConfigPtrOutput values.
// You can construct a concrete instance of `GuardrailContentPolicyConfigPtrInput` via:
//
//	        GuardrailContentPolicyConfigArgs{...}
//
//	or:
//
//	        nil
type GuardrailContentPolicyConfigPtrInput interface {
	pulumi.Input

	ToGuardrailContentPolicyConfigPtrOutput() GuardrailContentPolicyConfigPtrOutput
	ToGuardrailContentPolicyConfigPtrOutputWithContext(context.Context) GuardrailContentPolicyConfigPtrOutput
}

type guardrailContentPolicyConfigPtrType GuardrailContentPolicyConfigArgs

func GuardrailContentPolicyConfigPtr(v *GuardrailContentPolicyConfigArgs) GuardrailContentPolicyConfigPtrInput {
	return (*guardrailContentPolicyConfigPtrType)(v)
}

func (*guardrailContentPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailContentPolicyConfig)(nil)).Elem()
}

func (i *guardrailContentPolicyConfigPtrType) ToGuardrailContentPolicyConfigPtrOutput() GuardrailContentPolicyConfigPtrOutput {
	return i.ToGuardrailContentPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *guardrailContentPolicyConfigPtrType) ToGuardrailContentPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailContentPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailContentPolicyConfigPtrOutput)
}

// Content policy config for a guardrail.
type GuardrailContentPolicyConfigOutput struct{ *pulumi.OutputState }

func (GuardrailContentPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailContentPolicyConfig)(nil)).Elem()
}

func (o GuardrailContentPolicyConfigOutput) ToGuardrailContentPolicyConfigOutput() GuardrailContentPolicyConfigOutput {
	return o
}

func (o GuardrailContentPolicyConfigOutput) ToGuardrailContentPolicyConfigOutputWithContext(ctx context.Context) GuardrailContentPolicyConfigOutput {
	return o
}

func (o GuardrailContentPolicyConfigOutput) ToGuardrailContentPolicyConfigPtrOutput() GuardrailContentPolicyConfigPtrOutput {
	return o.ToGuardrailContentPolicyConfigPtrOutputWithContext(context.Background())
}

func (o GuardrailContentPolicyConfigOutput) ToGuardrailContentPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailContentPolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardrailContentPolicyConfig) *GuardrailContentPolicyConfig {
		return &v
	}).(GuardrailContentPolicyConfigPtrOutput)
}

// List of content filter configs in content policy.
func (o GuardrailContentPolicyConfigOutput) FiltersConfig() GuardrailContentFilterConfigArrayOutput {
	return o.ApplyT(func(v GuardrailContentPolicyConfig) []GuardrailContentFilterConfig { return v.FiltersConfig }).(GuardrailContentFilterConfigArrayOutput)
}

type GuardrailContentPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (GuardrailContentPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailContentPolicyConfig)(nil)).Elem()
}

func (o GuardrailContentPolicyConfigPtrOutput) ToGuardrailContentPolicyConfigPtrOutput() GuardrailContentPolicyConfigPtrOutput {
	return o
}

func (o GuardrailContentPolicyConfigPtrOutput) ToGuardrailContentPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailContentPolicyConfigPtrOutput {
	return o
}

func (o GuardrailContentPolicyConfigPtrOutput) Elem() GuardrailContentPolicyConfigOutput {
	return o.ApplyT(func(v *GuardrailContentPolicyConfig) GuardrailContentPolicyConfig {
		if v != nil {
			return *v
		}
		var ret GuardrailContentPolicyConfig
		return ret
	}).(GuardrailContentPolicyConfigOutput)
}

// List of content filter configs in content policy.
func (o GuardrailContentPolicyConfigPtrOutput) FiltersConfig() GuardrailContentFilterConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailContentPolicyConfig) []GuardrailContentFilterConfig {
		if v == nil {
			return nil
		}
		return v.FiltersConfig
	}).(GuardrailContentFilterConfigArrayOutput)
}

// A managed words config.
type GuardrailManagedWordsConfig struct {
	Type GuardrailManagedWordsType `pulumi:"type"`
}

// GuardrailManagedWordsConfigInput is an input type that accepts GuardrailManagedWordsConfigArgs and GuardrailManagedWordsConfigOutput values.
// You can construct a concrete instance of `GuardrailManagedWordsConfigInput` via:
//
//	GuardrailManagedWordsConfigArgs{...}
type GuardrailManagedWordsConfigInput interface {
	pulumi.Input

	ToGuardrailManagedWordsConfigOutput() GuardrailManagedWordsConfigOutput
	ToGuardrailManagedWordsConfigOutputWithContext(context.Context) GuardrailManagedWordsConfigOutput
}

// A managed words config.
type GuardrailManagedWordsConfigArgs struct {
	Type GuardrailManagedWordsTypeInput `pulumi:"type"`
}

func (GuardrailManagedWordsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailManagedWordsConfig)(nil)).Elem()
}

func (i GuardrailManagedWordsConfigArgs) ToGuardrailManagedWordsConfigOutput() GuardrailManagedWordsConfigOutput {
	return i.ToGuardrailManagedWordsConfigOutputWithContext(context.Background())
}

func (i GuardrailManagedWordsConfigArgs) ToGuardrailManagedWordsConfigOutputWithContext(ctx context.Context) GuardrailManagedWordsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailManagedWordsConfigOutput)
}

// GuardrailManagedWordsConfigArrayInput is an input type that accepts GuardrailManagedWordsConfigArray and GuardrailManagedWordsConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailManagedWordsConfigArrayInput` via:
//
//	GuardrailManagedWordsConfigArray{ GuardrailManagedWordsConfigArgs{...} }
type GuardrailManagedWordsConfigArrayInput interface {
	pulumi.Input

	ToGuardrailManagedWordsConfigArrayOutput() GuardrailManagedWordsConfigArrayOutput
	ToGuardrailManagedWordsConfigArrayOutputWithContext(context.Context) GuardrailManagedWordsConfigArrayOutput
}

type GuardrailManagedWordsConfigArray []GuardrailManagedWordsConfigInput

func (GuardrailManagedWordsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailManagedWordsConfig)(nil)).Elem()
}

func (i GuardrailManagedWordsConfigArray) ToGuardrailManagedWordsConfigArrayOutput() GuardrailManagedWordsConfigArrayOutput {
	return i.ToGuardrailManagedWordsConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailManagedWordsConfigArray) ToGuardrailManagedWordsConfigArrayOutputWithContext(ctx context.Context) GuardrailManagedWordsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailManagedWordsConfigArrayOutput)
}

// A managed words config.
type GuardrailManagedWordsConfigOutput struct{ *pulumi.OutputState }

func (GuardrailManagedWordsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailManagedWordsConfig)(nil)).Elem()
}

func (o GuardrailManagedWordsConfigOutput) ToGuardrailManagedWordsConfigOutput() GuardrailManagedWordsConfigOutput {
	return o
}

func (o GuardrailManagedWordsConfigOutput) ToGuardrailManagedWordsConfigOutputWithContext(ctx context.Context) GuardrailManagedWordsConfigOutput {
	return o
}

func (o GuardrailManagedWordsConfigOutput) Type() GuardrailManagedWordsTypeOutput {
	return o.ApplyT(func(v GuardrailManagedWordsConfig) GuardrailManagedWordsType { return v.Type }).(GuardrailManagedWordsTypeOutput)
}

type GuardrailManagedWordsConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailManagedWordsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailManagedWordsConfig)(nil)).Elem()
}

func (o GuardrailManagedWordsConfigArrayOutput) ToGuardrailManagedWordsConfigArrayOutput() GuardrailManagedWordsConfigArrayOutput {
	return o
}

func (o GuardrailManagedWordsConfigArrayOutput) ToGuardrailManagedWordsConfigArrayOutputWithContext(ctx context.Context) GuardrailManagedWordsConfigArrayOutput {
	return o
}

func (o GuardrailManagedWordsConfigArrayOutput) Index(i pulumi.IntInput) GuardrailManagedWordsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailManagedWordsConfig {
		return vs[0].([]GuardrailManagedWordsConfig)[vs[1].(int)]
	}).(GuardrailManagedWordsConfigOutput)
}

// Pii entity configuration.
type GuardrailPiiEntityConfig struct {
	Action GuardrailSensitiveInformationAction `pulumi:"action"`
	Type   GuardrailPiiEntityType              `pulumi:"type"`
}

// GuardrailPiiEntityConfigInput is an input type that accepts GuardrailPiiEntityConfigArgs and GuardrailPiiEntityConfigOutput values.
// You can construct a concrete instance of `GuardrailPiiEntityConfigInput` via:
//
//	GuardrailPiiEntityConfigArgs{...}
type GuardrailPiiEntityConfigInput interface {
	pulumi.Input

	ToGuardrailPiiEntityConfigOutput() GuardrailPiiEntityConfigOutput
	ToGuardrailPiiEntityConfigOutputWithContext(context.Context) GuardrailPiiEntityConfigOutput
}

// Pii entity configuration.
type GuardrailPiiEntityConfigArgs struct {
	Action GuardrailSensitiveInformationActionInput `pulumi:"action"`
	Type   GuardrailPiiEntityTypeInput              `pulumi:"type"`
}

func (GuardrailPiiEntityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailPiiEntityConfig)(nil)).Elem()
}

func (i GuardrailPiiEntityConfigArgs) ToGuardrailPiiEntityConfigOutput() GuardrailPiiEntityConfigOutput {
	return i.ToGuardrailPiiEntityConfigOutputWithContext(context.Background())
}

func (i GuardrailPiiEntityConfigArgs) ToGuardrailPiiEntityConfigOutputWithContext(ctx context.Context) GuardrailPiiEntityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailPiiEntityConfigOutput)
}

// GuardrailPiiEntityConfigArrayInput is an input type that accepts GuardrailPiiEntityConfigArray and GuardrailPiiEntityConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailPiiEntityConfigArrayInput` via:
//
//	GuardrailPiiEntityConfigArray{ GuardrailPiiEntityConfigArgs{...} }
type GuardrailPiiEntityConfigArrayInput interface {
	pulumi.Input

	ToGuardrailPiiEntityConfigArrayOutput() GuardrailPiiEntityConfigArrayOutput
	ToGuardrailPiiEntityConfigArrayOutputWithContext(context.Context) GuardrailPiiEntityConfigArrayOutput
}

type GuardrailPiiEntityConfigArray []GuardrailPiiEntityConfigInput

func (GuardrailPiiEntityConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailPiiEntityConfig)(nil)).Elem()
}

func (i GuardrailPiiEntityConfigArray) ToGuardrailPiiEntityConfigArrayOutput() GuardrailPiiEntityConfigArrayOutput {
	return i.ToGuardrailPiiEntityConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailPiiEntityConfigArray) ToGuardrailPiiEntityConfigArrayOutputWithContext(ctx context.Context) GuardrailPiiEntityConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailPiiEntityConfigArrayOutput)
}

// Pii entity configuration.
type GuardrailPiiEntityConfigOutput struct{ *pulumi.OutputState }

func (GuardrailPiiEntityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailPiiEntityConfig)(nil)).Elem()
}

func (o GuardrailPiiEntityConfigOutput) ToGuardrailPiiEntityConfigOutput() GuardrailPiiEntityConfigOutput {
	return o
}

func (o GuardrailPiiEntityConfigOutput) ToGuardrailPiiEntityConfigOutputWithContext(ctx context.Context) GuardrailPiiEntityConfigOutput {
	return o
}

func (o GuardrailPiiEntityConfigOutput) Action() GuardrailSensitiveInformationActionOutput {
	return o.ApplyT(func(v GuardrailPiiEntityConfig) GuardrailSensitiveInformationAction { return v.Action }).(GuardrailSensitiveInformationActionOutput)
}

func (o GuardrailPiiEntityConfigOutput) Type() GuardrailPiiEntityTypeOutput {
	return o.ApplyT(func(v GuardrailPiiEntityConfig) GuardrailPiiEntityType { return v.Type }).(GuardrailPiiEntityTypeOutput)
}

type GuardrailPiiEntityConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailPiiEntityConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailPiiEntityConfig)(nil)).Elem()
}

func (o GuardrailPiiEntityConfigArrayOutput) ToGuardrailPiiEntityConfigArrayOutput() GuardrailPiiEntityConfigArrayOutput {
	return o
}

func (o GuardrailPiiEntityConfigArrayOutput) ToGuardrailPiiEntityConfigArrayOutputWithContext(ctx context.Context) GuardrailPiiEntityConfigArrayOutput {
	return o
}

func (o GuardrailPiiEntityConfigArrayOutput) Index(i pulumi.IntInput) GuardrailPiiEntityConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailPiiEntityConfig {
		return vs[0].([]GuardrailPiiEntityConfig)[vs[1].(int)]
	}).(GuardrailPiiEntityConfigOutput)
}

// A regex configuration.
type GuardrailRegexConfig struct {
	Action GuardrailSensitiveInformationAction `pulumi:"action"`
	// The regex description.
	Description *string `pulumi:"description"`
	// The regex name.
	Name string `pulumi:"name"`
	// The regex pattern.
	Pattern string `pulumi:"pattern"`
}

// GuardrailRegexConfigInput is an input type that accepts GuardrailRegexConfigArgs and GuardrailRegexConfigOutput values.
// You can construct a concrete instance of `GuardrailRegexConfigInput` via:
//
//	GuardrailRegexConfigArgs{...}
type GuardrailRegexConfigInput interface {
	pulumi.Input

	ToGuardrailRegexConfigOutput() GuardrailRegexConfigOutput
	ToGuardrailRegexConfigOutputWithContext(context.Context) GuardrailRegexConfigOutput
}

// A regex configuration.
type GuardrailRegexConfigArgs struct {
	Action GuardrailSensitiveInformationActionInput `pulumi:"action"`
	// The regex description.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The regex name.
	Name pulumi.StringInput `pulumi:"name"`
	// The regex pattern.
	Pattern pulumi.StringInput `pulumi:"pattern"`
}

func (GuardrailRegexConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailRegexConfig)(nil)).Elem()
}

func (i GuardrailRegexConfigArgs) ToGuardrailRegexConfigOutput() GuardrailRegexConfigOutput {
	return i.ToGuardrailRegexConfigOutputWithContext(context.Background())
}

func (i GuardrailRegexConfigArgs) ToGuardrailRegexConfigOutputWithContext(ctx context.Context) GuardrailRegexConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailRegexConfigOutput)
}

// GuardrailRegexConfigArrayInput is an input type that accepts GuardrailRegexConfigArray and GuardrailRegexConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailRegexConfigArrayInput` via:
//
//	GuardrailRegexConfigArray{ GuardrailRegexConfigArgs{...} }
type GuardrailRegexConfigArrayInput interface {
	pulumi.Input

	ToGuardrailRegexConfigArrayOutput() GuardrailRegexConfigArrayOutput
	ToGuardrailRegexConfigArrayOutputWithContext(context.Context) GuardrailRegexConfigArrayOutput
}

type GuardrailRegexConfigArray []GuardrailRegexConfigInput

func (GuardrailRegexConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailRegexConfig)(nil)).Elem()
}

func (i GuardrailRegexConfigArray) ToGuardrailRegexConfigArrayOutput() GuardrailRegexConfigArrayOutput {
	return i.ToGuardrailRegexConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailRegexConfigArray) ToGuardrailRegexConfigArrayOutputWithContext(ctx context.Context) GuardrailRegexConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailRegexConfigArrayOutput)
}

// A regex configuration.
type GuardrailRegexConfigOutput struct{ *pulumi.OutputState }

func (GuardrailRegexConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailRegexConfig)(nil)).Elem()
}

func (o GuardrailRegexConfigOutput) ToGuardrailRegexConfigOutput() GuardrailRegexConfigOutput {
	return o
}

func (o GuardrailRegexConfigOutput) ToGuardrailRegexConfigOutputWithContext(ctx context.Context) GuardrailRegexConfigOutput {
	return o
}

func (o GuardrailRegexConfigOutput) Action() GuardrailSensitiveInformationActionOutput {
	return o.ApplyT(func(v GuardrailRegexConfig) GuardrailSensitiveInformationAction { return v.Action }).(GuardrailSensitiveInformationActionOutput)
}

// The regex description.
func (o GuardrailRegexConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardrailRegexConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The regex name.
func (o GuardrailRegexConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GuardrailRegexConfig) string { return v.Name }).(pulumi.StringOutput)
}

// The regex pattern.
func (o GuardrailRegexConfigOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v GuardrailRegexConfig) string { return v.Pattern }).(pulumi.StringOutput)
}

type GuardrailRegexConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailRegexConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailRegexConfig)(nil)).Elem()
}

func (o GuardrailRegexConfigArrayOutput) ToGuardrailRegexConfigArrayOutput() GuardrailRegexConfigArrayOutput {
	return o
}

func (o GuardrailRegexConfigArrayOutput) ToGuardrailRegexConfigArrayOutputWithContext(ctx context.Context) GuardrailRegexConfigArrayOutput {
	return o
}

func (o GuardrailRegexConfigArrayOutput) Index(i pulumi.IntInput) GuardrailRegexConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailRegexConfig {
		return vs[0].([]GuardrailRegexConfig)[vs[1].(int)]
	}).(GuardrailRegexConfigOutput)
}

// Sensitive information policy config for a guardrail.
type GuardrailSensitiveInformationPolicyConfig struct {
	// List of entities.
	PiiEntitiesConfig []GuardrailPiiEntityConfig `pulumi:"piiEntitiesConfig"`
	// List of regex.
	RegexesConfig []GuardrailRegexConfig `pulumi:"regexesConfig"`
}

// GuardrailSensitiveInformationPolicyConfigInput is an input type that accepts GuardrailSensitiveInformationPolicyConfigArgs and GuardrailSensitiveInformationPolicyConfigOutput values.
// You can construct a concrete instance of `GuardrailSensitiveInformationPolicyConfigInput` via:
//
//	GuardrailSensitiveInformationPolicyConfigArgs{...}
type GuardrailSensitiveInformationPolicyConfigInput interface {
	pulumi.Input

	ToGuardrailSensitiveInformationPolicyConfigOutput() GuardrailSensitiveInformationPolicyConfigOutput
	ToGuardrailSensitiveInformationPolicyConfigOutputWithContext(context.Context) GuardrailSensitiveInformationPolicyConfigOutput
}

// Sensitive information policy config for a guardrail.
type GuardrailSensitiveInformationPolicyConfigArgs struct {
	// List of entities.
	PiiEntitiesConfig GuardrailPiiEntityConfigArrayInput `pulumi:"piiEntitiesConfig"`
	// List of regex.
	RegexesConfig GuardrailRegexConfigArrayInput `pulumi:"regexesConfig"`
}

func (GuardrailSensitiveInformationPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailSensitiveInformationPolicyConfig)(nil)).Elem()
}

func (i GuardrailSensitiveInformationPolicyConfigArgs) ToGuardrailSensitiveInformationPolicyConfigOutput() GuardrailSensitiveInformationPolicyConfigOutput {
	return i.ToGuardrailSensitiveInformationPolicyConfigOutputWithContext(context.Background())
}

func (i GuardrailSensitiveInformationPolicyConfigArgs) ToGuardrailSensitiveInformationPolicyConfigOutputWithContext(ctx context.Context) GuardrailSensitiveInformationPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailSensitiveInformationPolicyConfigOutput)
}

func (i GuardrailSensitiveInformationPolicyConfigArgs) ToGuardrailSensitiveInformationPolicyConfigPtrOutput() GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return i.ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(context.Background())
}

func (i GuardrailSensitiveInformationPolicyConfigArgs) ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailSensitiveInformationPolicyConfigOutput).ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(ctx)
}

// GuardrailSensitiveInformationPolicyConfigPtrInput is an input type that accepts GuardrailSensitiveInformationPolicyConfigArgs, GuardrailSensitiveInformationPolicyConfigPtr and GuardrailSensitiveInformationPolicyConfigPtrOutput values.
// You can construct a concrete instance of `GuardrailSensitiveInformationPolicyConfigPtrInput` via:
//
//	        GuardrailSensitiveInformationPolicyConfigArgs{...}
//
//	or:
//
//	        nil
type GuardrailSensitiveInformationPolicyConfigPtrInput interface {
	pulumi.Input

	ToGuardrailSensitiveInformationPolicyConfigPtrOutput() GuardrailSensitiveInformationPolicyConfigPtrOutput
	ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(context.Context) GuardrailSensitiveInformationPolicyConfigPtrOutput
}

type guardrailSensitiveInformationPolicyConfigPtrType GuardrailSensitiveInformationPolicyConfigArgs

func GuardrailSensitiveInformationPolicyConfigPtr(v *GuardrailSensitiveInformationPolicyConfigArgs) GuardrailSensitiveInformationPolicyConfigPtrInput {
	return (*guardrailSensitiveInformationPolicyConfigPtrType)(v)
}

func (*guardrailSensitiveInformationPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailSensitiveInformationPolicyConfig)(nil)).Elem()
}

func (i *guardrailSensitiveInformationPolicyConfigPtrType) ToGuardrailSensitiveInformationPolicyConfigPtrOutput() GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return i.ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *guardrailSensitiveInformationPolicyConfigPtrType) ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailSensitiveInformationPolicyConfigPtrOutput)
}

// Sensitive information policy config for a guardrail.
type GuardrailSensitiveInformationPolicyConfigOutput struct{ *pulumi.OutputState }

func (GuardrailSensitiveInformationPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailSensitiveInformationPolicyConfig)(nil)).Elem()
}

func (o GuardrailSensitiveInformationPolicyConfigOutput) ToGuardrailSensitiveInformationPolicyConfigOutput() GuardrailSensitiveInformationPolicyConfigOutput {
	return o
}

func (o GuardrailSensitiveInformationPolicyConfigOutput) ToGuardrailSensitiveInformationPolicyConfigOutputWithContext(ctx context.Context) GuardrailSensitiveInformationPolicyConfigOutput {
	return o
}

func (o GuardrailSensitiveInformationPolicyConfigOutput) ToGuardrailSensitiveInformationPolicyConfigPtrOutput() GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return o.ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(context.Background())
}

func (o GuardrailSensitiveInformationPolicyConfigOutput) ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardrailSensitiveInformationPolicyConfig) *GuardrailSensitiveInformationPolicyConfig {
		return &v
	}).(GuardrailSensitiveInformationPolicyConfigPtrOutput)
}

// List of entities.
func (o GuardrailSensitiveInformationPolicyConfigOutput) PiiEntitiesConfig() GuardrailPiiEntityConfigArrayOutput {
	return o.ApplyT(func(v GuardrailSensitiveInformationPolicyConfig) []GuardrailPiiEntityConfig {
		return v.PiiEntitiesConfig
	}).(GuardrailPiiEntityConfigArrayOutput)
}

// List of regex.
func (o GuardrailSensitiveInformationPolicyConfigOutput) RegexesConfig() GuardrailRegexConfigArrayOutput {
	return o.ApplyT(func(v GuardrailSensitiveInformationPolicyConfig) []GuardrailRegexConfig { return v.RegexesConfig }).(GuardrailRegexConfigArrayOutput)
}

type GuardrailSensitiveInformationPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (GuardrailSensitiveInformationPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailSensitiveInformationPolicyConfig)(nil)).Elem()
}

func (o GuardrailSensitiveInformationPolicyConfigPtrOutput) ToGuardrailSensitiveInformationPolicyConfigPtrOutput() GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return o
}

func (o GuardrailSensitiveInformationPolicyConfigPtrOutput) ToGuardrailSensitiveInformationPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return o
}

func (o GuardrailSensitiveInformationPolicyConfigPtrOutput) Elem() GuardrailSensitiveInformationPolicyConfigOutput {
	return o.ApplyT(func(v *GuardrailSensitiveInformationPolicyConfig) GuardrailSensitiveInformationPolicyConfig {
		if v != nil {
			return *v
		}
		var ret GuardrailSensitiveInformationPolicyConfig
		return ret
	}).(GuardrailSensitiveInformationPolicyConfigOutput)
}

// List of entities.
func (o GuardrailSensitiveInformationPolicyConfigPtrOutput) PiiEntitiesConfig() GuardrailPiiEntityConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailSensitiveInformationPolicyConfig) []GuardrailPiiEntityConfig {
		if v == nil {
			return nil
		}
		return v.PiiEntitiesConfig
	}).(GuardrailPiiEntityConfigArrayOutput)
}

// List of regex.
func (o GuardrailSensitiveInformationPolicyConfigPtrOutput) RegexesConfig() GuardrailRegexConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailSensitiveInformationPolicyConfig) []GuardrailRegexConfig {
		if v == nil {
			return nil
		}
		return v.RegexesConfig
	}).(GuardrailRegexConfigArrayOutput)
}

// Definition of the key/value pair for a tag
type GuardrailTag struct {
	// Tag Key
	Key string `pulumi:"key"`
	// Tag Value
	Value string `pulumi:"value"`
}

// Topic config in topic policy.
type GuardrailTopicConfig struct {
	// Definition of topic in topic policy
	Definition string `pulumi:"definition"`
	// List of text examples
	Examples []string `pulumi:"examples"`
	// Name of topic in topic policy
	Name string             `pulumi:"name"`
	Type GuardrailTopicType `pulumi:"type"`
}

// GuardrailTopicConfigInput is an input type that accepts GuardrailTopicConfigArgs and GuardrailTopicConfigOutput values.
// You can construct a concrete instance of `GuardrailTopicConfigInput` via:
//
//	GuardrailTopicConfigArgs{...}
type GuardrailTopicConfigInput interface {
	pulumi.Input

	ToGuardrailTopicConfigOutput() GuardrailTopicConfigOutput
	ToGuardrailTopicConfigOutputWithContext(context.Context) GuardrailTopicConfigOutput
}

// Topic config in topic policy.
type GuardrailTopicConfigArgs struct {
	// Definition of topic in topic policy
	Definition pulumi.StringInput `pulumi:"definition"`
	// List of text examples
	Examples pulumi.StringArrayInput `pulumi:"examples"`
	// Name of topic in topic policy
	Name pulumi.StringInput      `pulumi:"name"`
	Type GuardrailTopicTypeInput `pulumi:"type"`
}

func (GuardrailTopicConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailTopicConfig)(nil)).Elem()
}

func (i GuardrailTopicConfigArgs) ToGuardrailTopicConfigOutput() GuardrailTopicConfigOutput {
	return i.ToGuardrailTopicConfigOutputWithContext(context.Background())
}

func (i GuardrailTopicConfigArgs) ToGuardrailTopicConfigOutputWithContext(ctx context.Context) GuardrailTopicConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailTopicConfigOutput)
}

// GuardrailTopicConfigArrayInput is an input type that accepts GuardrailTopicConfigArray and GuardrailTopicConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailTopicConfigArrayInput` via:
//
//	GuardrailTopicConfigArray{ GuardrailTopicConfigArgs{...} }
type GuardrailTopicConfigArrayInput interface {
	pulumi.Input

	ToGuardrailTopicConfigArrayOutput() GuardrailTopicConfigArrayOutput
	ToGuardrailTopicConfigArrayOutputWithContext(context.Context) GuardrailTopicConfigArrayOutput
}

type GuardrailTopicConfigArray []GuardrailTopicConfigInput

func (GuardrailTopicConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailTopicConfig)(nil)).Elem()
}

func (i GuardrailTopicConfigArray) ToGuardrailTopicConfigArrayOutput() GuardrailTopicConfigArrayOutput {
	return i.ToGuardrailTopicConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailTopicConfigArray) ToGuardrailTopicConfigArrayOutputWithContext(ctx context.Context) GuardrailTopicConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailTopicConfigArrayOutput)
}

// Topic config in topic policy.
type GuardrailTopicConfigOutput struct{ *pulumi.OutputState }

func (GuardrailTopicConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailTopicConfig)(nil)).Elem()
}

func (o GuardrailTopicConfigOutput) ToGuardrailTopicConfigOutput() GuardrailTopicConfigOutput {
	return o
}

func (o GuardrailTopicConfigOutput) ToGuardrailTopicConfigOutputWithContext(ctx context.Context) GuardrailTopicConfigOutput {
	return o
}

// Definition of topic in topic policy
func (o GuardrailTopicConfigOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v GuardrailTopicConfig) string { return v.Definition }).(pulumi.StringOutput)
}

// List of text examples
func (o GuardrailTopicConfigOutput) Examples() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuardrailTopicConfig) []string { return v.Examples }).(pulumi.StringArrayOutput)
}

// Name of topic in topic policy
func (o GuardrailTopicConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GuardrailTopicConfig) string { return v.Name }).(pulumi.StringOutput)
}

func (o GuardrailTopicConfigOutput) Type() GuardrailTopicTypeOutput {
	return o.ApplyT(func(v GuardrailTopicConfig) GuardrailTopicType { return v.Type }).(GuardrailTopicTypeOutput)
}

type GuardrailTopicConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailTopicConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailTopicConfig)(nil)).Elem()
}

func (o GuardrailTopicConfigArrayOutput) ToGuardrailTopicConfigArrayOutput() GuardrailTopicConfigArrayOutput {
	return o
}

func (o GuardrailTopicConfigArrayOutput) ToGuardrailTopicConfigArrayOutputWithContext(ctx context.Context) GuardrailTopicConfigArrayOutput {
	return o
}

func (o GuardrailTopicConfigArrayOutput) Index(i pulumi.IntInput) GuardrailTopicConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailTopicConfig {
		return vs[0].([]GuardrailTopicConfig)[vs[1].(int)]
	}).(GuardrailTopicConfigOutput)
}

// Topic policy config for a guardrail.
type GuardrailTopicPolicyConfig struct {
	// List of topic configs in topic policy.
	TopicsConfig []GuardrailTopicConfig `pulumi:"topicsConfig"`
}

// GuardrailTopicPolicyConfigInput is an input type that accepts GuardrailTopicPolicyConfigArgs and GuardrailTopicPolicyConfigOutput values.
// You can construct a concrete instance of `GuardrailTopicPolicyConfigInput` via:
//
//	GuardrailTopicPolicyConfigArgs{...}
type GuardrailTopicPolicyConfigInput interface {
	pulumi.Input

	ToGuardrailTopicPolicyConfigOutput() GuardrailTopicPolicyConfigOutput
	ToGuardrailTopicPolicyConfigOutputWithContext(context.Context) GuardrailTopicPolicyConfigOutput
}

// Topic policy config for a guardrail.
type GuardrailTopicPolicyConfigArgs struct {
	// List of topic configs in topic policy.
	TopicsConfig GuardrailTopicConfigArrayInput `pulumi:"topicsConfig"`
}

func (GuardrailTopicPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailTopicPolicyConfig)(nil)).Elem()
}

func (i GuardrailTopicPolicyConfigArgs) ToGuardrailTopicPolicyConfigOutput() GuardrailTopicPolicyConfigOutput {
	return i.ToGuardrailTopicPolicyConfigOutputWithContext(context.Background())
}

func (i GuardrailTopicPolicyConfigArgs) ToGuardrailTopicPolicyConfigOutputWithContext(ctx context.Context) GuardrailTopicPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailTopicPolicyConfigOutput)
}

func (i GuardrailTopicPolicyConfigArgs) ToGuardrailTopicPolicyConfigPtrOutput() GuardrailTopicPolicyConfigPtrOutput {
	return i.ToGuardrailTopicPolicyConfigPtrOutputWithContext(context.Background())
}

func (i GuardrailTopicPolicyConfigArgs) ToGuardrailTopicPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailTopicPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailTopicPolicyConfigOutput).ToGuardrailTopicPolicyConfigPtrOutputWithContext(ctx)
}

// GuardrailTopicPolicyConfigPtrInput is an input type that accepts GuardrailTopicPolicyConfigArgs, GuardrailTopicPolicyConfigPtr and GuardrailTopicPolicyConfigPtrOutput values.
// You can construct a concrete instance of `GuardrailTopicPolicyConfigPtrInput` via:
//
//	        GuardrailTopicPolicyConfigArgs{...}
//
//	or:
//
//	        nil
type GuardrailTopicPolicyConfigPtrInput interface {
	pulumi.Input

	ToGuardrailTopicPolicyConfigPtrOutput() GuardrailTopicPolicyConfigPtrOutput
	ToGuardrailTopicPolicyConfigPtrOutputWithContext(context.Context) GuardrailTopicPolicyConfigPtrOutput
}

type guardrailTopicPolicyConfigPtrType GuardrailTopicPolicyConfigArgs

func GuardrailTopicPolicyConfigPtr(v *GuardrailTopicPolicyConfigArgs) GuardrailTopicPolicyConfigPtrInput {
	return (*guardrailTopicPolicyConfigPtrType)(v)
}

func (*guardrailTopicPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailTopicPolicyConfig)(nil)).Elem()
}

func (i *guardrailTopicPolicyConfigPtrType) ToGuardrailTopicPolicyConfigPtrOutput() GuardrailTopicPolicyConfigPtrOutput {
	return i.ToGuardrailTopicPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *guardrailTopicPolicyConfigPtrType) ToGuardrailTopicPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailTopicPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailTopicPolicyConfigPtrOutput)
}

// Topic policy config for a guardrail.
type GuardrailTopicPolicyConfigOutput struct{ *pulumi.OutputState }

func (GuardrailTopicPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailTopicPolicyConfig)(nil)).Elem()
}

func (o GuardrailTopicPolicyConfigOutput) ToGuardrailTopicPolicyConfigOutput() GuardrailTopicPolicyConfigOutput {
	return o
}

func (o GuardrailTopicPolicyConfigOutput) ToGuardrailTopicPolicyConfigOutputWithContext(ctx context.Context) GuardrailTopicPolicyConfigOutput {
	return o
}

func (o GuardrailTopicPolicyConfigOutput) ToGuardrailTopicPolicyConfigPtrOutput() GuardrailTopicPolicyConfigPtrOutput {
	return o.ToGuardrailTopicPolicyConfigPtrOutputWithContext(context.Background())
}

func (o GuardrailTopicPolicyConfigOutput) ToGuardrailTopicPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailTopicPolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardrailTopicPolicyConfig) *GuardrailTopicPolicyConfig {
		return &v
	}).(GuardrailTopicPolicyConfigPtrOutput)
}

// List of topic configs in topic policy.
func (o GuardrailTopicPolicyConfigOutput) TopicsConfig() GuardrailTopicConfigArrayOutput {
	return o.ApplyT(func(v GuardrailTopicPolicyConfig) []GuardrailTopicConfig { return v.TopicsConfig }).(GuardrailTopicConfigArrayOutput)
}

type GuardrailTopicPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (GuardrailTopicPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailTopicPolicyConfig)(nil)).Elem()
}

func (o GuardrailTopicPolicyConfigPtrOutput) ToGuardrailTopicPolicyConfigPtrOutput() GuardrailTopicPolicyConfigPtrOutput {
	return o
}

func (o GuardrailTopicPolicyConfigPtrOutput) ToGuardrailTopicPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailTopicPolicyConfigPtrOutput {
	return o
}

func (o GuardrailTopicPolicyConfigPtrOutput) Elem() GuardrailTopicPolicyConfigOutput {
	return o.ApplyT(func(v *GuardrailTopicPolicyConfig) GuardrailTopicPolicyConfig {
		if v != nil {
			return *v
		}
		var ret GuardrailTopicPolicyConfig
		return ret
	}).(GuardrailTopicPolicyConfigOutput)
}

// List of topic configs in topic policy.
func (o GuardrailTopicPolicyConfigPtrOutput) TopicsConfig() GuardrailTopicConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailTopicPolicyConfig) []GuardrailTopicConfig {
		if v == nil {
			return nil
		}
		return v.TopicsConfig
	}).(GuardrailTopicConfigArrayOutput)
}

// A custom word config.
type GuardrailWordConfig struct {
	// The custom word text.
	Text string `pulumi:"text"`
}

// GuardrailWordConfigInput is an input type that accepts GuardrailWordConfigArgs and GuardrailWordConfigOutput values.
// You can construct a concrete instance of `GuardrailWordConfigInput` via:
//
//	GuardrailWordConfigArgs{...}
type GuardrailWordConfigInput interface {
	pulumi.Input

	ToGuardrailWordConfigOutput() GuardrailWordConfigOutput
	ToGuardrailWordConfigOutputWithContext(context.Context) GuardrailWordConfigOutput
}

// A custom word config.
type GuardrailWordConfigArgs struct {
	// The custom word text.
	Text pulumi.StringInput `pulumi:"text"`
}

func (GuardrailWordConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailWordConfig)(nil)).Elem()
}

func (i GuardrailWordConfigArgs) ToGuardrailWordConfigOutput() GuardrailWordConfigOutput {
	return i.ToGuardrailWordConfigOutputWithContext(context.Background())
}

func (i GuardrailWordConfigArgs) ToGuardrailWordConfigOutputWithContext(ctx context.Context) GuardrailWordConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailWordConfigOutput)
}

// GuardrailWordConfigArrayInput is an input type that accepts GuardrailWordConfigArray and GuardrailWordConfigArrayOutput values.
// You can construct a concrete instance of `GuardrailWordConfigArrayInput` via:
//
//	GuardrailWordConfigArray{ GuardrailWordConfigArgs{...} }
type GuardrailWordConfigArrayInput interface {
	pulumi.Input

	ToGuardrailWordConfigArrayOutput() GuardrailWordConfigArrayOutput
	ToGuardrailWordConfigArrayOutputWithContext(context.Context) GuardrailWordConfigArrayOutput
}

type GuardrailWordConfigArray []GuardrailWordConfigInput

func (GuardrailWordConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailWordConfig)(nil)).Elem()
}

func (i GuardrailWordConfigArray) ToGuardrailWordConfigArrayOutput() GuardrailWordConfigArrayOutput {
	return i.ToGuardrailWordConfigArrayOutputWithContext(context.Background())
}

func (i GuardrailWordConfigArray) ToGuardrailWordConfigArrayOutputWithContext(ctx context.Context) GuardrailWordConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailWordConfigArrayOutput)
}

// A custom word config.
type GuardrailWordConfigOutput struct{ *pulumi.OutputState }

func (GuardrailWordConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailWordConfig)(nil)).Elem()
}

func (o GuardrailWordConfigOutput) ToGuardrailWordConfigOutput() GuardrailWordConfigOutput {
	return o
}

func (o GuardrailWordConfigOutput) ToGuardrailWordConfigOutputWithContext(ctx context.Context) GuardrailWordConfigOutput {
	return o
}

// The custom word text.
func (o GuardrailWordConfigOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GuardrailWordConfig) string { return v.Text }).(pulumi.StringOutput)
}

type GuardrailWordConfigArrayOutput struct{ *pulumi.OutputState }

func (GuardrailWordConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GuardrailWordConfig)(nil)).Elem()
}

func (o GuardrailWordConfigArrayOutput) ToGuardrailWordConfigArrayOutput() GuardrailWordConfigArrayOutput {
	return o
}

func (o GuardrailWordConfigArrayOutput) ToGuardrailWordConfigArrayOutputWithContext(ctx context.Context) GuardrailWordConfigArrayOutput {
	return o
}

func (o GuardrailWordConfigArrayOutput) Index(i pulumi.IntInput) GuardrailWordConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GuardrailWordConfig {
		return vs[0].([]GuardrailWordConfig)[vs[1].(int)]
	}).(GuardrailWordConfigOutput)
}

// Word policy config for a guardrail.
type GuardrailWordPolicyConfig struct {
	// A config for the list of managed words.
	ManagedWordListsConfig []GuardrailManagedWordsConfig `pulumi:"managedWordListsConfig"`
	// List of custom word configs.
	WordsConfig []GuardrailWordConfig `pulumi:"wordsConfig"`
}

// GuardrailWordPolicyConfigInput is an input type that accepts GuardrailWordPolicyConfigArgs and GuardrailWordPolicyConfigOutput values.
// You can construct a concrete instance of `GuardrailWordPolicyConfigInput` via:
//
//	GuardrailWordPolicyConfigArgs{...}
type GuardrailWordPolicyConfigInput interface {
	pulumi.Input

	ToGuardrailWordPolicyConfigOutput() GuardrailWordPolicyConfigOutput
	ToGuardrailWordPolicyConfigOutputWithContext(context.Context) GuardrailWordPolicyConfigOutput
}

// Word policy config for a guardrail.
type GuardrailWordPolicyConfigArgs struct {
	// A config for the list of managed words.
	ManagedWordListsConfig GuardrailManagedWordsConfigArrayInput `pulumi:"managedWordListsConfig"`
	// List of custom word configs.
	WordsConfig GuardrailWordConfigArrayInput `pulumi:"wordsConfig"`
}

func (GuardrailWordPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailWordPolicyConfig)(nil)).Elem()
}

func (i GuardrailWordPolicyConfigArgs) ToGuardrailWordPolicyConfigOutput() GuardrailWordPolicyConfigOutput {
	return i.ToGuardrailWordPolicyConfigOutputWithContext(context.Background())
}

func (i GuardrailWordPolicyConfigArgs) ToGuardrailWordPolicyConfigOutputWithContext(ctx context.Context) GuardrailWordPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailWordPolicyConfigOutput)
}

func (i GuardrailWordPolicyConfigArgs) ToGuardrailWordPolicyConfigPtrOutput() GuardrailWordPolicyConfigPtrOutput {
	return i.ToGuardrailWordPolicyConfigPtrOutputWithContext(context.Background())
}

func (i GuardrailWordPolicyConfigArgs) ToGuardrailWordPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailWordPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailWordPolicyConfigOutput).ToGuardrailWordPolicyConfigPtrOutputWithContext(ctx)
}

// GuardrailWordPolicyConfigPtrInput is an input type that accepts GuardrailWordPolicyConfigArgs, GuardrailWordPolicyConfigPtr and GuardrailWordPolicyConfigPtrOutput values.
// You can construct a concrete instance of `GuardrailWordPolicyConfigPtrInput` via:
//
//	        GuardrailWordPolicyConfigArgs{...}
//
//	or:
//
//	        nil
type GuardrailWordPolicyConfigPtrInput interface {
	pulumi.Input

	ToGuardrailWordPolicyConfigPtrOutput() GuardrailWordPolicyConfigPtrOutput
	ToGuardrailWordPolicyConfigPtrOutputWithContext(context.Context) GuardrailWordPolicyConfigPtrOutput
}

type guardrailWordPolicyConfigPtrType GuardrailWordPolicyConfigArgs

func GuardrailWordPolicyConfigPtr(v *GuardrailWordPolicyConfigArgs) GuardrailWordPolicyConfigPtrInput {
	return (*guardrailWordPolicyConfigPtrType)(v)
}

func (*guardrailWordPolicyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailWordPolicyConfig)(nil)).Elem()
}

func (i *guardrailWordPolicyConfigPtrType) ToGuardrailWordPolicyConfigPtrOutput() GuardrailWordPolicyConfigPtrOutput {
	return i.ToGuardrailWordPolicyConfigPtrOutputWithContext(context.Background())
}

func (i *guardrailWordPolicyConfigPtrType) ToGuardrailWordPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailWordPolicyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailWordPolicyConfigPtrOutput)
}

// Word policy config for a guardrail.
type GuardrailWordPolicyConfigOutput struct{ *pulumi.OutputState }

func (GuardrailWordPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardrailWordPolicyConfig)(nil)).Elem()
}

func (o GuardrailWordPolicyConfigOutput) ToGuardrailWordPolicyConfigOutput() GuardrailWordPolicyConfigOutput {
	return o
}

func (o GuardrailWordPolicyConfigOutput) ToGuardrailWordPolicyConfigOutputWithContext(ctx context.Context) GuardrailWordPolicyConfigOutput {
	return o
}

func (o GuardrailWordPolicyConfigOutput) ToGuardrailWordPolicyConfigPtrOutput() GuardrailWordPolicyConfigPtrOutput {
	return o.ToGuardrailWordPolicyConfigPtrOutputWithContext(context.Background())
}

func (o GuardrailWordPolicyConfigOutput) ToGuardrailWordPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailWordPolicyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardrailWordPolicyConfig) *GuardrailWordPolicyConfig {
		return &v
	}).(GuardrailWordPolicyConfigPtrOutput)
}

// A config for the list of managed words.
func (o GuardrailWordPolicyConfigOutput) ManagedWordListsConfig() GuardrailManagedWordsConfigArrayOutput {
	return o.ApplyT(func(v GuardrailWordPolicyConfig) []GuardrailManagedWordsConfig { return v.ManagedWordListsConfig }).(GuardrailManagedWordsConfigArrayOutput)
}

// List of custom word configs.
func (o GuardrailWordPolicyConfigOutput) WordsConfig() GuardrailWordConfigArrayOutput {
	return o.ApplyT(func(v GuardrailWordPolicyConfig) []GuardrailWordConfig { return v.WordsConfig }).(GuardrailWordConfigArrayOutput)
}

type GuardrailWordPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (GuardrailWordPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardrailWordPolicyConfig)(nil)).Elem()
}

func (o GuardrailWordPolicyConfigPtrOutput) ToGuardrailWordPolicyConfigPtrOutput() GuardrailWordPolicyConfigPtrOutput {
	return o
}

func (o GuardrailWordPolicyConfigPtrOutput) ToGuardrailWordPolicyConfigPtrOutputWithContext(ctx context.Context) GuardrailWordPolicyConfigPtrOutput {
	return o
}

func (o GuardrailWordPolicyConfigPtrOutput) Elem() GuardrailWordPolicyConfigOutput {
	return o.ApplyT(func(v *GuardrailWordPolicyConfig) GuardrailWordPolicyConfig {
		if v != nil {
			return *v
		}
		var ret GuardrailWordPolicyConfig
		return ret
	}).(GuardrailWordPolicyConfigOutput)
}

// A config for the list of managed words.
func (o GuardrailWordPolicyConfigPtrOutput) ManagedWordListsConfig() GuardrailManagedWordsConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailWordPolicyConfig) []GuardrailManagedWordsConfig {
		if v == nil {
			return nil
		}
		return v.ManagedWordListsConfig
	}).(GuardrailManagedWordsConfigArrayOutput)
}

// List of custom word configs.
func (o GuardrailWordPolicyConfigPtrOutput) WordsConfig() GuardrailWordConfigArrayOutput {
	return o.ApplyT(func(v *GuardrailWordPolicyConfig) []GuardrailWordConfig {
		if v == nil {
			return nil
		}
		return v.WordsConfig
	}).(GuardrailWordConfigArrayOutput)
}

// Contains details about the embeddings model used for the knowledge base.
type KnowledgeBaseConfiguration struct {
	// The type of data that the data source is converted into for the knowledge base.
	Type KnowledgeBaseType `pulumi:"type"`
	// Contains details about the embeddings model that'sused to convert the data source.
	VectorKnowledgeBaseConfiguration KnowledgeBaseVectorKnowledgeBaseConfiguration `pulumi:"vectorKnowledgeBaseConfiguration"`
}

// KnowledgeBaseConfigurationInput is an input type that accepts KnowledgeBaseConfigurationArgs and KnowledgeBaseConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseConfigurationInput` via:
//
//	KnowledgeBaseConfigurationArgs{...}
type KnowledgeBaseConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseConfigurationOutput() KnowledgeBaseConfigurationOutput
	ToKnowledgeBaseConfigurationOutputWithContext(context.Context) KnowledgeBaseConfigurationOutput
}

// Contains details about the embeddings model used for the knowledge base.
type KnowledgeBaseConfigurationArgs struct {
	// The type of data that the data source is converted into for the knowledge base.
	Type KnowledgeBaseTypeInput `pulumi:"type"`
	// Contains details about the embeddings model that'sused to convert the data source.
	VectorKnowledgeBaseConfiguration KnowledgeBaseVectorKnowledgeBaseConfigurationInput `pulumi:"vectorKnowledgeBaseConfiguration"`
}

func (KnowledgeBaseConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseConfigurationArgs) ToKnowledgeBaseConfigurationOutput() KnowledgeBaseConfigurationOutput {
	return i.ToKnowledgeBaseConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseConfigurationArgs) ToKnowledgeBaseConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseConfigurationOutput)
}

// Contains details about the embeddings model used for the knowledge base.
type KnowledgeBaseConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseConfigurationOutput) ToKnowledgeBaseConfigurationOutput() KnowledgeBaseConfigurationOutput {
	return o
}

func (o KnowledgeBaseConfigurationOutput) ToKnowledgeBaseConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseConfigurationOutput {
	return o
}

// The type of data that the data source is converted into for the knowledge base.
func (o KnowledgeBaseConfigurationOutput) Type() KnowledgeBaseTypeOutput {
	return o.ApplyT(func(v KnowledgeBaseConfiguration) KnowledgeBaseType { return v.Type }).(KnowledgeBaseTypeOutput)
}

// Contains details about the embeddings model that'sused to convert the data source.
func (o KnowledgeBaseConfigurationOutput) VectorKnowledgeBaseConfiguration() KnowledgeBaseVectorKnowledgeBaseConfigurationOutput {
	return o.ApplyT(func(v KnowledgeBaseConfiguration) KnowledgeBaseVectorKnowledgeBaseConfiguration {
		return v.VectorKnowledgeBaseConfiguration
	}).(KnowledgeBaseVectorKnowledgeBaseConfigurationOutput)
}

// Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
type KnowledgeBaseOpenSearchServerlessConfiguration struct {
	// The ARN of the OpenSearch Service vector store.
	CollectionArn string `pulumi:"collectionArn"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBaseOpenSearchServerlessFieldMapping `pulumi:"fieldMapping"`
	// The name of the vector store.
	VectorIndexName string `pulumi:"vectorIndexName"`
}

// KnowledgeBaseOpenSearchServerlessConfigurationInput is an input type that accepts KnowledgeBaseOpenSearchServerlessConfigurationArgs and KnowledgeBaseOpenSearchServerlessConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseOpenSearchServerlessConfigurationInput` via:
//
//	KnowledgeBaseOpenSearchServerlessConfigurationArgs{...}
type KnowledgeBaseOpenSearchServerlessConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseOpenSearchServerlessConfigurationOutput() KnowledgeBaseOpenSearchServerlessConfigurationOutput
	ToKnowledgeBaseOpenSearchServerlessConfigurationOutputWithContext(context.Context) KnowledgeBaseOpenSearchServerlessConfigurationOutput
}

// Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
type KnowledgeBaseOpenSearchServerlessConfigurationArgs struct {
	// The ARN of the OpenSearch Service vector store.
	CollectionArn pulumi.StringInput `pulumi:"collectionArn"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBaseOpenSearchServerlessFieldMappingInput `pulumi:"fieldMapping"`
	// The name of the vector store.
	VectorIndexName pulumi.StringInput `pulumi:"vectorIndexName"`
}

func (KnowledgeBaseOpenSearchServerlessConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseOpenSearchServerlessConfigurationArgs) ToKnowledgeBaseOpenSearchServerlessConfigurationOutput() KnowledgeBaseOpenSearchServerlessConfigurationOutput {
	return i.ToKnowledgeBaseOpenSearchServerlessConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseOpenSearchServerlessConfigurationArgs) ToKnowledgeBaseOpenSearchServerlessConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOpenSearchServerlessConfigurationOutput)
}

func (i KnowledgeBaseOpenSearchServerlessConfigurationArgs) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutput() KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return i.ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(context.Background())
}

func (i KnowledgeBaseOpenSearchServerlessConfigurationArgs) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOpenSearchServerlessConfigurationOutput).ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(ctx)
}

// KnowledgeBaseOpenSearchServerlessConfigurationPtrInput is an input type that accepts KnowledgeBaseOpenSearchServerlessConfigurationArgs, KnowledgeBaseOpenSearchServerlessConfigurationPtr and KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput values.
// You can construct a concrete instance of `KnowledgeBaseOpenSearchServerlessConfigurationPtrInput` via:
//
//	        KnowledgeBaseOpenSearchServerlessConfigurationArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBaseOpenSearchServerlessConfigurationPtrInput interface {
	pulumi.Input

	ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutput() KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput
	ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(context.Context) KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput
}

type knowledgeBaseOpenSearchServerlessConfigurationPtrType KnowledgeBaseOpenSearchServerlessConfigurationArgs

func KnowledgeBaseOpenSearchServerlessConfigurationPtr(v *KnowledgeBaseOpenSearchServerlessConfigurationArgs) KnowledgeBaseOpenSearchServerlessConfigurationPtrInput {
	return (*knowledgeBaseOpenSearchServerlessConfigurationPtrType)(v)
}

func (*knowledgeBaseOpenSearchServerlessConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseOpenSearchServerlessConfiguration)(nil)).Elem()
}

func (i *knowledgeBaseOpenSearchServerlessConfigurationPtrType) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutput() KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return i.ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(context.Background())
}

func (i *knowledgeBaseOpenSearchServerlessConfigurationPtrType) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput)
}

// Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
type KnowledgeBaseOpenSearchServerlessConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseOpenSearchServerlessConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) ToKnowledgeBaseOpenSearchServerlessConfigurationOutput() KnowledgeBaseOpenSearchServerlessConfigurationOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) ToKnowledgeBaseOpenSearchServerlessConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessConfigurationOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutput() KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return o.ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(context.Background())
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBaseOpenSearchServerlessConfiguration) *KnowledgeBaseOpenSearchServerlessConfiguration {
		return &v
	}).(KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput)
}

// The ARN of the OpenSearch Service vector store.
func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) CollectionArn() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseOpenSearchServerlessConfiguration) string { return v.CollectionArn }).(pulumi.StringOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) FieldMapping() KnowledgeBaseOpenSearchServerlessFieldMappingOutput {
	return o.ApplyT(func(v KnowledgeBaseOpenSearchServerlessConfiguration) KnowledgeBaseOpenSearchServerlessFieldMapping {
		return v.FieldMapping
	}).(KnowledgeBaseOpenSearchServerlessFieldMappingOutput)
}

// The name of the vector store.
func (o KnowledgeBaseOpenSearchServerlessConfigurationOutput) VectorIndexName() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseOpenSearchServerlessConfiguration) string { return v.VectorIndexName }).(pulumi.StringOutput)
}

type KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseOpenSearchServerlessConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutput() KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) ToKnowledgeBaseOpenSearchServerlessConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) Elem() KnowledgeBaseOpenSearchServerlessConfigurationOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessConfiguration) KnowledgeBaseOpenSearchServerlessConfiguration {
		if v != nil {
			return *v
		}
		var ret KnowledgeBaseOpenSearchServerlessConfiguration
		return ret
	}).(KnowledgeBaseOpenSearchServerlessConfigurationOutput)
}

// The ARN of the OpenSearch Service vector store.
func (o KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) CollectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CollectionArn
	}).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) FieldMapping() KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessConfiguration) *KnowledgeBaseOpenSearchServerlessFieldMapping {
		if v == nil {
			return nil
		}
		return &v.FieldMapping
	}).(KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput)
}

// The name of the vector store.
func (o KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput) VectorIndexName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.VectorIndexName
	}).(pulumi.StringPtrOutput)
}

// A mapping of Bedrock Knowledge Base fields to OpenSearch Serverless field names
type KnowledgeBaseOpenSearchServerlessFieldMapping struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField string `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField string `pulumi:"textField"`
	// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
	VectorField string `pulumi:"vectorField"`
}

// KnowledgeBaseOpenSearchServerlessFieldMappingInput is an input type that accepts KnowledgeBaseOpenSearchServerlessFieldMappingArgs and KnowledgeBaseOpenSearchServerlessFieldMappingOutput values.
// You can construct a concrete instance of `KnowledgeBaseOpenSearchServerlessFieldMappingInput` via:
//
//	KnowledgeBaseOpenSearchServerlessFieldMappingArgs{...}
type KnowledgeBaseOpenSearchServerlessFieldMappingInput interface {
	pulumi.Input

	ToKnowledgeBaseOpenSearchServerlessFieldMappingOutput() KnowledgeBaseOpenSearchServerlessFieldMappingOutput
	ToKnowledgeBaseOpenSearchServerlessFieldMappingOutputWithContext(context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingOutput
}

// A mapping of Bedrock Knowledge Base fields to OpenSearch Serverless field names
type KnowledgeBaseOpenSearchServerlessFieldMappingArgs struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField pulumi.StringInput `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField pulumi.StringInput `pulumi:"textField"`
	// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
	VectorField pulumi.StringInput `pulumi:"vectorField"`
}

func (KnowledgeBaseOpenSearchServerlessFieldMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessFieldMapping)(nil)).Elem()
}

func (i KnowledgeBaseOpenSearchServerlessFieldMappingArgs) ToKnowledgeBaseOpenSearchServerlessFieldMappingOutput() KnowledgeBaseOpenSearchServerlessFieldMappingOutput {
	return i.ToKnowledgeBaseOpenSearchServerlessFieldMappingOutputWithContext(context.Background())
}

func (i KnowledgeBaseOpenSearchServerlessFieldMappingArgs) ToKnowledgeBaseOpenSearchServerlessFieldMappingOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOpenSearchServerlessFieldMappingOutput)
}

func (i KnowledgeBaseOpenSearchServerlessFieldMappingArgs) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput() KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return i.ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(context.Background())
}

func (i KnowledgeBaseOpenSearchServerlessFieldMappingArgs) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOpenSearchServerlessFieldMappingOutput).ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(ctx)
}

// KnowledgeBaseOpenSearchServerlessFieldMappingPtrInput is an input type that accepts KnowledgeBaseOpenSearchServerlessFieldMappingArgs, KnowledgeBaseOpenSearchServerlessFieldMappingPtr and KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput values.
// You can construct a concrete instance of `KnowledgeBaseOpenSearchServerlessFieldMappingPtrInput` via:
//
//	        KnowledgeBaseOpenSearchServerlessFieldMappingArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBaseOpenSearchServerlessFieldMappingPtrInput interface {
	pulumi.Input

	ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput() KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput
	ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput
}

type knowledgeBaseOpenSearchServerlessFieldMappingPtrType KnowledgeBaseOpenSearchServerlessFieldMappingArgs

func KnowledgeBaseOpenSearchServerlessFieldMappingPtr(v *KnowledgeBaseOpenSearchServerlessFieldMappingArgs) KnowledgeBaseOpenSearchServerlessFieldMappingPtrInput {
	return (*knowledgeBaseOpenSearchServerlessFieldMappingPtrType)(v)
}

func (*knowledgeBaseOpenSearchServerlessFieldMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseOpenSearchServerlessFieldMapping)(nil)).Elem()
}

func (i *knowledgeBaseOpenSearchServerlessFieldMappingPtrType) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput() KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return i.ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(context.Background())
}

func (i *knowledgeBaseOpenSearchServerlessFieldMappingPtrType) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput)
}

// A mapping of Bedrock Knowledge Base fields to OpenSearch Serverless field names
type KnowledgeBaseOpenSearchServerlessFieldMappingOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseOpenSearchServerlessFieldMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessFieldMapping)(nil)).Elem()
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) ToKnowledgeBaseOpenSearchServerlessFieldMappingOutput() KnowledgeBaseOpenSearchServerlessFieldMappingOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) ToKnowledgeBaseOpenSearchServerlessFieldMappingOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput() KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return o.ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(context.Background())
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBaseOpenSearchServerlessFieldMapping) *KnowledgeBaseOpenSearchServerlessFieldMapping {
		return &v
	}).(KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) MetadataField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseOpenSearchServerlessFieldMapping) string { return v.MetadataField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) TextField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseOpenSearchServerlessFieldMapping) string { return v.TextField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
func (o KnowledgeBaseOpenSearchServerlessFieldMappingOutput) VectorField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseOpenSearchServerlessFieldMapping) string { return v.VectorField }).(pulumi.StringOutput)
}

type KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseOpenSearchServerlessFieldMapping)(nil)).Elem()
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput() KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) ToKnowledgeBaseOpenSearchServerlessFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) Elem() KnowledgeBaseOpenSearchServerlessFieldMappingOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessFieldMapping) KnowledgeBaseOpenSearchServerlessFieldMapping {
		if v != nil {
			return *v
		}
		var ret KnowledgeBaseOpenSearchServerlessFieldMapping
		return ret
	}).(KnowledgeBaseOpenSearchServerlessFieldMappingOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) MetadataField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.MetadataField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) TextField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.TextField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
func (o KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput) VectorField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseOpenSearchServerlessFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.VectorField
	}).(pulumi.StringPtrOutput)
}

// Contains the storage configuration of the knowledge base in Pinecone.
type KnowledgeBasePineconeConfiguration struct {
	// The endpoint URL for your index management page.
	ConnectionString string `pulumi:"connectionString"`
	// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Pinecone API key.
	CredentialsSecretArn string `pulumi:"credentialsSecretArn"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBasePineconeFieldMapping `pulumi:"fieldMapping"`
	// The namespace to be used to write new data to your database.
	Namespace *string `pulumi:"namespace"`
}

// KnowledgeBasePineconeConfigurationInput is an input type that accepts KnowledgeBasePineconeConfigurationArgs and KnowledgeBasePineconeConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBasePineconeConfigurationInput` via:
//
//	KnowledgeBasePineconeConfigurationArgs{...}
type KnowledgeBasePineconeConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBasePineconeConfigurationOutput() KnowledgeBasePineconeConfigurationOutput
	ToKnowledgeBasePineconeConfigurationOutputWithContext(context.Context) KnowledgeBasePineconeConfigurationOutput
}

// Contains the storage configuration of the knowledge base in Pinecone.
type KnowledgeBasePineconeConfigurationArgs struct {
	// The endpoint URL for your index management page.
	ConnectionString pulumi.StringInput `pulumi:"connectionString"`
	// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Pinecone API key.
	CredentialsSecretArn pulumi.StringInput `pulumi:"credentialsSecretArn"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBasePineconeFieldMappingInput `pulumi:"fieldMapping"`
	// The namespace to be used to write new data to your database.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (KnowledgeBasePineconeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBasePineconeConfiguration)(nil)).Elem()
}

func (i KnowledgeBasePineconeConfigurationArgs) ToKnowledgeBasePineconeConfigurationOutput() KnowledgeBasePineconeConfigurationOutput {
	return i.ToKnowledgeBasePineconeConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBasePineconeConfigurationArgs) ToKnowledgeBasePineconeConfigurationOutputWithContext(ctx context.Context) KnowledgeBasePineconeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBasePineconeConfigurationOutput)
}

func (i KnowledgeBasePineconeConfigurationArgs) ToKnowledgeBasePineconeConfigurationPtrOutput() KnowledgeBasePineconeConfigurationPtrOutput {
	return i.ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(context.Background())
}

func (i KnowledgeBasePineconeConfigurationArgs) ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBasePineconeConfigurationOutput).ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(ctx)
}

// KnowledgeBasePineconeConfigurationPtrInput is an input type that accepts KnowledgeBasePineconeConfigurationArgs, KnowledgeBasePineconeConfigurationPtr and KnowledgeBasePineconeConfigurationPtrOutput values.
// You can construct a concrete instance of `KnowledgeBasePineconeConfigurationPtrInput` via:
//
//	        KnowledgeBasePineconeConfigurationArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBasePineconeConfigurationPtrInput interface {
	pulumi.Input

	ToKnowledgeBasePineconeConfigurationPtrOutput() KnowledgeBasePineconeConfigurationPtrOutput
	ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(context.Context) KnowledgeBasePineconeConfigurationPtrOutput
}

type knowledgeBasePineconeConfigurationPtrType KnowledgeBasePineconeConfigurationArgs

func KnowledgeBasePineconeConfigurationPtr(v *KnowledgeBasePineconeConfigurationArgs) KnowledgeBasePineconeConfigurationPtrInput {
	return (*knowledgeBasePineconeConfigurationPtrType)(v)
}

func (*knowledgeBasePineconeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBasePineconeConfiguration)(nil)).Elem()
}

func (i *knowledgeBasePineconeConfigurationPtrType) ToKnowledgeBasePineconeConfigurationPtrOutput() KnowledgeBasePineconeConfigurationPtrOutput {
	return i.ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(context.Background())
}

func (i *knowledgeBasePineconeConfigurationPtrType) ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBasePineconeConfigurationPtrOutput)
}

// Contains the storage configuration of the knowledge base in Pinecone.
type KnowledgeBasePineconeConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBasePineconeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBasePineconeConfiguration)(nil)).Elem()
}

func (o KnowledgeBasePineconeConfigurationOutput) ToKnowledgeBasePineconeConfigurationOutput() KnowledgeBasePineconeConfigurationOutput {
	return o
}

func (o KnowledgeBasePineconeConfigurationOutput) ToKnowledgeBasePineconeConfigurationOutputWithContext(ctx context.Context) KnowledgeBasePineconeConfigurationOutput {
	return o
}

func (o KnowledgeBasePineconeConfigurationOutput) ToKnowledgeBasePineconeConfigurationPtrOutput() KnowledgeBasePineconeConfigurationPtrOutput {
	return o.ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(context.Background())
}

func (o KnowledgeBasePineconeConfigurationOutput) ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBasePineconeConfiguration) *KnowledgeBasePineconeConfiguration {
		return &v
	}).(KnowledgeBasePineconeConfigurationPtrOutput)
}

// The endpoint URL for your index management page.
func (o KnowledgeBasePineconeConfigurationOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBasePineconeConfiguration) string { return v.ConnectionString }).(pulumi.StringOutput)
}

// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Pinecone API key.
func (o KnowledgeBasePineconeConfigurationOutput) CredentialsSecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBasePineconeConfiguration) string { return v.CredentialsSecretArn }).(pulumi.StringOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBasePineconeConfigurationOutput) FieldMapping() KnowledgeBasePineconeFieldMappingOutput {
	return o.ApplyT(func(v KnowledgeBasePineconeConfiguration) KnowledgeBasePineconeFieldMapping { return v.FieldMapping }).(KnowledgeBasePineconeFieldMappingOutput)
}

// The namespace to be used to write new data to your database.
func (o KnowledgeBasePineconeConfigurationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KnowledgeBasePineconeConfiguration) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type KnowledgeBasePineconeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBasePineconeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBasePineconeConfiguration)(nil)).Elem()
}

func (o KnowledgeBasePineconeConfigurationPtrOutput) ToKnowledgeBasePineconeConfigurationPtrOutput() KnowledgeBasePineconeConfigurationPtrOutput {
	return o
}

func (o KnowledgeBasePineconeConfigurationPtrOutput) ToKnowledgeBasePineconeConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeConfigurationPtrOutput {
	return o
}

func (o KnowledgeBasePineconeConfigurationPtrOutput) Elem() KnowledgeBasePineconeConfigurationOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeConfiguration) KnowledgeBasePineconeConfiguration {
		if v != nil {
			return *v
		}
		var ret KnowledgeBasePineconeConfiguration
		return ret
	}).(KnowledgeBasePineconeConfigurationOutput)
}

// The endpoint URL for your index management page.
func (o KnowledgeBasePineconeConfigurationPtrOutput) ConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ConnectionString
	}).(pulumi.StringPtrOutput)
}

// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Pinecone API key.
func (o KnowledgeBasePineconeConfigurationPtrOutput) CredentialsSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialsSecretArn
	}).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBasePineconeConfigurationPtrOutput) FieldMapping() KnowledgeBasePineconeFieldMappingPtrOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeConfiguration) *KnowledgeBasePineconeFieldMapping {
		if v == nil {
			return nil
		}
		return &v.FieldMapping
	}).(KnowledgeBasePineconeFieldMappingPtrOutput)
}

// The namespace to be used to write new data to your database.
func (o KnowledgeBasePineconeConfigurationPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBasePineconeFieldMapping struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField string `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField string `pulumi:"textField"`
}

// KnowledgeBasePineconeFieldMappingInput is an input type that accepts KnowledgeBasePineconeFieldMappingArgs and KnowledgeBasePineconeFieldMappingOutput values.
// You can construct a concrete instance of `KnowledgeBasePineconeFieldMappingInput` via:
//
//	KnowledgeBasePineconeFieldMappingArgs{...}
type KnowledgeBasePineconeFieldMappingInput interface {
	pulumi.Input

	ToKnowledgeBasePineconeFieldMappingOutput() KnowledgeBasePineconeFieldMappingOutput
	ToKnowledgeBasePineconeFieldMappingOutputWithContext(context.Context) KnowledgeBasePineconeFieldMappingOutput
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBasePineconeFieldMappingArgs struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField pulumi.StringInput `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField pulumi.StringInput `pulumi:"textField"`
}

func (KnowledgeBasePineconeFieldMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBasePineconeFieldMapping)(nil)).Elem()
}

func (i KnowledgeBasePineconeFieldMappingArgs) ToKnowledgeBasePineconeFieldMappingOutput() KnowledgeBasePineconeFieldMappingOutput {
	return i.ToKnowledgeBasePineconeFieldMappingOutputWithContext(context.Background())
}

func (i KnowledgeBasePineconeFieldMappingArgs) ToKnowledgeBasePineconeFieldMappingOutputWithContext(ctx context.Context) KnowledgeBasePineconeFieldMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBasePineconeFieldMappingOutput)
}

func (i KnowledgeBasePineconeFieldMappingArgs) ToKnowledgeBasePineconeFieldMappingPtrOutput() KnowledgeBasePineconeFieldMappingPtrOutput {
	return i.ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(context.Background())
}

func (i KnowledgeBasePineconeFieldMappingArgs) ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBasePineconeFieldMappingOutput).ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(ctx)
}

// KnowledgeBasePineconeFieldMappingPtrInput is an input type that accepts KnowledgeBasePineconeFieldMappingArgs, KnowledgeBasePineconeFieldMappingPtr and KnowledgeBasePineconeFieldMappingPtrOutput values.
// You can construct a concrete instance of `KnowledgeBasePineconeFieldMappingPtrInput` via:
//
//	        KnowledgeBasePineconeFieldMappingArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBasePineconeFieldMappingPtrInput interface {
	pulumi.Input

	ToKnowledgeBasePineconeFieldMappingPtrOutput() KnowledgeBasePineconeFieldMappingPtrOutput
	ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(context.Context) KnowledgeBasePineconeFieldMappingPtrOutput
}

type knowledgeBasePineconeFieldMappingPtrType KnowledgeBasePineconeFieldMappingArgs

func KnowledgeBasePineconeFieldMappingPtr(v *KnowledgeBasePineconeFieldMappingArgs) KnowledgeBasePineconeFieldMappingPtrInput {
	return (*knowledgeBasePineconeFieldMappingPtrType)(v)
}

func (*knowledgeBasePineconeFieldMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBasePineconeFieldMapping)(nil)).Elem()
}

func (i *knowledgeBasePineconeFieldMappingPtrType) ToKnowledgeBasePineconeFieldMappingPtrOutput() KnowledgeBasePineconeFieldMappingPtrOutput {
	return i.ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(context.Background())
}

func (i *knowledgeBasePineconeFieldMappingPtrType) ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBasePineconeFieldMappingPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBasePineconeFieldMappingOutput struct{ *pulumi.OutputState }

func (KnowledgeBasePineconeFieldMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBasePineconeFieldMapping)(nil)).Elem()
}

func (o KnowledgeBasePineconeFieldMappingOutput) ToKnowledgeBasePineconeFieldMappingOutput() KnowledgeBasePineconeFieldMappingOutput {
	return o
}

func (o KnowledgeBasePineconeFieldMappingOutput) ToKnowledgeBasePineconeFieldMappingOutputWithContext(ctx context.Context) KnowledgeBasePineconeFieldMappingOutput {
	return o
}

func (o KnowledgeBasePineconeFieldMappingOutput) ToKnowledgeBasePineconeFieldMappingPtrOutput() KnowledgeBasePineconeFieldMappingPtrOutput {
	return o.ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(context.Background())
}

func (o KnowledgeBasePineconeFieldMappingOutput) ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeFieldMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBasePineconeFieldMapping) *KnowledgeBasePineconeFieldMapping {
		return &v
	}).(KnowledgeBasePineconeFieldMappingPtrOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBasePineconeFieldMappingOutput) MetadataField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBasePineconeFieldMapping) string { return v.MetadataField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBasePineconeFieldMappingOutput) TextField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBasePineconeFieldMapping) string { return v.TextField }).(pulumi.StringOutput)
}

type KnowledgeBasePineconeFieldMappingPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBasePineconeFieldMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBasePineconeFieldMapping)(nil)).Elem()
}

func (o KnowledgeBasePineconeFieldMappingPtrOutput) ToKnowledgeBasePineconeFieldMappingPtrOutput() KnowledgeBasePineconeFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBasePineconeFieldMappingPtrOutput) ToKnowledgeBasePineconeFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBasePineconeFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBasePineconeFieldMappingPtrOutput) Elem() KnowledgeBasePineconeFieldMappingOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeFieldMapping) KnowledgeBasePineconeFieldMapping {
		if v != nil {
			return *v
		}
		var ret KnowledgeBasePineconeFieldMapping
		return ret
	}).(KnowledgeBasePineconeFieldMappingOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBasePineconeFieldMappingPtrOutput) MetadataField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.MetadataField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBasePineconeFieldMappingPtrOutput) TextField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBasePineconeFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.TextField
	}).(pulumi.StringPtrOutput)
}

// Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see Create a vector index in Amazon RDS.
type KnowledgeBaseRdsConfiguration struct {
	// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon RDS database.
	CredentialsSecretArn string `pulumi:"credentialsSecretArn"`
	// The name of your Amazon RDS database.
	DatabaseName string `pulumi:"databaseName"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBaseRdsFieldMapping `pulumi:"fieldMapping"`
	// The ARN of the vector store.
	ResourceArn string `pulumi:"resourceArn"`
	// The name of the table in the database.
	TableName string `pulumi:"tableName"`
}

// KnowledgeBaseRdsConfigurationInput is an input type that accepts KnowledgeBaseRdsConfigurationArgs and KnowledgeBaseRdsConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseRdsConfigurationInput` via:
//
//	KnowledgeBaseRdsConfigurationArgs{...}
type KnowledgeBaseRdsConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseRdsConfigurationOutput() KnowledgeBaseRdsConfigurationOutput
	ToKnowledgeBaseRdsConfigurationOutputWithContext(context.Context) KnowledgeBaseRdsConfigurationOutput
}

// Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see Create a vector index in Amazon RDS.
type KnowledgeBaseRdsConfigurationArgs struct {
	// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon RDS database.
	CredentialsSecretArn pulumi.StringInput `pulumi:"credentialsSecretArn"`
	// The name of your Amazon RDS database.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Contains the names of the fields to which to map information about the vector store.
	FieldMapping KnowledgeBaseRdsFieldMappingInput `pulumi:"fieldMapping"`
	// The ARN of the vector store.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
	// The name of the table in the database.
	TableName pulumi.StringInput `pulumi:"tableName"`
}

func (KnowledgeBaseRdsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseRdsConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseRdsConfigurationArgs) ToKnowledgeBaseRdsConfigurationOutput() KnowledgeBaseRdsConfigurationOutput {
	return i.ToKnowledgeBaseRdsConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseRdsConfigurationArgs) ToKnowledgeBaseRdsConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseRdsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseRdsConfigurationOutput)
}

func (i KnowledgeBaseRdsConfigurationArgs) ToKnowledgeBaseRdsConfigurationPtrOutput() KnowledgeBaseRdsConfigurationPtrOutput {
	return i.ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(context.Background())
}

func (i KnowledgeBaseRdsConfigurationArgs) ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseRdsConfigurationOutput).ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(ctx)
}

// KnowledgeBaseRdsConfigurationPtrInput is an input type that accepts KnowledgeBaseRdsConfigurationArgs, KnowledgeBaseRdsConfigurationPtr and KnowledgeBaseRdsConfigurationPtrOutput values.
// You can construct a concrete instance of `KnowledgeBaseRdsConfigurationPtrInput` via:
//
//	        KnowledgeBaseRdsConfigurationArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBaseRdsConfigurationPtrInput interface {
	pulumi.Input

	ToKnowledgeBaseRdsConfigurationPtrOutput() KnowledgeBaseRdsConfigurationPtrOutput
	ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(context.Context) KnowledgeBaseRdsConfigurationPtrOutput
}

type knowledgeBaseRdsConfigurationPtrType KnowledgeBaseRdsConfigurationArgs

func KnowledgeBaseRdsConfigurationPtr(v *KnowledgeBaseRdsConfigurationArgs) KnowledgeBaseRdsConfigurationPtrInput {
	return (*knowledgeBaseRdsConfigurationPtrType)(v)
}

func (*knowledgeBaseRdsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseRdsConfiguration)(nil)).Elem()
}

func (i *knowledgeBaseRdsConfigurationPtrType) ToKnowledgeBaseRdsConfigurationPtrOutput() KnowledgeBaseRdsConfigurationPtrOutput {
	return i.ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(context.Background())
}

func (i *knowledgeBaseRdsConfigurationPtrType) ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseRdsConfigurationPtrOutput)
}

// Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see Create a vector index in Amazon RDS.
type KnowledgeBaseRdsConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseRdsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseRdsConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseRdsConfigurationOutput) ToKnowledgeBaseRdsConfigurationOutput() KnowledgeBaseRdsConfigurationOutput {
	return o
}

func (o KnowledgeBaseRdsConfigurationOutput) ToKnowledgeBaseRdsConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseRdsConfigurationOutput {
	return o
}

func (o KnowledgeBaseRdsConfigurationOutput) ToKnowledgeBaseRdsConfigurationPtrOutput() KnowledgeBaseRdsConfigurationPtrOutput {
	return o.ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(context.Background())
}

func (o KnowledgeBaseRdsConfigurationOutput) ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBaseRdsConfiguration) *KnowledgeBaseRdsConfiguration {
		return &v
	}).(KnowledgeBaseRdsConfigurationPtrOutput)
}

// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon RDS database.
func (o KnowledgeBaseRdsConfigurationOutput) CredentialsSecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsConfiguration) string { return v.CredentialsSecretArn }).(pulumi.StringOutput)
}

// The name of your Amazon RDS database.
func (o KnowledgeBaseRdsConfigurationOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsConfiguration) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBaseRdsConfigurationOutput) FieldMapping() KnowledgeBaseRdsFieldMappingOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsConfiguration) KnowledgeBaseRdsFieldMapping { return v.FieldMapping }).(KnowledgeBaseRdsFieldMappingOutput)
}

// The ARN of the vector store.
func (o KnowledgeBaseRdsConfigurationOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsConfiguration) string { return v.ResourceArn }).(pulumi.StringOutput)
}

// The name of the table in the database.
func (o KnowledgeBaseRdsConfigurationOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsConfiguration) string { return v.TableName }).(pulumi.StringOutput)
}

type KnowledgeBaseRdsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseRdsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseRdsConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseRdsConfigurationPtrOutput) ToKnowledgeBaseRdsConfigurationPtrOutput() KnowledgeBaseRdsConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseRdsConfigurationPtrOutput) ToKnowledgeBaseRdsConfigurationPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsConfigurationPtrOutput {
	return o
}

func (o KnowledgeBaseRdsConfigurationPtrOutput) Elem() KnowledgeBaseRdsConfigurationOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsConfiguration) KnowledgeBaseRdsConfiguration {
		if v != nil {
			return *v
		}
		var ret KnowledgeBaseRdsConfiguration
		return ret
	}).(KnowledgeBaseRdsConfigurationOutput)
}

// The ARN of the secret that you created in AWS Secrets Manager that is linked to your Amazon RDS database.
func (o KnowledgeBaseRdsConfigurationPtrOutput) CredentialsSecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialsSecretArn
	}).(pulumi.StringPtrOutput)
}

// The name of your Amazon RDS database.
func (o KnowledgeBaseRdsConfigurationPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
func (o KnowledgeBaseRdsConfigurationPtrOutput) FieldMapping() KnowledgeBaseRdsFieldMappingPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsConfiguration) *KnowledgeBaseRdsFieldMapping {
		if v == nil {
			return nil
		}
		return &v.FieldMapping
	}).(KnowledgeBaseRdsFieldMappingPtrOutput)
}

// The ARN of the vector store.
func (o KnowledgeBaseRdsConfigurationPtrOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ResourceArn
	}).(pulumi.StringPtrOutput)
}

// The name of the table in the database.
func (o KnowledgeBaseRdsConfigurationPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBaseRdsFieldMapping struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField string `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the ID for each entry.
	PrimaryKeyField string `pulumi:"primaryKeyField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField string `pulumi:"textField"`
	// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
	VectorField string `pulumi:"vectorField"`
}

// KnowledgeBaseRdsFieldMappingInput is an input type that accepts KnowledgeBaseRdsFieldMappingArgs and KnowledgeBaseRdsFieldMappingOutput values.
// You can construct a concrete instance of `KnowledgeBaseRdsFieldMappingInput` via:
//
//	KnowledgeBaseRdsFieldMappingArgs{...}
type KnowledgeBaseRdsFieldMappingInput interface {
	pulumi.Input

	ToKnowledgeBaseRdsFieldMappingOutput() KnowledgeBaseRdsFieldMappingOutput
	ToKnowledgeBaseRdsFieldMappingOutputWithContext(context.Context) KnowledgeBaseRdsFieldMappingOutput
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBaseRdsFieldMappingArgs struct {
	// The name of the field in which Amazon Bedrock stores metadata about the vector store.
	MetadataField pulumi.StringInput `pulumi:"metadataField"`
	// The name of the field in which Amazon Bedrock stores the ID for each entry.
	PrimaryKeyField pulumi.StringInput `pulumi:"primaryKeyField"`
	// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
	TextField pulumi.StringInput `pulumi:"textField"`
	// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
	VectorField pulumi.StringInput `pulumi:"vectorField"`
}

func (KnowledgeBaseRdsFieldMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseRdsFieldMapping)(nil)).Elem()
}

func (i KnowledgeBaseRdsFieldMappingArgs) ToKnowledgeBaseRdsFieldMappingOutput() KnowledgeBaseRdsFieldMappingOutput {
	return i.ToKnowledgeBaseRdsFieldMappingOutputWithContext(context.Background())
}

func (i KnowledgeBaseRdsFieldMappingArgs) ToKnowledgeBaseRdsFieldMappingOutputWithContext(ctx context.Context) KnowledgeBaseRdsFieldMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseRdsFieldMappingOutput)
}

func (i KnowledgeBaseRdsFieldMappingArgs) ToKnowledgeBaseRdsFieldMappingPtrOutput() KnowledgeBaseRdsFieldMappingPtrOutput {
	return i.ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(context.Background())
}

func (i KnowledgeBaseRdsFieldMappingArgs) ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseRdsFieldMappingOutput).ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(ctx)
}

// KnowledgeBaseRdsFieldMappingPtrInput is an input type that accepts KnowledgeBaseRdsFieldMappingArgs, KnowledgeBaseRdsFieldMappingPtr and KnowledgeBaseRdsFieldMappingPtrOutput values.
// You can construct a concrete instance of `KnowledgeBaseRdsFieldMappingPtrInput` via:
//
//	        KnowledgeBaseRdsFieldMappingArgs{...}
//
//	or:
//
//	        nil
type KnowledgeBaseRdsFieldMappingPtrInput interface {
	pulumi.Input

	ToKnowledgeBaseRdsFieldMappingPtrOutput() KnowledgeBaseRdsFieldMappingPtrOutput
	ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(context.Context) KnowledgeBaseRdsFieldMappingPtrOutput
}

type knowledgeBaseRdsFieldMappingPtrType KnowledgeBaseRdsFieldMappingArgs

func KnowledgeBaseRdsFieldMappingPtr(v *KnowledgeBaseRdsFieldMappingArgs) KnowledgeBaseRdsFieldMappingPtrInput {
	return (*knowledgeBaseRdsFieldMappingPtrType)(v)
}

func (*knowledgeBaseRdsFieldMappingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseRdsFieldMapping)(nil)).Elem()
}

func (i *knowledgeBaseRdsFieldMappingPtrType) ToKnowledgeBaseRdsFieldMappingPtrOutput() KnowledgeBaseRdsFieldMappingPtrOutput {
	return i.ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(context.Background())
}

func (i *knowledgeBaseRdsFieldMappingPtrType) ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsFieldMappingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseRdsFieldMappingPtrOutput)
}

// Contains the names of the fields to which to map information about the vector store.
type KnowledgeBaseRdsFieldMappingOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseRdsFieldMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseRdsFieldMapping)(nil)).Elem()
}

func (o KnowledgeBaseRdsFieldMappingOutput) ToKnowledgeBaseRdsFieldMappingOutput() KnowledgeBaseRdsFieldMappingOutput {
	return o
}

func (o KnowledgeBaseRdsFieldMappingOutput) ToKnowledgeBaseRdsFieldMappingOutputWithContext(ctx context.Context) KnowledgeBaseRdsFieldMappingOutput {
	return o
}

func (o KnowledgeBaseRdsFieldMappingOutput) ToKnowledgeBaseRdsFieldMappingPtrOutput() KnowledgeBaseRdsFieldMappingPtrOutput {
	return o.ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(context.Background())
}

func (o KnowledgeBaseRdsFieldMappingOutput) ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsFieldMappingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KnowledgeBaseRdsFieldMapping) *KnowledgeBaseRdsFieldMapping {
		return &v
	}).(KnowledgeBaseRdsFieldMappingPtrOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBaseRdsFieldMappingOutput) MetadataField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsFieldMapping) string { return v.MetadataField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the ID for each entry.
func (o KnowledgeBaseRdsFieldMappingOutput) PrimaryKeyField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsFieldMapping) string { return v.PrimaryKeyField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBaseRdsFieldMappingOutput) TextField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsFieldMapping) string { return v.TextField }).(pulumi.StringOutput)
}

// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
func (o KnowledgeBaseRdsFieldMappingOutput) VectorField() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseRdsFieldMapping) string { return v.VectorField }).(pulumi.StringOutput)
}

type KnowledgeBaseRdsFieldMappingPtrOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseRdsFieldMappingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBaseRdsFieldMapping)(nil)).Elem()
}

func (o KnowledgeBaseRdsFieldMappingPtrOutput) ToKnowledgeBaseRdsFieldMappingPtrOutput() KnowledgeBaseRdsFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBaseRdsFieldMappingPtrOutput) ToKnowledgeBaseRdsFieldMappingPtrOutputWithContext(ctx context.Context) KnowledgeBaseRdsFieldMappingPtrOutput {
	return o
}

func (o KnowledgeBaseRdsFieldMappingPtrOutput) Elem() KnowledgeBaseRdsFieldMappingOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsFieldMapping) KnowledgeBaseRdsFieldMapping {
		if v != nil {
			return *v
		}
		var ret KnowledgeBaseRdsFieldMapping
		return ret
	}).(KnowledgeBaseRdsFieldMappingOutput)
}

// The name of the field in which Amazon Bedrock stores metadata about the vector store.
func (o KnowledgeBaseRdsFieldMappingPtrOutput) MetadataField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.MetadataField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the ID for each entry.
func (o KnowledgeBaseRdsFieldMappingPtrOutput) PrimaryKeyField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryKeyField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the raw text from your data. The text is split according to the chunking strategy you choose.
func (o KnowledgeBaseRdsFieldMappingPtrOutput) TextField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.TextField
	}).(pulumi.StringPtrOutput)
}

// The name of the field in which Amazon Bedrock stores the vector embeddings for your data sources.
func (o KnowledgeBaseRdsFieldMappingPtrOutput) VectorField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBaseRdsFieldMapping) *string {
		if v == nil {
			return nil
		}
		return &v.VectorField
	}).(pulumi.StringPtrOutput)
}

// The vector store service in which the knowledge base is stored.
type KnowledgeBaseStorageConfiguration struct {
	// Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
	OpensearchServerlessConfiguration *KnowledgeBaseOpenSearchServerlessConfiguration `pulumi:"opensearchServerlessConfiguration"`
	// Contains the storage configuration of the knowledge base in Pinecone.
	PineconeConfiguration *KnowledgeBasePineconeConfiguration `pulumi:"pineconeConfiguration"`
	// Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see [Create a vector index in Amazon RDS](https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-rds.html) .
	RdsConfiguration *KnowledgeBaseRdsConfiguration `pulumi:"rdsConfiguration"`
	// The vector store service in which the knowledge base is stored.
	Type KnowledgeBaseStorageType `pulumi:"type"`
}

// KnowledgeBaseStorageConfigurationInput is an input type that accepts KnowledgeBaseStorageConfigurationArgs and KnowledgeBaseStorageConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseStorageConfigurationInput` via:
//
//	KnowledgeBaseStorageConfigurationArgs{...}
type KnowledgeBaseStorageConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseStorageConfigurationOutput() KnowledgeBaseStorageConfigurationOutput
	ToKnowledgeBaseStorageConfigurationOutputWithContext(context.Context) KnowledgeBaseStorageConfigurationOutput
}

// The vector store service in which the knowledge base is stored.
type KnowledgeBaseStorageConfigurationArgs struct {
	// Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
	OpensearchServerlessConfiguration KnowledgeBaseOpenSearchServerlessConfigurationPtrInput `pulumi:"opensearchServerlessConfiguration"`
	// Contains the storage configuration of the knowledge base in Pinecone.
	PineconeConfiguration KnowledgeBasePineconeConfigurationPtrInput `pulumi:"pineconeConfiguration"`
	// Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see [Create a vector index in Amazon RDS](https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-rds.html) .
	RdsConfiguration KnowledgeBaseRdsConfigurationPtrInput `pulumi:"rdsConfiguration"`
	// The vector store service in which the knowledge base is stored.
	Type KnowledgeBaseStorageTypeInput `pulumi:"type"`
}

func (KnowledgeBaseStorageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseStorageConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseStorageConfigurationArgs) ToKnowledgeBaseStorageConfigurationOutput() KnowledgeBaseStorageConfigurationOutput {
	return i.ToKnowledgeBaseStorageConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseStorageConfigurationArgs) ToKnowledgeBaseStorageConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseStorageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseStorageConfigurationOutput)
}

// The vector store service in which the knowledge base is stored.
type KnowledgeBaseStorageConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseStorageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseStorageConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseStorageConfigurationOutput) ToKnowledgeBaseStorageConfigurationOutput() KnowledgeBaseStorageConfigurationOutput {
	return o
}

func (o KnowledgeBaseStorageConfigurationOutput) ToKnowledgeBaseStorageConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseStorageConfigurationOutput {
	return o
}

// Contains the storage configuration of the knowledge base in Amazon OpenSearch Service.
func (o KnowledgeBaseStorageConfigurationOutput) OpensearchServerlessConfiguration() KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput {
	return o.ApplyT(func(v KnowledgeBaseStorageConfiguration) *KnowledgeBaseOpenSearchServerlessConfiguration {
		return v.OpensearchServerlessConfiguration
	}).(KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput)
}

// Contains the storage configuration of the knowledge base in Pinecone.
func (o KnowledgeBaseStorageConfigurationOutput) PineconeConfiguration() KnowledgeBasePineconeConfigurationPtrOutput {
	return o.ApplyT(func(v KnowledgeBaseStorageConfiguration) *KnowledgeBasePineconeConfiguration {
		return v.PineconeConfiguration
	}).(KnowledgeBasePineconeConfigurationPtrOutput)
}

// Contains details about the storage configuration of the knowledge base in Amazon RDS. For more information, see [Create a vector index in Amazon RDS](https://docs.aws.amazon.com/bedrock/latest/userguide/knowledge-base-setup-rds.html) .
func (o KnowledgeBaseStorageConfigurationOutput) RdsConfiguration() KnowledgeBaseRdsConfigurationPtrOutput {
	return o.ApplyT(func(v KnowledgeBaseStorageConfiguration) *KnowledgeBaseRdsConfiguration { return v.RdsConfiguration }).(KnowledgeBaseRdsConfigurationPtrOutput)
}

// The vector store service in which the knowledge base is stored.
func (o KnowledgeBaseStorageConfigurationOutput) Type() KnowledgeBaseStorageTypeOutput {
	return o.ApplyT(func(v KnowledgeBaseStorageConfiguration) KnowledgeBaseStorageType { return v.Type }).(KnowledgeBaseStorageTypeOutput)
}

// Contains details about the model used to create vector embeddings for the knowledge base.
type KnowledgeBaseVectorKnowledgeBaseConfiguration struct {
	// The ARN of the model used to create vector embeddings for the knowledge base.
	EmbeddingModelArn string `pulumi:"embeddingModelArn"`
}

// KnowledgeBaseVectorKnowledgeBaseConfigurationInput is an input type that accepts KnowledgeBaseVectorKnowledgeBaseConfigurationArgs and KnowledgeBaseVectorKnowledgeBaseConfigurationOutput values.
// You can construct a concrete instance of `KnowledgeBaseVectorKnowledgeBaseConfigurationInput` via:
//
//	KnowledgeBaseVectorKnowledgeBaseConfigurationArgs{...}
type KnowledgeBaseVectorKnowledgeBaseConfigurationInput interface {
	pulumi.Input

	ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutput() KnowledgeBaseVectorKnowledgeBaseConfigurationOutput
	ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutputWithContext(context.Context) KnowledgeBaseVectorKnowledgeBaseConfigurationOutput
}

// Contains details about the model used to create vector embeddings for the knowledge base.
type KnowledgeBaseVectorKnowledgeBaseConfigurationArgs struct {
	// The ARN of the model used to create vector embeddings for the knowledge base.
	EmbeddingModelArn pulumi.StringInput `pulumi:"embeddingModelArn"`
}

func (KnowledgeBaseVectorKnowledgeBaseConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseVectorKnowledgeBaseConfiguration)(nil)).Elem()
}

func (i KnowledgeBaseVectorKnowledgeBaseConfigurationArgs) ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutput() KnowledgeBaseVectorKnowledgeBaseConfigurationOutput {
	return i.ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutputWithContext(context.Background())
}

func (i KnowledgeBaseVectorKnowledgeBaseConfigurationArgs) ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseVectorKnowledgeBaseConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseVectorKnowledgeBaseConfigurationOutput)
}

// Contains details about the model used to create vector embeddings for the knowledge base.
type KnowledgeBaseVectorKnowledgeBaseConfigurationOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseVectorKnowledgeBaseConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KnowledgeBaseVectorKnowledgeBaseConfiguration)(nil)).Elem()
}

func (o KnowledgeBaseVectorKnowledgeBaseConfigurationOutput) ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutput() KnowledgeBaseVectorKnowledgeBaseConfigurationOutput {
	return o
}

func (o KnowledgeBaseVectorKnowledgeBaseConfigurationOutput) ToKnowledgeBaseVectorKnowledgeBaseConfigurationOutputWithContext(ctx context.Context) KnowledgeBaseVectorKnowledgeBaseConfigurationOutput {
	return o
}

// The ARN of the model used to create vector embeddings for the knowledge base.
func (o KnowledgeBaseVectorKnowledgeBaseConfigurationOutput) EmbeddingModelArn() pulumi.StringOutput {
	return o.ApplyT(func(v KnowledgeBaseVectorKnowledgeBaseConfiguration) string { return v.EmbeddingModelArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentActionGroupInput)(nil)).Elem(), AgentActionGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentActionGroupArrayInput)(nil)).Elem(), AgentActionGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentActionGroupExecutor0PropertiesInput)(nil)).Elem(), AgentActionGroupExecutor0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentActionGroupExecutor0PropertiesPtrInput)(nil)).Elem(), AgentActionGroupExecutor0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentActionGroupExecutor1PropertiesInput)(nil)).Elem(), AgentActionGroupExecutor1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentActionGroupExecutor1PropertiesPtrInput)(nil)).Elem(), AgentActionGroupExecutor1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAliasRoutingConfigurationListItemInput)(nil)).Elem(), AgentAliasRoutingConfigurationListItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAliasRoutingConfigurationListItemArrayInput)(nil)).Elem(), AgentAliasRoutingConfigurationListItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentApiSchema0PropertiesInput)(nil)).Elem(), AgentApiSchema0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentApiSchema0PropertiesPtrInput)(nil)).Elem(), AgentApiSchema0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentApiSchema1PropertiesInput)(nil)).Elem(), AgentApiSchema1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentApiSchema1PropertiesPtrInput)(nil)).Elem(), AgentApiSchema1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentFunctionInput)(nil)).Elem(), AgentFunctionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentFunctionArrayInput)(nil)).Elem(), AgentFunctionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentFunctionSchemaInput)(nil)).Elem(), AgentFunctionSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentFunctionSchemaPtrInput)(nil)).Elem(), AgentFunctionSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentInferenceConfigurationInput)(nil)).Elem(), AgentInferenceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentInferenceConfigurationPtrInput)(nil)).Elem(), AgentInferenceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentKnowledgeBaseInput)(nil)).Elem(), AgentKnowledgeBaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentKnowledgeBaseArrayInput)(nil)).Elem(), AgentKnowledgeBaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentParameterDetailInput)(nil)).Elem(), AgentParameterDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentParameterDetailMapInput)(nil)).Elem(), AgentParameterDetailMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPromptConfigurationInput)(nil)).Elem(), AgentPromptConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPromptConfigurationArrayInput)(nil)).Elem(), AgentPromptConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPromptOverrideConfigurationInput)(nil)).Elem(), AgentPromptOverrideConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPromptOverrideConfigurationPtrInput)(nil)).Elem(), AgentPromptOverrideConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentS3IdentifierInput)(nil)).Elem(), AgentS3IdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentS3IdentifierPtrInput)(nil)).Elem(), AgentS3IdentifierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceChunkingConfigurationInput)(nil)).Elem(), DataSourceChunkingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceChunkingConfigurationPtrInput)(nil)).Elem(), DataSourceChunkingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfigurationInput)(nil)).Elem(), DataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceFixedSizeChunkingConfigurationInput)(nil)).Elem(), DataSourceFixedSizeChunkingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceFixedSizeChunkingConfigurationPtrInput)(nil)).Elem(), DataSourceFixedSizeChunkingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceS3DataSourceConfigurationInput)(nil)).Elem(), DataSourceS3DataSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceServerSideEncryptionConfigurationInput)(nil)).Elem(), DataSourceServerSideEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceServerSideEncryptionConfigurationPtrInput)(nil)).Elem(), DataSourceServerSideEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceVectorIngestionConfigurationInput)(nil)).Elem(), DataSourceVectorIngestionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceVectorIngestionConfigurationPtrInput)(nil)).Elem(), DataSourceVectorIngestionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailContentFilterConfigInput)(nil)).Elem(), GuardrailContentFilterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailContentFilterConfigArrayInput)(nil)).Elem(), GuardrailContentFilterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailContentPolicyConfigInput)(nil)).Elem(), GuardrailContentPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailContentPolicyConfigPtrInput)(nil)).Elem(), GuardrailContentPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailManagedWordsConfigInput)(nil)).Elem(), GuardrailManagedWordsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailManagedWordsConfigArrayInput)(nil)).Elem(), GuardrailManagedWordsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailPiiEntityConfigInput)(nil)).Elem(), GuardrailPiiEntityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailPiiEntityConfigArrayInput)(nil)).Elem(), GuardrailPiiEntityConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailRegexConfigInput)(nil)).Elem(), GuardrailRegexConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailRegexConfigArrayInput)(nil)).Elem(), GuardrailRegexConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailSensitiveInformationPolicyConfigInput)(nil)).Elem(), GuardrailSensitiveInformationPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailSensitiveInformationPolicyConfigPtrInput)(nil)).Elem(), GuardrailSensitiveInformationPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailTopicConfigInput)(nil)).Elem(), GuardrailTopicConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailTopicConfigArrayInput)(nil)).Elem(), GuardrailTopicConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailTopicPolicyConfigInput)(nil)).Elem(), GuardrailTopicPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailTopicPolicyConfigPtrInput)(nil)).Elem(), GuardrailTopicPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailWordConfigInput)(nil)).Elem(), GuardrailWordConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailWordConfigArrayInput)(nil)).Elem(), GuardrailWordConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailWordPolicyConfigInput)(nil)).Elem(), GuardrailWordPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailWordPolicyConfigPtrInput)(nil)).Elem(), GuardrailWordPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseConfigurationInput)(nil)).Elem(), KnowledgeBaseConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessConfigurationInput)(nil)).Elem(), KnowledgeBaseOpenSearchServerlessConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessConfigurationPtrInput)(nil)).Elem(), KnowledgeBaseOpenSearchServerlessConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessFieldMappingInput)(nil)).Elem(), KnowledgeBaseOpenSearchServerlessFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseOpenSearchServerlessFieldMappingPtrInput)(nil)).Elem(), KnowledgeBaseOpenSearchServerlessFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBasePineconeConfigurationInput)(nil)).Elem(), KnowledgeBasePineconeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBasePineconeConfigurationPtrInput)(nil)).Elem(), KnowledgeBasePineconeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBasePineconeFieldMappingInput)(nil)).Elem(), KnowledgeBasePineconeFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBasePineconeFieldMappingPtrInput)(nil)).Elem(), KnowledgeBasePineconeFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseRdsConfigurationInput)(nil)).Elem(), KnowledgeBaseRdsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseRdsConfigurationPtrInput)(nil)).Elem(), KnowledgeBaseRdsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseRdsFieldMappingInput)(nil)).Elem(), KnowledgeBaseRdsFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseRdsFieldMappingPtrInput)(nil)).Elem(), KnowledgeBaseRdsFieldMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseStorageConfigurationInput)(nil)).Elem(), KnowledgeBaseStorageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseVectorKnowledgeBaseConfigurationInput)(nil)).Elem(), KnowledgeBaseVectorKnowledgeBaseConfigurationArgs{})
	pulumi.RegisterOutputType(AgentActionGroupOutput{})
	pulumi.RegisterOutputType(AgentActionGroupArrayOutput{})
	pulumi.RegisterOutputType(AgentActionGroupExecutor0PropertiesOutput{})
	pulumi.RegisterOutputType(AgentActionGroupExecutor0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(AgentActionGroupExecutor1PropertiesOutput{})
	pulumi.RegisterOutputType(AgentActionGroupExecutor1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(AgentAliasHistoryEventOutput{})
	pulumi.RegisterOutputType(AgentAliasHistoryEventArrayOutput{})
	pulumi.RegisterOutputType(AgentAliasRoutingConfigurationListItemOutput{})
	pulumi.RegisterOutputType(AgentAliasRoutingConfigurationListItemArrayOutput{})
	pulumi.RegisterOutputType(AgentApiSchema0PropertiesOutput{})
	pulumi.RegisterOutputType(AgentApiSchema0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(AgentApiSchema1PropertiesOutput{})
	pulumi.RegisterOutputType(AgentApiSchema1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(AgentFunctionOutput{})
	pulumi.RegisterOutputType(AgentFunctionArrayOutput{})
	pulumi.RegisterOutputType(AgentFunctionSchemaOutput{})
	pulumi.RegisterOutputType(AgentFunctionSchemaPtrOutput{})
	pulumi.RegisterOutputType(AgentInferenceConfigurationOutput{})
	pulumi.RegisterOutputType(AgentInferenceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AgentKnowledgeBaseOutput{})
	pulumi.RegisterOutputType(AgentKnowledgeBaseArrayOutput{})
	pulumi.RegisterOutputType(AgentParameterDetailOutput{})
	pulumi.RegisterOutputType(AgentParameterDetailMapOutput{})
	pulumi.RegisterOutputType(AgentPromptConfigurationOutput{})
	pulumi.RegisterOutputType(AgentPromptConfigurationArrayOutput{})
	pulumi.RegisterOutputType(AgentPromptOverrideConfigurationOutput{})
	pulumi.RegisterOutputType(AgentPromptOverrideConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AgentS3IdentifierOutput{})
	pulumi.RegisterOutputType(AgentS3IdentifierPtrOutput{})
	pulumi.RegisterOutputType(DataSourceChunkingConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceChunkingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceFixedSizeChunkingConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceFixedSizeChunkingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceS3DataSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceS3DataSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceServerSideEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceServerSideEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataSourceVectorIngestionConfigurationOutput{})
	pulumi.RegisterOutputType(DataSourceVectorIngestionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GuardrailContentFilterConfigOutput{})
	pulumi.RegisterOutputType(GuardrailContentFilterConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailContentPolicyConfigOutput{})
	pulumi.RegisterOutputType(GuardrailContentPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(GuardrailManagedWordsConfigOutput{})
	pulumi.RegisterOutputType(GuardrailManagedWordsConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailPiiEntityConfigOutput{})
	pulumi.RegisterOutputType(GuardrailPiiEntityConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailRegexConfigOutput{})
	pulumi.RegisterOutputType(GuardrailRegexConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailSensitiveInformationPolicyConfigOutput{})
	pulumi.RegisterOutputType(GuardrailSensitiveInformationPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(GuardrailTopicConfigOutput{})
	pulumi.RegisterOutputType(GuardrailTopicConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailTopicPolicyConfigOutput{})
	pulumi.RegisterOutputType(GuardrailTopicPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(GuardrailWordConfigOutput{})
	pulumi.RegisterOutputType(GuardrailWordConfigArrayOutput{})
	pulumi.RegisterOutputType(GuardrailWordPolicyConfigOutput{})
	pulumi.RegisterOutputType(GuardrailWordPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseOpenSearchServerlessConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseOpenSearchServerlessConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseOpenSearchServerlessFieldMappingOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseOpenSearchServerlessFieldMappingPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBasePineconeConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBasePineconeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBasePineconeFieldMappingOutput{})
	pulumi.RegisterOutputType(KnowledgeBasePineconeFieldMappingPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseRdsConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseRdsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseRdsFieldMappingOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseRdsFieldMappingPtrOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseStorageConfigurationOutput{})
	pulumi.RegisterOutputType(KnowledgeBaseVectorKnowledgeBaseConfigurationOutput{})
}
