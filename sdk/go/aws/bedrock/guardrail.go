// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Bedrock::Guardrail Resource Type
type Guardrail struct {
	pulumi.CustomResourceState

	// Configuration settings for integrating Automated Reasoning policies with Amazon Bedrock Guardrails.
	AutomatedReasoningPolicyConfig GuardrailAutomatedReasoningPolicyConfigPtrOutput `pulumi:"automatedReasoningPolicyConfig"`
	// Messaging for when violations are detected in text
	BlockedInputMessaging pulumi.StringOutput `pulumi:"blockedInputMessaging"`
	// Messaging for when violations are detected in text
	BlockedOutputsMessaging pulumi.StringOutput `pulumi:"blockedOutputsMessaging"`
	// The content filter policies to configure for the guardrail.
	ContentPolicyConfig             GuardrailContentPolicyConfigPtrOutput             `pulumi:"contentPolicyConfig"`
	ContextualGroundingPolicyConfig GuardrailContextualGroundingPolicyConfigPtrOutput `pulumi:"contextualGroundingPolicyConfig"`
	// Time Stamp
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The system-defined guardrail profile that you're using with your guardrail. Guardrail profiles define the destination AWS Regions where guardrail inference requests can be automatically routed. Using guardrail profiles helps maintain guardrail performance and reliability when demand increases.
	//
	// For more information, see the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails-cross-region.html) .
	CrossRegionConfig GuardrailCrossRegionConfigPtrOutput `pulumi:"crossRegionConfig"`
	// Description of the guardrail or its version
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// List of failure recommendations
	FailureRecommendations pulumi.StringArrayOutput `pulumi:"failureRecommendations"`
	// Arn representation for the guardrail
	GuardrailArn pulumi.StringOutput `pulumi:"guardrailArn"`
	// Unique id for the guardrail
	GuardrailId pulumi.StringOutput `pulumi:"guardrailId"`
	// The KMS key with which the guardrail was encrypted at rest
	KmsKeyArn pulumi.StringPtrOutput `pulumi:"kmsKeyArn"`
	// Name of the guardrail
	Name pulumi.StringOutput `pulumi:"name"`
	// The sensitive information policy to configure for the guardrail.
	SensitiveInformationPolicyConfig GuardrailSensitiveInformationPolicyConfigPtrOutput `pulumi:"sensitiveInformationPolicyConfig"`
	// The status of the guardrail.
	Status GuardrailStatusOutput `pulumi:"status"`
	// List of status reasons
	StatusReasons pulumi.StringArrayOutput `pulumi:"statusReasons"`
	// List of Tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The topic policies to configure for the guardrail.
	TopicPolicyConfig GuardrailTopicPolicyConfigPtrOutput `pulumi:"topicPolicyConfig"`
	// Time Stamp
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Guardrail version
	Version pulumi.StringOutput `pulumi:"version"`
	// The word policy you configure for the guardrail.
	WordPolicyConfig GuardrailWordPolicyConfigPtrOutput `pulumi:"wordPolicyConfig"`
}

// NewGuardrail registers a new resource with the given unique name, arguments, and options.
func NewGuardrail(ctx *pulumi.Context,
	name string, args *GuardrailArgs, opts ...pulumi.ResourceOption) (*Guardrail, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BlockedInputMessaging == nil {
		return nil, errors.New("invalid value for required argument 'BlockedInputMessaging'")
	}
	if args.BlockedOutputsMessaging == nil {
		return nil, errors.New("invalid value for required argument 'BlockedOutputsMessaging'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Guardrail
	err := ctx.RegisterResource("aws-native:bedrock:Guardrail", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGuardrail gets an existing Guardrail resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGuardrail(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GuardrailState, opts ...pulumi.ResourceOption) (*Guardrail, error) {
	var resource Guardrail
	err := ctx.ReadResource("aws-native:bedrock:Guardrail", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Guardrail resources.
type guardrailState struct {
}

type GuardrailState struct {
}

func (GuardrailState) ElementType() reflect.Type {
	return reflect.TypeOf((*guardrailState)(nil)).Elem()
}

type guardrailArgs struct {
	// Configuration settings for integrating Automated Reasoning policies with Amazon Bedrock Guardrails.
	AutomatedReasoningPolicyConfig *GuardrailAutomatedReasoningPolicyConfig `pulumi:"automatedReasoningPolicyConfig"`
	// Messaging for when violations are detected in text
	BlockedInputMessaging string `pulumi:"blockedInputMessaging"`
	// Messaging for when violations are detected in text
	BlockedOutputsMessaging string `pulumi:"blockedOutputsMessaging"`
	// The content filter policies to configure for the guardrail.
	ContentPolicyConfig             *GuardrailContentPolicyConfig             `pulumi:"contentPolicyConfig"`
	ContextualGroundingPolicyConfig *GuardrailContextualGroundingPolicyConfig `pulumi:"contextualGroundingPolicyConfig"`
	// The system-defined guardrail profile that you're using with your guardrail. Guardrail profiles define the destination AWS Regions where guardrail inference requests can be automatically routed. Using guardrail profiles helps maintain guardrail performance and reliability when demand increases.
	//
	// For more information, see the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails-cross-region.html) .
	CrossRegionConfig *GuardrailCrossRegionConfig `pulumi:"crossRegionConfig"`
	// Description of the guardrail or its version
	Description *string `pulumi:"description"`
	// The KMS key with which the guardrail was encrypted at rest
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Name of the guardrail
	Name *string `pulumi:"name"`
	// The sensitive information policy to configure for the guardrail.
	SensitiveInformationPolicyConfig *GuardrailSensitiveInformationPolicyConfig `pulumi:"sensitiveInformationPolicyConfig"`
	// List of Tags
	Tags []aws.Tag `pulumi:"tags"`
	// The topic policies to configure for the guardrail.
	TopicPolicyConfig *GuardrailTopicPolicyConfig `pulumi:"topicPolicyConfig"`
	// The word policy you configure for the guardrail.
	WordPolicyConfig *GuardrailWordPolicyConfig `pulumi:"wordPolicyConfig"`
}

// The set of arguments for constructing a Guardrail resource.
type GuardrailArgs struct {
	// Configuration settings for integrating Automated Reasoning policies with Amazon Bedrock Guardrails.
	AutomatedReasoningPolicyConfig GuardrailAutomatedReasoningPolicyConfigPtrInput
	// Messaging for when violations are detected in text
	BlockedInputMessaging pulumi.StringInput
	// Messaging for when violations are detected in text
	BlockedOutputsMessaging pulumi.StringInput
	// The content filter policies to configure for the guardrail.
	ContentPolicyConfig             GuardrailContentPolicyConfigPtrInput
	ContextualGroundingPolicyConfig GuardrailContextualGroundingPolicyConfigPtrInput
	// The system-defined guardrail profile that you're using with your guardrail. Guardrail profiles define the destination AWS Regions where guardrail inference requests can be automatically routed. Using guardrail profiles helps maintain guardrail performance and reliability when demand increases.
	//
	// For more information, see the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails-cross-region.html) .
	CrossRegionConfig GuardrailCrossRegionConfigPtrInput
	// Description of the guardrail or its version
	Description pulumi.StringPtrInput
	// The KMS key with which the guardrail was encrypted at rest
	KmsKeyArn pulumi.StringPtrInput
	// Name of the guardrail
	Name pulumi.StringPtrInput
	// The sensitive information policy to configure for the guardrail.
	SensitiveInformationPolicyConfig GuardrailSensitiveInformationPolicyConfigPtrInput
	// List of Tags
	Tags aws.TagArrayInput
	// The topic policies to configure for the guardrail.
	TopicPolicyConfig GuardrailTopicPolicyConfigPtrInput
	// The word policy you configure for the guardrail.
	WordPolicyConfig GuardrailWordPolicyConfigPtrInput
}

func (GuardrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*guardrailArgs)(nil)).Elem()
}

type GuardrailInput interface {
	pulumi.Input

	ToGuardrailOutput() GuardrailOutput
	ToGuardrailOutputWithContext(ctx context.Context) GuardrailOutput
}

func (*Guardrail) ElementType() reflect.Type {
	return reflect.TypeOf((**Guardrail)(nil)).Elem()
}

func (i *Guardrail) ToGuardrailOutput() GuardrailOutput {
	return i.ToGuardrailOutputWithContext(context.Background())
}

func (i *Guardrail) ToGuardrailOutputWithContext(ctx context.Context) GuardrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardrailOutput)
}

type GuardrailOutput struct{ *pulumi.OutputState }

func (GuardrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Guardrail)(nil)).Elem()
}

func (o GuardrailOutput) ToGuardrailOutput() GuardrailOutput {
	return o
}

func (o GuardrailOutput) ToGuardrailOutputWithContext(ctx context.Context) GuardrailOutput {
	return o
}

// Configuration settings for integrating Automated Reasoning policies with Amazon Bedrock Guardrails.
func (o GuardrailOutput) AutomatedReasoningPolicyConfig() GuardrailAutomatedReasoningPolicyConfigPtrOutput {
	return o.ApplyT(func(v *Guardrail) GuardrailAutomatedReasoningPolicyConfigPtrOutput {
		return v.AutomatedReasoningPolicyConfig
	}).(GuardrailAutomatedReasoningPolicyConfigPtrOutput)
}

// Messaging for when violations are detected in text
func (o GuardrailOutput) BlockedInputMessaging() pulumi.StringOutput {
	return o.ApplyT(func(v *Guardrail) pulumi.StringOutput { return v.BlockedInputMessaging }).(pulumi.StringOutput)
}

// Messaging for when violations are detected in text
func (o GuardrailOutput) BlockedOutputsMessaging() pulumi.StringOutput {
	return o.ApplyT(func(v *Guardrail) pulumi.StringOutput { return v.BlockedOutputsMessaging }).(pulumi.StringOutput)
}

// The content filter policies to configure for the guardrail.
func (o GuardrailOutput) ContentPolicyConfig() GuardrailContentPolicyConfigPtrOutput {
	return o.ApplyT(func(v *Guardrail) GuardrailContentPolicyConfigPtrOutput { return v.ContentPolicyConfig }).(GuardrailContentPolicyConfigPtrOutput)
}

func (o GuardrailOutput) ContextualGroundingPolicyConfig() GuardrailContextualGroundingPolicyConfigPtrOutput {
	return o.ApplyT(func(v *Guardrail) GuardrailContextualGroundingPolicyConfigPtrOutput {
		return v.ContextualGroundingPolicyConfig
	}).(GuardrailContextualGroundingPolicyConfigPtrOutput)
}

// Time Stamp
func (o GuardrailOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Guardrail) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The system-defined guardrail profile that you're using with your guardrail. Guardrail profiles define the destination AWS Regions where guardrail inference requests can be automatically routed. Using guardrail profiles helps maintain guardrail performance and reliability when demand increases.
//
// For more information, see the [Amazon Bedrock User Guide](https://docs.aws.amazon.com/bedrock/latest/userguide/guardrails-cross-region.html) .
func (o GuardrailOutput) CrossRegionConfig() GuardrailCrossRegionConfigPtrOutput {
	return o.ApplyT(func(v *Guardrail) GuardrailCrossRegionConfigPtrOutput { return v.CrossRegionConfig }).(GuardrailCrossRegionConfigPtrOutput)
}

// Description of the guardrail or its version
func (o GuardrailOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Guardrail) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// List of failure recommendations
func (o GuardrailOutput) FailureRecommendations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Guardrail) pulumi.StringArrayOutput { return v.FailureRecommendations }).(pulumi.StringArrayOutput)
}

// Arn representation for the guardrail
func (o GuardrailOutput) GuardrailArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Guardrail) pulumi.StringOutput { return v.GuardrailArn }).(pulumi.StringOutput)
}

// Unique id for the guardrail
func (o GuardrailOutput) GuardrailId() pulumi.StringOutput {
	return o.ApplyT(func(v *Guardrail) pulumi.StringOutput { return v.GuardrailId }).(pulumi.StringOutput)
}

// The KMS key with which the guardrail was encrypted at rest
func (o GuardrailOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Guardrail) pulumi.StringPtrOutput { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// Name of the guardrail
func (o GuardrailOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Guardrail) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The sensitive information policy to configure for the guardrail.
func (o GuardrailOutput) SensitiveInformationPolicyConfig() GuardrailSensitiveInformationPolicyConfigPtrOutput {
	return o.ApplyT(func(v *Guardrail) GuardrailSensitiveInformationPolicyConfigPtrOutput {
		return v.SensitiveInformationPolicyConfig
	}).(GuardrailSensitiveInformationPolicyConfigPtrOutput)
}

// The status of the guardrail.
func (o GuardrailOutput) Status() GuardrailStatusOutput {
	return o.ApplyT(func(v *Guardrail) GuardrailStatusOutput { return v.Status }).(GuardrailStatusOutput)
}

// List of status reasons
func (o GuardrailOutput) StatusReasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Guardrail) pulumi.StringArrayOutput { return v.StatusReasons }).(pulumi.StringArrayOutput)
}

// List of Tags
func (o GuardrailOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Guardrail) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The topic policies to configure for the guardrail.
func (o GuardrailOutput) TopicPolicyConfig() GuardrailTopicPolicyConfigPtrOutput {
	return o.ApplyT(func(v *Guardrail) GuardrailTopicPolicyConfigPtrOutput { return v.TopicPolicyConfig }).(GuardrailTopicPolicyConfigPtrOutput)
}

// Time Stamp
func (o GuardrailOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Guardrail) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Guardrail version
func (o GuardrailOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *Guardrail) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

// The word policy you configure for the guardrail.
func (o GuardrailOutput) WordPolicyConfig() GuardrailWordPolicyConfigPtrOutput {
	return o.ApplyT(func(v *Guardrail) GuardrailWordPolicyConfigPtrOutput { return v.WordPolicyConfig }).(GuardrailWordPolicyConfigPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GuardrailInput)(nil)).Elem(), &Guardrail{})
	pulumi.RegisterOutputType(GuardrailOutput{})
}
