// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Bedrock::FlowVersion Resource Type
func LookupFlowVersion(ctx *pulumi.Context, args *LookupFlowVersionArgs, opts ...pulumi.InvokeOption) (*LookupFlowVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFlowVersionResult
	err := ctx.Invoke("aws-native:bedrock:getFlowVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFlowVersionArgs struct {
	// Arn representation of the Flow
	FlowArn string `pulumi:"flowArn"`
	// Numerical Version.
	Version string `pulumi:"version"`
}

type LookupFlowVersionResult struct {
	// Time Stamp.
	CreatedAt *string `pulumi:"createdAt"`
	// A KMS key ARN
	CustomerEncryptionKeyArn *string                    `pulumi:"customerEncryptionKeyArn"`
	Definition               *FlowVersionFlowDefinition `pulumi:"definition"`
	// ARN of a IAM role
	ExecutionRoleArn *string `pulumi:"executionRoleArn"`
	// Identifier for a Flow
	FlowId *string `pulumi:"flowId"`
	// Name for the flow
	Name *string `pulumi:"name"`
	// The status of the flow.
	Status *FlowVersionFlowStatus `pulumi:"status"`
	// Numerical Version.
	Version *string `pulumi:"version"`
}

func LookupFlowVersionOutput(ctx *pulumi.Context, args LookupFlowVersionOutputArgs, opts ...pulumi.InvokeOption) LookupFlowVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFlowVersionResult, error) {
			args := v.(LookupFlowVersionArgs)
			r, err := LookupFlowVersion(ctx, &args, opts...)
			var s LookupFlowVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFlowVersionResultOutput)
}

type LookupFlowVersionOutputArgs struct {
	// Arn representation of the Flow
	FlowArn pulumi.StringInput `pulumi:"flowArn"`
	// Numerical Version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (LookupFlowVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowVersionArgs)(nil)).Elem()
}

type LookupFlowVersionResultOutput struct{ *pulumi.OutputState }

func (LookupFlowVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowVersionResult)(nil)).Elem()
}

func (o LookupFlowVersionResultOutput) ToLookupFlowVersionResultOutput() LookupFlowVersionResultOutput {
	return o
}

func (o LookupFlowVersionResultOutput) ToLookupFlowVersionResultOutputWithContext(ctx context.Context) LookupFlowVersionResultOutput {
	return o
}

// Time Stamp.
func (o LookupFlowVersionResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowVersionResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// A KMS key ARN
func (o LookupFlowVersionResultOutput) CustomerEncryptionKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowVersionResult) *string { return v.CustomerEncryptionKeyArn }).(pulumi.StringPtrOutput)
}

func (o LookupFlowVersionResultOutput) Definition() FlowVersionFlowDefinitionPtrOutput {
	return o.ApplyT(func(v LookupFlowVersionResult) *FlowVersionFlowDefinition { return v.Definition }).(FlowVersionFlowDefinitionPtrOutput)
}

// ARN of a IAM role
func (o LookupFlowVersionResultOutput) ExecutionRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowVersionResult) *string { return v.ExecutionRoleArn }).(pulumi.StringPtrOutput)
}

// Identifier for a Flow
func (o LookupFlowVersionResultOutput) FlowId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowVersionResult) *string { return v.FlowId }).(pulumi.StringPtrOutput)
}

// Name for the flow
func (o LookupFlowVersionResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowVersionResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the flow.
func (o LookupFlowVersionResultOutput) Status() FlowVersionFlowStatusPtrOutput {
	return o.ApplyT(func(v LookupFlowVersionResult) *FlowVersionFlowStatus { return v.Status }).(FlowVersionFlowStatusPtrOutput)
}

// Numerical Version.
func (o LookupFlowVersionResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowVersionResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlowVersionResultOutput{})
}
