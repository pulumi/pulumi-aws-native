// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Bedrock::ApplicationInferenceProfile Resource Type
type ApplicationInferenceProfile struct {
	pulumi.CustomResourceState

	// Time Stamp
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Description of the inference profile
	Description         pulumi.StringPtrOutput `pulumi:"description"`
	InferenceProfileArn pulumi.StringOutput    `pulumi:"inferenceProfileArn"`
	InferenceProfileId  pulumi.StringOutput    `pulumi:"inferenceProfileId"`
	// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
	InferenceProfileIdentifier pulumi.StringOutput                                                       `pulumi:"inferenceProfileIdentifier"`
	InferenceProfileName       pulumi.StringOutput                                                       `pulumi:"inferenceProfileName"`
	ModelSource                ApplicationInferenceProfileInferenceProfileModelSourcePropertiesPtrOutput `pulumi:"modelSource"`
	// List of model configuration
	Models ApplicationInferenceProfileInferenceProfileModelArrayOutput `pulumi:"models"`
	Status ApplicationInferenceProfileInferenceProfileStatusOutput     `pulumi:"status"`
	// List of Tags
	Tags aws.TagArrayOutput                                    `pulumi:"tags"`
	Type ApplicationInferenceProfileInferenceProfileTypeOutput `pulumi:"type"`
	// Time Stamp
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewApplicationInferenceProfile registers a new resource with the given unique name, arguments, and options.
func NewApplicationInferenceProfile(ctx *pulumi.Context,
	name string, args *ApplicationInferenceProfileArgs, opts ...pulumi.ResourceOption) (*ApplicationInferenceProfile, error) {
	if args == nil {
		args = &ApplicationInferenceProfileArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"description",
		"inferenceProfileName",
		"modelSource",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationInferenceProfile
	err := ctx.RegisterResource("aws-native:bedrock:ApplicationInferenceProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationInferenceProfile gets an existing ApplicationInferenceProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationInferenceProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationInferenceProfileState, opts ...pulumi.ResourceOption) (*ApplicationInferenceProfile, error) {
	var resource ApplicationInferenceProfile
	err := ctx.ReadResource("aws-native:bedrock:ApplicationInferenceProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationInferenceProfile resources.
type applicationInferenceProfileState struct {
}

type ApplicationInferenceProfileState struct {
}

func (ApplicationInferenceProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationInferenceProfileState)(nil)).Elem()
}

type applicationInferenceProfileArgs struct {
	// Description of the inference profile
	Description          *string                                                           `pulumi:"description"`
	InferenceProfileName *string                                                           `pulumi:"inferenceProfileName"`
	ModelSource          *ApplicationInferenceProfileInferenceProfileModelSourceProperties `pulumi:"modelSource"`
	// List of Tags
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ApplicationInferenceProfile resource.
type ApplicationInferenceProfileArgs struct {
	// Description of the inference profile
	Description          pulumi.StringPtrInput
	InferenceProfileName pulumi.StringPtrInput
	ModelSource          ApplicationInferenceProfileInferenceProfileModelSourcePropertiesPtrInput
	// List of Tags
	Tags aws.TagArrayInput
}

func (ApplicationInferenceProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationInferenceProfileArgs)(nil)).Elem()
}

type ApplicationInferenceProfileInput interface {
	pulumi.Input

	ToApplicationInferenceProfileOutput() ApplicationInferenceProfileOutput
	ToApplicationInferenceProfileOutputWithContext(ctx context.Context) ApplicationInferenceProfileOutput
}

func (*ApplicationInferenceProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInferenceProfile)(nil)).Elem()
}

func (i *ApplicationInferenceProfile) ToApplicationInferenceProfileOutput() ApplicationInferenceProfileOutput {
	return i.ToApplicationInferenceProfileOutputWithContext(context.Background())
}

func (i *ApplicationInferenceProfile) ToApplicationInferenceProfileOutputWithContext(ctx context.Context) ApplicationInferenceProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationInferenceProfileOutput)
}

type ApplicationInferenceProfileOutput struct{ *pulumi.OutputState }

func (ApplicationInferenceProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationInferenceProfile)(nil)).Elem()
}

func (o ApplicationInferenceProfileOutput) ToApplicationInferenceProfileOutput() ApplicationInferenceProfileOutput {
	return o
}

func (o ApplicationInferenceProfileOutput) ToApplicationInferenceProfileOutputWithContext(ctx context.Context) ApplicationInferenceProfileOutput {
	return o
}

// Time Stamp
func (o ApplicationInferenceProfileOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationInferenceProfile) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the inference profile
func (o ApplicationInferenceProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationInferenceProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ApplicationInferenceProfileOutput) InferenceProfileArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationInferenceProfile) pulumi.StringOutput { return v.InferenceProfileArn }).(pulumi.StringOutput)
}

func (o ApplicationInferenceProfileOutput) InferenceProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationInferenceProfile) pulumi.StringOutput { return v.InferenceProfileId }).(pulumi.StringOutput)
}

// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
func (o ApplicationInferenceProfileOutput) InferenceProfileIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationInferenceProfile) pulumi.StringOutput { return v.InferenceProfileIdentifier }).(pulumi.StringOutput)
}

func (o ApplicationInferenceProfileOutput) InferenceProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationInferenceProfile) pulumi.StringOutput { return v.InferenceProfileName }).(pulumi.StringOutput)
}

func (o ApplicationInferenceProfileOutput) ModelSource() ApplicationInferenceProfileInferenceProfileModelSourcePropertiesPtrOutput {
	return o.ApplyT(func(v *ApplicationInferenceProfile) ApplicationInferenceProfileInferenceProfileModelSourcePropertiesPtrOutput {
		return v.ModelSource
	}).(ApplicationInferenceProfileInferenceProfileModelSourcePropertiesPtrOutput)
}

// List of model configuration
func (o ApplicationInferenceProfileOutput) Models() ApplicationInferenceProfileInferenceProfileModelArrayOutput {
	return o.ApplyT(func(v *ApplicationInferenceProfile) ApplicationInferenceProfileInferenceProfileModelArrayOutput {
		return v.Models
	}).(ApplicationInferenceProfileInferenceProfileModelArrayOutput)
}

func (o ApplicationInferenceProfileOutput) Status() ApplicationInferenceProfileInferenceProfileStatusOutput {
	return o.ApplyT(func(v *ApplicationInferenceProfile) ApplicationInferenceProfileInferenceProfileStatusOutput {
		return v.Status
	}).(ApplicationInferenceProfileInferenceProfileStatusOutput)
}

// List of Tags
func (o ApplicationInferenceProfileOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ApplicationInferenceProfile) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func (o ApplicationInferenceProfileOutput) Type() ApplicationInferenceProfileInferenceProfileTypeOutput {
	return o.ApplyT(func(v *ApplicationInferenceProfile) ApplicationInferenceProfileInferenceProfileTypeOutput {
		return v.Type
	}).(ApplicationInferenceProfileInferenceProfileTypeOutput)
}

// Time Stamp
func (o ApplicationInferenceProfileOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationInferenceProfile) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationInferenceProfileInput)(nil)).Elem(), &ApplicationInferenceProfile{})
	pulumi.RegisterOutputType(ApplicationInferenceProfileOutput{})
}
