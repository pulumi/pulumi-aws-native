// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Bedrock::ApplicationInferenceProfile Resource Type
func LookupApplicationInferenceProfile(ctx *pulumi.Context, args *LookupApplicationInferenceProfileArgs, opts ...pulumi.InvokeOption) (*LookupApplicationInferenceProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplicationInferenceProfileResult
	err := ctx.Invoke("aws-native:bedrock:getApplicationInferenceProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApplicationInferenceProfileArgs struct {
	// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
	InferenceProfileIdentifier string `pulumi:"inferenceProfileIdentifier"`
}

type LookupApplicationInferenceProfileResult struct {
	// Time Stamp
	CreatedAt *string `pulumi:"createdAt"`
	// The Amazon Resource Name (ARN) of the inference profile.
	InferenceProfileArn *string `pulumi:"inferenceProfileArn"`
	// The unique identifier of the inference profile.
	InferenceProfileId *string `pulumi:"inferenceProfileId"`
	// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
	InferenceProfileIdentifier *string `pulumi:"inferenceProfileIdentifier"`
	// List of model configuration
	Models []ApplicationInferenceProfileInferenceProfileModel `pulumi:"models"`
	// The status of the inference profile. `ACTIVE` means that the inference profile is ready to be used.
	Status *ApplicationInferenceProfileInferenceProfileStatus `pulumi:"status"`
	// List of Tags
	Tags []aws.Tag `pulumi:"tags"`
	// The type of the inference profile. The following types are possible:
	//
	// - `SYSTEM_DEFINED` – The inference profile is defined by Amazon Bedrock. You can route inference requests across regions with these inference profiles.
	// - `APPLICATION` – The inference profile was created by a user. This type of inference profile can track metrics and costs when invoking the model in it. The inference profile may route requests to one or multiple regions.
	Type *ApplicationInferenceProfileInferenceProfileType `pulumi:"type"`
	// Time Stamp
	UpdatedAt *string `pulumi:"updatedAt"`
}

func LookupApplicationInferenceProfileOutput(ctx *pulumi.Context, args LookupApplicationInferenceProfileOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationInferenceProfileResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApplicationInferenceProfileResultOutput, error) {
			args := v.(LookupApplicationInferenceProfileArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:bedrock:getApplicationInferenceProfile", args, LookupApplicationInferenceProfileResultOutput{}, options).(LookupApplicationInferenceProfileResultOutput), nil
		}).(LookupApplicationInferenceProfileResultOutput)
}

type LookupApplicationInferenceProfileOutputArgs struct {
	// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
	InferenceProfileIdentifier pulumi.StringInput `pulumi:"inferenceProfileIdentifier"`
}

func (LookupApplicationInferenceProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationInferenceProfileArgs)(nil)).Elem()
}

type LookupApplicationInferenceProfileResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationInferenceProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationInferenceProfileResult)(nil)).Elem()
}

func (o LookupApplicationInferenceProfileResultOutput) ToLookupApplicationInferenceProfileResultOutput() LookupApplicationInferenceProfileResultOutput {
	return o
}

func (o LookupApplicationInferenceProfileResultOutput) ToLookupApplicationInferenceProfileResultOutputWithContext(ctx context.Context) LookupApplicationInferenceProfileResultOutput {
	return o
}

// Time Stamp
func (o LookupApplicationInferenceProfileResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the inference profile.
func (o LookupApplicationInferenceProfileResultOutput) InferenceProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *string { return v.InferenceProfileArn }).(pulumi.StringPtrOutput)
}

// The unique identifier of the inference profile.
func (o LookupApplicationInferenceProfileResultOutput) InferenceProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *string { return v.InferenceProfileId }).(pulumi.StringPtrOutput)
}

// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
func (o LookupApplicationInferenceProfileResultOutput) InferenceProfileIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *string { return v.InferenceProfileIdentifier }).(pulumi.StringPtrOutput)
}

// List of model configuration
func (o LookupApplicationInferenceProfileResultOutput) Models() ApplicationInferenceProfileInferenceProfileModelArrayOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) []ApplicationInferenceProfileInferenceProfileModel {
		return v.Models
	}).(ApplicationInferenceProfileInferenceProfileModelArrayOutput)
}

// The status of the inference profile. `ACTIVE` means that the inference profile is ready to be used.
func (o LookupApplicationInferenceProfileResultOutput) Status() ApplicationInferenceProfileInferenceProfileStatusPtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *ApplicationInferenceProfileInferenceProfileStatus {
		return v.Status
	}).(ApplicationInferenceProfileInferenceProfileStatusPtrOutput)
}

// List of Tags
func (o LookupApplicationInferenceProfileResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The type of the inference profile. The following types are possible:
//
// - `SYSTEM_DEFINED` – The inference profile is defined by Amazon Bedrock. You can route inference requests across regions with these inference profiles.
// - `APPLICATION` – The inference profile was created by a user. This type of inference profile can track metrics and costs when invoking the model in it. The inference profile may route requests to one or multiple regions.
func (o LookupApplicationInferenceProfileResultOutput) Type() ApplicationInferenceProfileInferenceProfileTypePtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *ApplicationInferenceProfileInferenceProfileType {
		return v.Type
	}).(ApplicationInferenceProfileInferenceProfileTypePtrOutput)
}

// Time Stamp
func (o LookupApplicationInferenceProfileResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationInferenceProfileResultOutput{})
}
