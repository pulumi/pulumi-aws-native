// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Bedrock::ApplicationInferenceProfile Resource Type
func LookupApplicationInferenceProfile(ctx *pulumi.Context, args *LookupApplicationInferenceProfileArgs, opts ...pulumi.InvokeOption) (*LookupApplicationInferenceProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplicationInferenceProfileResult
	err := ctx.Invoke("aws-native:bedrock:getApplicationInferenceProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApplicationInferenceProfileArgs struct {
	// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
	InferenceProfileIdentifier string `pulumi:"inferenceProfileIdentifier"`
}

type LookupApplicationInferenceProfileResult struct {
	// Time Stamp
	CreatedAt           *string `pulumi:"createdAt"`
	InferenceProfileArn *string `pulumi:"inferenceProfileArn"`
	InferenceProfileId  *string `pulumi:"inferenceProfileId"`
	// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
	InferenceProfileIdentifier *string `pulumi:"inferenceProfileIdentifier"`
	// List of model configuration
	Models []ApplicationInferenceProfileInferenceProfileModel `pulumi:"models"`
	Status *ApplicationInferenceProfileInferenceProfileStatus `pulumi:"status"`
	// List of Tags
	Tags []aws.Tag                                        `pulumi:"tags"`
	Type *ApplicationInferenceProfileInferenceProfileType `pulumi:"type"`
	// Time Stamp
	UpdatedAt *string `pulumi:"updatedAt"`
}

func LookupApplicationInferenceProfileOutput(ctx *pulumi.Context, args LookupApplicationInferenceProfileOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationInferenceProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupApplicationInferenceProfileResultOutput, error) {
			args := v.(LookupApplicationInferenceProfileArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupApplicationInferenceProfileResult
			secret, err := ctx.InvokePackageRaw("aws-native:bedrock:getApplicationInferenceProfile", args, &rv, "", opts...)
			if err != nil {
				return LookupApplicationInferenceProfileResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupApplicationInferenceProfileResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupApplicationInferenceProfileResultOutput), nil
			}
			return output, nil
		}).(LookupApplicationInferenceProfileResultOutput)
}

type LookupApplicationInferenceProfileOutputArgs struct {
	// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
	InferenceProfileIdentifier pulumi.StringInput `pulumi:"inferenceProfileIdentifier"`
}

func (LookupApplicationInferenceProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationInferenceProfileArgs)(nil)).Elem()
}

type LookupApplicationInferenceProfileResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationInferenceProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationInferenceProfileResult)(nil)).Elem()
}

func (o LookupApplicationInferenceProfileResultOutput) ToLookupApplicationInferenceProfileResultOutput() LookupApplicationInferenceProfileResultOutput {
	return o
}

func (o LookupApplicationInferenceProfileResultOutput) ToLookupApplicationInferenceProfileResultOutputWithContext(ctx context.Context) LookupApplicationInferenceProfileResultOutput {
	return o
}

// Time Stamp
func (o LookupApplicationInferenceProfileResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o LookupApplicationInferenceProfileResultOutput) InferenceProfileArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *string { return v.InferenceProfileArn }).(pulumi.StringPtrOutput)
}

func (o LookupApplicationInferenceProfileResultOutput) InferenceProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *string { return v.InferenceProfileId }).(pulumi.StringPtrOutput)
}

// Inference profile identifier. Supports both system-defined inference profile ids, and inference profile ARNs.
func (o LookupApplicationInferenceProfileResultOutput) InferenceProfileIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *string { return v.InferenceProfileIdentifier }).(pulumi.StringPtrOutput)
}

// List of model configuration
func (o LookupApplicationInferenceProfileResultOutput) Models() ApplicationInferenceProfileInferenceProfileModelArrayOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) []ApplicationInferenceProfileInferenceProfileModel {
		return v.Models
	}).(ApplicationInferenceProfileInferenceProfileModelArrayOutput)
}

func (o LookupApplicationInferenceProfileResultOutput) Status() ApplicationInferenceProfileInferenceProfileStatusPtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *ApplicationInferenceProfileInferenceProfileStatus {
		return v.Status
	}).(ApplicationInferenceProfileInferenceProfileStatusPtrOutput)
}

// List of Tags
func (o LookupApplicationInferenceProfileResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func (o LookupApplicationInferenceProfileResultOutput) Type() ApplicationInferenceProfileInferenceProfileTypePtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *ApplicationInferenceProfileInferenceProfileType {
		return v.Type
	}).(ApplicationInferenceProfileInferenceProfileTypePtrOutput)
}

// Time Stamp
func (o LookupApplicationInferenceProfileResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationInferenceProfileResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationInferenceProfileResultOutput{})
}
