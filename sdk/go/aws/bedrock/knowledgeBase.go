// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Bedrock::KnowledgeBase Resource Type
type KnowledgeBase struct {
	pulumi.CustomResourceState

	// The time at which the knowledge base was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Description of the Resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A list of reasons that the API operation on the knowledge base failed.
	FailureReasons pulumi.StringArrayOutput `pulumi:"failureReasons"`
	// The ARN of the knowledge base.
	KnowledgeBaseArn pulumi.StringOutput `pulumi:"knowledgeBaseArn"`
	// Contains details about the embeddings configuration of the knowledge base.
	KnowledgeBaseConfiguration KnowledgeBaseConfigurationOutput `pulumi:"knowledgeBaseConfiguration"`
	// The unique identifier of the knowledge base.
	KnowledgeBaseId pulumi.StringOutput `pulumi:"knowledgeBaseId"`
	// The name of the knowledge base.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// The status of the knowledge base.
	Status KnowledgeBaseStatusOutput `pulumi:"status"`
	// Contains details about the storage configuration of the knowledge base.
	StorageConfiguration KnowledgeBaseStorageConfigurationOutput `pulumi:"storageConfiguration"`
	// Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
	//
	// - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
	// - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// The time at which the knowledge base was last updated.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewKnowledgeBase registers a new resource with the given unique name, arguments, and options.
func NewKnowledgeBase(ctx *pulumi.Context,
	name string, args *KnowledgeBaseArgs, opts ...pulumi.ResourceOption) (*KnowledgeBase, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KnowledgeBaseConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'KnowledgeBaseConfiguration'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	if args.StorageConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'StorageConfiguration'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"knowledgeBaseConfiguration",
		"storageConfiguration",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KnowledgeBase
	err := ctx.RegisterResource("aws-native:bedrock:KnowledgeBase", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKnowledgeBase gets an existing KnowledgeBase resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKnowledgeBase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KnowledgeBaseState, opts ...pulumi.ResourceOption) (*KnowledgeBase, error) {
	var resource KnowledgeBase
	err := ctx.ReadResource("aws-native:bedrock:KnowledgeBase", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KnowledgeBase resources.
type knowledgeBaseState struct {
}

type KnowledgeBaseState struct {
}

func (KnowledgeBaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*knowledgeBaseState)(nil)).Elem()
}

type knowledgeBaseArgs struct {
	// Description of the Resource.
	Description *string `pulumi:"description"`
	// Contains details about the embeddings configuration of the knowledge base.
	KnowledgeBaseConfiguration KnowledgeBaseConfiguration `pulumi:"knowledgeBaseConfiguration"`
	// The name of the knowledge base.
	Name *string `pulumi:"name"`
	// The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
	RoleArn string `pulumi:"roleArn"`
	// Contains details about the storage configuration of the knowledge base.
	StorageConfiguration KnowledgeBaseStorageConfiguration `pulumi:"storageConfiguration"`
	// Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
	//
	// - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
	// - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a KnowledgeBase resource.
type KnowledgeBaseArgs struct {
	// Description of the Resource.
	Description pulumi.StringPtrInput
	// Contains details about the embeddings configuration of the knowledge base.
	KnowledgeBaseConfiguration KnowledgeBaseConfigurationInput
	// The name of the knowledge base.
	Name pulumi.StringPtrInput
	// The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
	RoleArn pulumi.StringInput
	// Contains details about the storage configuration of the knowledge base.
	StorageConfiguration KnowledgeBaseStorageConfigurationInput
	// Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
	//
	// - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
	// - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
	Tags pulumi.StringMapInput
}

func (KnowledgeBaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*knowledgeBaseArgs)(nil)).Elem()
}

type KnowledgeBaseInput interface {
	pulumi.Input

	ToKnowledgeBaseOutput() KnowledgeBaseOutput
	ToKnowledgeBaseOutputWithContext(ctx context.Context) KnowledgeBaseOutput
}

func (*KnowledgeBase) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBase)(nil)).Elem()
}

func (i *KnowledgeBase) ToKnowledgeBaseOutput() KnowledgeBaseOutput {
	return i.ToKnowledgeBaseOutputWithContext(context.Background())
}

func (i *KnowledgeBase) ToKnowledgeBaseOutputWithContext(ctx context.Context) KnowledgeBaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KnowledgeBaseOutput)
}

type KnowledgeBaseOutput struct{ *pulumi.OutputState }

func (KnowledgeBaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KnowledgeBase)(nil)).Elem()
}

func (o KnowledgeBaseOutput) ToKnowledgeBaseOutput() KnowledgeBaseOutput {
	return o
}

func (o KnowledgeBaseOutput) ToKnowledgeBaseOutputWithContext(ctx context.Context) KnowledgeBaseOutput {
	return o
}

// The time at which the knowledge base was created.
func (o KnowledgeBaseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the Resource.
func (o KnowledgeBaseOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of reasons that the API operation on the knowledge base failed.
func (o KnowledgeBaseOutput) FailureReasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringArrayOutput { return v.FailureReasons }).(pulumi.StringArrayOutput)
}

// The ARN of the knowledge base.
func (o KnowledgeBaseOutput) KnowledgeBaseArn() pulumi.StringOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringOutput { return v.KnowledgeBaseArn }).(pulumi.StringOutput)
}

// Contains details about the embeddings configuration of the knowledge base.
func (o KnowledgeBaseOutput) KnowledgeBaseConfiguration() KnowledgeBaseConfigurationOutput {
	return o.ApplyT(func(v *KnowledgeBase) KnowledgeBaseConfigurationOutput { return v.KnowledgeBaseConfiguration }).(KnowledgeBaseConfigurationOutput)
}

// The unique identifier of the knowledge base.
func (o KnowledgeBaseOutput) KnowledgeBaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringOutput { return v.KnowledgeBaseId }).(pulumi.StringOutput)
}

// The name of the knowledge base.
func (o KnowledgeBaseOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
func (o KnowledgeBaseOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// The status of the knowledge base.
func (o KnowledgeBaseOutput) Status() KnowledgeBaseStatusOutput {
	return o.ApplyT(func(v *KnowledgeBase) KnowledgeBaseStatusOutput { return v.Status }).(KnowledgeBaseStatusOutput)
}

// Contains details about the storage configuration of the knowledge base.
func (o KnowledgeBaseOutput) StorageConfiguration() KnowledgeBaseStorageConfigurationOutput {
	return o.ApplyT(func(v *KnowledgeBase) KnowledgeBaseStorageConfigurationOutput { return v.StorageConfiguration }).(KnowledgeBaseStorageConfigurationOutput)
}

// Metadata that you can assign to a resource as key-value pairs. For more information, see the following resources:
//
// - [Tag naming limits and requirements](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-conventions)
// - [Tagging best practices](https://docs.aws.amazon.com/tag-editor/latest/userguide/tagging.html#tag-best-practices)
func (o KnowledgeBaseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// The time at which the knowledge base was last updated.
func (o KnowledgeBaseOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KnowledgeBase) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KnowledgeBaseInput)(nil)).Elem(), &KnowledgeBase{})
	pulumi.RegisterOutputType(KnowledgeBaseOutput{})
}
