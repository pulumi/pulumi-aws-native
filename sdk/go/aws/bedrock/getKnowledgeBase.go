// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Bedrock::KnowledgeBase Resource Type
func LookupKnowledgeBase(ctx *pulumi.Context, args *LookupKnowledgeBaseArgs, opts ...pulumi.InvokeOption) (*LookupKnowledgeBaseResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKnowledgeBaseResult
	err := ctx.Invoke("aws-native:bedrock:getKnowledgeBase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupKnowledgeBaseArgs struct {
	// The unique identifier of the knowledge base.
	KnowledgeBaseId string `pulumi:"knowledgeBaseId"`
}

type LookupKnowledgeBaseResult struct {
	// The time at which the knowledge base was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Description of the Resource.
	Description *string `pulumi:"description"`
	// A list of reasons that the API operation on the knowledge base failed.
	FailureReasons []string `pulumi:"failureReasons"`
	// The ARN of the knowledge base.
	KnowledgeBaseArn *string `pulumi:"knowledgeBaseArn"`
	// The unique identifier of the knowledge base.
	KnowledgeBaseId *string `pulumi:"knowledgeBaseId"`
	// The name of the knowledge base.
	Name *string `pulumi:"name"`
	// The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
	RoleArn *string              `pulumi:"roleArn"`
	Status  *KnowledgeBaseStatus `pulumi:"status"`
	Tags    map[string]string    `pulumi:"tags"`
	// The time at which the knowledge base was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

func LookupKnowledgeBaseOutput(ctx *pulumi.Context, args LookupKnowledgeBaseOutputArgs, opts ...pulumi.InvokeOption) LookupKnowledgeBaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupKnowledgeBaseResult, error) {
			args := v.(LookupKnowledgeBaseArgs)
			r, err := LookupKnowledgeBase(ctx, &args, opts...)
			var s LookupKnowledgeBaseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupKnowledgeBaseResultOutput)
}

type LookupKnowledgeBaseOutputArgs struct {
	// The unique identifier of the knowledge base.
	KnowledgeBaseId pulumi.StringInput `pulumi:"knowledgeBaseId"`
}

func (LookupKnowledgeBaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKnowledgeBaseArgs)(nil)).Elem()
}

type LookupKnowledgeBaseResultOutput struct{ *pulumi.OutputState }

func (LookupKnowledgeBaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKnowledgeBaseResult)(nil)).Elem()
}

func (o LookupKnowledgeBaseResultOutput) ToLookupKnowledgeBaseResultOutput() LookupKnowledgeBaseResultOutput {
	return o
}

func (o LookupKnowledgeBaseResultOutput) ToLookupKnowledgeBaseResultOutputWithContext(ctx context.Context) LookupKnowledgeBaseResultOutput {
	return o
}

// The time at which the knowledge base was created.
func (o LookupKnowledgeBaseResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKnowledgeBaseResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// Description of the Resource.
func (o LookupKnowledgeBaseResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKnowledgeBaseResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of reasons that the API operation on the knowledge base failed.
func (o LookupKnowledgeBaseResultOutput) FailureReasons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupKnowledgeBaseResult) []string { return v.FailureReasons }).(pulumi.StringArrayOutput)
}

// The ARN of the knowledge base.
func (o LookupKnowledgeBaseResultOutput) KnowledgeBaseArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKnowledgeBaseResult) *string { return v.KnowledgeBaseArn }).(pulumi.StringPtrOutput)
}

// The unique identifier of the knowledge base.
func (o LookupKnowledgeBaseResultOutput) KnowledgeBaseId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKnowledgeBaseResult) *string { return v.KnowledgeBaseId }).(pulumi.StringPtrOutput)
}

// The name of the knowledge base.
func (o LookupKnowledgeBaseResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKnowledgeBaseResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ARN of the IAM role with permissions to invoke API operations on the knowledge base. The ARN must begin with AmazonBedrockExecutionRoleForKnowledgeBase_
func (o LookupKnowledgeBaseResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKnowledgeBaseResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o LookupKnowledgeBaseResultOutput) Status() KnowledgeBaseStatusPtrOutput {
	return o.ApplyT(func(v LookupKnowledgeBaseResult) *KnowledgeBaseStatus { return v.Status }).(KnowledgeBaseStatusPtrOutput)
}

func (o LookupKnowledgeBaseResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupKnowledgeBaseResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The time at which the knowledge base was last updated.
func (o LookupKnowledgeBaseResultOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupKnowledgeBaseResult) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKnowledgeBaseResultOutput{})
}
