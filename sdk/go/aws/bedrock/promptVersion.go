// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Bedrock::PromptVersion Resource Type
type PromptVersion struct {
	pulumi.CustomResourceState

	// ARN of a prompt version resource
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Time Stamp.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A KMS key ARN
	CustomerEncryptionKeyArn pulumi.StringOutput `pulumi:"customerEncryptionKeyArn"`
	// Name for a variant.
	DefaultVariant pulumi.StringOutput `pulumi:"defaultVariant"`
	// Description for a prompt version resource.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name for a prompt resource.
	Name pulumi.StringOutput `pulumi:"name"`
	// ARN of a prompt resource possibly with a version
	PromptArn pulumi.StringOutput `pulumi:"promptArn"`
	// Identifier for a Prompt
	PromptId pulumi.StringOutput `pulumi:"promptId"`
	// A map of tags attached to the prompt version and their values.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Time Stamp.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// List of prompt variants
	Variants PromptVersionPromptVariantArrayOutput `pulumi:"variants"`
	// Version.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewPromptVersion registers a new resource with the given unique name, arguments, and options.
func NewPromptVersion(ctx *pulumi.Context,
	name string, args *PromptVersionArgs, opts ...pulumi.ResourceOption) (*PromptVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PromptArn == nil {
		return nil, errors.New("invalid value for required argument 'PromptArn'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"description",
		"promptArn",
		"tags.*",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PromptVersion
	err := ctx.RegisterResource("aws-native:bedrock:PromptVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPromptVersion gets an existing PromptVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPromptVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PromptVersionState, opts ...pulumi.ResourceOption) (*PromptVersion, error) {
	var resource PromptVersion
	err := ctx.ReadResource("aws-native:bedrock:PromptVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PromptVersion resources.
type promptVersionState struct {
}

type PromptVersionState struct {
}

func (PromptVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*promptVersionState)(nil)).Elem()
}

type promptVersionArgs struct {
	// Description for a prompt version resource.
	Description *string `pulumi:"description"`
	// ARN of a prompt resource possibly with a version
	PromptArn string `pulumi:"promptArn"`
	// A map of tags attached to the prompt version and their values.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a PromptVersion resource.
type PromptVersionArgs struct {
	// Description for a prompt version resource.
	Description pulumi.StringPtrInput
	// ARN of a prompt resource possibly with a version
	PromptArn pulumi.StringInput
	// A map of tags attached to the prompt version and their values.
	Tags pulumi.StringMapInput
}

func (PromptVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*promptVersionArgs)(nil)).Elem()
}

type PromptVersionInput interface {
	pulumi.Input

	ToPromptVersionOutput() PromptVersionOutput
	ToPromptVersionOutputWithContext(ctx context.Context) PromptVersionOutput
}

func (*PromptVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptVersion)(nil)).Elem()
}

func (i *PromptVersion) ToPromptVersionOutput() PromptVersionOutput {
	return i.ToPromptVersionOutputWithContext(context.Background())
}

func (i *PromptVersion) ToPromptVersionOutputWithContext(ctx context.Context) PromptVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PromptVersionOutput)
}

type PromptVersionOutput struct{ *pulumi.OutputState }

func (PromptVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PromptVersion)(nil)).Elem()
}

func (o PromptVersionOutput) ToPromptVersionOutput() PromptVersionOutput {
	return o
}

func (o PromptVersionOutput) ToPromptVersionOutputWithContext(ctx context.Context) PromptVersionOutput {
	return o
}

// ARN of a prompt version resource
func (o PromptVersionOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *PromptVersion) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Time Stamp.
func (o PromptVersionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PromptVersion) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// A KMS key ARN
func (o PromptVersionOutput) CustomerEncryptionKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v *PromptVersion) pulumi.StringOutput { return v.CustomerEncryptionKeyArn }).(pulumi.StringOutput)
}

// Name for a variant.
func (o PromptVersionOutput) DefaultVariant() pulumi.StringOutput {
	return o.ApplyT(func(v *PromptVersion) pulumi.StringOutput { return v.DefaultVariant }).(pulumi.StringOutput)
}

// Description for a prompt version resource.
func (o PromptVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PromptVersion) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name for a prompt resource.
func (o PromptVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PromptVersion) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ARN of a prompt resource possibly with a version
func (o PromptVersionOutput) PromptArn() pulumi.StringOutput {
	return o.ApplyT(func(v *PromptVersion) pulumi.StringOutput { return v.PromptArn }).(pulumi.StringOutput)
}

// Identifier for a Prompt
func (o PromptVersionOutput) PromptId() pulumi.StringOutput {
	return o.ApplyT(func(v *PromptVersion) pulumi.StringOutput { return v.PromptId }).(pulumi.StringOutput)
}

// A map of tags attached to the prompt version and their values.
func (o PromptVersionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PromptVersion) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Time Stamp.
func (o PromptVersionOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *PromptVersion) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// List of prompt variants
func (o PromptVersionOutput) Variants() PromptVersionPromptVariantArrayOutput {
	return o.ApplyT(func(v *PromptVersion) PromptVersionPromptVariantArrayOutput { return v.Variants }).(PromptVersionPromptVariantArrayOutput)
}

// Version.
func (o PromptVersionOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *PromptVersion) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PromptVersionInput)(nil)).Elem(), &PromptVersion{})
	pulumi.RegisterOutputType(PromptVersionOutput{})
}
