// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package evidently

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ExperimentMetricGoalObjectDesiredChange string

const (
	ExperimentMetricGoalObjectDesiredChangeIncrease = ExperimentMetricGoalObjectDesiredChange("INCREASE")
	ExperimentMetricGoalObjectDesiredChangeDecrease = ExperimentMetricGoalObjectDesiredChange("DECREASE")
)

func (ExperimentMetricGoalObjectDesiredChange) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentMetricGoalObjectDesiredChange)(nil)).Elem()
}

func (e ExperimentMetricGoalObjectDesiredChange) ToExperimentMetricGoalObjectDesiredChangeOutput() ExperimentMetricGoalObjectDesiredChangeOutput {
	return pulumi.ToOutput(e).(ExperimentMetricGoalObjectDesiredChangeOutput)
}

func (e ExperimentMetricGoalObjectDesiredChange) ToExperimentMetricGoalObjectDesiredChangeOutputWithContext(ctx context.Context) ExperimentMetricGoalObjectDesiredChangeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(ExperimentMetricGoalObjectDesiredChangeOutput)
}

func (e ExperimentMetricGoalObjectDesiredChange) ToExperimentMetricGoalObjectDesiredChangePtrOutput() ExperimentMetricGoalObjectDesiredChangePtrOutput {
	return e.ToExperimentMetricGoalObjectDesiredChangePtrOutputWithContext(context.Background())
}

func (e ExperimentMetricGoalObjectDesiredChange) ToExperimentMetricGoalObjectDesiredChangePtrOutputWithContext(ctx context.Context) ExperimentMetricGoalObjectDesiredChangePtrOutput {
	return ExperimentMetricGoalObjectDesiredChange(e).ToExperimentMetricGoalObjectDesiredChangeOutputWithContext(ctx).ToExperimentMetricGoalObjectDesiredChangePtrOutputWithContext(ctx)
}

func (e ExperimentMetricGoalObjectDesiredChange) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExperimentMetricGoalObjectDesiredChange) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e ExperimentMetricGoalObjectDesiredChange) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e ExperimentMetricGoalObjectDesiredChange) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type ExperimentMetricGoalObjectDesiredChangeOutput struct{ *pulumi.OutputState }

func (ExperimentMetricGoalObjectDesiredChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExperimentMetricGoalObjectDesiredChange)(nil)).Elem()
}

func (o ExperimentMetricGoalObjectDesiredChangeOutput) ToExperimentMetricGoalObjectDesiredChangeOutput() ExperimentMetricGoalObjectDesiredChangeOutput {
	return o
}

func (o ExperimentMetricGoalObjectDesiredChangeOutput) ToExperimentMetricGoalObjectDesiredChangeOutputWithContext(ctx context.Context) ExperimentMetricGoalObjectDesiredChangeOutput {
	return o
}

func (o ExperimentMetricGoalObjectDesiredChangeOutput) ToExperimentMetricGoalObjectDesiredChangePtrOutput() ExperimentMetricGoalObjectDesiredChangePtrOutput {
	return o.ToExperimentMetricGoalObjectDesiredChangePtrOutputWithContext(context.Background())
}

func (o ExperimentMetricGoalObjectDesiredChangeOutput) ToExperimentMetricGoalObjectDesiredChangePtrOutputWithContext(ctx context.Context) ExperimentMetricGoalObjectDesiredChangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExperimentMetricGoalObjectDesiredChange) *ExperimentMetricGoalObjectDesiredChange {
		return &v
	}).(ExperimentMetricGoalObjectDesiredChangePtrOutput)
}

func (o ExperimentMetricGoalObjectDesiredChangeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o ExperimentMetricGoalObjectDesiredChangeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExperimentMetricGoalObjectDesiredChange) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o ExperimentMetricGoalObjectDesiredChangeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExperimentMetricGoalObjectDesiredChangeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e ExperimentMetricGoalObjectDesiredChange) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type ExperimentMetricGoalObjectDesiredChangePtrOutput struct{ *pulumi.OutputState }

func (ExperimentMetricGoalObjectDesiredChangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExperimentMetricGoalObjectDesiredChange)(nil)).Elem()
}

func (o ExperimentMetricGoalObjectDesiredChangePtrOutput) ToExperimentMetricGoalObjectDesiredChangePtrOutput() ExperimentMetricGoalObjectDesiredChangePtrOutput {
	return o
}

func (o ExperimentMetricGoalObjectDesiredChangePtrOutput) ToExperimentMetricGoalObjectDesiredChangePtrOutputWithContext(ctx context.Context) ExperimentMetricGoalObjectDesiredChangePtrOutput {
	return o
}

func (o ExperimentMetricGoalObjectDesiredChangePtrOutput) Elem() ExperimentMetricGoalObjectDesiredChangeOutput {
	return o.ApplyT(func(v *ExperimentMetricGoalObjectDesiredChange) ExperimentMetricGoalObjectDesiredChange {
		if v != nil {
			return *v
		}
		var ret ExperimentMetricGoalObjectDesiredChange
		return ret
	}).(ExperimentMetricGoalObjectDesiredChangeOutput)
}

func (o ExperimentMetricGoalObjectDesiredChangePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o ExperimentMetricGoalObjectDesiredChangePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *ExperimentMetricGoalObjectDesiredChange) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// ExperimentMetricGoalObjectDesiredChangeInput is an input type that accepts ExperimentMetricGoalObjectDesiredChangeArgs and ExperimentMetricGoalObjectDesiredChangeOutput values.
// You can construct a concrete instance of `ExperimentMetricGoalObjectDesiredChangeInput` via:
//
//          ExperimentMetricGoalObjectDesiredChangeArgs{...}
type ExperimentMetricGoalObjectDesiredChangeInput interface {
	pulumi.Input

	ToExperimentMetricGoalObjectDesiredChangeOutput() ExperimentMetricGoalObjectDesiredChangeOutput
	ToExperimentMetricGoalObjectDesiredChangeOutputWithContext(context.Context) ExperimentMetricGoalObjectDesiredChangeOutput
}

var experimentMetricGoalObjectDesiredChangePtrType = reflect.TypeOf((**ExperimentMetricGoalObjectDesiredChange)(nil)).Elem()

type ExperimentMetricGoalObjectDesiredChangePtrInput interface {
	pulumi.Input

	ToExperimentMetricGoalObjectDesiredChangePtrOutput() ExperimentMetricGoalObjectDesiredChangePtrOutput
	ToExperimentMetricGoalObjectDesiredChangePtrOutputWithContext(context.Context) ExperimentMetricGoalObjectDesiredChangePtrOutput
}

type experimentMetricGoalObjectDesiredChangePtr string

func ExperimentMetricGoalObjectDesiredChangePtr(v string) ExperimentMetricGoalObjectDesiredChangePtrInput {
	return (*experimentMetricGoalObjectDesiredChangePtr)(&v)
}

func (*experimentMetricGoalObjectDesiredChangePtr) ElementType() reflect.Type {
	return experimentMetricGoalObjectDesiredChangePtrType
}

func (in *experimentMetricGoalObjectDesiredChangePtr) ToExperimentMetricGoalObjectDesiredChangePtrOutput() ExperimentMetricGoalObjectDesiredChangePtrOutput {
	return pulumi.ToOutput(in).(ExperimentMetricGoalObjectDesiredChangePtrOutput)
}

func (in *experimentMetricGoalObjectDesiredChangePtr) ToExperimentMetricGoalObjectDesiredChangePtrOutputWithContext(ctx context.Context) ExperimentMetricGoalObjectDesiredChangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(ExperimentMetricGoalObjectDesiredChangePtrOutput)
}

type FeatureEvaluationStrategy string

const (
	FeatureEvaluationStrategyAllRules         = FeatureEvaluationStrategy("ALL_RULES")
	FeatureEvaluationStrategyDefaultVariation = FeatureEvaluationStrategy("DEFAULT_VARIATION")
)

func (FeatureEvaluationStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureEvaluationStrategy)(nil)).Elem()
}

func (e FeatureEvaluationStrategy) ToFeatureEvaluationStrategyOutput() FeatureEvaluationStrategyOutput {
	return pulumi.ToOutput(e).(FeatureEvaluationStrategyOutput)
}

func (e FeatureEvaluationStrategy) ToFeatureEvaluationStrategyOutputWithContext(ctx context.Context) FeatureEvaluationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FeatureEvaluationStrategyOutput)
}

func (e FeatureEvaluationStrategy) ToFeatureEvaluationStrategyPtrOutput() FeatureEvaluationStrategyPtrOutput {
	return e.ToFeatureEvaluationStrategyPtrOutputWithContext(context.Background())
}

func (e FeatureEvaluationStrategy) ToFeatureEvaluationStrategyPtrOutputWithContext(ctx context.Context) FeatureEvaluationStrategyPtrOutput {
	return FeatureEvaluationStrategy(e).ToFeatureEvaluationStrategyOutputWithContext(ctx).ToFeatureEvaluationStrategyPtrOutputWithContext(ctx)
}

func (e FeatureEvaluationStrategy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FeatureEvaluationStrategy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FeatureEvaluationStrategy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FeatureEvaluationStrategy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FeatureEvaluationStrategyOutput struct{ *pulumi.OutputState }

func (FeatureEvaluationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FeatureEvaluationStrategy)(nil)).Elem()
}

func (o FeatureEvaluationStrategyOutput) ToFeatureEvaluationStrategyOutput() FeatureEvaluationStrategyOutput {
	return o
}

func (o FeatureEvaluationStrategyOutput) ToFeatureEvaluationStrategyOutputWithContext(ctx context.Context) FeatureEvaluationStrategyOutput {
	return o
}

func (o FeatureEvaluationStrategyOutput) ToFeatureEvaluationStrategyPtrOutput() FeatureEvaluationStrategyPtrOutput {
	return o.ToFeatureEvaluationStrategyPtrOutputWithContext(context.Background())
}

func (o FeatureEvaluationStrategyOutput) ToFeatureEvaluationStrategyPtrOutputWithContext(ctx context.Context) FeatureEvaluationStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FeatureEvaluationStrategy) *FeatureEvaluationStrategy {
		return &v
	}).(FeatureEvaluationStrategyPtrOutput)
}

func (o FeatureEvaluationStrategyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FeatureEvaluationStrategyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FeatureEvaluationStrategy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FeatureEvaluationStrategyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FeatureEvaluationStrategyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FeatureEvaluationStrategy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FeatureEvaluationStrategyPtrOutput struct{ *pulumi.OutputState }

func (FeatureEvaluationStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FeatureEvaluationStrategy)(nil)).Elem()
}

func (o FeatureEvaluationStrategyPtrOutput) ToFeatureEvaluationStrategyPtrOutput() FeatureEvaluationStrategyPtrOutput {
	return o
}

func (o FeatureEvaluationStrategyPtrOutput) ToFeatureEvaluationStrategyPtrOutputWithContext(ctx context.Context) FeatureEvaluationStrategyPtrOutput {
	return o
}

func (o FeatureEvaluationStrategyPtrOutput) Elem() FeatureEvaluationStrategyOutput {
	return o.ApplyT(func(v *FeatureEvaluationStrategy) FeatureEvaluationStrategy {
		if v != nil {
			return *v
		}
		var ret FeatureEvaluationStrategy
		return ret
	}).(FeatureEvaluationStrategyOutput)
}

func (o FeatureEvaluationStrategyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FeatureEvaluationStrategyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FeatureEvaluationStrategy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FeatureEvaluationStrategyInput is an input type that accepts FeatureEvaluationStrategyArgs and FeatureEvaluationStrategyOutput values.
// You can construct a concrete instance of `FeatureEvaluationStrategyInput` via:
//
//          FeatureEvaluationStrategyArgs{...}
type FeatureEvaluationStrategyInput interface {
	pulumi.Input

	ToFeatureEvaluationStrategyOutput() FeatureEvaluationStrategyOutput
	ToFeatureEvaluationStrategyOutputWithContext(context.Context) FeatureEvaluationStrategyOutput
}

var featureEvaluationStrategyPtrType = reflect.TypeOf((**FeatureEvaluationStrategy)(nil)).Elem()

type FeatureEvaluationStrategyPtrInput interface {
	pulumi.Input

	ToFeatureEvaluationStrategyPtrOutput() FeatureEvaluationStrategyPtrOutput
	ToFeatureEvaluationStrategyPtrOutputWithContext(context.Context) FeatureEvaluationStrategyPtrOutput
}

type featureEvaluationStrategyPtr string

func FeatureEvaluationStrategyPtr(v string) FeatureEvaluationStrategyPtrInput {
	return (*featureEvaluationStrategyPtr)(&v)
}

func (*featureEvaluationStrategyPtr) ElementType() reflect.Type {
	return featureEvaluationStrategyPtrType
}

func (in *featureEvaluationStrategyPtr) ToFeatureEvaluationStrategyPtrOutput() FeatureEvaluationStrategyPtrOutput {
	return pulumi.ToOutput(in).(FeatureEvaluationStrategyPtrOutput)
}

func (in *featureEvaluationStrategyPtr) ToFeatureEvaluationStrategyPtrOutputWithContext(ctx context.Context) FeatureEvaluationStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FeatureEvaluationStrategyPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExperimentMetricGoalObjectDesiredChangeInput)(nil)).Elem(), ExperimentMetricGoalObjectDesiredChange("INCREASE"))
	pulumi.RegisterInputType(reflect.TypeOf((*ExperimentMetricGoalObjectDesiredChangePtrInput)(nil)).Elem(), ExperimentMetricGoalObjectDesiredChange("INCREASE"))
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureEvaluationStrategyInput)(nil)).Elem(), FeatureEvaluationStrategy("ALL_RULES"))
	pulumi.RegisterInputType(reflect.TypeOf((*FeatureEvaluationStrategyPtrInput)(nil)).Elem(), FeatureEvaluationStrategy("ALL_RULES"))
	pulumi.RegisterOutputType(ExperimentMetricGoalObjectDesiredChangeOutput{})
	pulumi.RegisterOutputType(ExperimentMetricGoalObjectDesiredChangePtrOutput{})
	pulumi.RegisterOutputType(FeatureEvaluationStrategyOutput{})
	pulumi.RegisterOutputType(FeatureEvaluationStrategyPtrOutput{})
}
