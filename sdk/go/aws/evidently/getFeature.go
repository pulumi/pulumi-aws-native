// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package evidently

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Evidently::Feature.
func LookupFeature(ctx *pulumi.Context, args *LookupFeatureArgs, opts ...pulumi.InvokeOption) (*LookupFeatureResult, error) {
	var rv LookupFeatureResult
	err := ctx.Invoke("aws-native:evidently:getFeature", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFeatureArgs struct {
	Arn string `pulumi:"arn"`
}

type LookupFeatureResult struct {
	Arn                *string                    `pulumi:"arn"`
	DefaultVariation   *string                    `pulumi:"defaultVariation"`
	Description        *string                    `pulumi:"description"`
	EntityOverrides    []FeatureEntityOverride    `pulumi:"entityOverrides"`
	EvaluationStrategy *FeatureEvaluationStrategy `pulumi:"evaluationStrategy"`
	// An array of key-value pairs to apply to this resource.
	Tags       []FeatureTag             `pulumi:"tags"`
	Variations []FeatureVariationObject `pulumi:"variations"`
}

func LookupFeatureOutput(ctx *pulumi.Context, args LookupFeatureOutputArgs, opts ...pulumi.InvokeOption) LookupFeatureResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFeatureResult, error) {
			args := v.(LookupFeatureArgs)
			r, err := LookupFeature(ctx, &args, opts...)
			return *r, err
		}).(LookupFeatureResultOutput)
}

type LookupFeatureOutputArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupFeatureOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeatureArgs)(nil)).Elem()
}

type LookupFeatureResultOutput struct{ *pulumi.OutputState }

func (LookupFeatureResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFeatureResult)(nil)).Elem()
}

func (o LookupFeatureResultOutput) ToLookupFeatureResultOutput() LookupFeatureResultOutput {
	return o
}

func (o LookupFeatureResultOutput) ToLookupFeatureResultOutputWithContext(ctx context.Context) LookupFeatureResultOutput {
	return o
}

func (o LookupFeatureResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFeatureResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupFeatureResultOutput) DefaultVariation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFeatureResult) *string { return v.DefaultVariation }).(pulumi.StringPtrOutput)
}

func (o LookupFeatureResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFeatureResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupFeatureResultOutput) EntityOverrides() FeatureEntityOverrideArrayOutput {
	return o.ApplyT(func(v LookupFeatureResult) []FeatureEntityOverride { return v.EntityOverrides }).(FeatureEntityOverrideArrayOutput)
}

func (o LookupFeatureResultOutput) EvaluationStrategy() FeatureEvaluationStrategyPtrOutput {
	return o.ApplyT(func(v LookupFeatureResult) *FeatureEvaluationStrategy { return v.EvaluationStrategy }).(FeatureEvaluationStrategyPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupFeatureResultOutput) Tags() FeatureTagArrayOutput {
	return o.ApplyT(func(v LookupFeatureResult) []FeatureTag { return v.Tags }).(FeatureTagArrayOutput)
}

func (o LookupFeatureResultOutput) Variations() FeatureVariationObjectArrayOutput {
	return o.ApplyT(func(v LookupFeatureResult) []FeatureVariationObject { return v.Variations }).(FeatureVariationObjectArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFeatureResultOutput{})
}
