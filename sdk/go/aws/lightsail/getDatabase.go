// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Lightsail::Database
func LookupDatabase(ctx *pulumi.Context, args *LookupDatabaseArgs, opts ...pulumi.InvokeOption) (*LookupDatabaseResult, error) {
	var rv LookupDatabaseResult
	err := ctx.Invoke("aws-native:lightsail:getDatabase", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDatabaseArgs struct {
	// The name to use for your new Lightsail database resource.
	RelationalDatabaseName string `pulumi:"relationalDatabaseName"`
}

type LookupDatabaseResult struct {
	// When true, enables automated backup retention for your database. Updates are applied during the next maintenance window because this can result in an outage.
	BackupRetention *bool `pulumi:"backupRetention"`
	// Indicates the certificate that needs to be associated with the database.
	CaCertificateIdentifier *string `pulumi:"caCertificateIdentifier"`
	DatabaseArn             *string `pulumi:"databaseArn"`
	// The daily time range during which automated backups are created for your new database if automated backups are enabled.
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// The weekly time range during which system maintenance can occur on your new database.
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible *bool `pulumi:"publiclyAccessible"`
	// An array of key-value pairs to apply to this resource.
	Tags []DatabaseTag `pulumi:"tags"`
}

func LookupDatabaseOutput(ctx *pulumi.Context, args LookupDatabaseOutputArgs, opts ...pulumi.InvokeOption) LookupDatabaseResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDatabaseResult, error) {
			args := v.(LookupDatabaseArgs)
			r, err := LookupDatabase(ctx, &args, opts...)
			var s LookupDatabaseResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDatabaseResultOutput)
}

type LookupDatabaseOutputArgs struct {
	// The name to use for your new Lightsail database resource.
	RelationalDatabaseName pulumi.StringInput `pulumi:"relationalDatabaseName"`
}

func (LookupDatabaseOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseArgs)(nil)).Elem()
}

type LookupDatabaseResultOutput struct{ *pulumi.OutputState }

func (LookupDatabaseResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatabaseResult)(nil)).Elem()
}

func (o LookupDatabaseResultOutput) ToLookupDatabaseResultOutput() LookupDatabaseResultOutput {
	return o
}

func (o LookupDatabaseResultOutput) ToLookupDatabaseResultOutputWithContext(ctx context.Context) LookupDatabaseResultOutput {
	return o
}

// When true, enables automated backup retention for your database. Updates are applied during the next maintenance window because this can result in an outage.
func (o LookupDatabaseResultOutput) BackupRetention() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDatabaseResult) *bool { return v.BackupRetention }).(pulumi.BoolPtrOutput)
}

// Indicates the certificate that needs to be associated with the database.
func (o LookupDatabaseResultOutput) CaCertificateIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatabaseResult) *string { return v.CaCertificateIdentifier }).(pulumi.StringPtrOutput)
}

func (o LookupDatabaseResultOutput) DatabaseArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatabaseResult) *string { return v.DatabaseArn }).(pulumi.StringPtrOutput)
}

// The daily time range during which automated backups are created for your new database if automated backups are enabled.
func (o LookupDatabaseResultOutput) PreferredBackupWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatabaseResult) *string { return v.PreferredBackupWindow }).(pulumi.StringPtrOutput)
}

// The weekly time range during which system maintenance can occur on your new database.
func (o LookupDatabaseResultOutput) PreferredMaintenanceWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatabaseResult) *string { return v.PreferredMaintenanceWindow }).(pulumi.StringPtrOutput)
}

// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
func (o LookupDatabaseResultOutput) PubliclyAccessible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDatabaseResult) *bool { return v.PubliclyAccessible }).(pulumi.BoolPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupDatabaseResultOutput) Tags() DatabaseTagArrayOutput {
	return o.ApplyT(func(v LookupDatabaseResult) []DatabaseTag { return v.Tags }).(DatabaseTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatabaseResultOutput{})
}
