// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Lightsail::InstanceSnapshot
func LookupInstanceSnapshot(ctx *pulumi.Context, args *LookupInstanceSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupInstanceSnapshotResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceSnapshotResult
	err := ctx.Invoke("aws-native:lightsail:getInstanceSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupInstanceSnapshotArgs struct {
	// The name of the snapshot.
	InstanceSnapshotName string `pulumi:"instanceSnapshotName"`
}

type LookupInstanceSnapshotResult struct {
	// The Amazon Resource Name (ARN) of the snapshot.
	Arn *string `pulumi:"arn"`
	// The Amazon Resource Name (ARN) of the instance from which the snapshot was created.
	FromInstanceArn *string `pulumi:"fromInstanceArn"`
	// The instance from which the snapshot was created.
	FromInstanceName *string `pulumi:"fromInstanceName"`
	// A Boolean value indicating whether the snapshot was created from an automatic snapshot.
	IsFromAutoSnapshot *bool                     `pulumi:"isFromAutoSnapshot"`
	Location           *InstanceSnapshotLocation `pulumi:"location"`
	// The type of resource (usually InstanceSnapshot).
	ResourceType *string `pulumi:"resourceType"`
	// The size in GB of the SSD
	SizeInGb *int `pulumi:"sizeInGb"`
	// The state the snapshot is in.
	State *string `pulumi:"state"`
	// Support code to help identify any issues
	SupportCode *string `pulumi:"supportCode"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupInstanceSnapshotOutput(ctx *pulumi.Context, args LookupInstanceSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceSnapshotResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInstanceSnapshotResultOutput, error) {
			args := v.(LookupInstanceSnapshotArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:lightsail:getInstanceSnapshot", args, LookupInstanceSnapshotResultOutput{}, options).(LookupInstanceSnapshotResultOutput), nil
		}).(LookupInstanceSnapshotResultOutput)
}

type LookupInstanceSnapshotOutputArgs struct {
	// The name of the snapshot.
	InstanceSnapshotName pulumi.StringInput `pulumi:"instanceSnapshotName"`
}

func (LookupInstanceSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceSnapshotArgs)(nil)).Elem()
}

type LookupInstanceSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceSnapshotResult)(nil)).Elem()
}

func (o LookupInstanceSnapshotResultOutput) ToLookupInstanceSnapshotResultOutput() LookupInstanceSnapshotResultOutput {
	return o
}

func (o LookupInstanceSnapshotResultOutput) ToLookupInstanceSnapshotResultOutputWithContext(ctx context.Context) LookupInstanceSnapshotResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the snapshot.
func (o LookupInstanceSnapshotResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceSnapshotResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the instance from which the snapshot was created.
func (o LookupInstanceSnapshotResultOutput) FromInstanceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceSnapshotResult) *string { return v.FromInstanceArn }).(pulumi.StringPtrOutput)
}

// The instance from which the snapshot was created.
func (o LookupInstanceSnapshotResultOutput) FromInstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceSnapshotResult) *string { return v.FromInstanceName }).(pulumi.StringPtrOutput)
}

// A Boolean value indicating whether the snapshot was created from an automatic snapshot.
func (o LookupInstanceSnapshotResultOutput) IsFromAutoSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupInstanceSnapshotResult) *bool { return v.IsFromAutoSnapshot }).(pulumi.BoolPtrOutput)
}

func (o LookupInstanceSnapshotResultOutput) Location() InstanceSnapshotLocationPtrOutput {
	return o.ApplyT(func(v LookupInstanceSnapshotResult) *InstanceSnapshotLocation { return v.Location }).(InstanceSnapshotLocationPtrOutput)
}

// The type of resource (usually InstanceSnapshot).
func (o LookupInstanceSnapshotResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceSnapshotResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The size in GB of the SSD
func (o LookupInstanceSnapshotResultOutput) SizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupInstanceSnapshotResult) *int { return v.SizeInGb }).(pulumi.IntPtrOutput)
}

// The state the snapshot is in.
func (o LookupInstanceSnapshotResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceSnapshotResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Support code to help identify any issues
func (o LookupInstanceSnapshotResultOutput) SupportCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupInstanceSnapshotResult) *string { return v.SupportCode }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupInstanceSnapshotResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupInstanceSnapshotResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceSnapshotResultOutput{})
}
