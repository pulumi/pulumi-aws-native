// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Lightsail::Distribution
//
// Deprecated: Distribution is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type Distribution struct {
	pulumi.CustomResourceState

	// Indicates whether the bundle that is currently applied to your distribution, specified using the distributionName parameter, can be changed to another bundle.
	AbleToUpdateBundle pulumi.BoolOutput `pulumi:"ableToUpdateBundle"`
	// The bundle ID to use for the distribution.
	BundleId pulumi.StringOutput `pulumi:"bundleId"`
	// An object that describes the cache behavior settings for the distribution.
	CacheBehaviorSettings DistributionCacheSettingsPtrOutput `pulumi:"cacheBehaviorSettings"`
	// An array of objects that describe the per-path cache behavior for the distribution.
	CacheBehaviors DistributionCacheBehaviorPerPathArrayOutput `pulumi:"cacheBehaviors"`
	// The certificate attached to the Distribution.
	CertificateName pulumi.StringPtrOutput `pulumi:"certificateName"`
	// An object that describes the default cache behavior for the distribution.
	DefaultCacheBehavior DistributionCacheBehaviorOutput `pulumi:"defaultCacheBehavior"`
	DistributionArn      pulumi.StringOutput             `pulumi:"distributionArn"`
	// The name for the distribution.
	DistributionName pulumi.StringOutput `pulumi:"distributionName"`
	// The IP address type for the distribution.
	IpAddressType pulumi.StringPtrOutput `pulumi:"ipAddressType"`
	// Indicates whether the distribution is enabled.
	IsEnabled pulumi.BoolPtrOutput `pulumi:"isEnabled"`
	// An object that describes the origin resource for the distribution, such as a Lightsail instance or load balancer.
	Origin DistributionInputOriginOutput `pulumi:"origin"`
	// The status of the distribution.
	Status pulumi.StringOutput `pulumi:"status"`
	// An array of key-value pairs to apply to this resource.
	Tags DistributionTagArrayOutput `pulumi:"tags"`
}

// NewDistribution registers a new resource with the given unique name, arguments, and options.
func NewDistribution(ctx *pulumi.Context,
	name string, args *DistributionArgs, opts ...pulumi.ResourceOption) (*Distribution, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BundleId == nil {
		return nil, errors.New("invalid value for required argument 'BundleId'")
	}
	if args.DefaultCacheBehavior == nil {
		return nil, errors.New("invalid value for required argument 'DefaultCacheBehavior'")
	}
	if args.Origin == nil {
		return nil, errors.New("invalid value for required argument 'Origin'")
	}
	var resource Distribution
	err := ctx.RegisterResource("aws-native:lightsail:Distribution", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDistribution gets an existing Distribution resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDistribution(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DistributionState, opts ...pulumi.ResourceOption) (*Distribution, error) {
	var resource Distribution
	err := ctx.ReadResource("aws-native:lightsail:Distribution", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Distribution resources.
type distributionState struct {
}

type DistributionState struct {
}

func (DistributionState) ElementType() reflect.Type {
	return reflect.TypeOf((*distributionState)(nil)).Elem()
}

type distributionArgs struct {
	// The bundle ID to use for the distribution.
	BundleId string `pulumi:"bundleId"`
	// An object that describes the cache behavior settings for the distribution.
	CacheBehaviorSettings *DistributionCacheSettings `pulumi:"cacheBehaviorSettings"`
	// An array of objects that describe the per-path cache behavior for the distribution.
	CacheBehaviors []DistributionCacheBehaviorPerPath `pulumi:"cacheBehaviors"`
	// The certificate attached to the Distribution.
	CertificateName *string `pulumi:"certificateName"`
	// An object that describes the default cache behavior for the distribution.
	DefaultCacheBehavior DistributionCacheBehavior `pulumi:"defaultCacheBehavior"`
	// The name for the distribution.
	DistributionName *string `pulumi:"distributionName"`
	// The IP address type for the distribution.
	IpAddressType *string `pulumi:"ipAddressType"`
	// Indicates whether the distribution is enabled.
	IsEnabled *bool `pulumi:"isEnabled"`
	// An object that describes the origin resource for the distribution, such as a Lightsail instance or load balancer.
	Origin DistributionInputOrigin `pulumi:"origin"`
	// An array of key-value pairs to apply to this resource.
	Tags []DistributionTag `pulumi:"tags"`
}

// The set of arguments for constructing a Distribution resource.
type DistributionArgs struct {
	// The bundle ID to use for the distribution.
	BundleId pulumi.StringInput
	// An object that describes the cache behavior settings for the distribution.
	CacheBehaviorSettings DistributionCacheSettingsPtrInput
	// An array of objects that describe the per-path cache behavior for the distribution.
	CacheBehaviors DistributionCacheBehaviorPerPathArrayInput
	// The certificate attached to the Distribution.
	CertificateName pulumi.StringPtrInput
	// An object that describes the default cache behavior for the distribution.
	DefaultCacheBehavior DistributionCacheBehaviorInput
	// The name for the distribution.
	DistributionName pulumi.StringPtrInput
	// The IP address type for the distribution.
	IpAddressType pulumi.StringPtrInput
	// Indicates whether the distribution is enabled.
	IsEnabled pulumi.BoolPtrInput
	// An object that describes the origin resource for the distribution, such as a Lightsail instance or load balancer.
	Origin DistributionInputOriginInput
	// An array of key-value pairs to apply to this resource.
	Tags DistributionTagArrayInput
}

func (DistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*distributionArgs)(nil)).Elem()
}

type DistributionInput interface {
	pulumi.Input

	ToDistributionOutput() DistributionOutput
	ToDistributionOutputWithContext(ctx context.Context) DistributionOutput
}

func (*Distribution) ElementType() reflect.Type {
	return reflect.TypeOf((**Distribution)(nil)).Elem()
}

func (i *Distribution) ToDistributionOutput() DistributionOutput {
	return i.ToDistributionOutputWithContext(context.Background())
}

func (i *Distribution) ToDistributionOutputWithContext(ctx context.Context) DistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOutput)
}

type DistributionOutput struct{ *pulumi.OutputState }

func (DistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Distribution)(nil)).Elem()
}

func (o DistributionOutput) ToDistributionOutput() DistributionOutput {
	return o
}

func (o DistributionOutput) ToDistributionOutputWithContext(ctx context.Context) DistributionOutput {
	return o
}

// Indicates whether the bundle that is currently applied to your distribution, specified using the distributionName parameter, can be changed to another bundle.
func (o DistributionOutput) AbleToUpdateBundle() pulumi.BoolOutput {
	return o.ApplyT(func(v *Distribution) pulumi.BoolOutput { return v.AbleToUpdateBundle }).(pulumi.BoolOutput)
}

// The bundle ID to use for the distribution.
func (o DistributionOutput) BundleId() pulumi.StringOutput {
	return o.ApplyT(func(v *Distribution) pulumi.StringOutput { return v.BundleId }).(pulumi.StringOutput)
}

// An object that describes the cache behavior settings for the distribution.
func (o DistributionOutput) CacheBehaviorSettings() DistributionCacheSettingsPtrOutput {
	return o.ApplyT(func(v *Distribution) DistributionCacheSettingsPtrOutput { return v.CacheBehaviorSettings }).(DistributionCacheSettingsPtrOutput)
}

// An array of objects that describe the per-path cache behavior for the distribution.
func (o DistributionOutput) CacheBehaviors() DistributionCacheBehaviorPerPathArrayOutput {
	return o.ApplyT(func(v *Distribution) DistributionCacheBehaviorPerPathArrayOutput { return v.CacheBehaviors }).(DistributionCacheBehaviorPerPathArrayOutput)
}

// The certificate attached to the Distribution.
func (o DistributionOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Distribution) pulumi.StringPtrOutput { return v.CertificateName }).(pulumi.StringPtrOutput)
}

// An object that describes the default cache behavior for the distribution.
func (o DistributionOutput) DefaultCacheBehavior() DistributionCacheBehaviorOutput {
	return o.ApplyT(func(v *Distribution) DistributionCacheBehaviorOutput { return v.DefaultCacheBehavior }).(DistributionCacheBehaviorOutput)
}

func (o DistributionOutput) DistributionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Distribution) pulumi.StringOutput { return v.DistributionArn }).(pulumi.StringOutput)
}

// The name for the distribution.
func (o DistributionOutput) DistributionName() pulumi.StringOutput {
	return o.ApplyT(func(v *Distribution) pulumi.StringOutput { return v.DistributionName }).(pulumi.StringOutput)
}

// The IP address type for the distribution.
func (o DistributionOutput) IpAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Distribution) pulumi.StringPtrOutput { return v.IpAddressType }).(pulumi.StringPtrOutput)
}

// Indicates whether the distribution is enabled.
func (o DistributionOutput) IsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Distribution) pulumi.BoolPtrOutput { return v.IsEnabled }).(pulumi.BoolPtrOutput)
}

// An object that describes the origin resource for the distribution, such as a Lightsail instance or load balancer.
func (o DistributionOutput) Origin() DistributionInputOriginOutput {
	return o.ApplyT(func(v *Distribution) DistributionInputOriginOutput { return v.Origin }).(DistributionInputOriginOutput)
}

// The status of the distribution.
func (o DistributionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Distribution) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to this resource.
func (o DistributionOutput) Tags() DistributionTagArrayOutput {
	return o.ApplyT(func(v *Distribution) DistributionTagArrayOutput { return v.Tags }).(DistributionTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionInput)(nil)).Elem(), &Distribution{})
	pulumi.RegisterOutputType(DistributionOutput{})
}
