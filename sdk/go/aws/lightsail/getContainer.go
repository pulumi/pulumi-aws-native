// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Lightsail::Container
func LookupContainer(ctx *pulumi.Context, args *LookupContainerArgs, opts ...pulumi.InvokeOption) (*LookupContainerResult, error) {
	var rv LookupContainerResult
	err := ctx.Invoke("aws-native:lightsail:getContainer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupContainerArgs struct {
	// The name for the container service.
	ServiceName string `pulumi:"serviceName"`
}

type LookupContainerResult struct {
	ContainerArn *string `pulumi:"containerArn"`
	// Describes a container deployment configuration of an Amazon Lightsail container service.
	ContainerServiceDeployment *ContainerServiceDeployment `pulumi:"containerServiceDeployment"`
	// A Boolean value to indicate whether the container service is disabled.
	IsDisabled *bool `pulumi:"isDisabled"`
	// The power specification for the container service.
	Power *string `pulumi:"power"`
	// The public domain names to use with the container service, such as example.com and www.example.com.
	PublicDomainNames []ContainerPublicDomainName `pulumi:"publicDomainNames"`
	// The scale specification for the container service.
	Scale *int `pulumi:"scale"`
	// An array of key-value pairs to apply to this resource.
	Tags []ContainerTag `pulumi:"tags"`
	// The publicly accessible URL of the container service.
	Url *string `pulumi:"url"`
}

func LookupContainerOutput(ctx *pulumi.Context, args LookupContainerOutputArgs, opts ...pulumi.InvokeOption) LookupContainerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContainerResult, error) {
			args := v.(LookupContainerArgs)
			r, err := LookupContainer(ctx, &args, opts...)
			return *r, err
		}).(LookupContainerResultOutput)
}

type LookupContainerOutputArgs struct {
	// The name for the container service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupContainerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerArgs)(nil)).Elem()
}

type LookupContainerResultOutput struct{ *pulumi.OutputState }

func (LookupContainerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerResult)(nil)).Elem()
}

func (o LookupContainerResultOutput) ToLookupContainerResultOutput() LookupContainerResultOutput {
	return o
}

func (o LookupContainerResultOutput) ToLookupContainerResultOutputWithContext(ctx context.Context) LookupContainerResultOutput {
	return o
}

func (o LookupContainerResultOutput) ContainerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerResult) *string { return v.ContainerArn }).(pulumi.StringPtrOutput)
}

// Describes a container deployment configuration of an Amazon Lightsail container service.
func (o LookupContainerResultOutput) ContainerServiceDeployment() ContainerServiceDeploymentPtrOutput {
	return o.ApplyT(func(v LookupContainerResult) *ContainerServiceDeployment { return v.ContainerServiceDeployment }).(ContainerServiceDeploymentPtrOutput)
}

// A Boolean value to indicate whether the container service is disabled.
func (o LookupContainerResultOutput) IsDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupContainerResult) *bool { return v.IsDisabled }).(pulumi.BoolPtrOutput)
}

// The power specification for the container service.
func (o LookupContainerResultOutput) Power() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerResult) *string { return v.Power }).(pulumi.StringPtrOutput)
}

// The public domain names to use with the container service, such as example.com and www.example.com.
func (o LookupContainerResultOutput) PublicDomainNames() ContainerPublicDomainNameArrayOutput {
	return o.ApplyT(func(v LookupContainerResult) []ContainerPublicDomainName { return v.PublicDomainNames }).(ContainerPublicDomainNameArrayOutput)
}

// The scale specification for the container service.
func (o LookupContainerResultOutput) Scale() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupContainerResult) *int { return v.Scale }).(pulumi.IntPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupContainerResultOutput) Tags() ContainerTagArrayOutput {
	return o.ApplyT(func(v LookupContainerResult) []ContainerTag { return v.Tags }).(ContainerTagArrayOutput)
}

// The publicly accessible URL of the container service.
func (o LookupContainerResultOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContainerResult) *string { return v.Url }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContainerResultOutput{})
}
