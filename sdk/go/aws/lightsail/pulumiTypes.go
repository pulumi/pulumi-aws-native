// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// An object that sets the public accessibility of objects in the specified bucket.
type BucketAccessRules struct {
	// A Boolean value that indicates whether the access control list (ACL) permissions that are applied to individual objects override the getObject option that is currently specified.
	AllowPublicOverrides *bool `pulumi:"allowPublicOverrides"`
	// Specifies the anonymous access to all objects in a bucket.
	GetObject *string `pulumi:"getObject"`
}

// BucketAccessRulesInput is an input type that accepts BucketAccessRulesArgs and BucketAccessRulesOutput values.
// You can construct a concrete instance of `BucketAccessRulesInput` via:
//
//	BucketAccessRulesArgs{...}
type BucketAccessRulesInput interface {
	pulumi.Input

	ToBucketAccessRulesOutput() BucketAccessRulesOutput
	ToBucketAccessRulesOutputWithContext(context.Context) BucketAccessRulesOutput
}

// An object that sets the public accessibility of objects in the specified bucket.
type BucketAccessRulesArgs struct {
	// A Boolean value that indicates whether the access control list (ACL) permissions that are applied to individual objects override the getObject option that is currently specified.
	AllowPublicOverrides pulumi.BoolPtrInput `pulumi:"allowPublicOverrides"`
	// Specifies the anonymous access to all objects in a bucket.
	GetObject pulumi.StringPtrInput `pulumi:"getObject"`
}

func (BucketAccessRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccessRules)(nil)).Elem()
}

func (i BucketAccessRulesArgs) ToBucketAccessRulesOutput() BucketAccessRulesOutput {
	return i.ToBucketAccessRulesOutputWithContext(context.Background())
}

func (i BucketAccessRulesArgs) ToBucketAccessRulesOutputWithContext(ctx context.Context) BucketAccessRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessRulesOutput)
}

func (i BucketAccessRulesArgs) ToBucketAccessRulesPtrOutput() BucketAccessRulesPtrOutput {
	return i.ToBucketAccessRulesPtrOutputWithContext(context.Background())
}

func (i BucketAccessRulesArgs) ToBucketAccessRulesPtrOutputWithContext(ctx context.Context) BucketAccessRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessRulesOutput).ToBucketAccessRulesPtrOutputWithContext(ctx)
}

// BucketAccessRulesPtrInput is an input type that accepts BucketAccessRulesArgs, BucketAccessRulesPtr and BucketAccessRulesPtrOutput values.
// You can construct a concrete instance of `BucketAccessRulesPtrInput` via:
//
//	        BucketAccessRulesArgs{...}
//
//	or:
//
//	        nil
type BucketAccessRulesPtrInput interface {
	pulumi.Input

	ToBucketAccessRulesPtrOutput() BucketAccessRulesPtrOutput
	ToBucketAccessRulesPtrOutputWithContext(context.Context) BucketAccessRulesPtrOutput
}

type bucketAccessRulesPtrType BucketAccessRulesArgs

func BucketAccessRulesPtr(v *BucketAccessRulesArgs) BucketAccessRulesPtrInput {
	return (*bucketAccessRulesPtrType)(v)
}

func (*bucketAccessRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAccessRules)(nil)).Elem()
}

func (i *bucketAccessRulesPtrType) ToBucketAccessRulesPtrOutput() BucketAccessRulesPtrOutput {
	return i.ToBucketAccessRulesPtrOutputWithContext(context.Background())
}

func (i *bucketAccessRulesPtrType) ToBucketAccessRulesPtrOutputWithContext(ctx context.Context) BucketAccessRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAccessRulesPtrOutput)
}

// An object that sets the public accessibility of objects in the specified bucket.
type BucketAccessRulesOutput struct{ *pulumi.OutputState }

func (BucketAccessRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAccessRules)(nil)).Elem()
}

func (o BucketAccessRulesOutput) ToBucketAccessRulesOutput() BucketAccessRulesOutput {
	return o
}

func (o BucketAccessRulesOutput) ToBucketAccessRulesOutputWithContext(ctx context.Context) BucketAccessRulesOutput {
	return o
}

func (o BucketAccessRulesOutput) ToBucketAccessRulesPtrOutput() BucketAccessRulesPtrOutput {
	return o.ToBucketAccessRulesPtrOutputWithContext(context.Background())
}

func (o BucketAccessRulesOutput) ToBucketAccessRulesPtrOutputWithContext(ctx context.Context) BucketAccessRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketAccessRules) *BucketAccessRules {
		return &v
	}).(BucketAccessRulesPtrOutput)
}

// A Boolean value that indicates whether the access control list (ACL) permissions that are applied to individual objects override the getObject option that is currently specified.
func (o BucketAccessRulesOutput) AllowPublicOverrides() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BucketAccessRules) *bool { return v.AllowPublicOverrides }).(pulumi.BoolPtrOutput)
}

// Specifies the anonymous access to all objects in a bucket.
func (o BucketAccessRulesOutput) GetObject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketAccessRules) *string { return v.GetObject }).(pulumi.StringPtrOutput)
}

type BucketAccessRulesPtrOutput struct{ *pulumi.OutputState }

func (BucketAccessRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAccessRules)(nil)).Elem()
}

func (o BucketAccessRulesPtrOutput) ToBucketAccessRulesPtrOutput() BucketAccessRulesPtrOutput {
	return o
}

func (o BucketAccessRulesPtrOutput) ToBucketAccessRulesPtrOutputWithContext(ctx context.Context) BucketAccessRulesPtrOutput {
	return o
}

func (o BucketAccessRulesPtrOutput) Elem() BucketAccessRulesOutput {
	return o.ApplyT(func(v *BucketAccessRules) BucketAccessRules {
		if v != nil {
			return *v
		}
		var ret BucketAccessRules
		return ret
	}).(BucketAccessRulesOutput)
}

// A Boolean value that indicates whether the access control list (ACL) permissions that are applied to individual objects override the getObject option that is currently specified.
func (o BucketAccessRulesPtrOutput) AllowPublicOverrides() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BucketAccessRules) *bool {
		if v == nil {
			return nil
		}
		return v.AllowPublicOverrides
	}).(pulumi.BoolPtrOutput)
}

// Specifies the anonymous access to all objects in a bucket.
func (o BucketAccessRulesPtrOutput) GetObject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAccessRules) *string {
		if v == nil {
			return nil
		}
		return v.GetObject
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type BucketTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type CertificateTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// Describes the settings of a container that will be launched, or that is launched, to an Amazon Lightsail container service.
type ContainerType struct {
	// The launch command for the container.
	Command []string `pulumi:"command"`
	// The name of the container.
	ContainerName *string `pulumi:"containerName"`
	// The environment variables of the container.
	Environment []ContainerEnvironmentVariable `pulumi:"environment"`
	// The name of the image used for the container.
	Image *string `pulumi:"image"`
	// The open firewall ports of the container.
	Ports []ContainerPortInfo `pulumi:"ports"`
}

// ContainerTypeInput is an input type that accepts ContainerTypeArgs and ContainerTypeOutput values.
// You can construct a concrete instance of `ContainerTypeInput` via:
//
//	ContainerTypeArgs{...}
type ContainerTypeInput interface {
	pulumi.Input

	ToContainerTypeOutput() ContainerTypeOutput
	ToContainerTypeOutputWithContext(context.Context) ContainerTypeOutput
}

// Describes the settings of a container that will be launched, or that is launched, to an Amazon Lightsail container service.
type ContainerTypeArgs struct {
	// The launch command for the container.
	Command pulumi.StringArrayInput `pulumi:"command"`
	// The name of the container.
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// The environment variables of the container.
	Environment ContainerEnvironmentVariableArrayInput `pulumi:"environment"`
	// The name of the image used for the container.
	Image pulumi.StringPtrInput `pulumi:"image"`
	// The open firewall ports of the container.
	Ports ContainerPortInfoArrayInput `pulumi:"ports"`
}

func (ContainerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerType)(nil)).Elem()
}

func (i ContainerTypeArgs) ToContainerTypeOutput() ContainerTypeOutput {
	return i.ToContainerTypeOutputWithContext(context.Background())
}

func (i ContainerTypeArgs) ToContainerTypeOutputWithContext(ctx context.Context) ContainerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerTypeOutput)
}

// ContainerTypeArrayInput is an input type that accepts ContainerTypeArray and ContainerTypeArrayOutput values.
// You can construct a concrete instance of `ContainerTypeArrayInput` via:
//
//	ContainerTypeArray{ ContainerTypeArgs{...} }
type ContainerTypeArrayInput interface {
	pulumi.Input

	ToContainerTypeArrayOutput() ContainerTypeArrayOutput
	ToContainerTypeArrayOutputWithContext(context.Context) ContainerTypeArrayOutput
}

type ContainerTypeArray []ContainerTypeInput

func (ContainerTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerType)(nil)).Elem()
}

func (i ContainerTypeArray) ToContainerTypeArrayOutput() ContainerTypeArrayOutput {
	return i.ToContainerTypeArrayOutputWithContext(context.Background())
}

func (i ContainerTypeArray) ToContainerTypeArrayOutputWithContext(ctx context.Context) ContainerTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerTypeArrayOutput)
}

// Describes the settings of a container that will be launched, or that is launched, to an Amazon Lightsail container service.
type ContainerTypeOutput struct{ *pulumi.OutputState }

func (ContainerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerType)(nil)).Elem()
}

func (o ContainerTypeOutput) ToContainerTypeOutput() ContainerTypeOutput {
	return o
}

func (o ContainerTypeOutput) ToContainerTypeOutputWithContext(ctx context.Context) ContainerTypeOutput {
	return o
}

// The launch command for the container.
func (o ContainerTypeOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerType) []string { return v.Command }).(pulumi.StringArrayOutput)
}

// The name of the container.
func (o ContainerTypeOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerType) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// The environment variables of the container.
func (o ContainerTypeOutput) Environment() ContainerEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v ContainerType) []ContainerEnvironmentVariable { return v.Environment }).(ContainerEnvironmentVariableArrayOutput)
}

// The name of the image used for the container.
func (o ContainerTypeOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerType) *string { return v.Image }).(pulumi.StringPtrOutput)
}

// The open firewall ports of the container.
func (o ContainerTypeOutput) Ports() ContainerPortInfoArrayOutput {
	return o.ApplyT(func(v ContainerType) []ContainerPortInfo { return v.Ports }).(ContainerPortInfoArrayOutput)
}

type ContainerTypeArrayOutput struct{ *pulumi.OutputState }

func (ContainerTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerType)(nil)).Elem()
}

func (o ContainerTypeArrayOutput) ToContainerTypeArrayOutput() ContainerTypeArrayOutput {
	return o
}

func (o ContainerTypeArrayOutput) ToContainerTypeArrayOutputWithContext(ctx context.Context) ContainerTypeArrayOutput {
	return o
}

func (o ContainerTypeArrayOutput) Index(i pulumi.IntInput) ContainerTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerType {
		return vs[0].([]ContainerType)[vs[1].(int)]
	}).(ContainerTypeOutput)
}

type ContainerEnvironmentVariable struct {
	Value    *string `pulumi:"value"`
	Variable *string `pulumi:"variable"`
}

// ContainerEnvironmentVariableInput is an input type that accepts ContainerEnvironmentVariableArgs and ContainerEnvironmentVariableOutput values.
// You can construct a concrete instance of `ContainerEnvironmentVariableInput` via:
//
//	ContainerEnvironmentVariableArgs{...}
type ContainerEnvironmentVariableInput interface {
	pulumi.Input

	ToContainerEnvironmentVariableOutput() ContainerEnvironmentVariableOutput
	ToContainerEnvironmentVariableOutputWithContext(context.Context) ContainerEnvironmentVariableOutput
}

type ContainerEnvironmentVariableArgs struct {
	Value    pulumi.StringPtrInput `pulumi:"value"`
	Variable pulumi.StringPtrInput `pulumi:"variable"`
}

func (ContainerEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerEnvironmentVariable)(nil)).Elem()
}

func (i ContainerEnvironmentVariableArgs) ToContainerEnvironmentVariableOutput() ContainerEnvironmentVariableOutput {
	return i.ToContainerEnvironmentVariableOutputWithContext(context.Background())
}

func (i ContainerEnvironmentVariableArgs) ToContainerEnvironmentVariableOutputWithContext(ctx context.Context) ContainerEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerEnvironmentVariableOutput)
}

// ContainerEnvironmentVariableArrayInput is an input type that accepts ContainerEnvironmentVariableArray and ContainerEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ContainerEnvironmentVariableArrayInput` via:
//
//	ContainerEnvironmentVariableArray{ ContainerEnvironmentVariableArgs{...} }
type ContainerEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToContainerEnvironmentVariableArrayOutput() ContainerEnvironmentVariableArrayOutput
	ToContainerEnvironmentVariableArrayOutputWithContext(context.Context) ContainerEnvironmentVariableArrayOutput
}

type ContainerEnvironmentVariableArray []ContainerEnvironmentVariableInput

func (ContainerEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerEnvironmentVariable)(nil)).Elem()
}

func (i ContainerEnvironmentVariableArray) ToContainerEnvironmentVariableArrayOutput() ContainerEnvironmentVariableArrayOutput {
	return i.ToContainerEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ContainerEnvironmentVariableArray) ToContainerEnvironmentVariableArrayOutputWithContext(ctx context.Context) ContainerEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerEnvironmentVariableArrayOutput)
}

type ContainerEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ContainerEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerEnvironmentVariable)(nil)).Elem()
}

func (o ContainerEnvironmentVariableOutput) ToContainerEnvironmentVariableOutput() ContainerEnvironmentVariableOutput {
	return o
}

func (o ContainerEnvironmentVariableOutput) ToContainerEnvironmentVariableOutputWithContext(ctx context.Context) ContainerEnvironmentVariableOutput {
	return o
}

func (o ContainerEnvironmentVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerEnvironmentVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o ContainerEnvironmentVariableOutput) Variable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerEnvironmentVariable) *string { return v.Variable }).(pulumi.StringPtrOutput)
}

type ContainerEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ContainerEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerEnvironmentVariable)(nil)).Elem()
}

func (o ContainerEnvironmentVariableArrayOutput) ToContainerEnvironmentVariableArrayOutput() ContainerEnvironmentVariableArrayOutput {
	return o
}

func (o ContainerEnvironmentVariableArrayOutput) ToContainerEnvironmentVariableArrayOutputWithContext(ctx context.Context) ContainerEnvironmentVariableArrayOutput {
	return o
}

func (o ContainerEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ContainerEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerEnvironmentVariable {
		return vs[0].([]ContainerEnvironmentVariable)[vs[1].(int)]
	}).(ContainerEnvironmentVariableOutput)
}

// Describes the health check configuration of an Amazon Lightsail container service.
type ContainerHealthCheckConfig struct {
	// The number of consecutive health checks successes required before moving the container to the Healthy state. The default value is 2.
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. The default value is 5.
	IntervalSeconds *int `pulumi:"intervalSeconds"`
	// The path on the container on which to perform the health check. The default value is /.
	Path *string `pulumi:"path"`
	// The HTTP codes to use when checking for a successful response from a container. You can specify values between 200 and 499. You can specify multiple values (for example, 200,202) or a range of values (for example, 200-299).
	SuccessCodes *string `pulumi:"successCodes"`
	// The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. The default value is 2.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
	// The number of consecutive health check failures required before moving the container to the Unhealthy state. The default value is 2.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ContainerHealthCheckConfigInput is an input type that accepts ContainerHealthCheckConfigArgs and ContainerHealthCheckConfigOutput values.
// You can construct a concrete instance of `ContainerHealthCheckConfigInput` via:
//
//	ContainerHealthCheckConfigArgs{...}
type ContainerHealthCheckConfigInput interface {
	pulumi.Input

	ToContainerHealthCheckConfigOutput() ContainerHealthCheckConfigOutput
	ToContainerHealthCheckConfigOutputWithContext(context.Context) ContainerHealthCheckConfigOutput
}

// Describes the health check configuration of an Amazon Lightsail container service.
type ContainerHealthCheckConfigArgs struct {
	// The number of consecutive health checks successes required before moving the container to the Healthy state. The default value is 2.
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. The default value is 5.
	IntervalSeconds pulumi.IntPtrInput `pulumi:"intervalSeconds"`
	// The path on the container on which to perform the health check. The default value is /.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The HTTP codes to use when checking for a successful response from a container. You can specify values between 200 and 499. You can specify multiple values (for example, 200,202) or a range of values (for example, 200-299).
	SuccessCodes pulumi.StringPtrInput `pulumi:"successCodes"`
	// The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. The default value is 2.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
	// The number of consecutive health check failures required before moving the container to the Unhealthy state. The default value is 2.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ContainerHealthCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthCheckConfig)(nil)).Elem()
}

func (i ContainerHealthCheckConfigArgs) ToContainerHealthCheckConfigOutput() ContainerHealthCheckConfigOutput {
	return i.ToContainerHealthCheckConfigOutputWithContext(context.Background())
}

func (i ContainerHealthCheckConfigArgs) ToContainerHealthCheckConfigOutputWithContext(ctx context.Context) ContainerHealthCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthCheckConfigOutput)
}

func (i ContainerHealthCheckConfigArgs) ToContainerHealthCheckConfigPtrOutput() ContainerHealthCheckConfigPtrOutput {
	return i.ToContainerHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i ContainerHealthCheckConfigArgs) ToContainerHealthCheckConfigPtrOutputWithContext(ctx context.Context) ContainerHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthCheckConfigOutput).ToContainerHealthCheckConfigPtrOutputWithContext(ctx)
}

// ContainerHealthCheckConfigPtrInput is an input type that accepts ContainerHealthCheckConfigArgs, ContainerHealthCheckConfigPtr and ContainerHealthCheckConfigPtrOutput values.
// You can construct a concrete instance of `ContainerHealthCheckConfigPtrInput` via:
//
//	        ContainerHealthCheckConfigArgs{...}
//
//	or:
//
//	        nil
type ContainerHealthCheckConfigPtrInput interface {
	pulumi.Input

	ToContainerHealthCheckConfigPtrOutput() ContainerHealthCheckConfigPtrOutput
	ToContainerHealthCheckConfigPtrOutputWithContext(context.Context) ContainerHealthCheckConfigPtrOutput
}

type containerHealthCheckConfigPtrType ContainerHealthCheckConfigArgs

func ContainerHealthCheckConfigPtr(v *ContainerHealthCheckConfigArgs) ContainerHealthCheckConfigPtrInput {
	return (*containerHealthCheckConfigPtrType)(v)
}

func (*containerHealthCheckConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthCheckConfig)(nil)).Elem()
}

func (i *containerHealthCheckConfigPtrType) ToContainerHealthCheckConfigPtrOutput() ContainerHealthCheckConfigPtrOutput {
	return i.ToContainerHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i *containerHealthCheckConfigPtrType) ToContainerHealthCheckConfigPtrOutputWithContext(ctx context.Context) ContainerHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerHealthCheckConfigPtrOutput)
}

// Describes the health check configuration of an Amazon Lightsail container service.
type ContainerHealthCheckConfigOutput struct{ *pulumi.OutputState }

func (ContainerHealthCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerHealthCheckConfig)(nil)).Elem()
}

func (o ContainerHealthCheckConfigOutput) ToContainerHealthCheckConfigOutput() ContainerHealthCheckConfigOutput {
	return o
}

func (o ContainerHealthCheckConfigOutput) ToContainerHealthCheckConfigOutputWithContext(ctx context.Context) ContainerHealthCheckConfigOutput {
	return o
}

func (o ContainerHealthCheckConfigOutput) ToContainerHealthCheckConfigPtrOutput() ContainerHealthCheckConfigPtrOutput {
	return o.ToContainerHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (o ContainerHealthCheckConfigOutput) ToContainerHealthCheckConfigPtrOutputWithContext(ctx context.Context) ContainerHealthCheckConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerHealthCheckConfig) *ContainerHealthCheckConfig {
		return &v
	}).(ContainerHealthCheckConfigPtrOutput)
}

// The number of consecutive health checks successes required before moving the container to the Healthy state. The default value is 2.
func (o ContainerHealthCheckConfigOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerHealthCheckConfig) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. The default value is 5.
func (o ContainerHealthCheckConfigOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerHealthCheckConfig) *int { return v.IntervalSeconds }).(pulumi.IntPtrOutput)
}

// The path on the container on which to perform the health check. The default value is /.
func (o ContainerHealthCheckConfigOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerHealthCheckConfig) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The HTTP codes to use when checking for a successful response from a container. You can specify values between 200 and 499. You can specify multiple values (for example, 200,202) or a range of values (for example, 200-299).
func (o ContainerHealthCheckConfigOutput) SuccessCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerHealthCheckConfig) *string { return v.SuccessCodes }).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. The default value is 2.
func (o ContainerHealthCheckConfigOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerHealthCheckConfig) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

// The number of consecutive health check failures required before moving the container to the Unhealthy state. The default value is 2.
func (o ContainerHealthCheckConfigOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerHealthCheckConfig) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ContainerHealthCheckConfigPtrOutput struct{ *pulumi.OutputState }

func (ContainerHealthCheckConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerHealthCheckConfig)(nil)).Elem()
}

func (o ContainerHealthCheckConfigPtrOutput) ToContainerHealthCheckConfigPtrOutput() ContainerHealthCheckConfigPtrOutput {
	return o
}

func (o ContainerHealthCheckConfigPtrOutput) ToContainerHealthCheckConfigPtrOutputWithContext(ctx context.Context) ContainerHealthCheckConfigPtrOutput {
	return o
}

func (o ContainerHealthCheckConfigPtrOutput) Elem() ContainerHealthCheckConfigOutput {
	return o.ApplyT(func(v *ContainerHealthCheckConfig) ContainerHealthCheckConfig {
		if v != nil {
			return *v
		}
		var ret ContainerHealthCheckConfig
		return ret
	}).(ContainerHealthCheckConfigOutput)
}

// The number of consecutive health checks successes required before moving the container to the Healthy state. The default value is 2.
func (o ContainerHealthCheckConfigPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. The default value is 5.
func (o ContainerHealthCheckConfigPtrOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.IntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// The path on the container on which to perform the health check. The default value is /.
func (o ContainerHealthCheckConfigPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The HTTP codes to use when checking for a successful response from a container. You can specify values between 200 and 499. You can specify multiple values (for example, 200,202) or a range of values (for example, 200-299).
func (o ContainerHealthCheckConfigPtrOutput) SuccessCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.SuccessCodes
	}).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. The default value is 2.
func (o ContainerHealthCheckConfigPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive health check failures required before moving the container to the Unhealthy state. The default value is 2.
func (o ContainerHealthCheckConfigPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type ContainerPortInfo struct {
	Port     *string `pulumi:"port"`
	Protocol *string `pulumi:"protocol"`
}

// ContainerPortInfoInput is an input type that accepts ContainerPortInfoArgs and ContainerPortInfoOutput values.
// You can construct a concrete instance of `ContainerPortInfoInput` via:
//
//	ContainerPortInfoArgs{...}
type ContainerPortInfoInput interface {
	pulumi.Input

	ToContainerPortInfoOutput() ContainerPortInfoOutput
	ToContainerPortInfoOutputWithContext(context.Context) ContainerPortInfoOutput
}

type ContainerPortInfoArgs struct {
	Port     pulumi.StringPtrInput `pulumi:"port"`
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (ContainerPortInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPortInfo)(nil)).Elem()
}

func (i ContainerPortInfoArgs) ToContainerPortInfoOutput() ContainerPortInfoOutput {
	return i.ToContainerPortInfoOutputWithContext(context.Background())
}

func (i ContainerPortInfoArgs) ToContainerPortInfoOutputWithContext(ctx context.Context) ContainerPortInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPortInfoOutput)
}

// ContainerPortInfoArrayInput is an input type that accepts ContainerPortInfoArray and ContainerPortInfoArrayOutput values.
// You can construct a concrete instance of `ContainerPortInfoArrayInput` via:
//
//	ContainerPortInfoArray{ ContainerPortInfoArgs{...} }
type ContainerPortInfoArrayInput interface {
	pulumi.Input

	ToContainerPortInfoArrayOutput() ContainerPortInfoArrayOutput
	ToContainerPortInfoArrayOutputWithContext(context.Context) ContainerPortInfoArrayOutput
}

type ContainerPortInfoArray []ContainerPortInfoInput

func (ContainerPortInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerPortInfo)(nil)).Elem()
}

func (i ContainerPortInfoArray) ToContainerPortInfoArrayOutput() ContainerPortInfoArrayOutput {
	return i.ToContainerPortInfoArrayOutputWithContext(context.Background())
}

func (i ContainerPortInfoArray) ToContainerPortInfoArrayOutputWithContext(ctx context.Context) ContainerPortInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPortInfoArrayOutput)
}

type ContainerPortInfoOutput struct{ *pulumi.OutputState }

func (ContainerPortInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPortInfo)(nil)).Elem()
}

func (o ContainerPortInfoOutput) ToContainerPortInfoOutput() ContainerPortInfoOutput {
	return o
}

func (o ContainerPortInfoOutput) ToContainerPortInfoOutputWithContext(ctx context.Context) ContainerPortInfoOutput {
	return o
}

func (o ContainerPortInfoOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPortInfo) *string { return v.Port }).(pulumi.StringPtrOutput)
}

func (o ContainerPortInfoOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPortInfo) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type ContainerPortInfoArrayOutput struct{ *pulumi.OutputState }

func (ContainerPortInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerPortInfo)(nil)).Elem()
}

func (o ContainerPortInfoArrayOutput) ToContainerPortInfoArrayOutput() ContainerPortInfoArrayOutput {
	return o
}

func (o ContainerPortInfoArrayOutput) ToContainerPortInfoArrayOutputWithContext(ctx context.Context) ContainerPortInfoArrayOutput {
	return o
}

func (o ContainerPortInfoArrayOutput) Index(i pulumi.IntInput) ContainerPortInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerPortInfo {
		return vs[0].([]ContainerPortInfo)[vs[1].(int)]
	}).(ContainerPortInfoOutput)
}

// An object to describe the configuration for the container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories.
type ContainerPrivateRegistryAccess struct {
	// An object to describe a request to activate or deactivate the role that you can use to grant an Amazon Lightsail container service access to Amazon Elastic Container Registry (Amazon ECR) private repositories.
	EcrImagePullerRole *ContainerPrivateRegistryAccessEcrImagePullerRoleProperties `pulumi:"ecrImagePullerRole"`
}

// ContainerPrivateRegistryAccessInput is an input type that accepts ContainerPrivateRegistryAccessArgs and ContainerPrivateRegistryAccessOutput values.
// You can construct a concrete instance of `ContainerPrivateRegistryAccessInput` via:
//
//	ContainerPrivateRegistryAccessArgs{...}
type ContainerPrivateRegistryAccessInput interface {
	pulumi.Input

	ToContainerPrivateRegistryAccessOutput() ContainerPrivateRegistryAccessOutput
	ToContainerPrivateRegistryAccessOutputWithContext(context.Context) ContainerPrivateRegistryAccessOutput
}

// An object to describe the configuration for the container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories.
type ContainerPrivateRegistryAccessArgs struct {
	// An object to describe a request to activate or deactivate the role that you can use to grant an Amazon Lightsail container service access to Amazon Elastic Container Registry (Amazon ECR) private repositories.
	EcrImagePullerRole ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrInput `pulumi:"ecrImagePullerRole"`
}

func (ContainerPrivateRegistryAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPrivateRegistryAccess)(nil)).Elem()
}

func (i ContainerPrivateRegistryAccessArgs) ToContainerPrivateRegistryAccessOutput() ContainerPrivateRegistryAccessOutput {
	return i.ToContainerPrivateRegistryAccessOutputWithContext(context.Background())
}

func (i ContainerPrivateRegistryAccessArgs) ToContainerPrivateRegistryAccessOutputWithContext(ctx context.Context) ContainerPrivateRegistryAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPrivateRegistryAccessOutput)
}

func (i ContainerPrivateRegistryAccessArgs) ToContainerPrivateRegistryAccessPtrOutput() ContainerPrivateRegistryAccessPtrOutput {
	return i.ToContainerPrivateRegistryAccessPtrOutputWithContext(context.Background())
}

func (i ContainerPrivateRegistryAccessArgs) ToContainerPrivateRegistryAccessPtrOutputWithContext(ctx context.Context) ContainerPrivateRegistryAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPrivateRegistryAccessOutput).ToContainerPrivateRegistryAccessPtrOutputWithContext(ctx)
}

// ContainerPrivateRegistryAccessPtrInput is an input type that accepts ContainerPrivateRegistryAccessArgs, ContainerPrivateRegistryAccessPtr and ContainerPrivateRegistryAccessPtrOutput values.
// You can construct a concrete instance of `ContainerPrivateRegistryAccessPtrInput` via:
//
//	        ContainerPrivateRegistryAccessArgs{...}
//
//	or:
//
//	        nil
type ContainerPrivateRegistryAccessPtrInput interface {
	pulumi.Input

	ToContainerPrivateRegistryAccessPtrOutput() ContainerPrivateRegistryAccessPtrOutput
	ToContainerPrivateRegistryAccessPtrOutputWithContext(context.Context) ContainerPrivateRegistryAccessPtrOutput
}

type containerPrivateRegistryAccessPtrType ContainerPrivateRegistryAccessArgs

func ContainerPrivateRegistryAccessPtr(v *ContainerPrivateRegistryAccessArgs) ContainerPrivateRegistryAccessPtrInput {
	return (*containerPrivateRegistryAccessPtrType)(v)
}

func (*containerPrivateRegistryAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPrivateRegistryAccess)(nil)).Elem()
}

func (i *containerPrivateRegistryAccessPtrType) ToContainerPrivateRegistryAccessPtrOutput() ContainerPrivateRegistryAccessPtrOutput {
	return i.ToContainerPrivateRegistryAccessPtrOutputWithContext(context.Background())
}

func (i *containerPrivateRegistryAccessPtrType) ToContainerPrivateRegistryAccessPtrOutputWithContext(ctx context.Context) ContainerPrivateRegistryAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPrivateRegistryAccessPtrOutput)
}

// An object to describe the configuration for the container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories.
type ContainerPrivateRegistryAccessOutput struct{ *pulumi.OutputState }

func (ContainerPrivateRegistryAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPrivateRegistryAccess)(nil)).Elem()
}

func (o ContainerPrivateRegistryAccessOutput) ToContainerPrivateRegistryAccessOutput() ContainerPrivateRegistryAccessOutput {
	return o
}

func (o ContainerPrivateRegistryAccessOutput) ToContainerPrivateRegistryAccessOutputWithContext(ctx context.Context) ContainerPrivateRegistryAccessOutput {
	return o
}

func (o ContainerPrivateRegistryAccessOutput) ToContainerPrivateRegistryAccessPtrOutput() ContainerPrivateRegistryAccessPtrOutput {
	return o.ToContainerPrivateRegistryAccessPtrOutputWithContext(context.Background())
}

func (o ContainerPrivateRegistryAccessOutput) ToContainerPrivateRegistryAccessPtrOutputWithContext(ctx context.Context) ContainerPrivateRegistryAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerPrivateRegistryAccess) *ContainerPrivateRegistryAccess {
		return &v
	}).(ContainerPrivateRegistryAccessPtrOutput)
}

// An object to describe a request to activate or deactivate the role that you can use to grant an Amazon Lightsail container service access to Amazon Elastic Container Registry (Amazon ECR) private repositories.
func (o ContainerPrivateRegistryAccessOutput) EcrImagePullerRole() ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput {
	return o.ApplyT(func(v ContainerPrivateRegistryAccess) *ContainerPrivateRegistryAccessEcrImagePullerRoleProperties {
		return v.EcrImagePullerRole
	}).(ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput)
}

type ContainerPrivateRegistryAccessPtrOutput struct{ *pulumi.OutputState }

func (ContainerPrivateRegistryAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPrivateRegistryAccess)(nil)).Elem()
}

func (o ContainerPrivateRegistryAccessPtrOutput) ToContainerPrivateRegistryAccessPtrOutput() ContainerPrivateRegistryAccessPtrOutput {
	return o
}

func (o ContainerPrivateRegistryAccessPtrOutput) ToContainerPrivateRegistryAccessPtrOutputWithContext(ctx context.Context) ContainerPrivateRegistryAccessPtrOutput {
	return o
}

func (o ContainerPrivateRegistryAccessPtrOutput) Elem() ContainerPrivateRegistryAccessOutput {
	return o.ApplyT(func(v *ContainerPrivateRegistryAccess) ContainerPrivateRegistryAccess {
		if v != nil {
			return *v
		}
		var ret ContainerPrivateRegistryAccess
		return ret
	}).(ContainerPrivateRegistryAccessOutput)
}

// An object to describe a request to activate or deactivate the role that you can use to grant an Amazon Lightsail container service access to Amazon Elastic Container Registry (Amazon ECR) private repositories.
func (o ContainerPrivateRegistryAccessPtrOutput) EcrImagePullerRole() ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput {
	return o.ApplyT(func(v *ContainerPrivateRegistryAccess) *ContainerPrivateRegistryAccessEcrImagePullerRoleProperties {
		if v == nil {
			return nil
		}
		return v.EcrImagePullerRole
	}).(ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput)
}

// An object to describe a request to activate or deactivate the role that you can use to grant an Amazon Lightsail container service access to Amazon Elastic Container Registry (Amazon ECR) private repositories.
type ContainerPrivateRegistryAccessEcrImagePullerRoleProperties struct {
	// A Boolean value that indicates whether to activate the role.
	IsActive *bool `pulumi:"isActive"`
	// The Amazon Resource Name (ARN) of the role, if it is activated.
	PrincipalArn *string `pulumi:"principalArn"`
}

// ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesInput is an input type that accepts ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs and ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput values.
// You can construct a concrete instance of `ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesInput` via:
//
//	ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs{...}
type ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesInput interface {
	pulumi.Input

	ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput() ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput
	ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutputWithContext(context.Context) ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput
}

// An object to describe a request to activate or deactivate the role that you can use to grant an Amazon Lightsail container service access to Amazon Elastic Container Registry (Amazon ECR) private repositories.
type ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs struct {
	// A Boolean value that indicates whether to activate the role.
	IsActive pulumi.BoolPtrInput `pulumi:"isActive"`
	// The Amazon Resource Name (ARN) of the role, if it is activated.
	PrincipalArn pulumi.StringPtrInput `pulumi:"principalArn"`
}

func (ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPrivateRegistryAccessEcrImagePullerRoleProperties)(nil)).Elem()
}

func (i ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs) ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput() ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput {
	return i.ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutputWithContext(context.Background())
}

func (i ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs) ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutputWithContext(ctx context.Context) ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput)
}

func (i ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs) ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput() ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput {
	return i.ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutputWithContext(context.Background())
}

func (i ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs) ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutputWithContext(ctx context.Context) ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput).ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutputWithContext(ctx)
}

// ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrInput is an input type that accepts ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs, ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtr and ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput values.
// You can construct a concrete instance of `ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrInput` via:
//
//	        ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs{...}
//
//	or:
//
//	        nil
type ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrInput interface {
	pulumi.Input

	ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput() ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput
	ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutputWithContext(context.Context) ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput
}

type containerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrType ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs

func ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtr(v *ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs) ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrInput {
	return (*containerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrType)(v)
}

func (*containerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPrivateRegistryAccessEcrImagePullerRoleProperties)(nil)).Elem()
}

func (i *containerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrType) ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput() ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput {
	return i.ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutputWithContext(context.Background())
}

func (i *containerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrType) ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutputWithContext(ctx context.Context) ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput)
}

// An object to describe a request to activate or deactivate the role that you can use to grant an Amazon Lightsail container service access to Amazon Elastic Container Registry (Amazon ECR) private repositories.
type ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput struct{ *pulumi.OutputState }

func (ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPrivateRegistryAccessEcrImagePullerRoleProperties)(nil)).Elem()
}

func (o ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput) ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput() ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput {
	return o
}

func (o ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput) ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutputWithContext(ctx context.Context) ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput {
	return o
}

func (o ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput) ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput() ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput {
	return o.ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutputWithContext(context.Background())
}

func (o ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput) ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutputWithContext(ctx context.Context) ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerPrivateRegistryAccessEcrImagePullerRoleProperties) *ContainerPrivateRegistryAccessEcrImagePullerRoleProperties {
		return &v
	}).(ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput)
}

// A Boolean value that indicates whether to activate the role.
func (o ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput) IsActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ContainerPrivateRegistryAccessEcrImagePullerRoleProperties) *bool { return v.IsActive }).(pulumi.BoolPtrOutput)
}

// The Amazon Resource Name (ARN) of the role, if it is activated.
func (o ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput) PrincipalArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPrivateRegistryAccessEcrImagePullerRoleProperties) *string { return v.PrincipalArn }).(pulumi.StringPtrOutput)
}

type ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPrivateRegistryAccessEcrImagePullerRoleProperties)(nil)).Elem()
}

func (o ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput) ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput() ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput {
	return o
}

func (o ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput) ToContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutputWithContext(ctx context.Context) ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput {
	return o
}

func (o ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput) Elem() ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput {
	return o.ApplyT(func(v *ContainerPrivateRegistryAccessEcrImagePullerRoleProperties) ContainerPrivateRegistryAccessEcrImagePullerRoleProperties {
		if v != nil {
			return *v
		}
		var ret ContainerPrivateRegistryAccessEcrImagePullerRoleProperties
		return ret
	}).(ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput)
}

// A Boolean value that indicates whether to activate the role.
func (o ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput) IsActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerPrivateRegistryAccessEcrImagePullerRoleProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsActive
	}).(pulumi.BoolPtrOutput)
}

// The Amazon Resource Name (ARN) of the role, if it is activated.
func (o ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput) PrincipalArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPrivateRegistryAccessEcrImagePullerRoleProperties) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalArn
	}).(pulumi.StringPtrOutput)
}

// The public domain name to use with the container service, such as example.com and www.example.com.
type ContainerPublicDomainName struct {
	CertificateName *string `pulumi:"certificateName"`
	// An object that describes the configuration for the containers of the deployment.
	DomainNames []string `pulumi:"domainNames"`
}

// ContainerPublicDomainNameInput is an input type that accepts ContainerPublicDomainNameArgs and ContainerPublicDomainNameOutput values.
// You can construct a concrete instance of `ContainerPublicDomainNameInput` via:
//
//	ContainerPublicDomainNameArgs{...}
type ContainerPublicDomainNameInput interface {
	pulumi.Input

	ToContainerPublicDomainNameOutput() ContainerPublicDomainNameOutput
	ToContainerPublicDomainNameOutputWithContext(context.Context) ContainerPublicDomainNameOutput
}

// The public domain name to use with the container service, such as example.com and www.example.com.
type ContainerPublicDomainNameArgs struct {
	CertificateName pulumi.StringPtrInput `pulumi:"certificateName"`
	// An object that describes the configuration for the containers of the deployment.
	DomainNames pulumi.StringArrayInput `pulumi:"domainNames"`
}

func (ContainerPublicDomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPublicDomainName)(nil)).Elem()
}

func (i ContainerPublicDomainNameArgs) ToContainerPublicDomainNameOutput() ContainerPublicDomainNameOutput {
	return i.ToContainerPublicDomainNameOutputWithContext(context.Background())
}

func (i ContainerPublicDomainNameArgs) ToContainerPublicDomainNameOutputWithContext(ctx context.Context) ContainerPublicDomainNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPublicDomainNameOutput)
}

// ContainerPublicDomainNameArrayInput is an input type that accepts ContainerPublicDomainNameArray and ContainerPublicDomainNameArrayOutput values.
// You can construct a concrete instance of `ContainerPublicDomainNameArrayInput` via:
//
//	ContainerPublicDomainNameArray{ ContainerPublicDomainNameArgs{...} }
type ContainerPublicDomainNameArrayInput interface {
	pulumi.Input

	ToContainerPublicDomainNameArrayOutput() ContainerPublicDomainNameArrayOutput
	ToContainerPublicDomainNameArrayOutputWithContext(context.Context) ContainerPublicDomainNameArrayOutput
}

type ContainerPublicDomainNameArray []ContainerPublicDomainNameInput

func (ContainerPublicDomainNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerPublicDomainName)(nil)).Elem()
}

func (i ContainerPublicDomainNameArray) ToContainerPublicDomainNameArrayOutput() ContainerPublicDomainNameArrayOutput {
	return i.ToContainerPublicDomainNameArrayOutputWithContext(context.Background())
}

func (i ContainerPublicDomainNameArray) ToContainerPublicDomainNameArrayOutputWithContext(ctx context.Context) ContainerPublicDomainNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPublicDomainNameArrayOutput)
}

// The public domain name to use with the container service, such as example.com and www.example.com.
type ContainerPublicDomainNameOutput struct{ *pulumi.OutputState }

func (ContainerPublicDomainNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPublicDomainName)(nil)).Elem()
}

func (o ContainerPublicDomainNameOutput) ToContainerPublicDomainNameOutput() ContainerPublicDomainNameOutput {
	return o
}

func (o ContainerPublicDomainNameOutput) ToContainerPublicDomainNameOutputWithContext(ctx context.Context) ContainerPublicDomainNameOutput {
	return o
}

func (o ContainerPublicDomainNameOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPublicDomainName) *string { return v.CertificateName }).(pulumi.StringPtrOutput)
}

// An object that describes the configuration for the containers of the deployment.
func (o ContainerPublicDomainNameOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerPublicDomainName) []string { return v.DomainNames }).(pulumi.StringArrayOutput)
}

type ContainerPublicDomainNameArrayOutput struct{ *pulumi.OutputState }

func (ContainerPublicDomainNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerPublicDomainName)(nil)).Elem()
}

func (o ContainerPublicDomainNameArrayOutput) ToContainerPublicDomainNameArrayOutput() ContainerPublicDomainNameArrayOutput {
	return o
}

func (o ContainerPublicDomainNameArrayOutput) ToContainerPublicDomainNameArrayOutputWithContext(ctx context.Context) ContainerPublicDomainNameArrayOutput {
	return o
}

func (o ContainerPublicDomainNameArrayOutput) Index(i pulumi.IntInput) ContainerPublicDomainNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerPublicDomainName {
		return vs[0].([]ContainerPublicDomainName)[vs[1].(int)]
	}).(ContainerPublicDomainNameOutput)
}

// Describes the settings of a public endpoint for an Amazon Lightsail container service.
type ContainerPublicEndpoint struct {
	// The name of the container for the endpoint.
	ContainerName *string `pulumi:"containerName"`
	// The port of the container to which traffic is forwarded to.
	ContainerPort *int `pulumi:"containerPort"`
	// An object that describes the health check configuration of the container.
	HealthCheckConfig *ContainerHealthCheckConfig `pulumi:"healthCheckConfig"`
}

// ContainerPublicEndpointInput is an input type that accepts ContainerPublicEndpointArgs and ContainerPublicEndpointOutput values.
// You can construct a concrete instance of `ContainerPublicEndpointInput` via:
//
//	ContainerPublicEndpointArgs{...}
type ContainerPublicEndpointInput interface {
	pulumi.Input

	ToContainerPublicEndpointOutput() ContainerPublicEndpointOutput
	ToContainerPublicEndpointOutputWithContext(context.Context) ContainerPublicEndpointOutput
}

// Describes the settings of a public endpoint for an Amazon Lightsail container service.
type ContainerPublicEndpointArgs struct {
	// The name of the container for the endpoint.
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// The port of the container to which traffic is forwarded to.
	ContainerPort pulumi.IntPtrInput `pulumi:"containerPort"`
	// An object that describes the health check configuration of the container.
	HealthCheckConfig ContainerHealthCheckConfigPtrInput `pulumi:"healthCheckConfig"`
}

func (ContainerPublicEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPublicEndpoint)(nil)).Elem()
}

func (i ContainerPublicEndpointArgs) ToContainerPublicEndpointOutput() ContainerPublicEndpointOutput {
	return i.ToContainerPublicEndpointOutputWithContext(context.Background())
}

func (i ContainerPublicEndpointArgs) ToContainerPublicEndpointOutputWithContext(ctx context.Context) ContainerPublicEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPublicEndpointOutput)
}

func (i ContainerPublicEndpointArgs) ToContainerPublicEndpointPtrOutput() ContainerPublicEndpointPtrOutput {
	return i.ToContainerPublicEndpointPtrOutputWithContext(context.Background())
}

func (i ContainerPublicEndpointArgs) ToContainerPublicEndpointPtrOutputWithContext(ctx context.Context) ContainerPublicEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPublicEndpointOutput).ToContainerPublicEndpointPtrOutputWithContext(ctx)
}

// ContainerPublicEndpointPtrInput is an input type that accepts ContainerPublicEndpointArgs, ContainerPublicEndpointPtr and ContainerPublicEndpointPtrOutput values.
// You can construct a concrete instance of `ContainerPublicEndpointPtrInput` via:
//
//	        ContainerPublicEndpointArgs{...}
//
//	or:
//
//	        nil
type ContainerPublicEndpointPtrInput interface {
	pulumi.Input

	ToContainerPublicEndpointPtrOutput() ContainerPublicEndpointPtrOutput
	ToContainerPublicEndpointPtrOutputWithContext(context.Context) ContainerPublicEndpointPtrOutput
}

type containerPublicEndpointPtrType ContainerPublicEndpointArgs

func ContainerPublicEndpointPtr(v *ContainerPublicEndpointArgs) ContainerPublicEndpointPtrInput {
	return (*containerPublicEndpointPtrType)(v)
}

func (*containerPublicEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPublicEndpoint)(nil)).Elem()
}

func (i *containerPublicEndpointPtrType) ToContainerPublicEndpointPtrOutput() ContainerPublicEndpointPtrOutput {
	return i.ToContainerPublicEndpointPtrOutputWithContext(context.Background())
}

func (i *containerPublicEndpointPtrType) ToContainerPublicEndpointPtrOutputWithContext(ctx context.Context) ContainerPublicEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerPublicEndpointPtrOutput)
}

// Describes the settings of a public endpoint for an Amazon Lightsail container service.
type ContainerPublicEndpointOutput struct{ *pulumi.OutputState }

func (ContainerPublicEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerPublicEndpoint)(nil)).Elem()
}

func (o ContainerPublicEndpointOutput) ToContainerPublicEndpointOutput() ContainerPublicEndpointOutput {
	return o
}

func (o ContainerPublicEndpointOutput) ToContainerPublicEndpointOutputWithContext(ctx context.Context) ContainerPublicEndpointOutput {
	return o
}

func (o ContainerPublicEndpointOutput) ToContainerPublicEndpointPtrOutput() ContainerPublicEndpointPtrOutput {
	return o.ToContainerPublicEndpointPtrOutputWithContext(context.Background())
}

func (o ContainerPublicEndpointOutput) ToContainerPublicEndpointPtrOutputWithContext(ctx context.Context) ContainerPublicEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerPublicEndpoint) *ContainerPublicEndpoint {
		return &v
	}).(ContainerPublicEndpointPtrOutput)
}

// The name of the container for the endpoint.
func (o ContainerPublicEndpointOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerPublicEndpoint) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// The port of the container to which traffic is forwarded to.
func (o ContainerPublicEndpointOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerPublicEndpoint) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

// An object that describes the health check configuration of the container.
func (o ContainerPublicEndpointOutput) HealthCheckConfig() ContainerHealthCheckConfigPtrOutput {
	return o.ApplyT(func(v ContainerPublicEndpoint) *ContainerHealthCheckConfig { return v.HealthCheckConfig }).(ContainerHealthCheckConfigPtrOutput)
}

type ContainerPublicEndpointPtrOutput struct{ *pulumi.OutputState }

func (ContainerPublicEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerPublicEndpoint)(nil)).Elem()
}

func (o ContainerPublicEndpointPtrOutput) ToContainerPublicEndpointPtrOutput() ContainerPublicEndpointPtrOutput {
	return o
}

func (o ContainerPublicEndpointPtrOutput) ToContainerPublicEndpointPtrOutputWithContext(ctx context.Context) ContainerPublicEndpointPtrOutput {
	return o
}

func (o ContainerPublicEndpointPtrOutput) Elem() ContainerPublicEndpointOutput {
	return o.ApplyT(func(v *ContainerPublicEndpoint) ContainerPublicEndpoint {
		if v != nil {
			return *v
		}
		var ret ContainerPublicEndpoint
		return ret
	}).(ContainerPublicEndpointOutput)
}

// The name of the container for the endpoint.
func (o ContainerPublicEndpointPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerPublicEndpoint) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// The port of the container to which traffic is forwarded to.
func (o ContainerPublicEndpointPtrOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerPublicEndpoint) *int {
		if v == nil {
			return nil
		}
		return v.ContainerPort
	}).(pulumi.IntPtrOutput)
}

// An object that describes the health check configuration of the container.
func (o ContainerPublicEndpointPtrOutput) HealthCheckConfig() ContainerHealthCheckConfigPtrOutput {
	return o.ApplyT(func(v *ContainerPublicEndpoint) *ContainerHealthCheckConfig {
		if v == nil {
			return nil
		}
		return v.HealthCheckConfig
	}).(ContainerHealthCheckConfigPtrOutput)
}

// Describes a container deployment configuration of an Amazon Lightsail container service.
type ContainerServiceDeployment struct {
	// An object that describes the configuration for the containers of the deployment.
	Containers []ContainerType `pulumi:"containers"`
	// An object that describes the endpoint of the deployment.
	PublicEndpoint *ContainerPublicEndpoint `pulumi:"publicEndpoint"`
}

// ContainerServiceDeploymentInput is an input type that accepts ContainerServiceDeploymentArgs and ContainerServiceDeploymentOutput values.
// You can construct a concrete instance of `ContainerServiceDeploymentInput` via:
//
//	ContainerServiceDeploymentArgs{...}
type ContainerServiceDeploymentInput interface {
	pulumi.Input

	ToContainerServiceDeploymentOutput() ContainerServiceDeploymentOutput
	ToContainerServiceDeploymentOutputWithContext(context.Context) ContainerServiceDeploymentOutput
}

// Describes a container deployment configuration of an Amazon Lightsail container service.
type ContainerServiceDeploymentArgs struct {
	// An object that describes the configuration for the containers of the deployment.
	Containers ContainerTypeArrayInput `pulumi:"containers"`
	// An object that describes the endpoint of the deployment.
	PublicEndpoint ContainerPublicEndpointPtrInput `pulumi:"publicEndpoint"`
}

func (ContainerServiceDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceDeployment)(nil)).Elem()
}

func (i ContainerServiceDeploymentArgs) ToContainerServiceDeploymentOutput() ContainerServiceDeploymentOutput {
	return i.ToContainerServiceDeploymentOutputWithContext(context.Background())
}

func (i ContainerServiceDeploymentArgs) ToContainerServiceDeploymentOutputWithContext(ctx context.Context) ContainerServiceDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentOutput)
}

func (i ContainerServiceDeploymentArgs) ToContainerServiceDeploymentPtrOutput() ContainerServiceDeploymentPtrOutput {
	return i.ToContainerServiceDeploymentPtrOutputWithContext(context.Background())
}

func (i ContainerServiceDeploymentArgs) ToContainerServiceDeploymentPtrOutputWithContext(ctx context.Context) ContainerServiceDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentOutput).ToContainerServiceDeploymentPtrOutputWithContext(ctx)
}

// ContainerServiceDeploymentPtrInput is an input type that accepts ContainerServiceDeploymentArgs, ContainerServiceDeploymentPtr and ContainerServiceDeploymentPtrOutput values.
// You can construct a concrete instance of `ContainerServiceDeploymentPtrInput` via:
//
//	        ContainerServiceDeploymentArgs{...}
//
//	or:
//
//	        nil
type ContainerServiceDeploymentPtrInput interface {
	pulumi.Input

	ToContainerServiceDeploymentPtrOutput() ContainerServiceDeploymentPtrOutput
	ToContainerServiceDeploymentPtrOutputWithContext(context.Context) ContainerServiceDeploymentPtrOutput
}

type containerServiceDeploymentPtrType ContainerServiceDeploymentArgs

func ContainerServiceDeploymentPtr(v *ContainerServiceDeploymentArgs) ContainerServiceDeploymentPtrInput {
	return (*containerServiceDeploymentPtrType)(v)
}

func (*containerServiceDeploymentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceDeployment)(nil)).Elem()
}

func (i *containerServiceDeploymentPtrType) ToContainerServiceDeploymentPtrOutput() ContainerServiceDeploymentPtrOutput {
	return i.ToContainerServiceDeploymentPtrOutputWithContext(context.Background())
}

func (i *containerServiceDeploymentPtrType) ToContainerServiceDeploymentPtrOutputWithContext(ctx context.Context) ContainerServiceDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentPtrOutput)
}

// Describes a container deployment configuration of an Amazon Lightsail container service.
type ContainerServiceDeploymentOutput struct{ *pulumi.OutputState }

func (ContainerServiceDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceDeployment)(nil)).Elem()
}

func (o ContainerServiceDeploymentOutput) ToContainerServiceDeploymentOutput() ContainerServiceDeploymentOutput {
	return o
}

func (o ContainerServiceDeploymentOutput) ToContainerServiceDeploymentOutputWithContext(ctx context.Context) ContainerServiceDeploymentOutput {
	return o
}

func (o ContainerServiceDeploymentOutput) ToContainerServiceDeploymentPtrOutput() ContainerServiceDeploymentPtrOutput {
	return o.ToContainerServiceDeploymentPtrOutputWithContext(context.Background())
}

func (o ContainerServiceDeploymentOutput) ToContainerServiceDeploymentPtrOutputWithContext(ctx context.Context) ContainerServiceDeploymentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerServiceDeployment) *ContainerServiceDeployment {
		return &v
	}).(ContainerServiceDeploymentPtrOutput)
}

// An object that describes the configuration for the containers of the deployment.
func (o ContainerServiceDeploymentOutput) Containers() ContainerTypeArrayOutput {
	return o.ApplyT(func(v ContainerServiceDeployment) []ContainerType { return v.Containers }).(ContainerTypeArrayOutput)
}

// An object that describes the endpoint of the deployment.
func (o ContainerServiceDeploymentOutput) PublicEndpoint() ContainerPublicEndpointPtrOutput {
	return o.ApplyT(func(v ContainerServiceDeployment) *ContainerPublicEndpoint { return v.PublicEndpoint }).(ContainerPublicEndpointPtrOutput)
}

type ContainerServiceDeploymentPtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceDeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceDeployment)(nil)).Elem()
}

func (o ContainerServiceDeploymentPtrOutput) ToContainerServiceDeploymentPtrOutput() ContainerServiceDeploymentPtrOutput {
	return o
}

func (o ContainerServiceDeploymentPtrOutput) ToContainerServiceDeploymentPtrOutputWithContext(ctx context.Context) ContainerServiceDeploymentPtrOutput {
	return o
}

func (o ContainerServiceDeploymentPtrOutput) Elem() ContainerServiceDeploymentOutput {
	return o.ApplyT(func(v *ContainerServiceDeployment) ContainerServiceDeployment {
		if v != nil {
			return *v
		}
		var ret ContainerServiceDeployment
		return ret
	}).(ContainerServiceDeploymentOutput)
}

// An object that describes the configuration for the containers of the deployment.
func (o ContainerServiceDeploymentPtrOutput) Containers() ContainerTypeArrayOutput {
	return o.ApplyT(func(v *ContainerServiceDeployment) []ContainerType {
		if v == nil {
			return nil
		}
		return v.Containers
	}).(ContainerTypeArrayOutput)
}

// An object that describes the endpoint of the deployment.
func (o ContainerServiceDeploymentPtrOutput) PublicEndpoint() ContainerPublicEndpointPtrOutput {
	return o.ApplyT(func(v *ContainerServiceDeployment) *ContainerPublicEndpoint {
		if v == nil {
			return nil
		}
		return v.PublicEndpoint
	}).(ContainerPublicEndpointPtrOutput)
}

// A key-value pair to associate with a resource.
type ContainerTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// Describes the parameters of the database.
type DatabaseRelationalDatabaseParameter struct {
	// Specifies the valid range of values for the parameter.
	AllowedValues *string `pulumi:"allowedValues"`
	// Indicates when parameter updates are applied. Can be immediate or pending-reboot.
	ApplyMethod *string `pulumi:"applyMethod"`
	// Specifies the engine-specific parameter type.
	ApplyType *string `pulumi:"applyType"`
	// Specifies the valid data type for the parameter.
	DataType *string `pulumi:"dataType"`
	// Provides a description of the parameter.
	Description *string `pulumi:"description"`
	// A Boolean value indicating whether the parameter can be modified.
	IsModifiable *bool `pulumi:"isModifiable"`
	// Specifies the name of the parameter.
	ParameterName *string `pulumi:"parameterName"`
	// Specifies the value of the parameter.
	ParameterValue *string `pulumi:"parameterValue"`
}

// DatabaseRelationalDatabaseParameterInput is an input type that accepts DatabaseRelationalDatabaseParameterArgs and DatabaseRelationalDatabaseParameterOutput values.
// You can construct a concrete instance of `DatabaseRelationalDatabaseParameterInput` via:
//
//	DatabaseRelationalDatabaseParameterArgs{...}
type DatabaseRelationalDatabaseParameterInput interface {
	pulumi.Input

	ToDatabaseRelationalDatabaseParameterOutput() DatabaseRelationalDatabaseParameterOutput
	ToDatabaseRelationalDatabaseParameterOutputWithContext(context.Context) DatabaseRelationalDatabaseParameterOutput
}

// Describes the parameters of the database.
type DatabaseRelationalDatabaseParameterArgs struct {
	// Specifies the valid range of values for the parameter.
	AllowedValues pulumi.StringPtrInput `pulumi:"allowedValues"`
	// Indicates when parameter updates are applied. Can be immediate or pending-reboot.
	ApplyMethod pulumi.StringPtrInput `pulumi:"applyMethod"`
	// Specifies the engine-specific parameter type.
	ApplyType pulumi.StringPtrInput `pulumi:"applyType"`
	// Specifies the valid data type for the parameter.
	DataType pulumi.StringPtrInput `pulumi:"dataType"`
	// Provides a description of the parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A Boolean value indicating whether the parameter can be modified.
	IsModifiable pulumi.BoolPtrInput `pulumi:"isModifiable"`
	// Specifies the name of the parameter.
	ParameterName pulumi.StringPtrInput `pulumi:"parameterName"`
	// Specifies the value of the parameter.
	ParameterValue pulumi.StringPtrInput `pulumi:"parameterValue"`
}

func (DatabaseRelationalDatabaseParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseRelationalDatabaseParameter)(nil)).Elem()
}

func (i DatabaseRelationalDatabaseParameterArgs) ToDatabaseRelationalDatabaseParameterOutput() DatabaseRelationalDatabaseParameterOutput {
	return i.ToDatabaseRelationalDatabaseParameterOutputWithContext(context.Background())
}

func (i DatabaseRelationalDatabaseParameterArgs) ToDatabaseRelationalDatabaseParameterOutputWithContext(ctx context.Context) DatabaseRelationalDatabaseParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseRelationalDatabaseParameterOutput)
}

// DatabaseRelationalDatabaseParameterArrayInput is an input type that accepts DatabaseRelationalDatabaseParameterArray and DatabaseRelationalDatabaseParameterArrayOutput values.
// You can construct a concrete instance of `DatabaseRelationalDatabaseParameterArrayInput` via:
//
//	DatabaseRelationalDatabaseParameterArray{ DatabaseRelationalDatabaseParameterArgs{...} }
type DatabaseRelationalDatabaseParameterArrayInput interface {
	pulumi.Input

	ToDatabaseRelationalDatabaseParameterArrayOutput() DatabaseRelationalDatabaseParameterArrayOutput
	ToDatabaseRelationalDatabaseParameterArrayOutputWithContext(context.Context) DatabaseRelationalDatabaseParameterArrayOutput
}

type DatabaseRelationalDatabaseParameterArray []DatabaseRelationalDatabaseParameterInput

func (DatabaseRelationalDatabaseParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseRelationalDatabaseParameter)(nil)).Elem()
}

func (i DatabaseRelationalDatabaseParameterArray) ToDatabaseRelationalDatabaseParameterArrayOutput() DatabaseRelationalDatabaseParameterArrayOutput {
	return i.ToDatabaseRelationalDatabaseParameterArrayOutputWithContext(context.Background())
}

func (i DatabaseRelationalDatabaseParameterArray) ToDatabaseRelationalDatabaseParameterArrayOutputWithContext(ctx context.Context) DatabaseRelationalDatabaseParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseRelationalDatabaseParameterArrayOutput)
}

// Describes the parameters of the database.
type DatabaseRelationalDatabaseParameterOutput struct{ *pulumi.OutputState }

func (DatabaseRelationalDatabaseParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseRelationalDatabaseParameter)(nil)).Elem()
}

func (o DatabaseRelationalDatabaseParameterOutput) ToDatabaseRelationalDatabaseParameterOutput() DatabaseRelationalDatabaseParameterOutput {
	return o
}

func (o DatabaseRelationalDatabaseParameterOutput) ToDatabaseRelationalDatabaseParameterOutputWithContext(ctx context.Context) DatabaseRelationalDatabaseParameterOutput {
	return o
}

// Specifies the valid range of values for the parameter.
func (o DatabaseRelationalDatabaseParameterOutput) AllowedValues() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseRelationalDatabaseParameter) *string { return v.AllowedValues }).(pulumi.StringPtrOutput)
}

// Indicates when parameter updates are applied. Can be immediate or pending-reboot.
func (o DatabaseRelationalDatabaseParameterOutput) ApplyMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseRelationalDatabaseParameter) *string { return v.ApplyMethod }).(pulumi.StringPtrOutput)
}

// Specifies the engine-specific parameter type.
func (o DatabaseRelationalDatabaseParameterOutput) ApplyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseRelationalDatabaseParameter) *string { return v.ApplyType }).(pulumi.StringPtrOutput)
}

// Specifies the valid data type for the parameter.
func (o DatabaseRelationalDatabaseParameterOutput) DataType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseRelationalDatabaseParameter) *string { return v.DataType }).(pulumi.StringPtrOutput)
}

// Provides a description of the parameter.
func (o DatabaseRelationalDatabaseParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseRelationalDatabaseParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A Boolean value indicating whether the parameter can be modified.
func (o DatabaseRelationalDatabaseParameterOutput) IsModifiable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DatabaseRelationalDatabaseParameter) *bool { return v.IsModifiable }).(pulumi.BoolPtrOutput)
}

// Specifies the name of the parameter.
func (o DatabaseRelationalDatabaseParameterOutput) ParameterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseRelationalDatabaseParameter) *string { return v.ParameterName }).(pulumi.StringPtrOutput)
}

// Specifies the value of the parameter.
func (o DatabaseRelationalDatabaseParameterOutput) ParameterValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseRelationalDatabaseParameter) *string { return v.ParameterValue }).(pulumi.StringPtrOutput)
}

type DatabaseRelationalDatabaseParameterArrayOutput struct{ *pulumi.OutputState }

func (DatabaseRelationalDatabaseParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseRelationalDatabaseParameter)(nil)).Elem()
}

func (o DatabaseRelationalDatabaseParameterArrayOutput) ToDatabaseRelationalDatabaseParameterArrayOutput() DatabaseRelationalDatabaseParameterArrayOutput {
	return o
}

func (o DatabaseRelationalDatabaseParameterArrayOutput) ToDatabaseRelationalDatabaseParameterArrayOutputWithContext(ctx context.Context) DatabaseRelationalDatabaseParameterArrayOutput {
	return o
}

func (o DatabaseRelationalDatabaseParameterArrayOutput) Index(i pulumi.IntInput) DatabaseRelationalDatabaseParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseRelationalDatabaseParameter {
		return vs[0].([]DatabaseRelationalDatabaseParameter)[vs[1].(int)]
	}).(DatabaseRelationalDatabaseParameterOutput)
}

// A key-value pair to associate with a resource.
type DatabaseTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// A addon associate with a resource.
type DiskAddOn struct {
	// The add-on type
	AddOnType                string                 `pulumi:"addOnType"`
	AutoSnapshotAddOnRequest *DiskAutoSnapshotAddOn `pulumi:"autoSnapshotAddOnRequest"`
	// Status of the Addon
	Status *DiskAddOnStatus `pulumi:"status"`
}

// DiskAddOnInput is an input type that accepts DiskAddOnArgs and DiskAddOnOutput values.
// You can construct a concrete instance of `DiskAddOnInput` via:
//
//	DiskAddOnArgs{...}
type DiskAddOnInput interface {
	pulumi.Input

	ToDiskAddOnOutput() DiskAddOnOutput
	ToDiskAddOnOutputWithContext(context.Context) DiskAddOnOutput
}

// A addon associate with a resource.
type DiskAddOnArgs struct {
	// The add-on type
	AddOnType                pulumi.StringInput            `pulumi:"addOnType"`
	AutoSnapshotAddOnRequest DiskAutoSnapshotAddOnPtrInput `pulumi:"autoSnapshotAddOnRequest"`
	// Status of the Addon
	Status DiskAddOnStatusPtrInput `pulumi:"status"`
}

func (DiskAddOnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskAddOn)(nil)).Elem()
}

func (i DiskAddOnArgs) ToDiskAddOnOutput() DiskAddOnOutput {
	return i.ToDiskAddOnOutputWithContext(context.Background())
}

func (i DiskAddOnArgs) ToDiskAddOnOutputWithContext(ctx context.Context) DiskAddOnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskAddOnOutput)
}

// DiskAddOnArrayInput is an input type that accepts DiskAddOnArray and DiskAddOnArrayOutput values.
// You can construct a concrete instance of `DiskAddOnArrayInput` via:
//
//	DiskAddOnArray{ DiskAddOnArgs{...} }
type DiskAddOnArrayInput interface {
	pulumi.Input

	ToDiskAddOnArrayOutput() DiskAddOnArrayOutput
	ToDiskAddOnArrayOutputWithContext(context.Context) DiskAddOnArrayOutput
}

type DiskAddOnArray []DiskAddOnInput

func (DiskAddOnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskAddOn)(nil)).Elem()
}

func (i DiskAddOnArray) ToDiskAddOnArrayOutput() DiskAddOnArrayOutput {
	return i.ToDiskAddOnArrayOutputWithContext(context.Background())
}

func (i DiskAddOnArray) ToDiskAddOnArrayOutputWithContext(ctx context.Context) DiskAddOnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskAddOnArrayOutput)
}

// A addon associate with a resource.
type DiskAddOnOutput struct{ *pulumi.OutputState }

func (DiskAddOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskAddOn)(nil)).Elem()
}

func (o DiskAddOnOutput) ToDiskAddOnOutput() DiskAddOnOutput {
	return o
}

func (o DiskAddOnOutput) ToDiskAddOnOutputWithContext(ctx context.Context) DiskAddOnOutput {
	return o
}

// The add-on type
func (o DiskAddOnOutput) AddOnType() pulumi.StringOutput {
	return o.ApplyT(func(v DiskAddOn) string { return v.AddOnType }).(pulumi.StringOutput)
}

func (o DiskAddOnOutput) AutoSnapshotAddOnRequest() DiskAutoSnapshotAddOnPtrOutput {
	return o.ApplyT(func(v DiskAddOn) *DiskAutoSnapshotAddOn { return v.AutoSnapshotAddOnRequest }).(DiskAutoSnapshotAddOnPtrOutput)
}

// Status of the Addon
func (o DiskAddOnOutput) Status() DiskAddOnStatusPtrOutput {
	return o.ApplyT(func(v DiskAddOn) *DiskAddOnStatus { return v.Status }).(DiskAddOnStatusPtrOutput)
}

type DiskAddOnArrayOutput struct{ *pulumi.OutputState }

func (DiskAddOnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DiskAddOn)(nil)).Elem()
}

func (o DiskAddOnArrayOutput) ToDiskAddOnArrayOutput() DiskAddOnArrayOutput {
	return o
}

func (o DiskAddOnArrayOutput) ToDiskAddOnArrayOutputWithContext(ctx context.Context) DiskAddOnArrayOutput {
	return o
}

func (o DiskAddOnArrayOutput) Index(i pulumi.IntInput) DiskAddOnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DiskAddOn {
		return vs[0].([]DiskAddOn)[vs[1].(int)]
	}).(DiskAddOnOutput)
}

// An object that represents additional parameters when enabling or modifying the automatic snapshot add-on
type DiskAutoSnapshotAddOn struct {
	// The daily time when an automatic snapshot will be created.
	SnapshotTimeOfDay *string `pulumi:"snapshotTimeOfDay"`
}

// DiskAutoSnapshotAddOnInput is an input type that accepts DiskAutoSnapshotAddOnArgs and DiskAutoSnapshotAddOnOutput values.
// You can construct a concrete instance of `DiskAutoSnapshotAddOnInput` via:
//
//	DiskAutoSnapshotAddOnArgs{...}
type DiskAutoSnapshotAddOnInput interface {
	pulumi.Input

	ToDiskAutoSnapshotAddOnOutput() DiskAutoSnapshotAddOnOutput
	ToDiskAutoSnapshotAddOnOutputWithContext(context.Context) DiskAutoSnapshotAddOnOutput
}

// An object that represents additional parameters when enabling or modifying the automatic snapshot add-on
type DiskAutoSnapshotAddOnArgs struct {
	// The daily time when an automatic snapshot will be created.
	SnapshotTimeOfDay pulumi.StringPtrInput `pulumi:"snapshotTimeOfDay"`
}

func (DiskAutoSnapshotAddOnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskAutoSnapshotAddOn)(nil)).Elem()
}

func (i DiskAutoSnapshotAddOnArgs) ToDiskAutoSnapshotAddOnOutput() DiskAutoSnapshotAddOnOutput {
	return i.ToDiskAutoSnapshotAddOnOutputWithContext(context.Background())
}

func (i DiskAutoSnapshotAddOnArgs) ToDiskAutoSnapshotAddOnOutputWithContext(ctx context.Context) DiskAutoSnapshotAddOnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskAutoSnapshotAddOnOutput)
}

func (i DiskAutoSnapshotAddOnArgs) ToDiskAutoSnapshotAddOnPtrOutput() DiskAutoSnapshotAddOnPtrOutput {
	return i.ToDiskAutoSnapshotAddOnPtrOutputWithContext(context.Background())
}

func (i DiskAutoSnapshotAddOnArgs) ToDiskAutoSnapshotAddOnPtrOutputWithContext(ctx context.Context) DiskAutoSnapshotAddOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskAutoSnapshotAddOnOutput).ToDiskAutoSnapshotAddOnPtrOutputWithContext(ctx)
}

// DiskAutoSnapshotAddOnPtrInput is an input type that accepts DiskAutoSnapshotAddOnArgs, DiskAutoSnapshotAddOnPtr and DiskAutoSnapshotAddOnPtrOutput values.
// You can construct a concrete instance of `DiskAutoSnapshotAddOnPtrInput` via:
//
//	        DiskAutoSnapshotAddOnArgs{...}
//
//	or:
//
//	        nil
type DiskAutoSnapshotAddOnPtrInput interface {
	pulumi.Input

	ToDiskAutoSnapshotAddOnPtrOutput() DiskAutoSnapshotAddOnPtrOutput
	ToDiskAutoSnapshotAddOnPtrOutputWithContext(context.Context) DiskAutoSnapshotAddOnPtrOutput
}

type diskAutoSnapshotAddOnPtrType DiskAutoSnapshotAddOnArgs

func DiskAutoSnapshotAddOnPtr(v *DiskAutoSnapshotAddOnArgs) DiskAutoSnapshotAddOnPtrInput {
	return (*diskAutoSnapshotAddOnPtrType)(v)
}

func (*diskAutoSnapshotAddOnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskAutoSnapshotAddOn)(nil)).Elem()
}

func (i *diskAutoSnapshotAddOnPtrType) ToDiskAutoSnapshotAddOnPtrOutput() DiskAutoSnapshotAddOnPtrOutput {
	return i.ToDiskAutoSnapshotAddOnPtrOutputWithContext(context.Background())
}

func (i *diskAutoSnapshotAddOnPtrType) ToDiskAutoSnapshotAddOnPtrOutputWithContext(ctx context.Context) DiskAutoSnapshotAddOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskAutoSnapshotAddOnPtrOutput)
}

// An object that represents additional parameters when enabling or modifying the automatic snapshot add-on
type DiskAutoSnapshotAddOnOutput struct{ *pulumi.OutputState }

func (DiskAutoSnapshotAddOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskAutoSnapshotAddOn)(nil)).Elem()
}

func (o DiskAutoSnapshotAddOnOutput) ToDiskAutoSnapshotAddOnOutput() DiskAutoSnapshotAddOnOutput {
	return o
}

func (o DiskAutoSnapshotAddOnOutput) ToDiskAutoSnapshotAddOnOutputWithContext(ctx context.Context) DiskAutoSnapshotAddOnOutput {
	return o
}

func (o DiskAutoSnapshotAddOnOutput) ToDiskAutoSnapshotAddOnPtrOutput() DiskAutoSnapshotAddOnPtrOutput {
	return o.ToDiskAutoSnapshotAddOnPtrOutputWithContext(context.Background())
}

func (o DiskAutoSnapshotAddOnOutput) ToDiskAutoSnapshotAddOnPtrOutputWithContext(ctx context.Context) DiskAutoSnapshotAddOnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskAutoSnapshotAddOn) *DiskAutoSnapshotAddOn {
		return &v
	}).(DiskAutoSnapshotAddOnPtrOutput)
}

// The daily time when an automatic snapshot will be created.
func (o DiskAutoSnapshotAddOnOutput) SnapshotTimeOfDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskAutoSnapshotAddOn) *string { return v.SnapshotTimeOfDay }).(pulumi.StringPtrOutput)
}

type DiskAutoSnapshotAddOnPtrOutput struct{ *pulumi.OutputState }

func (DiskAutoSnapshotAddOnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskAutoSnapshotAddOn)(nil)).Elem()
}

func (o DiskAutoSnapshotAddOnPtrOutput) ToDiskAutoSnapshotAddOnPtrOutput() DiskAutoSnapshotAddOnPtrOutput {
	return o
}

func (o DiskAutoSnapshotAddOnPtrOutput) ToDiskAutoSnapshotAddOnPtrOutputWithContext(ctx context.Context) DiskAutoSnapshotAddOnPtrOutput {
	return o
}

func (o DiskAutoSnapshotAddOnPtrOutput) Elem() DiskAutoSnapshotAddOnOutput {
	return o.ApplyT(func(v *DiskAutoSnapshotAddOn) DiskAutoSnapshotAddOn {
		if v != nil {
			return *v
		}
		var ret DiskAutoSnapshotAddOn
		return ret
	}).(DiskAutoSnapshotAddOnOutput)
}

// The daily time when an automatic snapshot will be created.
func (o DiskAutoSnapshotAddOnPtrOutput) SnapshotTimeOfDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskAutoSnapshotAddOn) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotTimeOfDay
	}).(pulumi.StringPtrOutput)
}

// Location of a resource.
type DiskLocation struct {
	// The Availability Zone in which to create your disk. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The Region Name in which to create your disk.
	RegionName *string `pulumi:"regionName"`
}

// DiskLocationInput is an input type that accepts DiskLocationArgs and DiskLocationOutput values.
// You can construct a concrete instance of `DiskLocationInput` via:
//
//	DiskLocationArgs{...}
type DiskLocationInput interface {
	pulumi.Input

	ToDiskLocationOutput() DiskLocationOutput
	ToDiskLocationOutputWithContext(context.Context) DiskLocationOutput
}

// Location of a resource.
type DiskLocationArgs struct {
	// The Availability Zone in which to create your disk. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The Region Name in which to create your disk.
	RegionName pulumi.StringPtrInput `pulumi:"regionName"`
}

func (DiskLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskLocation)(nil)).Elem()
}

func (i DiskLocationArgs) ToDiskLocationOutput() DiskLocationOutput {
	return i.ToDiskLocationOutputWithContext(context.Background())
}

func (i DiskLocationArgs) ToDiskLocationOutputWithContext(ctx context.Context) DiskLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskLocationOutput)
}

func (i DiskLocationArgs) ToDiskLocationPtrOutput() DiskLocationPtrOutput {
	return i.ToDiskLocationPtrOutputWithContext(context.Background())
}

func (i DiskLocationArgs) ToDiskLocationPtrOutputWithContext(ctx context.Context) DiskLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskLocationOutput).ToDiskLocationPtrOutputWithContext(ctx)
}

// DiskLocationPtrInput is an input type that accepts DiskLocationArgs, DiskLocationPtr and DiskLocationPtrOutput values.
// You can construct a concrete instance of `DiskLocationPtrInput` via:
//
//	        DiskLocationArgs{...}
//
//	or:
//
//	        nil
type DiskLocationPtrInput interface {
	pulumi.Input

	ToDiskLocationPtrOutput() DiskLocationPtrOutput
	ToDiskLocationPtrOutputWithContext(context.Context) DiskLocationPtrOutput
}

type diskLocationPtrType DiskLocationArgs

func DiskLocationPtr(v *DiskLocationArgs) DiskLocationPtrInput {
	return (*diskLocationPtrType)(v)
}

func (*diskLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskLocation)(nil)).Elem()
}

func (i *diskLocationPtrType) ToDiskLocationPtrOutput() DiskLocationPtrOutput {
	return i.ToDiskLocationPtrOutputWithContext(context.Background())
}

func (i *diskLocationPtrType) ToDiskLocationPtrOutputWithContext(ctx context.Context) DiskLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskLocationPtrOutput)
}

// Location of a resource.
type DiskLocationOutput struct{ *pulumi.OutputState }

func (DiskLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DiskLocation)(nil)).Elem()
}

func (o DiskLocationOutput) ToDiskLocationOutput() DiskLocationOutput {
	return o
}

func (o DiskLocationOutput) ToDiskLocationOutputWithContext(ctx context.Context) DiskLocationOutput {
	return o
}

func (o DiskLocationOutput) ToDiskLocationPtrOutput() DiskLocationPtrOutput {
	return o.ToDiskLocationPtrOutputWithContext(context.Background())
}

func (o DiskLocationOutput) ToDiskLocationPtrOutputWithContext(ctx context.Context) DiskLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DiskLocation) *DiskLocation {
		return &v
	}).(DiskLocationPtrOutput)
}

// The Availability Zone in which to create your disk. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.
func (o DiskLocationOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskLocation) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The Region Name in which to create your disk.
func (o DiskLocationOutput) RegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DiskLocation) *string { return v.RegionName }).(pulumi.StringPtrOutput)
}

type DiskLocationPtrOutput struct{ *pulumi.OutputState }

func (DiskLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskLocation)(nil)).Elem()
}

func (o DiskLocationPtrOutput) ToDiskLocationPtrOutput() DiskLocationPtrOutput {
	return o
}

func (o DiskLocationPtrOutput) ToDiskLocationPtrOutputWithContext(ctx context.Context) DiskLocationPtrOutput {
	return o
}

func (o DiskLocationPtrOutput) Elem() DiskLocationOutput {
	return o.ApplyT(func(v *DiskLocation) DiskLocation {
		if v != nil {
			return *v
		}
		var ret DiskLocation
		return ret
	}).(DiskLocationOutput)
}

// The Availability Zone in which to create your disk. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.
func (o DiskLocationPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskLocation) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The Region Name in which to create your disk.
func (o DiskLocationPtrOutput) RegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiskLocation) *string {
		if v == nil {
			return nil
		}
		return v.RegionName
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type DiskTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// Describes the default cache behavior of an Amazon Lightsail content delivery network (CDN) distribution.
type DistributionCacheBehavior struct {
	// The cache behavior of the distribution.
	Behavior *string `pulumi:"behavior"`
}

// DistributionCacheBehaviorInput is an input type that accepts DistributionCacheBehaviorArgs and DistributionCacheBehaviorOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorInput` via:
//
//	DistributionCacheBehaviorArgs{...}
type DistributionCacheBehaviorInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorOutput() DistributionCacheBehaviorOutput
	ToDistributionCacheBehaviorOutputWithContext(context.Context) DistributionCacheBehaviorOutput
}

// Describes the default cache behavior of an Amazon Lightsail content delivery network (CDN) distribution.
type DistributionCacheBehaviorArgs struct {
	// The cache behavior of the distribution.
	Behavior pulumi.StringPtrInput `pulumi:"behavior"`
}

func (DistributionCacheBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehavior)(nil)).Elem()
}

func (i DistributionCacheBehaviorArgs) ToDistributionCacheBehaviorOutput() DistributionCacheBehaviorOutput {
	return i.ToDistributionCacheBehaviorOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorArgs) ToDistributionCacheBehaviorOutputWithContext(ctx context.Context) DistributionCacheBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorOutput)
}

// Describes the default cache behavior of an Amazon Lightsail content delivery network (CDN) distribution.
type DistributionCacheBehaviorOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehavior)(nil)).Elem()
}

func (o DistributionCacheBehaviorOutput) ToDistributionCacheBehaviorOutput() DistributionCacheBehaviorOutput {
	return o
}

func (o DistributionCacheBehaviorOutput) ToDistributionCacheBehaviorOutputWithContext(ctx context.Context) DistributionCacheBehaviorOutput {
	return o
}

// The cache behavior of the distribution.
func (o DistributionCacheBehaviorOutput) Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) *string { return v.Behavior }).(pulumi.StringPtrOutput)
}

type DistributionCacheBehaviorPtrOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCacheBehavior)(nil)).Elem()
}

func (o DistributionCacheBehaviorPtrOutput) ToDistributionCacheBehaviorPtrOutput() DistributionCacheBehaviorPtrOutput {
	return o
}

func (o DistributionCacheBehaviorPtrOutput) ToDistributionCacheBehaviorPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorPtrOutput {
	return o
}

func (o DistributionCacheBehaviorPtrOutput) Elem() DistributionCacheBehaviorOutput {
	return o.ApplyT(func(v *DistributionCacheBehavior) DistributionCacheBehavior {
		if v != nil {
			return *v
		}
		var ret DistributionCacheBehavior
		return ret
	}).(DistributionCacheBehaviorOutput)
}

// The cache behavior of the distribution.
func (o DistributionCacheBehaviorPtrOutput) Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionCacheBehavior) *string {
		if v == nil {
			return nil
		}
		return v.Behavior
	}).(pulumi.StringPtrOutput)
}

// Describes the per-path cache behavior of an Amazon Lightsail content delivery network (CDN) distribution.
type DistributionCacheBehaviorPerPath struct {
	// The cache behavior for the specified path.
	Behavior *string `pulumi:"behavior"`
	// The path to a directory or file to cached, or not cache. Use an asterisk symbol to specify wildcard directories (path/to/assets/*), and file types (*.html, *jpg, *js). Directories and file paths are case-sensitive.
	Path *string `pulumi:"path"`
}

// DistributionCacheBehaviorPerPathInput is an input type that accepts DistributionCacheBehaviorPerPathArgs and DistributionCacheBehaviorPerPathOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorPerPathInput` via:
//
//	DistributionCacheBehaviorPerPathArgs{...}
type DistributionCacheBehaviorPerPathInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorPerPathOutput() DistributionCacheBehaviorPerPathOutput
	ToDistributionCacheBehaviorPerPathOutputWithContext(context.Context) DistributionCacheBehaviorPerPathOutput
}

// Describes the per-path cache behavior of an Amazon Lightsail content delivery network (CDN) distribution.
type DistributionCacheBehaviorPerPathArgs struct {
	// The cache behavior for the specified path.
	Behavior pulumi.StringPtrInput `pulumi:"behavior"`
	// The path to a directory or file to cached, or not cache. Use an asterisk symbol to specify wildcard directories (path/to/assets/*), and file types (*.html, *jpg, *js). Directories and file paths are case-sensitive.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (DistributionCacheBehaviorPerPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehaviorPerPath)(nil)).Elem()
}

func (i DistributionCacheBehaviorPerPathArgs) ToDistributionCacheBehaviorPerPathOutput() DistributionCacheBehaviorPerPathOutput {
	return i.ToDistributionCacheBehaviorPerPathOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorPerPathArgs) ToDistributionCacheBehaviorPerPathOutputWithContext(ctx context.Context) DistributionCacheBehaviorPerPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorPerPathOutput)
}

// DistributionCacheBehaviorPerPathArrayInput is an input type that accepts DistributionCacheBehaviorPerPathArray and DistributionCacheBehaviorPerPathArrayOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorPerPathArrayInput` via:
//
//	DistributionCacheBehaviorPerPathArray{ DistributionCacheBehaviorPerPathArgs{...} }
type DistributionCacheBehaviorPerPathArrayInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorPerPathArrayOutput() DistributionCacheBehaviorPerPathArrayOutput
	ToDistributionCacheBehaviorPerPathArrayOutputWithContext(context.Context) DistributionCacheBehaviorPerPathArrayOutput
}

type DistributionCacheBehaviorPerPathArray []DistributionCacheBehaviorPerPathInput

func (DistributionCacheBehaviorPerPathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionCacheBehaviorPerPath)(nil)).Elem()
}

func (i DistributionCacheBehaviorPerPathArray) ToDistributionCacheBehaviorPerPathArrayOutput() DistributionCacheBehaviorPerPathArrayOutput {
	return i.ToDistributionCacheBehaviorPerPathArrayOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorPerPathArray) ToDistributionCacheBehaviorPerPathArrayOutputWithContext(ctx context.Context) DistributionCacheBehaviorPerPathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorPerPathArrayOutput)
}

// Describes the per-path cache behavior of an Amazon Lightsail content delivery network (CDN) distribution.
type DistributionCacheBehaviorPerPathOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorPerPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehaviorPerPath)(nil)).Elem()
}

func (o DistributionCacheBehaviorPerPathOutput) ToDistributionCacheBehaviorPerPathOutput() DistributionCacheBehaviorPerPathOutput {
	return o
}

func (o DistributionCacheBehaviorPerPathOutput) ToDistributionCacheBehaviorPerPathOutputWithContext(ctx context.Context) DistributionCacheBehaviorPerPathOutput {
	return o
}

// The cache behavior for the specified path.
func (o DistributionCacheBehaviorPerPathOutput) Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorPerPath) *string { return v.Behavior }).(pulumi.StringPtrOutput)
}

// The path to a directory or file to cached, or not cache. Use an asterisk symbol to specify wildcard directories (path/to/assets/*), and file types (*.html, *jpg, *js). Directories and file paths are case-sensitive.
func (o DistributionCacheBehaviorPerPathOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorPerPath) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type DistributionCacheBehaviorPerPathArrayOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorPerPathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionCacheBehaviorPerPath)(nil)).Elem()
}

func (o DistributionCacheBehaviorPerPathArrayOutput) ToDistributionCacheBehaviorPerPathArrayOutput() DistributionCacheBehaviorPerPathArrayOutput {
	return o
}

func (o DistributionCacheBehaviorPerPathArrayOutput) ToDistributionCacheBehaviorPerPathArrayOutputWithContext(ctx context.Context) DistributionCacheBehaviorPerPathArrayOutput {
	return o
}

func (o DistributionCacheBehaviorPerPathArrayOutput) Index(i pulumi.IntInput) DistributionCacheBehaviorPerPathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionCacheBehaviorPerPath {
		return vs[0].([]DistributionCacheBehaviorPerPath)[vs[1].(int)]
	}).(DistributionCacheBehaviorPerPathOutput)
}

// Describes the cache settings of an Amazon Lightsail content delivery network (CDN) distribution.
type DistributionCacheSettings struct {
	// The HTTP methods that are processed and forwarded to the distribution's origin.
	AllowedHttpMethods *string `pulumi:"allowedHttpMethods"`
	// The HTTP method responses that are cached by your distribution.
	CachedHttpMethods *string `pulumi:"cachedHttpMethods"`
	// The default amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the content has been updated.
	DefaultTtl *int `pulumi:"defaultTtl"`
	// An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded.
	ForwardedCookies *DistributionCookieObject `pulumi:"forwardedCookies"`
	// An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded.
	ForwardedHeaders *DistributionHeaderObject `pulumi:"forwardedHeaders"`
	// An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded.
	ForwardedQueryStrings *DistributionQueryStringObject `pulumi:"forwardedQueryStrings"`
	// The maximum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
	MaximumTtl *int `pulumi:"maximumTtl"`
	// The minimum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
	MinimumTtl *int `pulumi:"minimumTtl"`
}

// DistributionCacheSettingsInput is an input type that accepts DistributionCacheSettingsArgs and DistributionCacheSettingsOutput values.
// You can construct a concrete instance of `DistributionCacheSettingsInput` via:
//
//	DistributionCacheSettingsArgs{...}
type DistributionCacheSettingsInput interface {
	pulumi.Input

	ToDistributionCacheSettingsOutput() DistributionCacheSettingsOutput
	ToDistributionCacheSettingsOutputWithContext(context.Context) DistributionCacheSettingsOutput
}

// Describes the cache settings of an Amazon Lightsail content delivery network (CDN) distribution.
type DistributionCacheSettingsArgs struct {
	// The HTTP methods that are processed and forwarded to the distribution's origin.
	AllowedHttpMethods pulumi.StringPtrInput `pulumi:"allowedHttpMethods"`
	// The HTTP method responses that are cached by your distribution.
	CachedHttpMethods pulumi.StringPtrInput `pulumi:"cachedHttpMethods"`
	// The default amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the content has been updated.
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded.
	ForwardedCookies DistributionCookieObjectPtrInput `pulumi:"forwardedCookies"`
	// An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded.
	ForwardedHeaders DistributionHeaderObjectPtrInput `pulumi:"forwardedHeaders"`
	// An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded.
	ForwardedQueryStrings DistributionQueryStringObjectPtrInput `pulumi:"forwardedQueryStrings"`
	// The maximum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
	MaximumTtl pulumi.IntPtrInput `pulumi:"maximumTtl"`
	// The minimum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
	MinimumTtl pulumi.IntPtrInput `pulumi:"minimumTtl"`
}

func (DistributionCacheSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheSettings)(nil)).Elem()
}

func (i DistributionCacheSettingsArgs) ToDistributionCacheSettingsOutput() DistributionCacheSettingsOutput {
	return i.ToDistributionCacheSettingsOutputWithContext(context.Background())
}

func (i DistributionCacheSettingsArgs) ToDistributionCacheSettingsOutputWithContext(ctx context.Context) DistributionCacheSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheSettingsOutput)
}

func (i DistributionCacheSettingsArgs) ToDistributionCacheSettingsPtrOutput() DistributionCacheSettingsPtrOutput {
	return i.ToDistributionCacheSettingsPtrOutputWithContext(context.Background())
}

func (i DistributionCacheSettingsArgs) ToDistributionCacheSettingsPtrOutputWithContext(ctx context.Context) DistributionCacheSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheSettingsOutput).ToDistributionCacheSettingsPtrOutputWithContext(ctx)
}

// DistributionCacheSettingsPtrInput is an input type that accepts DistributionCacheSettingsArgs, DistributionCacheSettingsPtr and DistributionCacheSettingsPtrOutput values.
// You can construct a concrete instance of `DistributionCacheSettingsPtrInput` via:
//
//	        DistributionCacheSettingsArgs{...}
//
//	or:
//
//	        nil
type DistributionCacheSettingsPtrInput interface {
	pulumi.Input

	ToDistributionCacheSettingsPtrOutput() DistributionCacheSettingsPtrOutput
	ToDistributionCacheSettingsPtrOutputWithContext(context.Context) DistributionCacheSettingsPtrOutput
}

type distributionCacheSettingsPtrType DistributionCacheSettingsArgs

func DistributionCacheSettingsPtr(v *DistributionCacheSettingsArgs) DistributionCacheSettingsPtrInput {
	return (*distributionCacheSettingsPtrType)(v)
}

func (*distributionCacheSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCacheSettings)(nil)).Elem()
}

func (i *distributionCacheSettingsPtrType) ToDistributionCacheSettingsPtrOutput() DistributionCacheSettingsPtrOutput {
	return i.ToDistributionCacheSettingsPtrOutputWithContext(context.Background())
}

func (i *distributionCacheSettingsPtrType) ToDistributionCacheSettingsPtrOutputWithContext(ctx context.Context) DistributionCacheSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheSettingsPtrOutput)
}

// Describes the cache settings of an Amazon Lightsail content delivery network (CDN) distribution.
type DistributionCacheSettingsOutput struct{ *pulumi.OutputState }

func (DistributionCacheSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheSettings)(nil)).Elem()
}

func (o DistributionCacheSettingsOutput) ToDistributionCacheSettingsOutput() DistributionCacheSettingsOutput {
	return o
}

func (o DistributionCacheSettingsOutput) ToDistributionCacheSettingsOutputWithContext(ctx context.Context) DistributionCacheSettingsOutput {
	return o
}

func (o DistributionCacheSettingsOutput) ToDistributionCacheSettingsPtrOutput() DistributionCacheSettingsPtrOutput {
	return o.ToDistributionCacheSettingsPtrOutputWithContext(context.Background())
}

func (o DistributionCacheSettingsOutput) ToDistributionCacheSettingsPtrOutputWithContext(ctx context.Context) DistributionCacheSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionCacheSettings) *DistributionCacheSettings {
		return &v
	}).(DistributionCacheSettingsPtrOutput)
}

// The HTTP methods that are processed and forwarded to the distribution's origin.
func (o DistributionCacheSettingsOutput) AllowedHttpMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheSettings) *string { return v.AllowedHttpMethods }).(pulumi.StringPtrOutput)
}

// The HTTP method responses that are cached by your distribution.
func (o DistributionCacheSettingsOutput) CachedHttpMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheSettings) *string { return v.CachedHttpMethods }).(pulumi.StringPtrOutput)
}

// The default amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the content has been updated.
func (o DistributionCacheSettingsOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionCacheSettings) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded.
func (o DistributionCacheSettingsOutput) ForwardedCookies() DistributionCookieObjectPtrOutput {
	return o.ApplyT(func(v DistributionCacheSettings) *DistributionCookieObject { return v.ForwardedCookies }).(DistributionCookieObjectPtrOutput)
}

// An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded.
func (o DistributionCacheSettingsOutput) ForwardedHeaders() DistributionHeaderObjectPtrOutput {
	return o.ApplyT(func(v DistributionCacheSettings) *DistributionHeaderObject { return v.ForwardedHeaders }).(DistributionHeaderObjectPtrOutput)
}

// An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded.
func (o DistributionCacheSettingsOutput) ForwardedQueryStrings() DistributionQueryStringObjectPtrOutput {
	return o.ApplyT(func(v DistributionCacheSettings) *DistributionQueryStringObject { return v.ForwardedQueryStrings }).(DistributionQueryStringObjectPtrOutput)
}

// The maximum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
func (o DistributionCacheSettingsOutput) MaximumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionCacheSettings) *int { return v.MaximumTtl }).(pulumi.IntPtrOutput)
}

// The minimum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
func (o DistributionCacheSettingsOutput) MinimumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionCacheSettings) *int { return v.MinimumTtl }).(pulumi.IntPtrOutput)
}

type DistributionCacheSettingsPtrOutput struct{ *pulumi.OutputState }

func (DistributionCacheSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCacheSettings)(nil)).Elem()
}

func (o DistributionCacheSettingsPtrOutput) ToDistributionCacheSettingsPtrOutput() DistributionCacheSettingsPtrOutput {
	return o
}

func (o DistributionCacheSettingsPtrOutput) ToDistributionCacheSettingsPtrOutputWithContext(ctx context.Context) DistributionCacheSettingsPtrOutput {
	return o
}

func (o DistributionCacheSettingsPtrOutput) Elem() DistributionCacheSettingsOutput {
	return o.ApplyT(func(v *DistributionCacheSettings) DistributionCacheSettings {
		if v != nil {
			return *v
		}
		var ret DistributionCacheSettings
		return ret
	}).(DistributionCacheSettingsOutput)
}

// The HTTP methods that are processed and forwarded to the distribution's origin.
func (o DistributionCacheSettingsPtrOutput) AllowedHttpMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionCacheSettings) *string {
		if v == nil {
			return nil
		}
		return v.AllowedHttpMethods
	}).(pulumi.StringPtrOutput)
}

// The HTTP method responses that are cached by your distribution.
func (o DistributionCacheSettingsPtrOutput) CachedHttpMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionCacheSettings) *string {
		if v == nil {
			return nil
		}
		return v.CachedHttpMethods
	}).(pulumi.StringPtrOutput)
}

// The default amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the content has been updated.
func (o DistributionCacheSettingsPtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionCacheSettings) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded.
func (o DistributionCacheSettingsPtrOutput) ForwardedCookies() DistributionCookieObjectPtrOutput {
	return o.ApplyT(func(v *DistributionCacheSettings) *DistributionCookieObject {
		if v == nil {
			return nil
		}
		return v.ForwardedCookies
	}).(DistributionCookieObjectPtrOutput)
}

// An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded.
func (o DistributionCacheSettingsPtrOutput) ForwardedHeaders() DistributionHeaderObjectPtrOutput {
	return o.ApplyT(func(v *DistributionCacheSettings) *DistributionHeaderObject {
		if v == nil {
			return nil
		}
		return v.ForwardedHeaders
	}).(DistributionHeaderObjectPtrOutput)
}

// An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded.
func (o DistributionCacheSettingsPtrOutput) ForwardedQueryStrings() DistributionQueryStringObjectPtrOutput {
	return o.ApplyT(func(v *DistributionCacheSettings) *DistributionQueryStringObject {
		if v == nil {
			return nil
		}
		return v.ForwardedQueryStrings
	}).(DistributionQueryStringObjectPtrOutput)
}

// The maximum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
func (o DistributionCacheSettingsPtrOutput) MaximumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionCacheSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaximumTtl
	}).(pulumi.IntPtrOutput)
}

// The minimum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
func (o DistributionCacheSettingsPtrOutput) MinimumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionCacheSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinimumTtl
	}).(pulumi.IntPtrOutput)
}

// Describes whether an Amazon Lightsail content delivery network (CDN) distribution forwards cookies to the origin and, if so, which ones.
type DistributionCookieObject struct {
	// The specific cookies to forward to your distribution's origin.
	CookiesAllowList []string `pulumi:"cookiesAllowList"`
	// Specifies which cookies to forward to the distribution's origin for a cache behavior: all, none, or allow-list to forward only the cookies specified in the cookiesAllowList parameter.
	Option *string `pulumi:"option"`
}

// DistributionCookieObjectInput is an input type that accepts DistributionCookieObjectArgs and DistributionCookieObjectOutput values.
// You can construct a concrete instance of `DistributionCookieObjectInput` via:
//
//	DistributionCookieObjectArgs{...}
type DistributionCookieObjectInput interface {
	pulumi.Input

	ToDistributionCookieObjectOutput() DistributionCookieObjectOutput
	ToDistributionCookieObjectOutputWithContext(context.Context) DistributionCookieObjectOutput
}

// Describes whether an Amazon Lightsail content delivery network (CDN) distribution forwards cookies to the origin and, if so, which ones.
type DistributionCookieObjectArgs struct {
	// The specific cookies to forward to your distribution's origin.
	CookiesAllowList pulumi.StringArrayInput `pulumi:"cookiesAllowList"`
	// Specifies which cookies to forward to the distribution's origin for a cache behavior: all, none, or allow-list to forward only the cookies specified in the cookiesAllowList parameter.
	Option pulumi.StringPtrInput `pulumi:"option"`
}

func (DistributionCookieObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCookieObject)(nil)).Elem()
}

func (i DistributionCookieObjectArgs) ToDistributionCookieObjectOutput() DistributionCookieObjectOutput {
	return i.ToDistributionCookieObjectOutputWithContext(context.Background())
}

func (i DistributionCookieObjectArgs) ToDistributionCookieObjectOutputWithContext(ctx context.Context) DistributionCookieObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCookieObjectOutput)
}

func (i DistributionCookieObjectArgs) ToDistributionCookieObjectPtrOutput() DistributionCookieObjectPtrOutput {
	return i.ToDistributionCookieObjectPtrOutputWithContext(context.Background())
}

func (i DistributionCookieObjectArgs) ToDistributionCookieObjectPtrOutputWithContext(ctx context.Context) DistributionCookieObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCookieObjectOutput).ToDistributionCookieObjectPtrOutputWithContext(ctx)
}

// DistributionCookieObjectPtrInput is an input type that accepts DistributionCookieObjectArgs, DistributionCookieObjectPtr and DistributionCookieObjectPtrOutput values.
// You can construct a concrete instance of `DistributionCookieObjectPtrInput` via:
//
//	        DistributionCookieObjectArgs{...}
//
//	or:
//
//	        nil
type DistributionCookieObjectPtrInput interface {
	pulumi.Input

	ToDistributionCookieObjectPtrOutput() DistributionCookieObjectPtrOutput
	ToDistributionCookieObjectPtrOutputWithContext(context.Context) DistributionCookieObjectPtrOutput
}

type distributionCookieObjectPtrType DistributionCookieObjectArgs

func DistributionCookieObjectPtr(v *DistributionCookieObjectArgs) DistributionCookieObjectPtrInput {
	return (*distributionCookieObjectPtrType)(v)
}

func (*distributionCookieObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCookieObject)(nil)).Elem()
}

func (i *distributionCookieObjectPtrType) ToDistributionCookieObjectPtrOutput() DistributionCookieObjectPtrOutput {
	return i.ToDistributionCookieObjectPtrOutputWithContext(context.Background())
}

func (i *distributionCookieObjectPtrType) ToDistributionCookieObjectPtrOutputWithContext(ctx context.Context) DistributionCookieObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCookieObjectPtrOutput)
}

// Describes whether an Amazon Lightsail content delivery network (CDN) distribution forwards cookies to the origin and, if so, which ones.
type DistributionCookieObjectOutput struct{ *pulumi.OutputState }

func (DistributionCookieObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCookieObject)(nil)).Elem()
}

func (o DistributionCookieObjectOutput) ToDistributionCookieObjectOutput() DistributionCookieObjectOutput {
	return o
}

func (o DistributionCookieObjectOutput) ToDistributionCookieObjectOutputWithContext(ctx context.Context) DistributionCookieObjectOutput {
	return o
}

func (o DistributionCookieObjectOutput) ToDistributionCookieObjectPtrOutput() DistributionCookieObjectPtrOutput {
	return o.ToDistributionCookieObjectPtrOutputWithContext(context.Background())
}

func (o DistributionCookieObjectOutput) ToDistributionCookieObjectPtrOutputWithContext(ctx context.Context) DistributionCookieObjectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionCookieObject) *DistributionCookieObject {
		return &v
	}).(DistributionCookieObjectPtrOutput)
}

// The specific cookies to forward to your distribution's origin.
func (o DistributionCookieObjectOutput) CookiesAllowList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionCookieObject) []string { return v.CookiesAllowList }).(pulumi.StringArrayOutput)
}

// Specifies which cookies to forward to the distribution's origin for a cache behavior: all, none, or allow-list to forward only the cookies specified in the cookiesAllowList parameter.
func (o DistributionCookieObjectOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCookieObject) *string { return v.Option }).(pulumi.StringPtrOutput)
}

type DistributionCookieObjectPtrOutput struct{ *pulumi.OutputState }

func (DistributionCookieObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCookieObject)(nil)).Elem()
}

func (o DistributionCookieObjectPtrOutput) ToDistributionCookieObjectPtrOutput() DistributionCookieObjectPtrOutput {
	return o
}

func (o DistributionCookieObjectPtrOutput) ToDistributionCookieObjectPtrOutputWithContext(ctx context.Context) DistributionCookieObjectPtrOutput {
	return o
}

func (o DistributionCookieObjectPtrOutput) Elem() DistributionCookieObjectOutput {
	return o.ApplyT(func(v *DistributionCookieObject) DistributionCookieObject {
		if v != nil {
			return *v
		}
		var ret DistributionCookieObject
		return ret
	}).(DistributionCookieObjectOutput)
}

// The specific cookies to forward to your distribution's origin.
func (o DistributionCookieObjectPtrOutput) CookiesAllowList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionCookieObject) []string {
		if v == nil {
			return nil
		}
		return v.CookiesAllowList
	}).(pulumi.StringArrayOutput)
}

// Specifies which cookies to forward to the distribution's origin for a cache behavior: all, none, or allow-list to forward only the cookies specified in the cookiesAllowList parameter.
func (o DistributionCookieObjectPtrOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionCookieObject) *string {
		if v == nil {
			return nil
		}
		return v.Option
	}).(pulumi.StringPtrOutput)
}

// Describes the request headers that a Lightsail distribution bases caching on.
type DistributionHeaderObject struct {
	// The specific headers to forward to your distribution's origin.
	HeadersAllowList []string `pulumi:"headersAllowList"`
	// The headers that you want your distribution to forward to your origin and base caching on.
	Option *string `pulumi:"option"`
}

// DistributionHeaderObjectInput is an input type that accepts DistributionHeaderObjectArgs and DistributionHeaderObjectOutput values.
// You can construct a concrete instance of `DistributionHeaderObjectInput` via:
//
//	DistributionHeaderObjectArgs{...}
type DistributionHeaderObjectInput interface {
	pulumi.Input

	ToDistributionHeaderObjectOutput() DistributionHeaderObjectOutput
	ToDistributionHeaderObjectOutputWithContext(context.Context) DistributionHeaderObjectOutput
}

// Describes the request headers that a Lightsail distribution bases caching on.
type DistributionHeaderObjectArgs struct {
	// The specific headers to forward to your distribution's origin.
	HeadersAllowList pulumi.StringArrayInput `pulumi:"headersAllowList"`
	// The headers that you want your distribution to forward to your origin and base caching on.
	Option pulumi.StringPtrInput `pulumi:"option"`
}

func (DistributionHeaderObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionHeaderObject)(nil)).Elem()
}

func (i DistributionHeaderObjectArgs) ToDistributionHeaderObjectOutput() DistributionHeaderObjectOutput {
	return i.ToDistributionHeaderObjectOutputWithContext(context.Background())
}

func (i DistributionHeaderObjectArgs) ToDistributionHeaderObjectOutputWithContext(ctx context.Context) DistributionHeaderObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionHeaderObjectOutput)
}

func (i DistributionHeaderObjectArgs) ToDistributionHeaderObjectPtrOutput() DistributionHeaderObjectPtrOutput {
	return i.ToDistributionHeaderObjectPtrOutputWithContext(context.Background())
}

func (i DistributionHeaderObjectArgs) ToDistributionHeaderObjectPtrOutputWithContext(ctx context.Context) DistributionHeaderObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionHeaderObjectOutput).ToDistributionHeaderObjectPtrOutputWithContext(ctx)
}

// DistributionHeaderObjectPtrInput is an input type that accepts DistributionHeaderObjectArgs, DistributionHeaderObjectPtr and DistributionHeaderObjectPtrOutput values.
// You can construct a concrete instance of `DistributionHeaderObjectPtrInput` via:
//
//	        DistributionHeaderObjectArgs{...}
//
//	or:
//
//	        nil
type DistributionHeaderObjectPtrInput interface {
	pulumi.Input

	ToDistributionHeaderObjectPtrOutput() DistributionHeaderObjectPtrOutput
	ToDistributionHeaderObjectPtrOutputWithContext(context.Context) DistributionHeaderObjectPtrOutput
}

type distributionHeaderObjectPtrType DistributionHeaderObjectArgs

func DistributionHeaderObjectPtr(v *DistributionHeaderObjectArgs) DistributionHeaderObjectPtrInput {
	return (*distributionHeaderObjectPtrType)(v)
}

func (*distributionHeaderObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionHeaderObject)(nil)).Elem()
}

func (i *distributionHeaderObjectPtrType) ToDistributionHeaderObjectPtrOutput() DistributionHeaderObjectPtrOutput {
	return i.ToDistributionHeaderObjectPtrOutputWithContext(context.Background())
}

func (i *distributionHeaderObjectPtrType) ToDistributionHeaderObjectPtrOutputWithContext(ctx context.Context) DistributionHeaderObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionHeaderObjectPtrOutput)
}

// Describes the request headers that a Lightsail distribution bases caching on.
type DistributionHeaderObjectOutput struct{ *pulumi.OutputState }

func (DistributionHeaderObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionHeaderObject)(nil)).Elem()
}

func (o DistributionHeaderObjectOutput) ToDistributionHeaderObjectOutput() DistributionHeaderObjectOutput {
	return o
}

func (o DistributionHeaderObjectOutput) ToDistributionHeaderObjectOutputWithContext(ctx context.Context) DistributionHeaderObjectOutput {
	return o
}

func (o DistributionHeaderObjectOutput) ToDistributionHeaderObjectPtrOutput() DistributionHeaderObjectPtrOutput {
	return o.ToDistributionHeaderObjectPtrOutputWithContext(context.Background())
}

func (o DistributionHeaderObjectOutput) ToDistributionHeaderObjectPtrOutputWithContext(ctx context.Context) DistributionHeaderObjectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionHeaderObject) *DistributionHeaderObject {
		return &v
	}).(DistributionHeaderObjectPtrOutput)
}

// The specific headers to forward to your distribution's origin.
func (o DistributionHeaderObjectOutput) HeadersAllowList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionHeaderObject) []string { return v.HeadersAllowList }).(pulumi.StringArrayOutput)
}

// The headers that you want your distribution to forward to your origin and base caching on.
func (o DistributionHeaderObjectOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionHeaderObject) *string { return v.Option }).(pulumi.StringPtrOutput)
}

type DistributionHeaderObjectPtrOutput struct{ *pulumi.OutputState }

func (DistributionHeaderObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionHeaderObject)(nil)).Elem()
}

func (o DistributionHeaderObjectPtrOutput) ToDistributionHeaderObjectPtrOutput() DistributionHeaderObjectPtrOutput {
	return o
}

func (o DistributionHeaderObjectPtrOutput) ToDistributionHeaderObjectPtrOutputWithContext(ctx context.Context) DistributionHeaderObjectPtrOutput {
	return o
}

func (o DistributionHeaderObjectPtrOutput) Elem() DistributionHeaderObjectOutput {
	return o.ApplyT(func(v *DistributionHeaderObject) DistributionHeaderObject {
		if v != nil {
			return *v
		}
		var ret DistributionHeaderObject
		return ret
	}).(DistributionHeaderObjectOutput)
}

// The specific headers to forward to your distribution's origin.
func (o DistributionHeaderObjectPtrOutput) HeadersAllowList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionHeaderObject) []string {
		if v == nil {
			return nil
		}
		return v.HeadersAllowList
	}).(pulumi.StringArrayOutput)
}

// The headers that you want your distribution to forward to your origin and base caching on.
func (o DistributionHeaderObjectPtrOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionHeaderObject) *string {
		if v == nil {
			return nil
		}
		return v.Option
	}).(pulumi.StringPtrOutput)
}

// Describes the origin resource of an Amazon Lightsail content delivery network (CDN) distribution.
type DistributionInputOrigin struct {
	// The name of the origin resource.
	Name *string `pulumi:"name"`
	// The protocol that your Amazon Lightsail distribution uses when establishing a connection with your origin to pull content.
	ProtocolPolicy *string `pulumi:"protocolPolicy"`
	// The AWS Region name of the origin resource.
	RegionName *string `pulumi:"regionName"`
}

// DistributionInputOriginInput is an input type that accepts DistributionInputOriginArgs and DistributionInputOriginOutput values.
// You can construct a concrete instance of `DistributionInputOriginInput` via:
//
//	DistributionInputOriginArgs{...}
type DistributionInputOriginInput interface {
	pulumi.Input

	ToDistributionInputOriginOutput() DistributionInputOriginOutput
	ToDistributionInputOriginOutputWithContext(context.Context) DistributionInputOriginOutput
}

// Describes the origin resource of an Amazon Lightsail content delivery network (CDN) distribution.
type DistributionInputOriginArgs struct {
	// The name of the origin resource.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The protocol that your Amazon Lightsail distribution uses when establishing a connection with your origin to pull content.
	ProtocolPolicy pulumi.StringPtrInput `pulumi:"protocolPolicy"`
	// The AWS Region name of the origin resource.
	RegionName pulumi.StringPtrInput `pulumi:"regionName"`
}

func (DistributionInputOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionInputOrigin)(nil)).Elem()
}

func (i DistributionInputOriginArgs) ToDistributionInputOriginOutput() DistributionInputOriginOutput {
	return i.ToDistributionInputOriginOutputWithContext(context.Background())
}

func (i DistributionInputOriginArgs) ToDistributionInputOriginOutputWithContext(ctx context.Context) DistributionInputOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionInputOriginOutput)
}

// Describes the origin resource of an Amazon Lightsail content delivery network (CDN) distribution.
type DistributionInputOriginOutput struct{ *pulumi.OutputState }

func (DistributionInputOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionInputOrigin)(nil)).Elem()
}

func (o DistributionInputOriginOutput) ToDistributionInputOriginOutput() DistributionInputOriginOutput {
	return o
}

func (o DistributionInputOriginOutput) ToDistributionInputOriginOutputWithContext(ctx context.Context) DistributionInputOriginOutput {
	return o
}

// The name of the origin resource.
func (o DistributionInputOriginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionInputOrigin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The protocol that your Amazon Lightsail distribution uses when establishing a connection with your origin to pull content.
func (o DistributionInputOriginOutput) ProtocolPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionInputOrigin) *string { return v.ProtocolPolicy }).(pulumi.StringPtrOutput)
}

// The AWS Region name of the origin resource.
func (o DistributionInputOriginOutput) RegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionInputOrigin) *string { return v.RegionName }).(pulumi.StringPtrOutput)
}

type DistributionInputOriginPtrOutput struct{ *pulumi.OutputState }

func (DistributionInputOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionInputOrigin)(nil)).Elem()
}

func (o DistributionInputOriginPtrOutput) ToDistributionInputOriginPtrOutput() DistributionInputOriginPtrOutput {
	return o
}

func (o DistributionInputOriginPtrOutput) ToDistributionInputOriginPtrOutputWithContext(ctx context.Context) DistributionInputOriginPtrOutput {
	return o
}

func (o DistributionInputOriginPtrOutput) Elem() DistributionInputOriginOutput {
	return o.ApplyT(func(v *DistributionInputOrigin) DistributionInputOrigin {
		if v != nil {
			return *v
		}
		var ret DistributionInputOrigin
		return ret
	}).(DistributionInputOriginOutput)
}

// The name of the origin resource.
func (o DistributionInputOriginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionInputOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The protocol that your Amazon Lightsail distribution uses when establishing a connection with your origin to pull content.
func (o DistributionInputOriginPtrOutput) ProtocolPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionInputOrigin) *string {
		if v == nil {
			return nil
		}
		return v.ProtocolPolicy
	}).(pulumi.StringPtrOutput)
}

// The AWS Region name of the origin resource.
func (o DistributionInputOriginPtrOutput) RegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionInputOrigin) *string {
		if v == nil {
			return nil
		}
		return v.RegionName
	}).(pulumi.StringPtrOutput)
}

// Describes the query string parameters that an Amazon Lightsail content delivery network (CDN) distribution to bases caching on.
type DistributionQueryStringObject struct {
	// Indicates whether the distribution forwards and caches based on query strings.
	Option *bool `pulumi:"option"`
	// The specific query strings that the distribution forwards to the origin.
	QueryStringsAllowList []string `pulumi:"queryStringsAllowList"`
}

// DistributionQueryStringObjectInput is an input type that accepts DistributionQueryStringObjectArgs and DistributionQueryStringObjectOutput values.
// You can construct a concrete instance of `DistributionQueryStringObjectInput` via:
//
//	DistributionQueryStringObjectArgs{...}
type DistributionQueryStringObjectInput interface {
	pulumi.Input

	ToDistributionQueryStringObjectOutput() DistributionQueryStringObjectOutput
	ToDistributionQueryStringObjectOutputWithContext(context.Context) DistributionQueryStringObjectOutput
}

// Describes the query string parameters that an Amazon Lightsail content delivery network (CDN) distribution to bases caching on.
type DistributionQueryStringObjectArgs struct {
	// Indicates whether the distribution forwards and caches based on query strings.
	Option pulumi.BoolPtrInput `pulumi:"option"`
	// The specific query strings that the distribution forwards to the origin.
	QueryStringsAllowList pulumi.StringArrayInput `pulumi:"queryStringsAllowList"`
}

func (DistributionQueryStringObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionQueryStringObject)(nil)).Elem()
}

func (i DistributionQueryStringObjectArgs) ToDistributionQueryStringObjectOutput() DistributionQueryStringObjectOutput {
	return i.ToDistributionQueryStringObjectOutputWithContext(context.Background())
}

func (i DistributionQueryStringObjectArgs) ToDistributionQueryStringObjectOutputWithContext(ctx context.Context) DistributionQueryStringObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionQueryStringObjectOutput)
}

func (i DistributionQueryStringObjectArgs) ToDistributionQueryStringObjectPtrOutput() DistributionQueryStringObjectPtrOutput {
	return i.ToDistributionQueryStringObjectPtrOutputWithContext(context.Background())
}

func (i DistributionQueryStringObjectArgs) ToDistributionQueryStringObjectPtrOutputWithContext(ctx context.Context) DistributionQueryStringObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionQueryStringObjectOutput).ToDistributionQueryStringObjectPtrOutputWithContext(ctx)
}

// DistributionQueryStringObjectPtrInput is an input type that accepts DistributionQueryStringObjectArgs, DistributionQueryStringObjectPtr and DistributionQueryStringObjectPtrOutput values.
// You can construct a concrete instance of `DistributionQueryStringObjectPtrInput` via:
//
//	        DistributionQueryStringObjectArgs{...}
//
//	or:
//
//	        nil
type DistributionQueryStringObjectPtrInput interface {
	pulumi.Input

	ToDistributionQueryStringObjectPtrOutput() DistributionQueryStringObjectPtrOutput
	ToDistributionQueryStringObjectPtrOutputWithContext(context.Context) DistributionQueryStringObjectPtrOutput
}

type distributionQueryStringObjectPtrType DistributionQueryStringObjectArgs

func DistributionQueryStringObjectPtr(v *DistributionQueryStringObjectArgs) DistributionQueryStringObjectPtrInput {
	return (*distributionQueryStringObjectPtrType)(v)
}

func (*distributionQueryStringObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionQueryStringObject)(nil)).Elem()
}

func (i *distributionQueryStringObjectPtrType) ToDistributionQueryStringObjectPtrOutput() DistributionQueryStringObjectPtrOutput {
	return i.ToDistributionQueryStringObjectPtrOutputWithContext(context.Background())
}

func (i *distributionQueryStringObjectPtrType) ToDistributionQueryStringObjectPtrOutputWithContext(ctx context.Context) DistributionQueryStringObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionQueryStringObjectPtrOutput)
}

// Describes the query string parameters that an Amazon Lightsail content delivery network (CDN) distribution to bases caching on.
type DistributionQueryStringObjectOutput struct{ *pulumi.OutputState }

func (DistributionQueryStringObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionQueryStringObject)(nil)).Elem()
}

func (o DistributionQueryStringObjectOutput) ToDistributionQueryStringObjectOutput() DistributionQueryStringObjectOutput {
	return o
}

func (o DistributionQueryStringObjectOutput) ToDistributionQueryStringObjectOutputWithContext(ctx context.Context) DistributionQueryStringObjectOutput {
	return o
}

func (o DistributionQueryStringObjectOutput) ToDistributionQueryStringObjectPtrOutput() DistributionQueryStringObjectPtrOutput {
	return o.ToDistributionQueryStringObjectPtrOutputWithContext(context.Background())
}

func (o DistributionQueryStringObjectOutput) ToDistributionQueryStringObjectPtrOutputWithContext(ctx context.Context) DistributionQueryStringObjectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionQueryStringObject) *DistributionQueryStringObject {
		return &v
	}).(DistributionQueryStringObjectPtrOutput)
}

// Indicates whether the distribution forwards and caches based on query strings.
func (o DistributionQueryStringObjectOutput) Option() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionQueryStringObject) *bool { return v.Option }).(pulumi.BoolPtrOutput)
}

// The specific query strings that the distribution forwards to the origin.
func (o DistributionQueryStringObjectOutput) QueryStringsAllowList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionQueryStringObject) []string { return v.QueryStringsAllowList }).(pulumi.StringArrayOutput)
}

type DistributionQueryStringObjectPtrOutput struct{ *pulumi.OutputState }

func (DistributionQueryStringObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionQueryStringObject)(nil)).Elem()
}

func (o DistributionQueryStringObjectPtrOutput) ToDistributionQueryStringObjectPtrOutput() DistributionQueryStringObjectPtrOutput {
	return o
}

func (o DistributionQueryStringObjectPtrOutput) ToDistributionQueryStringObjectPtrOutputWithContext(ctx context.Context) DistributionQueryStringObjectPtrOutput {
	return o
}

func (o DistributionQueryStringObjectPtrOutput) Elem() DistributionQueryStringObjectOutput {
	return o.ApplyT(func(v *DistributionQueryStringObject) DistributionQueryStringObject {
		if v != nil {
			return *v
		}
		var ret DistributionQueryStringObject
		return ret
	}).(DistributionQueryStringObjectOutput)
}

// Indicates whether the distribution forwards and caches based on query strings.
func (o DistributionQueryStringObjectPtrOutput) Option() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DistributionQueryStringObject) *bool {
		if v == nil {
			return nil
		}
		return v.Option
	}).(pulumi.BoolPtrOutput)
}

// The specific query strings that the distribution forwards to the origin.
func (o DistributionQueryStringObjectPtrOutput) QueryStringsAllowList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionQueryStringObject) []string {
		if v == nil {
			return nil
		}
		return v.QueryStringsAllowList
	}).(pulumi.StringArrayOutput)
}

// A key-value pair to associate with a resource.
type DistributionTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// A addon associate with a resource.
type InstanceAddOn struct {
	// The add-on type
	AddOnType                string                     `pulumi:"addOnType"`
	AutoSnapshotAddOnRequest *InstanceAutoSnapshotAddOn `pulumi:"autoSnapshotAddOnRequest"`
	// Status of the Addon
	Status *InstanceAddOnStatus `pulumi:"status"`
}

// InstanceAddOnInput is an input type that accepts InstanceAddOnArgs and InstanceAddOnOutput values.
// You can construct a concrete instance of `InstanceAddOnInput` via:
//
//	InstanceAddOnArgs{...}
type InstanceAddOnInput interface {
	pulumi.Input

	ToInstanceAddOnOutput() InstanceAddOnOutput
	ToInstanceAddOnOutputWithContext(context.Context) InstanceAddOnOutput
}

// A addon associate with a resource.
type InstanceAddOnArgs struct {
	// The add-on type
	AddOnType                pulumi.StringInput                `pulumi:"addOnType"`
	AutoSnapshotAddOnRequest InstanceAutoSnapshotAddOnPtrInput `pulumi:"autoSnapshotAddOnRequest"`
	// Status of the Addon
	Status InstanceAddOnStatusPtrInput `pulumi:"status"`
}

func (InstanceAddOnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAddOn)(nil)).Elem()
}

func (i InstanceAddOnArgs) ToInstanceAddOnOutput() InstanceAddOnOutput {
	return i.ToInstanceAddOnOutputWithContext(context.Background())
}

func (i InstanceAddOnArgs) ToInstanceAddOnOutputWithContext(ctx context.Context) InstanceAddOnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAddOnOutput)
}

// InstanceAddOnArrayInput is an input type that accepts InstanceAddOnArray and InstanceAddOnArrayOutput values.
// You can construct a concrete instance of `InstanceAddOnArrayInput` via:
//
//	InstanceAddOnArray{ InstanceAddOnArgs{...} }
type InstanceAddOnArrayInput interface {
	pulumi.Input

	ToInstanceAddOnArrayOutput() InstanceAddOnArrayOutput
	ToInstanceAddOnArrayOutputWithContext(context.Context) InstanceAddOnArrayOutput
}

type InstanceAddOnArray []InstanceAddOnInput

func (InstanceAddOnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceAddOn)(nil)).Elem()
}

func (i InstanceAddOnArray) ToInstanceAddOnArrayOutput() InstanceAddOnArrayOutput {
	return i.ToInstanceAddOnArrayOutputWithContext(context.Background())
}

func (i InstanceAddOnArray) ToInstanceAddOnArrayOutputWithContext(ctx context.Context) InstanceAddOnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAddOnArrayOutput)
}

// A addon associate with a resource.
type InstanceAddOnOutput struct{ *pulumi.OutputState }

func (InstanceAddOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAddOn)(nil)).Elem()
}

func (o InstanceAddOnOutput) ToInstanceAddOnOutput() InstanceAddOnOutput {
	return o
}

func (o InstanceAddOnOutput) ToInstanceAddOnOutputWithContext(ctx context.Context) InstanceAddOnOutput {
	return o
}

// The add-on type
func (o InstanceAddOnOutput) AddOnType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceAddOn) string { return v.AddOnType }).(pulumi.StringOutput)
}

func (o InstanceAddOnOutput) AutoSnapshotAddOnRequest() InstanceAutoSnapshotAddOnPtrOutput {
	return o.ApplyT(func(v InstanceAddOn) *InstanceAutoSnapshotAddOn { return v.AutoSnapshotAddOnRequest }).(InstanceAutoSnapshotAddOnPtrOutput)
}

// Status of the Addon
func (o InstanceAddOnOutput) Status() InstanceAddOnStatusPtrOutput {
	return o.ApplyT(func(v InstanceAddOn) *InstanceAddOnStatus { return v.Status }).(InstanceAddOnStatusPtrOutput)
}

type InstanceAddOnArrayOutput struct{ *pulumi.OutputState }

func (InstanceAddOnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceAddOn)(nil)).Elem()
}

func (o InstanceAddOnArrayOutput) ToInstanceAddOnArrayOutput() InstanceAddOnArrayOutput {
	return o
}

func (o InstanceAddOnArrayOutput) ToInstanceAddOnArrayOutputWithContext(ctx context.Context) InstanceAddOnArrayOutput {
	return o
}

func (o InstanceAddOnArrayOutput) Index(i pulumi.IntInput) InstanceAddOnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceAddOn {
		return vs[0].([]InstanceAddOn)[vs[1].(int)]
	}).(InstanceAddOnOutput)
}

// An object that represents additional parameters when enabling or modifying the automatic snapshot add-on
type InstanceAutoSnapshotAddOn struct {
	// The daily time when an automatic snapshot will be created.
	SnapshotTimeOfDay *string `pulumi:"snapshotTimeOfDay"`
}

// InstanceAutoSnapshotAddOnInput is an input type that accepts InstanceAutoSnapshotAddOnArgs and InstanceAutoSnapshotAddOnOutput values.
// You can construct a concrete instance of `InstanceAutoSnapshotAddOnInput` via:
//
//	InstanceAutoSnapshotAddOnArgs{...}
type InstanceAutoSnapshotAddOnInput interface {
	pulumi.Input

	ToInstanceAutoSnapshotAddOnOutput() InstanceAutoSnapshotAddOnOutput
	ToInstanceAutoSnapshotAddOnOutputWithContext(context.Context) InstanceAutoSnapshotAddOnOutput
}

// An object that represents additional parameters when enabling or modifying the automatic snapshot add-on
type InstanceAutoSnapshotAddOnArgs struct {
	// The daily time when an automatic snapshot will be created.
	SnapshotTimeOfDay pulumi.StringPtrInput `pulumi:"snapshotTimeOfDay"`
}

func (InstanceAutoSnapshotAddOnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAutoSnapshotAddOn)(nil)).Elem()
}

func (i InstanceAutoSnapshotAddOnArgs) ToInstanceAutoSnapshotAddOnOutput() InstanceAutoSnapshotAddOnOutput {
	return i.ToInstanceAutoSnapshotAddOnOutputWithContext(context.Background())
}

func (i InstanceAutoSnapshotAddOnArgs) ToInstanceAutoSnapshotAddOnOutputWithContext(ctx context.Context) InstanceAutoSnapshotAddOnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAutoSnapshotAddOnOutput)
}

func (i InstanceAutoSnapshotAddOnArgs) ToInstanceAutoSnapshotAddOnPtrOutput() InstanceAutoSnapshotAddOnPtrOutput {
	return i.ToInstanceAutoSnapshotAddOnPtrOutputWithContext(context.Background())
}

func (i InstanceAutoSnapshotAddOnArgs) ToInstanceAutoSnapshotAddOnPtrOutputWithContext(ctx context.Context) InstanceAutoSnapshotAddOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAutoSnapshotAddOnOutput).ToInstanceAutoSnapshotAddOnPtrOutputWithContext(ctx)
}

// InstanceAutoSnapshotAddOnPtrInput is an input type that accepts InstanceAutoSnapshotAddOnArgs, InstanceAutoSnapshotAddOnPtr and InstanceAutoSnapshotAddOnPtrOutput values.
// You can construct a concrete instance of `InstanceAutoSnapshotAddOnPtrInput` via:
//
//	        InstanceAutoSnapshotAddOnArgs{...}
//
//	or:
//
//	        nil
type InstanceAutoSnapshotAddOnPtrInput interface {
	pulumi.Input

	ToInstanceAutoSnapshotAddOnPtrOutput() InstanceAutoSnapshotAddOnPtrOutput
	ToInstanceAutoSnapshotAddOnPtrOutputWithContext(context.Context) InstanceAutoSnapshotAddOnPtrOutput
}

type instanceAutoSnapshotAddOnPtrType InstanceAutoSnapshotAddOnArgs

func InstanceAutoSnapshotAddOnPtr(v *InstanceAutoSnapshotAddOnArgs) InstanceAutoSnapshotAddOnPtrInput {
	return (*instanceAutoSnapshotAddOnPtrType)(v)
}

func (*instanceAutoSnapshotAddOnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAutoSnapshotAddOn)(nil)).Elem()
}

func (i *instanceAutoSnapshotAddOnPtrType) ToInstanceAutoSnapshotAddOnPtrOutput() InstanceAutoSnapshotAddOnPtrOutput {
	return i.ToInstanceAutoSnapshotAddOnPtrOutputWithContext(context.Background())
}

func (i *instanceAutoSnapshotAddOnPtrType) ToInstanceAutoSnapshotAddOnPtrOutputWithContext(ctx context.Context) InstanceAutoSnapshotAddOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAutoSnapshotAddOnPtrOutput)
}

// An object that represents additional parameters when enabling or modifying the automatic snapshot add-on
type InstanceAutoSnapshotAddOnOutput struct{ *pulumi.OutputState }

func (InstanceAutoSnapshotAddOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAutoSnapshotAddOn)(nil)).Elem()
}

func (o InstanceAutoSnapshotAddOnOutput) ToInstanceAutoSnapshotAddOnOutput() InstanceAutoSnapshotAddOnOutput {
	return o
}

func (o InstanceAutoSnapshotAddOnOutput) ToInstanceAutoSnapshotAddOnOutputWithContext(ctx context.Context) InstanceAutoSnapshotAddOnOutput {
	return o
}

func (o InstanceAutoSnapshotAddOnOutput) ToInstanceAutoSnapshotAddOnPtrOutput() InstanceAutoSnapshotAddOnPtrOutput {
	return o.ToInstanceAutoSnapshotAddOnPtrOutputWithContext(context.Background())
}

func (o InstanceAutoSnapshotAddOnOutput) ToInstanceAutoSnapshotAddOnPtrOutputWithContext(ctx context.Context) InstanceAutoSnapshotAddOnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceAutoSnapshotAddOn) *InstanceAutoSnapshotAddOn {
		return &v
	}).(InstanceAutoSnapshotAddOnPtrOutput)
}

// The daily time when an automatic snapshot will be created.
func (o InstanceAutoSnapshotAddOnOutput) SnapshotTimeOfDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceAutoSnapshotAddOn) *string { return v.SnapshotTimeOfDay }).(pulumi.StringPtrOutput)
}

type InstanceAutoSnapshotAddOnPtrOutput struct{ *pulumi.OutputState }

func (InstanceAutoSnapshotAddOnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAutoSnapshotAddOn)(nil)).Elem()
}

func (o InstanceAutoSnapshotAddOnPtrOutput) ToInstanceAutoSnapshotAddOnPtrOutput() InstanceAutoSnapshotAddOnPtrOutput {
	return o
}

func (o InstanceAutoSnapshotAddOnPtrOutput) ToInstanceAutoSnapshotAddOnPtrOutputWithContext(ctx context.Context) InstanceAutoSnapshotAddOnPtrOutput {
	return o
}

func (o InstanceAutoSnapshotAddOnPtrOutput) Elem() InstanceAutoSnapshotAddOnOutput {
	return o.ApplyT(func(v *InstanceAutoSnapshotAddOn) InstanceAutoSnapshotAddOn {
		if v != nil {
			return *v
		}
		var ret InstanceAutoSnapshotAddOn
		return ret
	}).(InstanceAutoSnapshotAddOnOutput)
}

// The daily time when an automatic snapshot will be created.
func (o InstanceAutoSnapshotAddOnPtrOutput) SnapshotTimeOfDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceAutoSnapshotAddOn) *string {
		if v == nil {
			return nil
		}
		return v.SnapshotTimeOfDay
	}).(pulumi.StringPtrOutput)
}

// Disk associated with the Instance.
type InstanceDisk struct {
	// Instance attached to the disk.
	AttachedTo *string `pulumi:"attachedTo"`
	// Attachment state of the disk.
	AttachmentState *string `pulumi:"attachmentState"`
	// The names to use for your new Lightsail disk.
	DiskName string `pulumi:"diskName"`
	// IOPS of disk.
	Iops *int `pulumi:"iops"`
	// Is the Attached disk is the system disk of the Instance.
	IsSystemDisk *bool `pulumi:"isSystemDisk"`
	// Path of the disk attached to the instance.
	Path string `pulumi:"path"`
	// Size of the disk attached to the Instance.
	SizeInGb *string `pulumi:"sizeInGb"`
}

// InstanceDiskInput is an input type that accepts InstanceDiskArgs and InstanceDiskOutput values.
// You can construct a concrete instance of `InstanceDiskInput` via:
//
//	InstanceDiskArgs{...}
type InstanceDiskInput interface {
	pulumi.Input

	ToInstanceDiskOutput() InstanceDiskOutput
	ToInstanceDiskOutputWithContext(context.Context) InstanceDiskOutput
}

// Disk associated with the Instance.
type InstanceDiskArgs struct {
	// Instance attached to the disk.
	AttachedTo pulumi.StringPtrInput `pulumi:"attachedTo"`
	// Attachment state of the disk.
	AttachmentState pulumi.StringPtrInput `pulumi:"attachmentState"`
	// The names to use for your new Lightsail disk.
	DiskName pulumi.StringInput `pulumi:"diskName"`
	// IOPS of disk.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Is the Attached disk is the system disk of the Instance.
	IsSystemDisk pulumi.BoolPtrInput `pulumi:"isSystemDisk"`
	// Path of the disk attached to the instance.
	Path pulumi.StringInput `pulumi:"path"`
	// Size of the disk attached to the Instance.
	SizeInGb pulumi.StringPtrInput `pulumi:"sizeInGb"`
}

func (InstanceDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDisk)(nil)).Elem()
}

func (i InstanceDiskArgs) ToInstanceDiskOutput() InstanceDiskOutput {
	return i.ToInstanceDiskOutputWithContext(context.Background())
}

func (i InstanceDiskArgs) ToInstanceDiskOutputWithContext(ctx context.Context) InstanceDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDiskOutput)
}

// InstanceDiskArrayInput is an input type that accepts InstanceDiskArray and InstanceDiskArrayOutput values.
// You can construct a concrete instance of `InstanceDiskArrayInput` via:
//
//	InstanceDiskArray{ InstanceDiskArgs{...} }
type InstanceDiskArrayInput interface {
	pulumi.Input

	ToInstanceDiskArrayOutput() InstanceDiskArrayOutput
	ToInstanceDiskArrayOutputWithContext(context.Context) InstanceDiskArrayOutput
}

type InstanceDiskArray []InstanceDiskInput

func (InstanceDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDisk)(nil)).Elem()
}

func (i InstanceDiskArray) ToInstanceDiskArrayOutput() InstanceDiskArrayOutput {
	return i.ToInstanceDiskArrayOutputWithContext(context.Background())
}

func (i InstanceDiskArray) ToInstanceDiskArrayOutputWithContext(ctx context.Context) InstanceDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceDiskArrayOutput)
}

// Disk associated with the Instance.
type InstanceDiskOutput struct{ *pulumi.OutputState }

func (InstanceDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceDisk)(nil)).Elem()
}

func (o InstanceDiskOutput) ToInstanceDiskOutput() InstanceDiskOutput {
	return o
}

func (o InstanceDiskOutput) ToInstanceDiskOutputWithContext(ctx context.Context) InstanceDiskOutput {
	return o
}

// Instance attached to the disk.
func (o InstanceDiskOutput) AttachedTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDisk) *string { return v.AttachedTo }).(pulumi.StringPtrOutput)
}

// Attachment state of the disk.
func (o InstanceDiskOutput) AttachmentState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDisk) *string { return v.AttachmentState }).(pulumi.StringPtrOutput)
}

// The names to use for your new Lightsail disk.
func (o InstanceDiskOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDisk) string { return v.DiskName }).(pulumi.StringOutput)
}

// IOPS of disk.
func (o InstanceDiskOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceDisk) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Is the Attached disk is the system disk of the Instance.
func (o InstanceDiskOutput) IsSystemDisk() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceDisk) *bool { return v.IsSystemDisk }).(pulumi.BoolPtrOutput)
}

// Path of the disk attached to the instance.
func (o InstanceDiskOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceDisk) string { return v.Path }).(pulumi.StringOutput)
}

// Size of the disk attached to the Instance.
func (o InstanceDiskOutput) SizeInGb() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceDisk) *string { return v.SizeInGb }).(pulumi.StringPtrOutput)
}

type InstanceDiskArrayOutput struct{ *pulumi.OutputState }

func (InstanceDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceDisk)(nil)).Elem()
}

func (o InstanceDiskArrayOutput) ToInstanceDiskArrayOutput() InstanceDiskArrayOutput {
	return o
}

func (o InstanceDiskArrayOutput) ToInstanceDiskArrayOutputWithContext(ctx context.Context) InstanceDiskArrayOutput {
	return o
}

func (o InstanceDiskArrayOutput) Index(i pulumi.IntInput) InstanceDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceDisk {
		return vs[0].([]InstanceDisk)[vs[1].(int)]
	}).(InstanceDiskOutput)
}

// Hardware of the Instance.
type InstanceHardware struct {
	// CPU count of the Instance.
	CpuCount *int `pulumi:"cpuCount"`
	// Disks attached to the Instance.
	Disks []InstanceDisk `pulumi:"disks"`
	// RAM Size of the Instance.
	RamSizeInGb *int `pulumi:"ramSizeInGb"`
}

// InstanceHardwareInput is an input type that accepts InstanceHardwareArgs and InstanceHardwareOutput values.
// You can construct a concrete instance of `InstanceHardwareInput` via:
//
//	InstanceHardwareArgs{...}
type InstanceHardwareInput interface {
	pulumi.Input

	ToInstanceHardwareOutput() InstanceHardwareOutput
	ToInstanceHardwareOutputWithContext(context.Context) InstanceHardwareOutput
}

// Hardware of the Instance.
type InstanceHardwareArgs struct {
	// CPU count of the Instance.
	CpuCount pulumi.IntPtrInput `pulumi:"cpuCount"`
	// Disks attached to the Instance.
	Disks InstanceDiskArrayInput `pulumi:"disks"`
	// RAM Size of the Instance.
	RamSizeInGb pulumi.IntPtrInput `pulumi:"ramSizeInGb"`
}

func (InstanceHardwareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceHardware)(nil)).Elem()
}

func (i InstanceHardwareArgs) ToInstanceHardwareOutput() InstanceHardwareOutput {
	return i.ToInstanceHardwareOutputWithContext(context.Background())
}

func (i InstanceHardwareArgs) ToInstanceHardwareOutputWithContext(ctx context.Context) InstanceHardwareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceHardwareOutput)
}

func (i InstanceHardwareArgs) ToInstanceHardwarePtrOutput() InstanceHardwarePtrOutput {
	return i.ToInstanceHardwarePtrOutputWithContext(context.Background())
}

func (i InstanceHardwareArgs) ToInstanceHardwarePtrOutputWithContext(ctx context.Context) InstanceHardwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceHardwareOutput).ToInstanceHardwarePtrOutputWithContext(ctx)
}

// InstanceHardwarePtrInput is an input type that accepts InstanceHardwareArgs, InstanceHardwarePtr and InstanceHardwarePtrOutput values.
// You can construct a concrete instance of `InstanceHardwarePtrInput` via:
//
//	        InstanceHardwareArgs{...}
//
//	or:
//
//	        nil
type InstanceHardwarePtrInput interface {
	pulumi.Input

	ToInstanceHardwarePtrOutput() InstanceHardwarePtrOutput
	ToInstanceHardwarePtrOutputWithContext(context.Context) InstanceHardwarePtrOutput
}

type instanceHardwarePtrType InstanceHardwareArgs

func InstanceHardwarePtr(v *InstanceHardwareArgs) InstanceHardwarePtrInput {
	return (*instanceHardwarePtrType)(v)
}

func (*instanceHardwarePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceHardware)(nil)).Elem()
}

func (i *instanceHardwarePtrType) ToInstanceHardwarePtrOutput() InstanceHardwarePtrOutput {
	return i.ToInstanceHardwarePtrOutputWithContext(context.Background())
}

func (i *instanceHardwarePtrType) ToInstanceHardwarePtrOutputWithContext(ctx context.Context) InstanceHardwarePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceHardwarePtrOutput)
}

// Hardware of the Instance.
type InstanceHardwareOutput struct{ *pulumi.OutputState }

func (InstanceHardwareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceHardware)(nil)).Elem()
}

func (o InstanceHardwareOutput) ToInstanceHardwareOutput() InstanceHardwareOutput {
	return o
}

func (o InstanceHardwareOutput) ToInstanceHardwareOutputWithContext(ctx context.Context) InstanceHardwareOutput {
	return o
}

func (o InstanceHardwareOutput) ToInstanceHardwarePtrOutput() InstanceHardwarePtrOutput {
	return o.ToInstanceHardwarePtrOutputWithContext(context.Background())
}

func (o InstanceHardwareOutput) ToInstanceHardwarePtrOutputWithContext(ctx context.Context) InstanceHardwarePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceHardware) *InstanceHardware {
		return &v
	}).(InstanceHardwarePtrOutput)
}

// CPU count of the Instance.
func (o InstanceHardwareOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceHardware) *int { return v.CpuCount }).(pulumi.IntPtrOutput)
}

// Disks attached to the Instance.
func (o InstanceHardwareOutput) Disks() InstanceDiskArrayOutput {
	return o.ApplyT(func(v InstanceHardware) []InstanceDisk { return v.Disks }).(InstanceDiskArrayOutput)
}

// RAM Size of the Instance.
func (o InstanceHardwareOutput) RamSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceHardware) *int { return v.RamSizeInGb }).(pulumi.IntPtrOutput)
}

type InstanceHardwarePtrOutput struct{ *pulumi.OutputState }

func (InstanceHardwarePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceHardware)(nil)).Elem()
}

func (o InstanceHardwarePtrOutput) ToInstanceHardwarePtrOutput() InstanceHardwarePtrOutput {
	return o
}

func (o InstanceHardwarePtrOutput) ToInstanceHardwarePtrOutputWithContext(ctx context.Context) InstanceHardwarePtrOutput {
	return o
}

func (o InstanceHardwarePtrOutput) Elem() InstanceHardwareOutput {
	return o.ApplyT(func(v *InstanceHardware) InstanceHardware {
		if v != nil {
			return *v
		}
		var ret InstanceHardware
		return ret
	}).(InstanceHardwareOutput)
}

// CPU count of the Instance.
func (o InstanceHardwarePtrOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceHardware) *int {
		if v == nil {
			return nil
		}
		return v.CpuCount
	}).(pulumi.IntPtrOutput)
}

// Disks attached to the Instance.
func (o InstanceHardwarePtrOutput) Disks() InstanceDiskArrayOutput {
	return o.ApplyT(func(v *InstanceHardware) []InstanceDisk {
		if v == nil {
			return nil
		}
		return v.Disks
	}).(InstanceDiskArrayOutput)
}

// RAM Size of the Instance.
func (o InstanceHardwarePtrOutput) RamSizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceHardware) *int {
		if v == nil {
			return nil
		}
		return v.RamSizeInGb
	}).(pulumi.IntPtrOutput)
}

// Location of a resource.
type InstanceLocation struct {
	// The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The Region Name in which to create your instance.
	RegionName *string `pulumi:"regionName"`
}

// InstanceLocationInput is an input type that accepts InstanceLocationArgs and InstanceLocationOutput values.
// You can construct a concrete instance of `InstanceLocationInput` via:
//
//	InstanceLocationArgs{...}
type InstanceLocationInput interface {
	pulumi.Input

	ToInstanceLocationOutput() InstanceLocationOutput
	ToInstanceLocationOutputWithContext(context.Context) InstanceLocationOutput
}

// Location of a resource.
type InstanceLocationArgs struct {
	// The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.
	AvailabilityZone pulumi.StringPtrInput `pulumi:"availabilityZone"`
	// The Region Name in which to create your instance.
	RegionName pulumi.StringPtrInput `pulumi:"regionName"`
}

func (InstanceLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceLocation)(nil)).Elem()
}

func (i InstanceLocationArgs) ToInstanceLocationOutput() InstanceLocationOutput {
	return i.ToInstanceLocationOutputWithContext(context.Background())
}

func (i InstanceLocationArgs) ToInstanceLocationOutputWithContext(ctx context.Context) InstanceLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceLocationOutput)
}

func (i InstanceLocationArgs) ToInstanceLocationPtrOutput() InstanceLocationPtrOutput {
	return i.ToInstanceLocationPtrOutputWithContext(context.Background())
}

func (i InstanceLocationArgs) ToInstanceLocationPtrOutputWithContext(ctx context.Context) InstanceLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceLocationOutput).ToInstanceLocationPtrOutputWithContext(ctx)
}

// InstanceLocationPtrInput is an input type that accepts InstanceLocationArgs, InstanceLocationPtr and InstanceLocationPtrOutput values.
// You can construct a concrete instance of `InstanceLocationPtrInput` via:
//
//	        InstanceLocationArgs{...}
//
//	or:
//
//	        nil
type InstanceLocationPtrInput interface {
	pulumi.Input

	ToInstanceLocationPtrOutput() InstanceLocationPtrOutput
	ToInstanceLocationPtrOutputWithContext(context.Context) InstanceLocationPtrOutput
}

type instanceLocationPtrType InstanceLocationArgs

func InstanceLocationPtr(v *InstanceLocationArgs) InstanceLocationPtrInput {
	return (*instanceLocationPtrType)(v)
}

func (*instanceLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceLocation)(nil)).Elem()
}

func (i *instanceLocationPtrType) ToInstanceLocationPtrOutput() InstanceLocationPtrOutput {
	return i.ToInstanceLocationPtrOutputWithContext(context.Background())
}

func (i *instanceLocationPtrType) ToInstanceLocationPtrOutputWithContext(ctx context.Context) InstanceLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceLocationPtrOutput)
}

// Location of a resource.
type InstanceLocationOutput struct{ *pulumi.OutputState }

func (InstanceLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceLocation)(nil)).Elem()
}

func (o InstanceLocationOutput) ToInstanceLocationOutput() InstanceLocationOutput {
	return o
}

func (o InstanceLocationOutput) ToInstanceLocationOutputWithContext(ctx context.Context) InstanceLocationOutput {
	return o
}

func (o InstanceLocationOutput) ToInstanceLocationPtrOutput() InstanceLocationPtrOutput {
	return o.ToInstanceLocationPtrOutputWithContext(context.Background())
}

func (o InstanceLocationOutput) ToInstanceLocationPtrOutputWithContext(ctx context.Context) InstanceLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceLocation) *InstanceLocation {
		return &v
	}).(InstanceLocationPtrOutput)
}

// The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.
func (o InstanceLocationOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceLocation) *string { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The Region Name in which to create your instance.
func (o InstanceLocationOutput) RegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceLocation) *string { return v.RegionName }).(pulumi.StringPtrOutput)
}

type InstanceLocationPtrOutput struct{ *pulumi.OutputState }

func (InstanceLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceLocation)(nil)).Elem()
}

func (o InstanceLocationPtrOutput) ToInstanceLocationPtrOutput() InstanceLocationPtrOutput {
	return o
}

func (o InstanceLocationPtrOutput) ToInstanceLocationPtrOutputWithContext(ctx context.Context) InstanceLocationPtrOutput {
	return o
}

func (o InstanceLocationPtrOutput) Elem() InstanceLocationOutput {
	return o.ApplyT(func(v *InstanceLocation) InstanceLocation {
		if v != nil {
			return *v
		}
		var ret InstanceLocation
		return ret
	}).(InstanceLocationOutput)
}

// The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request.
func (o InstanceLocationPtrOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceLocation) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZone
	}).(pulumi.StringPtrOutput)
}

// The Region Name in which to create your instance.
func (o InstanceLocationPtrOutput) RegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceLocation) *string {
		if v == nil {
			return nil
		}
		return v.RegionName
	}).(pulumi.StringPtrOutput)
}

// Monthly Transfer of the Instance.
type InstanceMonthlyTransfer struct {
	// GbPerMonthAllocated of the Instance.
	GbPerMonthAllocated *string `pulumi:"gbPerMonthAllocated"`
}

// InstanceMonthlyTransferInput is an input type that accepts InstanceMonthlyTransferArgs and InstanceMonthlyTransferOutput values.
// You can construct a concrete instance of `InstanceMonthlyTransferInput` via:
//
//	InstanceMonthlyTransferArgs{...}
type InstanceMonthlyTransferInput interface {
	pulumi.Input

	ToInstanceMonthlyTransferOutput() InstanceMonthlyTransferOutput
	ToInstanceMonthlyTransferOutputWithContext(context.Context) InstanceMonthlyTransferOutput
}

// Monthly Transfer of the Instance.
type InstanceMonthlyTransferArgs struct {
	// GbPerMonthAllocated of the Instance.
	GbPerMonthAllocated pulumi.StringPtrInput `pulumi:"gbPerMonthAllocated"`
}

func (InstanceMonthlyTransferArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMonthlyTransfer)(nil)).Elem()
}

func (i InstanceMonthlyTransferArgs) ToInstanceMonthlyTransferOutput() InstanceMonthlyTransferOutput {
	return i.ToInstanceMonthlyTransferOutputWithContext(context.Background())
}

func (i InstanceMonthlyTransferArgs) ToInstanceMonthlyTransferOutputWithContext(ctx context.Context) InstanceMonthlyTransferOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMonthlyTransferOutput)
}

func (i InstanceMonthlyTransferArgs) ToInstanceMonthlyTransferPtrOutput() InstanceMonthlyTransferPtrOutput {
	return i.ToInstanceMonthlyTransferPtrOutputWithContext(context.Background())
}

func (i InstanceMonthlyTransferArgs) ToInstanceMonthlyTransferPtrOutputWithContext(ctx context.Context) InstanceMonthlyTransferPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMonthlyTransferOutput).ToInstanceMonthlyTransferPtrOutputWithContext(ctx)
}

// InstanceMonthlyTransferPtrInput is an input type that accepts InstanceMonthlyTransferArgs, InstanceMonthlyTransferPtr and InstanceMonthlyTransferPtrOutput values.
// You can construct a concrete instance of `InstanceMonthlyTransferPtrInput` via:
//
//	        InstanceMonthlyTransferArgs{...}
//
//	or:
//
//	        nil
type InstanceMonthlyTransferPtrInput interface {
	pulumi.Input

	ToInstanceMonthlyTransferPtrOutput() InstanceMonthlyTransferPtrOutput
	ToInstanceMonthlyTransferPtrOutputWithContext(context.Context) InstanceMonthlyTransferPtrOutput
}

type instanceMonthlyTransferPtrType InstanceMonthlyTransferArgs

func InstanceMonthlyTransferPtr(v *InstanceMonthlyTransferArgs) InstanceMonthlyTransferPtrInput {
	return (*instanceMonthlyTransferPtrType)(v)
}

func (*instanceMonthlyTransferPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMonthlyTransfer)(nil)).Elem()
}

func (i *instanceMonthlyTransferPtrType) ToInstanceMonthlyTransferPtrOutput() InstanceMonthlyTransferPtrOutput {
	return i.ToInstanceMonthlyTransferPtrOutputWithContext(context.Background())
}

func (i *instanceMonthlyTransferPtrType) ToInstanceMonthlyTransferPtrOutputWithContext(ctx context.Context) InstanceMonthlyTransferPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMonthlyTransferPtrOutput)
}

// Monthly Transfer of the Instance.
type InstanceMonthlyTransferOutput struct{ *pulumi.OutputState }

func (InstanceMonthlyTransferOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMonthlyTransfer)(nil)).Elem()
}

func (o InstanceMonthlyTransferOutput) ToInstanceMonthlyTransferOutput() InstanceMonthlyTransferOutput {
	return o
}

func (o InstanceMonthlyTransferOutput) ToInstanceMonthlyTransferOutputWithContext(ctx context.Context) InstanceMonthlyTransferOutput {
	return o
}

func (o InstanceMonthlyTransferOutput) ToInstanceMonthlyTransferPtrOutput() InstanceMonthlyTransferPtrOutput {
	return o.ToInstanceMonthlyTransferPtrOutputWithContext(context.Background())
}

func (o InstanceMonthlyTransferOutput) ToInstanceMonthlyTransferPtrOutputWithContext(ctx context.Context) InstanceMonthlyTransferPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceMonthlyTransfer) *InstanceMonthlyTransfer {
		return &v
	}).(InstanceMonthlyTransferPtrOutput)
}

// GbPerMonthAllocated of the Instance.
func (o InstanceMonthlyTransferOutput) GbPerMonthAllocated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMonthlyTransfer) *string { return v.GbPerMonthAllocated }).(pulumi.StringPtrOutput)
}

type InstanceMonthlyTransferPtrOutput struct{ *pulumi.OutputState }

func (InstanceMonthlyTransferPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceMonthlyTransfer)(nil)).Elem()
}

func (o InstanceMonthlyTransferPtrOutput) ToInstanceMonthlyTransferPtrOutput() InstanceMonthlyTransferPtrOutput {
	return o
}

func (o InstanceMonthlyTransferPtrOutput) ToInstanceMonthlyTransferPtrOutputWithContext(ctx context.Context) InstanceMonthlyTransferPtrOutput {
	return o
}

func (o InstanceMonthlyTransferPtrOutput) Elem() InstanceMonthlyTransferOutput {
	return o.ApplyT(func(v *InstanceMonthlyTransfer) InstanceMonthlyTransfer {
		if v != nil {
			return *v
		}
		var ret InstanceMonthlyTransfer
		return ret
	}).(InstanceMonthlyTransferOutput)
}

// GbPerMonthAllocated of the Instance.
func (o InstanceMonthlyTransferPtrOutput) GbPerMonthAllocated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceMonthlyTransfer) *string {
		if v == nil {
			return nil
		}
		return v.GbPerMonthAllocated
	}).(pulumi.StringPtrOutput)
}

// Networking of the Instance.
type InstanceNetworking struct {
	MonthlyTransfer *InstanceMonthlyTransfer `pulumi:"monthlyTransfer"`
	// Ports to the Instance.
	Ports []InstancePort `pulumi:"ports"`
}

// InstanceNetworkingInput is an input type that accepts InstanceNetworkingArgs and InstanceNetworkingOutput values.
// You can construct a concrete instance of `InstanceNetworkingInput` via:
//
//	InstanceNetworkingArgs{...}
type InstanceNetworkingInput interface {
	pulumi.Input

	ToInstanceNetworkingOutput() InstanceNetworkingOutput
	ToInstanceNetworkingOutputWithContext(context.Context) InstanceNetworkingOutput
}

// Networking of the Instance.
type InstanceNetworkingArgs struct {
	MonthlyTransfer InstanceMonthlyTransferPtrInput `pulumi:"monthlyTransfer"`
	// Ports to the Instance.
	Ports InstancePortArrayInput `pulumi:"ports"`
}

func (InstanceNetworkingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworking)(nil)).Elem()
}

func (i InstanceNetworkingArgs) ToInstanceNetworkingOutput() InstanceNetworkingOutput {
	return i.ToInstanceNetworkingOutputWithContext(context.Background())
}

func (i InstanceNetworkingArgs) ToInstanceNetworkingOutputWithContext(ctx context.Context) InstanceNetworkingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkingOutput)
}

func (i InstanceNetworkingArgs) ToInstanceNetworkingPtrOutput() InstanceNetworkingPtrOutput {
	return i.ToInstanceNetworkingPtrOutputWithContext(context.Background())
}

func (i InstanceNetworkingArgs) ToInstanceNetworkingPtrOutputWithContext(ctx context.Context) InstanceNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkingOutput).ToInstanceNetworkingPtrOutputWithContext(ctx)
}

// InstanceNetworkingPtrInput is an input type that accepts InstanceNetworkingArgs, InstanceNetworkingPtr and InstanceNetworkingPtrOutput values.
// You can construct a concrete instance of `InstanceNetworkingPtrInput` via:
//
//	        InstanceNetworkingArgs{...}
//
//	or:
//
//	        nil
type InstanceNetworkingPtrInput interface {
	pulumi.Input

	ToInstanceNetworkingPtrOutput() InstanceNetworkingPtrOutput
	ToInstanceNetworkingPtrOutputWithContext(context.Context) InstanceNetworkingPtrOutput
}

type instanceNetworkingPtrType InstanceNetworkingArgs

func InstanceNetworkingPtr(v *InstanceNetworkingArgs) InstanceNetworkingPtrInput {
	return (*instanceNetworkingPtrType)(v)
}

func (*instanceNetworkingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceNetworking)(nil)).Elem()
}

func (i *instanceNetworkingPtrType) ToInstanceNetworkingPtrOutput() InstanceNetworkingPtrOutput {
	return i.ToInstanceNetworkingPtrOutputWithContext(context.Background())
}

func (i *instanceNetworkingPtrType) ToInstanceNetworkingPtrOutputWithContext(ctx context.Context) InstanceNetworkingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNetworkingPtrOutput)
}

// Networking of the Instance.
type InstanceNetworkingOutput struct{ *pulumi.OutputState }

func (InstanceNetworkingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNetworking)(nil)).Elem()
}

func (o InstanceNetworkingOutput) ToInstanceNetworkingOutput() InstanceNetworkingOutput {
	return o
}

func (o InstanceNetworkingOutput) ToInstanceNetworkingOutputWithContext(ctx context.Context) InstanceNetworkingOutput {
	return o
}

func (o InstanceNetworkingOutput) ToInstanceNetworkingPtrOutput() InstanceNetworkingPtrOutput {
	return o.ToInstanceNetworkingPtrOutputWithContext(context.Background())
}

func (o InstanceNetworkingOutput) ToInstanceNetworkingPtrOutputWithContext(ctx context.Context) InstanceNetworkingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceNetworking) *InstanceNetworking {
		return &v
	}).(InstanceNetworkingPtrOutput)
}

func (o InstanceNetworkingOutput) MonthlyTransfer() InstanceMonthlyTransferPtrOutput {
	return o.ApplyT(func(v InstanceNetworking) *InstanceMonthlyTransfer { return v.MonthlyTransfer }).(InstanceMonthlyTransferPtrOutput)
}

// Ports to the Instance.
func (o InstanceNetworkingOutput) Ports() InstancePortArrayOutput {
	return o.ApplyT(func(v InstanceNetworking) []InstancePort { return v.Ports }).(InstancePortArrayOutput)
}

type InstanceNetworkingPtrOutput struct{ *pulumi.OutputState }

func (InstanceNetworkingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceNetworking)(nil)).Elem()
}

func (o InstanceNetworkingPtrOutput) ToInstanceNetworkingPtrOutput() InstanceNetworkingPtrOutput {
	return o
}

func (o InstanceNetworkingPtrOutput) ToInstanceNetworkingPtrOutputWithContext(ctx context.Context) InstanceNetworkingPtrOutput {
	return o
}

func (o InstanceNetworkingPtrOutput) Elem() InstanceNetworkingOutput {
	return o.ApplyT(func(v *InstanceNetworking) InstanceNetworking {
		if v != nil {
			return *v
		}
		var ret InstanceNetworking
		return ret
	}).(InstanceNetworkingOutput)
}

func (o InstanceNetworkingPtrOutput) MonthlyTransfer() InstanceMonthlyTransferPtrOutput {
	return o.ApplyT(func(v *InstanceNetworking) *InstanceMonthlyTransfer {
		if v == nil {
			return nil
		}
		return v.MonthlyTransfer
	}).(InstanceMonthlyTransferPtrOutput)
}

// Ports to the Instance.
func (o InstanceNetworkingPtrOutput) Ports() InstancePortArrayOutput {
	return o.ApplyT(func(v *InstanceNetworking) []InstancePort {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(InstancePortArrayOutput)
}

// Port of the Instance.
type InstancePort struct {
	// Access Direction for Protocol of the Instance(inbound/outbound).
	AccessDirection *string `pulumi:"accessDirection"`
	// Access From Protocol of the Instance.
	AccessFrom *string `pulumi:"accessFrom"`
	// Access Type Protocol of the Instance.
	AccessType      *string  `pulumi:"accessType"`
	CidrListAliases []string `pulumi:"cidrListAliases"`
	Cidrs           []string `pulumi:"cidrs"`
	// CommonName for Protocol of the Instance.
	CommonName *string `pulumi:"commonName"`
	// From Port of the Instance.
	FromPort  *int     `pulumi:"fromPort"`
	Ipv6Cidrs []string `pulumi:"ipv6Cidrs"`
	// Port Protocol of the Instance.
	Protocol *string `pulumi:"protocol"`
	// To Port of the Instance.
	ToPort *int `pulumi:"toPort"`
}

// InstancePortInput is an input type that accepts InstancePortArgs and InstancePortOutput values.
// You can construct a concrete instance of `InstancePortInput` via:
//
//	InstancePortArgs{...}
type InstancePortInput interface {
	pulumi.Input

	ToInstancePortOutput() InstancePortOutput
	ToInstancePortOutputWithContext(context.Context) InstancePortOutput
}

// Port of the Instance.
type InstancePortArgs struct {
	// Access Direction for Protocol of the Instance(inbound/outbound).
	AccessDirection pulumi.StringPtrInput `pulumi:"accessDirection"`
	// Access From Protocol of the Instance.
	AccessFrom pulumi.StringPtrInput `pulumi:"accessFrom"`
	// Access Type Protocol of the Instance.
	AccessType      pulumi.StringPtrInput   `pulumi:"accessType"`
	CidrListAliases pulumi.StringArrayInput `pulumi:"cidrListAliases"`
	Cidrs           pulumi.StringArrayInput `pulumi:"cidrs"`
	// CommonName for Protocol of the Instance.
	CommonName pulumi.StringPtrInput `pulumi:"commonName"`
	// From Port of the Instance.
	FromPort  pulumi.IntPtrInput      `pulumi:"fromPort"`
	Ipv6Cidrs pulumi.StringArrayInput `pulumi:"ipv6Cidrs"`
	// Port Protocol of the Instance.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// To Port of the Instance.
	ToPort pulumi.IntPtrInput `pulumi:"toPort"`
}

func (InstancePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePort)(nil)).Elem()
}

func (i InstancePortArgs) ToInstancePortOutput() InstancePortOutput {
	return i.ToInstancePortOutputWithContext(context.Background())
}

func (i InstancePortArgs) ToInstancePortOutputWithContext(ctx context.Context) InstancePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePortOutput)
}

// InstancePortArrayInput is an input type that accepts InstancePortArray and InstancePortArrayOutput values.
// You can construct a concrete instance of `InstancePortArrayInput` via:
//
//	InstancePortArray{ InstancePortArgs{...} }
type InstancePortArrayInput interface {
	pulumi.Input

	ToInstancePortArrayOutput() InstancePortArrayOutput
	ToInstancePortArrayOutputWithContext(context.Context) InstancePortArrayOutput
}

type InstancePortArray []InstancePortInput

func (InstancePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePort)(nil)).Elem()
}

func (i InstancePortArray) ToInstancePortArrayOutput() InstancePortArrayOutput {
	return i.ToInstancePortArrayOutputWithContext(context.Background())
}

func (i InstancePortArray) ToInstancePortArrayOutputWithContext(ctx context.Context) InstancePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePortArrayOutput)
}

// Port of the Instance.
type InstancePortOutput struct{ *pulumi.OutputState }

func (InstancePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePort)(nil)).Elem()
}

func (o InstancePortOutput) ToInstancePortOutput() InstancePortOutput {
	return o
}

func (o InstancePortOutput) ToInstancePortOutputWithContext(ctx context.Context) InstancePortOutput {
	return o
}

// Access Direction for Protocol of the Instance(inbound/outbound).
func (o InstancePortOutput) AccessDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePort) *string { return v.AccessDirection }).(pulumi.StringPtrOutput)
}

// Access From Protocol of the Instance.
func (o InstancePortOutput) AccessFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePort) *string { return v.AccessFrom }).(pulumi.StringPtrOutput)
}

// Access Type Protocol of the Instance.
func (o InstancePortOutput) AccessType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePort) *string { return v.AccessType }).(pulumi.StringPtrOutput)
}

func (o InstancePortOutput) CidrListAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancePort) []string { return v.CidrListAliases }).(pulumi.StringArrayOutput)
}

func (o InstancePortOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancePort) []string { return v.Cidrs }).(pulumi.StringArrayOutput)
}

// CommonName for Protocol of the Instance.
func (o InstancePortOutput) CommonName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePort) *string { return v.CommonName }).(pulumi.StringPtrOutput)
}

// From Port of the Instance.
func (o InstancePortOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstancePort) *int { return v.FromPort }).(pulumi.IntPtrOutput)
}

func (o InstancePortOutput) Ipv6Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancePort) []string { return v.Ipv6Cidrs }).(pulumi.StringArrayOutput)
}

// Port Protocol of the Instance.
func (o InstancePortOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstancePort) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// To Port of the Instance.
func (o InstancePortOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstancePort) *int { return v.ToPort }).(pulumi.IntPtrOutput)
}

type InstancePortArrayOutput struct{ *pulumi.OutputState }

func (InstancePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePort)(nil)).Elem()
}

func (o InstancePortArrayOutput) ToInstancePortArrayOutput() InstancePortArrayOutput {
	return o
}

func (o InstancePortArrayOutput) ToInstancePortArrayOutputWithContext(ctx context.Context) InstancePortArrayOutput {
	return o
}

func (o InstancePortArrayOutput) Index(i pulumi.IntInput) InstancePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancePort {
		return vs[0].([]InstancePort)[vs[1].(int)]
	}).(InstancePortOutput)
}

// Current State of the Instance.
type InstanceStateType struct {
	// Status code of the Instance.
	Code *int `pulumi:"code"`
	// Status code of the Instance.
	Name *string `pulumi:"name"`
}

// InstanceStateTypeInput is an input type that accepts InstanceStateTypeArgs and InstanceStateTypeOutput values.
// You can construct a concrete instance of `InstanceStateTypeInput` via:
//
//	InstanceStateTypeArgs{...}
type InstanceStateTypeInput interface {
	pulumi.Input

	ToInstanceStateTypeOutput() InstanceStateTypeOutput
	ToInstanceStateTypeOutputWithContext(context.Context) InstanceStateTypeOutput
}

// Current State of the Instance.
type InstanceStateTypeArgs struct {
	// Status code of the Instance.
	Code pulumi.IntPtrInput `pulumi:"code"`
	// Status code of the Instance.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InstanceStateTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStateType)(nil)).Elem()
}

func (i InstanceStateTypeArgs) ToInstanceStateTypeOutput() InstanceStateTypeOutput {
	return i.ToInstanceStateTypeOutputWithContext(context.Background())
}

func (i InstanceStateTypeArgs) ToInstanceStateTypeOutputWithContext(ctx context.Context) InstanceStateTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStateTypeOutput)
}

func (i InstanceStateTypeArgs) ToInstanceStateTypePtrOutput() InstanceStateTypePtrOutput {
	return i.ToInstanceStateTypePtrOutputWithContext(context.Background())
}

func (i InstanceStateTypeArgs) ToInstanceStateTypePtrOutputWithContext(ctx context.Context) InstanceStateTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStateTypeOutput).ToInstanceStateTypePtrOutputWithContext(ctx)
}

// InstanceStateTypePtrInput is an input type that accepts InstanceStateTypeArgs, InstanceStateTypePtr and InstanceStateTypePtrOutput values.
// You can construct a concrete instance of `InstanceStateTypePtrInput` via:
//
//	        InstanceStateTypeArgs{...}
//
//	or:
//
//	        nil
type InstanceStateTypePtrInput interface {
	pulumi.Input

	ToInstanceStateTypePtrOutput() InstanceStateTypePtrOutput
	ToInstanceStateTypePtrOutputWithContext(context.Context) InstanceStateTypePtrOutput
}

type instanceStateTypePtrType InstanceStateTypeArgs

func InstanceStateTypePtr(v *InstanceStateTypeArgs) InstanceStateTypePtrInput {
	return (*instanceStateTypePtrType)(v)
}

func (*instanceStateTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStateType)(nil)).Elem()
}

func (i *instanceStateTypePtrType) ToInstanceStateTypePtrOutput() InstanceStateTypePtrOutput {
	return i.ToInstanceStateTypePtrOutputWithContext(context.Background())
}

func (i *instanceStateTypePtrType) ToInstanceStateTypePtrOutputWithContext(ctx context.Context) InstanceStateTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceStateTypePtrOutput)
}

// Current State of the Instance.
type InstanceStateTypeOutput struct{ *pulumi.OutputState }

func (InstanceStateTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceStateType)(nil)).Elem()
}

func (o InstanceStateTypeOutput) ToInstanceStateTypeOutput() InstanceStateTypeOutput {
	return o
}

func (o InstanceStateTypeOutput) ToInstanceStateTypeOutputWithContext(ctx context.Context) InstanceStateTypeOutput {
	return o
}

func (o InstanceStateTypeOutput) ToInstanceStateTypePtrOutput() InstanceStateTypePtrOutput {
	return o.ToInstanceStateTypePtrOutputWithContext(context.Background())
}

func (o InstanceStateTypeOutput) ToInstanceStateTypePtrOutputWithContext(ctx context.Context) InstanceStateTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceStateType) *InstanceStateType {
		return &v
	}).(InstanceStateTypePtrOutput)
}

// Status code of the Instance.
func (o InstanceStateTypeOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceStateType) *int { return v.Code }).(pulumi.IntPtrOutput)
}

// Status code of the Instance.
func (o InstanceStateTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceStateType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InstanceStateTypePtrOutput struct{ *pulumi.OutputState }

func (InstanceStateTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceStateType)(nil)).Elem()
}

func (o InstanceStateTypePtrOutput) ToInstanceStateTypePtrOutput() InstanceStateTypePtrOutput {
	return o
}

func (o InstanceStateTypePtrOutput) ToInstanceStateTypePtrOutputWithContext(ctx context.Context) InstanceStateTypePtrOutput {
	return o
}

func (o InstanceStateTypePtrOutput) Elem() InstanceStateTypeOutput {
	return o.ApplyT(func(v *InstanceStateType) InstanceStateType {
		if v != nil {
			return *v
		}
		var ret InstanceStateType
		return ret
	}).(InstanceStateTypeOutput)
}

// Status code of the Instance.
func (o InstanceStateTypePtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceStateType) *int {
		if v == nil {
			return nil
		}
		return v.Code
	}).(pulumi.IntPtrOutput)
}

// Status code of the Instance.
func (o InstanceStateTypePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceStateType) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type InstanceTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type LoadBalancerTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAccessRulesInput)(nil)).Elem(), BucketAccessRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAccessRulesPtrInput)(nil)).Elem(), BucketAccessRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerTypeInput)(nil)).Elem(), ContainerTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerTypeArrayInput)(nil)).Elem(), ContainerTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerEnvironmentVariableInput)(nil)).Elem(), ContainerEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerEnvironmentVariableArrayInput)(nil)).Elem(), ContainerEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthCheckConfigInput)(nil)).Elem(), ContainerHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerHealthCheckConfigPtrInput)(nil)).Elem(), ContainerHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerPortInfoInput)(nil)).Elem(), ContainerPortInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerPortInfoArrayInput)(nil)).Elem(), ContainerPortInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerPrivateRegistryAccessInput)(nil)).Elem(), ContainerPrivateRegistryAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerPrivateRegistryAccessPtrInput)(nil)).Elem(), ContainerPrivateRegistryAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesInput)(nil)).Elem(), ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrInput)(nil)).Elem(), ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerPublicDomainNameInput)(nil)).Elem(), ContainerPublicDomainNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerPublicDomainNameArrayInput)(nil)).Elem(), ContainerPublicDomainNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerPublicEndpointInput)(nil)).Elem(), ContainerPublicEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerPublicEndpointPtrInput)(nil)).Elem(), ContainerPublicEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServiceDeploymentInput)(nil)).Elem(), ContainerServiceDeploymentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServiceDeploymentPtrInput)(nil)).Elem(), ContainerServiceDeploymentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseRelationalDatabaseParameterInput)(nil)).Elem(), DatabaseRelationalDatabaseParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseRelationalDatabaseParameterArrayInput)(nil)).Elem(), DatabaseRelationalDatabaseParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiskAddOnInput)(nil)).Elem(), DiskAddOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiskAddOnArrayInput)(nil)).Elem(), DiskAddOnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiskAutoSnapshotAddOnInput)(nil)).Elem(), DiskAutoSnapshotAddOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiskAutoSnapshotAddOnPtrInput)(nil)).Elem(), DiskAutoSnapshotAddOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiskLocationInput)(nil)).Elem(), DiskLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiskLocationPtrInput)(nil)).Elem(), DiskLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorInput)(nil)).Elem(), DistributionCacheBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorPerPathInput)(nil)).Elem(), DistributionCacheBehaviorPerPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorPerPathArrayInput)(nil)).Elem(), DistributionCacheBehaviorPerPathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheSettingsInput)(nil)).Elem(), DistributionCacheSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheSettingsPtrInput)(nil)).Elem(), DistributionCacheSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCookieObjectInput)(nil)).Elem(), DistributionCookieObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCookieObjectPtrInput)(nil)).Elem(), DistributionCookieObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionHeaderObjectInput)(nil)).Elem(), DistributionHeaderObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionHeaderObjectPtrInput)(nil)).Elem(), DistributionHeaderObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionInputOriginInput)(nil)).Elem(), DistributionInputOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionQueryStringObjectInput)(nil)).Elem(), DistributionQueryStringObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionQueryStringObjectPtrInput)(nil)).Elem(), DistributionQueryStringObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAddOnInput)(nil)).Elem(), InstanceAddOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAddOnArrayInput)(nil)).Elem(), InstanceAddOnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAutoSnapshotAddOnInput)(nil)).Elem(), InstanceAutoSnapshotAddOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAutoSnapshotAddOnPtrInput)(nil)).Elem(), InstanceAutoSnapshotAddOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDiskInput)(nil)).Elem(), InstanceDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceDiskArrayInput)(nil)).Elem(), InstanceDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceHardwareInput)(nil)).Elem(), InstanceHardwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceHardwarePtrInput)(nil)).Elem(), InstanceHardwareArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceLocationInput)(nil)).Elem(), InstanceLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceLocationPtrInput)(nil)).Elem(), InstanceLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMonthlyTransferInput)(nil)).Elem(), InstanceMonthlyTransferArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMonthlyTransferPtrInput)(nil)).Elem(), InstanceMonthlyTransferArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNetworkingInput)(nil)).Elem(), InstanceNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNetworkingPtrInput)(nil)).Elem(), InstanceNetworkingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePortInput)(nil)).Elem(), InstancePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePortArrayInput)(nil)).Elem(), InstancePortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStateTypeInput)(nil)).Elem(), InstanceStateTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceStateTypePtrInput)(nil)).Elem(), InstanceStateTypeArgs{})
	pulumi.RegisterOutputType(BucketAccessRulesOutput{})
	pulumi.RegisterOutputType(BucketAccessRulesPtrOutput{})
	pulumi.RegisterOutputType(ContainerTypeOutput{})
	pulumi.RegisterOutputType(ContainerTypeArrayOutput{})
	pulumi.RegisterOutputType(ContainerEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ContainerEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ContainerHealthCheckConfigOutput{})
	pulumi.RegisterOutputType(ContainerHealthCheckConfigPtrOutput{})
	pulumi.RegisterOutputType(ContainerPortInfoOutput{})
	pulumi.RegisterOutputType(ContainerPortInfoArrayOutput{})
	pulumi.RegisterOutputType(ContainerPrivateRegistryAccessOutput{})
	pulumi.RegisterOutputType(ContainerPrivateRegistryAccessPtrOutput{})
	pulumi.RegisterOutputType(ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesOutput{})
	pulumi.RegisterOutputType(ContainerPrivateRegistryAccessEcrImagePullerRolePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ContainerPublicDomainNameOutput{})
	pulumi.RegisterOutputType(ContainerPublicDomainNameArrayOutput{})
	pulumi.RegisterOutputType(ContainerPublicEndpointOutput{})
	pulumi.RegisterOutputType(ContainerPublicEndpointPtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceDeploymentOutput{})
	pulumi.RegisterOutputType(ContainerServiceDeploymentPtrOutput{})
	pulumi.RegisterOutputType(DatabaseRelationalDatabaseParameterOutput{})
	pulumi.RegisterOutputType(DatabaseRelationalDatabaseParameterArrayOutput{})
	pulumi.RegisterOutputType(DiskAddOnOutput{})
	pulumi.RegisterOutputType(DiskAddOnArrayOutput{})
	pulumi.RegisterOutputType(DiskAutoSnapshotAddOnOutput{})
	pulumi.RegisterOutputType(DiskAutoSnapshotAddOnPtrOutput{})
	pulumi.RegisterOutputType(DiskLocationOutput{})
	pulumi.RegisterOutputType(DiskLocationPtrOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorPtrOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorPerPathOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorPerPathArrayOutput{})
	pulumi.RegisterOutputType(DistributionCacheSettingsOutput{})
	pulumi.RegisterOutputType(DistributionCacheSettingsPtrOutput{})
	pulumi.RegisterOutputType(DistributionCookieObjectOutput{})
	pulumi.RegisterOutputType(DistributionCookieObjectPtrOutput{})
	pulumi.RegisterOutputType(DistributionHeaderObjectOutput{})
	pulumi.RegisterOutputType(DistributionHeaderObjectPtrOutput{})
	pulumi.RegisterOutputType(DistributionInputOriginOutput{})
	pulumi.RegisterOutputType(DistributionInputOriginPtrOutput{})
	pulumi.RegisterOutputType(DistributionQueryStringObjectOutput{})
	pulumi.RegisterOutputType(DistributionQueryStringObjectPtrOutput{})
	pulumi.RegisterOutputType(InstanceAddOnOutput{})
	pulumi.RegisterOutputType(InstanceAddOnArrayOutput{})
	pulumi.RegisterOutputType(InstanceAutoSnapshotAddOnOutput{})
	pulumi.RegisterOutputType(InstanceAutoSnapshotAddOnPtrOutput{})
	pulumi.RegisterOutputType(InstanceDiskOutput{})
	pulumi.RegisterOutputType(InstanceDiskArrayOutput{})
	pulumi.RegisterOutputType(InstanceHardwareOutput{})
	pulumi.RegisterOutputType(InstanceHardwarePtrOutput{})
	pulumi.RegisterOutputType(InstanceLocationOutput{})
	pulumi.RegisterOutputType(InstanceLocationPtrOutput{})
	pulumi.RegisterOutputType(InstanceMonthlyTransferOutput{})
	pulumi.RegisterOutputType(InstanceMonthlyTransferPtrOutput{})
	pulumi.RegisterOutputType(InstanceNetworkingOutput{})
	pulumi.RegisterOutputType(InstanceNetworkingPtrOutput{})
	pulumi.RegisterOutputType(InstancePortOutput{})
	pulumi.RegisterOutputType(InstancePortArrayOutput{})
	pulumi.RegisterOutputType(InstanceStateTypeOutput{})
	pulumi.RegisterOutputType(InstanceStateTypePtrOutput{})
}
