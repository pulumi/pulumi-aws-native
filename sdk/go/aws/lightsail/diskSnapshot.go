// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Lightsail::DiskSnapshot
type DiskSnapshot struct {
	pulumi.CustomResourceState

	// The timestamp when the disk snapshot was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The name of the source disk from which the snapshot was created.
	DiskName pulumi.StringOutput `pulumi:"diskName"`
	// The Amazon Resource Name (ARN) of the disk snapshot.
	DiskSnapshotArn pulumi.StringOutput `pulumi:"diskSnapshotArn"`
	// The name of the disk snapshot (e.g., my-disk-snapshot).
	DiskSnapshotName pulumi.StringOutput `pulumi:"diskSnapshotName"`
	// The name of the source disk from which the disk snapshot was created.
	FromDiskName pulumi.StringOutput `pulumi:"fromDiskName"`
	// A Boolean value indicating whether the snapshot was created from an automatic snapshot.
	IsFromAutoSnapshot pulumi.BoolOutput `pulumi:"isFromAutoSnapshot"`
	// The AWS Region and Availability Zone where the disk snapshot was created.
	Location LocationPropertiesOutput `pulumi:"location"`
	// The progress of the disk snapshot creation operation.
	Progress pulumi.StringOutput `pulumi:"progress"`
	// The Lightsail resource type (DiskSnapshot).
	ResourceType DiskSnapshotResourceTypeOutput `pulumi:"resourceType"`
	// The size of the disk snapshot in GB.
	SizeInGb pulumi.IntOutput `pulumi:"sizeInGb"`
	// The status of the disk snapshot operation.
	State DiskSnapshotStateEnumOutput `pulumi:"state"`
	// The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail.
	SupportCode pulumi.StringOutput `pulumi:"supportCode"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewDiskSnapshot registers a new resource with the given unique name, arguments, and options.
func NewDiskSnapshot(ctx *pulumi.Context,
	name string, args *DiskSnapshotArgs, opts ...pulumi.ResourceOption) (*DiskSnapshot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DiskName == nil {
		return nil, errors.New("invalid value for required argument 'DiskName'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"diskName",
		"diskSnapshotName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DiskSnapshot
	err := ctx.RegisterResource("aws-native:lightsail:DiskSnapshot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDiskSnapshot gets an existing DiskSnapshot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDiskSnapshot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiskSnapshotState, opts ...pulumi.ResourceOption) (*DiskSnapshot, error) {
	var resource DiskSnapshot
	err := ctx.ReadResource("aws-native:lightsail:DiskSnapshot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DiskSnapshot resources.
type diskSnapshotState struct {
}

type DiskSnapshotState struct {
}

func (DiskSnapshotState) ElementType() reflect.Type {
	return reflect.TypeOf((*diskSnapshotState)(nil)).Elem()
}

type diskSnapshotArgs struct {
	// The name of the source disk from which the snapshot was created.
	DiskName string `pulumi:"diskName"`
	// The name of the disk snapshot (e.g., my-disk-snapshot).
	DiskSnapshotName *string `pulumi:"diskSnapshotName"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a DiskSnapshot resource.
type DiskSnapshotArgs struct {
	// The name of the source disk from which the snapshot was created.
	DiskName pulumi.StringInput
	// The name of the disk snapshot (e.g., my-disk-snapshot).
	DiskSnapshotName pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
}

func (DiskSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*diskSnapshotArgs)(nil)).Elem()
}

type DiskSnapshotInput interface {
	pulumi.Input

	ToDiskSnapshotOutput() DiskSnapshotOutput
	ToDiskSnapshotOutputWithContext(ctx context.Context) DiskSnapshotOutput
}

func (*DiskSnapshot) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskSnapshot)(nil)).Elem()
}

func (i *DiskSnapshot) ToDiskSnapshotOutput() DiskSnapshotOutput {
	return i.ToDiskSnapshotOutputWithContext(context.Background())
}

func (i *DiskSnapshot) ToDiskSnapshotOutputWithContext(ctx context.Context) DiskSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiskSnapshotOutput)
}

type DiskSnapshotOutput struct{ *pulumi.OutputState }

func (DiskSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiskSnapshot)(nil)).Elem()
}

func (o DiskSnapshotOutput) ToDiskSnapshotOutput() DiskSnapshotOutput {
	return o
}

func (o DiskSnapshotOutput) ToDiskSnapshotOutputWithContext(ctx context.Context) DiskSnapshotOutput {
	return o
}

// The timestamp when the disk snapshot was created.
func (o DiskSnapshotOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskSnapshot) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The name of the source disk from which the snapshot was created.
func (o DiskSnapshotOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskSnapshot) pulumi.StringOutput { return v.DiskName }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the disk snapshot.
func (o DiskSnapshotOutput) DiskSnapshotArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskSnapshot) pulumi.StringOutput { return v.DiskSnapshotArn }).(pulumi.StringOutput)
}

// The name of the disk snapshot (e.g., my-disk-snapshot).
func (o DiskSnapshotOutput) DiskSnapshotName() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskSnapshot) pulumi.StringOutput { return v.DiskSnapshotName }).(pulumi.StringOutput)
}

// The name of the source disk from which the disk snapshot was created.
func (o DiskSnapshotOutput) FromDiskName() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskSnapshot) pulumi.StringOutput { return v.FromDiskName }).(pulumi.StringOutput)
}

// A Boolean value indicating whether the snapshot was created from an automatic snapshot.
func (o DiskSnapshotOutput) IsFromAutoSnapshot() pulumi.BoolOutput {
	return o.ApplyT(func(v *DiskSnapshot) pulumi.BoolOutput { return v.IsFromAutoSnapshot }).(pulumi.BoolOutput)
}

// The AWS Region and Availability Zone where the disk snapshot was created.
func (o DiskSnapshotOutput) Location() LocationPropertiesOutput {
	return o.ApplyT(func(v *DiskSnapshot) LocationPropertiesOutput { return v.Location }).(LocationPropertiesOutput)
}

// The progress of the disk snapshot creation operation.
func (o DiskSnapshotOutput) Progress() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskSnapshot) pulumi.StringOutput { return v.Progress }).(pulumi.StringOutput)
}

// The Lightsail resource type (DiskSnapshot).
func (o DiskSnapshotOutput) ResourceType() DiskSnapshotResourceTypeOutput {
	return o.ApplyT(func(v *DiskSnapshot) DiskSnapshotResourceTypeOutput { return v.ResourceType }).(DiskSnapshotResourceTypeOutput)
}

// The size of the disk snapshot in GB.
func (o DiskSnapshotOutput) SizeInGb() pulumi.IntOutput {
	return o.ApplyT(func(v *DiskSnapshot) pulumi.IntOutput { return v.SizeInGb }).(pulumi.IntOutput)
}

// The status of the disk snapshot operation.
func (o DiskSnapshotOutput) State() DiskSnapshotStateEnumOutput {
	return o.ApplyT(func(v *DiskSnapshot) DiskSnapshotStateEnumOutput { return v.State }).(DiskSnapshotStateEnumOutput)
}

// The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail.
func (o DiskSnapshotOutput) SupportCode() pulumi.StringOutput {
	return o.ApplyT(func(v *DiskSnapshot) pulumi.StringOutput { return v.SupportCode }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to this resource.
func (o DiskSnapshotOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *DiskSnapshot) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DiskSnapshotInput)(nil)).Elem(), &DiskSnapshot{})
	pulumi.RegisterOutputType(DiskSnapshotOutput{})
}
