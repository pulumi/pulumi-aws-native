// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Lightsail::DiskSnapshot
func LookupDiskSnapshot(ctx *pulumi.Context, args *LookupDiskSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupDiskSnapshotResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDiskSnapshotResult
	err := ctx.Invoke("aws-native:lightsail:getDiskSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDiskSnapshotArgs struct {
	// The name of the disk snapshot (e.g., my-disk-snapshot).
	DiskSnapshotName string `pulumi:"diskSnapshotName"`
}

type LookupDiskSnapshotResult struct {
	// The timestamp when the disk snapshot was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The Amazon Resource Name (ARN) of the disk snapshot.
	DiskSnapshotArn *string `pulumi:"diskSnapshotArn"`
	// The name of the source disk from which the disk snapshot was created.
	FromDiskName *string `pulumi:"fromDiskName"`
	// A Boolean value indicating whether the snapshot was created from an automatic snapshot.
	IsFromAutoSnapshot *bool `pulumi:"isFromAutoSnapshot"`
	// The AWS Region and Availability Zone where the disk snapshot was created.
	Location *LocationProperties `pulumi:"location"`
	// The progress of the disk snapshot creation operation.
	Progress *string `pulumi:"progress"`
	// The Lightsail resource type (DiskSnapshot).
	ResourceType *DiskSnapshotResourceType `pulumi:"resourceType"`
	// The size of the disk snapshot in GB.
	SizeInGb *int `pulumi:"sizeInGb"`
	// The status of the disk snapshot operation.
	State *DiskSnapshotStateEnum `pulumi:"state"`
	// The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail.
	SupportCode *string `pulumi:"supportCode"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDiskSnapshotOutput(ctx *pulumi.Context, args LookupDiskSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupDiskSnapshotResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDiskSnapshotResultOutput, error) {
			args := v.(LookupDiskSnapshotArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:lightsail:getDiskSnapshot", args, LookupDiskSnapshotResultOutput{}, options).(LookupDiskSnapshotResultOutput), nil
		}).(LookupDiskSnapshotResultOutput)
}

type LookupDiskSnapshotOutputArgs struct {
	// The name of the disk snapshot (e.g., my-disk-snapshot).
	DiskSnapshotName pulumi.StringInput `pulumi:"diskSnapshotName"`
}

func (LookupDiskSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiskSnapshotArgs)(nil)).Elem()
}

type LookupDiskSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupDiskSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDiskSnapshotResult)(nil)).Elem()
}

func (o LookupDiskSnapshotResultOutput) ToLookupDiskSnapshotResultOutput() LookupDiskSnapshotResultOutput {
	return o
}

func (o LookupDiskSnapshotResultOutput) ToLookupDiskSnapshotResultOutputWithContext(ctx context.Context) LookupDiskSnapshotResultOutput {
	return o
}

// The timestamp when the disk snapshot was created.
func (o LookupDiskSnapshotResultOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiskSnapshotResult) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the disk snapshot.
func (o LookupDiskSnapshotResultOutput) DiskSnapshotArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiskSnapshotResult) *string { return v.DiskSnapshotArn }).(pulumi.StringPtrOutput)
}

// The name of the source disk from which the disk snapshot was created.
func (o LookupDiskSnapshotResultOutput) FromDiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiskSnapshotResult) *string { return v.FromDiskName }).(pulumi.StringPtrOutput)
}

// A Boolean value indicating whether the snapshot was created from an automatic snapshot.
func (o LookupDiskSnapshotResultOutput) IsFromAutoSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupDiskSnapshotResult) *bool { return v.IsFromAutoSnapshot }).(pulumi.BoolPtrOutput)
}

// The AWS Region and Availability Zone where the disk snapshot was created.
func (o LookupDiskSnapshotResultOutput) Location() LocationPropertiesPtrOutput {
	return o.ApplyT(func(v LookupDiskSnapshotResult) *LocationProperties { return v.Location }).(LocationPropertiesPtrOutput)
}

// The progress of the disk snapshot creation operation.
func (o LookupDiskSnapshotResultOutput) Progress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiskSnapshotResult) *string { return v.Progress }).(pulumi.StringPtrOutput)
}

// The Lightsail resource type (DiskSnapshot).
func (o LookupDiskSnapshotResultOutput) ResourceType() DiskSnapshotResourceTypePtrOutput {
	return o.ApplyT(func(v LookupDiskSnapshotResult) *DiskSnapshotResourceType { return v.ResourceType }).(DiskSnapshotResourceTypePtrOutput)
}

// The size of the disk snapshot in GB.
func (o LookupDiskSnapshotResultOutput) SizeInGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupDiskSnapshotResult) *int { return v.SizeInGb }).(pulumi.IntPtrOutput)
}

// The status of the disk snapshot operation.
func (o LookupDiskSnapshotResultOutput) State() DiskSnapshotStateEnumPtrOutput {
	return o.ApplyT(func(v LookupDiskSnapshotResult) *DiskSnapshotStateEnum { return v.State }).(DiskSnapshotStateEnumPtrOutput)
}

// The support code. Include this code in your email to support when you have questions about an instance or another resource in Lightsail.
func (o LookupDiskSnapshotResultOutput) SupportCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDiskSnapshotResult) *string { return v.SupportCode }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupDiskSnapshotResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDiskSnapshotResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDiskSnapshotResultOutput{})
}
