// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitylake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SubscriberAccessTypesItem string

const (
	SubscriberAccessTypesItemLakeformation = SubscriberAccessTypesItem("LAKEFORMATION")
	SubscriberAccessTypesItemS3            = SubscriberAccessTypesItem("S3")
)

func (SubscriberAccessTypesItem) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberAccessTypesItem)(nil)).Elem()
}

func (e SubscriberAccessTypesItem) ToSubscriberAccessTypesItemOutput() SubscriberAccessTypesItemOutput {
	return pulumi.ToOutput(e).(SubscriberAccessTypesItemOutput)
}

func (e SubscriberAccessTypesItem) ToSubscriberAccessTypesItemOutputWithContext(ctx context.Context) SubscriberAccessTypesItemOutput {
	return pulumi.ToOutputWithContext(ctx, e).(SubscriberAccessTypesItemOutput)
}

func (e SubscriberAccessTypesItem) ToSubscriberAccessTypesItemPtrOutput() SubscriberAccessTypesItemPtrOutput {
	return e.ToSubscriberAccessTypesItemPtrOutputWithContext(context.Background())
}

func (e SubscriberAccessTypesItem) ToSubscriberAccessTypesItemPtrOutputWithContext(ctx context.Context) SubscriberAccessTypesItemPtrOutput {
	return SubscriberAccessTypesItem(e).ToSubscriberAccessTypesItemOutputWithContext(ctx).ToSubscriberAccessTypesItemPtrOutputWithContext(ctx)
}

func (e SubscriberAccessTypesItem) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriberAccessTypesItem) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e SubscriberAccessTypesItem) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e SubscriberAccessTypesItem) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type SubscriberAccessTypesItemOutput struct{ *pulumi.OutputState }

func (SubscriberAccessTypesItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberAccessTypesItem)(nil)).Elem()
}

func (o SubscriberAccessTypesItemOutput) ToSubscriberAccessTypesItemOutput() SubscriberAccessTypesItemOutput {
	return o
}

func (o SubscriberAccessTypesItemOutput) ToSubscriberAccessTypesItemOutputWithContext(ctx context.Context) SubscriberAccessTypesItemOutput {
	return o
}

func (o SubscriberAccessTypesItemOutput) ToSubscriberAccessTypesItemPtrOutput() SubscriberAccessTypesItemPtrOutput {
	return o.ToSubscriberAccessTypesItemPtrOutputWithContext(context.Background())
}

func (o SubscriberAccessTypesItemOutput) ToSubscriberAccessTypesItemPtrOutputWithContext(ctx context.Context) SubscriberAccessTypesItemPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriberAccessTypesItem) *SubscriberAccessTypesItem {
		return &v
	}).(SubscriberAccessTypesItemPtrOutput)
}

func (o SubscriberAccessTypesItemOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o SubscriberAccessTypesItemOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriberAccessTypesItem) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o SubscriberAccessTypesItemOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriberAccessTypesItemOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e SubscriberAccessTypesItem) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type SubscriberAccessTypesItemPtrOutput struct{ *pulumi.OutputState }

func (SubscriberAccessTypesItemPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberAccessTypesItem)(nil)).Elem()
}

func (o SubscriberAccessTypesItemPtrOutput) ToSubscriberAccessTypesItemPtrOutput() SubscriberAccessTypesItemPtrOutput {
	return o
}

func (o SubscriberAccessTypesItemPtrOutput) ToSubscriberAccessTypesItemPtrOutputWithContext(ctx context.Context) SubscriberAccessTypesItemPtrOutput {
	return o
}

func (o SubscriberAccessTypesItemPtrOutput) Elem() SubscriberAccessTypesItemOutput {
	return o.ApplyT(func(v *SubscriberAccessTypesItem) SubscriberAccessTypesItem {
		if v != nil {
			return *v
		}
		var ret SubscriberAccessTypesItem
		return ret
	}).(SubscriberAccessTypesItemOutput)
}

func (o SubscriberAccessTypesItemPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o SubscriberAccessTypesItemPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *SubscriberAccessTypesItem) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// SubscriberAccessTypesItemInput is an input type that accepts values of the SubscriberAccessTypesItem enum
// A concrete instance of `SubscriberAccessTypesItemInput` can be one of the following:
//
//	SubscriberAccessTypesItemLakeformation
//	SubscriberAccessTypesItemS3
type SubscriberAccessTypesItemInput interface {
	pulumi.Input

	ToSubscriberAccessTypesItemOutput() SubscriberAccessTypesItemOutput
	ToSubscriberAccessTypesItemOutputWithContext(context.Context) SubscriberAccessTypesItemOutput
}

var subscriberAccessTypesItemPtrType = reflect.TypeOf((**SubscriberAccessTypesItem)(nil)).Elem()

type SubscriberAccessTypesItemPtrInput interface {
	pulumi.Input

	ToSubscriberAccessTypesItemPtrOutput() SubscriberAccessTypesItemPtrOutput
	ToSubscriberAccessTypesItemPtrOutputWithContext(context.Context) SubscriberAccessTypesItemPtrOutput
}

type subscriberAccessTypesItemPtr string

func SubscriberAccessTypesItemPtr(v string) SubscriberAccessTypesItemPtrInput {
	return (*subscriberAccessTypesItemPtr)(&v)
}

func (*subscriberAccessTypesItemPtr) ElementType() reflect.Type {
	return subscriberAccessTypesItemPtrType
}

func (in *subscriberAccessTypesItemPtr) ToSubscriberAccessTypesItemPtrOutput() SubscriberAccessTypesItemPtrOutput {
	return pulumi.ToOutput(in).(SubscriberAccessTypesItemPtrOutput)
}

func (in *subscriberAccessTypesItemPtr) ToSubscriberAccessTypesItemPtrOutputWithContext(ctx context.Context) SubscriberAccessTypesItemPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(SubscriberAccessTypesItemPtrOutput)
}

// SubscriberAccessTypesItemArrayInput is an input type that accepts SubscriberAccessTypesItemArray and SubscriberAccessTypesItemArrayOutput values.
// You can construct a concrete instance of `SubscriberAccessTypesItemArrayInput` via:
//
//	SubscriberAccessTypesItemArray{ SubscriberAccessTypesItemArgs{...} }
type SubscriberAccessTypesItemArrayInput interface {
	pulumi.Input

	ToSubscriberAccessTypesItemArrayOutput() SubscriberAccessTypesItemArrayOutput
	ToSubscriberAccessTypesItemArrayOutputWithContext(context.Context) SubscriberAccessTypesItemArrayOutput
}

type SubscriberAccessTypesItemArray []SubscriberAccessTypesItem

func (SubscriberAccessTypesItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriberAccessTypesItem)(nil)).Elem()
}

func (i SubscriberAccessTypesItemArray) ToSubscriberAccessTypesItemArrayOutput() SubscriberAccessTypesItemArrayOutput {
	return i.ToSubscriberAccessTypesItemArrayOutputWithContext(context.Background())
}

func (i SubscriberAccessTypesItemArray) ToSubscriberAccessTypesItemArrayOutputWithContext(ctx context.Context) SubscriberAccessTypesItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberAccessTypesItemArrayOutput)
}

type SubscriberAccessTypesItemArrayOutput struct{ *pulumi.OutputState }

func (SubscriberAccessTypesItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriberAccessTypesItem)(nil)).Elem()
}

func (o SubscriberAccessTypesItemArrayOutput) ToSubscriberAccessTypesItemArrayOutput() SubscriberAccessTypesItemArrayOutput {
	return o
}

func (o SubscriberAccessTypesItemArrayOutput) ToSubscriberAccessTypesItemArrayOutputWithContext(ctx context.Context) SubscriberAccessTypesItemArrayOutput {
	return o
}

func (o SubscriberAccessTypesItemArrayOutput) Index(i pulumi.IntInput) SubscriberAccessTypesItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriberAccessTypesItem {
		return vs[0].([]SubscriberAccessTypesItem)[vs[1].(int)]
	}).(SubscriberAccessTypesItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberAccessTypesItemInput)(nil)).Elem(), SubscriberAccessTypesItem("LAKEFORMATION"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberAccessTypesItemPtrInput)(nil)).Elem(), SubscriberAccessTypesItem("LAKEFORMATION"))
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberAccessTypesItemArrayInput)(nil)).Elem(), SubscriberAccessTypesItemArray{})
	pulumi.RegisterOutputType(SubscriberAccessTypesItemOutput{})
	pulumi.RegisterOutputType(SubscriberAccessTypesItemPtrOutput{})
	pulumi.RegisterOutputType(SubscriberAccessTypesItemArrayOutput{})
}
