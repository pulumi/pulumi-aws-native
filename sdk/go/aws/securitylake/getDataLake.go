// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitylake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SecurityLake::DataLake
func LookupDataLake(ctx *pulumi.Context, args *LookupDataLakeArgs, opts ...pulumi.InvokeOption) (*LookupDataLakeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataLakeResult
	err := ctx.Invoke("aws-native:securitylake:getDataLake", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDataLakeArgs struct {
	// The Amazon Resource Name (ARN) created by you to provide to the subscriber.
	Arn string `pulumi:"arn"`
}

type LookupDataLakeResult struct {
	// The Amazon Resource Name (ARN) created by you to provide to the subscriber.
	Arn                      *string                           `pulumi:"arn"`
	EncryptionConfiguration  *DataLakeEncryptionConfiguration  `pulumi:"encryptionConfiguration"`
	LifecycleConfiguration   *DataLakeLifecycleConfiguration   `pulumi:"lifecycleConfiguration"`
	ReplicationConfiguration *DataLakeReplicationConfiguration `pulumi:"replicationConfiguration"`
	// The ARN for the Amazon Security Lake Amazon S3 bucket.
	S3BucketArn *string   `pulumi:"s3BucketArn"`
	Tags        []aws.Tag `pulumi:"tags"`
}

func LookupDataLakeOutput(ctx *pulumi.Context, args LookupDataLakeOutputArgs, opts ...pulumi.InvokeOption) LookupDataLakeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDataLakeResult, error) {
			args := v.(LookupDataLakeArgs)
			r, err := LookupDataLake(ctx, &args, opts...)
			var s LookupDataLakeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDataLakeResultOutput)
}

type LookupDataLakeOutputArgs struct {
	// The Amazon Resource Name (ARN) created by you to provide to the subscriber.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupDataLakeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataLakeArgs)(nil)).Elem()
}

type LookupDataLakeResultOutput struct{ *pulumi.OutputState }

func (LookupDataLakeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataLakeResult)(nil)).Elem()
}

func (o LookupDataLakeResultOutput) ToLookupDataLakeResultOutput() LookupDataLakeResultOutput {
	return o
}

func (o LookupDataLakeResultOutput) ToLookupDataLakeResultOutputWithContext(ctx context.Context) LookupDataLakeResultOutput {
	return o
}

// The Amazon Resource Name (ARN) created by you to provide to the subscriber.
func (o LookupDataLakeResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataLakeResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupDataLakeResultOutput) EncryptionConfiguration() DataLakeEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDataLakeResult) *DataLakeEncryptionConfiguration { return v.EncryptionConfiguration }).(DataLakeEncryptionConfigurationPtrOutput)
}

func (o LookupDataLakeResultOutput) LifecycleConfiguration() DataLakeLifecycleConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDataLakeResult) *DataLakeLifecycleConfiguration { return v.LifecycleConfiguration }).(DataLakeLifecycleConfigurationPtrOutput)
}

func (o LookupDataLakeResultOutput) ReplicationConfiguration() DataLakeReplicationConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDataLakeResult) *DataLakeReplicationConfiguration { return v.ReplicationConfiguration }).(DataLakeReplicationConfigurationPtrOutput)
}

// The ARN for the Amazon Security Lake Amazon S3 bucket.
func (o LookupDataLakeResultOutput) S3BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataLakeResult) *string { return v.S3BucketArn }).(pulumi.StringPtrOutput)
}

func (o LookupDataLakeResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDataLakeResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataLakeResultOutput{})
}
