// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitylake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Provides encryption details of Amazon Security Lake object.
type DataLakeEncryptionConfiguration struct {
	// The id of KMS encryption key used by Amazon Security Lake to encrypt the Security Lake object.
	KmsKeyId *string `pulumi:"kmsKeyId"`
}

// DataLakeEncryptionConfigurationInput is an input type that accepts DataLakeEncryptionConfigurationArgs and DataLakeEncryptionConfigurationOutput values.
// You can construct a concrete instance of `DataLakeEncryptionConfigurationInput` via:
//
//	DataLakeEncryptionConfigurationArgs{...}
type DataLakeEncryptionConfigurationInput interface {
	pulumi.Input

	ToDataLakeEncryptionConfigurationOutput() DataLakeEncryptionConfigurationOutput
	ToDataLakeEncryptionConfigurationOutputWithContext(context.Context) DataLakeEncryptionConfigurationOutput
}

// Provides encryption details of Amazon Security Lake object.
type DataLakeEncryptionConfigurationArgs struct {
	// The id of KMS encryption key used by Amazon Security Lake to encrypt the Security Lake object.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
}

func (DataLakeEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeEncryptionConfiguration)(nil)).Elem()
}

func (i DataLakeEncryptionConfigurationArgs) ToDataLakeEncryptionConfigurationOutput() DataLakeEncryptionConfigurationOutput {
	return i.ToDataLakeEncryptionConfigurationOutputWithContext(context.Background())
}

func (i DataLakeEncryptionConfigurationArgs) ToDataLakeEncryptionConfigurationOutputWithContext(ctx context.Context) DataLakeEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeEncryptionConfigurationOutput)
}

func (i DataLakeEncryptionConfigurationArgs) ToDataLakeEncryptionConfigurationPtrOutput() DataLakeEncryptionConfigurationPtrOutput {
	return i.ToDataLakeEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i DataLakeEncryptionConfigurationArgs) ToDataLakeEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DataLakeEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeEncryptionConfigurationOutput).ToDataLakeEncryptionConfigurationPtrOutputWithContext(ctx)
}

// DataLakeEncryptionConfigurationPtrInput is an input type that accepts DataLakeEncryptionConfigurationArgs, DataLakeEncryptionConfigurationPtr and DataLakeEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `DataLakeEncryptionConfigurationPtrInput` via:
//
//	        DataLakeEncryptionConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataLakeEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToDataLakeEncryptionConfigurationPtrOutput() DataLakeEncryptionConfigurationPtrOutput
	ToDataLakeEncryptionConfigurationPtrOutputWithContext(context.Context) DataLakeEncryptionConfigurationPtrOutput
}

type dataLakeEncryptionConfigurationPtrType DataLakeEncryptionConfigurationArgs

func DataLakeEncryptionConfigurationPtr(v *DataLakeEncryptionConfigurationArgs) DataLakeEncryptionConfigurationPtrInput {
	return (*dataLakeEncryptionConfigurationPtrType)(v)
}

func (*dataLakeEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeEncryptionConfiguration)(nil)).Elem()
}

func (i *dataLakeEncryptionConfigurationPtrType) ToDataLakeEncryptionConfigurationPtrOutput() DataLakeEncryptionConfigurationPtrOutput {
	return i.ToDataLakeEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataLakeEncryptionConfigurationPtrType) ToDataLakeEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DataLakeEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeEncryptionConfigurationPtrOutput)
}

// Provides encryption details of Amazon Security Lake object.
type DataLakeEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (DataLakeEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeEncryptionConfiguration)(nil)).Elem()
}

func (o DataLakeEncryptionConfigurationOutput) ToDataLakeEncryptionConfigurationOutput() DataLakeEncryptionConfigurationOutput {
	return o
}

func (o DataLakeEncryptionConfigurationOutput) ToDataLakeEncryptionConfigurationOutputWithContext(ctx context.Context) DataLakeEncryptionConfigurationOutput {
	return o
}

func (o DataLakeEncryptionConfigurationOutput) ToDataLakeEncryptionConfigurationPtrOutput() DataLakeEncryptionConfigurationPtrOutput {
	return o.ToDataLakeEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o DataLakeEncryptionConfigurationOutput) ToDataLakeEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DataLakeEncryptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeEncryptionConfiguration) *DataLakeEncryptionConfiguration {
		return &v
	}).(DataLakeEncryptionConfigurationPtrOutput)
}

// The id of KMS encryption key used by Amazon Security Lake to encrypt the Security Lake object.
func (o DataLakeEncryptionConfigurationOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeEncryptionConfiguration) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

type DataLakeEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataLakeEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeEncryptionConfiguration)(nil)).Elem()
}

func (o DataLakeEncryptionConfigurationPtrOutput) ToDataLakeEncryptionConfigurationPtrOutput() DataLakeEncryptionConfigurationPtrOutput {
	return o
}

func (o DataLakeEncryptionConfigurationPtrOutput) ToDataLakeEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DataLakeEncryptionConfigurationPtrOutput {
	return o
}

func (o DataLakeEncryptionConfigurationPtrOutput) Elem() DataLakeEncryptionConfigurationOutput {
	return o.ApplyT(func(v *DataLakeEncryptionConfiguration) DataLakeEncryptionConfiguration {
		if v != nil {
			return *v
		}
		var ret DataLakeEncryptionConfiguration
		return ret
	}).(DataLakeEncryptionConfigurationOutput)
}

// The id of KMS encryption key used by Amazon Security Lake to encrypt the Security Lake object.
func (o DataLakeEncryptionConfigurationPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeEncryptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// Provides data expiration details of Amazon Security Lake object.
type DataLakeExpiration struct {
	Days *int `pulumi:"days"`
}

// DataLakeExpirationInput is an input type that accepts DataLakeExpirationArgs and DataLakeExpirationOutput values.
// You can construct a concrete instance of `DataLakeExpirationInput` via:
//
//	DataLakeExpirationArgs{...}
type DataLakeExpirationInput interface {
	pulumi.Input

	ToDataLakeExpirationOutput() DataLakeExpirationOutput
	ToDataLakeExpirationOutputWithContext(context.Context) DataLakeExpirationOutput
}

// Provides data expiration details of Amazon Security Lake object.
type DataLakeExpirationArgs struct {
	Days pulumi.IntPtrInput `pulumi:"days"`
}

func (DataLakeExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeExpiration)(nil)).Elem()
}

func (i DataLakeExpirationArgs) ToDataLakeExpirationOutput() DataLakeExpirationOutput {
	return i.ToDataLakeExpirationOutputWithContext(context.Background())
}

func (i DataLakeExpirationArgs) ToDataLakeExpirationOutputWithContext(ctx context.Context) DataLakeExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeExpirationOutput)
}

func (i DataLakeExpirationArgs) ToDataLakeExpirationPtrOutput() DataLakeExpirationPtrOutput {
	return i.ToDataLakeExpirationPtrOutputWithContext(context.Background())
}

func (i DataLakeExpirationArgs) ToDataLakeExpirationPtrOutputWithContext(ctx context.Context) DataLakeExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeExpirationOutput).ToDataLakeExpirationPtrOutputWithContext(ctx)
}

// DataLakeExpirationPtrInput is an input type that accepts DataLakeExpirationArgs, DataLakeExpirationPtr and DataLakeExpirationPtrOutput values.
// You can construct a concrete instance of `DataLakeExpirationPtrInput` via:
//
//	        DataLakeExpirationArgs{...}
//
//	or:
//
//	        nil
type DataLakeExpirationPtrInput interface {
	pulumi.Input

	ToDataLakeExpirationPtrOutput() DataLakeExpirationPtrOutput
	ToDataLakeExpirationPtrOutputWithContext(context.Context) DataLakeExpirationPtrOutput
}

type dataLakeExpirationPtrType DataLakeExpirationArgs

func DataLakeExpirationPtr(v *DataLakeExpirationArgs) DataLakeExpirationPtrInput {
	return (*dataLakeExpirationPtrType)(v)
}

func (*dataLakeExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeExpiration)(nil)).Elem()
}

func (i *dataLakeExpirationPtrType) ToDataLakeExpirationPtrOutput() DataLakeExpirationPtrOutput {
	return i.ToDataLakeExpirationPtrOutputWithContext(context.Background())
}

func (i *dataLakeExpirationPtrType) ToDataLakeExpirationPtrOutputWithContext(ctx context.Context) DataLakeExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeExpirationPtrOutput)
}

// Provides data expiration details of Amazon Security Lake object.
type DataLakeExpirationOutput struct{ *pulumi.OutputState }

func (DataLakeExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeExpiration)(nil)).Elem()
}

func (o DataLakeExpirationOutput) ToDataLakeExpirationOutput() DataLakeExpirationOutput {
	return o
}

func (o DataLakeExpirationOutput) ToDataLakeExpirationOutputWithContext(ctx context.Context) DataLakeExpirationOutput {
	return o
}

func (o DataLakeExpirationOutput) ToDataLakeExpirationPtrOutput() DataLakeExpirationPtrOutput {
	return o.ToDataLakeExpirationPtrOutputWithContext(context.Background())
}

func (o DataLakeExpirationOutput) ToDataLakeExpirationPtrOutputWithContext(ctx context.Context) DataLakeExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeExpiration) *DataLakeExpiration {
		return &v
	}).(DataLakeExpirationPtrOutput)
}

func (o DataLakeExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataLakeExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

type DataLakeExpirationPtrOutput struct{ *pulumi.OutputState }

func (DataLakeExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeExpiration)(nil)).Elem()
}

func (o DataLakeExpirationPtrOutput) ToDataLakeExpirationPtrOutput() DataLakeExpirationPtrOutput {
	return o
}

func (o DataLakeExpirationPtrOutput) ToDataLakeExpirationPtrOutputWithContext(ctx context.Context) DataLakeExpirationPtrOutput {
	return o
}

func (o DataLakeExpirationPtrOutput) Elem() DataLakeExpirationOutput {
	return o.ApplyT(func(v *DataLakeExpiration) DataLakeExpiration {
		if v != nil {
			return *v
		}
		var ret DataLakeExpiration
		return ret
	}).(DataLakeExpirationOutput)
}

func (o DataLakeExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataLakeExpiration) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// Provides lifecycle details of Amazon Security Lake object.
type DataLakeLifecycleConfiguration struct {
	Expiration *DataLakeExpiration `pulumi:"expiration"`
	// Provides data storage transition details of Amazon Security Lake object.
	Transitions []DataLakeTransitions `pulumi:"transitions"`
}

// DataLakeLifecycleConfigurationInput is an input type that accepts DataLakeLifecycleConfigurationArgs and DataLakeLifecycleConfigurationOutput values.
// You can construct a concrete instance of `DataLakeLifecycleConfigurationInput` via:
//
//	DataLakeLifecycleConfigurationArgs{...}
type DataLakeLifecycleConfigurationInput interface {
	pulumi.Input

	ToDataLakeLifecycleConfigurationOutput() DataLakeLifecycleConfigurationOutput
	ToDataLakeLifecycleConfigurationOutputWithContext(context.Context) DataLakeLifecycleConfigurationOutput
}

// Provides lifecycle details of Amazon Security Lake object.
type DataLakeLifecycleConfigurationArgs struct {
	Expiration DataLakeExpirationPtrInput `pulumi:"expiration"`
	// Provides data storage transition details of Amazon Security Lake object.
	Transitions DataLakeTransitionsArrayInput `pulumi:"transitions"`
}

func (DataLakeLifecycleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeLifecycleConfiguration)(nil)).Elem()
}

func (i DataLakeLifecycleConfigurationArgs) ToDataLakeLifecycleConfigurationOutput() DataLakeLifecycleConfigurationOutput {
	return i.ToDataLakeLifecycleConfigurationOutputWithContext(context.Background())
}

func (i DataLakeLifecycleConfigurationArgs) ToDataLakeLifecycleConfigurationOutputWithContext(ctx context.Context) DataLakeLifecycleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeLifecycleConfigurationOutput)
}

func (i DataLakeLifecycleConfigurationArgs) ToDataLakeLifecycleConfigurationPtrOutput() DataLakeLifecycleConfigurationPtrOutput {
	return i.ToDataLakeLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (i DataLakeLifecycleConfigurationArgs) ToDataLakeLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DataLakeLifecycleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeLifecycleConfigurationOutput).ToDataLakeLifecycleConfigurationPtrOutputWithContext(ctx)
}

// DataLakeLifecycleConfigurationPtrInput is an input type that accepts DataLakeLifecycleConfigurationArgs, DataLakeLifecycleConfigurationPtr and DataLakeLifecycleConfigurationPtrOutput values.
// You can construct a concrete instance of `DataLakeLifecycleConfigurationPtrInput` via:
//
//	        DataLakeLifecycleConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataLakeLifecycleConfigurationPtrInput interface {
	pulumi.Input

	ToDataLakeLifecycleConfigurationPtrOutput() DataLakeLifecycleConfigurationPtrOutput
	ToDataLakeLifecycleConfigurationPtrOutputWithContext(context.Context) DataLakeLifecycleConfigurationPtrOutput
}

type dataLakeLifecycleConfigurationPtrType DataLakeLifecycleConfigurationArgs

func DataLakeLifecycleConfigurationPtr(v *DataLakeLifecycleConfigurationArgs) DataLakeLifecycleConfigurationPtrInput {
	return (*dataLakeLifecycleConfigurationPtrType)(v)
}

func (*dataLakeLifecycleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeLifecycleConfiguration)(nil)).Elem()
}

func (i *dataLakeLifecycleConfigurationPtrType) ToDataLakeLifecycleConfigurationPtrOutput() DataLakeLifecycleConfigurationPtrOutput {
	return i.ToDataLakeLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataLakeLifecycleConfigurationPtrType) ToDataLakeLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DataLakeLifecycleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeLifecycleConfigurationPtrOutput)
}

// Provides lifecycle details of Amazon Security Lake object.
type DataLakeLifecycleConfigurationOutput struct{ *pulumi.OutputState }

func (DataLakeLifecycleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeLifecycleConfiguration)(nil)).Elem()
}

func (o DataLakeLifecycleConfigurationOutput) ToDataLakeLifecycleConfigurationOutput() DataLakeLifecycleConfigurationOutput {
	return o
}

func (o DataLakeLifecycleConfigurationOutput) ToDataLakeLifecycleConfigurationOutputWithContext(ctx context.Context) DataLakeLifecycleConfigurationOutput {
	return o
}

func (o DataLakeLifecycleConfigurationOutput) ToDataLakeLifecycleConfigurationPtrOutput() DataLakeLifecycleConfigurationPtrOutput {
	return o.ToDataLakeLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (o DataLakeLifecycleConfigurationOutput) ToDataLakeLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DataLakeLifecycleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeLifecycleConfiguration) *DataLakeLifecycleConfiguration {
		return &v
	}).(DataLakeLifecycleConfigurationPtrOutput)
}

func (o DataLakeLifecycleConfigurationOutput) Expiration() DataLakeExpirationPtrOutput {
	return o.ApplyT(func(v DataLakeLifecycleConfiguration) *DataLakeExpiration { return v.Expiration }).(DataLakeExpirationPtrOutput)
}

// Provides data storage transition details of Amazon Security Lake object.
func (o DataLakeLifecycleConfigurationOutput) Transitions() DataLakeTransitionsArrayOutput {
	return o.ApplyT(func(v DataLakeLifecycleConfiguration) []DataLakeTransitions { return v.Transitions }).(DataLakeTransitionsArrayOutput)
}

type DataLakeLifecycleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataLakeLifecycleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeLifecycleConfiguration)(nil)).Elem()
}

func (o DataLakeLifecycleConfigurationPtrOutput) ToDataLakeLifecycleConfigurationPtrOutput() DataLakeLifecycleConfigurationPtrOutput {
	return o
}

func (o DataLakeLifecycleConfigurationPtrOutput) ToDataLakeLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DataLakeLifecycleConfigurationPtrOutput {
	return o
}

func (o DataLakeLifecycleConfigurationPtrOutput) Elem() DataLakeLifecycleConfigurationOutput {
	return o.ApplyT(func(v *DataLakeLifecycleConfiguration) DataLakeLifecycleConfiguration {
		if v != nil {
			return *v
		}
		var ret DataLakeLifecycleConfiguration
		return ret
	}).(DataLakeLifecycleConfigurationOutput)
}

func (o DataLakeLifecycleConfigurationPtrOutput) Expiration() DataLakeExpirationPtrOutput {
	return o.ApplyT(func(v *DataLakeLifecycleConfiguration) *DataLakeExpiration {
		if v == nil {
			return nil
		}
		return v.Expiration
	}).(DataLakeExpirationPtrOutput)
}

// Provides data storage transition details of Amazon Security Lake object.
func (o DataLakeLifecycleConfigurationPtrOutput) Transitions() DataLakeTransitionsArrayOutput {
	return o.ApplyT(func(v *DataLakeLifecycleConfiguration) []DataLakeTransitions {
		if v == nil {
			return nil
		}
		return v.Transitions
	}).(DataLakeTransitionsArrayOutput)
}

// Provides replication details of Amazon Security Lake object.
type DataLakeReplicationConfiguration struct {
	Regions []string `pulumi:"regions"`
	// Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
	RoleArn *string `pulumi:"roleArn"`
}

// DataLakeReplicationConfigurationInput is an input type that accepts DataLakeReplicationConfigurationArgs and DataLakeReplicationConfigurationOutput values.
// You can construct a concrete instance of `DataLakeReplicationConfigurationInput` via:
//
//	DataLakeReplicationConfigurationArgs{...}
type DataLakeReplicationConfigurationInput interface {
	pulumi.Input

	ToDataLakeReplicationConfigurationOutput() DataLakeReplicationConfigurationOutput
	ToDataLakeReplicationConfigurationOutputWithContext(context.Context) DataLakeReplicationConfigurationOutput
}

// Provides replication details of Amazon Security Lake object.
type DataLakeReplicationConfigurationArgs struct {
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (DataLakeReplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeReplicationConfiguration)(nil)).Elem()
}

func (i DataLakeReplicationConfigurationArgs) ToDataLakeReplicationConfigurationOutput() DataLakeReplicationConfigurationOutput {
	return i.ToDataLakeReplicationConfigurationOutputWithContext(context.Background())
}

func (i DataLakeReplicationConfigurationArgs) ToDataLakeReplicationConfigurationOutputWithContext(ctx context.Context) DataLakeReplicationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeReplicationConfigurationOutput)
}

func (i DataLakeReplicationConfigurationArgs) ToDataLakeReplicationConfigurationPtrOutput() DataLakeReplicationConfigurationPtrOutput {
	return i.ToDataLakeReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (i DataLakeReplicationConfigurationArgs) ToDataLakeReplicationConfigurationPtrOutputWithContext(ctx context.Context) DataLakeReplicationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeReplicationConfigurationOutput).ToDataLakeReplicationConfigurationPtrOutputWithContext(ctx)
}

// DataLakeReplicationConfigurationPtrInput is an input type that accepts DataLakeReplicationConfigurationArgs, DataLakeReplicationConfigurationPtr and DataLakeReplicationConfigurationPtrOutput values.
// You can construct a concrete instance of `DataLakeReplicationConfigurationPtrInput` via:
//
//	        DataLakeReplicationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataLakeReplicationConfigurationPtrInput interface {
	pulumi.Input

	ToDataLakeReplicationConfigurationPtrOutput() DataLakeReplicationConfigurationPtrOutput
	ToDataLakeReplicationConfigurationPtrOutputWithContext(context.Context) DataLakeReplicationConfigurationPtrOutput
}

type dataLakeReplicationConfigurationPtrType DataLakeReplicationConfigurationArgs

func DataLakeReplicationConfigurationPtr(v *DataLakeReplicationConfigurationArgs) DataLakeReplicationConfigurationPtrInput {
	return (*dataLakeReplicationConfigurationPtrType)(v)
}

func (*dataLakeReplicationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeReplicationConfiguration)(nil)).Elem()
}

func (i *dataLakeReplicationConfigurationPtrType) ToDataLakeReplicationConfigurationPtrOutput() DataLakeReplicationConfigurationPtrOutput {
	return i.ToDataLakeReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataLakeReplicationConfigurationPtrType) ToDataLakeReplicationConfigurationPtrOutputWithContext(ctx context.Context) DataLakeReplicationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeReplicationConfigurationPtrOutput)
}

// Provides replication details of Amazon Security Lake object.
type DataLakeReplicationConfigurationOutput struct{ *pulumi.OutputState }

func (DataLakeReplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeReplicationConfiguration)(nil)).Elem()
}

func (o DataLakeReplicationConfigurationOutput) ToDataLakeReplicationConfigurationOutput() DataLakeReplicationConfigurationOutput {
	return o
}

func (o DataLakeReplicationConfigurationOutput) ToDataLakeReplicationConfigurationOutputWithContext(ctx context.Context) DataLakeReplicationConfigurationOutput {
	return o
}

func (o DataLakeReplicationConfigurationOutput) ToDataLakeReplicationConfigurationPtrOutput() DataLakeReplicationConfigurationPtrOutput {
	return o.ToDataLakeReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (o DataLakeReplicationConfigurationOutput) ToDataLakeReplicationConfigurationPtrOutputWithContext(ctx context.Context) DataLakeReplicationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeReplicationConfiguration) *DataLakeReplicationConfiguration {
		return &v
	}).(DataLakeReplicationConfigurationPtrOutput)
}

func (o DataLakeReplicationConfigurationOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataLakeReplicationConfiguration) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
func (o DataLakeReplicationConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeReplicationConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type DataLakeReplicationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataLakeReplicationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeReplicationConfiguration)(nil)).Elem()
}

func (o DataLakeReplicationConfigurationPtrOutput) ToDataLakeReplicationConfigurationPtrOutput() DataLakeReplicationConfigurationPtrOutput {
	return o
}

func (o DataLakeReplicationConfigurationPtrOutput) ToDataLakeReplicationConfigurationPtrOutputWithContext(ctx context.Context) DataLakeReplicationConfigurationPtrOutput {
	return o
}

func (o DataLakeReplicationConfigurationPtrOutput) Elem() DataLakeReplicationConfigurationOutput {
	return o.ApplyT(func(v *DataLakeReplicationConfiguration) DataLakeReplicationConfiguration {
		if v != nil {
			return *v
		}
		var ret DataLakeReplicationConfiguration
		return ret
	}).(DataLakeReplicationConfigurationOutput)
}

func (o DataLakeReplicationConfigurationPtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataLakeReplicationConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

// Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
func (o DataLakeReplicationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeReplicationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type DataLakeTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, `_`, `.`, `/`, `=`, `+`, and `-`.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 characters in length.
	Value string `pulumi:"value"`
}

type DataLakeTransitions struct {
	// Number of days before data transitions to a different S3 Storage Class in the Amazon Security Lake object.
	Days *int `pulumi:"days"`
	// The range of storage classes that you can choose from based on the data access, resiliency, and cost requirements of your workloads.
	StorageClass *string `pulumi:"storageClass"`
}

// DataLakeTransitionsInput is an input type that accepts DataLakeTransitionsArgs and DataLakeTransitionsOutput values.
// You can construct a concrete instance of `DataLakeTransitionsInput` via:
//
//	DataLakeTransitionsArgs{...}
type DataLakeTransitionsInput interface {
	pulumi.Input

	ToDataLakeTransitionsOutput() DataLakeTransitionsOutput
	ToDataLakeTransitionsOutputWithContext(context.Context) DataLakeTransitionsOutput
}

type DataLakeTransitionsArgs struct {
	// Number of days before data transitions to a different S3 Storage Class in the Amazon Security Lake object.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The range of storage classes that you can choose from based on the data access, resiliency, and cost requirements of your workloads.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
}

func (DataLakeTransitionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeTransitions)(nil)).Elem()
}

func (i DataLakeTransitionsArgs) ToDataLakeTransitionsOutput() DataLakeTransitionsOutput {
	return i.ToDataLakeTransitionsOutputWithContext(context.Background())
}

func (i DataLakeTransitionsArgs) ToDataLakeTransitionsOutputWithContext(ctx context.Context) DataLakeTransitionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeTransitionsOutput)
}

// DataLakeTransitionsArrayInput is an input type that accepts DataLakeTransitionsArray and DataLakeTransitionsArrayOutput values.
// You can construct a concrete instance of `DataLakeTransitionsArrayInput` via:
//
//	DataLakeTransitionsArray{ DataLakeTransitionsArgs{...} }
type DataLakeTransitionsArrayInput interface {
	pulumi.Input

	ToDataLakeTransitionsArrayOutput() DataLakeTransitionsArrayOutput
	ToDataLakeTransitionsArrayOutputWithContext(context.Context) DataLakeTransitionsArrayOutput
}

type DataLakeTransitionsArray []DataLakeTransitionsInput

func (DataLakeTransitionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeTransitions)(nil)).Elem()
}

func (i DataLakeTransitionsArray) ToDataLakeTransitionsArrayOutput() DataLakeTransitionsArrayOutput {
	return i.ToDataLakeTransitionsArrayOutputWithContext(context.Background())
}

func (i DataLakeTransitionsArray) ToDataLakeTransitionsArrayOutputWithContext(ctx context.Context) DataLakeTransitionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeTransitionsArrayOutput)
}

type DataLakeTransitionsOutput struct{ *pulumi.OutputState }

func (DataLakeTransitionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeTransitions)(nil)).Elem()
}

func (o DataLakeTransitionsOutput) ToDataLakeTransitionsOutput() DataLakeTransitionsOutput {
	return o
}

func (o DataLakeTransitionsOutput) ToDataLakeTransitionsOutputWithContext(ctx context.Context) DataLakeTransitionsOutput {
	return o
}

// Number of days before data transitions to a different S3 Storage Class in the Amazon Security Lake object.
func (o DataLakeTransitionsOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataLakeTransitions) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The range of storage classes that you can choose from based on the data access, resiliency, and cost requirements of your workloads.
func (o DataLakeTransitionsOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeTransitions) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

type DataLakeTransitionsArrayOutput struct{ *pulumi.OutputState }

func (DataLakeTransitionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeTransitions)(nil)).Elem()
}

func (o DataLakeTransitionsArrayOutput) ToDataLakeTransitionsArrayOutput() DataLakeTransitionsArrayOutput {
	return o
}

func (o DataLakeTransitionsArrayOutput) ToDataLakeTransitionsArrayOutputWithContext(ctx context.Context) DataLakeTransitionsArrayOutput {
	return o
}

func (o DataLakeTransitionsArrayOutput) Index(i pulumi.IntInput) DataLakeTransitionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeTransitions {
		return vs[0].([]DataLakeTransitions)[vs[1].(int)]
	}).(DataLakeTransitionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeEncryptionConfigurationInput)(nil)).Elem(), DataLakeEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeEncryptionConfigurationPtrInput)(nil)).Elem(), DataLakeEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeExpirationInput)(nil)).Elem(), DataLakeExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeExpirationPtrInput)(nil)).Elem(), DataLakeExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeLifecycleConfigurationInput)(nil)).Elem(), DataLakeLifecycleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeLifecycleConfigurationPtrInput)(nil)).Elem(), DataLakeLifecycleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeReplicationConfigurationInput)(nil)).Elem(), DataLakeReplicationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeReplicationConfigurationPtrInput)(nil)).Elem(), DataLakeReplicationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeTransitionsInput)(nil)).Elem(), DataLakeTransitionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeTransitionsArrayInput)(nil)).Elem(), DataLakeTransitionsArray{})
	pulumi.RegisterOutputType(DataLakeEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(DataLakeEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataLakeExpirationOutput{})
	pulumi.RegisterOutputType(DataLakeExpirationPtrOutput{})
	pulumi.RegisterOutputType(DataLakeLifecycleConfigurationOutput{})
	pulumi.RegisterOutputType(DataLakeLifecycleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataLakeReplicationConfigurationOutput{})
	pulumi.RegisterOutputType(DataLakeReplicationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataLakeTransitionsOutput{})
	pulumi.RegisterOutputType(DataLakeTransitionsArrayOutput{})
}
