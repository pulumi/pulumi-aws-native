// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitylake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::SecurityLake::AwsLogSource
func LookupAwsLogSource(ctx *pulumi.Context, args *LookupAwsLogSourceArgs, opts ...pulumi.InvokeOption) (*LookupAwsLogSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAwsLogSourceResult
	err := ctx.Invoke("aws-native:securitylake:getAwsLogSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAwsLogSourceArgs struct {
	// The name for a AWS source. This must be a Regionally unique value.
	SourceName string `pulumi:"sourceName"`
	// The version for a AWS source. This must be a Regionally unique value.
	SourceVersion string `pulumi:"sourceVersion"`
}

type LookupAwsLogSourceResult struct {
	// AWS account where you want to collect logs from.
	Accounts []string `pulumi:"accounts"`
}

func LookupAwsLogSourceOutput(ctx *pulumi.Context, args LookupAwsLogSourceOutputArgs, opts ...pulumi.InvokeOption) LookupAwsLogSourceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAwsLogSourceResultOutput, error) {
			args := v.(LookupAwsLogSourceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:securitylake:getAwsLogSource", args, LookupAwsLogSourceResultOutput{}, options).(LookupAwsLogSourceResultOutput), nil
		}).(LookupAwsLogSourceResultOutput)
}

type LookupAwsLogSourceOutputArgs struct {
	// The name for a AWS source. This must be a Regionally unique value.
	SourceName pulumi.StringInput `pulumi:"sourceName"`
	// The version for a AWS source. This must be a Regionally unique value.
	SourceVersion pulumi.StringInput `pulumi:"sourceVersion"`
}

func (LookupAwsLogSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsLogSourceArgs)(nil)).Elem()
}

type LookupAwsLogSourceResultOutput struct{ *pulumi.OutputState }

func (LookupAwsLogSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAwsLogSourceResult)(nil)).Elem()
}

func (o LookupAwsLogSourceResultOutput) ToLookupAwsLogSourceResultOutput() LookupAwsLogSourceResultOutput {
	return o
}

func (o LookupAwsLogSourceResultOutput) ToLookupAwsLogSourceResultOutputWithContext(ctx context.Context) LookupAwsLogSourceResultOutput {
	return o
}

// AWS account where you want to collect logs from.
func (o LookupAwsLogSourceResultOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAwsLogSourceResult) []string { return v.Accounts }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAwsLogSourceResultOutput{})
}
