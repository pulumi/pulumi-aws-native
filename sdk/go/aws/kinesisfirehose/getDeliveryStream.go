// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kinesisfirehose

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::KinesisFirehose::DeliveryStream
func LookupDeliveryStream(ctx *pulumi.Context, args *LookupDeliveryStreamArgs, opts ...pulumi.InvokeOption) (*LookupDeliveryStreamResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDeliveryStreamResult
	err := ctx.Invoke("aws-native:kinesisfirehose:getDeliveryStream", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDeliveryStreamArgs struct {
	// The name of the delivery stream.
	DeliveryStreamName string `pulumi:"deliveryStreamName"`
}

type LookupDeliveryStreamResult struct {
	// Describes the configuration of a destination in the Serverless offering for Amazon OpenSearch Service.
	AmazonOpenSearchServerlessDestinationConfiguration *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration `pulumi:"amazonOpenSearchServerlessDestinationConfiguration"`
	// The destination in Amazon OpenSearch Service. You can specify only one destination.
	AmazonopensearchserviceDestinationConfiguration *DeliveryStreamAmazonopensearchserviceDestinationConfiguration `pulumi:"amazonopensearchserviceDestinationConfiguration"`
	// The Amazon Resource Name (ARN) of the delivery stream, such as `arn:aws:firehose:us-east-2:123456789012:deliverystream/delivery-stream-name` .
	Arn *string `pulumi:"arn"`
	// Specifies the type and Amazon Resource Name (ARN) of the CMK to use for Server-Side Encryption (SSE).
	DeliveryStreamEncryptionConfigurationInput *DeliveryStreamEncryptionConfigurationInputType `pulumi:"deliveryStreamEncryptionConfigurationInput"`
	// An Amazon ES destination for the delivery stream.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon ES destination to an Amazon S3 or Amazon Redshift destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	ElasticsearchDestinationConfiguration *DeliveryStreamElasticsearchDestinationConfiguration `pulumi:"elasticsearchDestinationConfiguration"`
	// An Amazon S3 destination for the delivery stream.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon Extended S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	ExtendedS3DestinationConfiguration *DeliveryStreamExtendedS3DestinationConfiguration `pulumi:"extendedS3DestinationConfiguration"`
	// Enables configuring Kinesis Firehose to deliver data to any HTTP endpoint destination. You can specify only one destination.
	HttpEndpointDestinationConfiguration *DeliveryStreamHttpEndpointDestinationConfiguration `pulumi:"httpEndpointDestinationConfiguration"`
	// An Amazon Redshift destination for the delivery stream.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon Redshift destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	RedshiftDestinationConfiguration *DeliveryStreamRedshiftDestinationConfiguration `pulumi:"redshiftDestinationConfiguration"`
	// The `S3DestinationConfiguration` property type specifies an Amazon Simple Storage Service (Amazon S3) destination to which Amazon Kinesis Data Firehose (Kinesis Data Firehose) delivers data.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	S3DestinationConfiguration *DeliveryStreamS3DestinationConfiguration `pulumi:"s3DestinationConfiguration"`
	// Configure Snowflake destination
	SnowflakeDestinationConfiguration *DeliveryStreamSnowflakeDestinationConfiguration `pulumi:"snowflakeDestinationConfiguration"`
	// The configuration of a destination in Splunk for the delivery stream.
	SplunkDestinationConfiguration *DeliveryStreamSplunkDestinationConfiguration `pulumi:"splunkDestinationConfiguration"`
	// A set of tags to assign to the delivery stream. A tag is a key-value pair that you can define and assign to AWS resources. Tags are metadata. For example, you can add friendly names and descriptions or other types of information that can help you distinguish the delivery stream. For more information about tags, see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the AWS Billing and Cost Management User Guide.
	//
	// You can specify up to 50 tags when creating a delivery stream.
	//
	// If you specify tags in the `CreateDeliveryStream` action, Amazon Data Firehose performs an additional authorization on the `firehose:TagDeliveryStream` action to verify if users have permissions to create tags. If you do not provide this permission, requests to create new Firehose delivery streams with IAM resource tags will fail with an `AccessDeniedException` such as following.
	//
	// *AccessDeniedException*
	//
	// User: arn:aws:sts::x:assumed-role/x/x is not authorized to perform: firehose:TagDeliveryStream on resource: arn:aws:firehose:us-east-1:x:deliverystream/x with an explicit deny in an identity-based policy.
	//
	// For an example IAM policy, see [Tag example.](https://docs.aws.amazon.com/firehose/latest/APIReference/API_CreateDeliveryStream.html#API_CreateDeliveryStream_Examples)
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDeliveryStreamOutput(ctx *pulumi.Context, args LookupDeliveryStreamOutputArgs, opts ...pulumi.InvokeOption) LookupDeliveryStreamResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeliveryStreamResultOutput, error) {
			args := v.(LookupDeliveryStreamArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupDeliveryStreamResult
			secret, err := ctx.InvokePackageRaw("aws-native:kinesisfirehose:getDeliveryStream", args, &rv, "", opts...)
			if err != nil {
				return LookupDeliveryStreamResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupDeliveryStreamResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupDeliveryStreamResultOutput), nil
			}
			return output, nil
		}).(LookupDeliveryStreamResultOutput)
}

type LookupDeliveryStreamOutputArgs struct {
	// The name of the delivery stream.
	DeliveryStreamName pulumi.StringInput `pulumi:"deliveryStreamName"`
}

func (LookupDeliveryStreamOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeliveryStreamArgs)(nil)).Elem()
}

type LookupDeliveryStreamResultOutput struct{ *pulumi.OutputState }

func (LookupDeliveryStreamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeliveryStreamResult)(nil)).Elem()
}

func (o LookupDeliveryStreamResultOutput) ToLookupDeliveryStreamResultOutput() LookupDeliveryStreamResultOutput {
	return o
}

func (o LookupDeliveryStreamResultOutput) ToLookupDeliveryStreamResultOutputWithContext(ctx context.Context) LookupDeliveryStreamResultOutput {
	return o
}

// Describes the configuration of a destination in the Serverless offering for Amazon OpenSearch Service.
func (o LookupDeliveryStreamResultOutput) AmazonOpenSearchServerlessDestinationConfiguration() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDeliveryStreamResult) *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration {
		return v.AmazonOpenSearchServerlessDestinationConfiguration
	}).(DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput)
}

// The destination in Amazon OpenSearch Service. You can specify only one destination.
func (o LookupDeliveryStreamResultOutput) AmazonopensearchserviceDestinationConfiguration() DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDeliveryStreamResult) *DeliveryStreamAmazonopensearchserviceDestinationConfiguration {
		return v.AmazonopensearchserviceDestinationConfiguration
	}).(DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the delivery stream, such as `arn:aws:firehose:us-east-2:123456789012:deliverystream/delivery-stream-name` .
func (o LookupDeliveryStreamResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDeliveryStreamResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Specifies the type and Amazon Resource Name (ARN) of the CMK to use for Server-Side Encryption (SSE).
func (o LookupDeliveryStreamResultOutput) DeliveryStreamEncryptionConfigurationInput() DeliveryStreamEncryptionConfigurationInputTypePtrOutput {
	return o.ApplyT(func(v LookupDeliveryStreamResult) *DeliveryStreamEncryptionConfigurationInputType {
		return v.DeliveryStreamEncryptionConfigurationInput
	}).(DeliveryStreamEncryptionConfigurationInputTypePtrOutput)
}

// An Amazon ES destination for the delivery stream.
//
// Conditional. You must specify only one destination configuration.
//
// If you change the delivery stream destination from an Amazon ES destination to an Amazon S3 or Amazon Redshift destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
func (o LookupDeliveryStreamResultOutput) ElasticsearchDestinationConfiguration() DeliveryStreamElasticsearchDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDeliveryStreamResult) *DeliveryStreamElasticsearchDestinationConfiguration {
		return v.ElasticsearchDestinationConfiguration
	}).(DeliveryStreamElasticsearchDestinationConfigurationPtrOutput)
}

// An Amazon S3 destination for the delivery stream.
//
// Conditional. You must specify only one destination configuration.
//
// If you change the delivery stream destination from an Amazon Extended S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
func (o LookupDeliveryStreamResultOutput) ExtendedS3DestinationConfiguration() DeliveryStreamExtendedS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDeliveryStreamResult) *DeliveryStreamExtendedS3DestinationConfiguration {
		return v.ExtendedS3DestinationConfiguration
	}).(DeliveryStreamExtendedS3DestinationConfigurationPtrOutput)
}

// Enables configuring Kinesis Firehose to deliver data to any HTTP endpoint destination. You can specify only one destination.
func (o LookupDeliveryStreamResultOutput) HttpEndpointDestinationConfiguration() DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDeliveryStreamResult) *DeliveryStreamHttpEndpointDestinationConfiguration {
		return v.HttpEndpointDestinationConfiguration
	}).(DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput)
}

// An Amazon Redshift destination for the delivery stream.
//
// Conditional. You must specify only one destination configuration.
//
// If you change the delivery stream destination from an Amazon Redshift destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
func (o LookupDeliveryStreamResultOutput) RedshiftDestinationConfiguration() DeliveryStreamRedshiftDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDeliveryStreamResult) *DeliveryStreamRedshiftDestinationConfiguration {
		return v.RedshiftDestinationConfiguration
	}).(DeliveryStreamRedshiftDestinationConfigurationPtrOutput)
}

// The `S3DestinationConfiguration` property type specifies an Amazon Simple Storage Service (Amazon S3) destination to which Amazon Kinesis Data Firehose (Kinesis Data Firehose) delivers data.
//
// Conditional. You must specify only one destination configuration.
//
// If you change the delivery stream destination from an Amazon S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
func (o LookupDeliveryStreamResultOutput) S3DestinationConfiguration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDeliveryStreamResult) *DeliveryStreamS3DestinationConfiguration {
		return v.S3DestinationConfiguration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// Configure Snowflake destination
func (o LookupDeliveryStreamResultOutput) SnowflakeDestinationConfiguration() DeliveryStreamSnowflakeDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDeliveryStreamResult) *DeliveryStreamSnowflakeDestinationConfiguration {
		return v.SnowflakeDestinationConfiguration
	}).(DeliveryStreamSnowflakeDestinationConfigurationPtrOutput)
}

// The configuration of a destination in Splunk for the delivery stream.
func (o LookupDeliveryStreamResultOutput) SplunkDestinationConfiguration() DeliveryStreamSplunkDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDeliveryStreamResult) *DeliveryStreamSplunkDestinationConfiguration {
		return v.SplunkDestinationConfiguration
	}).(DeliveryStreamSplunkDestinationConfigurationPtrOutput)
}

// A set of tags to assign to the delivery stream. A tag is a key-value pair that you can define and assign to AWS resources. Tags are metadata. For example, you can add friendly names and descriptions or other types of information that can help you distinguish the delivery stream. For more information about tags, see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the AWS Billing and Cost Management User Guide.
//
// You can specify up to 50 tags when creating a delivery stream.
//
// If you specify tags in the `CreateDeliveryStream` action, Amazon Data Firehose performs an additional authorization on the `firehose:TagDeliveryStream` action to verify if users have permissions to create tags. If you do not provide this permission, requests to create new Firehose delivery streams with IAM resource tags will fail with an `AccessDeniedException` such as following.
//
// *AccessDeniedException*
//
// User: arn:aws:sts::x:assumed-role/x/x is not authorized to perform: firehose:TagDeliveryStream on resource: arn:aws:firehose:us-east-1:x:deliverystream/x with an explicit deny in an identity-based policy.
//
// For an example IAM policy, see [Tag example.](https://docs.aws.amazon.com/firehose/latest/APIReference/API_CreateDeliveryStream.html#API_CreateDeliveryStream_Examples)
func (o LookupDeliveryStreamResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDeliveryStreamResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeliveryStreamResultOutput{})
}
