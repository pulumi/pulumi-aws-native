// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kinesisfirehose

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::KinesisFirehose::DeliveryStream
type DeliveryStream struct {
	pulumi.CustomResourceState

	// Describes the configuration of a destination in the Serverless offering for Amazon OpenSearch Service.
	AmazonOpenSearchServerlessDestinationConfiguration DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput `pulumi:"amazonOpenSearchServerlessDestinationConfiguration"`
	// The destination in Amazon OpenSearch Service. You can specify only one destination.
	AmazonopensearchserviceDestinationConfiguration DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput `pulumi:"amazonopensearchserviceDestinationConfiguration"`
	// The Amazon Resource Name (ARN) of the delivery stream, such as `arn:aws:firehose:us-east-2:123456789012:deliverystream/delivery-stream-name` .
	Arn                         pulumi.StringOutput                                `pulumi:"arn"`
	DatabaseSourceConfiguration DeliveryStreamDatabaseSourceConfigurationPtrOutput `pulumi:"databaseSourceConfiguration"`
	// Specifies the type and Amazon Resource Name (ARN) of the CMK to use for Server-Side Encryption (SSE).
	DeliveryStreamEncryptionConfigurationInput DeliveryStreamEncryptionConfigurationInputTypePtrOutput `pulumi:"deliveryStreamEncryptionConfigurationInput"`
	// The name of the Firehose stream.
	DeliveryStreamName pulumi.StringPtrOutput `pulumi:"deliveryStreamName"`
	// The Firehose stream type. This can be one of the following values:
	//
	// - `DirectPut` : Provider applications access the Firehose stream directly.
	// - `KinesisStreamAsSource` : The Firehose stream uses a Kinesis data stream as a source.
	DeliveryStreamType DeliveryStreamTypePtrOutput `pulumi:"deliveryStreamType"`
	// An Amazon ES destination for the delivery stream.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon ES destination to an Amazon S3 or Amazon Redshift destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	ElasticsearchDestinationConfiguration DeliveryStreamElasticsearchDestinationConfigurationPtrOutput `pulumi:"elasticsearchDestinationConfiguration"`
	// An Amazon S3 destination for the delivery stream.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon Extended S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	ExtendedS3DestinationConfiguration DeliveryStreamExtendedS3DestinationConfigurationPtrOutput `pulumi:"extendedS3DestinationConfiguration"`
	// Enables configuring Kinesis Firehose to deliver data to any HTTP endpoint destination. You can specify only one destination.
	HttpEndpointDestinationConfiguration DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput `pulumi:"httpEndpointDestinationConfiguration"`
	// Specifies the destination configure settings for Apache Iceberg Table.
	IcebergDestinationConfiguration DeliveryStreamIcebergDestinationConfigurationPtrOutput `pulumi:"icebergDestinationConfiguration"`
	// When a Kinesis stream is used as the source for the delivery stream, a [KinesisStreamSourceConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-kinesisstreamsourceconfiguration.html) containing the Kinesis stream ARN and the role ARN for the source stream.
	KinesisStreamSourceConfiguration DeliveryStreamKinesisStreamSourceConfigurationPtrOutput `pulumi:"kinesisStreamSourceConfiguration"`
	// The configuration for the Amazon MSK cluster to be used as the source for a delivery stream.
	MskSourceConfiguration DeliveryStreamMskSourceConfigurationPtrOutput `pulumi:"mskSourceConfiguration"`
	// An Amazon Redshift destination for the delivery stream.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon Redshift destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	RedshiftDestinationConfiguration DeliveryStreamRedshiftDestinationConfigurationPtrOutput `pulumi:"redshiftDestinationConfiguration"`
	// The `S3DestinationConfiguration` property type specifies an Amazon Simple Storage Service (Amazon S3) destination to which Amazon Kinesis Data Firehose (Kinesis Data Firehose) delivers data.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	S3DestinationConfiguration DeliveryStreamS3DestinationConfigurationPtrOutput `pulumi:"s3DestinationConfiguration"`
	// Configure Snowflake destination
	SnowflakeDestinationConfiguration DeliveryStreamSnowflakeDestinationConfigurationPtrOutput `pulumi:"snowflakeDestinationConfiguration"`
	// The configuration of a destination in Splunk for the delivery stream.
	SplunkDestinationConfiguration DeliveryStreamSplunkDestinationConfigurationPtrOutput `pulumi:"splunkDestinationConfiguration"`
	// A set of tags to assign to the Firehose stream. A tag is a key-value pair that you can define and assign to AWS resources. Tags are metadata. For example, you can add friendly names and descriptions or other types of information that can help you distinguish the Firehose stream. For more information about tags, see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the AWS Billing and Cost Management User Guide.
	//
	// You can specify up to 50 tags when creating a Firehose stream.
	//
	// If you specify tags in the `CreateDeliveryStream` action, Amazon Data Firehose performs an additional authorization on the `firehose:TagDeliveryStream` action to verify if users have permissions to create tags. If you do not provide this permission, requests to create new Firehose Firehose streams with IAM resource tags will fail with an `AccessDeniedException` such as following.
	//
	// *AccessDeniedException*
	//
	// User: arn:aws:sts::x:assumed-role/x/x is not authorized to perform: firehose:TagDeliveryStream on resource: arn:aws:firehose:us-east-1:x:deliverystream/x with an explicit deny in an identity-based policy.
	//
	// For an example IAM policy, see [Tag example.](https://docs.aws.amazon.com/firehose/latest/APIReference/API_CreateDeliveryStream.html#API_CreateDeliveryStream_Examples)
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewDeliveryStream registers a new resource with the given unique name, arguments, and options.
func NewDeliveryStream(ctx *pulumi.Context,
	name string, args *DeliveryStreamArgs, opts ...pulumi.ResourceOption) (*DeliveryStream, error) {
	if args == nil {
		args = &DeliveryStreamArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"amazonOpenSearchServerlessDestinationConfiguration.vpcConfiguration",
		"amazonopensearchserviceDestinationConfiguration.vpcConfiguration",
		"databaseSourceConfiguration",
		"deliveryStreamName",
		"deliveryStreamType",
		"elasticsearchDestinationConfiguration.vpcConfiguration",
		"icebergDestinationConfiguration",
		"kinesisStreamSourceConfiguration",
		"mskSourceConfiguration",
		"snowflakeDestinationConfiguration.snowflakeVpcConfiguration",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DeliveryStream
	err := ctx.RegisterResource("aws-native:kinesisfirehose:DeliveryStream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeliveryStream gets an existing DeliveryStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeliveryStream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeliveryStreamState, opts ...pulumi.ResourceOption) (*DeliveryStream, error) {
	var resource DeliveryStream
	err := ctx.ReadResource("aws-native:kinesisfirehose:DeliveryStream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeliveryStream resources.
type deliveryStreamState struct {
}

type DeliveryStreamState struct {
}

func (DeliveryStreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryStreamState)(nil)).Elem()
}

type deliveryStreamArgs struct {
	// Describes the configuration of a destination in the Serverless offering for Amazon OpenSearch Service.
	AmazonOpenSearchServerlessDestinationConfiguration *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration `pulumi:"amazonOpenSearchServerlessDestinationConfiguration"`
	// The destination in Amazon OpenSearch Service. You can specify only one destination.
	AmazonopensearchserviceDestinationConfiguration *DeliveryStreamAmazonopensearchserviceDestinationConfiguration `pulumi:"amazonopensearchserviceDestinationConfiguration"`
	DatabaseSourceConfiguration                     *DeliveryStreamDatabaseSourceConfiguration                     `pulumi:"databaseSourceConfiguration"`
	// Specifies the type and Amazon Resource Name (ARN) of the CMK to use for Server-Side Encryption (SSE).
	DeliveryStreamEncryptionConfigurationInput *DeliveryStreamEncryptionConfigurationInputType `pulumi:"deliveryStreamEncryptionConfigurationInput"`
	// The name of the Firehose stream.
	DeliveryStreamName *string `pulumi:"deliveryStreamName"`
	// The Firehose stream type. This can be one of the following values:
	//
	// - `DirectPut` : Provider applications access the Firehose stream directly.
	// - `KinesisStreamAsSource` : The Firehose stream uses a Kinesis data stream as a source.
	DeliveryStreamType *DeliveryStreamType `pulumi:"deliveryStreamType"`
	// An Amazon ES destination for the delivery stream.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon ES destination to an Amazon S3 or Amazon Redshift destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	ElasticsearchDestinationConfiguration *DeliveryStreamElasticsearchDestinationConfiguration `pulumi:"elasticsearchDestinationConfiguration"`
	// An Amazon S3 destination for the delivery stream.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon Extended S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	ExtendedS3DestinationConfiguration *DeliveryStreamExtendedS3DestinationConfiguration `pulumi:"extendedS3DestinationConfiguration"`
	// Enables configuring Kinesis Firehose to deliver data to any HTTP endpoint destination. You can specify only one destination.
	HttpEndpointDestinationConfiguration *DeliveryStreamHttpEndpointDestinationConfiguration `pulumi:"httpEndpointDestinationConfiguration"`
	// Specifies the destination configure settings for Apache Iceberg Table.
	IcebergDestinationConfiguration *DeliveryStreamIcebergDestinationConfiguration `pulumi:"icebergDestinationConfiguration"`
	// When a Kinesis stream is used as the source for the delivery stream, a [KinesisStreamSourceConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-kinesisstreamsourceconfiguration.html) containing the Kinesis stream ARN and the role ARN for the source stream.
	KinesisStreamSourceConfiguration *DeliveryStreamKinesisStreamSourceConfiguration `pulumi:"kinesisStreamSourceConfiguration"`
	// The configuration for the Amazon MSK cluster to be used as the source for a delivery stream.
	MskSourceConfiguration *DeliveryStreamMskSourceConfiguration `pulumi:"mskSourceConfiguration"`
	// An Amazon Redshift destination for the delivery stream.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon Redshift destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	RedshiftDestinationConfiguration *DeliveryStreamRedshiftDestinationConfiguration `pulumi:"redshiftDestinationConfiguration"`
	// The `S3DestinationConfiguration` property type specifies an Amazon Simple Storage Service (Amazon S3) destination to which Amazon Kinesis Data Firehose (Kinesis Data Firehose) delivers data.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	S3DestinationConfiguration *DeliveryStreamS3DestinationConfiguration `pulumi:"s3DestinationConfiguration"`
	// Configure Snowflake destination
	SnowflakeDestinationConfiguration *DeliveryStreamSnowflakeDestinationConfiguration `pulumi:"snowflakeDestinationConfiguration"`
	// The configuration of a destination in Splunk for the delivery stream.
	SplunkDestinationConfiguration *DeliveryStreamSplunkDestinationConfiguration `pulumi:"splunkDestinationConfiguration"`
	// A set of tags to assign to the Firehose stream. A tag is a key-value pair that you can define and assign to AWS resources. Tags are metadata. For example, you can add friendly names and descriptions or other types of information that can help you distinguish the Firehose stream. For more information about tags, see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the AWS Billing and Cost Management User Guide.
	//
	// You can specify up to 50 tags when creating a Firehose stream.
	//
	// If you specify tags in the `CreateDeliveryStream` action, Amazon Data Firehose performs an additional authorization on the `firehose:TagDeliveryStream` action to verify if users have permissions to create tags. If you do not provide this permission, requests to create new Firehose Firehose streams with IAM resource tags will fail with an `AccessDeniedException` such as following.
	//
	// *AccessDeniedException*
	//
	// User: arn:aws:sts::x:assumed-role/x/x is not authorized to perform: firehose:TagDeliveryStream on resource: arn:aws:firehose:us-east-1:x:deliverystream/x with an explicit deny in an identity-based policy.
	//
	// For an example IAM policy, see [Tag example.](https://docs.aws.amazon.com/firehose/latest/APIReference/API_CreateDeliveryStream.html#API_CreateDeliveryStream_Examples)
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a DeliveryStream resource.
type DeliveryStreamArgs struct {
	// Describes the configuration of a destination in the Serverless offering for Amazon OpenSearch Service.
	AmazonOpenSearchServerlessDestinationConfiguration DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrInput
	// The destination in Amazon OpenSearch Service. You can specify only one destination.
	AmazonopensearchserviceDestinationConfiguration DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrInput
	DatabaseSourceConfiguration                     DeliveryStreamDatabaseSourceConfigurationPtrInput
	// Specifies the type and Amazon Resource Name (ARN) of the CMK to use for Server-Side Encryption (SSE).
	DeliveryStreamEncryptionConfigurationInput DeliveryStreamEncryptionConfigurationInputTypePtrInput
	// The name of the Firehose stream.
	DeliveryStreamName pulumi.StringPtrInput
	// The Firehose stream type. This can be one of the following values:
	//
	// - `DirectPut` : Provider applications access the Firehose stream directly.
	// - `KinesisStreamAsSource` : The Firehose stream uses a Kinesis data stream as a source.
	DeliveryStreamType DeliveryStreamTypePtrInput
	// An Amazon ES destination for the delivery stream.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon ES destination to an Amazon S3 or Amazon Redshift destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	ElasticsearchDestinationConfiguration DeliveryStreamElasticsearchDestinationConfigurationPtrInput
	// An Amazon S3 destination for the delivery stream.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon Extended S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	ExtendedS3DestinationConfiguration DeliveryStreamExtendedS3DestinationConfigurationPtrInput
	// Enables configuring Kinesis Firehose to deliver data to any HTTP endpoint destination. You can specify only one destination.
	HttpEndpointDestinationConfiguration DeliveryStreamHttpEndpointDestinationConfigurationPtrInput
	// Specifies the destination configure settings for Apache Iceberg Table.
	IcebergDestinationConfiguration DeliveryStreamIcebergDestinationConfigurationPtrInput
	// When a Kinesis stream is used as the source for the delivery stream, a [KinesisStreamSourceConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-kinesisstreamsourceconfiguration.html) containing the Kinesis stream ARN and the role ARN for the source stream.
	KinesisStreamSourceConfiguration DeliveryStreamKinesisStreamSourceConfigurationPtrInput
	// The configuration for the Amazon MSK cluster to be used as the source for a delivery stream.
	MskSourceConfiguration DeliveryStreamMskSourceConfigurationPtrInput
	// An Amazon Redshift destination for the delivery stream.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon Redshift destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	RedshiftDestinationConfiguration DeliveryStreamRedshiftDestinationConfigurationPtrInput
	// The `S3DestinationConfiguration` property type specifies an Amazon Simple Storage Service (Amazon S3) destination to which Amazon Kinesis Data Firehose (Kinesis Data Firehose) delivers data.
	//
	// Conditional. You must specify only one destination configuration.
	//
	// If you change the delivery stream destination from an Amazon S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
	S3DestinationConfiguration DeliveryStreamS3DestinationConfigurationPtrInput
	// Configure Snowflake destination
	SnowflakeDestinationConfiguration DeliveryStreamSnowflakeDestinationConfigurationPtrInput
	// The configuration of a destination in Splunk for the delivery stream.
	SplunkDestinationConfiguration DeliveryStreamSplunkDestinationConfigurationPtrInput
	// A set of tags to assign to the Firehose stream. A tag is a key-value pair that you can define and assign to AWS resources. Tags are metadata. For example, you can add friendly names and descriptions or other types of information that can help you distinguish the Firehose stream. For more information about tags, see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the AWS Billing and Cost Management User Guide.
	//
	// You can specify up to 50 tags when creating a Firehose stream.
	//
	// If you specify tags in the `CreateDeliveryStream` action, Amazon Data Firehose performs an additional authorization on the `firehose:TagDeliveryStream` action to verify if users have permissions to create tags. If you do not provide this permission, requests to create new Firehose Firehose streams with IAM resource tags will fail with an `AccessDeniedException` such as following.
	//
	// *AccessDeniedException*
	//
	// User: arn:aws:sts::x:assumed-role/x/x is not authorized to perform: firehose:TagDeliveryStream on resource: arn:aws:firehose:us-east-1:x:deliverystream/x with an explicit deny in an identity-based policy.
	//
	// For an example IAM policy, see [Tag example.](https://docs.aws.amazon.com/firehose/latest/APIReference/API_CreateDeliveryStream.html#API_CreateDeliveryStream_Examples)
	Tags aws.TagArrayInput
}

func (DeliveryStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryStreamArgs)(nil)).Elem()
}

type DeliveryStreamInput interface {
	pulumi.Input

	ToDeliveryStreamOutput() DeliveryStreamOutput
	ToDeliveryStreamOutputWithContext(ctx context.Context) DeliveryStreamOutput
}

func (*DeliveryStream) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStream)(nil)).Elem()
}

func (i *DeliveryStream) ToDeliveryStreamOutput() DeliveryStreamOutput {
	return i.ToDeliveryStreamOutputWithContext(context.Background())
}

func (i *DeliveryStream) ToDeliveryStreamOutputWithContext(ctx context.Context) DeliveryStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamOutput)
}

type DeliveryStreamOutput struct{ *pulumi.OutputState }

func (DeliveryStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStream)(nil)).Elem()
}

func (o DeliveryStreamOutput) ToDeliveryStreamOutput() DeliveryStreamOutput {
	return o
}

func (o DeliveryStreamOutput) ToDeliveryStreamOutputWithContext(ctx context.Context) DeliveryStreamOutput {
	return o
}

// Describes the configuration of a destination in the Serverless offering for Amazon OpenSearch Service.
func (o DeliveryStreamOutput) AmazonOpenSearchServerlessDestinationConfiguration() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput {
		return v.AmazonOpenSearchServerlessDestinationConfiguration
	}).(DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput)
}

// The destination in Amazon OpenSearch Service. You can specify only one destination.
func (o DeliveryStreamOutput) AmazonopensearchserviceDestinationConfiguration() DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput {
		return v.AmazonopensearchserviceDestinationConfiguration
	}).(DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the delivery stream, such as `arn:aws:firehose:us-east-2:123456789012:deliverystream/delivery-stream-name` .
func (o DeliveryStreamOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryStream) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o DeliveryStreamOutput) DatabaseSourceConfiguration() DeliveryStreamDatabaseSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamDatabaseSourceConfigurationPtrOutput {
		return v.DatabaseSourceConfiguration
	}).(DeliveryStreamDatabaseSourceConfigurationPtrOutput)
}

// Specifies the type and Amazon Resource Name (ARN) of the CMK to use for Server-Side Encryption (SSE).
func (o DeliveryStreamOutput) DeliveryStreamEncryptionConfigurationInput() DeliveryStreamEncryptionConfigurationInputTypePtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamEncryptionConfigurationInputTypePtrOutput {
		return v.DeliveryStreamEncryptionConfigurationInput
	}).(DeliveryStreamEncryptionConfigurationInputTypePtrOutput)
}

// The name of the Firehose stream.
func (o DeliveryStreamOutput) DeliveryStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) pulumi.StringPtrOutput { return v.DeliveryStreamName }).(pulumi.StringPtrOutput)
}

// The Firehose stream type. This can be one of the following values:
//
// - `DirectPut` : Provider applications access the Firehose stream directly.
// - `KinesisStreamAsSource` : The Firehose stream uses a Kinesis data stream as a source.
func (o DeliveryStreamOutput) DeliveryStreamType() DeliveryStreamTypePtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamTypePtrOutput { return v.DeliveryStreamType }).(DeliveryStreamTypePtrOutput)
}

// An Amazon ES destination for the delivery stream.
//
// Conditional. You must specify only one destination configuration.
//
// If you change the delivery stream destination from an Amazon ES destination to an Amazon S3 or Amazon Redshift destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
func (o DeliveryStreamOutput) ElasticsearchDestinationConfiguration() DeliveryStreamElasticsearchDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamElasticsearchDestinationConfigurationPtrOutput {
		return v.ElasticsearchDestinationConfiguration
	}).(DeliveryStreamElasticsearchDestinationConfigurationPtrOutput)
}

// An Amazon S3 destination for the delivery stream.
//
// Conditional. You must specify only one destination configuration.
//
// If you change the delivery stream destination from an Amazon Extended S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
func (o DeliveryStreamOutput) ExtendedS3DestinationConfiguration() DeliveryStreamExtendedS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamExtendedS3DestinationConfigurationPtrOutput {
		return v.ExtendedS3DestinationConfiguration
	}).(DeliveryStreamExtendedS3DestinationConfigurationPtrOutput)
}

// Enables configuring Kinesis Firehose to deliver data to any HTTP endpoint destination. You can specify only one destination.
func (o DeliveryStreamOutput) HttpEndpointDestinationConfiguration() DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput {
		return v.HttpEndpointDestinationConfiguration
	}).(DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput)
}

// Specifies the destination configure settings for Apache Iceberg Table.
func (o DeliveryStreamOutput) IcebergDestinationConfiguration() DeliveryStreamIcebergDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamIcebergDestinationConfigurationPtrOutput {
		return v.IcebergDestinationConfiguration
	}).(DeliveryStreamIcebergDestinationConfigurationPtrOutput)
}

// When a Kinesis stream is used as the source for the delivery stream, a [KinesisStreamSourceConfiguration](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-kinesisfirehose-deliverystream-kinesisstreamsourceconfiguration.html) containing the Kinesis stream ARN and the role ARN for the source stream.
func (o DeliveryStreamOutput) KinesisStreamSourceConfiguration() DeliveryStreamKinesisStreamSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamKinesisStreamSourceConfigurationPtrOutput {
		return v.KinesisStreamSourceConfiguration
	}).(DeliveryStreamKinesisStreamSourceConfigurationPtrOutput)
}

// The configuration for the Amazon MSK cluster to be used as the source for a delivery stream.
func (o DeliveryStreamOutput) MskSourceConfiguration() DeliveryStreamMskSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamMskSourceConfigurationPtrOutput { return v.MskSourceConfiguration }).(DeliveryStreamMskSourceConfigurationPtrOutput)
}

// An Amazon Redshift destination for the delivery stream.
//
// Conditional. You must specify only one destination configuration.
//
// If you change the delivery stream destination from an Amazon Redshift destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
func (o DeliveryStreamOutput) RedshiftDestinationConfiguration() DeliveryStreamRedshiftDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamRedshiftDestinationConfigurationPtrOutput {
		return v.RedshiftDestinationConfiguration
	}).(DeliveryStreamRedshiftDestinationConfigurationPtrOutput)
}

// The `S3DestinationConfiguration` property type specifies an Amazon Simple Storage Service (Amazon S3) destination to which Amazon Kinesis Data Firehose (Kinesis Data Firehose) delivers data.
//
// Conditional. You must specify only one destination configuration.
//
// If you change the delivery stream destination from an Amazon S3 destination to an Amazon ES destination, update requires [some interruptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks-update-behaviors.html#update-some-interrupt) .
func (o DeliveryStreamOutput) S3DestinationConfiguration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamS3DestinationConfigurationPtrOutput {
		return v.S3DestinationConfiguration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// Configure Snowflake destination
func (o DeliveryStreamOutput) SnowflakeDestinationConfiguration() DeliveryStreamSnowflakeDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamSnowflakeDestinationConfigurationPtrOutput {
		return v.SnowflakeDestinationConfiguration
	}).(DeliveryStreamSnowflakeDestinationConfigurationPtrOutput)
}

// The configuration of a destination in Splunk for the delivery stream.
func (o DeliveryStreamOutput) SplunkDestinationConfiguration() DeliveryStreamSplunkDestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStream) DeliveryStreamSplunkDestinationConfigurationPtrOutput {
		return v.SplunkDestinationConfiguration
	}).(DeliveryStreamSplunkDestinationConfigurationPtrOutput)
}

// A set of tags to assign to the Firehose stream. A tag is a key-value pair that you can define and assign to AWS resources. Tags are metadata. For example, you can add friendly names and descriptions or other types of information that can help you distinguish the Firehose stream. For more information about tags, see [Using Cost Allocation Tags](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html) in the AWS Billing and Cost Management User Guide.
//
// You can specify up to 50 tags when creating a Firehose stream.
//
// If you specify tags in the `CreateDeliveryStream` action, Amazon Data Firehose performs an additional authorization on the `firehose:TagDeliveryStream` action to verify if users have permissions to create tags. If you do not provide this permission, requests to create new Firehose Firehose streams with IAM resource tags will fail with an `AccessDeniedException` such as following.
//
// *AccessDeniedException*
//
// User: arn:aws:sts::x:assumed-role/x/x is not authorized to perform: firehose:TagDeliveryStream on resource: arn:aws:firehose:us-east-1:x:deliverystream/x with an explicit deny in an identity-based policy.
//
// For an example IAM policy, see [Tag example.](https://docs.aws.amazon.com/firehose/latest/APIReference/API_CreateDeliveryStream.html#API_CreateDeliveryStream_Examples)
func (o DeliveryStreamOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *DeliveryStream) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamInput)(nil)).Elem(), &DeliveryStream{})
	pulumi.RegisterOutputType(DeliveryStreamOutput{})
}
