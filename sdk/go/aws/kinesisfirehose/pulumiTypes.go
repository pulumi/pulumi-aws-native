// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kinesisfirehose

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DeliveryStreamAmazonOpenSearchServerlessBufferingHints struct {
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	//
	// We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.
	SizeInMbs *int `pulumi:"sizeInMbs"`
}

// DeliveryStreamAmazonOpenSearchServerlessBufferingHintsInput is an input type that accepts DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs and DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput values.
// You can construct a concrete instance of `DeliveryStreamAmazonOpenSearchServerlessBufferingHintsInput` via:
//
//	DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs{...}
type DeliveryStreamAmazonOpenSearchServerlessBufferingHintsInput interface {
	pulumi.Input

	ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput() DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput
	ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutputWithContext(context.Context) DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput
}

type DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs struct {
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	//
	// We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.
	SizeInMbs pulumi.IntPtrInput `pulumi:"sizeInMbs"`
}

func (DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAmazonOpenSearchServerlessBufferingHints)(nil)).Elem()
}

func (i DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs) ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput() DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput {
	return i.ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutputWithContext(context.Background())
}

func (i DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs) ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput)
}

func (i DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs) ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput() DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput {
	return i.ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs) ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput).ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutputWithContext(ctx)
}

// DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrInput is an input type that accepts DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs, DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtr and DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrInput` via:
//
//	        DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput() DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput
	ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutputWithContext(context.Context) DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput
}

type deliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrType DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs

func DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtr(v *DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs) DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrInput {
	return (*deliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrType)(v)
}

func (*deliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAmazonOpenSearchServerlessBufferingHints)(nil)).Elem()
}

func (i *deliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrType) ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput() DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput {
	return i.ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrType) ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput)
}

type DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAmazonOpenSearchServerlessBufferingHints)(nil)).Elem()
}

func (o DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput) ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput() DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput {
	return o
}

func (o DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput) ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput {
	return o
}

func (o DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput) ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput() DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput {
	return o.ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput) ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamAmazonOpenSearchServerlessBufferingHints) *DeliveryStreamAmazonOpenSearchServerlessBufferingHints {
		return &v
	}).(DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
func (o DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessBufferingHints) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
//
// We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.
func (o DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput) SizeInMbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessBufferingHints) *int { return v.SizeInMbs }).(pulumi.IntPtrOutput)
}

type DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAmazonOpenSearchServerlessBufferingHints)(nil)).Elem()
}

func (o DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput) ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput() DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput {
	return o
}

func (o DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput) ToDeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput {
	return o
}

func (o DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput) Elem() DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessBufferingHints) DeliveryStreamAmazonOpenSearchServerlessBufferingHints {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamAmazonOpenSearchServerlessBufferingHints
		return ret
	}).(DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
func (o DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessBufferingHints) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
//
// We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.
func (o DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput) SizeInMbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessBufferingHints) *int {
		if v == nil {
			return nil
		}
		return v.SizeInMbs
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration struct {
	// The buffering options. If no value is specified, the default values for AmazonopensearchserviceBufferingHints are used.
	BufferingHints           *DeliveryStreamAmazonOpenSearchServerlessBufferingHints `pulumi:"bufferingHints"`
	CloudWatchLoggingOptions *DeliveryStreamCloudWatchLoggingOptions                 `pulumi:"cloudWatchLoggingOptions"`
	// The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
	CollectionEndpoint *string `pulumi:"collectionEndpoint"`
	// The Serverless offering for Amazon OpenSearch Service index name.
	IndexName               string                                 `pulumi:"indexName"`
	ProcessingConfiguration *DeliveryStreamProcessingConfiguration `pulumi:"processingConfiguration"`
	// The retry behavior in case Firehose is unable to deliver documents to the Serverless offering for Amazon OpenSearch Service. The default value is 300 (5 minutes).
	RetryOptions *DeliveryStreamAmazonOpenSearchServerlessRetryOptions `pulumi:"retryOptions"`
	// The Amazon Resource Name (ARN) of the IAM role to be assumed by Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.
	RoleArn string `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3. When it is set to FailedDocumentsOnly, Firehose writes any documents that could not be indexed to the configured Amazon S3 destination, with AmazonOpenSearchService-failed/ appended to the key prefix. When set to AllDocuments, Firehose delivers all incoming records to Amazon S3, and also writes failed documents with AmazonOpenSearchService-failed/ appended to the prefix.
	S3BackupMode     *DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationS3BackupMode `pulumi:"s3BackupMode"`
	S3Configuration  DeliveryStreamS3DestinationConfiguration                                      `pulumi:"s3Configuration"`
	VpcConfiguration *DeliveryStreamVpcConfiguration                                               `pulumi:"vpcConfiguration"`
}

// DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationInput is an input type that accepts DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs and DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationInput` via:
//
//	DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs{...}
type DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput
	ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutputWithContext(context.Context) DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput
}

type DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs struct {
	// The buffering options. If no value is specified, the default values for AmazonopensearchserviceBufferingHints are used.
	BufferingHints           DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrInput `pulumi:"bufferingHints"`
	CloudWatchLoggingOptions DeliveryStreamCloudWatchLoggingOptionsPtrInput                 `pulumi:"cloudWatchLoggingOptions"`
	// The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
	CollectionEndpoint pulumi.StringPtrInput `pulumi:"collectionEndpoint"`
	// The Serverless offering for Amazon OpenSearch Service index name.
	IndexName               pulumi.StringInput                            `pulumi:"indexName"`
	ProcessingConfiguration DeliveryStreamProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The retry behavior in case Firehose is unable to deliver documents to the Serverless offering for Amazon OpenSearch Service. The default value is 300 (5 minutes).
	RetryOptions DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrInput `pulumi:"retryOptions"`
	// The Amazon Resource Name (ARN) of the IAM role to be assumed by Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3. When it is set to FailedDocumentsOnly, Firehose writes any documents that could not be indexed to the configured Amazon S3 destination, with AmazonOpenSearchService-failed/ appended to the key prefix. When set to AllDocuments, Firehose delivers all incoming records to Amazon S3, and also writes failed documents with AmazonOpenSearchService-failed/ appended to the prefix.
	S3BackupMode     DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationS3BackupModePtrInput `pulumi:"s3BackupMode"`
	S3Configuration  DeliveryStreamS3DestinationConfigurationInput                                        `pulumi:"s3Configuration"`
	VpcConfiguration DeliveryStreamVpcConfigurationPtrInput                                               `pulumi:"vpcConfiguration"`
}

func (DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration)(nil)).Elem()
}

func (i DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs) ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput {
	return i.ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs) ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput)
}

func (i DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs) ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs) ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput).ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrInput is an input type that accepts DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs, DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtr and DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrInput` via:
//
//	        DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput
	ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutputWithContext(context.Context) DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput
}

type deliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrType DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs

func DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtr(v *DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs) DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrInput {
	return (*deliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrType)(v)
}

func (*deliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration)(nil)).Elem()
}

func (i *deliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrType) ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrType) ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput)
}

type DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput {
	return o.ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration {
		return &v
	}).(DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput)
}

// The buffering options. If no value is specified, the default values for AmazonopensearchserviceBufferingHints are used.
func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) BufferingHints() DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamAmazonOpenSearchServerlessBufferingHints {
		return v.BufferingHints
	}).(DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput)
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) CollectionEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *string {
		return v.CollectionEndpoint
	}).(pulumi.StringPtrOutput)
}

// The Serverless offering for Amazon OpenSearch Service index name.
func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) string { return v.IndexName }).(pulumi.StringOutput)
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The retry behavior in case Firehose is unable to deliver documents to the Serverless offering for Amazon OpenSearch Service. The default value is 300 (5 minutes).
func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) RetryOptions() DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamAmazonOpenSearchServerlessRetryOptions {
		return v.RetryOptions
	}).(DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role to be assumed by Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.
func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Defines how documents should be delivered to Amazon S3. When it is set to FailedDocumentsOnly, Firehose writes any documents that could not be indexed to the configured Amazon S3 destination, with AmazonOpenSearchService-failed/ appended to the key prefix. When set to AllDocuments, Firehose delivers all incoming records to Amazon S3, and also writes failed documents with AmazonOpenSearchService-failed/ appended to the prefix.
func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) S3BackupMode() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationS3BackupModePtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationS3BackupMode {
		return v.S3BackupMode
	}).(DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationS3BackupModePtrOutput)
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) DeliveryStreamS3DestinationConfiguration {
		return v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationOutput)
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput) VpcConfiguration() DeliveryStreamVpcConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamVpcConfiguration {
		return v.VpcConfiguration
	}).(DeliveryStreamVpcConfigurationPtrOutput)
}

type DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) ToDeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) Elem() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration
		return ret
	}).(DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput)
}

// The buffering options. If no value is specified, the default values for AmazonopensearchserviceBufferingHints are used.
func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) BufferingHints() DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamAmazonOpenSearchServerlessBufferingHints {
		if v == nil {
			return nil
		}
		return v.BufferingHints
	}).(DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput)
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The endpoint to use when communicating with the collection in the Serverless offering for Amazon OpenSearch Service.
func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) CollectionEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CollectionEndpoint
	}).(pulumi.StringPtrOutput)
}

// The Serverless offering for Amazon OpenSearch Service index name.
func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) IndexName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.IndexName
	}).(pulumi.StringPtrOutput)
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The retry behavior in case Firehose is unable to deliver documents to the Serverless offering for Amazon OpenSearch Service. The default value is 300 (5 minutes).
func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) RetryOptions() DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamAmazonOpenSearchServerlessRetryOptions {
		if v == nil {
			return nil
		}
		return v.RetryOptions
	}).(DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role to be assumed by Firehose for calling the Serverless offering for Amazon OpenSearch Service Configuration API and for indexing documents.
func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Defines how documents should be delivered to Amazon S3. When it is set to FailedDocumentsOnly, Firehose writes any documents that could not be indexed to the configured Amazon S3 destination, with AmazonOpenSearchService-failed/ appended to the key prefix. When set to AllDocuments, Firehose delivers all incoming records to Amazon S3, and also writes failed documents with AmazonOpenSearchService-failed/ appended to the prefix.
func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) S3BackupMode() DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationS3BackupModePtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationS3BackupMode {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationS3BackupModePtrOutput)
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamS3DestinationConfiguration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

func (o DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput) VpcConfiguration() DeliveryStreamVpcConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessDestinationConfiguration) *DeliveryStreamVpcConfiguration {
		if v == nil {
			return nil
		}
		return v.VpcConfiguration
	}).(DeliveryStreamVpcConfigurationPtrOutput)
}

type DeliveryStreamAmazonOpenSearchServerlessRetryOptions struct {
	// After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time during which Firehose retries delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries.
	DurationInSeconds *int `pulumi:"durationInSeconds"`
}

// DeliveryStreamAmazonOpenSearchServerlessRetryOptionsInput is an input type that accepts DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs and DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput values.
// You can construct a concrete instance of `DeliveryStreamAmazonOpenSearchServerlessRetryOptionsInput` via:
//
//	DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs{...}
type DeliveryStreamAmazonOpenSearchServerlessRetryOptionsInput interface {
	pulumi.Input

	ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput() DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput
	ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutputWithContext(context.Context) DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput
}

type DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs struct {
	// After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time during which Firehose retries delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries.
	DurationInSeconds pulumi.IntPtrInput `pulumi:"durationInSeconds"`
}

func (DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAmazonOpenSearchServerlessRetryOptions)(nil)).Elem()
}

func (i DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs) ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput() DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput {
	return i.ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutputWithContext(context.Background())
}

func (i DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs) ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput)
}

func (i DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs) ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput() DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput {
	return i.ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs) ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput).ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutputWithContext(ctx)
}

// DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrInput is an input type that accepts DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs, DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtr and DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrInput` via:
//
//	        DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput() DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput
	ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutputWithContext(context.Context) DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput
}

type deliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrType DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs

func DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtr(v *DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs) DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrInput {
	return (*deliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrType)(v)
}

func (*deliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAmazonOpenSearchServerlessRetryOptions)(nil)).Elem()
}

func (i *deliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrType) ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput() DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput {
	return i.ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrType) ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput)
}

type DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAmazonOpenSearchServerlessRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput) ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput() DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput {
	return o
}

func (o DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput) ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput {
	return o
}

func (o DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput) ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput() DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput {
	return o.ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput) ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamAmazonOpenSearchServerlessRetryOptions) *DeliveryStreamAmazonOpenSearchServerlessRetryOptions {
		return &v
	}).(DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput)
}

// After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time during which Firehose retries delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries.
func (o DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonOpenSearchServerlessRetryOptions) *int { return v.DurationInSeconds }).(pulumi.IntPtrOutput)
}

type DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAmazonOpenSearchServerlessRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput) ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput() DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput) ToDeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput) Elem() DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessRetryOptions) DeliveryStreamAmazonOpenSearchServerlessRetryOptions {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamAmazonOpenSearchServerlessRetryOptions
		return ret
	}).(DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput)
}

// After an initial failure to deliver to the Serverless offering for Amazon OpenSearch Service, the total amount of time during which Firehose retries delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries.
func (o DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonOpenSearchServerlessRetryOptions) *int {
		if v == nil {
			return nil
		}
		return v.DurationInSeconds
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamAmazonopensearchserviceBufferingHints struct {
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5. We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.
	SizeInMbs *int `pulumi:"sizeInMbs"`
}

// DeliveryStreamAmazonopensearchserviceBufferingHintsInput is an input type that accepts DeliveryStreamAmazonopensearchserviceBufferingHintsArgs and DeliveryStreamAmazonopensearchserviceBufferingHintsOutput values.
// You can construct a concrete instance of `DeliveryStreamAmazonopensearchserviceBufferingHintsInput` via:
//
//	DeliveryStreamAmazonopensearchserviceBufferingHintsArgs{...}
type DeliveryStreamAmazonopensearchserviceBufferingHintsInput interface {
	pulumi.Input

	ToDeliveryStreamAmazonopensearchserviceBufferingHintsOutput() DeliveryStreamAmazonopensearchserviceBufferingHintsOutput
	ToDeliveryStreamAmazonopensearchserviceBufferingHintsOutputWithContext(context.Context) DeliveryStreamAmazonopensearchserviceBufferingHintsOutput
}

type DeliveryStreamAmazonopensearchserviceBufferingHintsArgs struct {
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5. We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.
	SizeInMbs pulumi.IntPtrInput `pulumi:"sizeInMbs"`
}

func (DeliveryStreamAmazonopensearchserviceBufferingHintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAmazonopensearchserviceBufferingHints)(nil)).Elem()
}

func (i DeliveryStreamAmazonopensearchserviceBufferingHintsArgs) ToDeliveryStreamAmazonopensearchserviceBufferingHintsOutput() DeliveryStreamAmazonopensearchserviceBufferingHintsOutput {
	return i.ToDeliveryStreamAmazonopensearchserviceBufferingHintsOutputWithContext(context.Background())
}

func (i DeliveryStreamAmazonopensearchserviceBufferingHintsArgs) ToDeliveryStreamAmazonopensearchserviceBufferingHintsOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceBufferingHintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonopensearchserviceBufferingHintsOutput)
}

func (i DeliveryStreamAmazonopensearchserviceBufferingHintsArgs) ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput() DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput {
	return i.ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamAmazonopensearchserviceBufferingHintsArgs) ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonopensearchserviceBufferingHintsOutput).ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutputWithContext(ctx)
}

// DeliveryStreamAmazonopensearchserviceBufferingHintsPtrInput is an input type that accepts DeliveryStreamAmazonopensearchserviceBufferingHintsArgs, DeliveryStreamAmazonopensearchserviceBufferingHintsPtr and DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamAmazonopensearchserviceBufferingHintsPtrInput` via:
//
//	        DeliveryStreamAmazonopensearchserviceBufferingHintsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamAmazonopensearchserviceBufferingHintsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput() DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput
	ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutputWithContext(context.Context) DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput
}

type deliveryStreamAmazonopensearchserviceBufferingHintsPtrType DeliveryStreamAmazonopensearchserviceBufferingHintsArgs

func DeliveryStreamAmazonopensearchserviceBufferingHintsPtr(v *DeliveryStreamAmazonopensearchserviceBufferingHintsArgs) DeliveryStreamAmazonopensearchserviceBufferingHintsPtrInput {
	return (*deliveryStreamAmazonopensearchserviceBufferingHintsPtrType)(v)
}

func (*deliveryStreamAmazonopensearchserviceBufferingHintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAmazonopensearchserviceBufferingHints)(nil)).Elem()
}

func (i *deliveryStreamAmazonopensearchserviceBufferingHintsPtrType) ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput() DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput {
	return i.ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamAmazonopensearchserviceBufferingHintsPtrType) ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput)
}

type DeliveryStreamAmazonopensearchserviceBufferingHintsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAmazonopensearchserviceBufferingHintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAmazonopensearchserviceBufferingHints)(nil)).Elem()
}

func (o DeliveryStreamAmazonopensearchserviceBufferingHintsOutput) ToDeliveryStreamAmazonopensearchserviceBufferingHintsOutput() DeliveryStreamAmazonopensearchserviceBufferingHintsOutput {
	return o
}

func (o DeliveryStreamAmazonopensearchserviceBufferingHintsOutput) ToDeliveryStreamAmazonopensearchserviceBufferingHintsOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceBufferingHintsOutput {
	return o
}

func (o DeliveryStreamAmazonopensearchserviceBufferingHintsOutput) ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput() DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput {
	return o.ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamAmazonopensearchserviceBufferingHintsOutput) ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamAmazonopensearchserviceBufferingHints) *DeliveryStreamAmazonopensearchserviceBufferingHints {
		return &v
	}).(DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
func (o DeliveryStreamAmazonopensearchserviceBufferingHintsOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceBufferingHints) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5. We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.
func (o DeliveryStreamAmazonopensearchserviceBufferingHintsOutput) SizeInMbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceBufferingHints) *int { return v.SizeInMbs }).(pulumi.IntPtrOutput)
}

type DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAmazonopensearchserviceBufferingHints)(nil)).Elem()
}

func (o DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput) ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput() DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput {
	return o
}

func (o DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput) ToDeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput {
	return o
}

func (o DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput) Elem() DeliveryStreamAmazonopensearchserviceBufferingHintsOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceBufferingHints) DeliveryStreamAmazonopensearchserviceBufferingHints {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamAmazonopensearchserviceBufferingHints
		return ret
	}).(DeliveryStreamAmazonopensearchserviceBufferingHintsOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 300 (5 minutes).
func (o DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceBufferingHints) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5. We recommend setting this parameter to a value greater than the amount of data you typically ingest into the delivery stream in 10 seconds. For example, if you typically ingest data at 1 MB/sec, the value should be 10 MB or higher.
func (o DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput) SizeInMbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceBufferingHints) *int {
		if v == nil {
			return nil
		}
		return v.SizeInMbs
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamAmazonopensearchserviceDestinationConfiguration struct {
	// The buffering options. If no value is specified, the default values for AmazonopensearchserviceBufferingHints are used.
	BufferingHints *DeliveryStreamAmazonopensearchserviceBufferingHints `pulumi:"bufferingHints"`
	// Describes the Amazon CloudWatch logging options for your delivery stream.
	CloudWatchLoggingOptions *DeliveryStreamCloudWatchLoggingOptions `pulumi:"cloudWatchLoggingOptions"`
	// The endpoint to use when communicating with the cluster. Specify either this ClusterEndpoint or the DomainARN field.
	ClusterEndpoint *string `pulumi:"clusterEndpoint"`
	// Indicates the method for setting up document ID. The supported methods are Firehose generated document ID and OpenSearch Service generated document ID.
	DocumentIdOptions *DeliveryStreamDocumentIdOptions `pulumi:"documentIdOptions"`
	// The ARN of the Amazon OpenSearch Service domain.
	DomainArn *string `pulumi:"domainArn"`
	// The Amazon OpenSearch Service index name.
	IndexName string `pulumi:"indexName"`
	// The Amazon OpenSearch Service index rotation period. Index rotation appends a timestamp to the IndexName to facilitate the expiration of old data.
	IndexRotationPeriod *DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriod `pulumi:"indexRotationPeriod"`
	// Describes a data processing configuration.
	ProcessingConfiguration *DeliveryStreamProcessingConfiguration `pulumi:"processingConfiguration"`
	// The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon OpenSearch Service. The default value is 300 (5 minutes).
	RetryOptions *DeliveryStreamAmazonopensearchserviceRetryOptions `pulumi:"retryOptions"`
	// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Amazon OpenSearch Service Configuration API and for indexing documents.
	RoleArn string `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.
	S3BackupMode *DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupMode `pulumi:"s3BackupMode"`
	// Describes the configuration of a destination in Amazon S3.
	S3Configuration DeliveryStreamS3DestinationConfiguration `pulumi:"s3Configuration"`
	// The Amazon OpenSearch Service type name.
	TypeName *string `pulumi:"typeName"`
	// The details of the VPC of the Amazon OpenSearch Service destination.
	VpcConfiguration *DeliveryStreamVpcConfiguration `pulumi:"vpcConfiguration"`
}

// DeliveryStreamAmazonopensearchserviceDestinationConfigurationInput is an input type that accepts DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs and DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamAmazonopensearchserviceDestinationConfigurationInput` via:
//
//	DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs{...}
type DeliveryStreamAmazonopensearchserviceDestinationConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput() DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput
	ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationOutputWithContext(context.Context) DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput
}

type DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs struct {
	// The buffering options. If no value is specified, the default values for AmazonopensearchserviceBufferingHints are used.
	BufferingHints DeliveryStreamAmazonopensearchserviceBufferingHintsPtrInput `pulumi:"bufferingHints"`
	// Describes the Amazon CloudWatch logging options for your delivery stream.
	CloudWatchLoggingOptions DeliveryStreamCloudWatchLoggingOptionsPtrInput `pulumi:"cloudWatchLoggingOptions"`
	// The endpoint to use when communicating with the cluster. Specify either this ClusterEndpoint or the DomainARN field.
	ClusterEndpoint pulumi.StringPtrInput `pulumi:"clusterEndpoint"`
	// Indicates the method for setting up document ID. The supported methods are Firehose generated document ID and OpenSearch Service generated document ID.
	DocumentIdOptions DeliveryStreamDocumentIdOptionsPtrInput `pulumi:"documentIdOptions"`
	// The ARN of the Amazon OpenSearch Service domain.
	DomainArn pulumi.StringPtrInput `pulumi:"domainArn"`
	// The Amazon OpenSearch Service index name.
	IndexName pulumi.StringInput `pulumi:"indexName"`
	// The Amazon OpenSearch Service index rotation period. Index rotation appends a timestamp to the IndexName to facilitate the expiration of old data.
	IndexRotationPeriod DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriodPtrInput `pulumi:"indexRotationPeriod"`
	// Describes a data processing configuration.
	ProcessingConfiguration DeliveryStreamProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon OpenSearch Service. The default value is 300 (5 minutes).
	RetryOptions DeliveryStreamAmazonopensearchserviceRetryOptionsPtrInput `pulumi:"retryOptions"`
	// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Amazon OpenSearch Service Configuration API and for indexing documents.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Defines how documents should be delivered to Amazon S3.
	S3BackupMode DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupModePtrInput `pulumi:"s3BackupMode"`
	// Describes the configuration of a destination in Amazon S3.
	S3Configuration DeliveryStreamS3DestinationConfigurationInput `pulumi:"s3Configuration"`
	// The Amazon OpenSearch Service type name.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// The details of the VPC of the Amazon OpenSearch Service destination.
	VpcConfiguration DeliveryStreamVpcConfigurationPtrInput `pulumi:"vpcConfiguration"`
}

func (DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAmazonopensearchserviceDestinationConfiguration)(nil)).Elem()
}

func (i DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs) ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput() DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput {
	return i.ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs) ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput)
}

func (i DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs) ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput() DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs) ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput).ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrInput is an input type that accepts DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs, DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtr and DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrInput` via:
//
//	        DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput() DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput
	ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutputWithContext(context.Context) DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput
}

type deliveryStreamAmazonopensearchserviceDestinationConfigurationPtrType DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs

func DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtr(v *DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs) DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrInput {
	return (*deliveryStreamAmazonopensearchserviceDestinationConfigurationPtrType)(v)
}

func (*deliveryStreamAmazonopensearchserviceDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAmazonopensearchserviceDestinationConfiguration)(nil)).Elem()
}

func (i *deliveryStreamAmazonopensearchserviceDestinationConfigurationPtrType) ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput() DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamAmazonopensearchserviceDestinationConfigurationPtrType) ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput)
}

type DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAmazonopensearchserviceDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput() DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput() DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput {
	return o.ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamAmazonopensearchserviceDestinationConfiguration {
		return &v
	}).(DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput)
}

// The buffering options. If no value is specified, the default values for AmazonopensearchserviceBufferingHints are used.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) BufferingHints() DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamAmazonopensearchserviceBufferingHints {
		return v.BufferingHints
	}).(DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput)
}

// Describes the Amazon CloudWatch logging options for your delivery stream.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The endpoint to use when communicating with the cluster. Specify either this ClusterEndpoint or the DomainARN field.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) ClusterEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *string {
		return v.ClusterEndpoint
	}).(pulumi.StringPtrOutput)
}

// Indicates the method for setting up document ID. The supported methods are Firehose generated document ID and OpenSearch Service generated document ID.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) DocumentIdOptions() DeliveryStreamDocumentIdOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamDocumentIdOptions {
		return v.DocumentIdOptions
	}).(DeliveryStreamDocumentIdOptionsPtrOutput)
}

// The ARN of the Amazon OpenSearch Service domain.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) DomainArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *string { return v.DomainArn }).(pulumi.StringPtrOutput)
}

// The Amazon OpenSearch Service index name.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) string { return v.IndexName }).(pulumi.StringOutput)
}

// The Amazon OpenSearch Service index rotation period. Index rotation appends a timestamp to the IndexName to facilitate the expiration of old data.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) IndexRotationPeriod() DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriodPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriod {
		return v.IndexRotationPeriod
	}).(DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriodPtrOutput)
}

// Describes a data processing configuration.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon OpenSearch Service. The default value is 300 (5 minutes).
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) RetryOptions() DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamAmazonopensearchserviceRetryOptions {
		return v.RetryOptions
	}).(DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Amazon OpenSearch Service Configuration API and for indexing documents.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Defines how documents should be delivered to Amazon S3.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) S3BackupMode() DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupModePtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupMode {
		return v.S3BackupMode
	}).(DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupModePtrOutput)
}

// Describes the configuration of a destination in Amazon S3.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) DeliveryStreamS3DestinationConfiguration {
		return v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationOutput)
}

// The Amazon OpenSearch Service type name.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// The details of the VPC of the Amazon OpenSearch Service destination.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput) VpcConfiguration() DeliveryStreamVpcConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamVpcConfiguration {
		return v.VpcConfiguration
	}).(DeliveryStreamVpcConfigurationPtrOutput)
}

type DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAmazonopensearchserviceDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput() DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) ToDeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) Elem() DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) DeliveryStreamAmazonopensearchserviceDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamAmazonopensearchserviceDestinationConfiguration
		return ret
	}).(DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput)
}

// The buffering options. If no value is specified, the default values for AmazonopensearchserviceBufferingHints are used.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) BufferingHints() DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamAmazonopensearchserviceBufferingHints {
		if v == nil {
			return nil
		}
		return v.BufferingHints
	}).(DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput)
}

// Describes the Amazon CloudWatch logging options for your delivery stream.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The endpoint to use when communicating with the cluster. Specify either this ClusterEndpoint or the DomainARN field.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) ClusterEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ClusterEndpoint
	}).(pulumi.StringPtrOutput)
}

// Indicates the method for setting up document ID. The supported methods are Firehose generated document ID and OpenSearch Service generated document ID.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) DocumentIdOptions() DeliveryStreamDocumentIdOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamDocumentIdOptions {
		if v == nil {
			return nil
		}
		return v.DocumentIdOptions
	}).(DeliveryStreamDocumentIdOptionsPtrOutput)
}

// The ARN of the Amazon OpenSearch Service domain.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) DomainArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DomainArn
	}).(pulumi.StringPtrOutput)
}

// The Amazon OpenSearch Service index name.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) IndexName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.IndexName
	}).(pulumi.StringPtrOutput)
}

// The Amazon OpenSearch Service index rotation period. Index rotation appends a timestamp to the IndexName to facilitate the expiration of old data.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) IndexRotationPeriod() DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriodPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriod {
		if v == nil {
			return nil
		}
		return v.IndexRotationPeriod
	}).(DeliveryStreamAmazonopensearchserviceDestinationConfigurationIndexRotationPeriodPtrOutput)
}

// Describes a data processing configuration.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The retry behavior in case Kinesis Data Firehose is unable to deliver documents to Amazon OpenSearch Service. The default value is 300 (5 minutes).
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) RetryOptions() DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamAmazonopensearchserviceRetryOptions {
		if v == nil {
			return nil
		}
		return v.RetryOptions
	}).(DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Amazon OpenSearch Service Configuration API and for indexing documents.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Defines how documents should be delivered to Amazon S3.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) S3BackupMode() DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupModePtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupMode {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(DeliveryStreamAmazonopensearchserviceDestinationConfigurationS3BackupModePtrOutput)
}

// Describes the configuration of a destination in Amazon S3.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamS3DestinationConfiguration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// The Amazon OpenSearch Service type name.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TypeName
	}).(pulumi.StringPtrOutput)
}

// The details of the VPC of the Amazon OpenSearch Service destination.
func (o DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput) VpcConfiguration() DeliveryStreamVpcConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceDestinationConfiguration) *DeliveryStreamVpcConfiguration {
		if v == nil {
			return nil
		}
		return v.VpcConfiguration
	}).(DeliveryStreamVpcConfigurationPtrOutput)
}

type DeliveryStreamAmazonopensearchserviceRetryOptions struct {
	// After an initial failure to deliver to Amazon OpenSearch Service, the total amount of time during which Kinesis Data Firehose retries delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries.
	DurationInSeconds *int `pulumi:"durationInSeconds"`
}

// DeliveryStreamAmazonopensearchserviceRetryOptionsInput is an input type that accepts DeliveryStreamAmazonopensearchserviceRetryOptionsArgs and DeliveryStreamAmazonopensearchserviceRetryOptionsOutput values.
// You can construct a concrete instance of `DeliveryStreamAmazonopensearchserviceRetryOptionsInput` via:
//
//	DeliveryStreamAmazonopensearchserviceRetryOptionsArgs{...}
type DeliveryStreamAmazonopensearchserviceRetryOptionsInput interface {
	pulumi.Input

	ToDeliveryStreamAmazonopensearchserviceRetryOptionsOutput() DeliveryStreamAmazonopensearchserviceRetryOptionsOutput
	ToDeliveryStreamAmazonopensearchserviceRetryOptionsOutputWithContext(context.Context) DeliveryStreamAmazonopensearchserviceRetryOptionsOutput
}

type DeliveryStreamAmazonopensearchserviceRetryOptionsArgs struct {
	// After an initial failure to deliver to Amazon OpenSearch Service, the total amount of time during which Kinesis Data Firehose retries delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries.
	DurationInSeconds pulumi.IntPtrInput `pulumi:"durationInSeconds"`
}

func (DeliveryStreamAmazonopensearchserviceRetryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAmazonopensearchserviceRetryOptions)(nil)).Elem()
}

func (i DeliveryStreamAmazonopensearchserviceRetryOptionsArgs) ToDeliveryStreamAmazonopensearchserviceRetryOptionsOutput() DeliveryStreamAmazonopensearchserviceRetryOptionsOutput {
	return i.ToDeliveryStreamAmazonopensearchserviceRetryOptionsOutputWithContext(context.Background())
}

func (i DeliveryStreamAmazonopensearchserviceRetryOptionsArgs) ToDeliveryStreamAmazonopensearchserviceRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceRetryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonopensearchserviceRetryOptionsOutput)
}

func (i DeliveryStreamAmazonopensearchserviceRetryOptionsArgs) ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput() DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput {
	return i.ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamAmazonopensearchserviceRetryOptionsArgs) ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonopensearchserviceRetryOptionsOutput).ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutputWithContext(ctx)
}

// DeliveryStreamAmazonopensearchserviceRetryOptionsPtrInput is an input type that accepts DeliveryStreamAmazonopensearchserviceRetryOptionsArgs, DeliveryStreamAmazonopensearchserviceRetryOptionsPtr and DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamAmazonopensearchserviceRetryOptionsPtrInput` via:
//
//	        DeliveryStreamAmazonopensearchserviceRetryOptionsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamAmazonopensearchserviceRetryOptionsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput() DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput
	ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutputWithContext(context.Context) DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput
}

type deliveryStreamAmazonopensearchserviceRetryOptionsPtrType DeliveryStreamAmazonopensearchserviceRetryOptionsArgs

func DeliveryStreamAmazonopensearchserviceRetryOptionsPtr(v *DeliveryStreamAmazonopensearchserviceRetryOptionsArgs) DeliveryStreamAmazonopensearchserviceRetryOptionsPtrInput {
	return (*deliveryStreamAmazonopensearchserviceRetryOptionsPtrType)(v)
}

func (*deliveryStreamAmazonopensearchserviceRetryOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAmazonopensearchserviceRetryOptions)(nil)).Elem()
}

func (i *deliveryStreamAmazonopensearchserviceRetryOptionsPtrType) ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput() DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput {
	return i.ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamAmazonopensearchserviceRetryOptionsPtrType) ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput)
}

type DeliveryStreamAmazonopensearchserviceRetryOptionsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAmazonopensearchserviceRetryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAmazonopensearchserviceRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamAmazonopensearchserviceRetryOptionsOutput) ToDeliveryStreamAmazonopensearchserviceRetryOptionsOutput() DeliveryStreamAmazonopensearchserviceRetryOptionsOutput {
	return o
}

func (o DeliveryStreamAmazonopensearchserviceRetryOptionsOutput) ToDeliveryStreamAmazonopensearchserviceRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceRetryOptionsOutput {
	return o
}

func (o DeliveryStreamAmazonopensearchserviceRetryOptionsOutput) ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput() DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput {
	return o.ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamAmazonopensearchserviceRetryOptionsOutput) ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamAmazonopensearchserviceRetryOptions) *DeliveryStreamAmazonopensearchserviceRetryOptions {
		return &v
	}).(DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput)
}

// After an initial failure to deliver to Amazon OpenSearch Service, the total amount of time during which Kinesis Data Firehose retries delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries.
func (o DeliveryStreamAmazonopensearchserviceRetryOptionsOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamAmazonopensearchserviceRetryOptions) *int { return v.DurationInSeconds }).(pulumi.IntPtrOutput)
}

type DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAmazonopensearchserviceRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput) ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput() DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput) ToDeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput) Elem() DeliveryStreamAmazonopensearchserviceRetryOptionsOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceRetryOptions) DeliveryStreamAmazonopensearchserviceRetryOptions {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamAmazonopensearchserviceRetryOptions
		return ret
	}).(DeliveryStreamAmazonopensearchserviceRetryOptionsOutput)
}

// After an initial failure to deliver to Amazon OpenSearch Service, the total amount of time during which Kinesis Data Firehose retries delivery (including the first attempt). After this time has elapsed, the failed documents are written to Amazon S3. Default value is 300 seconds (5 minutes). A value of 0 (zero) results in no retries.
func (o DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAmazonopensearchserviceRetryOptions) *int {
		if v == nil {
			return nil
		}
		return v.DurationInSeconds
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamAuthenticationConfiguration struct {
	// The type of connectivity used to access the Amazon MSK cluster.
	Connectivity DeliveryStreamAuthenticationConfigurationConnectivity `pulumi:"connectivity"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn string `pulumi:"roleArn"`
}

// DeliveryStreamAuthenticationConfigurationInput is an input type that accepts DeliveryStreamAuthenticationConfigurationArgs and DeliveryStreamAuthenticationConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamAuthenticationConfigurationInput` via:
//
//	DeliveryStreamAuthenticationConfigurationArgs{...}
type DeliveryStreamAuthenticationConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamAuthenticationConfigurationOutput() DeliveryStreamAuthenticationConfigurationOutput
	ToDeliveryStreamAuthenticationConfigurationOutputWithContext(context.Context) DeliveryStreamAuthenticationConfigurationOutput
}

type DeliveryStreamAuthenticationConfigurationArgs struct {
	// The type of connectivity used to access the Amazon MSK cluster.
	Connectivity DeliveryStreamAuthenticationConfigurationConnectivityInput `pulumi:"connectivity"`
	// The ARN of the role used to access the Amazon MSK cluster.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (DeliveryStreamAuthenticationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAuthenticationConfiguration)(nil)).Elem()
}

func (i DeliveryStreamAuthenticationConfigurationArgs) ToDeliveryStreamAuthenticationConfigurationOutput() DeliveryStreamAuthenticationConfigurationOutput {
	return i.ToDeliveryStreamAuthenticationConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamAuthenticationConfigurationArgs) ToDeliveryStreamAuthenticationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamAuthenticationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAuthenticationConfigurationOutput)
}

func (i DeliveryStreamAuthenticationConfigurationArgs) ToDeliveryStreamAuthenticationConfigurationPtrOutput() DeliveryStreamAuthenticationConfigurationPtrOutput {
	return i.ToDeliveryStreamAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamAuthenticationConfigurationArgs) ToDeliveryStreamAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamAuthenticationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAuthenticationConfigurationOutput).ToDeliveryStreamAuthenticationConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamAuthenticationConfigurationPtrInput is an input type that accepts DeliveryStreamAuthenticationConfigurationArgs, DeliveryStreamAuthenticationConfigurationPtr and DeliveryStreamAuthenticationConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamAuthenticationConfigurationPtrInput` via:
//
//	        DeliveryStreamAuthenticationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamAuthenticationConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamAuthenticationConfigurationPtrOutput() DeliveryStreamAuthenticationConfigurationPtrOutput
	ToDeliveryStreamAuthenticationConfigurationPtrOutputWithContext(context.Context) DeliveryStreamAuthenticationConfigurationPtrOutput
}

type deliveryStreamAuthenticationConfigurationPtrType DeliveryStreamAuthenticationConfigurationArgs

func DeliveryStreamAuthenticationConfigurationPtr(v *DeliveryStreamAuthenticationConfigurationArgs) DeliveryStreamAuthenticationConfigurationPtrInput {
	return (*deliveryStreamAuthenticationConfigurationPtrType)(v)
}

func (*deliveryStreamAuthenticationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAuthenticationConfiguration)(nil)).Elem()
}

func (i *deliveryStreamAuthenticationConfigurationPtrType) ToDeliveryStreamAuthenticationConfigurationPtrOutput() DeliveryStreamAuthenticationConfigurationPtrOutput {
	return i.ToDeliveryStreamAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamAuthenticationConfigurationPtrType) ToDeliveryStreamAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamAuthenticationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamAuthenticationConfigurationPtrOutput)
}

type DeliveryStreamAuthenticationConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAuthenticationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamAuthenticationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamAuthenticationConfigurationOutput) ToDeliveryStreamAuthenticationConfigurationOutput() DeliveryStreamAuthenticationConfigurationOutput {
	return o
}

func (o DeliveryStreamAuthenticationConfigurationOutput) ToDeliveryStreamAuthenticationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamAuthenticationConfigurationOutput {
	return o
}

func (o DeliveryStreamAuthenticationConfigurationOutput) ToDeliveryStreamAuthenticationConfigurationPtrOutput() DeliveryStreamAuthenticationConfigurationPtrOutput {
	return o.ToDeliveryStreamAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamAuthenticationConfigurationOutput) ToDeliveryStreamAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamAuthenticationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamAuthenticationConfiguration) *DeliveryStreamAuthenticationConfiguration {
		return &v
	}).(DeliveryStreamAuthenticationConfigurationPtrOutput)
}

// The type of connectivity used to access the Amazon MSK cluster.
func (o DeliveryStreamAuthenticationConfigurationOutput) Connectivity() DeliveryStreamAuthenticationConfigurationConnectivityOutput {
	return o.ApplyT(func(v DeliveryStreamAuthenticationConfiguration) DeliveryStreamAuthenticationConfigurationConnectivity {
		return v.Connectivity
	}).(DeliveryStreamAuthenticationConfigurationConnectivityOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o DeliveryStreamAuthenticationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamAuthenticationConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DeliveryStreamAuthenticationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamAuthenticationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamAuthenticationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamAuthenticationConfigurationPtrOutput) ToDeliveryStreamAuthenticationConfigurationPtrOutput() DeliveryStreamAuthenticationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamAuthenticationConfigurationPtrOutput) ToDeliveryStreamAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamAuthenticationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamAuthenticationConfigurationPtrOutput) Elem() DeliveryStreamAuthenticationConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamAuthenticationConfiguration) DeliveryStreamAuthenticationConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamAuthenticationConfiguration
		return ret
	}).(DeliveryStreamAuthenticationConfigurationOutput)
}

// The type of connectivity used to access the Amazon MSK cluster.
func (o DeliveryStreamAuthenticationConfigurationPtrOutput) Connectivity() DeliveryStreamAuthenticationConfigurationConnectivityPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAuthenticationConfiguration) *DeliveryStreamAuthenticationConfigurationConnectivity {
		if v == nil {
			return nil
		}
		return &v.Connectivity
	}).(DeliveryStreamAuthenticationConfigurationConnectivityPtrOutput)
}

// The ARN of the role used to access the Amazon MSK cluster.
func (o DeliveryStreamAuthenticationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamAuthenticationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamBufferingHints struct {
	// The length of time, in seconds, that Kinesis Data Firehose buffers incoming data before delivering it to the destination. For valid values, see the `IntervalInSeconds` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The size of the buffer, in MBs, that Kinesis Data Firehose uses for incoming data before delivering it to the destination. For valid values, see the `SizeInMBs` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	SizeInMbs *int `pulumi:"sizeInMbs"`
}

// DeliveryStreamBufferingHintsInput is an input type that accepts DeliveryStreamBufferingHintsArgs and DeliveryStreamBufferingHintsOutput values.
// You can construct a concrete instance of `DeliveryStreamBufferingHintsInput` via:
//
//	DeliveryStreamBufferingHintsArgs{...}
type DeliveryStreamBufferingHintsInput interface {
	pulumi.Input

	ToDeliveryStreamBufferingHintsOutput() DeliveryStreamBufferingHintsOutput
	ToDeliveryStreamBufferingHintsOutputWithContext(context.Context) DeliveryStreamBufferingHintsOutput
}

type DeliveryStreamBufferingHintsArgs struct {
	// The length of time, in seconds, that Kinesis Data Firehose buffers incoming data before delivering it to the destination. For valid values, see the `IntervalInSeconds` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The size of the buffer, in MBs, that Kinesis Data Firehose uses for incoming data before delivering it to the destination. For valid values, see the `SizeInMBs` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	SizeInMbs pulumi.IntPtrInput `pulumi:"sizeInMbs"`
}

func (DeliveryStreamBufferingHintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamBufferingHints)(nil)).Elem()
}

func (i DeliveryStreamBufferingHintsArgs) ToDeliveryStreamBufferingHintsOutput() DeliveryStreamBufferingHintsOutput {
	return i.ToDeliveryStreamBufferingHintsOutputWithContext(context.Background())
}

func (i DeliveryStreamBufferingHintsArgs) ToDeliveryStreamBufferingHintsOutputWithContext(ctx context.Context) DeliveryStreamBufferingHintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamBufferingHintsOutput)
}

func (i DeliveryStreamBufferingHintsArgs) ToDeliveryStreamBufferingHintsPtrOutput() DeliveryStreamBufferingHintsPtrOutput {
	return i.ToDeliveryStreamBufferingHintsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamBufferingHintsArgs) ToDeliveryStreamBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamBufferingHintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamBufferingHintsOutput).ToDeliveryStreamBufferingHintsPtrOutputWithContext(ctx)
}

// DeliveryStreamBufferingHintsPtrInput is an input type that accepts DeliveryStreamBufferingHintsArgs, DeliveryStreamBufferingHintsPtr and DeliveryStreamBufferingHintsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamBufferingHintsPtrInput` via:
//
//	        DeliveryStreamBufferingHintsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamBufferingHintsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamBufferingHintsPtrOutput() DeliveryStreamBufferingHintsPtrOutput
	ToDeliveryStreamBufferingHintsPtrOutputWithContext(context.Context) DeliveryStreamBufferingHintsPtrOutput
}

type deliveryStreamBufferingHintsPtrType DeliveryStreamBufferingHintsArgs

func DeliveryStreamBufferingHintsPtr(v *DeliveryStreamBufferingHintsArgs) DeliveryStreamBufferingHintsPtrInput {
	return (*deliveryStreamBufferingHintsPtrType)(v)
}

func (*deliveryStreamBufferingHintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamBufferingHints)(nil)).Elem()
}

func (i *deliveryStreamBufferingHintsPtrType) ToDeliveryStreamBufferingHintsPtrOutput() DeliveryStreamBufferingHintsPtrOutput {
	return i.ToDeliveryStreamBufferingHintsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamBufferingHintsPtrType) ToDeliveryStreamBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamBufferingHintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamBufferingHintsPtrOutput)
}

type DeliveryStreamBufferingHintsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamBufferingHintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamBufferingHints)(nil)).Elem()
}

func (o DeliveryStreamBufferingHintsOutput) ToDeliveryStreamBufferingHintsOutput() DeliveryStreamBufferingHintsOutput {
	return o
}

func (o DeliveryStreamBufferingHintsOutput) ToDeliveryStreamBufferingHintsOutputWithContext(ctx context.Context) DeliveryStreamBufferingHintsOutput {
	return o
}

func (o DeliveryStreamBufferingHintsOutput) ToDeliveryStreamBufferingHintsPtrOutput() DeliveryStreamBufferingHintsPtrOutput {
	return o.ToDeliveryStreamBufferingHintsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamBufferingHintsOutput) ToDeliveryStreamBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamBufferingHintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamBufferingHints) *DeliveryStreamBufferingHints {
		return &v
	}).(DeliveryStreamBufferingHintsPtrOutput)
}

// The length of time, in seconds, that Kinesis Data Firehose buffers incoming data before delivering it to the destination. For valid values, see the `IntervalInSeconds` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamBufferingHintsOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamBufferingHints) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The size of the buffer, in MBs, that Kinesis Data Firehose uses for incoming data before delivering it to the destination. For valid values, see the `SizeInMBs` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamBufferingHintsOutput) SizeInMbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamBufferingHints) *int { return v.SizeInMbs }).(pulumi.IntPtrOutput)
}

type DeliveryStreamBufferingHintsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamBufferingHintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamBufferingHints)(nil)).Elem()
}

func (o DeliveryStreamBufferingHintsPtrOutput) ToDeliveryStreamBufferingHintsPtrOutput() DeliveryStreamBufferingHintsPtrOutput {
	return o
}

func (o DeliveryStreamBufferingHintsPtrOutput) ToDeliveryStreamBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamBufferingHintsPtrOutput {
	return o
}

func (o DeliveryStreamBufferingHintsPtrOutput) Elem() DeliveryStreamBufferingHintsOutput {
	return o.ApplyT(func(v *DeliveryStreamBufferingHints) DeliveryStreamBufferingHints {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamBufferingHints
		return ret
	}).(DeliveryStreamBufferingHintsOutput)
}

// The length of time, in seconds, that Kinesis Data Firehose buffers incoming data before delivering it to the destination. For valid values, see the `IntervalInSeconds` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamBufferingHintsPtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamBufferingHints) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The size of the buffer, in MBs, that Kinesis Data Firehose uses for incoming data before delivering it to the destination. For valid values, see the `SizeInMBs` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamBufferingHintsPtrOutput) SizeInMbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamBufferingHints) *int {
		if v == nil {
			return nil
		}
		return v.SizeInMbs
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamCloudWatchLoggingOptions struct {
	// Indicates whether CloudWatch Logs logging is enabled.
	Enabled *bool `pulumi:"enabled"`
	// The name of the CloudWatch Logs log group that contains the log stream that Kinesis Data Firehose will use.
	//
	// Conditional. If you enable logging, you must specify this property.
	LogGroupName *string `pulumi:"logGroupName"`
	// The name of the CloudWatch Logs log stream that Kinesis Data Firehose uses to send logs about data delivery.
	//
	// Conditional. If you enable logging, you must specify this property.
	LogStreamName *string `pulumi:"logStreamName"`
}

// DeliveryStreamCloudWatchLoggingOptionsInput is an input type that accepts DeliveryStreamCloudWatchLoggingOptionsArgs and DeliveryStreamCloudWatchLoggingOptionsOutput values.
// You can construct a concrete instance of `DeliveryStreamCloudWatchLoggingOptionsInput` via:
//
//	DeliveryStreamCloudWatchLoggingOptionsArgs{...}
type DeliveryStreamCloudWatchLoggingOptionsInput interface {
	pulumi.Input

	ToDeliveryStreamCloudWatchLoggingOptionsOutput() DeliveryStreamCloudWatchLoggingOptionsOutput
	ToDeliveryStreamCloudWatchLoggingOptionsOutputWithContext(context.Context) DeliveryStreamCloudWatchLoggingOptionsOutput
}

type DeliveryStreamCloudWatchLoggingOptionsArgs struct {
	// Indicates whether CloudWatch Logs logging is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The name of the CloudWatch Logs log group that contains the log stream that Kinesis Data Firehose will use.
	//
	// Conditional. If you enable logging, you must specify this property.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// The name of the CloudWatch Logs log stream that Kinesis Data Firehose uses to send logs about data delivery.
	//
	// Conditional. If you enable logging, you must specify this property.
	LogStreamName pulumi.StringPtrInput `pulumi:"logStreamName"`
}

func (DeliveryStreamCloudWatchLoggingOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamCloudWatchLoggingOptions)(nil)).Elem()
}

func (i DeliveryStreamCloudWatchLoggingOptionsArgs) ToDeliveryStreamCloudWatchLoggingOptionsOutput() DeliveryStreamCloudWatchLoggingOptionsOutput {
	return i.ToDeliveryStreamCloudWatchLoggingOptionsOutputWithContext(context.Background())
}

func (i DeliveryStreamCloudWatchLoggingOptionsArgs) ToDeliveryStreamCloudWatchLoggingOptionsOutputWithContext(ctx context.Context) DeliveryStreamCloudWatchLoggingOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamCloudWatchLoggingOptionsOutput)
}

func (i DeliveryStreamCloudWatchLoggingOptionsArgs) ToDeliveryStreamCloudWatchLoggingOptionsPtrOutput() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return i.ToDeliveryStreamCloudWatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamCloudWatchLoggingOptionsArgs) ToDeliveryStreamCloudWatchLoggingOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamCloudWatchLoggingOptionsOutput).ToDeliveryStreamCloudWatchLoggingOptionsPtrOutputWithContext(ctx)
}

// DeliveryStreamCloudWatchLoggingOptionsPtrInput is an input type that accepts DeliveryStreamCloudWatchLoggingOptionsArgs, DeliveryStreamCloudWatchLoggingOptionsPtr and DeliveryStreamCloudWatchLoggingOptionsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamCloudWatchLoggingOptionsPtrInput` via:
//
//	        DeliveryStreamCloudWatchLoggingOptionsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamCloudWatchLoggingOptionsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamCloudWatchLoggingOptionsPtrOutput() DeliveryStreamCloudWatchLoggingOptionsPtrOutput
	ToDeliveryStreamCloudWatchLoggingOptionsPtrOutputWithContext(context.Context) DeliveryStreamCloudWatchLoggingOptionsPtrOutput
}

type deliveryStreamCloudWatchLoggingOptionsPtrType DeliveryStreamCloudWatchLoggingOptionsArgs

func DeliveryStreamCloudWatchLoggingOptionsPtr(v *DeliveryStreamCloudWatchLoggingOptionsArgs) DeliveryStreamCloudWatchLoggingOptionsPtrInput {
	return (*deliveryStreamCloudWatchLoggingOptionsPtrType)(v)
}

func (*deliveryStreamCloudWatchLoggingOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamCloudWatchLoggingOptions)(nil)).Elem()
}

func (i *deliveryStreamCloudWatchLoggingOptionsPtrType) ToDeliveryStreamCloudWatchLoggingOptionsPtrOutput() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return i.ToDeliveryStreamCloudWatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamCloudWatchLoggingOptionsPtrType) ToDeliveryStreamCloudWatchLoggingOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

type DeliveryStreamCloudWatchLoggingOptionsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamCloudWatchLoggingOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamCloudWatchLoggingOptions)(nil)).Elem()
}

func (o DeliveryStreamCloudWatchLoggingOptionsOutput) ToDeliveryStreamCloudWatchLoggingOptionsOutput() DeliveryStreamCloudWatchLoggingOptionsOutput {
	return o
}

func (o DeliveryStreamCloudWatchLoggingOptionsOutput) ToDeliveryStreamCloudWatchLoggingOptionsOutputWithContext(ctx context.Context) DeliveryStreamCloudWatchLoggingOptionsOutput {
	return o
}

func (o DeliveryStreamCloudWatchLoggingOptionsOutput) ToDeliveryStreamCloudWatchLoggingOptionsPtrOutput() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ToDeliveryStreamCloudWatchLoggingOptionsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamCloudWatchLoggingOptionsOutput) ToDeliveryStreamCloudWatchLoggingOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamCloudWatchLoggingOptions) *DeliveryStreamCloudWatchLoggingOptions {
		return &v
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// Indicates whether CloudWatch Logs logging is enabled.
func (o DeliveryStreamCloudWatchLoggingOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeliveryStreamCloudWatchLoggingOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The name of the CloudWatch Logs log group that contains the log stream that Kinesis Data Firehose will use.
//
// Conditional. If you enable logging, you must specify this property.
func (o DeliveryStreamCloudWatchLoggingOptionsOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamCloudWatchLoggingOptions) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// The name of the CloudWatch Logs log stream that Kinesis Data Firehose uses to send logs about data delivery.
//
// Conditional. If you enable logging, you must specify this property.
func (o DeliveryStreamCloudWatchLoggingOptionsOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamCloudWatchLoggingOptions) *string { return v.LogStreamName }).(pulumi.StringPtrOutput)
}

type DeliveryStreamCloudWatchLoggingOptionsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamCloudWatchLoggingOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamCloudWatchLoggingOptions)(nil)).Elem()
}

func (o DeliveryStreamCloudWatchLoggingOptionsPtrOutput) ToDeliveryStreamCloudWatchLoggingOptionsPtrOutput() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o
}

func (o DeliveryStreamCloudWatchLoggingOptionsPtrOutput) ToDeliveryStreamCloudWatchLoggingOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o
}

func (o DeliveryStreamCloudWatchLoggingOptionsPtrOutput) Elem() DeliveryStreamCloudWatchLoggingOptionsOutput {
	return o.ApplyT(func(v *DeliveryStreamCloudWatchLoggingOptions) DeliveryStreamCloudWatchLoggingOptions {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamCloudWatchLoggingOptions
		return ret
	}).(DeliveryStreamCloudWatchLoggingOptionsOutput)
}

// Indicates whether CloudWatch Logs logging is enabled.
func (o DeliveryStreamCloudWatchLoggingOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamCloudWatchLoggingOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The name of the CloudWatch Logs log group that contains the log stream that Kinesis Data Firehose will use.
//
// Conditional. If you enable logging, you must specify this property.
func (o DeliveryStreamCloudWatchLoggingOptionsPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamCloudWatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// The name of the CloudWatch Logs log stream that Kinesis Data Firehose uses to send logs about data delivery.
//
// Conditional. If you enable logging, you must specify this property.
func (o DeliveryStreamCloudWatchLoggingOptionsPtrOutput) LogStreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamCloudWatchLoggingOptions) *string {
		if v == nil {
			return nil
		}
		return v.LogStreamName
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamCopyCommand struct {
	// Parameters to use with the Amazon Redshift `COPY` command. For examples, see the `CopyOptions` content for the [CopyCommand](https://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	CopyOptions *string `pulumi:"copyOptions"`
	// A comma-separated list of column names.
	DataTableColumns *string `pulumi:"dataTableColumns"`
	// The name of the target table. The table must already exist in the database.
	DataTableName string `pulumi:"dataTableName"`
}

// DeliveryStreamCopyCommandInput is an input type that accepts DeliveryStreamCopyCommandArgs and DeliveryStreamCopyCommandOutput values.
// You can construct a concrete instance of `DeliveryStreamCopyCommandInput` via:
//
//	DeliveryStreamCopyCommandArgs{...}
type DeliveryStreamCopyCommandInput interface {
	pulumi.Input

	ToDeliveryStreamCopyCommandOutput() DeliveryStreamCopyCommandOutput
	ToDeliveryStreamCopyCommandOutputWithContext(context.Context) DeliveryStreamCopyCommandOutput
}

type DeliveryStreamCopyCommandArgs struct {
	// Parameters to use with the Amazon Redshift `COPY` command. For examples, see the `CopyOptions` content for the [CopyCommand](https://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	CopyOptions pulumi.StringPtrInput `pulumi:"copyOptions"`
	// A comma-separated list of column names.
	DataTableColumns pulumi.StringPtrInput `pulumi:"dataTableColumns"`
	// The name of the target table. The table must already exist in the database.
	DataTableName pulumi.StringInput `pulumi:"dataTableName"`
}

func (DeliveryStreamCopyCommandArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamCopyCommand)(nil)).Elem()
}

func (i DeliveryStreamCopyCommandArgs) ToDeliveryStreamCopyCommandOutput() DeliveryStreamCopyCommandOutput {
	return i.ToDeliveryStreamCopyCommandOutputWithContext(context.Background())
}

func (i DeliveryStreamCopyCommandArgs) ToDeliveryStreamCopyCommandOutputWithContext(ctx context.Context) DeliveryStreamCopyCommandOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamCopyCommandOutput)
}

func (i DeliveryStreamCopyCommandArgs) ToDeliveryStreamCopyCommandPtrOutput() DeliveryStreamCopyCommandPtrOutput {
	return i.ToDeliveryStreamCopyCommandPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamCopyCommandArgs) ToDeliveryStreamCopyCommandPtrOutputWithContext(ctx context.Context) DeliveryStreamCopyCommandPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamCopyCommandOutput).ToDeliveryStreamCopyCommandPtrOutputWithContext(ctx)
}

// DeliveryStreamCopyCommandPtrInput is an input type that accepts DeliveryStreamCopyCommandArgs, DeliveryStreamCopyCommandPtr and DeliveryStreamCopyCommandPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamCopyCommandPtrInput` via:
//
//	        DeliveryStreamCopyCommandArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamCopyCommandPtrInput interface {
	pulumi.Input

	ToDeliveryStreamCopyCommandPtrOutput() DeliveryStreamCopyCommandPtrOutput
	ToDeliveryStreamCopyCommandPtrOutputWithContext(context.Context) DeliveryStreamCopyCommandPtrOutput
}

type deliveryStreamCopyCommandPtrType DeliveryStreamCopyCommandArgs

func DeliveryStreamCopyCommandPtr(v *DeliveryStreamCopyCommandArgs) DeliveryStreamCopyCommandPtrInput {
	return (*deliveryStreamCopyCommandPtrType)(v)
}

func (*deliveryStreamCopyCommandPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamCopyCommand)(nil)).Elem()
}

func (i *deliveryStreamCopyCommandPtrType) ToDeliveryStreamCopyCommandPtrOutput() DeliveryStreamCopyCommandPtrOutput {
	return i.ToDeliveryStreamCopyCommandPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamCopyCommandPtrType) ToDeliveryStreamCopyCommandPtrOutputWithContext(ctx context.Context) DeliveryStreamCopyCommandPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamCopyCommandPtrOutput)
}

type DeliveryStreamCopyCommandOutput struct{ *pulumi.OutputState }

func (DeliveryStreamCopyCommandOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamCopyCommand)(nil)).Elem()
}

func (o DeliveryStreamCopyCommandOutput) ToDeliveryStreamCopyCommandOutput() DeliveryStreamCopyCommandOutput {
	return o
}

func (o DeliveryStreamCopyCommandOutput) ToDeliveryStreamCopyCommandOutputWithContext(ctx context.Context) DeliveryStreamCopyCommandOutput {
	return o
}

func (o DeliveryStreamCopyCommandOutput) ToDeliveryStreamCopyCommandPtrOutput() DeliveryStreamCopyCommandPtrOutput {
	return o.ToDeliveryStreamCopyCommandPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamCopyCommandOutput) ToDeliveryStreamCopyCommandPtrOutputWithContext(ctx context.Context) DeliveryStreamCopyCommandPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamCopyCommand) *DeliveryStreamCopyCommand {
		return &v
	}).(DeliveryStreamCopyCommandPtrOutput)
}

// Parameters to use with the Amazon Redshift `COPY` command. For examples, see the `CopyOptions` content for the [CopyCommand](https://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamCopyCommandOutput) CopyOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamCopyCommand) *string { return v.CopyOptions }).(pulumi.StringPtrOutput)
}

// A comma-separated list of column names.
func (o DeliveryStreamCopyCommandOutput) DataTableColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamCopyCommand) *string { return v.DataTableColumns }).(pulumi.StringPtrOutput)
}

// The name of the target table. The table must already exist in the database.
func (o DeliveryStreamCopyCommandOutput) DataTableName() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamCopyCommand) string { return v.DataTableName }).(pulumi.StringOutput)
}

type DeliveryStreamCopyCommandPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamCopyCommandPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamCopyCommand)(nil)).Elem()
}

func (o DeliveryStreamCopyCommandPtrOutput) ToDeliveryStreamCopyCommandPtrOutput() DeliveryStreamCopyCommandPtrOutput {
	return o
}

func (o DeliveryStreamCopyCommandPtrOutput) ToDeliveryStreamCopyCommandPtrOutputWithContext(ctx context.Context) DeliveryStreamCopyCommandPtrOutput {
	return o
}

func (o DeliveryStreamCopyCommandPtrOutput) Elem() DeliveryStreamCopyCommandOutput {
	return o.ApplyT(func(v *DeliveryStreamCopyCommand) DeliveryStreamCopyCommand {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamCopyCommand
		return ret
	}).(DeliveryStreamCopyCommandOutput)
}

// Parameters to use with the Amazon Redshift `COPY` command. For examples, see the `CopyOptions` content for the [CopyCommand](https://docs.aws.amazon.com/firehose/latest/APIReference/API_CopyCommand.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamCopyCommandPtrOutput) CopyOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamCopyCommand) *string {
		if v == nil {
			return nil
		}
		return v.CopyOptions
	}).(pulumi.StringPtrOutput)
}

// A comma-separated list of column names.
func (o DeliveryStreamCopyCommandPtrOutput) DataTableColumns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamCopyCommand) *string {
		if v == nil {
			return nil
		}
		return v.DataTableColumns
	}).(pulumi.StringPtrOutput)
}

// The name of the target table. The table must already exist in the database.
func (o DeliveryStreamCopyCommandPtrOutput) DataTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamCopyCommand) *string {
		if v == nil {
			return nil
		}
		return &v.DataTableName
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamDataFormatConversionConfiguration struct {
	// Defaults to `true` . Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the deserializer that you want Firehose to use to convert the format of your data from JSON. This parameter is required if `Enabled` is set to true.
	InputFormatConfiguration *DeliveryStreamInputFormatConfiguration `pulumi:"inputFormatConfiguration"`
	// Specifies the serializer that you want Firehose to use to convert the format of your data to the Parquet or ORC format. This parameter is required if `Enabled` is set to true.
	OutputFormatConfiguration *DeliveryStreamOutputFormatConfiguration `pulumi:"outputFormatConfiguration"`
	// Specifies the AWS Glue Data Catalog table that contains the column information. This parameter is required if `Enabled` is set to true.
	SchemaConfiguration *DeliveryStreamSchemaConfiguration `pulumi:"schemaConfiguration"`
}

// DeliveryStreamDataFormatConversionConfigurationInput is an input type that accepts DeliveryStreamDataFormatConversionConfigurationArgs and DeliveryStreamDataFormatConversionConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamDataFormatConversionConfigurationInput` via:
//
//	DeliveryStreamDataFormatConversionConfigurationArgs{...}
type DeliveryStreamDataFormatConversionConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamDataFormatConversionConfigurationOutput() DeliveryStreamDataFormatConversionConfigurationOutput
	ToDeliveryStreamDataFormatConversionConfigurationOutputWithContext(context.Context) DeliveryStreamDataFormatConversionConfigurationOutput
}

type DeliveryStreamDataFormatConversionConfigurationArgs struct {
	// Defaults to `true` . Set it to `false` if you want to disable format conversion while preserving the configuration details.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the deserializer that you want Firehose to use to convert the format of your data from JSON. This parameter is required if `Enabled` is set to true.
	InputFormatConfiguration DeliveryStreamInputFormatConfigurationPtrInput `pulumi:"inputFormatConfiguration"`
	// Specifies the serializer that you want Firehose to use to convert the format of your data to the Parquet or ORC format. This parameter is required if `Enabled` is set to true.
	OutputFormatConfiguration DeliveryStreamOutputFormatConfigurationPtrInput `pulumi:"outputFormatConfiguration"`
	// Specifies the AWS Glue Data Catalog table that contains the column information. This parameter is required if `Enabled` is set to true.
	SchemaConfiguration DeliveryStreamSchemaConfigurationPtrInput `pulumi:"schemaConfiguration"`
}

func (DeliveryStreamDataFormatConversionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamDataFormatConversionConfiguration)(nil)).Elem()
}

func (i DeliveryStreamDataFormatConversionConfigurationArgs) ToDeliveryStreamDataFormatConversionConfigurationOutput() DeliveryStreamDataFormatConversionConfigurationOutput {
	return i.ToDeliveryStreamDataFormatConversionConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamDataFormatConversionConfigurationArgs) ToDeliveryStreamDataFormatConversionConfigurationOutputWithContext(ctx context.Context) DeliveryStreamDataFormatConversionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamDataFormatConversionConfigurationOutput)
}

func (i DeliveryStreamDataFormatConversionConfigurationArgs) ToDeliveryStreamDataFormatConversionConfigurationPtrOutput() DeliveryStreamDataFormatConversionConfigurationPtrOutput {
	return i.ToDeliveryStreamDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamDataFormatConversionConfigurationArgs) ToDeliveryStreamDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamDataFormatConversionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamDataFormatConversionConfigurationOutput).ToDeliveryStreamDataFormatConversionConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamDataFormatConversionConfigurationPtrInput is an input type that accepts DeliveryStreamDataFormatConversionConfigurationArgs, DeliveryStreamDataFormatConversionConfigurationPtr and DeliveryStreamDataFormatConversionConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamDataFormatConversionConfigurationPtrInput` via:
//
//	        DeliveryStreamDataFormatConversionConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamDataFormatConversionConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamDataFormatConversionConfigurationPtrOutput() DeliveryStreamDataFormatConversionConfigurationPtrOutput
	ToDeliveryStreamDataFormatConversionConfigurationPtrOutputWithContext(context.Context) DeliveryStreamDataFormatConversionConfigurationPtrOutput
}

type deliveryStreamDataFormatConversionConfigurationPtrType DeliveryStreamDataFormatConversionConfigurationArgs

func DeliveryStreamDataFormatConversionConfigurationPtr(v *DeliveryStreamDataFormatConversionConfigurationArgs) DeliveryStreamDataFormatConversionConfigurationPtrInput {
	return (*deliveryStreamDataFormatConversionConfigurationPtrType)(v)
}

func (*deliveryStreamDataFormatConversionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamDataFormatConversionConfiguration)(nil)).Elem()
}

func (i *deliveryStreamDataFormatConversionConfigurationPtrType) ToDeliveryStreamDataFormatConversionConfigurationPtrOutput() DeliveryStreamDataFormatConversionConfigurationPtrOutput {
	return i.ToDeliveryStreamDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamDataFormatConversionConfigurationPtrType) ToDeliveryStreamDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamDataFormatConversionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamDataFormatConversionConfigurationPtrOutput)
}

type DeliveryStreamDataFormatConversionConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamDataFormatConversionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamDataFormatConversionConfiguration)(nil)).Elem()
}

func (o DeliveryStreamDataFormatConversionConfigurationOutput) ToDeliveryStreamDataFormatConversionConfigurationOutput() DeliveryStreamDataFormatConversionConfigurationOutput {
	return o
}

func (o DeliveryStreamDataFormatConversionConfigurationOutput) ToDeliveryStreamDataFormatConversionConfigurationOutputWithContext(ctx context.Context) DeliveryStreamDataFormatConversionConfigurationOutput {
	return o
}

func (o DeliveryStreamDataFormatConversionConfigurationOutput) ToDeliveryStreamDataFormatConversionConfigurationPtrOutput() DeliveryStreamDataFormatConversionConfigurationPtrOutput {
	return o.ToDeliveryStreamDataFormatConversionConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamDataFormatConversionConfigurationOutput) ToDeliveryStreamDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamDataFormatConversionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamDataFormatConversionConfiguration) *DeliveryStreamDataFormatConversionConfiguration {
		return &v
	}).(DeliveryStreamDataFormatConversionConfigurationPtrOutput)
}

// Defaults to `true` . Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o DeliveryStreamDataFormatConversionConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeliveryStreamDataFormatConversionConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the deserializer that you want Firehose to use to convert the format of your data from JSON. This parameter is required if `Enabled` is set to true.
func (o DeliveryStreamDataFormatConversionConfigurationOutput) InputFormatConfiguration() DeliveryStreamInputFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamDataFormatConversionConfiguration) *DeliveryStreamInputFormatConfiguration {
		return v.InputFormatConfiguration
	}).(DeliveryStreamInputFormatConfigurationPtrOutput)
}

// Specifies the serializer that you want Firehose to use to convert the format of your data to the Parquet or ORC format. This parameter is required if `Enabled` is set to true.
func (o DeliveryStreamDataFormatConversionConfigurationOutput) OutputFormatConfiguration() DeliveryStreamOutputFormatConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamDataFormatConversionConfiguration) *DeliveryStreamOutputFormatConfiguration {
		return v.OutputFormatConfiguration
	}).(DeliveryStreamOutputFormatConfigurationPtrOutput)
}

// Specifies the AWS Glue Data Catalog table that contains the column information. This parameter is required if `Enabled` is set to true.
func (o DeliveryStreamDataFormatConversionConfigurationOutput) SchemaConfiguration() DeliveryStreamSchemaConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamDataFormatConversionConfiguration) *DeliveryStreamSchemaConfiguration {
		return v.SchemaConfiguration
	}).(DeliveryStreamSchemaConfigurationPtrOutput)
}

type DeliveryStreamDataFormatConversionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamDataFormatConversionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamDataFormatConversionConfiguration)(nil)).Elem()
}

func (o DeliveryStreamDataFormatConversionConfigurationPtrOutput) ToDeliveryStreamDataFormatConversionConfigurationPtrOutput() DeliveryStreamDataFormatConversionConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamDataFormatConversionConfigurationPtrOutput) ToDeliveryStreamDataFormatConversionConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamDataFormatConversionConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamDataFormatConversionConfigurationPtrOutput) Elem() DeliveryStreamDataFormatConversionConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamDataFormatConversionConfiguration) DeliveryStreamDataFormatConversionConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamDataFormatConversionConfiguration
		return ret
	}).(DeliveryStreamDataFormatConversionConfigurationOutput)
}

// Defaults to `true` . Set it to `false` if you want to disable format conversion while preserving the configuration details.
func (o DeliveryStreamDataFormatConversionConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamDataFormatConversionConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the deserializer that you want Firehose to use to convert the format of your data from JSON. This parameter is required if `Enabled` is set to true.
func (o DeliveryStreamDataFormatConversionConfigurationPtrOutput) InputFormatConfiguration() DeliveryStreamInputFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamDataFormatConversionConfiguration) *DeliveryStreamInputFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.InputFormatConfiguration
	}).(DeliveryStreamInputFormatConfigurationPtrOutput)
}

// Specifies the serializer that you want Firehose to use to convert the format of your data to the Parquet or ORC format. This parameter is required if `Enabled` is set to true.
func (o DeliveryStreamDataFormatConversionConfigurationPtrOutput) OutputFormatConfiguration() DeliveryStreamOutputFormatConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamDataFormatConversionConfiguration) *DeliveryStreamOutputFormatConfiguration {
		if v == nil {
			return nil
		}
		return v.OutputFormatConfiguration
	}).(DeliveryStreamOutputFormatConfigurationPtrOutput)
}

// Specifies the AWS Glue Data Catalog table that contains the column information. This parameter is required if `Enabled` is set to true.
func (o DeliveryStreamDataFormatConversionConfigurationPtrOutput) SchemaConfiguration() DeliveryStreamSchemaConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamDataFormatConversionConfiguration) *DeliveryStreamSchemaConfiguration {
		if v == nil {
			return nil
		}
		return v.SchemaConfiguration
	}).(DeliveryStreamSchemaConfigurationPtrOutput)
}

type DeliveryStreamDeserializer struct {
	// The native Hive / HCatalog JsonSerDe. Used by Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the OpenX SerDe.
	HiveJsonSerDe *DeliveryStreamHiveJsonSerDe `pulumi:"hiveJsonSerDe"`
	// The OpenX SerDe. Used by Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the native Hive / HCatalog JsonSerDe.
	OpenXJsonSerDe *DeliveryStreamOpenXJsonSerDe `pulumi:"openXJsonSerDe"`
}

// DeliveryStreamDeserializerInput is an input type that accepts DeliveryStreamDeserializerArgs and DeliveryStreamDeserializerOutput values.
// You can construct a concrete instance of `DeliveryStreamDeserializerInput` via:
//
//	DeliveryStreamDeserializerArgs{...}
type DeliveryStreamDeserializerInput interface {
	pulumi.Input

	ToDeliveryStreamDeserializerOutput() DeliveryStreamDeserializerOutput
	ToDeliveryStreamDeserializerOutputWithContext(context.Context) DeliveryStreamDeserializerOutput
}

type DeliveryStreamDeserializerArgs struct {
	// The native Hive / HCatalog JsonSerDe. Used by Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the OpenX SerDe.
	HiveJsonSerDe DeliveryStreamHiveJsonSerDePtrInput `pulumi:"hiveJsonSerDe"`
	// The OpenX SerDe. Used by Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the native Hive / HCatalog JsonSerDe.
	OpenXJsonSerDe DeliveryStreamOpenXJsonSerDePtrInput `pulumi:"openXJsonSerDe"`
}

func (DeliveryStreamDeserializerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamDeserializer)(nil)).Elem()
}

func (i DeliveryStreamDeserializerArgs) ToDeliveryStreamDeserializerOutput() DeliveryStreamDeserializerOutput {
	return i.ToDeliveryStreamDeserializerOutputWithContext(context.Background())
}

func (i DeliveryStreamDeserializerArgs) ToDeliveryStreamDeserializerOutputWithContext(ctx context.Context) DeliveryStreamDeserializerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamDeserializerOutput)
}

func (i DeliveryStreamDeserializerArgs) ToDeliveryStreamDeserializerPtrOutput() DeliveryStreamDeserializerPtrOutput {
	return i.ToDeliveryStreamDeserializerPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamDeserializerArgs) ToDeliveryStreamDeserializerPtrOutputWithContext(ctx context.Context) DeliveryStreamDeserializerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamDeserializerOutput).ToDeliveryStreamDeserializerPtrOutputWithContext(ctx)
}

// DeliveryStreamDeserializerPtrInput is an input type that accepts DeliveryStreamDeserializerArgs, DeliveryStreamDeserializerPtr and DeliveryStreamDeserializerPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamDeserializerPtrInput` via:
//
//	        DeliveryStreamDeserializerArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamDeserializerPtrInput interface {
	pulumi.Input

	ToDeliveryStreamDeserializerPtrOutput() DeliveryStreamDeserializerPtrOutput
	ToDeliveryStreamDeserializerPtrOutputWithContext(context.Context) DeliveryStreamDeserializerPtrOutput
}

type deliveryStreamDeserializerPtrType DeliveryStreamDeserializerArgs

func DeliveryStreamDeserializerPtr(v *DeliveryStreamDeserializerArgs) DeliveryStreamDeserializerPtrInput {
	return (*deliveryStreamDeserializerPtrType)(v)
}

func (*deliveryStreamDeserializerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamDeserializer)(nil)).Elem()
}

func (i *deliveryStreamDeserializerPtrType) ToDeliveryStreamDeserializerPtrOutput() DeliveryStreamDeserializerPtrOutput {
	return i.ToDeliveryStreamDeserializerPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamDeserializerPtrType) ToDeliveryStreamDeserializerPtrOutputWithContext(ctx context.Context) DeliveryStreamDeserializerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamDeserializerPtrOutput)
}

type DeliveryStreamDeserializerOutput struct{ *pulumi.OutputState }

func (DeliveryStreamDeserializerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamDeserializer)(nil)).Elem()
}

func (o DeliveryStreamDeserializerOutput) ToDeliveryStreamDeserializerOutput() DeliveryStreamDeserializerOutput {
	return o
}

func (o DeliveryStreamDeserializerOutput) ToDeliveryStreamDeserializerOutputWithContext(ctx context.Context) DeliveryStreamDeserializerOutput {
	return o
}

func (o DeliveryStreamDeserializerOutput) ToDeliveryStreamDeserializerPtrOutput() DeliveryStreamDeserializerPtrOutput {
	return o.ToDeliveryStreamDeserializerPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamDeserializerOutput) ToDeliveryStreamDeserializerPtrOutputWithContext(ctx context.Context) DeliveryStreamDeserializerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamDeserializer) *DeliveryStreamDeserializer {
		return &v
	}).(DeliveryStreamDeserializerPtrOutput)
}

// The native Hive / HCatalog JsonSerDe. Used by Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the OpenX SerDe.
func (o DeliveryStreamDeserializerOutput) HiveJsonSerDe() DeliveryStreamHiveJsonSerDePtrOutput {
	return o.ApplyT(func(v DeliveryStreamDeserializer) *DeliveryStreamHiveJsonSerDe { return v.HiveJsonSerDe }).(DeliveryStreamHiveJsonSerDePtrOutput)
}

// The OpenX SerDe. Used by Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the native Hive / HCatalog JsonSerDe.
func (o DeliveryStreamDeserializerOutput) OpenXJsonSerDe() DeliveryStreamOpenXJsonSerDePtrOutput {
	return o.ApplyT(func(v DeliveryStreamDeserializer) *DeliveryStreamOpenXJsonSerDe { return v.OpenXJsonSerDe }).(DeliveryStreamOpenXJsonSerDePtrOutput)
}

type DeliveryStreamDeserializerPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamDeserializerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamDeserializer)(nil)).Elem()
}

func (o DeliveryStreamDeserializerPtrOutput) ToDeliveryStreamDeserializerPtrOutput() DeliveryStreamDeserializerPtrOutput {
	return o
}

func (o DeliveryStreamDeserializerPtrOutput) ToDeliveryStreamDeserializerPtrOutputWithContext(ctx context.Context) DeliveryStreamDeserializerPtrOutput {
	return o
}

func (o DeliveryStreamDeserializerPtrOutput) Elem() DeliveryStreamDeserializerOutput {
	return o.ApplyT(func(v *DeliveryStreamDeserializer) DeliveryStreamDeserializer {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamDeserializer
		return ret
	}).(DeliveryStreamDeserializerOutput)
}

// The native Hive / HCatalog JsonSerDe. Used by Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the OpenX SerDe.
func (o DeliveryStreamDeserializerPtrOutput) HiveJsonSerDe() DeliveryStreamHiveJsonSerDePtrOutput {
	return o.ApplyT(func(v *DeliveryStreamDeserializer) *DeliveryStreamHiveJsonSerDe {
		if v == nil {
			return nil
		}
		return v.HiveJsonSerDe
	}).(DeliveryStreamHiveJsonSerDePtrOutput)
}

// The OpenX SerDe. Used by Firehose for deserializing data, which means converting it from the JSON format in preparation for serializing it to the Parquet or ORC format. This is one of two deserializers you can choose, depending on which one offers the functionality you need. The other option is the native Hive / HCatalog JsonSerDe.
func (o DeliveryStreamDeserializerPtrOutput) OpenXJsonSerDe() DeliveryStreamOpenXJsonSerDePtrOutput {
	return o.ApplyT(func(v *DeliveryStreamDeserializer) *DeliveryStreamOpenXJsonSerDe {
		if v == nil {
			return nil
		}
		return v.OpenXJsonSerDe
	}).(DeliveryStreamOpenXJsonSerDePtrOutput)
}

type DeliveryStreamDocumentIdOptions struct {
	// When the `FIREHOSE_DEFAULT` option is chosen, Firehose generates a unique document ID for each record based on a unique internal identifier. The generated document ID is stable across multiple delivery attempts, which helps prevent the same record from being indexed multiple times with different document IDs.
	//
	// When the `NO_DOCUMENT_ID` option is chosen, Firehose does not include any document IDs in the requests it sends to the Amazon OpenSearch Service. This causes the Amazon OpenSearch Service domain to generate document IDs. In case of multiple delivery attempts, this may cause the same record to be indexed more than once with different document IDs. This option enables write-heavy operations, such as the ingestion of logs and observability data, to consume less resources in the Amazon OpenSearch Service domain, resulting in improved performance.
	DefaultDocumentIdFormat DeliveryStreamDocumentIdOptionsDefaultDocumentIdFormat `pulumi:"defaultDocumentIdFormat"`
}

// DeliveryStreamDocumentIdOptionsInput is an input type that accepts DeliveryStreamDocumentIdOptionsArgs and DeliveryStreamDocumentIdOptionsOutput values.
// You can construct a concrete instance of `DeliveryStreamDocumentIdOptionsInput` via:
//
//	DeliveryStreamDocumentIdOptionsArgs{...}
type DeliveryStreamDocumentIdOptionsInput interface {
	pulumi.Input

	ToDeliveryStreamDocumentIdOptionsOutput() DeliveryStreamDocumentIdOptionsOutput
	ToDeliveryStreamDocumentIdOptionsOutputWithContext(context.Context) DeliveryStreamDocumentIdOptionsOutput
}

type DeliveryStreamDocumentIdOptionsArgs struct {
	// When the `FIREHOSE_DEFAULT` option is chosen, Firehose generates a unique document ID for each record based on a unique internal identifier. The generated document ID is stable across multiple delivery attempts, which helps prevent the same record from being indexed multiple times with different document IDs.
	//
	// When the `NO_DOCUMENT_ID` option is chosen, Firehose does not include any document IDs in the requests it sends to the Amazon OpenSearch Service. This causes the Amazon OpenSearch Service domain to generate document IDs. In case of multiple delivery attempts, this may cause the same record to be indexed more than once with different document IDs. This option enables write-heavy operations, such as the ingestion of logs and observability data, to consume less resources in the Amazon OpenSearch Service domain, resulting in improved performance.
	DefaultDocumentIdFormat DeliveryStreamDocumentIdOptionsDefaultDocumentIdFormatInput `pulumi:"defaultDocumentIdFormat"`
}

func (DeliveryStreamDocumentIdOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamDocumentIdOptions)(nil)).Elem()
}

func (i DeliveryStreamDocumentIdOptionsArgs) ToDeliveryStreamDocumentIdOptionsOutput() DeliveryStreamDocumentIdOptionsOutput {
	return i.ToDeliveryStreamDocumentIdOptionsOutputWithContext(context.Background())
}

func (i DeliveryStreamDocumentIdOptionsArgs) ToDeliveryStreamDocumentIdOptionsOutputWithContext(ctx context.Context) DeliveryStreamDocumentIdOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamDocumentIdOptionsOutput)
}

func (i DeliveryStreamDocumentIdOptionsArgs) ToDeliveryStreamDocumentIdOptionsPtrOutput() DeliveryStreamDocumentIdOptionsPtrOutput {
	return i.ToDeliveryStreamDocumentIdOptionsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamDocumentIdOptionsArgs) ToDeliveryStreamDocumentIdOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamDocumentIdOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamDocumentIdOptionsOutput).ToDeliveryStreamDocumentIdOptionsPtrOutputWithContext(ctx)
}

// DeliveryStreamDocumentIdOptionsPtrInput is an input type that accepts DeliveryStreamDocumentIdOptionsArgs, DeliveryStreamDocumentIdOptionsPtr and DeliveryStreamDocumentIdOptionsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamDocumentIdOptionsPtrInput` via:
//
//	        DeliveryStreamDocumentIdOptionsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamDocumentIdOptionsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamDocumentIdOptionsPtrOutput() DeliveryStreamDocumentIdOptionsPtrOutput
	ToDeliveryStreamDocumentIdOptionsPtrOutputWithContext(context.Context) DeliveryStreamDocumentIdOptionsPtrOutput
}

type deliveryStreamDocumentIdOptionsPtrType DeliveryStreamDocumentIdOptionsArgs

func DeliveryStreamDocumentIdOptionsPtr(v *DeliveryStreamDocumentIdOptionsArgs) DeliveryStreamDocumentIdOptionsPtrInput {
	return (*deliveryStreamDocumentIdOptionsPtrType)(v)
}

func (*deliveryStreamDocumentIdOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamDocumentIdOptions)(nil)).Elem()
}

func (i *deliveryStreamDocumentIdOptionsPtrType) ToDeliveryStreamDocumentIdOptionsPtrOutput() DeliveryStreamDocumentIdOptionsPtrOutput {
	return i.ToDeliveryStreamDocumentIdOptionsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamDocumentIdOptionsPtrType) ToDeliveryStreamDocumentIdOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamDocumentIdOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamDocumentIdOptionsPtrOutput)
}

type DeliveryStreamDocumentIdOptionsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamDocumentIdOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamDocumentIdOptions)(nil)).Elem()
}

func (o DeliveryStreamDocumentIdOptionsOutput) ToDeliveryStreamDocumentIdOptionsOutput() DeliveryStreamDocumentIdOptionsOutput {
	return o
}

func (o DeliveryStreamDocumentIdOptionsOutput) ToDeliveryStreamDocumentIdOptionsOutputWithContext(ctx context.Context) DeliveryStreamDocumentIdOptionsOutput {
	return o
}

func (o DeliveryStreamDocumentIdOptionsOutput) ToDeliveryStreamDocumentIdOptionsPtrOutput() DeliveryStreamDocumentIdOptionsPtrOutput {
	return o.ToDeliveryStreamDocumentIdOptionsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamDocumentIdOptionsOutput) ToDeliveryStreamDocumentIdOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamDocumentIdOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamDocumentIdOptions) *DeliveryStreamDocumentIdOptions {
		return &v
	}).(DeliveryStreamDocumentIdOptionsPtrOutput)
}

// When the `FIREHOSE_DEFAULT` option is chosen, Firehose generates a unique document ID for each record based on a unique internal identifier. The generated document ID is stable across multiple delivery attempts, which helps prevent the same record from being indexed multiple times with different document IDs.
//
// When the `NO_DOCUMENT_ID` option is chosen, Firehose does not include any document IDs in the requests it sends to the Amazon OpenSearch Service. This causes the Amazon OpenSearch Service domain to generate document IDs. In case of multiple delivery attempts, this may cause the same record to be indexed more than once with different document IDs. This option enables write-heavy operations, such as the ingestion of logs and observability data, to consume less resources in the Amazon OpenSearch Service domain, resulting in improved performance.
func (o DeliveryStreamDocumentIdOptionsOutput) DefaultDocumentIdFormat() DeliveryStreamDocumentIdOptionsDefaultDocumentIdFormatOutput {
	return o.ApplyT(func(v DeliveryStreamDocumentIdOptions) DeliveryStreamDocumentIdOptionsDefaultDocumentIdFormat {
		return v.DefaultDocumentIdFormat
	}).(DeliveryStreamDocumentIdOptionsDefaultDocumentIdFormatOutput)
}

type DeliveryStreamDocumentIdOptionsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamDocumentIdOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamDocumentIdOptions)(nil)).Elem()
}

func (o DeliveryStreamDocumentIdOptionsPtrOutput) ToDeliveryStreamDocumentIdOptionsPtrOutput() DeliveryStreamDocumentIdOptionsPtrOutput {
	return o
}

func (o DeliveryStreamDocumentIdOptionsPtrOutput) ToDeliveryStreamDocumentIdOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamDocumentIdOptionsPtrOutput {
	return o
}

func (o DeliveryStreamDocumentIdOptionsPtrOutput) Elem() DeliveryStreamDocumentIdOptionsOutput {
	return o.ApplyT(func(v *DeliveryStreamDocumentIdOptions) DeliveryStreamDocumentIdOptions {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamDocumentIdOptions
		return ret
	}).(DeliveryStreamDocumentIdOptionsOutput)
}

// When the `FIREHOSE_DEFAULT` option is chosen, Firehose generates a unique document ID for each record based on a unique internal identifier. The generated document ID is stable across multiple delivery attempts, which helps prevent the same record from being indexed multiple times with different document IDs.
//
// When the `NO_DOCUMENT_ID` option is chosen, Firehose does not include any document IDs in the requests it sends to the Amazon OpenSearch Service. This causes the Amazon OpenSearch Service domain to generate document IDs. In case of multiple delivery attempts, this may cause the same record to be indexed more than once with different document IDs. This option enables write-heavy operations, such as the ingestion of logs and observability data, to consume less resources in the Amazon OpenSearch Service domain, resulting in improved performance.
func (o DeliveryStreamDocumentIdOptionsPtrOutput) DefaultDocumentIdFormat() DeliveryStreamDocumentIdOptionsDefaultDocumentIdFormatPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamDocumentIdOptions) *DeliveryStreamDocumentIdOptionsDefaultDocumentIdFormat {
		if v == nil {
			return nil
		}
		return &v.DefaultDocumentIdFormat
	}).(DeliveryStreamDocumentIdOptionsDefaultDocumentIdFormatPtrOutput)
}

type DeliveryStreamDynamicPartitioningConfiguration struct {
	// Specifies whether dynamic partitioning is enabled for this Kinesis Data Firehose delivery stream.
	Enabled *bool `pulumi:"enabled"`
	// Specifies the retry behavior in case Kinesis Data Firehose is unable to deliver data to an Amazon S3 prefix.
	RetryOptions *DeliveryStreamRetryOptions `pulumi:"retryOptions"`
}

// DeliveryStreamDynamicPartitioningConfigurationInput is an input type that accepts DeliveryStreamDynamicPartitioningConfigurationArgs and DeliveryStreamDynamicPartitioningConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamDynamicPartitioningConfigurationInput` via:
//
//	DeliveryStreamDynamicPartitioningConfigurationArgs{...}
type DeliveryStreamDynamicPartitioningConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamDynamicPartitioningConfigurationOutput() DeliveryStreamDynamicPartitioningConfigurationOutput
	ToDeliveryStreamDynamicPartitioningConfigurationOutputWithContext(context.Context) DeliveryStreamDynamicPartitioningConfigurationOutput
}

type DeliveryStreamDynamicPartitioningConfigurationArgs struct {
	// Specifies whether dynamic partitioning is enabled for this Kinesis Data Firehose delivery stream.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specifies the retry behavior in case Kinesis Data Firehose is unable to deliver data to an Amazon S3 prefix.
	RetryOptions DeliveryStreamRetryOptionsPtrInput `pulumi:"retryOptions"`
}

func (DeliveryStreamDynamicPartitioningConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamDynamicPartitioningConfiguration)(nil)).Elem()
}

func (i DeliveryStreamDynamicPartitioningConfigurationArgs) ToDeliveryStreamDynamicPartitioningConfigurationOutput() DeliveryStreamDynamicPartitioningConfigurationOutput {
	return i.ToDeliveryStreamDynamicPartitioningConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamDynamicPartitioningConfigurationArgs) ToDeliveryStreamDynamicPartitioningConfigurationOutputWithContext(ctx context.Context) DeliveryStreamDynamicPartitioningConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamDynamicPartitioningConfigurationOutput)
}

func (i DeliveryStreamDynamicPartitioningConfigurationArgs) ToDeliveryStreamDynamicPartitioningConfigurationPtrOutput() DeliveryStreamDynamicPartitioningConfigurationPtrOutput {
	return i.ToDeliveryStreamDynamicPartitioningConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamDynamicPartitioningConfigurationArgs) ToDeliveryStreamDynamicPartitioningConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamDynamicPartitioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamDynamicPartitioningConfigurationOutput).ToDeliveryStreamDynamicPartitioningConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamDynamicPartitioningConfigurationPtrInput is an input type that accepts DeliveryStreamDynamicPartitioningConfigurationArgs, DeliveryStreamDynamicPartitioningConfigurationPtr and DeliveryStreamDynamicPartitioningConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamDynamicPartitioningConfigurationPtrInput` via:
//
//	        DeliveryStreamDynamicPartitioningConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamDynamicPartitioningConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamDynamicPartitioningConfigurationPtrOutput() DeliveryStreamDynamicPartitioningConfigurationPtrOutput
	ToDeliveryStreamDynamicPartitioningConfigurationPtrOutputWithContext(context.Context) DeliveryStreamDynamicPartitioningConfigurationPtrOutput
}

type deliveryStreamDynamicPartitioningConfigurationPtrType DeliveryStreamDynamicPartitioningConfigurationArgs

func DeliveryStreamDynamicPartitioningConfigurationPtr(v *DeliveryStreamDynamicPartitioningConfigurationArgs) DeliveryStreamDynamicPartitioningConfigurationPtrInput {
	return (*deliveryStreamDynamicPartitioningConfigurationPtrType)(v)
}

func (*deliveryStreamDynamicPartitioningConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamDynamicPartitioningConfiguration)(nil)).Elem()
}

func (i *deliveryStreamDynamicPartitioningConfigurationPtrType) ToDeliveryStreamDynamicPartitioningConfigurationPtrOutput() DeliveryStreamDynamicPartitioningConfigurationPtrOutput {
	return i.ToDeliveryStreamDynamicPartitioningConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamDynamicPartitioningConfigurationPtrType) ToDeliveryStreamDynamicPartitioningConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamDynamicPartitioningConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamDynamicPartitioningConfigurationPtrOutput)
}

type DeliveryStreamDynamicPartitioningConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamDynamicPartitioningConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamDynamicPartitioningConfiguration)(nil)).Elem()
}

func (o DeliveryStreamDynamicPartitioningConfigurationOutput) ToDeliveryStreamDynamicPartitioningConfigurationOutput() DeliveryStreamDynamicPartitioningConfigurationOutput {
	return o
}

func (o DeliveryStreamDynamicPartitioningConfigurationOutput) ToDeliveryStreamDynamicPartitioningConfigurationOutputWithContext(ctx context.Context) DeliveryStreamDynamicPartitioningConfigurationOutput {
	return o
}

func (o DeliveryStreamDynamicPartitioningConfigurationOutput) ToDeliveryStreamDynamicPartitioningConfigurationPtrOutput() DeliveryStreamDynamicPartitioningConfigurationPtrOutput {
	return o.ToDeliveryStreamDynamicPartitioningConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamDynamicPartitioningConfigurationOutput) ToDeliveryStreamDynamicPartitioningConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamDynamicPartitioningConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamDynamicPartitioningConfiguration) *DeliveryStreamDynamicPartitioningConfiguration {
		return &v
	}).(DeliveryStreamDynamicPartitioningConfigurationPtrOutput)
}

// Specifies whether dynamic partitioning is enabled for this Kinesis Data Firehose delivery stream.
func (o DeliveryStreamDynamicPartitioningConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeliveryStreamDynamicPartitioningConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specifies the retry behavior in case Kinesis Data Firehose is unable to deliver data to an Amazon S3 prefix.
func (o DeliveryStreamDynamicPartitioningConfigurationOutput) RetryOptions() DeliveryStreamRetryOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamDynamicPartitioningConfiguration) *DeliveryStreamRetryOptions {
		return v.RetryOptions
	}).(DeliveryStreamRetryOptionsPtrOutput)
}

type DeliveryStreamDynamicPartitioningConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamDynamicPartitioningConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamDynamicPartitioningConfiguration)(nil)).Elem()
}

func (o DeliveryStreamDynamicPartitioningConfigurationPtrOutput) ToDeliveryStreamDynamicPartitioningConfigurationPtrOutput() DeliveryStreamDynamicPartitioningConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamDynamicPartitioningConfigurationPtrOutput) ToDeliveryStreamDynamicPartitioningConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamDynamicPartitioningConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamDynamicPartitioningConfigurationPtrOutput) Elem() DeliveryStreamDynamicPartitioningConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamDynamicPartitioningConfiguration) DeliveryStreamDynamicPartitioningConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamDynamicPartitioningConfiguration
		return ret
	}).(DeliveryStreamDynamicPartitioningConfigurationOutput)
}

// Specifies whether dynamic partitioning is enabled for this Kinesis Data Firehose delivery stream.
func (o DeliveryStreamDynamicPartitioningConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamDynamicPartitioningConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the retry behavior in case Kinesis Data Firehose is unable to deliver data to an Amazon S3 prefix.
func (o DeliveryStreamDynamicPartitioningConfigurationPtrOutput) RetryOptions() DeliveryStreamRetryOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamDynamicPartitioningConfiguration) *DeliveryStreamRetryOptions {
		if v == nil {
			return nil
		}
		return v.RetryOptions
	}).(DeliveryStreamRetryOptionsPtrOutput)
}

type DeliveryStreamElasticsearchBufferingHints struct {
	// The length of time, in seconds, that Kinesis Data Firehose buffers incoming data before delivering it to the destination. For valid values, see the `IntervalInSeconds` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// The size of the buffer, in MBs, that Kinesis Data Firehose uses for incoming data before delivering it to the destination. For valid values, see the `SizeInMBs` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	SizeInMbs *int `pulumi:"sizeInMbs"`
}

// DeliveryStreamElasticsearchBufferingHintsInput is an input type that accepts DeliveryStreamElasticsearchBufferingHintsArgs and DeliveryStreamElasticsearchBufferingHintsOutput values.
// You can construct a concrete instance of `DeliveryStreamElasticsearchBufferingHintsInput` via:
//
//	DeliveryStreamElasticsearchBufferingHintsArgs{...}
type DeliveryStreamElasticsearchBufferingHintsInput interface {
	pulumi.Input

	ToDeliveryStreamElasticsearchBufferingHintsOutput() DeliveryStreamElasticsearchBufferingHintsOutput
	ToDeliveryStreamElasticsearchBufferingHintsOutputWithContext(context.Context) DeliveryStreamElasticsearchBufferingHintsOutput
}

type DeliveryStreamElasticsearchBufferingHintsArgs struct {
	// The length of time, in seconds, that Kinesis Data Firehose buffers incoming data before delivering it to the destination. For valid values, see the `IntervalInSeconds` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// The size of the buffer, in MBs, that Kinesis Data Firehose uses for incoming data before delivering it to the destination. For valid values, see the `SizeInMBs` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	SizeInMbs pulumi.IntPtrInput `pulumi:"sizeInMbs"`
}

func (DeliveryStreamElasticsearchBufferingHintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamElasticsearchBufferingHints)(nil)).Elem()
}

func (i DeliveryStreamElasticsearchBufferingHintsArgs) ToDeliveryStreamElasticsearchBufferingHintsOutput() DeliveryStreamElasticsearchBufferingHintsOutput {
	return i.ToDeliveryStreamElasticsearchBufferingHintsOutputWithContext(context.Background())
}

func (i DeliveryStreamElasticsearchBufferingHintsArgs) ToDeliveryStreamElasticsearchBufferingHintsOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchBufferingHintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamElasticsearchBufferingHintsOutput)
}

func (i DeliveryStreamElasticsearchBufferingHintsArgs) ToDeliveryStreamElasticsearchBufferingHintsPtrOutput() DeliveryStreamElasticsearchBufferingHintsPtrOutput {
	return i.ToDeliveryStreamElasticsearchBufferingHintsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamElasticsearchBufferingHintsArgs) ToDeliveryStreamElasticsearchBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchBufferingHintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamElasticsearchBufferingHintsOutput).ToDeliveryStreamElasticsearchBufferingHintsPtrOutputWithContext(ctx)
}

// DeliveryStreamElasticsearchBufferingHintsPtrInput is an input type that accepts DeliveryStreamElasticsearchBufferingHintsArgs, DeliveryStreamElasticsearchBufferingHintsPtr and DeliveryStreamElasticsearchBufferingHintsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamElasticsearchBufferingHintsPtrInput` via:
//
//	        DeliveryStreamElasticsearchBufferingHintsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamElasticsearchBufferingHintsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamElasticsearchBufferingHintsPtrOutput() DeliveryStreamElasticsearchBufferingHintsPtrOutput
	ToDeliveryStreamElasticsearchBufferingHintsPtrOutputWithContext(context.Context) DeliveryStreamElasticsearchBufferingHintsPtrOutput
}

type deliveryStreamElasticsearchBufferingHintsPtrType DeliveryStreamElasticsearchBufferingHintsArgs

func DeliveryStreamElasticsearchBufferingHintsPtr(v *DeliveryStreamElasticsearchBufferingHintsArgs) DeliveryStreamElasticsearchBufferingHintsPtrInput {
	return (*deliveryStreamElasticsearchBufferingHintsPtrType)(v)
}

func (*deliveryStreamElasticsearchBufferingHintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamElasticsearchBufferingHints)(nil)).Elem()
}

func (i *deliveryStreamElasticsearchBufferingHintsPtrType) ToDeliveryStreamElasticsearchBufferingHintsPtrOutput() DeliveryStreamElasticsearchBufferingHintsPtrOutput {
	return i.ToDeliveryStreamElasticsearchBufferingHintsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamElasticsearchBufferingHintsPtrType) ToDeliveryStreamElasticsearchBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchBufferingHintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamElasticsearchBufferingHintsPtrOutput)
}

type DeliveryStreamElasticsearchBufferingHintsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamElasticsearchBufferingHintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamElasticsearchBufferingHints)(nil)).Elem()
}

func (o DeliveryStreamElasticsearchBufferingHintsOutput) ToDeliveryStreamElasticsearchBufferingHintsOutput() DeliveryStreamElasticsearchBufferingHintsOutput {
	return o
}

func (o DeliveryStreamElasticsearchBufferingHintsOutput) ToDeliveryStreamElasticsearchBufferingHintsOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchBufferingHintsOutput {
	return o
}

func (o DeliveryStreamElasticsearchBufferingHintsOutput) ToDeliveryStreamElasticsearchBufferingHintsPtrOutput() DeliveryStreamElasticsearchBufferingHintsPtrOutput {
	return o.ToDeliveryStreamElasticsearchBufferingHintsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamElasticsearchBufferingHintsOutput) ToDeliveryStreamElasticsearchBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchBufferingHintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamElasticsearchBufferingHints) *DeliveryStreamElasticsearchBufferingHints {
		return &v
	}).(DeliveryStreamElasticsearchBufferingHintsPtrOutput)
}

// The length of time, in seconds, that Kinesis Data Firehose buffers incoming data before delivering it to the destination. For valid values, see the `IntervalInSeconds` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamElasticsearchBufferingHintsOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchBufferingHints) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// The size of the buffer, in MBs, that Kinesis Data Firehose uses for incoming data before delivering it to the destination. For valid values, see the `SizeInMBs` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamElasticsearchBufferingHintsOutput) SizeInMbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchBufferingHints) *int { return v.SizeInMbs }).(pulumi.IntPtrOutput)
}

type DeliveryStreamElasticsearchBufferingHintsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamElasticsearchBufferingHintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamElasticsearchBufferingHints)(nil)).Elem()
}

func (o DeliveryStreamElasticsearchBufferingHintsPtrOutput) ToDeliveryStreamElasticsearchBufferingHintsPtrOutput() DeliveryStreamElasticsearchBufferingHintsPtrOutput {
	return o
}

func (o DeliveryStreamElasticsearchBufferingHintsPtrOutput) ToDeliveryStreamElasticsearchBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchBufferingHintsPtrOutput {
	return o
}

func (o DeliveryStreamElasticsearchBufferingHintsPtrOutput) Elem() DeliveryStreamElasticsearchBufferingHintsOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchBufferingHints) DeliveryStreamElasticsearchBufferingHints {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamElasticsearchBufferingHints
		return ret
	}).(DeliveryStreamElasticsearchBufferingHintsOutput)
}

// The length of time, in seconds, that Kinesis Data Firehose buffers incoming data before delivering it to the destination. For valid values, see the `IntervalInSeconds` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamElasticsearchBufferingHintsPtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchBufferingHints) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// The size of the buffer, in MBs, that Kinesis Data Firehose uses for incoming data before delivering it to the destination. For valid values, see the `SizeInMBs` content for the [BufferingHints](https://docs.aws.amazon.com/firehose/latest/APIReference/API_BufferingHints.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamElasticsearchBufferingHintsPtrOutput) SizeInMbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchBufferingHints) *int {
		if v == nil {
			return nil
		}
		return v.SizeInMbs
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamElasticsearchDestinationConfiguration struct {
	// Configures how Kinesis Data Firehose buffers incoming data while delivering it to the Amazon ES domain.
	BufferingHints *DeliveryStreamElasticsearchBufferingHints `pulumi:"bufferingHints"`
	// The Amazon CloudWatch Logs logging options for the delivery stream.
	CloudWatchLoggingOptions *DeliveryStreamCloudWatchLoggingOptions `pulumi:"cloudWatchLoggingOptions"`
	// The endpoint to use when communicating with the cluster. Specify either this `ClusterEndpoint` or the `DomainARN` field.
	ClusterEndpoint *string `pulumi:"clusterEndpoint"`
	// Indicates the method for setting up document ID. The supported methods are Firehose generated document ID and OpenSearch Service generated document ID.
	DocumentIdOptions *DeliveryStreamDocumentIdOptions `pulumi:"documentIdOptions"`
	// The ARN of the Amazon ES domain. The IAM role must have permissions for `DescribeElasticsearchDomain` , `DescribeElasticsearchDomains` , and `DescribeElasticsearchDomainConfig` after assuming the role specified in *RoleARN* .
	//
	// Specify either `ClusterEndpoint` or `DomainARN` .
	DomainArn *string `pulumi:"domainArn"`
	// The name of the Elasticsearch index to which Kinesis Data Firehose adds data for indexing.
	IndexName string `pulumi:"indexName"`
	// The frequency of Elasticsearch index rotation. If you enable index rotation, Kinesis Data Firehose appends a portion of the UTC arrival timestamp to the specified index name, and rotates the appended timestamp accordingly. For more information, see [Index Rotation for the Amazon ES Destination](https://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation) in the *Amazon Kinesis Data Firehose Developer Guide* .
	IndexRotationPeriod *DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod `pulumi:"indexRotationPeriod"`
	// The data processing configuration for the Kinesis Data Firehose delivery stream.
	ProcessingConfiguration *DeliveryStreamProcessingConfiguration `pulumi:"processingConfiguration"`
	// The retry behavior when Kinesis Data Firehose is unable to deliver data to Amazon ES.
	RetryOptions *DeliveryStreamElasticsearchRetryOptions `pulumi:"retryOptions"`
	// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Amazon ES Configuration API and for indexing documents. For more information, see [Controlling Access with Amazon Kinesis Data Firehose](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html) .
	RoleArn string `pulumi:"roleArn"`
	// The condition under which Kinesis Data Firehose delivers data to Amazon Simple Storage Service (Amazon S3). You can send Amazon S3 all documents (all data) or only the documents that Kinesis Data Firehose could not deliver to the Amazon ES destination. For more information and valid values, see the `S3BackupMode` content for the [ElasticsearchDestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ElasticsearchDestinationConfiguration.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	S3BackupMode *DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode `pulumi:"s3BackupMode"`
	// The S3 bucket where Kinesis Data Firehose backs up incoming data.
	S3Configuration DeliveryStreamS3DestinationConfiguration `pulumi:"s3Configuration"`
	// The Elasticsearch type name that Amazon ES adds to documents when indexing data.
	TypeName *string `pulumi:"typeName"`
	// The details of the VPC of the Amazon ES destination.
	VpcConfiguration *DeliveryStreamVpcConfiguration `pulumi:"vpcConfiguration"`
}

// DeliveryStreamElasticsearchDestinationConfigurationInput is an input type that accepts DeliveryStreamElasticsearchDestinationConfigurationArgs and DeliveryStreamElasticsearchDestinationConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamElasticsearchDestinationConfigurationInput` via:
//
//	DeliveryStreamElasticsearchDestinationConfigurationArgs{...}
type DeliveryStreamElasticsearchDestinationConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamElasticsearchDestinationConfigurationOutput() DeliveryStreamElasticsearchDestinationConfigurationOutput
	ToDeliveryStreamElasticsearchDestinationConfigurationOutputWithContext(context.Context) DeliveryStreamElasticsearchDestinationConfigurationOutput
}

type DeliveryStreamElasticsearchDestinationConfigurationArgs struct {
	// Configures how Kinesis Data Firehose buffers incoming data while delivering it to the Amazon ES domain.
	BufferingHints DeliveryStreamElasticsearchBufferingHintsPtrInput `pulumi:"bufferingHints"`
	// The Amazon CloudWatch Logs logging options for the delivery stream.
	CloudWatchLoggingOptions DeliveryStreamCloudWatchLoggingOptionsPtrInput `pulumi:"cloudWatchLoggingOptions"`
	// The endpoint to use when communicating with the cluster. Specify either this `ClusterEndpoint` or the `DomainARN` field.
	ClusterEndpoint pulumi.StringPtrInput `pulumi:"clusterEndpoint"`
	// Indicates the method for setting up document ID. The supported methods are Firehose generated document ID and OpenSearch Service generated document ID.
	DocumentIdOptions DeliveryStreamDocumentIdOptionsPtrInput `pulumi:"documentIdOptions"`
	// The ARN of the Amazon ES domain. The IAM role must have permissions for `DescribeElasticsearchDomain` , `DescribeElasticsearchDomains` , and `DescribeElasticsearchDomainConfig` after assuming the role specified in *RoleARN* .
	//
	// Specify either `ClusterEndpoint` or `DomainARN` .
	DomainArn pulumi.StringPtrInput `pulumi:"domainArn"`
	// The name of the Elasticsearch index to which Kinesis Data Firehose adds data for indexing.
	IndexName pulumi.StringInput `pulumi:"indexName"`
	// The frequency of Elasticsearch index rotation. If you enable index rotation, Kinesis Data Firehose appends a portion of the UTC arrival timestamp to the specified index name, and rotates the appended timestamp accordingly. For more information, see [Index Rotation for the Amazon ES Destination](https://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation) in the *Amazon Kinesis Data Firehose Developer Guide* .
	IndexRotationPeriod DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriodPtrInput `pulumi:"indexRotationPeriod"`
	// The data processing configuration for the Kinesis Data Firehose delivery stream.
	ProcessingConfiguration DeliveryStreamProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The retry behavior when Kinesis Data Firehose is unable to deliver data to Amazon ES.
	RetryOptions DeliveryStreamElasticsearchRetryOptionsPtrInput `pulumi:"retryOptions"`
	// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Amazon ES Configuration API and for indexing documents. For more information, see [Controlling Access with Amazon Kinesis Data Firehose](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html) .
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The condition under which Kinesis Data Firehose delivers data to Amazon Simple Storage Service (Amazon S3). You can send Amazon S3 all documents (all data) or only the documents that Kinesis Data Firehose could not deliver to the Amazon ES destination. For more information and valid values, see the `S3BackupMode` content for the [ElasticsearchDestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ElasticsearchDestinationConfiguration.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	S3BackupMode DeliveryStreamElasticsearchDestinationConfigurationS3BackupModePtrInput `pulumi:"s3BackupMode"`
	// The S3 bucket where Kinesis Data Firehose backs up incoming data.
	S3Configuration DeliveryStreamS3DestinationConfigurationInput `pulumi:"s3Configuration"`
	// The Elasticsearch type name that Amazon ES adds to documents when indexing data.
	TypeName pulumi.StringPtrInput `pulumi:"typeName"`
	// The details of the VPC of the Amazon ES destination.
	VpcConfiguration DeliveryStreamVpcConfigurationPtrInput `pulumi:"vpcConfiguration"`
}

func (DeliveryStreamElasticsearchDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamElasticsearchDestinationConfiguration)(nil)).Elem()
}

func (i DeliveryStreamElasticsearchDestinationConfigurationArgs) ToDeliveryStreamElasticsearchDestinationConfigurationOutput() DeliveryStreamElasticsearchDestinationConfigurationOutput {
	return i.ToDeliveryStreamElasticsearchDestinationConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamElasticsearchDestinationConfigurationArgs) ToDeliveryStreamElasticsearchDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamElasticsearchDestinationConfigurationOutput)
}

func (i DeliveryStreamElasticsearchDestinationConfigurationArgs) ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutput() DeliveryStreamElasticsearchDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamElasticsearchDestinationConfigurationArgs) ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamElasticsearchDestinationConfigurationOutput).ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamElasticsearchDestinationConfigurationPtrInput is an input type that accepts DeliveryStreamElasticsearchDestinationConfigurationArgs, DeliveryStreamElasticsearchDestinationConfigurationPtr and DeliveryStreamElasticsearchDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamElasticsearchDestinationConfigurationPtrInput` via:
//
//	        DeliveryStreamElasticsearchDestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamElasticsearchDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutput() DeliveryStreamElasticsearchDestinationConfigurationPtrOutput
	ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutputWithContext(context.Context) DeliveryStreamElasticsearchDestinationConfigurationPtrOutput
}

type deliveryStreamElasticsearchDestinationConfigurationPtrType DeliveryStreamElasticsearchDestinationConfigurationArgs

func DeliveryStreamElasticsearchDestinationConfigurationPtr(v *DeliveryStreamElasticsearchDestinationConfigurationArgs) DeliveryStreamElasticsearchDestinationConfigurationPtrInput {
	return (*deliveryStreamElasticsearchDestinationConfigurationPtrType)(v)
}

func (*deliveryStreamElasticsearchDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamElasticsearchDestinationConfiguration)(nil)).Elem()
}

func (i *deliveryStreamElasticsearchDestinationConfigurationPtrType) ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutput() DeliveryStreamElasticsearchDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamElasticsearchDestinationConfigurationPtrType) ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamElasticsearchDestinationConfigurationPtrOutput)
}

type DeliveryStreamElasticsearchDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamElasticsearchDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamElasticsearchDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) ToDeliveryStreamElasticsearchDestinationConfigurationOutput() DeliveryStreamElasticsearchDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) ToDeliveryStreamElasticsearchDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutput() DeliveryStreamElasticsearchDestinationConfigurationPtrOutput {
	return o.ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamElasticsearchDestinationConfiguration {
		return &v
	}).(DeliveryStreamElasticsearchDestinationConfigurationPtrOutput)
}

// Configures how Kinesis Data Firehose buffers incoming data while delivering it to the Amazon ES domain.
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) BufferingHints() DeliveryStreamElasticsearchBufferingHintsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamElasticsearchBufferingHints {
		return v.BufferingHints
	}).(DeliveryStreamElasticsearchBufferingHintsPtrOutput)
}

// The Amazon CloudWatch Logs logging options for the delivery stream.
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The endpoint to use when communicating with the cluster. Specify either this `ClusterEndpoint` or the `DomainARN` field.
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) ClusterEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) *string { return v.ClusterEndpoint }).(pulumi.StringPtrOutput)
}

// Indicates the method for setting up document ID. The supported methods are Firehose generated document ID and OpenSearch Service generated document ID.
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) DocumentIdOptions() DeliveryStreamDocumentIdOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamDocumentIdOptions {
		return v.DocumentIdOptions
	}).(DeliveryStreamDocumentIdOptionsPtrOutput)
}

// The ARN of the Amazon ES domain. The IAM role must have permissions for `DescribeElasticsearchDomain` , `DescribeElasticsearchDomains` , and `DescribeElasticsearchDomainConfig` after assuming the role specified in *RoleARN* .
//
// Specify either `ClusterEndpoint` or `DomainARN` .
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) DomainArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) *string { return v.DomainArn }).(pulumi.StringPtrOutput)
}

// The name of the Elasticsearch index to which Kinesis Data Firehose adds data for indexing.
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) IndexName() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) string { return v.IndexName }).(pulumi.StringOutput)
}

// The frequency of Elasticsearch index rotation. If you enable index rotation, Kinesis Data Firehose appends a portion of the UTC arrival timestamp to the specified index name, and rotates the appended timestamp accordingly. For more information, see [Index Rotation for the Amazon ES Destination](https://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation) in the *Amazon Kinesis Data Firehose Developer Guide* .
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) IndexRotationPeriod() DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriodPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod {
		return v.IndexRotationPeriod
	}).(DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriodPtrOutput)
}

// The data processing configuration for the Kinesis Data Firehose delivery stream.
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The retry behavior when Kinesis Data Firehose is unable to deliver data to Amazon ES.
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) RetryOptions() DeliveryStreamElasticsearchRetryOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamElasticsearchRetryOptions {
		return v.RetryOptions
	}).(DeliveryStreamElasticsearchRetryOptionsPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Amazon ES Configuration API and for indexing documents. For more information, see [Controlling Access with Amazon Kinesis Data Firehose](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html) .
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The condition under which Kinesis Data Firehose delivers data to Amazon Simple Storage Service (Amazon S3). You can send Amazon S3 all documents (all data) or only the documents that Kinesis Data Firehose could not deliver to the Amazon ES destination. For more information and valid values, see the `S3BackupMode` content for the [ElasticsearchDestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ElasticsearchDestinationConfiguration.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) S3BackupMode() DeliveryStreamElasticsearchDestinationConfigurationS3BackupModePtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode {
		return v.S3BackupMode
	}).(DeliveryStreamElasticsearchDestinationConfigurationS3BackupModePtrOutput)
}

// The S3 bucket where Kinesis Data Firehose backs up incoming data.
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) DeliveryStreamS3DestinationConfiguration {
		return v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationOutput)
}

// The Elasticsearch type name that Amazon ES adds to documents when indexing data.
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) *string { return v.TypeName }).(pulumi.StringPtrOutput)
}

// The details of the VPC of the Amazon ES destination.
func (o DeliveryStreamElasticsearchDestinationConfigurationOutput) VpcConfiguration() DeliveryStreamVpcConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamVpcConfiguration {
		return v.VpcConfiguration
	}).(DeliveryStreamVpcConfigurationPtrOutput)
}

type DeliveryStreamElasticsearchDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamElasticsearchDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutput() DeliveryStreamElasticsearchDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) ToDeliveryStreamElasticsearchDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) Elem() DeliveryStreamElasticsearchDestinationConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) DeliveryStreamElasticsearchDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamElasticsearchDestinationConfiguration
		return ret
	}).(DeliveryStreamElasticsearchDestinationConfigurationOutput)
}

// Configures how Kinesis Data Firehose buffers incoming data while delivering it to the Amazon ES domain.
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) BufferingHints() DeliveryStreamElasticsearchBufferingHintsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamElasticsearchBufferingHints {
		if v == nil {
			return nil
		}
		return v.BufferingHints
	}).(DeliveryStreamElasticsearchBufferingHintsPtrOutput)
}

// The Amazon CloudWatch Logs logging options for the delivery stream.
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The endpoint to use when communicating with the cluster. Specify either this `ClusterEndpoint` or the `DomainARN` field.
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) ClusterEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ClusterEndpoint
	}).(pulumi.StringPtrOutput)
}

// Indicates the method for setting up document ID. The supported methods are Firehose generated document ID and OpenSearch Service generated document ID.
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) DocumentIdOptions() DeliveryStreamDocumentIdOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamDocumentIdOptions {
		if v == nil {
			return nil
		}
		return v.DocumentIdOptions
	}).(DeliveryStreamDocumentIdOptionsPtrOutput)
}

// The ARN of the Amazon ES domain. The IAM role must have permissions for `DescribeElasticsearchDomain` , `DescribeElasticsearchDomains` , and `DescribeElasticsearchDomainConfig` after assuming the role specified in *RoleARN* .
//
// Specify either `ClusterEndpoint` or `DomainARN` .
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) DomainArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DomainArn
	}).(pulumi.StringPtrOutput)
}

// The name of the Elasticsearch index to which Kinesis Data Firehose adds data for indexing.
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) IndexName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.IndexName
	}).(pulumi.StringPtrOutput)
}

// The frequency of Elasticsearch index rotation. If you enable index rotation, Kinesis Data Firehose appends a portion of the UTC arrival timestamp to the specified index name, and rotates the appended timestamp accordingly. For more information, see [Index Rotation for the Amazon ES Destination](https://docs.aws.amazon.com/firehose/latest/dev/basic-deliver.html#es-index-rotation) in the *Amazon Kinesis Data Firehose Developer Guide* .
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) IndexRotationPeriod() DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriodPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriod {
		if v == nil {
			return nil
		}
		return v.IndexRotationPeriod
	}).(DeliveryStreamElasticsearchDestinationConfigurationIndexRotationPeriodPtrOutput)
}

// The data processing configuration for the Kinesis Data Firehose delivery stream.
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The retry behavior when Kinesis Data Firehose is unable to deliver data to Amazon ES.
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) RetryOptions() DeliveryStreamElasticsearchRetryOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamElasticsearchRetryOptions {
		if v == nil {
			return nil
		}
		return v.RetryOptions
	}).(DeliveryStreamElasticsearchRetryOptionsPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role to be assumed by Kinesis Data Firehose for calling the Amazon ES Configuration API and for indexing documents. For more information, see [Controlling Access with Amazon Kinesis Data Firehose](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html) .
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The condition under which Kinesis Data Firehose delivers data to Amazon Simple Storage Service (Amazon S3). You can send Amazon S3 all documents (all data) or only the documents that Kinesis Data Firehose could not deliver to the Amazon ES destination. For more information and valid values, see the `S3BackupMode` content for the [ElasticsearchDestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ElasticsearchDestinationConfiguration.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) S3BackupMode() DeliveryStreamElasticsearchDestinationConfigurationS3BackupModePtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamElasticsearchDestinationConfigurationS3BackupMode {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(DeliveryStreamElasticsearchDestinationConfigurationS3BackupModePtrOutput)
}

// The S3 bucket where Kinesis Data Firehose backs up incoming data.
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamS3DestinationConfiguration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// The Elasticsearch type name that Amazon ES adds to documents when indexing data.
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) TypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TypeName
	}).(pulumi.StringPtrOutput)
}

// The details of the VPC of the Amazon ES destination.
func (o DeliveryStreamElasticsearchDestinationConfigurationPtrOutput) VpcConfiguration() DeliveryStreamVpcConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchDestinationConfiguration) *DeliveryStreamVpcConfiguration {
		if v == nil {
			return nil
		}
		return v.VpcConfiguration
	}).(DeliveryStreamVpcConfigurationPtrOutput)
}

type DeliveryStreamElasticsearchRetryOptions struct {
	// After an initial failure to deliver to Amazon ES, the total amount of time during which Kinesis Data Firehose re-attempts delivery (including the first attempt). If Kinesis Data Firehose can't deliver the data within the specified time, it writes the data to the backup S3 bucket. For valid values, see the `DurationInSeconds` content for the [ElasticsearchRetryOptions](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ElasticsearchRetryOptions.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	DurationInSeconds *int `pulumi:"durationInSeconds"`
}

// DeliveryStreamElasticsearchRetryOptionsInput is an input type that accepts DeliveryStreamElasticsearchRetryOptionsArgs and DeliveryStreamElasticsearchRetryOptionsOutput values.
// You can construct a concrete instance of `DeliveryStreamElasticsearchRetryOptionsInput` via:
//
//	DeliveryStreamElasticsearchRetryOptionsArgs{...}
type DeliveryStreamElasticsearchRetryOptionsInput interface {
	pulumi.Input

	ToDeliveryStreamElasticsearchRetryOptionsOutput() DeliveryStreamElasticsearchRetryOptionsOutput
	ToDeliveryStreamElasticsearchRetryOptionsOutputWithContext(context.Context) DeliveryStreamElasticsearchRetryOptionsOutput
}

type DeliveryStreamElasticsearchRetryOptionsArgs struct {
	// After an initial failure to deliver to Amazon ES, the total amount of time during which Kinesis Data Firehose re-attempts delivery (including the first attempt). If Kinesis Data Firehose can't deliver the data within the specified time, it writes the data to the backup S3 bucket. For valid values, see the `DurationInSeconds` content for the [ElasticsearchRetryOptions](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ElasticsearchRetryOptions.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	DurationInSeconds pulumi.IntPtrInput `pulumi:"durationInSeconds"`
}

func (DeliveryStreamElasticsearchRetryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamElasticsearchRetryOptions)(nil)).Elem()
}

func (i DeliveryStreamElasticsearchRetryOptionsArgs) ToDeliveryStreamElasticsearchRetryOptionsOutput() DeliveryStreamElasticsearchRetryOptionsOutput {
	return i.ToDeliveryStreamElasticsearchRetryOptionsOutputWithContext(context.Background())
}

func (i DeliveryStreamElasticsearchRetryOptionsArgs) ToDeliveryStreamElasticsearchRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchRetryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamElasticsearchRetryOptionsOutput)
}

func (i DeliveryStreamElasticsearchRetryOptionsArgs) ToDeliveryStreamElasticsearchRetryOptionsPtrOutput() DeliveryStreamElasticsearchRetryOptionsPtrOutput {
	return i.ToDeliveryStreamElasticsearchRetryOptionsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamElasticsearchRetryOptionsArgs) ToDeliveryStreamElasticsearchRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamElasticsearchRetryOptionsOutput).ToDeliveryStreamElasticsearchRetryOptionsPtrOutputWithContext(ctx)
}

// DeliveryStreamElasticsearchRetryOptionsPtrInput is an input type that accepts DeliveryStreamElasticsearchRetryOptionsArgs, DeliveryStreamElasticsearchRetryOptionsPtr and DeliveryStreamElasticsearchRetryOptionsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamElasticsearchRetryOptionsPtrInput` via:
//
//	        DeliveryStreamElasticsearchRetryOptionsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamElasticsearchRetryOptionsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamElasticsearchRetryOptionsPtrOutput() DeliveryStreamElasticsearchRetryOptionsPtrOutput
	ToDeliveryStreamElasticsearchRetryOptionsPtrOutputWithContext(context.Context) DeliveryStreamElasticsearchRetryOptionsPtrOutput
}

type deliveryStreamElasticsearchRetryOptionsPtrType DeliveryStreamElasticsearchRetryOptionsArgs

func DeliveryStreamElasticsearchRetryOptionsPtr(v *DeliveryStreamElasticsearchRetryOptionsArgs) DeliveryStreamElasticsearchRetryOptionsPtrInput {
	return (*deliveryStreamElasticsearchRetryOptionsPtrType)(v)
}

func (*deliveryStreamElasticsearchRetryOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamElasticsearchRetryOptions)(nil)).Elem()
}

func (i *deliveryStreamElasticsearchRetryOptionsPtrType) ToDeliveryStreamElasticsearchRetryOptionsPtrOutput() DeliveryStreamElasticsearchRetryOptionsPtrOutput {
	return i.ToDeliveryStreamElasticsearchRetryOptionsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamElasticsearchRetryOptionsPtrType) ToDeliveryStreamElasticsearchRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamElasticsearchRetryOptionsPtrOutput)
}

type DeliveryStreamElasticsearchRetryOptionsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamElasticsearchRetryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamElasticsearchRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamElasticsearchRetryOptionsOutput) ToDeliveryStreamElasticsearchRetryOptionsOutput() DeliveryStreamElasticsearchRetryOptionsOutput {
	return o
}

func (o DeliveryStreamElasticsearchRetryOptionsOutput) ToDeliveryStreamElasticsearchRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchRetryOptionsOutput {
	return o
}

func (o DeliveryStreamElasticsearchRetryOptionsOutput) ToDeliveryStreamElasticsearchRetryOptionsPtrOutput() DeliveryStreamElasticsearchRetryOptionsPtrOutput {
	return o.ToDeliveryStreamElasticsearchRetryOptionsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamElasticsearchRetryOptionsOutput) ToDeliveryStreamElasticsearchRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchRetryOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamElasticsearchRetryOptions) *DeliveryStreamElasticsearchRetryOptions {
		return &v
	}).(DeliveryStreamElasticsearchRetryOptionsPtrOutput)
}

// After an initial failure to deliver to Amazon ES, the total amount of time during which Kinesis Data Firehose re-attempts delivery (including the first attempt). If Kinesis Data Firehose can't deliver the data within the specified time, it writes the data to the backup S3 bucket. For valid values, see the `DurationInSeconds` content for the [ElasticsearchRetryOptions](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ElasticsearchRetryOptions.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamElasticsearchRetryOptionsOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamElasticsearchRetryOptions) *int { return v.DurationInSeconds }).(pulumi.IntPtrOutput)
}

type DeliveryStreamElasticsearchRetryOptionsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamElasticsearchRetryOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamElasticsearchRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamElasticsearchRetryOptionsPtrOutput) ToDeliveryStreamElasticsearchRetryOptionsPtrOutput() DeliveryStreamElasticsearchRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamElasticsearchRetryOptionsPtrOutput) ToDeliveryStreamElasticsearchRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamElasticsearchRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamElasticsearchRetryOptionsPtrOutput) Elem() DeliveryStreamElasticsearchRetryOptionsOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchRetryOptions) DeliveryStreamElasticsearchRetryOptions {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamElasticsearchRetryOptions
		return ret
	}).(DeliveryStreamElasticsearchRetryOptionsOutput)
}

// After an initial failure to deliver to Amazon ES, the total amount of time during which Kinesis Data Firehose re-attempts delivery (including the first attempt). If Kinesis Data Firehose can't deliver the data within the specified time, it writes the data to the backup S3 bucket. For valid values, see the `DurationInSeconds` content for the [ElasticsearchRetryOptions](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ElasticsearchRetryOptions.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamElasticsearchRetryOptionsPtrOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamElasticsearchRetryOptions) *int {
		if v == nil {
			return nil
		}
		return v.DurationInSeconds
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamEncryptionConfiguration struct {
	// The AWS Key Management Service ( AWS KMS) encryption key that Amazon S3 uses to encrypt your data.
	KmsEncryptionConfig *DeliveryStreamKmsEncryptionConfig `pulumi:"kmsEncryptionConfig"`
	// Disables encryption. For valid values, see the `NoEncryptionConfig` content for the [EncryptionConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_EncryptionConfiguration.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	NoEncryptionConfig *DeliveryStreamEncryptionConfigurationNoEncryptionConfig `pulumi:"noEncryptionConfig"`
}

// DeliveryStreamEncryptionConfigurationInput is an input type that accepts DeliveryStreamEncryptionConfigurationArgs and DeliveryStreamEncryptionConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamEncryptionConfigurationInput` via:
//
//	DeliveryStreamEncryptionConfigurationArgs{...}
type DeliveryStreamEncryptionConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamEncryptionConfigurationOutput() DeliveryStreamEncryptionConfigurationOutput
	ToDeliveryStreamEncryptionConfigurationOutputWithContext(context.Context) DeliveryStreamEncryptionConfigurationOutput
}

type DeliveryStreamEncryptionConfigurationArgs struct {
	// The AWS Key Management Service ( AWS KMS) encryption key that Amazon S3 uses to encrypt your data.
	KmsEncryptionConfig DeliveryStreamKmsEncryptionConfigPtrInput `pulumi:"kmsEncryptionConfig"`
	// Disables encryption. For valid values, see the `NoEncryptionConfig` content for the [EncryptionConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_EncryptionConfiguration.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	NoEncryptionConfig DeliveryStreamEncryptionConfigurationNoEncryptionConfigPtrInput `pulumi:"noEncryptionConfig"`
}

func (DeliveryStreamEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamEncryptionConfiguration)(nil)).Elem()
}

func (i DeliveryStreamEncryptionConfigurationArgs) ToDeliveryStreamEncryptionConfigurationOutput() DeliveryStreamEncryptionConfigurationOutput {
	return i.ToDeliveryStreamEncryptionConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamEncryptionConfigurationArgs) ToDeliveryStreamEncryptionConfigurationOutputWithContext(ctx context.Context) DeliveryStreamEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamEncryptionConfigurationOutput)
}

func (i DeliveryStreamEncryptionConfigurationArgs) ToDeliveryStreamEncryptionConfigurationPtrOutput() DeliveryStreamEncryptionConfigurationPtrOutput {
	return i.ToDeliveryStreamEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamEncryptionConfigurationArgs) ToDeliveryStreamEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamEncryptionConfigurationOutput).ToDeliveryStreamEncryptionConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamEncryptionConfigurationPtrInput is an input type that accepts DeliveryStreamEncryptionConfigurationArgs, DeliveryStreamEncryptionConfigurationPtr and DeliveryStreamEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamEncryptionConfigurationPtrInput` via:
//
//	        DeliveryStreamEncryptionConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamEncryptionConfigurationPtrOutput() DeliveryStreamEncryptionConfigurationPtrOutput
	ToDeliveryStreamEncryptionConfigurationPtrOutputWithContext(context.Context) DeliveryStreamEncryptionConfigurationPtrOutput
}

type deliveryStreamEncryptionConfigurationPtrType DeliveryStreamEncryptionConfigurationArgs

func DeliveryStreamEncryptionConfigurationPtr(v *DeliveryStreamEncryptionConfigurationArgs) DeliveryStreamEncryptionConfigurationPtrInput {
	return (*deliveryStreamEncryptionConfigurationPtrType)(v)
}

func (*deliveryStreamEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamEncryptionConfiguration)(nil)).Elem()
}

func (i *deliveryStreamEncryptionConfigurationPtrType) ToDeliveryStreamEncryptionConfigurationPtrOutput() DeliveryStreamEncryptionConfigurationPtrOutput {
	return i.ToDeliveryStreamEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamEncryptionConfigurationPtrType) ToDeliveryStreamEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamEncryptionConfigurationPtrOutput)
}

type DeliveryStreamEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamEncryptionConfiguration)(nil)).Elem()
}

func (o DeliveryStreamEncryptionConfigurationOutput) ToDeliveryStreamEncryptionConfigurationOutput() DeliveryStreamEncryptionConfigurationOutput {
	return o
}

func (o DeliveryStreamEncryptionConfigurationOutput) ToDeliveryStreamEncryptionConfigurationOutputWithContext(ctx context.Context) DeliveryStreamEncryptionConfigurationOutput {
	return o
}

func (o DeliveryStreamEncryptionConfigurationOutput) ToDeliveryStreamEncryptionConfigurationPtrOutput() DeliveryStreamEncryptionConfigurationPtrOutput {
	return o.ToDeliveryStreamEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamEncryptionConfigurationOutput) ToDeliveryStreamEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamEncryptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamEncryptionConfiguration) *DeliveryStreamEncryptionConfiguration {
		return &v
	}).(DeliveryStreamEncryptionConfigurationPtrOutput)
}

// The AWS Key Management Service ( AWS KMS) encryption key that Amazon S3 uses to encrypt your data.
func (o DeliveryStreamEncryptionConfigurationOutput) KmsEncryptionConfig() DeliveryStreamKmsEncryptionConfigPtrOutput {
	return o.ApplyT(func(v DeliveryStreamEncryptionConfiguration) *DeliveryStreamKmsEncryptionConfig {
		return v.KmsEncryptionConfig
	}).(DeliveryStreamKmsEncryptionConfigPtrOutput)
}

// Disables encryption. For valid values, see the `NoEncryptionConfig` content for the [EncryptionConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_EncryptionConfiguration.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamEncryptionConfigurationOutput) NoEncryptionConfig() DeliveryStreamEncryptionConfigurationNoEncryptionConfigPtrOutput {
	return o.ApplyT(func(v DeliveryStreamEncryptionConfiguration) *DeliveryStreamEncryptionConfigurationNoEncryptionConfig {
		return v.NoEncryptionConfig
	}).(DeliveryStreamEncryptionConfigurationNoEncryptionConfigPtrOutput)
}

type DeliveryStreamEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamEncryptionConfiguration)(nil)).Elem()
}

func (o DeliveryStreamEncryptionConfigurationPtrOutput) ToDeliveryStreamEncryptionConfigurationPtrOutput() DeliveryStreamEncryptionConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamEncryptionConfigurationPtrOutput) ToDeliveryStreamEncryptionConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamEncryptionConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamEncryptionConfigurationPtrOutput) Elem() DeliveryStreamEncryptionConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamEncryptionConfiguration) DeliveryStreamEncryptionConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamEncryptionConfiguration
		return ret
	}).(DeliveryStreamEncryptionConfigurationOutput)
}

// The AWS Key Management Service ( AWS KMS) encryption key that Amazon S3 uses to encrypt your data.
func (o DeliveryStreamEncryptionConfigurationPtrOutput) KmsEncryptionConfig() DeliveryStreamKmsEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamEncryptionConfiguration) *DeliveryStreamKmsEncryptionConfig {
		if v == nil {
			return nil
		}
		return v.KmsEncryptionConfig
	}).(DeliveryStreamKmsEncryptionConfigPtrOutput)
}

// Disables encryption. For valid values, see the `NoEncryptionConfig` content for the [EncryptionConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_EncryptionConfiguration.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamEncryptionConfigurationPtrOutput) NoEncryptionConfig() DeliveryStreamEncryptionConfigurationNoEncryptionConfigPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamEncryptionConfiguration) *DeliveryStreamEncryptionConfigurationNoEncryptionConfig {
		if v == nil {
			return nil
		}
		return v.NoEncryptionConfig
	}).(DeliveryStreamEncryptionConfigurationNoEncryptionConfigPtrOutput)
}

type DeliveryStreamEncryptionConfigurationInputType struct {
	// If you set `KeyType` to `CUSTOMER_MANAGED_CMK` , you must specify the Amazon Resource Name (ARN) of the CMK. If you set `KeyType` to `AWS _OWNED_CMK` , Firehose uses a service-account CMK.
	KeyArn *string `pulumi:"keyArn"`
	// Indicates the type of customer master key (CMK) to use for encryption. The default setting is `AWS_OWNED_CMK` . For more information about CMKs, see [Customer Master Keys (CMKs)](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys) .
	//
	// You can use a CMK of type CUSTOMER_MANAGED_CMK to encrypt up to 500 delivery streams.
	//
	// > To encrypt your delivery stream, use symmetric CMKs. Kinesis Data Firehose doesn't support asymmetric CMKs. For information about symmetric and asymmetric CMKs, see [About Symmetric and Asymmetric CMKs](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-concepts.html) in the AWS Key Management Service developer guide.
	KeyType DeliveryStreamEncryptionConfigurationInputKeyType `pulumi:"keyType"`
}

// DeliveryStreamEncryptionConfigurationInputTypeInput is an input type that accepts DeliveryStreamEncryptionConfigurationInputTypeArgs and DeliveryStreamEncryptionConfigurationInputTypeOutput values.
// You can construct a concrete instance of `DeliveryStreamEncryptionConfigurationInputTypeInput` via:
//
//	DeliveryStreamEncryptionConfigurationInputTypeArgs{...}
type DeliveryStreamEncryptionConfigurationInputTypeInput interface {
	pulumi.Input

	ToDeliveryStreamEncryptionConfigurationInputTypeOutput() DeliveryStreamEncryptionConfigurationInputTypeOutput
	ToDeliveryStreamEncryptionConfigurationInputTypeOutputWithContext(context.Context) DeliveryStreamEncryptionConfigurationInputTypeOutput
}

type DeliveryStreamEncryptionConfigurationInputTypeArgs struct {
	// If you set `KeyType` to `CUSTOMER_MANAGED_CMK` , you must specify the Amazon Resource Name (ARN) of the CMK. If you set `KeyType` to `AWS _OWNED_CMK` , Firehose uses a service-account CMK.
	KeyArn pulumi.StringPtrInput `pulumi:"keyArn"`
	// Indicates the type of customer master key (CMK) to use for encryption. The default setting is `AWS_OWNED_CMK` . For more information about CMKs, see [Customer Master Keys (CMKs)](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys) .
	//
	// You can use a CMK of type CUSTOMER_MANAGED_CMK to encrypt up to 500 delivery streams.
	//
	// > To encrypt your delivery stream, use symmetric CMKs. Kinesis Data Firehose doesn't support asymmetric CMKs. For information about symmetric and asymmetric CMKs, see [About Symmetric and Asymmetric CMKs](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-concepts.html) in the AWS Key Management Service developer guide.
	KeyType DeliveryStreamEncryptionConfigurationInputKeyTypeInput `pulumi:"keyType"`
}

func (DeliveryStreamEncryptionConfigurationInputTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamEncryptionConfigurationInputType)(nil)).Elem()
}

func (i DeliveryStreamEncryptionConfigurationInputTypeArgs) ToDeliveryStreamEncryptionConfigurationInputTypeOutput() DeliveryStreamEncryptionConfigurationInputTypeOutput {
	return i.ToDeliveryStreamEncryptionConfigurationInputTypeOutputWithContext(context.Background())
}

func (i DeliveryStreamEncryptionConfigurationInputTypeArgs) ToDeliveryStreamEncryptionConfigurationInputTypeOutputWithContext(ctx context.Context) DeliveryStreamEncryptionConfigurationInputTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamEncryptionConfigurationInputTypeOutput)
}

func (i DeliveryStreamEncryptionConfigurationInputTypeArgs) ToDeliveryStreamEncryptionConfigurationInputTypePtrOutput() DeliveryStreamEncryptionConfigurationInputTypePtrOutput {
	return i.ToDeliveryStreamEncryptionConfigurationInputTypePtrOutputWithContext(context.Background())
}

func (i DeliveryStreamEncryptionConfigurationInputTypeArgs) ToDeliveryStreamEncryptionConfigurationInputTypePtrOutputWithContext(ctx context.Context) DeliveryStreamEncryptionConfigurationInputTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamEncryptionConfigurationInputTypeOutput).ToDeliveryStreamEncryptionConfigurationInputTypePtrOutputWithContext(ctx)
}

// DeliveryStreamEncryptionConfigurationInputTypePtrInput is an input type that accepts DeliveryStreamEncryptionConfigurationInputTypeArgs, DeliveryStreamEncryptionConfigurationInputTypePtr and DeliveryStreamEncryptionConfigurationInputTypePtrOutput values.
// You can construct a concrete instance of `DeliveryStreamEncryptionConfigurationInputTypePtrInput` via:
//
//	        DeliveryStreamEncryptionConfigurationInputTypeArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamEncryptionConfigurationInputTypePtrInput interface {
	pulumi.Input

	ToDeliveryStreamEncryptionConfigurationInputTypePtrOutput() DeliveryStreamEncryptionConfigurationInputTypePtrOutput
	ToDeliveryStreamEncryptionConfigurationInputTypePtrOutputWithContext(context.Context) DeliveryStreamEncryptionConfigurationInputTypePtrOutput
}

type deliveryStreamEncryptionConfigurationInputTypePtrType DeliveryStreamEncryptionConfigurationInputTypeArgs

func DeliveryStreamEncryptionConfigurationInputTypePtr(v *DeliveryStreamEncryptionConfigurationInputTypeArgs) DeliveryStreamEncryptionConfigurationInputTypePtrInput {
	return (*deliveryStreamEncryptionConfigurationInputTypePtrType)(v)
}

func (*deliveryStreamEncryptionConfigurationInputTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamEncryptionConfigurationInputType)(nil)).Elem()
}

func (i *deliveryStreamEncryptionConfigurationInputTypePtrType) ToDeliveryStreamEncryptionConfigurationInputTypePtrOutput() DeliveryStreamEncryptionConfigurationInputTypePtrOutput {
	return i.ToDeliveryStreamEncryptionConfigurationInputTypePtrOutputWithContext(context.Background())
}

func (i *deliveryStreamEncryptionConfigurationInputTypePtrType) ToDeliveryStreamEncryptionConfigurationInputTypePtrOutputWithContext(ctx context.Context) DeliveryStreamEncryptionConfigurationInputTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamEncryptionConfigurationInputTypePtrOutput)
}

type DeliveryStreamEncryptionConfigurationInputTypeOutput struct{ *pulumi.OutputState }

func (DeliveryStreamEncryptionConfigurationInputTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamEncryptionConfigurationInputType)(nil)).Elem()
}

func (o DeliveryStreamEncryptionConfigurationInputTypeOutput) ToDeliveryStreamEncryptionConfigurationInputTypeOutput() DeliveryStreamEncryptionConfigurationInputTypeOutput {
	return o
}

func (o DeliveryStreamEncryptionConfigurationInputTypeOutput) ToDeliveryStreamEncryptionConfigurationInputTypeOutputWithContext(ctx context.Context) DeliveryStreamEncryptionConfigurationInputTypeOutput {
	return o
}

func (o DeliveryStreamEncryptionConfigurationInputTypeOutput) ToDeliveryStreamEncryptionConfigurationInputTypePtrOutput() DeliveryStreamEncryptionConfigurationInputTypePtrOutput {
	return o.ToDeliveryStreamEncryptionConfigurationInputTypePtrOutputWithContext(context.Background())
}

func (o DeliveryStreamEncryptionConfigurationInputTypeOutput) ToDeliveryStreamEncryptionConfigurationInputTypePtrOutputWithContext(ctx context.Context) DeliveryStreamEncryptionConfigurationInputTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamEncryptionConfigurationInputType) *DeliveryStreamEncryptionConfigurationInputType {
		return &v
	}).(DeliveryStreamEncryptionConfigurationInputTypePtrOutput)
}

// If you set `KeyType` to `CUSTOMER_MANAGED_CMK` , you must specify the Amazon Resource Name (ARN) of the CMK. If you set `KeyType` to `AWS _OWNED_CMK` , Firehose uses a service-account CMK.
func (o DeliveryStreamEncryptionConfigurationInputTypeOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamEncryptionConfigurationInputType) *string { return v.KeyArn }).(pulumi.StringPtrOutput)
}

// Indicates the type of customer master key (CMK) to use for encryption. The default setting is `AWS_OWNED_CMK` . For more information about CMKs, see [Customer Master Keys (CMKs)](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys) .
//
// You can use a CMK of type CUSTOMER_MANAGED_CMK to encrypt up to 500 delivery streams.
//
// > To encrypt your delivery stream, use symmetric CMKs. Kinesis Data Firehose doesn't support asymmetric CMKs. For information about symmetric and asymmetric CMKs, see [About Symmetric and Asymmetric CMKs](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-concepts.html) in the AWS Key Management Service developer guide.
func (o DeliveryStreamEncryptionConfigurationInputTypeOutput) KeyType() DeliveryStreamEncryptionConfigurationInputKeyTypeOutput {
	return o.ApplyT(func(v DeliveryStreamEncryptionConfigurationInputType) DeliveryStreamEncryptionConfigurationInputKeyType {
		return v.KeyType
	}).(DeliveryStreamEncryptionConfigurationInputKeyTypeOutput)
}

type DeliveryStreamEncryptionConfigurationInputTypePtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamEncryptionConfigurationInputTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamEncryptionConfigurationInputType)(nil)).Elem()
}

func (o DeliveryStreamEncryptionConfigurationInputTypePtrOutput) ToDeliveryStreamEncryptionConfigurationInputTypePtrOutput() DeliveryStreamEncryptionConfigurationInputTypePtrOutput {
	return o
}

func (o DeliveryStreamEncryptionConfigurationInputTypePtrOutput) ToDeliveryStreamEncryptionConfigurationInputTypePtrOutputWithContext(ctx context.Context) DeliveryStreamEncryptionConfigurationInputTypePtrOutput {
	return o
}

func (o DeliveryStreamEncryptionConfigurationInputTypePtrOutput) Elem() DeliveryStreamEncryptionConfigurationInputTypeOutput {
	return o.ApplyT(func(v *DeliveryStreamEncryptionConfigurationInputType) DeliveryStreamEncryptionConfigurationInputType {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamEncryptionConfigurationInputType
		return ret
	}).(DeliveryStreamEncryptionConfigurationInputTypeOutput)
}

// If you set `KeyType` to `CUSTOMER_MANAGED_CMK` , you must specify the Amazon Resource Name (ARN) of the CMK. If you set `KeyType` to `AWS _OWNED_CMK` , Firehose uses a service-account CMK.
func (o DeliveryStreamEncryptionConfigurationInputTypePtrOutput) KeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamEncryptionConfigurationInputType) *string {
		if v == nil {
			return nil
		}
		return v.KeyArn
	}).(pulumi.StringPtrOutput)
}

// Indicates the type of customer master key (CMK) to use for encryption. The default setting is `AWS_OWNED_CMK` . For more information about CMKs, see [Customer Master Keys (CMKs)](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys) .
//
// You can use a CMK of type CUSTOMER_MANAGED_CMK to encrypt up to 500 delivery streams.
//
// > To encrypt your delivery stream, use symmetric CMKs. Kinesis Data Firehose doesn't support asymmetric CMKs. For information about symmetric and asymmetric CMKs, see [About Symmetric and Asymmetric CMKs](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-concepts.html) in the AWS Key Management Service developer guide.
func (o DeliveryStreamEncryptionConfigurationInputTypePtrOutput) KeyType() DeliveryStreamEncryptionConfigurationInputKeyTypePtrOutput {
	return o.ApplyT(func(v *DeliveryStreamEncryptionConfigurationInputType) *DeliveryStreamEncryptionConfigurationInputKeyType {
		if v == nil {
			return nil
		}
		return &v.KeyType
	}).(DeliveryStreamEncryptionConfigurationInputKeyTypePtrOutput)
}

type DeliveryStreamExtendedS3DestinationConfiguration struct {
	// The Amazon Resource Name (ARN) of the Amazon S3 bucket. For constraints, see [ExtendedS3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ExtendedS3DestinationConfiguration.html) in the *Amazon Kinesis Data Firehose API Reference* .
	BucketArn string `pulumi:"bucketArn"`
	// The buffering option.
	BufferingHints *DeliveryStreamBufferingHints `pulumi:"bufferingHints"`
	// The Amazon CloudWatch logging options for your delivery stream.
	CloudWatchLoggingOptions *DeliveryStreamCloudWatchLoggingOptions `pulumi:"cloudWatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED` .
	CompressionFormat *DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat `pulumi:"compressionFormat"`
	// The time zone you prefer. UTC is the default.
	CustomTimeZone *string `pulumi:"customTimeZone"`
	// The serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3.
	DataFormatConversionConfiguration *DeliveryStreamDataFormatConversionConfiguration `pulumi:"dataFormatConversionConfiguration"`
	// The configuration of the dynamic partitioning mechanism that creates targeted data sets from the streaming data by partitioning it based on partition keys.
	DynamicPartitioningConfiguration *DeliveryStreamDynamicPartitioningConfiguration `pulumi:"dynamicPartitioningConfiguration"`
	// The encryption configuration for the Kinesis Data Firehose delivery stream. The default value is `NoEncryption` .
	EncryptionConfiguration *DeliveryStreamEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing them to S3. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html) .
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// Specify a file extension. It will override the default file extension
	FileExtension *string `pulumi:"fileExtension"`
	// The `YYYY/MM/DD/HH` time format prefix is automatically used for delivered Amazon S3 files. For more information, see [ExtendedS3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ExtendedS3DestinationConfiguration.html) in the *Amazon Kinesis Data Firehose API Reference* .
	Prefix *string `pulumi:"prefix"`
	// The data processing configuration for the Kinesis Data Firehose delivery stream.
	ProcessingConfiguration *DeliveryStreamProcessingConfiguration `pulumi:"processingConfiguration"`
	// The Amazon Resource Name (ARN) of the AWS credentials. For constraints, see [ExtendedS3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ExtendedS3DestinationConfiguration.html) in the *Amazon Kinesis Data Firehose API Reference* .
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3.
	S3BackupConfiguration *DeliveryStreamS3DestinationConfiguration `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode. After you create a delivery stream, you can update it to enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update the delivery stream to disable it.
	S3BackupMode *DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode `pulumi:"s3BackupMode"`
}

// DeliveryStreamExtendedS3DestinationConfigurationInput is an input type that accepts DeliveryStreamExtendedS3DestinationConfigurationArgs and DeliveryStreamExtendedS3DestinationConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamExtendedS3DestinationConfigurationInput` via:
//
//	DeliveryStreamExtendedS3DestinationConfigurationArgs{...}
type DeliveryStreamExtendedS3DestinationConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamExtendedS3DestinationConfigurationOutput() DeliveryStreamExtendedS3DestinationConfigurationOutput
	ToDeliveryStreamExtendedS3DestinationConfigurationOutputWithContext(context.Context) DeliveryStreamExtendedS3DestinationConfigurationOutput
}

type DeliveryStreamExtendedS3DestinationConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the Amazon S3 bucket. For constraints, see [ExtendedS3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ExtendedS3DestinationConfiguration.html) in the *Amazon Kinesis Data Firehose API Reference* .
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// The buffering option.
	BufferingHints DeliveryStreamBufferingHintsPtrInput `pulumi:"bufferingHints"`
	// The Amazon CloudWatch logging options for your delivery stream.
	CloudWatchLoggingOptions DeliveryStreamCloudWatchLoggingOptionsPtrInput `pulumi:"cloudWatchLoggingOptions"`
	// The compression format. If no value is specified, the default is `UNCOMPRESSED` .
	CompressionFormat DeliveryStreamExtendedS3DestinationConfigurationCompressionFormatPtrInput `pulumi:"compressionFormat"`
	// The time zone you prefer. UTC is the default.
	CustomTimeZone pulumi.StringPtrInput `pulumi:"customTimeZone"`
	// The serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3.
	DataFormatConversionConfiguration DeliveryStreamDataFormatConversionConfigurationPtrInput `pulumi:"dataFormatConversionConfiguration"`
	// The configuration of the dynamic partitioning mechanism that creates targeted data sets from the streaming data by partitioning it based on partition keys.
	DynamicPartitioningConfiguration DeliveryStreamDynamicPartitioningConfigurationPtrInput `pulumi:"dynamicPartitioningConfiguration"`
	// The encryption configuration for the Kinesis Data Firehose delivery stream. The default value is `NoEncryption` .
	EncryptionConfiguration DeliveryStreamEncryptionConfigurationPtrInput `pulumi:"encryptionConfiguration"`
	// A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing them to S3. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html) .
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// Specify a file extension. It will override the default file extension
	FileExtension pulumi.StringPtrInput `pulumi:"fileExtension"`
	// The `YYYY/MM/DD/HH` time format prefix is automatically used for delivered Amazon S3 files. For more information, see [ExtendedS3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ExtendedS3DestinationConfiguration.html) in the *Amazon Kinesis Data Firehose API Reference* .
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The data processing configuration for the Kinesis Data Firehose delivery stream.
	ProcessingConfiguration DeliveryStreamProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The Amazon Resource Name (ARN) of the AWS credentials. For constraints, see [ExtendedS3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ExtendedS3DestinationConfiguration.html) in the *Amazon Kinesis Data Firehose API Reference* .
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3.
	S3BackupConfiguration DeliveryStreamS3DestinationConfigurationPtrInput `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode. After you create a delivery stream, you can update it to enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update the delivery stream to disable it.
	S3BackupMode DeliveryStreamExtendedS3DestinationConfigurationS3BackupModePtrInput `pulumi:"s3BackupMode"`
}

func (DeliveryStreamExtendedS3DestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamExtendedS3DestinationConfiguration)(nil)).Elem()
}

func (i DeliveryStreamExtendedS3DestinationConfigurationArgs) ToDeliveryStreamExtendedS3DestinationConfigurationOutput() DeliveryStreamExtendedS3DestinationConfigurationOutput {
	return i.ToDeliveryStreamExtendedS3DestinationConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamExtendedS3DestinationConfigurationArgs) ToDeliveryStreamExtendedS3DestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamExtendedS3DestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamExtendedS3DestinationConfigurationOutput)
}

func (i DeliveryStreamExtendedS3DestinationConfigurationArgs) ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutput() DeliveryStreamExtendedS3DestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamExtendedS3DestinationConfigurationArgs) ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamExtendedS3DestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamExtendedS3DestinationConfigurationOutput).ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamExtendedS3DestinationConfigurationPtrInput is an input type that accepts DeliveryStreamExtendedS3DestinationConfigurationArgs, DeliveryStreamExtendedS3DestinationConfigurationPtr and DeliveryStreamExtendedS3DestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamExtendedS3DestinationConfigurationPtrInput` via:
//
//	        DeliveryStreamExtendedS3DestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamExtendedS3DestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutput() DeliveryStreamExtendedS3DestinationConfigurationPtrOutput
	ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutputWithContext(context.Context) DeliveryStreamExtendedS3DestinationConfigurationPtrOutput
}

type deliveryStreamExtendedS3DestinationConfigurationPtrType DeliveryStreamExtendedS3DestinationConfigurationArgs

func DeliveryStreamExtendedS3DestinationConfigurationPtr(v *DeliveryStreamExtendedS3DestinationConfigurationArgs) DeliveryStreamExtendedS3DestinationConfigurationPtrInput {
	return (*deliveryStreamExtendedS3DestinationConfigurationPtrType)(v)
}

func (*deliveryStreamExtendedS3DestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamExtendedS3DestinationConfiguration)(nil)).Elem()
}

func (i *deliveryStreamExtendedS3DestinationConfigurationPtrType) ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutput() DeliveryStreamExtendedS3DestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamExtendedS3DestinationConfigurationPtrType) ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamExtendedS3DestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamExtendedS3DestinationConfigurationPtrOutput)
}

type DeliveryStreamExtendedS3DestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamExtendedS3DestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamExtendedS3DestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) ToDeliveryStreamExtendedS3DestinationConfigurationOutput() DeliveryStreamExtendedS3DestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) ToDeliveryStreamExtendedS3DestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamExtendedS3DestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutput() DeliveryStreamExtendedS3DestinationConfigurationPtrOutput {
	return o.ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamExtendedS3DestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamExtendedS3DestinationConfiguration {
		return &v
	}).(DeliveryStreamExtendedS3DestinationConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon S3 bucket. For constraints, see [ExtendedS3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ExtendedS3DestinationConfiguration.html) in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// The buffering option.
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) BufferingHints() DeliveryStreamBufferingHintsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamBufferingHints {
		return v.BufferingHints
	}).(DeliveryStreamBufferingHintsPtrOutput)
}

// The Amazon CloudWatch logging options for your delivery stream.
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED` .
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) CompressionFormat() DeliveryStreamExtendedS3DestinationConfigurationCompressionFormatPtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat {
		return v.CompressionFormat
	}).(DeliveryStreamExtendedS3DestinationConfigurationCompressionFormatPtrOutput)
}

// The time zone you prefer. UTC is the default.
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) CustomTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *string { return v.CustomTimeZone }).(pulumi.StringPtrOutput)
}

// The serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3.
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) DataFormatConversionConfiguration() DeliveryStreamDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamDataFormatConversionConfiguration {
		return v.DataFormatConversionConfiguration
	}).(DeliveryStreamDataFormatConversionConfigurationPtrOutput)
}

// The configuration of the dynamic partitioning mechanism that creates targeted data sets from the streaming data by partitioning it based on partition keys.
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) DynamicPartitioningConfiguration() DeliveryStreamDynamicPartitioningConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamDynamicPartitioningConfiguration {
		return v.DynamicPartitioningConfiguration
	}).(DeliveryStreamDynamicPartitioningConfigurationPtrOutput)
}

// The encryption configuration for the Kinesis Data Firehose delivery stream. The default value is `NoEncryption` .
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) EncryptionConfiguration() DeliveryStreamEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamEncryptionConfiguration {
		return v.EncryptionConfiguration
	}).(DeliveryStreamEncryptionConfigurationPtrOutput)
}

// A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing them to S3. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html) .
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// Specify a file extension. It will override the default file extension
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) FileExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *string { return v.FileExtension }).(pulumi.StringPtrOutput)
}

// The `YYYY/MM/DD/HH` time format prefix is automatically used for delivered Amazon S3 files. For more information, see [ExtendedS3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ExtendedS3DestinationConfiguration.html) in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The data processing configuration for the Kinesis Data Firehose delivery stream.
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the AWS credentials. For constraints, see [ExtendedS3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ExtendedS3DestinationConfiguration.html) in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3.
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) S3BackupConfiguration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamS3DestinationConfiguration {
		return v.S3BackupConfiguration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// The Amazon S3 backup mode. After you create a delivery stream, you can update it to enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update the delivery stream to disable it.
func (o DeliveryStreamExtendedS3DestinationConfigurationOutput) S3BackupMode() DeliveryStreamExtendedS3DestinationConfigurationS3BackupModePtrOutput {
	return o.ApplyT(func(v DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode {
		return v.S3BackupMode
	}).(DeliveryStreamExtendedS3DestinationConfigurationS3BackupModePtrOutput)
}

type DeliveryStreamExtendedS3DestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamExtendedS3DestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutput() DeliveryStreamExtendedS3DestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) ToDeliveryStreamExtendedS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamExtendedS3DestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) Elem() DeliveryStreamExtendedS3DestinationConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) DeliveryStreamExtendedS3DestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamExtendedS3DestinationConfiguration
		return ret
	}).(DeliveryStreamExtendedS3DestinationConfigurationOutput)
}

// The Amazon Resource Name (ARN) of the Amazon S3 bucket. For constraints, see [ExtendedS3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ExtendedS3DestinationConfiguration.html) in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// The buffering option.
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) BufferingHints() DeliveryStreamBufferingHintsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamBufferingHints {
		if v == nil {
			return nil
		}
		return v.BufferingHints
	}).(DeliveryStreamBufferingHintsPtrOutput)
}

// The Amazon CloudWatch logging options for your delivery stream.
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The compression format. If no value is specified, the default is `UNCOMPRESSED` .
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) CompressionFormat() DeliveryStreamExtendedS3DestinationConfigurationCompressionFormatPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamExtendedS3DestinationConfigurationCompressionFormat {
		if v == nil {
			return nil
		}
		return v.CompressionFormat
	}).(DeliveryStreamExtendedS3DestinationConfigurationCompressionFormatPtrOutput)
}

// The time zone you prefer. UTC is the default.
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) CustomTimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CustomTimeZone
	}).(pulumi.StringPtrOutput)
}

// The serializer, deserializer, and schema for converting data from the JSON format to the Parquet or ORC format before writing it to Amazon S3.
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) DataFormatConversionConfiguration() DeliveryStreamDataFormatConversionConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamDataFormatConversionConfiguration {
		if v == nil {
			return nil
		}
		return v.DataFormatConversionConfiguration
	}).(DeliveryStreamDataFormatConversionConfigurationPtrOutput)
}

// The configuration of the dynamic partitioning mechanism that creates targeted data sets from the streaming data by partitioning it based on partition keys.
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) DynamicPartitioningConfiguration() DeliveryStreamDynamicPartitioningConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamDynamicPartitioningConfiguration {
		if v == nil {
			return nil
		}
		return v.DynamicPartitioningConfiguration
	}).(DeliveryStreamDynamicPartitioningConfigurationPtrOutput)
}

// The encryption configuration for the Kinesis Data Firehose delivery stream. The default value is `NoEncryption` .
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) EncryptionConfiguration() DeliveryStreamEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamEncryptionConfiguration {
		if v == nil {
			return nil
		}
		return v.EncryptionConfiguration
	}).(DeliveryStreamEncryptionConfigurationPtrOutput)
}

// A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing them to S3. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html) .
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// Specify a file extension. It will override the default file extension
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) FileExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FileExtension
	}).(pulumi.StringPtrOutput)
}

// The `YYYY/MM/DD/HH` time format prefix is automatically used for delivered Amazon S3 files. For more information, see [ExtendedS3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ExtendedS3DestinationConfiguration.html) in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The data processing configuration for the Kinesis Data Firehose delivery stream.
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the AWS credentials. For constraints, see [ExtendedS3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_ExtendedS3DestinationConfiguration.html) in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The configuration for backup in Amazon S3.
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) S3BackupConfiguration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamS3DestinationConfiguration {
		if v == nil {
			return nil
		}
		return v.S3BackupConfiguration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// The Amazon S3 backup mode. After you create a delivery stream, you can update it to enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update the delivery stream to disable it.
func (o DeliveryStreamExtendedS3DestinationConfigurationPtrOutput) S3BackupMode() DeliveryStreamExtendedS3DestinationConfigurationS3BackupModePtrOutput {
	return o.ApplyT(func(v *DeliveryStreamExtendedS3DestinationConfiguration) *DeliveryStreamExtendedS3DestinationConfigurationS3BackupMode {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(DeliveryStreamExtendedS3DestinationConfigurationS3BackupModePtrOutput)
}

type DeliveryStreamHiveJsonSerDe struct {
	// Indicates how you want Firehose to parse the date and timestamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://docs.aws.amazon.com/https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html) . You can also use the special value `millis` to parse timestamps in epoch milliseconds. If you don't specify a format, Firehose uses `java.sql.Timestamp::valueOf` by default.
	TimestampFormats []string `pulumi:"timestampFormats"`
}

// DeliveryStreamHiveJsonSerDeInput is an input type that accepts DeliveryStreamHiveJsonSerDeArgs and DeliveryStreamHiveJsonSerDeOutput values.
// You can construct a concrete instance of `DeliveryStreamHiveJsonSerDeInput` via:
//
//	DeliveryStreamHiveJsonSerDeArgs{...}
type DeliveryStreamHiveJsonSerDeInput interface {
	pulumi.Input

	ToDeliveryStreamHiveJsonSerDeOutput() DeliveryStreamHiveJsonSerDeOutput
	ToDeliveryStreamHiveJsonSerDeOutputWithContext(context.Context) DeliveryStreamHiveJsonSerDeOutput
}

type DeliveryStreamHiveJsonSerDeArgs struct {
	// Indicates how you want Firehose to parse the date and timestamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://docs.aws.amazon.com/https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html) . You can also use the special value `millis` to parse timestamps in epoch milliseconds. If you don't specify a format, Firehose uses `java.sql.Timestamp::valueOf` by default.
	TimestampFormats pulumi.StringArrayInput `pulumi:"timestampFormats"`
}

func (DeliveryStreamHiveJsonSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamHiveJsonSerDe)(nil)).Elem()
}

func (i DeliveryStreamHiveJsonSerDeArgs) ToDeliveryStreamHiveJsonSerDeOutput() DeliveryStreamHiveJsonSerDeOutput {
	return i.ToDeliveryStreamHiveJsonSerDeOutputWithContext(context.Background())
}

func (i DeliveryStreamHiveJsonSerDeArgs) ToDeliveryStreamHiveJsonSerDeOutputWithContext(ctx context.Context) DeliveryStreamHiveJsonSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHiveJsonSerDeOutput)
}

func (i DeliveryStreamHiveJsonSerDeArgs) ToDeliveryStreamHiveJsonSerDePtrOutput() DeliveryStreamHiveJsonSerDePtrOutput {
	return i.ToDeliveryStreamHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (i DeliveryStreamHiveJsonSerDeArgs) ToDeliveryStreamHiveJsonSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamHiveJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHiveJsonSerDeOutput).ToDeliveryStreamHiveJsonSerDePtrOutputWithContext(ctx)
}

// DeliveryStreamHiveJsonSerDePtrInput is an input type that accepts DeliveryStreamHiveJsonSerDeArgs, DeliveryStreamHiveJsonSerDePtr and DeliveryStreamHiveJsonSerDePtrOutput values.
// You can construct a concrete instance of `DeliveryStreamHiveJsonSerDePtrInput` via:
//
//	        DeliveryStreamHiveJsonSerDeArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamHiveJsonSerDePtrInput interface {
	pulumi.Input

	ToDeliveryStreamHiveJsonSerDePtrOutput() DeliveryStreamHiveJsonSerDePtrOutput
	ToDeliveryStreamHiveJsonSerDePtrOutputWithContext(context.Context) DeliveryStreamHiveJsonSerDePtrOutput
}

type deliveryStreamHiveJsonSerDePtrType DeliveryStreamHiveJsonSerDeArgs

func DeliveryStreamHiveJsonSerDePtr(v *DeliveryStreamHiveJsonSerDeArgs) DeliveryStreamHiveJsonSerDePtrInput {
	return (*deliveryStreamHiveJsonSerDePtrType)(v)
}

func (*deliveryStreamHiveJsonSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamHiveJsonSerDe)(nil)).Elem()
}

func (i *deliveryStreamHiveJsonSerDePtrType) ToDeliveryStreamHiveJsonSerDePtrOutput() DeliveryStreamHiveJsonSerDePtrOutput {
	return i.ToDeliveryStreamHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (i *deliveryStreamHiveJsonSerDePtrType) ToDeliveryStreamHiveJsonSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamHiveJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHiveJsonSerDePtrOutput)
}

type DeliveryStreamHiveJsonSerDeOutput struct{ *pulumi.OutputState }

func (DeliveryStreamHiveJsonSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamHiveJsonSerDe)(nil)).Elem()
}

func (o DeliveryStreamHiveJsonSerDeOutput) ToDeliveryStreamHiveJsonSerDeOutput() DeliveryStreamHiveJsonSerDeOutput {
	return o
}

func (o DeliveryStreamHiveJsonSerDeOutput) ToDeliveryStreamHiveJsonSerDeOutputWithContext(ctx context.Context) DeliveryStreamHiveJsonSerDeOutput {
	return o
}

func (o DeliveryStreamHiveJsonSerDeOutput) ToDeliveryStreamHiveJsonSerDePtrOutput() DeliveryStreamHiveJsonSerDePtrOutput {
	return o.ToDeliveryStreamHiveJsonSerDePtrOutputWithContext(context.Background())
}

func (o DeliveryStreamHiveJsonSerDeOutput) ToDeliveryStreamHiveJsonSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamHiveJsonSerDePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamHiveJsonSerDe) *DeliveryStreamHiveJsonSerDe {
		return &v
	}).(DeliveryStreamHiveJsonSerDePtrOutput)
}

// Indicates how you want Firehose to parse the date and timestamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://docs.aws.amazon.com/https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html) . You can also use the special value `millis` to parse timestamps in epoch milliseconds. If you don't specify a format, Firehose uses `java.sql.Timestamp::valueOf` by default.
func (o DeliveryStreamHiveJsonSerDeOutput) TimestampFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeliveryStreamHiveJsonSerDe) []string { return v.TimestampFormats }).(pulumi.StringArrayOutput)
}

type DeliveryStreamHiveJsonSerDePtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamHiveJsonSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamHiveJsonSerDe)(nil)).Elem()
}

func (o DeliveryStreamHiveJsonSerDePtrOutput) ToDeliveryStreamHiveJsonSerDePtrOutput() DeliveryStreamHiveJsonSerDePtrOutput {
	return o
}

func (o DeliveryStreamHiveJsonSerDePtrOutput) ToDeliveryStreamHiveJsonSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamHiveJsonSerDePtrOutput {
	return o
}

func (o DeliveryStreamHiveJsonSerDePtrOutput) Elem() DeliveryStreamHiveJsonSerDeOutput {
	return o.ApplyT(func(v *DeliveryStreamHiveJsonSerDe) DeliveryStreamHiveJsonSerDe {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamHiveJsonSerDe
		return ret
	}).(DeliveryStreamHiveJsonSerDeOutput)
}

// Indicates how you want Firehose to parse the date and timestamps that may be present in your input data JSON. To specify these format strings, follow the pattern syntax of JodaTime's DateTimeFormat format strings. For more information, see [Class DateTimeFormat](https://docs.aws.amazon.com/https://www.joda.org/joda-time/apidocs/org/joda/time/format/DateTimeFormat.html) . You can also use the special value `millis` to parse timestamps in epoch milliseconds. If you don't specify a format, Firehose uses `java.sql.Timestamp::valueOf` by default.
func (o DeliveryStreamHiveJsonSerDePtrOutput) TimestampFormats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeliveryStreamHiveJsonSerDe) []string {
		if v == nil {
			return nil
		}
		return v.TimestampFormats
	}).(pulumi.StringArrayOutput)
}

type DeliveryStreamHttpEndpointCommonAttribute struct {
	// The name of the HTTP endpoint common attribute.
	AttributeName string `pulumi:"attributeName"`
	// The value of the HTTP endpoint common attribute.
	AttributeValue string `pulumi:"attributeValue"`
}

// DeliveryStreamHttpEndpointCommonAttributeInput is an input type that accepts DeliveryStreamHttpEndpointCommonAttributeArgs and DeliveryStreamHttpEndpointCommonAttributeOutput values.
// You can construct a concrete instance of `DeliveryStreamHttpEndpointCommonAttributeInput` via:
//
//	DeliveryStreamHttpEndpointCommonAttributeArgs{...}
type DeliveryStreamHttpEndpointCommonAttributeInput interface {
	pulumi.Input

	ToDeliveryStreamHttpEndpointCommonAttributeOutput() DeliveryStreamHttpEndpointCommonAttributeOutput
	ToDeliveryStreamHttpEndpointCommonAttributeOutputWithContext(context.Context) DeliveryStreamHttpEndpointCommonAttributeOutput
}

type DeliveryStreamHttpEndpointCommonAttributeArgs struct {
	// The name of the HTTP endpoint common attribute.
	AttributeName pulumi.StringInput `pulumi:"attributeName"`
	// The value of the HTTP endpoint common attribute.
	AttributeValue pulumi.StringInput `pulumi:"attributeValue"`
}

func (DeliveryStreamHttpEndpointCommonAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamHttpEndpointCommonAttribute)(nil)).Elem()
}

func (i DeliveryStreamHttpEndpointCommonAttributeArgs) ToDeliveryStreamHttpEndpointCommonAttributeOutput() DeliveryStreamHttpEndpointCommonAttributeOutput {
	return i.ToDeliveryStreamHttpEndpointCommonAttributeOutputWithContext(context.Background())
}

func (i DeliveryStreamHttpEndpointCommonAttributeArgs) ToDeliveryStreamHttpEndpointCommonAttributeOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointCommonAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHttpEndpointCommonAttributeOutput)
}

// DeliveryStreamHttpEndpointCommonAttributeArrayInput is an input type that accepts DeliveryStreamHttpEndpointCommonAttributeArray and DeliveryStreamHttpEndpointCommonAttributeArrayOutput values.
// You can construct a concrete instance of `DeliveryStreamHttpEndpointCommonAttributeArrayInput` via:
//
//	DeliveryStreamHttpEndpointCommonAttributeArray{ DeliveryStreamHttpEndpointCommonAttributeArgs{...} }
type DeliveryStreamHttpEndpointCommonAttributeArrayInput interface {
	pulumi.Input

	ToDeliveryStreamHttpEndpointCommonAttributeArrayOutput() DeliveryStreamHttpEndpointCommonAttributeArrayOutput
	ToDeliveryStreamHttpEndpointCommonAttributeArrayOutputWithContext(context.Context) DeliveryStreamHttpEndpointCommonAttributeArrayOutput
}

type DeliveryStreamHttpEndpointCommonAttributeArray []DeliveryStreamHttpEndpointCommonAttributeInput

func (DeliveryStreamHttpEndpointCommonAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryStreamHttpEndpointCommonAttribute)(nil)).Elem()
}

func (i DeliveryStreamHttpEndpointCommonAttributeArray) ToDeliveryStreamHttpEndpointCommonAttributeArrayOutput() DeliveryStreamHttpEndpointCommonAttributeArrayOutput {
	return i.ToDeliveryStreamHttpEndpointCommonAttributeArrayOutputWithContext(context.Background())
}

func (i DeliveryStreamHttpEndpointCommonAttributeArray) ToDeliveryStreamHttpEndpointCommonAttributeArrayOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointCommonAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHttpEndpointCommonAttributeArrayOutput)
}

type DeliveryStreamHttpEndpointCommonAttributeOutput struct{ *pulumi.OutputState }

func (DeliveryStreamHttpEndpointCommonAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamHttpEndpointCommonAttribute)(nil)).Elem()
}

func (o DeliveryStreamHttpEndpointCommonAttributeOutput) ToDeliveryStreamHttpEndpointCommonAttributeOutput() DeliveryStreamHttpEndpointCommonAttributeOutput {
	return o
}

func (o DeliveryStreamHttpEndpointCommonAttributeOutput) ToDeliveryStreamHttpEndpointCommonAttributeOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointCommonAttributeOutput {
	return o
}

// The name of the HTTP endpoint common attribute.
func (o DeliveryStreamHttpEndpointCommonAttributeOutput) AttributeName() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointCommonAttribute) string { return v.AttributeName }).(pulumi.StringOutput)
}

// The value of the HTTP endpoint common attribute.
func (o DeliveryStreamHttpEndpointCommonAttributeOutput) AttributeValue() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointCommonAttribute) string { return v.AttributeValue }).(pulumi.StringOutput)
}

type DeliveryStreamHttpEndpointCommonAttributeArrayOutput struct{ *pulumi.OutputState }

func (DeliveryStreamHttpEndpointCommonAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryStreamHttpEndpointCommonAttribute)(nil)).Elem()
}

func (o DeliveryStreamHttpEndpointCommonAttributeArrayOutput) ToDeliveryStreamHttpEndpointCommonAttributeArrayOutput() DeliveryStreamHttpEndpointCommonAttributeArrayOutput {
	return o
}

func (o DeliveryStreamHttpEndpointCommonAttributeArrayOutput) ToDeliveryStreamHttpEndpointCommonAttributeArrayOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointCommonAttributeArrayOutput {
	return o
}

func (o DeliveryStreamHttpEndpointCommonAttributeArrayOutput) Index(i pulumi.IntInput) DeliveryStreamHttpEndpointCommonAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryStreamHttpEndpointCommonAttribute {
		return vs[0].([]DeliveryStreamHttpEndpointCommonAttribute)[vs[1].(int)]
	}).(DeliveryStreamHttpEndpointCommonAttributeOutput)
}

type DeliveryStreamHttpEndpointConfiguration struct {
	// The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.
	AccessKey *string `pulumi:"accessKey"`
	// The name of the HTTP endpoint selected as the destination.
	Name *string `pulumi:"name"`
	// The URL of the HTTP endpoint selected as the destination.
	Url string `pulumi:"url"`
}

// DeliveryStreamHttpEndpointConfigurationInput is an input type that accepts DeliveryStreamHttpEndpointConfigurationArgs and DeliveryStreamHttpEndpointConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamHttpEndpointConfigurationInput` via:
//
//	DeliveryStreamHttpEndpointConfigurationArgs{...}
type DeliveryStreamHttpEndpointConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamHttpEndpointConfigurationOutput() DeliveryStreamHttpEndpointConfigurationOutput
	ToDeliveryStreamHttpEndpointConfigurationOutputWithContext(context.Context) DeliveryStreamHttpEndpointConfigurationOutput
}

type DeliveryStreamHttpEndpointConfigurationArgs struct {
	// The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.
	AccessKey pulumi.StringPtrInput `pulumi:"accessKey"`
	// The name of the HTTP endpoint selected as the destination.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The URL of the HTTP endpoint selected as the destination.
	Url pulumi.StringInput `pulumi:"url"`
}

func (DeliveryStreamHttpEndpointConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamHttpEndpointConfiguration)(nil)).Elem()
}

func (i DeliveryStreamHttpEndpointConfigurationArgs) ToDeliveryStreamHttpEndpointConfigurationOutput() DeliveryStreamHttpEndpointConfigurationOutput {
	return i.ToDeliveryStreamHttpEndpointConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamHttpEndpointConfigurationArgs) ToDeliveryStreamHttpEndpointConfigurationOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHttpEndpointConfigurationOutput)
}

func (i DeliveryStreamHttpEndpointConfigurationArgs) ToDeliveryStreamHttpEndpointConfigurationPtrOutput() DeliveryStreamHttpEndpointConfigurationPtrOutput {
	return i.ToDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamHttpEndpointConfigurationArgs) ToDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHttpEndpointConfigurationOutput).ToDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamHttpEndpointConfigurationPtrInput is an input type that accepts DeliveryStreamHttpEndpointConfigurationArgs, DeliveryStreamHttpEndpointConfigurationPtr and DeliveryStreamHttpEndpointConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamHttpEndpointConfigurationPtrInput` via:
//
//	        DeliveryStreamHttpEndpointConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamHttpEndpointConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamHttpEndpointConfigurationPtrOutput() DeliveryStreamHttpEndpointConfigurationPtrOutput
	ToDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(context.Context) DeliveryStreamHttpEndpointConfigurationPtrOutput
}

type deliveryStreamHttpEndpointConfigurationPtrType DeliveryStreamHttpEndpointConfigurationArgs

func DeliveryStreamHttpEndpointConfigurationPtr(v *DeliveryStreamHttpEndpointConfigurationArgs) DeliveryStreamHttpEndpointConfigurationPtrInput {
	return (*deliveryStreamHttpEndpointConfigurationPtrType)(v)
}

func (*deliveryStreamHttpEndpointConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamHttpEndpointConfiguration)(nil)).Elem()
}

func (i *deliveryStreamHttpEndpointConfigurationPtrType) ToDeliveryStreamHttpEndpointConfigurationPtrOutput() DeliveryStreamHttpEndpointConfigurationPtrOutput {
	return i.ToDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamHttpEndpointConfigurationPtrType) ToDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHttpEndpointConfigurationPtrOutput)
}

type DeliveryStreamHttpEndpointConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamHttpEndpointConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamHttpEndpointConfiguration)(nil)).Elem()
}

func (o DeliveryStreamHttpEndpointConfigurationOutput) ToDeliveryStreamHttpEndpointConfigurationOutput() DeliveryStreamHttpEndpointConfigurationOutput {
	return o
}

func (o DeliveryStreamHttpEndpointConfigurationOutput) ToDeliveryStreamHttpEndpointConfigurationOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointConfigurationOutput {
	return o
}

func (o DeliveryStreamHttpEndpointConfigurationOutput) ToDeliveryStreamHttpEndpointConfigurationPtrOutput() DeliveryStreamHttpEndpointConfigurationPtrOutput {
	return o.ToDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamHttpEndpointConfigurationOutput) ToDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamHttpEndpointConfiguration) *DeliveryStreamHttpEndpointConfiguration {
		return &v
	}).(DeliveryStreamHttpEndpointConfigurationPtrOutput)
}

// The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.
func (o DeliveryStreamHttpEndpointConfigurationOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointConfiguration) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// The name of the HTTP endpoint selected as the destination.
func (o DeliveryStreamHttpEndpointConfigurationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointConfiguration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The URL of the HTTP endpoint selected as the destination.
func (o DeliveryStreamHttpEndpointConfigurationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointConfiguration) string { return v.Url }).(pulumi.StringOutput)
}

type DeliveryStreamHttpEndpointConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamHttpEndpointConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamHttpEndpointConfiguration)(nil)).Elem()
}

func (o DeliveryStreamHttpEndpointConfigurationPtrOutput) ToDeliveryStreamHttpEndpointConfigurationPtrOutput() DeliveryStreamHttpEndpointConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamHttpEndpointConfigurationPtrOutput) ToDeliveryStreamHttpEndpointConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamHttpEndpointConfigurationPtrOutput) Elem() DeliveryStreamHttpEndpointConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointConfiguration) DeliveryStreamHttpEndpointConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamHttpEndpointConfiguration
		return ret
	}).(DeliveryStreamHttpEndpointConfigurationOutput)
}

// The access key required for Kinesis Firehose to authenticate with the HTTP endpoint selected as the destination.
func (o DeliveryStreamHttpEndpointConfigurationPtrOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AccessKey
	}).(pulumi.StringPtrOutput)
}

// The name of the HTTP endpoint selected as the destination.
func (o DeliveryStreamHttpEndpointConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The URL of the HTTP endpoint selected as the destination.
func (o DeliveryStreamHttpEndpointConfigurationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamHttpEndpointDestinationConfiguration struct {
	// The buffering options that can be used before data is delivered to the specified destination. Kinesis Data Firehose treats these options as hints, and it might choose to use more optimal values. The SizeInMBs and IntervalInSeconds parameters are optional. However, if you specify a value for one of them, you must also provide a value for the other.
	BufferingHints *DeliveryStreamBufferingHints `pulumi:"bufferingHints"`
	// Describes the Amazon CloudWatch logging options for your delivery stream.
	CloudWatchLoggingOptions *DeliveryStreamCloudWatchLoggingOptions `pulumi:"cloudWatchLoggingOptions"`
	// The configuration of the HTTP endpoint selected as the destination.
	EndpointConfiguration DeliveryStreamHttpEndpointConfiguration `pulumi:"endpointConfiguration"`
	// Describes the data processing configuration.
	ProcessingConfiguration *DeliveryStreamProcessingConfiguration `pulumi:"processingConfiguration"`
	// The configuration of the request sent to the HTTP endpoint specified as the destination.
	RequestConfiguration *DeliveryStreamHttpEndpointRequestConfiguration `pulumi:"requestConfiguration"`
	// Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment of receipt from the specified HTTP endpoint destination.
	RetryOptions *DeliveryStreamRetryOptions `pulumi:"retryOptions"`
	// Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs.
	RoleArn *string `pulumi:"roleArn"`
	// Describes the S3 bucket backup options for the data that Kinesis Data Firehose delivers to the HTTP endpoint destination. You can back up all documents (AllData) or only the documents that Kinesis Data Firehose could not deliver to the specified HTTP endpoint destination (FailedDataOnly).
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// Describes the configuration of a destination in Amazon S3.
	S3Configuration DeliveryStreamS3DestinationConfiguration `pulumi:"s3Configuration"`
	// The configuration that defines how you access secrets for HTTP Endpoint destination.
	SecretsManagerConfiguration *DeliveryStreamSecretsManagerConfiguration `pulumi:"secretsManagerConfiguration"`
}

// DeliveryStreamHttpEndpointDestinationConfigurationInput is an input type that accepts DeliveryStreamHttpEndpointDestinationConfigurationArgs and DeliveryStreamHttpEndpointDestinationConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamHttpEndpointDestinationConfigurationInput` via:
//
//	DeliveryStreamHttpEndpointDestinationConfigurationArgs{...}
type DeliveryStreamHttpEndpointDestinationConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamHttpEndpointDestinationConfigurationOutput() DeliveryStreamHttpEndpointDestinationConfigurationOutput
	ToDeliveryStreamHttpEndpointDestinationConfigurationOutputWithContext(context.Context) DeliveryStreamHttpEndpointDestinationConfigurationOutput
}

type DeliveryStreamHttpEndpointDestinationConfigurationArgs struct {
	// The buffering options that can be used before data is delivered to the specified destination. Kinesis Data Firehose treats these options as hints, and it might choose to use more optimal values. The SizeInMBs and IntervalInSeconds parameters are optional. However, if you specify a value for one of them, you must also provide a value for the other.
	BufferingHints DeliveryStreamBufferingHintsPtrInput `pulumi:"bufferingHints"`
	// Describes the Amazon CloudWatch logging options for your delivery stream.
	CloudWatchLoggingOptions DeliveryStreamCloudWatchLoggingOptionsPtrInput `pulumi:"cloudWatchLoggingOptions"`
	// The configuration of the HTTP endpoint selected as the destination.
	EndpointConfiguration DeliveryStreamHttpEndpointConfigurationInput `pulumi:"endpointConfiguration"`
	// Describes the data processing configuration.
	ProcessingConfiguration DeliveryStreamProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The configuration of the request sent to the HTTP endpoint specified as the destination.
	RequestConfiguration DeliveryStreamHttpEndpointRequestConfigurationPtrInput `pulumi:"requestConfiguration"`
	// Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment of receipt from the specified HTTP endpoint destination.
	RetryOptions DeliveryStreamRetryOptionsPtrInput `pulumi:"retryOptions"`
	// Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Describes the S3 bucket backup options for the data that Kinesis Data Firehose delivers to the HTTP endpoint destination. You can back up all documents (AllData) or only the documents that Kinesis Data Firehose could not deliver to the specified HTTP endpoint destination (FailedDataOnly).
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// Describes the configuration of a destination in Amazon S3.
	S3Configuration DeliveryStreamS3DestinationConfigurationInput `pulumi:"s3Configuration"`
	// The configuration that defines how you access secrets for HTTP Endpoint destination.
	SecretsManagerConfiguration DeliveryStreamSecretsManagerConfigurationPtrInput `pulumi:"secretsManagerConfiguration"`
}

func (DeliveryStreamHttpEndpointDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamHttpEndpointDestinationConfiguration)(nil)).Elem()
}

func (i DeliveryStreamHttpEndpointDestinationConfigurationArgs) ToDeliveryStreamHttpEndpointDestinationConfigurationOutput() DeliveryStreamHttpEndpointDestinationConfigurationOutput {
	return i.ToDeliveryStreamHttpEndpointDestinationConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamHttpEndpointDestinationConfigurationArgs) ToDeliveryStreamHttpEndpointDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHttpEndpointDestinationConfigurationOutput)
}

func (i DeliveryStreamHttpEndpointDestinationConfigurationArgs) ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutput() DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamHttpEndpointDestinationConfigurationArgs) ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHttpEndpointDestinationConfigurationOutput).ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamHttpEndpointDestinationConfigurationPtrInput is an input type that accepts DeliveryStreamHttpEndpointDestinationConfigurationArgs, DeliveryStreamHttpEndpointDestinationConfigurationPtr and DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamHttpEndpointDestinationConfigurationPtrInput` via:
//
//	        DeliveryStreamHttpEndpointDestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamHttpEndpointDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutput() DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput
	ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutputWithContext(context.Context) DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput
}

type deliveryStreamHttpEndpointDestinationConfigurationPtrType DeliveryStreamHttpEndpointDestinationConfigurationArgs

func DeliveryStreamHttpEndpointDestinationConfigurationPtr(v *DeliveryStreamHttpEndpointDestinationConfigurationArgs) DeliveryStreamHttpEndpointDestinationConfigurationPtrInput {
	return (*deliveryStreamHttpEndpointDestinationConfigurationPtrType)(v)
}

func (*deliveryStreamHttpEndpointDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamHttpEndpointDestinationConfiguration)(nil)).Elem()
}

func (i *deliveryStreamHttpEndpointDestinationConfigurationPtrType) ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutput() DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamHttpEndpointDestinationConfigurationPtrType) ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput)
}

type DeliveryStreamHttpEndpointDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamHttpEndpointDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamHttpEndpointDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) ToDeliveryStreamHttpEndpointDestinationConfigurationOutput() DeliveryStreamHttpEndpointDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) ToDeliveryStreamHttpEndpointDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutput() DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput {
	return o.ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamHttpEndpointDestinationConfiguration {
		return &v
	}).(DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput)
}

// The buffering options that can be used before data is delivered to the specified destination. Kinesis Data Firehose treats these options as hints, and it might choose to use more optimal values. The SizeInMBs and IntervalInSeconds parameters are optional. However, if you specify a value for one of them, you must also provide a value for the other.
func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) BufferingHints() DeliveryStreamBufferingHintsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamBufferingHints {
		return v.BufferingHints
	}).(DeliveryStreamBufferingHintsPtrOutput)
}

// Describes the Amazon CloudWatch logging options for your delivery stream.
func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The configuration of the HTTP endpoint selected as the destination.
func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) EndpointConfiguration() DeliveryStreamHttpEndpointConfigurationOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointDestinationConfiguration) DeliveryStreamHttpEndpointConfiguration {
		return v.EndpointConfiguration
	}).(DeliveryStreamHttpEndpointConfigurationOutput)
}

// Describes the data processing configuration.
func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The configuration of the request sent to the HTTP endpoint specified as the destination.
func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) RequestConfiguration() DeliveryStreamHttpEndpointRequestConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamHttpEndpointRequestConfiguration {
		return v.RequestConfiguration
	}).(DeliveryStreamHttpEndpointRequestConfigurationPtrOutput)
}

// Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment of receipt from the specified HTTP endpoint destination.
func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) RetryOptions() DeliveryStreamRetryOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamRetryOptions {
		return v.RetryOptions
	}).(DeliveryStreamRetryOptionsPtrOutput)
}

// Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs.
func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointDestinationConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Describes the S3 bucket backup options for the data that Kinesis Data Firehose delivers to the HTTP endpoint destination. You can back up all documents (AllData) or only the documents that Kinesis Data Firehose could not deliver to the specified HTTP endpoint destination (FailedDataOnly).
func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointDestinationConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// Describes the configuration of a destination in Amazon S3.
func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointDestinationConfiguration) DeliveryStreamS3DestinationConfiguration {
		return v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationOutput)
}

// The configuration that defines how you access secrets for HTTP Endpoint destination.
func (o DeliveryStreamHttpEndpointDestinationConfigurationOutput) SecretsManagerConfiguration() DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamSecretsManagerConfiguration {
		return v.SecretsManagerConfiguration
	}).(DeliveryStreamSecretsManagerConfigurationPtrOutput)
}

type DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamHttpEndpointDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutput() DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) ToDeliveryStreamHttpEndpointDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) Elem() DeliveryStreamHttpEndpointDestinationConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointDestinationConfiguration) DeliveryStreamHttpEndpointDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamHttpEndpointDestinationConfiguration
		return ret
	}).(DeliveryStreamHttpEndpointDestinationConfigurationOutput)
}

// The buffering options that can be used before data is delivered to the specified destination. Kinesis Data Firehose treats these options as hints, and it might choose to use more optimal values. The SizeInMBs and IntervalInSeconds parameters are optional. However, if you specify a value for one of them, you must also provide a value for the other.
func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) BufferingHints() DeliveryStreamBufferingHintsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamBufferingHints {
		if v == nil {
			return nil
		}
		return v.BufferingHints
	}).(DeliveryStreamBufferingHintsPtrOutput)
}

// Describes the Amazon CloudWatch logging options for your delivery stream.
func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The configuration of the HTTP endpoint selected as the destination.
func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) EndpointConfiguration() DeliveryStreamHttpEndpointConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamHttpEndpointConfiguration {
		if v == nil {
			return nil
		}
		return &v.EndpointConfiguration
	}).(DeliveryStreamHttpEndpointConfigurationPtrOutput)
}

// Describes the data processing configuration.
func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The configuration of the request sent to the HTTP endpoint specified as the destination.
func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) RequestConfiguration() DeliveryStreamHttpEndpointRequestConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamHttpEndpointRequestConfiguration {
		if v == nil {
			return nil
		}
		return v.RequestConfiguration
	}).(DeliveryStreamHttpEndpointRequestConfigurationPtrOutput)
}

// Describes the retry behavior in case Kinesis Data Firehose is unable to deliver data to the specified HTTP endpoint destination, or if it doesn't receive a valid acknowledgment of receipt from the specified HTTP endpoint destination.
func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) RetryOptions() DeliveryStreamRetryOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamRetryOptions {
		if v == nil {
			return nil
		}
		return v.RetryOptions
	}).(DeliveryStreamRetryOptionsPtrOutput)
}

// Kinesis Data Firehose uses this IAM role for all the permissions that the delivery stream needs.
func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Describes the S3 bucket backup options for the data that Kinesis Data Firehose delivers to the HTTP endpoint destination. You can back up all documents (AllData) or only the documents that Kinesis Data Firehose could not deliver to the specified HTTP endpoint destination (FailedDataOnly).
func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(pulumi.StringPtrOutput)
}

// Describes the configuration of a destination in Amazon S3.
func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamS3DestinationConfiguration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// The configuration that defines how you access secrets for HTTP Endpoint destination.
func (o DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput) SecretsManagerConfiguration() DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointDestinationConfiguration) *DeliveryStreamSecretsManagerConfiguration {
		if v == nil {
			return nil
		}
		return v.SecretsManagerConfiguration
	}).(DeliveryStreamSecretsManagerConfigurationPtrOutput)
}

type DeliveryStreamHttpEndpointRequestConfiguration struct {
	// Describes the metadata sent to the HTTP endpoint destination.
	CommonAttributes []DeliveryStreamHttpEndpointCommonAttribute `pulumi:"commonAttributes"`
	// Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. For more information, see Content-Encoding in MDN Web Docs, the official Mozilla documentation.
	ContentEncoding *DeliveryStreamHttpEndpointRequestConfigurationContentEncoding `pulumi:"contentEncoding"`
}

// DeliveryStreamHttpEndpointRequestConfigurationInput is an input type that accepts DeliveryStreamHttpEndpointRequestConfigurationArgs and DeliveryStreamHttpEndpointRequestConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamHttpEndpointRequestConfigurationInput` via:
//
//	DeliveryStreamHttpEndpointRequestConfigurationArgs{...}
type DeliveryStreamHttpEndpointRequestConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamHttpEndpointRequestConfigurationOutput() DeliveryStreamHttpEndpointRequestConfigurationOutput
	ToDeliveryStreamHttpEndpointRequestConfigurationOutputWithContext(context.Context) DeliveryStreamHttpEndpointRequestConfigurationOutput
}

type DeliveryStreamHttpEndpointRequestConfigurationArgs struct {
	// Describes the metadata sent to the HTTP endpoint destination.
	CommonAttributes DeliveryStreamHttpEndpointCommonAttributeArrayInput `pulumi:"commonAttributes"`
	// Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. For more information, see Content-Encoding in MDN Web Docs, the official Mozilla documentation.
	ContentEncoding DeliveryStreamHttpEndpointRequestConfigurationContentEncodingPtrInput `pulumi:"contentEncoding"`
}

func (DeliveryStreamHttpEndpointRequestConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamHttpEndpointRequestConfiguration)(nil)).Elem()
}

func (i DeliveryStreamHttpEndpointRequestConfigurationArgs) ToDeliveryStreamHttpEndpointRequestConfigurationOutput() DeliveryStreamHttpEndpointRequestConfigurationOutput {
	return i.ToDeliveryStreamHttpEndpointRequestConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamHttpEndpointRequestConfigurationArgs) ToDeliveryStreamHttpEndpointRequestConfigurationOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointRequestConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHttpEndpointRequestConfigurationOutput)
}

func (i DeliveryStreamHttpEndpointRequestConfigurationArgs) ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutput() DeliveryStreamHttpEndpointRequestConfigurationPtrOutput {
	return i.ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamHttpEndpointRequestConfigurationArgs) ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointRequestConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHttpEndpointRequestConfigurationOutput).ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamHttpEndpointRequestConfigurationPtrInput is an input type that accepts DeliveryStreamHttpEndpointRequestConfigurationArgs, DeliveryStreamHttpEndpointRequestConfigurationPtr and DeliveryStreamHttpEndpointRequestConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamHttpEndpointRequestConfigurationPtrInput` via:
//
//	        DeliveryStreamHttpEndpointRequestConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamHttpEndpointRequestConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutput() DeliveryStreamHttpEndpointRequestConfigurationPtrOutput
	ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutputWithContext(context.Context) DeliveryStreamHttpEndpointRequestConfigurationPtrOutput
}

type deliveryStreamHttpEndpointRequestConfigurationPtrType DeliveryStreamHttpEndpointRequestConfigurationArgs

func DeliveryStreamHttpEndpointRequestConfigurationPtr(v *DeliveryStreamHttpEndpointRequestConfigurationArgs) DeliveryStreamHttpEndpointRequestConfigurationPtrInput {
	return (*deliveryStreamHttpEndpointRequestConfigurationPtrType)(v)
}

func (*deliveryStreamHttpEndpointRequestConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamHttpEndpointRequestConfiguration)(nil)).Elem()
}

func (i *deliveryStreamHttpEndpointRequestConfigurationPtrType) ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutput() DeliveryStreamHttpEndpointRequestConfigurationPtrOutput {
	return i.ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamHttpEndpointRequestConfigurationPtrType) ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointRequestConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamHttpEndpointRequestConfigurationPtrOutput)
}

type DeliveryStreamHttpEndpointRequestConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamHttpEndpointRequestConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamHttpEndpointRequestConfiguration)(nil)).Elem()
}

func (o DeliveryStreamHttpEndpointRequestConfigurationOutput) ToDeliveryStreamHttpEndpointRequestConfigurationOutput() DeliveryStreamHttpEndpointRequestConfigurationOutput {
	return o
}

func (o DeliveryStreamHttpEndpointRequestConfigurationOutput) ToDeliveryStreamHttpEndpointRequestConfigurationOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointRequestConfigurationOutput {
	return o
}

func (o DeliveryStreamHttpEndpointRequestConfigurationOutput) ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutput() DeliveryStreamHttpEndpointRequestConfigurationPtrOutput {
	return o.ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamHttpEndpointRequestConfigurationOutput) ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointRequestConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamHttpEndpointRequestConfiguration) *DeliveryStreamHttpEndpointRequestConfiguration {
		return &v
	}).(DeliveryStreamHttpEndpointRequestConfigurationPtrOutput)
}

// Describes the metadata sent to the HTTP endpoint destination.
func (o DeliveryStreamHttpEndpointRequestConfigurationOutput) CommonAttributes() DeliveryStreamHttpEndpointCommonAttributeArrayOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointRequestConfiguration) []DeliveryStreamHttpEndpointCommonAttribute {
		return v.CommonAttributes
	}).(DeliveryStreamHttpEndpointCommonAttributeArrayOutput)
}

// Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. For more information, see Content-Encoding in MDN Web Docs, the official Mozilla documentation.
func (o DeliveryStreamHttpEndpointRequestConfigurationOutput) ContentEncoding() DeliveryStreamHttpEndpointRequestConfigurationContentEncodingPtrOutput {
	return o.ApplyT(func(v DeliveryStreamHttpEndpointRequestConfiguration) *DeliveryStreamHttpEndpointRequestConfigurationContentEncoding {
		return v.ContentEncoding
	}).(DeliveryStreamHttpEndpointRequestConfigurationContentEncodingPtrOutput)
}

type DeliveryStreamHttpEndpointRequestConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamHttpEndpointRequestConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamHttpEndpointRequestConfiguration)(nil)).Elem()
}

func (o DeliveryStreamHttpEndpointRequestConfigurationPtrOutput) ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutput() DeliveryStreamHttpEndpointRequestConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamHttpEndpointRequestConfigurationPtrOutput) ToDeliveryStreamHttpEndpointRequestConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamHttpEndpointRequestConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamHttpEndpointRequestConfigurationPtrOutput) Elem() DeliveryStreamHttpEndpointRequestConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointRequestConfiguration) DeliveryStreamHttpEndpointRequestConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamHttpEndpointRequestConfiguration
		return ret
	}).(DeliveryStreamHttpEndpointRequestConfigurationOutput)
}

// Describes the metadata sent to the HTTP endpoint destination.
func (o DeliveryStreamHttpEndpointRequestConfigurationPtrOutput) CommonAttributes() DeliveryStreamHttpEndpointCommonAttributeArrayOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointRequestConfiguration) []DeliveryStreamHttpEndpointCommonAttribute {
		if v == nil {
			return nil
		}
		return v.CommonAttributes
	}).(DeliveryStreamHttpEndpointCommonAttributeArrayOutput)
}

// Kinesis Data Firehose uses the content encoding to compress the body of a request before sending the request to the destination. For more information, see Content-Encoding in MDN Web Docs, the official Mozilla documentation.
func (o DeliveryStreamHttpEndpointRequestConfigurationPtrOutput) ContentEncoding() DeliveryStreamHttpEndpointRequestConfigurationContentEncodingPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamHttpEndpointRequestConfiguration) *DeliveryStreamHttpEndpointRequestConfigurationContentEncoding {
		if v == nil {
			return nil
		}
		return v.ContentEncoding
	}).(DeliveryStreamHttpEndpointRequestConfigurationContentEncodingPtrOutput)
}

type DeliveryStreamInputFormatConfiguration struct {
	// Specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. If both are non-null, the server rejects the request.
	Deserializer *DeliveryStreamDeserializer `pulumi:"deserializer"`
}

// DeliveryStreamInputFormatConfigurationInput is an input type that accepts DeliveryStreamInputFormatConfigurationArgs and DeliveryStreamInputFormatConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamInputFormatConfigurationInput` via:
//
//	DeliveryStreamInputFormatConfigurationArgs{...}
type DeliveryStreamInputFormatConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamInputFormatConfigurationOutput() DeliveryStreamInputFormatConfigurationOutput
	ToDeliveryStreamInputFormatConfigurationOutputWithContext(context.Context) DeliveryStreamInputFormatConfigurationOutput
}

type DeliveryStreamInputFormatConfigurationArgs struct {
	// Specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. If both are non-null, the server rejects the request.
	Deserializer DeliveryStreamDeserializerPtrInput `pulumi:"deserializer"`
}

func (DeliveryStreamInputFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamInputFormatConfiguration)(nil)).Elem()
}

func (i DeliveryStreamInputFormatConfigurationArgs) ToDeliveryStreamInputFormatConfigurationOutput() DeliveryStreamInputFormatConfigurationOutput {
	return i.ToDeliveryStreamInputFormatConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamInputFormatConfigurationArgs) ToDeliveryStreamInputFormatConfigurationOutputWithContext(ctx context.Context) DeliveryStreamInputFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamInputFormatConfigurationOutput)
}

func (i DeliveryStreamInputFormatConfigurationArgs) ToDeliveryStreamInputFormatConfigurationPtrOutput() DeliveryStreamInputFormatConfigurationPtrOutput {
	return i.ToDeliveryStreamInputFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamInputFormatConfigurationArgs) ToDeliveryStreamInputFormatConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamInputFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamInputFormatConfigurationOutput).ToDeliveryStreamInputFormatConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamInputFormatConfigurationPtrInput is an input type that accepts DeliveryStreamInputFormatConfigurationArgs, DeliveryStreamInputFormatConfigurationPtr and DeliveryStreamInputFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamInputFormatConfigurationPtrInput` via:
//
//	        DeliveryStreamInputFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamInputFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamInputFormatConfigurationPtrOutput() DeliveryStreamInputFormatConfigurationPtrOutput
	ToDeliveryStreamInputFormatConfigurationPtrOutputWithContext(context.Context) DeliveryStreamInputFormatConfigurationPtrOutput
}

type deliveryStreamInputFormatConfigurationPtrType DeliveryStreamInputFormatConfigurationArgs

func DeliveryStreamInputFormatConfigurationPtr(v *DeliveryStreamInputFormatConfigurationArgs) DeliveryStreamInputFormatConfigurationPtrInput {
	return (*deliveryStreamInputFormatConfigurationPtrType)(v)
}

func (*deliveryStreamInputFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamInputFormatConfiguration)(nil)).Elem()
}

func (i *deliveryStreamInputFormatConfigurationPtrType) ToDeliveryStreamInputFormatConfigurationPtrOutput() DeliveryStreamInputFormatConfigurationPtrOutput {
	return i.ToDeliveryStreamInputFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamInputFormatConfigurationPtrType) ToDeliveryStreamInputFormatConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamInputFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamInputFormatConfigurationPtrOutput)
}

type DeliveryStreamInputFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamInputFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamInputFormatConfiguration)(nil)).Elem()
}

func (o DeliveryStreamInputFormatConfigurationOutput) ToDeliveryStreamInputFormatConfigurationOutput() DeliveryStreamInputFormatConfigurationOutput {
	return o
}

func (o DeliveryStreamInputFormatConfigurationOutput) ToDeliveryStreamInputFormatConfigurationOutputWithContext(ctx context.Context) DeliveryStreamInputFormatConfigurationOutput {
	return o
}

func (o DeliveryStreamInputFormatConfigurationOutput) ToDeliveryStreamInputFormatConfigurationPtrOutput() DeliveryStreamInputFormatConfigurationPtrOutput {
	return o.ToDeliveryStreamInputFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamInputFormatConfigurationOutput) ToDeliveryStreamInputFormatConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamInputFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamInputFormatConfiguration) *DeliveryStreamInputFormatConfiguration {
		return &v
	}).(DeliveryStreamInputFormatConfigurationPtrOutput)
}

// Specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. If both are non-null, the server rejects the request.
func (o DeliveryStreamInputFormatConfigurationOutput) Deserializer() DeliveryStreamDeserializerPtrOutput {
	return o.ApplyT(func(v DeliveryStreamInputFormatConfiguration) *DeliveryStreamDeserializer { return v.Deserializer }).(DeliveryStreamDeserializerPtrOutput)
}

type DeliveryStreamInputFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamInputFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamInputFormatConfiguration)(nil)).Elem()
}

func (o DeliveryStreamInputFormatConfigurationPtrOutput) ToDeliveryStreamInputFormatConfigurationPtrOutput() DeliveryStreamInputFormatConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamInputFormatConfigurationPtrOutput) ToDeliveryStreamInputFormatConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamInputFormatConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamInputFormatConfigurationPtrOutput) Elem() DeliveryStreamInputFormatConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamInputFormatConfiguration) DeliveryStreamInputFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamInputFormatConfiguration
		return ret
	}).(DeliveryStreamInputFormatConfigurationOutput)
}

// Specifies which deserializer to use. You can choose either the Apache Hive JSON SerDe or the OpenX JSON SerDe. If both are non-null, the server rejects the request.
func (o DeliveryStreamInputFormatConfigurationPtrOutput) Deserializer() DeliveryStreamDeserializerPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamInputFormatConfiguration) *DeliveryStreamDeserializer {
		if v == nil {
			return nil
		}
		return v.Deserializer
	}).(DeliveryStreamDeserializerPtrOutput)
}

type DeliveryStreamKinesisStreamSourceConfiguration struct {
	// The ARN of the source Kinesis data stream.
	KinesisStreamArn string `pulumi:"kinesisStreamArn"`
	// The ARN of the role that provides access to the source Kinesis data stream.
	RoleArn string `pulumi:"roleArn"`
}

// DeliveryStreamKinesisStreamSourceConfigurationInput is an input type that accepts DeliveryStreamKinesisStreamSourceConfigurationArgs and DeliveryStreamKinesisStreamSourceConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamKinesisStreamSourceConfigurationInput` via:
//
//	DeliveryStreamKinesisStreamSourceConfigurationArgs{...}
type DeliveryStreamKinesisStreamSourceConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamKinesisStreamSourceConfigurationOutput() DeliveryStreamKinesisStreamSourceConfigurationOutput
	ToDeliveryStreamKinesisStreamSourceConfigurationOutputWithContext(context.Context) DeliveryStreamKinesisStreamSourceConfigurationOutput
}

type DeliveryStreamKinesisStreamSourceConfigurationArgs struct {
	// The ARN of the source Kinesis data stream.
	KinesisStreamArn pulumi.StringInput `pulumi:"kinesisStreamArn"`
	// The ARN of the role that provides access to the source Kinesis data stream.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (DeliveryStreamKinesisStreamSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamKinesisStreamSourceConfiguration)(nil)).Elem()
}

func (i DeliveryStreamKinesisStreamSourceConfigurationArgs) ToDeliveryStreamKinesisStreamSourceConfigurationOutput() DeliveryStreamKinesisStreamSourceConfigurationOutput {
	return i.ToDeliveryStreamKinesisStreamSourceConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamKinesisStreamSourceConfigurationArgs) ToDeliveryStreamKinesisStreamSourceConfigurationOutputWithContext(ctx context.Context) DeliveryStreamKinesisStreamSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamKinesisStreamSourceConfigurationOutput)
}

func (i DeliveryStreamKinesisStreamSourceConfigurationArgs) ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutput() DeliveryStreamKinesisStreamSourceConfigurationPtrOutput {
	return i.ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamKinesisStreamSourceConfigurationArgs) ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamKinesisStreamSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamKinesisStreamSourceConfigurationOutput).ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamKinesisStreamSourceConfigurationPtrInput is an input type that accepts DeliveryStreamKinesisStreamSourceConfigurationArgs, DeliveryStreamKinesisStreamSourceConfigurationPtr and DeliveryStreamKinesisStreamSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamKinesisStreamSourceConfigurationPtrInput` via:
//
//	        DeliveryStreamKinesisStreamSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamKinesisStreamSourceConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutput() DeliveryStreamKinesisStreamSourceConfigurationPtrOutput
	ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutputWithContext(context.Context) DeliveryStreamKinesisStreamSourceConfigurationPtrOutput
}

type deliveryStreamKinesisStreamSourceConfigurationPtrType DeliveryStreamKinesisStreamSourceConfigurationArgs

func DeliveryStreamKinesisStreamSourceConfigurationPtr(v *DeliveryStreamKinesisStreamSourceConfigurationArgs) DeliveryStreamKinesisStreamSourceConfigurationPtrInput {
	return (*deliveryStreamKinesisStreamSourceConfigurationPtrType)(v)
}

func (*deliveryStreamKinesisStreamSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamKinesisStreamSourceConfiguration)(nil)).Elem()
}

func (i *deliveryStreamKinesisStreamSourceConfigurationPtrType) ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutput() DeliveryStreamKinesisStreamSourceConfigurationPtrOutput {
	return i.ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamKinesisStreamSourceConfigurationPtrType) ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamKinesisStreamSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamKinesisStreamSourceConfigurationPtrOutput)
}

type DeliveryStreamKinesisStreamSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamKinesisStreamSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamKinesisStreamSourceConfiguration)(nil)).Elem()
}

func (o DeliveryStreamKinesisStreamSourceConfigurationOutput) ToDeliveryStreamKinesisStreamSourceConfigurationOutput() DeliveryStreamKinesisStreamSourceConfigurationOutput {
	return o
}

func (o DeliveryStreamKinesisStreamSourceConfigurationOutput) ToDeliveryStreamKinesisStreamSourceConfigurationOutputWithContext(ctx context.Context) DeliveryStreamKinesisStreamSourceConfigurationOutput {
	return o
}

func (o DeliveryStreamKinesisStreamSourceConfigurationOutput) ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutput() DeliveryStreamKinesisStreamSourceConfigurationPtrOutput {
	return o.ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamKinesisStreamSourceConfigurationOutput) ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamKinesisStreamSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamKinesisStreamSourceConfiguration) *DeliveryStreamKinesisStreamSourceConfiguration {
		return &v
	}).(DeliveryStreamKinesisStreamSourceConfigurationPtrOutput)
}

// The ARN of the source Kinesis data stream.
func (o DeliveryStreamKinesisStreamSourceConfigurationOutput) KinesisStreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamKinesisStreamSourceConfiguration) string { return v.KinesisStreamArn }).(pulumi.StringOutput)
}

// The ARN of the role that provides access to the source Kinesis data stream.
func (o DeliveryStreamKinesisStreamSourceConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamKinesisStreamSourceConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DeliveryStreamKinesisStreamSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamKinesisStreamSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamKinesisStreamSourceConfiguration)(nil)).Elem()
}

func (o DeliveryStreamKinesisStreamSourceConfigurationPtrOutput) ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutput() DeliveryStreamKinesisStreamSourceConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamKinesisStreamSourceConfigurationPtrOutput) ToDeliveryStreamKinesisStreamSourceConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamKinesisStreamSourceConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamKinesisStreamSourceConfigurationPtrOutput) Elem() DeliveryStreamKinesisStreamSourceConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamKinesisStreamSourceConfiguration) DeliveryStreamKinesisStreamSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamKinesisStreamSourceConfiguration
		return ret
	}).(DeliveryStreamKinesisStreamSourceConfigurationOutput)
}

// The ARN of the source Kinesis data stream.
func (o DeliveryStreamKinesisStreamSourceConfigurationPtrOutput) KinesisStreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamKinesisStreamSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.KinesisStreamArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the role that provides access to the source Kinesis data stream.
func (o DeliveryStreamKinesisStreamSourceConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamKinesisStreamSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamKmsEncryptionConfig struct {
	// The Amazon Resource Name (ARN) of the AWS KMS encryption key that Amazon S3 uses to encrypt data delivered by the Kinesis Data Firehose stream. The key must belong to the same region as the destination S3 bucket.
	AwskmsKeyArn string `pulumi:"awskmsKeyArn"`
}

// DeliveryStreamKmsEncryptionConfigInput is an input type that accepts DeliveryStreamKmsEncryptionConfigArgs and DeliveryStreamKmsEncryptionConfigOutput values.
// You can construct a concrete instance of `DeliveryStreamKmsEncryptionConfigInput` via:
//
//	DeliveryStreamKmsEncryptionConfigArgs{...}
type DeliveryStreamKmsEncryptionConfigInput interface {
	pulumi.Input

	ToDeliveryStreamKmsEncryptionConfigOutput() DeliveryStreamKmsEncryptionConfigOutput
	ToDeliveryStreamKmsEncryptionConfigOutputWithContext(context.Context) DeliveryStreamKmsEncryptionConfigOutput
}

type DeliveryStreamKmsEncryptionConfigArgs struct {
	// The Amazon Resource Name (ARN) of the AWS KMS encryption key that Amazon S3 uses to encrypt data delivered by the Kinesis Data Firehose stream. The key must belong to the same region as the destination S3 bucket.
	AwskmsKeyArn pulumi.StringInput `pulumi:"awskmsKeyArn"`
}

func (DeliveryStreamKmsEncryptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamKmsEncryptionConfig)(nil)).Elem()
}

func (i DeliveryStreamKmsEncryptionConfigArgs) ToDeliveryStreamKmsEncryptionConfigOutput() DeliveryStreamKmsEncryptionConfigOutput {
	return i.ToDeliveryStreamKmsEncryptionConfigOutputWithContext(context.Background())
}

func (i DeliveryStreamKmsEncryptionConfigArgs) ToDeliveryStreamKmsEncryptionConfigOutputWithContext(ctx context.Context) DeliveryStreamKmsEncryptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamKmsEncryptionConfigOutput)
}

func (i DeliveryStreamKmsEncryptionConfigArgs) ToDeliveryStreamKmsEncryptionConfigPtrOutput() DeliveryStreamKmsEncryptionConfigPtrOutput {
	return i.ToDeliveryStreamKmsEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamKmsEncryptionConfigArgs) ToDeliveryStreamKmsEncryptionConfigPtrOutputWithContext(ctx context.Context) DeliveryStreamKmsEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamKmsEncryptionConfigOutput).ToDeliveryStreamKmsEncryptionConfigPtrOutputWithContext(ctx)
}

// DeliveryStreamKmsEncryptionConfigPtrInput is an input type that accepts DeliveryStreamKmsEncryptionConfigArgs, DeliveryStreamKmsEncryptionConfigPtr and DeliveryStreamKmsEncryptionConfigPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamKmsEncryptionConfigPtrInput` via:
//
//	        DeliveryStreamKmsEncryptionConfigArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamKmsEncryptionConfigPtrInput interface {
	pulumi.Input

	ToDeliveryStreamKmsEncryptionConfigPtrOutput() DeliveryStreamKmsEncryptionConfigPtrOutput
	ToDeliveryStreamKmsEncryptionConfigPtrOutputWithContext(context.Context) DeliveryStreamKmsEncryptionConfigPtrOutput
}

type deliveryStreamKmsEncryptionConfigPtrType DeliveryStreamKmsEncryptionConfigArgs

func DeliveryStreamKmsEncryptionConfigPtr(v *DeliveryStreamKmsEncryptionConfigArgs) DeliveryStreamKmsEncryptionConfigPtrInput {
	return (*deliveryStreamKmsEncryptionConfigPtrType)(v)
}

func (*deliveryStreamKmsEncryptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamKmsEncryptionConfig)(nil)).Elem()
}

func (i *deliveryStreamKmsEncryptionConfigPtrType) ToDeliveryStreamKmsEncryptionConfigPtrOutput() DeliveryStreamKmsEncryptionConfigPtrOutput {
	return i.ToDeliveryStreamKmsEncryptionConfigPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamKmsEncryptionConfigPtrType) ToDeliveryStreamKmsEncryptionConfigPtrOutputWithContext(ctx context.Context) DeliveryStreamKmsEncryptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamKmsEncryptionConfigPtrOutput)
}

type DeliveryStreamKmsEncryptionConfigOutput struct{ *pulumi.OutputState }

func (DeliveryStreamKmsEncryptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamKmsEncryptionConfig)(nil)).Elem()
}

func (o DeliveryStreamKmsEncryptionConfigOutput) ToDeliveryStreamKmsEncryptionConfigOutput() DeliveryStreamKmsEncryptionConfigOutput {
	return o
}

func (o DeliveryStreamKmsEncryptionConfigOutput) ToDeliveryStreamKmsEncryptionConfigOutputWithContext(ctx context.Context) DeliveryStreamKmsEncryptionConfigOutput {
	return o
}

func (o DeliveryStreamKmsEncryptionConfigOutput) ToDeliveryStreamKmsEncryptionConfigPtrOutput() DeliveryStreamKmsEncryptionConfigPtrOutput {
	return o.ToDeliveryStreamKmsEncryptionConfigPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamKmsEncryptionConfigOutput) ToDeliveryStreamKmsEncryptionConfigPtrOutputWithContext(ctx context.Context) DeliveryStreamKmsEncryptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamKmsEncryptionConfig) *DeliveryStreamKmsEncryptionConfig {
		return &v
	}).(DeliveryStreamKmsEncryptionConfigPtrOutput)
}

// The Amazon Resource Name (ARN) of the AWS KMS encryption key that Amazon S3 uses to encrypt data delivered by the Kinesis Data Firehose stream. The key must belong to the same region as the destination S3 bucket.
func (o DeliveryStreamKmsEncryptionConfigOutput) AwskmsKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamKmsEncryptionConfig) string { return v.AwskmsKeyArn }).(pulumi.StringOutput)
}

type DeliveryStreamKmsEncryptionConfigPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamKmsEncryptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamKmsEncryptionConfig)(nil)).Elem()
}

func (o DeliveryStreamKmsEncryptionConfigPtrOutput) ToDeliveryStreamKmsEncryptionConfigPtrOutput() DeliveryStreamKmsEncryptionConfigPtrOutput {
	return o
}

func (o DeliveryStreamKmsEncryptionConfigPtrOutput) ToDeliveryStreamKmsEncryptionConfigPtrOutputWithContext(ctx context.Context) DeliveryStreamKmsEncryptionConfigPtrOutput {
	return o
}

func (o DeliveryStreamKmsEncryptionConfigPtrOutput) Elem() DeliveryStreamKmsEncryptionConfigOutput {
	return o.ApplyT(func(v *DeliveryStreamKmsEncryptionConfig) DeliveryStreamKmsEncryptionConfig {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamKmsEncryptionConfig
		return ret
	}).(DeliveryStreamKmsEncryptionConfigOutput)
}

// The Amazon Resource Name (ARN) of the AWS KMS encryption key that Amazon S3 uses to encrypt data delivered by the Kinesis Data Firehose stream. The key must belong to the same region as the destination S3 bucket.
func (o DeliveryStreamKmsEncryptionConfigPtrOutput) AwskmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamKmsEncryptionConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AwskmsKeyArn
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamMskSourceConfiguration struct {
	// The authentication configuration of the Amazon MSK cluster.
	AuthenticationConfiguration DeliveryStreamAuthenticationConfiguration `pulumi:"authenticationConfiguration"`
	// The ARN of the Amazon MSK cluster.
	MskClusterArn string `pulumi:"mskClusterArn"`
	// The topic name within the Amazon MSK cluster.
	TopicName string `pulumi:"topicName"`
}

// DeliveryStreamMskSourceConfigurationInput is an input type that accepts DeliveryStreamMskSourceConfigurationArgs and DeliveryStreamMskSourceConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamMskSourceConfigurationInput` via:
//
//	DeliveryStreamMskSourceConfigurationArgs{...}
type DeliveryStreamMskSourceConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamMskSourceConfigurationOutput() DeliveryStreamMskSourceConfigurationOutput
	ToDeliveryStreamMskSourceConfigurationOutputWithContext(context.Context) DeliveryStreamMskSourceConfigurationOutput
}

type DeliveryStreamMskSourceConfigurationArgs struct {
	// The authentication configuration of the Amazon MSK cluster.
	AuthenticationConfiguration DeliveryStreamAuthenticationConfigurationInput `pulumi:"authenticationConfiguration"`
	// The ARN of the Amazon MSK cluster.
	MskClusterArn pulumi.StringInput `pulumi:"mskClusterArn"`
	// The topic name within the Amazon MSK cluster.
	TopicName pulumi.StringInput `pulumi:"topicName"`
}

func (DeliveryStreamMskSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamMskSourceConfiguration)(nil)).Elem()
}

func (i DeliveryStreamMskSourceConfigurationArgs) ToDeliveryStreamMskSourceConfigurationOutput() DeliveryStreamMskSourceConfigurationOutput {
	return i.ToDeliveryStreamMskSourceConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamMskSourceConfigurationArgs) ToDeliveryStreamMskSourceConfigurationOutputWithContext(ctx context.Context) DeliveryStreamMskSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamMskSourceConfigurationOutput)
}

func (i DeliveryStreamMskSourceConfigurationArgs) ToDeliveryStreamMskSourceConfigurationPtrOutput() DeliveryStreamMskSourceConfigurationPtrOutput {
	return i.ToDeliveryStreamMskSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamMskSourceConfigurationArgs) ToDeliveryStreamMskSourceConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamMskSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamMskSourceConfigurationOutput).ToDeliveryStreamMskSourceConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamMskSourceConfigurationPtrInput is an input type that accepts DeliveryStreamMskSourceConfigurationArgs, DeliveryStreamMskSourceConfigurationPtr and DeliveryStreamMskSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamMskSourceConfigurationPtrInput` via:
//
//	        DeliveryStreamMskSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamMskSourceConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamMskSourceConfigurationPtrOutput() DeliveryStreamMskSourceConfigurationPtrOutput
	ToDeliveryStreamMskSourceConfigurationPtrOutputWithContext(context.Context) DeliveryStreamMskSourceConfigurationPtrOutput
}

type deliveryStreamMskSourceConfigurationPtrType DeliveryStreamMskSourceConfigurationArgs

func DeliveryStreamMskSourceConfigurationPtr(v *DeliveryStreamMskSourceConfigurationArgs) DeliveryStreamMskSourceConfigurationPtrInput {
	return (*deliveryStreamMskSourceConfigurationPtrType)(v)
}

func (*deliveryStreamMskSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamMskSourceConfiguration)(nil)).Elem()
}

func (i *deliveryStreamMskSourceConfigurationPtrType) ToDeliveryStreamMskSourceConfigurationPtrOutput() DeliveryStreamMskSourceConfigurationPtrOutput {
	return i.ToDeliveryStreamMskSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamMskSourceConfigurationPtrType) ToDeliveryStreamMskSourceConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamMskSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamMskSourceConfigurationPtrOutput)
}

type DeliveryStreamMskSourceConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamMskSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamMskSourceConfiguration)(nil)).Elem()
}

func (o DeliveryStreamMskSourceConfigurationOutput) ToDeliveryStreamMskSourceConfigurationOutput() DeliveryStreamMskSourceConfigurationOutput {
	return o
}

func (o DeliveryStreamMskSourceConfigurationOutput) ToDeliveryStreamMskSourceConfigurationOutputWithContext(ctx context.Context) DeliveryStreamMskSourceConfigurationOutput {
	return o
}

func (o DeliveryStreamMskSourceConfigurationOutput) ToDeliveryStreamMskSourceConfigurationPtrOutput() DeliveryStreamMskSourceConfigurationPtrOutput {
	return o.ToDeliveryStreamMskSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamMskSourceConfigurationOutput) ToDeliveryStreamMskSourceConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamMskSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamMskSourceConfiguration) *DeliveryStreamMskSourceConfiguration {
		return &v
	}).(DeliveryStreamMskSourceConfigurationPtrOutput)
}

// The authentication configuration of the Amazon MSK cluster.
func (o DeliveryStreamMskSourceConfigurationOutput) AuthenticationConfiguration() DeliveryStreamAuthenticationConfigurationOutput {
	return o.ApplyT(func(v DeliveryStreamMskSourceConfiguration) DeliveryStreamAuthenticationConfiguration {
		return v.AuthenticationConfiguration
	}).(DeliveryStreamAuthenticationConfigurationOutput)
}

// The ARN of the Amazon MSK cluster.
func (o DeliveryStreamMskSourceConfigurationOutput) MskClusterArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamMskSourceConfiguration) string { return v.MskClusterArn }).(pulumi.StringOutput)
}

// The topic name within the Amazon MSK cluster.
func (o DeliveryStreamMskSourceConfigurationOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamMskSourceConfiguration) string { return v.TopicName }).(pulumi.StringOutput)
}

type DeliveryStreamMskSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamMskSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamMskSourceConfiguration)(nil)).Elem()
}

func (o DeliveryStreamMskSourceConfigurationPtrOutput) ToDeliveryStreamMskSourceConfigurationPtrOutput() DeliveryStreamMskSourceConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamMskSourceConfigurationPtrOutput) ToDeliveryStreamMskSourceConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamMskSourceConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamMskSourceConfigurationPtrOutput) Elem() DeliveryStreamMskSourceConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamMskSourceConfiguration) DeliveryStreamMskSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamMskSourceConfiguration
		return ret
	}).(DeliveryStreamMskSourceConfigurationOutput)
}

// The authentication configuration of the Amazon MSK cluster.
func (o DeliveryStreamMskSourceConfigurationPtrOutput) AuthenticationConfiguration() DeliveryStreamAuthenticationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamMskSourceConfiguration) *DeliveryStreamAuthenticationConfiguration {
		if v == nil {
			return nil
		}
		return &v.AuthenticationConfiguration
	}).(DeliveryStreamAuthenticationConfigurationPtrOutput)
}

// The ARN of the Amazon MSK cluster.
func (o DeliveryStreamMskSourceConfigurationPtrOutput) MskClusterArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamMskSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.MskClusterArn
	}).(pulumi.StringPtrOutput)
}

// The topic name within the Amazon MSK cluster.
func (o DeliveryStreamMskSourceConfigurationPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamMskSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TopicName
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamOpenXJsonSerDe struct {
	// When set to `true` , which is the default, Firehose converts JSON keys to lowercase before deserializing them.
	CaseInsensitive *bool `pulumi:"caseInsensitive"`
	// Maps column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, `timestamp` is a Hive keyword. If you have a JSON key named `timestamp` , set this parameter to `{"ts": "timestamp"}` to map this key to a column named `ts` .
	ColumnToJsonKeyMappings map[string]string `pulumi:"columnToJsonKeyMappings"`
	// When set to `true` , specifies that the names of the keys include dots and that you want Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "a_b" when using this option.
	//
	// The default is `false` .
	ConvertDotsInJsonKeysToUnderscores *bool `pulumi:"convertDotsInJsonKeysToUnderscores"`
}

// DeliveryStreamOpenXJsonSerDeInput is an input type that accepts DeliveryStreamOpenXJsonSerDeArgs and DeliveryStreamOpenXJsonSerDeOutput values.
// You can construct a concrete instance of `DeliveryStreamOpenXJsonSerDeInput` via:
//
//	DeliveryStreamOpenXJsonSerDeArgs{...}
type DeliveryStreamOpenXJsonSerDeInput interface {
	pulumi.Input

	ToDeliveryStreamOpenXJsonSerDeOutput() DeliveryStreamOpenXJsonSerDeOutput
	ToDeliveryStreamOpenXJsonSerDeOutputWithContext(context.Context) DeliveryStreamOpenXJsonSerDeOutput
}

type DeliveryStreamOpenXJsonSerDeArgs struct {
	// When set to `true` , which is the default, Firehose converts JSON keys to lowercase before deserializing them.
	CaseInsensitive pulumi.BoolPtrInput `pulumi:"caseInsensitive"`
	// Maps column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, `timestamp` is a Hive keyword. If you have a JSON key named `timestamp` , set this parameter to `{"ts": "timestamp"}` to map this key to a column named `ts` .
	ColumnToJsonKeyMappings pulumi.StringMapInput `pulumi:"columnToJsonKeyMappings"`
	// When set to `true` , specifies that the names of the keys include dots and that you want Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "a_b" when using this option.
	//
	// The default is `false` .
	ConvertDotsInJsonKeysToUnderscores pulumi.BoolPtrInput `pulumi:"convertDotsInJsonKeysToUnderscores"`
}

func (DeliveryStreamOpenXJsonSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamOpenXJsonSerDe)(nil)).Elem()
}

func (i DeliveryStreamOpenXJsonSerDeArgs) ToDeliveryStreamOpenXJsonSerDeOutput() DeliveryStreamOpenXJsonSerDeOutput {
	return i.ToDeliveryStreamOpenXJsonSerDeOutputWithContext(context.Background())
}

func (i DeliveryStreamOpenXJsonSerDeArgs) ToDeliveryStreamOpenXJsonSerDeOutputWithContext(ctx context.Context) DeliveryStreamOpenXJsonSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamOpenXJsonSerDeOutput)
}

func (i DeliveryStreamOpenXJsonSerDeArgs) ToDeliveryStreamOpenXJsonSerDePtrOutput() DeliveryStreamOpenXJsonSerDePtrOutput {
	return i.ToDeliveryStreamOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (i DeliveryStreamOpenXJsonSerDeArgs) ToDeliveryStreamOpenXJsonSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamOpenXJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamOpenXJsonSerDeOutput).ToDeliveryStreamOpenXJsonSerDePtrOutputWithContext(ctx)
}

// DeliveryStreamOpenXJsonSerDePtrInput is an input type that accepts DeliveryStreamOpenXJsonSerDeArgs, DeliveryStreamOpenXJsonSerDePtr and DeliveryStreamOpenXJsonSerDePtrOutput values.
// You can construct a concrete instance of `DeliveryStreamOpenXJsonSerDePtrInput` via:
//
//	        DeliveryStreamOpenXJsonSerDeArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamOpenXJsonSerDePtrInput interface {
	pulumi.Input

	ToDeliveryStreamOpenXJsonSerDePtrOutput() DeliveryStreamOpenXJsonSerDePtrOutput
	ToDeliveryStreamOpenXJsonSerDePtrOutputWithContext(context.Context) DeliveryStreamOpenXJsonSerDePtrOutput
}

type deliveryStreamOpenXJsonSerDePtrType DeliveryStreamOpenXJsonSerDeArgs

func DeliveryStreamOpenXJsonSerDePtr(v *DeliveryStreamOpenXJsonSerDeArgs) DeliveryStreamOpenXJsonSerDePtrInput {
	return (*deliveryStreamOpenXJsonSerDePtrType)(v)
}

func (*deliveryStreamOpenXJsonSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamOpenXJsonSerDe)(nil)).Elem()
}

func (i *deliveryStreamOpenXJsonSerDePtrType) ToDeliveryStreamOpenXJsonSerDePtrOutput() DeliveryStreamOpenXJsonSerDePtrOutput {
	return i.ToDeliveryStreamOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (i *deliveryStreamOpenXJsonSerDePtrType) ToDeliveryStreamOpenXJsonSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamOpenXJsonSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamOpenXJsonSerDePtrOutput)
}

type DeliveryStreamOpenXJsonSerDeOutput struct{ *pulumi.OutputState }

func (DeliveryStreamOpenXJsonSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamOpenXJsonSerDe)(nil)).Elem()
}

func (o DeliveryStreamOpenXJsonSerDeOutput) ToDeliveryStreamOpenXJsonSerDeOutput() DeliveryStreamOpenXJsonSerDeOutput {
	return o
}

func (o DeliveryStreamOpenXJsonSerDeOutput) ToDeliveryStreamOpenXJsonSerDeOutputWithContext(ctx context.Context) DeliveryStreamOpenXJsonSerDeOutput {
	return o
}

func (o DeliveryStreamOpenXJsonSerDeOutput) ToDeliveryStreamOpenXJsonSerDePtrOutput() DeliveryStreamOpenXJsonSerDePtrOutput {
	return o.ToDeliveryStreamOpenXJsonSerDePtrOutputWithContext(context.Background())
}

func (o DeliveryStreamOpenXJsonSerDeOutput) ToDeliveryStreamOpenXJsonSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamOpenXJsonSerDePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamOpenXJsonSerDe) *DeliveryStreamOpenXJsonSerDe {
		return &v
	}).(DeliveryStreamOpenXJsonSerDePtrOutput)
}

// When set to `true` , which is the default, Firehose converts JSON keys to lowercase before deserializing them.
func (o DeliveryStreamOpenXJsonSerDeOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeliveryStreamOpenXJsonSerDe) *bool { return v.CaseInsensitive }).(pulumi.BoolPtrOutput)
}

// Maps column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, `timestamp` is a Hive keyword. If you have a JSON key named `timestamp` , set this parameter to `{"ts": "timestamp"}` to map this key to a column named `ts` .
func (o DeliveryStreamOpenXJsonSerDeOutput) ColumnToJsonKeyMappings() pulumi.StringMapOutput {
	return o.ApplyT(func(v DeliveryStreamOpenXJsonSerDe) map[string]string { return v.ColumnToJsonKeyMappings }).(pulumi.StringMapOutput)
}

// When set to `true` , specifies that the names of the keys include dots and that you want Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "a_b" when using this option.
//
// The default is `false` .
func (o DeliveryStreamOpenXJsonSerDeOutput) ConvertDotsInJsonKeysToUnderscores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeliveryStreamOpenXJsonSerDe) *bool { return v.ConvertDotsInJsonKeysToUnderscores }).(pulumi.BoolPtrOutput)
}

type DeliveryStreamOpenXJsonSerDePtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamOpenXJsonSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamOpenXJsonSerDe)(nil)).Elem()
}

func (o DeliveryStreamOpenXJsonSerDePtrOutput) ToDeliveryStreamOpenXJsonSerDePtrOutput() DeliveryStreamOpenXJsonSerDePtrOutput {
	return o
}

func (o DeliveryStreamOpenXJsonSerDePtrOutput) ToDeliveryStreamOpenXJsonSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamOpenXJsonSerDePtrOutput {
	return o
}

func (o DeliveryStreamOpenXJsonSerDePtrOutput) Elem() DeliveryStreamOpenXJsonSerDeOutput {
	return o.ApplyT(func(v *DeliveryStreamOpenXJsonSerDe) DeliveryStreamOpenXJsonSerDe {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamOpenXJsonSerDe
		return ret
	}).(DeliveryStreamOpenXJsonSerDeOutput)
}

// When set to `true` , which is the default, Firehose converts JSON keys to lowercase before deserializing them.
func (o DeliveryStreamOpenXJsonSerDePtrOutput) CaseInsensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamOpenXJsonSerDe) *bool {
		if v == nil {
			return nil
		}
		return v.CaseInsensitive
	}).(pulumi.BoolPtrOutput)
}

// Maps column names to JSON keys that aren't identical to the column names. This is useful when the JSON contains keys that are Hive keywords. For example, `timestamp` is a Hive keyword. If you have a JSON key named `timestamp` , set this parameter to `{"ts": "timestamp"}` to map this key to a column named `ts` .
func (o DeliveryStreamOpenXJsonSerDePtrOutput) ColumnToJsonKeyMappings() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeliveryStreamOpenXJsonSerDe) map[string]string {
		if v == nil {
			return nil
		}
		return v.ColumnToJsonKeyMappings
	}).(pulumi.StringMapOutput)
}

// When set to `true` , specifies that the names of the keys include dots and that you want Firehose to replace them with underscores. This is useful because Apache Hive does not allow dots in column names. For example, if the JSON contains a key whose name is "a.b", you can define the column name to be "a_b" when using this option.
//
// The default is `false` .
func (o DeliveryStreamOpenXJsonSerDePtrOutput) ConvertDotsInJsonKeysToUnderscores() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamOpenXJsonSerDe) *bool {
		if v == nil {
			return nil
		}
		return v.ConvertDotsInJsonKeysToUnderscores
	}).(pulumi.BoolPtrOutput)
}

type DeliveryStreamOrcSerDe struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Firehose uses this value for padding calculations.
	BlockSizeBytes *int `pulumi:"blockSizeBytes"`
	// The column names for which you want Firehose to create bloom filters. The default is `null` .
	BloomFilterColumns []string `pulumi:"bloomFilterColumns"`
	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.
	BloomFilterFalsePositiveProbability *float64 `pulumi:"bloomFilterFalsePositiveProbability"`
	// The compression code to use over data blocks. The default is `SNAPPY` .
	Compression *string `pulumi:"compression"`
	// Represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.
	DictionaryKeyThreshold *float64 `pulumi:"dictionaryKeyThreshold"`
	// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false` .
	EnablePadding *bool `pulumi:"enablePadding"`
	// The version of the file to write. The possible values are `V0_11` and `V0_12` . The default is `V0_12` .
	FormatVersion *string `pulumi:"formatVersion"`
	// A number between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size.
	//
	// For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task.
	//
	// Kinesis Data Firehose ignores this parameter when `EnablePadding` is `false` .
	PaddingTolerance *float64 `pulumi:"paddingTolerance"`
	// The number of rows between index entries. The default is 10,000 and the minimum is 1,000.
	RowIndexStride *int `pulumi:"rowIndexStride"`
	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	StripeSizeBytes *int `pulumi:"stripeSizeBytes"`
}

// DeliveryStreamOrcSerDeInput is an input type that accepts DeliveryStreamOrcSerDeArgs and DeliveryStreamOrcSerDeOutput values.
// You can construct a concrete instance of `DeliveryStreamOrcSerDeInput` via:
//
//	DeliveryStreamOrcSerDeArgs{...}
type DeliveryStreamOrcSerDeInput interface {
	pulumi.Input

	ToDeliveryStreamOrcSerDeOutput() DeliveryStreamOrcSerDeOutput
	ToDeliveryStreamOrcSerDeOutputWithContext(context.Context) DeliveryStreamOrcSerDeOutput
}

type DeliveryStreamOrcSerDeArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Firehose uses this value for padding calculations.
	BlockSizeBytes pulumi.IntPtrInput `pulumi:"blockSizeBytes"`
	// The column names for which you want Firehose to create bloom filters. The default is `null` .
	BloomFilterColumns pulumi.StringArrayInput `pulumi:"bloomFilterColumns"`
	// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.
	BloomFilterFalsePositiveProbability pulumi.Float64PtrInput `pulumi:"bloomFilterFalsePositiveProbability"`
	// The compression code to use over data blocks. The default is `SNAPPY` .
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// Represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.
	DictionaryKeyThreshold pulumi.Float64PtrInput `pulumi:"dictionaryKeyThreshold"`
	// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false` .
	EnablePadding pulumi.BoolPtrInput `pulumi:"enablePadding"`
	// The version of the file to write. The possible values are `V0_11` and `V0_12` . The default is `V0_12` .
	FormatVersion pulumi.StringPtrInput `pulumi:"formatVersion"`
	// A number between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size.
	//
	// For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task.
	//
	// Kinesis Data Firehose ignores this parameter when `EnablePadding` is `false` .
	PaddingTolerance pulumi.Float64PtrInput `pulumi:"paddingTolerance"`
	// The number of rows between index entries. The default is 10,000 and the minimum is 1,000.
	RowIndexStride pulumi.IntPtrInput `pulumi:"rowIndexStride"`
	// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
	StripeSizeBytes pulumi.IntPtrInput `pulumi:"stripeSizeBytes"`
}

func (DeliveryStreamOrcSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamOrcSerDe)(nil)).Elem()
}

func (i DeliveryStreamOrcSerDeArgs) ToDeliveryStreamOrcSerDeOutput() DeliveryStreamOrcSerDeOutput {
	return i.ToDeliveryStreamOrcSerDeOutputWithContext(context.Background())
}

func (i DeliveryStreamOrcSerDeArgs) ToDeliveryStreamOrcSerDeOutputWithContext(ctx context.Context) DeliveryStreamOrcSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamOrcSerDeOutput)
}

func (i DeliveryStreamOrcSerDeArgs) ToDeliveryStreamOrcSerDePtrOutput() DeliveryStreamOrcSerDePtrOutput {
	return i.ToDeliveryStreamOrcSerDePtrOutputWithContext(context.Background())
}

func (i DeliveryStreamOrcSerDeArgs) ToDeliveryStreamOrcSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamOrcSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamOrcSerDeOutput).ToDeliveryStreamOrcSerDePtrOutputWithContext(ctx)
}

// DeliveryStreamOrcSerDePtrInput is an input type that accepts DeliveryStreamOrcSerDeArgs, DeliveryStreamOrcSerDePtr and DeliveryStreamOrcSerDePtrOutput values.
// You can construct a concrete instance of `DeliveryStreamOrcSerDePtrInput` via:
//
//	        DeliveryStreamOrcSerDeArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamOrcSerDePtrInput interface {
	pulumi.Input

	ToDeliveryStreamOrcSerDePtrOutput() DeliveryStreamOrcSerDePtrOutput
	ToDeliveryStreamOrcSerDePtrOutputWithContext(context.Context) DeliveryStreamOrcSerDePtrOutput
}

type deliveryStreamOrcSerDePtrType DeliveryStreamOrcSerDeArgs

func DeliveryStreamOrcSerDePtr(v *DeliveryStreamOrcSerDeArgs) DeliveryStreamOrcSerDePtrInput {
	return (*deliveryStreamOrcSerDePtrType)(v)
}

func (*deliveryStreamOrcSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamOrcSerDe)(nil)).Elem()
}

func (i *deliveryStreamOrcSerDePtrType) ToDeliveryStreamOrcSerDePtrOutput() DeliveryStreamOrcSerDePtrOutput {
	return i.ToDeliveryStreamOrcSerDePtrOutputWithContext(context.Background())
}

func (i *deliveryStreamOrcSerDePtrType) ToDeliveryStreamOrcSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamOrcSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamOrcSerDePtrOutput)
}

type DeliveryStreamOrcSerDeOutput struct{ *pulumi.OutputState }

func (DeliveryStreamOrcSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamOrcSerDe)(nil)).Elem()
}

func (o DeliveryStreamOrcSerDeOutput) ToDeliveryStreamOrcSerDeOutput() DeliveryStreamOrcSerDeOutput {
	return o
}

func (o DeliveryStreamOrcSerDeOutput) ToDeliveryStreamOrcSerDeOutputWithContext(ctx context.Context) DeliveryStreamOrcSerDeOutput {
	return o
}

func (o DeliveryStreamOrcSerDeOutput) ToDeliveryStreamOrcSerDePtrOutput() DeliveryStreamOrcSerDePtrOutput {
	return o.ToDeliveryStreamOrcSerDePtrOutputWithContext(context.Background())
}

func (o DeliveryStreamOrcSerDeOutput) ToDeliveryStreamOrcSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamOrcSerDePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamOrcSerDe) *DeliveryStreamOrcSerDe {
		return &v
	}).(DeliveryStreamOrcSerDePtrOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Firehose uses this value for padding calculations.
func (o DeliveryStreamOrcSerDeOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamOrcSerDe) *int { return v.BlockSizeBytes }).(pulumi.IntPtrOutput)
}

// The column names for which you want Firehose to create bloom filters. The default is `null` .
func (o DeliveryStreamOrcSerDeOutput) BloomFilterColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeliveryStreamOrcSerDe) []string { return v.BloomFilterColumns }).(pulumi.StringArrayOutput)
}

// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.
func (o DeliveryStreamOrcSerDeOutput) BloomFilterFalsePositiveProbability() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeliveryStreamOrcSerDe) *float64 { return v.BloomFilterFalsePositiveProbability }).(pulumi.Float64PtrOutput)
}

// The compression code to use over data blocks. The default is `SNAPPY` .
func (o DeliveryStreamOrcSerDeOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamOrcSerDe) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// Represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.
func (o DeliveryStreamOrcSerDeOutput) DictionaryKeyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeliveryStreamOrcSerDe) *float64 { return v.DictionaryKeyThreshold }).(pulumi.Float64PtrOutput)
}

// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false` .
func (o DeliveryStreamOrcSerDeOutput) EnablePadding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeliveryStreamOrcSerDe) *bool { return v.EnablePadding }).(pulumi.BoolPtrOutput)
}

// The version of the file to write. The possible values are `V0_11` and `V0_12` . The default is `V0_12` .
func (o DeliveryStreamOrcSerDeOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamOrcSerDe) *string { return v.FormatVersion }).(pulumi.StringPtrOutput)
}

// A number between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size.
//
// For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task.
//
// Kinesis Data Firehose ignores this parameter when `EnablePadding` is `false` .
func (o DeliveryStreamOrcSerDeOutput) PaddingTolerance() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DeliveryStreamOrcSerDe) *float64 { return v.PaddingTolerance }).(pulumi.Float64PtrOutput)
}

// The number of rows between index entries. The default is 10,000 and the minimum is 1,000.
func (o DeliveryStreamOrcSerDeOutput) RowIndexStride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamOrcSerDe) *int { return v.RowIndexStride }).(pulumi.IntPtrOutput)
}

// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
func (o DeliveryStreamOrcSerDeOutput) StripeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamOrcSerDe) *int { return v.StripeSizeBytes }).(pulumi.IntPtrOutput)
}

type DeliveryStreamOrcSerDePtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamOrcSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamOrcSerDe)(nil)).Elem()
}

func (o DeliveryStreamOrcSerDePtrOutput) ToDeliveryStreamOrcSerDePtrOutput() DeliveryStreamOrcSerDePtrOutput {
	return o
}

func (o DeliveryStreamOrcSerDePtrOutput) ToDeliveryStreamOrcSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamOrcSerDePtrOutput {
	return o
}

func (o DeliveryStreamOrcSerDePtrOutput) Elem() DeliveryStreamOrcSerDeOutput {
	return o.ApplyT(func(v *DeliveryStreamOrcSerDe) DeliveryStreamOrcSerDe {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamOrcSerDe
		return ret
	}).(DeliveryStreamOrcSerDeOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Firehose uses this value for padding calculations.
func (o DeliveryStreamOrcSerDePtrOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamOrcSerDe) *int {
		if v == nil {
			return nil
		}
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The column names for which you want Firehose to create bloom filters. The default is `null` .
func (o DeliveryStreamOrcSerDePtrOutput) BloomFilterColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeliveryStreamOrcSerDe) []string {
		if v == nil {
			return nil
		}
		return v.BloomFilterColumns
	}).(pulumi.StringArrayOutput)
}

// The Bloom filter false positive probability (FPP). The lower the FPP, the bigger the Bloom filter. The default value is 0.05, the minimum is 0, and the maximum is 1.
func (o DeliveryStreamOrcSerDePtrOutput) BloomFilterFalsePositiveProbability() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DeliveryStreamOrcSerDe) *float64 {
		if v == nil {
			return nil
		}
		return v.BloomFilterFalsePositiveProbability
	}).(pulumi.Float64PtrOutput)
}

// The compression code to use over data blocks. The default is `SNAPPY` .
func (o DeliveryStreamOrcSerDePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamOrcSerDe) *string {
		if v == nil {
			return nil
		}
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Represents the fraction of the total number of non-null rows. To turn off dictionary encoding, set this fraction to a number that is less than the number of distinct keys in a dictionary. To always use dictionary encoding, set this threshold to 1.
func (o DeliveryStreamOrcSerDePtrOutput) DictionaryKeyThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DeliveryStreamOrcSerDe) *float64 {
		if v == nil {
			return nil
		}
		return v.DictionaryKeyThreshold
	}).(pulumi.Float64PtrOutput)
}

// Set this to `true` to indicate that you want stripes to be padded to the HDFS block boundaries. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is `false` .
func (o DeliveryStreamOrcSerDePtrOutput) EnablePadding() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamOrcSerDe) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePadding
	}).(pulumi.BoolPtrOutput)
}

// The version of the file to write. The possible values are `V0_11` and `V0_12` . The default is `V0_12` .
func (o DeliveryStreamOrcSerDePtrOutput) FormatVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamOrcSerDe) *string {
		if v == nil {
			return nil
		}
		return v.FormatVersion
	}).(pulumi.StringPtrOutput)
}

// A number between 0 and 1 that defines the tolerance for block padding as a decimal fraction of stripe size. The default value is 0.05, which means 5 percent of stripe size.
//
// For the default values of 64 MiB ORC stripes and 256 MiB HDFS blocks, the default block padding tolerance of 5 percent reserves a maximum of 3.2 MiB for padding within the 256 MiB block. In such a case, if the available size within the block is more than 3.2 MiB, a new, smaller stripe is inserted to fit within that space. This ensures that no stripe crosses block boundaries and causes remote reads within a node-local task.
//
// Kinesis Data Firehose ignores this parameter when `EnablePadding` is `false` .
func (o DeliveryStreamOrcSerDePtrOutput) PaddingTolerance() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DeliveryStreamOrcSerDe) *float64 {
		if v == nil {
			return nil
		}
		return v.PaddingTolerance
	}).(pulumi.Float64PtrOutput)
}

// The number of rows between index entries. The default is 10,000 and the minimum is 1,000.
func (o DeliveryStreamOrcSerDePtrOutput) RowIndexStride() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamOrcSerDe) *int {
		if v == nil {
			return nil
		}
		return v.RowIndexStride
	}).(pulumi.IntPtrOutput)
}

// The number of bytes in each stripe. The default is 64 MiB and the minimum is 8 MiB.
func (o DeliveryStreamOrcSerDePtrOutput) StripeSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamOrcSerDe) *int {
		if v == nil {
			return nil
		}
		return v.StripeSizeBytes
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamOutputFormatConfiguration struct {
	// Specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. If both are non-null, the server rejects the request.
	Serializer *DeliveryStreamSerializer `pulumi:"serializer"`
}

// DeliveryStreamOutputFormatConfigurationInput is an input type that accepts DeliveryStreamOutputFormatConfigurationArgs and DeliveryStreamOutputFormatConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamOutputFormatConfigurationInput` via:
//
//	DeliveryStreamOutputFormatConfigurationArgs{...}
type DeliveryStreamOutputFormatConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamOutputFormatConfigurationOutput() DeliveryStreamOutputFormatConfigurationOutput
	ToDeliveryStreamOutputFormatConfigurationOutputWithContext(context.Context) DeliveryStreamOutputFormatConfigurationOutput
}

type DeliveryStreamOutputFormatConfigurationArgs struct {
	// Specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. If both are non-null, the server rejects the request.
	Serializer DeliveryStreamSerializerPtrInput `pulumi:"serializer"`
}

func (DeliveryStreamOutputFormatConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamOutputFormatConfiguration)(nil)).Elem()
}

func (i DeliveryStreamOutputFormatConfigurationArgs) ToDeliveryStreamOutputFormatConfigurationOutput() DeliveryStreamOutputFormatConfigurationOutput {
	return i.ToDeliveryStreamOutputFormatConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamOutputFormatConfigurationArgs) ToDeliveryStreamOutputFormatConfigurationOutputWithContext(ctx context.Context) DeliveryStreamOutputFormatConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamOutputFormatConfigurationOutput)
}

func (i DeliveryStreamOutputFormatConfigurationArgs) ToDeliveryStreamOutputFormatConfigurationPtrOutput() DeliveryStreamOutputFormatConfigurationPtrOutput {
	return i.ToDeliveryStreamOutputFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamOutputFormatConfigurationArgs) ToDeliveryStreamOutputFormatConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamOutputFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamOutputFormatConfigurationOutput).ToDeliveryStreamOutputFormatConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamOutputFormatConfigurationPtrInput is an input type that accepts DeliveryStreamOutputFormatConfigurationArgs, DeliveryStreamOutputFormatConfigurationPtr and DeliveryStreamOutputFormatConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamOutputFormatConfigurationPtrInput` via:
//
//	        DeliveryStreamOutputFormatConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamOutputFormatConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamOutputFormatConfigurationPtrOutput() DeliveryStreamOutputFormatConfigurationPtrOutput
	ToDeliveryStreamOutputFormatConfigurationPtrOutputWithContext(context.Context) DeliveryStreamOutputFormatConfigurationPtrOutput
}

type deliveryStreamOutputFormatConfigurationPtrType DeliveryStreamOutputFormatConfigurationArgs

func DeliveryStreamOutputFormatConfigurationPtr(v *DeliveryStreamOutputFormatConfigurationArgs) DeliveryStreamOutputFormatConfigurationPtrInput {
	return (*deliveryStreamOutputFormatConfigurationPtrType)(v)
}

func (*deliveryStreamOutputFormatConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamOutputFormatConfiguration)(nil)).Elem()
}

func (i *deliveryStreamOutputFormatConfigurationPtrType) ToDeliveryStreamOutputFormatConfigurationPtrOutput() DeliveryStreamOutputFormatConfigurationPtrOutput {
	return i.ToDeliveryStreamOutputFormatConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamOutputFormatConfigurationPtrType) ToDeliveryStreamOutputFormatConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamOutputFormatConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamOutputFormatConfigurationPtrOutput)
}

type DeliveryStreamOutputFormatConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamOutputFormatConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamOutputFormatConfiguration)(nil)).Elem()
}

func (o DeliveryStreamOutputFormatConfigurationOutput) ToDeliveryStreamOutputFormatConfigurationOutput() DeliveryStreamOutputFormatConfigurationOutput {
	return o
}

func (o DeliveryStreamOutputFormatConfigurationOutput) ToDeliveryStreamOutputFormatConfigurationOutputWithContext(ctx context.Context) DeliveryStreamOutputFormatConfigurationOutput {
	return o
}

func (o DeliveryStreamOutputFormatConfigurationOutput) ToDeliveryStreamOutputFormatConfigurationPtrOutput() DeliveryStreamOutputFormatConfigurationPtrOutput {
	return o.ToDeliveryStreamOutputFormatConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamOutputFormatConfigurationOutput) ToDeliveryStreamOutputFormatConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamOutputFormatConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamOutputFormatConfiguration) *DeliveryStreamOutputFormatConfiguration {
		return &v
	}).(DeliveryStreamOutputFormatConfigurationPtrOutput)
}

// Specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. If both are non-null, the server rejects the request.
func (o DeliveryStreamOutputFormatConfigurationOutput) Serializer() DeliveryStreamSerializerPtrOutput {
	return o.ApplyT(func(v DeliveryStreamOutputFormatConfiguration) *DeliveryStreamSerializer { return v.Serializer }).(DeliveryStreamSerializerPtrOutput)
}

type DeliveryStreamOutputFormatConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamOutputFormatConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamOutputFormatConfiguration)(nil)).Elem()
}

func (o DeliveryStreamOutputFormatConfigurationPtrOutput) ToDeliveryStreamOutputFormatConfigurationPtrOutput() DeliveryStreamOutputFormatConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamOutputFormatConfigurationPtrOutput) ToDeliveryStreamOutputFormatConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamOutputFormatConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamOutputFormatConfigurationPtrOutput) Elem() DeliveryStreamOutputFormatConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamOutputFormatConfiguration) DeliveryStreamOutputFormatConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamOutputFormatConfiguration
		return ret
	}).(DeliveryStreamOutputFormatConfigurationOutput)
}

// Specifies which serializer to use. You can choose either the ORC SerDe or the Parquet SerDe. If both are non-null, the server rejects the request.
func (o DeliveryStreamOutputFormatConfigurationPtrOutput) Serializer() DeliveryStreamSerializerPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamOutputFormatConfiguration) *DeliveryStreamSerializer {
		if v == nil {
			return nil
		}
		return v.Serializer
	}).(DeliveryStreamSerializerPtrOutput)
}

type DeliveryStreamParquetSerDe struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Firehose uses this value for padding calculations.
	BlockSizeBytes *int `pulumi:"blockSizeBytes"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED` , `SNAPPY` , and `GZIP` , with the default being `SNAPPY` . Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression *string `pulumi:"compression"`
	// Indicates whether to enable dictionary compression.
	EnableDictionaryCompression *bool `pulumi:"enableDictionaryCompression"`
	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.
	MaxPaddingBytes *int `pulumi:"maxPaddingBytes"`
	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	PageSizeBytes *int `pulumi:"pageSizeBytes"`
	// Indicates the version of row format to output. The possible values are `V1` and `V2` . The default is `V1` .
	WriterVersion *string `pulumi:"writerVersion"`
}

// DeliveryStreamParquetSerDeInput is an input type that accepts DeliveryStreamParquetSerDeArgs and DeliveryStreamParquetSerDeOutput values.
// You can construct a concrete instance of `DeliveryStreamParquetSerDeInput` via:
//
//	DeliveryStreamParquetSerDeArgs{...}
type DeliveryStreamParquetSerDeInput interface {
	pulumi.Input

	ToDeliveryStreamParquetSerDeOutput() DeliveryStreamParquetSerDeOutput
	ToDeliveryStreamParquetSerDeOutputWithContext(context.Context) DeliveryStreamParquetSerDeOutput
}

type DeliveryStreamParquetSerDeArgs struct {
	// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Firehose uses this value for padding calculations.
	BlockSizeBytes pulumi.IntPtrInput `pulumi:"blockSizeBytes"`
	// The compression code to use over data blocks. The possible values are `UNCOMPRESSED` , `SNAPPY` , and `GZIP` , with the default being `SNAPPY` . Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
	Compression pulumi.StringPtrInput `pulumi:"compression"`
	// Indicates whether to enable dictionary compression.
	EnableDictionaryCompression pulumi.BoolPtrInput `pulumi:"enableDictionaryCompression"`
	// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.
	MaxPaddingBytes pulumi.IntPtrInput `pulumi:"maxPaddingBytes"`
	// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
	PageSizeBytes pulumi.IntPtrInput `pulumi:"pageSizeBytes"`
	// Indicates the version of row format to output. The possible values are `V1` and `V2` . The default is `V1` .
	WriterVersion pulumi.StringPtrInput `pulumi:"writerVersion"`
}

func (DeliveryStreamParquetSerDeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamParquetSerDe)(nil)).Elem()
}

func (i DeliveryStreamParquetSerDeArgs) ToDeliveryStreamParquetSerDeOutput() DeliveryStreamParquetSerDeOutput {
	return i.ToDeliveryStreamParquetSerDeOutputWithContext(context.Background())
}

func (i DeliveryStreamParquetSerDeArgs) ToDeliveryStreamParquetSerDeOutputWithContext(ctx context.Context) DeliveryStreamParquetSerDeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamParquetSerDeOutput)
}

func (i DeliveryStreamParquetSerDeArgs) ToDeliveryStreamParquetSerDePtrOutput() DeliveryStreamParquetSerDePtrOutput {
	return i.ToDeliveryStreamParquetSerDePtrOutputWithContext(context.Background())
}

func (i DeliveryStreamParquetSerDeArgs) ToDeliveryStreamParquetSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamParquetSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamParquetSerDeOutput).ToDeliveryStreamParquetSerDePtrOutputWithContext(ctx)
}

// DeliveryStreamParquetSerDePtrInput is an input type that accepts DeliveryStreamParquetSerDeArgs, DeliveryStreamParquetSerDePtr and DeliveryStreamParquetSerDePtrOutput values.
// You can construct a concrete instance of `DeliveryStreamParquetSerDePtrInput` via:
//
//	        DeliveryStreamParquetSerDeArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamParquetSerDePtrInput interface {
	pulumi.Input

	ToDeliveryStreamParquetSerDePtrOutput() DeliveryStreamParquetSerDePtrOutput
	ToDeliveryStreamParquetSerDePtrOutputWithContext(context.Context) DeliveryStreamParquetSerDePtrOutput
}

type deliveryStreamParquetSerDePtrType DeliveryStreamParquetSerDeArgs

func DeliveryStreamParquetSerDePtr(v *DeliveryStreamParquetSerDeArgs) DeliveryStreamParquetSerDePtrInput {
	return (*deliveryStreamParquetSerDePtrType)(v)
}

func (*deliveryStreamParquetSerDePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamParquetSerDe)(nil)).Elem()
}

func (i *deliveryStreamParquetSerDePtrType) ToDeliveryStreamParquetSerDePtrOutput() DeliveryStreamParquetSerDePtrOutput {
	return i.ToDeliveryStreamParquetSerDePtrOutputWithContext(context.Background())
}

func (i *deliveryStreamParquetSerDePtrType) ToDeliveryStreamParquetSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamParquetSerDePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamParquetSerDePtrOutput)
}

type DeliveryStreamParquetSerDeOutput struct{ *pulumi.OutputState }

func (DeliveryStreamParquetSerDeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamParquetSerDe)(nil)).Elem()
}

func (o DeliveryStreamParquetSerDeOutput) ToDeliveryStreamParquetSerDeOutput() DeliveryStreamParquetSerDeOutput {
	return o
}

func (o DeliveryStreamParquetSerDeOutput) ToDeliveryStreamParquetSerDeOutputWithContext(ctx context.Context) DeliveryStreamParquetSerDeOutput {
	return o
}

func (o DeliveryStreamParquetSerDeOutput) ToDeliveryStreamParquetSerDePtrOutput() DeliveryStreamParquetSerDePtrOutput {
	return o.ToDeliveryStreamParquetSerDePtrOutputWithContext(context.Background())
}

func (o DeliveryStreamParquetSerDeOutput) ToDeliveryStreamParquetSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamParquetSerDePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamParquetSerDe) *DeliveryStreamParquetSerDe {
		return &v
	}).(DeliveryStreamParquetSerDePtrOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Firehose uses this value for padding calculations.
func (o DeliveryStreamParquetSerDeOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamParquetSerDe) *int { return v.BlockSizeBytes }).(pulumi.IntPtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED` , `SNAPPY` , and `GZIP` , with the default being `SNAPPY` . Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o DeliveryStreamParquetSerDeOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamParquetSerDe) *string { return v.Compression }).(pulumi.StringPtrOutput)
}

// Indicates whether to enable dictionary compression.
func (o DeliveryStreamParquetSerDeOutput) EnableDictionaryCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeliveryStreamParquetSerDe) *bool { return v.EnableDictionaryCompression }).(pulumi.BoolPtrOutput)
}

// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.
func (o DeliveryStreamParquetSerDeOutput) MaxPaddingBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamParquetSerDe) *int { return v.MaxPaddingBytes }).(pulumi.IntPtrOutput)
}

// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
func (o DeliveryStreamParquetSerDeOutput) PageSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamParquetSerDe) *int { return v.PageSizeBytes }).(pulumi.IntPtrOutput)
}

// Indicates the version of row format to output. The possible values are `V1` and `V2` . The default is `V1` .
func (o DeliveryStreamParquetSerDeOutput) WriterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamParquetSerDe) *string { return v.WriterVersion }).(pulumi.StringPtrOutput)
}

type DeliveryStreamParquetSerDePtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamParquetSerDePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamParquetSerDe)(nil)).Elem()
}

func (o DeliveryStreamParquetSerDePtrOutput) ToDeliveryStreamParquetSerDePtrOutput() DeliveryStreamParquetSerDePtrOutput {
	return o
}

func (o DeliveryStreamParquetSerDePtrOutput) ToDeliveryStreamParquetSerDePtrOutputWithContext(ctx context.Context) DeliveryStreamParquetSerDePtrOutput {
	return o
}

func (o DeliveryStreamParquetSerDePtrOutput) Elem() DeliveryStreamParquetSerDeOutput {
	return o.ApplyT(func(v *DeliveryStreamParquetSerDe) DeliveryStreamParquetSerDe {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamParquetSerDe
		return ret
	}).(DeliveryStreamParquetSerDeOutput)
}

// The Hadoop Distributed File System (HDFS) block size. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 256 MiB and the minimum is 64 MiB. Firehose uses this value for padding calculations.
func (o DeliveryStreamParquetSerDePtrOutput) BlockSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamParquetSerDe) *int {
		if v == nil {
			return nil
		}
		return v.BlockSizeBytes
	}).(pulumi.IntPtrOutput)
}

// The compression code to use over data blocks. The possible values are `UNCOMPRESSED` , `SNAPPY` , and `GZIP` , with the default being `SNAPPY` . Use `SNAPPY` for higher decompression speed. Use `GZIP` if the compression ratio is more important than speed.
func (o DeliveryStreamParquetSerDePtrOutput) Compression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamParquetSerDe) *string {
		if v == nil {
			return nil
		}
		return v.Compression
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable dictionary compression.
func (o DeliveryStreamParquetSerDePtrOutput) EnableDictionaryCompression() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamParquetSerDe) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDictionaryCompression
	}).(pulumi.BoolPtrOutput)
}

// The maximum amount of padding to apply. This is useful if you intend to copy the data from Amazon S3 to HDFS before querying. The default is 0.
func (o DeliveryStreamParquetSerDePtrOutput) MaxPaddingBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamParquetSerDe) *int {
		if v == nil {
			return nil
		}
		return v.MaxPaddingBytes
	}).(pulumi.IntPtrOutput)
}

// The Parquet page size. Column chunks are divided into pages. A page is conceptually an indivisible unit (in terms of compression and encoding). The minimum value is 64 KiB and the default is 1 MiB.
func (o DeliveryStreamParquetSerDePtrOutput) PageSizeBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamParquetSerDe) *int {
		if v == nil {
			return nil
		}
		return v.PageSizeBytes
	}).(pulumi.IntPtrOutput)
}

// Indicates the version of row format to output. The possible values are `V1` and `V2` . The default is `V1` .
func (o DeliveryStreamParquetSerDePtrOutput) WriterVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamParquetSerDe) *string {
		if v == nil {
			return nil
		}
		return v.WriterVersion
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamProcessingConfiguration struct {
	// Indicates whether data processing is enabled (true) or disabled (false).
	Enabled *bool `pulumi:"enabled"`
	// The data processors.
	Processors []DeliveryStreamProcessor `pulumi:"processors"`
}

// DeliveryStreamProcessingConfigurationInput is an input type that accepts DeliveryStreamProcessingConfigurationArgs and DeliveryStreamProcessingConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamProcessingConfigurationInput` via:
//
//	DeliveryStreamProcessingConfigurationArgs{...}
type DeliveryStreamProcessingConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamProcessingConfigurationOutput() DeliveryStreamProcessingConfigurationOutput
	ToDeliveryStreamProcessingConfigurationOutputWithContext(context.Context) DeliveryStreamProcessingConfigurationOutput
}

type DeliveryStreamProcessingConfigurationArgs struct {
	// Indicates whether data processing is enabled (true) or disabled (false).
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The data processors.
	Processors DeliveryStreamProcessorArrayInput `pulumi:"processors"`
}

func (DeliveryStreamProcessingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamProcessingConfiguration)(nil)).Elem()
}

func (i DeliveryStreamProcessingConfigurationArgs) ToDeliveryStreamProcessingConfigurationOutput() DeliveryStreamProcessingConfigurationOutput {
	return i.ToDeliveryStreamProcessingConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamProcessingConfigurationArgs) ToDeliveryStreamProcessingConfigurationOutputWithContext(ctx context.Context) DeliveryStreamProcessingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamProcessingConfigurationOutput)
}

func (i DeliveryStreamProcessingConfigurationArgs) ToDeliveryStreamProcessingConfigurationPtrOutput() DeliveryStreamProcessingConfigurationPtrOutput {
	return i.ToDeliveryStreamProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamProcessingConfigurationArgs) ToDeliveryStreamProcessingConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamProcessingConfigurationOutput).ToDeliveryStreamProcessingConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamProcessingConfigurationPtrInput is an input type that accepts DeliveryStreamProcessingConfigurationArgs, DeliveryStreamProcessingConfigurationPtr and DeliveryStreamProcessingConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamProcessingConfigurationPtrInput` via:
//
//	        DeliveryStreamProcessingConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamProcessingConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamProcessingConfigurationPtrOutput() DeliveryStreamProcessingConfigurationPtrOutput
	ToDeliveryStreamProcessingConfigurationPtrOutputWithContext(context.Context) DeliveryStreamProcessingConfigurationPtrOutput
}

type deliveryStreamProcessingConfigurationPtrType DeliveryStreamProcessingConfigurationArgs

func DeliveryStreamProcessingConfigurationPtr(v *DeliveryStreamProcessingConfigurationArgs) DeliveryStreamProcessingConfigurationPtrInput {
	return (*deliveryStreamProcessingConfigurationPtrType)(v)
}

func (*deliveryStreamProcessingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamProcessingConfiguration)(nil)).Elem()
}

func (i *deliveryStreamProcessingConfigurationPtrType) ToDeliveryStreamProcessingConfigurationPtrOutput() DeliveryStreamProcessingConfigurationPtrOutput {
	return i.ToDeliveryStreamProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamProcessingConfigurationPtrType) ToDeliveryStreamProcessingConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamProcessingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamProcessingConfigurationPtrOutput)
}

type DeliveryStreamProcessingConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamProcessingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamProcessingConfiguration)(nil)).Elem()
}

func (o DeliveryStreamProcessingConfigurationOutput) ToDeliveryStreamProcessingConfigurationOutput() DeliveryStreamProcessingConfigurationOutput {
	return o
}

func (o DeliveryStreamProcessingConfigurationOutput) ToDeliveryStreamProcessingConfigurationOutputWithContext(ctx context.Context) DeliveryStreamProcessingConfigurationOutput {
	return o
}

func (o DeliveryStreamProcessingConfigurationOutput) ToDeliveryStreamProcessingConfigurationPtrOutput() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ToDeliveryStreamProcessingConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamProcessingConfigurationOutput) ToDeliveryStreamProcessingConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamProcessingConfiguration) *DeliveryStreamProcessingConfiguration {
		return &v
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// Indicates whether data processing is enabled (true) or disabled (false).
func (o DeliveryStreamProcessingConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeliveryStreamProcessingConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The data processors.
func (o DeliveryStreamProcessingConfigurationOutput) Processors() DeliveryStreamProcessorArrayOutput {
	return o.ApplyT(func(v DeliveryStreamProcessingConfiguration) []DeliveryStreamProcessor { return v.Processors }).(DeliveryStreamProcessorArrayOutput)
}

type DeliveryStreamProcessingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamProcessingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamProcessingConfiguration)(nil)).Elem()
}

func (o DeliveryStreamProcessingConfigurationPtrOutput) ToDeliveryStreamProcessingConfigurationPtrOutput() DeliveryStreamProcessingConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamProcessingConfigurationPtrOutput) ToDeliveryStreamProcessingConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamProcessingConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamProcessingConfigurationPtrOutput) Elem() DeliveryStreamProcessingConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamProcessingConfiguration) DeliveryStreamProcessingConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamProcessingConfiguration
		return ret
	}).(DeliveryStreamProcessingConfigurationOutput)
}

// Indicates whether data processing is enabled (true) or disabled (false).
func (o DeliveryStreamProcessingConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamProcessingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The data processors.
func (o DeliveryStreamProcessingConfigurationPtrOutput) Processors() DeliveryStreamProcessorArrayOutput {
	return o.ApplyT(func(v *DeliveryStreamProcessingConfiguration) []DeliveryStreamProcessor {
		if v == nil {
			return nil
		}
		return v.Processors
	}).(DeliveryStreamProcessorArrayOutput)
}

type DeliveryStreamProcessor struct {
	// The processor parameters.
	Parameters []DeliveryStreamProcessorParameter `pulumi:"parameters"`
	// The type of processor. Valid values: `Lambda` .
	Type DeliveryStreamProcessorType `pulumi:"type"`
}

// DeliveryStreamProcessorInput is an input type that accepts DeliveryStreamProcessorArgs and DeliveryStreamProcessorOutput values.
// You can construct a concrete instance of `DeliveryStreamProcessorInput` via:
//
//	DeliveryStreamProcessorArgs{...}
type DeliveryStreamProcessorInput interface {
	pulumi.Input

	ToDeliveryStreamProcessorOutput() DeliveryStreamProcessorOutput
	ToDeliveryStreamProcessorOutputWithContext(context.Context) DeliveryStreamProcessorOutput
}

type DeliveryStreamProcessorArgs struct {
	// The processor parameters.
	Parameters DeliveryStreamProcessorParameterArrayInput `pulumi:"parameters"`
	// The type of processor. Valid values: `Lambda` .
	Type DeliveryStreamProcessorTypeInput `pulumi:"type"`
}

func (DeliveryStreamProcessorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamProcessor)(nil)).Elem()
}

func (i DeliveryStreamProcessorArgs) ToDeliveryStreamProcessorOutput() DeliveryStreamProcessorOutput {
	return i.ToDeliveryStreamProcessorOutputWithContext(context.Background())
}

func (i DeliveryStreamProcessorArgs) ToDeliveryStreamProcessorOutputWithContext(ctx context.Context) DeliveryStreamProcessorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamProcessorOutput)
}

// DeliveryStreamProcessorArrayInput is an input type that accepts DeliveryStreamProcessorArray and DeliveryStreamProcessorArrayOutput values.
// You can construct a concrete instance of `DeliveryStreamProcessorArrayInput` via:
//
//	DeliveryStreamProcessorArray{ DeliveryStreamProcessorArgs{...} }
type DeliveryStreamProcessorArrayInput interface {
	pulumi.Input

	ToDeliveryStreamProcessorArrayOutput() DeliveryStreamProcessorArrayOutput
	ToDeliveryStreamProcessorArrayOutputWithContext(context.Context) DeliveryStreamProcessorArrayOutput
}

type DeliveryStreamProcessorArray []DeliveryStreamProcessorInput

func (DeliveryStreamProcessorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryStreamProcessor)(nil)).Elem()
}

func (i DeliveryStreamProcessorArray) ToDeliveryStreamProcessorArrayOutput() DeliveryStreamProcessorArrayOutput {
	return i.ToDeliveryStreamProcessorArrayOutputWithContext(context.Background())
}

func (i DeliveryStreamProcessorArray) ToDeliveryStreamProcessorArrayOutputWithContext(ctx context.Context) DeliveryStreamProcessorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamProcessorArrayOutput)
}

type DeliveryStreamProcessorOutput struct{ *pulumi.OutputState }

func (DeliveryStreamProcessorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamProcessor)(nil)).Elem()
}

func (o DeliveryStreamProcessorOutput) ToDeliveryStreamProcessorOutput() DeliveryStreamProcessorOutput {
	return o
}

func (o DeliveryStreamProcessorOutput) ToDeliveryStreamProcessorOutputWithContext(ctx context.Context) DeliveryStreamProcessorOutput {
	return o
}

// The processor parameters.
func (o DeliveryStreamProcessorOutput) Parameters() DeliveryStreamProcessorParameterArrayOutput {
	return o.ApplyT(func(v DeliveryStreamProcessor) []DeliveryStreamProcessorParameter { return v.Parameters }).(DeliveryStreamProcessorParameterArrayOutput)
}

// The type of processor. Valid values: `Lambda` .
func (o DeliveryStreamProcessorOutput) Type() DeliveryStreamProcessorTypeOutput {
	return o.ApplyT(func(v DeliveryStreamProcessor) DeliveryStreamProcessorType { return v.Type }).(DeliveryStreamProcessorTypeOutput)
}

type DeliveryStreamProcessorArrayOutput struct{ *pulumi.OutputState }

func (DeliveryStreamProcessorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryStreamProcessor)(nil)).Elem()
}

func (o DeliveryStreamProcessorArrayOutput) ToDeliveryStreamProcessorArrayOutput() DeliveryStreamProcessorArrayOutput {
	return o
}

func (o DeliveryStreamProcessorArrayOutput) ToDeliveryStreamProcessorArrayOutputWithContext(ctx context.Context) DeliveryStreamProcessorArrayOutput {
	return o
}

func (o DeliveryStreamProcessorArrayOutput) Index(i pulumi.IntInput) DeliveryStreamProcessorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryStreamProcessor {
		return vs[0].([]DeliveryStreamProcessor)[vs[1].(int)]
	}).(DeliveryStreamProcessorOutput)
}

type DeliveryStreamProcessorParameter struct {
	// The name of the parameter. Currently the following default values are supported: 3 for `NumberOfRetries` and 60 for the `BufferIntervalInSeconds` . The `BufferSizeInMBs` ranges between 0.2 MB and up to 3MB. The default buffering hint is 1MB for all destinations, except Splunk. For Splunk, the default buffering hint is 256 KB.
	ParameterName string `pulumi:"parameterName"`
	// The parameter value.
	ParameterValue string `pulumi:"parameterValue"`
}

// DeliveryStreamProcessorParameterInput is an input type that accepts DeliveryStreamProcessorParameterArgs and DeliveryStreamProcessorParameterOutput values.
// You can construct a concrete instance of `DeliveryStreamProcessorParameterInput` via:
//
//	DeliveryStreamProcessorParameterArgs{...}
type DeliveryStreamProcessorParameterInput interface {
	pulumi.Input

	ToDeliveryStreamProcessorParameterOutput() DeliveryStreamProcessorParameterOutput
	ToDeliveryStreamProcessorParameterOutputWithContext(context.Context) DeliveryStreamProcessorParameterOutput
}

type DeliveryStreamProcessorParameterArgs struct {
	// The name of the parameter. Currently the following default values are supported: 3 for `NumberOfRetries` and 60 for the `BufferIntervalInSeconds` . The `BufferSizeInMBs` ranges between 0.2 MB and up to 3MB. The default buffering hint is 1MB for all destinations, except Splunk. For Splunk, the default buffering hint is 256 KB.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// The parameter value.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (DeliveryStreamProcessorParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamProcessorParameter)(nil)).Elem()
}

func (i DeliveryStreamProcessorParameterArgs) ToDeliveryStreamProcessorParameterOutput() DeliveryStreamProcessorParameterOutput {
	return i.ToDeliveryStreamProcessorParameterOutputWithContext(context.Background())
}

func (i DeliveryStreamProcessorParameterArgs) ToDeliveryStreamProcessorParameterOutputWithContext(ctx context.Context) DeliveryStreamProcessorParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamProcessorParameterOutput)
}

// DeliveryStreamProcessorParameterArrayInput is an input type that accepts DeliveryStreamProcessorParameterArray and DeliveryStreamProcessorParameterArrayOutput values.
// You can construct a concrete instance of `DeliveryStreamProcessorParameterArrayInput` via:
//
//	DeliveryStreamProcessorParameterArray{ DeliveryStreamProcessorParameterArgs{...} }
type DeliveryStreamProcessorParameterArrayInput interface {
	pulumi.Input

	ToDeliveryStreamProcessorParameterArrayOutput() DeliveryStreamProcessorParameterArrayOutput
	ToDeliveryStreamProcessorParameterArrayOutputWithContext(context.Context) DeliveryStreamProcessorParameterArrayOutput
}

type DeliveryStreamProcessorParameterArray []DeliveryStreamProcessorParameterInput

func (DeliveryStreamProcessorParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryStreamProcessorParameter)(nil)).Elem()
}

func (i DeliveryStreamProcessorParameterArray) ToDeliveryStreamProcessorParameterArrayOutput() DeliveryStreamProcessorParameterArrayOutput {
	return i.ToDeliveryStreamProcessorParameterArrayOutputWithContext(context.Background())
}

func (i DeliveryStreamProcessorParameterArray) ToDeliveryStreamProcessorParameterArrayOutputWithContext(ctx context.Context) DeliveryStreamProcessorParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamProcessorParameterArrayOutput)
}

type DeliveryStreamProcessorParameterOutput struct{ *pulumi.OutputState }

func (DeliveryStreamProcessorParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamProcessorParameter)(nil)).Elem()
}

func (o DeliveryStreamProcessorParameterOutput) ToDeliveryStreamProcessorParameterOutput() DeliveryStreamProcessorParameterOutput {
	return o
}

func (o DeliveryStreamProcessorParameterOutput) ToDeliveryStreamProcessorParameterOutputWithContext(ctx context.Context) DeliveryStreamProcessorParameterOutput {
	return o
}

// The name of the parameter. Currently the following default values are supported: 3 for `NumberOfRetries` and 60 for the `BufferIntervalInSeconds` . The `BufferSizeInMBs` ranges between 0.2 MB and up to 3MB. The default buffering hint is 1MB for all destinations, except Splunk. For Splunk, the default buffering hint is 256 KB.
func (o DeliveryStreamProcessorParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamProcessorParameter) string { return v.ParameterName }).(pulumi.StringOutput)
}

// The parameter value.
func (o DeliveryStreamProcessorParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamProcessorParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type DeliveryStreamProcessorParameterArrayOutput struct{ *pulumi.OutputState }

func (DeliveryStreamProcessorParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeliveryStreamProcessorParameter)(nil)).Elem()
}

func (o DeliveryStreamProcessorParameterArrayOutput) ToDeliveryStreamProcessorParameterArrayOutput() DeliveryStreamProcessorParameterArrayOutput {
	return o
}

func (o DeliveryStreamProcessorParameterArrayOutput) ToDeliveryStreamProcessorParameterArrayOutputWithContext(ctx context.Context) DeliveryStreamProcessorParameterArrayOutput {
	return o
}

func (o DeliveryStreamProcessorParameterArrayOutput) Index(i pulumi.IntInput) DeliveryStreamProcessorParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeliveryStreamProcessorParameter {
		return vs[0].([]DeliveryStreamProcessorParameter)[vs[1].(int)]
	}).(DeliveryStreamProcessorParameterOutput)
}

type DeliveryStreamRedshiftDestinationConfiguration struct {
	// The CloudWatch logging options for your delivery stream.
	CloudWatchLoggingOptions *DeliveryStreamCloudWatchLoggingOptions `pulumi:"cloudWatchLoggingOptions"`
	// The connection string that Kinesis Data Firehose uses to connect to the Amazon Redshift cluster.
	ClusterJdbcurl string `pulumi:"clusterJdbcurl"`
	// Configures the Amazon Redshift `COPY` command that Kinesis Data Firehose uses to load data into the cluster from the Amazon S3 bucket.
	CopyCommand DeliveryStreamCopyCommand `pulumi:"copyCommand"`
	// The password for the Amazon Redshift user that you specified in the `Username` property.
	Password *string `pulumi:"password"`
	// The data processing configuration for the Kinesis Data Firehose delivery stream.
	ProcessingConfiguration *DeliveryStreamProcessingConfiguration `pulumi:"processingConfiguration"`
	// The retry behavior in case Firehose is unable to deliver documents to Amazon Redshift. Default value is 3600 (60 minutes).
	RetryOptions *DeliveryStreamRedshiftRetryOptions `pulumi:"retryOptions"`
	// The ARN of the AWS Identity and Access Management (IAM) role that grants Kinesis Data Firehose access to your Amazon S3 bucket and AWS KMS (if you enable data encryption). For more information, see [Grant Kinesis Data Firehose Access to an Amazon Redshift Destination](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-rs) in the *Amazon Kinesis Data Firehose Developer Guide* .
	RoleArn string `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3.
	S3BackupConfiguration *DeliveryStreamS3DestinationConfiguration `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode. After you create a delivery stream, you can update it to enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update the delivery stream to disable it.
	S3BackupMode *DeliveryStreamRedshiftDestinationConfigurationS3BackupMode `pulumi:"s3BackupMode"`
	// The S3 bucket where Kinesis Data Firehose first delivers data. After the data is in the bucket, Kinesis Data Firehose uses the `COPY` command to load the data into the Amazon Redshift cluster. For the Amazon S3 bucket's compression format, don't specify `SNAPPY` or `ZIP` because the Amazon Redshift `COPY` command doesn't support them.
	S3Configuration DeliveryStreamS3DestinationConfiguration `pulumi:"s3Configuration"`
	// The configuration that defines how you access secrets for Amazon Redshift.
	SecretsManagerConfiguration *DeliveryStreamSecretsManagerConfiguration `pulumi:"secretsManagerConfiguration"`
	// The Amazon Redshift user that has permission to access the Amazon Redshift cluster. This user must have `INSERT` privileges for copying data from the Amazon S3 bucket to the cluster.
	Username *string `pulumi:"username"`
}

// DeliveryStreamRedshiftDestinationConfigurationInput is an input type that accepts DeliveryStreamRedshiftDestinationConfigurationArgs and DeliveryStreamRedshiftDestinationConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamRedshiftDestinationConfigurationInput` via:
//
//	DeliveryStreamRedshiftDestinationConfigurationArgs{...}
type DeliveryStreamRedshiftDestinationConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamRedshiftDestinationConfigurationOutput() DeliveryStreamRedshiftDestinationConfigurationOutput
	ToDeliveryStreamRedshiftDestinationConfigurationOutputWithContext(context.Context) DeliveryStreamRedshiftDestinationConfigurationOutput
}

type DeliveryStreamRedshiftDestinationConfigurationArgs struct {
	// The CloudWatch logging options for your delivery stream.
	CloudWatchLoggingOptions DeliveryStreamCloudWatchLoggingOptionsPtrInput `pulumi:"cloudWatchLoggingOptions"`
	// The connection string that Kinesis Data Firehose uses to connect to the Amazon Redshift cluster.
	ClusterJdbcurl pulumi.StringInput `pulumi:"clusterJdbcurl"`
	// Configures the Amazon Redshift `COPY` command that Kinesis Data Firehose uses to load data into the cluster from the Amazon S3 bucket.
	CopyCommand DeliveryStreamCopyCommandInput `pulumi:"copyCommand"`
	// The password for the Amazon Redshift user that you specified in the `Username` property.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The data processing configuration for the Kinesis Data Firehose delivery stream.
	ProcessingConfiguration DeliveryStreamProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The retry behavior in case Firehose is unable to deliver documents to Amazon Redshift. Default value is 3600 (60 minutes).
	RetryOptions DeliveryStreamRedshiftRetryOptionsPtrInput `pulumi:"retryOptions"`
	// The ARN of the AWS Identity and Access Management (IAM) role that grants Kinesis Data Firehose access to your Amazon S3 bucket and AWS KMS (if you enable data encryption). For more information, see [Grant Kinesis Data Firehose Access to an Amazon Redshift Destination](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-rs) in the *Amazon Kinesis Data Firehose Developer Guide* .
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The configuration for backup in Amazon S3.
	S3BackupConfiguration DeliveryStreamS3DestinationConfigurationPtrInput `pulumi:"s3BackupConfiguration"`
	// The Amazon S3 backup mode. After you create a delivery stream, you can update it to enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update the delivery stream to disable it.
	S3BackupMode DeliveryStreamRedshiftDestinationConfigurationS3BackupModePtrInput `pulumi:"s3BackupMode"`
	// The S3 bucket where Kinesis Data Firehose first delivers data. After the data is in the bucket, Kinesis Data Firehose uses the `COPY` command to load the data into the Amazon Redshift cluster. For the Amazon S3 bucket's compression format, don't specify `SNAPPY` or `ZIP` because the Amazon Redshift `COPY` command doesn't support them.
	S3Configuration DeliveryStreamS3DestinationConfigurationInput `pulumi:"s3Configuration"`
	// The configuration that defines how you access secrets for Amazon Redshift.
	SecretsManagerConfiguration DeliveryStreamSecretsManagerConfigurationPtrInput `pulumi:"secretsManagerConfiguration"`
	// The Amazon Redshift user that has permission to access the Amazon Redshift cluster. This user must have `INSERT` privileges for copying data from the Amazon S3 bucket to the cluster.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (DeliveryStreamRedshiftDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamRedshiftDestinationConfiguration)(nil)).Elem()
}

func (i DeliveryStreamRedshiftDestinationConfigurationArgs) ToDeliveryStreamRedshiftDestinationConfigurationOutput() DeliveryStreamRedshiftDestinationConfigurationOutput {
	return i.ToDeliveryStreamRedshiftDestinationConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamRedshiftDestinationConfigurationArgs) ToDeliveryStreamRedshiftDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamRedshiftDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamRedshiftDestinationConfigurationOutput)
}

func (i DeliveryStreamRedshiftDestinationConfigurationArgs) ToDeliveryStreamRedshiftDestinationConfigurationPtrOutput() DeliveryStreamRedshiftDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamRedshiftDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamRedshiftDestinationConfigurationArgs) ToDeliveryStreamRedshiftDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamRedshiftDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamRedshiftDestinationConfigurationOutput).ToDeliveryStreamRedshiftDestinationConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamRedshiftDestinationConfigurationPtrInput is an input type that accepts DeliveryStreamRedshiftDestinationConfigurationArgs, DeliveryStreamRedshiftDestinationConfigurationPtr and DeliveryStreamRedshiftDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamRedshiftDestinationConfigurationPtrInput` via:
//
//	        DeliveryStreamRedshiftDestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamRedshiftDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamRedshiftDestinationConfigurationPtrOutput() DeliveryStreamRedshiftDestinationConfigurationPtrOutput
	ToDeliveryStreamRedshiftDestinationConfigurationPtrOutputWithContext(context.Context) DeliveryStreamRedshiftDestinationConfigurationPtrOutput
}

type deliveryStreamRedshiftDestinationConfigurationPtrType DeliveryStreamRedshiftDestinationConfigurationArgs

func DeliveryStreamRedshiftDestinationConfigurationPtr(v *DeliveryStreamRedshiftDestinationConfigurationArgs) DeliveryStreamRedshiftDestinationConfigurationPtrInput {
	return (*deliveryStreamRedshiftDestinationConfigurationPtrType)(v)
}

func (*deliveryStreamRedshiftDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamRedshiftDestinationConfiguration)(nil)).Elem()
}

func (i *deliveryStreamRedshiftDestinationConfigurationPtrType) ToDeliveryStreamRedshiftDestinationConfigurationPtrOutput() DeliveryStreamRedshiftDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamRedshiftDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamRedshiftDestinationConfigurationPtrType) ToDeliveryStreamRedshiftDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamRedshiftDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamRedshiftDestinationConfigurationPtrOutput)
}

type DeliveryStreamRedshiftDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamRedshiftDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamRedshiftDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamRedshiftDestinationConfigurationOutput) ToDeliveryStreamRedshiftDestinationConfigurationOutput() DeliveryStreamRedshiftDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamRedshiftDestinationConfigurationOutput) ToDeliveryStreamRedshiftDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamRedshiftDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamRedshiftDestinationConfigurationOutput) ToDeliveryStreamRedshiftDestinationConfigurationPtrOutput() DeliveryStreamRedshiftDestinationConfigurationPtrOutput {
	return o.ToDeliveryStreamRedshiftDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamRedshiftDestinationConfigurationOutput) ToDeliveryStreamRedshiftDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamRedshiftDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamRedshiftDestinationConfiguration {
		return &v
	}).(DeliveryStreamRedshiftDestinationConfigurationPtrOutput)
}

// The CloudWatch logging options for your delivery stream.
func (o DeliveryStreamRedshiftDestinationConfigurationOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The connection string that Kinesis Data Firehose uses to connect to the Amazon Redshift cluster.
func (o DeliveryStreamRedshiftDestinationConfigurationOutput) ClusterJdbcurl() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftDestinationConfiguration) string { return v.ClusterJdbcurl }).(pulumi.StringOutput)
}

// Configures the Amazon Redshift `COPY` command that Kinesis Data Firehose uses to load data into the cluster from the Amazon S3 bucket.
func (o DeliveryStreamRedshiftDestinationConfigurationOutput) CopyCommand() DeliveryStreamCopyCommandOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftDestinationConfiguration) DeliveryStreamCopyCommand { return v.CopyCommand }).(DeliveryStreamCopyCommandOutput)
}

// The password for the Amazon Redshift user that you specified in the `Username` property.
func (o DeliveryStreamRedshiftDestinationConfigurationOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftDestinationConfiguration) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The data processing configuration for the Kinesis Data Firehose delivery stream.
func (o DeliveryStreamRedshiftDestinationConfigurationOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The retry behavior in case Firehose is unable to deliver documents to Amazon Redshift. Default value is 3600 (60 minutes).
func (o DeliveryStreamRedshiftDestinationConfigurationOutput) RetryOptions() DeliveryStreamRedshiftRetryOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamRedshiftRetryOptions {
		return v.RetryOptions
	}).(DeliveryStreamRedshiftRetryOptionsPtrOutput)
}

// The ARN of the AWS Identity and Access Management (IAM) role that grants Kinesis Data Firehose access to your Amazon S3 bucket and AWS KMS (if you enable data encryption). For more information, see [Grant Kinesis Data Firehose Access to an Amazon Redshift Destination](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-rs) in the *Amazon Kinesis Data Firehose Developer Guide* .
func (o DeliveryStreamRedshiftDestinationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftDestinationConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The configuration for backup in Amazon S3.
func (o DeliveryStreamRedshiftDestinationConfigurationOutput) S3BackupConfiguration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamS3DestinationConfiguration {
		return v.S3BackupConfiguration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// The Amazon S3 backup mode. After you create a delivery stream, you can update it to enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update the delivery stream to disable it.
func (o DeliveryStreamRedshiftDestinationConfigurationOutput) S3BackupMode() DeliveryStreamRedshiftDestinationConfigurationS3BackupModePtrOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamRedshiftDestinationConfigurationS3BackupMode {
		return v.S3BackupMode
	}).(DeliveryStreamRedshiftDestinationConfigurationS3BackupModePtrOutput)
}

// The S3 bucket where Kinesis Data Firehose first delivers data. After the data is in the bucket, Kinesis Data Firehose uses the `COPY` command to load the data into the Amazon Redshift cluster. For the Amazon S3 bucket's compression format, don't specify `SNAPPY` or `ZIP` because the Amazon Redshift `COPY` command doesn't support them.
func (o DeliveryStreamRedshiftDestinationConfigurationOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftDestinationConfiguration) DeliveryStreamS3DestinationConfiguration {
		return v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationOutput)
}

// The configuration that defines how you access secrets for Amazon Redshift.
func (o DeliveryStreamRedshiftDestinationConfigurationOutput) SecretsManagerConfiguration() DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamSecretsManagerConfiguration {
		return v.SecretsManagerConfiguration
	}).(DeliveryStreamSecretsManagerConfigurationPtrOutput)
}

// The Amazon Redshift user that has permission to access the Amazon Redshift cluster. This user must have `INSERT` privileges for copying data from the Amazon S3 bucket to the cluster.
func (o DeliveryStreamRedshiftDestinationConfigurationOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftDestinationConfiguration) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type DeliveryStreamRedshiftDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamRedshiftDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamRedshiftDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) ToDeliveryStreamRedshiftDestinationConfigurationPtrOutput() DeliveryStreamRedshiftDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) ToDeliveryStreamRedshiftDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamRedshiftDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) Elem() DeliveryStreamRedshiftDestinationConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) DeliveryStreamRedshiftDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamRedshiftDestinationConfiguration
		return ret
	}).(DeliveryStreamRedshiftDestinationConfigurationOutput)
}

// The CloudWatch logging options for your delivery stream.
func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The connection string that Kinesis Data Firehose uses to connect to the Amazon Redshift cluster.
func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) ClusterJdbcurl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ClusterJdbcurl
	}).(pulumi.StringPtrOutput)
}

// Configures the Amazon Redshift `COPY` command that Kinesis Data Firehose uses to load data into the cluster from the Amazon S3 bucket.
func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) CopyCommand() DeliveryStreamCopyCommandPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamCopyCommand {
		if v == nil {
			return nil
		}
		return &v.CopyCommand
	}).(DeliveryStreamCopyCommandPtrOutput)
}

// The password for the Amazon Redshift user that you specified in the `Username` property.
func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The data processing configuration for the Kinesis Data Firehose delivery stream.
func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The retry behavior in case Firehose is unable to deliver documents to Amazon Redshift. Default value is 3600 (60 minutes).
func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) RetryOptions() DeliveryStreamRedshiftRetryOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamRedshiftRetryOptions {
		if v == nil {
			return nil
		}
		return v.RetryOptions
	}).(DeliveryStreamRedshiftRetryOptionsPtrOutput)
}

// The ARN of the AWS Identity and Access Management (IAM) role that grants Kinesis Data Firehose access to your Amazon S3 bucket and AWS KMS (if you enable data encryption). For more information, see [Grant Kinesis Data Firehose Access to an Amazon Redshift Destination](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-rs) in the *Amazon Kinesis Data Firehose Developer Guide* .
func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The configuration for backup in Amazon S3.
func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) S3BackupConfiguration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamS3DestinationConfiguration {
		if v == nil {
			return nil
		}
		return v.S3BackupConfiguration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// The Amazon S3 backup mode. After you create a delivery stream, you can update it to enable Amazon S3 backup if it is disabled. If backup is enabled, you can't update the delivery stream to disable it.
func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) S3BackupMode() DeliveryStreamRedshiftDestinationConfigurationS3BackupModePtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamRedshiftDestinationConfigurationS3BackupMode {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(DeliveryStreamRedshiftDestinationConfigurationS3BackupModePtrOutput)
}

// The S3 bucket where Kinesis Data Firehose first delivers data. After the data is in the bucket, Kinesis Data Firehose uses the `COPY` command to load the data into the Amazon Redshift cluster. For the Amazon S3 bucket's compression format, don't specify `SNAPPY` or `ZIP` because the Amazon Redshift `COPY` command doesn't support them.
func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamS3DestinationConfiguration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// The configuration that defines how you access secrets for Amazon Redshift.
func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) SecretsManagerConfiguration() DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) *DeliveryStreamSecretsManagerConfiguration {
		if v == nil {
			return nil
		}
		return v.SecretsManagerConfiguration
	}).(DeliveryStreamSecretsManagerConfigurationPtrOutput)
}

// The Amazon Redshift user that has permission to access the Amazon Redshift cluster. This user must have `INSERT` privileges for copying data from the Amazon S3 bucket to the cluster.
func (o DeliveryStreamRedshiftDestinationConfigurationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamRedshiftRetryOptions struct {
	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of `DurationInSeconds` is 0 (zero) or if the first delivery attempt takes longer than the current value.
	DurationInSeconds *int `pulumi:"durationInSeconds"`
}

// DeliveryStreamRedshiftRetryOptionsInput is an input type that accepts DeliveryStreamRedshiftRetryOptionsArgs and DeliveryStreamRedshiftRetryOptionsOutput values.
// You can construct a concrete instance of `DeliveryStreamRedshiftRetryOptionsInput` via:
//
//	DeliveryStreamRedshiftRetryOptionsArgs{...}
type DeliveryStreamRedshiftRetryOptionsInput interface {
	pulumi.Input

	ToDeliveryStreamRedshiftRetryOptionsOutput() DeliveryStreamRedshiftRetryOptionsOutput
	ToDeliveryStreamRedshiftRetryOptionsOutputWithContext(context.Context) DeliveryStreamRedshiftRetryOptionsOutput
}

type DeliveryStreamRedshiftRetryOptionsArgs struct {
	// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of `DurationInSeconds` is 0 (zero) or if the first delivery attempt takes longer than the current value.
	DurationInSeconds pulumi.IntPtrInput `pulumi:"durationInSeconds"`
}

func (DeliveryStreamRedshiftRetryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamRedshiftRetryOptions)(nil)).Elem()
}

func (i DeliveryStreamRedshiftRetryOptionsArgs) ToDeliveryStreamRedshiftRetryOptionsOutput() DeliveryStreamRedshiftRetryOptionsOutput {
	return i.ToDeliveryStreamRedshiftRetryOptionsOutputWithContext(context.Background())
}

func (i DeliveryStreamRedshiftRetryOptionsArgs) ToDeliveryStreamRedshiftRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamRedshiftRetryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamRedshiftRetryOptionsOutput)
}

func (i DeliveryStreamRedshiftRetryOptionsArgs) ToDeliveryStreamRedshiftRetryOptionsPtrOutput() DeliveryStreamRedshiftRetryOptionsPtrOutput {
	return i.ToDeliveryStreamRedshiftRetryOptionsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamRedshiftRetryOptionsArgs) ToDeliveryStreamRedshiftRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamRedshiftRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamRedshiftRetryOptionsOutput).ToDeliveryStreamRedshiftRetryOptionsPtrOutputWithContext(ctx)
}

// DeliveryStreamRedshiftRetryOptionsPtrInput is an input type that accepts DeliveryStreamRedshiftRetryOptionsArgs, DeliveryStreamRedshiftRetryOptionsPtr and DeliveryStreamRedshiftRetryOptionsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamRedshiftRetryOptionsPtrInput` via:
//
//	        DeliveryStreamRedshiftRetryOptionsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamRedshiftRetryOptionsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamRedshiftRetryOptionsPtrOutput() DeliveryStreamRedshiftRetryOptionsPtrOutput
	ToDeliveryStreamRedshiftRetryOptionsPtrOutputWithContext(context.Context) DeliveryStreamRedshiftRetryOptionsPtrOutput
}

type deliveryStreamRedshiftRetryOptionsPtrType DeliveryStreamRedshiftRetryOptionsArgs

func DeliveryStreamRedshiftRetryOptionsPtr(v *DeliveryStreamRedshiftRetryOptionsArgs) DeliveryStreamRedshiftRetryOptionsPtrInput {
	return (*deliveryStreamRedshiftRetryOptionsPtrType)(v)
}

func (*deliveryStreamRedshiftRetryOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamRedshiftRetryOptions)(nil)).Elem()
}

func (i *deliveryStreamRedshiftRetryOptionsPtrType) ToDeliveryStreamRedshiftRetryOptionsPtrOutput() DeliveryStreamRedshiftRetryOptionsPtrOutput {
	return i.ToDeliveryStreamRedshiftRetryOptionsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamRedshiftRetryOptionsPtrType) ToDeliveryStreamRedshiftRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamRedshiftRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamRedshiftRetryOptionsPtrOutput)
}

type DeliveryStreamRedshiftRetryOptionsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamRedshiftRetryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamRedshiftRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamRedshiftRetryOptionsOutput) ToDeliveryStreamRedshiftRetryOptionsOutput() DeliveryStreamRedshiftRetryOptionsOutput {
	return o
}

func (o DeliveryStreamRedshiftRetryOptionsOutput) ToDeliveryStreamRedshiftRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamRedshiftRetryOptionsOutput {
	return o
}

func (o DeliveryStreamRedshiftRetryOptionsOutput) ToDeliveryStreamRedshiftRetryOptionsPtrOutput() DeliveryStreamRedshiftRetryOptionsPtrOutput {
	return o.ToDeliveryStreamRedshiftRetryOptionsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamRedshiftRetryOptionsOutput) ToDeliveryStreamRedshiftRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamRedshiftRetryOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamRedshiftRetryOptions) *DeliveryStreamRedshiftRetryOptions {
		return &v
	}).(DeliveryStreamRedshiftRetryOptionsPtrOutput)
}

// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of `DurationInSeconds` is 0 (zero) or if the first delivery attempt takes longer than the current value.
func (o DeliveryStreamRedshiftRetryOptionsOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamRedshiftRetryOptions) *int { return v.DurationInSeconds }).(pulumi.IntPtrOutput)
}

type DeliveryStreamRedshiftRetryOptionsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamRedshiftRetryOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamRedshiftRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamRedshiftRetryOptionsPtrOutput) ToDeliveryStreamRedshiftRetryOptionsPtrOutput() DeliveryStreamRedshiftRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamRedshiftRetryOptionsPtrOutput) ToDeliveryStreamRedshiftRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamRedshiftRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamRedshiftRetryOptionsPtrOutput) Elem() DeliveryStreamRedshiftRetryOptionsOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftRetryOptions) DeliveryStreamRedshiftRetryOptions {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamRedshiftRetryOptions
		return ret
	}).(DeliveryStreamRedshiftRetryOptionsOutput)
}

// The length of time during which Firehose retries delivery after a failure, starting from the initial request and including the first attempt. The default value is 3600 seconds (60 minutes). Firehose does not retry if the value of `DurationInSeconds` is 0 (zero) or if the first delivery attempt takes longer than the current value.
func (o DeliveryStreamRedshiftRetryOptionsPtrOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRedshiftRetryOptions) *int {
		if v == nil {
			return nil
		}
		return v.DurationInSeconds
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamRetryOptions struct {
	// The total amount of time that Kinesis Data Firehose spends on retries. This duration starts after the initial attempt to send data to the custom destination via HTTPS endpoint fails. It doesn't include the periods during which Kinesis Data Firehose waits for acknowledgment from the specified destination after each attempt.
	DurationInSeconds *int `pulumi:"durationInSeconds"`
}

// DeliveryStreamRetryOptionsInput is an input type that accepts DeliveryStreamRetryOptionsArgs and DeliveryStreamRetryOptionsOutput values.
// You can construct a concrete instance of `DeliveryStreamRetryOptionsInput` via:
//
//	DeliveryStreamRetryOptionsArgs{...}
type DeliveryStreamRetryOptionsInput interface {
	pulumi.Input

	ToDeliveryStreamRetryOptionsOutput() DeliveryStreamRetryOptionsOutput
	ToDeliveryStreamRetryOptionsOutputWithContext(context.Context) DeliveryStreamRetryOptionsOutput
}

type DeliveryStreamRetryOptionsArgs struct {
	// The total amount of time that Kinesis Data Firehose spends on retries. This duration starts after the initial attempt to send data to the custom destination via HTTPS endpoint fails. It doesn't include the periods during which Kinesis Data Firehose waits for acknowledgment from the specified destination after each attempt.
	DurationInSeconds pulumi.IntPtrInput `pulumi:"durationInSeconds"`
}

func (DeliveryStreamRetryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamRetryOptions)(nil)).Elem()
}

func (i DeliveryStreamRetryOptionsArgs) ToDeliveryStreamRetryOptionsOutput() DeliveryStreamRetryOptionsOutput {
	return i.ToDeliveryStreamRetryOptionsOutputWithContext(context.Background())
}

func (i DeliveryStreamRetryOptionsArgs) ToDeliveryStreamRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamRetryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamRetryOptionsOutput)
}

func (i DeliveryStreamRetryOptionsArgs) ToDeliveryStreamRetryOptionsPtrOutput() DeliveryStreamRetryOptionsPtrOutput {
	return i.ToDeliveryStreamRetryOptionsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamRetryOptionsArgs) ToDeliveryStreamRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamRetryOptionsOutput).ToDeliveryStreamRetryOptionsPtrOutputWithContext(ctx)
}

// DeliveryStreamRetryOptionsPtrInput is an input type that accepts DeliveryStreamRetryOptionsArgs, DeliveryStreamRetryOptionsPtr and DeliveryStreamRetryOptionsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamRetryOptionsPtrInput` via:
//
//	        DeliveryStreamRetryOptionsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamRetryOptionsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamRetryOptionsPtrOutput() DeliveryStreamRetryOptionsPtrOutput
	ToDeliveryStreamRetryOptionsPtrOutputWithContext(context.Context) DeliveryStreamRetryOptionsPtrOutput
}

type deliveryStreamRetryOptionsPtrType DeliveryStreamRetryOptionsArgs

func DeliveryStreamRetryOptionsPtr(v *DeliveryStreamRetryOptionsArgs) DeliveryStreamRetryOptionsPtrInput {
	return (*deliveryStreamRetryOptionsPtrType)(v)
}

func (*deliveryStreamRetryOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamRetryOptions)(nil)).Elem()
}

func (i *deliveryStreamRetryOptionsPtrType) ToDeliveryStreamRetryOptionsPtrOutput() DeliveryStreamRetryOptionsPtrOutput {
	return i.ToDeliveryStreamRetryOptionsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamRetryOptionsPtrType) ToDeliveryStreamRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamRetryOptionsPtrOutput)
}

type DeliveryStreamRetryOptionsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamRetryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamRetryOptionsOutput) ToDeliveryStreamRetryOptionsOutput() DeliveryStreamRetryOptionsOutput {
	return o
}

func (o DeliveryStreamRetryOptionsOutput) ToDeliveryStreamRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamRetryOptionsOutput {
	return o
}

func (o DeliveryStreamRetryOptionsOutput) ToDeliveryStreamRetryOptionsPtrOutput() DeliveryStreamRetryOptionsPtrOutput {
	return o.ToDeliveryStreamRetryOptionsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamRetryOptionsOutput) ToDeliveryStreamRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamRetryOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamRetryOptions) *DeliveryStreamRetryOptions {
		return &v
	}).(DeliveryStreamRetryOptionsPtrOutput)
}

// The total amount of time that Kinesis Data Firehose spends on retries. This duration starts after the initial attempt to send data to the custom destination via HTTPS endpoint fails. It doesn't include the periods during which Kinesis Data Firehose waits for acknowledgment from the specified destination after each attempt.
func (o DeliveryStreamRetryOptionsOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamRetryOptions) *int { return v.DurationInSeconds }).(pulumi.IntPtrOutput)
}

type DeliveryStreamRetryOptionsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamRetryOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamRetryOptionsPtrOutput) ToDeliveryStreamRetryOptionsPtrOutput() DeliveryStreamRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamRetryOptionsPtrOutput) ToDeliveryStreamRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamRetryOptionsPtrOutput) Elem() DeliveryStreamRetryOptionsOutput {
	return o.ApplyT(func(v *DeliveryStreamRetryOptions) DeliveryStreamRetryOptions {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamRetryOptions
		return ret
	}).(DeliveryStreamRetryOptionsOutput)
}

// The total amount of time that Kinesis Data Firehose spends on retries. This duration starts after the initial attempt to send data to the custom destination via HTTPS endpoint fails. It doesn't include the periods during which Kinesis Data Firehose waits for acknowledgment from the specified destination after each attempt.
func (o DeliveryStreamRetryOptionsPtrOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamRetryOptions) *int {
		if v == nil {
			return nil
		}
		return v.DurationInSeconds
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamS3DestinationConfiguration struct {
	// The Amazon Resource Name (ARN) of the Amazon S3 bucket to send data to.
	BucketArn string `pulumi:"bucketArn"`
	// Configures how Kinesis Data Firehose buffers incoming data while delivering it to the Amazon S3 bucket.
	BufferingHints *DeliveryStreamBufferingHints `pulumi:"bufferingHints"`
	// The CloudWatch logging options for your delivery stream.
	CloudWatchLoggingOptions *DeliveryStreamCloudWatchLoggingOptions `pulumi:"cloudWatchLoggingOptions"`
	// The type of compression that Kinesis Data Firehose uses to compress the data that it delivers to the Amazon S3 bucket. For valid values, see the `CompressionFormat` content for the [S3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_S3DestinationConfiguration.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	CompressionFormat *DeliveryStreamS3DestinationConfigurationCompressionFormat `pulumi:"compressionFormat"`
	// Configures Amazon Simple Storage Service (Amazon S3) server-side encryption. Kinesis Data Firehose uses AWS Key Management Service ( AWS KMS) to encrypt the data that it delivers to your Amazon S3 bucket.
	EncryptionConfiguration *DeliveryStreamEncryptionConfiguration `pulumi:"encryptionConfiguration"`
	// A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing them to S3. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html) .
	ErrorOutputPrefix *string `pulumi:"errorOutputPrefix"`
	// A prefix that Kinesis Data Firehose adds to the files that it delivers to the Amazon S3 bucket. The prefix helps you identify the files that Kinesis Data Firehose delivered.
	Prefix *string `pulumi:"prefix"`
	// The ARN of an AWS Identity and Access Management (IAM) role that grants Kinesis Data Firehose access to your Amazon S3 bucket and AWS KMS (if you enable data encryption). For more information, see [Grant Kinesis Data Firehose Access to an Amazon S3 Destination](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3) in the *Amazon Kinesis Data Firehose Developer Guide* .
	RoleArn string `pulumi:"roleArn"`
}

// DeliveryStreamS3DestinationConfigurationInput is an input type that accepts DeliveryStreamS3DestinationConfigurationArgs and DeliveryStreamS3DestinationConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamS3DestinationConfigurationInput` via:
//
//	DeliveryStreamS3DestinationConfigurationArgs{...}
type DeliveryStreamS3DestinationConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamS3DestinationConfigurationOutput() DeliveryStreamS3DestinationConfigurationOutput
	ToDeliveryStreamS3DestinationConfigurationOutputWithContext(context.Context) DeliveryStreamS3DestinationConfigurationOutput
}

type DeliveryStreamS3DestinationConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the Amazon S3 bucket to send data to.
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Configures how Kinesis Data Firehose buffers incoming data while delivering it to the Amazon S3 bucket.
	BufferingHints DeliveryStreamBufferingHintsPtrInput `pulumi:"bufferingHints"`
	// The CloudWatch logging options for your delivery stream.
	CloudWatchLoggingOptions DeliveryStreamCloudWatchLoggingOptionsPtrInput `pulumi:"cloudWatchLoggingOptions"`
	// The type of compression that Kinesis Data Firehose uses to compress the data that it delivers to the Amazon S3 bucket. For valid values, see the `CompressionFormat` content for the [S3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_S3DestinationConfiguration.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
	CompressionFormat DeliveryStreamS3DestinationConfigurationCompressionFormatPtrInput `pulumi:"compressionFormat"`
	// Configures Amazon Simple Storage Service (Amazon S3) server-side encryption. Kinesis Data Firehose uses AWS Key Management Service ( AWS KMS) to encrypt the data that it delivers to your Amazon S3 bucket.
	EncryptionConfiguration DeliveryStreamEncryptionConfigurationPtrInput `pulumi:"encryptionConfiguration"`
	// A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing them to S3. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html) .
	ErrorOutputPrefix pulumi.StringPtrInput `pulumi:"errorOutputPrefix"`
	// A prefix that Kinesis Data Firehose adds to the files that it delivers to the Amazon S3 bucket. The prefix helps you identify the files that Kinesis Data Firehose delivered.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The ARN of an AWS Identity and Access Management (IAM) role that grants Kinesis Data Firehose access to your Amazon S3 bucket and AWS KMS (if you enable data encryption). For more information, see [Grant Kinesis Data Firehose Access to an Amazon S3 Destination](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3) in the *Amazon Kinesis Data Firehose Developer Guide* .
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (DeliveryStreamS3DestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamS3DestinationConfiguration)(nil)).Elem()
}

func (i DeliveryStreamS3DestinationConfigurationArgs) ToDeliveryStreamS3DestinationConfigurationOutput() DeliveryStreamS3DestinationConfigurationOutput {
	return i.ToDeliveryStreamS3DestinationConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamS3DestinationConfigurationArgs) ToDeliveryStreamS3DestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamS3DestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamS3DestinationConfigurationOutput)
}

func (i DeliveryStreamS3DestinationConfigurationArgs) ToDeliveryStreamS3DestinationConfigurationPtrOutput() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamS3DestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamS3DestinationConfigurationArgs) ToDeliveryStreamS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamS3DestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamS3DestinationConfigurationOutput).ToDeliveryStreamS3DestinationConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamS3DestinationConfigurationPtrInput is an input type that accepts DeliveryStreamS3DestinationConfigurationArgs, DeliveryStreamS3DestinationConfigurationPtr and DeliveryStreamS3DestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamS3DestinationConfigurationPtrInput` via:
//
//	        DeliveryStreamS3DestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamS3DestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamS3DestinationConfigurationPtrOutput() DeliveryStreamS3DestinationConfigurationPtrOutput
	ToDeliveryStreamS3DestinationConfigurationPtrOutputWithContext(context.Context) DeliveryStreamS3DestinationConfigurationPtrOutput
}

type deliveryStreamS3DestinationConfigurationPtrType DeliveryStreamS3DestinationConfigurationArgs

func DeliveryStreamS3DestinationConfigurationPtr(v *DeliveryStreamS3DestinationConfigurationArgs) DeliveryStreamS3DestinationConfigurationPtrInput {
	return (*deliveryStreamS3DestinationConfigurationPtrType)(v)
}

func (*deliveryStreamS3DestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamS3DestinationConfiguration)(nil)).Elem()
}

func (i *deliveryStreamS3DestinationConfigurationPtrType) ToDeliveryStreamS3DestinationConfigurationPtrOutput() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamS3DestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamS3DestinationConfigurationPtrType) ToDeliveryStreamS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamS3DestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

type DeliveryStreamS3DestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamS3DestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamS3DestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamS3DestinationConfigurationOutput) ToDeliveryStreamS3DestinationConfigurationOutput() DeliveryStreamS3DestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamS3DestinationConfigurationOutput) ToDeliveryStreamS3DestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamS3DestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamS3DestinationConfigurationOutput) ToDeliveryStreamS3DestinationConfigurationPtrOutput() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ToDeliveryStreamS3DestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamS3DestinationConfigurationOutput) ToDeliveryStreamS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamS3DestinationConfiguration) *DeliveryStreamS3DestinationConfiguration {
		return &v
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the Amazon S3 bucket to send data to.
func (o DeliveryStreamS3DestinationConfigurationOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamS3DestinationConfiguration) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Configures how Kinesis Data Firehose buffers incoming data while delivering it to the Amazon S3 bucket.
func (o DeliveryStreamS3DestinationConfigurationOutput) BufferingHints() DeliveryStreamBufferingHintsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamS3DestinationConfiguration) *DeliveryStreamBufferingHints {
		return v.BufferingHints
	}).(DeliveryStreamBufferingHintsPtrOutput)
}

// The CloudWatch logging options for your delivery stream.
func (o DeliveryStreamS3DestinationConfigurationOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamS3DestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The type of compression that Kinesis Data Firehose uses to compress the data that it delivers to the Amazon S3 bucket. For valid values, see the `CompressionFormat` content for the [S3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_S3DestinationConfiguration.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamS3DestinationConfigurationOutput) CompressionFormat() DeliveryStreamS3DestinationConfigurationCompressionFormatPtrOutput {
	return o.ApplyT(func(v DeliveryStreamS3DestinationConfiguration) *DeliveryStreamS3DestinationConfigurationCompressionFormat {
		return v.CompressionFormat
	}).(DeliveryStreamS3DestinationConfigurationCompressionFormatPtrOutput)
}

// Configures Amazon Simple Storage Service (Amazon S3) server-side encryption. Kinesis Data Firehose uses AWS Key Management Service ( AWS KMS) to encrypt the data that it delivers to your Amazon S3 bucket.
func (o DeliveryStreamS3DestinationConfigurationOutput) EncryptionConfiguration() DeliveryStreamEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamS3DestinationConfiguration) *DeliveryStreamEncryptionConfiguration {
		return v.EncryptionConfiguration
	}).(DeliveryStreamEncryptionConfigurationPtrOutput)
}

// A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing them to S3. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html) .
func (o DeliveryStreamS3DestinationConfigurationOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamS3DestinationConfiguration) *string { return v.ErrorOutputPrefix }).(pulumi.StringPtrOutput)
}

// A prefix that Kinesis Data Firehose adds to the files that it delivers to the Amazon S3 bucket. The prefix helps you identify the files that Kinesis Data Firehose delivered.
func (o DeliveryStreamS3DestinationConfigurationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamS3DestinationConfiguration) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The ARN of an AWS Identity and Access Management (IAM) role that grants Kinesis Data Firehose access to your Amazon S3 bucket and AWS KMS (if you enable data encryption). For more information, see [Grant Kinesis Data Firehose Access to an Amazon S3 Destination](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3) in the *Amazon Kinesis Data Firehose Developer Guide* .
func (o DeliveryStreamS3DestinationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamS3DestinationConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DeliveryStreamS3DestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamS3DestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamS3DestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamS3DestinationConfigurationPtrOutput) ToDeliveryStreamS3DestinationConfigurationPtrOutput() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamS3DestinationConfigurationPtrOutput) ToDeliveryStreamS3DestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamS3DestinationConfigurationPtrOutput) Elem() DeliveryStreamS3DestinationConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamS3DestinationConfiguration) DeliveryStreamS3DestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamS3DestinationConfiguration
		return ret
	}).(DeliveryStreamS3DestinationConfigurationOutput)
}

// The Amazon Resource Name (ARN) of the Amazon S3 bucket to send data to.
func (o DeliveryStreamS3DestinationConfigurationPtrOutput) BucketArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketArn
	}).(pulumi.StringPtrOutput)
}

// Configures how Kinesis Data Firehose buffers incoming data while delivering it to the Amazon S3 bucket.
func (o DeliveryStreamS3DestinationConfigurationPtrOutput) BufferingHints() DeliveryStreamBufferingHintsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamS3DestinationConfiguration) *DeliveryStreamBufferingHints {
		if v == nil {
			return nil
		}
		return v.BufferingHints
	}).(DeliveryStreamBufferingHintsPtrOutput)
}

// The CloudWatch logging options for your delivery stream.
func (o DeliveryStreamS3DestinationConfigurationPtrOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamS3DestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The type of compression that Kinesis Data Firehose uses to compress the data that it delivers to the Amazon S3 bucket. For valid values, see the `CompressionFormat` content for the [S3DestinationConfiguration](https://docs.aws.amazon.com/firehose/latest/APIReference/API_S3DestinationConfiguration.html) data type in the *Amazon Kinesis Data Firehose API Reference* .
func (o DeliveryStreamS3DestinationConfigurationPtrOutput) CompressionFormat() DeliveryStreamS3DestinationConfigurationCompressionFormatPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamS3DestinationConfiguration) *DeliveryStreamS3DestinationConfigurationCompressionFormat {
		if v == nil {
			return nil
		}
		return v.CompressionFormat
	}).(DeliveryStreamS3DestinationConfigurationCompressionFormatPtrOutput)
}

// Configures Amazon Simple Storage Service (Amazon S3) server-side encryption. Kinesis Data Firehose uses AWS Key Management Service ( AWS KMS) to encrypt the data that it delivers to your Amazon S3 bucket.
func (o DeliveryStreamS3DestinationConfigurationPtrOutput) EncryptionConfiguration() DeliveryStreamEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamS3DestinationConfiguration) *DeliveryStreamEncryptionConfiguration {
		if v == nil {
			return nil
		}
		return v.EncryptionConfiguration
	}).(DeliveryStreamEncryptionConfigurationPtrOutput)
}

// A prefix that Kinesis Data Firehose evaluates and adds to failed records before writing them to S3. This prefix appears immediately following the bucket name. For information about how to specify this prefix, see [Custom Prefixes for Amazon S3 Objects](https://docs.aws.amazon.com/firehose/latest/dev/s3-prefixes.html) .
func (o DeliveryStreamS3DestinationConfigurationPtrOutput) ErrorOutputPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ErrorOutputPrefix
	}).(pulumi.StringPtrOutput)
}

// A prefix that Kinesis Data Firehose adds to the files that it delivers to the Amazon S3 bucket. The prefix helps you identify the files that Kinesis Data Firehose delivered.
func (o DeliveryStreamS3DestinationConfigurationPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The ARN of an AWS Identity and Access Management (IAM) role that grants Kinesis Data Firehose access to your Amazon S3 bucket and AWS KMS (if you enable data encryption). For more information, see [Grant Kinesis Data Firehose Access to an Amazon S3 Destination](https://docs.aws.amazon.com/firehose/latest/dev/controlling-access.html#using-iam-s3) in the *Amazon Kinesis Data Firehose Developer Guide* .
func (o DeliveryStreamS3DestinationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamS3DestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamSchemaConfiguration struct {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	CatalogId *string `pulumi:"catalogId"`
	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	//
	// > If the `SchemaConfiguration` request parameter is used as part of invoking the `CreateDeliveryStream` API, then the `DatabaseName` property is required and its value must be specified.
	DatabaseName *string `pulumi:"databaseName"`
	// If you don't specify an AWS Region, the default is the current Region.
	Region *string `pulumi:"region"`
	// The role that Firehose can use to access AWS Glue. This role must be in the same account you use for Firehose. Cross-account roles aren't allowed.
	//
	// > If the `SchemaConfiguration` request parameter is used as part of invoking the `CreateDeliveryStream` API, then the `RoleARN` property is required and its value must be specified.
	RoleArn *string `pulumi:"roleArn"`
	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	//
	// > If the `SchemaConfiguration` request parameter is used as part of invoking the `CreateDeliveryStream` API, then the `TableName` property is required and its value must be specified.
	TableName *string `pulumi:"tableName"`
	// Specifies the table version for the output data schema. If you don't specify this version ID, or if you set it to `LATEST` , Firehose uses the most recent version. This means that any updates to the table are automatically picked up.
	VersionId *string `pulumi:"versionId"`
}

// DeliveryStreamSchemaConfigurationInput is an input type that accepts DeliveryStreamSchemaConfigurationArgs and DeliveryStreamSchemaConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamSchemaConfigurationInput` via:
//
//	DeliveryStreamSchemaConfigurationArgs{...}
type DeliveryStreamSchemaConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamSchemaConfigurationOutput() DeliveryStreamSchemaConfigurationOutput
	ToDeliveryStreamSchemaConfigurationOutputWithContext(context.Context) DeliveryStreamSchemaConfigurationOutput
}

type DeliveryStreamSchemaConfigurationArgs struct {
	// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
	CatalogId pulumi.StringPtrInput `pulumi:"catalogId"`
	// Specifies the name of the AWS Glue database that contains the schema for the output data.
	//
	// > If the `SchemaConfiguration` request parameter is used as part of invoking the `CreateDeliveryStream` API, then the `DatabaseName` property is required and its value must be specified.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// If you don't specify an AWS Region, the default is the current Region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The role that Firehose can use to access AWS Glue. This role must be in the same account you use for Firehose. Cross-account roles aren't allowed.
	//
	// > If the `SchemaConfiguration` request parameter is used as part of invoking the `CreateDeliveryStream` API, then the `RoleARN` property is required and its value must be specified.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
	//
	// > If the `SchemaConfiguration` request parameter is used as part of invoking the `CreateDeliveryStream` API, then the `TableName` property is required and its value must be specified.
	TableName pulumi.StringPtrInput `pulumi:"tableName"`
	// Specifies the table version for the output data schema. If you don't specify this version ID, or if you set it to `LATEST` , Firehose uses the most recent version. This means that any updates to the table are automatically picked up.
	VersionId pulumi.StringPtrInput `pulumi:"versionId"`
}

func (DeliveryStreamSchemaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSchemaConfiguration)(nil)).Elem()
}

func (i DeliveryStreamSchemaConfigurationArgs) ToDeliveryStreamSchemaConfigurationOutput() DeliveryStreamSchemaConfigurationOutput {
	return i.ToDeliveryStreamSchemaConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamSchemaConfigurationArgs) ToDeliveryStreamSchemaConfigurationOutputWithContext(ctx context.Context) DeliveryStreamSchemaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSchemaConfigurationOutput)
}

func (i DeliveryStreamSchemaConfigurationArgs) ToDeliveryStreamSchemaConfigurationPtrOutput() DeliveryStreamSchemaConfigurationPtrOutput {
	return i.ToDeliveryStreamSchemaConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamSchemaConfigurationArgs) ToDeliveryStreamSchemaConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSchemaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSchemaConfigurationOutput).ToDeliveryStreamSchemaConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamSchemaConfigurationPtrInput is an input type that accepts DeliveryStreamSchemaConfigurationArgs, DeliveryStreamSchemaConfigurationPtr and DeliveryStreamSchemaConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamSchemaConfigurationPtrInput` via:
//
//	        DeliveryStreamSchemaConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamSchemaConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamSchemaConfigurationPtrOutput() DeliveryStreamSchemaConfigurationPtrOutput
	ToDeliveryStreamSchemaConfigurationPtrOutputWithContext(context.Context) DeliveryStreamSchemaConfigurationPtrOutput
}

type deliveryStreamSchemaConfigurationPtrType DeliveryStreamSchemaConfigurationArgs

func DeliveryStreamSchemaConfigurationPtr(v *DeliveryStreamSchemaConfigurationArgs) DeliveryStreamSchemaConfigurationPtrInput {
	return (*deliveryStreamSchemaConfigurationPtrType)(v)
}

func (*deliveryStreamSchemaConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSchemaConfiguration)(nil)).Elem()
}

func (i *deliveryStreamSchemaConfigurationPtrType) ToDeliveryStreamSchemaConfigurationPtrOutput() DeliveryStreamSchemaConfigurationPtrOutput {
	return i.ToDeliveryStreamSchemaConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamSchemaConfigurationPtrType) ToDeliveryStreamSchemaConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSchemaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSchemaConfigurationPtrOutput)
}

type DeliveryStreamSchemaConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSchemaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSchemaConfiguration)(nil)).Elem()
}

func (o DeliveryStreamSchemaConfigurationOutput) ToDeliveryStreamSchemaConfigurationOutput() DeliveryStreamSchemaConfigurationOutput {
	return o
}

func (o DeliveryStreamSchemaConfigurationOutput) ToDeliveryStreamSchemaConfigurationOutputWithContext(ctx context.Context) DeliveryStreamSchemaConfigurationOutput {
	return o
}

func (o DeliveryStreamSchemaConfigurationOutput) ToDeliveryStreamSchemaConfigurationPtrOutput() DeliveryStreamSchemaConfigurationPtrOutput {
	return o.ToDeliveryStreamSchemaConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamSchemaConfigurationOutput) ToDeliveryStreamSchemaConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSchemaConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamSchemaConfiguration) *DeliveryStreamSchemaConfiguration {
		return &v
	}).(DeliveryStreamSchemaConfigurationPtrOutput)
}

// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
func (o DeliveryStreamSchemaConfigurationOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSchemaConfiguration) *string { return v.CatalogId }).(pulumi.StringPtrOutput)
}

// Specifies the name of the AWS Glue database that contains the schema for the output data.
//
// > If the `SchemaConfiguration` request parameter is used as part of invoking the `CreateDeliveryStream` API, then the `DatabaseName` property is required and its value must be specified.
func (o DeliveryStreamSchemaConfigurationOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSchemaConfiguration) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// If you don't specify an AWS Region, the default is the current Region.
func (o DeliveryStreamSchemaConfigurationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSchemaConfiguration) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The role that Firehose can use to access AWS Glue. This role must be in the same account you use for Firehose. Cross-account roles aren't allowed.
//
// > If the `SchemaConfiguration` request parameter is used as part of invoking the `CreateDeliveryStream` API, then the `RoleARN` property is required and its value must be specified.
func (o DeliveryStreamSchemaConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSchemaConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
//
// > If the `SchemaConfiguration` request parameter is used as part of invoking the `CreateDeliveryStream` API, then the `TableName` property is required and its value must be specified.
func (o DeliveryStreamSchemaConfigurationOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSchemaConfiguration) *string { return v.TableName }).(pulumi.StringPtrOutput)
}

// Specifies the table version for the output data schema. If you don't specify this version ID, or if you set it to `LATEST` , Firehose uses the most recent version. This means that any updates to the table are automatically picked up.
func (o DeliveryStreamSchemaConfigurationOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSchemaConfiguration) *string { return v.VersionId }).(pulumi.StringPtrOutput)
}

type DeliveryStreamSchemaConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSchemaConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSchemaConfiguration)(nil)).Elem()
}

func (o DeliveryStreamSchemaConfigurationPtrOutput) ToDeliveryStreamSchemaConfigurationPtrOutput() DeliveryStreamSchemaConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamSchemaConfigurationPtrOutput) ToDeliveryStreamSchemaConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSchemaConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamSchemaConfigurationPtrOutput) Elem() DeliveryStreamSchemaConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamSchemaConfiguration) DeliveryStreamSchemaConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamSchemaConfiguration
		return ret
	}).(DeliveryStreamSchemaConfigurationOutput)
}

// The ID of the AWS Glue Data Catalog. If you don't supply this, the AWS account ID is used by default.
func (o DeliveryStreamSchemaConfigurationPtrOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSchemaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.CatalogId
	}).(pulumi.StringPtrOutput)
}

// Specifies the name of the AWS Glue database that contains the schema for the output data.
//
// > If the `SchemaConfiguration` request parameter is used as part of invoking the `CreateDeliveryStream` API, then the `DatabaseName` property is required and its value must be specified.
func (o DeliveryStreamSchemaConfigurationPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSchemaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// If you don't specify an AWS Region, the default is the current Region.
func (o DeliveryStreamSchemaConfigurationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSchemaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The role that Firehose can use to access AWS Glue. This role must be in the same account you use for Firehose. Cross-account roles aren't allowed.
//
// > If the `SchemaConfiguration` request parameter is used as part of invoking the `CreateDeliveryStream` API, then the `RoleARN` property is required and its value must be specified.
func (o DeliveryStreamSchemaConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSchemaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Specifies the AWS Glue table that contains the column information that constitutes your data schema.
//
// > If the `SchemaConfiguration` request parameter is used as part of invoking the `CreateDeliveryStream` API, then the `TableName` property is required and its value must be specified.
func (o DeliveryStreamSchemaConfigurationPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSchemaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TableName
	}).(pulumi.StringPtrOutput)
}

// Specifies the table version for the output data schema. If you don't specify this version ID, or if you set it to `LATEST` , Firehose uses the most recent version. This means that any updates to the table are automatically picked up.
func (o DeliveryStreamSchemaConfigurationPtrOutput) VersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSchemaConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VersionId
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamSecretsManagerConfiguration struct {
	// Specifies whether you want to use the the secrets manager feature. When set as `True` the secrets manager configuration overwrites the existing secrets in the destination configuration. When it's set to `False` Firehose falls back to the credentials in the destination configuration.
	Enabled bool `pulumi:"enabled"`
	// Specifies the role that Firehose assumes when calling the Secrets Manager API operation. When you provide the role, it overrides any destination specific role defined in the destination configuration. If you do not provide the then we use the destination specific role. This parameter is required for Splunk.
	RoleArn *string `pulumi:"roleArn"`
	// The ARN of the secret that stores your credentials. It must be in the same region as the Firehose stream and the role. The secret ARN can reside in a different account than the delivery stream and role as Firehose supports cross-account secret access. This parameter is required when *Enabled* is set to `True` .
	SecretArn *string `pulumi:"secretArn"`
}

// DeliveryStreamSecretsManagerConfigurationInput is an input type that accepts DeliveryStreamSecretsManagerConfigurationArgs and DeliveryStreamSecretsManagerConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamSecretsManagerConfigurationInput` via:
//
//	DeliveryStreamSecretsManagerConfigurationArgs{...}
type DeliveryStreamSecretsManagerConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamSecretsManagerConfigurationOutput() DeliveryStreamSecretsManagerConfigurationOutput
	ToDeliveryStreamSecretsManagerConfigurationOutputWithContext(context.Context) DeliveryStreamSecretsManagerConfigurationOutput
}

type DeliveryStreamSecretsManagerConfigurationArgs struct {
	// Specifies whether you want to use the the secrets manager feature. When set as `True` the secrets manager configuration overwrites the existing secrets in the destination configuration. When it's set to `False` Firehose falls back to the credentials in the destination configuration.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specifies the role that Firehose assumes when calling the Secrets Manager API operation. When you provide the role, it overrides any destination specific role defined in the destination configuration. If you do not provide the then we use the destination specific role. This parameter is required for Splunk.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// The ARN of the secret that stores your credentials. It must be in the same region as the Firehose stream and the role. The secret ARN can reside in a different account than the delivery stream and role as Firehose supports cross-account secret access. This parameter is required when *Enabled* is set to `True` .
	SecretArn pulumi.StringPtrInput `pulumi:"secretArn"`
}

func (DeliveryStreamSecretsManagerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSecretsManagerConfiguration)(nil)).Elem()
}

func (i DeliveryStreamSecretsManagerConfigurationArgs) ToDeliveryStreamSecretsManagerConfigurationOutput() DeliveryStreamSecretsManagerConfigurationOutput {
	return i.ToDeliveryStreamSecretsManagerConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamSecretsManagerConfigurationArgs) ToDeliveryStreamSecretsManagerConfigurationOutputWithContext(ctx context.Context) DeliveryStreamSecretsManagerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSecretsManagerConfigurationOutput)
}

func (i DeliveryStreamSecretsManagerConfigurationArgs) ToDeliveryStreamSecretsManagerConfigurationPtrOutput() DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return i.ToDeliveryStreamSecretsManagerConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamSecretsManagerConfigurationArgs) ToDeliveryStreamSecretsManagerConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSecretsManagerConfigurationOutput).ToDeliveryStreamSecretsManagerConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamSecretsManagerConfigurationPtrInput is an input type that accepts DeliveryStreamSecretsManagerConfigurationArgs, DeliveryStreamSecretsManagerConfigurationPtr and DeliveryStreamSecretsManagerConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamSecretsManagerConfigurationPtrInput` via:
//
//	        DeliveryStreamSecretsManagerConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamSecretsManagerConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamSecretsManagerConfigurationPtrOutput() DeliveryStreamSecretsManagerConfigurationPtrOutput
	ToDeliveryStreamSecretsManagerConfigurationPtrOutputWithContext(context.Context) DeliveryStreamSecretsManagerConfigurationPtrOutput
}

type deliveryStreamSecretsManagerConfigurationPtrType DeliveryStreamSecretsManagerConfigurationArgs

func DeliveryStreamSecretsManagerConfigurationPtr(v *DeliveryStreamSecretsManagerConfigurationArgs) DeliveryStreamSecretsManagerConfigurationPtrInput {
	return (*deliveryStreamSecretsManagerConfigurationPtrType)(v)
}

func (*deliveryStreamSecretsManagerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSecretsManagerConfiguration)(nil)).Elem()
}

func (i *deliveryStreamSecretsManagerConfigurationPtrType) ToDeliveryStreamSecretsManagerConfigurationPtrOutput() DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return i.ToDeliveryStreamSecretsManagerConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamSecretsManagerConfigurationPtrType) ToDeliveryStreamSecretsManagerConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSecretsManagerConfigurationPtrOutput)
}

type DeliveryStreamSecretsManagerConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSecretsManagerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSecretsManagerConfiguration)(nil)).Elem()
}

func (o DeliveryStreamSecretsManagerConfigurationOutput) ToDeliveryStreamSecretsManagerConfigurationOutput() DeliveryStreamSecretsManagerConfigurationOutput {
	return o
}

func (o DeliveryStreamSecretsManagerConfigurationOutput) ToDeliveryStreamSecretsManagerConfigurationOutputWithContext(ctx context.Context) DeliveryStreamSecretsManagerConfigurationOutput {
	return o
}

func (o DeliveryStreamSecretsManagerConfigurationOutput) ToDeliveryStreamSecretsManagerConfigurationPtrOutput() DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return o.ToDeliveryStreamSecretsManagerConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamSecretsManagerConfigurationOutput) ToDeliveryStreamSecretsManagerConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamSecretsManagerConfiguration) *DeliveryStreamSecretsManagerConfiguration {
		return &v
	}).(DeliveryStreamSecretsManagerConfigurationPtrOutput)
}

// Specifies whether you want to use the the secrets manager feature. When set as `True` the secrets manager configuration overwrites the existing secrets in the destination configuration. When it's set to `False` Firehose falls back to the credentials in the destination configuration.
func (o DeliveryStreamSecretsManagerConfigurationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DeliveryStreamSecretsManagerConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specifies the role that Firehose assumes when calling the Secrets Manager API operation. When you provide the role, it overrides any destination specific role defined in the destination configuration. If you do not provide the then we use the destination specific role. This parameter is required for Splunk.
func (o DeliveryStreamSecretsManagerConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSecretsManagerConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The ARN of the secret that stores your credentials. It must be in the same region as the Firehose stream and the role. The secret ARN can reside in a different account than the delivery stream and role as Firehose supports cross-account secret access. This parameter is required when *Enabled* is set to `True` .
func (o DeliveryStreamSecretsManagerConfigurationOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSecretsManagerConfiguration) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

type DeliveryStreamSecretsManagerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSecretsManagerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSecretsManagerConfiguration)(nil)).Elem()
}

func (o DeliveryStreamSecretsManagerConfigurationPtrOutput) ToDeliveryStreamSecretsManagerConfigurationPtrOutput() DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamSecretsManagerConfigurationPtrOutput) ToDeliveryStreamSecretsManagerConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamSecretsManagerConfigurationPtrOutput) Elem() DeliveryStreamSecretsManagerConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamSecretsManagerConfiguration) DeliveryStreamSecretsManagerConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamSecretsManagerConfiguration
		return ret
	}).(DeliveryStreamSecretsManagerConfigurationOutput)
}

// Specifies whether you want to use the the secrets manager feature. When set as `True` the secrets manager configuration overwrites the existing secrets in the destination configuration. When it's set to `False` Firehose falls back to the credentials in the destination configuration.
func (o DeliveryStreamSecretsManagerConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSecretsManagerConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specifies the role that Firehose assumes when calling the Secrets Manager API operation. When you provide the role, it overrides any destination specific role defined in the destination configuration. If you do not provide the then we use the destination specific role. This parameter is required for Splunk.
func (o DeliveryStreamSecretsManagerConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSecretsManagerConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The ARN of the secret that stores your credentials. It must be in the same region as the Firehose stream and the role. The secret ARN can reside in a different account than the delivery stream and role as Firehose supports cross-account secret access. This parameter is required when *Enabled* is set to `True` .
func (o DeliveryStreamSecretsManagerConfigurationPtrOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSecretsManagerConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SecretArn
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamSerializer struct {
	// A serializer to use for converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://docs.aws.amazon.com/https://orc.apache.org/docs/) .
	OrcSerDe *DeliveryStreamOrcSerDe `pulumi:"orcSerDe"`
	// A serializer to use for converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://docs.aws.amazon.com/https://parquet.apache.org/documentation/latest/) .
	ParquetSerDe *DeliveryStreamParquetSerDe `pulumi:"parquetSerDe"`
}

// DeliveryStreamSerializerInput is an input type that accepts DeliveryStreamSerializerArgs and DeliveryStreamSerializerOutput values.
// You can construct a concrete instance of `DeliveryStreamSerializerInput` via:
//
//	DeliveryStreamSerializerArgs{...}
type DeliveryStreamSerializerInput interface {
	pulumi.Input

	ToDeliveryStreamSerializerOutput() DeliveryStreamSerializerOutput
	ToDeliveryStreamSerializerOutputWithContext(context.Context) DeliveryStreamSerializerOutput
}

type DeliveryStreamSerializerArgs struct {
	// A serializer to use for converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://docs.aws.amazon.com/https://orc.apache.org/docs/) .
	OrcSerDe DeliveryStreamOrcSerDePtrInput `pulumi:"orcSerDe"`
	// A serializer to use for converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://docs.aws.amazon.com/https://parquet.apache.org/documentation/latest/) .
	ParquetSerDe DeliveryStreamParquetSerDePtrInput `pulumi:"parquetSerDe"`
}

func (DeliveryStreamSerializerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSerializer)(nil)).Elem()
}

func (i DeliveryStreamSerializerArgs) ToDeliveryStreamSerializerOutput() DeliveryStreamSerializerOutput {
	return i.ToDeliveryStreamSerializerOutputWithContext(context.Background())
}

func (i DeliveryStreamSerializerArgs) ToDeliveryStreamSerializerOutputWithContext(ctx context.Context) DeliveryStreamSerializerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSerializerOutput)
}

func (i DeliveryStreamSerializerArgs) ToDeliveryStreamSerializerPtrOutput() DeliveryStreamSerializerPtrOutput {
	return i.ToDeliveryStreamSerializerPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamSerializerArgs) ToDeliveryStreamSerializerPtrOutputWithContext(ctx context.Context) DeliveryStreamSerializerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSerializerOutput).ToDeliveryStreamSerializerPtrOutputWithContext(ctx)
}

// DeliveryStreamSerializerPtrInput is an input type that accepts DeliveryStreamSerializerArgs, DeliveryStreamSerializerPtr and DeliveryStreamSerializerPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamSerializerPtrInput` via:
//
//	        DeliveryStreamSerializerArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamSerializerPtrInput interface {
	pulumi.Input

	ToDeliveryStreamSerializerPtrOutput() DeliveryStreamSerializerPtrOutput
	ToDeliveryStreamSerializerPtrOutputWithContext(context.Context) DeliveryStreamSerializerPtrOutput
}

type deliveryStreamSerializerPtrType DeliveryStreamSerializerArgs

func DeliveryStreamSerializerPtr(v *DeliveryStreamSerializerArgs) DeliveryStreamSerializerPtrInput {
	return (*deliveryStreamSerializerPtrType)(v)
}

func (*deliveryStreamSerializerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSerializer)(nil)).Elem()
}

func (i *deliveryStreamSerializerPtrType) ToDeliveryStreamSerializerPtrOutput() DeliveryStreamSerializerPtrOutput {
	return i.ToDeliveryStreamSerializerPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamSerializerPtrType) ToDeliveryStreamSerializerPtrOutputWithContext(ctx context.Context) DeliveryStreamSerializerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSerializerPtrOutput)
}

type DeliveryStreamSerializerOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSerializerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSerializer)(nil)).Elem()
}

func (o DeliveryStreamSerializerOutput) ToDeliveryStreamSerializerOutput() DeliveryStreamSerializerOutput {
	return o
}

func (o DeliveryStreamSerializerOutput) ToDeliveryStreamSerializerOutputWithContext(ctx context.Context) DeliveryStreamSerializerOutput {
	return o
}

func (o DeliveryStreamSerializerOutput) ToDeliveryStreamSerializerPtrOutput() DeliveryStreamSerializerPtrOutput {
	return o.ToDeliveryStreamSerializerPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamSerializerOutput) ToDeliveryStreamSerializerPtrOutputWithContext(ctx context.Context) DeliveryStreamSerializerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamSerializer) *DeliveryStreamSerializer {
		return &v
	}).(DeliveryStreamSerializerPtrOutput)
}

// A serializer to use for converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://docs.aws.amazon.com/https://orc.apache.org/docs/) .
func (o DeliveryStreamSerializerOutput) OrcSerDe() DeliveryStreamOrcSerDePtrOutput {
	return o.ApplyT(func(v DeliveryStreamSerializer) *DeliveryStreamOrcSerDe { return v.OrcSerDe }).(DeliveryStreamOrcSerDePtrOutput)
}

// A serializer to use for converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://docs.aws.amazon.com/https://parquet.apache.org/documentation/latest/) .
func (o DeliveryStreamSerializerOutput) ParquetSerDe() DeliveryStreamParquetSerDePtrOutput {
	return o.ApplyT(func(v DeliveryStreamSerializer) *DeliveryStreamParquetSerDe { return v.ParquetSerDe }).(DeliveryStreamParquetSerDePtrOutput)
}

type DeliveryStreamSerializerPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSerializerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSerializer)(nil)).Elem()
}

func (o DeliveryStreamSerializerPtrOutput) ToDeliveryStreamSerializerPtrOutput() DeliveryStreamSerializerPtrOutput {
	return o
}

func (o DeliveryStreamSerializerPtrOutput) ToDeliveryStreamSerializerPtrOutputWithContext(ctx context.Context) DeliveryStreamSerializerPtrOutput {
	return o
}

func (o DeliveryStreamSerializerPtrOutput) Elem() DeliveryStreamSerializerOutput {
	return o.ApplyT(func(v *DeliveryStreamSerializer) DeliveryStreamSerializer {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamSerializer
		return ret
	}).(DeliveryStreamSerializerOutput)
}

// A serializer to use for converting data to the ORC format before storing it in Amazon S3. For more information, see [Apache ORC](https://docs.aws.amazon.com/https://orc.apache.org/docs/) .
func (o DeliveryStreamSerializerPtrOutput) OrcSerDe() DeliveryStreamOrcSerDePtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSerializer) *DeliveryStreamOrcSerDe {
		if v == nil {
			return nil
		}
		return v.OrcSerDe
	}).(DeliveryStreamOrcSerDePtrOutput)
}

// A serializer to use for converting data to the Parquet format before storing it in Amazon S3. For more information, see [Apache Parquet](https://docs.aws.amazon.com/https://parquet.apache.org/documentation/latest/) .
func (o DeliveryStreamSerializerPtrOutput) ParquetSerDe() DeliveryStreamParquetSerDePtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSerializer) *DeliveryStreamParquetSerDe {
		if v == nil {
			return nil
		}
		return v.ParquetSerDe
	}).(DeliveryStreamParquetSerDePtrOutput)
}

type DeliveryStreamSnowflakeDestinationConfiguration struct {
	// URL for accessing your Snowflake account. This URL must include your [account identifier](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-account-identifier) . Note that the protocol (https://) and port number are optional.
	AccountUrl               string                                  `pulumi:"accountUrl"`
	CloudWatchLoggingOptions *DeliveryStreamCloudWatchLoggingOptions `pulumi:"cloudWatchLoggingOptions"`
	// The name of the record content column
	ContentColumnName *string `pulumi:"contentColumnName"`
	// Choose to load JSON keys mapped to table column names or choose to split the JSON payload where content is mapped to a record content column and source metadata is mapped to a record metadata column.
	DataLoadingOption *DeliveryStreamSnowflakeDestinationConfigurationDataLoadingOption `pulumi:"dataLoadingOption"`
	// All data in Snowflake is maintained in databases.
	Database string `pulumi:"database"`
	// Passphrase to decrypt the private key when the key is encrypted. For information, see [Using Key Pair Authentication & Key Rotation](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation) .
	KeyPassphrase *string `pulumi:"keyPassphrase"`
	// The name of the record metadata column
	MetaDataColumnName *string `pulumi:"metaDataColumnName"`
	// The private key used to encrypt your Snowflake client. For information, see [Using Key Pair Authentication & Key Rotation](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation) .
	PrivateKey              *string                                `pulumi:"privateKey"`
	ProcessingConfiguration *DeliveryStreamProcessingConfiguration `pulumi:"processingConfiguration"`
	// The time period where Firehose will retry sending data to the chosen HTTP endpoint.
	RetryOptions *DeliveryStreamSnowflakeRetryOptions `pulumi:"retryOptions"`
	// The Amazon Resource Name (ARN) of the Snowflake role
	RoleArn string `pulumi:"roleArn"`
	// Choose an S3 backup mode
	S3BackupMode    *DeliveryStreamSnowflakeDestinationConfigurationS3BackupMode `pulumi:"s3BackupMode"`
	S3Configuration DeliveryStreamS3DestinationConfiguration                     `pulumi:"s3Configuration"`
	// Each database consists of one or more schemas, which are logical groupings of database objects, such as tables and views
	Schema string `pulumi:"schema"`
	// The configuration that defines how you access secrets for Snowflake.
	SecretsManagerConfiguration *DeliveryStreamSecretsManagerConfiguration `pulumi:"secretsManagerConfiguration"`
	// Optionally configure a Snowflake role. Otherwise the default user role will be used.
	SnowflakeRoleConfiguration *DeliveryStreamSnowflakeRoleConfiguration `pulumi:"snowflakeRoleConfiguration"`
	// The VPCE ID for Firehose to privately connect with Snowflake. The ID format is com.amazonaws.vpce.[region].vpce-svc-<[id]>. For more information, see [Amazon PrivateLink & Snowflake](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-security-privatelink)
	SnowflakeVpcConfiguration *DeliveryStreamSnowflakeVpcConfiguration `pulumi:"snowflakeVpcConfiguration"`
	// All data in Snowflake is stored in database tables, logically structured as collections of columns and rows.
	Table string `pulumi:"table"`
	// User login name for the Snowflake account.
	User *string `pulumi:"user"`
}

// DeliveryStreamSnowflakeDestinationConfigurationInput is an input type that accepts DeliveryStreamSnowflakeDestinationConfigurationArgs and DeliveryStreamSnowflakeDestinationConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamSnowflakeDestinationConfigurationInput` via:
//
//	DeliveryStreamSnowflakeDestinationConfigurationArgs{...}
type DeliveryStreamSnowflakeDestinationConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamSnowflakeDestinationConfigurationOutput() DeliveryStreamSnowflakeDestinationConfigurationOutput
	ToDeliveryStreamSnowflakeDestinationConfigurationOutputWithContext(context.Context) DeliveryStreamSnowflakeDestinationConfigurationOutput
}

type DeliveryStreamSnowflakeDestinationConfigurationArgs struct {
	// URL for accessing your Snowflake account. This URL must include your [account identifier](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-account-identifier) . Note that the protocol (https://) and port number are optional.
	AccountUrl               pulumi.StringInput                             `pulumi:"accountUrl"`
	CloudWatchLoggingOptions DeliveryStreamCloudWatchLoggingOptionsPtrInput `pulumi:"cloudWatchLoggingOptions"`
	// The name of the record content column
	ContentColumnName pulumi.StringPtrInput `pulumi:"contentColumnName"`
	// Choose to load JSON keys mapped to table column names or choose to split the JSON payload where content is mapped to a record content column and source metadata is mapped to a record metadata column.
	DataLoadingOption DeliveryStreamSnowflakeDestinationConfigurationDataLoadingOptionPtrInput `pulumi:"dataLoadingOption"`
	// All data in Snowflake is maintained in databases.
	Database pulumi.StringInput `pulumi:"database"`
	// Passphrase to decrypt the private key when the key is encrypted. For information, see [Using Key Pair Authentication & Key Rotation](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation) .
	KeyPassphrase pulumi.StringPtrInput `pulumi:"keyPassphrase"`
	// The name of the record metadata column
	MetaDataColumnName pulumi.StringPtrInput `pulumi:"metaDataColumnName"`
	// The private key used to encrypt your Snowflake client. For information, see [Using Key Pair Authentication & Key Rotation](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation) .
	PrivateKey              pulumi.StringPtrInput                         `pulumi:"privateKey"`
	ProcessingConfiguration DeliveryStreamProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The time period where Firehose will retry sending data to the chosen HTTP endpoint.
	RetryOptions DeliveryStreamSnowflakeRetryOptionsPtrInput `pulumi:"retryOptions"`
	// The Amazon Resource Name (ARN) of the Snowflake role
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// Choose an S3 backup mode
	S3BackupMode    DeliveryStreamSnowflakeDestinationConfigurationS3BackupModePtrInput `pulumi:"s3BackupMode"`
	S3Configuration DeliveryStreamS3DestinationConfigurationInput                       `pulumi:"s3Configuration"`
	// Each database consists of one or more schemas, which are logical groupings of database objects, such as tables and views
	Schema pulumi.StringInput `pulumi:"schema"`
	// The configuration that defines how you access secrets for Snowflake.
	SecretsManagerConfiguration DeliveryStreamSecretsManagerConfigurationPtrInput `pulumi:"secretsManagerConfiguration"`
	// Optionally configure a Snowflake role. Otherwise the default user role will be used.
	SnowflakeRoleConfiguration DeliveryStreamSnowflakeRoleConfigurationPtrInput `pulumi:"snowflakeRoleConfiguration"`
	// The VPCE ID for Firehose to privately connect with Snowflake. The ID format is com.amazonaws.vpce.[region].vpce-svc-<[id]>. For more information, see [Amazon PrivateLink & Snowflake](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-security-privatelink)
	SnowflakeVpcConfiguration DeliveryStreamSnowflakeVpcConfigurationPtrInput `pulumi:"snowflakeVpcConfiguration"`
	// All data in Snowflake is stored in database tables, logically structured as collections of columns and rows.
	Table pulumi.StringInput `pulumi:"table"`
	// User login name for the Snowflake account.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (DeliveryStreamSnowflakeDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSnowflakeDestinationConfiguration)(nil)).Elem()
}

func (i DeliveryStreamSnowflakeDestinationConfigurationArgs) ToDeliveryStreamSnowflakeDestinationConfigurationOutput() DeliveryStreamSnowflakeDestinationConfigurationOutput {
	return i.ToDeliveryStreamSnowflakeDestinationConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamSnowflakeDestinationConfigurationArgs) ToDeliveryStreamSnowflakeDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSnowflakeDestinationConfigurationOutput)
}

func (i DeliveryStreamSnowflakeDestinationConfigurationArgs) ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutput() DeliveryStreamSnowflakeDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamSnowflakeDestinationConfigurationArgs) ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSnowflakeDestinationConfigurationOutput).ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamSnowflakeDestinationConfigurationPtrInput is an input type that accepts DeliveryStreamSnowflakeDestinationConfigurationArgs, DeliveryStreamSnowflakeDestinationConfigurationPtr and DeliveryStreamSnowflakeDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamSnowflakeDestinationConfigurationPtrInput` via:
//
//	        DeliveryStreamSnowflakeDestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamSnowflakeDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutput() DeliveryStreamSnowflakeDestinationConfigurationPtrOutput
	ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutputWithContext(context.Context) DeliveryStreamSnowflakeDestinationConfigurationPtrOutput
}

type deliveryStreamSnowflakeDestinationConfigurationPtrType DeliveryStreamSnowflakeDestinationConfigurationArgs

func DeliveryStreamSnowflakeDestinationConfigurationPtr(v *DeliveryStreamSnowflakeDestinationConfigurationArgs) DeliveryStreamSnowflakeDestinationConfigurationPtrInput {
	return (*deliveryStreamSnowflakeDestinationConfigurationPtrType)(v)
}

func (*deliveryStreamSnowflakeDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSnowflakeDestinationConfiguration)(nil)).Elem()
}

func (i *deliveryStreamSnowflakeDestinationConfigurationPtrType) ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutput() DeliveryStreamSnowflakeDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamSnowflakeDestinationConfigurationPtrType) ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSnowflakeDestinationConfigurationPtrOutput)
}

type DeliveryStreamSnowflakeDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSnowflakeDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSnowflakeDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) ToDeliveryStreamSnowflakeDestinationConfigurationOutput() DeliveryStreamSnowflakeDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) ToDeliveryStreamSnowflakeDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutput() DeliveryStreamSnowflakeDestinationConfigurationPtrOutput {
	return o.ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSnowflakeDestinationConfiguration {
		return &v
	}).(DeliveryStreamSnowflakeDestinationConfigurationPtrOutput)
}

// URL for accessing your Snowflake account. This URL must include your [account identifier](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-account-identifier) . Note that the protocol (https://) and port number are optional.
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) AccountUrl() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) string { return v.AccountUrl }).(pulumi.StringOutput)
}

func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The name of the record content column
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) ContentColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *string { return v.ContentColumnName }).(pulumi.StringPtrOutput)
}

// Choose to load JSON keys mapped to table column names or choose to split the JSON payload where content is mapped to a record content column and source metadata is mapped to a record metadata column.
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) DataLoadingOption() DeliveryStreamSnowflakeDestinationConfigurationDataLoadingOptionPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSnowflakeDestinationConfigurationDataLoadingOption {
		return v.DataLoadingOption
	}).(DeliveryStreamSnowflakeDestinationConfigurationDataLoadingOptionPtrOutput)
}

// All data in Snowflake is maintained in databases.
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) string { return v.Database }).(pulumi.StringOutput)
}

// Passphrase to decrypt the private key when the key is encrypted. For information, see [Using Key Pair Authentication & Key Rotation](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation) .
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) KeyPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *string { return v.KeyPassphrase }).(pulumi.StringPtrOutput)
}

// The name of the record metadata column
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) MetaDataColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *string { return v.MetaDataColumnName }).(pulumi.StringPtrOutput)
}

// The private key used to encrypt your Snowflake client. For information, see [Using Key Pair Authentication & Key Rotation](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation) .
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The time period where Firehose will retry sending data to the chosen HTTP endpoint.
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) RetryOptions() DeliveryStreamSnowflakeRetryOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSnowflakeRetryOptions {
		return v.RetryOptions
	}).(DeliveryStreamSnowflakeRetryOptionsPtrOutput)
}

// The Amazon Resource Name (ARN) of the Snowflake role
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Choose an S3 backup mode
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) S3BackupMode() DeliveryStreamSnowflakeDestinationConfigurationS3BackupModePtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSnowflakeDestinationConfigurationS3BackupMode {
		return v.S3BackupMode
	}).(DeliveryStreamSnowflakeDestinationConfigurationS3BackupModePtrOutput)
}

func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) DeliveryStreamS3DestinationConfiguration {
		return v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationOutput)
}

// Each database consists of one or more schemas, which are logical groupings of database objects, such as tables and views
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) string { return v.Schema }).(pulumi.StringOutput)
}

// The configuration that defines how you access secrets for Snowflake.
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) SecretsManagerConfiguration() DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSecretsManagerConfiguration {
		return v.SecretsManagerConfiguration
	}).(DeliveryStreamSecretsManagerConfigurationPtrOutput)
}

// Optionally configure a Snowflake role. Otherwise the default user role will be used.
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) SnowflakeRoleConfiguration() DeliveryStreamSnowflakeRoleConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSnowflakeRoleConfiguration {
		return v.SnowflakeRoleConfiguration
	}).(DeliveryStreamSnowflakeRoleConfigurationPtrOutput)
}

// The VPCE ID for Firehose to privately connect with Snowflake. The ID format is com.amazonaws.vpce.[region].vpce-svc-<[id]>. For more information, see [Amazon PrivateLink & Snowflake](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-security-privatelink)
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) SnowflakeVpcConfiguration() DeliveryStreamSnowflakeVpcConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSnowflakeVpcConfiguration {
		return v.SnowflakeVpcConfiguration
	}).(DeliveryStreamSnowflakeVpcConfigurationPtrOutput)
}

// All data in Snowflake is stored in database tables, logically structured as collections of columns and rows.
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) string { return v.Table }).(pulumi.StringOutput)
}

// User login name for the Snowflake account.
func (o DeliveryStreamSnowflakeDestinationConfigurationOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeDestinationConfiguration) *string { return v.User }).(pulumi.StringPtrOutput)
}

type DeliveryStreamSnowflakeDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSnowflakeDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutput() DeliveryStreamSnowflakeDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) ToDeliveryStreamSnowflakeDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) Elem() DeliveryStreamSnowflakeDestinationConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) DeliveryStreamSnowflakeDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamSnowflakeDestinationConfiguration
		return ret
	}).(DeliveryStreamSnowflakeDestinationConfigurationOutput)
}

// URL for accessing your Snowflake account. This URL must include your [account identifier](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-account-identifier) . Note that the protocol (https://) and port number are optional.
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) AccountUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.AccountUrl
	}).(pulumi.StringPtrOutput)
}

func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The name of the record content column
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) ContentColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ContentColumnName
	}).(pulumi.StringPtrOutput)
}

// Choose to load JSON keys mapped to table column names or choose to split the JSON payload where content is mapped to a record content column and source metadata is mapped to a record metadata column.
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) DataLoadingOption() DeliveryStreamSnowflakeDestinationConfigurationDataLoadingOptionPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSnowflakeDestinationConfigurationDataLoadingOption {
		if v == nil {
			return nil
		}
		return v.DataLoadingOption
	}).(DeliveryStreamSnowflakeDestinationConfigurationDataLoadingOptionPtrOutput)
}

// All data in Snowflake is maintained in databases.
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// Passphrase to decrypt the private key when the key is encrypted. For information, see [Using Key Pair Authentication & Key Rotation](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation) .
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) KeyPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.KeyPassphrase
	}).(pulumi.StringPtrOutput)
}

// The name of the record metadata column
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) MetaDataColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MetaDataColumnName
	}).(pulumi.StringPtrOutput)
}

// The private key used to encrypt your Snowflake client. For information, see [Using Key Pair Authentication & Key Rotation](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/data-load-snowpipe-streaming-configuration#using-key-pair-authentication-key-rotation) .
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The time period where Firehose will retry sending data to the chosen HTTP endpoint.
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) RetryOptions() DeliveryStreamSnowflakeRetryOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSnowflakeRetryOptions {
		if v == nil {
			return nil
		}
		return v.RetryOptions
	}).(DeliveryStreamSnowflakeRetryOptionsPtrOutput)
}

// The Amazon Resource Name (ARN) of the Snowflake role
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// Choose an S3 backup mode
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) S3BackupMode() DeliveryStreamSnowflakeDestinationConfigurationS3BackupModePtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSnowflakeDestinationConfigurationS3BackupMode {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(DeliveryStreamSnowflakeDestinationConfigurationS3BackupModePtrOutput)
}

func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamS3DestinationConfiguration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// Each database consists of one or more schemas, which are logical groupings of database objects, such as tables and views
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Schema
	}).(pulumi.StringPtrOutput)
}

// The configuration that defines how you access secrets for Snowflake.
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) SecretsManagerConfiguration() DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSecretsManagerConfiguration {
		if v == nil {
			return nil
		}
		return v.SecretsManagerConfiguration
	}).(DeliveryStreamSecretsManagerConfigurationPtrOutput)
}

// Optionally configure a Snowflake role. Otherwise the default user role will be used.
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) SnowflakeRoleConfiguration() DeliveryStreamSnowflakeRoleConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSnowflakeRoleConfiguration {
		if v == nil {
			return nil
		}
		return v.SnowflakeRoleConfiguration
	}).(DeliveryStreamSnowflakeRoleConfigurationPtrOutput)
}

// The VPCE ID for Firehose to privately connect with Snowflake. The ID format is com.amazonaws.vpce.[region].vpce-svc-<[id]>. For more information, see [Amazon PrivateLink & Snowflake](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-security-privatelink)
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) SnowflakeVpcConfiguration() DeliveryStreamSnowflakeVpcConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *DeliveryStreamSnowflakeVpcConfiguration {
		if v == nil {
			return nil
		}
		return v.SnowflakeVpcConfiguration
	}).(DeliveryStreamSnowflakeVpcConfigurationPtrOutput)
}

// All data in Snowflake is stored in database tables, logically structured as collections of columns and rows.
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) Table() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Table
	}).(pulumi.StringPtrOutput)
}

// User login name for the Snowflake account.
func (o DeliveryStreamSnowflakeDestinationConfigurationPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamSnowflakeRetryOptions struct {
	// the time period where Firehose will retry sending data to the chosen HTTP endpoint.
	DurationInSeconds *int `pulumi:"durationInSeconds"`
}

// DeliveryStreamSnowflakeRetryOptionsInput is an input type that accepts DeliveryStreamSnowflakeRetryOptionsArgs and DeliveryStreamSnowflakeRetryOptionsOutput values.
// You can construct a concrete instance of `DeliveryStreamSnowflakeRetryOptionsInput` via:
//
//	DeliveryStreamSnowflakeRetryOptionsArgs{...}
type DeliveryStreamSnowflakeRetryOptionsInput interface {
	pulumi.Input

	ToDeliveryStreamSnowflakeRetryOptionsOutput() DeliveryStreamSnowflakeRetryOptionsOutput
	ToDeliveryStreamSnowflakeRetryOptionsOutputWithContext(context.Context) DeliveryStreamSnowflakeRetryOptionsOutput
}

type DeliveryStreamSnowflakeRetryOptionsArgs struct {
	// the time period where Firehose will retry sending data to the chosen HTTP endpoint.
	DurationInSeconds pulumi.IntPtrInput `pulumi:"durationInSeconds"`
}

func (DeliveryStreamSnowflakeRetryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSnowflakeRetryOptions)(nil)).Elem()
}

func (i DeliveryStreamSnowflakeRetryOptionsArgs) ToDeliveryStreamSnowflakeRetryOptionsOutput() DeliveryStreamSnowflakeRetryOptionsOutput {
	return i.ToDeliveryStreamSnowflakeRetryOptionsOutputWithContext(context.Background())
}

func (i DeliveryStreamSnowflakeRetryOptionsArgs) ToDeliveryStreamSnowflakeRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeRetryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSnowflakeRetryOptionsOutput)
}

func (i DeliveryStreamSnowflakeRetryOptionsArgs) ToDeliveryStreamSnowflakeRetryOptionsPtrOutput() DeliveryStreamSnowflakeRetryOptionsPtrOutput {
	return i.ToDeliveryStreamSnowflakeRetryOptionsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamSnowflakeRetryOptionsArgs) ToDeliveryStreamSnowflakeRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSnowflakeRetryOptionsOutput).ToDeliveryStreamSnowflakeRetryOptionsPtrOutputWithContext(ctx)
}

// DeliveryStreamSnowflakeRetryOptionsPtrInput is an input type that accepts DeliveryStreamSnowflakeRetryOptionsArgs, DeliveryStreamSnowflakeRetryOptionsPtr and DeliveryStreamSnowflakeRetryOptionsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamSnowflakeRetryOptionsPtrInput` via:
//
//	        DeliveryStreamSnowflakeRetryOptionsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamSnowflakeRetryOptionsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamSnowflakeRetryOptionsPtrOutput() DeliveryStreamSnowflakeRetryOptionsPtrOutput
	ToDeliveryStreamSnowflakeRetryOptionsPtrOutputWithContext(context.Context) DeliveryStreamSnowflakeRetryOptionsPtrOutput
}

type deliveryStreamSnowflakeRetryOptionsPtrType DeliveryStreamSnowflakeRetryOptionsArgs

func DeliveryStreamSnowflakeRetryOptionsPtr(v *DeliveryStreamSnowflakeRetryOptionsArgs) DeliveryStreamSnowflakeRetryOptionsPtrInput {
	return (*deliveryStreamSnowflakeRetryOptionsPtrType)(v)
}

func (*deliveryStreamSnowflakeRetryOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSnowflakeRetryOptions)(nil)).Elem()
}

func (i *deliveryStreamSnowflakeRetryOptionsPtrType) ToDeliveryStreamSnowflakeRetryOptionsPtrOutput() DeliveryStreamSnowflakeRetryOptionsPtrOutput {
	return i.ToDeliveryStreamSnowflakeRetryOptionsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamSnowflakeRetryOptionsPtrType) ToDeliveryStreamSnowflakeRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSnowflakeRetryOptionsPtrOutput)
}

type DeliveryStreamSnowflakeRetryOptionsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSnowflakeRetryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSnowflakeRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamSnowflakeRetryOptionsOutput) ToDeliveryStreamSnowflakeRetryOptionsOutput() DeliveryStreamSnowflakeRetryOptionsOutput {
	return o
}

func (o DeliveryStreamSnowflakeRetryOptionsOutput) ToDeliveryStreamSnowflakeRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeRetryOptionsOutput {
	return o
}

func (o DeliveryStreamSnowflakeRetryOptionsOutput) ToDeliveryStreamSnowflakeRetryOptionsPtrOutput() DeliveryStreamSnowflakeRetryOptionsPtrOutput {
	return o.ToDeliveryStreamSnowflakeRetryOptionsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamSnowflakeRetryOptionsOutput) ToDeliveryStreamSnowflakeRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeRetryOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamSnowflakeRetryOptions) *DeliveryStreamSnowflakeRetryOptions {
		return &v
	}).(DeliveryStreamSnowflakeRetryOptionsPtrOutput)
}

// the time period where Firehose will retry sending data to the chosen HTTP endpoint.
func (o DeliveryStreamSnowflakeRetryOptionsOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeRetryOptions) *int { return v.DurationInSeconds }).(pulumi.IntPtrOutput)
}

type DeliveryStreamSnowflakeRetryOptionsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSnowflakeRetryOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSnowflakeRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamSnowflakeRetryOptionsPtrOutput) ToDeliveryStreamSnowflakeRetryOptionsPtrOutput() DeliveryStreamSnowflakeRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamSnowflakeRetryOptionsPtrOutput) ToDeliveryStreamSnowflakeRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamSnowflakeRetryOptionsPtrOutput) Elem() DeliveryStreamSnowflakeRetryOptionsOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeRetryOptions) DeliveryStreamSnowflakeRetryOptions {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamSnowflakeRetryOptions
		return ret
	}).(DeliveryStreamSnowflakeRetryOptionsOutput)
}

// the time period where Firehose will retry sending data to the chosen HTTP endpoint.
func (o DeliveryStreamSnowflakeRetryOptionsPtrOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeRetryOptions) *int {
		if v == nil {
			return nil
		}
		return v.DurationInSeconds
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamSnowflakeRoleConfiguration struct {
	// Enable Snowflake role
	Enabled *bool `pulumi:"enabled"`
	// The Snowflake role you wish to configure
	SnowflakeRole *string `pulumi:"snowflakeRole"`
}

// DeliveryStreamSnowflakeRoleConfigurationInput is an input type that accepts DeliveryStreamSnowflakeRoleConfigurationArgs and DeliveryStreamSnowflakeRoleConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamSnowflakeRoleConfigurationInput` via:
//
//	DeliveryStreamSnowflakeRoleConfigurationArgs{...}
type DeliveryStreamSnowflakeRoleConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamSnowflakeRoleConfigurationOutput() DeliveryStreamSnowflakeRoleConfigurationOutput
	ToDeliveryStreamSnowflakeRoleConfigurationOutputWithContext(context.Context) DeliveryStreamSnowflakeRoleConfigurationOutput
}

type DeliveryStreamSnowflakeRoleConfigurationArgs struct {
	// Enable Snowflake role
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The Snowflake role you wish to configure
	SnowflakeRole pulumi.StringPtrInput `pulumi:"snowflakeRole"`
}

func (DeliveryStreamSnowflakeRoleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSnowflakeRoleConfiguration)(nil)).Elem()
}

func (i DeliveryStreamSnowflakeRoleConfigurationArgs) ToDeliveryStreamSnowflakeRoleConfigurationOutput() DeliveryStreamSnowflakeRoleConfigurationOutput {
	return i.ToDeliveryStreamSnowflakeRoleConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamSnowflakeRoleConfigurationArgs) ToDeliveryStreamSnowflakeRoleConfigurationOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeRoleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSnowflakeRoleConfigurationOutput)
}

func (i DeliveryStreamSnowflakeRoleConfigurationArgs) ToDeliveryStreamSnowflakeRoleConfigurationPtrOutput() DeliveryStreamSnowflakeRoleConfigurationPtrOutput {
	return i.ToDeliveryStreamSnowflakeRoleConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamSnowflakeRoleConfigurationArgs) ToDeliveryStreamSnowflakeRoleConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeRoleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSnowflakeRoleConfigurationOutput).ToDeliveryStreamSnowflakeRoleConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamSnowflakeRoleConfigurationPtrInput is an input type that accepts DeliveryStreamSnowflakeRoleConfigurationArgs, DeliveryStreamSnowflakeRoleConfigurationPtr and DeliveryStreamSnowflakeRoleConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamSnowflakeRoleConfigurationPtrInput` via:
//
//	        DeliveryStreamSnowflakeRoleConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamSnowflakeRoleConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamSnowflakeRoleConfigurationPtrOutput() DeliveryStreamSnowflakeRoleConfigurationPtrOutput
	ToDeliveryStreamSnowflakeRoleConfigurationPtrOutputWithContext(context.Context) DeliveryStreamSnowflakeRoleConfigurationPtrOutput
}

type deliveryStreamSnowflakeRoleConfigurationPtrType DeliveryStreamSnowflakeRoleConfigurationArgs

func DeliveryStreamSnowflakeRoleConfigurationPtr(v *DeliveryStreamSnowflakeRoleConfigurationArgs) DeliveryStreamSnowflakeRoleConfigurationPtrInput {
	return (*deliveryStreamSnowflakeRoleConfigurationPtrType)(v)
}

func (*deliveryStreamSnowflakeRoleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSnowflakeRoleConfiguration)(nil)).Elem()
}

func (i *deliveryStreamSnowflakeRoleConfigurationPtrType) ToDeliveryStreamSnowflakeRoleConfigurationPtrOutput() DeliveryStreamSnowflakeRoleConfigurationPtrOutput {
	return i.ToDeliveryStreamSnowflakeRoleConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamSnowflakeRoleConfigurationPtrType) ToDeliveryStreamSnowflakeRoleConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeRoleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSnowflakeRoleConfigurationPtrOutput)
}

type DeliveryStreamSnowflakeRoleConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSnowflakeRoleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSnowflakeRoleConfiguration)(nil)).Elem()
}

func (o DeliveryStreamSnowflakeRoleConfigurationOutput) ToDeliveryStreamSnowflakeRoleConfigurationOutput() DeliveryStreamSnowflakeRoleConfigurationOutput {
	return o
}

func (o DeliveryStreamSnowflakeRoleConfigurationOutput) ToDeliveryStreamSnowflakeRoleConfigurationOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeRoleConfigurationOutput {
	return o
}

func (o DeliveryStreamSnowflakeRoleConfigurationOutput) ToDeliveryStreamSnowflakeRoleConfigurationPtrOutput() DeliveryStreamSnowflakeRoleConfigurationPtrOutput {
	return o.ToDeliveryStreamSnowflakeRoleConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamSnowflakeRoleConfigurationOutput) ToDeliveryStreamSnowflakeRoleConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeRoleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamSnowflakeRoleConfiguration) *DeliveryStreamSnowflakeRoleConfiguration {
		return &v
	}).(DeliveryStreamSnowflakeRoleConfigurationPtrOutput)
}

// Enable Snowflake role
func (o DeliveryStreamSnowflakeRoleConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeRoleConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The Snowflake role you wish to configure
func (o DeliveryStreamSnowflakeRoleConfigurationOutput) SnowflakeRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeRoleConfiguration) *string { return v.SnowflakeRole }).(pulumi.StringPtrOutput)
}

type DeliveryStreamSnowflakeRoleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSnowflakeRoleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSnowflakeRoleConfiguration)(nil)).Elem()
}

func (o DeliveryStreamSnowflakeRoleConfigurationPtrOutput) ToDeliveryStreamSnowflakeRoleConfigurationPtrOutput() DeliveryStreamSnowflakeRoleConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamSnowflakeRoleConfigurationPtrOutput) ToDeliveryStreamSnowflakeRoleConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeRoleConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamSnowflakeRoleConfigurationPtrOutput) Elem() DeliveryStreamSnowflakeRoleConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeRoleConfiguration) DeliveryStreamSnowflakeRoleConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamSnowflakeRoleConfiguration
		return ret
	}).(DeliveryStreamSnowflakeRoleConfigurationOutput)
}

// Enable Snowflake role
func (o DeliveryStreamSnowflakeRoleConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeRoleConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Snowflake role you wish to configure
func (o DeliveryStreamSnowflakeRoleConfigurationPtrOutput) SnowflakeRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeRoleConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SnowflakeRole
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamSnowflakeVpcConfiguration struct {
	// The VPCE ID for Firehose to privately connect with Snowflake. The ID format is com.amazonaws.vpce.[region].vpce-svc-<[id]>. For more information, see [Amazon PrivateLink & Snowflake](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-security-privatelink)
	PrivateLinkVpceId string `pulumi:"privateLinkVpceId"`
}

// DeliveryStreamSnowflakeVpcConfigurationInput is an input type that accepts DeliveryStreamSnowflakeVpcConfigurationArgs and DeliveryStreamSnowflakeVpcConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamSnowflakeVpcConfigurationInput` via:
//
//	DeliveryStreamSnowflakeVpcConfigurationArgs{...}
type DeliveryStreamSnowflakeVpcConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamSnowflakeVpcConfigurationOutput() DeliveryStreamSnowflakeVpcConfigurationOutput
	ToDeliveryStreamSnowflakeVpcConfigurationOutputWithContext(context.Context) DeliveryStreamSnowflakeVpcConfigurationOutput
}

type DeliveryStreamSnowflakeVpcConfigurationArgs struct {
	// The VPCE ID for Firehose to privately connect with Snowflake. The ID format is com.amazonaws.vpce.[region].vpce-svc-<[id]>. For more information, see [Amazon PrivateLink & Snowflake](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-security-privatelink)
	PrivateLinkVpceId pulumi.StringInput `pulumi:"privateLinkVpceId"`
}

func (DeliveryStreamSnowflakeVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSnowflakeVpcConfiguration)(nil)).Elem()
}

func (i DeliveryStreamSnowflakeVpcConfigurationArgs) ToDeliveryStreamSnowflakeVpcConfigurationOutput() DeliveryStreamSnowflakeVpcConfigurationOutput {
	return i.ToDeliveryStreamSnowflakeVpcConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamSnowflakeVpcConfigurationArgs) ToDeliveryStreamSnowflakeVpcConfigurationOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSnowflakeVpcConfigurationOutput)
}

func (i DeliveryStreamSnowflakeVpcConfigurationArgs) ToDeliveryStreamSnowflakeVpcConfigurationPtrOutput() DeliveryStreamSnowflakeVpcConfigurationPtrOutput {
	return i.ToDeliveryStreamSnowflakeVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamSnowflakeVpcConfigurationArgs) ToDeliveryStreamSnowflakeVpcConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSnowflakeVpcConfigurationOutput).ToDeliveryStreamSnowflakeVpcConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamSnowflakeVpcConfigurationPtrInput is an input type that accepts DeliveryStreamSnowflakeVpcConfigurationArgs, DeliveryStreamSnowflakeVpcConfigurationPtr and DeliveryStreamSnowflakeVpcConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamSnowflakeVpcConfigurationPtrInput` via:
//
//	        DeliveryStreamSnowflakeVpcConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamSnowflakeVpcConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamSnowflakeVpcConfigurationPtrOutput() DeliveryStreamSnowflakeVpcConfigurationPtrOutput
	ToDeliveryStreamSnowflakeVpcConfigurationPtrOutputWithContext(context.Context) DeliveryStreamSnowflakeVpcConfigurationPtrOutput
}

type deliveryStreamSnowflakeVpcConfigurationPtrType DeliveryStreamSnowflakeVpcConfigurationArgs

func DeliveryStreamSnowflakeVpcConfigurationPtr(v *DeliveryStreamSnowflakeVpcConfigurationArgs) DeliveryStreamSnowflakeVpcConfigurationPtrInput {
	return (*deliveryStreamSnowflakeVpcConfigurationPtrType)(v)
}

func (*deliveryStreamSnowflakeVpcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSnowflakeVpcConfiguration)(nil)).Elem()
}

func (i *deliveryStreamSnowflakeVpcConfigurationPtrType) ToDeliveryStreamSnowflakeVpcConfigurationPtrOutput() DeliveryStreamSnowflakeVpcConfigurationPtrOutput {
	return i.ToDeliveryStreamSnowflakeVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamSnowflakeVpcConfigurationPtrType) ToDeliveryStreamSnowflakeVpcConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSnowflakeVpcConfigurationPtrOutput)
}

type DeliveryStreamSnowflakeVpcConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSnowflakeVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSnowflakeVpcConfiguration)(nil)).Elem()
}

func (o DeliveryStreamSnowflakeVpcConfigurationOutput) ToDeliveryStreamSnowflakeVpcConfigurationOutput() DeliveryStreamSnowflakeVpcConfigurationOutput {
	return o
}

func (o DeliveryStreamSnowflakeVpcConfigurationOutput) ToDeliveryStreamSnowflakeVpcConfigurationOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeVpcConfigurationOutput {
	return o
}

func (o DeliveryStreamSnowflakeVpcConfigurationOutput) ToDeliveryStreamSnowflakeVpcConfigurationPtrOutput() DeliveryStreamSnowflakeVpcConfigurationPtrOutput {
	return o.ToDeliveryStreamSnowflakeVpcConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamSnowflakeVpcConfigurationOutput) ToDeliveryStreamSnowflakeVpcConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeVpcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamSnowflakeVpcConfiguration) *DeliveryStreamSnowflakeVpcConfiguration {
		return &v
	}).(DeliveryStreamSnowflakeVpcConfigurationPtrOutput)
}

// The VPCE ID for Firehose to privately connect with Snowflake. The ID format is com.amazonaws.vpce.[region].vpce-svc-<[id]>. For more information, see [Amazon PrivateLink & Snowflake](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-security-privatelink)
func (o DeliveryStreamSnowflakeVpcConfigurationOutput) PrivateLinkVpceId() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamSnowflakeVpcConfiguration) string { return v.PrivateLinkVpceId }).(pulumi.StringOutput)
}

type DeliveryStreamSnowflakeVpcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSnowflakeVpcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSnowflakeVpcConfiguration)(nil)).Elem()
}

func (o DeliveryStreamSnowflakeVpcConfigurationPtrOutput) ToDeliveryStreamSnowflakeVpcConfigurationPtrOutput() DeliveryStreamSnowflakeVpcConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamSnowflakeVpcConfigurationPtrOutput) ToDeliveryStreamSnowflakeVpcConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSnowflakeVpcConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamSnowflakeVpcConfigurationPtrOutput) Elem() DeliveryStreamSnowflakeVpcConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeVpcConfiguration) DeliveryStreamSnowflakeVpcConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamSnowflakeVpcConfiguration
		return ret
	}).(DeliveryStreamSnowflakeVpcConfigurationOutput)
}

// The VPCE ID for Firehose to privately connect with Snowflake. The ID format is com.amazonaws.vpce.[region].vpce-svc-<[id]>. For more information, see [Amazon PrivateLink & Snowflake](https://docs.aws.amazon.com/https://docs.snowflake.com/en/user-guide/admin-security-privatelink)
func (o DeliveryStreamSnowflakeVpcConfigurationPtrOutput) PrivateLinkVpceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSnowflakeVpcConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateLinkVpceId
	}).(pulumi.StringPtrOutput)
}

type DeliveryStreamSplunkBufferingHints struct {
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 60 (1 minute).
	IntervalInSeconds *int `pulumi:"intervalInSeconds"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	SizeInMbs *int `pulumi:"sizeInMbs"`
}

// DeliveryStreamSplunkBufferingHintsInput is an input type that accepts DeliveryStreamSplunkBufferingHintsArgs and DeliveryStreamSplunkBufferingHintsOutput values.
// You can construct a concrete instance of `DeliveryStreamSplunkBufferingHintsInput` via:
//
//	DeliveryStreamSplunkBufferingHintsArgs{...}
type DeliveryStreamSplunkBufferingHintsInput interface {
	pulumi.Input

	ToDeliveryStreamSplunkBufferingHintsOutput() DeliveryStreamSplunkBufferingHintsOutput
	ToDeliveryStreamSplunkBufferingHintsOutputWithContext(context.Context) DeliveryStreamSplunkBufferingHintsOutput
}

type DeliveryStreamSplunkBufferingHintsArgs struct {
	// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 60 (1 minute).
	IntervalInSeconds pulumi.IntPtrInput `pulumi:"intervalInSeconds"`
	// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
	SizeInMbs pulumi.IntPtrInput `pulumi:"sizeInMbs"`
}

func (DeliveryStreamSplunkBufferingHintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSplunkBufferingHints)(nil)).Elem()
}

func (i DeliveryStreamSplunkBufferingHintsArgs) ToDeliveryStreamSplunkBufferingHintsOutput() DeliveryStreamSplunkBufferingHintsOutput {
	return i.ToDeliveryStreamSplunkBufferingHintsOutputWithContext(context.Background())
}

func (i DeliveryStreamSplunkBufferingHintsArgs) ToDeliveryStreamSplunkBufferingHintsOutputWithContext(ctx context.Context) DeliveryStreamSplunkBufferingHintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSplunkBufferingHintsOutput)
}

func (i DeliveryStreamSplunkBufferingHintsArgs) ToDeliveryStreamSplunkBufferingHintsPtrOutput() DeliveryStreamSplunkBufferingHintsPtrOutput {
	return i.ToDeliveryStreamSplunkBufferingHintsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamSplunkBufferingHintsArgs) ToDeliveryStreamSplunkBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamSplunkBufferingHintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSplunkBufferingHintsOutput).ToDeliveryStreamSplunkBufferingHintsPtrOutputWithContext(ctx)
}

// DeliveryStreamSplunkBufferingHintsPtrInput is an input type that accepts DeliveryStreamSplunkBufferingHintsArgs, DeliveryStreamSplunkBufferingHintsPtr and DeliveryStreamSplunkBufferingHintsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamSplunkBufferingHintsPtrInput` via:
//
//	        DeliveryStreamSplunkBufferingHintsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamSplunkBufferingHintsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamSplunkBufferingHintsPtrOutput() DeliveryStreamSplunkBufferingHintsPtrOutput
	ToDeliveryStreamSplunkBufferingHintsPtrOutputWithContext(context.Context) DeliveryStreamSplunkBufferingHintsPtrOutput
}

type deliveryStreamSplunkBufferingHintsPtrType DeliveryStreamSplunkBufferingHintsArgs

func DeliveryStreamSplunkBufferingHintsPtr(v *DeliveryStreamSplunkBufferingHintsArgs) DeliveryStreamSplunkBufferingHintsPtrInput {
	return (*deliveryStreamSplunkBufferingHintsPtrType)(v)
}

func (*deliveryStreamSplunkBufferingHintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSplunkBufferingHints)(nil)).Elem()
}

func (i *deliveryStreamSplunkBufferingHintsPtrType) ToDeliveryStreamSplunkBufferingHintsPtrOutput() DeliveryStreamSplunkBufferingHintsPtrOutput {
	return i.ToDeliveryStreamSplunkBufferingHintsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamSplunkBufferingHintsPtrType) ToDeliveryStreamSplunkBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamSplunkBufferingHintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSplunkBufferingHintsPtrOutput)
}

type DeliveryStreamSplunkBufferingHintsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSplunkBufferingHintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSplunkBufferingHints)(nil)).Elem()
}

func (o DeliveryStreamSplunkBufferingHintsOutput) ToDeliveryStreamSplunkBufferingHintsOutput() DeliveryStreamSplunkBufferingHintsOutput {
	return o
}

func (o DeliveryStreamSplunkBufferingHintsOutput) ToDeliveryStreamSplunkBufferingHintsOutputWithContext(ctx context.Context) DeliveryStreamSplunkBufferingHintsOutput {
	return o
}

func (o DeliveryStreamSplunkBufferingHintsOutput) ToDeliveryStreamSplunkBufferingHintsPtrOutput() DeliveryStreamSplunkBufferingHintsPtrOutput {
	return o.ToDeliveryStreamSplunkBufferingHintsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamSplunkBufferingHintsOutput) ToDeliveryStreamSplunkBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamSplunkBufferingHintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamSplunkBufferingHints) *DeliveryStreamSplunkBufferingHints {
		return &v
	}).(DeliveryStreamSplunkBufferingHintsPtrOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 60 (1 minute).
func (o DeliveryStreamSplunkBufferingHintsOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkBufferingHints) *int { return v.IntervalInSeconds }).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
func (o DeliveryStreamSplunkBufferingHintsOutput) SizeInMbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkBufferingHints) *int { return v.SizeInMbs }).(pulumi.IntPtrOutput)
}

type DeliveryStreamSplunkBufferingHintsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSplunkBufferingHintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSplunkBufferingHints)(nil)).Elem()
}

func (o DeliveryStreamSplunkBufferingHintsPtrOutput) ToDeliveryStreamSplunkBufferingHintsPtrOutput() DeliveryStreamSplunkBufferingHintsPtrOutput {
	return o
}

func (o DeliveryStreamSplunkBufferingHintsPtrOutput) ToDeliveryStreamSplunkBufferingHintsPtrOutputWithContext(ctx context.Context) DeliveryStreamSplunkBufferingHintsPtrOutput {
	return o
}

func (o DeliveryStreamSplunkBufferingHintsPtrOutput) Elem() DeliveryStreamSplunkBufferingHintsOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkBufferingHints) DeliveryStreamSplunkBufferingHints {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamSplunkBufferingHints
		return ret
	}).(DeliveryStreamSplunkBufferingHintsOutput)
}

// Buffer incoming data for the specified period of time, in seconds, before delivering it to the destination. The default value is 60 (1 minute).
func (o DeliveryStreamSplunkBufferingHintsPtrOutput) IntervalInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkBufferingHints) *int {
		if v == nil {
			return nil
		}
		return v.IntervalInSeconds
	}).(pulumi.IntPtrOutput)
}

// Buffer incoming data to the specified size, in MBs, before delivering it to the destination. The default value is 5.
func (o DeliveryStreamSplunkBufferingHintsPtrOutput) SizeInMbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkBufferingHints) *int {
		if v == nil {
			return nil
		}
		return v.SizeInMbs
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamSplunkDestinationConfiguration struct {
	// The buffering options. If no value is specified, the default values for Splunk are used.
	BufferingHints *DeliveryStreamSplunkBufferingHints `pulumi:"bufferingHints"`
	// The Amazon CloudWatch logging options for your delivery stream.
	CloudWatchLoggingOptions *DeliveryStreamCloudWatchLoggingOptions `pulumi:"cloudWatchLoggingOptions"`
	// The amount of time that Firehose waits to receive an acknowledgment from Splunk after it sends it data. At the end of the timeout period, Firehose either tries to send the data again or considers it an error, based on your retry settings.
	HecAcknowledgmentTimeoutInSeconds *int `pulumi:"hecAcknowledgmentTimeoutInSeconds"`
	// The HTTP Event Collector (HEC) endpoint to which Firehose sends your data.
	HecEndpoint string `pulumi:"hecEndpoint"`
	// This type can be either `Raw` or `Event` .
	HecEndpointType DeliveryStreamSplunkDestinationConfigurationHecEndpointType `pulumi:"hecEndpointType"`
	// This is a GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	HecToken *string `pulumi:"hecToken"`
	// The data processing configuration.
	ProcessingConfiguration *DeliveryStreamProcessingConfiguration `pulumi:"processingConfiguration"`
	// The retry behavior in case Firehose is unable to deliver data to Splunk, or if it doesn't receive an acknowledgment of receipt from Splunk.
	RetryOptions *DeliveryStreamSplunkRetryOptions `pulumi:"retryOptions"`
	// Defines how documents should be delivered to Amazon S3. When set to `FailedEventsOnly` , Firehose writes any data that could not be indexed to the configured Amazon S3 destination. When set to `AllEvents` , Firehose delivers all incoming records to Amazon S3, and also writes failed documents to Amazon S3. The default value is `FailedEventsOnly` .
	//
	// You can update this backup mode from `FailedEventsOnly` to `AllEvents` . You can't update it from `AllEvents` to `FailedEventsOnly` .
	S3BackupMode *string `pulumi:"s3BackupMode"`
	// The configuration for the backup Amazon S3 location.
	S3Configuration DeliveryStreamS3DestinationConfiguration `pulumi:"s3Configuration"`
	// The configuration that defines how you access secrets for Splunk.
	SecretsManagerConfiguration *DeliveryStreamSecretsManagerConfiguration `pulumi:"secretsManagerConfiguration"`
}

// DeliveryStreamSplunkDestinationConfigurationInput is an input type that accepts DeliveryStreamSplunkDestinationConfigurationArgs and DeliveryStreamSplunkDestinationConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamSplunkDestinationConfigurationInput` via:
//
//	DeliveryStreamSplunkDestinationConfigurationArgs{...}
type DeliveryStreamSplunkDestinationConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamSplunkDestinationConfigurationOutput() DeliveryStreamSplunkDestinationConfigurationOutput
	ToDeliveryStreamSplunkDestinationConfigurationOutputWithContext(context.Context) DeliveryStreamSplunkDestinationConfigurationOutput
}

type DeliveryStreamSplunkDestinationConfigurationArgs struct {
	// The buffering options. If no value is specified, the default values for Splunk are used.
	BufferingHints DeliveryStreamSplunkBufferingHintsPtrInput `pulumi:"bufferingHints"`
	// The Amazon CloudWatch logging options for your delivery stream.
	CloudWatchLoggingOptions DeliveryStreamCloudWatchLoggingOptionsPtrInput `pulumi:"cloudWatchLoggingOptions"`
	// The amount of time that Firehose waits to receive an acknowledgment from Splunk after it sends it data. At the end of the timeout period, Firehose either tries to send the data again or considers it an error, based on your retry settings.
	HecAcknowledgmentTimeoutInSeconds pulumi.IntPtrInput `pulumi:"hecAcknowledgmentTimeoutInSeconds"`
	// The HTTP Event Collector (HEC) endpoint to which Firehose sends your data.
	HecEndpoint pulumi.StringInput `pulumi:"hecEndpoint"`
	// This type can be either `Raw` or `Event` .
	HecEndpointType DeliveryStreamSplunkDestinationConfigurationHecEndpointTypeInput `pulumi:"hecEndpointType"`
	// This is a GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
	HecToken pulumi.StringPtrInput `pulumi:"hecToken"`
	// The data processing configuration.
	ProcessingConfiguration DeliveryStreamProcessingConfigurationPtrInput `pulumi:"processingConfiguration"`
	// The retry behavior in case Firehose is unable to deliver data to Splunk, or if it doesn't receive an acknowledgment of receipt from Splunk.
	RetryOptions DeliveryStreamSplunkRetryOptionsPtrInput `pulumi:"retryOptions"`
	// Defines how documents should be delivered to Amazon S3. When set to `FailedEventsOnly` , Firehose writes any data that could not be indexed to the configured Amazon S3 destination. When set to `AllEvents` , Firehose delivers all incoming records to Amazon S3, and also writes failed documents to Amazon S3. The default value is `FailedEventsOnly` .
	//
	// You can update this backup mode from `FailedEventsOnly` to `AllEvents` . You can't update it from `AllEvents` to `FailedEventsOnly` .
	S3BackupMode pulumi.StringPtrInput `pulumi:"s3BackupMode"`
	// The configuration for the backup Amazon S3 location.
	S3Configuration DeliveryStreamS3DestinationConfigurationInput `pulumi:"s3Configuration"`
	// The configuration that defines how you access secrets for Splunk.
	SecretsManagerConfiguration DeliveryStreamSecretsManagerConfigurationPtrInput `pulumi:"secretsManagerConfiguration"`
}

func (DeliveryStreamSplunkDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSplunkDestinationConfiguration)(nil)).Elem()
}

func (i DeliveryStreamSplunkDestinationConfigurationArgs) ToDeliveryStreamSplunkDestinationConfigurationOutput() DeliveryStreamSplunkDestinationConfigurationOutput {
	return i.ToDeliveryStreamSplunkDestinationConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamSplunkDestinationConfigurationArgs) ToDeliveryStreamSplunkDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamSplunkDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSplunkDestinationConfigurationOutput)
}

func (i DeliveryStreamSplunkDestinationConfigurationArgs) ToDeliveryStreamSplunkDestinationConfigurationPtrOutput() DeliveryStreamSplunkDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamSplunkDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamSplunkDestinationConfigurationArgs) ToDeliveryStreamSplunkDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSplunkDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSplunkDestinationConfigurationOutput).ToDeliveryStreamSplunkDestinationConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamSplunkDestinationConfigurationPtrInput is an input type that accepts DeliveryStreamSplunkDestinationConfigurationArgs, DeliveryStreamSplunkDestinationConfigurationPtr and DeliveryStreamSplunkDestinationConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamSplunkDestinationConfigurationPtrInput` via:
//
//	        DeliveryStreamSplunkDestinationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamSplunkDestinationConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamSplunkDestinationConfigurationPtrOutput() DeliveryStreamSplunkDestinationConfigurationPtrOutput
	ToDeliveryStreamSplunkDestinationConfigurationPtrOutputWithContext(context.Context) DeliveryStreamSplunkDestinationConfigurationPtrOutput
}

type deliveryStreamSplunkDestinationConfigurationPtrType DeliveryStreamSplunkDestinationConfigurationArgs

func DeliveryStreamSplunkDestinationConfigurationPtr(v *DeliveryStreamSplunkDestinationConfigurationArgs) DeliveryStreamSplunkDestinationConfigurationPtrInput {
	return (*deliveryStreamSplunkDestinationConfigurationPtrType)(v)
}

func (*deliveryStreamSplunkDestinationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSplunkDestinationConfiguration)(nil)).Elem()
}

func (i *deliveryStreamSplunkDestinationConfigurationPtrType) ToDeliveryStreamSplunkDestinationConfigurationPtrOutput() DeliveryStreamSplunkDestinationConfigurationPtrOutput {
	return i.ToDeliveryStreamSplunkDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamSplunkDestinationConfigurationPtrType) ToDeliveryStreamSplunkDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSplunkDestinationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSplunkDestinationConfigurationPtrOutput)
}

type DeliveryStreamSplunkDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSplunkDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSplunkDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamSplunkDestinationConfigurationOutput) ToDeliveryStreamSplunkDestinationConfigurationOutput() DeliveryStreamSplunkDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamSplunkDestinationConfigurationOutput) ToDeliveryStreamSplunkDestinationConfigurationOutputWithContext(ctx context.Context) DeliveryStreamSplunkDestinationConfigurationOutput {
	return o
}

func (o DeliveryStreamSplunkDestinationConfigurationOutput) ToDeliveryStreamSplunkDestinationConfigurationPtrOutput() DeliveryStreamSplunkDestinationConfigurationPtrOutput {
	return o.ToDeliveryStreamSplunkDestinationConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamSplunkDestinationConfigurationOutput) ToDeliveryStreamSplunkDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSplunkDestinationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamSplunkDestinationConfiguration {
		return &v
	}).(DeliveryStreamSplunkDestinationConfigurationPtrOutput)
}

// The buffering options. If no value is specified, the default values for Splunk are used.
func (o DeliveryStreamSplunkDestinationConfigurationOutput) BufferingHints() DeliveryStreamSplunkBufferingHintsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamSplunkBufferingHints {
		return v.BufferingHints
	}).(DeliveryStreamSplunkBufferingHintsPtrOutput)
}

// The Amazon CloudWatch logging options for your delivery stream.
func (o DeliveryStreamSplunkDestinationConfigurationOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The amount of time that Firehose waits to receive an acknowledgment from Splunk after it sends it data. At the end of the timeout period, Firehose either tries to send the data again or considers it an error, based on your retry settings.
func (o DeliveryStreamSplunkDestinationConfigurationOutput) HecAcknowledgmentTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkDestinationConfiguration) *int { return v.HecAcknowledgmentTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

// The HTTP Event Collector (HEC) endpoint to which Firehose sends your data.
func (o DeliveryStreamSplunkDestinationConfigurationOutput) HecEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkDestinationConfiguration) string { return v.HecEndpoint }).(pulumi.StringOutput)
}

// This type can be either `Raw` or `Event` .
func (o DeliveryStreamSplunkDestinationConfigurationOutput) HecEndpointType() DeliveryStreamSplunkDestinationConfigurationHecEndpointTypeOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkDestinationConfiguration) DeliveryStreamSplunkDestinationConfigurationHecEndpointType {
		return v.HecEndpointType
	}).(DeliveryStreamSplunkDestinationConfigurationHecEndpointTypeOutput)
}

// This is a GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
func (o DeliveryStreamSplunkDestinationConfigurationOutput) HecToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkDestinationConfiguration) *string { return v.HecToken }).(pulumi.StringPtrOutput)
}

// The data processing configuration.
func (o DeliveryStreamSplunkDestinationConfigurationOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The retry behavior in case Firehose is unable to deliver data to Splunk, or if it doesn't receive an acknowledgment of receipt from Splunk.
func (o DeliveryStreamSplunkDestinationConfigurationOutput) RetryOptions() DeliveryStreamSplunkRetryOptionsPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamSplunkRetryOptions {
		return v.RetryOptions
	}).(DeliveryStreamSplunkRetryOptionsPtrOutput)
}

// Defines how documents should be delivered to Amazon S3. When set to `FailedEventsOnly` , Firehose writes any data that could not be indexed to the configured Amazon S3 destination. When set to `AllEvents` , Firehose delivers all incoming records to Amazon S3, and also writes failed documents to Amazon S3. The default value is `FailedEventsOnly` .
//
// You can update this backup mode from `FailedEventsOnly` to `AllEvents` . You can't update it from `AllEvents` to `FailedEventsOnly` .
func (o DeliveryStreamSplunkDestinationConfigurationOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkDestinationConfiguration) *string { return v.S3BackupMode }).(pulumi.StringPtrOutput)
}

// The configuration for the backup Amazon S3 location.
func (o DeliveryStreamSplunkDestinationConfigurationOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkDestinationConfiguration) DeliveryStreamS3DestinationConfiguration {
		return v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationOutput)
}

// The configuration that defines how you access secrets for Splunk.
func (o DeliveryStreamSplunkDestinationConfigurationOutput) SecretsManagerConfiguration() DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamSecretsManagerConfiguration {
		return v.SecretsManagerConfiguration
	}).(DeliveryStreamSecretsManagerConfigurationPtrOutput)
}

type DeliveryStreamSplunkDestinationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSplunkDestinationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSplunkDestinationConfiguration)(nil)).Elem()
}

func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) ToDeliveryStreamSplunkDestinationConfigurationPtrOutput() DeliveryStreamSplunkDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) ToDeliveryStreamSplunkDestinationConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamSplunkDestinationConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) Elem() DeliveryStreamSplunkDestinationConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkDestinationConfiguration) DeliveryStreamSplunkDestinationConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamSplunkDestinationConfiguration
		return ret
	}).(DeliveryStreamSplunkDestinationConfigurationOutput)
}

// The buffering options. If no value is specified, the default values for Splunk are used.
func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) BufferingHints() DeliveryStreamSplunkBufferingHintsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamSplunkBufferingHints {
		if v == nil {
			return nil
		}
		return v.BufferingHints
	}).(DeliveryStreamSplunkBufferingHintsPtrOutput)
}

// The Amazon CloudWatch logging options for your delivery stream.
func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) CloudWatchLoggingOptions() DeliveryStreamCloudWatchLoggingOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamCloudWatchLoggingOptions {
		if v == nil {
			return nil
		}
		return v.CloudWatchLoggingOptions
	}).(DeliveryStreamCloudWatchLoggingOptionsPtrOutput)
}

// The amount of time that Firehose waits to receive an acknowledgment from Splunk after it sends it data. At the end of the timeout period, Firehose either tries to send the data again or considers it an error, based on your retry settings.
func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) HecAcknowledgmentTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkDestinationConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.HecAcknowledgmentTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

// The HTTP Event Collector (HEC) endpoint to which Firehose sends your data.
func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) HecEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.HecEndpoint
	}).(pulumi.StringPtrOutput)
}

// This type can be either `Raw` or `Event` .
func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) HecEndpointType() DeliveryStreamSplunkDestinationConfigurationHecEndpointTypePtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamSplunkDestinationConfigurationHecEndpointType {
		if v == nil {
			return nil
		}
		return &v.HecEndpointType
	}).(DeliveryStreamSplunkDestinationConfigurationHecEndpointTypePtrOutput)
}

// This is a GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.
func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) HecToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.HecToken
	}).(pulumi.StringPtrOutput)
}

// The data processing configuration.
func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) ProcessingConfiguration() DeliveryStreamProcessingConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamProcessingConfiguration {
		if v == nil {
			return nil
		}
		return v.ProcessingConfiguration
	}).(DeliveryStreamProcessingConfigurationPtrOutput)
}

// The retry behavior in case Firehose is unable to deliver data to Splunk, or if it doesn't receive an acknowledgment of receipt from Splunk.
func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) RetryOptions() DeliveryStreamSplunkRetryOptionsPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamSplunkRetryOptions {
		if v == nil {
			return nil
		}
		return v.RetryOptions
	}).(DeliveryStreamSplunkRetryOptionsPtrOutput)
}

// Defines how documents should be delivered to Amazon S3. When set to `FailedEventsOnly` , Firehose writes any data that could not be indexed to the configured Amazon S3 destination. When set to `AllEvents` , Firehose delivers all incoming records to Amazon S3, and also writes failed documents to Amazon S3. The default value is `FailedEventsOnly` .
//
// You can update this backup mode from `FailedEventsOnly` to `AllEvents` . You can't update it from `AllEvents` to `FailedEventsOnly` .
func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) S3BackupMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkDestinationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.S3BackupMode
	}).(pulumi.StringPtrOutput)
}

// The configuration for the backup Amazon S3 location.
func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) S3Configuration() DeliveryStreamS3DestinationConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamS3DestinationConfiguration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(DeliveryStreamS3DestinationConfigurationPtrOutput)
}

// The configuration that defines how you access secrets for Splunk.
func (o DeliveryStreamSplunkDestinationConfigurationPtrOutput) SecretsManagerConfiguration() DeliveryStreamSecretsManagerConfigurationPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkDestinationConfiguration) *DeliveryStreamSecretsManagerConfiguration {
		if v == nil {
			return nil
		}
		return v.SecretsManagerConfiguration
	}).(DeliveryStreamSecretsManagerConfigurationPtrOutput)
}

type DeliveryStreamSplunkRetryOptions struct {
	// The total amount of time that Firehose spends on retries. This duration starts after the initial attempt to send data to Splunk fails. It doesn't include the periods during which Firehose waits for acknowledgment from Splunk after each attempt.
	DurationInSeconds *int `pulumi:"durationInSeconds"`
}

// DeliveryStreamSplunkRetryOptionsInput is an input type that accepts DeliveryStreamSplunkRetryOptionsArgs and DeliveryStreamSplunkRetryOptionsOutput values.
// You can construct a concrete instance of `DeliveryStreamSplunkRetryOptionsInput` via:
//
//	DeliveryStreamSplunkRetryOptionsArgs{...}
type DeliveryStreamSplunkRetryOptionsInput interface {
	pulumi.Input

	ToDeliveryStreamSplunkRetryOptionsOutput() DeliveryStreamSplunkRetryOptionsOutput
	ToDeliveryStreamSplunkRetryOptionsOutputWithContext(context.Context) DeliveryStreamSplunkRetryOptionsOutput
}

type DeliveryStreamSplunkRetryOptionsArgs struct {
	// The total amount of time that Firehose spends on retries. This duration starts after the initial attempt to send data to Splunk fails. It doesn't include the periods during which Firehose waits for acknowledgment from Splunk after each attempt.
	DurationInSeconds pulumi.IntPtrInput `pulumi:"durationInSeconds"`
}

func (DeliveryStreamSplunkRetryOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSplunkRetryOptions)(nil)).Elem()
}

func (i DeliveryStreamSplunkRetryOptionsArgs) ToDeliveryStreamSplunkRetryOptionsOutput() DeliveryStreamSplunkRetryOptionsOutput {
	return i.ToDeliveryStreamSplunkRetryOptionsOutputWithContext(context.Background())
}

func (i DeliveryStreamSplunkRetryOptionsArgs) ToDeliveryStreamSplunkRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamSplunkRetryOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSplunkRetryOptionsOutput)
}

func (i DeliveryStreamSplunkRetryOptionsArgs) ToDeliveryStreamSplunkRetryOptionsPtrOutput() DeliveryStreamSplunkRetryOptionsPtrOutput {
	return i.ToDeliveryStreamSplunkRetryOptionsPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamSplunkRetryOptionsArgs) ToDeliveryStreamSplunkRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamSplunkRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSplunkRetryOptionsOutput).ToDeliveryStreamSplunkRetryOptionsPtrOutputWithContext(ctx)
}

// DeliveryStreamSplunkRetryOptionsPtrInput is an input type that accepts DeliveryStreamSplunkRetryOptionsArgs, DeliveryStreamSplunkRetryOptionsPtr and DeliveryStreamSplunkRetryOptionsPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamSplunkRetryOptionsPtrInput` via:
//
//	        DeliveryStreamSplunkRetryOptionsArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamSplunkRetryOptionsPtrInput interface {
	pulumi.Input

	ToDeliveryStreamSplunkRetryOptionsPtrOutput() DeliveryStreamSplunkRetryOptionsPtrOutput
	ToDeliveryStreamSplunkRetryOptionsPtrOutputWithContext(context.Context) DeliveryStreamSplunkRetryOptionsPtrOutput
}

type deliveryStreamSplunkRetryOptionsPtrType DeliveryStreamSplunkRetryOptionsArgs

func DeliveryStreamSplunkRetryOptionsPtr(v *DeliveryStreamSplunkRetryOptionsArgs) DeliveryStreamSplunkRetryOptionsPtrInput {
	return (*deliveryStreamSplunkRetryOptionsPtrType)(v)
}

func (*deliveryStreamSplunkRetryOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSplunkRetryOptions)(nil)).Elem()
}

func (i *deliveryStreamSplunkRetryOptionsPtrType) ToDeliveryStreamSplunkRetryOptionsPtrOutput() DeliveryStreamSplunkRetryOptionsPtrOutput {
	return i.ToDeliveryStreamSplunkRetryOptionsPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamSplunkRetryOptionsPtrType) ToDeliveryStreamSplunkRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamSplunkRetryOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamSplunkRetryOptionsPtrOutput)
}

type DeliveryStreamSplunkRetryOptionsOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSplunkRetryOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamSplunkRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamSplunkRetryOptionsOutput) ToDeliveryStreamSplunkRetryOptionsOutput() DeliveryStreamSplunkRetryOptionsOutput {
	return o
}

func (o DeliveryStreamSplunkRetryOptionsOutput) ToDeliveryStreamSplunkRetryOptionsOutputWithContext(ctx context.Context) DeliveryStreamSplunkRetryOptionsOutput {
	return o
}

func (o DeliveryStreamSplunkRetryOptionsOutput) ToDeliveryStreamSplunkRetryOptionsPtrOutput() DeliveryStreamSplunkRetryOptionsPtrOutput {
	return o.ToDeliveryStreamSplunkRetryOptionsPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamSplunkRetryOptionsOutput) ToDeliveryStreamSplunkRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamSplunkRetryOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamSplunkRetryOptions) *DeliveryStreamSplunkRetryOptions {
		return &v
	}).(DeliveryStreamSplunkRetryOptionsPtrOutput)
}

// The total amount of time that Firehose spends on retries. This duration starts after the initial attempt to send data to Splunk fails. It doesn't include the periods during which Firehose waits for acknowledgment from Splunk after each attempt.
func (o DeliveryStreamSplunkRetryOptionsOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeliveryStreamSplunkRetryOptions) *int { return v.DurationInSeconds }).(pulumi.IntPtrOutput)
}

type DeliveryStreamSplunkRetryOptionsPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamSplunkRetryOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamSplunkRetryOptions)(nil)).Elem()
}

func (o DeliveryStreamSplunkRetryOptionsPtrOutput) ToDeliveryStreamSplunkRetryOptionsPtrOutput() DeliveryStreamSplunkRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamSplunkRetryOptionsPtrOutput) ToDeliveryStreamSplunkRetryOptionsPtrOutputWithContext(ctx context.Context) DeliveryStreamSplunkRetryOptionsPtrOutput {
	return o
}

func (o DeliveryStreamSplunkRetryOptionsPtrOutput) Elem() DeliveryStreamSplunkRetryOptionsOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkRetryOptions) DeliveryStreamSplunkRetryOptions {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamSplunkRetryOptions
		return ret
	}).(DeliveryStreamSplunkRetryOptionsOutput)
}

// The total amount of time that Firehose spends on retries. This duration starts after the initial attempt to send data to Splunk fails. It doesn't include the periods during which Firehose waits for acknowledgment from Splunk after each attempt.
func (o DeliveryStreamSplunkRetryOptionsPtrOutput) DurationInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamSplunkRetryOptions) *int {
		if v == nil {
			return nil
		}
		return v.DurationInSeconds
	}).(pulumi.IntPtrOutput)
}

type DeliveryStreamTag struct {
	// A unique identifier for the tag. Maximum length: 128 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @
	Key string `pulumi:"key"`
	// An optional string, which you can use to describe or define the tag. Maximum length: 256 characters. Valid characters: Unicode letters, digits, white space, _ . / = + - % @
	Value *string `pulumi:"value"`
}

type DeliveryStreamVpcConfiguration struct {
	// The ARN of the IAM role that you want the delivery stream to use to create endpoints in the destination VPC. You can use your existing Kinesis Data Firehose delivery role or you can specify a new role. In either case, make sure that the role trusts the Kinesis Data Firehose service principal and that it grants the following permissions:
	//
	// - `ec2:DescribeVpcs`
	// - `ec2:DescribeVpcAttribute`
	// - `ec2:DescribeSubnets`
	// - `ec2:DescribeSecurityGroups`
	// - `ec2:DescribeNetworkInterfaces`
	// - `ec2:CreateNetworkInterface`
	// - `ec2:CreateNetworkInterfacePermission`
	// - `ec2:DeleteNetworkInterface`
	//
	// If you revoke these permissions after you create the delivery stream, Kinesis Data Firehose can't scale out by creating more ENIs when necessary. You might therefore see a degradation in performance.
	RoleArn string `pulumi:"roleArn"`
	// The IDs of the security groups that you want Kinesis Data Firehose to use when it creates ENIs in the VPC of the Amazon ES destination. You can use the same security group that the Amazon ES domain uses or different ones. If you specify different security groups here, ensure that they allow outbound HTTPS traffic to the Amazon ES domain's security group. Also ensure that the Amazon ES domain's security group allows HTTPS traffic from the security groups specified here. If you use the same security group for both your delivery stream and the Amazon ES domain, make sure the security group inbound rule allows HTTPS traffic.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The IDs of the subnets that Kinesis Data Firehose uses to create ENIs in the VPC of the Amazon ES destination. Make sure that the routing tables and inbound and outbound rules allow traffic to flow from the subnets whose IDs are specified here to the subnets that have the destination Amazon ES endpoints. Kinesis Data Firehose creates at least one ENI in each of the subnets that are specified here. Do not delete or modify these ENIs.
	//
	// The number of ENIs that Kinesis Data Firehose creates in the subnets specified here scales up and down automatically based on throughput. To enable Kinesis Data Firehose to scale up the number of ENIs to match throughput, ensure that you have sufficient quota. To help you calculate the quota you need, assume that Kinesis Data Firehose can create up to three ENIs for this delivery stream for each of the subnets specified here.
	SubnetIds []string `pulumi:"subnetIds"`
}

// DeliveryStreamVpcConfigurationInput is an input type that accepts DeliveryStreamVpcConfigurationArgs and DeliveryStreamVpcConfigurationOutput values.
// You can construct a concrete instance of `DeliveryStreamVpcConfigurationInput` via:
//
//	DeliveryStreamVpcConfigurationArgs{...}
type DeliveryStreamVpcConfigurationInput interface {
	pulumi.Input

	ToDeliveryStreamVpcConfigurationOutput() DeliveryStreamVpcConfigurationOutput
	ToDeliveryStreamVpcConfigurationOutputWithContext(context.Context) DeliveryStreamVpcConfigurationOutput
}

type DeliveryStreamVpcConfigurationArgs struct {
	// The ARN of the IAM role that you want the delivery stream to use to create endpoints in the destination VPC. You can use your existing Kinesis Data Firehose delivery role or you can specify a new role. In either case, make sure that the role trusts the Kinesis Data Firehose service principal and that it grants the following permissions:
	//
	// - `ec2:DescribeVpcs`
	// - `ec2:DescribeVpcAttribute`
	// - `ec2:DescribeSubnets`
	// - `ec2:DescribeSecurityGroups`
	// - `ec2:DescribeNetworkInterfaces`
	// - `ec2:CreateNetworkInterface`
	// - `ec2:CreateNetworkInterfacePermission`
	// - `ec2:DeleteNetworkInterface`
	//
	// If you revoke these permissions after you create the delivery stream, Kinesis Data Firehose can't scale out by creating more ENIs when necessary. You might therefore see a degradation in performance.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The IDs of the security groups that you want Kinesis Data Firehose to use when it creates ENIs in the VPC of the Amazon ES destination. You can use the same security group that the Amazon ES domain uses or different ones. If you specify different security groups here, ensure that they allow outbound HTTPS traffic to the Amazon ES domain's security group. Also ensure that the Amazon ES domain's security group allows HTTPS traffic from the security groups specified here. If you use the same security group for both your delivery stream and the Amazon ES domain, make sure the security group inbound rule allows HTTPS traffic.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The IDs of the subnets that Kinesis Data Firehose uses to create ENIs in the VPC of the Amazon ES destination. Make sure that the routing tables and inbound and outbound rules allow traffic to flow from the subnets whose IDs are specified here to the subnets that have the destination Amazon ES endpoints. Kinesis Data Firehose creates at least one ENI in each of the subnets that are specified here. Do not delete or modify these ENIs.
	//
	// The number of ENIs that Kinesis Data Firehose creates in the subnets specified here scales up and down automatically based on throughput. To enable Kinesis Data Firehose to scale up the number of ENIs to match throughput, ensure that you have sufficient quota. To help you calculate the quota you need, assume that Kinesis Data Firehose can create up to three ENIs for this delivery stream for each of the subnets specified here.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (DeliveryStreamVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamVpcConfiguration)(nil)).Elem()
}

func (i DeliveryStreamVpcConfigurationArgs) ToDeliveryStreamVpcConfigurationOutput() DeliveryStreamVpcConfigurationOutput {
	return i.ToDeliveryStreamVpcConfigurationOutputWithContext(context.Background())
}

func (i DeliveryStreamVpcConfigurationArgs) ToDeliveryStreamVpcConfigurationOutputWithContext(ctx context.Context) DeliveryStreamVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamVpcConfigurationOutput)
}

func (i DeliveryStreamVpcConfigurationArgs) ToDeliveryStreamVpcConfigurationPtrOutput() DeliveryStreamVpcConfigurationPtrOutput {
	return i.ToDeliveryStreamVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i DeliveryStreamVpcConfigurationArgs) ToDeliveryStreamVpcConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamVpcConfigurationOutput).ToDeliveryStreamVpcConfigurationPtrOutputWithContext(ctx)
}

// DeliveryStreamVpcConfigurationPtrInput is an input type that accepts DeliveryStreamVpcConfigurationArgs, DeliveryStreamVpcConfigurationPtr and DeliveryStreamVpcConfigurationPtrOutput values.
// You can construct a concrete instance of `DeliveryStreamVpcConfigurationPtrInput` via:
//
//	        DeliveryStreamVpcConfigurationArgs{...}
//
//	or:
//
//	        nil
type DeliveryStreamVpcConfigurationPtrInput interface {
	pulumi.Input

	ToDeliveryStreamVpcConfigurationPtrOutput() DeliveryStreamVpcConfigurationPtrOutput
	ToDeliveryStreamVpcConfigurationPtrOutputWithContext(context.Context) DeliveryStreamVpcConfigurationPtrOutput
}

type deliveryStreamVpcConfigurationPtrType DeliveryStreamVpcConfigurationArgs

func DeliveryStreamVpcConfigurationPtr(v *DeliveryStreamVpcConfigurationArgs) DeliveryStreamVpcConfigurationPtrInput {
	return (*deliveryStreamVpcConfigurationPtrType)(v)
}

func (*deliveryStreamVpcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamVpcConfiguration)(nil)).Elem()
}

func (i *deliveryStreamVpcConfigurationPtrType) ToDeliveryStreamVpcConfigurationPtrOutput() DeliveryStreamVpcConfigurationPtrOutput {
	return i.ToDeliveryStreamVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i *deliveryStreamVpcConfigurationPtrType) ToDeliveryStreamVpcConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryStreamVpcConfigurationPtrOutput)
}

type DeliveryStreamVpcConfigurationOutput struct{ *pulumi.OutputState }

func (DeliveryStreamVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryStreamVpcConfiguration)(nil)).Elem()
}

func (o DeliveryStreamVpcConfigurationOutput) ToDeliveryStreamVpcConfigurationOutput() DeliveryStreamVpcConfigurationOutput {
	return o
}

func (o DeliveryStreamVpcConfigurationOutput) ToDeliveryStreamVpcConfigurationOutputWithContext(ctx context.Context) DeliveryStreamVpcConfigurationOutput {
	return o
}

func (o DeliveryStreamVpcConfigurationOutput) ToDeliveryStreamVpcConfigurationPtrOutput() DeliveryStreamVpcConfigurationPtrOutput {
	return o.ToDeliveryStreamVpcConfigurationPtrOutputWithContext(context.Background())
}

func (o DeliveryStreamVpcConfigurationOutput) ToDeliveryStreamVpcConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamVpcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryStreamVpcConfiguration) *DeliveryStreamVpcConfiguration {
		return &v
	}).(DeliveryStreamVpcConfigurationPtrOutput)
}

// The ARN of the IAM role that you want the delivery stream to use to create endpoints in the destination VPC. You can use your existing Kinesis Data Firehose delivery role or you can specify a new role. In either case, make sure that the role trusts the Kinesis Data Firehose service principal and that it grants the following permissions:
//
// - `ec2:DescribeVpcs`
// - `ec2:DescribeVpcAttribute`
// - `ec2:DescribeSubnets`
// - `ec2:DescribeSecurityGroups`
// - `ec2:DescribeNetworkInterfaces`
// - `ec2:CreateNetworkInterface`
// - `ec2:CreateNetworkInterfacePermission`
// - `ec2:DeleteNetworkInterface`
//
// If you revoke these permissions after you create the delivery stream, Kinesis Data Firehose can't scale out by creating more ENIs when necessary. You might therefore see a degradation in performance.
func (o DeliveryStreamVpcConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeliveryStreamVpcConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The IDs of the security groups that you want Kinesis Data Firehose to use when it creates ENIs in the VPC of the Amazon ES destination. You can use the same security group that the Amazon ES domain uses or different ones. If you specify different security groups here, ensure that they allow outbound HTTPS traffic to the Amazon ES domain's security group. Also ensure that the Amazon ES domain's security group allows HTTPS traffic from the security groups specified here. If you use the same security group for both your delivery stream and the Amazon ES domain, make sure the security group inbound rule allows HTTPS traffic.
func (o DeliveryStreamVpcConfigurationOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeliveryStreamVpcConfiguration) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The IDs of the subnets that Kinesis Data Firehose uses to create ENIs in the VPC of the Amazon ES destination. Make sure that the routing tables and inbound and outbound rules allow traffic to flow from the subnets whose IDs are specified here to the subnets that have the destination Amazon ES endpoints. Kinesis Data Firehose creates at least one ENI in each of the subnets that are specified here. Do not delete or modify these ENIs.
//
// The number of ENIs that Kinesis Data Firehose creates in the subnets specified here scales up and down automatically based on throughput. To enable Kinesis Data Firehose to scale up the number of ENIs to match throughput, ensure that you have sufficient quota. To help you calculate the quota you need, assume that Kinesis Data Firehose can create up to three ENIs for this delivery stream for each of the subnets specified here.
func (o DeliveryStreamVpcConfigurationOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeliveryStreamVpcConfiguration) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type DeliveryStreamVpcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeliveryStreamVpcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryStreamVpcConfiguration)(nil)).Elem()
}

func (o DeliveryStreamVpcConfigurationPtrOutput) ToDeliveryStreamVpcConfigurationPtrOutput() DeliveryStreamVpcConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamVpcConfigurationPtrOutput) ToDeliveryStreamVpcConfigurationPtrOutputWithContext(ctx context.Context) DeliveryStreamVpcConfigurationPtrOutput {
	return o
}

func (o DeliveryStreamVpcConfigurationPtrOutput) Elem() DeliveryStreamVpcConfigurationOutput {
	return o.ApplyT(func(v *DeliveryStreamVpcConfiguration) DeliveryStreamVpcConfiguration {
		if v != nil {
			return *v
		}
		var ret DeliveryStreamVpcConfiguration
		return ret
	}).(DeliveryStreamVpcConfigurationOutput)
}

// The ARN of the IAM role that you want the delivery stream to use to create endpoints in the destination VPC. You can use your existing Kinesis Data Firehose delivery role or you can specify a new role. In either case, make sure that the role trusts the Kinesis Data Firehose service principal and that it grants the following permissions:
//
// - `ec2:DescribeVpcs`
// - `ec2:DescribeVpcAttribute`
// - `ec2:DescribeSubnets`
// - `ec2:DescribeSecurityGroups`
// - `ec2:DescribeNetworkInterfaces`
// - `ec2:CreateNetworkInterface`
// - `ec2:CreateNetworkInterfacePermission`
// - `ec2:DeleteNetworkInterface`
//
// If you revoke these permissions after you create the delivery stream, Kinesis Data Firehose can't scale out by creating more ENIs when necessary. You might therefore see a degradation in performance.
func (o DeliveryStreamVpcConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryStreamVpcConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The IDs of the security groups that you want Kinesis Data Firehose to use when it creates ENIs in the VPC of the Amazon ES destination. You can use the same security group that the Amazon ES domain uses or different ones. If you specify different security groups here, ensure that they allow outbound HTTPS traffic to the Amazon ES domain's security group. Also ensure that the Amazon ES domain's security group allows HTTPS traffic from the security groups specified here. If you use the same security group for both your delivery stream and the Amazon ES domain, make sure the security group inbound rule allows HTTPS traffic.
func (o DeliveryStreamVpcConfigurationPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeliveryStreamVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The IDs of the subnets that Kinesis Data Firehose uses to create ENIs in the VPC of the Amazon ES destination. Make sure that the routing tables and inbound and outbound rules allow traffic to flow from the subnets whose IDs are specified here to the subnets that have the destination Amazon ES endpoints. Kinesis Data Firehose creates at least one ENI in each of the subnets that are specified here. Do not delete or modify these ENIs.
//
// The number of ENIs that Kinesis Data Firehose creates in the subnets specified here scales up and down automatically based on throughput. To enable Kinesis Data Firehose to scale up the number of ENIs to match throughput, ensure that you have sufficient quota. To help you calculate the quota you need, assume that Kinesis Data Firehose can create up to three ENIs for this delivery stream for each of the subnets specified here.
func (o DeliveryStreamVpcConfigurationPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeliveryStreamVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAmazonOpenSearchServerlessBufferingHintsInput)(nil)).Elem(), DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrInput)(nil)).Elem(), DeliveryStreamAmazonOpenSearchServerlessBufferingHintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationInput)(nil)).Elem(), DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrInput)(nil)).Elem(), DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAmazonOpenSearchServerlessRetryOptionsInput)(nil)).Elem(), DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrInput)(nil)).Elem(), DeliveryStreamAmazonOpenSearchServerlessRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAmazonopensearchserviceBufferingHintsInput)(nil)).Elem(), DeliveryStreamAmazonopensearchserviceBufferingHintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAmazonopensearchserviceBufferingHintsPtrInput)(nil)).Elem(), DeliveryStreamAmazonopensearchserviceBufferingHintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAmazonopensearchserviceDestinationConfigurationInput)(nil)).Elem(), DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrInput)(nil)).Elem(), DeliveryStreamAmazonopensearchserviceDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAmazonopensearchserviceRetryOptionsInput)(nil)).Elem(), DeliveryStreamAmazonopensearchserviceRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAmazonopensearchserviceRetryOptionsPtrInput)(nil)).Elem(), DeliveryStreamAmazonopensearchserviceRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAuthenticationConfigurationInput)(nil)).Elem(), DeliveryStreamAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamAuthenticationConfigurationPtrInput)(nil)).Elem(), DeliveryStreamAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamBufferingHintsInput)(nil)).Elem(), DeliveryStreamBufferingHintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamBufferingHintsPtrInput)(nil)).Elem(), DeliveryStreamBufferingHintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamCloudWatchLoggingOptionsInput)(nil)).Elem(), DeliveryStreamCloudWatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamCloudWatchLoggingOptionsPtrInput)(nil)).Elem(), DeliveryStreamCloudWatchLoggingOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamCopyCommandInput)(nil)).Elem(), DeliveryStreamCopyCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamCopyCommandPtrInput)(nil)).Elem(), DeliveryStreamCopyCommandArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamDataFormatConversionConfigurationInput)(nil)).Elem(), DeliveryStreamDataFormatConversionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamDataFormatConversionConfigurationPtrInput)(nil)).Elem(), DeliveryStreamDataFormatConversionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamDeserializerInput)(nil)).Elem(), DeliveryStreamDeserializerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamDeserializerPtrInput)(nil)).Elem(), DeliveryStreamDeserializerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamDocumentIdOptionsInput)(nil)).Elem(), DeliveryStreamDocumentIdOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamDocumentIdOptionsPtrInput)(nil)).Elem(), DeliveryStreamDocumentIdOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamDynamicPartitioningConfigurationInput)(nil)).Elem(), DeliveryStreamDynamicPartitioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamDynamicPartitioningConfigurationPtrInput)(nil)).Elem(), DeliveryStreamDynamicPartitioningConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamElasticsearchBufferingHintsInput)(nil)).Elem(), DeliveryStreamElasticsearchBufferingHintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamElasticsearchBufferingHintsPtrInput)(nil)).Elem(), DeliveryStreamElasticsearchBufferingHintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamElasticsearchDestinationConfigurationInput)(nil)).Elem(), DeliveryStreamElasticsearchDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamElasticsearchDestinationConfigurationPtrInput)(nil)).Elem(), DeliveryStreamElasticsearchDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamElasticsearchRetryOptionsInput)(nil)).Elem(), DeliveryStreamElasticsearchRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamElasticsearchRetryOptionsPtrInput)(nil)).Elem(), DeliveryStreamElasticsearchRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamEncryptionConfigurationInput)(nil)).Elem(), DeliveryStreamEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamEncryptionConfigurationPtrInput)(nil)).Elem(), DeliveryStreamEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamEncryptionConfigurationInputTypeInput)(nil)).Elem(), DeliveryStreamEncryptionConfigurationInputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamEncryptionConfigurationInputTypePtrInput)(nil)).Elem(), DeliveryStreamEncryptionConfigurationInputTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamExtendedS3DestinationConfigurationInput)(nil)).Elem(), DeliveryStreamExtendedS3DestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamExtendedS3DestinationConfigurationPtrInput)(nil)).Elem(), DeliveryStreamExtendedS3DestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamHiveJsonSerDeInput)(nil)).Elem(), DeliveryStreamHiveJsonSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamHiveJsonSerDePtrInput)(nil)).Elem(), DeliveryStreamHiveJsonSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamHttpEndpointCommonAttributeInput)(nil)).Elem(), DeliveryStreamHttpEndpointCommonAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamHttpEndpointCommonAttributeArrayInput)(nil)).Elem(), DeliveryStreamHttpEndpointCommonAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamHttpEndpointConfigurationInput)(nil)).Elem(), DeliveryStreamHttpEndpointConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamHttpEndpointConfigurationPtrInput)(nil)).Elem(), DeliveryStreamHttpEndpointConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamHttpEndpointDestinationConfigurationInput)(nil)).Elem(), DeliveryStreamHttpEndpointDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamHttpEndpointDestinationConfigurationPtrInput)(nil)).Elem(), DeliveryStreamHttpEndpointDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamHttpEndpointRequestConfigurationInput)(nil)).Elem(), DeliveryStreamHttpEndpointRequestConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamHttpEndpointRequestConfigurationPtrInput)(nil)).Elem(), DeliveryStreamHttpEndpointRequestConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamInputFormatConfigurationInput)(nil)).Elem(), DeliveryStreamInputFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamInputFormatConfigurationPtrInput)(nil)).Elem(), DeliveryStreamInputFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamKinesisStreamSourceConfigurationInput)(nil)).Elem(), DeliveryStreamKinesisStreamSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamKinesisStreamSourceConfigurationPtrInput)(nil)).Elem(), DeliveryStreamKinesisStreamSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamKmsEncryptionConfigInput)(nil)).Elem(), DeliveryStreamKmsEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamKmsEncryptionConfigPtrInput)(nil)).Elem(), DeliveryStreamKmsEncryptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamMskSourceConfigurationInput)(nil)).Elem(), DeliveryStreamMskSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamMskSourceConfigurationPtrInput)(nil)).Elem(), DeliveryStreamMskSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamOpenXJsonSerDeInput)(nil)).Elem(), DeliveryStreamOpenXJsonSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamOpenXJsonSerDePtrInput)(nil)).Elem(), DeliveryStreamOpenXJsonSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamOrcSerDeInput)(nil)).Elem(), DeliveryStreamOrcSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamOrcSerDePtrInput)(nil)).Elem(), DeliveryStreamOrcSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamOutputFormatConfigurationInput)(nil)).Elem(), DeliveryStreamOutputFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamOutputFormatConfigurationPtrInput)(nil)).Elem(), DeliveryStreamOutputFormatConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamParquetSerDeInput)(nil)).Elem(), DeliveryStreamParquetSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamParquetSerDePtrInput)(nil)).Elem(), DeliveryStreamParquetSerDeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamProcessingConfigurationInput)(nil)).Elem(), DeliveryStreamProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamProcessingConfigurationPtrInput)(nil)).Elem(), DeliveryStreamProcessingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamProcessorInput)(nil)).Elem(), DeliveryStreamProcessorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamProcessorArrayInput)(nil)).Elem(), DeliveryStreamProcessorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamProcessorParameterInput)(nil)).Elem(), DeliveryStreamProcessorParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamProcessorParameterArrayInput)(nil)).Elem(), DeliveryStreamProcessorParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamRedshiftDestinationConfigurationInput)(nil)).Elem(), DeliveryStreamRedshiftDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamRedshiftDestinationConfigurationPtrInput)(nil)).Elem(), DeliveryStreamRedshiftDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamRedshiftRetryOptionsInput)(nil)).Elem(), DeliveryStreamRedshiftRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamRedshiftRetryOptionsPtrInput)(nil)).Elem(), DeliveryStreamRedshiftRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamRetryOptionsInput)(nil)).Elem(), DeliveryStreamRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamRetryOptionsPtrInput)(nil)).Elem(), DeliveryStreamRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamS3DestinationConfigurationInput)(nil)).Elem(), DeliveryStreamS3DestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamS3DestinationConfigurationPtrInput)(nil)).Elem(), DeliveryStreamS3DestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSchemaConfigurationInput)(nil)).Elem(), DeliveryStreamSchemaConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSchemaConfigurationPtrInput)(nil)).Elem(), DeliveryStreamSchemaConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSecretsManagerConfigurationInput)(nil)).Elem(), DeliveryStreamSecretsManagerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSecretsManagerConfigurationPtrInput)(nil)).Elem(), DeliveryStreamSecretsManagerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSerializerInput)(nil)).Elem(), DeliveryStreamSerializerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSerializerPtrInput)(nil)).Elem(), DeliveryStreamSerializerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSnowflakeDestinationConfigurationInput)(nil)).Elem(), DeliveryStreamSnowflakeDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSnowflakeDestinationConfigurationPtrInput)(nil)).Elem(), DeliveryStreamSnowflakeDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSnowflakeRetryOptionsInput)(nil)).Elem(), DeliveryStreamSnowflakeRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSnowflakeRetryOptionsPtrInput)(nil)).Elem(), DeliveryStreamSnowflakeRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSnowflakeRoleConfigurationInput)(nil)).Elem(), DeliveryStreamSnowflakeRoleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSnowflakeRoleConfigurationPtrInput)(nil)).Elem(), DeliveryStreamSnowflakeRoleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSnowflakeVpcConfigurationInput)(nil)).Elem(), DeliveryStreamSnowflakeVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSnowflakeVpcConfigurationPtrInput)(nil)).Elem(), DeliveryStreamSnowflakeVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSplunkBufferingHintsInput)(nil)).Elem(), DeliveryStreamSplunkBufferingHintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSplunkBufferingHintsPtrInput)(nil)).Elem(), DeliveryStreamSplunkBufferingHintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSplunkDestinationConfigurationInput)(nil)).Elem(), DeliveryStreamSplunkDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSplunkDestinationConfigurationPtrInput)(nil)).Elem(), DeliveryStreamSplunkDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSplunkRetryOptionsInput)(nil)).Elem(), DeliveryStreamSplunkRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamSplunkRetryOptionsPtrInput)(nil)).Elem(), DeliveryStreamSplunkRetryOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamVpcConfigurationInput)(nil)).Elem(), DeliveryStreamVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryStreamVpcConfigurationPtrInput)(nil)).Elem(), DeliveryStreamVpcConfigurationArgs{})
	pulumi.RegisterOutputType(DeliveryStreamAmazonOpenSearchServerlessBufferingHintsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAmazonOpenSearchServerlessBufferingHintsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAmazonOpenSearchServerlessDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAmazonOpenSearchServerlessRetryOptionsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAmazonOpenSearchServerlessRetryOptionsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAmazonopensearchserviceBufferingHintsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAmazonopensearchserviceBufferingHintsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAmazonopensearchserviceDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAmazonopensearchserviceDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAmazonopensearchserviceRetryOptionsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAmazonopensearchserviceRetryOptionsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAuthenticationConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamAuthenticationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamBufferingHintsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamBufferingHintsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamCloudWatchLoggingOptionsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamCloudWatchLoggingOptionsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamCopyCommandOutput{})
	pulumi.RegisterOutputType(DeliveryStreamCopyCommandPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamDataFormatConversionConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamDataFormatConversionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamDeserializerOutput{})
	pulumi.RegisterOutputType(DeliveryStreamDeserializerPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamDocumentIdOptionsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamDocumentIdOptionsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamDynamicPartitioningConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamDynamicPartitioningConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamElasticsearchBufferingHintsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamElasticsearchBufferingHintsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamElasticsearchDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamElasticsearchDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamElasticsearchRetryOptionsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamElasticsearchRetryOptionsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamEncryptionConfigurationInputTypeOutput{})
	pulumi.RegisterOutputType(DeliveryStreamEncryptionConfigurationInputTypePtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamExtendedS3DestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamExtendedS3DestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamHiveJsonSerDeOutput{})
	pulumi.RegisterOutputType(DeliveryStreamHiveJsonSerDePtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamHttpEndpointCommonAttributeOutput{})
	pulumi.RegisterOutputType(DeliveryStreamHttpEndpointCommonAttributeArrayOutput{})
	pulumi.RegisterOutputType(DeliveryStreamHttpEndpointConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamHttpEndpointConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamHttpEndpointDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamHttpEndpointDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamHttpEndpointRequestConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamHttpEndpointRequestConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamInputFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamInputFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamKinesisStreamSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamKinesisStreamSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamKmsEncryptionConfigOutput{})
	pulumi.RegisterOutputType(DeliveryStreamKmsEncryptionConfigPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamMskSourceConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamMskSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamOpenXJsonSerDeOutput{})
	pulumi.RegisterOutputType(DeliveryStreamOpenXJsonSerDePtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamOrcSerDeOutput{})
	pulumi.RegisterOutputType(DeliveryStreamOrcSerDePtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamOutputFormatConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamOutputFormatConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamParquetSerDeOutput{})
	pulumi.RegisterOutputType(DeliveryStreamParquetSerDePtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamProcessingConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamProcessingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamProcessorOutput{})
	pulumi.RegisterOutputType(DeliveryStreamProcessorArrayOutput{})
	pulumi.RegisterOutputType(DeliveryStreamProcessorParameterOutput{})
	pulumi.RegisterOutputType(DeliveryStreamProcessorParameterArrayOutput{})
	pulumi.RegisterOutputType(DeliveryStreamRedshiftDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamRedshiftDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamRedshiftRetryOptionsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamRedshiftRetryOptionsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamRetryOptionsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamRetryOptionsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamS3DestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamS3DestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSchemaConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSchemaConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSecretsManagerConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSecretsManagerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSerializerOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSerializerPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSnowflakeDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSnowflakeDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSnowflakeRetryOptionsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSnowflakeRetryOptionsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSnowflakeRoleConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSnowflakeRoleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSnowflakeVpcConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSnowflakeVpcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSplunkBufferingHintsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSplunkBufferingHintsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSplunkDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSplunkDestinationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSplunkRetryOptionsOutput{})
	pulumi.RegisterOutputType(DeliveryStreamSplunkRetryOptionsPtrOutput{})
	pulumi.RegisterOutputType(DeliveryStreamVpcConfigurationOutput{})
	pulumi.RegisterOutputType(DeliveryStreamVpcConfigurationPtrOutput{})
}
