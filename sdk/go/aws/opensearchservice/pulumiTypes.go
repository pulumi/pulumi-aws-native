// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearchservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DomainAdvancedSecurityOptionsInput struct {
	// Date and time when the migration period will be disabled. Only necessary when [enabling fine-grained access control on an existing domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing) .
	AnonymousAuthDisableDate *string `pulumi:"anonymousAuthDisableDate"`
	// True to enable a 30-day migration period during which administrators can create role mappings. Only necessary when [enabling fine-grained access control on an existing domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing) .
	AnonymousAuthEnabled *bool `pulumi:"anonymousAuthEnabled"`
	// True to enable fine-grained access control. You must also enable encryption of data at rest and node-to-node encryption. See [Fine-grained access control in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html) .
	Enabled *bool `pulumi:"enabled"`
	// True to enable the internal user database.
	InternalUserDatabaseEnabled *bool `pulumi:"internalUserDatabaseEnabled"`
	// Container for information about the JWT configuration of the Amazon OpenSearch Service.
	JwtOptions *DomainJwtOptions `pulumi:"jwtOptions"`
	// Specifies information about the master user.
	MasterUserOptions *DomainMasterUserOptions `pulumi:"masterUserOptions"`
	// Container for information about the SAML configuration for OpenSearch Dashboards.
	SamlOptions *DomainSamlOptions `pulumi:"samlOptions"`
}

// DomainAdvancedSecurityOptionsInputInput is an input type that accepts DomainAdvancedSecurityOptionsInputArgs and DomainAdvancedSecurityOptionsInputOutput values.
// You can construct a concrete instance of `DomainAdvancedSecurityOptionsInputInput` via:
//
//	DomainAdvancedSecurityOptionsInputArgs{...}
type DomainAdvancedSecurityOptionsInputInput interface {
	pulumi.Input

	ToDomainAdvancedSecurityOptionsInputOutput() DomainAdvancedSecurityOptionsInputOutput
	ToDomainAdvancedSecurityOptionsInputOutputWithContext(context.Context) DomainAdvancedSecurityOptionsInputOutput
}

type DomainAdvancedSecurityOptionsInputArgs struct {
	// Date and time when the migration period will be disabled. Only necessary when [enabling fine-grained access control on an existing domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing) .
	AnonymousAuthDisableDate pulumi.StringPtrInput `pulumi:"anonymousAuthDisableDate"`
	// True to enable a 30-day migration period during which administrators can create role mappings. Only necessary when [enabling fine-grained access control on an existing domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing) .
	AnonymousAuthEnabled pulumi.BoolPtrInput `pulumi:"anonymousAuthEnabled"`
	// True to enable fine-grained access control. You must also enable encryption of data at rest and node-to-node encryption. See [Fine-grained access control in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html) .
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// True to enable the internal user database.
	InternalUserDatabaseEnabled pulumi.BoolPtrInput `pulumi:"internalUserDatabaseEnabled"`
	// Container for information about the JWT configuration of the Amazon OpenSearch Service.
	JwtOptions DomainJwtOptionsPtrInput `pulumi:"jwtOptions"`
	// Specifies information about the master user.
	MasterUserOptions DomainMasterUserOptionsPtrInput `pulumi:"masterUserOptions"`
	// Container for information about the SAML configuration for OpenSearch Dashboards.
	SamlOptions DomainSamlOptionsPtrInput `pulumi:"samlOptions"`
}

func (DomainAdvancedSecurityOptionsInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAdvancedSecurityOptionsInput)(nil)).Elem()
}

func (i DomainAdvancedSecurityOptionsInputArgs) ToDomainAdvancedSecurityOptionsInputOutput() DomainAdvancedSecurityOptionsInputOutput {
	return i.ToDomainAdvancedSecurityOptionsInputOutputWithContext(context.Background())
}

func (i DomainAdvancedSecurityOptionsInputArgs) ToDomainAdvancedSecurityOptionsInputOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAdvancedSecurityOptionsInputOutput)
}

func (i DomainAdvancedSecurityOptionsInputArgs) ToDomainAdvancedSecurityOptionsInputPtrOutput() DomainAdvancedSecurityOptionsInputPtrOutput {
	return i.ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(context.Background())
}

func (i DomainAdvancedSecurityOptionsInputArgs) ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAdvancedSecurityOptionsInputOutput).ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(ctx)
}

// DomainAdvancedSecurityOptionsInputPtrInput is an input type that accepts DomainAdvancedSecurityOptionsInputArgs, DomainAdvancedSecurityOptionsInputPtr and DomainAdvancedSecurityOptionsInputPtrOutput values.
// You can construct a concrete instance of `DomainAdvancedSecurityOptionsInputPtrInput` via:
//
//	        DomainAdvancedSecurityOptionsInputArgs{...}
//
//	or:
//
//	        nil
type DomainAdvancedSecurityOptionsInputPtrInput interface {
	pulumi.Input

	ToDomainAdvancedSecurityOptionsInputPtrOutput() DomainAdvancedSecurityOptionsInputPtrOutput
	ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(context.Context) DomainAdvancedSecurityOptionsInputPtrOutput
}

type domainAdvancedSecurityOptionsInputPtrType DomainAdvancedSecurityOptionsInputArgs

func DomainAdvancedSecurityOptionsInputPtr(v *DomainAdvancedSecurityOptionsInputArgs) DomainAdvancedSecurityOptionsInputPtrInput {
	return (*domainAdvancedSecurityOptionsInputPtrType)(v)
}

func (*domainAdvancedSecurityOptionsInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAdvancedSecurityOptionsInput)(nil)).Elem()
}

func (i *domainAdvancedSecurityOptionsInputPtrType) ToDomainAdvancedSecurityOptionsInputPtrOutput() DomainAdvancedSecurityOptionsInputPtrOutput {
	return i.ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(context.Background())
}

func (i *domainAdvancedSecurityOptionsInputPtrType) ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAdvancedSecurityOptionsInputPtrOutput)
}

type DomainAdvancedSecurityOptionsInputOutput struct{ *pulumi.OutputState }

func (DomainAdvancedSecurityOptionsInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAdvancedSecurityOptionsInput)(nil)).Elem()
}

func (o DomainAdvancedSecurityOptionsInputOutput) ToDomainAdvancedSecurityOptionsInputOutput() DomainAdvancedSecurityOptionsInputOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsInputOutput) ToDomainAdvancedSecurityOptionsInputOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsInputOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsInputOutput) ToDomainAdvancedSecurityOptionsInputPtrOutput() DomainAdvancedSecurityOptionsInputPtrOutput {
	return o.ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(context.Background())
}

func (o DomainAdvancedSecurityOptionsInputOutput) ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainAdvancedSecurityOptionsInput) *DomainAdvancedSecurityOptionsInput {
		return &v
	}).(DomainAdvancedSecurityOptionsInputPtrOutput)
}

// Date and time when the migration period will be disabled. Only necessary when [enabling fine-grained access control on an existing domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing) .
func (o DomainAdvancedSecurityOptionsInputOutput) AnonymousAuthDisableDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *string { return v.AnonymousAuthDisableDate }).(pulumi.StringPtrOutput)
}

// True to enable a 30-day migration period during which administrators can create role mappings. Only necessary when [enabling fine-grained access control on an existing domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing) .
func (o DomainAdvancedSecurityOptionsInputOutput) AnonymousAuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *bool { return v.AnonymousAuthEnabled }).(pulumi.BoolPtrOutput)
}

// True to enable fine-grained access control. You must also enable encryption of data at rest and node-to-node encryption. See [Fine-grained access control in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html) .
func (o DomainAdvancedSecurityOptionsInputOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// True to enable the internal user database.
func (o DomainAdvancedSecurityOptionsInputOutput) InternalUserDatabaseEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *bool { return v.InternalUserDatabaseEnabled }).(pulumi.BoolPtrOutput)
}

// Container for information about the JWT configuration of the Amazon OpenSearch Service.
func (o DomainAdvancedSecurityOptionsInputOutput) JwtOptions() DomainJwtOptionsPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *DomainJwtOptions { return v.JwtOptions }).(DomainJwtOptionsPtrOutput)
}

// Specifies information about the master user.
func (o DomainAdvancedSecurityOptionsInputOutput) MasterUserOptions() DomainMasterUserOptionsPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *DomainMasterUserOptions { return v.MasterUserOptions }).(DomainMasterUserOptionsPtrOutput)
}

// Container for information about the SAML configuration for OpenSearch Dashboards.
func (o DomainAdvancedSecurityOptionsInputOutput) SamlOptions() DomainSamlOptionsPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *DomainSamlOptions { return v.SamlOptions }).(DomainSamlOptionsPtrOutput)
}

type DomainAdvancedSecurityOptionsInputPtrOutput struct{ *pulumi.OutputState }

func (DomainAdvancedSecurityOptionsInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAdvancedSecurityOptionsInput)(nil)).Elem()
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) ToDomainAdvancedSecurityOptionsInputPtrOutput() DomainAdvancedSecurityOptionsInputPtrOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsInputPtrOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) Elem() DomainAdvancedSecurityOptionsInputOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) DomainAdvancedSecurityOptionsInput {
		if v != nil {
			return *v
		}
		var ret DomainAdvancedSecurityOptionsInput
		return ret
	}).(DomainAdvancedSecurityOptionsInputOutput)
}

// Date and time when the migration period will be disabled. Only necessary when [enabling fine-grained access control on an existing domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing) .
func (o DomainAdvancedSecurityOptionsInputPtrOutput) AnonymousAuthDisableDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *string {
		if v == nil {
			return nil
		}
		return v.AnonymousAuthDisableDate
	}).(pulumi.StringPtrOutput)
}

// True to enable a 30-day migration period during which administrators can create role mappings. Only necessary when [enabling fine-grained access control on an existing domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html#fgac-enabling-existing) .
func (o DomainAdvancedSecurityOptionsInputPtrOutput) AnonymousAuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *bool {
		if v == nil {
			return nil
		}
		return v.AnonymousAuthEnabled
	}).(pulumi.BoolPtrOutput)
}

// True to enable fine-grained access control. You must also enable encryption of data at rest and node-to-node encryption. See [Fine-grained access control in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html) .
func (o DomainAdvancedSecurityOptionsInputPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// True to enable the internal user database.
func (o DomainAdvancedSecurityOptionsInputPtrOutput) InternalUserDatabaseEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *bool {
		if v == nil {
			return nil
		}
		return v.InternalUserDatabaseEnabled
	}).(pulumi.BoolPtrOutput)
}

// Container for information about the JWT configuration of the Amazon OpenSearch Service.
func (o DomainAdvancedSecurityOptionsInputPtrOutput) JwtOptions() DomainJwtOptionsPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *DomainJwtOptions {
		if v == nil {
			return nil
		}
		return v.JwtOptions
	}).(DomainJwtOptionsPtrOutput)
}

// Specifies information about the master user.
func (o DomainAdvancedSecurityOptionsInputPtrOutput) MasterUserOptions() DomainMasterUserOptionsPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *DomainMasterUserOptions {
		if v == nil {
			return nil
		}
		return v.MasterUserOptions
	}).(DomainMasterUserOptionsPtrOutput)
}

// Container for information about the SAML configuration for OpenSearch Dashboards.
func (o DomainAdvancedSecurityOptionsInputPtrOutput) SamlOptions() DomainSamlOptionsPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *DomainSamlOptions {
		if v == nil {
			return nil
		}
		return v.SamlOptions
	}).(DomainSamlOptionsPtrOutput)
}

type DomainClusterConfig struct {
	// Container for cold storage configuration options.
	ColdStorageOptions *DomainColdStorageOptions `pulumi:"coldStorageOptions"`
	// The number of instances to use for the master node. If you specify this property, you must specify `true` for the `DedicatedMasterEnabled` property.
	DedicatedMasterCount *int `pulumi:"dedicatedMasterCount"`
	// Indicates whether to use a dedicated master node for the OpenSearch Service domain. A dedicated master node is a cluster node that performs cluster management tasks, but doesn't hold data or respond to data upload requests. Dedicated master nodes offload cluster management tasks to increase the stability of your search clusters. See [Dedicated master nodes in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-dedicatedmasternodes.html) .
	DedicatedMasterEnabled *bool `pulumi:"dedicatedMasterEnabled"`
	// The hardware configuration of the computer that hosts the dedicated master node, such as `m3.medium.search` . If you specify this property, you must specify `true` for the `DedicatedMasterEnabled` property. For valid values, see [Supported instance types in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html) .
	DedicatedMasterType *string `pulumi:"dedicatedMasterType"`
	// The number of data nodes (instances) to use in the OpenSearch Service domain.
	InstanceCount *int `pulumi:"instanceCount"`
	// The instance type for your data nodes, such as `m3.medium.search` . For valid values, see [Supported instance types in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html) .
	InstanceType *string `pulumi:"instanceType"`
	// Indicates whether Multi-AZ with Standby deployment option is enabled. For more information, see [Multi-AZ with Standby](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html#managedomains-za-standby) .
	MultiAzWithStandbyEnabled *bool `pulumi:"multiAzWithStandbyEnabled"`
	// The number of warm nodes in the cluster.
	WarmCount *int `pulumi:"warmCount"`
	// Whether to enable UltraWarm storage for the cluster. See [UltraWarm storage for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ultrawarm.html) .
	WarmEnabled *bool `pulumi:"warmEnabled"`
	// The instance type for the cluster's warm nodes.
	WarmType *string `pulumi:"warmType"`
	// Specifies zone awareness configuration options. Only use if `ZoneAwarenessEnabled` is `true` .
	ZoneAwarenessConfig *DomainZoneAwarenessConfig `pulumi:"zoneAwarenessConfig"`
	// Indicates whether to enable zone awareness for the OpenSearch Service domain. When you enable zone awareness, OpenSearch Service allocates the nodes and replica index shards that belong to a cluster across two Availability Zones (AZs) in the same region to prevent data loss and minimize downtime in the event of node or data center failure. Don't enable zone awareness if your cluster has no replica index shards or is a single-node cluster. For more information, see [Configuring a multi-AZ domain in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html) .
	ZoneAwarenessEnabled *bool `pulumi:"zoneAwarenessEnabled"`
}

// DomainClusterConfigInput is an input type that accepts DomainClusterConfigArgs and DomainClusterConfigOutput values.
// You can construct a concrete instance of `DomainClusterConfigInput` via:
//
//	DomainClusterConfigArgs{...}
type DomainClusterConfigInput interface {
	pulumi.Input

	ToDomainClusterConfigOutput() DomainClusterConfigOutput
	ToDomainClusterConfigOutputWithContext(context.Context) DomainClusterConfigOutput
}

type DomainClusterConfigArgs struct {
	// Container for cold storage configuration options.
	ColdStorageOptions DomainColdStorageOptionsPtrInput `pulumi:"coldStorageOptions"`
	// The number of instances to use for the master node. If you specify this property, you must specify `true` for the `DedicatedMasterEnabled` property.
	DedicatedMasterCount pulumi.IntPtrInput `pulumi:"dedicatedMasterCount"`
	// Indicates whether to use a dedicated master node for the OpenSearch Service domain. A dedicated master node is a cluster node that performs cluster management tasks, but doesn't hold data or respond to data upload requests. Dedicated master nodes offload cluster management tasks to increase the stability of your search clusters. See [Dedicated master nodes in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-dedicatedmasternodes.html) .
	DedicatedMasterEnabled pulumi.BoolPtrInput `pulumi:"dedicatedMasterEnabled"`
	// The hardware configuration of the computer that hosts the dedicated master node, such as `m3.medium.search` . If you specify this property, you must specify `true` for the `DedicatedMasterEnabled` property. For valid values, see [Supported instance types in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html) .
	DedicatedMasterType pulumi.StringPtrInput `pulumi:"dedicatedMasterType"`
	// The number of data nodes (instances) to use in the OpenSearch Service domain.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// The instance type for your data nodes, such as `m3.medium.search` . For valid values, see [Supported instance types in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html) .
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Indicates whether Multi-AZ with Standby deployment option is enabled. For more information, see [Multi-AZ with Standby](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html#managedomains-za-standby) .
	MultiAzWithStandbyEnabled pulumi.BoolPtrInput `pulumi:"multiAzWithStandbyEnabled"`
	// The number of warm nodes in the cluster.
	WarmCount pulumi.IntPtrInput `pulumi:"warmCount"`
	// Whether to enable UltraWarm storage for the cluster. See [UltraWarm storage for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ultrawarm.html) .
	WarmEnabled pulumi.BoolPtrInput `pulumi:"warmEnabled"`
	// The instance type for the cluster's warm nodes.
	WarmType pulumi.StringPtrInput `pulumi:"warmType"`
	// Specifies zone awareness configuration options. Only use if `ZoneAwarenessEnabled` is `true` .
	ZoneAwarenessConfig DomainZoneAwarenessConfigPtrInput `pulumi:"zoneAwarenessConfig"`
	// Indicates whether to enable zone awareness for the OpenSearch Service domain. When you enable zone awareness, OpenSearch Service allocates the nodes and replica index shards that belong to a cluster across two Availability Zones (AZs) in the same region to prevent data loss and minimize downtime in the event of node or data center failure. Don't enable zone awareness if your cluster has no replica index shards or is a single-node cluster. For more information, see [Configuring a multi-AZ domain in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html) .
	ZoneAwarenessEnabled pulumi.BoolPtrInput `pulumi:"zoneAwarenessEnabled"`
}

func (DomainClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainClusterConfig)(nil)).Elem()
}

func (i DomainClusterConfigArgs) ToDomainClusterConfigOutput() DomainClusterConfigOutput {
	return i.ToDomainClusterConfigOutputWithContext(context.Background())
}

func (i DomainClusterConfigArgs) ToDomainClusterConfigOutputWithContext(ctx context.Context) DomainClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigOutput)
}

func (i DomainClusterConfigArgs) ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput {
	return i.ToDomainClusterConfigPtrOutputWithContext(context.Background())
}

func (i DomainClusterConfigArgs) ToDomainClusterConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigOutput).ToDomainClusterConfigPtrOutputWithContext(ctx)
}

// DomainClusterConfigPtrInput is an input type that accepts DomainClusterConfigArgs, DomainClusterConfigPtr and DomainClusterConfigPtrOutput values.
// You can construct a concrete instance of `DomainClusterConfigPtrInput` via:
//
//	        DomainClusterConfigArgs{...}
//
//	or:
//
//	        nil
type DomainClusterConfigPtrInput interface {
	pulumi.Input

	ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput
	ToDomainClusterConfigPtrOutputWithContext(context.Context) DomainClusterConfigPtrOutput
}

type domainClusterConfigPtrType DomainClusterConfigArgs

func DomainClusterConfigPtr(v *DomainClusterConfigArgs) DomainClusterConfigPtrInput {
	return (*domainClusterConfigPtrType)(v)
}

func (*domainClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainClusterConfig)(nil)).Elem()
}

func (i *domainClusterConfigPtrType) ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput {
	return i.ToDomainClusterConfigPtrOutputWithContext(context.Background())
}

func (i *domainClusterConfigPtrType) ToDomainClusterConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigPtrOutput)
}

type DomainClusterConfigOutput struct{ *pulumi.OutputState }

func (DomainClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainClusterConfig)(nil)).Elem()
}

func (o DomainClusterConfigOutput) ToDomainClusterConfigOutput() DomainClusterConfigOutput {
	return o
}

func (o DomainClusterConfigOutput) ToDomainClusterConfigOutputWithContext(ctx context.Context) DomainClusterConfigOutput {
	return o
}

func (o DomainClusterConfigOutput) ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput {
	return o.ToDomainClusterConfigPtrOutputWithContext(context.Background())
}

func (o DomainClusterConfigOutput) ToDomainClusterConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainClusterConfig) *DomainClusterConfig {
		return &v
	}).(DomainClusterConfigPtrOutput)
}

// Container for cold storage configuration options.
func (o DomainClusterConfigOutput) ColdStorageOptions() DomainColdStorageOptionsPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *DomainColdStorageOptions { return v.ColdStorageOptions }).(DomainColdStorageOptionsPtrOutput)
}

// The number of instances to use for the master node. If you specify this property, you must specify `true` for the `DedicatedMasterEnabled` property.
func (o DomainClusterConfigOutput) DedicatedMasterCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *int { return v.DedicatedMasterCount }).(pulumi.IntPtrOutput)
}

// Indicates whether to use a dedicated master node for the OpenSearch Service domain. A dedicated master node is a cluster node that performs cluster management tasks, but doesn't hold data or respond to data upload requests. Dedicated master nodes offload cluster management tasks to increase the stability of your search clusters. See [Dedicated master nodes in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-dedicatedmasternodes.html) .
func (o DomainClusterConfigOutput) DedicatedMasterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *bool { return v.DedicatedMasterEnabled }).(pulumi.BoolPtrOutput)
}

// The hardware configuration of the computer that hosts the dedicated master node, such as `m3.medium.search` . If you specify this property, you must specify `true` for the `DedicatedMasterEnabled` property. For valid values, see [Supported instance types in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html) .
func (o DomainClusterConfigOutput) DedicatedMasterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *string { return v.DedicatedMasterType }).(pulumi.StringPtrOutput)
}

// The number of data nodes (instances) to use in the OpenSearch Service domain.
func (o DomainClusterConfigOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The instance type for your data nodes, such as `m3.medium.search` . For valid values, see [Supported instance types in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html) .
func (o DomainClusterConfigOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Indicates whether Multi-AZ with Standby deployment option is enabled. For more information, see [Multi-AZ with Standby](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html#managedomains-za-standby) .
func (o DomainClusterConfigOutput) MultiAzWithStandbyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *bool { return v.MultiAzWithStandbyEnabled }).(pulumi.BoolPtrOutput)
}

// The number of warm nodes in the cluster.
func (o DomainClusterConfigOutput) WarmCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *int { return v.WarmCount }).(pulumi.IntPtrOutput)
}

// Whether to enable UltraWarm storage for the cluster. See [UltraWarm storage for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ultrawarm.html) .
func (o DomainClusterConfigOutput) WarmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *bool { return v.WarmEnabled }).(pulumi.BoolPtrOutput)
}

// The instance type for the cluster's warm nodes.
func (o DomainClusterConfigOutput) WarmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *string { return v.WarmType }).(pulumi.StringPtrOutput)
}

// Specifies zone awareness configuration options. Only use if `ZoneAwarenessEnabled` is `true` .
func (o DomainClusterConfigOutput) ZoneAwarenessConfig() DomainZoneAwarenessConfigPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *DomainZoneAwarenessConfig { return v.ZoneAwarenessConfig }).(DomainZoneAwarenessConfigPtrOutput)
}

// Indicates whether to enable zone awareness for the OpenSearch Service domain. When you enable zone awareness, OpenSearch Service allocates the nodes and replica index shards that belong to a cluster across two Availability Zones (AZs) in the same region to prevent data loss and minimize downtime in the event of node or data center failure. Don't enable zone awareness if your cluster has no replica index shards or is a single-node cluster. For more information, see [Configuring a multi-AZ domain in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html) .
func (o DomainClusterConfigOutput) ZoneAwarenessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *bool { return v.ZoneAwarenessEnabled }).(pulumi.BoolPtrOutput)
}

type DomainClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainClusterConfig)(nil)).Elem()
}

func (o DomainClusterConfigPtrOutput) ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput {
	return o
}

func (o DomainClusterConfigPtrOutput) ToDomainClusterConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigPtrOutput {
	return o
}

func (o DomainClusterConfigPtrOutput) Elem() DomainClusterConfigOutput {
	return o.ApplyT(func(v *DomainClusterConfig) DomainClusterConfig {
		if v != nil {
			return *v
		}
		var ret DomainClusterConfig
		return ret
	}).(DomainClusterConfigOutput)
}

// Container for cold storage configuration options.
func (o DomainClusterConfigPtrOutput) ColdStorageOptions() DomainColdStorageOptionsPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *DomainColdStorageOptions {
		if v == nil {
			return nil
		}
		return v.ColdStorageOptions
	}).(DomainColdStorageOptionsPtrOutput)
}

// The number of instances to use for the master node. If you specify this property, you must specify `true` for the `DedicatedMasterEnabled` property.
func (o DomainClusterConfigPtrOutput) DedicatedMasterCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.DedicatedMasterCount
	}).(pulumi.IntPtrOutput)
}

// Indicates whether to use a dedicated master node for the OpenSearch Service domain. A dedicated master node is a cluster node that performs cluster management tasks, but doesn't hold data or respond to data upload requests. Dedicated master nodes offload cluster management tasks to increase the stability of your search clusters. See [Dedicated master nodes in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-dedicatedmasternodes.html) .
func (o DomainClusterConfigPtrOutput) DedicatedMasterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DedicatedMasterEnabled
	}).(pulumi.BoolPtrOutput)
}

// The hardware configuration of the computer that hosts the dedicated master node, such as `m3.medium.search` . If you specify this property, you must specify `true` for the `DedicatedMasterEnabled` property. For valid values, see [Supported instance types in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html) .
func (o DomainClusterConfigPtrOutput) DedicatedMasterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.DedicatedMasterType
	}).(pulumi.StringPtrOutput)
}

// The number of data nodes (instances) to use in the OpenSearch Service domain.
func (o DomainClusterConfigPtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// The instance type for your data nodes, such as `m3.medium.search` . For valid values, see [Supported instance types in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html) .
func (o DomainClusterConfigPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Indicates whether Multi-AZ with Standby deployment option is enabled. For more information, see [Multi-AZ with Standby](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html#managedomains-za-standby) .
func (o DomainClusterConfigPtrOutput) MultiAzWithStandbyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.MultiAzWithStandbyEnabled
	}).(pulumi.BoolPtrOutput)
}

// The number of warm nodes in the cluster.
func (o DomainClusterConfigPtrOutput) WarmCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.WarmCount
	}).(pulumi.IntPtrOutput)
}

// Whether to enable UltraWarm storage for the cluster. See [UltraWarm storage for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ultrawarm.html) .
func (o DomainClusterConfigPtrOutput) WarmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WarmEnabled
	}).(pulumi.BoolPtrOutput)
}

// The instance type for the cluster's warm nodes.
func (o DomainClusterConfigPtrOutput) WarmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.WarmType
	}).(pulumi.StringPtrOutput)
}

// Specifies zone awareness configuration options. Only use if `ZoneAwarenessEnabled` is `true` .
func (o DomainClusterConfigPtrOutput) ZoneAwarenessConfig() DomainZoneAwarenessConfigPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *DomainZoneAwarenessConfig {
		if v == nil {
			return nil
		}
		return v.ZoneAwarenessConfig
	}).(DomainZoneAwarenessConfigPtrOutput)
}

// Indicates whether to enable zone awareness for the OpenSearch Service domain. When you enable zone awareness, OpenSearch Service allocates the nodes and replica index shards that belong to a cluster across two Availability Zones (AZs) in the same region to prevent data loss and minimize downtime in the event of node or data center failure. Don't enable zone awareness if your cluster has no replica index shards or is a single-node cluster. For more information, see [Configuring a multi-AZ domain in Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/managedomains-multiaz.html) .
func (o DomainClusterConfigPtrOutput) ZoneAwarenessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ZoneAwarenessEnabled
	}).(pulumi.BoolPtrOutput)
}

type DomainCognitoOptions struct {
	// Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards. See [Amazon Cognito authentication for OpenSearch Dashboards](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html) .
	Enabled *bool `pulumi:"enabled"`
	// The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
	//
	// Required if you enabled Cognito Authentication for OpenSearch Dashboards.
	IdentityPoolId *string `pulumi:"identityPoolId"`
	// The `AmazonOpenSearchServiceCognitoAccess` role that allows OpenSearch Service to configure your user pool and identity pool.
	//
	// Required if you enabled Cognito Authentication for OpenSearch Dashboards.
	RoleArn *string `pulumi:"roleArn"`
	// The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
	//
	// Required if you enabled Cognito Authentication for OpenSearch Dashboards.
	UserPoolId *string `pulumi:"userPoolId"`
}

// DomainCognitoOptionsInput is an input type that accepts DomainCognitoOptionsArgs and DomainCognitoOptionsOutput values.
// You can construct a concrete instance of `DomainCognitoOptionsInput` via:
//
//	DomainCognitoOptionsArgs{...}
type DomainCognitoOptionsInput interface {
	pulumi.Input

	ToDomainCognitoOptionsOutput() DomainCognitoOptionsOutput
	ToDomainCognitoOptionsOutputWithContext(context.Context) DomainCognitoOptionsOutput
}

type DomainCognitoOptionsArgs struct {
	// Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards. See [Amazon Cognito authentication for OpenSearch Dashboards](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html) .
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
	//
	// Required if you enabled Cognito Authentication for OpenSearch Dashboards.
	IdentityPoolId pulumi.StringPtrInput `pulumi:"identityPoolId"`
	// The `AmazonOpenSearchServiceCognitoAccess` role that allows OpenSearch Service to configure your user pool and identity pool.
	//
	// Required if you enabled Cognito Authentication for OpenSearch Dashboards.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
	//
	// Required if you enabled Cognito Authentication for OpenSearch Dashboards.
	UserPoolId pulumi.StringPtrInput `pulumi:"userPoolId"`
}

func (DomainCognitoOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCognitoOptions)(nil)).Elem()
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsOutput() DomainCognitoOptionsOutput {
	return i.ToDomainCognitoOptionsOutputWithContext(context.Background())
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsOutputWithContext(ctx context.Context) DomainCognitoOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCognitoOptionsOutput)
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return i.ToDomainCognitoOptionsPtrOutputWithContext(context.Background())
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCognitoOptionsOutput).ToDomainCognitoOptionsPtrOutputWithContext(ctx)
}

// DomainCognitoOptionsPtrInput is an input type that accepts DomainCognitoOptionsArgs, DomainCognitoOptionsPtr and DomainCognitoOptionsPtrOutput values.
// You can construct a concrete instance of `DomainCognitoOptionsPtrInput` via:
//
//	        DomainCognitoOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainCognitoOptionsPtrInput interface {
	pulumi.Input

	ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput
	ToDomainCognitoOptionsPtrOutputWithContext(context.Context) DomainCognitoOptionsPtrOutput
}

type domainCognitoOptionsPtrType DomainCognitoOptionsArgs

func DomainCognitoOptionsPtr(v *DomainCognitoOptionsArgs) DomainCognitoOptionsPtrInput {
	return (*domainCognitoOptionsPtrType)(v)
}

func (*domainCognitoOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCognitoOptions)(nil)).Elem()
}

func (i *domainCognitoOptionsPtrType) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return i.ToDomainCognitoOptionsPtrOutputWithContext(context.Background())
}

func (i *domainCognitoOptionsPtrType) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCognitoOptionsPtrOutput)
}

type DomainCognitoOptionsOutput struct{ *pulumi.OutputState }

func (DomainCognitoOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCognitoOptions)(nil)).Elem()
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsOutput() DomainCognitoOptionsOutput {
	return o
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsOutputWithContext(ctx context.Context) DomainCognitoOptionsOutput {
	return o
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return o.ToDomainCognitoOptionsPtrOutputWithContext(context.Background())
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainCognitoOptions) *DomainCognitoOptions {
		return &v
	}).(DomainCognitoOptionsPtrOutput)
}

// Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards. See [Amazon Cognito authentication for OpenSearch Dashboards](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html) .
func (o DomainCognitoOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainCognitoOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
//
// Required if you enabled Cognito Authentication for OpenSearch Dashboards.
func (o DomainCognitoOptionsOutput) IdentityPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCognitoOptions) *string { return v.IdentityPoolId }).(pulumi.StringPtrOutput)
}

// The `AmazonOpenSearchServiceCognitoAccess` role that allows OpenSearch Service to configure your user pool and identity pool.
//
// Required if you enabled Cognito Authentication for OpenSearch Dashboards.
func (o DomainCognitoOptionsOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCognitoOptions) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
//
// Required if you enabled Cognito Authentication for OpenSearch Dashboards.
func (o DomainCognitoOptionsOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCognitoOptions) *string { return v.UserPoolId }).(pulumi.StringPtrOutput)
}

type DomainCognitoOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainCognitoOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCognitoOptions)(nil)).Elem()
}

func (o DomainCognitoOptionsPtrOutput) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return o
}

func (o DomainCognitoOptionsPtrOutput) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return o
}

func (o DomainCognitoOptionsPtrOutput) Elem() DomainCognitoOptionsOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) DomainCognitoOptions {
		if v != nil {
			return *v
		}
		var ret DomainCognitoOptions
		return ret
	}).(DomainCognitoOptionsOutput)
}

// Whether to enable or disable Amazon Cognito authentication for OpenSearch Dashboards. See [Amazon Cognito authentication for OpenSearch Dashboards](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/cognito-auth.html) .
func (o DomainCognitoOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Amazon Cognito identity pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
//
// Required if you enabled Cognito Authentication for OpenSearch Dashboards.
func (o DomainCognitoOptionsPtrOutput) IdentityPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) *string {
		if v == nil {
			return nil
		}
		return v.IdentityPoolId
	}).(pulumi.StringPtrOutput)
}

// The `AmazonOpenSearchServiceCognitoAccess` role that allows OpenSearch Service to configure your user pool and identity pool.
//
// Required if you enabled Cognito Authentication for OpenSearch Dashboards.
func (o DomainCognitoOptionsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// The Amazon Cognito user pool ID that you want OpenSearch Service to use for OpenSearch Dashboards authentication.
//
// Required if you enabled Cognito Authentication for OpenSearch Dashboards.
func (o DomainCognitoOptionsPtrOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) *string {
		if v == nil {
			return nil
		}
		return v.UserPoolId
	}).(pulumi.StringPtrOutput)
}

type DomainColdStorageOptions struct {
	// Whether to enable or disable cold storage on the domain. You must enable UltraWarm storage to enable cold storage.
	Enabled *bool `pulumi:"enabled"`
}

// DomainColdStorageOptionsInput is an input type that accepts DomainColdStorageOptionsArgs and DomainColdStorageOptionsOutput values.
// You can construct a concrete instance of `DomainColdStorageOptionsInput` via:
//
//	DomainColdStorageOptionsArgs{...}
type DomainColdStorageOptionsInput interface {
	pulumi.Input

	ToDomainColdStorageOptionsOutput() DomainColdStorageOptionsOutput
	ToDomainColdStorageOptionsOutputWithContext(context.Context) DomainColdStorageOptionsOutput
}

type DomainColdStorageOptionsArgs struct {
	// Whether to enable or disable cold storage on the domain. You must enable UltraWarm storage to enable cold storage.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (DomainColdStorageOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainColdStorageOptions)(nil)).Elem()
}

func (i DomainColdStorageOptionsArgs) ToDomainColdStorageOptionsOutput() DomainColdStorageOptionsOutput {
	return i.ToDomainColdStorageOptionsOutputWithContext(context.Background())
}

func (i DomainColdStorageOptionsArgs) ToDomainColdStorageOptionsOutputWithContext(ctx context.Context) DomainColdStorageOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainColdStorageOptionsOutput)
}

func (i DomainColdStorageOptionsArgs) ToDomainColdStorageOptionsPtrOutput() DomainColdStorageOptionsPtrOutput {
	return i.ToDomainColdStorageOptionsPtrOutputWithContext(context.Background())
}

func (i DomainColdStorageOptionsArgs) ToDomainColdStorageOptionsPtrOutputWithContext(ctx context.Context) DomainColdStorageOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainColdStorageOptionsOutput).ToDomainColdStorageOptionsPtrOutputWithContext(ctx)
}

// DomainColdStorageOptionsPtrInput is an input type that accepts DomainColdStorageOptionsArgs, DomainColdStorageOptionsPtr and DomainColdStorageOptionsPtrOutput values.
// You can construct a concrete instance of `DomainColdStorageOptionsPtrInput` via:
//
//	        DomainColdStorageOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainColdStorageOptionsPtrInput interface {
	pulumi.Input

	ToDomainColdStorageOptionsPtrOutput() DomainColdStorageOptionsPtrOutput
	ToDomainColdStorageOptionsPtrOutputWithContext(context.Context) DomainColdStorageOptionsPtrOutput
}

type domainColdStorageOptionsPtrType DomainColdStorageOptionsArgs

func DomainColdStorageOptionsPtr(v *DomainColdStorageOptionsArgs) DomainColdStorageOptionsPtrInput {
	return (*domainColdStorageOptionsPtrType)(v)
}

func (*domainColdStorageOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainColdStorageOptions)(nil)).Elem()
}

func (i *domainColdStorageOptionsPtrType) ToDomainColdStorageOptionsPtrOutput() DomainColdStorageOptionsPtrOutput {
	return i.ToDomainColdStorageOptionsPtrOutputWithContext(context.Background())
}

func (i *domainColdStorageOptionsPtrType) ToDomainColdStorageOptionsPtrOutputWithContext(ctx context.Context) DomainColdStorageOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainColdStorageOptionsPtrOutput)
}

type DomainColdStorageOptionsOutput struct{ *pulumi.OutputState }

func (DomainColdStorageOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainColdStorageOptions)(nil)).Elem()
}

func (o DomainColdStorageOptionsOutput) ToDomainColdStorageOptionsOutput() DomainColdStorageOptionsOutput {
	return o
}

func (o DomainColdStorageOptionsOutput) ToDomainColdStorageOptionsOutputWithContext(ctx context.Context) DomainColdStorageOptionsOutput {
	return o
}

func (o DomainColdStorageOptionsOutput) ToDomainColdStorageOptionsPtrOutput() DomainColdStorageOptionsPtrOutput {
	return o.ToDomainColdStorageOptionsPtrOutputWithContext(context.Background())
}

func (o DomainColdStorageOptionsOutput) ToDomainColdStorageOptionsPtrOutputWithContext(ctx context.Context) DomainColdStorageOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainColdStorageOptions) *DomainColdStorageOptions {
		return &v
	}).(DomainColdStorageOptionsPtrOutput)
}

// Whether to enable or disable cold storage on the domain. You must enable UltraWarm storage to enable cold storage.
func (o DomainColdStorageOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainColdStorageOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DomainColdStorageOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainColdStorageOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainColdStorageOptions)(nil)).Elem()
}

func (o DomainColdStorageOptionsPtrOutput) ToDomainColdStorageOptionsPtrOutput() DomainColdStorageOptionsPtrOutput {
	return o
}

func (o DomainColdStorageOptionsPtrOutput) ToDomainColdStorageOptionsPtrOutputWithContext(ctx context.Context) DomainColdStorageOptionsPtrOutput {
	return o
}

func (o DomainColdStorageOptionsPtrOutput) Elem() DomainColdStorageOptionsOutput {
	return o.ApplyT(func(v *DomainColdStorageOptions) DomainColdStorageOptions {
		if v != nil {
			return *v
		}
		var ret DomainColdStorageOptions
		return ret
	}).(DomainColdStorageOptionsOutput)
}

// Whether to enable or disable cold storage on the domain. You must enable UltraWarm storage to enable cold storage.
func (o DomainColdStorageOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainColdStorageOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type DomainEbsOptions struct {
	// Specifies whether Amazon EBS volumes are attached to data nodes in the OpenSearch Service domain.
	EbsEnabled *bool `pulumi:"ebsEnabled"`
	// The number of I/O operations per second (IOPS) that the volume supports. This property applies only to the `gp3` and provisioned IOPS EBS volume types.
	Iops *int `pulumi:"iops"`
	// The throughput (in MiB/s) of the EBS volumes attached to data nodes. Applies only to the `gp3` volume type.
	Throughput *int `pulumi:"throughput"`
	// The size (in GiB) of the EBS volume for each data node. The minimum and maximum size of an EBS volume depends on the EBS volume type and the instance type to which it is attached. For more information, see [EBS volume size limits](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/limits.html#ebsresource) in the *Amazon OpenSearch Service Developer Guide* .
	VolumeSize *int `pulumi:"volumeSize"`
	// The EBS volume type to use with the OpenSearch Service domain. If you choose `gp3` , you must also specify values for `Iops` and `Throughput` . For more information about each type, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon EC2 User Guide for Linux Instances* .
	VolumeType *string `pulumi:"volumeType"`
}

// DomainEbsOptionsInput is an input type that accepts DomainEbsOptionsArgs and DomainEbsOptionsOutput values.
// You can construct a concrete instance of `DomainEbsOptionsInput` via:
//
//	DomainEbsOptionsArgs{...}
type DomainEbsOptionsInput interface {
	pulumi.Input

	ToDomainEbsOptionsOutput() DomainEbsOptionsOutput
	ToDomainEbsOptionsOutputWithContext(context.Context) DomainEbsOptionsOutput
}

type DomainEbsOptionsArgs struct {
	// Specifies whether Amazon EBS volumes are attached to data nodes in the OpenSearch Service domain.
	EbsEnabled pulumi.BoolPtrInput `pulumi:"ebsEnabled"`
	// The number of I/O operations per second (IOPS) that the volume supports. This property applies only to the `gp3` and provisioned IOPS EBS volume types.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// The throughput (in MiB/s) of the EBS volumes attached to data nodes. Applies only to the `gp3` volume type.
	Throughput pulumi.IntPtrInput `pulumi:"throughput"`
	// The size (in GiB) of the EBS volume for each data node. The minimum and maximum size of an EBS volume depends on the EBS volume type and the instance type to which it is attached. For more information, see [EBS volume size limits](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/limits.html#ebsresource) in the *Amazon OpenSearch Service Developer Guide* .
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// The EBS volume type to use with the OpenSearch Service domain. If you choose `gp3` , you must also specify values for `Iops` and `Throughput` . For more information about each type, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon EC2 User Guide for Linux Instances* .
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (DomainEbsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEbsOptions)(nil)).Elem()
}

func (i DomainEbsOptionsArgs) ToDomainEbsOptionsOutput() DomainEbsOptionsOutput {
	return i.ToDomainEbsOptionsOutputWithContext(context.Background())
}

func (i DomainEbsOptionsArgs) ToDomainEbsOptionsOutputWithContext(ctx context.Context) DomainEbsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEbsOptionsOutput)
}

func (i DomainEbsOptionsArgs) ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput {
	return i.ToDomainEbsOptionsPtrOutputWithContext(context.Background())
}

func (i DomainEbsOptionsArgs) ToDomainEbsOptionsPtrOutputWithContext(ctx context.Context) DomainEbsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEbsOptionsOutput).ToDomainEbsOptionsPtrOutputWithContext(ctx)
}

// DomainEbsOptionsPtrInput is an input type that accepts DomainEbsOptionsArgs, DomainEbsOptionsPtr and DomainEbsOptionsPtrOutput values.
// You can construct a concrete instance of `DomainEbsOptionsPtrInput` via:
//
//	        DomainEbsOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainEbsOptionsPtrInput interface {
	pulumi.Input

	ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput
	ToDomainEbsOptionsPtrOutputWithContext(context.Context) DomainEbsOptionsPtrOutput
}

type domainEbsOptionsPtrType DomainEbsOptionsArgs

func DomainEbsOptionsPtr(v *DomainEbsOptionsArgs) DomainEbsOptionsPtrInput {
	return (*domainEbsOptionsPtrType)(v)
}

func (*domainEbsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEbsOptions)(nil)).Elem()
}

func (i *domainEbsOptionsPtrType) ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput {
	return i.ToDomainEbsOptionsPtrOutputWithContext(context.Background())
}

func (i *domainEbsOptionsPtrType) ToDomainEbsOptionsPtrOutputWithContext(ctx context.Context) DomainEbsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEbsOptionsPtrOutput)
}

type DomainEbsOptionsOutput struct{ *pulumi.OutputState }

func (DomainEbsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEbsOptions)(nil)).Elem()
}

func (o DomainEbsOptionsOutput) ToDomainEbsOptionsOutput() DomainEbsOptionsOutput {
	return o
}

func (o DomainEbsOptionsOutput) ToDomainEbsOptionsOutputWithContext(ctx context.Context) DomainEbsOptionsOutput {
	return o
}

func (o DomainEbsOptionsOutput) ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput {
	return o.ToDomainEbsOptionsPtrOutputWithContext(context.Background())
}

func (o DomainEbsOptionsOutput) ToDomainEbsOptionsPtrOutputWithContext(ctx context.Context) DomainEbsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainEbsOptions) *DomainEbsOptions {
		return &v
	}).(DomainEbsOptionsPtrOutput)
}

// Specifies whether Amazon EBS volumes are attached to data nodes in the OpenSearch Service domain.
func (o DomainEbsOptionsOutput) EbsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *bool { return v.EbsEnabled }).(pulumi.BoolPtrOutput)
}

// The number of I/O operations per second (IOPS) that the volume supports. This property applies only to the `gp3` and provisioned IOPS EBS volume types.
func (o DomainEbsOptionsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// The throughput (in MiB/s) of the EBS volumes attached to data nodes. Applies only to the `gp3` volume type.
func (o DomainEbsOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

// The size (in GiB) of the EBS volume for each data node. The minimum and maximum size of an EBS volume depends on the EBS volume type and the instance type to which it is attached. For more information, see [EBS volume size limits](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/limits.html#ebsresource) in the *Amazon OpenSearch Service Developer Guide* .
func (o DomainEbsOptionsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// The EBS volume type to use with the OpenSearch Service domain. If you choose `gp3` , you must also specify values for `Iops` and `Throughput` . For more information about each type, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon EC2 User Guide for Linux Instances* .
func (o DomainEbsOptionsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type DomainEbsOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainEbsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEbsOptions)(nil)).Elem()
}

func (o DomainEbsOptionsPtrOutput) ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput {
	return o
}

func (o DomainEbsOptionsPtrOutput) ToDomainEbsOptionsPtrOutputWithContext(ctx context.Context) DomainEbsOptionsPtrOutput {
	return o
}

func (o DomainEbsOptionsPtrOutput) Elem() DomainEbsOptionsOutput {
	return o.ApplyT(func(v *DomainEbsOptions) DomainEbsOptions {
		if v != nil {
			return *v
		}
		var ret DomainEbsOptions
		return ret
	}).(DomainEbsOptionsOutput)
}

// Specifies whether Amazon EBS volumes are attached to data nodes in the OpenSearch Service domain.
func (o DomainEbsOptionsPtrOutput) EbsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EbsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The number of I/O operations per second (IOPS) that the volume supports. This property applies only to the `gp3` and provisioned IOPS EBS volume types.
func (o DomainEbsOptionsPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// The throughput (in MiB/s) of the EBS volumes attached to data nodes. Applies only to the `gp3` volume type.
func (o DomainEbsOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

// The size (in GiB) of the EBS volume for each data node. The minimum and maximum size of an EBS volume depends on the EBS volume type and the instance type to which it is attached. For more information, see [EBS volume size limits](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/limits.html#ebsresource) in the *Amazon OpenSearch Service Developer Guide* .
func (o DomainEbsOptionsPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *int {
		if v == nil {
			return nil
		}
		return v.VolumeSize
	}).(pulumi.IntPtrOutput)
}

// The EBS volume type to use with the OpenSearch Service domain. If you choose `gp3` , you must also specify values for `Iops` and `Throughput` . For more information about each type, see [Amazon EBS volume types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the *Amazon EC2 User Guide for Linux Instances* .
func (o DomainEbsOptionsPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type DomainEncryptionAtRestOptions struct {
	// Specify `true` to enable encryption at rest. Required if you enable fine-grained access control in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
	//
	// If no encryption at rest options were initially specified in the template, updating this property by adding it causes no interruption. However, if you change this property after it's already been set within a template, the domain is deleted and recreated in order to modify the property.
	Enabled *bool `pulumi:"enabled"`
	// The KMS key ID. Takes the form `1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a` . Required if you enable encryption at rest.
	//
	// You can also use `keyAlias` as a value.
	//
	// If no encryption at rest options were initially specified in the template, updating this property by adding it causes no interruption. However, if you change this property after it's already been set within a template, the domain is deleted and recreated in order to modify the property.
	KmsKeyId *string `pulumi:"kmsKeyId"`
}

// DomainEncryptionAtRestOptionsInput is an input type that accepts DomainEncryptionAtRestOptionsArgs and DomainEncryptionAtRestOptionsOutput values.
// You can construct a concrete instance of `DomainEncryptionAtRestOptionsInput` via:
//
//	DomainEncryptionAtRestOptionsArgs{...}
type DomainEncryptionAtRestOptionsInput interface {
	pulumi.Input

	ToDomainEncryptionAtRestOptionsOutput() DomainEncryptionAtRestOptionsOutput
	ToDomainEncryptionAtRestOptionsOutputWithContext(context.Context) DomainEncryptionAtRestOptionsOutput
}

type DomainEncryptionAtRestOptionsArgs struct {
	// Specify `true` to enable encryption at rest. Required if you enable fine-grained access control in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
	//
	// If no encryption at rest options were initially specified in the template, updating this property by adding it causes no interruption. However, if you change this property after it's already been set within a template, the domain is deleted and recreated in order to modify the property.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The KMS key ID. Takes the form `1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a` . Required if you enable encryption at rest.
	//
	// You can also use `keyAlias` as a value.
	//
	// If no encryption at rest options were initially specified in the template, updating this property by adding it causes no interruption. However, if you change this property after it's already been set within a template, the domain is deleted and recreated in order to modify the property.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
}

func (DomainEncryptionAtRestOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEncryptionAtRestOptions)(nil)).Elem()
}

func (i DomainEncryptionAtRestOptionsArgs) ToDomainEncryptionAtRestOptionsOutput() DomainEncryptionAtRestOptionsOutput {
	return i.ToDomainEncryptionAtRestOptionsOutputWithContext(context.Background())
}

func (i DomainEncryptionAtRestOptionsArgs) ToDomainEncryptionAtRestOptionsOutputWithContext(ctx context.Context) DomainEncryptionAtRestOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEncryptionAtRestOptionsOutput)
}

func (i DomainEncryptionAtRestOptionsArgs) ToDomainEncryptionAtRestOptionsPtrOutput() DomainEncryptionAtRestOptionsPtrOutput {
	return i.ToDomainEncryptionAtRestOptionsPtrOutputWithContext(context.Background())
}

func (i DomainEncryptionAtRestOptionsArgs) ToDomainEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) DomainEncryptionAtRestOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEncryptionAtRestOptionsOutput).ToDomainEncryptionAtRestOptionsPtrOutputWithContext(ctx)
}

// DomainEncryptionAtRestOptionsPtrInput is an input type that accepts DomainEncryptionAtRestOptionsArgs, DomainEncryptionAtRestOptionsPtr and DomainEncryptionAtRestOptionsPtrOutput values.
// You can construct a concrete instance of `DomainEncryptionAtRestOptionsPtrInput` via:
//
//	        DomainEncryptionAtRestOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainEncryptionAtRestOptionsPtrInput interface {
	pulumi.Input

	ToDomainEncryptionAtRestOptionsPtrOutput() DomainEncryptionAtRestOptionsPtrOutput
	ToDomainEncryptionAtRestOptionsPtrOutputWithContext(context.Context) DomainEncryptionAtRestOptionsPtrOutput
}

type domainEncryptionAtRestOptionsPtrType DomainEncryptionAtRestOptionsArgs

func DomainEncryptionAtRestOptionsPtr(v *DomainEncryptionAtRestOptionsArgs) DomainEncryptionAtRestOptionsPtrInput {
	return (*domainEncryptionAtRestOptionsPtrType)(v)
}

func (*domainEncryptionAtRestOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEncryptionAtRestOptions)(nil)).Elem()
}

func (i *domainEncryptionAtRestOptionsPtrType) ToDomainEncryptionAtRestOptionsPtrOutput() DomainEncryptionAtRestOptionsPtrOutput {
	return i.ToDomainEncryptionAtRestOptionsPtrOutputWithContext(context.Background())
}

func (i *domainEncryptionAtRestOptionsPtrType) ToDomainEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) DomainEncryptionAtRestOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEncryptionAtRestOptionsPtrOutput)
}

type DomainEncryptionAtRestOptionsOutput struct{ *pulumi.OutputState }

func (DomainEncryptionAtRestOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEncryptionAtRestOptions)(nil)).Elem()
}

func (o DomainEncryptionAtRestOptionsOutput) ToDomainEncryptionAtRestOptionsOutput() DomainEncryptionAtRestOptionsOutput {
	return o
}

func (o DomainEncryptionAtRestOptionsOutput) ToDomainEncryptionAtRestOptionsOutputWithContext(ctx context.Context) DomainEncryptionAtRestOptionsOutput {
	return o
}

func (o DomainEncryptionAtRestOptionsOutput) ToDomainEncryptionAtRestOptionsPtrOutput() DomainEncryptionAtRestOptionsPtrOutput {
	return o.ToDomainEncryptionAtRestOptionsPtrOutputWithContext(context.Background())
}

func (o DomainEncryptionAtRestOptionsOutput) ToDomainEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) DomainEncryptionAtRestOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainEncryptionAtRestOptions) *DomainEncryptionAtRestOptions {
		return &v
	}).(DomainEncryptionAtRestOptionsPtrOutput)
}

// Specify `true` to enable encryption at rest. Required if you enable fine-grained access control in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
//
// If no encryption at rest options were initially specified in the template, updating this property by adding it causes no interruption. However, if you change this property after it's already been set within a template, the domain is deleted and recreated in order to modify the property.
func (o DomainEncryptionAtRestOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainEncryptionAtRestOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The KMS key ID. Takes the form `1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a` . Required if you enable encryption at rest.
//
// You can also use `keyAlias` as a value.
//
// If no encryption at rest options were initially specified in the template, updating this property by adding it causes no interruption. However, if you change this property after it's already been set within a template, the domain is deleted and recreated in order to modify the property.
func (o DomainEncryptionAtRestOptionsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEncryptionAtRestOptions) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

type DomainEncryptionAtRestOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainEncryptionAtRestOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEncryptionAtRestOptions)(nil)).Elem()
}

func (o DomainEncryptionAtRestOptionsPtrOutput) ToDomainEncryptionAtRestOptionsPtrOutput() DomainEncryptionAtRestOptionsPtrOutput {
	return o
}

func (o DomainEncryptionAtRestOptionsPtrOutput) ToDomainEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) DomainEncryptionAtRestOptionsPtrOutput {
	return o
}

func (o DomainEncryptionAtRestOptionsPtrOutput) Elem() DomainEncryptionAtRestOptionsOutput {
	return o.ApplyT(func(v *DomainEncryptionAtRestOptions) DomainEncryptionAtRestOptions {
		if v != nil {
			return *v
		}
		var ret DomainEncryptionAtRestOptions
		return ret
	}).(DomainEncryptionAtRestOptionsOutput)
}

// Specify `true` to enable encryption at rest. Required if you enable fine-grained access control in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
//
// If no encryption at rest options were initially specified in the template, updating this property by adding it causes no interruption. However, if you change this property after it's already been set within a template, the domain is deleted and recreated in order to modify the property.
func (o DomainEncryptionAtRestOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainEncryptionAtRestOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The KMS key ID. Takes the form `1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a` . Required if you enable encryption at rest.
//
// You can also use `keyAlias` as a value.
//
// If no encryption at rest options were initially specified in the template, updating this property by adding it causes no interruption. However, if you change this property after it's already been set within a template, the domain is deleted and recreated in order to modify the property.
func (o DomainEncryptionAtRestOptionsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEncryptionAtRestOptions) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

type DomainEndpointOptions struct {
	// The fully qualified URL for your custom endpoint. Required if you enabled a custom endpoint for the domain.
	CustomEndpoint *string `pulumi:"customEndpoint"`
	// The AWS Certificate Manager ARN for your domain's SSL/TLS certificate. Required if you enabled a custom endpoint for the domain.
	CustomEndpointCertificateArn *string `pulumi:"customEndpointCertificateArn"`
	// True to enable a custom endpoint for the domain. If enabled, you must also provide values for `CustomEndpoint` and `CustomEndpointCertificateArn` .
	CustomEndpointEnabled *bool `pulumi:"customEndpointEnabled"`
	// True to require that all traffic to the domain arrive over HTTPS. Required if you enable fine-grained access control in [AdvancedSecurityOptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
	EnforceHttps *bool `pulumi:"enforceHttps"`
	// The minimum TLS version required for traffic to the domain. The policy can be one of the following values:
	//
	// - *Policy-Min-TLS-1-0-2019-07:* TLS security policy that supports TLS version 1.0 to TLS version 1.2
	// - *Policy-Min-TLS-1-2-2019-07:* TLS security policy that supports only TLS version 1.2
	// - *Policy-Min-TLS-1-2-PFS-2023-10:* TLS security policy that supports TLS version 1.2 to TLS version 1.3 with perfect forward secrecy cipher suites
	TlsSecurityPolicy *string `pulumi:"tlsSecurityPolicy"`
}

// DomainEndpointOptionsInput is an input type that accepts DomainEndpointOptionsArgs and DomainEndpointOptionsOutput values.
// You can construct a concrete instance of `DomainEndpointOptionsInput` via:
//
//	DomainEndpointOptionsArgs{...}
type DomainEndpointOptionsInput interface {
	pulumi.Input

	ToDomainEndpointOptionsOutput() DomainEndpointOptionsOutput
	ToDomainEndpointOptionsOutputWithContext(context.Context) DomainEndpointOptionsOutput
}

type DomainEndpointOptionsArgs struct {
	// The fully qualified URL for your custom endpoint. Required if you enabled a custom endpoint for the domain.
	CustomEndpoint pulumi.StringPtrInput `pulumi:"customEndpoint"`
	// The AWS Certificate Manager ARN for your domain's SSL/TLS certificate. Required if you enabled a custom endpoint for the domain.
	CustomEndpointCertificateArn pulumi.StringPtrInput `pulumi:"customEndpointCertificateArn"`
	// True to enable a custom endpoint for the domain. If enabled, you must also provide values for `CustomEndpoint` and `CustomEndpointCertificateArn` .
	CustomEndpointEnabled pulumi.BoolPtrInput `pulumi:"customEndpointEnabled"`
	// True to require that all traffic to the domain arrive over HTTPS. Required if you enable fine-grained access control in [AdvancedSecurityOptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
	EnforceHttps pulumi.BoolPtrInput `pulumi:"enforceHttps"`
	// The minimum TLS version required for traffic to the domain. The policy can be one of the following values:
	//
	// - *Policy-Min-TLS-1-0-2019-07:* TLS security policy that supports TLS version 1.0 to TLS version 1.2
	// - *Policy-Min-TLS-1-2-2019-07:* TLS security policy that supports only TLS version 1.2
	// - *Policy-Min-TLS-1-2-PFS-2023-10:* TLS security policy that supports TLS version 1.2 to TLS version 1.3 with perfect forward secrecy cipher suites
	TlsSecurityPolicy pulumi.StringPtrInput `pulumi:"tlsSecurityPolicy"`
}

func (DomainEndpointOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEndpointOptions)(nil)).Elem()
}

func (i DomainEndpointOptionsArgs) ToDomainEndpointOptionsOutput() DomainEndpointOptionsOutput {
	return i.ToDomainEndpointOptionsOutputWithContext(context.Background())
}

func (i DomainEndpointOptionsArgs) ToDomainEndpointOptionsOutputWithContext(ctx context.Context) DomainEndpointOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEndpointOptionsOutput)
}

func (i DomainEndpointOptionsArgs) ToDomainEndpointOptionsPtrOutput() DomainEndpointOptionsPtrOutput {
	return i.ToDomainEndpointOptionsPtrOutputWithContext(context.Background())
}

func (i DomainEndpointOptionsArgs) ToDomainEndpointOptionsPtrOutputWithContext(ctx context.Context) DomainEndpointOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEndpointOptionsOutput).ToDomainEndpointOptionsPtrOutputWithContext(ctx)
}

// DomainEndpointOptionsPtrInput is an input type that accepts DomainEndpointOptionsArgs, DomainEndpointOptionsPtr and DomainEndpointOptionsPtrOutput values.
// You can construct a concrete instance of `DomainEndpointOptionsPtrInput` via:
//
//	        DomainEndpointOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainEndpointOptionsPtrInput interface {
	pulumi.Input

	ToDomainEndpointOptionsPtrOutput() DomainEndpointOptionsPtrOutput
	ToDomainEndpointOptionsPtrOutputWithContext(context.Context) DomainEndpointOptionsPtrOutput
}

type domainEndpointOptionsPtrType DomainEndpointOptionsArgs

func DomainEndpointOptionsPtr(v *DomainEndpointOptionsArgs) DomainEndpointOptionsPtrInput {
	return (*domainEndpointOptionsPtrType)(v)
}

func (*domainEndpointOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEndpointOptions)(nil)).Elem()
}

func (i *domainEndpointOptionsPtrType) ToDomainEndpointOptionsPtrOutput() DomainEndpointOptionsPtrOutput {
	return i.ToDomainEndpointOptionsPtrOutputWithContext(context.Background())
}

func (i *domainEndpointOptionsPtrType) ToDomainEndpointOptionsPtrOutputWithContext(ctx context.Context) DomainEndpointOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEndpointOptionsPtrOutput)
}

type DomainEndpointOptionsOutput struct{ *pulumi.OutputState }

func (DomainEndpointOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEndpointOptions)(nil)).Elem()
}

func (o DomainEndpointOptionsOutput) ToDomainEndpointOptionsOutput() DomainEndpointOptionsOutput {
	return o
}

func (o DomainEndpointOptionsOutput) ToDomainEndpointOptionsOutputWithContext(ctx context.Context) DomainEndpointOptionsOutput {
	return o
}

func (o DomainEndpointOptionsOutput) ToDomainEndpointOptionsPtrOutput() DomainEndpointOptionsPtrOutput {
	return o.ToDomainEndpointOptionsPtrOutputWithContext(context.Background())
}

func (o DomainEndpointOptionsOutput) ToDomainEndpointOptionsPtrOutputWithContext(ctx context.Context) DomainEndpointOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainEndpointOptions) *DomainEndpointOptions {
		return &v
	}).(DomainEndpointOptionsPtrOutput)
}

// The fully qualified URL for your custom endpoint. Required if you enabled a custom endpoint for the domain.
func (o DomainEndpointOptionsOutput) CustomEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEndpointOptions) *string { return v.CustomEndpoint }).(pulumi.StringPtrOutput)
}

// The AWS Certificate Manager ARN for your domain's SSL/TLS certificate. Required if you enabled a custom endpoint for the domain.
func (o DomainEndpointOptionsOutput) CustomEndpointCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEndpointOptions) *string { return v.CustomEndpointCertificateArn }).(pulumi.StringPtrOutput)
}

// True to enable a custom endpoint for the domain. If enabled, you must also provide values for `CustomEndpoint` and `CustomEndpointCertificateArn` .
func (o DomainEndpointOptionsOutput) CustomEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainEndpointOptions) *bool { return v.CustomEndpointEnabled }).(pulumi.BoolPtrOutput)
}

// True to require that all traffic to the domain arrive over HTTPS. Required if you enable fine-grained access control in [AdvancedSecurityOptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
func (o DomainEndpointOptionsOutput) EnforceHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainEndpointOptions) *bool { return v.EnforceHttps }).(pulumi.BoolPtrOutput)
}

// The minimum TLS version required for traffic to the domain. The policy can be one of the following values:
//
// - *Policy-Min-TLS-1-0-2019-07:* TLS security policy that supports TLS version 1.0 to TLS version 1.2
// - *Policy-Min-TLS-1-2-2019-07:* TLS security policy that supports only TLS version 1.2
// - *Policy-Min-TLS-1-2-PFS-2023-10:* TLS security policy that supports TLS version 1.2 to TLS version 1.3 with perfect forward secrecy cipher suites
func (o DomainEndpointOptionsOutput) TlsSecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEndpointOptions) *string { return v.TlsSecurityPolicy }).(pulumi.StringPtrOutput)
}

type DomainEndpointOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainEndpointOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEndpointOptions)(nil)).Elem()
}

func (o DomainEndpointOptionsPtrOutput) ToDomainEndpointOptionsPtrOutput() DomainEndpointOptionsPtrOutput {
	return o
}

func (o DomainEndpointOptionsPtrOutput) ToDomainEndpointOptionsPtrOutputWithContext(ctx context.Context) DomainEndpointOptionsPtrOutput {
	return o
}

func (o DomainEndpointOptionsPtrOutput) Elem() DomainEndpointOptionsOutput {
	return o.ApplyT(func(v *DomainEndpointOptions) DomainEndpointOptions {
		if v != nil {
			return *v
		}
		var ret DomainEndpointOptions
		return ret
	}).(DomainEndpointOptionsOutput)
}

// The fully qualified URL for your custom endpoint. Required if you enabled a custom endpoint for the domain.
func (o DomainEndpointOptionsPtrOutput) CustomEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEndpointOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomEndpoint
	}).(pulumi.StringPtrOutput)
}

// The AWS Certificate Manager ARN for your domain's SSL/TLS certificate. Required if you enabled a custom endpoint for the domain.
func (o DomainEndpointOptionsPtrOutput) CustomEndpointCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEndpointOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomEndpointCertificateArn
	}).(pulumi.StringPtrOutput)
}

// True to enable a custom endpoint for the domain. If enabled, you must also provide values for `CustomEndpoint` and `CustomEndpointCertificateArn` .
func (o DomainEndpointOptionsPtrOutput) CustomEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainEndpointOptions) *bool {
		if v == nil {
			return nil
		}
		return v.CustomEndpointEnabled
	}).(pulumi.BoolPtrOutput)
}

// True to require that all traffic to the domain arrive over HTTPS. Required if you enable fine-grained access control in [AdvancedSecurityOptions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
func (o DomainEndpointOptionsPtrOutput) EnforceHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainEndpointOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnforceHttps
	}).(pulumi.BoolPtrOutput)
}

// The minimum TLS version required for traffic to the domain. The policy can be one of the following values:
//
// - *Policy-Min-TLS-1-0-2019-07:* TLS security policy that supports TLS version 1.0 to TLS version 1.2
// - *Policy-Min-TLS-1-2-2019-07:* TLS security policy that supports only TLS version 1.2
// - *Policy-Min-TLS-1-2-PFS-2023-10:* TLS security policy that supports TLS version 1.2 to TLS version 1.3 with perfect forward secrecy cipher suites
func (o DomainEndpointOptionsPtrOutput) TlsSecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEndpointOptions) *string {
		if v == nil {
			return nil
		}
		return v.TlsSecurityPolicy
	}).(pulumi.StringPtrOutput)
}

type DomainIdp struct {
	// The unique entity ID of the application in the SAML identity provider.
	EntityId string `pulumi:"entityId"`
	// The metadata of the SAML application, in XML format.
	MetadataContent string `pulumi:"metadataContent"`
}

// DomainIdpInput is an input type that accepts DomainIdpArgs and DomainIdpOutput values.
// You can construct a concrete instance of `DomainIdpInput` via:
//
//	DomainIdpArgs{...}
type DomainIdpInput interface {
	pulumi.Input

	ToDomainIdpOutput() DomainIdpOutput
	ToDomainIdpOutputWithContext(context.Context) DomainIdpOutput
}

type DomainIdpArgs struct {
	// The unique entity ID of the application in the SAML identity provider.
	EntityId pulumi.StringInput `pulumi:"entityId"`
	// The metadata of the SAML application, in XML format.
	MetadataContent pulumi.StringInput `pulumi:"metadataContent"`
}

func (DomainIdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainIdp)(nil)).Elem()
}

func (i DomainIdpArgs) ToDomainIdpOutput() DomainIdpOutput {
	return i.ToDomainIdpOutputWithContext(context.Background())
}

func (i DomainIdpArgs) ToDomainIdpOutputWithContext(ctx context.Context) DomainIdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIdpOutput)
}

func (i DomainIdpArgs) ToDomainIdpPtrOutput() DomainIdpPtrOutput {
	return i.ToDomainIdpPtrOutputWithContext(context.Background())
}

func (i DomainIdpArgs) ToDomainIdpPtrOutputWithContext(ctx context.Context) DomainIdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIdpOutput).ToDomainIdpPtrOutputWithContext(ctx)
}

// DomainIdpPtrInput is an input type that accepts DomainIdpArgs, DomainIdpPtr and DomainIdpPtrOutput values.
// You can construct a concrete instance of `DomainIdpPtrInput` via:
//
//	        DomainIdpArgs{...}
//
//	or:
//
//	        nil
type DomainIdpPtrInput interface {
	pulumi.Input

	ToDomainIdpPtrOutput() DomainIdpPtrOutput
	ToDomainIdpPtrOutputWithContext(context.Context) DomainIdpPtrOutput
}

type domainIdpPtrType DomainIdpArgs

func DomainIdpPtr(v *DomainIdpArgs) DomainIdpPtrInput {
	return (*domainIdpPtrType)(v)
}

func (*domainIdpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainIdp)(nil)).Elem()
}

func (i *domainIdpPtrType) ToDomainIdpPtrOutput() DomainIdpPtrOutput {
	return i.ToDomainIdpPtrOutputWithContext(context.Background())
}

func (i *domainIdpPtrType) ToDomainIdpPtrOutputWithContext(ctx context.Context) DomainIdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIdpPtrOutput)
}

type DomainIdpOutput struct{ *pulumi.OutputState }

func (DomainIdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainIdp)(nil)).Elem()
}

func (o DomainIdpOutput) ToDomainIdpOutput() DomainIdpOutput {
	return o
}

func (o DomainIdpOutput) ToDomainIdpOutputWithContext(ctx context.Context) DomainIdpOutput {
	return o
}

func (o DomainIdpOutput) ToDomainIdpPtrOutput() DomainIdpPtrOutput {
	return o.ToDomainIdpPtrOutputWithContext(context.Background())
}

func (o DomainIdpOutput) ToDomainIdpPtrOutputWithContext(ctx context.Context) DomainIdpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainIdp) *DomainIdp {
		return &v
	}).(DomainIdpPtrOutput)
}

// The unique entity ID of the application in the SAML identity provider.
func (o DomainIdpOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v DomainIdp) string { return v.EntityId }).(pulumi.StringOutput)
}

// The metadata of the SAML application, in XML format.
func (o DomainIdpOutput) MetadataContent() pulumi.StringOutput {
	return o.ApplyT(func(v DomainIdp) string { return v.MetadataContent }).(pulumi.StringOutput)
}

type DomainIdpPtrOutput struct{ *pulumi.OutputState }

func (DomainIdpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainIdp)(nil)).Elem()
}

func (o DomainIdpPtrOutput) ToDomainIdpPtrOutput() DomainIdpPtrOutput {
	return o
}

func (o DomainIdpPtrOutput) ToDomainIdpPtrOutputWithContext(ctx context.Context) DomainIdpPtrOutput {
	return o
}

func (o DomainIdpPtrOutput) Elem() DomainIdpOutput {
	return o.ApplyT(func(v *DomainIdp) DomainIdp {
		if v != nil {
			return *v
		}
		var ret DomainIdp
		return ret
	}).(DomainIdpOutput)
}

// The unique entity ID of the application in the SAML identity provider.
func (o DomainIdpPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainIdp) *string {
		if v == nil {
			return nil
		}
		return &v.EntityId
	}).(pulumi.StringPtrOutput)
}

// The metadata of the SAML application, in XML format.
func (o DomainIdpPtrOutput) MetadataContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainIdp) *string {
		if v == nil {
			return nil
		}
		return &v.MetadataContent
	}).(pulumi.StringPtrOutput)
}

type DomainJwtOptions struct {
	Enabled    *bool   `pulumi:"enabled"`
	PublicKey  *string `pulumi:"publicKey"`
	RolesKey   *string `pulumi:"rolesKey"`
	SubjectKey *string `pulumi:"subjectKey"`
}

// DomainJwtOptionsInput is an input type that accepts DomainJwtOptionsArgs and DomainJwtOptionsOutput values.
// You can construct a concrete instance of `DomainJwtOptionsInput` via:
//
//	DomainJwtOptionsArgs{...}
type DomainJwtOptionsInput interface {
	pulumi.Input

	ToDomainJwtOptionsOutput() DomainJwtOptionsOutput
	ToDomainJwtOptionsOutputWithContext(context.Context) DomainJwtOptionsOutput
}

type DomainJwtOptionsArgs struct {
	Enabled    pulumi.BoolPtrInput   `pulumi:"enabled"`
	PublicKey  pulumi.StringPtrInput `pulumi:"publicKey"`
	RolesKey   pulumi.StringPtrInput `pulumi:"rolesKey"`
	SubjectKey pulumi.StringPtrInput `pulumi:"subjectKey"`
}

func (DomainJwtOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainJwtOptions)(nil)).Elem()
}

func (i DomainJwtOptionsArgs) ToDomainJwtOptionsOutput() DomainJwtOptionsOutput {
	return i.ToDomainJwtOptionsOutputWithContext(context.Background())
}

func (i DomainJwtOptionsArgs) ToDomainJwtOptionsOutputWithContext(ctx context.Context) DomainJwtOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainJwtOptionsOutput)
}

func (i DomainJwtOptionsArgs) ToDomainJwtOptionsPtrOutput() DomainJwtOptionsPtrOutput {
	return i.ToDomainJwtOptionsPtrOutputWithContext(context.Background())
}

func (i DomainJwtOptionsArgs) ToDomainJwtOptionsPtrOutputWithContext(ctx context.Context) DomainJwtOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainJwtOptionsOutput).ToDomainJwtOptionsPtrOutputWithContext(ctx)
}

// DomainJwtOptionsPtrInput is an input type that accepts DomainJwtOptionsArgs, DomainJwtOptionsPtr and DomainJwtOptionsPtrOutput values.
// You can construct a concrete instance of `DomainJwtOptionsPtrInput` via:
//
//	        DomainJwtOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainJwtOptionsPtrInput interface {
	pulumi.Input

	ToDomainJwtOptionsPtrOutput() DomainJwtOptionsPtrOutput
	ToDomainJwtOptionsPtrOutputWithContext(context.Context) DomainJwtOptionsPtrOutput
}

type domainJwtOptionsPtrType DomainJwtOptionsArgs

func DomainJwtOptionsPtr(v *DomainJwtOptionsArgs) DomainJwtOptionsPtrInput {
	return (*domainJwtOptionsPtrType)(v)
}

func (*domainJwtOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainJwtOptions)(nil)).Elem()
}

func (i *domainJwtOptionsPtrType) ToDomainJwtOptionsPtrOutput() DomainJwtOptionsPtrOutput {
	return i.ToDomainJwtOptionsPtrOutputWithContext(context.Background())
}

func (i *domainJwtOptionsPtrType) ToDomainJwtOptionsPtrOutputWithContext(ctx context.Context) DomainJwtOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainJwtOptionsPtrOutput)
}

type DomainJwtOptionsOutput struct{ *pulumi.OutputState }

func (DomainJwtOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainJwtOptions)(nil)).Elem()
}

func (o DomainJwtOptionsOutput) ToDomainJwtOptionsOutput() DomainJwtOptionsOutput {
	return o
}

func (o DomainJwtOptionsOutput) ToDomainJwtOptionsOutputWithContext(ctx context.Context) DomainJwtOptionsOutput {
	return o
}

func (o DomainJwtOptionsOutput) ToDomainJwtOptionsPtrOutput() DomainJwtOptionsPtrOutput {
	return o.ToDomainJwtOptionsPtrOutputWithContext(context.Background())
}

func (o DomainJwtOptionsOutput) ToDomainJwtOptionsPtrOutputWithContext(ctx context.Context) DomainJwtOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainJwtOptions) *DomainJwtOptions {
		return &v
	}).(DomainJwtOptionsPtrOutput)
}

func (o DomainJwtOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainJwtOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o DomainJwtOptionsOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainJwtOptions) *string { return v.PublicKey }).(pulumi.StringPtrOutput)
}

func (o DomainJwtOptionsOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainJwtOptions) *string { return v.RolesKey }).(pulumi.StringPtrOutput)
}

func (o DomainJwtOptionsOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainJwtOptions) *string { return v.SubjectKey }).(pulumi.StringPtrOutput)
}

type DomainJwtOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainJwtOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainJwtOptions)(nil)).Elem()
}

func (o DomainJwtOptionsPtrOutput) ToDomainJwtOptionsPtrOutput() DomainJwtOptionsPtrOutput {
	return o
}

func (o DomainJwtOptionsPtrOutput) ToDomainJwtOptionsPtrOutputWithContext(ctx context.Context) DomainJwtOptionsPtrOutput {
	return o
}

func (o DomainJwtOptionsPtrOutput) Elem() DomainJwtOptionsOutput {
	return o.ApplyT(func(v *DomainJwtOptions) DomainJwtOptions {
		if v != nil {
			return *v
		}
		var ret DomainJwtOptions
		return ret
	}).(DomainJwtOptionsOutput)
}

func (o DomainJwtOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainJwtOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainJwtOptionsPtrOutput) PublicKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainJwtOptions) *string {
		if v == nil {
			return nil
		}
		return v.PublicKey
	}).(pulumi.StringPtrOutput)
}

func (o DomainJwtOptionsPtrOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainJwtOptions) *string {
		if v == nil {
			return nil
		}
		return v.RolesKey
	}).(pulumi.StringPtrOutput)
}

func (o DomainJwtOptionsPtrOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainJwtOptions) *string {
		if v == nil {
			return nil
		}
		return v.SubjectKey
	}).(pulumi.StringPtrOutput)
}

type DomainLogPublishingOption struct {
	CloudWatchLogsLogGroupArn *string `pulumi:"cloudWatchLogsLogGroupArn"`
	Enabled                   *bool   `pulumi:"enabled"`
}

// DomainLogPublishingOptionInput is an input type that accepts DomainLogPublishingOptionArgs and DomainLogPublishingOptionOutput values.
// You can construct a concrete instance of `DomainLogPublishingOptionInput` via:
//
//	DomainLogPublishingOptionArgs{...}
type DomainLogPublishingOptionInput interface {
	pulumi.Input

	ToDomainLogPublishingOptionOutput() DomainLogPublishingOptionOutput
	ToDomainLogPublishingOptionOutputWithContext(context.Context) DomainLogPublishingOptionOutput
}

type DomainLogPublishingOptionArgs struct {
	CloudWatchLogsLogGroupArn pulumi.StringPtrInput `pulumi:"cloudWatchLogsLogGroupArn"`
	Enabled                   pulumi.BoolPtrInput   `pulumi:"enabled"`
}

func (DomainLogPublishingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainLogPublishingOption)(nil)).Elem()
}

func (i DomainLogPublishingOptionArgs) ToDomainLogPublishingOptionOutput() DomainLogPublishingOptionOutput {
	return i.ToDomainLogPublishingOptionOutputWithContext(context.Background())
}

func (i DomainLogPublishingOptionArgs) ToDomainLogPublishingOptionOutputWithContext(ctx context.Context) DomainLogPublishingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainLogPublishingOptionOutput)
}

// DomainLogPublishingOptionMapInput is an input type that accepts DomainLogPublishingOptionMap and DomainLogPublishingOptionMapOutput values.
// You can construct a concrete instance of `DomainLogPublishingOptionMapInput` via:
//
//	DomainLogPublishingOptionMap{ "key": DomainLogPublishingOptionArgs{...} }
type DomainLogPublishingOptionMapInput interface {
	pulumi.Input

	ToDomainLogPublishingOptionMapOutput() DomainLogPublishingOptionMapOutput
	ToDomainLogPublishingOptionMapOutputWithContext(context.Context) DomainLogPublishingOptionMapOutput
}

type DomainLogPublishingOptionMap map[string]DomainLogPublishingOptionInput

func (DomainLogPublishingOptionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DomainLogPublishingOption)(nil)).Elem()
}

func (i DomainLogPublishingOptionMap) ToDomainLogPublishingOptionMapOutput() DomainLogPublishingOptionMapOutput {
	return i.ToDomainLogPublishingOptionMapOutputWithContext(context.Background())
}

func (i DomainLogPublishingOptionMap) ToDomainLogPublishingOptionMapOutputWithContext(ctx context.Context) DomainLogPublishingOptionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainLogPublishingOptionMapOutput)
}

type DomainLogPublishingOptionOutput struct{ *pulumi.OutputState }

func (DomainLogPublishingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainLogPublishingOption)(nil)).Elem()
}

func (o DomainLogPublishingOptionOutput) ToDomainLogPublishingOptionOutput() DomainLogPublishingOptionOutput {
	return o
}

func (o DomainLogPublishingOptionOutput) ToDomainLogPublishingOptionOutputWithContext(ctx context.Context) DomainLogPublishingOptionOutput {
	return o
}

func (o DomainLogPublishingOptionOutput) CloudWatchLogsLogGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainLogPublishingOption) *string { return v.CloudWatchLogsLogGroupArn }).(pulumi.StringPtrOutput)
}

func (o DomainLogPublishingOptionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainLogPublishingOption) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DomainLogPublishingOptionMapOutput struct{ *pulumi.OutputState }

func (DomainLogPublishingOptionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]DomainLogPublishingOption)(nil)).Elem()
}

func (o DomainLogPublishingOptionMapOutput) ToDomainLogPublishingOptionMapOutput() DomainLogPublishingOptionMapOutput {
	return o
}

func (o DomainLogPublishingOptionMapOutput) ToDomainLogPublishingOptionMapOutputWithContext(ctx context.Context) DomainLogPublishingOptionMapOutput {
	return o
}

func (o DomainLogPublishingOptionMapOutput) MapIndex(k pulumi.StringInput) DomainLogPublishingOptionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) DomainLogPublishingOption {
		return vs[0].(map[string]DomainLogPublishingOption)[vs[1].(string)]
	}).(DomainLogPublishingOptionOutput)
}

type DomainMasterUserOptions struct {
	// Amazon Resource Name (ARN) for the master user. The ARN can point to an IAM user or role. This property is required for Amazon Cognito to work, and it must match the role configured for Cognito. Only specify if `InternalUserDatabaseEnabled` is false in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
	MasterUserArn *string `pulumi:"masterUserArn"`
	// Username for the master user. Only specify if `InternalUserDatabaseEnabled` is true in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
	//
	// If you don't want to specify this value directly within the template, you can use a [dynamic reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html) instead.
	MasterUserName *string `pulumi:"masterUserName"`
	// Password for the master user. Only specify if `InternalUserDatabaseEnabled` is true in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
	//
	// If you don't want to specify this value directly within the template, you can use a [dynamic reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html) instead.
	MasterUserPassword *string `pulumi:"masterUserPassword"`
}

// DomainMasterUserOptionsInput is an input type that accepts DomainMasterUserOptionsArgs and DomainMasterUserOptionsOutput values.
// You can construct a concrete instance of `DomainMasterUserOptionsInput` via:
//
//	DomainMasterUserOptionsArgs{...}
type DomainMasterUserOptionsInput interface {
	pulumi.Input

	ToDomainMasterUserOptionsOutput() DomainMasterUserOptionsOutput
	ToDomainMasterUserOptionsOutputWithContext(context.Context) DomainMasterUserOptionsOutput
}

type DomainMasterUserOptionsArgs struct {
	// Amazon Resource Name (ARN) for the master user. The ARN can point to an IAM user or role. This property is required for Amazon Cognito to work, and it must match the role configured for Cognito. Only specify if `InternalUserDatabaseEnabled` is false in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
	MasterUserArn pulumi.StringPtrInput `pulumi:"masterUserArn"`
	// Username for the master user. Only specify if `InternalUserDatabaseEnabled` is true in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
	//
	// If you don't want to specify this value directly within the template, you can use a [dynamic reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html) instead.
	MasterUserName pulumi.StringPtrInput `pulumi:"masterUserName"`
	// Password for the master user. Only specify if `InternalUserDatabaseEnabled` is true in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
	//
	// If you don't want to specify this value directly within the template, you can use a [dynamic reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html) instead.
	MasterUserPassword pulumi.StringPtrInput `pulumi:"masterUserPassword"`
}

func (DomainMasterUserOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMasterUserOptions)(nil)).Elem()
}

func (i DomainMasterUserOptionsArgs) ToDomainMasterUserOptionsOutput() DomainMasterUserOptionsOutput {
	return i.ToDomainMasterUserOptionsOutputWithContext(context.Background())
}

func (i DomainMasterUserOptionsArgs) ToDomainMasterUserOptionsOutputWithContext(ctx context.Context) DomainMasterUserOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMasterUserOptionsOutput)
}

func (i DomainMasterUserOptionsArgs) ToDomainMasterUserOptionsPtrOutput() DomainMasterUserOptionsPtrOutput {
	return i.ToDomainMasterUserOptionsPtrOutputWithContext(context.Background())
}

func (i DomainMasterUserOptionsArgs) ToDomainMasterUserOptionsPtrOutputWithContext(ctx context.Context) DomainMasterUserOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMasterUserOptionsOutput).ToDomainMasterUserOptionsPtrOutputWithContext(ctx)
}

// DomainMasterUserOptionsPtrInput is an input type that accepts DomainMasterUserOptionsArgs, DomainMasterUserOptionsPtr and DomainMasterUserOptionsPtrOutput values.
// You can construct a concrete instance of `DomainMasterUserOptionsPtrInput` via:
//
//	        DomainMasterUserOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainMasterUserOptionsPtrInput interface {
	pulumi.Input

	ToDomainMasterUserOptionsPtrOutput() DomainMasterUserOptionsPtrOutput
	ToDomainMasterUserOptionsPtrOutputWithContext(context.Context) DomainMasterUserOptionsPtrOutput
}

type domainMasterUserOptionsPtrType DomainMasterUserOptionsArgs

func DomainMasterUserOptionsPtr(v *DomainMasterUserOptionsArgs) DomainMasterUserOptionsPtrInput {
	return (*domainMasterUserOptionsPtrType)(v)
}

func (*domainMasterUserOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMasterUserOptions)(nil)).Elem()
}

func (i *domainMasterUserOptionsPtrType) ToDomainMasterUserOptionsPtrOutput() DomainMasterUserOptionsPtrOutput {
	return i.ToDomainMasterUserOptionsPtrOutputWithContext(context.Background())
}

func (i *domainMasterUserOptionsPtrType) ToDomainMasterUserOptionsPtrOutputWithContext(ctx context.Context) DomainMasterUserOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMasterUserOptionsPtrOutput)
}

type DomainMasterUserOptionsOutput struct{ *pulumi.OutputState }

func (DomainMasterUserOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMasterUserOptions)(nil)).Elem()
}

func (o DomainMasterUserOptionsOutput) ToDomainMasterUserOptionsOutput() DomainMasterUserOptionsOutput {
	return o
}

func (o DomainMasterUserOptionsOutput) ToDomainMasterUserOptionsOutputWithContext(ctx context.Context) DomainMasterUserOptionsOutput {
	return o
}

func (o DomainMasterUserOptionsOutput) ToDomainMasterUserOptionsPtrOutput() DomainMasterUserOptionsPtrOutput {
	return o.ToDomainMasterUserOptionsPtrOutputWithContext(context.Background())
}

func (o DomainMasterUserOptionsOutput) ToDomainMasterUserOptionsPtrOutputWithContext(ctx context.Context) DomainMasterUserOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainMasterUserOptions) *DomainMasterUserOptions {
		return &v
	}).(DomainMasterUserOptionsPtrOutput)
}

// Amazon Resource Name (ARN) for the master user. The ARN can point to an IAM user or role. This property is required for Amazon Cognito to work, and it must match the role configured for Cognito. Only specify if `InternalUserDatabaseEnabled` is false in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
func (o DomainMasterUserOptionsOutput) MasterUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMasterUserOptions) *string { return v.MasterUserArn }).(pulumi.StringPtrOutput)
}

// Username for the master user. Only specify if `InternalUserDatabaseEnabled` is true in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
//
// If you don't want to specify this value directly within the template, you can use a [dynamic reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html) instead.
func (o DomainMasterUserOptionsOutput) MasterUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMasterUserOptions) *string { return v.MasterUserName }).(pulumi.StringPtrOutput)
}

// Password for the master user. Only specify if `InternalUserDatabaseEnabled` is true in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
//
// If you don't want to specify this value directly within the template, you can use a [dynamic reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html) instead.
func (o DomainMasterUserOptionsOutput) MasterUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMasterUserOptions) *string { return v.MasterUserPassword }).(pulumi.StringPtrOutput)
}

type DomainMasterUserOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainMasterUserOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMasterUserOptions)(nil)).Elem()
}

func (o DomainMasterUserOptionsPtrOutput) ToDomainMasterUserOptionsPtrOutput() DomainMasterUserOptionsPtrOutput {
	return o
}

func (o DomainMasterUserOptionsPtrOutput) ToDomainMasterUserOptionsPtrOutputWithContext(ctx context.Context) DomainMasterUserOptionsPtrOutput {
	return o
}

func (o DomainMasterUserOptionsPtrOutput) Elem() DomainMasterUserOptionsOutput {
	return o.ApplyT(func(v *DomainMasterUserOptions) DomainMasterUserOptions {
		if v != nil {
			return *v
		}
		var ret DomainMasterUserOptions
		return ret
	}).(DomainMasterUserOptionsOutput)
}

// Amazon Resource Name (ARN) for the master user. The ARN can point to an IAM user or role. This property is required for Amazon Cognito to work, and it must match the role configured for Cognito. Only specify if `InternalUserDatabaseEnabled` is false in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
func (o DomainMasterUserOptionsPtrOutput) MasterUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMasterUserOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterUserArn
	}).(pulumi.StringPtrOutput)
}

// Username for the master user. Only specify if `InternalUserDatabaseEnabled` is true in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
//
// If you don't want to specify this value directly within the template, you can use a [dynamic reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html) instead.
func (o DomainMasterUserOptionsPtrOutput) MasterUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMasterUserOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterUserName
	}).(pulumi.StringPtrOutput)
}

// Password for the master user. Only specify if `InternalUserDatabaseEnabled` is true in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
//
// If you don't want to specify this value directly within the template, you can use a [dynamic reference](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html) instead.
func (o DomainMasterUserOptionsPtrOutput) MasterUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMasterUserOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterUserPassword
	}).(pulumi.StringPtrOutput)
}

type DomainNodeToNodeEncryptionOptions struct {
	// Specifies to enable or disable node-to-node encryption on the domain. Required if you enable fine-grained access control in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
	Enabled *bool `pulumi:"enabled"`
}

// DomainNodeToNodeEncryptionOptionsInput is an input type that accepts DomainNodeToNodeEncryptionOptionsArgs and DomainNodeToNodeEncryptionOptionsOutput values.
// You can construct a concrete instance of `DomainNodeToNodeEncryptionOptionsInput` via:
//
//	DomainNodeToNodeEncryptionOptionsArgs{...}
type DomainNodeToNodeEncryptionOptionsInput interface {
	pulumi.Input

	ToDomainNodeToNodeEncryptionOptionsOutput() DomainNodeToNodeEncryptionOptionsOutput
	ToDomainNodeToNodeEncryptionOptionsOutputWithContext(context.Context) DomainNodeToNodeEncryptionOptionsOutput
}

type DomainNodeToNodeEncryptionOptionsArgs struct {
	// Specifies to enable or disable node-to-node encryption on the domain. Required if you enable fine-grained access control in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (DomainNodeToNodeEncryptionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNodeToNodeEncryptionOptions)(nil)).Elem()
}

func (i DomainNodeToNodeEncryptionOptionsArgs) ToDomainNodeToNodeEncryptionOptionsOutput() DomainNodeToNodeEncryptionOptionsOutput {
	return i.ToDomainNodeToNodeEncryptionOptionsOutputWithContext(context.Background())
}

func (i DomainNodeToNodeEncryptionOptionsArgs) ToDomainNodeToNodeEncryptionOptionsOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNodeToNodeEncryptionOptionsOutput)
}

func (i DomainNodeToNodeEncryptionOptionsArgs) ToDomainNodeToNodeEncryptionOptionsPtrOutput() DomainNodeToNodeEncryptionOptionsPtrOutput {
	return i.ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(context.Background())
}

func (i DomainNodeToNodeEncryptionOptionsArgs) ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNodeToNodeEncryptionOptionsOutput).ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx)
}

// DomainNodeToNodeEncryptionOptionsPtrInput is an input type that accepts DomainNodeToNodeEncryptionOptionsArgs, DomainNodeToNodeEncryptionOptionsPtr and DomainNodeToNodeEncryptionOptionsPtrOutput values.
// You can construct a concrete instance of `DomainNodeToNodeEncryptionOptionsPtrInput` via:
//
//	        DomainNodeToNodeEncryptionOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainNodeToNodeEncryptionOptionsPtrInput interface {
	pulumi.Input

	ToDomainNodeToNodeEncryptionOptionsPtrOutput() DomainNodeToNodeEncryptionOptionsPtrOutput
	ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(context.Context) DomainNodeToNodeEncryptionOptionsPtrOutput
}

type domainNodeToNodeEncryptionOptionsPtrType DomainNodeToNodeEncryptionOptionsArgs

func DomainNodeToNodeEncryptionOptionsPtr(v *DomainNodeToNodeEncryptionOptionsArgs) DomainNodeToNodeEncryptionOptionsPtrInput {
	return (*domainNodeToNodeEncryptionOptionsPtrType)(v)
}

func (*domainNodeToNodeEncryptionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNodeToNodeEncryptionOptions)(nil)).Elem()
}

func (i *domainNodeToNodeEncryptionOptionsPtrType) ToDomainNodeToNodeEncryptionOptionsPtrOutput() DomainNodeToNodeEncryptionOptionsPtrOutput {
	return i.ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(context.Background())
}

func (i *domainNodeToNodeEncryptionOptionsPtrType) ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNodeToNodeEncryptionOptionsPtrOutput)
}

type DomainNodeToNodeEncryptionOptionsOutput struct{ *pulumi.OutputState }

func (DomainNodeToNodeEncryptionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNodeToNodeEncryptionOptions)(nil)).Elem()
}

func (o DomainNodeToNodeEncryptionOptionsOutput) ToDomainNodeToNodeEncryptionOptionsOutput() DomainNodeToNodeEncryptionOptionsOutput {
	return o
}

func (o DomainNodeToNodeEncryptionOptionsOutput) ToDomainNodeToNodeEncryptionOptionsOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOptionsOutput {
	return o
}

func (o DomainNodeToNodeEncryptionOptionsOutput) ToDomainNodeToNodeEncryptionOptionsPtrOutput() DomainNodeToNodeEncryptionOptionsPtrOutput {
	return o.ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(context.Background())
}

func (o DomainNodeToNodeEncryptionOptionsOutput) ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainNodeToNodeEncryptionOptions) *DomainNodeToNodeEncryptionOptions {
		return &v
	}).(DomainNodeToNodeEncryptionOptionsPtrOutput)
}

// Specifies to enable or disable node-to-node encryption on the domain. Required if you enable fine-grained access control in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
func (o DomainNodeToNodeEncryptionOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainNodeToNodeEncryptionOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DomainNodeToNodeEncryptionOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainNodeToNodeEncryptionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNodeToNodeEncryptionOptions)(nil)).Elem()
}

func (o DomainNodeToNodeEncryptionOptionsPtrOutput) ToDomainNodeToNodeEncryptionOptionsPtrOutput() DomainNodeToNodeEncryptionOptionsPtrOutput {
	return o
}

func (o DomainNodeToNodeEncryptionOptionsPtrOutput) ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOptionsPtrOutput {
	return o
}

func (o DomainNodeToNodeEncryptionOptionsPtrOutput) Elem() DomainNodeToNodeEncryptionOptionsOutput {
	return o.ApplyT(func(v *DomainNodeToNodeEncryptionOptions) DomainNodeToNodeEncryptionOptions {
		if v != nil {
			return *v
		}
		var ret DomainNodeToNodeEncryptionOptions
		return ret
	}).(DomainNodeToNodeEncryptionOptionsOutput)
}

// Specifies to enable or disable node-to-node encryption on the domain. Required if you enable fine-grained access control in [AdvancedSecurityOptionsInput](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-advancedsecurityoptionsinput.html) .
func (o DomainNodeToNodeEncryptionOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainNodeToNodeEncryptionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type DomainOffPeakWindow struct {
	// The desired start time for an off-peak maintenance window.
	WindowStartTime *DomainWindowStartTime `pulumi:"windowStartTime"`
}

// DomainOffPeakWindowInput is an input type that accepts DomainOffPeakWindowArgs and DomainOffPeakWindowOutput values.
// You can construct a concrete instance of `DomainOffPeakWindowInput` via:
//
//	DomainOffPeakWindowArgs{...}
type DomainOffPeakWindowInput interface {
	pulumi.Input

	ToDomainOffPeakWindowOutput() DomainOffPeakWindowOutput
	ToDomainOffPeakWindowOutputWithContext(context.Context) DomainOffPeakWindowOutput
}

type DomainOffPeakWindowArgs struct {
	// The desired start time for an off-peak maintenance window.
	WindowStartTime DomainWindowStartTimePtrInput `pulumi:"windowStartTime"`
}

func (DomainOffPeakWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOffPeakWindow)(nil)).Elem()
}

func (i DomainOffPeakWindowArgs) ToDomainOffPeakWindowOutput() DomainOffPeakWindowOutput {
	return i.ToDomainOffPeakWindowOutputWithContext(context.Background())
}

func (i DomainOffPeakWindowArgs) ToDomainOffPeakWindowOutputWithContext(ctx context.Context) DomainOffPeakWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOffPeakWindowOutput)
}

func (i DomainOffPeakWindowArgs) ToDomainOffPeakWindowPtrOutput() DomainOffPeakWindowPtrOutput {
	return i.ToDomainOffPeakWindowPtrOutputWithContext(context.Background())
}

func (i DomainOffPeakWindowArgs) ToDomainOffPeakWindowPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOffPeakWindowOutput).ToDomainOffPeakWindowPtrOutputWithContext(ctx)
}

// DomainOffPeakWindowPtrInput is an input type that accepts DomainOffPeakWindowArgs, DomainOffPeakWindowPtr and DomainOffPeakWindowPtrOutput values.
// You can construct a concrete instance of `DomainOffPeakWindowPtrInput` via:
//
//	        DomainOffPeakWindowArgs{...}
//
//	or:
//
//	        nil
type DomainOffPeakWindowPtrInput interface {
	pulumi.Input

	ToDomainOffPeakWindowPtrOutput() DomainOffPeakWindowPtrOutput
	ToDomainOffPeakWindowPtrOutputWithContext(context.Context) DomainOffPeakWindowPtrOutput
}

type domainOffPeakWindowPtrType DomainOffPeakWindowArgs

func DomainOffPeakWindowPtr(v *DomainOffPeakWindowArgs) DomainOffPeakWindowPtrInput {
	return (*domainOffPeakWindowPtrType)(v)
}

func (*domainOffPeakWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOffPeakWindow)(nil)).Elem()
}

func (i *domainOffPeakWindowPtrType) ToDomainOffPeakWindowPtrOutput() DomainOffPeakWindowPtrOutput {
	return i.ToDomainOffPeakWindowPtrOutputWithContext(context.Background())
}

func (i *domainOffPeakWindowPtrType) ToDomainOffPeakWindowPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOffPeakWindowPtrOutput)
}

type DomainOffPeakWindowOutput struct{ *pulumi.OutputState }

func (DomainOffPeakWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOffPeakWindow)(nil)).Elem()
}

func (o DomainOffPeakWindowOutput) ToDomainOffPeakWindowOutput() DomainOffPeakWindowOutput {
	return o
}

func (o DomainOffPeakWindowOutput) ToDomainOffPeakWindowOutputWithContext(ctx context.Context) DomainOffPeakWindowOutput {
	return o
}

func (o DomainOffPeakWindowOutput) ToDomainOffPeakWindowPtrOutput() DomainOffPeakWindowPtrOutput {
	return o.ToDomainOffPeakWindowPtrOutputWithContext(context.Background())
}

func (o DomainOffPeakWindowOutput) ToDomainOffPeakWindowPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainOffPeakWindow) *DomainOffPeakWindow {
		return &v
	}).(DomainOffPeakWindowPtrOutput)
}

// The desired start time for an off-peak maintenance window.
func (o DomainOffPeakWindowOutput) WindowStartTime() DomainWindowStartTimePtrOutput {
	return o.ApplyT(func(v DomainOffPeakWindow) *DomainWindowStartTime { return v.WindowStartTime }).(DomainWindowStartTimePtrOutput)
}

type DomainOffPeakWindowPtrOutput struct{ *pulumi.OutputState }

func (DomainOffPeakWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOffPeakWindow)(nil)).Elem()
}

func (o DomainOffPeakWindowPtrOutput) ToDomainOffPeakWindowPtrOutput() DomainOffPeakWindowPtrOutput {
	return o
}

func (o DomainOffPeakWindowPtrOutput) ToDomainOffPeakWindowPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowPtrOutput {
	return o
}

func (o DomainOffPeakWindowPtrOutput) Elem() DomainOffPeakWindowOutput {
	return o.ApplyT(func(v *DomainOffPeakWindow) DomainOffPeakWindow {
		if v != nil {
			return *v
		}
		var ret DomainOffPeakWindow
		return ret
	}).(DomainOffPeakWindowOutput)
}

// The desired start time for an off-peak maintenance window.
func (o DomainOffPeakWindowPtrOutput) WindowStartTime() DomainWindowStartTimePtrOutput {
	return o.ApplyT(func(v *DomainOffPeakWindow) *DomainWindowStartTime {
		if v == nil {
			return nil
		}
		return v.WindowStartTime
	}).(DomainWindowStartTimePtrOutput)
}

type DomainOffPeakWindowOptions struct {
	// Specifies whether off-peak window settings are enabled for the domain.
	Enabled *bool `pulumi:"enabled"`
	// Off-peak window settings for the domain.
	OffPeakWindow *DomainOffPeakWindow `pulumi:"offPeakWindow"`
}

// DomainOffPeakWindowOptionsInput is an input type that accepts DomainOffPeakWindowOptionsArgs and DomainOffPeakWindowOptionsOutput values.
// You can construct a concrete instance of `DomainOffPeakWindowOptionsInput` via:
//
//	DomainOffPeakWindowOptionsArgs{...}
type DomainOffPeakWindowOptionsInput interface {
	pulumi.Input

	ToDomainOffPeakWindowOptionsOutput() DomainOffPeakWindowOptionsOutput
	ToDomainOffPeakWindowOptionsOutputWithContext(context.Context) DomainOffPeakWindowOptionsOutput
}

type DomainOffPeakWindowOptionsArgs struct {
	// Specifies whether off-peak window settings are enabled for the domain.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Off-peak window settings for the domain.
	OffPeakWindow DomainOffPeakWindowPtrInput `pulumi:"offPeakWindow"`
}

func (DomainOffPeakWindowOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOffPeakWindowOptions)(nil)).Elem()
}

func (i DomainOffPeakWindowOptionsArgs) ToDomainOffPeakWindowOptionsOutput() DomainOffPeakWindowOptionsOutput {
	return i.ToDomainOffPeakWindowOptionsOutputWithContext(context.Background())
}

func (i DomainOffPeakWindowOptionsArgs) ToDomainOffPeakWindowOptionsOutputWithContext(ctx context.Context) DomainOffPeakWindowOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOffPeakWindowOptionsOutput)
}

func (i DomainOffPeakWindowOptionsArgs) ToDomainOffPeakWindowOptionsPtrOutput() DomainOffPeakWindowOptionsPtrOutput {
	return i.ToDomainOffPeakWindowOptionsPtrOutputWithContext(context.Background())
}

func (i DomainOffPeakWindowOptionsArgs) ToDomainOffPeakWindowOptionsPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOffPeakWindowOptionsOutput).ToDomainOffPeakWindowOptionsPtrOutputWithContext(ctx)
}

// DomainOffPeakWindowOptionsPtrInput is an input type that accepts DomainOffPeakWindowOptionsArgs, DomainOffPeakWindowOptionsPtr and DomainOffPeakWindowOptionsPtrOutput values.
// You can construct a concrete instance of `DomainOffPeakWindowOptionsPtrInput` via:
//
//	        DomainOffPeakWindowOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainOffPeakWindowOptionsPtrInput interface {
	pulumi.Input

	ToDomainOffPeakWindowOptionsPtrOutput() DomainOffPeakWindowOptionsPtrOutput
	ToDomainOffPeakWindowOptionsPtrOutputWithContext(context.Context) DomainOffPeakWindowOptionsPtrOutput
}

type domainOffPeakWindowOptionsPtrType DomainOffPeakWindowOptionsArgs

func DomainOffPeakWindowOptionsPtr(v *DomainOffPeakWindowOptionsArgs) DomainOffPeakWindowOptionsPtrInput {
	return (*domainOffPeakWindowOptionsPtrType)(v)
}

func (*domainOffPeakWindowOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOffPeakWindowOptions)(nil)).Elem()
}

func (i *domainOffPeakWindowOptionsPtrType) ToDomainOffPeakWindowOptionsPtrOutput() DomainOffPeakWindowOptionsPtrOutput {
	return i.ToDomainOffPeakWindowOptionsPtrOutputWithContext(context.Background())
}

func (i *domainOffPeakWindowOptionsPtrType) ToDomainOffPeakWindowOptionsPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOffPeakWindowOptionsPtrOutput)
}

type DomainOffPeakWindowOptionsOutput struct{ *pulumi.OutputState }

func (DomainOffPeakWindowOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOffPeakWindowOptions)(nil)).Elem()
}

func (o DomainOffPeakWindowOptionsOutput) ToDomainOffPeakWindowOptionsOutput() DomainOffPeakWindowOptionsOutput {
	return o
}

func (o DomainOffPeakWindowOptionsOutput) ToDomainOffPeakWindowOptionsOutputWithContext(ctx context.Context) DomainOffPeakWindowOptionsOutput {
	return o
}

func (o DomainOffPeakWindowOptionsOutput) ToDomainOffPeakWindowOptionsPtrOutput() DomainOffPeakWindowOptionsPtrOutput {
	return o.ToDomainOffPeakWindowOptionsPtrOutputWithContext(context.Background())
}

func (o DomainOffPeakWindowOptionsOutput) ToDomainOffPeakWindowOptionsPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainOffPeakWindowOptions) *DomainOffPeakWindowOptions {
		return &v
	}).(DomainOffPeakWindowOptionsPtrOutput)
}

// Specifies whether off-peak window settings are enabled for the domain.
func (o DomainOffPeakWindowOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainOffPeakWindowOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Off-peak window settings for the domain.
func (o DomainOffPeakWindowOptionsOutput) OffPeakWindow() DomainOffPeakWindowPtrOutput {
	return o.ApplyT(func(v DomainOffPeakWindowOptions) *DomainOffPeakWindow { return v.OffPeakWindow }).(DomainOffPeakWindowPtrOutput)
}

type DomainOffPeakWindowOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainOffPeakWindowOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOffPeakWindowOptions)(nil)).Elem()
}

func (o DomainOffPeakWindowOptionsPtrOutput) ToDomainOffPeakWindowOptionsPtrOutput() DomainOffPeakWindowOptionsPtrOutput {
	return o
}

func (o DomainOffPeakWindowOptionsPtrOutput) ToDomainOffPeakWindowOptionsPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowOptionsPtrOutput {
	return o
}

func (o DomainOffPeakWindowOptionsPtrOutput) Elem() DomainOffPeakWindowOptionsOutput {
	return o.ApplyT(func(v *DomainOffPeakWindowOptions) DomainOffPeakWindowOptions {
		if v != nil {
			return *v
		}
		var ret DomainOffPeakWindowOptions
		return ret
	}).(DomainOffPeakWindowOptionsOutput)
}

// Specifies whether off-peak window settings are enabled for the domain.
func (o DomainOffPeakWindowOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainOffPeakWindowOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Off-peak window settings for the domain.
func (o DomainOffPeakWindowOptionsPtrOutput) OffPeakWindow() DomainOffPeakWindowPtrOutput {
	return o.ApplyT(func(v *DomainOffPeakWindowOptions) *DomainOffPeakWindow {
		if v == nil {
			return nil
		}
		return v.OffPeakWindow
	}).(DomainOffPeakWindowPtrOutput)
}

type DomainSamlOptions struct {
	// True to enable SAML authentication for a domain.
	Enabled *bool `pulumi:"enabled"`
	// The SAML Identity Provider's information.
	Idp *DomainIdp `pulumi:"idp"`
	// The backend role that the SAML master user is mapped to.
	MasterBackendRole *string `pulumi:"masterBackendRole"`
	// The SAML master user name, which is stored in the domain's internal user database.
	MasterUserName *string `pulumi:"masterUserName"`
	// Element of the SAML assertion to use for backend roles. Default is `roles` .
	RolesKey *string `pulumi:"rolesKey"`
	// The duration, in minutes, after which a user session becomes inactive. Acceptable values are between 1 and 1440, and the default value is 60.
	SessionTimeoutMinutes *int `pulumi:"sessionTimeoutMinutes"`
	// Element of the SAML assertion to use for the user name. Default is `NameID` .
	SubjectKey *string `pulumi:"subjectKey"`
}

// DomainSamlOptionsInput is an input type that accepts DomainSamlOptionsArgs and DomainSamlOptionsOutput values.
// You can construct a concrete instance of `DomainSamlOptionsInput` via:
//
//	DomainSamlOptionsArgs{...}
type DomainSamlOptionsInput interface {
	pulumi.Input

	ToDomainSamlOptionsOutput() DomainSamlOptionsOutput
	ToDomainSamlOptionsOutputWithContext(context.Context) DomainSamlOptionsOutput
}

type DomainSamlOptionsArgs struct {
	// True to enable SAML authentication for a domain.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The SAML Identity Provider's information.
	Idp DomainIdpPtrInput `pulumi:"idp"`
	// The backend role that the SAML master user is mapped to.
	MasterBackendRole pulumi.StringPtrInput `pulumi:"masterBackendRole"`
	// The SAML master user name, which is stored in the domain's internal user database.
	MasterUserName pulumi.StringPtrInput `pulumi:"masterUserName"`
	// Element of the SAML assertion to use for backend roles. Default is `roles` .
	RolesKey pulumi.StringPtrInput `pulumi:"rolesKey"`
	// The duration, in minutes, after which a user session becomes inactive. Acceptable values are between 1 and 1440, and the default value is 60.
	SessionTimeoutMinutes pulumi.IntPtrInput `pulumi:"sessionTimeoutMinutes"`
	// Element of the SAML assertion to use for the user name. Default is `NameID` .
	SubjectKey pulumi.StringPtrInput `pulumi:"subjectKey"`
}

func (DomainSamlOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSamlOptions)(nil)).Elem()
}

func (i DomainSamlOptionsArgs) ToDomainSamlOptionsOutput() DomainSamlOptionsOutput {
	return i.ToDomainSamlOptionsOutputWithContext(context.Background())
}

func (i DomainSamlOptionsArgs) ToDomainSamlOptionsOutputWithContext(ctx context.Context) DomainSamlOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSamlOptionsOutput)
}

func (i DomainSamlOptionsArgs) ToDomainSamlOptionsPtrOutput() DomainSamlOptionsPtrOutput {
	return i.ToDomainSamlOptionsPtrOutputWithContext(context.Background())
}

func (i DomainSamlOptionsArgs) ToDomainSamlOptionsPtrOutputWithContext(ctx context.Context) DomainSamlOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSamlOptionsOutput).ToDomainSamlOptionsPtrOutputWithContext(ctx)
}

// DomainSamlOptionsPtrInput is an input type that accepts DomainSamlOptionsArgs, DomainSamlOptionsPtr and DomainSamlOptionsPtrOutput values.
// You can construct a concrete instance of `DomainSamlOptionsPtrInput` via:
//
//	        DomainSamlOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainSamlOptionsPtrInput interface {
	pulumi.Input

	ToDomainSamlOptionsPtrOutput() DomainSamlOptionsPtrOutput
	ToDomainSamlOptionsPtrOutputWithContext(context.Context) DomainSamlOptionsPtrOutput
}

type domainSamlOptionsPtrType DomainSamlOptionsArgs

func DomainSamlOptionsPtr(v *DomainSamlOptionsArgs) DomainSamlOptionsPtrInput {
	return (*domainSamlOptionsPtrType)(v)
}

func (*domainSamlOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSamlOptions)(nil)).Elem()
}

func (i *domainSamlOptionsPtrType) ToDomainSamlOptionsPtrOutput() DomainSamlOptionsPtrOutput {
	return i.ToDomainSamlOptionsPtrOutputWithContext(context.Background())
}

func (i *domainSamlOptionsPtrType) ToDomainSamlOptionsPtrOutputWithContext(ctx context.Context) DomainSamlOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSamlOptionsPtrOutput)
}

type DomainSamlOptionsOutput struct{ *pulumi.OutputState }

func (DomainSamlOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSamlOptions)(nil)).Elem()
}

func (o DomainSamlOptionsOutput) ToDomainSamlOptionsOutput() DomainSamlOptionsOutput {
	return o
}

func (o DomainSamlOptionsOutput) ToDomainSamlOptionsOutputWithContext(ctx context.Context) DomainSamlOptionsOutput {
	return o
}

func (o DomainSamlOptionsOutput) ToDomainSamlOptionsPtrOutput() DomainSamlOptionsPtrOutput {
	return o.ToDomainSamlOptionsPtrOutputWithContext(context.Background())
}

func (o DomainSamlOptionsOutput) ToDomainSamlOptionsPtrOutputWithContext(ctx context.Context) DomainSamlOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSamlOptions) *DomainSamlOptions {
		return &v
	}).(DomainSamlOptionsPtrOutput)
}

// True to enable SAML authentication for a domain.
func (o DomainSamlOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The SAML Identity Provider's information.
func (o DomainSamlOptionsOutput) Idp() DomainIdpPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *DomainIdp { return v.Idp }).(DomainIdpPtrOutput)
}

// The backend role that the SAML master user is mapped to.
func (o DomainSamlOptionsOutput) MasterBackendRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *string { return v.MasterBackendRole }).(pulumi.StringPtrOutput)
}

// The SAML master user name, which is stored in the domain's internal user database.
func (o DomainSamlOptionsOutput) MasterUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *string { return v.MasterUserName }).(pulumi.StringPtrOutput)
}

// Element of the SAML assertion to use for backend roles. Default is `roles` .
func (o DomainSamlOptionsOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *string { return v.RolesKey }).(pulumi.StringPtrOutput)
}

// The duration, in minutes, after which a user session becomes inactive. Acceptable values are between 1 and 1440, and the default value is 60.
func (o DomainSamlOptionsOutput) SessionTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *int { return v.SessionTimeoutMinutes }).(pulumi.IntPtrOutput)
}

// Element of the SAML assertion to use for the user name. Default is `NameID` .
func (o DomainSamlOptionsOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *string { return v.SubjectKey }).(pulumi.StringPtrOutput)
}

type DomainSamlOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainSamlOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSamlOptions)(nil)).Elem()
}

func (o DomainSamlOptionsPtrOutput) ToDomainSamlOptionsPtrOutput() DomainSamlOptionsPtrOutput {
	return o
}

func (o DomainSamlOptionsPtrOutput) ToDomainSamlOptionsPtrOutputWithContext(ctx context.Context) DomainSamlOptionsPtrOutput {
	return o
}

func (o DomainSamlOptionsPtrOutput) Elem() DomainSamlOptionsOutput {
	return o.ApplyT(func(v *DomainSamlOptions) DomainSamlOptions {
		if v != nil {
			return *v
		}
		var ret DomainSamlOptions
		return ret
	}).(DomainSamlOptionsOutput)
}

// True to enable SAML authentication for a domain.
func (o DomainSamlOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The SAML Identity Provider's information.
func (o DomainSamlOptionsPtrOutput) Idp() DomainIdpPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *DomainIdp {
		if v == nil {
			return nil
		}
		return v.Idp
	}).(DomainIdpPtrOutput)
}

// The backend role that the SAML master user is mapped to.
func (o DomainSamlOptionsPtrOutput) MasterBackendRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterBackendRole
	}).(pulumi.StringPtrOutput)
}

// The SAML master user name, which is stored in the domain's internal user database.
func (o DomainSamlOptionsPtrOutput) MasterUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterUserName
	}).(pulumi.StringPtrOutput)
}

// Element of the SAML assertion to use for backend roles. Default is `roles` .
func (o DomainSamlOptionsPtrOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *string {
		if v == nil {
			return nil
		}
		return v.RolesKey
	}).(pulumi.StringPtrOutput)
}

// The duration, in minutes, after which a user session becomes inactive. Acceptable values are between 1 and 1440, and the default value is 60.
func (o DomainSamlOptionsPtrOutput) SessionTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMinutes
	}).(pulumi.IntPtrOutput)
}

// Element of the SAML assertion to use for the user name. Default is `NameID` .
func (o DomainSamlOptionsPtrOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *string {
		if v == nil {
			return nil
		}
		return v.SubjectKey
	}).(pulumi.StringPtrOutput)
}

type DomainServiceSoftwareOptions struct {
	// The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.
	AutomatedUpdateDate *string `pulumi:"automatedUpdateDate"`
	// True if you're able to cancel your service software version update. False if you can't cancel your service software update.
	Cancellable *bool `pulumi:"cancellable"`
	// The current service software version present on the domain.
	CurrentVersion *string `pulumi:"currentVersion"`
	// A description of the service software update status.
	Description *string `pulumi:"description"`
	// The new service software version, if one is available.
	NewVersion *string `pulumi:"newVersion"`
	// True if a service software is never automatically updated. False if a service software is automatically updated after the automated update date.
	OptionalDeployment *bool `pulumi:"optionalDeployment"`
	// True if you're able to update your service software version. False if you can't update your service software version.
	UpdateAvailable *bool `pulumi:"updateAvailable"`
	// The status of your service software update.
	UpdateStatus *string `pulumi:"updateStatus"`
}

type DomainServiceSoftwareOptionsOutput struct{ *pulumi.OutputState }

func (DomainServiceSoftwareOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainServiceSoftwareOptions)(nil)).Elem()
}

func (o DomainServiceSoftwareOptionsOutput) ToDomainServiceSoftwareOptionsOutput() DomainServiceSoftwareOptionsOutput {
	return o
}

func (o DomainServiceSoftwareOptionsOutput) ToDomainServiceSoftwareOptionsOutputWithContext(ctx context.Context) DomainServiceSoftwareOptionsOutput {
	return o
}

// The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.
func (o DomainServiceSoftwareOptionsOutput) AutomatedUpdateDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *string { return v.AutomatedUpdateDate }).(pulumi.StringPtrOutput)
}

// True if you're able to cancel your service software version update. False if you can't cancel your service software update.
func (o DomainServiceSoftwareOptionsOutput) Cancellable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *bool { return v.Cancellable }).(pulumi.BoolPtrOutput)
}

// The current service software version present on the domain.
func (o DomainServiceSoftwareOptionsOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *string { return v.CurrentVersion }).(pulumi.StringPtrOutput)
}

// A description of the service software update status.
func (o DomainServiceSoftwareOptionsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The new service software version, if one is available.
func (o DomainServiceSoftwareOptionsOutput) NewVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *string { return v.NewVersion }).(pulumi.StringPtrOutput)
}

// True if a service software is never automatically updated. False if a service software is automatically updated after the automated update date.
func (o DomainServiceSoftwareOptionsOutput) OptionalDeployment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *bool { return v.OptionalDeployment }).(pulumi.BoolPtrOutput)
}

// True if you're able to update your service software version. False if you can't update your service software version.
func (o DomainServiceSoftwareOptionsOutput) UpdateAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *bool { return v.UpdateAvailable }).(pulumi.BoolPtrOutput)
}

// The status of your service software update.
func (o DomainServiceSoftwareOptionsOutput) UpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *string { return v.UpdateStatus }).(pulumi.StringPtrOutput)
}

type DomainServiceSoftwareOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainServiceSoftwareOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainServiceSoftwareOptions)(nil)).Elem()
}

func (o DomainServiceSoftwareOptionsPtrOutput) ToDomainServiceSoftwareOptionsPtrOutput() DomainServiceSoftwareOptionsPtrOutput {
	return o
}

func (o DomainServiceSoftwareOptionsPtrOutput) ToDomainServiceSoftwareOptionsPtrOutputWithContext(ctx context.Context) DomainServiceSoftwareOptionsPtrOutput {
	return o
}

func (o DomainServiceSoftwareOptionsPtrOutput) Elem() DomainServiceSoftwareOptionsOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) DomainServiceSoftwareOptions {
		if v != nil {
			return *v
		}
		var ret DomainServiceSoftwareOptions
		return ret
	}).(DomainServiceSoftwareOptionsOutput)
}

// The timestamp, in Epoch time, until which you can manually request a service software update. After this date, we automatically update your service software.
func (o DomainServiceSoftwareOptionsPtrOutput) AutomatedUpdateDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.AutomatedUpdateDate
	}).(pulumi.StringPtrOutput)
}

// True if you're able to cancel your service software version update. False if you can't cancel your service software update.
func (o DomainServiceSoftwareOptionsPtrOutput) Cancellable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Cancellable
	}).(pulumi.BoolPtrOutput)
}

// The current service software version present on the domain.
func (o DomainServiceSoftwareOptionsPtrOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.CurrentVersion
	}).(pulumi.StringPtrOutput)
}

// A description of the service software update status.
func (o DomainServiceSoftwareOptionsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// The new service software version, if one is available.
func (o DomainServiceSoftwareOptionsPtrOutput) NewVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.NewVersion
	}).(pulumi.StringPtrOutput)
}

// True if a service software is never automatically updated. False if a service software is automatically updated after the automated update date.
func (o DomainServiceSoftwareOptionsPtrOutput) OptionalDeployment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *bool {
		if v == nil {
			return nil
		}
		return v.OptionalDeployment
	}).(pulumi.BoolPtrOutput)
}

// True if you're able to update your service software version. False if you can't update your service software version.
func (o DomainServiceSoftwareOptionsPtrOutput) UpdateAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UpdateAvailable
	}).(pulumi.BoolPtrOutput)
}

// The status of your service software update.
func (o DomainServiceSoftwareOptionsPtrOutput) UpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.UpdateStatus
	}).(pulumi.StringPtrOutput)
}

type DomainSnapshotOptions struct {
	// The hour in UTC during which the service takes an automated daily snapshot of the indexes in the OpenSearch Service domain. For example, if you specify 0, OpenSearch Service takes an automated snapshot everyday between midnight and 1 am. You can specify a value between 0 and 23.
	AutomatedSnapshotStartHour *int `pulumi:"automatedSnapshotStartHour"`
}

// DomainSnapshotOptionsInput is an input type that accepts DomainSnapshotOptionsArgs and DomainSnapshotOptionsOutput values.
// You can construct a concrete instance of `DomainSnapshotOptionsInput` via:
//
//	DomainSnapshotOptionsArgs{...}
type DomainSnapshotOptionsInput interface {
	pulumi.Input

	ToDomainSnapshotOptionsOutput() DomainSnapshotOptionsOutput
	ToDomainSnapshotOptionsOutputWithContext(context.Context) DomainSnapshotOptionsOutput
}

type DomainSnapshotOptionsArgs struct {
	// The hour in UTC during which the service takes an automated daily snapshot of the indexes in the OpenSearch Service domain. For example, if you specify 0, OpenSearch Service takes an automated snapshot everyday between midnight and 1 am. You can specify a value between 0 and 23.
	AutomatedSnapshotStartHour pulumi.IntPtrInput `pulumi:"automatedSnapshotStartHour"`
}

func (DomainSnapshotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSnapshotOptions)(nil)).Elem()
}

func (i DomainSnapshotOptionsArgs) ToDomainSnapshotOptionsOutput() DomainSnapshotOptionsOutput {
	return i.ToDomainSnapshotOptionsOutputWithContext(context.Background())
}

func (i DomainSnapshotOptionsArgs) ToDomainSnapshotOptionsOutputWithContext(ctx context.Context) DomainSnapshotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSnapshotOptionsOutput)
}

func (i DomainSnapshotOptionsArgs) ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput {
	return i.ToDomainSnapshotOptionsPtrOutputWithContext(context.Background())
}

func (i DomainSnapshotOptionsArgs) ToDomainSnapshotOptionsPtrOutputWithContext(ctx context.Context) DomainSnapshotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSnapshotOptionsOutput).ToDomainSnapshotOptionsPtrOutputWithContext(ctx)
}

// DomainSnapshotOptionsPtrInput is an input type that accepts DomainSnapshotOptionsArgs, DomainSnapshotOptionsPtr and DomainSnapshotOptionsPtrOutput values.
// You can construct a concrete instance of `DomainSnapshotOptionsPtrInput` via:
//
//	        DomainSnapshotOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainSnapshotOptionsPtrInput interface {
	pulumi.Input

	ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput
	ToDomainSnapshotOptionsPtrOutputWithContext(context.Context) DomainSnapshotOptionsPtrOutput
}

type domainSnapshotOptionsPtrType DomainSnapshotOptionsArgs

func DomainSnapshotOptionsPtr(v *DomainSnapshotOptionsArgs) DomainSnapshotOptionsPtrInput {
	return (*domainSnapshotOptionsPtrType)(v)
}

func (*domainSnapshotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSnapshotOptions)(nil)).Elem()
}

func (i *domainSnapshotOptionsPtrType) ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput {
	return i.ToDomainSnapshotOptionsPtrOutputWithContext(context.Background())
}

func (i *domainSnapshotOptionsPtrType) ToDomainSnapshotOptionsPtrOutputWithContext(ctx context.Context) DomainSnapshotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSnapshotOptionsPtrOutput)
}

type DomainSnapshotOptionsOutput struct{ *pulumi.OutputState }

func (DomainSnapshotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSnapshotOptions)(nil)).Elem()
}

func (o DomainSnapshotOptionsOutput) ToDomainSnapshotOptionsOutput() DomainSnapshotOptionsOutput {
	return o
}

func (o DomainSnapshotOptionsOutput) ToDomainSnapshotOptionsOutputWithContext(ctx context.Context) DomainSnapshotOptionsOutput {
	return o
}

func (o DomainSnapshotOptionsOutput) ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput {
	return o.ToDomainSnapshotOptionsPtrOutputWithContext(context.Background())
}

func (o DomainSnapshotOptionsOutput) ToDomainSnapshotOptionsPtrOutputWithContext(ctx context.Context) DomainSnapshotOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSnapshotOptions) *DomainSnapshotOptions {
		return &v
	}).(DomainSnapshotOptionsPtrOutput)
}

// The hour in UTC during which the service takes an automated daily snapshot of the indexes in the OpenSearch Service domain. For example, if you specify 0, OpenSearch Service takes an automated snapshot everyday between midnight and 1 am. You can specify a value between 0 and 23.
func (o DomainSnapshotOptionsOutput) AutomatedSnapshotStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainSnapshotOptions) *int { return v.AutomatedSnapshotStartHour }).(pulumi.IntPtrOutput)
}

type DomainSnapshotOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainSnapshotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSnapshotOptions)(nil)).Elem()
}

func (o DomainSnapshotOptionsPtrOutput) ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput {
	return o
}

func (o DomainSnapshotOptionsPtrOutput) ToDomainSnapshotOptionsPtrOutputWithContext(ctx context.Context) DomainSnapshotOptionsPtrOutput {
	return o
}

func (o DomainSnapshotOptionsPtrOutput) Elem() DomainSnapshotOptionsOutput {
	return o.ApplyT(func(v *DomainSnapshotOptions) DomainSnapshotOptions {
		if v != nil {
			return *v
		}
		var ret DomainSnapshotOptions
		return ret
	}).(DomainSnapshotOptionsOutput)
}

// The hour in UTC during which the service takes an automated daily snapshot of the indexes in the OpenSearch Service domain. For example, if you specify 0, OpenSearch Service takes an automated snapshot everyday between midnight and 1 am. You can specify a value between 0 and 23.
func (o DomainSnapshotOptionsPtrOutput) AutomatedSnapshotStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainSnapshotOptions) *int {
		if v == nil {
			return nil
		}
		return v.AutomatedSnapshotStartHour
	}).(pulumi.IntPtrOutput)
}

type DomainSoftwareUpdateOptions struct {
	// Specifies whether automatic service software updates are enabled for the domain.
	AutoSoftwareUpdateEnabled *bool `pulumi:"autoSoftwareUpdateEnabled"`
}

// DomainSoftwareUpdateOptionsInput is an input type that accepts DomainSoftwareUpdateOptionsArgs and DomainSoftwareUpdateOptionsOutput values.
// You can construct a concrete instance of `DomainSoftwareUpdateOptionsInput` via:
//
//	DomainSoftwareUpdateOptionsArgs{...}
type DomainSoftwareUpdateOptionsInput interface {
	pulumi.Input

	ToDomainSoftwareUpdateOptionsOutput() DomainSoftwareUpdateOptionsOutput
	ToDomainSoftwareUpdateOptionsOutputWithContext(context.Context) DomainSoftwareUpdateOptionsOutput
}

type DomainSoftwareUpdateOptionsArgs struct {
	// Specifies whether automatic service software updates are enabled for the domain.
	AutoSoftwareUpdateEnabled pulumi.BoolPtrInput `pulumi:"autoSoftwareUpdateEnabled"`
}

func (DomainSoftwareUpdateOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSoftwareUpdateOptions)(nil)).Elem()
}

func (i DomainSoftwareUpdateOptionsArgs) ToDomainSoftwareUpdateOptionsOutput() DomainSoftwareUpdateOptionsOutput {
	return i.ToDomainSoftwareUpdateOptionsOutputWithContext(context.Background())
}

func (i DomainSoftwareUpdateOptionsArgs) ToDomainSoftwareUpdateOptionsOutputWithContext(ctx context.Context) DomainSoftwareUpdateOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSoftwareUpdateOptionsOutput)
}

func (i DomainSoftwareUpdateOptionsArgs) ToDomainSoftwareUpdateOptionsPtrOutput() DomainSoftwareUpdateOptionsPtrOutput {
	return i.ToDomainSoftwareUpdateOptionsPtrOutputWithContext(context.Background())
}

func (i DomainSoftwareUpdateOptionsArgs) ToDomainSoftwareUpdateOptionsPtrOutputWithContext(ctx context.Context) DomainSoftwareUpdateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSoftwareUpdateOptionsOutput).ToDomainSoftwareUpdateOptionsPtrOutputWithContext(ctx)
}

// DomainSoftwareUpdateOptionsPtrInput is an input type that accepts DomainSoftwareUpdateOptionsArgs, DomainSoftwareUpdateOptionsPtr and DomainSoftwareUpdateOptionsPtrOutput values.
// You can construct a concrete instance of `DomainSoftwareUpdateOptionsPtrInput` via:
//
//	        DomainSoftwareUpdateOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainSoftwareUpdateOptionsPtrInput interface {
	pulumi.Input

	ToDomainSoftwareUpdateOptionsPtrOutput() DomainSoftwareUpdateOptionsPtrOutput
	ToDomainSoftwareUpdateOptionsPtrOutputWithContext(context.Context) DomainSoftwareUpdateOptionsPtrOutput
}

type domainSoftwareUpdateOptionsPtrType DomainSoftwareUpdateOptionsArgs

func DomainSoftwareUpdateOptionsPtr(v *DomainSoftwareUpdateOptionsArgs) DomainSoftwareUpdateOptionsPtrInput {
	return (*domainSoftwareUpdateOptionsPtrType)(v)
}

func (*domainSoftwareUpdateOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSoftwareUpdateOptions)(nil)).Elem()
}

func (i *domainSoftwareUpdateOptionsPtrType) ToDomainSoftwareUpdateOptionsPtrOutput() DomainSoftwareUpdateOptionsPtrOutput {
	return i.ToDomainSoftwareUpdateOptionsPtrOutputWithContext(context.Background())
}

func (i *domainSoftwareUpdateOptionsPtrType) ToDomainSoftwareUpdateOptionsPtrOutputWithContext(ctx context.Context) DomainSoftwareUpdateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSoftwareUpdateOptionsPtrOutput)
}

type DomainSoftwareUpdateOptionsOutput struct{ *pulumi.OutputState }

func (DomainSoftwareUpdateOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSoftwareUpdateOptions)(nil)).Elem()
}

func (o DomainSoftwareUpdateOptionsOutput) ToDomainSoftwareUpdateOptionsOutput() DomainSoftwareUpdateOptionsOutput {
	return o
}

func (o DomainSoftwareUpdateOptionsOutput) ToDomainSoftwareUpdateOptionsOutputWithContext(ctx context.Context) DomainSoftwareUpdateOptionsOutput {
	return o
}

func (o DomainSoftwareUpdateOptionsOutput) ToDomainSoftwareUpdateOptionsPtrOutput() DomainSoftwareUpdateOptionsPtrOutput {
	return o.ToDomainSoftwareUpdateOptionsPtrOutputWithContext(context.Background())
}

func (o DomainSoftwareUpdateOptionsOutput) ToDomainSoftwareUpdateOptionsPtrOutputWithContext(ctx context.Context) DomainSoftwareUpdateOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSoftwareUpdateOptions) *DomainSoftwareUpdateOptions {
		return &v
	}).(DomainSoftwareUpdateOptionsPtrOutput)
}

// Specifies whether automatic service software updates are enabled for the domain.
func (o DomainSoftwareUpdateOptionsOutput) AutoSoftwareUpdateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainSoftwareUpdateOptions) *bool { return v.AutoSoftwareUpdateEnabled }).(pulumi.BoolPtrOutput)
}

type DomainSoftwareUpdateOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainSoftwareUpdateOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSoftwareUpdateOptions)(nil)).Elem()
}

func (o DomainSoftwareUpdateOptionsPtrOutput) ToDomainSoftwareUpdateOptionsPtrOutput() DomainSoftwareUpdateOptionsPtrOutput {
	return o
}

func (o DomainSoftwareUpdateOptionsPtrOutput) ToDomainSoftwareUpdateOptionsPtrOutputWithContext(ctx context.Context) DomainSoftwareUpdateOptionsPtrOutput {
	return o
}

func (o DomainSoftwareUpdateOptionsPtrOutput) Elem() DomainSoftwareUpdateOptionsOutput {
	return o.ApplyT(func(v *DomainSoftwareUpdateOptions) DomainSoftwareUpdateOptions {
		if v != nil {
			return *v
		}
		var ret DomainSoftwareUpdateOptions
		return ret
	}).(DomainSoftwareUpdateOptionsOutput)
}

// Specifies whether automatic service software updates are enabled for the domain.
func (o DomainSoftwareUpdateOptionsPtrOutput) AutoSoftwareUpdateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainSoftwareUpdateOptions) *bool {
		if v == nil {
			return nil
		}
		return v.AutoSoftwareUpdateEnabled
	}).(pulumi.BoolPtrOutput)
}

type DomainTag struct {
	// The value of the tag.
	Key string `pulumi:"key"`
	// The key of the tag.
	Value string `pulumi:"value"`
}

type DomainVpcOptions struct {
	// The list of security group IDs that are associated with the VPC endpoints for the domain. If you don't provide a security group ID, OpenSearch Service uses the default security group for the VPC. To learn more, see [Security groups for your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html) in the *Amazon VPC User Guide* .
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Provide one subnet ID for each Availability Zone that your domain uses. For example, you must specify three subnet IDs for a three-AZ domain. To learn more, see [VPCs and subnets](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html) in the *Amazon VPC User Guide* .
	//
	// If you specify more than one subnet, you must also configure `ZoneAwarenessEnabled` and `ZoneAwarenessConfig` within [ClusterConfig](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-clusterconfig.html) , otherwise you'll see the error "You must specify exactly one subnet" during template creation.
	SubnetIds []string `pulumi:"subnetIds"`
}

// DomainVpcOptionsInput is an input type that accepts DomainVpcOptionsArgs and DomainVpcOptionsOutput values.
// You can construct a concrete instance of `DomainVpcOptionsInput` via:
//
//	DomainVpcOptionsArgs{...}
type DomainVpcOptionsInput interface {
	pulumi.Input

	ToDomainVpcOptionsOutput() DomainVpcOptionsOutput
	ToDomainVpcOptionsOutputWithContext(context.Context) DomainVpcOptionsOutput
}

type DomainVpcOptionsArgs struct {
	// The list of security group IDs that are associated with the VPC endpoints for the domain. If you don't provide a security group ID, OpenSearch Service uses the default security group for the VPC. To learn more, see [Security groups for your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html) in the *Amazon VPC User Guide* .
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// Provide one subnet ID for each Availability Zone that your domain uses. For example, you must specify three subnet IDs for a three-AZ domain. To learn more, see [VPCs and subnets](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html) in the *Amazon VPC User Guide* .
	//
	// If you specify more than one subnet, you must also configure `ZoneAwarenessEnabled` and `ZoneAwarenessConfig` within [ClusterConfig](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-clusterconfig.html) , otherwise you'll see the error "You must specify exactly one subnet" during template creation.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (DomainVpcOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainVpcOptions)(nil)).Elem()
}

func (i DomainVpcOptionsArgs) ToDomainVpcOptionsOutput() DomainVpcOptionsOutput {
	return i.ToDomainVpcOptionsOutputWithContext(context.Background())
}

func (i DomainVpcOptionsArgs) ToDomainVpcOptionsOutputWithContext(ctx context.Context) DomainVpcOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainVpcOptionsOutput)
}

func (i DomainVpcOptionsArgs) ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput {
	return i.ToDomainVpcOptionsPtrOutputWithContext(context.Background())
}

func (i DomainVpcOptionsArgs) ToDomainVpcOptionsPtrOutputWithContext(ctx context.Context) DomainVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainVpcOptionsOutput).ToDomainVpcOptionsPtrOutputWithContext(ctx)
}

// DomainVpcOptionsPtrInput is an input type that accepts DomainVpcOptionsArgs, DomainVpcOptionsPtr and DomainVpcOptionsPtrOutput values.
// You can construct a concrete instance of `DomainVpcOptionsPtrInput` via:
//
//	        DomainVpcOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainVpcOptionsPtrInput interface {
	pulumi.Input

	ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput
	ToDomainVpcOptionsPtrOutputWithContext(context.Context) DomainVpcOptionsPtrOutput
}

type domainVpcOptionsPtrType DomainVpcOptionsArgs

func DomainVpcOptionsPtr(v *DomainVpcOptionsArgs) DomainVpcOptionsPtrInput {
	return (*domainVpcOptionsPtrType)(v)
}

func (*domainVpcOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainVpcOptions)(nil)).Elem()
}

func (i *domainVpcOptionsPtrType) ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput {
	return i.ToDomainVpcOptionsPtrOutputWithContext(context.Background())
}

func (i *domainVpcOptionsPtrType) ToDomainVpcOptionsPtrOutputWithContext(ctx context.Context) DomainVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainVpcOptionsPtrOutput)
}

type DomainVpcOptionsOutput struct{ *pulumi.OutputState }

func (DomainVpcOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainVpcOptions)(nil)).Elem()
}

func (o DomainVpcOptionsOutput) ToDomainVpcOptionsOutput() DomainVpcOptionsOutput {
	return o
}

func (o DomainVpcOptionsOutput) ToDomainVpcOptionsOutputWithContext(ctx context.Context) DomainVpcOptionsOutput {
	return o
}

func (o DomainVpcOptionsOutput) ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput {
	return o.ToDomainVpcOptionsPtrOutputWithContext(context.Background())
}

func (o DomainVpcOptionsOutput) ToDomainVpcOptionsPtrOutputWithContext(ctx context.Context) DomainVpcOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainVpcOptions) *DomainVpcOptions {
		return &v
	}).(DomainVpcOptionsPtrOutput)
}

// The list of security group IDs that are associated with the VPC endpoints for the domain. If you don't provide a security group ID, OpenSearch Service uses the default security group for the VPC. To learn more, see [Security groups for your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html) in the *Amazon VPC User Guide* .
func (o DomainVpcOptionsOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainVpcOptions) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Provide one subnet ID for each Availability Zone that your domain uses. For example, you must specify three subnet IDs for a three-AZ domain. To learn more, see [VPCs and subnets](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html) in the *Amazon VPC User Guide* .
//
// If you specify more than one subnet, you must also configure `ZoneAwarenessEnabled` and `ZoneAwarenessConfig` within [ClusterConfig](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-clusterconfig.html) , otherwise you'll see the error "You must specify exactly one subnet" during template creation.
func (o DomainVpcOptionsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainVpcOptions) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type DomainVpcOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainVpcOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainVpcOptions)(nil)).Elem()
}

func (o DomainVpcOptionsPtrOutput) ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput {
	return o
}

func (o DomainVpcOptionsPtrOutput) ToDomainVpcOptionsPtrOutputWithContext(ctx context.Context) DomainVpcOptionsPtrOutput {
	return o
}

func (o DomainVpcOptionsPtrOutput) Elem() DomainVpcOptionsOutput {
	return o.ApplyT(func(v *DomainVpcOptions) DomainVpcOptions {
		if v != nil {
			return *v
		}
		var ret DomainVpcOptions
		return ret
	}).(DomainVpcOptionsOutput)
}

// The list of security group IDs that are associated with the VPC endpoints for the domain. If you don't provide a security group ID, OpenSearch Service uses the default security group for the VPC. To learn more, see [Security groups for your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html) in the *Amazon VPC User Guide* .
func (o DomainVpcOptionsPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// Provide one subnet ID for each Availability Zone that your domain uses. For example, you must specify three subnet IDs for a three-AZ domain. To learn more, see [VPCs and subnets](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html) in the *Amazon VPC User Guide* .
//
// If you specify more than one subnet, you must also configure `ZoneAwarenessEnabled` and `ZoneAwarenessConfig` within [ClusterConfig](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-opensearchservice-domain-clusterconfig.html) , otherwise you'll see the error "You must specify exactly one subnet" during template creation.
func (o DomainVpcOptionsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

type DomainWindowStartTime struct {
	// The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, 17 refers to 5:00 P.M. UTC. The minimum value is 0 and the maximum value is 23.
	Hours int `pulumi:"hours"`
	// The start minute of the window, in UTC. The minimum value is 0 and the maximum value is 59.
	Minutes int `pulumi:"minutes"`
}

// DomainWindowStartTimeInput is an input type that accepts DomainWindowStartTimeArgs and DomainWindowStartTimeOutput values.
// You can construct a concrete instance of `DomainWindowStartTimeInput` via:
//
//	DomainWindowStartTimeArgs{...}
type DomainWindowStartTimeInput interface {
	pulumi.Input

	ToDomainWindowStartTimeOutput() DomainWindowStartTimeOutput
	ToDomainWindowStartTimeOutputWithContext(context.Context) DomainWindowStartTimeOutput
}

type DomainWindowStartTimeArgs struct {
	// The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, 17 refers to 5:00 P.M. UTC. The minimum value is 0 and the maximum value is 23.
	Hours pulumi.IntInput `pulumi:"hours"`
	// The start minute of the window, in UTC. The minimum value is 0 and the maximum value is 59.
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (DomainWindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainWindowStartTime)(nil)).Elem()
}

func (i DomainWindowStartTimeArgs) ToDomainWindowStartTimeOutput() DomainWindowStartTimeOutput {
	return i.ToDomainWindowStartTimeOutputWithContext(context.Background())
}

func (i DomainWindowStartTimeArgs) ToDomainWindowStartTimeOutputWithContext(ctx context.Context) DomainWindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainWindowStartTimeOutput)
}

func (i DomainWindowStartTimeArgs) ToDomainWindowStartTimePtrOutput() DomainWindowStartTimePtrOutput {
	return i.ToDomainWindowStartTimePtrOutputWithContext(context.Background())
}

func (i DomainWindowStartTimeArgs) ToDomainWindowStartTimePtrOutputWithContext(ctx context.Context) DomainWindowStartTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainWindowStartTimeOutput).ToDomainWindowStartTimePtrOutputWithContext(ctx)
}

// DomainWindowStartTimePtrInput is an input type that accepts DomainWindowStartTimeArgs, DomainWindowStartTimePtr and DomainWindowStartTimePtrOutput values.
// You can construct a concrete instance of `DomainWindowStartTimePtrInput` via:
//
//	        DomainWindowStartTimeArgs{...}
//
//	or:
//
//	        nil
type DomainWindowStartTimePtrInput interface {
	pulumi.Input

	ToDomainWindowStartTimePtrOutput() DomainWindowStartTimePtrOutput
	ToDomainWindowStartTimePtrOutputWithContext(context.Context) DomainWindowStartTimePtrOutput
}

type domainWindowStartTimePtrType DomainWindowStartTimeArgs

func DomainWindowStartTimePtr(v *DomainWindowStartTimeArgs) DomainWindowStartTimePtrInput {
	return (*domainWindowStartTimePtrType)(v)
}

func (*domainWindowStartTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainWindowStartTime)(nil)).Elem()
}

func (i *domainWindowStartTimePtrType) ToDomainWindowStartTimePtrOutput() DomainWindowStartTimePtrOutput {
	return i.ToDomainWindowStartTimePtrOutputWithContext(context.Background())
}

func (i *domainWindowStartTimePtrType) ToDomainWindowStartTimePtrOutputWithContext(ctx context.Context) DomainWindowStartTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainWindowStartTimePtrOutput)
}

type DomainWindowStartTimeOutput struct{ *pulumi.OutputState }

func (DomainWindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainWindowStartTime)(nil)).Elem()
}

func (o DomainWindowStartTimeOutput) ToDomainWindowStartTimeOutput() DomainWindowStartTimeOutput {
	return o
}

func (o DomainWindowStartTimeOutput) ToDomainWindowStartTimeOutputWithContext(ctx context.Context) DomainWindowStartTimeOutput {
	return o
}

func (o DomainWindowStartTimeOutput) ToDomainWindowStartTimePtrOutput() DomainWindowStartTimePtrOutput {
	return o.ToDomainWindowStartTimePtrOutputWithContext(context.Background())
}

func (o DomainWindowStartTimeOutput) ToDomainWindowStartTimePtrOutputWithContext(ctx context.Context) DomainWindowStartTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainWindowStartTime) *DomainWindowStartTime {
		return &v
	}).(DomainWindowStartTimePtrOutput)
}

// The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, 17 refers to 5:00 P.M. UTC. The minimum value is 0 and the maximum value is 23.
func (o DomainWindowStartTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v DomainWindowStartTime) int { return v.Hours }).(pulumi.IntOutput)
}

// The start minute of the window, in UTC. The minimum value is 0 and the maximum value is 59.
func (o DomainWindowStartTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v DomainWindowStartTime) int { return v.Minutes }).(pulumi.IntOutput)
}

type DomainWindowStartTimePtrOutput struct{ *pulumi.OutputState }

func (DomainWindowStartTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainWindowStartTime)(nil)).Elem()
}

func (o DomainWindowStartTimePtrOutput) ToDomainWindowStartTimePtrOutput() DomainWindowStartTimePtrOutput {
	return o
}

func (o DomainWindowStartTimePtrOutput) ToDomainWindowStartTimePtrOutputWithContext(ctx context.Context) DomainWindowStartTimePtrOutput {
	return o
}

func (o DomainWindowStartTimePtrOutput) Elem() DomainWindowStartTimeOutput {
	return o.ApplyT(func(v *DomainWindowStartTime) DomainWindowStartTime {
		if v != nil {
			return *v
		}
		var ret DomainWindowStartTime
		return ret
	}).(DomainWindowStartTimeOutput)
}

// The start hour of the window in Coordinated Universal Time (UTC), using 24-hour time. For example, 17 refers to 5:00 P.M. UTC. The minimum value is 0 and the maximum value is 23.
func (o DomainWindowStartTimePtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainWindowStartTime) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

// The start minute of the window, in UTC. The minimum value is 0 and the maximum value is 59.
func (o DomainWindowStartTimePtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainWindowStartTime) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

type DomainZoneAwarenessConfig struct {
	// If you enabled multiple Availability Zones (AZs), the number of AZs that you want the domain to use.
	//
	// Valid values are `2` and `3` . Default is 2.
	AvailabilityZoneCount *int `pulumi:"availabilityZoneCount"`
}

// DomainZoneAwarenessConfigInput is an input type that accepts DomainZoneAwarenessConfigArgs and DomainZoneAwarenessConfigOutput values.
// You can construct a concrete instance of `DomainZoneAwarenessConfigInput` via:
//
//	DomainZoneAwarenessConfigArgs{...}
type DomainZoneAwarenessConfigInput interface {
	pulumi.Input

	ToDomainZoneAwarenessConfigOutput() DomainZoneAwarenessConfigOutput
	ToDomainZoneAwarenessConfigOutputWithContext(context.Context) DomainZoneAwarenessConfigOutput
}

type DomainZoneAwarenessConfigArgs struct {
	// If you enabled multiple Availability Zones (AZs), the number of AZs that you want the domain to use.
	//
	// Valid values are `2` and `3` . Default is 2.
	AvailabilityZoneCount pulumi.IntPtrInput `pulumi:"availabilityZoneCount"`
}

func (DomainZoneAwarenessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainZoneAwarenessConfig)(nil)).Elem()
}

func (i DomainZoneAwarenessConfigArgs) ToDomainZoneAwarenessConfigOutput() DomainZoneAwarenessConfigOutput {
	return i.ToDomainZoneAwarenessConfigOutputWithContext(context.Background())
}

func (i DomainZoneAwarenessConfigArgs) ToDomainZoneAwarenessConfigOutputWithContext(ctx context.Context) DomainZoneAwarenessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainZoneAwarenessConfigOutput)
}

func (i DomainZoneAwarenessConfigArgs) ToDomainZoneAwarenessConfigPtrOutput() DomainZoneAwarenessConfigPtrOutput {
	return i.ToDomainZoneAwarenessConfigPtrOutputWithContext(context.Background())
}

func (i DomainZoneAwarenessConfigArgs) ToDomainZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) DomainZoneAwarenessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainZoneAwarenessConfigOutput).ToDomainZoneAwarenessConfigPtrOutputWithContext(ctx)
}

// DomainZoneAwarenessConfigPtrInput is an input type that accepts DomainZoneAwarenessConfigArgs, DomainZoneAwarenessConfigPtr and DomainZoneAwarenessConfigPtrOutput values.
// You can construct a concrete instance of `DomainZoneAwarenessConfigPtrInput` via:
//
//	        DomainZoneAwarenessConfigArgs{...}
//
//	or:
//
//	        nil
type DomainZoneAwarenessConfigPtrInput interface {
	pulumi.Input

	ToDomainZoneAwarenessConfigPtrOutput() DomainZoneAwarenessConfigPtrOutput
	ToDomainZoneAwarenessConfigPtrOutputWithContext(context.Context) DomainZoneAwarenessConfigPtrOutput
}

type domainZoneAwarenessConfigPtrType DomainZoneAwarenessConfigArgs

func DomainZoneAwarenessConfigPtr(v *DomainZoneAwarenessConfigArgs) DomainZoneAwarenessConfigPtrInput {
	return (*domainZoneAwarenessConfigPtrType)(v)
}

func (*domainZoneAwarenessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainZoneAwarenessConfig)(nil)).Elem()
}

func (i *domainZoneAwarenessConfigPtrType) ToDomainZoneAwarenessConfigPtrOutput() DomainZoneAwarenessConfigPtrOutput {
	return i.ToDomainZoneAwarenessConfigPtrOutputWithContext(context.Background())
}

func (i *domainZoneAwarenessConfigPtrType) ToDomainZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) DomainZoneAwarenessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainZoneAwarenessConfigPtrOutput)
}

type DomainZoneAwarenessConfigOutput struct{ *pulumi.OutputState }

func (DomainZoneAwarenessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainZoneAwarenessConfig)(nil)).Elem()
}

func (o DomainZoneAwarenessConfigOutput) ToDomainZoneAwarenessConfigOutput() DomainZoneAwarenessConfigOutput {
	return o
}

func (o DomainZoneAwarenessConfigOutput) ToDomainZoneAwarenessConfigOutputWithContext(ctx context.Context) DomainZoneAwarenessConfigOutput {
	return o
}

func (o DomainZoneAwarenessConfigOutput) ToDomainZoneAwarenessConfigPtrOutput() DomainZoneAwarenessConfigPtrOutput {
	return o.ToDomainZoneAwarenessConfigPtrOutputWithContext(context.Background())
}

func (o DomainZoneAwarenessConfigOutput) ToDomainZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) DomainZoneAwarenessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainZoneAwarenessConfig) *DomainZoneAwarenessConfig {
		return &v
	}).(DomainZoneAwarenessConfigPtrOutput)
}

// If you enabled multiple Availability Zones (AZs), the number of AZs that you want the domain to use.
//
// Valid values are `2` and `3` . Default is 2.
func (o DomainZoneAwarenessConfigOutput) AvailabilityZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainZoneAwarenessConfig) *int { return v.AvailabilityZoneCount }).(pulumi.IntPtrOutput)
}

type DomainZoneAwarenessConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainZoneAwarenessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainZoneAwarenessConfig)(nil)).Elem()
}

func (o DomainZoneAwarenessConfigPtrOutput) ToDomainZoneAwarenessConfigPtrOutput() DomainZoneAwarenessConfigPtrOutput {
	return o
}

func (o DomainZoneAwarenessConfigPtrOutput) ToDomainZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) DomainZoneAwarenessConfigPtrOutput {
	return o
}

func (o DomainZoneAwarenessConfigPtrOutput) Elem() DomainZoneAwarenessConfigOutput {
	return o.ApplyT(func(v *DomainZoneAwarenessConfig) DomainZoneAwarenessConfig {
		if v != nil {
			return *v
		}
		var ret DomainZoneAwarenessConfig
		return ret
	}).(DomainZoneAwarenessConfigOutput)
}

// If you enabled multiple Availability Zones (AZs), the number of AZs that you want the domain to use.
//
// Valid values are `2` and `3` . Default is 2.
func (o DomainZoneAwarenessConfigPtrOutput) AvailabilityZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainZoneAwarenessConfig) *int {
		if v == nil {
			return nil
		}
		return v.AvailabilityZoneCount
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAdvancedSecurityOptionsInputInput)(nil)).Elem(), DomainAdvancedSecurityOptionsInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAdvancedSecurityOptionsInputPtrInput)(nil)).Elem(), DomainAdvancedSecurityOptionsInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainClusterConfigInput)(nil)).Elem(), DomainClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainClusterConfigPtrInput)(nil)).Elem(), DomainClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCognitoOptionsInput)(nil)).Elem(), DomainCognitoOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCognitoOptionsPtrInput)(nil)).Elem(), DomainCognitoOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainColdStorageOptionsInput)(nil)).Elem(), DomainColdStorageOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainColdStorageOptionsPtrInput)(nil)).Elem(), DomainColdStorageOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEbsOptionsInput)(nil)).Elem(), DomainEbsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEbsOptionsPtrInput)(nil)).Elem(), DomainEbsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEncryptionAtRestOptionsInput)(nil)).Elem(), DomainEncryptionAtRestOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEncryptionAtRestOptionsPtrInput)(nil)).Elem(), DomainEncryptionAtRestOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEndpointOptionsInput)(nil)).Elem(), DomainEndpointOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEndpointOptionsPtrInput)(nil)).Elem(), DomainEndpointOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIdpInput)(nil)).Elem(), DomainIdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIdpPtrInput)(nil)).Elem(), DomainIdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainJwtOptionsInput)(nil)).Elem(), DomainJwtOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainJwtOptionsPtrInput)(nil)).Elem(), DomainJwtOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainLogPublishingOptionInput)(nil)).Elem(), DomainLogPublishingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainLogPublishingOptionMapInput)(nil)).Elem(), DomainLogPublishingOptionMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMasterUserOptionsInput)(nil)).Elem(), DomainMasterUserOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMasterUserOptionsPtrInput)(nil)).Elem(), DomainMasterUserOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNodeToNodeEncryptionOptionsInput)(nil)).Elem(), DomainNodeToNodeEncryptionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNodeToNodeEncryptionOptionsPtrInput)(nil)).Elem(), DomainNodeToNodeEncryptionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOffPeakWindowInput)(nil)).Elem(), DomainOffPeakWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOffPeakWindowPtrInput)(nil)).Elem(), DomainOffPeakWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOffPeakWindowOptionsInput)(nil)).Elem(), DomainOffPeakWindowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOffPeakWindowOptionsPtrInput)(nil)).Elem(), DomainOffPeakWindowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSamlOptionsInput)(nil)).Elem(), DomainSamlOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSamlOptionsPtrInput)(nil)).Elem(), DomainSamlOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSnapshotOptionsInput)(nil)).Elem(), DomainSnapshotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSnapshotOptionsPtrInput)(nil)).Elem(), DomainSnapshotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSoftwareUpdateOptionsInput)(nil)).Elem(), DomainSoftwareUpdateOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSoftwareUpdateOptionsPtrInput)(nil)).Elem(), DomainSoftwareUpdateOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainVpcOptionsInput)(nil)).Elem(), DomainVpcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainVpcOptionsPtrInput)(nil)).Elem(), DomainVpcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainWindowStartTimeInput)(nil)).Elem(), DomainWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainWindowStartTimePtrInput)(nil)).Elem(), DomainWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainZoneAwarenessConfigInput)(nil)).Elem(), DomainZoneAwarenessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainZoneAwarenessConfigPtrInput)(nil)).Elem(), DomainZoneAwarenessConfigArgs{})
	pulumi.RegisterOutputType(DomainAdvancedSecurityOptionsInputOutput{})
	pulumi.RegisterOutputType(DomainAdvancedSecurityOptionsInputPtrOutput{})
	pulumi.RegisterOutputType(DomainClusterConfigOutput{})
	pulumi.RegisterOutputType(DomainClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainCognitoOptionsOutput{})
	pulumi.RegisterOutputType(DomainCognitoOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainColdStorageOptionsOutput{})
	pulumi.RegisterOutputType(DomainColdStorageOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainEbsOptionsOutput{})
	pulumi.RegisterOutputType(DomainEbsOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainEncryptionAtRestOptionsOutput{})
	pulumi.RegisterOutputType(DomainEncryptionAtRestOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainEndpointOptionsOutput{})
	pulumi.RegisterOutputType(DomainEndpointOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainIdpOutput{})
	pulumi.RegisterOutputType(DomainIdpPtrOutput{})
	pulumi.RegisterOutputType(DomainJwtOptionsOutput{})
	pulumi.RegisterOutputType(DomainJwtOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainLogPublishingOptionOutput{})
	pulumi.RegisterOutputType(DomainLogPublishingOptionMapOutput{})
	pulumi.RegisterOutputType(DomainMasterUserOptionsOutput{})
	pulumi.RegisterOutputType(DomainMasterUserOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainNodeToNodeEncryptionOptionsOutput{})
	pulumi.RegisterOutputType(DomainNodeToNodeEncryptionOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainOffPeakWindowOutput{})
	pulumi.RegisterOutputType(DomainOffPeakWindowPtrOutput{})
	pulumi.RegisterOutputType(DomainOffPeakWindowOptionsOutput{})
	pulumi.RegisterOutputType(DomainOffPeakWindowOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainSamlOptionsOutput{})
	pulumi.RegisterOutputType(DomainSamlOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainServiceSoftwareOptionsOutput{})
	pulumi.RegisterOutputType(DomainServiceSoftwareOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainSnapshotOptionsOutput{})
	pulumi.RegisterOutputType(DomainSnapshotOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainSoftwareUpdateOptionsOutput{})
	pulumi.RegisterOutputType(DomainSoftwareUpdateOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainVpcOptionsOutput{})
	pulumi.RegisterOutputType(DomainVpcOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainWindowStartTimeOutput{})
	pulumi.RegisterOutputType(DomainWindowStartTimePtrOutput{})
	pulumi.RegisterOutputType(DomainZoneAwarenessConfigOutput{})
	pulumi.RegisterOutputType(DomainZoneAwarenessConfigPtrOutput{})
}
