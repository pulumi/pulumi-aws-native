// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearchservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DomainAdvancedSecurityOptionsInput struct {
	AnonymousAuthDisableDate    *string                  `pulumi:"anonymousAuthDisableDate"`
	AnonymousAuthEnabled        *bool                    `pulumi:"anonymousAuthEnabled"`
	Enabled                     *bool                    `pulumi:"enabled"`
	InternalUserDatabaseEnabled *bool                    `pulumi:"internalUserDatabaseEnabled"`
	MasterUserOptions           *DomainMasterUserOptions `pulumi:"masterUserOptions"`
	SamlOptions                 *DomainSamlOptions       `pulumi:"samlOptions"`
}

// DomainAdvancedSecurityOptionsInputInput is an input type that accepts DomainAdvancedSecurityOptionsInputArgs and DomainAdvancedSecurityOptionsInputOutput values.
// You can construct a concrete instance of `DomainAdvancedSecurityOptionsInputInput` via:
//
//	DomainAdvancedSecurityOptionsInputArgs{...}
type DomainAdvancedSecurityOptionsInputInput interface {
	pulumi.Input

	ToDomainAdvancedSecurityOptionsInputOutput() DomainAdvancedSecurityOptionsInputOutput
	ToDomainAdvancedSecurityOptionsInputOutputWithContext(context.Context) DomainAdvancedSecurityOptionsInputOutput
}

type DomainAdvancedSecurityOptionsInputArgs struct {
	AnonymousAuthDisableDate    pulumi.StringPtrInput           `pulumi:"anonymousAuthDisableDate"`
	AnonymousAuthEnabled        pulumi.BoolPtrInput             `pulumi:"anonymousAuthEnabled"`
	Enabled                     pulumi.BoolPtrInput             `pulumi:"enabled"`
	InternalUserDatabaseEnabled pulumi.BoolPtrInput             `pulumi:"internalUserDatabaseEnabled"`
	MasterUserOptions           DomainMasterUserOptionsPtrInput `pulumi:"masterUserOptions"`
	SamlOptions                 DomainSamlOptionsPtrInput       `pulumi:"samlOptions"`
}

func (DomainAdvancedSecurityOptionsInputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAdvancedSecurityOptionsInput)(nil)).Elem()
}

func (i DomainAdvancedSecurityOptionsInputArgs) ToDomainAdvancedSecurityOptionsInputOutput() DomainAdvancedSecurityOptionsInputOutput {
	return i.ToDomainAdvancedSecurityOptionsInputOutputWithContext(context.Background())
}

func (i DomainAdvancedSecurityOptionsInputArgs) ToDomainAdvancedSecurityOptionsInputOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsInputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAdvancedSecurityOptionsInputOutput)
}

func (i DomainAdvancedSecurityOptionsInputArgs) ToOutput(ctx context.Context) pulumix.Output[DomainAdvancedSecurityOptionsInput] {
	return pulumix.Output[DomainAdvancedSecurityOptionsInput]{
		OutputState: i.ToDomainAdvancedSecurityOptionsInputOutputWithContext(ctx).OutputState,
	}
}

func (i DomainAdvancedSecurityOptionsInputArgs) ToDomainAdvancedSecurityOptionsInputPtrOutput() DomainAdvancedSecurityOptionsInputPtrOutput {
	return i.ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(context.Background())
}

func (i DomainAdvancedSecurityOptionsInputArgs) ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAdvancedSecurityOptionsInputOutput).ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(ctx)
}

// DomainAdvancedSecurityOptionsInputPtrInput is an input type that accepts DomainAdvancedSecurityOptionsInputArgs, DomainAdvancedSecurityOptionsInputPtr and DomainAdvancedSecurityOptionsInputPtrOutput values.
// You can construct a concrete instance of `DomainAdvancedSecurityOptionsInputPtrInput` via:
//
//	        DomainAdvancedSecurityOptionsInputArgs{...}
//
//	or:
//
//	        nil
type DomainAdvancedSecurityOptionsInputPtrInput interface {
	pulumi.Input

	ToDomainAdvancedSecurityOptionsInputPtrOutput() DomainAdvancedSecurityOptionsInputPtrOutput
	ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(context.Context) DomainAdvancedSecurityOptionsInputPtrOutput
}

type domainAdvancedSecurityOptionsInputPtrType DomainAdvancedSecurityOptionsInputArgs

func DomainAdvancedSecurityOptionsInputPtr(v *DomainAdvancedSecurityOptionsInputArgs) DomainAdvancedSecurityOptionsInputPtrInput {
	return (*domainAdvancedSecurityOptionsInputPtrType)(v)
}

func (*domainAdvancedSecurityOptionsInputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAdvancedSecurityOptionsInput)(nil)).Elem()
}

func (i *domainAdvancedSecurityOptionsInputPtrType) ToDomainAdvancedSecurityOptionsInputPtrOutput() DomainAdvancedSecurityOptionsInputPtrOutput {
	return i.ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(context.Background())
}

func (i *domainAdvancedSecurityOptionsInputPtrType) ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsInputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAdvancedSecurityOptionsInputPtrOutput)
}

func (i *domainAdvancedSecurityOptionsInputPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainAdvancedSecurityOptionsInput] {
	return pulumix.Output[*DomainAdvancedSecurityOptionsInput]{
		OutputState: i.ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainAdvancedSecurityOptionsInputOutput struct{ *pulumi.OutputState }

func (DomainAdvancedSecurityOptionsInputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAdvancedSecurityOptionsInput)(nil)).Elem()
}

func (o DomainAdvancedSecurityOptionsInputOutput) ToDomainAdvancedSecurityOptionsInputOutput() DomainAdvancedSecurityOptionsInputOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsInputOutput) ToDomainAdvancedSecurityOptionsInputOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsInputOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsInputOutput) ToDomainAdvancedSecurityOptionsInputPtrOutput() DomainAdvancedSecurityOptionsInputPtrOutput {
	return o.ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(context.Background())
}

func (o DomainAdvancedSecurityOptionsInputOutput) ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsInputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainAdvancedSecurityOptionsInput) *DomainAdvancedSecurityOptionsInput {
		return &v
	}).(DomainAdvancedSecurityOptionsInputPtrOutput)
}

func (o DomainAdvancedSecurityOptionsInputOutput) ToOutput(ctx context.Context) pulumix.Output[DomainAdvancedSecurityOptionsInput] {
	return pulumix.Output[DomainAdvancedSecurityOptionsInput]{
		OutputState: o.OutputState,
	}
}

func (o DomainAdvancedSecurityOptionsInputOutput) AnonymousAuthDisableDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *string { return v.AnonymousAuthDisableDate }).(pulumi.StringPtrOutput)
}

func (o DomainAdvancedSecurityOptionsInputOutput) AnonymousAuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *bool { return v.AnonymousAuthEnabled }).(pulumi.BoolPtrOutput)
}

func (o DomainAdvancedSecurityOptionsInputOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o DomainAdvancedSecurityOptionsInputOutput) InternalUserDatabaseEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *bool { return v.InternalUserDatabaseEnabled }).(pulumi.BoolPtrOutput)
}

func (o DomainAdvancedSecurityOptionsInputOutput) MasterUserOptions() DomainMasterUserOptionsPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *DomainMasterUserOptions { return v.MasterUserOptions }).(DomainMasterUserOptionsPtrOutput)
}

func (o DomainAdvancedSecurityOptionsInputOutput) SamlOptions() DomainSamlOptionsPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsInput) *DomainSamlOptions { return v.SamlOptions }).(DomainSamlOptionsPtrOutput)
}

type DomainAdvancedSecurityOptionsInputPtrOutput struct{ *pulumi.OutputState }

func (DomainAdvancedSecurityOptionsInputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAdvancedSecurityOptionsInput)(nil)).Elem()
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) ToDomainAdvancedSecurityOptionsInputPtrOutput() DomainAdvancedSecurityOptionsInputPtrOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) ToDomainAdvancedSecurityOptionsInputPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsInputPtrOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainAdvancedSecurityOptionsInput] {
	return pulumix.Output[*DomainAdvancedSecurityOptionsInput]{
		OutputState: o.OutputState,
	}
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) Elem() DomainAdvancedSecurityOptionsInputOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) DomainAdvancedSecurityOptionsInput {
		if v != nil {
			return *v
		}
		var ret DomainAdvancedSecurityOptionsInput
		return ret
	}).(DomainAdvancedSecurityOptionsInputOutput)
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) AnonymousAuthDisableDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *string {
		if v == nil {
			return nil
		}
		return v.AnonymousAuthDisableDate
	}).(pulumi.StringPtrOutput)
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) AnonymousAuthEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *bool {
		if v == nil {
			return nil
		}
		return v.AnonymousAuthEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) InternalUserDatabaseEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *bool {
		if v == nil {
			return nil
		}
		return v.InternalUserDatabaseEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) MasterUserOptions() DomainMasterUserOptionsPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *DomainMasterUserOptions {
		if v == nil {
			return nil
		}
		return v.MasterUserOptions
	}).(DomainMasterUserOptionsPtrOutput)
}

func (o DomainAdvancedSecurityOptionsInputPtrOutput) SamlOptions() DomainSamlOptionsPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsInput) *DomainSamlOptions {
		if v == nil {
			return nil
		}
		return v.SamlOptions
	}).(DomainSamlOptionsPtrOutput)
}

type DomainClusterConfig struct {
	DedicatedMasterCount      *int                       `pulumi:"dedicatedMasterCount"`
	DedicatedMasterEnabled    *bool                      `pulumi:"dedicatedMasterEnabled"`
	DedicatedMasterType       *string                    `pulumi:"dedicatedMasterType"`
	InstanceCount             *int                       `pulumi:"instanceCount"`
	InstanceType              *string                    `pulumi:"instanceType"`
	MultiAzWithStandbyEnabled *bool                      `pulumi:"multiAzWithStandbyEnabled"`
	WarmCount                 *int                       `pulumi:"warmCount"`
	WarmEnabled               *bool                      `pulumi:"warmEnabled"`
	WarmType                  *string                    `pulumi:"warmType"`
	ZoneAwarenessConfig       *DomainZoneAwarenessConfig `pulumi:"zoneAwarenessConfig"`
	ZoneAwarenessEnabled      *bool                      `pulumi:"zoneAwarenessEnabled"`
}

// DomainClusterConfigInput is an input type that accepts DomainClusterConfigArgs and DomainClusterConfigOutput values.
// You can construct a concrete instance of `DomainClusterConfigInput` via:
//
//	DomainClusterConfigArgs{...}
type DomainClusterConfigInput interface {
	pulumi.Input

	ToDomainClusterConfigOutput() DomainClusterConfigOutput
	ToDomainClusterConfigOutputWithContext(context.Context) DomainClusterConfigOutput
}

type DomainClusterConfigArgs struct {
	DedicatedMasterCount      pulumi.IntPtrInput                `pulumi:"dedicatedMasterCount"`
	DedicatedMasterEnabled    pulumi.BoolPtrInput               `pulumi:"dedicatedMasterEnabled"`
	DedicatedMasterType       pulumi.StringPtrInput             `pulumi:"dedicatedMasterType"`
	InstanceCount             pulumi.IntPtrInput                `pulumi:"instanceCount"`
	InstanceType              pulumi.StringPtrInput             `pulumi:"instanceType"`
	MultiAzWithStandbyEnabled pulumi.BoolPtrInput               `pulumi:"multiAzWithStandbyEnabled"`
	WarmCount                 pulumi.IntPtrInput                `pulumi:"warmCount"`
	WarmEnabled               pulumi.BoolPtrInput               `pulumi:"warmEnabled"`
	WarmType                  pulumi.StringPtrInput             `pulumi:"warmType"`
	ZoneAwarenessConfig       DomainZoneAwarenessConfigPtrInput `pulumi:"zoneAwarenessConfig"`
	ZoneAwarenessEnabled      pulumi.BoolPtrInput               `pulumi:"zoneAwarenessEnabled"`
}

func (DomainClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainClusterConfig)(nil)).Elem()
}

func (i DomainClusterConfigArgs) ToDomainClusterConfigOutput() DomainClusterConfigOutput {
	return i.ToDomainClusterConfigOutputWithContext(context.Background())
}

func (i DomainClusterConfigArgs) ToDomainClusterConfigOutputWithContext(ctx context.Context) DomainClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigOutput)
}

func (i DomainClusterConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DomainClusterConfig] {
	return pulumix.Output[DomainClusterConfig]{
		OutputState: i.ToDomainClusterConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DomainClusterConfigArgs) ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput {
	return i.ToDomainClusterConfigPtrOutputWithContext(context.Background())
}

func (i DomainClusterConfigArgs) ToDomainClusterConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigOutput).ToDomainClusterConfigPtrOutputWithContext(ctx)
}

// DomainClusterConfigPtrInput is an input type that accepts DomainClusterConfigArgs, DomainClusterConfigPtr and DomainClusterConfigPtrOutput values.
// You can construct a concrete instance of `DomainClusterConfigPtrInput` via:
//
//	        DomainClusterConfigArgs{...}
//
//	or:
//
//	        nil
type DomainClusterConfigPtrInput interface {
	pulumi.Input

	ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput
	ToDomainClusterConfigPtrOutputWithContext(context.Context) DomainClusterConfigPtrOutput
}

type domainClusterConfigPtrType DomainClusterConfigArgs

func DomainClusterConfigPtr(v *DomainClusterConfigArgs) DomainClusterConfigPtrInput {
	return (*domainClusterConfigPtrType)(v)
}

func (*domainClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainClusterConfig)(nil)).Elem()
}

func (i *domainClusterConfigPtrType) ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput {
	return i.ToDomainClusterConfigPtrOutputWithContext(context.Background())
}

func (i *domainClusterConfigPtrType) ToDomainClusterConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigPtrOutput)
}

func (i *domainClusterConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainClusterConfig] {
	return pulumix.Output[*DomainClusterConfig]{
		OutputState: i.ToDomainClusterConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainClusterConfigOutput struct{ *pulumi.OutputState }

func (DomainClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainClusterConfig)(nil)).Elem()
}

func (o DomainClusterConfigOutput) ToDomainClusterConfigOutput() DomainClusterConfigOutput {
	return o
}

func (o DomainClusterConfigOutput) ToDomainClusterConfigOutputWithContext(ctx context.Context) DomainClusterConfigOutput {
	return o
}

func (o DomainClusterConfigOutput) ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput {
	return o.ToDomainClusterConfigPtrOutputWithContext(context.Background())
}

func (o DomainClusterConfigOutput) ToDomainClusterConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainClusterConfig) *DomainClusterConfig {
		return &v
	}).(DomainClusterConfigPtrOutput)
}

func (o DomainClusterConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DomainClusterConfig] {
	return pulumix.Output[DomainClusterConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainClusterConfigOutput) DedicatedMasterCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *int { return v.DedicatedMasterCount }).(pulumi.IntPtrOutput)
}

func (o DomainClusterConfigOutput) DedicatedMasterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *bool { return v.DedicatedMasterEnabled }).(pulumi.BoolPtrOutput)
}

func (o DomainClusterConfigOutput) DedicatedMasterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *string { return v.DedicatedMasterType }).(pulumi.StringPtrOutput)
}

func (o DomainClusterConfigOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

func (o DomainClusterConfigOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

func (o DomainClusterConfigOutput) MultiAzWithStandbyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *bool { return v.MultiAzWithStandbyEnabled }).(pulumi.BoolPtrOutput)
}

func (o DomainClusterConfigOutput) WarmCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *int { return v.WarmCount }).(pulumi.IntPtrOutput)
}

func (o DomainClusterConfigOutput) WarmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *bool { return v.WarmEnabled }).(pulumi.BoolPtrOutput)
}

func (o DomainClusterConfigOutput) WarmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *string { return v.WarmType }).(pulumi.StringPtrOutput)
}

func (o DomainClusterConfigOutput) ZoneAwarenessConfig() DomainZoneAwarenessConfigPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *DomainZoneAwarenessConfig { return v.ZoneAwarenessConfig }).(DomainZoneAwarenessConfigPtrOutput)
}

func (o DomainClusterConfigOutput) ZoneAwarenessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *bool { return v.ZoneAwarenessEnabled }).(pulumi.BoolPtrOutput)
}

type DomainClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainClusterConfig)(nil)).Elem()
}

func (o DomainClusterConfigPtrOutput) ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput {
	return o
}

func (o DomainClusterConfigPtrOutput) ToDomainClusterConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigPtrOutput {
	return o
}

func (o DomainClusterConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainClusterConfig] {
	return pulumix.Output[*DomainClusterConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainClusterConfigPtrOutput) Elem() DomainClusterConfigOutput {
	return o.ApplyT(func(v *DomainClusterConfig) DomainClusterConfig {
		if v != nil {
			return *v
		}
		var ret DomainClusterConfig
		return ret
	}).(DomainClusterConfigOutput)
}

func (o DomainClusterConfigPtrOutput) DedicatedMasterCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.DedicatedMasterCount
	}).(pulumi.IntPtrOutput)
}

func (o DomainClusterConfigPtrOutput) DedicatedMasterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DedicatedMasterEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainClusterConfigPtrOutput) DedicatedMasterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.DedicatedMasterType
	}).(pulumi.StringPtrOutput)
}

func (o DomainClusterConfigPtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

func (o DomainClusterConfigPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(pulumi.StringPtrOutput)
}

func (o DomainClusterConfigPtrOutput) MultiAzWithStandbyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.MultiAzWithStandbyEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainClusterConfigPtrOutput) WarmCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.WarmCount
	}).(pulumi.IntPtrOutput)
}

func (o DomainClusterConfigPtrOutput) WarmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WarmEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainClusterConfigPtrOutput) WarmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.WarmType
	}).(pulumi.StringPtrOutput)
}

func (o DomainClusterConfigPtrOutput) ZoneAwarenessConfig() DomainZoneAwarenessConfigPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *DomainZoneAwarenessConfig {
		if v == nil {
			return nil
		}
		return v.ZoneAwarenessConfig
	}).(DomainZoneAwarenessConfigPtrOutput)
}

func (o DomainClusterConfigPtrOutput) ZoneAwarenessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ZoneAwarenessEnabled
	}).(pulumi.BoolPtrOutput)
}

type DomainCognitoOptions struct {
	Enabled        *bool   `pulumi:"enabled"`
	IdentityPoolId *string `pulumi:"identityPoolId"`
	RoleArn        *string `pulumi:"roleArn"`
	UserPoolId     *string `pulumi:"userPoolId"`
}

// DomainCognitoOptionsInput is an input type that accepts DomainCognitoOptionsArgs and DomainCognitoOptionsOutput values.
// You can construct a concrete instance of `DomainCognitoOptionsInput` via:
//
//	DomainCognitoOptionsArgs{...}
type DomainCognitoOptionsInput interface {
	pulumi.Input

	ToDomainCognitoOptionsOutput() DomainCognitoOptionsOutput
	ToDomainCognitoOptionsOutputWithContext(context.Context) DomainCognitoOptionsOutput
}

type DomainCognitoOptionsArgs struct {
	Enabled        pulumi.BoolPtrInput   `pulumi:"enabled"`
	IdentityPoolId pulumi.StringPtrInput `pulumi:"identityPoolId"`
	RoleArn        pulumi.StringPtrInput `pulumi:"roleArn"`
	UserPoolId     pulumi.StringPtrInput `pulumi:"userPoolId"`
}

func (DomainCognitoOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCognitoOptions)(nil)).Elem()
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsOutput() DomainCognitoOptionsOutput {
	return i.ToDomainCognitoOptionsOutputWithContext(context.Background())
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsOutputWithContext(ctx context.Context) DomainCognitoOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCognitoOptionsOutput)
}

func (i DomainCognitoOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainCognitoOptions] {
	return pulumix.Output[DomainCognitoOptions]{
		OutputState: i.ToDomainCognitoOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return i.ToDomainCognitoOptionsPtrOutputWithContext(context.Background())
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCognitoOptionsOutput).ToDomainCognitoOptionsPtrOutputWithContext(ctx)
}

// DomainCognitoOptionsPtrInput is an input type that accepts DomainCognitoOptionsArgs, DomainCognitoOptionsPtr and DomainCognitoOptionsPtrOutput values.
// You can construct a concrete instance of `DomainCognitoOptionsPtrInput` via:
//
//	        DomainCognitoOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainCognitoOptionsPtrInput interface {
	pulumi.Input

	ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput
	ToDomainCognitoOptionsPtrOutputWithContext(context.Context) DomainCognitoOptionsPtrOutput
}

type domainCognitoOptionsPtrType DomainCognitoOptionsArgs

func DomainCognitoOptionsPtr(v *DomainCognitoOptionsArgs) DomainCognitoOptionsPtrInput {
	return (*domainCognitoOptionsPtrType)(v)
}

func (*domainCognitoOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCognitoOptions)(nil)).Elem()
}

func (i *domainCognitoOptionsPtrType) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return i.ToDomainCognitoOptionsPtrOutputWithContext(context.Background())
}

func (i *domainCognitoOptionsPtrType) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCognitoOptionsPtrOutput)
}

func (i *domainCognitoOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainCognitoOptions] {
	return pulumix.Output[*DomainCognitoOptions]{
		OutputState: i.ToDomainCognitoOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainCognitoOptionsOutput struct{ *pulumi.OutputState }

func (DomainCognitoOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCognitoOptions)(nil)).Elem()
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsOutput() DomainCognitoOptionsOutput {
	return o
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsOutputWithContext(ctx context.Context) DomainCognitoOptionsOutput {
	return o
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return o.ToDomainCognitoOptionsPtrOutputWithContext(context.Background())
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainCognitoOptions) *DomainCognitoOptions {
		return &v
	}).(DomainCognitoOptionsPtrOutput)
}

func (o DomainCognitoOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainCognitoOptions] {
	return pulumix.Output[DomainCognitoOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainCognitoOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainCognitoOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o DomainCognitoOptionsOutput) IdentityPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCognitoOptions) *string { return v.IdentityPoolId }).(pulumi.StringPtrOutput)
}

func (o DomainCognitoOptionsOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCognitoOptions) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o DomainCognitoOptionsOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainCognitoOptions) *string { return v.UserPoolId }).(pulumi.StringPtrOutput)
}

type DomainCognitoOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainCognitoOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCognitoOptions)(nil)).Elem()
}

func (o DomainCognitoOptionsPtrOutput) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return o
}

func (o DomainCognitoOptionsPtrOutput) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return o
}

func (o DomainCognitoOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainCognitoOptions] {
	return pulumix.Output[*DomainCognitoOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainCognitoOptionsPtrOutput) Elem() DomainCognitoOptionsOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) DomainCognitoOptions {
		if v != nil {
			return *v
		}
		var ret DomainCognitoOptions
		return ret
	}).(DomainCognitoOptionsOutput)
}

func (o DomainCognitoOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainCognitoOptionsPtrOutput) IdentityPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) *string {
		if v == nil {
			return nil
		}
		return v.IdentityPoolId
	}).(pulumi.StringPtrOutput)
}

func (o DomainCognitoOptionsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o DomainCognitoOptionsPtrOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) *string {
		if v == nil {
			return nil
		}
		return v.UserPoolId
	}).(pulumi.StringPtrOutput)
}

type DomainEbsOptions struct {
	EbsEnabled *bool   `pulumi:"ebsEnabled"`
	Iops       *int    `pulumi:"iops"`
	Throughput *int    `pulumi:"throughput"`
	VolumeSize *int    `pulumi:"volumeSize"`
	VolumeType *string `pulumi:"volumeType"`
}

// DomainEbsOptionsInput is an input type that accepts DomainEbsOptionsArgs and DomainEbsOptionsOutput values.
// You can construct a concrete instance of `DomainEbsOptionsInput` via:
//
//	DomainEbsOptionsArgs{...}
type DomainEbsOptionsInput interface {
	pulumi.Input

	ToDomainEbsOptionsOutput() DomainEbsOptionsOutput
	ToDomainEbsOptionsOutputWithContext(context.Context) DomainEbsOptionsOutput
}

type DomainEbsOptionsArgs struct {
	EbsEnabled pulumi.BoolPtrInput   `pulumi:"ebsEnabled"`
	Iops       pulumi.IntPtrInput    `pulumi:"iops"`
	Throughput pulumi.IntPtrInput    `pulumi:"throughput"`
	VolumeSize pulumi.IntPtrInput    `pulumi:"volumeSize"`
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (DomainEbsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEbsOptions)(nil)).Elem()
}

func (i DomainEbsOptionsArgs) ToDomainEbsOptionsOutput() DomainEbsOptionsOutput {
	return i.ToDomainEbsOptionsOutputWithContext(context.Background())
}

func (i DomainEbsOptionsArgs) ToDomainEbsOptionsOutputWithContext(ctx context.Context) DomainEbsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEbsOptionsOutput)
}

func (i DomainEbsOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainEbsOptions] {
	return pulumix.Output[DomainEbsOptions]{
		OutputState: i.ToDomainEbsOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainEbsOptionsArgs) ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput {
	return i.ToDomainEbsOptionsPtrOutputWithContext(context.Background())
}

func (i DomainEbsOptionsArgs) ToDomainEbsOptionsPtrOutputWithContext(ctx context.Context) DomainEbsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEbsOptionsOutput).ToDomainEbsOptionsPtrOutputWithContext(ctx)
}

// DomainEbsOptionsPtrInput is an input type that accepts DomainEbsOptionsArgs, DomainEbsOptionsPtr and DomainEbsOptionsPtrOutput values.
// You can construct a concrete instance of `DomainEbsOptionsPtrInput` via:
//
//	        DomainEbsOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainEbsOptionsPtrInput interface {
	pulumi.Input

	ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput
	ToDomainEbsOptionsPtrOutputWithContext(context.Context) DomainEbsOptionsPtrOutput
}

type domainEbsOptionsPtrType DomainEbsOptionsArgs

func DomainEbsOptionsPtr(v *DomainEbsOptionsArgs) DomainEbsOptionsPtrInput {
	return (*domainEbsOptionsPtrType)(v)
}

func (*domainEbsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEbsOptions)(nil)).Elem()
}

func (i *domainEbsOptionsPtrType) ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput {
	return i.ToDomainEbsOptionsPtrOutputWithContext(context.Background())
}

func (i *domainEbsOptionsPtrType) ToDomainEbsOptionsPtrOutputWithContext(ctx context.Context) DomainEbsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEbsOptionsPtrOutput)
}

func (i *domainEbsOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainEbsOptions] {
	return pulumix.Output[*DomainEbsOptions]{
		OutputState: i.ToDomainEbsOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainEbsOptionsOutput struct{ *pulumi.OutputState }

func (DomainEbsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEbsOptions)(nil)).Elem()
}

func (o DomainEbsOptionsOutput) ToDomainEbsOptionsOutput() DomainEbsOptionsOutput {
	return o
}

func (o DomainEbsOptionsOutput) ToDomainEbsOptionsOutputWithContext(ctx context.Context) DomainEbsOptionsOutput {
	return o
}

func (o DomainEbsOptionsOutput) ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput {
	return o.ToDomainEbsOptionsPtrOutputWithContext(context.Background())
}

func (o DomainEbsOptionsOutput) ToDomainEbsOptionsPtrOutputWithContext(ctx context.Context) DomainEbsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainEbsOptions) *DomainEbsOptions {
		return &v
	}).(DomainEbsOptionsPtrOutput)
}

func (o DomainEbsOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainEbsOptions] {
	return pulumix.Output[DomainEbsOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainEbsOptionsOutput) EbsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *bool { return v.EbsEnabled }).(pulumi.BoolPtrOutput)
}

func (o DomainEbsOptionsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o DomainEbsOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

func (o DomainEbsOptionsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

func (o DomainEbsOptionsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type DomainEbsOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainEbsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEbsOptions)(nil)).Elem()
}

func (o DomainEbsOptionsPtrOutput) ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput {
	return o
}

func (o DomainEbsOptionsPtrOutput) ToDomainEbsOptionsPtrOutputWithContext(ctx context.Context) DomainEbsOptionsPtrOutput {
	return o
}

func (o DomainEbsOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainEbsOptions] {
	return pulumix.Output[*DomainEbsOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainEbsOptionsPtrOutput) Elem() DomainEbsOptionsOutput {
	return o.ApplyT(func(v *DomainEbsOptions) DomainEbsOptions {
		if v != nil {
			return *v
		}
		var ret DomainEbsOptions
		return ret
	}).(DomainEbsOptionsOutput)
}

func (o DomainEbsOptionsPtrOutput) EbsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EbsEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainEbsOptionsPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

func (o DomainEbsOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

func (o DomainEbsOptionsPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *int {
		if v == nil {
			return nil
		}
		return v.VolumeSize
	}).(pulumi.IntPtrOutput)
}

func (o DomainEbsOptionsPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type DomainEncryptionAtRestOptions struct {
	Enabled  *bool   `pulumi:"enabled"`
	KmsKeyId *string `pulumi:"kmsKeyId"`
}

// DomainEncryptionAtRestOptionsInput is an input type that accepts DomainEncryptionAtRestOptionsArgs and DomainEncryptionAtRestOptionsOutput values.
// You can construct a concrete instance of `DomainEncryptionAtRestOptionsInput` via:
//
//	DomainEncryptionAtRestOptionsArgs{...}
type DomainEncryptionAtRestOptionsInput interface {
	pulumi.Input

	ToDomainEncryptionAtRestOptionsOutput() DomainEncryptionAtRestOptionsOutput
	ToDomainEncryptionAtRestOptionsOutputWithContext(context.Context) DomainEncryptionAtRestOptionsOutput
}

type DomainEncryptionAtRestOptionsArgs struct {
	Enabled  pulumi.BoolPtrInput   `pulumi:"enabled"`
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
}

func (DomainEncryptionAtRestOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEncryptionAtRestOptions)(nil)).Elem()
}

func (i DomainEncryptionAtRestOptionsArgs) ToDomainEncryptionAtRestOptionsOutput() DomainEncryptionAtRestOptionsOutput {
	return i.ToDomainEncryptionAtRestOptionsOutputWithContext(context.Background())
}

func (i DomainEncryptionAtRestOptionsArgs) ToDomainEncryptionAtRestOptionsOutputWithContext(ctx context.Context) DomainEncryptionAtRestOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEncryptionAtRestOptionsOutput)
}

func (i DomainEncryptionAtRestOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainEncryptionAtRestOptions] {
	return pulumix.Output[DomainEncryptionAtRestOptions]{
		OutputState: i.ToDomainEncryptionAtRestOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainEncryptionAtRestOptionsArgs) ToDomainEncryptionAtRestOptionsPtrOutput() DomainEncryptionAtRestOptionsPtrOutput {
	return i.ToDomainEncryptionAtRestOptionsPtrOutputWithContext(context.Background())
}

func (i DomainEncryptionAtRestOptionsArgs) ToDomainEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) DomainEncryptionAtRestOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEncryptionAtRestOptionsOutput).ToDomainEncryptionAtRestOptionsPtrOutputWithContext(ctx)
}

// DomainEncryptionAtRestOptionsPtrInput is an input type that accepts DomainEncryptionAtRestOptionsArgs, DomainEncryptionAtRestOptionsPtr and DomainEncryptionAtRestOptionsPtrOutput values.
// You can construct a concrete instance of `DomainEncryptionAtRestOptionsPtrInput` via:
//
//	        DomainEncryptionAtRestOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainEncryptionAtRestOptionsPtrInput interface {
	pulumi.Input

	ToDomainEncryptionAtRestOptionsPtrOutput() DomainEncryptionAtRestOptionsPtrOutput
	ToDomainEncryptionAtRestOptionsPtrOutputWithContext(context.Context) DomainEncryptionAtRestOptionsPtrOutput
}

type domainEncryptionAtRestOptionsPtrType DomainEncryptionAtRestOptionsArgs

func DomainEncryptionAtRestOptionsPtr(v *DomainEncryptionAtRestOptionsArgs) DomainEncryptionAtRestOptionsPtrInput {
	return (*domainEncryptionAtRestOptionsPtrType)(v)
}

func (*domainEncryptionAtRestOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEncryptionAtRestOptions)(nil)).Elem()
}

func (i *domainEncryptionAtRestOptionsPtrType) ToDomainEncryptionAtRestOptionsPtrOutput() DomainEncryptionAtRestOptionsPtrOutput {
	return i.ToDomainEncryptionAtRestOptionsPtrOutputWithContext(context.Background())
}

func (i *domainEncryptionAtRestOptionsPtrType) ToDomainEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) DomainEncryptionAtRestOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEncryptionAtRestOptionsPtrOutput)
}

func (i *domainEncryptionAtRestOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainEncryptionAtRestOptions] {
	return pulumix.Output[*DomainEncryptionAtRestOptions]{
		OutputState: i.ToDomainEncryptionAtRestOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainEncryptionAtRestOptionsOutput struct{ *pulumi.OutputState }

func (DomainEncryptionAtRestOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEncryptionAtRestOptions)(nil)).Elem()
}

func (o DomainEncryptionAtRestOptionsOutput) ToDomainEncryptionAtRestOptionsOutput() DomainEncryptionAtRestOptionsOutput {
	return o
}

func (o DomainEncryptionAtRestOptionsOutput) ToDomainEncryptionAtRestOptionsOutputWithContext(ctx context.Context) DomainEncryptionAtRestOptionsOutput {
	return o
}

func (o DomainEncryptionAtRestOptionsOutput) ToDomainEncryptionAtRestOptionsPtrOutput() DomainEncryptionAtRestOptionsPtrOutput {
	return o.ToDomainEncryptionAtRestOptionsPtrOutputWithContext(context.Background())
}

func (o DomainEncryptionAtRestOptionsOutput) ToDomainEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) DomainEncryptionAtRestOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainEncryptionAtRestOptions) *DomainEncryptionAtRestOptions {
		return &v
	}).(DomainEncryptionAtRestOptionsPtrOutput)
}

func (o DomainEncryptionAtRestOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainEncryptionAtRestOptions] {
	return pulumix.Output[DomainEncryptionAtRestOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainEncryptionAtRestOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainEncryptionAtRestOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o DomainEncryptionAtRestOptionsOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEncryptionAtRestOptions) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

type DomainEncryptionAtRestOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainEncryptionAtRestOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEncryptionAtRestOptions)(nil)).Elem()
}

func (o DomainEncryptionAtRestOptionsPtrOutput) ToDomainEncryptionAtRestOptionsPtrOutput() DomainEncryptionAtRestOptionsPtrOutput {
	return o
}

func (o DomainEncryptionAtRestOptionsPtrOutput) ToDomainEncryptionAtRestOptionsPtrOutputWithContext(ctx context.Context) DomainEncryptionAtRestOptionsPtrOutput {
	return o
}

func (o DomainEncryptionAtRestOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainEncryptionAtRestOptions] {
	return pulumix.Output[*DomainEncryptionAtRestOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainEncryptionAtRestOptionsPtrOutput) Elem() DomainEncryptionAtRestOptionsOutput {
	return o.ApplyT(func(v *DomainEncryptionAtRestOptions) DomainEncryptionAtRestOptions {
		if v != nil {
			return *v
		}
		var ret DomainEncryptionAtRestOptions
		return ret
	}).(DomainEncryptionAtRestOptionsOutput)
}

func (o DomainEncryptionAtRestOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainEncryptionAtRestOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainEncryptionAtRestOptionsPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEncryptionAtRestOptions) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

type DomainEndpointOptions struct {
	CustomEndpoint               *string `pulumi:"customEndpoint"`
	CustomEndpointCertificateArn *string `pulumi:"customEndpointCertificateArn"`
	CustomEndpointEnabled        *bool   `pulumi:"customEndpointEnabled"`
	EnforceHttps                 *bool   `pulumi:"enforceHttps"`
	TlsSecurityPolicy            *string `pulumi:"tlsSecurityPolicy"`
}

// DomainEndpointOptionsInput is an input type that accepts DomainEndpointOptionsArgs and DomainEndpointOptionsOutput values.
// You can construct a concrete instance of `DomainEndpointOptionsInput` via:
//
//	DomainEndpointOptionsArgs{...}
type DomainEndpointOptionsInput interface {
	pulumi.Input

	ToDomainEndpointOptionsOutput() DomainEndpointOptionsOutput
	ToDomainEndpointOptionsOutputWithContext(context.Context) DomainEndpointOptionsOutput
}

type DomainEndpointOptionsArgs struct {
	CustomEndpoint               pulumi.StringPtrInput `pulumi:"customEndpoint"`
	CustomEndpointCertificateArn pulumi.StringPtrInput `pulumi:"customEndpointCertificateArn"`
	CustomEndpointEnabled        pulumi.BoolPtrInput   `pulumi:"customEndpointEnabled"`
	EnforceHttps                 pulumi.BoolPtrInput   `pulumi:"enforceHttps"`
	TlsSecurityPolicy            pulumi.StringPtrInput `pulumi:"tlsSecurityPolicy"`
}

func (DomainEndpointOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEndpointOptions)(nil)).Elem()
}

func (i DomainEndpointOptionsArgs) ToDomainEndpointOptionsOutput() DomainEndpointOptionsOutput {
	return i.ToDomainEndpointOptionsOutputWithContext(context.Background())
}

func (i DomainEndpointOptionsArgs) ToDomainEndpointOptionsOutputWithContext(ctx context.Context) DomainEndpointOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEndpointOptionsOutput)
}

func (i DomainEndpointOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainEndpointOptions] {
	return pulumix.Output[DomainEndpointOptions]{
		OutputState: i.ToDomainEndpointOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainEndpointOptionsArgs) ToDomainEndpointOptionsPtrOutput() DomainEndpointOptionsPtrOutput {
	return i.ToDomainEndpointOptionsPtrOutputWithContext(context.Background())
}

func (i DomainEndpointOptionsArgs) ToDomainEndpointOptionsPtrOutputWithContext(ctx context.Context) DomainEndpointOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEndpointOptionsOutput).ToDomainEndpointOptionsPtrOutputWithContext(ctx)
}

// DomainEndpointOptionsPtrInput is an input type that accepts DomainEndpointOptionsArgs, DomainEndpointOptionsPtr and DomainEndpointOptionsPtrOutput values.
// You can construct a concrete instance of `DomainEndpointOptionsPtrInput` via:
//
//	        DomainEndpointOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainEndpointOptionsPtrInput interface {
	pulumi.Input

	ToDomainEndpointOptionsPtrOutput() DomainEndpointOptionsPtrOutput
	ToDomainEndpointOptionsPtrOutputWithContext(context.Context) DomainEndpointOptionsPtrOutput
}

type domainEndpointOptionsPtrType DomainEndpointOptionsArgs

func DomainEndpointOptionsPtr(v *DomainEndpointOptionsArgs) DomainEndpointOptionsPtrInput {
	return (*domainEndpointOptionsPtrType)(v)
}

func (*domainEndpointOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEndpointOptions)(nil)).Elem()
}

func (i *domainEndpointOptionsPtrType) ToDomainEndpointOptionsPtrOutput() DomainEndpointOptionsPtrOutput {
	return i.ToDomainEndpointOptionsPtrOutputWithContext(context.Background())
}

func (i *domainEndpointOptionsPtrType) ToDomainEndpointOptionsPtrOutputWithContext(ctx context.Context) DomainEndpointOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEndpointOptionsPtrOutput)
}

func (i *domainEndpointOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainEndpointOptions] {
	return pulumix.Output[*DomainEndpointOptions]{
		OutputState: i.ToDomainEndpointOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainEndpointOptionsOutput struct{ *pulumi.OutputState }

func (DomainEndpointOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEndpointOptions)(nil)).Elem()
}

func (o DomainEndpointOptionsOutput) ToDomainEndpointOptionsOutput() DomainEndpointOptionsOutput {
	return o
}

func (o DomainEndpointOptionsOutput) ToDomainEndpointOptionsOutputWithContext(ctx context.Context) DomainEndpointOptionsOutput {
	return o
}

func (o DomainEndpointOptionsOutput) ToDomainEndpointOptionsPtrOutput() DomainEndpointOptionsPtrOutput {
	return o.ToDomainEndpointOptionsPtrOutputWithContext(context.Background())
}

func (o DomainEndpointOptionsOutput) ToDomainEndpointOptionsPtrOutputWithContext(ctx context.Context) DomainEndpointOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainEndpointOptions) *DomainEndpointOptions {
		return &v
	}).(DomainEndpointOptionsPtrOutput)
}

func (o DomainEndpointOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainEndpointOptions] {
	return pulumix.Output[DomainEndpointOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainEndpointOptionsOutput) CustomEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEndpointOptions) *string { return v.CustomEndpoint }).(pulumi.StringPtrOutput)
}

func (o DomainEndpointOptionsOutput) CustomEndpointCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEndpointOptions) *string { return v.CustomEndpointCertificateArn }).(pulumi.StringPtrOutput)
}

func (o DomainEndpointOptionsOutput) CustomEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainEndpointOptions) *bool { return v.CustomEndpointEnabled }).(pulumi.BoolPtrOutput)
}

func (o DomainEndpointOptionsOutput) EnforceHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainEndpointOptions) *bool { return v.EnforceHttps }).(pulumi.BoolPtrOutput)
}

func (o DomainEndpointOptionsOutput) TlsSecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEndpointOptions) *string { return v.TlsSecurityPolicy }).(pulumi.StringPtrOutput)
}

type DomainEndpointOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainEndpointOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEndpointOptions)(nil)).Elem()
}

func (o DomainEndpointOptionsPtrOutput) ToDomainEndpointOptionsPtrOutput() DomainEndpointOptionsPtrOutput {
	return o
}

func (o DomainEndpointOptionsPtrOutput) ToDomainEndpointOptionsPtrOutputWithContext(ctx context.Context) DomainEndpointOptionsPtrOutput {
	return o
}

func (o DomainEndpointOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainEndpointOptions] {
	return pulumix.Output[*DomainEndpointOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainEndpointOptionsPtrOutput) Elem() DomainEndpointOptionsOutput {
	return o.ApplyT(func(v *DomainEndpointOptions) DomainEndpointOptions {
		if v != nil {
			return *v
		}
		var ret DomainEndpointOptions
		return ret
	}).(DomainEndpointOptionsOutput)
}

func (o DomainEndpointOptionsPtrOutput) CustomEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEndpointOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomEndpoint
	}).(pulumi.StringPtrOutput)
}

func (o DomainEndpointOptionsPtrOutput) CustomEndpointCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEndpointOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomEndpointCertificateArn
	}).(pulumi.StringPtrOutput)
}

func (o DomainEndpointOptionsPtrOutput) CustomEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainEndpointOptions) *bool {
		if v == nil {
			return nil
		}
		return v.CustomEndpointEnabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainEndpointOptionsPtrOutput) EnforceHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainEndpointOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnforceHttps
	}).(pulumi.BoolPtrOutput)
}

func (o DomainEndpointOptionsPtrOutput) TlsSecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEndpointOptions) *string {
		if v == nil {
			return nil
		}
		return v.TlsSecurityPolicy
	}).(pulumi.StringPtrOutput)
}

type DomainIdp struct {
	EntityId        string `pulumi:"entityId"`
	MetadataContent string `pulumi:"metadataContent"`
}

// DomainIdpInput is an input type that accepts DomainIdpArgs and DomainIdpOutput values.
// You can construct a concrete instance of `DomainIdpInput` via:
//
//	DomainIdpArgs{...}
type DomainIdpInput interface {
	pulumi.Input

	ToDomainIdpOutput() DomainIdpOutput
	ToDomainIdpOutputWithContext(context.Context) DomainIdpOutput
}

type DomainIdpArgs struct {
	EntityId        pulumi.StringInput `pulumi:"entityId"`
	MetadataContent pulumi.StringInput `pulumi:"metadataContent"`
}

func (DomainIdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainIdp)(nil)).Elem()
}

func (i DomainIdpArgs) ToDomainIdpOutput() DomainIdpOutput {
	return i.ToDomainIdpOutputWithContext(context.Background())
}

func (i DomainIdpArgs) ToDomainIdpOutputWithContext(ctx context.Context) DomainIdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIdpOutput)
}

func (i DomainIdpArgs) ToOutput(ctx context.Context) pulumix.Output[DomainIdp] {
	return pulumix.Output[DomainIdp]{
		OutputState: i.ToDomainIdpOutputWithContext(ctx).OutputState,
	}
}

func (i DomainIdpArgs) ToDomainIdpPtrOutput() DomainIdpPtrOutput {
	return i.ToDomainIdpPtrOutputWithContext(context.Background())
}

func (i DomainIdpArgs) ToDomainIdpPtrOutputWithContext(ctx context.Context) DomainIdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIdpOutput).ToDomainIdpPtrOutputWithContext(ctx)
}

// DomainIdpPtrInput is an input type that accepts DomainIdpArgs, DomainIdpPtr and DomainIdpPtrOutput values.
// You can construct a concrete instance of `DomainIdpPtrInput` via:
//
//	        DomainIdpArgs{...}
//
//	or:
//
//	        nil
type DomainIdpPtrInput interface {
	pulumi.Input

	ToDomainIdpPtrOutput() DomainIdpPtrOutput
	ToDomainIdpPtrOutputWithContext(context.Context) DomainIdpPtrOutput
}

type domainIdpPtrType DomainIdpArgs

func DomainIdpPtr(v *DomainIdpArgs) DomainIdpPtrInput {
	return (*domainIdpPtrType)(v)
}

func (*domainIdpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainIdp)(nil)).Elem()
}

func (i *domainIdpPtrType) ToDomainIdpPtrOutput() DomainIdpPtrOutput {
	return i.ToDomainIdpPtrOutputWithContext(context.Background())
}

func (i *domainIdpPtrType) ToDomainIdpPtrOutputWithContext(ctx context.Context) DomainIdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIdpPtrOutput)
}

func (i *domainIdpPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainIdp] {
	return pulumix.Output[*DomainIdp]{
		OutputState: i.ToDomainIdpPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainIdpOutput struct{ *pulumi.OutputState }

func (DomainIdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainIdp)(nil)).Elem()
}

func (o DomainIdpOutput) ToDomainIdpOutput() DomainIdpOutput {
	return o
}

func (o DomainIdpOutput) ToDomainIdpOutputWithContext(ctx context.Context) DomainIdpOutput {
	return o
}

func (o DomainIdpOutput) ToDomainIdpPtrOutput() DomainIdpPtrOutput {
	return o.ToDomainIdpPtrOutputWithContext(context.Background())
}

func (o DomainIdpOutput) ToDomainIdpPtrOutputWithContext(ctx context.Context) DomainIdpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainIdp) *DomainIdp {
		return &v
	}).(DomainIdpPtrOutput)
}

func (o DomainIdpOutput) ToOutput(ctx context.Context) pulumix.Output[DomainIdp] {
	return pulumix.Output[DomainIdp]{
		OutputState: o.OutputState,
	}
}

func (o DomainIdpOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v DomainIdp) string { return v.EntityId }).(pulumi.StringOutput)
}

func (o DomainIdpOutput) MetadataContent() pulumi.StringOutput {
	return o.ApplyT(func(v DomainIdp) string { return v.MetadataContent }).(pulumi.StringOutput)
}

type DomainIdpPtrOutput struct{ *pulumi.OutputState }

func (DomainIdpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainIdp)(nil)).Elem()
}

func (o DomainIdpPtrOutput) ToDomainIdpPtrOutput() DomainIdpPtrOutput {
	return o
}

func (o DomainIdpPtrOutput) ToDomainIdpPtrOutputWithContext(ctx context.Context) DomainIdpPtrOutput {
	return o
}

func (o DomainIdpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainIdp] {
	return pulumix.Output[*DomainIdp]{
		OutputState: o.OutputState,
	}
}

func (o DomainIdpPtrOutput) Elem() DomainIdpOutput {
	return o.ApplyT(func(v *DomainIdp) DomainIdp {
		if v != nil {
			return *v
		}
		var ret DomainIdp
		return ret
	}).(DomainIdpOutput)
}

func (o DomainIdpPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainIdp) *string {
		if v == nil {
			return nil
		}
		return &v.EntityId
	}).(pulumi.StringPtrOutput)
}

func (o DomainIdpPtrOutput) MetadataContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainIdp) *string {
		if v == nil {
			return nil
		}
		return &v.MetadataContent
	}).(pulumi.StringPtrOutput)
}

type DomainMasterUserOptions struct {
	MasterUserArn      *string `pulumi:"masterUserArn"`
	MasterUserName     *string `pulumi:"masterUserName"`
	MasterUserPassword *string `pulumi:"masterUserPassword"`
}

// DomainMasterUserOptionsInput is an input type that accepts DomainMasterUserOptionsArgs and DomainMasterUserOptionsOutput values.
// You can construct a concrete instance of `DomainMasterUserOptionsInput` via:
//
//	DomainMasterUserOptionsArgs{...}
type DomainMasterUserOptionsInput interface {
	pulumi.Input

	ToDomainMasterUserOptionsOutput() DomainMasterUserOptionsOutput
	ToDomainMasterUserOptionsOutputWithContext(context.Context) DomainMasterUserOptionsOutput
}

type DomainMasterUserOptionsArgs struct {
	MasterUserArn      pulumi.StringPtrInput `pulumi:"masterUserArn"`
	MasterUserName     pulumi.StringPtrInput `pulumi:"masterUserName"`
	MasterUserPassword pulumi.StringPtrInput `pulumi:"masterUserPassword"`
}

func (DomainMasterUserOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMasterUserOptions)(nil)).Elem()
}

func (i DomainMasterUserOptionsArgs) ToDomainMasterUserOptionsOutput() DomainMasterUserOptionsOutput {
	return i.ToDomainMasterUserOptionsOutputWithContext(context.Background())
}

func (i DomainMasterUserOptionsArgs) ToDomainMasterUserOptionsOutputWithContext(ctx context.Context) DomainMasterUserOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMasterUserOptionsOutput)
}

func (i DomainMasterUserOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainMasterUserOptions] {
	return pulumix.Output[DomainMasterUserOptions]{
		OutputState: i.ToDomainMasterUserOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainMasterUserOptionsArgs) ToDomainMasterUserOptionsPtrOutput() DomainMasterUserOptionsPtrOutput {
	return i.ToDomainMasterUserOptionsPtrOutputWithContext(context.Background())
}

func (i DomainMasterUserOptionsArgs) ToDomainMasterUserOptionsPtrOutputWithContext(ctx context.Context) DomainMasterUserOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMasterUserOptionsOutput).ToDomainMasterUserOptionsPtrOutputWithContext(ctx)
}

// DomainMasterUserOptionsPtrInput is an input type that accepts DomainMasterUserOptionsArgs, DomainMasterUserOptionsPtr and DomainMasterUserOptionsPtrOutput values.
// You can construct a concrete instance of `DomainMasterUserOptionsPtrInput` via:
//
//	        DomainMasterUserOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainMasterUserOptionsPtrInput interface {
	pulumi.Input

	ToDomainMasterUserOptionsPtrOutput() DomainMasterUserOptionsPtrOutput
	ToDomainMasterUserOptionsPtrOutputWithContext(context.Context) DomainMasterUserOptionsPtrOutput
}

type domainMasterUserOptionsPtrType DomainMasterUserOptionsArgs

func DomainMasterUserOptionsPtr(v *DomainMasterUserOptionsArgs) DomainMasterUserOptionsPtrInput {
	return (*domainMasterUserOptionsPtrType)(v)
}

func (*domainMasterUserOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMasterUserOptions)(nil)).Elem()
}

func (i *domainMasterUserOptionsPtrType) ToDomainMasterUserOptionsPtrOutput() DomainMasterUserOptionsPtrOutput {
	return i.ToDomainMasterUserOptionsPtrOutputWithContext(context.Background())
}

func (i *domainMasterUserOptionsPtrType) ToDomainMasterUserOptionsPtrOutputWithContext(ctx context.Context) DomainMasterUserOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMasterUserOptionsPtrOutput)
}

func (i *domainMasterUserOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainMasterUserOptions] {
	return pulumix.Output[*DomainMasterUserOptions]{
		OutputState: i.ToDomainMasterUserOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainMasterUserOptionsOutput struct{ *pulumi.OutputState }

func (DomainMasterUserOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMasterUserOptions)(nil)).Elem()
}

func (o DomainMasterUserOptionsOutput) ToDomainMasterUserOptionsOutput() DomainMasterUserOptionsOutput {
	return o
}

func (o DomainMasterUserOptionsOutput) ToDomainMasterUserOptionsOutputWithContext(ctx context.Context) DomainMasterUserOptionsOutput {
	return o
}

func (o DomainMasterUserOptionsOutput) ToDomainMasterUserOptionsPtrOutput() DomainMasterUserOptionsPtrOutput {
	return o.ToDomainMasterUserOptionsPtrOutputWithContext(context.Background())
}

func (o DomainMasterUserOptionsOutput) ToDomainMasterUserOptionsPtrOutputWithContext(ctx context.Context) DomainMasterUserOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainMasterUserOptions) *DomainMasterUserOptions {
		return &v
	}).(DomainMasterUserOptionsPtrOutput)
}

func (o DomainMasterUserOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainMasterUserOptions] {
	return pulumix.Output[DomainMasterUserOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainMasterUserOptionsOutput) MasterUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMasterUserOptions) *string { return v.MasterUserArn }).(pulumi.StringPtrOutput)
}

func (o DomainMasterUserOptionsOutput) MasterUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMasterUserOptions) *string { return v.MasterUserName }).(pulumi.StringPtrOutput)
}

func (o DomainMasterUserOptionsOutput) MasterUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMasterUserOptions) *string { return v.MasterUserPassword }).(pulumi.StringPtrOutput)
}

type DomainMasterUserOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainMasterUserOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMasterUserOptions)(nil)).Elem()
}

func (o DomainMasterUserOptionsPtrOutput) ToDomainMasterUserOptionsPtrOutput() DomainMasterUserOptionsPtrOutput {
	return o
}

func (o DomainMasterUserOptionsPtrOutput) ToDomainMasterUserOptionsPtrOutputWithContext(ctx context.Context) DomainMasterUserOptionsPtrOutput {
	return o
}

func (o DomainMasterUserOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainMasterUserOptions] {
	return pulumix.Output[*DomainMasterUserOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainMasterUserOptionsPtrOutput) Elem() DomainMasterUserOptionsOutput {
	return o.ApplyT(func(v *DomainMasterUserOptions) DomainMasterUserOptions {
		if v != nil {
			return *v
		}
		var ret DomainMasterUserOptions
		return ret
	}).(DomainMasterUserOptionsOutput)
}

func (o DomainMasterUserOptionsPtrOutput) MasterUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMasterUserOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterUserArn
	}).(pulumi.StringPtrOutput)
}

func (o DomainMasterUserOptionsPtrOutput) MasterUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMasterUserOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterUserName
	}).(pulumi.StringPtrOutput)
}

func (o DomainMasterUserOptionsPtrOutput) MasterUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMasterUserOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterUserPassword
	}).(pulumi.StringPtrOutput)
}

type DomainNodeToNodeEncryptionOptions struct {
	Enabled *bool `pulumi:"enabled"`
}

// DomainNodeToNodeEncryptionOptionsInput is an input type that accepts DomainNodeToNodeEncryptionOptionsArgs and DomainNodeToNodeEncryptionOptionsOutput values.
// You can construct a concrete instance of `DomainNodeToNodeEncryptionOptionsInput` via:
//
//	DomainNodeToNodeEncryptionOptionsArgs{...}
type DomainNodeToNodeEncryptionOptionsInput interface {
	pulumi.Input

	ToDomainNodeToNodeEncryptionOptionsOutput() DomainNodeToNodeEncryptionOptionsOutput
	ToDomainNodeToNodeEncryptionOptionsOutputWithContext(context.Context) DomainNodeToNodeEncryptionOptionsOutput
}

type DomainNodeToNodeEncryptionOptionsArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (DomainNodeToNodeEncryptionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNodeToNodeEncryptionOptions)(nil)).Elem()
}

func (i DomainNodeToNodeEncryptionOptionsArgs) ToDomainNodeToNodeEncryptionOptionsOutput() DomainNodeToNodeEncryptionOptionsOutput {
	return i.ToDomainNodeToNodeEncryptionOptionsOutputWithContext(context.Background())
}

func (i DomainNodeToNodeEncryptionOptionsArgs) ToDomainNodeToNodeEncryptionOptionsOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNodeToNodeEncryptionOptionsOutput)
}

func (i DomainNodeToNodeEncryptionOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainNodeToNodeEncryptionOptions] {
	return pulumix.Output[DomainNodeToNodeEncryptionOptions]{
		OutputState: i.ToDomainNodeToNodeEncryptionOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainNodeToNodeEncryptionOptionsArgs) ToDomainNodeToNodeEncryptionOptionsPtrOutput() DomainNodeToNodeEncryptionOptionsPtrOutput {
	return i.ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(context.Background())
}

func (i DomainNodeToNodeEncryptionOptionsArgs) ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNodeToNodeEncryptionOptionsOutput).ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx)
}

// DomainNodeToNodeEncryptionOptionsPtrInput is an input type that accepts DomainNodeToNodeEncryptionOptionsArgs, DomainNodeToNodeEncryptionOptionsPtr and DomainNodeToNodeEncryptionOptionsPtrOutput values.
// You can construct a concrete instance of `DomainNodeToNodeEncryptionOptionsPtrInput` via:
//
//	        DomainNodeToNodeEncryptionOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainNodeToNodeEncryptionOptionsPtrInput interface {
	pulumi.Input

	ToDomainNodeToNodeEncryptionOptionsPtrOutput() DomainNodeToNodeEncryptionOptionsPtrOutput
	ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(context.Context) DomainNodeToNodeEncryptionOptionsPtrOutput
}

type domainNodeToNodeEncryptionOptionsPtrType DomainNodeToNodeEncryptionOptionsArgs

func DomainNodeToNodeEncryptionOptionsPtr(v *DomainNodeToNodeEncryptionOptionsArgs) DomainNodeToNodeEncryptionOptionsPtrInput {
	return (*domainNodeToNodeEncryptionOptionsPtrType)(v)
}

func (*domainNodeToNodeEncryptionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNodeToNodeEncryptionOptions)(nil)).Elem()
}

func (i *domainNodeToNodeEncryptionOptionsPtrType) ToDomainNodeToNodeEncryptionOptionsPtrOutput() DomainNodeToNodeEncryptionOptionsPtrOutput {
	return i.ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(context.Background())
}

func (i *domainNodeToNodeEncryptionOptionsPtrType) ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNodeToNodeEncryptionOptionsPtrOutput)
}

func (i *domainNodeToNodeEncryptionOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainNodeToNodeEncryptionOptions] {
	return pulumix.Output[*DomainNodeToNodeEncryptionOptions]{
		OutputState: i.ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainNodeToNodeEncryptionOptionsOutput struct{ *pulumi.OutputState }

func (DomainNodeToNodeEncryptionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNodeToNodeEncryptionOptions)(nil)).Elem()
}

func (o DomainNodeToNodeEncryptionOptionsOutput) ToDomainNodeToNodeEncryptionOptionsOutput() DomainNodeToNodeEncryptionOptionsOutput {
	return o
}

func (o DomainNodeToNodeEncryptionOptionsOutput) ToDomainNodeToNodeEncryptionOptionsOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOptionsOutput {
	return o
}

func (o DomainNodeToNodeEncryptionOptionsOutput) ToDomainNodeToNodeEncryptionOptionsPtrOutput() DomainNodeToNodeEncryptionOptionsPtrOutput {
	return o.ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(context.Background())
}

func (o DomainNodeToNodeEncryptionOptionsOutput) ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainNodeToNodeEncryptionOptions) *DomainNodeToNodeEncryptionOptions {
		return &v
	}).(DomainNodeToNodeEncryptionOptionsPtrOutput)
}

func (o DomainNodeToNodeEncryptionOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainNodeToNodeEncryptionOptions] {
	return pulumix.Output[DomainNodeToNodeEncryptionOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainNodeToNodeEncryptionOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainNodeToNodeEncryptionOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DomainNodeToNodeEncryptionOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainNodeToNodeEncryptionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNodeToNodeEncryptionOptions)(nil)).Elem()
}

func (o DomainNodeToNodeEncryptionOptionsPtrOutput) ToDomainNodeToNodeEncryptionOptionsPtrOutput() DomainNodeToNodeEncryptionOptionsPtrOutput {
	return o
}

func (o DomainNodeToNodeEncryptionOptionsPtrOutput) ToDomainNodeToNodeEncryptionOptionsPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOptionsPtrOutput {
	return o
}

func (o DomainNodeToNodeEncryptionOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainNodeToNodeEncryptionOptions] {
	return pulumix.Output[*DomainNodeToNodeEncryptionOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainNodeToNodeEncryptionOptionsPtrOutput) Elem() DomainNodeToNodeEncryptionOptionsOutput {
	return o.ApplyT(func(v *DomainNodeToNodeEncryptionOptions) DomainNodeToNodeEncryptionOptions {
		if v != nil {
			return *v
		}
		var ret DomainNodeToNodeEncryptionOptions
		return ret
	}).(DomainNodeToNodeEncryptionOptionsOutput)
}

func (o DomainNodeToNodeEncryptionOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainNodeToNodeEncryptionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type DomainOffPeakWindow struct {
	WindowStartTime *DomainWindowStartTime `pulumi:"windowStartTime"`
}

// DomainOffPeakWindowInput is an input type that accepts DomainOffPeakWindowArgs and DomainOffPeakWindowOutput values.
// You can construct a concrete instance of `DomainOffPeakWindowInput` via:
//
//	DomainOffPeakWindowArgs{...}
type DomainOffPeakWindowInput interface {
	pulumi.Input

	ToDomainOffPeakWindowOutput() DomainOffPeakWindowOutput
	ToDomainOffPeakWindowOutputWithContext(context.Context) DomainOffPeakWindowOutput
}

type DomainOffPeakWindowArgs struct {
	WindowStartTime DomainWindowStartTimePtrInput `pulumi:"windowStartTime"`
}

func (DomainOffPeakWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOffPeakWindow)(nil)).Elem()
}

func (i DomainOffPeakWindowArgs) ToDomainOffPeakWindowOutput() DomainOffPeakWindowOutput {
	return i.ToDomainOffPeakWindowOutputWithContext(context.Background())
}

func (i DomainOffPeakWindowArgs) ToDomainOffPeakWindowOutputWithContext(ctx context.Context) DomainOffPeakWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOffPeakWindowOutput)
}

func (i DomainOffPeakWindowArgs) ToOutput(ctx context.Context) pulumix.Output[DomainOffPeakWindow] {
	return pulumix.Output[DomainOffPeakWindow]{
		OutputState: i.ToDomainOffPeakWindowOutputWithContext(ctx).OutputState,
	}
}

func (i DomainOffPeakWindowArgs) ToDomainOffPeakWindowPtrOutput() DomainOffPeakWindowPtrOutput {
	return i.ToDomainOffPeakWindowPtrOutputWithContext(context.Background())
}

func (i DomainOffPeakWindowArgs) ToDomainOffPeakWindowPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOffPeakWindowOutput).ToDomainOffPeakWindowPtrOutputWithContext(ctx)
}

// DomainOffPeakWindowPtrInput is an input type that accepts DomainOffPeakWindowArgs, DomainOffPeakWindowPtr and DomainOffPeakWindowPtrOutput values.
// You can construct a concrete instance of `DomainOffPeakWindowPtrInput` via:
//
//	        DomainOffPeakWindowArgs{...}
//
//	or:
//
//	        nil
type DomainOffPeakWindowPtrInput interface {
	pulumi.Input

	ToDomainOffPeakWindowPtrOutput() DomainOffPeakWindowPtrOutput
	ToDomainOffPeakWindowPtrOutputWithContext(context.Context) DomainOffPeakWindowPtrOutput
}

type domainOffPeakWindowPtrType DomainOffPeakWindowArgs

func DomainOffPeakWindowPtr(v *DomainOffPeakWindowArgs) DomainOffPeakWindowPtrInput {
	return (*domainOffPeakWindowPtrType)(v)
}

func (*domainOffPeakWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOffPeakWindow)(nil)).Elem()
}

func (i *domainOffPeakWindowPtrType) ToDomainOffPeakWindowPtrOutput() DomainOffPeakWindowPtrOutput {
	return i.ToDomainOffPeakWindowPtrOutputWithContext(context.Background())
}

func (i *domainOffPeakWindowPtrType) ToDomainOffPeakWindowPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOffPeakWindowPtrOutput)
}

func (i *domainOffPeakWindowPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainOffPeakWindow] {
	return pulumix.Output[*DomainOffPeakWindow]{
		OutputState: i.ToDomainOffPeakWindowPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainOffPeakWindowOutput struct{ *pulumi.OutputState }

func (DomainOffPeakWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOffPeakWindow)(nil)).Elem()
}

func (o DomainOffPeakWindowOutput) ToDomainOffPeakWindowOutput() DomainOffPeakWindowOutput {
	return o
}

func (o DomainOffPeakWindowOutput) ToDomainOffPeakWindowOutputWithContext(ctx context.Context) DomainOffPeakWindowOutput {
	return o
}

func (o DomainOffPeakWindowOutput) ToDomainOffPeakWindowPtrOutput() DomainOffPeakWindowPtrOutput {
	return o.ToDomainOffPeakWindowPtrOutputWithContext(context.Background())
}

func (o DomainOffPeakWindowOutput) ToDomainOffPeakWindowPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainOffPeakWindow) *DomainOffPeakWindow {
		return &v
	}).(DomainOffPeakWindowPtrOutput)
}

func (o DomainOffPeakWindowOutput) ToOutput(ctx context.Context) pulumix.Output[DomainOffPeakWindow] {
	return pulumix.Output[DomainOffPeakWindow]{
		OutputState: o.OutputState,
	}
}

func (o DomainOffPeakWindowOutput) WindowStartTime() DomainWindowStartTimePtrOutput {
	return o.ApplyT(func(v DomainOffPeakWindow) *DomainWindowStartTime { return v.WindowStartTime }).(DomainWindowStartTimePtrOutput)
}

type DomainOffPeakWindowPtrOutput struct{ *pulumi.OutputState }

func (DomainOffPeakWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOffPeakWindow)(nil)).Elem()
}

func (o DomainOffPeakWindowPtrOutput) ToDomainOffPeakWindowPtrOutput() DomainOffPeakWindowPtrOutput {
	return o
}

func (o DomainOffPeakWindowPtrOutput) ToDomainOffPeakWindowPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowPtrOutput {
	return o
}

func (o DomainOffPeakWindowPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainOffPeakWindow] {
	return pulumix.Output[*DomainOffPeakWindow]{
		OutputState: o.OutputState,
	}
}

func (o DomainOffPeakWindowPtrOutput) Elem() DomainOffPeakWindowOutput {
	return o.ApplyT(func(v *DomainOffPeakWindow) DomainOffPeakWindow {
		if v != nil {
			return *v
		}
		var ret DomainOffPeakWindow
		return ret
	}).(DomainOffPeakWindowOutput)
}

func (o DomainOffPeakWindowPtrOutput) WindowStartTime() DomainWindowStartTimePtrOutput {
	return o.ApplyT(func(v *DomainOffPeakWindow) *DomainWindowStartTime {
		if v == nil {
			return nil
		}
		return v.WindowStartTime
	}).(DomainWindowStartTimePtrOutput)
}

type DomainOffPeakWindowOptions struct {
	Enabled       *bool                `pulumi:"enabled"`
	OffPeakWindow *DomainOffPeakWindow `pulumi:"offPeakWindow"`
}

// DomainOffPeakWindowOptionsInput is an input type that accepts DomainOffPeakWindowOptionsArgs and DomainOffPeakWindowOptionsOutput values.
// You can construct a concrete instance of `DomainOffPeakWindowOptionsInput` via:
//
//	DomainOffPeakWindowOptionsArgs{...}
type DomainOffPeakWindowOptionsInput interface {
	pulumi.Input

	ToDomainOffPeakWindowOptionsOutput() DomainOffPeakWindowOptionsOutput
	ToDomainOffPeakWindowOptionsOutputWithContext(context.Context) DomainOffPeakWindowOptionsOutput
}

type DomainOffPeakWindowOptionsArgs struct {
	Enabled       pulumi.BoolPtrInput         `pulumi:"enabled"`
	OffPeakWindow DomainOffPeakWindowPtrInput `pulumi:"offPeakWindow"`
}

func (DomainOffPeakWindowOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOffPeakWindowOptions)(nil)).Elem()
}

func (i DomainOffPeakWindowOptionsArgs) ToDomainOffPeakWindowOptionsOutput() DomainOffPeakWindowOptionsOutput {
	return i.ToDomainOffPeakWindowOptionsOutputWithContext(context.Background())
}

func (i DomainOffPeakWindowOptionsArgs) ToDomainOffPeakWindowOptionsOutputWithContext(ctx context.Context) DomainOffPeakWindowOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOffPeakWindowOptionsOutput)
}

func (i DomainOffPeakWindowOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainOffPeakWindowOptions] {
	return pulumix.Output[DomainOffPeakWindowOptions]{
		OutputState: i.ToDomainOffPeakWindowOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainOffPeakWindowOptionsArgs) ToDomainOffPeakWindowOptionsPtrOutput() DomainOffPeakWindowOptionsPtrOutput {
	return i.ToDomainOffPeakWindowOptionsPtrOutputWithContext(context.Background())
}

func (i DomainOffPeakWindowOptionsArgs) ToDomainOffPeakWindowOptionsPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOffPeakWindowOptionsOutput).ToDomainOffPeakWindowOptionsPtrOutputWithContext(ctx)
}

// DomainOffPeakWindowOptionsPtrInput is an input type that accepts DomainOffPeakWindowOptionsArgs, DomainOffPeakWindowOptionsPtr and DomainOffPeakWindowOptionsPtrOutput values.
// You can construct a concrete instance of `DomainOffPeakWindowOptionsPtrInput` via:
//
//	        DomainOffPeakWindowOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainOffPeakWindowOptionsPtrInput interface {
	pulumi.Input

	ToDomainOffPeakWindowOptionsPtrOutput() DomainOffPeakWindowOptionsPtrOutput
	ToDomainOffPeakWindowOptionsPtrOutputWithContext(context.Context) DomainOffPeakWindowOptionsPtrOutput
}

type domainOffPeakWindowOptionsPtrType DomainOffPeakWindowOptionsArgs

func DomainOffPeakWindowOptionsPtr(v *DomainOffPeakWindowOptionsArgs) DomainOffPeakWindowOptionsPtrInput {
	return (*domainOffPeakWindowOptionsPtrType)(v)
}

func (*domainOffPeakWindowOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOffPeakWindowOptions)(nil)).Elem()
}

func (i *domainOffPeakWindowOptionsPtrType) ToDomainOffPeakWindowOptionsPtrOutput() DomainOffPeakWindowOptionsPtrOutput {
	return i.ToDomainOffPeakWindowOptionsPtrOutputWithContext(context.Background())
}

func (i *domainOffPeakWindowOptionsPtrType) ToDomainOffPeakWindowOptionsPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOffPeakWindowOptionsPtrOutput)
}

func (i *domainOffPeakWindowOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainOffPeakWindowOptions] {
	return pulumix.Output[*DomainOffPeakWindowOptions]{
		OutputState: i.ToDomainOffPeakWindowOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainOffPeakWindowOptionsOutput struct{ *pulumi.OutputState }

func (DomainOffPeakWindowOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainOffPeakWindowOptions)(nil)).Elem()
}

func (o DomainOffPeakWindowOptionsOutput) ToDomainOffPeakWindowOptionsOutput() DomainOffPeakWindowOptionsOutput {
	return o
}

func (o DomainOffPeakWindowOptionsOutput) ToDomainOffPeakWindowOptionsOutputWithContext(ctx context.Context) DomainOffPeakWindowOptionsOutput {
	return o
}

func (o DomainOffPeakWindowOptionsOutput) ToDomainOffPeakWindowOptionsPtrOutput() DomainOffPeakWindowOptionsPtrOutput {
	return o.ToDomainOffPeakWindowOptionsPtrOutputWithContext(context.Background())
}

func (o DomainOffPeakWindowOptionsOutput) ToDomainOffPeakWindowOptionsPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainOffPeakWindowOptions) *DomainOffPeakWindowOptions {
		return &v
	}).(DomainOffPeakWindowOptionsPtrOutput)
}

func (o DomainOffPeakWindowOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainOffPeakWindowOptions] {
	return pulumix.Output[DomainOffPeakWindowOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainOffPeakWindowOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainOffPeakWindowOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o DomainOffPeakWindowOptionsOutput) OffPeakWindow() DomainOffPeakWindowPtrOutput {
	return o.ApplyT(func(v DomainOffPeakWindowOptions) *DomainOffPeakWindow { return v.OffPeakWindow }).(DomainOffPeakWindowPtrOutput)
}

type DomainOffPeakWindowOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainOffPeakWindowOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainOffPeakWindowOptions)(nil)).Elem()
}

func (o DomainOffPeakWindowOptionsPtrOutput) ToDomainOffPeakWindowOptionsPtrOutput() DomainOffPeakWindowOptionsPtrOutput {
	return o
}

func (o DomainOffPeakWindowOptionsPtrOutput) ToDomainOffPeakWindowOptionsPtrOutputWithContext(ctx context.Context) DomainOffPeakWindowOptionsPtrOutput {
	return o
}

func (o DomainOffPeakWindowOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainOffPeakWindowOptions] {
	return pulumix.Output[*DomainOffPeakWindowOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainOffPeakWindowOptionsPtrOutput) Elem() DomainOffPeakWindowOptionsOutput {
	return o.ApplyT(func(v *DomainOffPeakWindowOptions) DomainOffPeakWindowOptions {
		if v != nil {
			return *v
		}
		var ret DomainOffPeakWindowOptions
		return ret
	}).(DomainOffPeakWindowOptionsOutput)
}

func (o DomainOffPeakWindowOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainOffPeakWindowOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainOffPeakWindowOptionsPtrOutput) OffPeakWindow() DomainOffPeakWindowPtrOutput {
	return o.ApplyT(func(v *DomainOffPeakWindowOptions) *DomainOffPeakWindow {
		if v == nil {
			return nil
		}
		return v.OffPeakWindow
	}).(DomainOffPeakWindowPtrOutput)
}

type DomainSamlOptions struct {
	Enabled               *bool      `pulumi:"enabled"`
	Idp                   *DomainIdp `pulumi:"idp"`
	MasterBackendRole     *string    `pulumi:"masterBackendRole"`
	MasterUserName        *string    `pulumi:"masterUserName"`
	RolesKey              *string    `pulumi:"rolesKey"`
	SessionTimeoutMinutes *int       `pulumi:"sessionTimeoutMinutes"`
	SubjectKey            *string    `pulumi:"subjectKey"`
}

// DomainSamlOptionsInput is an input type that accepts DomainSamlOptionsArgs and DomainSamlOptionsOutput values.
// You can construct a concrete instance of `DomainSamlOptionsInput` via:
//
//	DomainSamlOptionsArgs{...}
type DomainSamlOptionsInput interface {
	pulumi.Input

	ToDomainSamlOptionsOutput() DomainSamlOptionsOutput
	ToDomainSamlOptionsOutputWithContext(context.Context) DomainSamlOptionsOutput
}

type DomainSamlOptionsArgs struct {
	Enabled               pulumi.BoolPtrInput   `pulumi:"enabled"`
	Idp                   DomainIdpPtrInput     `pulumi:"idp"`
	MasterBackendRole     pulumi.StringPtrInput `pulumi:"masterBackendRole"`
	MasterUserName        pulumi.StringPtrInput `pulumi:"masterUserName"`
	RolesKey              pulumi.StringPtrInput `pulumi:"rolesKey"`
	SessionTimeoutMinutes pulumi.IntPtrInput    `pulumi:"sessionTimeoutMinutes"`
	SubjectKey            pulumi.StringPtrInput `pulumi:"subjectKey"`
}

func (DomainSamlOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSamlOptions)(nil)).Elem()
}

func (i DomainSamlOptionsArgs) ToDomainSamlOptionsOutput() DomainSamlOptionsOutput {
	return i.ToDomainSamlOptionsOutputWithContext(context.Background())
}

func (i DomainSamlOptionsArgs) ToDomainSamlOptionsOutputWithContext(ctx context.Context) DomainSamlOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSamlOptionsOutput)
}

func (i DomainSamlOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSamlOptions] {
	return pulumix.Output[DomainSamlOptions]{
		OutputState: i.ToDomainSamlOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSamlOptionsArgs) ToDomainSamlOptionsPtrOutput() DomainSamlOptionsPtrOutput {
	return i.ToDomainSamlOptionsPtrOutputWithContext(context.Background())
}

func (i DomainSamlOptionsArgs) ToDomainSamlOptionsPtrOutputWithContext(ctx context.Context) DomainSamlOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSamlOptionsOutput).ToDomainSamlOptionsPtrOutputWithContext(ctx)
}

// DomainSamlOptionsPtrInput is an input type that accepts DomainSamlOptionsArgs, DomainSamlOptionsPtr and DomainSamlOptionsPtrOutput values.
// You can construct a concrete instance of `DomainSamlOptionsPtrInput` via:
//
//	        DomainSamlOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainSamlOptionsPtrInput interface {
	pulumi.Input

	ToDomainSamlOptionsPtrOutput() DomainSamlOptionsPtrOutput
	ToDomainSamlOptionsPtrOutputWithContext(context.Context) DomainSamlOptionsPtrOutput
}

type domainSamlOptionsPtrType DomainSamlOptionsArgs

func DomainSamlOptionsPtr(v *DomainSamlOptionsArgs) DomainSamlOptionsPtrInput {
	return (*domainSamlOptionsPtrType)(v)
}

func (*domainSamlOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSamlOptions)(nil)).Elem()
}

func (i *domainSamlOptionsPtrType) ToDomainSamlOptionsPtrOutput() DomainSamlOptionsPtrOutput {
	return i.ToDomainSamlOptionsPtrOutputWithContext(context.Background())
}

func (i *domainSamlOptionsPtrType) ToDomainSamlOptionsPtrOutputWithContext(ctx context.Context) DomainSamlOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSamlOptionsPtrOutput)
}

func (i *domainSamlOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSamlOptions] {
	return pulumix.Output[*DomainSamlOptions]{
		OutputState: i.ToDomainSamlOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSamlOptionsOutput struct{ *pulumi.OutputState }

func (DomainSamlOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSamlOptions)(nil)).Elem()
}

func (o DomainSamlOptionsOutput) ToDomainSamlOptionsOutput() DomainSamlOptionsOutput {
	return o
}

func (o DomainSamlOptionsOutput) ToDomainSamlOptionsOutputWithContext(ctx context.Context) DomainSamlOptionsOutput {
	return o
}

func (o DomainSamlOptionsOutput) ToDomainSamlOptionsPtrOutput() DomainSamlOptionsPtrOutput {
	return o.ToDomainSamlOptionsPtrOutputWithContext(context.Background())
}

func (o DomainSamlOptionsOutput) ToDomainSamlOptionsPtrOutputWithContext(ctx context.Context) DomainSamlOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSamlOptions) *DomainSamlOptions {
		return &v
	}).(DomainSamlOptionsPtrOutput)
}

func (o DomainSamlOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSamlOptions] {
	return pulumix.Output[DomainSamlOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainSamlOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o DomainSamlOptionsOutput) Idp() DomainIdpPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *DomainIdp { return v.Idp }).(DomainIdpPtrOutput)
}

func (o DomainSamlOptionsOutput) MasterBackendRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *string { return v.MasterBackendRole }).(pulumi.StringPtrOutput)
}

func (o DomainSamlOptionsOutput) MasterUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *string { return v.MasterUserName }).(pulumi.StringPtrOutput)
}

func (o DomainSamlOptionsOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *string { return v.RolesKey }).(pulumi.StringPtrOutput)
}

func (o DomainSamlOptionsOutput) SessionTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *int { return v.SessionTimeoutMinutes }).(pulumi.IntPtrOutput)
}

func (o DomainSamlOptionsOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSamlOptions) *string { return v.SubjectKey }).(pulumi.StringPtrOutput)
}

type DomainSamlOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainSamlOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSamlOptions)(nil)).Elem()
}

func (o DomainSamlOptionsPtrOutput) ToDomainSamlOptionsPtrOutput() DomainSamlOptionsPtrOutput {
	return o
}

func (o DomainSamlOptionsPtrOutput) ToDomainSamlOptionsPtrOutputWithContext(ctx context.Context) DomainSamlOptionsPtrOutput {
	return o
}

func (o DomainSamlOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSamlOptions] {
	return pulumix.Output[*DomainSamlOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainSamlOptionsPtrOutput) Elem() DomainSamlOptionsOutput {
	return o.ApplyT(func(v *DomainSamlOptions) DomainSamlOptions {
		if v != nil {
			return *v
		}
		var ret DomainSamlOptions
		return ret
	}).(DomainSamlOptionsOutput)
}

func (o DomainSamlOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainSamlOptionsPtrOutput) Idp() DomainIdpPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *DomainIdp {
		if v == nil {
			return nil
		}
		return v.Idp
	}).(DomainIdpPtrOutput)
}

func (o DomainSamlOptionsPtrOutput) MasterBackendRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterBackendRole
	}).(pulumi.StringPtrOutput)
}

func (o DomainSamlOptionsPtrOutput) MasterUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterUserName
	}).(pulumi.StringPtrOutput)
}

func (o DomainSamlOptionsPtrOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *string {
		if v == nil {
			return nil
		}
		return v.RolesKey
	}).(pulumi.StringPtrOutput)
}

func (o DomainSamlOptionsPtrOutput) SessionTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMinutes
	}).(pulumi.IntPtrOutput)
}

func (o DomainSamlOptionsPtrOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptions) *string {
		if v == nil {
			return nil
		}
		return v.SubjectKey
	}).(pulumi.StringPtrOutput)
}

type DomainServiceSoftwareOptions struct {
	AutomatedUpdateDate *string `pulumi:"automatedUpdateDate"`
	Cancellable         *bool   `pulumi:"cancellable"`
	CurrentVersion      *string `pulumi:"currentVersion"`
	Description         *string `pulumi:"description"`
	NewVersion          *string `pulumi:"newVersion"`
	OptionalDeployment  *bool   `pulumi:"optionalDeployment"`
	UpdateAvailable     *bool   `pulumi:"updateAvailable"`
	UpdateStatus        *string `pulumi:"updateStatus"`
}

type DomainServiceSoftwareOptionsOutput struct{ *pulumi.OutputState }

func (DomainServiceSoftwareOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainServiceSoftwareOptions)(nil)).Elem()
}

func (o DomainServiceSoftwareOptionsOutput) ToDomainServiceSoftwareOptionsOutput() DomainServiceSoftwareOptionsOutput {
	return o
}

func (o DomainServiceSoftwareOptionsOutput) ToDomainServiceSoftwareOptionsOutputWithContext(ctx context.Context) DomainServiceSoftwareOptionsOutput {
	return o
}

func (o DomainServiceSoftwareOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainServiceSoftwareOptions] {
	return pulumix.Output[DomainServiceSoftwareOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainServiceSoftwareOptionsOutput) AutomatedUpdateDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *string { return v.AutomatedUpdateDate }).(pulumi.StringPtrOutput)
}

func (o DomainServiceSoftwareOptionsOutput) Cancellable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *bool { return v.Cancellable }).(pulumi.BoolPtrOutput)
}

func (o DomainServiceSoftwareOptionsOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *string { return v.CurrentVersion }).(pulumi.StringPtrOutput)
}

func (o DomainServiceSoftwareOptionsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DomainServiceSoftwareOptionsOutput) NewVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *string { return v.NewVersion }).(pulumi.StringPtrOutput)
}

func (o DomainServiceSoftwareOptionsOutput) OptionalDeployment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *bool { return v.OptionalDeployment }).(pulumi.BoolPtrOutput)
}

func (o DomainServiceSoftwareOptionsOutput) UpdateAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *bool { return v.UpdateAvailable }).(pulumi.BoolPtrOutput)
}

func (o DomainServiceSoftwareOptionsOutput) UpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainServiceSoftwareOptions) *string { return v.UpdateStatus }).(pulumi.StringPtrOutput)
}

type DomainServiceSoftwareOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainServiceSoftwareOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainServiceSoftwareOptions)(nil)).Elem()
}

func (o DomainServiceSoftwareOptionsPtrOutput) ToDomainServiceSoftwareOptionsPtrOutput() DomainServiceSoftwareOptionsPtrOutput {
	return o
}

func (o DomainServiceSoftwareOptionsPtrOutput) ToDomainServiceSoftwareOptionsPtrOutputWithContext(ctx context.Context) DomainServiceSoftwareOptionsPtrOutput {
	return o
}

func (o DomainServiceSoftwareOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainServiceSoftwareOptions] {
	return pulumix.Output[*DomainServiceSoftwareOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainServiceSoftwareOptionsPtrOutput) Elem() DomainServiceSoftwareOptionsOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) DomainServiceSoftwareOptions {
		if v != nil {
			return *v
		}
		var ret DomainServiceSoftwareOptions
		return ret
	}).(DomainServiceSoftwareOptionsOutput)
}

func (o DomainServiceSoftwareOptionsPtrOutput) AutomatedUpdateDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.AutomatedUpdateDate
	}).(pulumi.StringPtrOutput)
}

func (o DomainServiceSoftwareOptionsPtrOutput) Cancellable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Cancellable
	}).(pulumi.BoolPtrOutput)
}

func (o DomainServiceSoftwareOptionsPtrOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.CurrentVersion
	}).(pulumi.StringPtrOutput)
}

func (o DomainServiceSoftwareOptionsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o DomainServiceSoftwareOptionsPtrOutput) NewVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.NewVersion
	}).(pulumi.StringPtrOutput)
}

func (o DomainServiceSoftwareOptionsPtrOutput) OptionalDeployment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *bool {
		if v == nil {
			return nil
		}
		return v.OptionalDeployment
	}).(pulumi.BoolPtrOutput)
}

func (o DomainServiceSoftwareOptionsPtrOutput) UpdateAvailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UpdateAvailable
	}).(pulumi.BoolPtrOutput)
}

func (o DomainServiceSoftwareOptionsPtrOutput) UpdateStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainServiceSoftwareOptions) *string {
		if v == nil {
			return nil
		}
		return v.UpdateStatus
	}).(pulumi.StringPtrOutput)
}

type DomainSnapshotOptions struct {
	AutomatedSnapshotStartHour *int `pulumi:"automatedSnapshotStartHour"`
}

// DomainSnapshotOptionsInput is an input type that accepts DomainSnapshotOptionsArgs and DomainSnapshotOptionsOutput values.
// You can construct a concrete instance of `DomainSnapshotOptionsInput` via:
//
//	DomainSnapshotOptionsArgs{...}
type DomainSnapshotOptionsInput interface {
	pulumi.Input

	ToDomainSnapshotOptionsOutput() DomainSnapshotOptionsOutput
	ToDomainSnapshotOptionsOutputWithContext(context.Context) DomainSnapshotOptionsOutput
}

type DomainSnapshotOptionsArgs struct {
	AutomatedSnapshotStartHour pulumi.IntPtrInput `pulumi:"automatedSnapshotStartHour"`
}

func (DomainSnapshotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSnapshotOptions)(nil)).Elem()
}

func (i DomainSnapshotOptionsArgs) ToDomainSnapshotOptionsOutput() DomainSnapshotOptionsOutput {
	return i.ToDomainSnapshotOptionsOutputWithContext(context.Background())
}

func (i DomainSnapshotOptionsArgs) ToDomainSnapshotOptionsOutputWithContext(ctx context.Context) DomainSnapshotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSnapshotOptionsOutput)
}

func (i DomainSnapshotOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSnapshotOptions] {
	return pulumix.Output[DomainSnapshotOptions]{
		OutputState: i.ToDomainSnapshotOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSnapshotOptionsArgs) ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput {
	return i.ToDomainSnapshotOptionsPtrOutputWithContext(context.Background())
}

func (i DomainSnapshotOptionsArgs) ToDomainSnapshotOptionsPtrOutputWithContext(ctx context.Context) DomainSnapshotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSnapshotOptionsOutput).ToDomainSnapshotOptionsPtrOutputWithContext(ctx)
}

// DomainSnapshotOptionsPtrInput is an input type that accepts DomainSnapshotOptionsArgs, DomainSnapshotOptionsPtr and DomainSnapshotOptionsPtrOutput values.
// You can construct a concrete instance of `DomainSnapshotOptionsPtrInput` via:
//
//	        DomainSnapshotOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainSnapshotOptionsPtrInput interface {
	pulumi.Input

	ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput
	ToDomainSnapshotOptionsPtrOutputWithContext(context.Context) DomainSnapshotOptionsPtrOutput
}

type domainSnapshotOptionsPtrType DomainSnapshotOptionsArgs

func DomainSnapshotOptionsPtr(v *DomainSnapshotOptionsArgs) DomainSnapshotOptionsPtrInput {
	return (*domainSnapshotOptionsPtrType)(v)
}

func (*domainSnapshotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSnapshotOptions)(nil)).Elem()
}

func (i *domainSnapshotOptionsPtrType) ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput {
	return i.ToDomainSnapshotOptionsPtrOutputWithContext(context.Background())
}

func (i *domainSnapshotOptionsPtrType) ToDomainSnapshotOptionsPtrOutputWithContext(ctx context.Context) DomainSnapshotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSnapshotOptionsPtrOutput)
}

func (i *domainSnapshotOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSnapshotOptions] {
	return pulumix.Output[*DomainSnapshotOptions]{
		OutputState: i.ToDomainSnapshotOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSnapshotOptionsOutput struct{ *pulumi.OutputState }

func (DomainSnapshotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSnapshotOptions)(nil)).Elem()
}

func (o DomainSnapshotOptionsOutput) ToDomainSnapshotOptionsOutput() DomainSnapshotOptionsOutput {
	return o
}

func (o DomainSnapshotOptionsOutput) ToDomainSnapshotOptionsOutputWithContext(ctx context.Context) DomainSnapshotOptionsOutput {
	return o
}

func (o DomainSnapshotOptionsOutput) ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput {
	return o.ToDomainSnapshotOptionsPtrOutputWithContext(context.Background())
}

func (o DomainSnapshotOptionsOutput) ToDomainSnapshotOptionsPtrOutputWithContext(ctx context.Context) DomainSnapshotOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSnapshotOptions) *DomainSnapshotOptions {
		return &v
	}).(DomainSnapshotOptionsPtrOutput)
}

func (o DomainSnapshotOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSnapshotOptions] {
	return pulumix.Output[DomainSnapshotOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainSnapshotOptionsOutput) AutomatedSnapshotStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainSnapshotOptions) *int { return v.AutomatedSnapshotStartHour }).(pulumi.IntPtrOutput)
}

type DomainSnapshotOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainSnapshotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSnapshotOptions)(nil)).Elem()
}

func (o DomainSnapshotOptionsPtrOutput) ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput {
	return o
}

func (o DomainSnapshotOptionsPtrOutput) ToDomainSnapshotOptionsPtrOutputWithContext(ctx context.Context) DomainSnapshotOptionsPtrOutput {
	return o
}

func (o DomainSnapshotOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSnapshotOptions] {
	return pulumix.Output[*DomainSnapshotOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainSnapshotOptionsPtrOutput) Elem() DomainSnapshotOptionsOutput {
	return o.ApplyT(func(v *DomainSnapshotOptions) DomainSnapshotOptions {
		if v != nil {
			return *v
		}
		var ret DomainSnapshotOptions
		return ret
	}).(DomainSnapshotOptionsOutput)
}

func (o DomainSnapshotOptionsPtrOutput) AutomatedSnapshotStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainSnapshotOptions) *int {
		if v == nil {
			return nil
		}
		return v.AutomatedSnapshotStartHour
	}).(pulumi.IntPtrOutput)
}

type DomainSoftwareUpdateOptions struct {
	AutoSoftwareUpdateEnabled *bool `pulumi:"autoSoftwareUpdateEnabled"`
}

// DomainSoftwareUpdateOptionsInput is an input type that accepts DomainSoftwareUpdateOptionsArgs and DomainSoftwareUpdateOptionsOutput values.
// You can construct a concrete instance of `DomainSoftwareUpdateOptionsInput` via:
//
//	DomainSoftwareUpdateOptionsArgs{...}
type DomainSoftwareUpdateOptionsInput interface {
	pulumi.Input

	ToDomainSoftwareUpdateOptionsOutput() DomainSoftwareUpdateOptionsOutput
	ToDomainSoftwareUpdateOptionsOutputWithContext(context.Context) DomainSoftwareUpdateOptionsOutput
}

type DomainSoftwareUpdateOptionsArgs struct {
	AutoSoftwareUpdateEnabled pulumi.BoolPtrInput `pulumi:"autoSoftwareUpdateEnabled"`
}

func (DomainSoftwareUpdateOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSoftwareUpdateOptions)(nil)).Elem()
}

func (i DomainSoftwareUpdateOptionsArgs) ToDomainSoftwareUpdateOptionsOutput() DomainSoftwareUpdateOptionsOutput {
	return i.ToDomainSoftwareUpdateOptionsOutputWithContext(context.Background())
}

func (i DomainSoftwareUpdateOptionsArgs) ToDomainSoftwareUpdateOptionsOutputWithContext(ctx context.Context) DomainSoftwareUpdateOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSoftwareUpdateOptionsOutput)
}

func (i DomainSoftwareUpdateOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSoftwareUpdateOptions] {
	return pulumix.Output[DomainSoftwareUpdateOptions]{
		OutputState: i.ToDomainSoftwareUpdateOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSoftwareUpdateOptionsArgs) ToDomainSoftwareUpdateOptionsPtrOutput() DomainSoftwareUpdateOptionsPtrOutput {
	return i.ToDomainSoftwareUpdateOptionsPtrOutputWithContext(context.Background())
}

func (i DomainSoftwareUpdateOptionsArgs) ToDomainSoftwareUpdateOptionsPtrOutputWithContext(ctx context.Context) DomainSoftwareUpdateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSoftwareUpdateOptionsOutput).ToDomainSoftwareUpdateOptionsPtrOutputWithContext(ctx)
}

// DomainSoftwareUpdateOptionsPtrInput is an input type that accepts DomainSoftwareUpdateOptionsArgs, DomainSoftwareUpdateOptionsPtr and DomainSoftwareUpdateOptionsPtrOutput values.
// You can construct a concrete instance of `DomainSoftwareUpdateOptionsPtrInput` via:
//
//	        DomainSoftwareUpdateOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainSoftwareUpdateOptionsPtrInput interface {
	pulumi.Input

	ToDomainSoftwareUpdateOptionsPtrOutput() DomainSoftwareUpdateOptionsPtrOutput
	ToDomainSoftwareUpdateOptionsPtrOutputWithContext(context.Context) DomainSoftwareUpdateOptionsPtrOutput
}

type domainSoftwareUpdateOptionsPtrType DomainSoftwareUpdateOptionsArgs

func DomainSoftwareUpdateOptionsPtr(v *DomainSoftwareUpdateOptionsArgs) DomainSoftwareUpdateOptionsPtrInput {
	return (*domainSoftwareUpdateOptionsPtrType)(v)
}

func (*domainSoftwareUpdateOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSoftwareUpdateOptions)(nil)).Elem()
}

func (i *domainSoftwareUpdateOptionsPtrType) ToDomainSoftwareUpdateOptionsPtrOutput() DomainSoftwareUpdateOptionsPtrOutput {
	return i.ToDomainSoftwareUpdateOptionsPtrOutputWithContext(context.Background())
}

func (i *domainSoftwareUpdateOptionsPtrType) ToDomainSoftwareUpdateOptionsPtrOutputWithContext(ctx context.Context) DomainSoftwareUpdateOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSoftwareUpdateOptionsPtrOutput)
}

func (i *domainSoftwareUpdateOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSoftwareUpdateOptions] {
	return pulumix.Output[*DomainSoftwareUpdateOptions]{
		OutputState: i.ToDomainSoftwareUpdateOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSoftwareUpdateOptionsOutput struct{ *pulumi.OutputState }

func (DomainSoftwareUpdateOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSoftwareUpdateOptions)(nil)).Elem()
}

func (o DomainSoftwareUpdateOptionsOutput) ToDomainSoftwareUpdateOptionsOutput() DomainSoftwareUpdateOptionsOutput {
	return o
}

func (o DomainSoftwareUpdateOptionsOutput) ToDomainSoftwareUpdateOptionsOutputWithContext(ctx context.Context) DomainSoftwareUpdateOptionsOutput {
	return o
}

func (o DomainSoftwareUpdateOptionsOutput) ToDomainSoftwareUpdateOptionsPtrOutput() DomainSoftwareUpdateOptionsPtrOutput {
	return o.ToDomainSoftwareUpdateOptionsPtrOutputWithContext(context.Background())
}

func (o DomainSoftwareUpdateOptionsOutput) ToDomainSoftwareUpdateOptionsPtrOutputWithContext(ctx context.Context) DomainSoftwareUpdateOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSoftwareUpdateOptions) *DomainSoftwareUpdateOptions {
		return &v
	}).(DomainSoftwareUpdateOptionsPtrOutput)
}

func (o DomainSoftwareUpdateOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSoftwareUpdateOptions] {
	return pulumix.Output[DomainSoftwareUpdateOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainSoftwareUpdateOptionsOutput) AutoSoftwareUpdateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainSoftwareUpdateOptions) *bool { return v.AutoSoftwareUpdateEnabled }).(pulumi.BoolPtrOutput)
}

type DomainSoftwareUpdateOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainSoftwareUpdateOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSoftwareUpdateOptions)(nil)).Elem()
}

func (o DomainSoftwareUpdateOptionsPtrOutput) ToDomainSoftwareUpdateOptionsPtrOutput() DomainSoftwareUpdateOptionsPtrOutput {
	return o
}

func (o DomainSoftwareUpdateOptionsPtrOutput) ToDomainSoftwareUpdateOptionsPtrOutputWithContext(ctx context.Context) DomainSoftwareUpdateOptionsPtrOutput {
	return o
}

func (o DomainSoftwareUpdateOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSoftwareUpdateOptions] {
	return pulumix.Output[*DomainSoftwareUpdateOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainSoftwareUpdateOptionsPtrOutput) Elem() DomainSoftwareUpdateOptionsOutput {
	return o.ApplyT(func(v *DomainSoftwareUpdateOptions) DomainSoftwareUpdateOptions {
		if v != nil {
			return *v
		}
		var ret DomainSoftwareUpdateOptions
		return ret
	}).(DomainSoftwareUpdateOptionsOutput)
}

func (o DomainSoftwareUpdateOptionsPtrOutput) AutoSoftwareUpdateEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainSoftwareUpdateOptions) *bool {
		if v == nil {
			return nil
		}
		return v.AutoSoftwareUpdateEnabled
	}).(pulumi.BoolPtrOutput)
}

type DomainTag struct {
	// The value of the tag.
	Key string `pulumi:"key"`
	// The key of the tag.
	Value string `pulumi:"value"`
}

// DomainTagInput is an input type that accepts DomainTagArgs and DomainTagOutput values.
// You can construct a concrete instance of `DomainTagInput` via:
//
//	DomainTagArgs{...}
type DomainTagInput interface {
	pulumi.Input

	ToDomainTagOutput() DomainTagOutput
	ToDomainTagOutputWithContext(context.Context) DomainTagOutput
}

type DomainTagArgs struct {
	// The value of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The key of the tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DomainTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTag)(nil)).Elem()
}

func (i DomainTagArgs) ToDomainTagOutput() DomainTagOutput {
	return i.ToDomainTagOutputWithContext(context.Background())
}

func (i DomainTagArgs) ToDomainTagOutputWithContext(ctx context.Context) DomainTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTagOutput)
}

func (i DomainTagArgs) ToOutput(ctx context.Context) pulumix.Output[DomainTag] {
	return pulumix.Output[DomainTag]{
		OutputState: i.ToDomainTagOutputWithContext(ctx).OutputState,
	}
}

// DomainTagArrayInput is an input type that accepts DomainTagArray and DomainTagArrayOutput values.
// You can construct a concrete instance of `DomainTagArrayInput` via:
//
//	DomainTagArray{ DomainTagArgs{...} }
type DomainTagArrayInput interface {
	pulumi.Input

	ToDomainTagArrayOutput() DomainTagArrayOutput
	ToDomainTagArrayOutputWithContext(context.Context) DomainTagArrayOutput
}

type DomainTagArray []DomainTagInput

func (DomainTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainTag)(nil)).Elem()
}

func (i DomainTagArray) ToDomainTagArrayOutput() DomainTagArrayOutput {
	return i.ToDomainTagArrayOutputWithContext(context.Background())
}

func (i DomainTagArray) ToDomainTagArrayOutputWithContext(ctx context.Context) DomainTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainTagArrayOutput)
}

func (i DomainTagArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainTag] {
	return pulumix.Output[[]DomainTag]{
		OutputState: i.ToDomainTagArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainTagOutput struct{ *pulumi.OutputState }

func (DomainTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainTag)(nil)).Elem()
}

func (o DomainTagOutput) ToDomainTagOutput() DomainTagOutput {
	return o
}

func (o DomainTagOutput) ToDomainTagOutputWithContext(ctx context.Context) DomainTagOutput {
	return o
}

func (o DomainTagOutput) ToOutput(ctx context.Context) pulumix.Output[DomainTag] {
	return pulumix.Output[DomainTag]{
		OutputState: o.OutputState,
	}
}

// The value of the tag.
func (o DomainTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v DomainTag) string { return v.Key }).(pulumi.StringOutput)
}

// The key of the tag.
func (o DomainTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DomainTag) string { return v.Value }).(pulumi.StringOutput)
}

type DomainTagArrayOutput struct{ *pulumi.OutputState }

func (DomainTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainTag)(nil)).Elem()
}

func (o DomainTagArrayOutput) ToDomainTagArrayOutput() DomainTagArrayOutput {
	return o
}

func (o DomainTagArrayOutput) ToDomainTagArrayOutputWithContext(ctx context.Context) DomainTagArrayOutput {
	return o
}

func (o DomainTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainTag] {
	return pulumix.Output[[]DomainTag]{
		OutputState: o.OutputState,
	}
}

func (o DomainTagArrayOutput) Index(i pulumi.IntInput) DomainTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainTag {
		return vs[0].([]DomainTag)[vs[1].(int)]
	}).(DomainTagOutput)
}

type DomainVpcOptions struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	SubnetIds        []string `pulumi:"subnetIds"`
}

// DomainVpcOptionsInput is an input type that accepts DomainVpcOptionsArgs and DomainVpcOptionsOutput values.
// You can construct a concrete instance of `DomainVpcOptionsInput` via:
//
//	DomainVpcOptionsArgs{...}
type DomainVpcOptionsInput interface {
	pulumi.Input

	ToDomainVpcOptionsOutput() DomainVpcOptionsOutput
	ToDomainVpcOptionsOutputWithContext(context.Context) DomainVpcOptionsOutput
}

type DomainVpcOptionsArgs struct {
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	SubnetIds        pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (DomainVpcOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainVpcOptions)(nil)).Elem()
}

func (i DomainVpcOptionsArgs) ToDomainVpcOptionsOutput() DomainVpcOptionsOutput {
	return i.ToDomainVpcOptionsOutputWithContext(context.Background())
}

func (i DomainVpcOptionsArgs) ToDomainVpcOptionsOutputWithContext(ctx context.Context) DomainVpcOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainVpcOptionsOutput)
}

func (i DomainVpcOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainVpcOptions] {
	return pulumix.Output[DomainVpcOptions]{
		OutputState: i.ToDomainVpcOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainVpcOptionsArgs) ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput {
	return i.ToDomainVpcOptionsPtrOutputWithContext(context.Background())
}

func (i DomainVpcOptionsArgs) ToDomainVpcOptionsPtrOutputWithContext(ctx context.Context) DomainVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainVpcOptionsOutput).ToDomainVpcOptionsPtrOutputWithContext(ctx)
}

// DomainVpcOptionsPtrInput is an input type that accepts DomainVpcOptionsArgs, DomainVpcOptionsPtr and DomainVpcOptionsPtrOutput values.
// You can construct a concrete instance of `DomainVpcOptionsPtrInput` via:
//
//	        DomainVpcOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainVpcOptionsPtrInput interface {
	pulumi.Input

	ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput
	ToDomainVpcOptionsPtrOutputWithContext(context.Context) DomainVpcOptionsPtrOutput
}

type domainVpcOptionsPtrType DomainVpcOptionsArgs

func DomainVpcOptionsPtr(v *DomainVpcOptionsArgs) DomainVpcOptionsPtrInput {
	return (*domainVpcOptionsPtrType)(v)
}

func (*domainVpcOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainVpcOptions)(nil)).Elem()
}

func (i *domainVpcOptionsPtrType) ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput {
	return i.ToDomainVpcOptionsPtrOutputWithContext(context.Background())
}

func (i *domainVpcOptionsPtrType) ToDomainVpcOptionsPtrOutputWithContext(ctx context.Context) DomainVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainVpcOptionsPtrOutput)
}

func (i *domainVpcOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainVpcOptions] {
	return pulumix.Output[*DomainVpcOptions]{
		OutputState: i.ToDomainVpcOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainVpcOptionsOutput struct{ *pulumi.OutputState }

func (DomainVpcOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainVpcOptions)(nil)).Elem()
}

func (o DomainVpcOptionsOutput) ToDomainVpcOptionsOutput() DomainVpcOptionsOutput {
	return o
}

func (o DomainVpcOptionsOutput) ToDomainVpcOptionsOutputWithContext(ctx context.Context) DomainVpcOptionsOutput {
	return o
}

func (o DomainVpcOptionsOutput) ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput {
	return o.ToDomainVpcOptionsPtrOutputWithContext(context.Background())
}

func (o DomainVpcOptionsOutput) ToDomainVpcOptionsPtrOutputWithContext(ctx context.Context) DomainVpcOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainVpcOptions) *DomainVpcOptions {
		return &v
	}).(DomainVpcOptionsPtrOutput)
}

func (o DomainVpcOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainVpcOptions] {
	return pulumix.Output[DomainVpcOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainVpcOptionsOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainVpcOptions) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o DomainVpcOptionsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainVpcOptions) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type DomainVpcOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainVpcOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainVpcOptions)(nil)).Elem()
}

func (o DomainVpcOptionsPtrOutput) ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput {
	return o
}

func (o DomainVpcOptionsPtrOutput) ToDomainVpcOptionsPtrOutputWithContext(ctx context.Context) DomainVpcOptionsPtrOutput {
	return o
}

func (o DomainVpcOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainVpcOptions] {
	return pulumix.Output[*DomainVpcOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainVpcOptionsPtrOutput) Elem() DomainVpcOptionsOutput {
	return o.ApplyT(func(v *DomainVpcOptions) DomainVpcOptions {
		if v != nil {
			return *v
		}
		var ret DomainVpcOptions
		return ret
	}).(DomainVpcOptionsOutput)
}

func (o DomainVpcOptionsPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o DomainVpcOptionsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

type DomainWindowStartTime struct {
	Hours   int `pulumi:"hours"`
	Minutes int `pulumi:"minutes"`
}

// DomainWindowStartTimeInput is an input type that accepts DomainWindowStartTimeArgs and DomainWindowStartTimeOutput values.
// You can construct a concrete instance of `DomainWindowStartTimeInput` via:
//
//	DomainWindowStartTimeArgs{...}
type DomainWindowStartTimeInput interface {
	pulumi.Input

	ToDomainWindowStartTimeOutput() DomainWindowStartTimeOutput
	ToDomainWindowStartTimeOutputWithContext(context.Context) DomainWindowStartTimeOutput
}

type DomainWindowStartTimeArgs struct {
	Hours   pulumi.IntInput `pulumi:"hours"`
	Minutes pulumi.IntInput `pulumi:"minutes"`
}

func (DomainWindowStartTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainWindowStartTime)(nil)).Elem()
}

func (i DomainWindowStartTimeArgs) ToDomainWindowStartTimeOutput() DomainWindowStartTimeOutput {
	return i.ToDomainWindowStartTimeOutputWithContext(context.Background())
}

func (i DomainWindowStartTimeArgs) ToDomainWindowStartTimeOutputWithContext(ctx context.Context) DomainWindowStartTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainWindowStartTimeOutput)
}

func (i DomainWindowStartTimeArgs) ToOutput(ctx context.Context) pulumix.Output[DomainWindowStartTime] {
	return pulumix.Output[DomainWindowStartTime]{
		OutputState: i.ToDomainWindowStartTimeOutputWithContext(ctx).OutputState,
	}
}

func (i DomainWindowStartTimeArgs) ToDomainWindowStartTimePtrOutput() DomainWindowStartTimePtrOutput {
	return i.ToDomainWindowStartTimePtrOutputWithContext(context.Background())
}

func (i DomainWindowStartTimeArgs) ToDomainWindowStartTimePtrOutputWithContext(ctx context.Context) DomainWindowStartTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainWindowStartTimeOutput).ToDomainWindowStartTimePtrOutputWithContext(ctx)
}

// DomainWindowStartTimePtrInput is an input type that accepts DomainWindowStartTimeArgs, DomainWindowStartTimePtr and DomainWindowStartTimePtrOutput values.
// You can construct a concrete instance of `DomainWindowStartTimePtrInput` via:
//
//	        DomainWindowStartTimeArgs{...}
//
//	or:
//
//	        nil
type DomainWindowStartTimePtrInput interface {
	pulumi.Input

	ToDomainWindowStartTimePtrOutput() DomainWindowStartTimePtrOutput
	ToDomainWindowStartTimePtrOutputWithContext(context.Context) DomainWindowStartTimePtrOutput
}

type domainWindowStartTimePtrType DomainWindowStartTimeArgs

func DomainWindowStartTimePtr(v *DomainWindowStartTimeArgs) DomainWindowStartTimePtrInput {
	return (*domainWindowStartTimePtrType)(v)
}

func (*domainWindowStartTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainWindowStartTime)(nil)).Elem()
}

func (i *domainWindowStartTimePtrType) ToDomainWindowStartTimePtrOutput() DomainWindowStartTimePtrOutput {
	return i.ToDomainWindowStartTimePtrOutputWithContext(context.Background())
}

func (i *domainWindowStartTimePtrType) ToDomainWindowStartTimePtrOutputWithContext(ctx context.Context) DomainWindowStartTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainWindowStartTimePtrOutput)
}

func (i *domainWindowStartTimePtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainWindowStartTime] {
	return pulumix.Output[*DomainWindowStartTime]{
		OutputState: i.ToDomainWindowStartTimePtrOutputWithContext(ctx).OutputState,
	}
}

type DomainWindowStartTimeOutput struct{ *pulumi.OutputState }

func (DomainWindowStartTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainWindowStartTime)(nil)).Elem()
}

func (o DomainWindowStartTimeOutput) ToDomainWindowStartTimeOutput() DomainWindowStartTimeOutput {
	return o
}

func (o DomainWindowStartTimeOutput) ToDomainWindowStartTimeOutputWithContext(ctx context.Context) DomainWindowStartTimeOutput {
	return o
}

func (o DomainWindowStartTimeOutput) ToDomainWindowStartTimePtrOutput() DomainWindowStartTimePtrOutput {
	return o.ToDomainWindowStartTimePtrOutputWithContext(context.Background())
}

func (o DomainWindowStartTimeOutput) ToDomainWindowStartTimePtrOutputWithContext(ctx context.Context) DomainWindowStartTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainWindowStartTime) *DomainWindowStartTime {
		return &v
	}).(DomainWindowStartTimePtrOutput)
}

func (o DomainWindowStartTimeOutput) ToOutput(ctx context.Context) pulumix.Output[DomainWindowStartTime] {
	return pulumix.Output[DomainWindowStartTime]{
		OutputState: o.OutputState,
	}
}

func (o DomainWindowStartTimeOutput) Hours() pulumi.IntOutput {
	return o.ApplyT(func(v DomainWindowStartTime) int { return v.Hours }).(pulumi.IntOutput)
}

func (o DomainWindowStartTimeOutput) Minutes() pulumi.IntOutput {
	return o.ApplyT(func(v DomainWindowStartTime) int { return v.Minutes }).(pulumi.IntOutput)
}

type DomainWindowStartTimePtrOutput struct{ *pulumi.OutputState }

func (DomainWindowStartTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainWindowStartTime)(nil)).Elem()
}

func (o DomainWindowStartTimePtrOutput) ToDomainWindowStartTimePtrOutput() DomainWindowStartTimePtrOutput {
	return o
}

func (o DomainWindowStartTimePtrOutput) ToDomainWindowStartTimePtrOutputWithContext(ctx context.Context) DomainWindowStartTimePtrOutput {
	return o
}

func (o DomainWindowStartTimePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainWindowStartTime] {
	return pulumix.Output[*DomainWindowStartTime]{
		OutputState: o.OutputState,
	}
}

func (o DomainWindowStartTimePtrOutput) Elem() DomainWindowStartTimeOutput {
	return o.ApplyT(func(v *DomainWindowStartTime) DomainWindowStartTime {
		if v != nil {
			return *v
		}
		var ret DomainWindowStartTime
		return ret
	}).(DomainWindowStartTimeOutput)
}

func (o DomainWindowStartTimePtrOutput) Hours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainWindowStartTime) *int {
		if v == nil {
			return nil
		}
		return &v.Hours
	}).(pulumi.IntPtrOutput)
}

func (o DomainWindowStartTimePtrOutput) Minutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainWindowStartTime) *int {
		if v == nil {
			return nil
		}
		return &v.Minutes
	}).(pulumi.IntPtrOutput)
}

type DomainZoneAwarenessConfig struct {
	AvailabilityZoneCount *int `pulumi:"availabilityZoneCount"`
}

// DomainZoneAwarenessConfigInput is an input type that accepts DomainZoneAwarenessConfigArgs and DomainZoneAwarenessConfigOutput values.
// You can construct a concrete instance of `DomainZoneAwarenessConfigInput` via:
//
//	DomainZoneAwarenessConfigArgs{...}
type DomainZoneAwarenessConfigInput interface {
	pulumi.Input

	ToDomainZoneAwarenessConfigOutput() DomainZoneAwarenessConfigOutput
	ToDomainZoneAwarenessConfigOutputWithContext(context.Context) DomainZoneAwarenessConfigOutput
}

type DomainZoneAwarenessConfigArgs struct {
	AvailabilityZoneCount pulumi.IntPtrInput `pulumi:"availabilityZoneCount"`
}

func (DomainZoneAwarenessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainZoneAwarenessConfig)(nil)).Elem()
}

func (i DomainZoneAwarenessConfigArgs) ToDomainZoneAwarenessConfigOutput() DomainZoneAwarenessConfigOutput {
	return i.ToDomainZoneAwarenessConfigOutputWithContext(context.Background())
}

func (i DomainZoneAwarenessConfigArgs) ToDomainZoneAwarenessConfigOutputWithContext(ctx context.Context) DomainZoneAwarenessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainZoneAwarenessConfigOutput)
}

func (i DomainZoneAwarenessConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DomainZoneAwarenessConfig] {
	return pulumix.Output[DomainZoneAwarenessConfig]{
		OutputState: i.ToDomainZoneAwarenessConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DomainZoneAwarenessConfigArgs) ToDomainZoneAwarenessConfigPtrOutput() DomainZoneAwarenessConfigPtrOutput {
	return i.ToDomainZoneAwarenessConfigPtrOutputWithContext(context.Background())
}

func (i DomainZoneAwarenessConfigArgs) ToDomainZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) DomainZoneAwarenessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainZoneAwarenessConfigOutput).ToDomainZoneAwarenessConfigPtrOutputWithContext(ctx)
}

// DomainZoneAwarenessConfigPtrInput is an input type that accepts DomainZoneAwarenessConfigArgs, DomainZoneAwarenessConfigPtr and DomainZoneAwarenessConfigPtrOutput values.
// You can construct a concrete instance of `DomainZoneAwarenessConfigPtrInput` via:
//
//	        DomainZoneAwarenessConfigArgs{...}
//
//	or:
//
//	        nil
type DomainZoneAwarenessConfigPtrInput interface {
	pulumi.Input

	ToDomainZoneAwarenessConfigPtrOutput() DomainZoneAwarenessConfigPtrOutput
	ToDomainZoneAwarenessConfigPtrOutputWithContext(context.Context) DomainZoneAwarenessConfigPtrOutput
}

type domainZoneAwarenessConfigPtrType DomainZoneAwarenessConfigArgs

func DomainZoneAwarenessConfigPtr(v *DomainZoneAwarenessConfigArgs) DomainZoneAwarenessConfigPtrInput {
	return (*domainZoneAwarenessConfigPtrType)(v)
}

func (*domainZoneAwarenessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainZoneAwarenessConfig)(nil)).Elem()
}

func (i *domainZoneAwarenessConfigPtrType) ToDomainZoneAwarenessConfigPtrOutput() DomainZoneAwarenessConfigPtrOutput {
	return i.ToDomainZoneAwarenessConfigPtrOutputWithContext(context.Background())
}

func (i *domainZoneAwarenessConfigPtrType) ToDomainZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) DomainZoneAwarenessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainZoneAwarenessConfigPtrOutput)
}

func (i *domainZoneAwarenessConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainZoneAwarenessConfig] {
	return pulumix.Output[*DomainZoneAwarenessConfig]{
		OutputState: i.ToDomainZoneAwarenessConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainZoneAwarenessConfigOutput struct{ *pulumi.OutputState }

func (DomainZoneAwarenessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainZoneAwarenessConfig)(nil)).Elem()
}

func (o DomainZoneAwarenessConfigOutput) ToDomainZoneAwarenessConfigOutput() DomainZoneAwarenessConfigOutput {
	return o
}

func (o DomainZoneAwarenessConfigOutput) ToDomainZoneAwarenessConfigOutputWithContext(ctx context.Context) DomainZoneAwarenessConfigOutput {
	return o
}

func (o DomainZoneAwarenessConfigOutput) ToDomainZoneAwarenessConfigPtrOutput() DomainZoneAwarenessConfigPtrOutput {
	return o.ToDomainZoneAwarenessConfigPtrOutputWithContext(context.Background())
}

func (o DomainZoneAwarenessConfigOutput) ToDomainZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) DomainZoneAwarenessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainZoneAwarenessConfig) *DomainZoneAwarenessConfig {
		return &v
	}).(DomainZoneAwarenessConfigPtrOutput)
}

func (o DomainZoneAwarenessConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DomainZoneAwarenessConfig] {
	return pulumix.Output[DomainZoneAwarenessConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainZoneAwarenessConfigOutput) AvailabilityZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainZoneAwarenessConfig) *int { return v.AvailabilityZoneCount }).(pulumi.IntPtrOutput)
}

type DomainZoneAwarenessConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainZoneAwarenessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainZoneAwarenessConfig)(nil)).Elem()
}

func (o DomainZoneAwarenessConfigPtrOutput) ToDomainZoneAwarenessConfigPtrOutput() DomainZoneAwarenessConfigPtrOutput {
	return o
}

func (o DomainZoneAwarenessConfigPtrOutput) ToDomainZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) DomainZoneAwarenessConfigPtrOutput {
	return o
}

func (o DomainZoneAwarenessConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainZoneAwarenessConfig] {
	return pulumix.Output[*DomainZoneAwarenessConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainZoneAwarenessConfigPtrOutput) Elem() DomainZoneAwarenessConfigOutput {
	return o.ApplyT(func(v *DomainZoneAwarenessConfig) DomainZoneAwarenessConfig {
		if v != nil {
			return *v
		}
		var ret DomainZoneAwarenessConfig
		return ret
	}).(DomainZoneAwarenessConfigOutput)
}

func (o DomainZoneAwarenessConfigPtrOutput) AvailabilityZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainZoneAwarenessConfig) *int {
		if v == nil {
			return nil
		}
		return v.AvailabilityZoneCount
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAdvancedSecurityOptionsInputInput)(nil)).Elem(), DomainAdvancedSecurityOptionsInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAdvancedSecurityOptionsInputPtrInput)(nil)).Elem(), DomainAdvancedSecurityOptionsInputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainClusterConfigInput)(nil)).Elem(), DomainClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainClusterConfigPtrInput)(nil)).Elem(), DomainClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCognitoOptionsInput)(nil)).Elem(), DomainCognitoOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCognitoOptionsPtrInput)(nil)).Elem(), DomainCognitoOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEbsOptionsInput)(nil)).Elem(), DomainEbsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEbsOptionsPtrInput)(nil)).Elem(), DomainEbsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEncryptionAtRestOptionsInput)(nil)).Elem(), DomainEncryptionAtRestOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEncryptionAtRestOptionsPtrInput)(nil)).Elem(), DomainEncryptionAtRestOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEndpointOptionsInput)(nil)).Elem(), DomainEndpointOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEndpointOptionsPtrInput)(nil)).Elem(), DomainEndpointOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIdpInput)(nil)).Elem(), DomainIdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIdpPtrInput)(nil)).Elem(), DomainIdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMasterUserOptionsInput)(nil)).Elem(), DomainMasterUserOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMasterUserOptionsPtrInput)(nil)).Elem(), DomainMasterUserOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNodeToNodeEncryptionOptionsInput)(nil)).Elem(), DomainNodeToNodeEncryptionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNodeToNodeEncryptionOptionsPtrInput)(nil)).Elem(), DomainNodeToNodeEncryptionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOffPeakWindowInput)(nil)).Elem(), DomainOffPeakWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOffPeakWindowPtrInput)(nil)).Elem(), DomainOffPeakWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOffPeakWindowOptionsInput)(nil)).Elem(), DomainOffPeakWindowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainOffPeakWindowOptionsPtrInput)(nil)).Elem(), DomainOffPeakWindowOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSamlOptionsInput)(nil)).Elem(), DomainSamlOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSamlOptionsPtrInput)(nil)).Elem(), DomainSamlOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSnapshotOptionsInput)(nil)).Elem(), DomainSnapshotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSnapshotOptionsPtrInput)(nil)).Elem(), DomainSnapshotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSoftwareUpdateOptionsInput)(nil)).Elem(), DomainSoftwareUpdateOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSoftwareUpdateOptionsPtrInput)(nil)).Elem(), DomainSoftwareUpdateOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainTagInput)(nil)).Elem(), DomainTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainTagArrayInput)(nil)).Elem(), DomainTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainVpcOptionsInput)(nil)).Elem(), DomainVpcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainVpcOptionsPtrInput)(nil)).Elem(), DomainVpcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainWindowStartTimeInput)(nil)).Elem(), DomainWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainWindowStartTimePtrInput)(nil)).Elem(), DomainWindowStartTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainZoneAwarenessConfigInput)(nil)).Elem(), DomainZoneAwarenessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainZoneAwarenessConfigPtrInput)(nil)).Elem(), DomainZoneAwarenessConfigArgs{})
	pulumi.RegisterOutputType(DomainAdvancedSecurityOptionsInputOutput{})
	pulumi.RegisterOutputType(DomainAdvancedSecurityOptionsInputPtrOutput{})
	pulumi.RegisterOutputType(DomainClusterConfigOutput{})
	pulumi.RegisterOutputType(DomainClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainCognitoOptionsOutput{})
	pulumi.RegisterOutputType(DomainCognitoOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainEbsOptionsOutput{})
	pulumi.RegisterOutputType(DomainEbsOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainEncryptionAtRestOptionsOutput{})
	pulumi.RegisterOutputType(DomainEncryptionAtRestOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainEndpointOptionsOutput{})
	pulumi.RegisterOutputType(DomainEndpointOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainIdpOutput{})
	pulumi.RegisterOutputType(DomainIdpPtrOutput{})
	pulumi.RegisterOutputType(DomainMasterUserOptionsOutput{})
	pulumi.RegisterOutputType(DomainMasterUserOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainNodeToNodeEncryptionOptionsOutput{})
	pulumi.RegisterOutputType(DomainNodeToNodeEncryptionOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainOffPeakWindowOutput{})
	pulumi.RegisterOutputType(DomainOffPeakWindowPtrOutput{})
	pulumi.RegisterOutputType(DomainOffPeakWindowOptionsOutput{})
	pulumi.RegisterOutputType(DomainOffPeakWindowOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainSamlOptionsOutput{})
	pulumi.RegisterOutputType(DomainSamlOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainServiceSoftwareOptionsOutput{})
	pulumi.RegisterOutputType(DomainServiceSoftwareOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainSnapshotOptionsOutput{})
	pulumi.RegisterOutputType(DomainSnapshotOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainSoftwareUpdateOptionsOutput{})
	pulumi.RegisterOutputType(DomainSoftwareUpdateOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainTagOutput{})
	pulumi.RegisterOutputType(DomainTagArrayOutput{})
	pulumi.RegisterOutputType(DomainVpcOptionsOutput{})
	pulumi.RegisterOutputType(DomainVpcOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainWindowStartTimeOutput{})
	pulumi.RegisterOutputType(DomainWindowStartTimePtrOutput{})
	pulumi.RegisterOutputType(DomainZoneAwarenessConfigOutput{})
	pulumi.RegisterOutputType(DomainZoneAwarenessConfigPtrOutput{})
}
