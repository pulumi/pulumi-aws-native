// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearchservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Amazon OpenSearchService application resource
func LookupApplication(ctx *pulumi.Context, args *LookupApplicationArgs, opts ...pulumi.InvokeOption) (*LookupApplicationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupApplicationResult
	err := ctx.Invoke("aws-native:opensearchservice:getApplication", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupApplicationArgs struct {
	// The name of the application.
	Name string `pulumi:"name"`
}

type LookupApplicationResult struct {
	// List of application configurations.
	AppConfigs []ApplicationAppConfig `pulumi:"appConfigs"`
	// Amazon Resource Name (ARN) format.
	Arn *string `pulumi:"arn"`
	// List of data sources.
	DataSources []ApplicationDataSource `pulumi:"dataSources"`
	// The endpoint for the application.
	Endpoint *string `pulumi:"endpoint"`
	// Options for configuring IAM Identity Center
	IamIdentityCenterOptions *IamIdentityCenterOptionsProperties `pulumi:"iamIdentityCenterOptions"`
	// The identifier of the application.
	Id *string `pulumi:"id"`
	// An arbitrary set of tags (key-value pairs) for this application.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupApplicationOutput(ctx *pulumi.Context, args LookupApplicationOutputArgs, opts ...pulumi.InvokeOption) LookupApplicationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupApplicationResultOutput, error) {
			args := v.(LookupApplicationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:opensearchservice:getApplication", args, LookupApplicationResultOutput{}, options).(LookupApplicationResultOutput), nil
		}).(LookupApplicationResultOutput)
}

type LookupApplicationOutputArgs struct {
	// The name of the application.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupApplicationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationArgs)(nil)).Elem()
}

type LookupApplicationResultOutput struct{ *pulumi.OutputState }

func (LookupApplicationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupApplicationResult)(nil)).Elem()
}

func (o LookupApplicationResultOutput) ToLookupApplicationResultOutput() LookupApplicationResultOutput {
	return o
}

func (o LookupApplicationResultOutput) ToLookupApplicationResultOutputWithContext(ctx context.Context) LookupApplicationResultOutput {
	return o
}

// List of application configurations.
func (o LookupApplicationResultOutput) AppConfigs() ApplicationAppConfigArrayOutput {
	return o.ApplyT(func(v LookupApplicationResult) []ApplicationAppConfig { return v.AppConfigs }).(ApplicationAppConfigArrayOutput)
}

// Amazon Resource Name (ARN) format.
func (o LookupApplicationResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// List of data sources.
func (o LookupApplicationResultOutput) DataSources() ApplicationDataSourceArrayOutput {
	return o.ApplyT(func(v LookupApplicationResult) []ApplicationDataSource { return v.DataSources }).(ApplicationDataSourceArrayOutput)
}

// The endpoint for the application.
func (o LookupApplicationResultOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// Options for configuring IAM Identity Center
func (o LookupApplicationResultOutput) IamIdentityCenterOptions() IamIdentityCenterOptionsPropertiesPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *IamIdentityCenterOptionsProperties { return v.IamIdentityCenterOptions }).(IamIdentityCenterOptionsPropertiesPtrOutput)
}

// The identifier of the application.
func (o LookupApplicationResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupApplicationResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An arbitrary set of tags (key-value pairs) for this application.
func (o LookupApplicationResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupApplicationResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupApplicationResultOutput{})
}
