// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearchservice

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An example resource schema demonstrating some basic constructs and validation rules.
func LookupDomain(ctx *pulumi.Context, args *LookupDomainArgs, opts ...pulumi.InvokeOption) (*LookupDomainResult, error) {
	var rv LookupDomainResult
	err := ctx.Invoke("aws-native:opensearchservice:getDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDomainArgs struct {
	DomainName string `pulumi:"domainName"`
}

type LookupDomainResult struct {
	AccessPolicies              interface{}                        `pulumi:"accessPolicies"`
	AdvancedOptions             interface{}                        `pulumi:"advancedOptions"`
	Arn                         *string                            `pulumi:"arn"`
	ClusterConfig               *DomainClusterConfig               `pulumi:"clusterConfig"`
	CognitoOptions              *DomainCognitoOptions              `pulumi:"cognitoOptions"`
	DomainArn                   *string                            `pulumi:"domainArn"`
	DomainEndpoint              *string                            `pulumi:"domainEndpoint"`
	DomainEndpointOptions       *DomainEndpointOptions             `pulumi:"domainEndpointOptions"`
	DomainEndpoints             interface{}                        `pulumi:"domainEndpoints"`
	EBSOptions                  *DomainEBSOptions                  `pulumi:"eBSOptions"`
	EncryptionAtRestOptions     *DomainEncryptionAtRestOptions     `pulumi:"encryptionAtRestOptions"`
	EngineVersion               *string                            `pulumi:"engineVersion"`
	Id                          *string                            `pulumi:"id"`
	LogPublishingOptions        interface{}                        `pulumi:"logPublishingOptions"`
	NodeToNodeEncryptionOptions *DomainNodeToNodeEncryptionOptions `pulumi:"nodeToNodeEncryptionOptions"`
	ServiceSoftwareOptions      *DomainServiceSoftwareOptions      `pulumi:"serviceSoftwareOptions"`
	SnapshotOptions             *DomainSnapshotOptions             `pulumi:"snapshotOptions"`
	// An arbitrary set of tags (key-value pairs) for this Domain.
	Tags       []DomainTag       `pulumi:"tags"`
	VPCOptions *DomainVPCOptions `pulumi:"vPCOptions"`
}

func LookupDomainOutput(ctx *pulumi.Context, args LookupDomainOutputArgs, opts ...pulumi.InvokeOption) LookupDomainResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainResult, error) {
			args := v.(LookupDomainArgs)
			r, err := LookupDomain(ctx, &args, opts...)
			var s LookupDomainResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainResultOutput)
}

type LookupDomainOutputArgs struct {
	DomainName pulumi.StringInput `pulumi:"domainName"`
}

func (LookupDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainArgs)(nil)).Elem()
}

type LookupDomainResultOutput struct{ *pulumi.OutputState }

func (LookupDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainResult)(nil)).Elem()
}

func (o LookupDomainResultOutput) ToLookupDomainResultOutput() LookupDomainResultOutput {
	return o
}

func (o LookupDomainResultOutput) ToLookupDomainResultOutputWithContext(ctx context.Context) LookupDomainResultOutput {
	return o
}

func (o LookupDomainResultOutput) AccessPolicies() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupDomainResult) interface{} { return v.AccessPolicies }).(pulumi.AnyOutput)
}

func (o LookupDomainResultOutput) AdvancedOptions() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupDomainResult) interface{} { return v.AdvancedOptions }).(pulumi.AnyOutput)
}

func (o LookupDomainResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupDomainResultOutput) ClusterConfig() DomainClusterConfigPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *DomainClusterConfig { return v.ClusterConfig }).(DomainClusterConfigPtrOutput)
}

func (o LookupDomainResultOutput) CognitoOptions() DomainCognitoOptionsPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *DomainCognitoOptions { return v.CognitoOptions }).(DomainCognitoOptionsPtrOutput)
}

func (o LookupDomainResultOutput) DomainArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.DomainArn }).(pulumi.StringPtrOutput)
}

func (o LookupDomainResultOutput) DomainEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.DomainEndpoint }).(pulumi.StringPtrOutput)
}

func (o LookupDomainResultOutput) DomainEndpointOptions() DomainEndpointOptionsPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *DomainEndpointOptions { return v.DomainEndpointOptions }).(DomainEndpointOptionsPtrOutput)
}

func (o LookupDomainResultOutput) DomainEndpoints() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupDomainResult) interface{} { return v.DomainEndpoints }).(pulumi.AnyOutput)
}

func (o LookupDomainResultOutput) EBSOptions() DomainEBSOptionsPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *DomainEBSOptions { return v.EBSOptions }).(DomainEBSOptionsPtrOutput)
}

func (o LookupDomainResultOutput) EncryptionAtRestOptions() DomainEncryptionAtRestOptionsPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *DomainEncryptionAtRestOptions { return v.EncryptionAtRestOptions }).(DomainEncryptionAtRestOptionsPtrOutput)
}

func (o LookupDomainResultOutput) EngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.EngineVersion }).(pulumi.StringPtrOutput)
}

func (o LookupDomainResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupDomainResultOutput) LogPublishingOptions() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupDomainResult) interface{} { return v.LogPublishingOptions }).(pulumi.AnyOutput)
}

func (o LookupDomainResultOutput) NodeToNodeEncryptionOptions() DomainNodeToNodeEncryptionOptionsPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *DomainNodeToNodeEncryptionOptions { return v.NodeToNodeEncryptionOptions }).(DomainNodeToNodeEncryptionOptionsPtrOutput)
}

func (o LookupDomainResultOutput) ServiceSoftwareOptions() DomainServiceSoftwareOptionsPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *DomainServiceSoftwareOptions { return v.ServiceSoftwareOptions }).(DomainServiceSoftwareOptionsPtrOutput)
}

func (o LookupDomainResultOutput) SnapshotOptions() DomainSnapshotOptionsPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *DomainSnapshotOptions { return v.SnapshotOptions }).(DomainSnapshotOptionsPtrOutput)
}

// An arbitrary set of tags (key-value pairs) for this Domain.
func (o LookupDomainResultOutput) Tags() DomainTagArrayOutput {
	return o.ApplyT(func(v LookupDomainResult) []DomainTag { return v.Tags }).(DomainTagArrayOutput)
}

func (o LookupDomainResultOutput) VPCOptions() DomainVPCOptionsPtrOutput {
	return o.ApplyT(func(v LookupDomainResult) *DomainVPCOptions { return v.VPCOptions }).(DomainVPCOptionsPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainResultOutput{})
}
