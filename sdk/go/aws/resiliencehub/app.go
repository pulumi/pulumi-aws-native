// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package resiliencehub

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type Definition for AWS::ResilienceHub::App.
type App struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the App.
	AppArn pulumi.StringOutput `pulumi:"appArn"`
	// Assessment execution schedule.
	AppAssessmentSchedule AppAssessmentSchedulePtrOutput `pulumi:"appAssessmentSchedule"`
	// A string containing full ResilienceHub app template body.
	AppTemplateBody pulumi.StringOutput `pulumi:"appTemplateBody"`
	// App description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Indicates if compliance drifts (deviations) were detected while running an assessment for your application.
	DriftStatus AppDriftStatusOutput `pulumi:"driftStatus"`
	// The list of events you would like to subscribe and get notification for.
	EventSubscriptions AppEventSubscriptionArrayOutput `pulumi:"eventSubscriptions"`
	// Name of the app.
	Name pulumi.StringOutput `pulumi:"name"`
	// Defines the roles and credentials that AWS Resilience Hub would use while creating the application, importing its resources, and running an assessment.
	PermissionModel AppPermissionModelPtrOutput `pulumi:"permissionModel"`
	// Amazon Resource Name (ARN) of the Regulatory Policy.
	RegulatoryPolicyArn pulumi.StringPtrOutput `pulumi:"regulatoryPolicyArn"`
	// Amazon Resource Name (ARN) of the Resiliency Policy.
	ResiliencyPolicyArn pulumi.StringPtrOutput `pulumi:"resiliencyPolicyArn"`
	// An array of ResourceMapping objects.
	ResourceMappings AppResourceMappingArrayOutput `pulumi:"resourceMappings"`
	// Tags assigned to the resource. A tag is a label that you assign to an AWS resource. Each tag consists of a key/value pair.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
}

// NewApp registers a new resource with the given unique name, arguments, and options.
func NewApp(ctx *pulumi.Context,
	name string, args *AppArgs, opts ...pulumi.ResourceOption) (*App, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppTemplateBody == nil {
		return nil, errors.New("invalid value for required argument 'AppTemplateBody'")
	}
	if args.ResourceMappings == nil {
		return nil, errors.New("invalid value for required argument 'ResourceMappings'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource App
	err := ctx.RegisterResource("aws-native:resiliencehub:App", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApp gets an existing App resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppState, opts ...pulumi.ResourceOption) (*App, error) {
	var resource App
	err := ctx.ReadResource("aws-native:resiliencehub:App", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering App resources.
type appState struct {
}

type AppState struct {
}

func (AppState) ElementType() reflect.Type {
	return reflect.TypeOf((*appState)(nil)).Elem()
}

type appArgs struct {
	// Assessment execution schedule.
	AppAssessmentSchedule *AppAssessmentSchedule `pulumi:"appAssessmentSchedule"`
	// A string containing full ResilienceHub app template body.
	AppTemplateBody string `pulumi:"appTemplateBody"`
	// App description.
	Description *string `pulumi:"description"`
	// The list of events you would like to subscribe and get notification for.
	EventSubscriptions []AppEventSubscription `pulumi:"eventSubscriptions"`
	// Name of the app.
	Name *string `pulumi:"name"`
	// Defines the roles and credentials that AWS Resilience Hub would use while creating the application, importing its resources, and running an assessment.
	PermissionModel *AppPermissionModel `pulumi:"permissionModel"`
	// Amazon Resource Name (ARN) of the Regulatory Policy.
	RegulatoryPolicyArn *string `pulumi:"regulatoryPolicyArn"`
	// Amazon Resource Name (ARN) of the Resiliency Policy.
	ResiliencyPolicyArn *string `pulumi:"resiliencyPolicyArn"`
	// An array of ResourceMapping objects.
	ResourceMappings []AppResourceMapping `pulumi:"resourceMappings"`
	// Tags assigned to the resource. A tag is a label that you assign to an AWS resource. Each tag consists of a key/value pair.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a App resource.
type AppArgs struct {
	// Assessment execution schedule.
	AppAssessmentSchedule AppAssessmentSchedulePtrInput
	// A string containing full ResilienceHub app template body.
	AppTemplateBody pulumi.StringInput
	// App description.
	Description pulumi.StringPtrInput
	// The list of events you would like to subscribe and get notification for.
	EventSubscriptions AppEventSubscriptionArrayInput
	// Name of the app.
	Name pulumi.StringPtrInput
	// Defines the roles and credentials that AWS Resilience Hub would use while creating the application, importing its resources, and running an assessment.
	PermissionModel AppPermissionModelPtrInput
	// Amazon Resource Name (ARN) of the Regulatory Policy.
	RegulatoryPolicyArn pulumi.StringPtrInput
	// Amazon Resource Name (ARN) of the Resiliency Policy.
	ResiliencyPolicyArn pulumi.StringPtrInput
	// An array of ResourceMapping objects.
	ResourceMappings AppResourceMappingArrayInput
	// Tags assigned to the resource. A tag is a label that you assign to an AWS resource. Each tag consists of a key/value pair.
	Tags pulumi.StringMapInput
}

func (AppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appArgs)(nil)).Elem()
}

type AppInput interface {
	pulumi.Input

	ToAppOutput() AppOutput
	ToAppOutputWithContext(ctx context.Context) AppOutput
}

func (*App) ElementType() reflect.Type {
	return reflect.TypeOf((**App)(nil)).Elem()
}

func (i *App) ToAppOutput() AppOutput {
	return i.ToAppOutputWithContext(context.Background())
}

func (i *App) ToAppOutputWithContext(ctx context.Context) AppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppOutput)
}

type AppOutput struct{ *pulumi.OutputState }

func (AppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**App)(nil)).Elem()
}

func (o AppOutput) ToAppOutput() AppOutput {
	return o
}

func (o AppOutput) ToAppOutputWithContext(ctx context.Context) AppOutput {
	return o
}

// Amazon Resource Name (ARN) of the App.
func (o AppOutput) AppArn() pulumi.StringOutput {
	return o.ApplyT(func(v *App) pulumi.StringOutput { return v.AppArn }).(pulumi.StringOutput)
}

// Assessment execution schedule.
func (o AppOutput) AppAssessmentSchedule() AppAssessmentSchedulePtrOutput {
	return o.ApplyT(func(v *App) AppAssessmentSchedulePtrOutput { return v.AppAssessmentSchedule }).(AppAssessmentSchedulePtrOutput)
}

// A string containing full ResilienceHub app template body.
func (o AppOutput) AppTemplateBody() pulumi.StringOutput {
	return o.ApplyT(func(v *App) pulumi.StringOutput { return v.AppTemplateBody }).(pulumi.StringOutput)
}

// App description.
func (o AppOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Indicates if compliance drifts (deviations) were detected while running an assessment for your application.
func (o AppOutput) DriftStatus() AppDriftStatusOutput {
	return o.ApplyT(func(v *App) AppDriftStatusOutput { return v.DriftStatus }).(AppDriftStatusOutput)
}

// The list of events you would like to subscribe and get notification for.
func (o AppOutput) EventSubscriptions() AppEventSubscriptionArrayOutput {
	return o.ApplyT(func(v *App) AppEventSubscriptionArrayOutput { return v.EventSubscriptions }).(AppEventSubscriptionArrayOutput)
}

// Name of the app.
func (o AppOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *App) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Defines the roles and credentials that AWS Resilience Hub would use while creating the application, importing its resources, and running an assessment.
func (o AppOutput) PermissionModel() AppPermissionModelPtrOutput {
	return o.ApplyT(func(v *App) AppPermissionModelPtrOutput { return v.PermissionModel }).(AppPermissionModelPtrOutput)
}

// Amazon Resource Name (ARN) of the Regulatory Policy.
func (o AppOutput) RegulatoryPolicyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) pulumi.StringPtrOutput { return v.RegulatoryPolicyArn }).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the Resiliency Policy.
func (o AppOutput) ResiliencyPolicyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *App) pulumi.StringPtrOutput { return v.ResiliencyPolicyArn }).(pulumi.StringPtrOutput)
}

// An array of ResourceMapping objects.
func (o AppOutput) ResourceMappings() AppResourceMappingArrayOutput {
	return o.ApplyT(func(v *App) AppResourceMappingArrayOutput { return v.ResourceMappings }).(AppResourceMappingArrayOutput)
}

// Tags assigned to the resource. A tag is a label that you assign to an AWS resource. Each tag consists of a key/value pair.
func (o AppOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *App) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppInput)(nil)).Elem(), &App{})
	pulumi.RegisterOutputType(AppOutput{})
}
