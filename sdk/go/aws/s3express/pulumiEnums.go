// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3express

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Specifies the number of Avilability Zone that's used for redundancy for the bucket.
type DirectoryBucketDataRedundancy string

const (
	DirectoryBucketDataRedundancySingleAvailabilityZone = DirectoryBucketDataRedundancy("SingleAvailabilityZone")
)

func (DirectoryBucketDataRedundancy) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketDataRedundancy)(nil)).Elem()
}

func (e DirectoryBucketDataRedundancy) ToDirectoryBucketDataRedundancyOutput() DirectoryBucketDataRedundancyOutput {
	return pulumi.ToOutput(e).(DirectoryBucketDataRedundancyOutput)
}

func (e DirectoryBucketDataRedundancy) ToDirectoryBucketDataRedundancyOutputWithContext(ctx context.Context) DirectoryBucketDataRedundancyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DirectoryBucketDataRedundancyOutput)
}

func (e DirectoryBucketDataRedundancy) ToDirectoryBucketDataRedundancyPtrOutput() DirectoryBucketDataRedundancyPtrOutput {
	return e.ToDirectoryBucketDataRedundancyPtrOutputWithContext(context.Background())
}

func (e DirectoryBucketDataRedundancy) ToDirectoryBucketDataRedundancyPtrOutputWithContext(ctx context.Context) DirectoryBucketDataRedundancyPtrOutput {
	return DirectoryBucketDataRedundancy(e).ToDirectoryBucketDataRedundancyOutputWithContext(ctx).ToDirectoryBucketDataRedundancyPtrOutputWithContext(ctx)
}

func (e DirectoryBucketDataRedundancy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DirectoryBucketDataRedundancy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DirectoryBucketDataRedundancy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DirectoryBucketDataRedundancy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DirectoryBucketDataRedundancyOutput struct{ *pulumi.OutputState }

func (DirectoryBucketDataRedundancyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketDataRedundancy)(nil)).Elem()
}

func (o DirectoryBucketDataRedundancyOutput) ToDirectoryBucketDataRedundancyOutput() DirectoryBucketDataRedundancyOutput {
	return o
}

func (o DirectoryBucketDataRedundancyOutput) ToDirectoryBucketDataRedundancyOutputWithContext(ctx context.Context) DirectoryBucketDataRedundancyOutput {
	return o
}

func (o DirectoryBucketDataRedundancyOutput) ToDirectoryBucketDataRedundancyPtrOutput() DirectoryBucketDataRedundancyPtrOutput {
	return o.ToDirectoryBucketDataRedundancyPtrOutputWithContext(context.Background())
}

func (o DirectoryBucketDataRedundancyOutput) ToDirectoryBucketDataRedundancyPtrOutputWithContext(ctx context.Context) DirectoryBucketDataRedundancyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryBucketDataRedundancy) *DirectoryBucketDataRedundancy {
		return &v
	}).(DirectoryBucketDataRedundancyPtrOutput)
}

func (o DirectoryBucketDataRedundancyOutput) ToOutput(ctx context.Context) pulumix.Output[DirectoryBucketDataRedundancy] {
	return pulumix.Output[DirectoryBucketDataRedundancy]{
		OutputState: o.OutputState,
	}
}

func (o DirectoryBucketDataRedundancyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DirectoryBucketDataRedundancyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DirectoryBucketDataRedundancy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DirectoryBucketDataRedundancyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DirectoryBucketDataRedundancyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DirectoryBucketDataRedundancy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DirectoryBucketDataRedundancyPtrOutput struct{ *pulumi.OutputState }

func (DirectoryBucketDataRedundancyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketDataRedundancy)(nil)).Elem()
}

func (o DirectoryBucketDataRedundancyPtrOutput) ToDirectoryBucketDataRedundancyPtrOutput() DirectoryBucketDataRedundancyPtrOutput {
	return o
}

func (o DirectoryBucketDataRedundancyPtrOutput) ToDirectoryBucketDataRedundancyPtrOutputWithContext(ctx context.Context) DirectoryBucketDataRedundancyPtrOutput {
	return o
}

func (o DirectoryBucketDataRedundancyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DirectoryBucketDataRedundancy] {
	return pulumix.Output[*DirectoryBucketDataRedundancy]{
		OutputState: o.OutputState,
	}
}

func (o DirectoryBucketDataRedundancyPtrOutput) Elem() DirectoryBucketDataRedundancyOutput {
	return o.ApplyT(func(v *DirectoryBucketDataRedundancy) DirectoryBucketDataRedundancy {
		if v != nil {
			return *v
		}
		var ret DirectoryBucketDataRedundancy
		return ret
	}).(DirectoryBucketDataRedundancyOutput)
}

func (o DirectoryBucketDataRedundancyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DirectoryBucketDataRedundancyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DirectoryBucketDataRedundancy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DirectoryBucketDataRedundancyInput is an input type that accepts DirectoryBucketDataRedundancyArgs and DirectoryBucketDataRedundancyOutput values.
// You can construct a concrete instance of `DirectoryBucketDataRedundancyInput` via:
//
//	DirectoryBucketDataRedundancyArgs{...}
type DirectoryBucketDataRedundancyInput interface {
	pulumi.Input

	ToDirectoryBucketDataRedundancyOutput() DirectoryBucketDataRedundancyOutput
	ToDirectoryBucketDataRedundancyOutputWithContext(context.Context) DirectoryBucketDataRedundancyOutput
}

var directoryBucketDataRedundancyPtrType = reflect.TypeOf((**DirectoryBucketDataRedundancy)(nil)).Elem()

type DirectoryBucketDataRedundancyPtrInput interface {
	pulumi.Input

	ToDirectoryBucketDataRedundancyPtrOutput() DirectoryBucketDataRedundancyPtrOutput
	ToDirectoryBucketDataRedundancyPtrOutputWithContext(context.Context) DirectoryBucketDataRedundancyPtrOutput
}

type directoryBucketDataRedundancyPtr string

func DirectoryBucketDataRedundancyPtr(v string) DirectoryBucketDataRedundancyPtrInput {
	return (*directoryBucketDataRedundancyPtr)(&v)
}

func (*directoryBucketDataRedundancyPtr) ElementType() reflect.Type {
	return directoryBucketDataRedundancyPtrType
}

func (in *directoryBucketDataRedundancyPtr) ToDirectoryBucketDataRedundancyPtrOutput() DirectoryBucketDataRedundancyPtrOutput {
	return pulumi.ToOutput(in).(DirectoryBucketDataRedundancyPtrOutput)
}

func (in *directoryBucketDataRedundancyPtr) ToDirectoryBucketDataRedundancyPtrOutputWithContext(ctx context.Context) DirectoryBucketDataRedundancyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DirectoryBucketDataRedundancyPtrOutput)
}

func (in *directoryBucketDataRedundancyPtr) ToOutput(ctx context.Context) pulumix.Output[*DirectoryBucketDataRedundancy] {
	return pulumix.Output[*DirectoryBucketDataRedundancy]{
		OutputState: in.ToDirectoryBucketDataRedundancyPtrOutputWithContext(ctx).OutputState,
	}
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketDataRedundancyInput)(nil)).Elem(), DirectoryBucketDataRedundancy("SingleAvailabilityZone"))
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketDataRedundancyPtrInput)(nil)).Elem(), DirectoryBucketDataRedundancy("SingleAvailabilityZone"))
	pulumi.RegisterOutputType(DirectoryBucketDataRedundancyOutput{})
	pulumi.RegisterOutputType(DirectoryBucketDataRedundancyPtrOutput{})
}
