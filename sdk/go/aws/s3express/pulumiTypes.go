// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3express

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload.
type DirectoryBucketAbortIncompleteMultipartUpload struct {
	// Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.
	DaysAfterInitiation int `pulumi:"daysAfterInitiation"`
}

// DirectoryBucketAbortIncompleteMultipartUploadInput is an input type that accepts DirectoryBucketAbortIncompleteMultipartUploadArgs and DirectoryBucketAbortIncompleteMultipartUploadOutput values.
// You can construct a concrete instance of `DirectoryBucketAbortIncompleteMultipartUploadInput` via:
//
//	DirectoryBucketAbortIncompleteMultipartUploadArgs{...}
type DirectoryBucketAbortIncompleteMultipartUploadInput interface {
	pulumi.Input

	ToDirectoryBucketAbortIncompleteMultipartUploadOutput() DirectoryBucketAbortIncompleteMultipartUploadOutput
	ToDirectoryBucketAbortIncompleteMultipartUploadOutputWithContext(context.Context) DirectoryBucketAbortIncompleteMultipartUploadOutput
}

// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload.
type DirectoryBucketAbortIncompleteMultipartUploadArgs struct {
	// Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.
	DaysAfterInitiation pulumi.IntInput `pulumi:"daysAfterInitiation"`
}

func (DirectoryBucketAbortIncompleteMultipartUploadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i DirectoryBucketAbortIncompleteMultipartUploadArgs) ToDirectoryBucketAbortIncompleteMultipartUploadOutput() DirectoryBucketAbortIncompleteMultipartUploadOutput {
	return i.ToDirectoryBucketAbortIncompleteMultipartUploadOutputWithContext(context.Background())
}

func (i DirectoryBucketAbortIncompleteMultipartUploadArgs) ToDirectoryBucketAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) DirectoryBucketAbortIncompleteMultipartUploadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketAbortIncompleteMultipartUploadOutput)
}

func (i DirectoryBucketAbortIncompleteMultipartUploadArgs) ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutput() DirectoryBucketAbortIncompleteMultipartUploadPtrOutput {
	return i.ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (i DirectoryBucketAbortIncompleteMultipartUploadArgs) ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) DirectoryBucketAbortIncompleteMultipartUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketAbortIncompleteMultipartUploadOutput).ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx)
}

// DirectoryBucketAbortIncompleteMultipartUploadPtrInput is an input type that accepts DirectoryBucketAbortIncompleteMultipartUploadArgs, DirectoryBucketAbortIncompleteMultipartUploadPtr and DirectoryBucketAbortIncompleteMultipartUploadPtrOutput values.
// You can construct a concrete instance of `DirectoryBucketAbortIncompleteMultipartUploadPtrInput` via:
//
//	        DirectoryBucketAbortIncompleteMultipartUploadArgs{...}
//
//	or:
//
//	        nil
type DirectoryBucketAbortIncompleteMultipartUploadPtrInput interface {
	pulumi.Input

	ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutput() DirectoryBucketAbortIncompleteMultipartUploadPtrOutput
	ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutputWithContext(context.Context) DirectoryBucketAbortIncompleteMultipartUploadPtrOutput
}

type directoryBucketAbortIncompleteMultipartUploadPtrType DirectoryBucketAbortIncompleteMultipartUploadArgs

func DirectoryBucketAbortIncompleteMultipartUploadPtr(v *DirectoryBucketAbortIncompleteMultipartUploadArgs) DirectoryBucketAbortIncompleteMultipartUploadPtrInput {
	return (*directoryBucketAbortIncompleteMultipartUploadPtrType)(v)
}

func (*directoryBucketAbortIncompleteMultipartUploadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i *directoryBucketAbortIncompleteMultipartUploadPtrType) ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutput() DirectoryBucketAbortIncompleteMultipartUploadPtrOutput {
	return i.ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (i *directoryBucketAbortIncompleteMultipartUploadPtrType) ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) DirectoryBucketAbortIncompleteMultipartUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketAbortIncompleteMultipartUploadPtrOutput)
}

// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload.
type DirectoryBucketAbortIncompleteMultipartUploadOutput struct{ *pulumi.OutputState }

func (DirectoryBucketAbortIncompleteMultipartUploadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o DirectoryBucketAbortIncompleteMultipartUploadOutput) ToDirectoryBucketAbortIncompleteMultipartUploadOutput() DirectoryBucketAbortIncompleteMultipartUploadOutput {
	return o
}

func (o DirectoryBucketAbortIncompleteMultipartUploadOutput) ToDirectoryBucketAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) DirectoryBucketAbortIncompleteMultipartUploadOutput {
	return o
}

func (o DirectoryBucketAbortIncompleteMultipartUploadOutput) ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutput() DirectoryBucketAbortIncompleteMultipartUploadPtrOutput {
	return o.ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (o DirectoryBucketAbortIncompleteMultipartUploadOutput) ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) DirectoryBucketAbortIncompleteMultipartUploadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryBucketAbortIncompleteMultipartUpload) *DirectoryBucketAbortIncompleteMultipartUpload {
		return &v
	}).(DirectoryBucketAbortIncompleteMultipartUploadPtrOutput)
}

// Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.
func (o DirectoryBucketAbortIncompleteMultipartUploadOutput) DaysAfterInitiation() pulumi.IntOutput {
	return o.ApplyT(func(v DirectoryBucketAbortIncompleteMultipartUpload) int { return v.DaysAfterInitiation }).(pulumi.IntOutput)
}

type DirectoryBucketAbortIncompleteMultipartUploadPtrOutput struct{ *pulumi.OutputState }

func (DirectoryBucketAbortIncompleteMultipartUploadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o DirectoryBucketAbortIncompleteMultipartUploadPtrOutput) ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutput() DirectoryBucketAbortIncompleteMultipartUploadPtrOutput {
	return o
}

func (o DirectoryBucketAbortIncompleteMultipartUploadPtrOutput) ToDirectoryBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) DirectoryBucketAbortIncompleteMultipartUploadPtrOutput {
	return o
}

func (o DirectoryBucketAbortIncompleteMultipartUploadPtrOutput) Elem() DirectoryBucketAbortIncompleteMultipartUploadOutput {
	return o.ApplyT(func(v *DirectoryBucketAbortIncompleteMultipartUpload) DirectoryBucketAbortIncompleteMultipartUpload {
		if v != nil {
			return *v
		}
		var ret DirectoryBucketAbortIncompleteMultipartUpload
		return ret
	}).(DirectoryBucketAbortIncompleteMultipartUploadOutput)
}

// Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.
func (o DirectoryBucketAbortIncompleteMultipartUploadPtrOutput) DaysAfterInitiation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectoryBucketAbortIncompleteMultipartUpload) *int {
		if v == nil {
			return nil
		}
		return &v.DaysAfterInitiation
	}).(pulumi.IntPtrOutput)
}

// Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS).
type DirectoryBucketBucketEncryption struct {
	// Specifies the default server-side-encryption configuration.
	ServerSideEncryptionConfiguration []DirectoryBucketServerSideEncryptionRule `pulumi:"serverSideEncryptionConfiguration"`
}

// DirectoryBucketBucketEncryptionInput is an input type that accepts DirectoryBucketBucketEncryptionArgs and DirectoryBucketBucketEncryptionOutput values.
// You can construct a concrete instance of `DirectoryBucketBucketEncryptionInput` via:
//
//	DirectoryBucketBucketEncryptionArgs{...}
type DirectoryBucketBucketEncryptionInput interface {
	pulumi.Input

	ToDirectoryBucketBucketEncryptionOutput() DirectoryBucketBucketEncryptionOutput
	ToDirectoryBucketBucketEncryptionOutputWithContext(context.Context) DirectoryBucketBucketEncryptionOutput
}

// Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS).
type DirectoryBucketBucketEncryptionArgs struct {
	// Specifies the default server-side-encryption configuration.
	ServerSideEncryptionConfiguration DirectoryBucketServerSideEncryptionRuleArrayInput `pulumi:"serverSideEncryptionConfiguration"`
}

func (DirectoryBucketBucketEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketBucketEncryption)(nil)).Elem()
}

func (i DirectoryBucketBucketEncryptionArgs) ToDirectoryBucketBucketEncryptionOutput() DirectoryBucketBucketEncryptionOutput {
	return i.ToDirectoryBucketBucketEncryptionOutputWithContext(context.Background())
}

func (i DirectoryBucketBucketEncryptionArgs) ToDirectoryBucketBucketEncryptionOutputWithContext(ctx context.Context) DirectoryBucketBucketEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketBucketEncryptionOutput)
}

func (i DirectoryBucketBucketEncryptionArgs) ToDirectoryBucketBucketEncryptionPtrOutput() DirectoryBucketBucketEncryptionPtrOutput {
	return i.ToDirectoryBucketBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i DirectoryBucketBucketEncryptionArgs) ToDirectoryBucketBucketEncryptionPtrOutputWithContext(ctx context.Context) DirectoryBucketBucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketBucketEncryptionOutput).ToDirectoryBucketBucketEncryptionPtrOutputWithContext(ctx)
}

// DirectoryBucketBucketEncryptionPtrInput is an input type that accepts DirectoryBucketBucketEncryptionArgs, DirectoryBucketBucketEncryptionPtr and DirectoryBucketBucketEncryptionPtrOutput values.
// You can construct a concrete instance of `DirectoryBucketBucketEncryptionPtrInput` via:
//
//	        DirectoryBucketBucketEncryptionArgs{...}
//
//	or:
//
//	        nil
type DirectoryBucketBucketEncryptionPtrInput interface {
	pulumi.Input

	ToDirectoryBucketBucketEncryptionPtrOutput() DirectoryBucketBucketEncryptionPtrOutput
	ToDirectoryBucketBucketEncryptionPtrOutputWithContext(context.Context) DirectoryBucketBucketEncryptionPtrOutput
}

type directoryBucketBucketEncryptionPtrType DirectoryBucketBucketEncryptionArgs

func DirectoryBucketBucketEncryptionPtr(v *DirectoryBucketBucketEncryptionArgs) DirectoryBucketBucketEncryptionPtrInput {
	return (*directoryBucketBucketEncryptionPtrType)(v)
}

func (*directoryBucketBucketEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketBucketEncryption)(nil)).Elem()
}

func (i *directoryBucketBucketEncryptionPtrType) ToDirectoryBucketBucketEncryptionPtrOutput() DirectoryBucketBucketEncryptionPtrOutput {
	return i.ToDirectoryBucketBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i *directoryBucketBucketEncryptionPtrType) ToDirectoryBucketBucketEncryptionPtrOutputWithContext(ctx context.Context) DirectoryBucketBucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketBucketEncryptionPtrOutput)
}

// Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS).
type DirectoryBucketBucketEncryptionOutput struct{ *pulumi.OutputState }

func (DirectoryBucketBucketEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketBucketEncryption)(nil)).Elem()
}

func (o DirectoryBucketBucketEncryptionOutput) ToDirectoryBucketBucketEncryptionOutput() DirectoryBucketBucketEncryptionOutput {
	return o
}

func (o DirectoryBucketBucketEncryptionOutput) ToDirectoryBucketBucketEncryptionOutputWithContext(ctx context.Context) DirectoryBucketBucketEncryptionOutput {
	return o
}

func (o DirectoryBucketBucketEncryptionOutput) ToDirectoryBucketBucketEncryptionPtrOutput() DirectoryBucketBucketEncryptionPtrOutput {
	return o.ToDirectoryBucketBucketEncryptionPtrOutputWithContext(context.Background())
}

func (o DirectoryBucketBucketEncryptionOutput) ToDirectoryBucketBucketEncryptionPtrOutputWithContext(ctx context.Context) DirectoryBucketBucketEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryBucketBucketEncryption) *DirectoryBucketBucketEncryption {
		return &v
	}).(DirectoryBucketBucketEncryptionPtrOutput)
}

// Specifies the default server-side-encryption configuration.
func (o DirectoryBucketBucketEncryptionOutput) ServerSideEncryptionConfiguration() DirectoryBucketServerSideEncryptionRuleArrayOutput {
	return o.ApplyT(func(v DirectoryBucketBucketEncryption) []DirectoryBucketServerSideEncryptionRule {
		return v.ServerSideEncryptionConfiguration
	}).(DirectoryBucketServerSideEncryptionRuleArrayOutput)
}

type DirectoryBucketBucketEncryptionPtrOutput struct{ *pulumi.OutputState }

func (DirectoryBucketBucketEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketBucketEncryption)(nil)).Elem()
}

func (o DirectoryBucketBucketEncryptionPtrOutput) ToDirectoryBucketBucketEncryptionPtrOutput() DirectoryBucketBucketEncryptionPtrOutput {
	return o
}

func (o DirectoryBucketBucketEncryptionPtrOutput) ToDirectoryBucketBucketEncryptionPtrOutputWithContext(ctx context.Context) DirectoryBucketBucketEncryptionPtrOutput {
	return o
}

func (o DirectoryBucketBucketEncryptionPtrOutput) Elem() DirectoryBucketBucketEncryptionOutput {
	return o.ApplyT(func(v *DirectoryBucketBucketEncryption) DirectoryBucketBucketEncryption {
		if v != nil {
			return *v
		}
		var ret DirectoryBucketBucketEncryption
		return ret
	}).(DirectoryBucketBucketEncryptionOutput)
}

// Specifies the default server-side-encryption configuration.
func (o DirectoryBucketBucketEncryptionPtrOutput) ServerSideEncryptionConfiguration() DirectoryBucketServerSideEncryptionRuleArrayOutput {
	return o.ApplyT(func(v *DirectoryBucketBucketEncryption) []DirectoryBucketServerSideEncryptionRule {
		if v == nil {
			return nil
		}
		return v.ServerSideEncryptionConfiguration
	}).(DirectoryBucketServerSideEncryptionRuleArrayOutput)
}

type DirectoryBucketLifecycleConfiguration struct {
	// A lifecycle rule for individual objects in an Amazon S3 Express bucket.
	Rules []DirectoryBucketRule `pulumi:"rules"`
}

// DirectoryBucketLifecycleConfigurationInput is an input type that accepts DirectoryBucketLifecycleConfigurationArgs and DirectoryBucketLifecycleConfigurationOutput values.
// You can construct a concrete instance of `DirectoryBucketLifecycleConfigurationInput` via:
//
//	DirectoryBucketLifecycleConfigurationArgs{...}
type DirectoryBucketLifecycleConfigurationInput interface {
	pulumi.Input

	ToDirectoryBucketLifecycleConfigurationOutput() DirectoryBucketLifecycleConfigurationOutput
	ToDirectoryBucketLifecycleConfigurationOutputWithContext(context.Context) DirectoryBucketLifecycleConfigurationOutput
}

type DirectoryBucketLifecycleConfigurationArgs struct {
	// A lifecycle rule for individual objects in an Amazon S3 Express bucket.
	Rules DirectoryBucketRuleArrayInput `pulumi:"rules"`
}

func (DirectoryBucketLifecycleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketLifecycleConfiguration)(nil)).Elem()
}

func (i DirectoryBucketLifecycleConfigurationArgs) ToDirectoryBucketLifecycleConfigurationOutput() DirectoryBucketLifecycleConfigurationOutput {
	return i.ToDirectoryBucketLifecycleConfigurationOutputWithContext(context.Background())
}

func (i DirectoryBucketLifecycleConfigurationArgs) ToDirectoryBucketLifecycleConfigurationOutputWithContext(ctx context.Context) DirectoryBucketLifecycleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketLifecycleConfigurationOutput)
}

func (i DirectoryBucketLifecycleConfigurationArgs) ToDirectoryBucketLifecycleConfigurationPtrOutput() DirectoryBucketLifecycleConfigurationPtrOutput {
	return i.ToDirectoryBucketLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (i DirectoryBucketLifecycleConfigurationArgs) ToDirectoryBucketLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DirectoryBucketLifecycleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketLifecycleConfigurationOutput).ToDirectoryBucketLifecycleConfigurationPtrOutputWithContext(ctx)
}

// DirectoryBucketLifecycleConfigurationPtrInput is an input type that accepts DirectoryBucketLifecycleConfigurationArgs, DirectoryBucketLifecycleConfigurationPtr and DirectoryBucketLifecycleConfigurationPtrOutput values.
// You can construct a concrete instance of `DirectoryBucketLifecycleConfigurationPtrInput` via:
//
//	        DirectoryBucketLifecycleConfigurationArgs{...}
//
//	or:
//
//	        nil
type DirectoryBucketLifecycleConfigurationPtrInput interface {
	pulumi.Input

	ToDirectoryBucketLifecycleConfigurationPtrOutput() DirectoryBucketLifecycleConfigurationPtrOutput
	ToDirectoryBucketLifecycleConfigurationPtrOutputWithContext(context.Context) DirectoryBucketLifecycleConfigurationPtrOutput
}

type directoryBucketLifecycleConfigurationPtrType DirectoryBucketLifecycleConfigurationArgs

func DirectoryBucketLifecycleConfigurationPtr(v *DirectoryBucketLifecycleConfigurationArgs) DirectoryBucketLifecycleConfigurationPtrInput {
	return (*directoryBucketLifecycleConfigurationPtrType)(v)
}

func (*directoryBucketLifecycleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketLifecycleConfiguration)(nil)).Elem()
}

func (i *directoryBucketLifecycleConfigurationPtrType) ToDirectoryBucketLifecycleConfigurationPtrOutput() DirectoryBucketLifecycleConfigurationPtrOutput {
	return i.ToDirectoryBucketLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (i *directoryBucketLifecycleConfigurationPtrType) ToDirectoryBucketLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DirectoryBucketLifecycleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketLifecycleConfigurationPtrOutput)
}

type DirectoryBucketLifecycleConfigurationOutput struct{ *pulumi.OutputState }

func (DirectoryBucketLifecycleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketLifecycleConfiguration)(nil)).Elem()
}

func (o DirectoryBucketLifecycleConfigurationOutput) ToDirectoryBucketLifecycleConfigurationOutput() DirectoryBucketLifecycleConfigurationOutput {
	return o
}

func (o DirectoryBucketLifecycleConfigurationOutput) ToDirectoryBucketLifecycleConfigurationOutputWithContext(ctx context.Context) DirectoryBucketLifecycleConfigurationOutput {
	return o
}

func (o DirectoryBucketLifecycleConfigurationOutput) ToDirectoryBucketLifecycleConfigurationPtrOutput() DirectoryBucketLifecycleConfigurationPtrOutput {
	return o.ToDirectoryBucketLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (o DirectoryBucketLifecycleConfigurationOutput) ToDirectoryBucketLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DirectoryBucketLifecycleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryBucketLifecycleConfiguration) *DirectoryBucketLifecycleConfiguration {
		return &v
	}).(DirectoryBucketLifecycleConfigurationPtrOutput)
}

// A lifecycle rule for individual objects in an Amazon S3 Express bucket.
func (o DirectoryBucketLifecycleConfigurationOutput) Rules() DirectoryBucketRuleArrayOutput {
	return o.ApplyT(func(v DirectoryBucketLifecycleConfiguration) []DirectoryBucketRule { return v.Rules }).(DirectoryBucketRuleArrayOutput)
}

type DirectoryBucketLifecycleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DirectoryBucketLifecycleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketLifecycleConfiguration)(nil)).Elem()
}

func (o DirectoryBucketLifecycleConfigurationPtrOutput) ToDirectoryBucketLifecycleConfigurationPtrOutput() DirectoryBucketLifecycleConfigurationPtrOutput {
	return o
}

func (o DirectoryBucketLifecycleConfigurationPtrOutput) ToDirectoryBucketLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DirectoryBucketLifecycleConfigurationPtrOutput {
	return o
}

func (o DirectoryBucketLifecycleConfigurationPtrOutput) Elem() DirectoryBucketLifecycleConfigurationOutput {
	return o.ApplyT(func(v *DirectoryBucketLifecycleConfiguration) DirectoryBucketLifecycleConfiguration {
		if v != nil {
			return *v
		}
		var ret DirectoryBucketLifecycleConfiguration
		return ret
	}).(DirectoryBucketLifecycleConfigurationOutput)
}

// A lifecycle rule for individual objects in an Amazon S3 Express bucket.
func (o DirectoryBucketLifecycleConfigurationPtrOutput) Rules() DirectoryBucketRuleArrayOutput {
	return o.ApplyT(func(v *DirectoryBucketLifecycleConfiguration) []DirectoryBucketRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(DirectoryBucketRuleArrayOutput)
}

// You must specify at least one of the following properties: AbortIncompleteMultipartUpload, or ExpirationInDays.
type DirectoryBucketRule struct {
	// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload.
	AbortIncompleteMultipartUpload *DirectoryBucketAbortIncompleteMultipartUpload `pulumi:"abortIncompleteMultipartUpload"`
	// Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon S3 Glacier. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
	ExpirationInDays *int `pulumi:"expirationInDays"`
	// Unique identifier for the rule. The value can't be longer than 255 characters.
	Id *string `pulumi:"id"`
	// Specifies the minimum object size in bytes for this rule to apply to. Objects must be larger than this value in bytes. For more information about size based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide* .
	ObjectSizeGreaterThan *string `pulumi:"objectSizeGreaterThan"`
	// Specifies the maximum object size in bytes for this rule to apply to. Objects must be smaller than this value in bytes. For more information about sized based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide* .
	ObjectSizeLessThan *string `pulumi:"objectSizeLessThan"`
	// Object key prefix that identifies one or more objects to which this rule applies.
	//
	// > Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints) .
	Prefix *string `pulumi:"prefix"`
	// If `Enabled` , the rule is currently being applied. If `Disabled` , the rule is not currently being applied.
	Status DirectoryBucketRuleStatus `pulumi:"status"`
}

// DirectoryBucketRuleInput is an input type that accepts DirectoryBucketRuleArgs and DirectoryBucketRuleOutput values.
// You can construct a concrete instance of `DirectoryBucketRuleInput` via:
//
//	DirectoryBucketRuleArgs{...}
type DirectoryBucketRuleInput interface {
	pulumi.Input

	ToDirectoryBucketRuleOutput() DirectoryBucketRuleOutput
	ToDirectoryBucketRuleOutputWithContext(context.Context) DirectoryBucketRuleOutput
}

// You must specify at least one of the following properties: AbortIncompleteMultipartUpload, or ExpirationInDays.
type DirectoryBucketRuleArgs struct {
	// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload.
	AbortIncompleteMultipartUpload DirectoryBucketAbortIncompleteMultipartUploadPtrInput `pulumi:"abortIncompleteMultipartUpload"`
	// Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon S3 Glacier. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
	ExpirationInDays pulumi.IntPtrInput `pulumi:"expirationInDays"`
	// Unique identifier for the rule. The value can't be longer than 255 characters.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies the minimum object size in bytes for this rule to apply to. Objects must be larger than this value in bytes. For more information about size based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide* .
	ObjectSizeGreaterThan pulumi.StringPtrInput `pulumi:"objectSizeGreaterThan"`
	// Specifies the maximum object size in bytes for this rule to apply to. Objects must be smaller than this value in bytes. For more information about sized based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide* .
	ObjectSizeLessThan pulumi.StringPtrInput `pulumi:"objectSizeLessThan"`
	// Object key prefix that identifies one or more objects to which this rule applies.
	//
	// > Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints) .
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// If `Enabled` , the rule is currently being applied. If `Disabled` , the rule is not currently being applied.
	Status DirectoryBucketRuleStatusInput `pulumi:"status"`
}

func (DirectoryBucketRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketRule)(nil)).Elem()
}

func (i DirectoryBucketRuleArgs) ToDirectoryBucketRuleOutput() DirectoryBucketRuleOutput {
	return i.ToDirectoryBucketRuleOutputWithContext(context.Background())
}

func (i DirectoryBucketRuleArgs) ToDirectoryBucketRuleOutputWithContext(ctx context.Context) DirectoryBucketRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketRuleOutput)
}

// DirectoryBucketRuleArrayInput is an input type that accepts DirectoryBucketRuleArray and DirectoryBucketRuleArrayOutput values.
// You can construct a concrete instance of `DirectoryBucketRuleArrayInput` via:
//
//	DirectoryBucketRuleArray{ DirectoryBucketRuleArgs{...} }
type DirectoryBucketRuleArrayInput interface {
	pulumi.Input

	ToDirectoryBucketRuleArrayOutput() DirectoryBucketRuleArrayOutput
	ToDirectoryBucketRuleArrayOutputWithContext(context.Context) DirectoryBucketRuleArrayOutput
}

type DirectoryBucketRuleArray []DirectoryBucketRuleInput

func (DirectoryBucketRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectoryBucketRule)(nil)).Elem()
}

func (i DirectoryBucketRuleArray) ToDirectoryBucketRuleArrayOutput() DirectoryBucketRuleArrayOutput {
	return i.ToDirectoryBucketRuleArrayOutputWithContext(context.Background())
}

func (i DirectoryBucketRuleArray) ToDirectoryBucketRuleArrayOutputWithContext(ctx context.Context) DirectoryBucketRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketRuleArrayOutput)
}

// You must specify at least one of the following properties: AbortIncompleteMultipartUpload, or ExpirationInDays.
type DirectoryBucketRuleOutput struct{ *pulumi.OutputState }

func (DirectoryBucketRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketRule)(nil)).Elem()
}

func (o DirectoryBucketRuleOutput) ToDirectoryBucketRuleOutput() DirectoryBucketRuleOutput {
	return o
}

func (o DirectoryBucketRuleOutput) ToDirectoryBucketRuleOutputWithContext(ctx context.Context) DirectoryBucketRuleOutput {
	return o
}

// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload.
func (o DirectoryBucketRuleOutput) AbortIncompleteMultipartUpload() DirectoryBucketAbortIncompleteMultipartUploadPtrOutput {
	return o.ApplyT(func(v DirectoryBucketRule) *DirectoryBucketAbortIncompleteMultipartUpload {
		return v.AbortIncompleteMultipartUpload
	}).(DirectoryBucketAbortIncompleteMultipartUploadPtrOutput)
}

// Indicates the number of days after creation when objects are deleted from Amazon S3 and Amazon S3 Glacier. If you specify an expiration and transition time, you must use the same time unit for both properties (either in days or by date). The expiration time must also be later than the transition time.
func (o DirectoryBucketRuleOutput) ExpirationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DirectoryBucketRule) *int { return v.ExpirationInDays }).(pulumi.IntPtrOutput)
}

// Unique identifier for the rule. The value can't be longer than 255 characters.
func (o DirectoryBucketRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryBucketRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies the minimum object size in bytes for this rule to apply to. Objects must be larger than this value in bytes. For more information about size based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide* .
func (o DirectoryBucketRuleOutput) ObjectSizeGreaterThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryBucketRule) *string { return v.ObjectSizeGreaterThan }).(pulumi.StringPtrOutput)
}

// Specifies the maximum object size in bytes for this rule to apply to. Objects must be smaller than this value in bytes. For more information about sized based rules, see [Lifecycle configuration using size-based rules](https://docs.aws.amazon.com/AmazonS3/latest/userguide/lifecycle-configuration-examples.html#lc-size-rules) in the *Amazon S3 User Guide* .
func (o DirectoryBucketRuleOutput) ObjectSizeLessThan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryBucketRule) *string { return v.ObjectSizeLessThan }).(pulumi.StringPtrOutput)
}

// Object key prefix that identifies one or more objects to which this rule applies.
//
// > Replacement must be made for object keys containing special characters (such as carriage returns) when using XML requests. For more information, see [XML related object key constraints](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints) .
func (o DirectoryBucketRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryBucketRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// If `Enabled` , the rule is currently being applied. If `Disabled` , the rule is not currently being applied.
func (o DirectoryBucketRuleOutput) Status() DirectoryBucketRuleStatusOutput {
	return o.ApplyT(func(v DirectoryBucketRule) DirectoryBucketRuleStatus { return v.Status }).(DirectoryBucketRuleStatusOutput)
}

type DirectoryBucketRuleArrayOutput struct{ *pulumi.OutputState }

func (DirectoryBucketRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectoryBucketRule)(nil)).Elem()
}

func (o DirectoryBucketRuleArrayOutput) ToDirectoryBucketRuleArrayOutput() DirectoryBucketRuleArrayOutput {
	return o
}

func (o DirectoryBucketRuleArrayOutput) ToDirectoryBucketRuleArrayOutputWithContext(ctx context.Context) DirectoryBucketRuleArrayOutput {
	return o
}

func (o DirectoryBucketRuleArrayOutput) Index(i pulumi.IntInput) DirectoryBucketRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectoryBucketRule {
		return vs[0].([]DirectoryBucketRule)[vs[1].(int)]
	}).(DirectoryBucketRuleOutput)
}

// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
type DirectoryBucketServerSideEncryptionByDefault struct {
	// AWS Key Management Service (KMS) customer managed key ID to use for the default encryption. This parameter is allowed only if SSEAlgorithm is set to aws:kms. You can specify this parameter with the key ID or the Amazon Resource Name (ARN) of the KMS key
	KmsMasterKeyId *string `pulumi:"kmsMasterKeyId"`
	// Server-side encryption algorithm to use for the default encryption.
	//
	// > For directory buckets, there are only two supported values for server-side encryption: `AES256` and `aws:kms` .
	SseAlgorithm DirectoryBucketServerSideEncryptionByDefaultSseAlgorithm `pulumi:"sseAlgorithm"`
}

// DirectoryBucketServerSideEncryptionByDefaultInput is an input type that accepts DirectoryBucketServerSideEncryptionByDefaultArgs and DirectoryBucketServerSideEncryptionByDefaultOutput values.
// You can construct a concrete instance of `DirectoryBucketServerSideEncryptionByDefaultInput` via:
//
//	DirectoryBucketServerSideEncryptionByDefaultArgs{...}
type DirectoryBucketServerSideEncryptionByDefaultInput interface {
	pulumi.Input

	ToDirectoryBucketServerSideEncryptionByDefaultOutput() DirectoryBucketServerSideEncryptionByDefaultOutput
	ToDirectoryBucketServerSideEncryptionByDefaultOutputWithContext(context.Context) DirectoryBucketServerSideEncryptionByDefaultOutput
}

// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
type DirectoryBucketServerSideEncryptionByDefaultArgs struct {
	// AWS Key Management Service (KMS) customer managed key ID to use for the default encryption. This parameter is allowed only if SSEAlgorithm is set to aws:kms. You can specify this parameter with the key ID or the Amazon Resource Name (ARN) of the KMS key
	KmsMasterKeyId pulumi.StringPtrInput `pulumi:"kmsMasterKeyId"`
	// Server-side encryption algorithm to use for the default encryption.
	//
	// > For directory buckets, there are only two supported values for server-side encryption: `AES256` and `aws:kms` .
	SseAlgorithm DirectoryBucketServerSideEncryptionByDefaultSseAlgorithmInput `pulumi:"sseAlgorithm"`
}

func (DirectoryBucketServerSideEncryptionByDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketServerSideEncryptionByDefault)(nil)).Elem()
}

func (i DirectoryBucketServerSideEncryptionByDefaultArgs) ToDirectoryBucketServerSideEncryptionByDefaultOutput() DirectoryBucketServerSideEncryptionByDefaultOutput {
	return i.ToDirectoryBucketServerSideEncryptionByDefaultOutputWithContext(context.Background())
}

func (i DirectoryBucketServerSideEncryptionByDefaultArgs) ToDirectoryBucketServerSideEncryptionByDefaultOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionByDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketServerSideEncryptionByDefaultOutput)
}

func (i DirectoryBucketServerSideEncryptionByDefaultArgs) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutput() DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return i.ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (i DirectoryBucketServerSideEncryptionByDefaultArgs) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketServerSideEncryptionByDefaultOutput).ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx)
}

// DirectoryBucketServerSideEncryptionByDefaultPtrInput is an input type that accepts DirectoryBucketServerSideEncryptionByDefaultArgs, DirectoryBucketServerSideEncryptionByDefaultPtr and DirectoryBucketServerSideEncryptionByDefaultPtrOutput values.
// You can construct a concrete instance of `DirectoryBucketServerSideEncryptionByDefaultPtrInput` via:
//
//	        DirectoryBucketServerSideEncryptionByDefaultArgs{...}
//
//	or:
//
//	        nil
type DirectoryBucketServerSideEncryptionByDefaultPtrInput interface {
	pulumi.Input

	ToDirectoryBucketServerSideEncryptionByDefaultPtrOutput() DirectoryBucketServerSideEncryptionByDefaultPtrOutput
	ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(context.Context) DirectoryBucketServerSideEncryptionByDefaultPtrOutput
}

type directoryBucketServerSideEncryptionByDefaultPtrType DirectoryBucketServerSideEncryptionByDefaultArgs

func DirectoryBucketServerSideEncryptionByDefaultPtr(v *DirectoryBucketServerSideEncryptionByDefaultArgs) DirectoryBucketServerSideEncryptionByDefaultPtrInput {
	return (*directoryBucketServerSideEncryptionByDefaultPtrType)(v)
}

func (*directoryBucketServerSideEncryptionByDefaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketServerSideEncryptionByDefault)(nil)).Elem()
}

func (i *directoryBucketServerSideEncryptionByDefaultPtrType) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutput() DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return i.ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (i *directoryBucketServerSideEncryptionByDefaultPtrType) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketServerSideEncryptionByDefaultPtrOutput)
}

// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
type DirectoryBucketServerSideEncryptionByDefaultOutput struct{ *pulumi.OutputState }

func (DirectoryBucketServerSideEncryptionByDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketServerSideEncryptionByDefault)(nil)).Elem()
}

func (o DirectoryBucketServerSideEncryptionByDefaultOutput) ToDirectoryBucketServerSideEncryptionByDefaultOutput() DirectoryBucketServerSideEncryptionByDefaultOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionByDefaultOutput) ToDirectoryBucketServerSideEncryptionByDefaultOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionByDefaultOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionByDefaultOutput) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutput() DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return o.ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (o DirectoryBucketServerSideEncryptionByDefaultOutput) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryBucketServerSideEncryptionByDefault) *DirectoryBucketServerSideEncryptionByDefault {
		return &v
	}).(DirectoryBucketServerSideEncryptionByDefaultPtrOutput)
}

// AWS Key Management Service (KMS) customer managed key ID to use for the default encryption. This parameter is allowed only if SSEAlgorithm is set to aws:kms. You can specify this parameter with the key ID or the Amazon Resource Name (ARN) of the KMS key
func (o DirectoryBucketServerSideEncryptionByDefaultOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryBucketServerSideEncryptionByDefault) *string { return v.KmsMasterKeyId }).(pulumi.StringPtrOutput)
}

// Server-side encryption algorithm to use for the default encryption.
//
// > For directory buckets, there are only two supported values for server-side encryption: `AES256` and `aws:kms` .
func (o DirectoryBucketServerSideEncryptionByDefaultOutput) SseAlgorithm() DirectoryBucketServerSideEncryptionByDefaultSseAlgorithmOutput {
	return o.ApplyT(func(v DirectoryBucketServerSideEncryptionByDefault) DirectoryBucketServerSideEncryptionByDefaultSseAlgorithm {
		return v.SseAlgorithm
	}).(DirectoryBucketServerSideEncryptionByDefaultSseAlgorithmOutput)
}

type DirectoryBucketServerSideEncryptionByDefaultPtrOutput struct{ *pulumi.OutputState }

func (DirectoryBucketServerSideEncryptionByDefaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketServerSideEncryptionByDefault)(nil)).Elem()
}

func (o DirectoryBucketServerSideEncryptionByDefaultPtrOutput) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutput() DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionByDefaultPtrOutput) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionByDefaultPtrOutput) Elem() DirectoryBucketServerSideEncryptionByDefaultOutput {
	return o.ApplyT(func(v *DirectoryBucketServerSideEncryptionByDefault) DirectoryBucketServerSideEncryptionByDefault {
		if v != nil {
			return *v
		}
		var ret DirectoryBucketServerSideEncryptionByDefault
		return ret
	}).(DirectoryBucketServerSideEncryptionByDefaultOutput)
}

// AWS Key Management Service (KMS) customer managed key ID to use for the default encryption. This parameter is allowed only if SSEAlgorithm is set to aws:kms. You can specify this parameter with the key ID or the Amazon Resource Name (ARN) of the KMS key
func (o DirectoryBucketServerSideEncryptionByDefaultPtrOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryBucketServerSideEncryptionByDefault) *string {
		if v == nil {
			return nil
		}
		return v.KmsMasterKeyId
	}).(pulumi.StringPtrOutput)
}

// Server-side encryption algorithm to use for the default encryption.
//
// > For directory buckets, there are only two supported values for server-side encryption: `AES256` and `aws:kms` .
func (o DirectoryBucketServerSideEncryptionByDefaultPtrOutput) SseAlgorithm() DirectoryBucketServerSideEncryptionByDefaultSseAlgorithmPtrOutput {
	return o.ApplyT(func(v *DirectoryBucketServerSideEncryptionByDefault) *DirectoryBucketServerSideEncryptionByDefaultSseAlgorithm {
		if v == nil {
			return nil
		}
		return &v.SseAlgorithm
	}).(DirectoryBucketServerSideEncryptionByDefaultSseAlgorithmPtrOutput)
}

// Specifies the default server-side encryption configuration.
type DirectoryBucketServerSideEncryptionRule struct {
	// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Amazon S3 Express One Zone uses an S3 Bucket Key with SSE-KMS and S3 Bucket Key cannot be disabled. It's only allowed to set the BucketKeyEnabled element to true.
	BucketKeyEnabled *bool `pulumi:"bucketKeyEnabled"`
	// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
	ServerSideEncryptionByDefault *DirectoryBucketServerSideEncryptionByDefault `pulumi:"serverSideEncryptionByDefault"`
}

// DirectoryBucketServerSideEncryptionRuleInput is an input type that accepts DirectoryBucketServerSideEncryptionRuleArgs and DirectoryBucketServerSideEncryptionRuleOutput values.
// You can construct a concrete instance of `DirectoryBucketServerSideEncryptionRuleInput` via:
//
//	DirectoryBucketServerSideEncryptionRuleArgs{...}
type DirectoryBucketServerSideEncryptionRuleInput interface {
	pulumi.Input

	ToDirectoryBucketServerSideEncryptionRuleOutput() DirectoryBucketServerSideEncryptionRuleOutput
	ToDirectoryBucketServerSideEncryptionRuleOutputWithContext(context.Context) DirectoryBucketServerSideEncryptionRuleOutput
}

// Specifies the default server-side encryption configuration.
type DirectoryBucketServerSideEncryptionRuleArgs struct {
	// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Amazon S3 Express One Zone uses an S3 Bucket Key with SSE-KMS and S3 Bucket Key cannot be disabled. It's only allowed to set the BucketKeyEnabled element to true.
	BucketKeyEnabled pulumi.BoolPtrInput `pulumi:"bucketKeyEnabled"`
	// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
	ServerSideEncryptionByDefault DirectoryBucketServerSideEncryptionByDefaultPtrInput `pulumi:"serverSideEncryptionByDefault"`
}

func (DirectoryBucketServerSideEncryptionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketServerSideEncryptionRule)(nil)).Elem()
}

func (i DirectoryBucketServerSideEncryptionRuleArgs) ToDirectoryBucketServerSideEncryptionRuleOutput() DirectoryBucketServerSideEncryptionRuleOutput {
	return i.ToDirectoryBucketServerSideEncryptionRuleOutputWithContext(context.Background())
}

func (i DirectoryBucketServerSideEncryptionRuleArgs) ToDirectoryBucketServerSideEncryptionRuleOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketServerSideEncryptionRuleOutput)
}

// DirectoryBucketServerSideEncryptionRuleArrayInput is an input type that accepts DirectoryBucketServerSideEncryptionRuleArray and DirectoryBucketServerSideEncryptionRuleArrayOutput values.
// You can construct a concrete instance of `DirectoryBucketServerSideEncryptionRuleArrayInput` via:
//
//	DirectoryBucketServerSideEncryptionRuleArray{ DirectoryBucketServerSideEncryptionRuleArgs{...} }
type DirectoryBucketServerSideEncryptionRuleArrayInput interface {
	pulumi.Input

	ToDirectoryBucketServerSideEncryptionRuleArrayOutput() DirectoryBucketServerSideEncryptionRuleArrayOutput
	ToDirectoryBucketServerSideEncryptionRuleArrayOutputWithContext(context.Context) DirectoryBucketServerSideEncryptionRuleArrayOutput
}

type DirectoryBucketServerSideEncryptionRuleArray []DirectoryBucketServerSideEncryptionRuleInput

func (DirectoryBucketServerSideEncryptionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectoryBucketServerSideEncryptionRule)(nil)).Elem()
}

func (i DirectoryBucketServerSideEncryptionRuleArray) ToDirectoryBucketServerSideEncryptionRuleArrayOutput() DirectoryBucketServerSideEncryptionRuleArrayOutput {
	return i.ToDirectoryBucketServerSideEncryptionRuleArrayOutputWithContext(context.Background())
}

func (i DirectoryBucketServerSideEncryptionRuleArray) ToDirectoryBucketServerSideEncryptionRuleArrayOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketServerSideEncryptionRuleArrayOutput)
}

// Specifies the default server-side encryption configuration.
type DirectoryBucketServerSideEncryptionRuleOutput struct{ *pulumi.OutputState }

func (DirectoryBucketServerSideEncryptionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketServerSideEncryptionRule)(nil)).Elem()
}

func (o DirectoryBucketServerSideEncryptionRuleOutput) ToDirectoryBucketServerSideEncryptionRuleOutput() DirectoryBucketServerSideEncryptionRuleOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionRuleOutput) ToDirectoryBucketServerSideEncryptionRuleOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionRuleOutput {
	return o
}

// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Amazon S3 Express One Zone uses an S3 Bucket Key with SSE-KMS and S3 Bucket Key cannot be disabled. It's only allowed to set the BucketKeyEnabled element to true.
func (o DirectoryBucketServerSideEncryptionRuleOutput) BucketKeyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectoryBucketServerSideEncryptionRule) *bool { return v.BucketKeyEnabled }).(pulumi.BoolPtrOutput)
}

// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
func (o DirectoryBucketServerSideEncryptionRuleOutput) ServerSideEncryptionByDefault() DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return o.ApplyT(func(v DirectoryBucketServerSideEncryptionRule) *DirectoryBucketServerSideEncryptionByDefault {
		return v.ServerSideEncryptionByDefault
	}).(DirectoryBucketServerSideEncryptionByDefaultPtrOutput)
}

type DirectoryBucketServerSideEncryptionRuleArrayOutput struct{ *pulumi.OutputState }

func (DirectoryBucketServerSideEncryptionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectoryBucketServerSideEncryptionRule)(nil)).Elem()
}

func (o DirectoryBucketServerSideEncryptionRuleArrayOutput) ToDirectoryBucketServerSideEncryptionRuleArrayOutput() DirectoryBucketServerSideEncryptionRuleArrayOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionRuleArrayOutput) ToDirectoryBucketServerSideEncryptionRuleArrayOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionRuleArrayOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionRuleArrayOutput) Index(i pulumi.IntInput) DirectoryBucketServerSideEncryptionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectoryBucketServerSideEncryptionRule {
		return vs[0].([]DirectoryBucketServerSideEncryptionRule)[vs[1].(int)]
	}).(DirectoryBucketServerSideEncryptionRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketAbortIncompleteMultipartUploadInput)(nil)).Elem(), DirectoryBucketAbortIncompleteMultipartUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketAbortIncompleteMultipartUploadPtrInput)(nil)).Elem(), DirectoryBucketAbortIncompleteMultipartUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketBucketEncryptionInput)(nil)).Elem(), DirectoryBucketBucketEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketBucketEncryptionPtrInput)(nil)).Elem(), DirectoryBucketBucketEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketLifecycleConfigurationInput)(nil)).Elem(), DirectoryBucketLifecycleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketLifecycleConfigurationPtrInput)(nil)).Elem(), DirectoryBucketLifecycleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketRuleInput)(nil)).Elem(), DirectoryBucketRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketRuleArrayInput)(nil)).Elem(), DirectoryBucketRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketServerSideEncryptionByDefaultInput)(nil)).Elem(), DirectoryBucketServerSideEncryptionByDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketServerSideEncryptionByDefaultPtrInput)(nil)).Elem(), DirectoryBucketServerSideEncryptionByDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketServerSideEncryptionRuleInput)(nil)).Elem(), DirectoryBucketServerSideEncryptionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketServerSideEncryptionRuleArrayInput)(nil)).Elem(), DirectoryBucketServerSideEncryptionRuleArray{})
	pulumi.RegisterOutputType(DirectoryBucketAbortIncompleteMultipartUploadOutput{})
	pulumi.RegisterOutputType(DirectoryBucketAbortIncompleteMultipartUploadPtrOutput{})
	pulumi.RegisterOutputType(DirectoryBucketBucketEncryptionOutput{})
	pulumi.RegisterOutputType(DirectoryBucketBucketEncryptionPtrOutput{})
	pulumi.RegisterOutputType(DirectoryBucketLifecycleConfigurationOutput{})
	pulumi.RegisterOutputType(DirectoryBucketLifecycleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DirectoryBucketRuleOutput{})
	pulumi.RegisterOutputType(DirectoryBucketRuleArrayOutput{})
	pulumi.RegisterOutputType(DirectoryBucketServerSideEncryptionByDefaultOutput{})
	pulumi.RegisterOutputType(DirectoryBucketServerSideEncryptionByDefaultPtrOutput{})
	pulumi.RegisterOutputType(DirectoryBucketServerSideEncryptionRuleOutput{})
	pulumi.RegisterOutputType(DirectoryBucketServerSideEncryptionRuleArrayOutput{})
}
