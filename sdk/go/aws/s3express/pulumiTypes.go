// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3express

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS).
type DirectoryBucketBucketEncryption struct {
	// Specifies the default server-side-encryption configuration.
	ServerSideEncryptionConfiguration []DirectoryBucketServerSideEncryptionRule `pulumi:"serverSideEncryptionConfiguration"`
}

// DirectoryBucketBucketEncryptionInput is an input type that accepts DirectoryBucketBucketEncryptionArgs and DirectoryBucketBucketEncryptionOutput values.
// You can construct a concrete instance of `DirectoryBucketBucketEncryptionInput` via:
//
//	DirectoryBucketBucketEncryptionArgs{...}
type DirectoryBucketBucketEncryptionInput interface {
	pulumi.Input

	ToDirectoryBucketBucketEncryptionOutput() DirectoryBucketBucketEncryptionOutput
	ToDirectoryBucketBucketEncryptionOutputWithContext(context.Context) DirectoryBucketBucketEncryptionOutput
}

// Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS).
type DirectoryBucketBucketEncryptionArgs struct {
	// Specifies the default server-side-encryption configuration.
	ServerSideEncryptionConfiguration DirectoryBucketServerSideEncryptionRuleArrayInput `pulumi:"serverSideEncryptionConfiguration"`
}

func (DirectoryBucketBucketEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketBucketEncryption)(nil)).Elem()
}

func (i DirectoryBucketBucketEncryptionArgs) ToDirectoryBucketBucketEncryptionOutput() DirectoryBucketBucketEncryptionOutput {
	return i.ToDirectoryBucketBucketEncryptionOutputWithContext(context.Background())
}

func (i DirectoryBucketBucketEncryptionArgs) ToDirectoryBucketBucketEncryptionOutputWithContext(ctx context.Context) DirectoryBucketBucketEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketBucketEncryptionOutput)
}

func (i DirectoryBucketBucketEncryptionArgs) ToDirectoryBucketBucketEncryptionPtrOutput() DirectoryBucketBucketEncryptionPtrOutput {
	return i.ToDirectoryBucketBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i DirectoryBucketBucketEncryptionArgs) ToDirectoryBucketBucketEncryptionPtrOutputWithContext(ctx context.Context) DirectoryBucketBucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketBucketEncryptionOutput).ToDirectoryBucketBucketEncryptionPtrOutputWithContext(ctx)
}

// DirectoryBucketBucketEncryptionPtrInput is an input type that accepts DirectoryBucketBucketEncryptionArgs, DirectoryBucketBucketEncryptionPtr and DirectoryBucketBucketEncryptionPtrOutput values.
// You can construct a concrete instance of `DirectoryBucketBucketEncryptionPtrInput` via:
//
//	        DirectoryBucketBucketEncryptionArgs{...}
//
//	or:
//
//	        nil
type DirectoryBucketBucketEncryptionPtrInput interface {
	pulumi.Input

	ToDirectoryBucketBucketEncryptionPtrOutput() DirectoryBucketBucketEncryptionPtrOutput
	ToDirectoryBucketBucketEncryptionPtrOutputWithContext(context.Context) DirectoryBucketBucketEncryptionPtrOutput
}

type directoryBucketBucketEncryptionPtrType DirectoryBucketBucketEncryptionArgs

func DirectoryBucketBucketEncryptionPtr(v *DirectoryBucketBucketEncryptionArgs) DirectoryBucketBucketEncryptionPtrInput {
	return (*directoryBucketBucketEncryptionPtrType)(v)
}

func (*directoryBucketBucketEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketBucketEncryption)(nil)).Elem()
}

func (i *directoryBucketBucketEncryptionPtrType) ToDirectoryBucketBucketEncryptionPtrOutput() DirectoryBucketBucketEncryptionPtrOutput {
	return i.ToDirectoryBucketBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i *directoryBucketBucketEncryptionPtrType) ToDirectoryBucketBucketEncryptionPtrOutputWithContext(ctx context.Context) DirectoryBucketBucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketBucketEncryptionPtrOutput)
}

// Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS).
type DirectoryBucketBucketEncryptionOutput struct{ *pulumi.OutputState }

func (DirectoryBucketBucketEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketBucketEncryption)(nil)).Elem()
}

func (o DirectoryBucketBucketEncryptionOutput) ToDirectoryBucketBucketEncryptionOutput() DirectoryBucketBucketEncryptionOutput {
	return o
}

func (o DirectoryBucketBucketEncryptionOutput) ToDirectoryBucketBucketEncryptionOutputWithContext(ctx context.Context) DirectoryBucketBucketEncryptionOutput {
	return o
}

func (o DirectoryBucketBucketEncryptionOutput) ToDirectoryBucketBucketEncryptionPtrOutput() DirectoryBucketBucketEncryptionPtrOutput {
	return o.ToDirectoryBucketBucketEncryptionPtrOutputWithContext(context.Background())
}

func (o DirectoryBucketBucketEncryptionOutput) ToDirectoryBucketBucketEncryptionPtrOutputWithContext(ctx context.Context) DirectoryBucketBucketEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryBucketBucketEncryption) *DirectoryBucketBucketEncryption {
		return &v
	}).(DirectoryBucketBucketEncryptionPtrOutput)
}

// Specifies the default server-side-encryption configuration.
func (o DirectoryBucketBucketEncryptionOutput) ServerSideEncryptionConfiguration() DirectoryBucketServerSideEncryptionRuleArrayOutput {
	return o.ApplyT(func(v DirectoryBucketBucketEncryption) []DirectoryBucketServerSideEncryptionRule {
		return v.ServerSideEncryptionConfiguration
	}).(DirectoryBucketServerSideEncryptionRuleArrayOutput)
}

type DirectoryBucketBucketEncryptionPtrOutput struct{ *pulumi.OutputState }

func (DirectoryBucketBucketEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketBucketEncryption)(nil)).Elem()
}

func (o DirectoryBucketBucketEncryptionPtrOutput) ToDirectoryBucketBucketEncryptionPtrOutput() DirectoryBucketBucketEncryptionPtrOutput {
	return o
}

func (o DirectoryBucketBucketEncryptionPtrOutput) ToDirectoryBucketBucketEncryptionPtrOutputWithContext(ctx context.Context) DirectoryBucketBucketEncryptionPtrOutput {
	return o
}

func (o DirectoryBucketBucketEncryptionPtrOutput) Elem() DirectoryBucketBucketEncryptionOutput {
	return o.ApplyT(func(v *DirectoryBucketBucketEncryption) DirectoryBucketBucketEncryption {
		if v != nil {
			return *v
		}
		var ret DirectoryBucketBucketEncryption
		return ret
	}).(DirectoryBucketBucketEncryptionOutput)
}

// Specifies the default server-side-encryption configuration.
func (o DirectoryBucketBucketEncryptionPtrOutput) ServerSideEncryptionConfiguration() DirectoryBucketServerSideEncryptionRuleArrayOutput {
	return o.ApplyT(func(v *DirectoryBucketBucketEncryption) []DirectoryBucketServerSideEncryptionRule {
		if v == nil {
			return nil
		}
		return v.ServerSideEncryptionConfiguration
	}).(DirectoryBucketServerSideEncryptionRuleArrayOutput)
}

// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
type DirectoryBucketServerSideEncryptionByDefault struct {
	// AWS Key Management Service (KMS) customer managed key ID to use for the default encryption. This parameter is allowed only if SSEAlgorithm is set to aws:kms. You can specify this parameter with the key ID or the Amazon Resource Name (ARN) of the KMS key
	KmsMasterKeyId *string                                                  `pulumi:"kmsMasterKeyId"`
	SseAlgorithm   DirectoryBucketServerSideEncryptionByDefaultSseAlgorithm `pulumi:"sseAlgorithm"`
}

// DirectoryBucketServerSideEncryptionByDefaultInput is an input type that accepts DirectoryBucketServerSideEncryptionByDefaultArgs and DirectoryBucketServerSideEncryptionByDefaultOutput values.
// You can construct a concrete instance of `DirectoryBucketServerSideEncryptionByDefaultInput` via:
//
//	DirectoryBucketServerSideEncryptionByDefaultArgs{...}
type DirectoryBucketServerSideEncryptionByDefaultInput interface {
	pulumi.Input

	ToDirectoryBucketServerSideEncryptionByDefaultOutput() DirectoryBucketServerSideEncryptionByDefaultOutput
	ToDirectoryBucketServerSideEncryptionByDefaultOutputWithContext(context.Context) DirectoryBucketServerSideEncryptionByDefaultOutput
}

// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
type DirectoryBucketServerSideEncryptionByDefaultArgs struct {
	// AWS Key Management Service (KMS) customer managed key ID to use for the default encryption. This parameter is allowed only if SSEAlgorithm is set to aws:kms. You can specify this parameter with the key ID or the Amazon Resource Name (ARN) of the KMS key
	KmsMasterKeyId pulumi.StringPtrInput                                         `pulumi:"kmsMasterKeyId"`
	SseAlgorithm   DirectoryBucketServerSideEncryptionByDefaultSseAlgorithmInput `pulumi:"sseAlgorithm"`
}

func (DirectoryBucketServerSideEncryptionByDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketServerSideEncryptionByDefault)(nil)).Elem()
}

func (i DirectoryBucketServerSideEncryptionByDefaultArgs) ToDirectoryBucketServerSideEncryptionByDefaultOutput() DirectoryBucketServerSideEncryptionByDefaultOutput {
	return i.ToDirectoryBucketServerSideEncryptionByDefaultOutputWithContext(context.Background())
}

func (i DirectoryBucketServerSideEncryptionByDefaultArgs) ToDirectoryBucketServerSideEncryptionByDefaultOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionByDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketServerSideEncryptionByDefaultOutput)
}

func (i DirectoryBucketServerSideEncryptionByDefaultArgs) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutput() DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return i.ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (i DirectoryBucketServerSideEncryptionByDefaultArgs) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketServerSideEncryptionByDefaultOutput).ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx)
}

// DirectoryBucketServerSideEncryptionByDefaultPtrInput is an input type that accepts DirectoryBucketServerSideEncryptionByDefaultArgs, DirectoryBucketServerSideEncryptionByDefaultPtr and DirectoryBucketServerSideEncryptionByDefaultPtrOutput values.
// You can construct a concrete instance of `DirectoryBucketServerSideEncryptionByDefaultPtrInput` via:
//
//	        DirectoryBucketServerSideEncryptionByDefaultArgs{...}
//
//	or:
//
//	        nil
type DirectoryBucketServerSideEncryptionByDefaultPtrInput interface {
	pulumi.Input

	ToDirectoryBucketServerSideEncryptionByDefaultPtrOutput() DirectoryBucketServerSideEncryptionByDefaultPtrOutput
	ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(context.Context) DirectoryBucketServerSideEncryptionByDefaultPtrOutput
}

type directoryBucketServerSideEncryptionByDefaultPtrType DirectoryBucketServerSideEncryptionByDefaultArgs

func DirectoryBucketServerSideEncryptionByDefaultPtr(v *DirectoryBucketServerSideEncryptionByDefaultArgs) DirectoryBucketServerSideEncryptionByDefaultPtrInput {
	return (*directoryBucketServerSideEncryptionByDefaultPtrType)(v)
}

func (*directoryBucketServerSideEncryptionByDefaultPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketServerSideEncryptionByDefault)(nil)).Elem()
}

func (i *directoryBucketServerSideEncryptionByDefaultPtrType) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutput() DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return i.ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (i *directoryBucketServerSideEncryptionByDefaultPtrType) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketServerSideEncryptionByDefaultPtrOutput)
}

// Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.
type DirectoryBucketServerSideEncryptionByDefaultOutput struct{ *pulumi.OutputState }

func (DirectoryBucketServerSideEncryptionByDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketServerSideEncryptionByDefault)(nil)).Elem()
}

func (o DirectoryBucketServerSideEncryptionByDefaultOutput) ToDirectoryBucketServerSideEncryptionByDefaultOutput() DirectoryBucketServerSideEncryptionByDefaultOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionByDefaultOutput) ToDirectoryBucketServerSideEncryptionByDefaultOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionByDefaultOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionByDefaultOutput) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutput() DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return o.ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(context.Background())
}

func (o DirectoryBucketServerSideEncryptionByDefaultOutput) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectoryBucketServerSideEncryptionByDefault) *DirectoryBucketServerSideEncryptionByDefault {
		return &v
	}).(DirectoryBucketServerSideEncryptionByDefaultPtrOutput)
}

// AWS Key Management Service (KMS) customer managed key ID to use for the default encryption. This parameter is allowed only if SSEAlgorithm is set to aws:kms. You can specify this parameter with the key ID or the Amazon Resource Name (ARN) of the KMS key
func (o DirectoryBucketServerSideEncryptionByDefaultOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DirectoryBucketServerSideEncryptionByDefault) *string { return v.KmsMasterKeyId }).(pulumi.StringPtrOutput)
}

func (o DirectoryBucketServerSideEncryptionByDefaultOutput) SseAlgorithm() DirectoryBucketServerSideEncryptionByDefaultSseAlgorithmOutput {
	return o.ApplyT(func(v DirectoryBucketServerSideEncryptionByDefault) DirectoryBucketServerSideEncryptionByDefaultSseAlgorithm {
		return v.SseAlgorithm
	}).(DirectoryBucketServerSideEncryptionByDefaultSseAlgorithmOutput)
}

type DirectoryBucketServerSideEncryptionByDefaultPtrOutput struct{ *pulumi.OutputState }

func (DirectoryBucketServerSideEncryptionByDefaultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectoryBucketServerSideEncryptionByDefault)(nil)).Elem()
}

func (o DirectoryBucketServerSideEncryptionByDefaultPtrOutput) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutput() DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionByDefaultPtrOutput) ToDirectoryBucketServerSideEncryptionByDefaultPtrOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionByDefaultPtrOutput) Elem() DirectoryBucketServerSideEncryptionByDefaultOutput {
	return o.ApplyT(func(v *DirectoryBucketServerSideEncryptionByDefault) DirectoryBucketServerSideEncryptionByDefault {
		if v != nil {
			return *v
		}
		var ret DirectoryBucketServerSideEncryptionByDefault
		return ret
	}).(DirectoryBucketServerSideEncryptionByDefaultOutput)
}

// AWS Key Management Service (KMS) customer managed key ID to use for the default encryption. This parameter is allowed only if SSEAlgorithm is set to aws:kms. You can specify this parameter with the key ID or the Amazon Resource Name (ARN) of the KMS key
func (o DirectoryBucketServerSideEncryptionByDefaultPtrOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectoryBucketServerSideEncryptionByDefault) *string {
		if v == nil {
			return nil
		}
		return v.KmsMasterKeyId
	}).(pulumi.StringPtrOutput)
}

func (o DirectoryBucketServerSideEncryptionByDefaultPtrOutput) SseAlgorithm() DirectoryBucketServerSideEncryptionByDefaultSseAlgorithmPtrOutput {
	return o.ApplyT(func(v *DirectoryBucketServerSideEncryptionByDefault) *DirectoryBucketServerSideEncryptionByDefaultSseAlgorithm {
		if v == nil {
			return nil
		}
		return &v.SseAlgorithm
	}).(DirectoryBucketServerSideEncryptionByDefaultSseAlgorithmPtrOutput)
}

// Specifies the default server-side encryption configuration.
type DirectoryBucketServerSideEncryptionRule struct {
	// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Amazon S3 Express One Zone uses an S3 Bucket Key with SSE-KMS and S3 Bucket Key cannot be disabled. It's only allowed to set the BucketKeyEnabled element to true.
	BucketKeyEnabled              *bool                                         `pulumi:"bucketKeyEnabled"`
	ServerSideEncryptionByDefault *DirectoryBucketServerSideEncryptionByDefault `pulumi:"serverSideEncryptionByDefault"`
}

// DirectoryBucketServerSideEncryptionRuleInput is an input type that accepts DirectoryBucketServerSideEncryptionRuleArgs and DirectoryBucketServerSideEncryptionRuleOutput values.
// You can construct a concrete instance of `DirectoryBucketServerSideEncryptionRuleInput` via:
//
//	DirectoryBucketServerSideEncryptionRuleArgs{...}
type DirectoryBucketServerSideEncryptionRuleInput interface {
	pulumi.Input

	ToDirectoryBucketServerSideEncryptionRuleOutput() DirectoryBucketServerSideEncryptionRuleOutput
	ToDirectoryBucketServerSideEncryptionRuleOutputWithContext(context.Context) DirectoryBucketServerSideEncryptionRuleOutput
}

// Specifies the default server-side encryption configuration.
type DirectoryBucketServerSideEncryptionRuleArgs struct {
	// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Amazon S3 Express One Zone uses an S3 Bucket Key with SSE-KMS and S3 Bucket Key cannot be disabled. It's only allowed to set the BucketKeyEnabled element to true.
	BucketKeyEnabled              pulumi.BoolPtrInput                                  `pulumi:"bucketKeyEnabled"`
	ServerSideEncryptionByDefault DirectoryBucketServerSideEncryptionByDefaultPtrInput `pulumi:"serverSideEncryptionByDefault"`
}

func (DirectoryBucketServerSideEncryptionRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketServerSideEncryptionRule)(nil)).Elem()
}

func (i DirectoryBucketServerSideEncryptionRuleArgs) ToDirectoryBucketServerSideEncryptionRuleOutput() DirectoryBucketServerSideEncryptionRuleOutput {
	return i.ToDirectoryBucketServerSideEncryptionRuleOutputWithContext(context.Background())
}

func (i DirectoryBucketServerSideEncryptionRuleArgs) ToDirectoryBucketServerSideEncryptionRuleOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketServerSideEncryptionRuleOutput)
}

// DirectoryBucketServerSideEncryptionRuleArrayInput is an input type that accepts DirectoryBucketServerSideEncryptionRuleArray and DirectoryBucketServerSideEncryptionRuleArrayOutput values.
// You can construct a concrete instance of `DirectoryBucketServerSideEncryptionRuleArrayInput` via:
//
//	DirectoryBucketServerSideEncryptionRuleArray{ DirectoryBucketServerSideEncryptionRuleArgs{...} }
type DirectoryBucketServerSideEncryptionRuleArrayInput interface {
	pulumi.Input

	ToDirectoryBucketServerSideEncryptionRuleArrayOutput() DirectoryBucketServerSideEncryptionRuleArrayOutput
	ToDirectoryBucketServerSideEncryptionRuleArrayOutputWithContext(context.Context) DirectoryBucketServerSideEncryptionRuleArrayOutput
}

type DirectoryBucketServerSideEncryptionRuleArray []DirectoryBucketServerSideEncryptionRuleInput

func (DirectoryBucketServerSideEncryptionRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectoryBucketServerSideEncryptionRule)(nil)).Elem()
}

func (i DirectoryBucketServerSideEncryptionRuleArray) ToDirectoryBucketServerSideEncryptionRuleArrayOutput() DirectoryBucketServerSideEncryptionRuleArrayOutput {
	return i.ToDirectoryBucketServerSideEncryptionRuleArrayOutputWithContext(context.Background())
}

func (i DirectoryBucketServerSideEncryptionRuleArray) ToDirectoryBucketServerSideEncryptionRuleArrayOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryBucketServerSideEncryptionRuleArrayOutput)
}

// Specifies the default server-side encryption configuration.
type DirectoryBucketServerSideEncryptionRuleOutput struct{ *pulumi.OutputState }

func (DirectoryBucketServerSideEncryptionRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryBucketServerSideEncryptionRule)(nil)).Elem()
}

func (o DirectoryBucketServerSideEncryptionRuleOutput) ToDirectoryBucketServerSideEncryptionRuleOutput() DirectoryBucketServerSideEncryptionRuleOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionRuleOutput) ToDirectoryBucketServerSideEncryptionRuleOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionRuleOutput {
	return o
}

// Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Amazon S3 Express One Zone uses an S3 Bucket Key with SSE-KMS and S3 Bucket Key cannot be disabled. It's only allowed to set the BucketKeyEnabled element to true.
func (o DirectoryBucketServerSideEncryptionRuleOutput) BucketKeyEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DirectoryBucketServerSideEncryptionRule) *bool { return v.BucketKeyEnabled }).(pulumi.BoolPtrOutput)
}

func (o DirectoryBucketServerSideEncryptionRuleOutput) ServerSideEncryptionByDefault() DirectoryBucketServerSideEncryptionByDefaultPtrOutput {
	return o.ApplyT(func(v DirectoryBucketServerSideEncryptionRule) *DirectoryBucketServerSideEncryptionByDefault {
		return v.ServerSideEncryptionByDefault
	}).(DirectoryBucketServerSideEncryptionByDefaultPtrOutput)
}

type DirectoryBucketServerSideEncryptionRuleArrayOutput struct{ *pulumi.OutputState }

func (DirectoryBucketServerSideEncryptionRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectoryBucketServerSideEncryptionRule)(nil)).Elem()
}

func (o DirectoryBucketServerSideEncryptionRuleArrayOutput) ToDirectoryBucketServerSideEncryptionRuleArrayOutput() DirectoryBucketServerSideEncryptionRuleArrayOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionRuleArrayOutput) ToDirectoryBucketServerSideEncryptionRuleArrayOutputWithContext(ctx context.Context) DirectoryBucketServerSideEncryptionRuleArrayOutput {
	return o
}

func (o DirectoryBucketServerSideEncryptionRuleArrayOutput) Index(i pulumi.IntInput) DirectoryBucketServerSideEncryptionRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectoryBucketServerSideEncryptionRule {
		return vs[0].([]DirectoryBucketServerSideEncryptionRule)[vs[1].(int)]
	}).(DirectoryBucketServerSideEncryptionRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketBucketEncryptionInput)(nil)).Elem(), DirectoryBucketBucketEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketBucketEncryptionPtrInput)(nil)).Elem(), DirectoryBucketBucketEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketServerSideEncryptionByDefaultInput)(nil)).Elem(), DirectoryBucketServerSideEncryptionByDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketServerSideEncryptionByDefaultPtrInput)(nil)).Elem(), DirectoryBucketServerSideEncryptionByDefaultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketServerSideEncryptionRuleInput)(nil)).Elem(), DirectoryBucketServerSideEncryptionRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryBucketServerSideEncryptionRuleArrayInput)(nil)).Elem(), DirectoryBucketServerSideEncryptionRuleArray{})
	pulumi.RegisterOutputType(DirectoryBucketBucketEncryptionOutput{})
	pulumi.RegisterOutputType(DirectoryBucketBucketEncryptionPtrOutput{})
	pulumi.RegisterOutputType(DirectoryBucketServerSideEncryptionByDefaultOutput{})
	pulumi.RegisterOutputType(DirectoryBucketServerSideEncryptionByDefaultPtrOutput{})
	pulumi.RegisterOutputType(DirectoryBucketServerSideEncryptionRuleOutput{})
	pulumi.RegisterOutputType(DirectoryBucketServerSideEncryptionRuleArrayOutput{})
}
