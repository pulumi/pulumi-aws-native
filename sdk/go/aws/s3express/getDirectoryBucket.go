// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3express

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::S3Express::DirectoryBucket.
func LookupDirectoryBucket(ctx *pulumi.Context, args *LookupDirectoryBucketArgs, opts ...pulumi.InvokeOption) (*LookupDirectoryBucketResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDirectoryBucketResult
	err := ctx.Invoke("aws-native:s3express:getDirectoryBucket", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDirectoryBucketArgs struct {
	// Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A directory bucket name must be unique in the chosen Availability Zone or Local Zone. The bucket name must also follow the format 'bucket_base_name--zone_id--x-s3'. The zone_id can be the ID of an Availability Zone or a Local Zone. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
	BucketName string `pulumi:"bucketName"`
}

type LookupDirectoryBucketResult struct {
	// Returns the Amazon Resource Name (ARN) of the specified bucket.
	Arn *string `pulumi:"arn"`
	// Returns the code for the Availability Zone or Local Zone where the directory bucket was created. An example for the code of an Availability Zone is 'us-east-1f'.
	AvailabilityZoneName *string `pulumi:"availabilityZoneName"`
	// Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS). For information about default encryption for directory buckets, see [Setting and monitoring default encryption for directory buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-bucket-encryption.html) in the *Amazon S3 User Guide* .
	BucketEncryption *DirectoryBucketBucketEncryption `pulumi:"bucketEncryption"`
	// Lifecycle rules that define how Amazon S3 Express manages objects during their lifetime.
	LifecycleConfiguration *DirectoryBucketLifecycleConfiguration `pulumi:"lifecycleConfiguration"`
	// An array of tags that you can apply to the S3 directory bucket. Tags are key-value pairs of metadata used to categorize and organize your buckets, track costs, and control access. For more information, see [Using tags with directory buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-buckets-tagging.html) .
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDirectoryBucketOutput(ctx *pulumi.Context, args LookupDirectoryBucketOutputArgs, opts ...pulumi.InvokeOption) LookupDirectoryBucketResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDirectoryBucketResultOutput, error) {
			args := v.(LookupDirectoryBucketArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:s3express:getDirectoryBucket", args, LookupDirectoryBucketResultOutput{}, options).(LookupDirectoryBucketResultOutput), nil
		}).(LookupDirectoryBucketResultOutput)
}

type LookupDirectoryBucketOutputArgs struct {
	// Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A directory bucket name must be unique in the chosen Availability Zone or Local Zone. The bucket name must also follow the format 'bucket_base_name--zone_id--x-s3'. The zone_id can be the ID of an Availability Zone or a Local Zone. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (LookupDirectoryBucketOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryBucketArgs)(nil)).Elem()
}

type LookupDirectoryBucketResultOutput struct{ *pulumi.OutputState }

func (LookupDirectoryBucketResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryBucketResult)(nil)).Elem()
}

func (o LookupDirectoryBucketResultOutput) ToLookupDirectoryBucketResultOutput() LookupDirectoryBucketResultOutput {
	return o
}

func (o LookupDirectoryBucketResultOutput) ToLookupDirectoryBucketResultOutputWithContext(ctx context.Context) LookupDirectoryBucketResultOutput {
	return o
}

// Returns the Amazon Resource Name (ARN) of the specified bucket.
func (o LookupDirectoryBucketResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDirectoryBucketResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Returns the code for the Availability Zone or Local Zone where the directory bucket was created. An example for the code of an Availability Zone is 'us-east-1f'.
func (o LookupDirectoryBucketResultOutput) AvailabilityZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDirectoryBucketResult) *string { return v.AvailabilityZoneName }).(pulumi.StringPtrOutput)
}

// Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS). For information about default encryption for directory buckets, see [Setting and monitoring default encryption for directory buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-bucket-encryption.html) in the *Amazon S3 User Guide* .
func (o LookupDirectoryBucketResultOutput) BucketEncryption() DirectoryBucketBucketEncryptionPtrOutput {
	return o.ApplyT(func(v LookupDirectoryBucketResult) *DirectoryBucketBucketEncryption { return v.BucketEncryption }).(DirectoryBucketBucketEncryptionPtrOutput)
}

// Lifecycle rules that define how Amazon S3 Express manages objects during their lifetime.
func (o LookupDirectoryBucketResultOutput) LifecycleConfiguration() DirectoryBucketLifecycleConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDirectoryBucketResult) *DirectoryBucketLifecycleConfiguration {
		return v.LifecycleConfiguration
	}).(DirectoryBucketLifecycleConfigurationPtrOutput)
}

// An array of tags that you can apply to the S3 directory bucket. Tags are key-value pairs of metadata used to categorize and organize your buckets, track costs, and control access. For more information, see [Using tags with directory buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/directory-buckets-tagging.html) .
func (o LookupDirectoryBucketResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDirectoryBucketResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDirectoryBucketResultOutput{})
}
