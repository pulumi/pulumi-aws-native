// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3express

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::S3Express::DirectoryBucket.
func LookupDirectoryBucket(ctx *pulumi.Context, args *LookupDirectoryBucketArgs, opts ...pulumi.InvokeOption) (*LookupDirectoryBucketResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDirectoryBucketResult
	err := ctx.Invoke("aws-native:s3express:getDirectoryBucket", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDirectoryBucketArgs struct {
	// Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A directory bucket name must be unique in the chosen Availability Zone. The bucket name must also follow the format 'bucket_base_name--az_id--x-s3' (for example, 'DOC-EXAMPLE-BUCKET--usw2-az1--x-s3'). If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
	BucketName string `pulumi:"bucketName"`
}

type LookupDirectoryBucketResult struct {
	// Returns the Amazon Resource Name (ARN) of the specified bucket.
	Arn *string `pulumi:"arn"`
	// Returns the code for the Availability Zone where the directory bucket was created.
	AvailabilityZoneName *string `pulumi:"availabilityZoneName"`
	// Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS). For information about default encryption for directory buckets, see [Setting and monitoring default encryption for directory buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-bucket-encryption.html) in the *Amazon S3 User Guide* .
	BucketEncryption *DirectoryBucketBucketEncryption `pulumi:"bucketEncryption"`
	// Lifecycle rules that define how Amazon S3 Express manages objects during their lifetime.
	LifecycleConfiguration *DirectoryBucketLifecycleConfiguration `pulumi:"lifecycleConfiguration"`
}

func LookupDirectoryBucketOutput(ctx *pulumi.Context, args LookupDirectoryBucketOutputArgs, opts ...pulumi.InvokeOption) LookupDirectoryBucketResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDirectoryBucketResultOutput, error) {
			args := v.(LookupDirectoryBucketArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupDirectoryBucketResult
			secret, err := ctx.InvokePackageRaw("aws-native:s3express:getDirectoryBucket", args, &rv, "", opts...)
			if err != nil {
				return LookupDirectoryBucketResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupDirectoryBucketResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupDirectoryBucketResultOutput), nil
			}
			return output, nil
		}).(LookupDirectoryBucketResultOutput)
}

type LookupDirectoryBucketOutputArgs struct {
	// Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, and hyphens (-). A directory bucket name must be unique in the chosen Availability Zone. The bucket name must also follow the format 'bucket_base_name--az_id--x-s3' (for example, 'DOC-EXAMPLE-BUCKET--usw2-az1--x-s3'). If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (LookupDirectoryBucketOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryBucketArgs)(nil)).Elem()
}

type LookupDirectoryBucketResultOutput struct{ *pulumi.OutputState }

func (LookupDirectoryBucketResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryBucketResult)(nil)).Elem()
}

func (o LookupDirectoryBucketResultOutput) ToLookupDirectoryBucketResultOutput() LookupDirectoryBucketResultOutput {
	return o
}

func (o LookupDirectoryBucketResultOutput) ToLookupDirectoryBucketResultOutputWithContext(ctx context.Context) LookupDirectoryBucketResultOutput {
	return o
}

// Returns the Amazon Resource Name (ARN) of the specified bucket.
func (o LookupDirectoryBucketResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDirectoryBucketResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Returns the code for the Availability Zone where the directory bucket was created.
func (o LookupDirectoryBucketResultOutput) AvailabilityZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDirectoryBucketResult) *string { return v.AvailabilityZoneName }).(pulumi.StringPtrOutput)
}

// Specifies default encryption for a bucket using server-side encryption with Amazon S3 managed keys (SSE-S3) or AWS KMS keys (SSE-KMS). For information about default encryption for directory buckets, see [Setting and monitoring default encryption for directory buckets](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-express-bucket-encryption.html) in the *Amazon S3 User Guide* .
func (o LookupDirectoryBucketResultOutput) BucketEncryption() DirectoryBucketBucketEncryptionPtrOutput {
	return o.ApplyT(func(v LookupDirectoryBucketResult) *DirectoryBucketBucketEncryption { return v.BucketEncryption }).(DirectoryBucketBucketEncryptionPtrOutput)
}

// Lifecycle rules that define how Amazon S3 Express manages objects during their lifetime.
func (o LookupDirectoryBucketResultOutput) LifecycleConfiguration() DirectoryBucketLifecycleConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDirectoryBucketResult) *DirectoryBucketLifecycleConfiguration {
		return v.LifecycleConfiguration
	}).(DirectoryBucketLifecycleConfigurationPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDirectoryBucketResultOutput{})
}
