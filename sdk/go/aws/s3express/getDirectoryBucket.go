// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3express

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::S3Express::DirectoryBucket.
func LookupDirectoryBucket(ctx *pulumi.Context, args *LookupDirectoryBucketArgs, opts ...pulumi.InvokeOption) (*LookupDirectoryBucketResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDirectoryBucketResult
	err := ctx.Invoke("aws-native:s3express:getDirectoryBucket", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDirectoryBucketArgs struct {
	// Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, dots (.), and hyphens (-). A directory bucket name must be unique in the chosen Availability Zone. The bucket name must also follow the format 'bucket_base_name--az_id--x-s3' (for example, 'DOC-EXAMPLE-BUCKET--usw2-az2--x-s3'). If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
	BucketName string `pulumi:"bucketName"`
}

type LookupDirectoryBucketResult struct {
	// Returns the Amazon Resource Name (ARN) of the specified bucket.
	Arn *string `pulumi:"arn"`
}

func LookupDirectoryBucketOutput(ctx *pulumi.Context, args LookupDirectoryBucketOutputArgs, opts ...pulumi.InvokeOption) LookupDirectoryBucketResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDirectoryBucketResult, error) {
			args := v.(LookupDirectoryBucketArgs)
			r, err := LookupDirectoryBucket(ctx, &args, opts...)
			var s LookupDirectoryBucketResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDirectoryBucketResultOutput)
}

type LookupDirectoryBucketOutputArgs struct {
	// Specifies a name for the bucket. The bucket name must contain only lowercase letters, numbers, dots (.), and hyphens (-). A directory bucket name must be unique in the chosen Availability Zone. The bucket name must also follow the format 'bucket_base_name--az_id--x-s3' (for example, 'DOC-EXAMPLE-BUCKET--usw2-az2--x-s3'). If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
}

func (LookupDirectoryBucketOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryBucketArgs)(nil)).Elem()
}

type LookupDirectoryBucketResultOutput struct{ *pulumi.OutputState }

func (LookupDirectoryBucketResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryBucketResult)(nil)).Elem()
}

func (o LookupDirectoryBucketResultOutput) ToLookupDirectoryBucketResultOutput() LookupDirectoryBucketResultOutput {
	return o
}

func (o LookupDirectoryBucketResultOutput) ToLookupDirectoryBucketResultOutputWithContext(ctx context.Context) LookupDirectoryBucketResultOutput {
	return o
}

func (o LookupDirectoryBucketResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDirectoryBucketResult] {
	return pulumix.Output[LookupDirectoryBucketResult]{
		OutputState: o.OutputState,
	}
}

// Returns the Amazon Resource Name (ARN) of the specified bucket.
func (o LookupDirectoryBucketResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDirectoryBucketResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDirectoryBucketResultOutput{})
}
