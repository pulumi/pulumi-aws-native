// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html
type RealtimeLogConfig struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-endpoints
	EndPoints RealtimeLogConfigEndPointArrayOutput `pulumi:"endPoints"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-fields
	Fields pulumi.StringArrayOutput `pulumi:"fields"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-name
	Name pulumi.StringOutput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-samplingrate
	SamplingRate pulumi.Float64Output `pulumi:"samplingRate"`
}

// NewRealtimeLogConfig registers a new resource with the given unique name, arguments, and options.
func NewRealtimeLogConfig(ctx *pulumi.Context,
	name string, args *RealtimeLogConfigArgs, opts ...pulumi.ResourceOption) (*RealtimeLogConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndPoints == nil {
		return nil, errors.New("invalid value for required argument 'EndPoints'")
	}
	if args.Fields == nil {
		return nil, errors.New("invalid value for required argument 'Fields'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.SamplingRate == nil {
		return nil, errors.New("invalid value for required argument 'SamplingRate'")
	}
	var resource RealtimeLogConfig
	err := ctx.RegisterResource("aws-native:cloudfront:RealtimeLogConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRealtimeLogConfig gets an existing RealtimeLogConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRealtimeLogConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RealtimeLogConfigState, opts ...pulumi.ResourceOption) (*RealtimeLogConfig, error) {
	var resource RealtimeLogConfig
	err := ctx.ReadResource("aws-native:cloudfront:RealtimeLogConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RealtimeLogConfig resources.
type realtimeLogConfigState struct {
}

type RealtimeLogConfigState struct {
}

func (RealtimeLogConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*realtimeLogConfigState)(nil)).Elem()
}

type realtimeLogConfigArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-endpoints
	EndPoints []RealtimeLogConfigEndPoint `pulumi:"endPoints"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-fields
	Fields []string `pulumi:"fields"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-samplingrate
	SamplingRate float64 `pulumi:"samplingRate"`
}

// The set of arguments for constructing a RealtimeLogConfig resource.
type RealtimeLogConfigArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-endpoints
	EndPoints RealtimeLogConfigEndPointArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-fields
	Fields pulumi.StringArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-name
	Name pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudfront-realtimelogconfig.html#cfn-cloudfront-realtimelogconfig-samplingrate
	SamplingRate pulumi.Float64Input
}

func (RealtimeLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*realtimeLogConfigArgs)(nil)).Elem()
}

type RealtimeLogConfigInput interface {
	pulumi.Input

	ToRealtimeLogConfigOutput() RealtimeLogConfigOutput
	ToRealtimeLogConfigOutputWithContext(ctx context.Context) RealtimeLogConfigOutput
}

func (*RealtimeLogConfig) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfig)(nil))
}

func (i *RealtimeLogConfig) ToRealtimeLogConfigOutput() RealtimeLogConfigOutput {
	return i.ToRealtimeLogConfigOutputWithContext(context.Background())
}

func (i *RealtimeLogConfig) ToRealtimeLogConfigOutputWithContext(ctx context.Context) RealtimeLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogConfigOutput)
}

type RealtimeLogConfigOutput struct{ *pulumi.OutputState }

func (RealtimeLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfig)(nil))
}

func (o RealtimeLogConfigOutput) ToRealtimeLogConfigOutput() RealtimeLogConfigOutput {
	return o
}

func (o RealtimeLogConfigOutput) ToRealtimeLogConfigOutputWithContext(ctx context.Context) RealtimeLogConfigOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(RealtimeLogConfigOutput{})
}
