// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A real-time log configuration.
type RealtimeLogConfig struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the real-time log configuration. For example: `arn:aws:cloudfront::111122223333:realtime-log-config/ExampleNameForRealtimeLogConfig` .
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Contains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration.
	EndPoints RealtimeLogConfigEndPointArrayOutput `pulumi:"endPoints"`
	// A list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.
	//  For more information about fields, see [Real-time log configuration fields](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) in the *Amazon CloudFront Developer Guide*.
	Fields pulumi.StringArrayOutput `pulumi:"fields"`
	// The unique name of this real-time log configuration.
	Name pulumi.StringOutput `pulumi:"name"`
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.
	SamplingRate pulumi.Float64Output `pulumi:"samplingRate"`
}

// NewRealtimeLogConfig registers a new resource with the given unique name, arguments, and options.
func NewRealtimeLogConfig(ctx *pulumi.Context,
	name string, args *RealtimeLogConfigArgs, opts ...pulumi.ResourceOption) (*RealtimeLogConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EndPoints == nil {
		return nil, errors.New("invalid value for required argument 'EndPoints'")
	}
	if args.Fields == nil {
		return nil, errors.New("invalid value for required argument 'Fields'")
	}
	if args.SamplingRate == nil {
		return nil, errors.New("invalid value for required argument 'SamplingRate'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RealtimeLogConfig
	err := ctx.RegisterResource("aws-native:cloudfront:RealtimeLogConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRealtimeLogConfig gets an existing RealtimeLogConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRealtimeLogConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RealtimeLogConfigState, opts ...pulumi.ResourceOption) (*RealtimeLogConfig, error) {
	var resource RealtimeLogConfig
	err := ctx.ReadResource("aws-native:cloudfront:RealtimeLogConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RealtimeLogConfig resources.
type realtimeLogConfigState struct {
}

type RealtimeLogConfigState struct {
}

func (RealtimeLogConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*realtimeLogConfigState)(nil)).Elem()
}

type realtimeLogConfigArgs struct {
	// Contains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration.
	EndPoints []RealtimeLogConfigEndPoint `pulumi:"endPoints"`
	// A list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.
	//  For more information about fields, see [Real-time log configuration fields](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) in the *Amazon CloudFront Developer Guide*.
	Fields []string `pulumi:"fields"`
	// The unique name of this real-time log configuration.
	Name *string `pulumi:"name"`
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.
	SamplingRate float64 `pulumi:"samplingRate"`
}

// The set of arguments for constructing a RealtimeLogConfig resource.
type RealtimeLogConfigArgs struct {
	// Contains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration.
	EndPoints RealtimeLogConfigEndPointArrayInput
	// A list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.
	//  For more information about fields, see [Real-time log configuration fields](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) in the *Amazon CloudFront Developer Guide*.
	Fields pulumi.StringArrayInput
	// The unique name of this real-time log configuration.
	Name pulumi.StringPtrInput
	// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.
	SamplingRate pulumi.Float64Input
}

func (RealtimeLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*realtimeLogConfigArgs)(nil)).Elem()
}

type RealtimeLogConfigInput interface {
	pulumi.Input

	ToRealtimeLogConfigOutput() RealtimeLogConfigOutput
	ToRealtimeLogConfigOutputWithContext(ctx context.Context) RealtimeLogConfigOutput
}

func (*RealtimeLogConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeLogConfig)(nil)).Elem()
}

func (i *RealtimeLogConfig) ToRealtimeLogConfigOutput() RealtimeLogConfigOutput {
	return i.ToRealtimeLogConfigOutputWithContext(context.Background())
}

func (i *RealtimeLogConfig) ToRealtimeLogConfigOutputWithContext(ctx context.Context) RealtimeLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogConfigOutput)
}

type RealtimeLogConfigOutput struct{ *pulumi.OutputState }

func (RealtimeLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RealtimeLogConfig)(nil)).Elem()
}

func (o RealtimeLogConfigOutput) ToRealtimeLogConfigOutput() RealtimeLogConfigOutput {
	return o
}

func (o RealtimeLogConfigOutput) ToRealtimeLogConfigOutputWithContext(ctx context.Context) RealtimeLogConfigOutput {
	return o
}

// The Amazon Resource Name (ARN) of the real-time log configuration. For example: `arn:aws:cloudfront::111122223333:realtime-log-config/ExampleNameForRealtimeLogConfig` .
func (o RealtimeLogConfigOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *RealtimeLogConfig) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Contains information about the Amazon Kinesis data stream where you are sending real-time log data for this real-time log configuration.
func (o RealtimeLogConfigOutput) EndPoints() RealtimeLogConfigEndPointArrayOutput {
	return o.ApplyT(func(v *RealtimeLogConfig) RealtimeLogConfigEndPointArrayOutput { return v.EndPoints }).(RealtimeLogConfigEndPointArrayOutput)
}

// A list of fields that are included in each real-time log record. In an API response, the fields are provided in the same order in which they are sent to the Amazon Kinesis data stream.
//
//	For more information about fields, see [Real-time log configuration fields](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields) in the *Amazon CloudFront Developer Guide*.
func (o RealtimeLogConfigOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RealtimeLogConfig) pulumi.StringArrayOutput { return v.Fields }).(pulumi.StringArrayOutput)
}

// The unique name of this real-time log configuration.
func (o RealtimeLogConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RealtimeLogConfig) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. The sampling rate is an integer between 1 and 100, inclusive.
func (o RealtimeLogConfigOutput) SamplingRate() pulumi.Float64Output {
	return o.ApplyT(func(v *RealtimeLogConfig) pulumi.Float64Output { return v.SamplingRate }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogConfigInput)(nil)).Elem(), &RealtimeLogConfig{})
	pulumi.RegisterOutputType(RealtimeLogConfigOutput{})
}
