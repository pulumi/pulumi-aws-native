// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::CloudFront::Function
type Function struct {
	pulumi.CustomResourceState

	// A flag that determines whether to automatically publish the function to the `LIVE` stage when it’s created. To automatically publish to the `LIVE` stage, set this property to `true` .
	AutoPublish pulumi.BoolPtrOutput `pulumi:"autoPublish"`
	// The ARN of the function. For example:
	//
	// `arn:aws:cloudfront::123456789012:function/ExampleFunction` .
	//
	// To get the function ARN, use the following syntax:
	//
	// `!GetAtt *Function_Logical_ID* .FunctionMetadata.FunctionARN`
	FunctionArn pulumi.StringOutput `pulumi:"functionArn"`
	// The function code. For more information about writing a CloudFront function, see [Writing function code for CloudFront Functions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html) in the *Amazon CloudFront Developer Guide* .
	FunctionCode pulumi.StringOutput `pulumi:"functionCode"`
	// Contains configuration information about a CloudFront function.
	FunctionConfig FunctionConfigOutput `pulumi:"functionConfig"`
	// Contains metadata about a CloudFront function.
	FunctionMetadata FunctionMetadataPtrOutput `pulumi:"functionMetadata"`
	// A name to identify the function.
	Name  pulumi.StringOutput `pulumi:"name"`
	Stage pulumi.StringOutput `pulumi:"stage"`
}

// NewFunction registers a new resource with the given unique name, arguments, and options.
func NewFunction(ctx *pulumi.Context,
	name string, args *FunctionArgs, opts ...pulumi.ResourceOption) (*Function, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FunctionCode == nil {
		return nil, errors.New("invalid value for required argument 'FunctionCode'")
	}
	if args.FunctionConfig == nil {
		return nil, errors.New("invalid value for required argument 'FunctionConfig'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Function
	err := ctx.RegisterResource("aws-native:cloudfront:Function", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunction gets an existing Function resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionState, opts ...pulumi.ResourceOption) (*Function, error) {
	var resource Function
	err := ctx.ReadResource("aws-native:cloudfront:Function", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Function resources.
type functionState struct {
}

type FunctionState struct {
}

func (FunctionState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionState)(nil)).Elem()
}

type functionArgs struct {
	// A flag that determines whether to automatically publish the function to the `LIVE` stage when it’s created. To automatically publish to the `LIVE` stage, set this property to `true` .
	AutoPublish *bool `pulumi:"autoPublish"`
	// The function code. For more information about writing a CloudFront function, see [Writing function code for CloudFront Functions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html) in the *Amazon CloudFront Developer Guide* .
	FunctionCode string `pulumi:"functionCode"`
	// Contains configuration information about a CloudFront function.
	FunctionConfig FunctionConfig `pulumi:"functionConfig"`
	// Contains metadata about a CloudFront function.
	FunctionMetadata *FunctionMetadata `pulumi:"functionMetadata"`
	// A name to identify the function.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a Function resource.
type FunctionArgs struct {
	// A flag that determines whether to automatically publish the function to the `LIVE` stage when it’s created. To automatically publish to the `LIVE` stage, set this property to `true` .
	AutoPublish pulumi.BoolPtrInput
	// The function code. For more information about writing a CloudFront function, see [Writing function code for CloudFront Functions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html) in the *Amazon CloudFront Developer Guide* .
	FunctionCode pulumi.StringInput
	// Contains configuration information about a CloudFront function.
	FunctionConfig FunctionConfigInput
	// Contains metadata about a CloudFront function.
	FunctionMetadata FunctionMetadataPtrInput
	// A name to identify the function.
	Name pulumi.StringPtrInput
}

func (FunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionArgs)(nil)).Elem()
}

type FunctionInput interface {
	pulumi.Input

	ToFunctionOutput() FunctionOutput
	ToFunctionOutputWithContext(ctx context.Context) FunctionOutput
}

func (*Function) ElementType() reflect.Type {
	return reflect.TypeOf((**Function)(nil)).Elem()
}

func (i *Function) ToFunctionOutput() FunctionOutput {
	return i.ToFunctionOutputWithContext(context.Background())
}

func (i *Function) ToFunctionOutputWithContext(ctx context.Context) FunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionOutput)
}

type FunctionOutput struct{ *pulumi.OutputState }

func (FunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Function)(nil)).Elem()
}

func (o FunctionOutput) ToFunctionOutput() FunctionOutput {
	return o
}

func (o FunctionOutput) ToFunctionOutputWithContext(ctx context.Context) FunctionOutput {
	return o
}

// A flag that determines whether to automatically publish the function to the `LIVE` stage when it’s created. To automatically publish to the `LIVE` stage, set this property to `true` .
func (o FunctionOutput) AutoPublish() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Function) pulumi.BoolPtrOutput { return v.AutoPublish }).(pulumi.BoolPtrOutput)
}

// The ARN of the function. For example:
//
// `arn:aws:cloudfront::123456789012:function/ExampleFunction` .
//
// To get the function ARN, use the following syntax:
//
// `!GetAtt *Function_Logical_ID* .FunctionMetadata.FunctionARN`
func (o FunctionOutput) FunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.FunctionArn }).(pulumi.StringOutput)
}

// The function code. For more information about writing a CloudFront function, see [Writing function code for CloudFront Functions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/writing-function-code.html) in the *Amazon CloudFront Developer Guide* .
func (o FunctionOutput) FunctionCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.FunctionCode }).(pulumi.StringOutput)
}

// Contains configuration information about a CloudFront function.
func (o FunctionOutput) FunctionConfig() FunctionConfigOutput {
	return o.ApplyT(func(v *Function) FunctionConfigOutput { return v.FunctionConfig }).(FunctionConfigOutput)
}

// Contains metadata about a CloudFront function.
func (o FunctionOutput) FunctionMetadata() FunctionMetadataPtrOutput {
	return o.ApplyT(func(v *Function) FunctionMetadataPtrOutput { return v.FunctionMetadata }).(FunctionMetadataPtrOutput)
}

// A name to identify the function.
func (o FunctionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FunctionOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v *Function) pulumi.StringOutput { return v.Stage }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionInput)(nil)).Elem(), &Function{})
	pulumi.RegisterOutputType(FunctionOutput{})
}
