// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CachePolicyConfig struct {
	Comment                                  *string                                             `pulumi:"comment"`
	DefaultTtl                               float64                                             `pulumi:"defaultTtl"`
	MaxTtl                                   float64                                             `pulumi:"maxTtl"`
	MinTtl                                   float64                                             `pulumi:"minTtl"`
	Name                                     string                                              `pulumi:"name"`
	ParametersInCacheKeyAndForwardedToOrigin CachePolicyParametersInCacheKeyAndForwardedToOrigin `pulumi:"parametersInCacheKeyAndForwardedToOrigin"`
}

// CachePolicyConfigInput is an input type that accepts CachePolicyConfigArgs and CachePolicyConfigOutput values.
// You can construct a concrete instance of `CachePolicyConfigInput` via:
//
//	CachePolicyConfigArgs{...}
type CachePolicyConfigInput interface {
	pulumi.Input

	ToCachePolicyConfigOutput() CachePolicyConfigOutput
	ToCachePolicyConfigOutputWithContext(context.Context) CachePolicyConfigOutput
}

type CachePolicyConfigArgs struct {
	Comment                                  pulumi.StringPtrInput                                    `pulumi:"comment"`
	DefaultTtl                               pulumi.Float64Input                                      `pulumi:"defaultTtl"`
	MaxTtl                                   pulumi.Float64Input                                      `pulumi:"maxTtl"`
	MinTtl                                   pulumi.Float64Input                                      `pulumi:"minTtl"`
	Name                                     pulumi.StringInput                                       `pulumi:"name"`
	ParametersInCacheKeyAndForwardedToOrigin CachePolicyParametersInCacheKeyAndForwardedToOriginInput `pulumi:"parametersInCacheKeyAndForwardedToOrigin"`
}

func (CachePolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyConfig)(nil)).Elem()
}

func (i CachePolicyConfigArgs) ToCachePolicyConfigOutput() CachePolicyConfigOutput {
	return i.ToCachePolicyConfigOutputWithContext(context.Background())
}

func (i CachePolicyConfigArgs) ToCachePolicyConfigOutputWithContext(ctx context.Context) CachePolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePolicyConfigOutput)
}

type CachePolicyConfigOutput struct{ *pulumi.OutputState }

func (CachePolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyConfig)(nil)).Elem()
}

func (o CachePolicyConfigOutput) ToCachePolicyConfigOutput() CachePolicyConfigOutput {
	return o
}

func (o CachePolicyConfigOutput) ToCachePolicyConfigOutputWithContext(ctx context.Context) CachePolicyConfigOutput {
	return o
}

func (o CachePolicyConfigOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CachePolicyConfig) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o CachePolicyConfigOutput) DefaultTtl() pulumi.Float64Output {
	return o.ApplyT(func(v CachePolicyConfig) float64 { return v.DefaultTtl }).(pulumi.Float64Output)
}

func (o CachePolicyConfigOutput) MaxTtl() pulumi.Float64Output {
	return o.ApplyT(func(v CachePolicyConfig) float64 { return v.MaxTtl }).(pulumi.Float64Output)
}

func (o CachePolicyConfigOutput) MinTtl() pulumi.Float64Output {
	return o.ApplyT(func(v CachePolicyConfig) float64 { return v.MinTtl }).(pulumi.Float64Output)
}

func (o CachePolicyConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CachePolicyConfig) string { return v.Name }).(pulumi.StringOutput)
}

func (o CachePolicyConfigOutput) ParametersInCacheKeyAndForwardedToOrigin() CachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return o.ApplyT(func(v CachePolicyConfig) CachePolicyParametersInCacheKeyAndForwardedToOrigin {
		return v.ParametersInCacheKeyAndForwardedToOrigin
	}).(CachePolicyParametersInCacheKeyAndForwardedToOriginOutput)
}

type CachePolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (CachePolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CachePolicyConfig)(nil)).Elem()
}

func (o CachePolicyConfigPtrOutput) ToCachePolicyConfigPtrOutput() CachePolicyConfigPtrOutput {
	return o
}

func (o CachePolicyConfigPtrOutput) ToCachePolicyConfigPtrOutputWithContext(ctx context.Context) CachePolicyConfigPtrOutput {
	return o
}

func (o CachePolicyConfigPtrOutput) Elem() CachePolicyConfigOutput {
	return o.ApplyT(func(v *CachePolicyConfig) CachePolicyConfig {
		if v != nil {
			return *v
		}
		var ret CachePolicyConfig
		return ret
	}).(CachePolicyConfigOutput)
}

func (o CachePolicyConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CachePolicyConfig) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

func (o CachePolicyConfigPtrOutput) DefaultTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CachePolicyConfig) *float64 {
		if v == nil {
			return nil
		}
		return &v.DefaultTtl
	}).(pulumi.Float64PtrOutput)
}

func (o CachePolicyConfigPtrOutput) MaxTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CachePolicyConfig) *float64 {
		if v == nil {
			return nil
		}
		return &v.MaxTtl
	}).(pulumi.Float64PtrOutput)
}

func (o CachePolicyConfigPtrOutput) MinTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CachePolicyConfig) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinTtl
	}).(pulumi.Float64PtrOutput)
}

func (o CachePolicyConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CachePolicyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o CachePolicyConfigPtrOutput) ParametersInCacheKeyAndForwardedToOrigin() CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput {
	return o.ApplyT(func(v *CachePolicyConfig) *CachePolicyParametersInCacheKeyAndForwardedToOrigin {
		if v == nil {
			return nil
		}
		return &v.ParametersInCacheKeyAndForwardedToOrigin
	}).(CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput)
}

type CachePolicyCookiesConfig struct {
	CookieBehavior string   `pulumi:"cookieBehavior"`
	Cookies        []string `pulumi:"cookies"`
}

// CachePolicyCookiesConfigInput is an input type that accepts CachePolicyCookiesConfigArgs and CachePolicyCookiesConfigOutput values.
// You can construct a concrete instance of `CachePolicyCookiesConfigInput` via:
//
//	CachePolicyCookiesConfigArgs{...}
type CachePolicyCookiesConfigInput interface {
	pulumi.Input

	ToCachePolicyCookiesConfigOutput() CachePolicyCookiesConfigOutput
	ToCachePolicyCookiesConfigOutputWithContext(context.Context) CachePolicyCookiesConfigOutput
}

type CachePolicyCookiesConfigArgs struct {
	CookieBehavior pulumi.StringInput      `pulumi:"cookieBehavior"`
	Cookies        pulumi.StringArrayInput `pulumi:"cookies"`
}

func (CachePolicyCookiesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyCookiesConfig)(nil)).Elem()
}

func (i CachePolicyCookiesConfigArgs) ToCachePolicyCookiesConfigOutput() CachePolicyCookiesConfigOutput {
	return i.ToCachePolicyCookiesConfigOutputWithContext(context.Background())
}

func (i CachePolicyCookiesConfigArgs) ToCachePolicyCookiesConfigOutputWithContext(ctx context.Context) CachePolicyCookiesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePolicyCookiesConfigOutput)
}

type CachePolicyCookiesConfigOutput struct{ *pulumi.OutputState }

func (CachePolicyCookiesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyCookiesConfig)(nil)).Elem()
}

func (o CachePolicyCookiesConfigOutput) ToCachePolicyCookiesConfigOutput() CachePolicyCookiesConfigOutput {
	return o
}

func (o CachePolicyCookiesConfigOutput) ToCachePolicyCookiesConfigOutputWithContext(ctx context.Context) CachePolicyCookiesConfigOutput {
	return o
}

func (o CachePolicyCookiesConfigOutput) CookieBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CachePolicyCookiesConfig) string { return v.CookieBehavior }).(pulumi.StringOutput)
}

func (o CachePolicyCookiesConfigOutput) Cookies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CachePolicyCookiesConfig) []string { return v.Cookies }).(pulumi.StringArrayOutput)
}

type CachePolicyCookiesConfigPtrOutput struct{ *pulumi.OutputState }

func (CachePolicyCookiesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CachePolicyCookiesConfig)(nil)).Elem()
}

func (o CachePolicyCookiesConfigPtrOutput) ToCachePolicyCookiesConfigPtrOutput() CachePolicyCookiesConfigPtrOutput {
	return o
}

func (o CachePolicyCookiesConfigPtrOutput) ToCachePolicyCookiesConfigPtrOutputWithContext(ctx context.Context) CachePolicyCookiesConfigPtrOutput {
	return o
}

func (o CachePolicyCookiesConfigPtrOutput) Elem() CachePolicyCookiesConfigOutput {
	return o.ApplyT(func(v *CachePolicyCookiesConfig) CachePolicyCookiesConfig {
		if v != nil {
			return *v
		}
		var ret CachePolicyCookiesConfig
		return ret
	}).(CachePolicyCookiesConfigOutput)
}

func (o CachePolicyCookiesConfigPtrOutput) CookieBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CachePolicyCookiesConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CookieBehavior
	}).(pulumi.StringPtrOutput)
}

func (o CachePolicyCookiesConfigPtrOutput) Cookies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CachePolicyCookiesConfig) []string {
		if v == nil {
			return nil
		}
		return v.Cookies
	}).(pulumi.StringArrayOutput)
}

type CachePolicyHeadersConfig struct {
	HeaderBehavior string   `pulumi:"headerBehavior"`
	Headers        []string `pulumi:"headers"`
}

// CachePolicyHeadersConfigInput is an input type that accepts CachePolicyHeadersConfigArgs and CachePolicyHeadersConfigOutput values.
// You can construct a concrete instance of `CachePolicyHeadersConfigInput` via:
//
//	CachePolicyHeadersConfigArgs{...}
type CachePolicyHeadersConfigInput interface {
	pulumi.Input

	ToCachePolicyHeadersConfigOutput() CachePolicyHeadersConfigOutput
	ToCachePolicyHeadersConfigOutputWithContext(context.Context) CachePolicyHeadersConfigOutput
}

type CachePolicyHeadersConfigArgs struct {
	HeaderBehavior pulumi.StringInput      `pulumi:"headerBehavior"`
	Headers        pulumi.StringArrayInput `pulumi:"headers"`
}

func (CachePolicyHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyHeadersConfig)(nil)).Elem()
}

func (i CachePolicyHeadersConfigArgs) ToCachePolicyHeadersConfigOutput() CachePolicyHeadersConfigOutput {
	return i.ToCachePolicyHeadersConfigOutputWithContext(context.Background())
}

func (i CachePolicyHeadersConfigArgs) ToCachePolicyHeadersConfigOutputWithContext(ctx context.Context) CachePolicyHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePolicyHeadersConfigOutput)
}

type CachePolicyHeadersConfigOutput struct{ *pulumi.OutputState }

func (CachePolicyHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyHeadersConfig)(nil)).Elem()
}

func (o CachePolicyHeadersConfigOutput) ToCachePolicyHeadersConfigOutput() CachePolicyHeadersConfigOutput {
	return o
}

func (o CachePolicyHeadersConfigOutput) ToCachePolicyHeadersConfigOutputWithContext(ctx context.Context) CachePolicyHeadersConfigOutput {
	return o
}

func (o CachePolicyHeadersConfigOutput) HeaderBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CachePolicyHeadersConfig) string { return v.HeaderBehavior }).(pulumi.StringOutput)
}

func (o CachePolicyHeadersConfigOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CachePolicyHeadersConfig) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

type CachePolicyHeadersConfigPtrOutput struct{ *pulumi.OutputState }

func (CachePolicyHeadersConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CachePolicyHeadersConfig)(nil)).Elem()
}

func (o CachePolicyHeadersConfigPtrOutput) ToCachePolicyHeadersConfigPtrOutput() CachePolicyHeadersConfigPtrOutput {
	return o
}

func (o CachePolicyHeadersConfigPtrOutput) ToCachePolicyHeadersConfigPtrOutputWithContext(ctx context.Context) CachePolicyHeadersConfigPtrOutput {
	return o
}

func (o CachePolicyHeadersConfigPtrOutput) Elem() CachePolicyHeadersConfigOutput {
	return o.ApplyT(func(v *CachePolicyHeadersConfig) CachePolicyHeadersConfig {
		if v != nil {
			return *v
		}
		var ret CachePolicyHeadersConfig
		return ret
	}).(CachePolicyHeadersConfigOutput)
}

func (o CachePolicyHeadersConfigPtrOutput) HeaderBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CachePolicyHeadersConfig) *string {
		if v == nil {
			return nil
		}
		return &v.HeaderBehavior
	}).(pulumi.StringPtrOutput)
}

func (o CachePolicyHeadersConfigPtrOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CachePolicyHeadersConfig) []string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringArrayOutput)
}

type CachePolicyParametersInCacheKeyAndForwardedToOrigin struct {
	CookiesConfig              CachePolicyCookiesConfig      `pulumi:"cookiesConfig"`
	EnableAcceptEncodingBrotli *bool                         `pulumi:"enableAcceptEncodingBrotli"`
	EnableAcceptEncodingGzip   bool                          `pulumi:"enableAcceptEncodingGzip"`
	HeadersConfig              CachePolicyHeadersConfig      `pulumi:"headersConfig"`
	QueryStringsConfig         CachePolicyQueryStringsConfig `pulumi:"queryStringsConfig"`
}

// CachePolicyParametersInCacheKeyAndForwardedToOriginInput is an input type that accepts CachePolicyParametersInCacheKeyAndForwardedToOriginArgs and CachePolicyParametersInCacheKeyAndForwardedToOriginOutput values.
// You can construct a concrete instance of `CachePolicyParametersInCacheKeyAndForwardedToOriginInput` via:
//
//	CachePolicyParametersInCacheKeyAndForwardedToOriginArgs{...}
type CachePolicyParametersInCacheKeyAndForwardedToOriginInput interface {
	pulumi.Input

	ToCachePolicyParametersInCacheKeyAndForwardedToOriginOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginOutput
	ToCachePolicyParametersInCacheKeyAndForwardedToOriginOutputWithContext(context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginOutput
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginArgs struct {
	CookiesConfig              CachePolicyCookiesConfigInput      `pulumi:"cookiesConfig"`
	EnableAcceptEncodingBrotli pulumi.BoolPtrInput                `pulumi:"enableAcceptEncodingBrotli"`
	EnableAcceptEncodingGzip   pulumi.BoolInput                   `pulumi:"enableAcceptEncodingGzip"`
	HeadersConfig              CachePolicyHeadersConfigInput      `pulumi:"headersConfig"`
	QueryStringsConfig         CachePolicyQueryStringsConfigInput `pulumi:"queryStringsConfig"`
}

func (CachePolicyParametersInCacheKeyAndForwardedToOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOrigin)(nil)).Elem()
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return i.ToCachePolicyParametersInCacheKeyAndForwardedToOriginOutputWithContext(context.Background())
}

func (i CachePolicyParametersInCacheKeyAndForwardedToOriginArgs) ToCachePolicyParametersInCacheKeyAndForwardedToOriginOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePolicyParametersInCacheKeyAndForwardedToOriginOutput)
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginOutput struct{ *pulumi.OutputState }

func (CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOrigin)(nil)).Elem()
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) CookiesConfig() CachePolicyCookiesConfigOutput {
	return o.ApplyT(func(v CachePolicyParametersInCacheKeyAndForwardedToOrigin) CachePolicyCookiesConfig {
		return v.CookiesConfig
	}).(CachePolicyCookiesConfigOutput)
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) EnableAcceptEncodingBrotli() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CachePolicyParametersInCacheKeyAndForwardedToOrigin) *bool { return v.EnableAcceptEncodingBrotli }).(pulumi.BoolPtrOutput)
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) EnableAcceptEncodingGzip() pulumi.BoolOutput {
	return o.ApplyT(func(v CachePolicyParametersInCacheKeyAndForwardedToOrigin) bool { return v.EnableAcceptEncodingGzip }).(pulumi.BoolOutput)
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) HeadersConfig() CachePolicyHeadersConfigOutput {
	return o.ApplyT(func(v CachePolicyParametersInCacheKeyAndForwardedToOrigin) CachePolicyHeadersConfig {
		return v.HeadersConfig
	}).(CachePolicyHeadersConfigOutput)
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginOutput) QueryStringsConfig() CachePolicyQueryStringsConfigOutput {
	return o.ApplyT(func(v CachePolicyParametersInCacheKeyAndForwardedToOrigin) CachePolicyQueryStringsConfig {
		return v.QueryStringsConfig
	}).(CachePolicyQueryStringsConfigOutput)
}

type CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput struct{ *pulumi.OutputState }

func (CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CachePolicyParametersInCacheKeyAndForwardedToOrigin)(nil)).Elem()
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput() CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput) ToCachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutputWithContext(ctx context.Context) CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput {
	return o
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput) Elem() CachePolicyParametersInCacheKeyAndForwardedToOriginOutput {
	return o.ApplyT(func(v *CachePolicyParametersInCacheKeyAndForwardedToOrigin) CachePolicyParametersInCacheKeyAndForwardedToOrigin {
		if v != nil {
			return *v
		}
		var ret CachePolicyParametersInCacheKeyAndForwardedToOrigin
		return ret
	}).(CachePolicyParametersInCacheKeyAndForwardedToOriginOutput)
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput) CookiesConfig() CachePolicyCookiesConfigPtrOutput {
	return o.ApplyT(func(v *CachePolicyParametersInCacheKeyAndForwardedToOrigin) *CachePolicyCookiesConfig {
		if v == nil {
			return nil
		}
		return &v.CookiesConfig
	}).(CachePolicyCookiesConfigPtrOutput)
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput) EnableAcceptEncodingBrotli() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CachePolicyParametersInCacheKeyAndForwardedToOrigin) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAcceptEncodingBrotli
	}).(pulumi.BoolPtrOutput)
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput) EnableAcceptEncodingGzip() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CachePolicyParametersInCacheKeyAndForwardedToOrigin) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableAcceptEncodingGzip
	}).(pulumi.BoolPtrOutput)
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput) HeadersConfig() CachePolicyHeadersConfigPtrOutput {
	return o.ApplyT(func(v *CachePolicyParametersInCacheKeyAndForwardedToOrigin) *CachePolicyHeadersConfig {
		if v == nil {
			return nil
		}
		return &v.HeadersConfig
	}).(CachePolicyHeadersConfigPtrOutput)
}

func (o CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput) QueryStringsConfig() CachePolicyQueryStringsConfigPtrOutput {
	return o.ApplyT(func(v *CachePolicyParametersInCacheKeyAndForwardedToOrigin) *CachePolicyQueryStringsConfig {
		if v == nil {
			return nil
		}
		return &v.QueryStringsConfig
	}).(CachePolicyQueryStringsConfigPtrOutput)
}

type CachePolicyQueryStringsConfig struct {
	QueryStringBehavior string   `pulumi:"queryStringBehavior"`
	QueryStrings        []string `pulumi:"queryStrings"`
}

// CachePolicyQueryStringsConfigInput is an input type that accepts CachePolicyQueryStringsConfigArgs and CachePolicyQueryStringsConfigOutput values.
// You can construct a concrete instance of `CachePolicyQueryStringsConfigInput` via:
//
//	CachePolicyQueryStringsConfigArgs{...}
type CachePolicyQueryStringsConfigInput interface {
	pulumi.Input

	ToCachePolicyQueryStringsConfigOutput() CachePolicyQueryStringsConfigOutput
	ToCachePolicyQueryStringsConfigOutputWithContext(context.Context) CachePolicyQueryStringsConfigOutput
}

type CachePolicyQueryStringsConfigArgs struct {
	QueryStringBehavior pulumi.StringInput      `pulumi:"queryStringBehavior"`
	QueryStrings        pulumi.StringArrayInput `pulumi:"queryStrings"`
}

func (CachePolicyQueryStringsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyQueryStringsConfig)(nil)).Elem()
}

func (i CachePolicyQueryStringsConfigArgs) ToCachePolicyQueryStringsConfigOutput() CachePolicyQueryStringsConfigOutput {
	return i.ToCachePolicyQueryStringsConfigOutputWithContext(context.Background())
}

func (i CachePolicyQueryStringsConfigArgs) ToCachePolicyQueryStringsConfigOutputWithContext(ctx context.Context) CachePolicyQueryStringsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CachePolicyQueryStringsConfigOutput)
}

type CachePolicyQueryStringsConfigOutput struct{ *pulumi.OutputState }

func (CachePolicyQueryStringsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CachePolicyQueryStringsConfig)(nil)).Elem()
}

func (o CachePolicyQueryStringsConfigOutput) ToCachePolicyQueryStringsConfigOutput() CachePolicyQueryStringsConfigOutput {
	return o
}

func (o CachePolicyQueryStringsConfigOutput) ToCachePolicyQueryStringsConfigOutputWithContext(ctx context.Context) CachePolicyQueryStringsConfigOutput {
	return o
}

func (o CachePolicyQueryStringsConfigOutput) QueryStringBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v CachePolicyQueryStringsConfig) string { return v.QueryStringBehavior }).(pulumi.StringOutput)
}

func (o CachePolicyQueryStringsConfigOutput) QueryStrings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CachePolicyQueryStringsConfig) []string { return v.QueryStrings }).(pulumi.StringArrayOutput)
}

type CachePolicyQueryStringsConfigPtrOutput struct{ *pulumi.OutputState }

func (CachePolicyQueryStringsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CachePolicyQueryStringsConfig)(nil)).Elem()
}

func (o CachePolicyQueryStringsConfigPtrOutput) ToCachePolicyQueryStringsConfigPtrOutput() CachePolicyQueryStringsConfigPtrOutput {
	return o
}

func (o CachePolicyQueryStringsConfigPtrOutput) ToCachePolicyQueryStringsConfigPtrOutputWithContext(ctx context.Context) CachePolicyQueryStringsConfigPtrOutput {
	return o
}

func (o CachePolicyQueryStringsConfigPtrOutput) Elem() CachePolicyQueryStringsConfigOutput {
	return o.ApplyT(func(v *CachePolicyQueryStringsConfig) CachePolicyQueryStringsConfig {
		if v != nil {
			return *v
		}
		var ret CachePolicyQueryStringsConfig
		return ret
	}).(CachePolicyQueryStringsConfigOutput)
}

func (o CachePolicyQueryStringsConfigPtrOutput) QueryStringBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CachePolicyQueryStringsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.QueryStringBehavior
	}).(pulumi.StringPtrOutput)
}

func (o CachePolicyQueryStringsConfigPtrOutput) QueryStrings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CachePolicyQueryStringsConfig) []string {
		if v == nil {
			return nil
		}
		return v.QueryStrings
	}).(pulumi.StringArrayOutput)
}

type CloudFrontOriginAccessIdentityConfig struct {
	Comment string `pulumi:"comment"`
}

// CloudFrontOriginAccessIdentityConfigInput is an input type that accepts CloudFrontOriginAccessIdentityConfigArgs and CloudFrontOriginAccessIdentityConfigOutput values.
// You can construct a concrete instance of `CloudFrontOriginAccessIdentityConfigInput` via:
//
//	CloudFrontOriginAccessIdentityConfigArgs{...}
type CloudFrontOriginAccessIdentityConfigInput interface {
	pulumi.Input

	ToCloudFrontOriginAccessIdentityConfigOutput() CloudFrontOriginAccessIdentityConfigOutput
	ToCloudFrontOriginAccessIdentityConfigOutputWithContext(context.Context) CloudFrontOriginAccessIdentityConfigOutput
}

type CloudFrontOriginAccessIdentityConfigArgs struct {
	Comment pulumi.StringInput `pulumi:"comment"`
}

func (CloudFrontOriginAccessIdentityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudFrontOriginAccessIdentityConfig)(nil)).Elem()
}

func (i CloudFrontOriginAccessIdentityConfigArgs) ToCloudFrontOriginAccessIdentityConfigOutput() CloudFrontOriginAccessIdentityConfigOutput {
	return i.ToCloudFrontOriginAccessIdentityConfigOutputWithContext(context.Background())
}

func (i CloudFrontOriginAccessIdentityConfigArgs) ToCloudFrontOriginAccessIdentityConfigOutputWithContext(ctx context.Context) CloudFrontOriginAccessIdentityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudFrontOriginAccessIdentityConfigOutput)
}

type CloudFrontOriginAccessIdentityConfigOutput struct{ *pulumi.OutputState }

func (CloudFrontOriginAccessIdentityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudFrontOriginAccessIdentityConfig)(nil)).Elem()
}

func (o CloudFrontOriginAccessIdentityConfigOutput) ToCloudFrontOriginAccessIdentityConfigOutput() CloudFrontOriginAccessIdentityConfigOutput {
	return o
}

func (o CloudFrontOriginAccessIdentityConfigOutput) ToCloudFrontOriginAccessIdentityConfigOutputWithContext(ctx context.Context) CloudFrontOriginAccessIdentityConfigOutput {
	return o
}

func (o CloudFrontOriginAccessIdentityConfigOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v CloudFrontOriginAccessIdentityConfig) string { return v.Comment }).(pulumi.StringOutput)
}

type CloudFrontOriginAccessIdentityConfigPtrOutput struct{ *pulumi.OutputState }

func (CloudFrontOriginAccessIdentityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudFrontOriginAccessIdentityConfig)(nil)).Elem()
}

func (o CloudFrontOriginAccessIdentityConfigPtrOutput) ToCloudFrontOriginAccessIdentityConfigPtrOutput() CloudFrontOriginAccessIdentityConfigPtrOutput {
	return o
}

func (o CloudFrontOriginAccessIdentityConfigPtrOutput) ToCloudFrontOriginAccessIdentityConfigPtrOutputWithContext(ctx context.Context) CloudFrontOriginAccessIdentityConfigPtrOutput {
	return o
}

func (o CloudFrontOriginAccessIdentityConfigPtrOutput) Elem() CloudFrontOriginAccessIdentityConfigOutput {
	return o.ApplyT(func(v *CloudFrontOriginAccessIdentityConfig) CloudFrontOriginAccessIdentityConfig {
		if v != nil {
			return *v
		}
		var ret CloudFrontOriginAccessIdentityConfig
		return ret
	}).(CloudFrontOriginAccessIdentityConfigOutput)
}

func (o CloudFrontOriginAccessIdentityConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudFrontOriginAccessIdentityConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Comment
	}).(pulumi.StringPtrOutput)
}

type ContinuousDeploymentPolicyConfig struct {
	Enabled                     bool                                                                `pulumi:"enabled"`
	SingleHeaderPolicyConfig    *ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties `pulumi:"singleHeaderPolicyConfig"`
	SingleWeightPolicyConfig    *ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties `pulumi:"singleWeightPolicyConfig"`
	StagingDistributionDnsNames []string                                                            `pulumi:"stagingDistributionDnsNames"`
	TrafficConfig               *ContinuousDeploymentPolicyTrafficConfig                            `pulumi:"trafficConfig"`
	Type                        *ContinuousDeploymentPolicyConfigType                               `pulumi:"type"`
}

// ContinuousDeploymentPolicyConfigInput is an input type that accepts ContinuousDeploymentPolicyConfigArgs and ContinuousDeploymentPolicyConfigOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicyConfigInput` via:
//
//	ContinuousDeploymentPolicyConfigArgs{...}
type ContinuousDeploymentPolicyConfigInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicyConfigOutput() ContinuousDeploymentPolicyConfigOutput
	ToContinuousDeploymentPolicyConfigOutputWithContext(context.Context) ContinuousDeploymentPolicyConfigOutput
}

type ContinuousDeploymentPolicyConfigArgs struct {
	Enabled                     pulumi.BoolInput                                                           `pulumi:"enabled"`
	SingleHeaderPolicyConfig    ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrInput `pulumi:"singleHeaderPolicyConfig"`
	SingleWeightPolicyConfig    ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrInput `pulumi:"singleWeightPolicyConfig"`
	StagingDistributionDnsNames pulumi.StringArrayInput                                                    `pulumi:"stagingDistributionDnsNames"`
	TrafficConfig               ContinuousDeploymentPolicyTrafficConfigPtrInput                            `pulumi:"trafficConfig"`
	Type                        ContinuousDeploymentPolicyConfigTypePtrInput                               `pulumi:"type"`
}

func (ContinuousDeploymentPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyConfig)(nil)).Elem()
}

func (i ContinuousDeploymentPolicyConfigArgs) ToContinuousDeploymentPolicyConfigOutput() ContinuousDeploymentPolicyConfigOutput {
	return i.ToContinuousDeploymentPolicyConfigOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicyConfigArgs) ToContinuousDeploymentPolicyConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyConfigOutput)
}

type ContinuousDeploymentPolicyConfigOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyConfigOutput) ToContinuousDeploymentPolicyConfigOutput() ContinuousDeploymentPolicyConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicyConfigOutput) ToContinuousDeploymentPolicyConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicyConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicyConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o ContinuousDeploymentPolicyConfigOutput) SingleHeaderPolicyConfig() ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicyConfig) *ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties {
		return v.SingleHeaderPolicyConfig
	}).(ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput)
}

func (o ContinuousDeploymentPolicyConfigOutput) SingleWeightPolicyConfig() ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicyConfig) *ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties {
		return v.SingleWeightPolicyConfig
	}).(ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput)
}

func (o ContinuousDeploymentPolicyConfigOutput) StagingDistributionDnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicyConfig) []string { return v.StagingDistributionDnsNames }).(pulumi.StringArrayOutput)
}

func (o ContinuousDeploymentPolicyConfigOutput) TrafficConfig() ContinuousDeploymentPolicyTrafficConfigPtrOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicyConfig) *ContinuousDeploymentPolicyTrafficConfig {
		return v.TrafficConfig
	}).(ContinuousDeploymentPolicyTrafficConfigPtrOutput)
}

func (o ContinuousDeploymentPolicyConfigOutput) Type() ContinuousDeploymentPolicyConfigTypePtrOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicyConfig) *ContinuousDeploymentPolicyConfigType { return v.Type }).(ContinuousDeploymentPolicyConfigTypePtrOutput)
}

type ContinuousDeploymentPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicyConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyConfigPtrOutput) ToContinuousDeploymentPolicyConfigPtrOutput() ContinuousDeploymentPolicyConfigPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicyConfigPtrOutput) ToContinuousDeploymentPolicyConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicyConfigPtrOutput) Elem() ContinuousDeploymentPolicyConfigOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfig) ContinuousDeploymentPolicyConfig {
		if v != nil {
			return *v
		}
		var ret ContinuousDeploymentPolicyConfig
		return ret
	}).(ContinuousDeploymentPolicyConfigOutput)
}

func (o ContinuousDeploymentPolicyConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o ContinuousDeploymentPolicyConfigPtrOutput) SingleHeaderPolicyConfig() ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfig) *ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties {
		if v == nil {
			return nil
		}
		return v.SingleHeaderPolicyConfig
	}).(ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput)
}

func (o ContinuousDeploymentPolicyConfigPtrOutput) SingleWeightPolicyConfig() ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfig) *ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties {
		if v == nil {
			return nil
		}
		return v.SingleWeightPolicyConfig
	}).(ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput)
}

func (o ContinuousDeploymentPolicyConfigPtrOutput) StagingDistributionDnsNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfig) []string {
		if v == nil {
			return nil
		}
		return v.StagingDistributionDnsNames
	}).(pulumi.StringArrayOutput)
}

func (o ContinuousDeploymentPolicyConfigPtrOutput) TrafficConfig() ContinuousDeploymentPolicyTrafficConfigPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfig) *ContinuousDeploymentPolicyTrafficConfig {
		if v == nil {
			return nil
		}
		return v.TrafficConfig
	}).(ContinuousDeploymentPolicyTrafficConfigPtrOutput)
}

func (o ContinuousDeploymentPolicyConfigPtrOutput) Type() ContinuousDeploymentPolicyConfigTypePtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfig) *ContinuousDeploymentPolicyConfigType {
		if v == nil {
			return nil
		}
		return v.Type
	}).(ContinuousDeploymentPolicyConfigTypePtrOutput)
}

type ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties struct {
	Header string `pulumi:"header"`
	Value  string `pulumi:"value"`
}

// ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesInput is an input type that accepts ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs and ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesInput` via:
//
//	ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs{...}
type ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput() ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput
	ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutputWithContext(context.Context) ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput
}

type ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs struct {
	Header pulumi.StringInput `pulumi:"header"`
	Value  pulumi.StringInput `pulumi:"value"`
}

func (ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties)(nil)).Elem()
}

func (i ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs) ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput() ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput {
	return i.ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs) ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput)
}

func (i ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs) ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput() ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput {
	return i.ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs) ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput).ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutputWithContext(ctx)
}

// ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrInput is an input type that accepts ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs, ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtr and ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrInput` via:
//
//	        ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput() ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput
	ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutputWithContext(context.Context) ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput
}

type continuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrType ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs

func ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtr(v *ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs) ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrInput {
	return (*continuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrType)(v)
}

func (*continuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties)(nil)).Elem()
}

func (i *continuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrType) ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput() ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput {
	return i.ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *continuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrType) ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput)
}

type ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput) ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput() ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput {
	return o
}

func (o ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput) ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput {
	return o
}

func (o ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput) ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput() ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput {
	return o.ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput) ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties) *ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties {
		return &v
	}).(ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput)
}

func (o ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties) string { return v.Header }).(pulumi.StringOutput)
}

func (o ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties) string { return v.Value }).(pulumi.StringOutput)
}

type ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput) ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput() ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput) ToContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput) Elem() ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties) ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties {
		if v != nil {
			return *v
		}
		var ret ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties
		return ret
	}).(ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput)
}

func (o ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Header
	}).(pulumi.StringPtrOutput)
}

func (o ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties struct {
	SessionStickinessConfig *ContinuousDeploymentPolicySessionStickinessConfig `pulumi:"sessionStickinessConfig"`
	Weight                  float64                                            `pulumi:"weight"`
}

// ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesInput is an input type that accepts ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs and ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesInput` via:
//
//	ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs{...}
type ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput() ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput
	ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutputWithContext(context.Context) ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput
}

type ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs struct {
	SessionStickinessConfig ContinuousDeploymentPolicySessionStickinessConfigPtrInput `pulumi:"sessionStickinessConfig"`
	Weight                  pulumi.Float64Input                                       `pulumi:"weight"`
}

func (ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties)(nil)).Elem()
}

func (i ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs) ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput() ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput {
	return i.ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs) ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput)
}

func (i ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs) ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput() ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput {
	return i.ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs) ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput).ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutputWithContext(ctx)
}

// ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrInput is an input type that accepts ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs, ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtr and ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrInput` via:
//
//	        ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs{...}
//
//	or:
//
//	        nil
type ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput() ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput
	ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutputWithContext(context.Context) ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput
}

type continuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrType ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs

func ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtr(v *ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs) ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrInput {
	return (*continuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrType)(v)
}

func (*continuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties)(nil)).Elem()
}

func (i *continuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrType) ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput() ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput {
	return i.ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *continuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrType) ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput)
}

type ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput) ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput() ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput {
	return o
}

func (o ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput) ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput {
	return o
}

func (o ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput) ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput() ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput {
	return o.ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput) ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties) *ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties {
		return &v
	}).(ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput)
}

func (o ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput) SessionStickinessConfig() ContinuousDeploymentPolicySessionStickinessConfigPtrOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties) *ContinuousDeploymentPolicySessionStickinessConfig {
		return v.SessionStickinessConfig
	}).(ContinuousDeploymentPolicySessionStickinessConfigPtrOutput)
}

func (o ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput) Weight() pulumi.Float64Output {
	return o.ApplyT(func(v ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties) float64 { return v.Weight }).(pulumi.Float64Output)
}

type ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput) ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput() ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput) ToContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput) Elem() ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties) ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties {
		if v != nil {
			return *v
		}
		var ret ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties
		return ret
	}).(ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput)
}

func (o ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput) SessionStickinessConfig() ContinuousDeploymentPolicySessionStickinessConfigPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties) *ContinuousDeploymentPolicySessionStickinessConfig {
		if v == nil {
			return nil
		}
		return v.SessionStickinessConfig
	}).(ContinuousDeploymentPolicySessionStickinessConfigPtrOutput)
}

func (o ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigProperties) *float64 {
		if v == nil {
			return nil
		}
		return &v.Weight
	}).(pulumi.Float64PtrOutput)
}

type ContinuousDeploymentPolicySessionStickinessConfig struct {
	IdleTtl    int `pulumi:"idleTtl"`
	MaximumTtl int `pulumi:"maximumTtl"`
}

// ContinuousDeploymentPolicySessionStickinessConfigInput is an input type that accepts ContinuousDeploymentPolicySessionStickinessConfigArgs and ContinuousDeploymentPolicySessionStickinessConfigOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicySessionStickinessConfigInput` via:
//
//	ContinuousDeploymentPolicySessionStickinessConfigArgs{...}
type ContinuousDeploymentPolicySessionStickinessConfigInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicySessionStickinessConfigOutput() ContinuousDeploymentPolicySessionStickinessConfigOutput
	ToContinuousDeploymentPolicySessionStickinessConfigOutputWithContext(context.Context) ContinuousDeploymentPolicySessionStickinessConfigOutput
}

type ContinuousDeploymentPolicySessionStickinessConfigArgs struct {
	IdleTtl    pulumi.IntInput `pulumi:"idleTtl"`
	MaximumTtl pulumi.IntInput `pulumi:"maximumTtl"`
}

func (ContinuousDeploymentPolicySessionStickinessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicySessionStickinessConfig)(nil)).Elem()
}

func (i ContinuousDeploymentPolicySessionStickinessConfigArgs) ToContinuousDeploymentPolicySessionStickinessConfigOutput() ContinuousDeploymentPolicySessionStickinessConfigOutput {
	return i.ToContinuousDeploymentPolicySessionStickinessConfigOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicySessionStickinessConfigArgs) ToContinuousDeploymentPolicySessionStickinessConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySessionStickinessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicySessionStickinessConfigOutput)
}

func (i ContinuousDeploymentPolicySessionStickinessConfigArgs) ToContinuousDeploymentPolicySessionStickinessConfigPtrOutput() ContinuousDeploymentPolicySessionStickinessConfigPtrOutput {
	return i.ToContinuousDeploymentPolicySessionStickinessConfigPtrOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicySessionStickinessConfigArgs) ToContinuousDeploymentPolicySessionStickinessConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySessionStickinessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicySessionStickinessConfigOutput).ToContinuousDeploymentPolicySessionStickinessConfigPtrOutputWithContext(ctx)
}

// ContinuousDeploymentPolicySessionStickinessConfigPtrInput is an input type that accepts ContinuousDeploymentPolicySessionStickinessConfigArgs, ContinuousDeploymentPolicySessionStickinessConfigPtr and ContinuousDeploymentPolicySessionStickinessConfigPtrOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicySessionStickinessConfigPtrInput` via:
//
//	        ContinuousDeploymentPolicySessionStickinessConfigArgs{...}
//
//	or:
//
//	        nil
type ContinuousDeploymentPolicySessionStickinessConfigPtrInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicySessionStickinessConfigPtrOutput() ContinuousDeploymentPolicySessionStickinessConfigPtrOutput
	ToContinuousDeploymentPolicySessionStickinessConfigPtrOutputWithContext(context.Context) ContinuousDeploymentPolicySessionStickinessConfigPtrOutput
}

type continuousDeploymentPolicySessionStickinessConfigPtrType ContinuousDeploymentPolicySessionStickinessConfigArgs

func ContinuousDeploymentPolicySessionStickinessConfigPtr(v *ContinuousDeploymentPolicySessionStickinessConfigArgs) ContinuousDeploymentPolicySessionStickinessConfigPtrInput {
	return (*continuousDeploymentPolicySessionStickinessConfigPtrType)(v)
}

func (*continuousDeploymentPolicySessionStickinessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicySessionStickinessConfig)(nil)).Elem()
}

func (i *continuousDeploymentPolicySessionStickinessConfigPtrType) ToContinuousDeploymentPolicySessionStickinessConfigPtrOutput() ContinuousDeploymentPolicySessionStickinessConfigPtrOutput {
	return i.ToContinuousDeploymentPolicySessionStickinessConfigPtrOutputWithContext(context.Background())
}

func (i *continuousDeploymentPolicySessionStickinessConfigPtrType) ToContinuousDeploymentPolicySessionStickinessConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySessionStickinessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicySessionStickinessConfigPtrOutput)
}

type ContinuousDeploymentPolicySessionStickinessConfigOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicySessionStickinessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicySessionStickinessConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicySessionStickinessConfigOutput) ToContinuousDeploymentPolicySessionStickinessConfigOutput() ContinuousDeploymentPolicySessionStickinessConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicySessionStickinessConfigOutput) ToContinuousDeploymentPolicySessionStickinessConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySessionStickinessConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicySessionStickinessConfigOutput) ToContinuousDeploymentPolicySessionStickinessConfigPtrOutput() ContinuousDeploymentPolicySessionStickinessConfigPtrOutput {
	return o.ToContinuousDeploymentPolicySessionStickinessConfigPtrOutputWithContext(context.Background())
}

func (o ContinuousDeploymentPolicySessionStickinessConfigOutput) ToContinuousDeploymentPolicySessionStickinessConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySessionStickinessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContinuousDeploymentPolicySessionStickinessConfig) *ContinuousDeploymentPolicySessionStickinessConfig {
		return &v
	}).(ContinuousDeploymentPolicySessionStickinessConfigPtrOutput)
}

func (o ContinuousDeploymentPolicySessionStickinessConfigOutput) IdleTtl() pulumi.IntOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicySessionStickinessConfig) int { return v.IdleTtl }).(pulumi.IntOutput)
}

func (o ContinuousDeploymentPolicySessionStickinessConfigOutput) MaximumTtl() pulumi.IntOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicySessionStickinessConfig) int { return v.MaximumTtl }).(pulumi.IntOutput)
}

type ContinuousDeploymentPolicySessionStickinessConfigPtrOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicySessionStickinessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicySessionStickinessConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicySessionStickinessConfigPtrOutput) ToContinuousDeploymentPolicySessionStickinessConfigPtrOutput() ContinuousDeploymentPolicySessionStickinessConfigPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicySessionStickinessConfigPtrOutput) ToContinuousDeploymentPolicySessionStickinessConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySessionStickinessConfigPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicySessionStickinessConfigPtrOutput) Elem() ContinuousDeploymentPolicySessionStickinessConfigOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicySessionStickinessConfig) ContinuousDeploymentPolicySessionStickinessConfig {
		if v != nil {
			return *v
		}
		var ret ContinuousDeploymentPolicySessionStickinessConfig
		return ret
	}).(ContinuousDeploymentPolicySessionStickinessConfigOutput)
}

func (o ContinuousDeploymentPolicySessionStickinessConfigPtrOutput) IdleTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicySessionStickinessConfig) *int {
		if v == nil {
			return nil
		}
		return &v.IdleTtl
	}).(pulumi.IntPtrOutput)
}

func (o ContinuousDeploymentPolicySessionStickinessConfigPtrOutput) MaximumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicySessionStickinessConfig) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumTtl
	}).(pulumi.IntPtrOutput)
}

type ContinuousDeploymentPolicySingleHeaderConfig struct {
	Header string `pulumi:"header"`
	Value  string `pulumi:"value"`
}

// ContinuousDeploymentPolicySingleHeaderConfigInput is an input type that accepts ContinuousDeploymentPolicySingleHeaderConfigArgs and ContinuousDeploymentPolicySingleHeaderConfigOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicySingleHeaderConfigInput` via:
//
//	ContinuousDeploymentPolicySingleHeaderConfigArgs{...}
type ContinuousDeploymentPolicySingleHeaderConfigInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicySingleHeaderConfigOutput() ContinuousDeploymentPolicySingleHeaderConfigOutput
	ToContinuousDeploymentPolicySingleHeaderConfigOutputWithContext(context.Context) ContinuousDeploymentPolicySingleHeaderConfigOutput
}

type ContinuousDeploymentPolicySingleHeaderConfigArgs struct {
	Header pulumi.StringInput `pulumi:"header"`
	Value  pulumi.StringInput `pulumi:"value"`
}

func (ContinuousDeploymentPolicySingleHeaderConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicySingleHeaderConfig)(nil)).Elem()
}

func (i ContinuousDeploymentPolicySingleHeaderConfigArgs) ToContinuousDeploymentPolicySingleHeaderConfigOutput() ContinuousDeploymentPolicySingleHeaderConfigOutput {
	return i.ToContinuousDeploymentPolicySingleHeaderConfigOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicySingleHeaderConfigArgs) ToContinuousDeploymentPolicySingleHeaderConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySingleHeaderConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicySingleHeaderConfigOutput)
}

func (i ContinuousDeploymentPolicySingleHeaderConfigArgs) ToContinuousDeploymentPolicySingleHeaderConfigPtrOutput() ContinuousDeploymentPolicySingleHeaderConfigPtrOutput {
	return i.ToContinuousDeploymentPolicySingleHeaderConfigPtrOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicySingleHeaderConfigArgs) ToContinuousDeploymentPolicySingleHeaderConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySingleHeaderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicySingleHeaderConfigOutput).ToContinuousDeploymentPolicySingleHeaderConfigPtrOutputWithContext(ctx)
}

// ContinuousDeploymentPolicySingleHeaderConfigPtrInput is an input type that accepts ContinuousDeploymentPolicySingleHeaderConfigArgs, ContinuousDeploymentPolicySingleHeaderConfigPtr and ContinuousDeploymentPolicySingleHeaderConfigPtrOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicySingleHeaderConfigPtrInput` via:
//
//	        ContinuousDeploymentPolicySingleHeaderConfigArgs{...}
//
//	or:
//
//	        nil
type ContinuousDeploymentPolicySingleHeaderConfigPtrInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicySingleHeaderConfigPtrOutput() ContinuousDeploymentPolicySingleHeaderConfigPtrOutput
	ToContinuousDeploymentPolicySingleHeaderConfigPtrOutputWithContext(context.Context) ContinuousDeploymentPolicySingleHeaderConfigPtrOutput
}

type continuousDeploymentPolicySingleHeaderConfigPtrType ContinuousDeploymentPolicySingleHeaderConfigArgs

func ContinuousDeploymentPolicySingleHeaderConfigPtr(v *ContinuousDeploymentPolicySingleHeaderConfigArgs) ContinuousDeploymentPolicySingleHeaderConfigPtrInput {
	return (*continuousDeploymentPolicySingleHeaderConfigPtrType)(v)
}

func (*continuousDeploymentPolicySingleHeaderConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicySingleHeaderConfig)(nil)).Elem()
}

func (i *continuousDeploymentPolicySingleHeaderConfigPtrType) ToContinuousDeploymentPolicySingleHeaderConfigPtrOutput() ContinuousDeploymentPolicySingleHeaderConfigPtrOutput {
	return i.ToContinuousDeploymentPolicySingleHeaderConfigPtrOutputWithContext(context.Background())
}

func (i *continuousDeploymentPolicySingleHeaderConfigPtrType) ToContinuousDeploymentPolicySingleHeaderConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySingleHeaderConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicySingleHeaderConfigPtrOutput)
}

type ContinuousDeploymentPolicySingleHeaderConfigOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicySingleHeaderConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicySingleHeaderConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicySingleHeaderConfigOutput) ToContinuousDeploymentPolicySingleHeaderConfigOutput() ContinuousDeploymentPolicySingleHeaderConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicySingleHeaderConfigOutput) ToContinuousDeploymentPolicySingleHeaderConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySingleHeaderConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicySingleHeaderConfigOutput) ToContinuousDeploymentPolicySingleHeaderConfigPtrOutput() ContinuousDeploymentPolicySingleHeaderConfigPtrOutput {
	return o.ToContinuousDeploymentPolicySingleHeaderConfigPtrOutputWithContext(context.Background())
}

func (o ContinuousDeploymentPolicySingleHeaderConfigOutput) ToContinuousDeploymentPolicySingleHeaderConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySingleHeaderConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContinuousDeploymentPolicySingleHeaderConfig) *ContinuousDeploymentPolicySingleHeaderConfig {
		return &v
	}).(ContinuousDeploymentPolicySingleHeaderConfigPtrOutput)
}

func (o ContinuousDeploymentPolicySingleHeaderConfigOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicySingleHeaderConfig) string { return v.Header }).(pulumi.StringOutput)
}

func (o ContinuousDeploymentPolicySingleHeaderConfigOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicySingleHeaderConfig) string { return v.Value }).(pulumi.StringOutput)
}

type ContinuousDeploymentPolicySingleHeaderConfigPtrOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicySingleHeaderConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicySingleHeaderConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicySingleHeaderConfigPtrOutput) ToContinuousDeploymentPolicySingleHeaderConfigPtrOutput() ContinuousDeploymentPolicySingleHeaderConfigPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicySingleHeaderConfigPtrOutput) ToContinuousDeploymentPolicySingleHeaderConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySingleHeaderConfigPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicySingleHeaderConfigPtrOutput) Elem() ContinuousDeploymentPolicySingleHeaderConfigOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicySingleHeaderConfig) ContinuousDeploymentPolicySingleHeaderConfig {
		if v != nil {
			return *v
		}
		var ret ContinuousDeploymentPolicySingleHeaderConfig
		return ret
	}).(ContinuousDeploymentPolicySingleHeaderConfigOutput)
}

func (o ContinuousDeploymentPolicySingleHeaderConfigPtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicySingleHeaderConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Header
	}).(pulumi.StringPtrOutput)
}

func (o ContinuousDeploymentPolicySingleHeaderConfigPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicySingleHeaderConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ContinuousDeploymentPolicySingleWeightConfig struct {
	SessionStickinessConfig *ContinuousDeploymentPolicySessionStickinessConfig `pulumi:"sessionStickinessConfig"`
	Weight                  float64                                            `pulumi:"weight"`
}

// ContinuousDeploymentPolicySingleWeightConfigInput is an input type that accepts ContinuousDeploymentPolicySingleWeightConfigArgs and ContinuousDeploymentPolicySingleWeightConfigOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicySingleWeightConfigInput` via:
//
//	ContinuousDeploymentPolicySingleWeightConfigArgs{...}
type ContinuousDeploymentPolicySingleWeightConfigInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicySingleWeightConfigOutput() ContinuousDeploymentPolicySingleWeightConfigOutput
	ToContinuousDeploymentPolicySingleWeightConfigOutputWithContext(context.Context) ContinuousDeploymentPolicySingleWeightConfigOutput
}

type ContinuousDeploymentPolicySingleWeightConfigArgs struct {
	SessionStickinessConfig ContinuousDeploymentPolicySessionStickinessConfigPtrInput `pulumi:"sessionStickinessConfig"`
	Weight                  pulumi.Float64Input                                       `pulumi:"weight"`
}

func (ContinuousDeploymentPolicySingleWeightConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicySingleWeightConfig)(nil)).Elem()
}

func (i ContinuousDeploymentPolicySingleWeightConfigArgs) ToContinuousDeploymentPolicySingleWeightConfigOutput() ContinuousDeploymentPolicySingleWeightConfigOutput {
	return i.ToContinuousDeploymentPolicySingleWeightConfigOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicySingleWeightConfigArgs) ToContinuousDeploymentPolicySingleWeightConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySingleWeightConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicySingleWeightConfigOutput)
}

func (i ContinuousDeploymentPolicySingleWeightConfigArgs) ToContinuousDeploymentPolicySingleWeightConfigPtrOutput() ContinuousDeploymentPolicySingleWeightConfigPtrOutput {
	return i.ToContinuousDeploymentPolicySingleWeightConfigPtrOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicySingleWeightConfigArgs) ToContinuousDeploymentPolicySingleWeightConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySingleWeightConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicySingleWeightConfigOutput).ToContinuousDeploymentPolicySingleWeightConfigPtrOutputWithContext(ctx)
}

// ContinuousDeploymentPolicySingleWeightConfigPtrInput is an input type that accepts ContinuousDeploymentPolicySingleWeightConfigArgs, ContinuousDeploymentPolicySingleWeightConfigPtr and ContinuousDeploymentPolicySingleWeightConfigPtrOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicySingleWeightConfigPtrInput` via:
//
//	        ContinuousDeploymentPolicySingleWeightConfigArgs{...}
//
//	or:
//
//	        nil
type ContinuousDeploymentPolicySingleWeightConfigPtrInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicySingleWeightConfigPtrOutput() ContinuousDeploymentPolicySingleWeightConfigPtrOutput
	ToContinuousDeploymentPolicySingleWeightConfigPtrOutputWithContext(context.Context) ContinuousDeploymentPolicySingleWeightConfigPtrOutput
}

type continuousDeploymentPolicySingleWeightConfigPtrType ContinuousDeploymentPolicySingleWeightConfigArgs

func ContinuousDeploymentPolicySingleWeightConfigPtr(v *ContinuousDeploymentPolicySingleWeightConfigArgs) ContinuousDeploymentPolicySingleWeightConfigPtrInput {
	return (*continuousDeploymentPolicySingleWeightConfigPtrType)(v)
}

func (*continuousDeploymentPolicySingleWeightConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicySingleWeightConfig)(nil)).Elem()
}

func (i *continuousDeploymentPolicySingleWeightConfigPtrType) ToContinuousDeploymentPolicySingleWeightConfigPtrOutput() ContinuousDeploymentPolicySingleWeightConfigPtrOutput {
	return i.ToContinuousDeploymentPolicySingleWeightConfigPtrOutputWithContext(context.Background())
}

func (i *continuousDeploymentPolicySingleWeightConfigPtrType) ToContinuousDeploymentPolicySingleWeightConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySingleWeightConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicySingleWeightConfigPtrOutput)
}

type ContinuousDeploymentPolicySingleWeightConfigOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicySingleWeightConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicySingleWeightConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicySingleWeightConfigOutput) ToContinuousDeploymentPolicySingleWeightConfigOutput() ContinuousDeploymentPolicySingleWeightConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicySingleWeightConfigOutput) ToContinuousDeploymentPolicySingleWeightConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySingleWeightConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicySingleWeightConfigOutput) ToContinuousDeploymentPolicySingleWeightConfigPtrOutput() ContinuousDeploymentPolicySingleWeightConfigPtrOutput {
	return o.ToContinuousDeploymentPolicySingleWeightConfigPtrOutputWithContext(context.Background())
}

func (o ContinuousDeploymentPolicySingleWeightConfigOutput) ToContinuousDeploymentPolicySingleWeightConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySingleWeightConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContinuousDeploymentPolicySingleWeightConfig) *ContinuousDeploymentPolicySingleWeightConfig {
		return &v
	}).(ContinuousDeploymentPolicySingleWeightConfigPtrOutput)
}

func (o ContinuousDeploymentPolicySingleWeightConfigOutput) SessionStickinessConfig() ContinuousDeploymentPolicySessionStickinessConfigPtrOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicySingleWeightConfig) *ContinuousDeploymentPolicySessionStickinessConfig {
		return v.SessionStickinessConfig
	}).(ContinuousDeploymentPolicySessionStickinessConfigPtrOutput)
}

func (o ContinuousDeploymentPolicySingleWeightConfigOutput) Weight() pulumi.Float64Output {
	return o.ApplyT(func(v ContinuousDeploymentPolicySingleWeightConfig) float64 { return v.Weight }).(pulumi.Float64Output)
}

type ContinuousDeploymentPolicySingleWeightConfigPtrOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicySingleWeightConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicySingleWeightConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicySingleWeightConfigPtrOutput) ToContinuousDeploymentPolicySingleWeightConfigPtrOutput() ContinuousDeploymentPolicySingleWeightConfigPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicySingleWeightConfigPtrOutput) ToContinuousDeploymentPolicySingleWeightConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicySingleWeightConfigPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicySingleWeightConfigPtrOutput) Elem() ContinuousDeploymentPolicySingleWeightConfigOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicySingleWeightConfig) ContinuousDeploymentPolicySingleWeightConfig {
		if v != nil {
			return *v
		}
		var ret ContinuousDeploymentPolicySingleWeightConfig
		return ret
	}).(ContinuousDeploymentPolicySingleWeightConfigOutput)
}

func (o ContinuousDeploymentPolicySingleWeightConfigPtrOutput) SessionStickinessConfig() ContinuousDeploymentPolicySessionStickinessConfigPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicySingleWeightConfig) *ContinuousDeploymentPolicySessionStickinessConfig {
		if v == nil {
			return nil
		}
		return v.SessionStickinessConfig
	}).(ContinuousDeploymentPolicySessionStickinessConfigPtrOutput)
}

func (o ContinuousDeploymentPolicySingleWeightConfigPtrOutput) Weight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicySingleWeightConfig) *float64 {
		if v == nil {
			return nil
		}
		return &v.Weight
	}).(pulumi.Float64PtrOutput)
}

type ContinuousDeploymentPolicyTrafficConfig struct {
	SingleHeaderConfig *ContinuousDeploymentPolicySingleHeaderConfig `pulumi:"singleHeaderConfig"`
	SingleWeightConfig *ContinuousDeploymentPolicySingleWeightConfig `pulumi:"singleWeightConfig"`
	Type               ContinuousDeploymentPolicyTrafficConfigType   `pulumi:"type"`
}

// ContinuousDeploymentPolicyTrafficConfigInput is an input type that accepts ContinuousDeploymentPolicyTrafficConfigArgs and ContinuousDeploymentPolicyTrafficConfigOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicyTrafficConfigInput` via:
//
//	ContinuousDeploymentPolicyTrafficConfigArgs{...}
type ContinuousDeploymentPolicyTrafficConfigInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicyTrafficConfigOutput() ContinuousDeploymentPolicyTrafficConfigOutput
	ToContinuousDeploymentPolicyTrafficConfigOutputWithContext(context.Context) ContinuousDeploymentPolicyTrafficConfigOutput
}

type ContinuousDeploymentPolicyTrafficConfigArgs struct {
	SingleHeaderConfig ContinuousDeploymentPolicySingleHeaderConfigPtrInput `pulumi:"singleHeaderConfig"`
	SingleWeightConfig ContinuousDeploymentPolicySingleWeightConfigPtrInput `pulumi:"singleWeightConfig"`
	Type               ContinuousDeploymentPolicyTrafficConfigTypeInput     `pulumi:"type"`
}

func (ContinuousDeploymentPolicyTrafficConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyTrafficConfig)(nil)).Elem()
}

func (i ContinuousDeploymentPolicyTrafficConfigArgs) ToContinuousDeploymentPolicyTrafficConfigOutput() ContinuousDeploymentPolicyTrafficConfigOutput {
	return i.ToContinuousDeploymentPolicyTrafficConfigOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicyTrafficConfigArgs) ToContinuousDeploymentPolicyTrafficConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyTrafficConfigOutput)
}

func (i ContinuousDeploymentPolicyTrafficConfigArgs) ToContinuousDeploymentPolicyTrafficConfigPtrOutput() ContinuousDeploymentPolicyTrafficConfigPtrOutput {
	return i.ToContinuousDeploymentPolicyTrafficConfigPtrOutputWithContext(context.Background())
}

func (i ContinuousDeploymentPolicyTrafficConfigArgs) ToContinuousDeploymentPolicyTrafficConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyTrafficConfigOutput).ToContinuousDeploymentPolicyTrafficConfigPtrOutputWithContext(ctx)
}

// ContinuousDeploymentPolicyTrafficConfigPtrInput is an input type that accepts ContinuousDeploymentPolicyTrafficConfigArgs, ContinuousDeploymentPolicyTrafficConfigPtr and ContinuousDeploymentPolicyTrafficConfigPtrOutput values.
// You can construct a concrete instance of `ContinuousDeploymentPolicyTrafficConfigPtrInput` via:
//
//	        ContinuousDeploymentPolicyTrafficConfigArgs{...}
//
//	or:
//
//	        nil
type ContinuousDeploymentPolicyTrafficConfigPtrInput interface {
	pulumi.Input

	ToContinuousDeploymentPolicyTrafficConfigPtrOutput() ContinuousDeploymentPolicyTrafficConfigPtrOutput
	ToContinuousDeploymentPolicyTrafficConfigPtrOutputWithContext(context.Context) ContinuousDeploymentPolicyTrafficConfigPtrOutput
}

type continuousDeploymentPolicyTrafficConfigPtrType ContinuousDeploymentPolicyTrafficConfigArgs

func ContinuousDeploymentPolicyTrafficConfigPtr(v *ContinuousDeploymentPolicyTrafficConfigArgs) ContinuousDeploymentPolicyTrafficConfigPtrInput {
	return (*continuousDeploymentPolicyTrafficConfigPtrType)(v)
}

func (*continuousDeploymentPolicyTrafficConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicyTrafficConfig)(nil)).Elem()
}

func (i *continuousDeploymentPolicyTrafficConfigPtrType) ToContinuousDeploymentPolicyTrafficConfigPtrOutput() ContinuousDeploymentPolicyTrafficConfigPtrOutput {
	return i.ToContinuousDeploymentPolicyTrafficConfigPtrOutputWithContext(context.Background())
}

func (i *continuousDeploymentPolicyTrafficConfigPtrType) ToContinuousDeploymentPolicyTrafficConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContinuousDeploymentPolicyTrafficConfigPtrOutput)
}

type ContinuousDeploymentPolicyTrafficConfigOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyTrafficConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContinuousDeploymentPolicyTrafficConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyTrafficConfigOutput) ToContinuousDeploymentPolicyTrafficConfigOutput() ContinuousDeploymentPolicyTrafficConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicyTrafficConfigOutput) ToContinuousDeploymentPolicyTrafficConfigOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigOutput {
	return o
}

func (o ContinuousDeploymentPolicyTrafficConfigOutput) ToContinuousDeploymentPolicyTrafficConfigPtrOutput() ContinuousDeploymentPolicyTrafficConfigPtrOutput {
	return o.ToContinuousDeploymentPolicyTrafficConfigPtrOutputWithContext(context.Background())
}

func (o ContinuousDeploymentPolicyTrafficConfigOutput) ToContinuousDeploymentPolicyTrafficConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContinuousDeploymentPolicyTrafficConfig) *ContinuousDeploymentPolicyTrafficConfig {
		return &v
	}).(ContinuousDeploymentPolicyTrafficConfigPtrOutput)
}

func (o ContinuousDeploymentPolicyTrafficConfigOutput) SingleHeaderConfig() ContinuousDeploymentPolicySingleHeaderConfigPtrOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicyTrafficConfig) *ContinuousDeploymentPolicySingleHeaderConfig {
		return v.SingleHeaderConfig
	}).(ContinuousDeploymentPolicySingleHeaderConfigPtrOutput)
}

func (o ContinuousDeploymentPolicyTrafficConfigOutput) SingleWeightConfig() ContinuousDeploymentPolicySingleWeightConfigPtrOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicyTrafficConfig) *ContinuousDeploymentPolicySingleWeightConfig {
		return v.SingleWeightConfig
	}).(ContinuousDeploymentPolicySingleWeightConfigPtrOutput)
}

func (o ContinuousDeploymentPolicyTrafficConfigOutput) Type() ContinuousDeploymentPolicyTrafficConfigTypeOutput {
	return o.ApplyT(func(v ContinuousDeploymentPolicyTrafficConfig) ContinuousDeploymentPolicyTrafficConfigType {
		return v.Type
	}).(ContinuousDeploymentPolicyTrafficConfigTypeOutput)
}

type ContinuousDeploymentPolicyTrafficConfigPtrOutput struct{ *pulumi.OutputState }

func (ContinuousDeploymentPolicyTrafficConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContinuousDeploymentPolicyTrafficConfig)(nil)).Elem()
}

func (o ContinuousDeploymentPolicyTrafficConfigPtrOutput) ToContinuousDeploymentPolicyTrafficConfigPtrOutput() ContinuousDeploymentPolicyTrafficConfigPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicyTrafficConfigPtrOutput) ToContinuousDeploymentPolicyTrafficConfigPtrOutputWithContext(ctx context.Context) ContinuousDeploymentPolicyTrafficConfigPtrOutput {
	return o
}

func (o ContinuousDeploymentPolicyTrafficConfigPtrOutput) Elem() ContinuousDeploymentPolicyTrafficConfigOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyTrafficConfig) ContinuousDeploymentPolicyTrafficConfig {
		if v != nil {
			return *v
		}
		var ret ContinuousDeploymentPolicyTrafficConfig
		return ret
	}).(ContinuousDeploymentPolicyTrafficConfigOutput)
}

func (o ContinuousDeploymentPolicyTrafficConfigPtrOutput) SingleHeaderConfig() ContinuousDeploymentPolicySingleHeaderConfigPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyTrafficConfig) *ContinuousDeploymentPolicySingleHeaderConfig {
		if v == nil {
			return nil
		}
		return v.SingleHeaderConfig
	}).(ContinuousDeploymentPolicySingleHeaderConfigPtrOutput)
}

func (o ContinuousDeploymentPolicyTrafficConfigPtrOutput) SingleWeightConfig() ContinuousDeploymentPolicySingleWeightConfigPtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyTrafficConfig) *ContinuousDeploymentPolicySingleWeightConfig {
		if v == nil {
			return nil
		}
		return v.SingleWeightConfig
	}).(ContinuousDeploymentPolicySingleWeightConfigPtrOutput)
}

func (o ContinuousDeploymentPolicyTrafficConfigPtrOutput) Type() ContinuousDeploymentPolicyTrafficConfigTypePtrOutput {
	return o.ApplyT(func(v *ContinuousDeploymentPolicyTrafficConfig) *ContinuousDeploymentPolicyTrafficConfigType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(ContinuousDeploymentPolicyTrafficConfigTypePtrOutput)
}

// A complex type that describes how CloudFront processes requests.
//
//	You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.
//	For the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see [Quotas](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html) in the *Amazon CloudFront Developer Guide*.
//	If you don't want to specify any cache behaviors, include only an empty ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior`` element because this is invalid.
//	To delete all cache behaviors in an exist
type DistributionCacheBehavior struct {
	// A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:
	//   +  CloudFront forwards only ``GET`` and ``HEAD`` requests.
	//   +  CloudFront forwards only ``GET``, ``HEAD``, and ``OPTIONS`` requests.
	//   +  CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST``, and ``DELETE`` requests.
	//
	//  If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// The unique identifier of the cache policy that is attached to this cache behavior. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  A ``CacheBehavior`` must include either a ``CachePolicyId`` or ``ForwardedValues``. We recommend that you use a ``CachePolicyId``.
	CachePolicyId *string `pulumi:"cachePolicyId"`
	// A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:
	//   +  CloudFront caches responses to ``GET`` and ``HEAD`` requests.
	//   +  CloudFront caches responses to ``GET``, ``HEAD``, and ``OPTIONS`` requests.
	//
	//  If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.
	CachedMethods []string `pulumi:"cachedMethods"`
	// Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see [Serving Compressed Files](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html) in the *Amazon CloudFront Developer Guide*.
	Compress *bool `pulumi:"compress"`
	// This field is deprecated. We recommend that you use the ``DefaultTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide
	DefaultTtl *float64 `pulumi:"defaultTtl"`
	// The value of ``ID`` for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.
	FieldLevelEncryptionId *string `pulumi:"fieldLevelEncryptionId"`
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see [Working with policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-r
	ForwardedValues *DistributionForwardedValues `pulumi:"forwardedValues"`
	// A list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the ``LIVE`` stage to associate them with a cache behavior.
	FunctionAssociations []DistributionFunctionAssociation `pulumi:"functionAssociations"`
	// A complex type that contains zero or more Lambda@Edge function associations for a cache behavior.
	LambdaFunctionAssociations []DistributionLambdaFunctionAssociation `pulumi:"lambdaFunctionAssociations"`
	// This field is deprecated. We recommend that you use the ``MaxTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  The maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.
	MaxTtl *float64 `pulumi:"maxTtl"`
	// This field is deprecated. We recommend that you use the ``MinTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
	//  You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all headers to your origin (under ``He
	MinTtl *float64 `pulumi:"minTtl"`
	// The unique identifier of the origin request policy that is attached to this cache behavior. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide*.
	OriginRequestPolicyId *string `pulumi:"originRequestPolicyId"`
	// The pattern (for example, ``images/*.jpg``) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.
	//   You can optionally include a slash (``/``) at the beginning of the path pattern. For example, ``/images/*.jpg``. CloudFront behavior is the same with or without the leading ``/``.
	//   The path pattern for the default cache behavior is ``*`` and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.
	//  For more information, see [Path Pattern](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern) in the *Amazon CloudFront Developer Guide*.
	PathPattern string `pulumi:"pathPattern"`
	// The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see [Real-time logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html) in the *Amazon CloudFront Developer Guide*.
	RealtimeLogConfigArn *string `pulumi:"realtimeLogConfigArn"`
	// The identifier for a response headers policy.
	ResponseHeadersPolicyId *string `pulumi:"responseHeadersPolicyId"`
	// Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify ``true``; if not, specify ``false``. If you specify ``true`` for ``SmoothStreaming``, you can still distribute other content using this cache behavior if the content matches the value of ``PathPattern``.
	SmoothStreaming *bool `pulumi:"smoothStreaming"`
	// The value of ``ID`` for the origin that you want CloudFront to route requests to when they match this cache behavior.
	TargetOriginId string `pulumi:"targetOriginId"`
	// A list of key groups that CloudFront can use to validate signed URLs or signed cookies.
	//  When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
	TrustedKeyGroups []string `pulumi:"trustedKeyGroups"`
	// We recommend using ``TrustedKeyGroups`` instead of ``TrustedSigners``.
	//   A list of AWS-account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.
	//  When a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer's AWS-account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
	TrustedSigners []string `pulumi:"trustedSigners"`
	// The protocol that viewers can use to access the files in the origin specified by ``TargetOriginId`` when a request matches the path pattern in ``PathPattern``. You can specify the following options:
	//   +   ``allow-all``: Viewers can use HTTP or HTTPS.
	//   +   ``redirect-to-https``: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.
	//   +   ``https-only``: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).
	//
	//  For more information about requiring the HTTPS protocol, see [Requiring HTTPS Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html) in the *Amazon CloudFront Developer Guide*.
	//   The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol
	ViewerProtocolPolicy string `pulumi:"viewerProtocolPolicy"`
}

// DistributionCacheBehaviorInput is an input type that accepts DistributionCacheBehaviorArgs and DistributionCacheBehaviorOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorInput` via:
//
//	DistributionCacheBehaviorArgs{...}
type DistributionCacheBehaviorInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorOutput() DistributionCacheBehaviorOutput
	ToDistributionCacheBehaviorOutputWithContext(context.Context) DistributionCacheBehaviorOutput
}

// A complex type that describes how CloudFront processes requests.
//
//	You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.
//	For the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see [Quotas](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html) in the *Amazon CloudFront Developer Guide*.
//	If you don't want to specify any cache behaviors, include only an empty ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior`` element because this is invalid.
//	To delete all cache behaviors in an exist
type DistributionCacheBehaviorArgs struct {
	// A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:
	//   +  CloudFront forwards only ``GET`` and ``HEAD`` requests.
	//   +  CloudFront forwards only ``GET``, ``HEAD``, and ``OPTIONS`` requests.
	//   +  CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST``, and ``DELETE`` requests.
	//
	//  If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// The unique identifier of the cache policy that is attached to this cache behavior. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  A ``CacheBehavior`` must include either a ``CachePolicyId`` or ``ForwardedValues``. We recommend that you use a ``CachePolicyId``.
	CachePolicyId pulumi.StringPtrInput `pulumi:"cachePolicyId"`
	// A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:
	//   +  CloudFront caches responses to ``GET`` and ``HEAD`` requests.
	//   +  CloudFront caches responses to ``GET``, ``HEAD``, and ``OPTIONS`` requests.
	//
	//  If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.
	CachedMethods pulumi.StringArrayInput `pulumi:"cachedMethods"`
	// Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see [Serving Compressed Files](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html) in the *Amazon CloudFront Developer Guide*.
	Compress pulumi.BoolPtrInput `pulumi:"compress"`
	// This field is deprecated. We recommend that you use the ``DefaultTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide
	DefaultTtl pulumi.Float64PtrInput `pulumi:"defaultTtl"`
	// The value of ``ID`` for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.
	FieldLevelEncryptionId pulumi.StringPtrInput `pulumi:"fieldLevelEncryptionId"`
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see [Working with policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-r
	ForwardedValues DistributionForwardedValuesPtrInput `pulumi:"forwardedValues"`
	// A list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the ``LIVE`` stage to associate them with a cache behavior.
	FunctionAssociations DistributionFunctionAssociationArrayInput `pulumi:"functionAssociations"`
	// A complex type that contains zero or more Lambda@Edge function associations for a cache behavior.
	LambdaFunctionAssociations DistributionLambdaFunctionAssociationArrayInput `pulumi:"lambdaFunctionAssociations"`
	// This field is deprecated. We recommend that you use the ``MaxTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  The maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.
	MaxTtl pulumi.Float64PtrInput `pulumi:"maxTtl"`
	// This field is deprecated. We recommend that you use the ``MinTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
	//  You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all headers to your origin (under ``He
	MinTtl pulumi.Float64PtrInput `pulumi:"minTtl"`
	// The unique identifier of the origin request policy that is attached to this cache behavior. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide*.
	OriginRequestPolicyId pulumi.StringPtrInput `pulumi:"originRequestPolicyId"`
	// The pattern (for example, ``images/*.jpg``) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.
	//   You can optionally include a slash (``/``) at the beginning of the path pattern. For example, ``/images/*.jpg``. CloudFront behavior is the same with or without the leading ``/``.
	//   The path pattern for the default cache behavior is ``*`` and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.
	//  For more information, see [Path Pattern](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern) in the *Amazon CloudFront Developer Guide*.
	PathPattern pulumi.StringInput `pulumi:"pathPattern"`
	// The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see [Real-time logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html) in the *Amazon CloudFront Developer Guide*.
	RealtimeLogConfigArn pulumi.StringPtrInput `pulumi:"realtimeLogConfigArn"`
	// The identifier for a response headers policy.
	ResponseHeadersPolicyId pulumi.StringPtrInput `pulumi:"responseHeadersPolicyId"`
	// Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify ``true``; if not, specify ``false``. If you specify ``true`` for ``SmoothStreaming``, you can still distribute other content using this cache behavior if the content matches the value of ``PathPattern``.
	SmoothStreaming pulumi.BoolPtrInput `pulumi:"smoothStreaming"`
	// The value of ``ID`` for the origin that you want CloudFront to route requests to when they match this cache behavior.
	TargetOriginId pulumi.StringInput `pulumi:"targetOriginId"`
	// A list of key groups that CloudFront can use to validate signed URLs or signed cookies.
	//  When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
	TrustedKeyGroups pulumi.StringArrayInput `pulumi:"trustedKeyGroups"`
	// We recommend using ``TrustedKeyGroups`` instead of ``TrustedSigners``.
	//   A list of AWS-account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.
	//  When a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer's AWS-account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
	TrustedSigners pulumi.StringArrayInput `pulumi:"trustedSigners"`
	// The protocol that viewers can use to access the files in the origin specified by ``TargetOriginId`` when a request matches the path pattern in ``PathPattern``. You can specify the following options:
	//   +   ``allow-all``: Viewers can use HTTP or HTTPS.
	//   +   ``redirect-to-https``: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.
	//   +   ``https-only``: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).
	//
	//  For more information about requiring the HTTPS protocol, see [Requiring HTTPS Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html) in the *Amazon CloudFront Developer Guide*.
	//   The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol
	ViewerProtocolPolicy pulumi.StringInput `pulumi:"viewerProtocolPolicy"`
}

func (DistributionCacheBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehavior)(nil)).Elem()
}

func (i DistributionCacheBehaviorArgs) ToDistributionCacheBehaviorOutput() DistributionCacheBehaviorOutput {
	return i.ToDistributionCacheBehaviorOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorArgs) ToDistributionCacheBehaviorOutputWithContext(ctx context.Context) DistributionCacheBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorOutput)
}

// DistributionCacheBehaviorArrayInput is an input type that accepts DistributionCacheBehaviorArray and DistributionCacheBehaviorArrayOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorArrayInput` via:
//
//	DistributionCacheBehaviorArray{ DistributionCacheBehaviorArgs{...} }
type DistributionCacheBehaviorArrayInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorArrayOutput() DistributionCacheBehaviorArrayOutput
	ToDistributionCacheBehaviorArrayOutputWithContext(context.Context) DistributionCacheBehaviorArrayOutput
}

type DistributionCacheBehaviorArray []DistributionCacheBehaviorInput

func (DistributionCacheBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionCacheBehavior)(nil)).Elem()
}

func (i DistributionCacheBehaviorArray) ToDistributionCacheBehaviorArrayOutput() DistributionCacheBehaviorArrayOutput {
	return i.ToDistributionCacheBehaviorArrayOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorArray) ToDistributionCacheBehaviorArrayOutputWithContext(ctx context.Context) DistributionCacheBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorArrayOutput)
}

// A complex type that describes how CloudFront processes requests.
//
//	You must create at least as many cache behaviors (including the default cache behavior) as you have origins if you want CloudFront to serve objects from all of the origins. Each cache behavior specifies the one origin from which you want CloudFront to get objects. If you have two origins and only the default cache behavior, the default cache behavior will cause CloudFront to get objects from one of the origins, but the other origin is never used.
//	For the current quota (formerly known as limit) on the number of cache behaviors that you can add to a distribution, see [Quotas](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html) in the *Amazon CloudFront Developer Guide*.
//	If you don't want to specify any cache behaviors, include only an empty ``CacheBehaviors`` element. Don't include an empty ``CacheBehavior`` element because this is invalid.
//	To delete all cache behaviors in an exist
type DistributionCacheBehaviorOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehavior)(nil)).Elem()
}

func (o DistributionCacheBehaviorOutput) ToDistributionCacheBehaviorOutput() DistributionCacheBehaviorOutput {
	return o
}

func (o DistributionCacheBehaviorOutput) ToDistributionCacheBehaviorOutputWithContext(ctx context.Context) DistributionCacheBehaviorOutput {
	return o
}

// A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:
//
//   - CloudFront forwards only “GET“ and “HEAD“ requests.
//
//   - CloudFront forwards only “GET“, “HEAD“, and “OPTIONS“ requests.
//
//   - CloudFront forwards “GET, HEAD, OPTIONS, PUT, PATCH, POST“, and “DELETE“ requests.
//
//     If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.
func (o DistributionCacheBehaviorOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// The unique identifier of the cache policy that is attached to this cache behavior. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	A ``CacheBehavior`` must include either a ``CachePolicyId`` or ``ForwardedValues``. We recommend that you use a ``CachePolicyId``.
func (o DistributionCacheBehaviorOutput) CachePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) *string { return v.CachePolicyId }).(pulumi.StringPtrOutput)
}

// A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:
//
//   - CloudFront caches responses to “GET“ and “HEAD“ requests.
//
//   - CloudFront caches responses to “GET“, “HEAD“, and “OPTIONS“ requests.
//
//     If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.
func (o DistributionCacheBehaviorOutput) CachedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) []string { return v.CachedMethods }).(pulumi.StringArrayOutput)
}

// Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify true; if not, specify false. For more information, see [Serving Compressed Files](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCacheBehaviorOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) *bool { return v.Compress }).(pulumi.BoolPtrOutput)
}

// This field is deprecated. We recommend that you use the “DefaultTTL“ field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide
func (o DistributionCacheBehaviorOutput) DefaultTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) *float64 { return v.DefaultTtl }).(pulumi.Float64PtrOutput)
}

// The value of “ID“ for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for this cache behavior.
func (o DistributionCacheBehaviorOutput) FieldLevelEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) *string { return v.FieldLevelEncryptionId }).(pulumi.StringPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see [Working with policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//	If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-r
func (o DistributionCacheBehaviorOutput) ForwardedValues() DistributionForwardedValuesPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) *DistributionForwardedValues { return v.ForwardedValues }).(DistributionForwardedValuesPtrOutput)
}

// A list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the “LIVE“ stage to associate them with a cache behavior.
func (o DistributionCacheBehaviorOutput) FunctionAssociations() DistributionFunctionAssociationArrayOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) []DistributionFunctionAssociation { return v.FunctionAssociations }).(DistributionFunctionAssociationArrayOutput)
}

// A complex type that contains zero or more Lambda@Edge function associations for a cache behavior.
func (o DistributionCacheBehaviorOutput) LambdaFunctionAssociations() DistributionLambdaFunctionAssociationArrayOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) []DistributionLambdaFunctionAssociation {
		return v.LambdaFunctionAssociations
	}).(DistributionLambdaFunctionAssociationArrayOutput)
}

// This field is deprecated. We recommend that you use the “MaxTTL“ field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	The maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.
func (o DistributionCacheBehaviorOutput) MaxTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) *float64 { return v.MaxTtl }).(pulumi.Float64PtrOutput)
}

// This field is deprecated. We recommend that you use the “MinTTL“ field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
//	You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all headers to your origin (under ``He
func (o DistributionCacheBehaviorOutput) MinTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) *float64 { return v.MinTtl }).(pulumi.Float64PtrOutput)
}

// The unique identifier of the origin request policy that is attached to this cache behavior. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCacheBehaviorOutput) OriginRequestPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) *string { return v.OriginRequestPolicyId }).(pulumi.StringPtrOutput)
}

// The pattern (for example, “images/*.jpg“) that specifies which requests to apply the behavior to. When CloudFront receives a viewer request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution.
//
//	 You can optionally include a slash (``/``) at the beginning of the path pattern. For example, ``/images/*.jpg``. CloudFront behavior is the same with or without the leading ``/``.
//	 The path pattern for the default cache behavior is ``*`` and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.
//	For more information, see [Path Pattern](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesPathPattern) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCacheBehaviorOutput) PathPattern() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) string { return v.PathPattern }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see [Real-time logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCacheBehaviorOutput) RealtimeLogConfigArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) *string { return v.RealtimeLogConfigArn }).(pulumi.StringPtrOutput)
}

// The identifier for a response headers policy.
func (o DistributionCacheBehaviorOutput) ResponseHeadersPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) *string { return v.ResponseHeadersPolicyId }).(pulumi.StringPtrOutput)
}

// Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify “true“; if not, specify “false“. If you specify “true“ for “SmoothStreaming“, you can still distribute other content using this cache behavior if the content matches the value of “PathPattern“.
func (o DistributionCacheBehaviorOutput) SmoothStreaming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) *bool { return v.SmoothStreaming }).(pulumi.BoolPtrOutput)
}

// The value of “ID“ for the origin that you want CloudFront to route requests to when they match this cache behavior.
func (o DistributionCacheBehaviorOutput) TargetOriginId() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) string { return v.TargetOriginId }).(pulumi.StringOutput)
}

// A list of key groups that CloudFront can use to validate signed URLs or signed cookies.
//
//	When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCacheBehaviorOutput) TrustedKeyGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) []string { return v.TrustedKeyGroups }).(pulumi.StringArrayOutput)
}

// We recommend using “TrustedKeyGroups“ instead of “TrustedSigners“.
//
//	 A list of AWS-account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.
//	When a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in the trusted signer's AWS-account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCacheBehaviorOutput) TrustedSigners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) []string { return v.TrustedSigners }).(pulumi.StringArrayOutput)
}

// The protocol that viewers can use to access the files in the origin specified by “TargetOriginId“ when a request matches the path pattern in “PathPattern“. You can specify the following options:
//
//   - “allow-all“: Viewers can use HTTP or HTTPS.
//
//   - “redirect-to-https“: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.
//
//   - “https-only“: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).
//
//     For more information about requiring the HTTPS protocol, see [Requiring HTTPS Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html) in the *Amazon CloudFront Developer Guide*.
//     The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol
func (o DistributionCacheBehaviorOutput) ViewerProtocolPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) string { return v.ViewerProtocolPolicy }).(pulumi.StringOutput)
}

type DistributionCacheBehaviorArrayOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionCacheBehavior)(nil)).Elem()
}

func (o DistributionCacheBehaviorArrayOutput) ToDistributionCacheBehaviorArrayOutput() DistributionCacheBehaviorArrayOutput {
	return o
}

func (o DistributionCacheBehaviorArrayOutput) ToDistributionCacheBehaviorArrayOutputWithContext(ctx context.Context) DistributionCacheBehaviorArrayOutput {
	return o
}

func (o DistributionCacheBehaviorArrayOutput) Index(i pulumi.IntInput) DistributionCacheBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionCacheBehavior {
		return vs[0].([]DistributionCacheBehavior)[vs[1].(int)]
	}).(DistributionCacheBehaviorOutput)
}

// A distribution configuration.
type DistributionConfig struct {
	// A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.
	Aliases []string `pulumi:"aliases"`
	// A complex type that contains zero or more ``CacheBehavior`` elements.
	CacheBehaviors []DistributionCacheBehavior `pulumi:"cacheBehaviors"`
	Cnames         []string                    `pulumi:"cnames"`
	// A comment to describe the distribution. The comment cannot be longer than 128 characters.
	Comment *string `pulumi:"comment"`
	// The identifier of a continuous deployment policy. For more information, see ``CreateContinuousDeploymentPolicy``.
	ContinuousDeploymentPolicyId *string `pulumi:"continuousDeploymentPolicyId"`
	// A complex type that controls the following:
	//   +  Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.
	//   +  How long CloudFront caches HTTP status codes in the 4xx and 5xx range.
	//
	//  For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
	CustomErrorResponses []DistributionCustomErrorResponse `pulumi:"customErrorResponses"`
	CustomOrigin         *DistributionLegacyCustomOrigin   `pulumi:"customOrigin"`
	// A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or if files don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default cache behavior.
	DefaultCacheBehavior DistributionDefaultCacheBehavior `pulumi:"defaultCacheBehavior"`
	// The object that you want CloudFront to request from your origin (for example, ``index.html``) when a viewer requests the root URL for your distribution (``https://www.example.com``) instead of an object in your distribution (``https://www.example.com/product-description.html``). Specifying a default root object avoids exposing the contents of your distribution.
	//  Specify only the object name, for example, ``index.html``. Don't add a ``/`` before the object name.
	//  If you don't want to specify a default root object when you create a distribution, include an empty ``DefaultRootObject`` element.
	//  To delete the default root object from an existing distribution, update the distribution configuration and include an empty ``DefaultRootObject`` element.
	//  To replace the default root object, update the distribution configuration and specify the new object.
	//  For more information about the default root object, see [Creating a Default Root Object](https://docs.aws.amazon.com/AmazonCloudFront/latest/D
	DefaultRootObject *string `pulumi:"defaultRootObject"`
	// From this field, you can enable or disable the selected distribution.
	Enabled bool `pulumi:"enabled"`
	// (Optional) Specify the maximum HTTP version(s) that you want viewers to use to communicate with CF. The default value for new distributions is ``http1.1``.
	//  For viewers and CF to use HTTP/2, viewers must support TLSv1.2 or later, and must support Server Name Indication (SNI).
	//  For viewers and CF to use HTTP/3, viewers must support TLSv1.3 and Server Name Indication (SNI). CF supports HTTP/3 connection migration to allow the viewer to switch networks without losing connection. For more information about connection migration, see [Connection Migration](https://docs.aws.amazon.com/https://www.rfc-editor.org/rfc/rfc9000.html#name-connection-migration) at RFC 9000. For more information about supported TLSv1.3 ciphers, see [Supported protocols and ciphers between viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html).
	HttpVersion *string `pulumi:"httpVersion"`
	// If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify ``true``. If you specify ``false``, CloudFront responds to IPv6 DNS requests with the DNS response code ``NOERROR`` and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.
	//  In general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you're using signed URLs or signed cookies to restrict access to your content, and if you're using a custom policy that includes the ``IpAddress`` parameter to restrict the IP addresses that can access your content, don't enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see [Creating a Signed URL Using a Custom Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/Devel
	Ipv6Enabled *bool `pulumi:"ipv6Enabled"`
	// A complex type that controls whether access logs are written for the distribution.
	//  For more information about logging, see [Access Logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) in the *Amazon CloudFront Developer Guide*.
	Logging *DistributionLogging `pulumi:"logging"`
	// A complex type that contains information about origin groups for this distribution.
	OriginGroups *DistributionOriginGroups `pulumi:"originGroups"`
	// A complex type that contains information about origins for this distribution.
	Origins []DistributionOrigin `pulumi:"origins"`
	// The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify ``PriceClass_All``, CloudFront responds to requests for your objects from all CloudFront edge locations.
	//  If you specify a price class other than ``PriceClass_All``, CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.
	//  For more information about price classes, see [Choosing the Price Class for a CloudFront Distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html) in the *Amazon CloudFront Developer Guide*. For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see [Amazon CloudFront Pricing](https://docs.aws.amazon.com/cloudfront/pricing/).
	PriceClass *string `pulumi:"priceClass"`
	// A complex type that identifies ways in which you want to restrict distribution of your content.
	Restrictions *DistributionRestrictions   `pulumi:"restrictions"`
	S3Origin     *DistributionLegacyS3Origin `pulumi:"s3Origin"`
	// A Boolean that indicates whether this is a staging distribution. When this value is ``true``, this is a staging distribution. When this value is ``false``, this is not a staging distribution.
	Staging *bool `pulumi:"staging"`
	// A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers.
	ViewerCertificate *DistributionViewerCertificate `pulumi:"viewerCertificate"`
	// A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example ``arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a``. To specify a web ACL created using WAF Classic, use the ACL ID, for example ``473e64fd-f30b-4765-81a0-62ad96dd167a``.
	//   WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the [Developer Guide](https://docs.aws.amazon.com/waf/latest
	WebAclId *string `pulumi:"webAclId"`
}

// DistributionConfigInput is an input type that accepts DistributionConfigArgs and DistributionConfigOutput values.
// You can construct a concrete instance of `DistributionConfigInput` via:
//
//	DistributionConfigArgs{...}
type DistributionConfigInput interface {
	pulumi.Input

	ToDistributionConfigOutput() DistributionConfigOutput
	ToDistributionConfigOutputWithContext(context.Context) DistributionConfigOutput
}

// A distribution configuration.
type DistributionConfigArgs struct {
	// A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.
	Aliases pulumi.StringArrayInput `pulumi:"aliases"`
	// A complex type that contains zero or more ``CacheBehavior`` elements.
	CacheBehaviors DistributionCacheBehaviorArrayInput `pulumi:"cacheBehaviors"`
	Cnames         pulumi.StringArrayInput             `pulumi:"cnames"`
	// A comment to describe the distribution. The comment cannot be longer than 128 characters.
	Comment pulumi.StringPtrInput `pulumi:"comment"`
	// The identifier of a continuous deployment policy. For more information, see ``CreateContinuousDeploymentPolicy``.
	ContinuousDeploymentPolicyId pulumi.StringPtrInput `pulumi:"continuousDeploymentPolicyId"`
	// A complex type that controls the following:
	//   +  Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.
	//   +  How long CloudFront caches HTTP status codes in the 4xx and 5xx range.
	//
	//  For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
	CustomErrorResponses DistributionCustomErrorResponseArrayInput `pulumi:"customErrorResponses"`
	CustomOrigin         DistributionLegacyCustomOriginPtrInput    `pulumi:"customOrigin"`
	// A complex type that describes the default cache behavior if you don't specify a ``CacheBehavior`` element or if files don't match any of the values of ``PathPattern`` in ``CacheBehavior`` elements. You must create exactly one default cache behavior.
	DefaultCacheBehavior DistributionDefaultCacheBehaviorInput `pulumi:"defaultCacheBehavior"`
	// The object that you want CloudFront to request from your origin (for example, ``index.html``) when a viewer requests the root URL for your distribution (``https://www.example.com``) instead of an object in your distribution (``https://www.example.com/product-description.html``). Specifying a default root object avoids exposing the contents of your distribution.
	//  Specify only the object name, for example, ``index.html``. Don't add a ``/`` before the object name.
	//  If you don't want to specify a default root object when you create a distribution, include an empty ``DefaultRootObject`` element.
	//  To delete the default root object from an existing distribution, update the distribution configuration and include an empty ``DefaultRootObject`` element.
	//  To replace the default root object, update the distribution configuration and specify the new object.
	//  For more information about the default root object, see [Creating a Default Root Object](https://docs.aws.amazon.com/AmazonCloudFront/latest/D
	DefaultRootObject pulumi.StringPtrInput `pulumi:"defaultRootObject"`
	// From this field, you can enable or disable the selected distribution.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// (Optional) Specify the maximum HTTP version(s) that you want viewers to use to communicate with CF. The default value for new distributions is ``http1.1``.
	//  For viewers and CF to use HTTP/2, viewers must support TLSv1.2 or later, and must support Server Name Indication (SNI).
	//  For viewers and CF to use HTTP/3, viewers must support TLSv1.3 and Server Name Indication (SNI). CF supports HTTP/3 connection migration to allow the viewer to switch networks without losing connection. For more information about connection migration, see [Connection Migration](https://docs.aws.amazon.com/https://www.rfc-editor.org/rfc/rfc9000.html#name-connection-migration) at RFC 9000. For more information about supported TLSv1.3 ciphers, see [Supported protocols and ciphers between viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html).
	HttpVersion pulumi.StringPtrInput `pulumi:"httpVersion"`
	// If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify ``true``. If you specify ``false``, CloudFront responds to IPv6 DNS requests with the DNS response code ``NOERROR`` and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.
	//  In general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you're using signed URLs or signed cookies to restrict access to your content, and if you're using a custom policy that includes the ``IpAddress`` parameter to restrict the IP addresses that can access your content, don't enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see [Creating a Signed URL Using a Custom Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/Devel
	Ipv6Enabled pulumi.BoolPtrInput `pulumi:"ipv6Enabled"`
	// A complex type that controls whether access logs are written for the distribution.
	//  For more information about logging, see [Access Logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) in the *Amazon CloudFront Developer Guide*.
	Logging DistributionLoggingPtrInput `pulumi:"logging"`
	// A complex type that contains information about origin groups for this distribution.
	OriginGroups DistributionOriginGroupsPtrInput `pulumi:"originGroups"`
	// A complex type that contains information about origins for this distribution.
	Origins DistributionOriginArrayInput `pulumi:"origins"`
	// The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify ``PriceClass_All``, CloudFront responds to requests for your objects from all CloudFront edge locations.
	//  If you specify a price class other than ``PriceClass_All``, CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.
	//  For more information about price classes, see [Choosing the Price Class for a CloudFront Distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html) in the *Amazon CloudFront Developer Guide*. For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see [Amazon CloudFront Pricing](https://docs.aws.amazon.com/cloudfront/pricing/).
	PriceClass pulumi.StringPtrInput `pulumi:"priceClass"`
	// A complex type that identifies ways in which you want to restrict distribution of your content.
	Restrictions DistributionRestrictionsPtrInput   `pulumi:"restrictions"`
	S3Origin     DistributionLegacyS3OriginPtrInput `pulumi:"s3Origin"`
	// A Boolean that indicates whether this is a staging distribution. When this value is ``true``, this is a staging distribution. When this value is ``false``, this is not a staging distribution.
	Staging pulumi.BoolPtrInput `pulumi:"staging"`
	// A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers.
	ViewerCertificate DistributionViewerCertificatePtrInput `pulumi:"viewerCertificate"`
	// A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example ``arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a``. To specify a web ACL created using WAF Classic, use the ACL ID, for example ``473e64fd-f30b-4765-81a0-62ad96dd167a``.
	//   WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the [Developer Guide](https://docs.aws.amazon.com/waf/latest
	WebAclId pulumi.StringPtrInput `pulumi:"webAclId"`
}

func (DistributionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfig)(nil)).Elem()
}

func (i DistributionConfigArgs) ToDistributionConfigOutput() DistributionConfigOutput {
	return i.ToDistributionConfigOutputWithContext(context.Background())
}

func (i DistributionConfigArgs) ToDistributionConfigOutputWithContext(ctx context.Context) DistributionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionConfigOutput)
}

// A distribution configuration.
type DistributionConfigOutput struct{ *pulumi.OutputState }

func (DistributionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionConfig)(nil)).Elem()
}

func (o DistributionConfigOutput) ToDistributionConfigOutput() DistributionConfigOutput {
	return o
}

func (o DistributionConfigOutput) ToDistributionConfigOutputWithContext(ctx context.Context) DistributionConfigOutput {
	return o
}

// A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.
func (o DistributionConfigOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfig) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

// A complex type that contains zero or more “CacheBehavior“ elements.
func (o DistributionConfigOutput) CacheBehaviors() DistributionCacheBehaviorArrayOutput {
	return o.ApplyT(func(v DistributionConfig) []DistributionCacheBehavior { return v.CacheBehaviors }).(DistributionCacheBehaviorArrayOutput)
}

func (o DistributionConfigOutput) Cnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionConfig) []string { return v.Cnames }).(pulumi.StringArrayOutput)
}

// A comment to describe the distribution. The comment cannot be longer than 128 characters.
func (o DistributionConfigOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

// The identifier of a continuous deployment policy. For more information, see “CreateContinuousDeploymentPolicy“.
func (o DistributionConfigOutput) ContinuousDeploymentPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *string { return v.ContinuousDeploymentPolicyId }).(pulumi.StringPtrOutput)
}

// A complex type that controls the following:
//
//   - Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.
//
//   - How long CloudFront caches HTTP status codes in the 4xx and 5xx range.
//
//     For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionConfigOutput) CustomErrorResponses() DistributionCustomErrorResponseArrayOutput {
	return o.ApplyT(func(v DistributionConfig) []DistributionCustomErrorResponse { return v.CustomErrorResponses }).(DistributionCustomErrorResponseArrayOutput)
}

func (o DistributionConfigOutput) CustomOrigin() DistributionLegacyCustomOriginPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *DistributionLegacyCustomOrigin { return v.CustomOrigin }).(DistributionLegacyCustomOriginPtrOutput)
}

// A complex type that describes the default cache behavior if you don't specify a “CacheBehavior“ element or if files don't match any of the values of “PathPattern“ in “CacheBehavior“ elements. You must create exactly one default cache behavior.
func (o DistributionConfigOutput) DefaultCacheBehavior() DistributionDefaultCacheBehaviorOutput {
	return o.ApplyT(func(v DistributionConfig) DistributionDefaultCacheBehavior { return v.DefaultCacheBehavior }).(DistributionDefaultCacheBehaviorOutput)
}

// The object that you want CloudFront to request from your origin (for example, “index.html“) when a viewer requests the root URL for your distribution (“https://www.example.com“) instead of an object in your distribution (“https://www.example.com/product-description.html“). Specifying a default root object avoids exposing the contents of your distribution.
//
//	Specify only the object name, for example, ``index.html``. Don't add a ``/`` before the object name.
//	If you don't want to specify a default root object when you create a distribution, include an empty ``DefaultRootObject`` element.
//	To delete the default root object from an existing distribution, update the distribution configuration and include an empty ``DefaultRootObject`` element.
//	To replace the default root object, update the distribution configuration and specify the new object.
//	For more information about the default root object, see [Creating a Default Root Object](https://docs.aws.amazon.com/AmazonCloudFront/latest/D
func (o DistributionConfigOutput) DefaultRootObject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *string { return v.DefaultRootObject }).(pulumi.StringPtrOutput)
}

// From this field, you can enable or disable the selected distribution.
func (o DistributionConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DistributionConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// (Optional) Specify the maximum HTTP version(s) that you want viewers to use to communicate with CF. The default value for new distributions is “http1.1“.
//
//	For viewers and CF to use HTTP/2, viewers must support TLSv1.2 or later, and must support Server Name Indication (SNI).
//	For viewers and CF to use HTTP/3, viewers must support TLSv1.3 and Server Name Indication (SNI). CF supports HTTP/3 connection migration to allow the viewer to switch networks without losing connection. For more information about connection migration, see [Connection Migration](https://docs.aws.amazon.com/https://www.rfc-editor.org/rfc/rfc9000.html#name-connection-migration) at RFC 9000. For more information about supported TLSv1.3 ciphers, see [Supported protocols and ciphers between viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html).
func (o DistributionConfigOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *string { return v.HttpVersion }).(pulumi.StringPtrOutput)
}

// If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify “true“. If you specify “false“, CloudFront responds to IPv6 DNS requests with the DNS response code “NOERROR“ and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.
//
//	In general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you're using signed URLs or signed cookies to restrict access to your content, and if you're using a custom policy that includes the ``IpAddress`` parameter to restrict the IP addresses that can access your content, don't enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see [Creating a Signed URL Using a Custom Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/Devel
func (o DistributionConfigOutput) Ipv6Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *bool { return v.Ipv6Enabled }).(pulumi.BoolPtrOutput)
}

// A complex type that controls whether access logs are written for the distribution.
//
//	For more information about logging, see [Access Logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionConfigOutput) Logging() DistributionLoggingPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *DistributionLogging { return v.Logging }).(DistributionLoggingPtrOutput)
}

// A complex type that contains information about origin groups for this distribution.
func (o DistributionConfigOutput) OriginGroups() DistributionOriginGroupsPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *DistributionOriginGroups { return v.OriginGroups }).(DistributionOriginGroupsPtrOutput)
}

// A complex type that contains information about origins for this distribution.
func (o DistributionConfigOutput) Origins() DistributionOriginArrayOutput {
	return o.ApplyT(func(v DistributionConfig) []DistributionOrigin { return v.Origins }).(DistributionOriginArrayOutput)
}

// The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify “PriceClass_All“, CloudFront responds to requests for your objects from all CloudFront edge locations.
//
//	If you specify a price class other than ``PriceClass_All``, CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.
//	For more information about price classes, see [Choosing the Price Class for a CloudFront Distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html) in the *Amazon CloudFront Developer Guide*. For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see [Amazon CloudFront Pricing](https://docs.aws.amazon.com/cloudfront/pricing/).
func (o DistributionConfigOutput) PriceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *string { return v.PriceClass }).(pulumi.StringPtrOutput)
}

// A complex type that identifies ways in which you want to restrict distribution of your content.
func (o DistributionConfigOutput) Restrictions() DistributionRestrictionsPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *DistributionRestrictions { return v.Restrictions }).(DistributionRestrictionsPtrOutput)
}

func (o DistributionConfigOutput) S3Origin() DistributionLegacyS3OriginPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *DistributionLegacyS3Origin { return v.S3Origin }).(DistributionLegacyS3OriginPtrOutput)
}

// A Boolean that indicates whether this is a staging distribution. When this value is “true“, this is a staging distribution. When this value is “false“, this is not a staging distribution.
func (o DistributionConfigOutput) Staging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *bool { return v.Staging }).(pulumi.BoolPtrOutput)
}

// A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers.
func (o DistributionConfigOutput) ViewerCertificate() DistributionViewerCertificatePtrOutput {
	return o.ApplyT(func(v DistributionConfig) *DistributionViewerCertificate { return v.ViewerCertificate }).(DistributionViewerCertificatePtrOutput)
}

// A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example “arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a“. To specify a web ACL created using WAF Classic, use the ACL ID, for example “473e64fd-f30b-4765-81a0-62ad96dd167a“.
//
//	WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the [Developer Guide](https://docs.aws.amazon.com/waf/latest
func (o DistributionConfigOutput) WebAclId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionConfig) *string { return v.WebAclId }).(pulumi.StringPtrOutput)
}

type DistributionConfigPtrOutput struct{ *pulumi.OutputState }

func (DistributionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionConfig)(nil)).Elem()
}

func (o DistributionConfigPtrOutput) ToDistributionConfigPtrOutput() DistributionConfigPtrOutput {
	return o
}

func (o DistributionConfigPtrOutput) ToDistributionConfigPtrOutputWithContext(ctx context.Context) DistributionConfigPtrOutput {
	return o
}

func (o DistributionConfigPtrOutput) Elem() DistributionConfigOutput {
	return o.ApplyT(func(v *DistributionConfig) DistributionConfig {
		if v != nil {
			return *v
		}
		var ret DistributionConfig
		return ret
	}).(DistributionConfigOutput)
}

// A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.
func (o DistributionConfigPtrOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionConfig) []string {
		if v == nil {
			return nil
		}
		return v.Aliases
	}).(pulumi.StringArrayOutput)
}

// A complex type that contains zero or more “CacheBehavior“ elements.
func (o DistributionConfigPtrOutput) CacheBehaviors() DistributionCacheBehaviorArrayOutput {
	return o.ApplyT(func(v *DistributionConfig) []DistributionCacheBehavior {
		if v == nil {
			return nil
		}
		return v.CacheBehaviors
	}).(DistributionCacheBehaviorArrayOutput)
}

func (o DistributionConfigPtrOutput) Cnames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionConfig) []string {
		if v == nil {
			return nil
		}
		return v.Cnames
	}).(pulumi.StringArrayOutput)
}

// A comment to describe the distribution. The comment cannot be longer than 128 characters.
func (o DistributionConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

// The identifier of a continuous deployment policy. For more information, see “CreateContinuousDeploymentPolicy“.
func (o DistributionConfigPtrOutput) ContinuousDeploymentPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.ContinuousDeploymentPolicyId
	}).(pulumi.StringPtrOutput)
}

// A complex type that controls the following:
//
//   - Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.
//
//   - How long CloudFront caches HTTP status codes in the 4xx and 5xx range.
//
//     For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionConfigPtrOutput) CustomErrorResponses() DistributionCustomErrorResponseArrayOutput {
	return o.ApplyT(func(v *DistributionConfig) []DistributionCustomErrorResponse {
		if v == nil {
			return nil
		}
		return v.CustomErrorResponses
	}).(DistributionCustomErrorResponseArrayOutput)
}

func (o DistributionConfigPtrOutput) CustomOrigin() DistributionLegacyCustomOriginPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *DistributionLegacyCustomOrigin {
		if v == nil {
			return nil
		}
		return v.CustomOrigin
	}).(DistributionLegacyCustomOriginPtrOutput)
}

// A complex type that describes the default cache behavior if you don't specify a “CacheBehavior“ element or if files don't match any of the values of “PathPattern“ in “CacheBehavior“ elements. You must create exactly one default cache behavior.
func (o DistributionConfigPtrOutput) DefaultCacheBehavior() DistributionDefaultCacheBehaviorPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *DistributionDefaultCacheBehavior {
		if v == nil {
			return nil
		}
		return &v.DefaultCacheBehavior
	}).(DistributionDefaultCacheBehaviorPtrOutput)
}

// The object that you want CloudFront to request from your origin (for example, “index.html“) when a viewer requests the root URL for your distribution (“https://www.example.com“) instead of an object in your distribution (“https://www.example.com/product-description.html“). Specifying a default root object avoids exposing the contents of your distribution.
//
//	Specify only the object name, for example, ``index.html``. Don't add a ``/`` before the object name.
//	If you don't want to specify a default root object when you create a distribution, include an empty ``DefaultRootObject`` element.
//	To delete the default root object from an existing distribution, update the distribution configuration and include an empty ``DefaultRootObject`` element.
//	To replace the default root object, update the distribution configuration and specify the new object.
//	For more information about the default root object, see [Creating a Default Root Object](https://docs.aws.amazon.com/AmazonCloudFront/latest/D
func (o DistributionConfigPtrOutput) DefaultRootObject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRootObject
	}).(pulumi.StringPtrOutput)
}

// From this field, you can enable or disable the selected distribution.
func (o DistributionConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// (Optional) Specify the maximum HTTP version(s) that you want viewers to use to communicate with CF. The default value for new distributions is “http1.1“.
//
//	For viewers and CF to use HTTP/2, viewers must support TLSv1.2 or later, and must support Server Name Indication (SNI).
//	For viewers and CF to use HTTP/3, viewers must support TLSv1.3 and Server Name Indication (SNI). CF supports HTTP/3 connection migration to allow the viewer to switch networks without losing connection. For more information about connection migration, see [Connection Migration](https://docs.aws.amazon.com/https://www.rfc-editor.org/rfc/rfc9000.html#name-connection-migration) at RFC 9000. For more information about supported TLSv1.3 ciphers, see [Supported protocols and ciphers between viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html).
func (o DistributionConfigPtrOutput) HttpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.HttpVersion
	}).(pulumi.StringPtrOutput)
}

// If you want CloudFront to respond to IPv6 DNS requests with an IPv6 address for your distribution, specify “true“. If you specify “false“, CloudFront responds to IPv6 DNS requests with the DNS response code “NOERROR“ and with no IP addresses. This allows viewers to submit a second request, for an IPv4 address for your distribution.
//
//	In general, you should enable IPv6 if you have users on IPv6 networks who want to access your content. However, if you're using signed URLs or signed cookies to restrict access to your content, and if you're using a custom policy that includes the ``IpAddress`` parameter to restrict the IP addresses that can access your content, don't enable IPv6. If you want to restrict access to some content by IP address and not restrict access to other content (or restrict access but not by IP address), you can create two distributions. For more information, see [Creating a Signed URL Using a Custom Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/Devel
func (o DistributionConfigPtrOutput) Ipv6Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Ipv6Enabled
	}).(pulumi.BoolPtrOutput)
}

// A complex type that controls whether access logs are written for the distribution.
//
//	For more information about logging, see [Access Logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionConfigPtrOutput) Logging() DistributionLoggingPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *DistributionLogging {
		if v == nil {
			return nil
		}
		return v.Logging
	}).(DistributionLoggingPtrOutput)
}

// A complex type that contains information about origin groups for this distribution.
func (o DistributionConfigPtrOutput) OriginGroups() DistributionOriginGroupsPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *DistributionOriginGroups {
		if v == nil {
			return nil
		}
		return v.OriginGroups
	}).(DistributionOriginGroupsPtrOutput)
}

// A complex type that contains information about origins for this distribution.
func (o DistributionConfigPtrOutput) Origins() DistributionOriginArrayOutput {
	return o.ApplyT(func(v *DistributionConfig) []DistributionOrigin {
		if v == nil {
			return nil
		}
		return v.Origins
	}).(DistributionOriginArrayOutput)
}

// The price class that corresponds with the maximum price that you want to pay for CloudFront service. If you specify “PriceClass_All“, CloudFront responds to requests for your objects from all CloudFront edge locations.
//
//	If you specify a price class other than ``PriceClass_All``, CloudFront serves your objects from the CloudFront edge location that has the lowest latency among the edge locations in your price class. Viewers who are in or near regions that are excluded from your specified price class may encounter slower performance.
//	For more information about price classes, see [Choosing the Price Class for a CloudFront Distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PriceClass.html) in the *Amazon CloudFront Developer Guide*. For information about CloudFront pricing, including how price classes (such as Price Class 100) map to CloudFront regions, see [Amazon CloudFront Pricing](https://docs.aws.amazon.com/cloudfront/pricing/).
func (o DistributionConfigPtrOutput) PriceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.PriceClass
	}).(pulumi.StringPtrOutput)
}

// A complex type that identifies ways in which you want to restrict distribution of your content.
func (o DistributionConfigPtrOutput) Restrictions() DistributionRestrictionsPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *DistributionRestrictions {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(DistributionRestrictionsPtrOutput)
}

func (o DistributionConfigPtrOutput) S3Origin() DistributionLegacyS3OriginPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *DistributionLegacyS3Origin {
		if v == nil {
			return nil
		}
		return v.S3Origin
	}).(DistributionLegacyS3OriginPtrOutput)
}

// A Boolean that indicates whether this is a staging distribution. When this value is “true“, this is a staging distribution. When this value is “false“, this is not a staging distribution.
func (o DistributionConfigPtrOutput) Staging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Staging
	}).(pulumi.BoolPtrOutput)
}

// A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers.
func (o DistributionConfigPtrOutput) ViewerCertificate() DistributionViewerCertificatePtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *DistributionViewerCertificate {
		if v == nil {
			return nil
		}
		return v.ViewerCertificate
	}).(DistributionViewerCertificatePtrOutput)
}

// A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution. To specify a web ACL created using the latest version of WAF, use the ACL ARN, for example “arn:aws:wafv2:us-east-1:123456789012:global/webacl/ExampleWebACL/473e64fd-f30b-4765-81a0-62ad96dd167a“. To specify a web ACL created using WAF Classic, use the ACL ID, for example “473e64fd-f30b-4765-81a0-62ad96dd167a“.
//
//	WAF is a web application firewall that lets you monitor the HTTP and HTTPS requests that are forwarded to CloudFront, and lets you control access to your content. Based on conditions that you specify, such as the IP addresses that requests originate from or the values of query strings, CloudFront responds to requests either with the requested content or with an HTTP 403 status code (Forbidden). You can also configure CloudFront to return a custom error page when a request is blocked. For more information about WAF, see the [Developer Guide](https://docs.aws.amazon.com/waf/latest
func (o DistributionConfigPtrOutput) WebAclId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.WebAclId
	}).(pulumi.StringPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront Forwards, Caches, and Logs C
type DistributionCookies struct {
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
	//  If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
	//  Specifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the ``WhitelistedNames`` complex type.
	//  Amazon S3 doesn't process cookies. When the cache behavior is forw
	Forward string `pulumi:"forward"`
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
	//  If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
	//  Required if you specify ``whitelist`` for the value of ``Forward``. A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward se
	WhitelistedNames []string `pulumi:"whitelistedNames"`
}

// DistributionCookiesInput is an input type that accepts DistributionCookiesArgs and DistributionCookiesOutput values.
// You can construct a concrete instance of `DistributionCookiesInput` via:
//
//	DistributionCookiesArgs{...}
type DistributionCookiesInput interface {
	pulumi.Input

	ToDistributionCookiesOutput() DistributionCookiesOutput
	ToDistributionCookiesOutputWithContext(context.Context) DistributionCookiesOutput
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront Forwards, Caches, and Logs C
type DistributionCookiesArgs struct {
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
	//  If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
	//  Specifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the ``WhitelistedNames`` complex type.
	//  Amazon S3 doesn't process cookies. When the cache behavior is forw
	Forward pulumi.StringInput `pulumi:"forward"`
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
	//  If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
	//  Required if you specify ``whitelist`` for the value of ``Forward``. A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward se
	WhitelistedNames pulumi.StringArrayInput `pulumi:"whitelistedNames"`
}

func (DistributionCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCookies)(nil)).Elem()
}

func (i DistributionCookiesArgs) ToDistributionCookiesOutput() DistributionCookiesOutput {
	return i.ToDistributionCookiesOutputWithContext(context.Background())
}

func (i DistributionCookiesArgs) ToDistributionCookiesOutputWithContext(ctx context.Context) DistributionCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCookiesOutput)
}

func (i DistributionCookiesArgs) ToDistributionCookiesPtrOutput() DistributionCookiesPtrOutput {
	return i.ToDistributionCookiesPtrOutputWithContext(context.Background())
}

func (i DistributionCookiesArgs) ToDistributionCookiesPtrOutputWithContext(ctx context.Context) DistributionCookiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCookiesOutput).ToDistributionCookiesPtrOutputWithContext(ctx)
}

// DistributionCookiesPtrInput is an input type that accepts DistributionCookiesArgs, DistributionCookiesPtr and DistributionCookiesPtrOutput values.
// You can construct a concrete instance of `DistributionCookiesPtrInput` via:
//
//	        DistributionCookiesArgs{...}
//
//	or:
//
//	        nil
type DistributionCookiesPtrInput interface {
	pulumi.Input

	ToDistributionCookiesPtrOutput() DistributionCookiesPtrOutput
	ToDistributionCookiesPtrOutputWithContext(context.Context) DistributionCookiesPtrOutput
}

type distributionCookiesPtrType DistributionCookiesArgs

func DistributionCookiesPtr(v *DistributionCookiesArgs) DistributionCookiesPtrInput {
	return (*distributionCookiesPtrType)(v)
}

func (*distributionCookiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCookies)(nil)).Elem()
}

func (i *distributionCookiesPtrType) ToDistributionCookiesPtrOutput() DistributionCookiesPtrOutput {
	return i.ToDistributionCookiesPtrOutputWithContext(context.Background())
}

func (i *distributionCookiesPtrType) ToDistributionCookiesPtrOutputWithContext(ctx context.Context) DistributionCookiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCookiesPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront Forwards, Caches, and Logs C
type DistributionCookiesOutput struct{ *pulumi.OutputState }

func (DistributionCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCookies)(nil)).Elem()
}

func (o DistributionCookiesOutput) ToDistributionCookiesOutput() DistributionCookiesOutput {
	return o
}

func (o DistributionCookiesOutput) ToDistributionCookiesOutputWithContext(ctx context.Context) DistributionCookiesOutput {
	return o
}

func (o DistributionCookiesOutput) ToDistributionCookiesPtrOutput() DistributionCookiesPtrOutput {
	return o.ToDistributionCookiesPtrOutputWithContext(context.Background())
}

func (o DistributionCookiesOutput) ToDistributionCookiesPtrOutputWithContext(ctx context.Context) DistributionCookiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionCookies) *DistributionCookies {
		return &v
	}).(DistributionCookiesPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	Specifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the ``WhitelistedNames`` complex type.
//	Amazon S3 doesn't process cookies. When the cache behavior is forw
func (o DistributionCookiesOutput) Forward() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionCookies) string { return v.Forward }).(pulumi.StringOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	Required if you specify ``whitelist`` for the value of ``Forward``. A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward se
func (o DistributionCookiesOutput) WhitelistedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionCookies) []string { return v.WhitelistedNames }).(pulumi.StringArrayOutput)
}

type DistributionCookiesPtrOutput struct{ *pulumi.OutputState }

func (DistributionCookiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCookies)(nil)).Elem()
}

func (o DistributionCookiesPtrOutput) ToDistributionCookiesPtrOutput() DistributionCookiesPtrOutput {
	return o
}

func (o DistributionCookiesPtrOutput) ToDistributionCookiesPtrOutputWithContext(ctx context.Context) DistributionCookiesPtrOutput {
	return o
}

func (o DistributionCookiesPtrOutput) Elem() DistributionCookiesOutput {
	return o.ApplyT(func(v *DistributionCookies) DistributionCookies {
		if v != nil {
			return *v
		}
		var ret DistributionCookies
		return ret
	}).(DistributionCookiesOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send cookies to the origin but not include them in the cache key, use origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	Specifies which cookies to forward to the origin for this cache behavior: all, none, or the list of cookies specified in the ``WhitelistedNames`` complex type.
//	Amazon S3 doesn't process cookies. When the cache behavior is forw
func (o DistributionCookiesPtrOutput) Forward() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionCookies) *string {
		if v == nil {
			return nil
		}
		return &v.Forward
	}).(pulumi.StringPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	Required if you specify ``whitelist`` for the value of ``Forward``. A complex type that specifies how many different cookies you want CloudFront to forward to the origin for this cache behavior and, if you want to forward se
func (o DistributionCookiesPtrOutput) WhitelistedNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionCookies) []string {
		if v == nil {
			return nil
		}
		return v.WhitelistedNames
	}).(pulumi.StringArrayOutput)
}

// A complex type that controls:
//
//   - Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.
//
//   - How long CloudFront caches HTTP status codes in the 4xx and 5xx range.
//
//     For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
type DistributionCustomErrorResponse struct {
	// The minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ``ErrorCode``. When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.
	//  For more information, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
	ErrorCachingMinTtl *float64 `pulumi:"errorCachingMinTtl"`
	// The HTTP status code for which you want to specify a custom error page and/or a caching duration.
	ErrorCode int `pulumi:"errorCode"`
	// The HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:
	//   +  Some Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute ``200``, the response typically won't be intercepted.
	//   +  If you don't care about distinguishing among different client errors or server errors, you can specify ``400`` or ``500`` as the ``ResponseCode`` for all 4xx or 5xx errors.
	//   +  You might want to return a ``200`` status code (OK) and static website so your customers don't know that your website is down.
	//
	//  If you specify a value for ``ResponseCode``, you must also specify a value for ``ResponsePagePath``.
	ResponseCode *int `pulumi:"responseCode"`
	// The path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ``ErrorCode``, for example, ``/4xx-errors/403-forbidden.html``. If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:
	//   +  The value of ``PathPattern`` matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named ``/4xx-errors``. Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, ``/4xx-errors/*``.
	//   +  The value of ``TargetOriginId`` specifies the value of the ``ID`` element for the origin that contains your custom error pages.
	//
	//  If you specify a value for ``ResponsePagePath``, you must also specify a value for ``ResponseCode``.
	//  We recommend
	ResponsePagePath *string `pulumi:"responsePagePath"`
}

// DistributionCustomErrorResponseInput is an input type that accepts DistributionCustomErrorResponseArgs and DistributionCustomErrorResponseOutput values.
// You can construct a concrete instance of `DistributionCustomErrorResponseInput` via:
//
//	DistributionCustomErrorResponseArgs{...}
type DistributionCustomErrorResponseInput interface {
	pulumi.Input

	ToDistributionCustomErrorResponseOutput() DistributionCustomErrorResponseOutput
	ToDistributionCustomErrorResponseOutputWithContext(context.Context) DistributionCustomErrorResponseOutput
}

// A complex type that controls:
//
//   - Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.
//
//   - How long CloudFront caches HTTP status codes in the 4xx and 5xx range.
//
//     For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
type DistributionCustomErrorResponseArgs struct {
	// The minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in ``ErrorCode``. When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.
	//  For more information, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
	ErrorCachingMinTtl pulumi.Float64PtrInput `pulumi:"errorCachingMinTtl"`
	// The HTTP status code for which you want to specify a custom error page and/or a caching duration.
	ErrorCode pulumi.IntInput `pulumi:"errorCode"`
	// The HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:
	//   +  Some Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute ``200``, the response typically won't be intercepted.
	//   +  If you don't care about distinguishing among different client errors or server errors, you can specify ``400`` or ``500`` as the ``ResponseCode`` for all 4xx or 5xx errors.
	//   +  You might want to return a ``200`` status code (OK) and static website so your customers don't know that your website is down.
	//
	//  If you specify a value for ``ResponseCode``, you must also specify a value for ``ResponsePagePath``.
	ResponseCode pulumi.IntPtrInput `pulumi:"responseCode"`
	// The path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by ``ErrorCode``, for example, ``/4xx-errors/403-forbidden.html``. If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:
	//   +  The value of ``PathPattern`` matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named ``/4xx-errors``. Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, ``/4xx-errors/*``.
	//   +  The value of ``TargetOriginId`` specifies the value of the ``ID`` element for the origin that contains your custom error pages.
	//
	//  If you specify a value for ``ResponsePagePath``, you must also specify a value for ``ResponseCode``.
	//  We recommend
	ResponsePagePath pulumi.StringPtrInput `pulumi:"responsePagePath"`
}

func (DistributionCustomErrorResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCustomErrorResponse)(nil)).Elem()
}

func (i DistributionCustomErrorResponseArgs) ToDistributionCustomErrorResponseOutput() DistributionCustomErrorResponseOutput {
	return i.ToDistributionCustomErrorResponseOutputWithContext(context.Background())
}

func (i DistributionCustomErrorResponseArgs) ToDistributionCustomErrorResponseOutputWithContext(ctx context.Context) DistributionCustomErrorResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCustomErrorResponseOutput)
}

// DistributionCustomErrorResponseArrayInput is an input type that accepts DistributionCustomErrorResponseArray and DistributionCustomErrorResponseArrayOutput values.
// You can construct a concrete instance of `DistributionCustomErrorResponseArrayInput` via:
//
//	DistributionCustomErrorResponseArray{ DistributionCustomErrorResponseArgs{...} }
type DistributionCustomErrorResponseArrayInput interface {
	pulumi.Input

	ToDistributionCustomErrorResponseArrayOutput() DistributionCustomErrorResponseArrayOutput
	ToDistributionCustomErrorResponseArrayOutputWithContext(context.Context) DistributionCustomErrorResponseArrayOutput
}

type DistributionCustomErrorResponseArray []DistributionCustomErrorResponseInput

func (DistributionCustomErrorResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionCustomErrorResponse)(nil)).Elem()
}

func (i DistributionCustomErrorResponseArray) ToDistributionCustomErrorResponseArrayOutput() DistributionCustomErrorResponseArrayOutput {
	return i.ToDistributionCustomErrorResponseArrayOutputWithContext(context.Background())
}

func (i DistributionCustomErrorResponseArray) ToDistributionCustomErrorResponseArrayOutputWithContext(ctx context.Context) DistributionCustomErrorResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCustomErrorResponseArrayOutput)
}

// A complex type that controls:
//
//   - Whether CloudFront replaces HTTP status codes in the 4xx and 5xx range with custom error messages before returning the response to the viewer.
//
//   - How long CloudFront caches HTTP status codes in the 4xx and 5xx range.
//
//     For more information about custom error pages, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
type DistributionCustomErrorResponseOutput struct{ *pulumi.OutputState }

func (DistributionCustomErrorResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCustomErrorResponse)(nil)).Elem()
}

func (o DistributionCustomErrorResponseOutput) ToDistributionCustomErrorResponseOutput() DistributionCustomErrorResponseOutput {
	return o
}

func (o DistributionCustomErrorResponseOutput) ToDistributionCustomErrorResponseOutputWithContext(ctx context.Context) DistributionCustomErrorResponseOutput {
	return o
}

// The minimum amount of time, in seconds, that you want CloudFront to cache the HTTP status code specified in “ErrorCode“. When this time period has elapsed, CloudFront queries your origin to see whether the problem that caused the error has been resolved and the requested object is now available.
//
//	For more information, see [Customizing Error Responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCustomErrorResponseOutput) ErrorCachingMinTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DistributionCustomErrorResponse) *float64 { return v.ErrorCachingMinTtl }).(pulumi.Float64PtrOutput)
}

// The HTTP status code for which you want to specify a custom error page and/or a caching duration.
func (o DistributionCustomErrorResponseOutput) ErrorCode() pulumi.IntOutput {
	return o.ApplyT(func(v DistributionCustomErrorResponse) int { return v.ErrorCode }).(pulumi.IntOutput)
}

// The HTTP status code that you want CloudFront to return to the viewer along with the custom error page. There are a variety of reasons that you might want CloudFront to return a status code different from the status code that your origin returned to CloudFront, for example:
//
//   - Some Internet devices (some firewalls and corporate proxies, for example) intercept HTTP 4xx and 5xx and prevent the response from being returned to the viewer. If you substitute “200“, the response typically won't be intercepted.
//
//   - If you don't care about distinguishing among different client errors or server errors, you can specify “400“ or “500“ as the “ResponseCode“ for all 4xx or 5xx errors.
//
//   - You might want to return a “200“ status code (OK) and static website so your customers don't know that your website is down.
//
//     If you specify a value for “ResponseCode“, you must also specify a value for “ResponsePagePath“.
func (o DistributionCustomErrorResponseOutput) ResponseCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionCustomErrorResponse) *int { return v.ResponseCode }).(pulumi.IntPtrOutput)
}

// The path to the custom error page that you want CloudFront to return to a viewer when your origin returns the HTTP status code specified by “ErrorCode“, for example, “/4xx-errors/403-forbidden.html“. If you want to store your objects and your custom error pages in different locations, your distribution must include a cache behavior for which the following is true:
//
//   - The value of “PathPattern“ matches the path to your custom error messages. For example, suppose you saved custom error pages for 4xx errors in an Amazon S3 bucket in a directory named “/4xx-errors“. Your distribution must include a cache behavior for which the path pattern routes requests for your custom error pages to that location, for example, “/4xx-errors/*“.
//
//   - The value of “TargetOriginId“ specifies the value of the “ID“ element for the origin that contains your custom error pages.
//
//     If you specify a value for “ResponsePagePath“, you must also specify a value for “ResponseCode“.
//     We recommend
func (o DistributionCustomErrorResponseOutput) ResponsePagePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCustomErrorResponse) *string { return v.ResponsePagePath }).(pulumi.StringPtrOutput)
}

type DistributionCustomErrorResponseArrayOutput struct{ *pulumi.OutputState }

func (DistributionCustomErrorResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionCustomErrorResponse)(nil)).Elem()
}

func (o DistributionCustomErrorResponseArrayOutput) ToDistributionCustomErrorResponseArrayOutput() DistributionCustomErrorResponseArrayOutput {
	return o
}

func (o DistributionCustomErrorResponseArrayOutput) ToDistributionCustomErrorResponseArrayOutputWithContext(ctx context.Context) DistributionCustomErrorResponseArrayOutput {
	return o
}

func (o DistributionCustomErrorResponseArrayOutput) Index(i pulumi.IntInput) DistributionCustomErrorResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionCustomErrorResponse {
		return vs[0].([]DistributionCustomErrorResponse)[vs[1].(int)]
	}).(DistributionCustomErrorResponseOutput)
}

// A custom origin. A custom origin is any origin that is *not* an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is [configured with static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) *is* a custom origin.
type DistributionCustomOriginConfig struct {
	// The HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.
	HttpPort *int `pulumi:"httpPort"`
	// The HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.
	HttpsPort *int `pulumi:"httpsPort"`
	// Specifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don't specify otherwise) is 5 seconds.
	//  For more information, see [Origin Keep-alive Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginKeepaliveTimeout) in the *Amazon CloudFront Developer Guide*.
	OriginKeepaliveTimeout *int `pulumi:"originKeepaliveTimeout"`
	// Specifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:
	//   +   ``http-only`` – CloudFront always uses HTTP to connect to the origin.
	//   +   ``match-viewer`` – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.
	//   +   ``https-only`` – CloudFront always uses HTTPS to connect to the origin.
	OriginProtocolPolicy string `pulumi:"originProtocolPolicy"`
	// Specifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the *origin response timeout*. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don't specify otherwise) is 30 seconds.
	//  For more information, see [Origin Response Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout) in the *Amazon CloudFront Developer Guide*.
	OriginReadTimeout *int `pulumi:"originReadTimeout"`
	// Specifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include ``SSLv3``, ``TLSv1``, ``TLSv1.1``, and ``TLSv1.2``.
	//  For more information, see [Minimum Origin SSL Protocol](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginSSLProtocols) in the *Amazon CloudFront Developer Guide*.
	OriginSslProtocols []string `pulumi:"originSslProtocols"`
}

// DistributionCustomOriginConfigInput is an input type that accepts DistributionCustomOriginConfigArgs and DistributionCustomOriginConfigOutput values.
// You can construct a concrete instance of `DistributionCustomOriginConfigInput` via:
//
//	DistributionCustomOriginConfigArgs{...}
type DistributionCustomOriginConfigInput interface {
	pulumi.Input

	ToDistributionCustomOriginConfigOutput() DistributionCustomOriginConfigOutput
	ToDistributionCustomOriginConfigOutputWithContext(context.Context) DistributionCustomOriginConfigOutput
}

// A custom origin. A custom origin is any origin that is *not* an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is [configured with static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) *is* a custom origin.
type DistributionCustomOriginConfigArgs struct {
	// The HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// The HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.
	HttpsPort pulumi.IntPtrInput `pulumi:"httpsPort"`
	// Specifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don't specify otherwise) is 5 seconds.
	//  For more information, see [Origin Keep-alive Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginKeepaliveTimeout) in the *Amazon CloudFront Developer Guide*.
	OriginKeepaliveTimeout pulumi.IntPtrInput `pulumi:"originKeepaliveTimeout"`
	// Specifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:
	//   +   ``http-only`` – CloudFront always uses HTTP to connect to the origin.
	//   +   ``match-viewer`` – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.
	//   +   ``https-only`` – CloudFront always uses HTTPS to connect to the origin.
	OriginProtocolPolicy pulumi.StringInput `pulumi:"originProtocolPolicy"`
	// Specifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the *origin response timeout*. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don't specify otherwise) is 30 seconds.
	//  For more information, see [Origin Response Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout) in the *Amazon CloudFront Developer Guide*.
	OriginReadTimeout pulumi.IntPtrInput `pulumi:"originReadTimeout"`
	// Specifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include ``SSLv3``, ``TLSv1``, ``TLSv1.1``, and ``TLSv1.2``.
	//  For more information, see [Minimum Origin SSL Protocol](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginSSLProtocols) in the *Amazon CloudFront Developer Guide*.
	OriginSslProtocols pulumi.StringArrayInput `pulumi:"originSslProtocols"`
}

func (DistributionCustomOriginConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCustomOriginConfig)(nil)).Elem()
}

func (i DistributionCustomOriginConfigArgs) ToDistributionCustomOriginConfigOutput() DistributionCustomOriginConfigOutput {
	return i.ToDistributionCustomOriginConfigOutputWithContext(context.Background())
}

func (i DistributionCustomOriginConfigArgs) ToDistributionCustomOriginConfigOutputWithContext(ctx context.Context) DistributionCustomOriginConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCustomOriginConfigOutput)
}

func (i DistributionCustomOriginConfigArgs) ToDistributionCustomOriginConfigPtrOutput() DistributionCustomOriginConfigPtrOutput {
	return i.ToDistributionCustomOriginConfigPtrOutputWithContext(context.Background())
}

func (i DistributionCustomOriginConfigArgs) ToDistributionCustomOriginConfigPtrOutputWithContext(ctx context.Context) DistributionCustomOriginConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCustomOriginConfigOutput).ToDistributionCustomOriginConfigPtrOutputWithContext(ctx)
}

// DistributionCustomOriginConfigPtrInput is an input type that accepts DistributionCustomOriginConfigArgs, DistributionCustomOriginConfigPtr and DistributionCustomOriginConfigPtrOutput values.
// You can construct a concrete instance of `DistributionCustomOriginConfigPtrInput` via:
//
//	        DistributionCustomOriginConfigArgs{...}
//
//	or:
//
//	        nil
type DistributionCustomOriginConfigPtrInput interface {
	pulumi.Input

	ToDistributionCustomOriginConfigPtrOutput() DistributionCustomOriginConfigPtrOutput
	ToDistributionCustomOriginConfigPtrOutputWithContext(context.Context) DistributionCustomOriginConfigPtrOutput
}

type distributionCustomOriginConfigPtrType DistributionCustomOriginConfigArgs

func DistributionCustomOriginConfigPtr(v *DistributionCustomOriginConfigArgs) DistributionCustomOriginConfigPtrInput {
	return (*distributionCustomOriginConfigPtrType)(v)
}

func (*distributionCustomOriginConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCustomOriginConfig)(nil)).Elem()
}

func (i *distributionCustomOriginConfigPtrType) ToDistributionCustomOriginConfigPtrOutput() DistributionCustomOriginConfigPtrOutput {
	return i.ToDistributionCustomOriginConfigPtrOutputWithContext(context.Background())
}

func (i *distributionCustomOriginConfigPtrType) ToDistributionCustomOriginConfigPtrOutputWithContext(ctx context.Context) DistributionCustomOriginConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCustomOriginConfigPtrOutput)
}

// A custom origin. A custom origin is any origin that is *not* an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is [configured with static website hosting](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html) *is* a custom origin.
type DistributionCustomOriginConfigOutput struct{ *pulumi.OutputState }

func (DistributionCustomOriginConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCustomOriginConfig)(nil)).Elem()
}

func (o DistributionCustomOriginConfigOutput) ToDistributionCustomOriginConfigOutput() DistributionCustomOriginConfigOutput {
	return o
}

func (o DistributionCustomOriginConfigOutput) ToDistributionCustomOriginConfigOutputWithContext(ctx context.Context) DistributionCustomOriginConfigOutput {
	return o
}

func (o DistributionCustomOriginConfigOutput) ToDistributionCustomOriginConfigPtrOutput() DistributionCustomOriginConfigPtrOutput {
	return o.ToDistributionCustomOriginConfigPtrOutputWithContext(context.Background())
}

func (o DistributionCustomOriginConfigOutput) ToDistributionCustomOriginConfigPtrOutputWithContext(ctx context.Context) DistributionCustomOriginConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionCustomOriginConfig) *DistributionCustomOriginConfig {
		return &v
	}).(DistributionCustomOriginConfigPtrOutput)
}

// The HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.
func (o DistributionCustomOriginConfigOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionCustomOriginConfig) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// The HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.
func (o DistributionCustomOriginConfigOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionCustomOriginConfig) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

// Specifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don't specify otherwise) is 5 seconds.
//
//	For more information, see [Origin Keep-alive Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginKeepaliveTimeout) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCustomOriginConfigOutput) OriginKeepaliveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionCustomOriginConfig) *int { return v.OriginKeepaliveTimeout }).(pulumi.IntPtrOutput)
}

// Specifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:
//   - “http-only“ – CloudFront always uses HTTP to connect to the origin.
//   - “match-viewer“ – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.
//   - “https-only“ – CloudFront always uses HTTPS to connect to the origin.
func (o DistributionCustomOriginConfigOutput) OriginProtocolPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionCustomOriginConfig) string { return v.OriginProtocolPolicy }).(pulumi.StringOutput)
}

// Specifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the *origin response timeout*. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don't specify otherwise) is 30 seconds.
//
//	For more information, see [Origin Response Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCustomOriginConfigOutput) OriginReadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionCustomOriginConfig) *int { return v.OriginReadTimeout }).(pulumi.IntPtrOutput)
}

// Specifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include “SSLv3“, “TLSv1“, “TLSv1.1“, and “TLSv1.2“.
//
//	For more information, see [Minimum Origin SSL Protocol](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginSSLProtocols) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCustomOriginConfigOutput) OriginSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionCustomOriginConfig) []string { return v.OriginSslProtocols }).(pulumi.StringArrayOutput)
}

type DistributionCustomOriginConfigPtrOutput struct{ *pulumi.OutputState }

func (DistributionCustomOriginConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCustomOriginConfig)(nil)).Elem()
}

func (o DistributionCustomOriginConfigPtrOutput) ToDistributionCustomOriginConfigPtrOutput() DistributionCustomOriginConfigPtrOutput {
	return o
}

func (o DistributionCustomOriginConfigPtrOutput) ToDistributionCustomOriginConfigPtrOutputWithContext(ctx context.Context) DistributionCustomOriginConfigPtrOutput {
	return o
}

func (o DistributionCustomOriginConfigPtrOutput) Elem() DistributionCustomOriginConfigOutput {
	return o.ApplyT(func(v *DistributionCustomOriginConfig) DistributionCustomOriginConfig {
		if v != nil {
			return *v
		}
		var ret DistributionCustomOriginConfig
		return ret
	}).(DistributionCustomOriginConfigOutput)
}

// The HTTP port that CloudFront uses to connect to the origin. Specify the HTTP port that the origin listens on.
func (o DistributionCustomOriginConfigPtrOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionCustomOriginConfig) *int {
		if v == nil {
			return nil
		}
		return v.HttpPort
	}).(pulumi.IntPtrOutput)
}

// The HTTPS port that CloudFront uses to connect to the origin. Specify the HTTPS port that the origin listens on.
func (o DistributionCustomOriginConfigPtrOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionCustomOriginConfig) *int {
		if v == nil {
			return nil
		}
		return v.HttpsPort
	}).(pulumi.IntPtrOutput)
}

// Specifies how long, in seconds, CloudFront persists its connection to the origin. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don't specify otherwise) is 5 seconds.
//
//	For more information, see [Origin Keep-alive Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginKeepaliveTimeout) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCustomOriginConfigPtrOutput) OriginKeepaliveTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionCustomOriginConfig) *int {
		if v == nil {
			return nil
		}
		return v.OriginKeepaliveTimeout
	}).(pulumi.IntPtrOutput)
}

// Specifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. Valid values are:
//   - “http-only“ – CloudFront always uses HTTP to connect to the origin.
//   - “match-viewer“ – CloudFront connects to the origin using the same protocol that the viewer used to connect to CloudFront.
//   - “https-only“ – CloudFront always uses HTTPS to connect to the origin.
func (o DistributionCustomOriginConfigPtrOutput) OriginProtocolPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionCustomOriginConfig) *string {
		if v == nil {
			return nil
		}
		return &v.OriginProtocolPolicy
	}).(pulumi.StringPtrOutput)
}

// Specifies how long, in seconds, CloudFront waits for a response from the origin. This is also known as the *origin response timeout*. The minimum timeout is 1 second, the maximum is 60 seconds, and the default (if you don't specify otherwise) is 30 seconds.
//
//	For more information, see [Origin Response Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCustomOriginConfigPtrOutput) OriginReadTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionCustomOriginConfig) *int {
		if v == nil {
			return nil
		}
		return v.OriginReadTimeout
	}).(pulumi.IntPtrOutput)
}

// Specifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. Valid values include “SSLv3“, “TLSv1“, “TLSv1.1“, and “TLSv1.2“.
//
//	For more information, see [Minimum Origin SSL Protocol](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginSSLProtocols) in the *Amazon CloudFront Developer Guide*.
func (o DistributionCustomOriginConfigPtrOutput) OriginSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionCustomOriginConfig) []string {
		if v == nil {
			return nil
		}
		return v.OriginSslProtocols
	}).(pulumi.StringArrayOutput)
}

// A complex type that describes the default cache behavior if you don't specify a “CacheBehavior“ element or if request URLs don't match any of the values of “PathPattern“ in “CacheBehavior“ elements. You must create exactly one default cache behavior.
type DistributionDefaultCacheBehavior struct {
	// A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:
	//   +  CloudFront forwards only ``GET`` and ``HEAD`` requests.
	//   +  CloudFront forwards only ``GET``, ``HEAD``, and ``OPTIONS`` requests.
	//   +  CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST``, and ``DELETE`` requests.
	//
	//  If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// The unique identifier of the cache policy that is attached to the default cache behavior. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  A ``DefaultCacheBehavior`` must include either a ``CachePolicyId`` or ``ForwardedValues``. We recommend that you use a ``CachePolicyId``.
	CachePolicyId *string `pulumi:"cachePolicyId"`
	// A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:
	//   +  CloudFront caches responses to ``GET`` and ``HEAD`` requests.
	//   +  CloudFront caches responses to ``GET``, ``HEAD``, and ``OPTIONS`` requests.
	//
	//  If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.
	CachedMethods []string `pulumi:"cachedMethods"`
	// Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify ``true``; if not, specify ``false``. For more information, see [Serving Compressed Files](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html) in the *Amazon CloudFront Developer Guide*.
	Compress *bool `pulumi:"compress"`
	// This field is deprecated. We recommend that you use the ``DefaultTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide
	DefaultTtl *float64 `pulumi:"defaultTtl"`
	// The value of ``ID`` for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.
	FieldLevelEncryptionId *string `pulumi:"fieldLevelEncryptionId"`
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see [Working with policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-r
	ForwardedValues *DistributionForwardedValues `pulumi:"forwardedValues"`
	// A list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the ``LIVE`` stage to associate them with a cache behavior.
	FunctionAssociations []DistributionFunctionAssociation `pulumi:"functionAssociations"`
	// A complex type that contains zero or more Lambda@Edge function associations for a cache behavior.
	LambdaFunctionAssociations []DistributionLambdaFunctionAssociation `pulumi:"lambdaFunctionAssociations"`
	// This field is deprecated. We recommend that you use the ``MaxTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  The maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.
	MaxTtl *float64 `pulumi:"maxTtl"`
	// This field is deprecated. We recommend that you use the ``MinTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
	//  You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all headers to your origin (under ``He
	MinTtl *float64 `pulumi:"minTtl"`
	// The unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide*.
	OriginRequestPolicyId *string `pulumi:"originRequestPolicyId"`
	// The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see [Real-time logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html) in the *Amazon CloudFront Developer Guide*.
	RealtimeLogConfigArn *string `pulumi:"realtimeLogConfigArn"`
	// The identifier for a response headers policy.
	ResponseHeadersPolicyId *string `pulumi:"responseHeadersPolicyId"`
	// Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify ``true``; if not, specify ``false``. If you specify ``true`` for ``SmoothStreaming``, you can still distribute other content using this cache behavior if the content matches the value of ``PathPattern``.
	SmoothStreaming *bool `pulumi:"smoothStreaming"`
	// The value of ``ID`` for the origin that you want CloudFront to route requests to when they use the default cache behavior.
	TargetOriginId string `pulumi:"targetOriginId"`
	// A list of key groups that CloudFront can use to validate signed URLs or signed cookies.
	//  When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
	TrustedKeyGroups []string `pulumi:"trustedKeyGroups"`
	// We recommend using ``TrustedKeyGroups`` instead of ``TrustedSigners``.
	//   A list of AWS-account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.
	//  When a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer's AWS-account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
	TrustedSigners []string `pulumi:"trustedSigners"`
	// The protocol that viewers can use to access the files in the origin specified by ``TargetOriginId`` when a request matches the path pattern in ``PathPattern``. You can specify the following options:
	//   +   ``allow-all``: Viewers can use HTTP or HTTPS.
	//   +   ``redirect-to-https``: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.
	//   +   ``https-only``: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).
	//
	//  For more information about requiring the HTTPS protocol, see [Requiring HTTPS Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html) in the *Amazon CloudFront Developer Guide*.
	//   The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol
	ViewerProtocolPolicy string `pulumi:"viewerProtocolPolicy"`
}

// DistributionDefaultCacheBehaviorInput is an input type that accepts DistributionDefaultCacheBehaviorArgs and DistributionDefaultCacheBehaviorOutput values.
// You can construct a concrete instance of `DistributionDefaultCacheBehaviorInput` via:
//
//	DistributionDefaultCacheBehaviorArgs{...}
type DistributionDefaultCacheBehaviorInput interface {
	pulumi.Input

	ToDistributionDefaultCacheBehaviorOutput() DistributionDefaultCacheBehaviorOutput
	ToDistributionDefaultCacheBehaviorOutputWithContext(context.Context) DistributionDefaultCacheBehaviorOutput
}

// A complex type that describes the default cache behavior if you don't specify a “CacheBehavior“ element or if request URLs don't match any of the values of “PathPattern“ in “CacheBehavior“ elements. You must create exactly one default cache behavior.
type DistributionDefaultCacheBehaviorArgs struct {
	// A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:
	//   +  CloudFront forwards only ``GET`` and ``HEAD`` requests.
	//   +  CloudFront forwards only ``GET``, ``HEAD``, and ``OPTIONS`` requests.
	//   +  CloudFront forwards ``GET, HEAD, OPTIONS, PUT, PATCH, POST``, and ``DELETE`` requests.
	//
	//  If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// The unique identifier of the cache policy that is attached to the default cache behavior. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  A ``DefaultCacheBehavior`` must include either a ``CachePolicyId`` or ``ForwardedValues``. We recommend that you use a ``CachePolicyId``.
	CachePolicyId pulumi.StringPtrInput `pulumi:"cachePolicyId"`
	// A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:
	//   +  CloudFront caches responses to ``GET`` and ``HEAD`` requests.
	//   +  CloudFront caches responses to ``GET``, ``HEAD``, and ``OPTIONS`` requests.
	//
	//  If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.
	CachedMethods pulumi.StringArrayInput `pulumi:"cachedMethods"`
	// Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify ``true``; if not, specify ``false``. For more information, see [Serving Compressed Files](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html) in the *Amazon CloudFront Developer Guide*.
	Compress pulumi.BoolPtrInput `pulumi:"compress"`
	// This field is deprecated. We recommend that you use the ``DefaultTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide
	DefaultTtl pulumi.Float64PtrInput `pulumi:"defaultTtl"`
	// The value of ``ID`` for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.
	FieldLevelEncryptionId pulumi.StringPtrInput `pulumi:"fieldLevelEncryptionId"`
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see [Working with policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-r
	ForwardedValues DistributionForwardedValuesPtrInput `pulumi:"forwardedValues"`
	// A list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the ``LIVE`` stage to associate them with a cache behavior.
	FunctionAssociations DistributionFunctionAssociationArrayInput `pulumi:"functionAssociations"`
	// A complex type that contains zero or more Lambda@Edge function associations for a cache behavior.
	LambdaFunctionAssociations DistributionLambdaFunctionAssociationArrayInput `pulumi:"lambdaFunctionAssociations"`
	// This field is deprecated. We recommend that you use the ``MaxTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  The maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.
	MaxTtl pulumi.Float64PtrInput `pulumi:"maxTtl"`
	// This field is deprecated. We recommend that you use the ``MinTTL`` field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
	//  The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
	//  You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all headers to your origin (under ``He
	MinTtl pulumi.Float64PtrInput `pulumi:"minTtl"`
	// The unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide*.
	OriginRequestPolicyId pulumi.StringPtrInput `pulumi:"originRequestPolicyId"`
	// The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see [Real-time logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html) in the *Amazon CloudFront Developer Guide*.
	RealtimeLogConfigArn pulumi.StringPtrInput `pulumi:"realtimeLogConfigArn"`
	// The identifier for a response headers policy.
	ResponseHeadersPolicyId pulumi.StringPtrInput `pulumi:"responseHeadersPolicyId"`
	// Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify ``true``; if not, specify ``false``. If you specify ``true`` for ``SmoothStreaming``, you can still distribute other content using this cache behavior if the content matches the value of ``PathPattern``.
	SmoothStreaming pulumi.BoolPtrInput `pulumi:"smoothStreaming"`
	// The value of ``ID`` for the origin that you want CloudFront to route requests to when they use the default cache behavior.
	TargetOriginId pulumi.StringInput `pulumi:"targetOriginId"`
	// A list of key groups that CloudFront can use to validate signed URLs or signed cookies.
	//  When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
	TrustedKeyGroups pulumi.StringArrayInput `pulumi:"trustedKeyGroups"`
	// We recommend using ``TrustedKeyGroups`` instead of ``TrustedSigners``.
	//   A list of AWS-account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.
	//  When a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer's AWS-account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
	TrustedSigners pulumi.StringArrayInput `pulumi:"trustedSigners"`
	// The protocol that viewers can use to access the files in the origin specified by ``TargetOriginId`` when a request matches the path pattern in ``PathPattern``. You can specify the following options:
	//   +   ``allow-all``: Viewers can use HTTP or HTTPS.
	//   +   ``redirect-to-https``: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.
	//   +   ``https-only``: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).
	//
	//  For more information about requiring the HTTPS protocol, see [Requiring HTTPS Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html) in the *Amazon CloudFront Developer Guide*.
	//   The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol
	ViewerProtocolPolicy pulumi.StringInput `pulumi:"viewerProtocolPolicy"`
}

func (DistributionDefaultCacheBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehavior)(nil)).Elem()
}

func (i DistributionDefaultCacheBehaviorArgs) ToDistributionDefaultCacheBehaviorOutput() DistributionDefaultCacheBehaviorOutput {
	return i.ToDistributionDefaultCacheBehaviorOutputWithContext(context.Background())
}

func (i DistributionDefaultCacheBehaviorArgs) ToDistributionDefaultCacheBehaviorOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionDefaultCacheBehaviorOutput)
}

// A complex type that describes the default cache behavior if you don't specify a “CacheBehavior“ element or if request URLs don't match any of the values of “PathPattern“ in “CacheBehavior“ elements. You must create exactly one default cache behavior.
type DistributionDefaultCacheBehaviorOutput struct{ *pulumi.OutputState }

func (DistributionDefaultCacheBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehavior)(nil)).Elem()
}

func (o DistributionDefaultCacheBehaviorOutput) ToDistributionDefaultCacheBehaviorOutput() DistributionDefaultCacheBehaviorOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorOutput) ToDistributionDefaultCacheBehaviorOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorOutput {
	return o
}

// A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:
//
//   - CloudFront forwards only “GET“ and “HEAD“ requests.
//
//   - CloudFront forwards only “GET“, “HEAD“, and “OPTIONS“ requests.
//
//   - CloudFront forwards “GET, HEAD, OPTIONS, PUT, PATCH, POST“, and “DELETE“ requests.
//
//     If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.
func (o DistributionDefaultCacheBehaviorOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// The unique identifier of the cache policy that is attached to the default cache behavior. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	A ``DefaultCacheBehavior`` must include either a ``CachePolicyId`` or ``ForwardedValues``. We recommend that you use a ``CachePolicyId``.
func (o DistributionDefaultCacheBehaviorOutput) CachePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) *string { return v.CachePolicyId }).(pulumi.StringPtrOutput)
}

// A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:
//
//   - CloudFront caches responses to “GET“ and “HEAD“ requests.
//
//   - CloudFront caches responses to “GET“, “HEAD“, and “OPTIONS“ requests.
//
//     If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.
func (o DistributionDefaultCacheBehaviorOutput) CachedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) []string { return v.CachedMethods }).(pulumi.StringArrayOutput)
}

// Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify “true“; if not, specify “false“. For more information, see [Serving Compressed Files](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionDefaultCacheBehaviorOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) *bool { return v.Compress }).(pulumi.BoolPtrOutput)
}

// This field is deprecated. We recommend that you use the “DefaultTTL“ field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide
func (o DistributionDefaultCacheBehaviorOutput) DefaultTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) *float64 { return v.DefaultTtl }).(pulumi.Float64PtrOutput)
}

// The value of “ID“ for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.
func (o DistributionDefaultCacheBehaviorOutput) FieldLevelEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) *string { return v.FieldLevelEncryptionId }).(pulumi.StringPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see [Working with policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//	If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-r
func (o DistributionDefaultCacheBehaviorOutput) ForwardedValues() DistributionForwardedValuesPtrOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) *DistributionForwardedValues { return v.ForwardedValues }).(DistributionForwardedValuesPtrOutput)
}

// A list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the “LIVE“ stage to associate them with a cache behavior.
func (o DistributionDefaultCacheBehaviorOutput) FunctionAssociations() DistributionFunctionAssociationArrayOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) []DistributionFunctionAssociation {
		return v.FunctionAssociations
	}).(DistributionFunctionAssociationArrayOutput)
}

// A complex type that contains zero or more Lambda@Edge function associations for a cache behavior.
func (o DistributionDefaultCacheBehaviorOutput) LambdaFunctionAssociations() DistributionLambdaFunctionAssociationArrayOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) []DistributionLambdaFunctionAssociation {
		return v.LambdaFunctionAssociations
	}).(DistributionLambdaFunctionAssociationArrayOutput)
}

// This field is deprecated. We recommend that you use the “MaxTTL“ field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	The maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.
func (o DistributionDefaultCacheBehaviorOutput) MaxTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) *float64 { return v.MaxTtl }).(pulumi.Float64PtrOutput)
}

// This field is deprecated. We recommend that you use the “MinTTL“ field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
//	You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all headers to your origin (under ``He
func (o DistributionDefaultCacheBehaviorOutput) MinTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) *float64 { return v.MinTtl }).(pulumi.Float64PtrOutput)
}

// The unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionDefaultCacheBehaviorOutput) OriginRequestPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) *string { return v.OriginRequestPolicyId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see [Real-time logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionDefaultCacheBehaviorOutput) RealtimeLogConfigArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) *string { return v.RealtimeLogConfigArn }).(pulumi.StringPtrOutput)
}

// The identifier for a response headers policy.
func (o DistributionDefaultCacheBehaviorOutput) ResponseHeadersPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) *string { return v.ResponseHeadersPolicyId }).(pulumi.StringPtrOutput)
}

// Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify “true“; if not, specify “false“. If you specify “true“ for “SmoothStreaming“, you can still distribute other content using this cache behavior if the content matches the value of “PathPattern“.
func (o DistributionDefaultCacheBehaviorOutput) SmoothStreaming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) *bool { return v.SmoothStreaming }).(pulumi.BoolPtrOutput)
}

// The value of “ID“ for the origin that you want CloudFront to route requests to when they use the default cache behavior.
func (o DistributionDefaultCacheBehaviorOutput) TargetOriginId() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) string { return v.TargetOriginId }).(pulumi.StringOutput)
}

// A list of key groups that CloudFront can use to validate signed URLs or signed cookies.
//
//	When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionDefaultCacheBehaviorOutput) TrustedKeyGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) []string { return v.TrustedKeyGroups }).(pulumi.StringArrayOutput)
}

// We recommend using “TrustedKeyGroups“ instead of “TrustedSigners“.
//
//	 A list of AWS-account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.
//	When a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer's AWS-account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionDefaultCacheBehaviorOutput) TrustedSigners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) []string { return v.TrustedSigners }).(pulumi.StringArrayOutput)
}

// The protocol that viewers can use to access the files in the origin specified by “TargetOriginId“ when a request matches the path pattern in “PathPattern“. You can specify the following options:
//
//   - “allow-all“: Viewers can use HTTP or HTTPS.
//
//   - “redirect-to-https“: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.
//
//   - “https-only“: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).
//
//     For more information about requiring the HTTPS protocol, see [Requiring HTTPS Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html) in the *Amazon CloudFront Developer Guide*.
//     The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol
func (o DistributionDefaultCacheBehaviorOutput) ViewerProtocolPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) string { return v.ViewerProtocolPolicy }).(pulumi.StringOutput)
}

type DistributionDefaultCacheBehaviorPtrOutput struct{ *pulumi.OutputState }

func (DistributionDefaultCacheBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionDefaultCacheBehavior)(nil)).Elem()
}

func (o DistributionDefaultCacheBehaviorPtrOutput) ToDistributionDefaultCacheBehaviorPtrOutput() DistributionDefaultCacheBehaviorPtrOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorPtrOutput) ToDistributionDefaultCacheBehaviorPtrOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorPtrOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorPtrOutput) Elem() DistributionDefaultCacheBehaviorOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) DistributionDefaultCacheBehavior {
		if v != nil {
			return *v
		}
		var ret DistributionDefaultCacheBehavior
		return ret
	}).(DistributionDefaultCacheBehaviorOutput)
}

// A complex type that controls which HTTP methods CloudFront processes and forwards to your Amazon S3 bucket or your custom origin. There are three choices:
//
//   - CloudFront forwards only “GET“ and “HEAD“ requests.
//
//   - CloudFront forwards only “GET“, “HEAD“, and “OPTIONS“ requests.
//
//   - CloudFront forwards “GET, HEAD, OPTIONS, PUT, PATCH, POST“, and “DELETE“ requests.
//
//     If you pick the third choice, you may need to restrict access to your Amazon S3 bucket or to your custom origin so users can't perform operations that you don't want them to. For example, you might not want users to have permissions to delete objects from your origin.
func (o DistributionDefaultCacheBehaviorPtrOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) []string {
		if v == nil {
			return nil
		}
		return v.AllowedMethods
	}).(pulumi.StringArrayOutput)
}

// The unique identifier of the cache policy that is attached to the default cache behavior. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	A ``DefaultCacheBehavior`` must include either a ``CachePolicyId`` or ``ForwardedValues``. We recommend that you use a ``CachePolicyId``.
func (o DistributionDefaultCacheBehaviorPtrOutput) CachePolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *string {
		if v == nil {
			return nil
		}
		return v.CachePolicyId
	}).(pulumi.StringPtrOutput)
}

// A complex type that controls whether CloudFront caches the response to requests using the specified HTTP methods. There are two choices:
//
//   - CloudFront caches responses to “GET“ and “HEAD“ requests.
//
//   - CloudFront caches responses to “GET“, “HEAD“, and “OPTIONS“ requests.
//
//     If you pick the second choice for your Amazon S3 Origin, you may need to forward Access-Control-Request-Method, Access-Control-Request-Headers, and Origin headers for the responses to be cached correctly.
func (o DistributionDefaultCacheBehaviorPtrOutput) CachedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) []string {
		if v == nil {
			return nil
		}
		return v.CachedMethods
	}).(pulumi.StringArrayOutput)
}

// Whether you want CloudFront to automatically compress certain files for this cache behavior. If so, specify “true“; if not, specify “false“. For more information, see [Serving Compressed Files](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/ServingCompressedFiles.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionDefaultCacheBehaviorPtrOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *bool {
		if v == nil {
			return nil
		}
		return v.Compress
	}).(pulumi.BoolPtrOutput)
}

// This field is deprecated. We recommend that you use the “DefaultTTL“ field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	The default amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin does not add HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide
func (o DistributionDefaultCacheBehaviorPtrOutput) DefaultTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *float64 {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.Float64PtrOutput)
}

// The value of “ID“ for the field-level encryption configuration that you want CloudFront to use for encrypting specific fields of data for the default cache behavior.
func (o DistributionDefaultCacheBehaviorPtrOutput) FieldLevelEncryptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *string {
		if v == nil {
			return nil
		}
		return v.FieldLevelEncryptionId
	}).(pulumi.StringPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field. For more information, see [Working with policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/working-with-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//	If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-r
func (o DistributionDefaultCacheBehaviorPtrOutput) ForwardedValues() DistributionForwardedValuesPtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *DistributionForwardedValues {
		if v == nil {
			return nil
		}
		return v.ForwardedValues
	}).(DistributionForwardedValuesPtrOutput)
}

// A list of CloudFront functions that are associated with this cache behavior. CloudFront functions must be published to the “LIVE“ stage to associate them with a cache behavior.
func (o DistributionDefaultCacheBehaviorPtrOutput) FunctionAssociations() DistributionFunctionAssociationArrayOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) []DistributionFunctionAssociation {
		if v == nil {
			return nil
		}
		return v.FunctionAssociations
	}).(DistributionFunctionAssociationArrayOutput)
}

// A complex type that contains zero or more Lambda@Edge function associations for a cache behavior.
func (o DistributionDefaultCacheBehaviorPtrOutput) LambdaFunctionAssociations() DistributionLambdaFunctionAssociationArrayOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) []DistributionLambdaFunctionAssociation {
		if v == nil {
			return nil
		}
		return v.LambdaFunctionAssociations
	}).(DistributionLambdaFunctionAssociationArrayOutput)
}

// This field is deprecated. We recommend that you use the “MaxTTL“ field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	The maximum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. The value that you specify applies only when your origin adds HTTP headers such as ``Cache-Control max-age``, ``Cache-Control s-maxage``, and ``Expires`` to objects. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.
func (o DistributionDefaultCacheBehaviorPtrOutput) MaxTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxTtl
	}).(pulumi.Float64PtrOutput)
}

// This field is deprecated. We recommend that you use the “MinTTL“ field in a cache policy instead of this field. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) or [Using the managed cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html) in the *Amazon CloudFront Developer Guide*.
//
//	The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront forwards another request to your origin to determine whether the object has been updated. For more information, see [Managing How Long Content Stays in an Edge Cache (Expiration)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/Expiration.html) in the *Amazon CloudFront Developer Guide*.
//	You must specify ``0`` for ``MinTTL`` if you configure CloudFront to forward all headers to your origin (under ``He
func (o DistributionDefaultCacheBehaviorPtrOutput) MinTtl() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *float64 {
		if v == nil {
			return nil
		}
		return v.MinTtl
	}).(pulumi.Float64PtrOutput)
}

// The unique identifier of the origin request policy that is attached to the default cache behavior. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) or [Using the managed origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-origin-request-policies.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionDefaultCacheBehaviorPtrOutput) OriginRequestPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *string {
		if v == nil {
			return nil
		}
		return v.OriginRequestPolicyId
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the real-time log configuration that is attached to this cache behavior. For more information, see [Real-time logs](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionDefaultCacheBehaviorPtrOutput) RealtimeLogConfigArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *string {
		if v == nil {
			return nil
		}
		return v.RealtimeLogConfigArn
	}).(pulumi.StringPtrOutput)
}

// The identifier for a response headers policy.
func (o DistributionDefaultCacheBehaviorPtrOutput) ResponseHeadersPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *string {
		if v == nil {
			return nil
		}
		return v.ResponseHeadersPolicyId
	}).(pulumi.StringPtrOutput)
}

// Indicates whether you want to distribute media files in the Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify “true“; if not, specify “false“. If you specify “true“ for “SmoothStreaming“, you can still distribute other content using this cache behavior if the content matches the value of “PathPattern“.
func (o DistributionDefaultCacheBehaviorPtrOutput) SmoothStreaming() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *bool {
		if v == nil {
			return nil
		}
		return v.SmoothStreaming
	}).(pulumi.BoolPtrOutput)
}

// The value of “ID“ for the origin that you want CloudFront to route requests to when they use the default cache behavior.
func (o DistributionDefaultCacheBehaviorPtrOutput) TargetOriginId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *string {
		if v == nil {
			return nil
		}
		return &v.TargetOriginId
	}).(pulumi.StringPtrOutput)
}

// A list of key groups that CloudFront can use to validate signed URLs or signed cookies.
//
//	When a cache behavior contains trusted key groups, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with a private key whose corresponding public key is in the key group. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionDefaultCacheBehaviorPtrOutput) TrustedKeyGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) []string {
		if v == nil {
			return nil
		}
		return v.TrustedKeyGroups
	}).(pulumi.StringArrayOutput)
}

// We recommend using “TrustedKeyGroups“ instead of “TrustedSigners“.
//
//	 A list of AWS-account IDs whose public keys CloudFront can use to validate signed URLs or signed cookies.
//	When a cache behavior contains trusted signers, CloudFront requires signed URLs or signed cookies for all requests that match the cache behavior. The URLs or cookies must be signed with the private key of a CloudFront key pair in a trusted signer's AWS-account. The signed URL or cookie contains information about which public key CloudFront should use to verify the signature. For more information, see [Serving private content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/PrivateContent.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionDefaultCacheBehaviorPtrOutput) TrustedSigners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) []string {
		if v == nil {
			return nil
		}
		return v.TrustedSigners
	}).(pulumi.StringArrayOutput)
}

// The protocol that viewers can use to access the files in the origin specified by “TargetOriginId“ when a request matches the path pattern in “PathPattern“. You can specify the following options:
//
//   - “allow-all“: Viewers can use HTTP or HTTPS.
//
//   - “redirect-to-https“: If a viewer submits an HTTP request, CloudFront returns an HTTP status code of 301 (Moved Permanently) to the viewer along with the HTTPS URL. The viewer then resubmits the request using the new URL.
//
//   - “https-only“: If a viewer sends an HTTP request, CloudFront returns an HTTP status code of 403 (Forbidden).
//
//     For more information about requiring the HTTPS protocol, see [Requiring HTTPS Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html) in the *Amazon CloudFront Developer Guide*.
//     The only way to guarantee that viewers retrieve an object that was fetched from the origin using HTTPS is never to use any other protocol
func (o DistributionDefaultCacheBehaviorPtrOutput) ViewerProtocolPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *string {
		if v == nil {
			return nil
		}
		return &v.ViewerProtocolPolicy
	}).(pulumi.StringPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.
type DistributionForwardedValues struct {
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
	//  If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
	//  A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront Forwards, Caches, and Logs C
	Cookies *DistributionCookies `pulumi:"cookies"`
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
	//  If you want to include headers in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
	//  A complex type that specifies the ``Headers``, if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versio
	Headers []string `pulumi:"headers"`
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
	//  If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
	//  Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of
	QueryString bool `pulumi:"queryString"`
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
	//  If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
	//  A complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.
	QueryStringCacheKeys []string `pulumi:"queryStringCacheKeys"`
}

// DistributionForwardedValuesInput is an input type that accepts DistributionForwardedValuesArgs and DistributionForwardedValuesOutput values.
// You can construct a concrete instance of `DistributionForwardedValuesInput` via:
//
//	DistributionForwardedValuesArgs{...}
type DistributionForwardedValuesInput interface {
	pulumi.Input

	ToDistributionForwardedValuesOutput() DistributionForwardedValuesOutput
	ToDistributionForwardedValuesOutputWithContext(context.Context) DistributionForwardedValuesOutput
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.
type DistributionForwardedValuesArgs struct {
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
	//  If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
	//  A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront Forwards, Caches, and Logs C
	Cookies DistributionCookiesPtrInput `pulumi:"cookies"`
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
	//  If you want to include headers in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
	//  A complex type that specifies the ``Headers``, if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versio
	Headers pulumi.StringArrayInput `pulumi:"headers"`
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
	//  If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
	//  Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of
	QueryString pulumi.BoolInput `pulumi:"queryString"`
	// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
	//  If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
	//  If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
	//  A complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.
	QueryStringCacheKeys pulumi.StringArrayInput `pulumi:"queryStringCacheKeys"`
}

func (DistributionForwardedValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionForwardedValues)(nil)).Elem()
}

func (i DistributionForwardedValuesArgs) ToDistributionForwardedValuesOutput() DistributionForwardedValuesOutput {
	return i.ToDistributionForwardedValuesOutputWithContext(context.Background())
}

func (i DistributionForwardedValuesArgs) ToDistributionForwardedValuesOutputWithContext(ctx context.Context) DistributionForwardedValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionForwardedValuesOutput)
}

func (i DistributionForwardedValuesArgs) ToDistributionForwardedValuesPtrOutput() DistributionForwardedValuesPtrOutput {
	return i.ToDistributionForwardedValuesPtrOutputWithContext(context.Background())
}

func (i DistributionForwardedValuesArgs) ToDistributionForwardedValuesPtrOutputWithContext(ctx context.Context) DistributionForwardedValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionForwardedValuesOutput).ToDistributionForwardedValuesPtrOutputWithContext(ctx)
}

// DistributionForwardedValuesPtrInput is an input type that accepts DistributionForwardedValuesArgs, DistributionForwardedValuesPtr and DistributionForwardedValuesPtrOutput values.
// You can construct a concrete instance of `DistributionForwardedValuesPtrInput` via:
//
//	        DistributionForwardedValuesArgs{...}
//
//	or:
//
//	        nil
type DistributionForwardedValuesPtrInput interface {
	pulumi.Input

	ToDistributionForwardedValuesPtrOutput() DistributionForwardedValuesPtrOutput
	ToDistributionForwardedValuesPtrOutputWithContext(context.Context) DistributionForwardedValuesPtrOutput
}

type distributionForwardedValuesPtrType DistributionForwardedValuesArgs

func DistributionForwardedValuesPtr(v *DistributionForwardedValuesArgs) DistributionForwardedValuesPtrInput {
	return (*distributionForwardedValuesPtrType)(v)
}

func (*distributionForwardedValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionForwardedValues)(nil)).Elem()
}

func (i *distributionForwardedValuesPtrType) ToDistributionForwardedValuesPtrOutput() DistributionForwardedValuesPtrOutput {
	return i.ToDistributionForwardedValuesPtrOutputWithContext(context.Background())
}

func (i *distributionForwardedValuesPtrType) ToDistributionForwardedValuesPtrOutputWithContext(ctx context.Context) DistributionForwardedValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionForwardedValuesPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include values in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send values to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	A complex type that specifies how CloudFront handles query strings, cookies, and HTTP headers.
type DistributionForwardedValuesOutput struct{ *pulumi.OutputState }

func (DistributionForwardedValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionForwardedValues)(nil)).Elem()
}

func (o DistributionForwardedValuesOutput) ToDistributionForwardedValuesOutput() DistributionForwardedValuesOutput {
	return o
}

func (o DistributionForwardedValuesOutput) ToDistributionForwardedValuesOutputWithContext(ctx context.Context) DistributionForwardedValuesOutput {
	return o
}

func (o DistributionForwardedValuesOutput) ToDistributionForwardedValuesPtrOutput() DistributionForwardedValuesPtrOutput {
	return o.ToDistributionForwardedValuesPtrOutputWithContext(context.Background())
}

func (o DistributionForwardedValuesOutput) ToDistributionForwardedValuesPtrOutputWithContext(ctx context.Context) DistributionForwardedValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionForwardedValues) *DistributionForwardedValues {
		return &v
	}).(DistributionForwardedValuesPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront Forwards, Caches, and Logs C
func (o DistributionForwardedValuesOutput) Cookies() DistributionCookiesPtrOutput {
	return o.ApplyT(func(v DistributionForwardedValues) *DistributionCookies { return v.Cookies }).(DistributionCookiesPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include headers in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	A complex type that specifies the ``Headers``, if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versio
func (o DistributionForwardedValuesOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionForwardedValues) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of
func (o DistributionForwardedValuesOutput) QueryString() pulumi.BoolOutput {
	return o.ApplyT(func(v DistributionForwardedValues) bool { return v.QueryString }).(pulumi.BoolOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	A complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.
func (o DistributionForwardedValuesOutput) QueryStringCacheKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionForwardedValues) []string { return v.QueryStringCacheKeys }).(pulumi.StringArrayOutput)
}

type DistributionForwardedValuesPtrOutput struct{ *pulumi.OutputState }

func (DistributionForwardedValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionForwardedValues)(nil)).Elem()
}

func (o DistributionForwardedValuesPtrOutput) ToDistributionForwardedValuesPtrOutput() DistributionForwardedValuesPtrOutput {
	return o
}

func (o DistributionForwardedValuesPtrOutput) ToDistributionForwardedValuesPtrOutputWithContext(ctx context.Context) DistributionForwardedValuesPtrOutput {
	return o
}

func (o DistributionForwardedValuesPtrOutput) Elem() DistributionForwardedValuesOutput {
	return o.ApplyT(func(v *DistributionForwardedValues) DistributionForwardedValues {
		if v != nil {
			return *v
		}
		var ret DistributionForwardedValues
		return ret
	}).(DistributionForwardedValuesOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include cookies in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send cookies to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	A complex type that specifies whether you want CloudFront to forward cookies to the origin and, if so, which ones. For more information about forwarding cookies to the origin, see [How CloudFront Forwards, Caches, and Logs C
func (o DistributionForwardedValuesPtrOutput) Cookies() DistributionCookiesPtrOutput {
	return o.ApplyT(func(v *DistributionForwardedValues) *DistributionCookies {
		if v == nil {
			return nil
		}
		return v.Cookies
	}).(DistributionCookiesPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include headers in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send headers to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	A complex type that specifies the ``Headers``, if any, that you want CloudFront to forward to the origin for this cache behavior (whitelisted headers). For the headers that you specify, CloudFront also caches separate versio
func (o DistributionForwardedValuesPtrOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionForwardedValues) []string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringArrayOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior and cache based on the query string parameters. CloudFront behavior depends on the value of
func (o DistributionForwardedValuesPtrOutput) QueryString() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DistributionForwardedValues) *bool {
		if v == nil {
			return nil
		}
		return &v.QueryString
	}).(pulumi.BoolPtrOutput)
}

// This field is deprecated. We recommend that you use a cache policy or an origin request policy instead of this field.
//
//	If you want to include query strings in the cache key, use a cache policy. For more information, see [Creating cache policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-the-cache-key.html#cache-key-create-cache-policy) in the *Amazon CloudFront Developer Guide*.
//	If you want to send query strings to the origin but not include them in the cache key, use an origin request policy. For more information, see [Creating origin request policies](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/controlling-origin-requests.html#origin-request-create-origin-request-policy) in the *Amazon CloudFront Developer Guide*.
//	A complex type that contains information about the query string parameters that you want CloudFront to use for caching for this cache behavior.
func (o DistributionForwardedValuesPtrOutput) QueryStringCacheKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionForwardedValues) []string {
		if v == nil {
			return nil
		}
		return v.QueryStringCacheKeys
	}).(pulumi.StringArrayOutput)
}

// A CloudFront function that is associated with a cache behavior in a CloudFront distribution.
type DistributionFunctionAssociation struct {
	// The event type of the function, either ``viewer-request`` or ``viewer-response``. You cannot use origin-facing event types (``origin-request`` and ``origin-response``) with a CloudFront function.
	EventType *string `pulumi:"eventType"`
	// The Amazon Resource Name (ARN) of the function.
	FunctionArn *string `pulumi:"functionArn"`
}

// DistributionFunctionAssociationInput is an input type that accepts DistributionFunctionAssociationArgs and DistributionFunctionAssociationOutput values.
// You can construct a concrete instance of `DistributionFunctionAssociationInput` via:
//
//	DistributionFunctionAssociationArgs{...}
type DistributionFunctionAssociationInput interface {
	pulumi.Input

	ToDistributionFunctionAssociationOutput() DistributionFunctionAssociationOutput
	ToDistributionFunctionAssociationOutputWithContext(context.Context) DistributionFunctionAssociationOutput
}

// A CloudFront function that is associated with a cache behavior in a CloudFront distribution.
type DistributionFunctionAssociationArgs struct {
	// The event type of the function, either ``viewer-request`` or ``viewer-response``. You cannot use origin-facing event types (``origin-request`` and ``origin-response``) with a CloudFront function.
	EventType pulumi.StringPtrInput `pulumi:"eventType"`
	// The Amazon Resource Name (ARN) of the function.
	FunctionArn pulumi.StringPtrInput `pulumi:"functionArn"`
}

func (DistributionFunctionAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionFunctionAssociation)(nil)).Elem()
}

func (i DistributionFunctionAssociationArgs) ToDistributionFunctionAssociationOutput() DistributionFunctionAssociationOutput {
	return i.ToDistributionFunctionAssociationOutputWithContext(context.Background())
}

func (i DistributionFunctionAssociationArgs) ToDistributionFunctionAssociationOutputWithContext(ctx context.Context) DistributionFunctionAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionFunctionAssociationOutput)
}

// DistributionFunctionAssociationArrayInput is an input type that accepts DistributionFunctionAssociationArray and DistributionFunctionAssociationArrayOutput values.
// You can construct a concrete instance of `DistributionFunctionAssociationArrayInput` via:
//
//	DistributionFunctionAssociationArray{ DistributionFunctionAssociationArgs{...} }
type DistributionFunctionAssociationArrayInput interface {
	pulumi.Input

	ToDistributionFunctionAssociationArrayOutput() DistributionFunctionAssociationArrayOutput
	ToDistributionFunctionAssociationArrayOutputWithContext(context.Context) DistributionFunctionAssociationArrayOutput
}

type DistributionFunctionAssociationArray []DistributionFunctionAssociationInput

func (DistributionFunctionAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionFunctionAssociation)(nil)).Elem()
}

func (i DistributionFunctionAssociationArray) ToDistributionFunctionAssociationArrayOutput() DistributionFunctionAssociationArrayOutput {
	return i.ToDistributionFunctionAssociationArrayOutputWithContext(context.Background())
}

func (i DistributionFunctionAssociationArray) ToDistributionFunctionAssociationArrayOutputWithContext(ctx context.Context) DistributionFunctionAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionFunctionAssociationArrayOutput)
}

// A CloudFront function that is associated with a cache behavior in a CloudFront distribution.
type DistributionFunctionAssociationOutput struct{ *pulumi.OutputState }

func (DistributionFunctionAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionFunctionAssociation)(nil)).Elem()
}

func (o DistributionFunctionAssociationOutput) ToDistributionFunctionAssociationOutput() DistributionFunctionAssociationOutput {
	return o
}

func (o DistributionFunctionAssociationOutput) ToDistributionFunctionAssociationOutputWithContext(ctx context.Context) DistributionFunctionAssociationOutput {
	return o
}

// The event type of the function, either “viewer-request“ or “viewer-response“. You cannot use origin-facing event types (“origin-request“ and “origin-response“) with a CloudFront function.
func (o DistributionFunctionAssociationOutput) EventType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionFunctionAssociation) *string { return v.EventType }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the function.
func (o DistributionFunctionAssociationOutput) FunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionFunctionAssociation) *string { return v.FunctionArn }).(pulumi.StringPtrOutput)
}

type DistributionFunctionAssociationArrayOutput struct{ *pulumi.OutputState }

func (DistributionFunctionAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionFunctionAssociation)(nil)).Elem()
}

func (o DistributionFunctionAssociationArrayOutput) ToDistributionFunctionAssociationArrayOutput() DistributionFunctionAssociationArrayOutput {
	return o
}

func (o DistributionFunctionAssociationArrayOutput) ToDistributionFunctionAssociationArrayOutputWithContext(ctx context.Context) DistributionFunctionAssociationArrayOutput {
	return o
}

func (o DistributionFunctionAssociationArrayOutput) Index(i pulumi.IntInput) DistributionFunctionAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionFunctionAssociation {
		return vs[0].([]DistributionFunctionAssociation)[vs[1].(int)]
	}).(DistributionFunctionAssociationOutput)
}

// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
type DistributionGeoRestriction struct {
	// A complex type that contains a ``Location`` element for each country in which you want CloudFront either to distribute your content (``whitelist``) or not distribute your content (``blacklist``).
	//  The ``Location`` element is a two-letter, uppercase country code for a country that you want to include in your ``blacklist`` or ``whitelist``. Include one ``Location`` element for each country.
	//  CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the current list of countries and the corresponding codes, see ``ISO 3166-1-alpha-2`` code on the *International Organization for Standardization* website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.
	Locations []string `pulumi:"locations"`
	// The method that you want to use to restrict distribution of your content by country:
	//   +   ``none``: No geo restriction is enabled, meaning access to content is not restricted by client geo location.
	//   +   ``blacklist``: The ``Location`` elements specify the countries in which you don't want CloudFront to distribute your content.
	//   +   ``whitelist``: The ``Location`` elements specify the countries in which you want CloudFront to distribute your content.
	RestrictionType string `pulumi:"restrictionType"`
}

// DistributionGeoRestrictionInput is an input type that accepts DistributionGeoRestrictionArgs and DistributionGeoRestrictionOutput values.
// You can construct a concrete instance of `DistributionGeoRestrictionInput` via:
//
//	DistributionGeoRestrictionArgs{...}
type DistributionGeoRestrictionInput interface {
	pulumi.Input

	ToDistributionGeoRestrictionOutput() DistributionGeoRestrictionOutput
	ToDistributionGeoRestrictionOutputWithContext(context.Context) DistributionGeoRestrictionOutput
}

// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
type DistributionGeoRestrictionArgs struct {
	// A complex type that contains a ``Location`` element for each country in which you want CloudFront either to distribute your content (``whitelist``) or not distribute your content (``blacklist``).
	//  The ``Location`` element is a two-letter, uppercase country code for a country that you want to include in your ``blacklist`` or ``whitelist``. Include one ``Location`` element for each country.
	//  CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the current list of countries and the corresponding codes, see ``ISO 3166-1-alpha-2`` code on the *International Organization for Standardization* website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.
	Locations pulumi.StringArrayInput `pulumi:"locations"`
	// The method that you want to use to restrict distribution of your content by country:
	//   +   ``none``: No geo restriction is enabled, meaning access to content is not restricted by client geo location.
	//   +   ``blacklist``: The ``Location`` elements specify the countries in which you don't want CloudFront to distribute your content.
	//   +   ``whitelist``: The ``Location`` elements specify the countries in which you want CloudFront to distribute your content.
	RestrictionType pulumi.StringInput `pulumi:"restrictionType"`
}

func (DistributionGeoRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionGeoRestriction)(nil)).Elem()
}

func (i DistributionGeoRestrictionArgs) ToDistributionGeoRestrictionOutput() DistributionGeoRestrictionOutput {
	return i.ToDistributionGeoRestrictionOutputWithContext(context.Background())
}

func (i DistributionGeoRestrictionArgs) ToDistributionGeoRestrictionOutputWithContext(ctx context.Context) DistributionGeoRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionGeoRestrictionOutput)
}

func (i DistributionGeoRestrictionArgs) ToDistributionGeoRestrictionPtrOutput() DistributionGeoRestrictionPtrOutput {
	return i.ToDistributionGeoRestrictionPtrOutputWithContext(context.Background())
}

func (i DistributionGeoRestrictionArgs) ToDistributionGeoRestrictionPtrOutputWithContext(ctx context.Context) DistributionGeoRestrictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionGeoRestrictionOutput).ToDistributionGeoRestrictionPtrOutputWithContext(ctx)
}

// DistributionGeoRestrictionPtrInput is an input type that accepts DistributionGeoRestrictionArgs, DistributionGeoRestrictionPtr and DistributionGeoRestrictionPtrOutput values.
// You can construct a concrete instance of `DistributionGeoRestrictionPtrInput` via:
//
//	        DistributionGeoRestrictionArgs{...}
//
//	or:
//
//	        nil
type DistributionGeoRestrictionPtrInput interface {
	pulumi.Input

	ToDistributionGeoRestrictionPtrOutput() DistributionGeoRestrictionPtrOutput
	ToDistributionGeoRestrictionPtrOutputWithContext(context.Context) DistributionGeoRestrictionPtrOutput
}

type distributionGeoRestrictionPtrType DistributionGeoRestrictionArgs

func DistributionGeoRestrictionPtr(v *DistributionGeoRestrictionArgs) DistributionGeoRestrictionPtrInput {
	return (*distributionGeoRestrictionPtrType)(v)
}

func (*distributionGeoRestrictionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionGeoRestriction)(nil)).Elem()
}

func (i *distributionGeoRestrictionPtrType) ToDistributionGeoRestrictionPtrOutput() DistributionGeoRestrictionPtrOutput {
	return i.ToDistributionGeoRestrictionPtrOutputWithContext(context.Background())
}

func (i *distributionGeoRestrictionPtrType) ToDistributionGeoRestrictionPtrOutputWithContext(ctx context.Context) DistributionGeoRestrictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionGeoRestrictionPtrOutput)
}

// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
type DistributionGeoRestrictionOutput struct{ *pulumi.OutputState }

func (DistributionGeoRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionGeoRestriction)(nil)).Elem()
}

func (o DistributionGeoRestrictionOutput) ToDistributionGeoRestrictionOutput() DistributionGeoRestrictionOutput {
	return o
}

func (o DistributionGeoRestrictionOutput) ToDistributionGeoRestrictionOutputWithContext(ctx context.Context) DistributionGeoRestrictionOutput {
	return o
}

func (o DistributionGeoRestrictionOutput) ToDistributionGeoRestrictionPtrOutput() DistributionGeoRestrictionPtrOutput {
	return o.ToDistributionGeoRestrictionPtrOutputWithContext(context.Background())
}

func (o DistributionGeoRestrictionOutput) ToDistributionGeoRestrictionPtrOutputWithContext(ctx context.Context) DistributionGeoRestrictionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionGeoRestriction) *DistributionGeoRestriction {
		return &v
	}).(DistributionGeoRestrictionPtrOutput)
}

// A complex type that contains a “Location“ element for each country in which you want CloudFront either to distribute your content (“whitelist“) or not distribute your content (“blacklist“).
//
//	The ``Location`` element is a two-letter, uppercase country code for a country that you want to include in your ``blacklist`` or ``whitelist``. Include one ``Location`` element for each country.
//	CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the current list of countries and the corresponding codes, see ``ISO 3166-1-alpha-2`` code on the *International Organization for Standardization* website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.
func (o DistributionGeoRestrictionOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionGeoRestriction) []string { return v.Locations }).(pulumi.StringArrayOutput)
}

// The method that you want to use to restrict distribution of your content by country:
//   - “none“: No geo restriction is enabled, meaning access to content is not restricted by client geo location.
//   - “blacklist“: The “Location“ elements specify the countries in which you don't want CloudFront to distribute your content.
//   - “whitelist“: The “Location“ elements specify the countries in which you want CloudFront to distribute your content.
func (o DistributionGeoRestrictionOutput) RestrictionType() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionGeoRestriction) string { return v.RestrictionType }).(pulumi.StringOutput)
}

type DistributionGeoRestrictionPtrOutput struct{ *pulumi.OutputState }

func (DistributionGeoRestrictionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionGeoRestriction)(nil)).Elem()
}

func (o DistributionGeoRestrictionPtrOutput) ToDistributionGeoRestrictionPtrOutput() DistributionGeoRestrictionPtrOutput {
	return o
}

func (o DistributionGeoRestrictionPtrOutput) ToDistributionGeoRestrictionPtrOutputWithContext(ctx context.Context) DistributionGeoRestrictionPtrOutput {
	return o
}

func (o DistributionGeoRestrictionPtrOutput) Elem() DistributionGeoRestrictionOutput {
	return o.ApplyT(func(v *DistributionGeoRestriction) DistributionGeoRestriction {
		if v != nil {
			return *v
		}
		var ret DistributionGeoRestriction
		return ret
	}).(DistributionGeoRestrictionOutput)
}

// A complex type that contains a “Location“ element for each country in which you want CloudFront either to distribute your content (“whitelist“) or not distribute your content (“blacklist“).
//
//	The ``Location`` element is a two-letter, uppercase country code for a country that you want to include in your ``blacklist`` or ``whitelist``. Include one ``Location`` element for each country.
//	CloudFront and ``MaxMind`` both use ``ISO 3166`` country codes. For the current list of countries and the corresponding codes, see ``ISO 3166-1-alpha-2`` code on the *International Organization for Standardization* website. You can also refer to the country list on the CloudFront console, which includes both country names and codes.
func (o DistributionGeoRestrictionPtrOutput) Locations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionGeoRestriction) []string {
		if v == nil {
			return nil
		}
		return v.Locations
	}).(pulumi.StringArrayOutput)
}

// The method that you want to use to restrict distribution of your content by country:
//   - “none“: No geo restriction is enabled, meaning access to content is not restricted by client geo location.
//   - “blacklist“: The “Location“ elements specify the countries in which you don't want CloudFront to distribute your content.
//   - “whitelist“: The “Location“ elements specify the countries in which you want CloudFront to distribute your content.
func (o DistributionGeoRestrictionPtrOutput) RestrictionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionGeoRestriction) *string {
		if v == nil {
			return nil
		}
		return &v.RestrictionType
	}).(pulumi.StringPtrOutput)
}

// A complex type that contains a Lambda@Edge function association.
type DistributionLambdaFunctionAssociation struct {
	// Specifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:
	//   +   ``viewer-request``: The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.
	//   +   ``origin-request``: The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn't execute.
	//   +   ``origin-response``: The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn't execute.
	//   +   ``viewer-response``: The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache.
	//        If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn't execute.
	EventType *string `pulumi:"eventType"`
	// A flag that allows a Lambda@Edge function to have read access to the body content. For more information, see [Accessing the Request Body by Choosing the Include Body Option](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html) in the Amazon CloudFront Developer Guide.
	IncludeBody *bool `pulumi:"includeBody"`
	// The ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can't specify an alias or $LATEST.
	LambdaFunctionArn *string `pulumi:"lambdaFunctionArn"`
}

// DistributionLambdaFunctionAssociationInput is an input type that accepts DistributionLambdaFunctionAssociationArgs and DistributionLambdaFunctionAssociationOutput values.
// You can construct a concrete instance of `DistributionLambdaFunctionAssociationInput` via:
//
//	DistributionLambdaFunctionAssociationArgs{...}
type DistributionLambdaFunctionAssociationInput interface {
	pulumi.Input

	ToDistributionLambdaFunctionAssociationOutput() DistributionLambdaFunctionAssociationOutput
	ToDistributionLambdaFunctionAssociationOutputWithContext(context.Context) DistributionLambdaFunctionAssociationOutput
}

// A complex type that contains a Lambda@Edge function association.
type DistributionLambdaFunctionAssociationArgs struct {
	// Specifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:
	//   +   ``viewer-request``: The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.
	//   +   ``origin-request``: The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn't execute.
	//   +   ``origin-response``: The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn't execute.
	//   +   ``viewer-response``: The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache.
	//        If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn't execute.
	EventType pulumi.StringPtrInput `pulumi:"eventType"`
	// A flag that allows a Lambda@Edge function to have read access to the body content. For more information, see [Accessing the Request Body by Choosing the Include Body Option](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html) in the Amazon CloudFront Developer Guide.
	IncludeBody pulumi.BoolPtrInput `pulumi:"includeBody"`
	// The ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can't specify an alias or $LATEST.
	LambdaFunctionArn pulumi.StringPtrInput `pulumi:"lambdaFunctionArn"`
}

func (DistributionLambdaFunctionAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLambdaFunctionAssociation)(nil)).Elem()
}

func (i DistributionLambdaFunctionAssociationArgs) ToDistributionLambdaFunctionAssociationOutput() DistributionLambdaFunctionAssociationOutput {
	return i.ToDistributionLambdaFunctionAssociationOutputWithContext(context.Background())
}

func (i DistributionLambdaFunctionAssociationArgs) ToDistributionLambdaFunctionAssociationOutputWithContext(ctx context.Context) DistributionLambdaFunctionAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLambdaFunctionAssociationOutput)
}

// DistributionLambdaFunctionAssociationArrayInput is an input type that accepts DistributionLambdaFunctionAssociationArray and DistributionLambdaFunctionAssociationArrayOutput values.
// You can construct a concrete instance of `DistributionLambdaFunctionAssociationArrayInput` via:
//
//	DistributionLambdaFunctionAssociationArray{ DistributionLambdaFunctionAssociationArgs{...} }
type DistributionLambdaFunctionAssociationArrayInput interface {
	pulumi.Input

	ToDistributionLambdaFunctionAssociationArrayOutput() DistributionLambdaFunctionAssociationArrayOutput
	ToDistributionLambdaFunctionAssociationArrayOutputWithContext(context.Context) DistributionLambdaFunctionAssociationArrayOutput
}

type DistributionLambdaFunctionAssociationArray []DistributionLambdaFunctionAssociationInput

func (DistributionLambdaFunctionAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionLambdaFunctionAssociation)(nil)).Elem()
}

func (i DistributionLambdaFunctionAssociationArray) ToDistributionLambdaFunctionAssociationArrayOutput() DistributionLambdaFunctionAssociationArrayOutput {
	return i.ToDistributionLambdaFunctionAssociationArrayOutputWithContext(context.Background())
}

func (i DistributionLambdaFunctionAssociationArray) ToDistributionLambdaFunctionAssociationArrayOutputWithContext(ctx context.Context) DistributionLambdaFunctionAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLambdaFunctionAssociationArrayOutput)
}

// A complex type that contains a Lambda@Edge function association.
type DistributionLambdaFunctionAssociationOutput struct{ *pulumi.OutputState }

func (DistributionLambdaFunctionAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLambdaFunctionAssociation)(nil)).Elem()
}

func (o DistributionLambdaFunctionAssociationOutput) ToDistributionLambdaFunctionAssociationOutput() DistributionLambdaFunctionAssociationOutput {
	return o
}

func (o DistributionLambdaFunctionAssociationOutput) ToDistributionLambdaFunctionAssociationOutputWithContext(ctx context.Context) DistributionLambdaFunctionAssociationOutput {
	return o
}

// Specifies the event type that triggers a Lambda@Edge function invocation. You can specify the following values:
//   - “viewer-request“: The function executes when CloudFront receives a request from a viewer and before it checks to see whether the requested object is in the edge cache.
//   - “origin-request“: The function executes only when CloudFront sends a request to your origin. When the requested object is in the edge cache, the function doesn't execute.
//   - “origin-response“: The function executes after CloudFront receives a response from the origin and before it caches the object in the response. When the requested object is in the edge cache, the function doesn't execute.
//   - “viewer-response“: The function executes before CloudFront returns the requested object to the viewer. The function executes regardless of whether the object was already in the edge cache.
//     If the origin returns an HTTP status code other than HTTP 200 (OK), the function doesn't execute.
func (o DistributionLambdaFunctionAssociationOutput) EventType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionLambdaFunctionAssociation) *string { return v.EventType }).(pulumi.StringPtrOutput)
}

// A flag that allows a Lambda@Edge function to have read access to the body content. For more information, see [Accessing the Request Body by Choosing the Include Body Option](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/lambda-include-body-access.html) in the Amazon CloudFront Developer Guide.
func (o DistributionLambdaFunctionAssociationOutput) IncludeBody() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionLambdaFunctionAssociation) *bool { return v.IncludeBody }).(pulumi.BoolPtrOutput)
}

// The ARN of the Lambda@Edge function. You must specify the ARN of a function version; you can't specify an alias or $LATEST.
func (o DistributionLambdaFunctionAssociationOutput) LambdaFunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionLambdaFunctionAssociation) *string { return v.LambdaFunctionArn }).(pulumi.StringPtrOutput)
}

type DistributionLambdaFunctionAssociationArrayOutput struct{ *pulumi.OutputState }

func (DistributionLambdaFunctionAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionLambdaFunctionAssociation)(nil)).Elem()
}

func (o DistributionLambdaFunctionAssociationArrayOutput) ToDistributionLambdaFunctionAssociationArrayOutput() DistributionLambdaFunctionAssociationArrayOutput {
	return o
}

func (o DistributionLambdaFunctionAssociationArrayOutput) ToDistributionLambdaFunctionAssociationArrayOutputWithContext(ctx context.Context) DistributionLambdaFunctionAssociationArrayOutput {
	return o
}

func (o DistributionLambdaFunctionAssociationArrayOutput) Index(i pulumi.IntInput) DistributionLambdaFunctionAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionLambdaFunctionAssociation {
		return vs[0].([]DistributionLambdaFunctionAssociation)[vs[1].(int)]
	}).(DistributionLambdaFunctionAssociationOutput)
}

type DistributionLegacyCustomOrigin struct {
	DnsName              string   `pulumi:"dnsName"`
	HttpPort             *int     `pulumi:"httpPort"`
	HttpsPort            *int     `pulumi:"httpsPort"`
	OriginProtocolPolicy string   `pulumi:"originProtocolPolicy"`
	OriginSslProtocols   []string `pulumi:"originSslProtocols"`
}

// DistributionLegacyCustomOriginInput is an input type that accepts DistributionLegacyCustomOriginArgs and DistributionLegacyCustomOriginOutput values.
// You can construct a concrete instance of `DistributionLegacyCustomOriginInput` via:
//
//	DistributionLegacyCustomOriginArgs{...}
type DistributionLegacyCustomOriginInput interface {
	pulumi.Input

	ToDistributionLegacyCustomOriginOutput() DistributionLegacyCustomOriginOutput
	ToDistributionLegacyCustomOriginOutputWithContext(context.Context) DistributionLegacyCustomOriginOutput
}

type DistributionLegacyCustomOriginArgs struct {
	DnsName              pulumi.StringInput      `pulumi:"dnsName"`
	HttpPort             pulumi.IntPtrInput      `pulumi:"httpPort"`
	HttpsPort            pulumi.IntPtrInput      `pulumi:"httpsPort"`
	OriginProtocolPolicy pulumi.StringInput      `pulumi:"originProtocolPolicy"`
	OriginSslProtocols   pulumi.StringArrayInput `pulumi:"originSslProtocols"`
}

func (DistributionLegacyCustomOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLegacyCustomOrigin)(nil)).Elem()
}

func (i DistributionLegacyCustomOriginArgs) ToDistributionLegacyCustomOriginOutput() DistributionLegacyCustomOriginOutput {
	return i.ToDistributionLegacyCustomOriginOutputWithContext(context.Background())
}

func (i DistributionLegacyCustomOriginArgs) ToDistributionLegacyCustomOriginOutputWithContext(ctx context.Context) DistributionLegacyCustomOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLegacyCustomOriginOutput)
}

func (i DistributionLegacyCustomOriginArgs) ToDistributionLegacyCustomOriginPtrOutput() DistributionLegacyCustomOriginPtrOutput {
	return i.ToDistributionLegacyCustomOriginPtrOutputWithContext(context.Background())
}

func (i DistributionLegacyCustomOriginArgs) ToDistributionLegacyCustomOriginPtrOutputWithContext(ctx context.Context) DistributionLegacyCustomOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLegacyCustomOriginOutput).ToDistributionLegacyCustomOriginPtrOutputWithContext(ctx)
}

// DistributionLegacyCustomOriginPtrInput is an input type that accepts DistributionLegacyCustomOriginArgs, DistributionLegacyCustomOriginPtr and DistributionLegacyCustomOriginPtrOutput values.
// You can construct a concrete instance of `DistributionLegacyCustomOriginPtrInput` via:
//
//	        DistributionLegacyCustomOriginArgs{...}
//
//	or:
//
//	        nil
type DistributionLegacyCustomOriginPtrInput interface {
	pulumi.Input

	ToDistributionLegacyCustomOriginPtrOutput() DistributionLegacyCustomOriginPtrOutput
	ToDistributionLegacyCustomOriginPtrOutputWithContext(context.Context) DistributionLegacyCustomOriginPtrOutput
}

type distributionLegacyCustomOriginPtrType DistributionLegacyCustomOriginArgs

func DistributionLegacyCustomOriginPtr(v *DistributionLegacyCustomOriginArgs) DistributionLegacyCustomOriginPtrInput {
	return (*distributionLegacyCustomOriginPtrType)(v)
}

func (*distributionLegacyCustomOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionLegacyCustomOrigin)(nil)).Elem()
}

func (i *distributionLegacyCustomOriginPtrType) ToDistributionLegacyCustomOriginPtrOutput() DistributionLegacyCustomOriginPtrOutput {
	return i.ToDistributionLegacyCustomOriginPtrOutputWithContext(context.Background())
}

func (i *distributionLegacyCustomOriginPtrType) ToDistributionLegacyCustomOriginPtrOutputWithContext(ctx context.Context) DistributionLegacyCustomOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLegacyCustomOriginPtrOutput)
}

type DistributionLegacyCustomOriginOutput struct{ *pulumi.OutputState }

func (DistributionLegacyCustomOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLegacyCustomOrigin)(nil)).Elem()
}

func (o DistributionLegacyCustomOriginOutput) ToDistributionLegacyCustomOriginOutput() DistributionLegacyCustomOriginOutput {
	return o
}

func (o DistributionLegacyCustomOriginOutput) ToDistributionLegacyCustomOriginOutputWithContext(ctx context.Context) DistributionLegacyCustomOriginOutput {
	return o
}

func (o DistributionLegacyCustomOriginOutput) ToDistributionLegacyCustomOriginPtrOutput() DistributionLegacyCustomOriginPtrOutput {
	return o.ToDistributionLegacyCustomOriginPtrOutputWithContext(context.Background())
}

func (o DistributionLegacyCustomOriginOutput) ToDistributionLegacyCustomOriginPtrOutputWithContext(ctx context.Context) DistributionLegacyCustomOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionLegacyCustomOrigin) *DistributionLegacyCustomOrigin {
		return &v
	}).(DistributionLegacyCustomOriginPtrOutput)
}

func (o DistributionLegacyCustomOriginOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionLegacyCustomOrigin) string { return v.DnsName }).(pulumi.StringOutput)
}

func (o DistributionLegacyCustomOriginOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionLegacyCustomOrigin) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

func (o DistributionLegacyCustomOriginOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionLegacyCustomOrigin) *int { return v.HttpsPort }).(pulumi.IntPtrOutput)
}

func (o DistributionLegacyCustomOriginOutput) OriginProtocolPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionLegacyCustomOrigin) string { return v.OriginProtocolPolicy }).(pulumi.StringOutput)
}

func (o DistributionLegacyCustomOriginOutput) OriginSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionLegacyCustomOrigin) []string { return v.OriginSslProtocols }).(pulumi.StringArrayOutput)
}

type DistributionLegacyCustomOriginPtrOutput struct{ *pulumi.OutputState }

func (DistributionLegacyCustomOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionLegacyCustomOrigin)(nil)).Elem()
}

func (o DistributionLegacyCustomOriginPtrOutput) ToDistributionLegacyCustomOriginPtrOutput() DistributionLegacyCustomOriginPtrOutput {
	return o
}

func (o DistributionLegacyCustomOriginPtrOutput) ToDistributionLegacyCustomOriginPtrOutputWithContext(ctx context.Context) DistributionLegacyCustomOriginPtrOutput {
	return o
}

func (o DistributionLegacyCustomOriginPtrOutput) Elem() DistributionLegacyCustomOriginOutput {
	return o.ApplyT(func(v *DistributionLegacyCustomOrigin) DistributionLegacyCustomOrigin {
		if v != nil {
			return *v
		}
		var ret DistributionLegacyCustomOrigin
		return ret
	}).(DistributionLegacyCustomOriginOutput)
}

func (o DistributionLegacyCustomOriginPtrOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionLegacyCustomOrigin) *string {
		if v == nil {
			return nil
		}
		return &v.DnsName
	}).(pulumi.StringPtrOutput)
}

func (o DistributionLegacyCustomOriginPtrOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionLegacyCustomOrigin) *int {
		if v == nil {
			return nil
		}
		return v.HttpPort
	}).(pulumi.IntPtrOutput)
}

func (o DistributionLegacyCustomOriginPtrOutput) HttpsPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionLegacyCustomOrigin) *int {
		if v == nil {
			return nil
		}
		return v.HttpsPort
	}).(pulumi.IntPtrOutput)
}

func (o DistributionLegacyCustomOriginPtrOutput) OriginProtocolPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionLegacyCustomOrigin) *string {
		if v == nil {
			return nil
		}
		return &v.OriginProtocolPolicy
	}).(pulumi.StringPtrOutput)
}

func (o DistributionLegacyCustomOriginPtrOutput) OriginSslProtocols() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionLegacyCustomOrigin) []string {
		if v == nil {
			return nil
		}
		return v.OriginSslProtocols
	}).(pulumi.StringArrayOutput)
}

type DistributionLegacyS3Origin struct {
	DnsName              string  `pulumi:"dnsName"`
	OriginAccessIdentity *string `pulumi:"originAccessIdentity"`
}

// DistributionLegacyS3OriginInput is an input type that accepts DistributionLegacyS3OriginArgs and DistributionLegacyS3OriginOutput values.
// You can construct a concrete instance of `DistributionLegacyS3OriginInput` via:
//
//	DistributionLegacyS3OriginArgs{...}
type DistributionLegacyS3OriginInput interface {
	pulumi.Input

	ToDistributionLegacyS3OriginOutput() DistributionLegacyS3OriginOutput
	ToDistributionLegacyS3OriginOutputWithContext(context.Context) DistributionLegacyS3OriginOutput
}

type DistributionLegacyS3OriginArgs struct {
	DnsName              pulumi.StringInput    `pulumi:"dnsName"`
	OriginAccessIdentity pulumi.StringPtrInput `pulumi:"originAccessIdentity"`
}

func (DistributionLegacyS3OriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLegacyS3Origin)(nil)).Elem()
}

func (i DistributionLegacyS3OriginArgs) ToDistributionLegacyS3OriginOutput() DistributionLegacyS3OriginOutput {
	return i.ToDistributionLegacyS3OriginOutputWithContext(context.Background())
}

func (i DistributionLegacyS3OriginArgs) ToDistributionLegacyS3OriginOutputWithContext(ctx context.Context) DistributionLegacyS3OriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLegacyS3OriginOutput)
}

func (i DistributionLegacyS3OriginArgs) ToDistributionLegacyS3OriginPtrOutput() DistributionLegacyS3OriginPtrOutput {
	return i.ToDistributionLegacyS3OriginPtrOutputWithContext(context.Background())
}

func (i DistributionLegacyS3OriginArgs) ToDistributionLegacyS3OriginPtrOutputWithContext(ctx context.Context) DistributionLegacyS3OriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLegacyS3OriginOutput).ToDistributionLegacyS3OriginPtrOutputWithContext(ctx)
}

// DistributionLegacyS3OriginPtrInput is an input type that accepts DistributionLegacyS3OriginArgs, DistributionLegacyS3OriginPtr and DistributionLegacyS3OriginPtrOutput values.
// You can construct a concrete instance of `DistributionLegacyS3OriginPtrInput` via:
//
//	        DistributionLegacyS3OriginArgs{...}
//
//	or:
//
//	        nil
type DistributionLegacyS3OriginPtrInput interface {
	pulumi.Input

	ToDistributionLegacyS3OriginPtrOutput() DistributionLegacyS3OriginPtrOutput
	ToDistributionLegacyS3OriginPtrOutputWithContext(context.Context) DistributionLegacyS3OriginPtrOutput
}

type distributionLegacyS3OriginPtrType DistributionLegacyS3OriginArgs

func DistributionLegacyS3OriginPtr(v *DistributionLegacyS3OriginArgs) DistributionLegacyS3OriginPtrInput {
	return (*distributionLegacyS3OriginPtrType)(v)
}

func (*distributionLegacyS3OriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionLegacyS3Origin)(nil)).Elem()
}

func (i *distributionLegacyS3OriginPtrType) ToDistributionLegacyS3OriginPtrOutput() DistributionLegacyS3OriginPtrOutput {
	return i.ToDistributionLegacyS3OriginPtrOutputWithContext(context.Background())
}

func (i *distributionLegacyS3OriginPtrType) ToDistributionLegacyS3OriginPtrOutputWithContext(ctx context.Context) DistributionLegacyS3OriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLegacyS3OriginPtrOutput)
}

type DistributionLegacyS3OriginOutput struct{ *pulumi.OutputState }

func (DistributionLegacyS3OriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLegacyS3Origin)(nil)).Elem()
}

func (o DistributionLegacyS3OriginOutput) ToDistributionLegacyS3OriginOutput() DistributionLegacyS3OriginOutput {
	return o
}

func (o DistributionLegacyS3OriginOutput) ToDistributionLegacyS3OriginOutputWithContext(ctx context.Context) DistributionLegacyS3OriginOutput {
	return o
}

func (o DistributionLegacyS3OriginOutput) ToDistributionLegacyS3OriginPtrOutput() DistributionLegacyS3OriginPtrOutput {
	return o.ToDistributionLegacyS3OriginPtrOutputWithContext(context.Background())
}

func (o DistributionLegacyS3OriginOutput) ToDistributionLegacyS3OriginPtrOutputWithContext(ctx context.Context) DistributionLegacyS3OriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionLegacyS3Origin) *DistributionLegacyS3Origin {
		return &v
	}).(DistributionLegacyS3OriginPtrOutput)
}

func (o DistributionLegacyS3OriginOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionLegacyS3Origin) string { return v.DnsName }).(pulumi.StringOutput)
}

func (o DistributionLegacyS3OriginOutput) OriginAccessIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionLegacyS3Origin) *string { return v.OriginAccessIdentity }).(pulumi.StringPtrOutput)
}

type DistributionLegacyS3OriginPtrOutput struct{ *pulumi.OutputState }

func (DistributionLegacyS3OriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionLegacyS3Origin)(nil)).Elem()
}

func (o DistributionLegacyS3OriginPtrOutput) ToDistributionLegacyS3OriginPtrOutput() DistributionLegacyS3OriginPtrOutput {
	return o
}

func (o DistributionLegacyS3OriginPtrOutput) ToDistributionLegacyS3OriginPtrOutputWithContext(ctx context.Context) DistributionLegacyS3OriginPtrOutput {
	return o
}

func (o DistributionLegacyS3OriginPtrOutput) Elem() DistributionLegacyS3OriginOutput {
	return o.ApplyT(func(v *DistributionLegacyS3Origin) DistributionLegacyS3Origin {
		if v != nil {
			return *v
		}
		var ret DistributionLegacyS3Origin
		return ret
	}).(DistributionLegacyS3OriginOutput)
}

func (o DistributionLegacyS3OriginPtrOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionLegacyS3Origin) *string {
		if v == nil {
			return nil
		}
		return &v.DnsName
	}).(pulumi.StringPtrOutput)
}

func (o DistributionLegacyS3OriginPtrOutput) OriginAccessIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionLegacyS3Origin) *string {
		if v == nil {
			return nil
		}
		return v.OriginAccessIdentity
	}).(pulumi.StringPtrOutput)
}

// A complex type that controls whether access logs are written for the distribution.
type DistributionLogging struct {
	// The Amazon S3 bucket to store the access logs in, for example, ``myawslogbucket.s3.amazonaws.com``.
	Bucket string `pulumi:"bucket"`
	// Specifies whether you want CloudFront to include cookies in access logs, specify ``true`` for ``IncludeCookies``. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify ``false`` for ``IncludeCookies``.
	IncludeCookies *bool `pulumi:"includeCookies"`
	// An optional string that you want CloudFront to prefix to the access log ``filenames`` for this distribution, for example, ``myprefix/``. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty ``Prefix`` element in the ``Logging`` element.
	Prefix *string `pulumi:"prefix"`
}

// DistributionLoggingInput is an input type that accepts DistributionLoggingArgs and DistributionLoggingOutput values.
// You can construct a concrete instance of `DistributionLoggingInput` via:
//
//	DistributionLoggingArgs{...}
type DistributionLoggingInput interface {
	pulumi.Input

	ToDistributionLoggingOutput() DistributionLoggingOutput
	ToDistributionLoggingOutputWithContext(context.Context) DistributionLoggingOutput
}

// A complex type that controls whether access logs are written for the distribution.
type DistributionLoggingArgs struct {
	// The Amazon S3 bucket to store the access logs in, for example, ``myawslogbucket.s3.amazonaws.com``.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Specifies whether you want CloudFront to include cookies in access logs, specify ``true`` for ``IncludeCookies``. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify ``false`` for ``IncludeCookies``.
	IncludeCookies pulumi.BoolPtrInput `pulumi:"includeCookies"`
	// An optional string that you want CloudFront to prefix to the access log ``filenames`` for this distribution, for example, ``myprefix/``. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty ``Prefix`` element in the ``Logging`` element.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (DistributionLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLogging)(nil)).Elem()
}

func (i DistributionLoggingArgs) ToDistributionLoggingOutput() DistributionLoggingOutput {
	return i.ToDistributionLoggingOutputWithContext(context.Background())
}

func (i DistributionLoggingArgs) ToDistributionLoggingOutputWithContext(ctx context.Context) DistributionLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLoggingOutput)
}

func (i DistributionLoggingArgs) ToDistributionLoggingPtrOutput() DistributionLoggingPtrOutput {
	return i.ToDistributionLoggingPtrOutputWithContext(context.Background())
}

func (i DistributionLoggingArgs) ToDistributionLoggingPtrOutputWithContext(ctx context.Context) DistributionLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLoggingOutput).ToDistributionLoggingPtrOutputWithContext(ctx)
}

// DistributionLoggingPtrInput is an input type that accepts DistributionLoggingArgs, DistributionLoggingPtr and DistributionLoggingPtrOutput values.
// You can construct a concrete instance of `DistributionLoggingPtrInput` via:
//
//	        DistributionLoggingArgs{...}
//
//	or:
//
//	        nil
type DistributionLoggingPtrInput interface {
	pulumi.Input

	ToDistributionLoggingPtrOutput() DistributionLoggingPtrOutput
	ToDistributionLoggingPtrOutputWithContext(context.Context) DistributionLoggingPtrOutput
}

type distributionLoggingPtrType DistributionLoggingArgs

func DistributionLoggingPtr(v *DistributionLoggingArgs) DistributionLoggingPtrInput {
	return (*distributionLoggingPtrType)(v)
}

func (*distributionLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionLogging)(nil)).Elem()
}

func (i *distributionLoggingPtrType) ToDistributionLoggingPtrOutput() DistributionLoggingPtrOutput {
	return i.ToDistributionLoggingPtrOutputWithContext(context.Background())
}

func (i *distributionLoggingPtrType) ToDistributionLoggingPtrOutputWithContext(ctx context.Context) DistributionLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLoggingPtrOutput)
}

// A complex type that controls whether access logs are written for the distribution.
type DistributionLoggingOutput struct{ *pulumi.OutputState }

func (DistributionLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLogging)(nil)).Elem()
}

func (o DistributionLoggingOutput) ToDistributionLoggingOutput() DistributionLoggingOutput {
	return o
}

func (o DistributionLoggingOutput) ToDistributionLoggingOutputWithContext(ctx context.Context) DistributionLoggingOutput {
	return o
}

func (o DistributionLoggingOutput) ToDistributionLoggingPtrOutput() DistributionLoggingPtrOutput {
	return o.ToDistributionLoggingPtrOutputWithContext(context.Background())
}

func (o DistributionLoggingOutput) ToDistributionLoggingPtrOutputWithContext(ctx context.Context) DistributionLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionLogging) *DistributionLogging {
		return &v
	}).(DistributionLoggingPtrOutput)
}

// The Amazon S3 bucket to store the access logs in, for example, “myawslogbucket.s3.amazonaws.com“.
func (o DistributionLoggingOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionLogging) string { return v.Bucket }).(pulumi.StringOutput)
}

// Specifies whether you want CloudFront to include cookies in access logs, specify “true“ for “IncludeCookies“. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify “false“ for “IncludeCookies“.
func (o DistributionLoggingOutput) IncludeCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionLogging) *bool { return v.IncludeCookies }).(pulumi.BoolPtrOutput)
}

// An optional string that you want CloudFront to prefix to the access log “filenames“ for this distribution, for example, “myprefix/“. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty “Prefix“ element in the “Logging“ element.
func (o DistributionLoggingOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionLogging) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type DistributionLoggingPtrOutput struct{ *pulumi.OutputState }

func (DistributionLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionLogging)(nil)).Elem()
}

func (o DistributionLoggingPtrOutput) ToDistributionLoggingPtrOutput() DistributionLoggingPtrOutput {
	return o
}

func (o DistributionLoggingPtrOutput) ToDistributionLoggingPtrOutputWithContext(ctx context.Context) DistributionLoggingPtrOutput {
	return o
}

func (o DistributionLoggingPtrOutput) Elem() DistributionLoggingOutput {
	return o.ApplyT(func(v *DistributionLogging) DistributionLogging {
		if v != nil {
			return *v
		}
		var ret DistributionLogging
		return ret
	}).(DistributionLoggingOutput)
}

// The Amazon S3 bucket to store the access logs in, for example, “myawslogbucket.s3.amazonaws.com“.
func (o DistributionLoggingPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionLogging) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Specifies whether you want CloudFront to include cookies in access logs, specify “true“ for “IncludeCookies“. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you don't want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify “false“ for “IncludeCookies“.
func (o DistributionLoggingPtrOutput) IncludeCookies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DistributionLogging) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeCookies
	}).(pulumi.BoolPtrOutput)
}

// An optional string that you want CloudFront to prefix to the access log “filenames“ for this distribution, for example, “myprefix/“. If you want to enable logging, but you don't want to specify a prefix, you still must include an empty “Prefix“ element in the “Logging“ element.
func (o DistributionLoggingPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionLogging) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// An origin.
//
//	An origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:
//	 +  Use ``S3OriginConfig`` to specify an Amazon S3 bucket that is not configured with static website hosting.
//	 +  Use ``CustomOriginConfig`` to specify all other kinds of origins, including:
//	 +  An Amazon S3 bucket that is configured with static website hosting
//	 +  An Elastic Load Balancing load balancer
//	 +  An EMPlong endpoint
//	 +  An EMSlong container
//	 +  Any other HTTP server, running on an Amazon EC2 instance or any other kind of host
//
//	For the current maximum number of origins that you can specify per distribution, see [General Quotas on Web Distributions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html#limits-web-distributions) in the *Amazon CloudFront Developer Guide* (quotas were formerly referred to as limits).
type DistributionOrigin struct {
	// The number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don't specify otherwise) is 3.
	//  For a custom origin (including an Amazon S3 bucket that's configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an [Origin Response Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout).
	//  For more information, see [Origin Connection Attempts](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts) in the *Amazon CloudFront Developer Guide*.
	ConnectionAttempts *int `pulumi:"connectionAttempts"`
	// The number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don't specify otherwise) is 10 seconds.
	//  For more information, see [Origin Connection Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout) in the *Amazon CloudFront Developer Guide*.
	ConnectionTimeout *int `pulumi:"connectionTimeout"`
	// Use this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the ``S3OriginConfig`` type instead.
	CustomOriginConfig *DistributionCustomOriginConfig `pulumi:"customOriginConfig"`
	// The domain name for the origin.
	//  For more information, see [Origin Domain Name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName) in the *Amazon CloudFront Developer Guide*.
	DomainName string `pulumi:"domainName"`
	// A unique identifier for the origin. This value must be unique within the distribution.
	//  Use this value to specify the ``TargetOriginId`` in a ``CacheBehavior`` or ``DefaultCacheBehavior``.
	Id string `pulumi:"id"`
	// The unique identifier of an origin access control for this origin.
	//  For more information, see [Restricting access to an Amazon S3 origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html) in the *Amazon CloudFront Developer Guide*.
	OriginAccessControlId *string `pulumi:"originAccessControlId"`
	// A list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.
	//  For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html) in the *Amazon CloudFront Developer Guide*.
	OriginCustomHeaders []DistributionOriginCustomHeader `pulumi:"originCustomHeaders"`
	// An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.
	//  For more information, see [Origin Path](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginPath) in the *Amazon CloudFront Developer Guide*.
	OriginPath *string `pulumi:"originPath"`
	// CloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.
	//  For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*.
	OriginShield *DistributionOriginShield `pulumi:"originShield"`
	// Use this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the ``CustomOriginConfig`` type instead.
	S3OriginConfig *DistributionS3OriginConfig `pulumi:"s3OriginConfig"`
}

// DistributionOriginInput is an input type that accepts DistributionOriginArgs and DistributionOriginOutput values.
// You can construct a concrete instance of `DistributionOriginInput` via:
//
//	DistributionOriginArgs{...}
type DistributionOriginInput interface {
	pulumi.Input

	ToDistributionOriginOutput() DistributionOriginOutput
	ToDistributionOriginOutputWithContext(context.Context) DistributionOriginOutput
}

// An origin.
//
//	An origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:
//	 +  Use ``S3OriginConfig`` to specify an Amazon S3 bucket that is not configured with static website hosting.
//	 +  Use ``CustomOriginConfig`` to specify all other kinds of origins, including:
//	 +  An Amazon S3 bucket that is configured with static website hosting
//	 +  An Elastic Load Balancing load balancer
//	 +  An EMPlong endpoint
//	 +  An EMSlong container
//	 +  Any other HTTP server, running on an Amazon EC2 instance or any other kind of host
//
//	For the current maximum number of origins that you can specify per distribution, see [General Quotas on Web Distributions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html#limits-web-distributions) in the *Amazon CloudFront Developer Guide* (quotas were formerly referred to as limits).
type DistributionOriginArgs struct {
	// The number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don't specify otherwise) is 3.
	//  For a custom origin (including an Amazon S3 bucket that's configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an [Origin Response Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout).
	//  For more information, see [Origin Connection Attempts](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts) in the *Amazon CloudFront Developer Guide*.
	ConnectionAttempts pulumi.IntPtrInput `pulumi:"connectionAttempts"`
	// The number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don't specify otherwise) is 10 seconds.
	//  For more information, see [Origin Connection Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout) in the *Amazon CloudFront Developer Guide*.
	ConnectionTimeout pulumi.IntPtrInput `pulumi:"connectionTimeout"`
	// Use this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the ``S3OriginConfig`` type instead.
	CustomOriginConfig DistributionCustomOriginConfigPtrInput `pulumi:"customOriginConfig"`
	// The domain name for the origin.
	//  For more information, see [Origin Domain Name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName) in the *Amazon CloudFront Developer Guide*.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// A unique identifier for the origin. This value must be unique within the distribution.
	//  Use this value to specify the ``TargetOriginId`` in a ``CacheBehavior`` or ``DefaultCacheBehavior``.
	Id pulumi.StringInput `pulumi:"id"`
	// The unique identifier of an origin access control for this origin.
	//  For more information, see [Restricting access to an Amazon S3 origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html) in the *Amazon CloudFront Developer Guide*.
	OriginAccessControlId pulumi.StringPtrInput `pulumi:"originAccessControlId"`
	// A list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.
	//  For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html) in the *Amazon CloudFront Developer Guide*.
	OriginCustomHeaders DistributionOriginCustomHeaderArrayInput `pulumi:"originCustomHeaders"`
	// An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.
	//  For more information, see [Origin Path](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginPath) in the *Amazon CloudFront Developer Guide*.
	OriginPath pulumi.StringPtrInput `pulumi:"originPath"`
	// CloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.
	//  For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*.
	OriginShield DistributionOriginShieldPtrInput `pulumi:"originShield"`
	// Use this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the ``CustomOriginConfig`` type instead.
	S3OriginConfig DistributionS3OriginConfigPtrInput `pulumi:"s3OriginConfig"`
}

func (DistributionOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrigin)(nil)).Elem()
}

func (i DistributionOriginArgs) ToDistributionOriginOutput() DistributionOriginOutput {
	return i.ToDistributionOriginOutputWithContext(context.Background())
}

func (i DistributionOriginArgs) ToDistributionOriginOutputWithContext(ctx context.Context) DistributionOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginOutput)
}

// DistributionOriginArrayInput is an input type that accepts DistributionOriginArray and DistributionOriginArrayOutput values.
// You can construct a concrete instance of `DistributionOriginArrayInput` via:
//
//	DistributionOriginArray{ DistributionOriginArgs{...} }
type DistributionOriginArrayInput interface {
	pulumi.Input

	ToDistributionOriginArrayOutput() DistributionOriginArrayOutput
	ToDistributionOriginArrayOutputWithContext(context.Context) DistributionOriginArrayOutput
}

type DistributionOriginArray []DistributionOriginInput

func (DistributionOriginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionOrigin)(nil)).Elem()
}

func (i DistributionOriginArray) ToDistributionOriginArrayOutput() DistributionOriginArrayOutput {
	return i.ToDistributionOriginArrayOutputWithContext(context.Background())
}

func (i DistributionOriginArray) ToDistributionOriginArrayOutputWithContext(ctx context.Context) DistributionOriginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginArrayOutput)
}

// An origin.
//
//	An origin is the location where content is stored, and from which CloudFront gets content to serve to viewers. To specify an origin:
//	 +  Use ``S3OriginConfig`` to specify an Amazon S3 bucket that is not configured with static website hosting.
//	 +  Use ``CustomOriginConfig`` to specify all other kinds of origins, including:
//	 +  An Amazon S3 bucket that is configured with static website hosting
//	 +  An Elastic Load Balancing load balancer
//	 +  An EMPlong endpoint
//	 +  An EMSlong container
//	 +  Any other HTTP server, running on an Amazon EC2 instance or any other kind of host
//
//	For the current maximum number of origins that you can specify per distribution, see [General Quotas on Web Distributions](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cloudfront-limits.html#limits-web-distributions) in the *Amazon CloudFront Developer Guide* (quotas were formerly referred to as limits).
type DistributionOriginOutput struct{ *pulumi.OutputState }

func (DistributionOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrigin)(nil)).Elem()
}

func (o DistributionOriginOutput) ToDistributionOriginOutput() DistributionOriginOutput {
	return o
}

func (o DistributionOriginOutput) ToDistributionOriginOutputWithContext(ctx context.Context) DistributionOriginOutput {
	return o
}

// The number of times that CloudFront attempts to connect to the origin. The minimum number is 1, the maximum is 3, and the default (if you don't specify otherwise) is 3.
//
//	For a custom origin (including an Amazon S3 bucket that's configured with static website hosting), this value also specifies the number of times that CloudFront attempts to get a response from the origin, in the case of an [Origin Response Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginResponseTimeout).
//	For more information, see [Origin Connection Attempts](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-attempts) in the *Amazon CloudFront Developer Guide*.
func (o DistributionOriginOutput) ConnectionAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionOrigin) *int { return v.ConnectionAttempts }).(pulumi.IntPtrOutput)
}

// The number of seconds that CloudFront waits when trying to establish a connection to the origin. The minimum timeout is 1 second, the maximum is 10 seconds, and the default (if you don't specify otherwise) is 10 seconds.
//
//	For more information, see [Origin Connection Timeout](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#origin-connection-timeout) in the *Amazon CloudFront Developer Guide*.
func (o DistributionOriginOutput) ConnectionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionOrigin) *int { return v.ConnectionTimeout }).(pulumi.IntPtrOutput)
}

// Use this type to specify an origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this type. If the Amazon S3 bucket is not configured with static website hosting, use the “S3OriginConfig“ type instead.
func (o DistributionOriginOutput) CustomOriginConfig() DistributionCustomOriginConfigPtrOutput {
	return o.ApplyT(func(v DistributionOrigin) *DistributionCustomOriginConfig { return v.CustomOriginConfig }).(DistributionCustomOriginConfigPtrOutput)
}

// The domain name for the origin.
//
//	For more information, see [Origin Domain Name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesDomainName) in the *Amazon CloudFront Developer Guide*.
func (o DistributionOriginOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionOrigin) string { return v.DomainName }).(pulumi.StringOutput)
}

// A unique identifier for the origin. This value must be unique within the distribution.
//
//	Use this value to specify the ``TargetOriginId`` in a ``CacheBehavior`` or ``DefaultCacheBehavior``.
func (o DistributionOriginOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionOrigin) string { return v.Id }).(pulumi.StringOutput)
}

// The unique identifier of an origin access control for this origin.
//
//	For more information, see [Restricting access to an Amazon S3 origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionOriginOutput) OriginAccessControlId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionOrigin) *string { return v.OriginAccessControlId }).(pulumi.StringPtrOutput)
}

// A list of HTTP header names and values that CloudFront adds to the requests that it sends to the origin.
//
//	For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/add-origin-custom-headers.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionOriginOutput) OriginCustomHeaders() DistributionOriginCustomHeaderArrayOutput {
	return o.ApplyT(func(v DistributionOrigin) []DistributionOriginCustomHeader { return v.OriginCustomHeaders }).(DistributionOriginCustomHeaderArrayOutput)
}

// An optional path that CloudFront appends to the origin domain name when CloudFront requests content from the origin.
//
//	For more information, see [Origin Path](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValuesOriginPath) in the *Amazon CloudFront Developer Guide*.
func (o DistributionOriginOutput) OriginPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionOrigin) *string { return v.OriginPath }).(pulumi.StringPtrOutput)
}

// CloudFront Origin Shield. Using Origin Shield can help reduce the load on your origin.
//
//	For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionOriginOutput) OriginShield() DistributionOriginShieldPtrOutput {
	return o.ApplyT(func(v DistributionOrigin) *DistributionOriginShield { return v.OriginShield }).(DistributionOriginShieldPtrOutput)
}

// Use this type to specify an origin that is an Amazon S3 bucket that is not configured with static website hosting. To specify any other type of origin, including an Amazon S3 bucket that is configured with static website hosting, use the “CustomOriginConfig“ type instead.
func (o DistributionOriginOutput) S3OriginConfig() DistributionS3OriginConfigPtrOutput {
	return o.ApplyT(func(v DistributionOrigin) *DistributionS3OriginConfig { return v.S3OriginConfig }).(DistributionS3OriginConfigPtrOutput)
}

type DistributionOriginArrayOutput struct{ *pulumi.OutputState }

func (DistributionOriginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionOrigin)(nil)).Elem()
}

func (o DistributionOriginArrayOutput) ToDistributionOriginArrayOutput() DistributionOriginArrayOutput {
	return o
}

func (o DistributionOriginArrayOutput) ToDistributionOriginArrayOutputWithContext(ctx context.Context) DistributionOriginArrayOutput {
	return o
}

func (o DistributionOriginArrayOutput) Index(i pulumi.IntInput) DistributionOriginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionOrigin {
		return vs[0].([]DistributionOrigin)[vs[1].(int)]
	}).(DistributionOriginOutput)
}

// A complex type that contains “HeaderName“ and “HeaderValue“ elements, if any, for this distribution.
type DistributionOriginCustomHeader struct {
	// The name of a header that you want CloudFront to send to your origin. For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html) in the *Amazon CloudFront Developer Guide*.
	HeaderName string `pulumi:"headerName"`
	// The value for the header that you specified in the ``HeaderName`` field.
	HeaderValue string `pulumi:"headerValue"`
}

// DistributionOriginCustomHeaderInput is an input type that accepts DistributionOriginCustomHeaderArgs and DistributionOriginCustomHeaderOutput values.
// You can construct a concrete instance of `DistributionOriginCustomHeaderInput` via:
//
//	DistributionOriginCustomHeaderArgs{...}
type DistributionOriginCustomHeaderInput interface {
	pulumi.Input

	ToDistributionOriginCustomHeaderOutput() DistributionOriginCustomHeaderOutput
	ToDistributionOriginCustomHeaderOutputWithContext(context.Context) DistributionOriginCustomHeaderOutput
}

// A complex type that contains “HeaderName“ and “HeaderValue“ elements, if any, for this distribution.
type DistributionOriginCustomHeaderArgs struct {
	// The name of a header that you want CloudFront to send to your origin. For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html) in the *Amazon CloudFront Developer Guide*.
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// The value for the header that you specified in the ``HeaderName`` field.
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
}

func (DistributionOriginCustomHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginCustomHeader)(nil)).Elem()
}

func (i DistributionOriginCustomHeaderArgs) ToDistributionOriginCustomHeaderOutput() DistributionOriginCustomHeaderOutput {
	return i.ToDistributionOriginCustomHeaderOutputWithContext(context.Background())
}

func (i DistributionOriginCustomHeaderArgs) ToDistributionOriginCustomHeaderOutputWithContext(ctx context.Context) DistributionOriginCustomHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginCustomHeaderOutput)
}

// DistributionOriginCustomHeaderArrayInput is an input type that accepts DistributionOriginCustomHeaderArray and DistributionOriginCustomHeaderArrayOutput values.
// You can construct a concrete instance of `DistributionOriginCustomHeaderArrayInput` via:
//
//	DistributionOriginCustomHeaderArray{ DistributionOriginCustomHeaderArgs{...} }
type DistributionOriginCustomHeaderArrayInput interface {
	pulumi.Input

	ToDistributionOriginCustomHeaderArrayOutput() DistributionOriginCustomHeaderArrayOutput
	ToDistributionOriginCustomHeaderArrayOutputWithContext(context.Context) DistributionOriginCustomHeaderArrayOutput
}

type DistributionOriginCustomHeaderArray []DistributionOriginCustomHeaderInput

func (DistributionOriginCustomHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionOriginCustomHeader)(nil)).Elem()
}

func (i DistributionOriginCustomHeaderArray) ToDistributionOriginCustomHeaderArrayOutput() DistributionOriginCustomHeaderArrayOutput {
	return i.ToDistributionOriginCustomHeaderArrayOutputWithContext(context.Background())
}

func (i DistributionOriginCustomHeaderArray) ToDistributionOriginCustomHeaderArrayOutputWithContext(ctx context.Context) DistributionOriginCustomHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginCustomHeaderArrayOutput)
}

// A complex type that contains “HeaderName“ and “HeaderValue“ elements, if any, for this distribution.
type DistributionOriginCustomHeaderOutput struct{ *pulumi.OutputState }

func (DistributionOriginCustomHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginCustomHeader)(nil)).Elem()
}

func (o DistributionOriginCustomHeaderOutput) ToDistributionOriginCustomHeaderOutput() DistributionOriginCustomHeaderOutput {
	return o
}

func (o DistributionOriginCustomHeaderOutput) ToDistributionOriginCustomHeaderOutputWithContext(ctx context.Context) DistributionOriginCustomHeaderOutput {
	return o
}

// The name of a header that you want CloudFront to send to your origin. For more information, see [Adding Custom Headers to Origin Requests](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/forward-custom-headers.html) in the *Amazon CloudFront Developer Guide*.
func (o DistributionOriginCustomHeaderOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionOriginCustomHeader) string { return v.HeaderName }).(pulumi.StringOutput)
}

// The value for the header that you specified in the “HeaderName“ field.
func (o DistributionOriginCustomHeaderOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionOriginCustomHeader) string { return v.HeaderValue }).(pulumi.StringOutput)
}

type DistributionOriginCustomHeaderArrayOutput struct{ *pulumi.OutputState }

func (DistributionOriginCustomHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionOriginCustomHeader)(nil)).Elem()
}

func (o DistributionOriginCustomHeaderArrayOutput) ToDistributionOriginCustomHeaderArrayOutput() DistributionOriginCustomHeaderArrayOutput {
	return o
}

func (o DistributionOriginCustomHeaderArrayOutput) ToDistributionOriginCustomHeaderArrayOutputWithContext(ctx context.Context) DistributionOriginCustomHeaderArrayOutput {
	return o
}

func (o DistributionOriginCustomHeaderArrayOutput) Index(i pulumi.IntInput) DistributionOriginCustomHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionOriginCustomHeader {
		return vs[0].([]DistributionOriginCustomHeader)[vs[1].(int)]
	}).(DistributionOriginCustomHeaderOutput)
}

// An origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specify the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you've chosen.
type DistributionOriginGroup struct {
	// A complex type that contains information about the failover criteria for an origin group.
	FailoverCriteria DistributionOriginGroupFailoverCriteria `pulumi:"failoverCriteria"`
	// The origin group's ID.
	Id string `pulumi:"id"`
	// A complex type that contains information about the origins in an origin group.
	Members DistributionOriginGroupMembers `pulumi:"members"`
}

// DistributionOriginGroupInput is an input type that accepts DistributionOriginGroupArgs and DistributionOriginGroupOutput values.
// You can construct a concrete instance of `DistributionOriginGroupInput` via:
//
//	DistributionOriginGroupArgs{...}
type DistributionOriginGroupInput interface {
	pulumi.Input

	ToDistributionOriginGroupOutput() DistributionOriginGroupOutput
	ToDistributionOriginGroupOutputWithContext(context.Context) DistributionOriginGroupOutput
}

// An origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specify the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you've chosen.
type DistributionOriginGroupArgs struct {
	// A complex type that contains information about the failover criteria for an origin group.
	FailoverCriteria DistributionOriginGroupFailoverCriteriaInput `pulumi:"failoverCriteria"`
	// The origin group's ID.
	Id pulumi.StringInput `pulumi:"id"`
	// A complex type that contains information about the origins in an origin group.
	Members DistributionOriginGroupMembersInput `pulumi:"members"`
}

func (DistributionOriginGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroup)(nil)).Elem()
}

func (i DistributionOriginGroupArgs) ToDistributionOriginGroupOutput() DistributionOriginGroupOutput {
	return i.ToDistributionOriginGroupOutputWithContext(context.Background())
}

func (i DistributionOriginGroupArgs) ToDistributionOriginGroupOutputWithContext(ctx context.Context) DistributionOriginGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginGroupOutput)
}

// DistributionOriginGroupArrayInput is an input type that accepts DistributionOriginGroupArray and DistributionOriginGroupArrayOutput values.
// You can construct a concrete instance of `DistributionOriginGroupArrayInput` via:
//
//	DistributionOriginGroupArray{ DistributionOriginGroupArgs{...} }
type DistributionOriginGroupArrayInput interface {
	pulumi.Input

	ToDistributionOriginGroupArrayOutput() DistributionOriginGroupArrayOutput
	ToDistributionOriginGroupArrayOutputWithContext(context.Context) DistributionOriginGroupArrayOutput
}

type DistributionOriginGroupArray []DistributionOriginGroupInput

func (DistributionOriginGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionOriginGroup)(nil)).Elem()
}

func (i DistributionOriginGroupArray) ToDistributionOriginGroupArrayOutput() DistributionOriginGroupArrayOutput {
	return i.ToDistributionOriginGroupArrayOutputWithContext(context.Background())
}

func (i DistributionOriginGroupArray) ToDistributionOriginGroupArrayOutputWithContext(ctx context.Context) DistributionOriginGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginGroupArrayOutput)
}

// An origin group includes two origins (a primary origin and a second origin to failover to) and a failover criteria that you specify. You create an origin group to support origin failover in CloudFront. When you create or update a distribution, you can specify the origin group instead of a single origin, and CloudFront will failover from the primary origin to the second origin under the failover conditions that you've chosen.
type DistributionOriginGroupOutput struct{ *pulumi.OutputState }

func (DistributionOriginGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroup)(nil)).Elem()
}

func (o DistributionOriginGroupOutput) ToDistributionOriginGroupOutput() DistributionOriginGroupOutput {
	return o
}

func (o DistributionOriginGroupOutput) ToDistributionOriginGroupOutputWithContext(ctx context.Context) DistributionOriginGroupOutput {
	return o
}

// A complex type that contains information about the failover criteria for an origin group.
func (o DistributionOriginGroupOutput) FailoverCriteria() DistributionOriginGroupFailoverCriteriaOutput {
	return o.ApplyT(func(v DistributionOriginGroup) DistributionOriginGroupFailoverCriteria { return v.FailoverCriteria }).(DistributionOriginGroupFailoverCriteriaOutput)
}

// The origin group's ID.
func (o DistributionOriginGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionOriginGroup) string { return v.Id }).(pulumi.StringOutput)
}

// A complex type that contains information about the origins in an origin group.
func (o DistributionOriginGroupOutput) Members() DistributionOriginGroupMembersOutput {
	return o.ApplyT(func(v DistributionOriginGroup) DistributionOriginGroupMembers { return v.Members }).(DistributionOriginGroupMembersOutput)
}

type DistributionOriginGroupArrayOutput struct{ *pulumi.OutputState }

func (DistributionOriginGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionOriginGroup)(nil)).Elem()
}

func (o DistributionOriginGroupArrayOutput) ToDistributionOriginGroupArrayOutput() DistributionOriginGroupArrayOutput {
	return o
}

func (o DistributionOriginGroupArrayOutput) ToDistributionOriginGroupArrayOutputWithContext(ctx context.Context) DistributionOriginGroupArrayOutput {
	return o
}

func (o DistributionOriginGroupArrayOutput) Index(i pulumi.IntInput) DistributionOriginGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionOriginGroup {
		return vs[0].([]DistributionOriginGroup)[vs[1].(int)]
	}).(DistributionOriginGroupOutput)
}

// A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.
type DistributionOriginGroupFailoverCriteria struct {
	// The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.
	StatusCodes DistributionStatusCodes `pulumi:"statusCodes"`
}

// DistributionOriginGroupFailoverCriteriaInput is an input type that accepts DistributionOriginGroupFailoverCriteriaArgs and DistributionOriginGroupFailoverCriteriaOutput values.
// You can construct a concrete instance of `DistributionOriginGroupFailoverCriteriaInput` via:
//
//	DistributionOriginGroupFailoverCriteriaArgs{...}
type DistributionOriginGroupFailoverCriteriaInput interface {
	pulumi.Input

	ToDistributionOriginGroupFailoverCriteriaOutput() DistributionOriginGroupFailoverCriteriaOutput
	ToDistributionOriginGroupFailoverCriteriaOutputWithContext(context.Context) DistributionOriginGroupFailoverCriteriaOutput
}

// A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.
type DistributionOriginGroupFailoverCriteriaArgs struct {
	// The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.
	StatusCodes DistributionStatusCodesInput `pulumi:"statusCodes"`
}

func (DistributionOriginGroupFailoverCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroupFailoverCriteria)(nil)).Elem()
}

func (i DistributionOriginGroupFailoverCriteriaArgs) ToDistributionOriginGroupFailoverCriteriaOutput() DistributionOriginGroupFailoverCriteriaOutput {
	return i.ToDistributionOriginGroupFailoverCriteriaOutputWithContext(context.Background())
}

func (i DistributionOriginGroupFailoverCriteriaArgs) ToDistributionOriginGroupFailoverCriteriaOutputWithContext(ctx context.Context) DistributionOriginGroupFailoverCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginGroupFailoverCriteriaOutput)
}

// A complex data type that includes information about the failover criteria for an origin group, including the status codes for which CloudFront will failover from the primary origin to the second origin.
type DistributionOriginGroupFailoverCriteriaOutput struct{ *pulumi.OutputState }

func (DistributionOriginGroupFailoverCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroupFailoverCriteria)(nil)).Elem()
}

func (o DistributionOriginGroupFailoverCriteriaOutput) ToDistributionOriginGroupFailoverCriteriaOutput() DistributionOriginGroupFailoverCriteriaOutput {
	return o
}

func (o DistributionOriginGroupFailoverCriteriaOutput) ToDistributionOriginGroupFailoverCriteriaOutputWithContext(ctx context.Context) DistributionOriginGroupFailoverCriteriaOutput {
	return o
}

// The status codes that, when returned from the primary origin, will trigger CloudFront to failover to the second origin.
func (o DistributionOriginGroupFailoverCriteriaOutput) StatusCodes() DistributionStatusCodesOutput {
	return o.ApplyT(func(v DistributionOriginGroupFailoverCriteria) DistributionStatusCodes { return v.StatusCodes }).(DistributionStatusCodesOutput)
}

// An origin in an origin group.
type DistributionOriginGroupMember struct {
	// The ID for an origin in an origin group.
	OriginId string `pulumi:"originId"`
}

// DistributionOriginGroupMemberInput is an input type that accepts DistributionOriginGroupMemberArgs and DistributionOriginGroupMemberOutput values.
// You can construct a concrete instance of `DistributionOriginGroupMemberInput` via:
//
//	DistributionOriginGroupMemberArgs{...}
type DistributionOriginGroupMemberInput interface {
	pulumi.Input

	ToDistributionOriginGroupMemberOutput() DistributionOriginGroupMemberOutput
	ToDistributionOriginGroupMemberOutputWithContext(context.Context) DistributionOriginGroupMemberOutput
}

// An origin in an origin group.
type DistributionOriginGroupMemberArgs struct {
	// The ID for an origin in an origin group.
	OriginId pulumi.StringInput `pulumi:"originId"`
}

func (DistributionOriginGroupMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroupMember)(nil)).Elem()
}

func (i DistributionOriginGroupMemberArgs) ToDistributionOriginGroupMemberOutput() DistributionOriginGroupMemberOutput {
	return i.ToDistributionOriginGroupMemberOutputWithContext(context.Background())
}

func (i DistributionOriginGroupMemberArgs) ToDistributionOriginGroupMemberOutputWithContext(ctx context.Context) DistributionOriginGroupMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginGroupMemberOutput)
}

// DistributionOriginGroupMemberArrayInput is an input type that accepts DistributionOriginGroupMemberArray and DistributionOriginGroupMemberArrayOutput values.
// You can construct a concrete instance of `DistributionOriginGroupMemberArrayInput` via:
//
//	DistributionOriginGroupMemberArray{ DistributionOriginGroupMemberArgs{...} }
type DistributionOriginGroupMemberArrayInput interface {
	pulumi.Input

	ToDistributionOriginGroupMemberArrayOutput() DistributionOriginGroupMemberArrayOutput
	ToDistributionOriginGroupMemberArrayOutputWithContext(context.Context) DistributionOriginGroupMemberArrayOutput
}

type DistributionOriginGroupMemberArray []DistributionOriginGroupMemberInput

func (DistributionOriginGroupMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionOriginGroupMember)(nil)).Elem()
}

func (i DistributionOriginGroupMemberArray) ToDistributionOriginGroupMemberArrayOutput() DistributionOriginGroupMemberArrayOutput {
	return i.ToDistributionOriginGroupMemberArrayOutputWithContext(context.Background())
}

func (i DistributionOriginGroupMemberArray) ToDistributionOriginGroupMemberArrayOutputWithContext(ctx context.Context) DistributionOriginGroupMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginGroupMemberArrayOutput)
}

// An origin in an origin group.
type DistributionOriginGroupMemberOutput struct{ *pulumi.OutputState }

func (DistributionOriginGroupMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroupMember)(nil)).Elem()
}

func (o DistributionOriginGroupMemberOutput) ToDistributionOriginGroupMemberOutput() DistributionOriginGroupMemberOutput {
	return o
}

func (o DistributionOriginGroupMemberOutput) ToDistributionOriginGroupMemberOutputWithContext(ctx context.Context) DistributionOriginGroupMemberOutput {
	return o
}

// The ID for an origin in an origin group.
func (o DistributionOriginGroupMemberOutput) OriginId() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionOriginGroupMember) string { return v.OriginId }).(pulumi.StringOutput)
}

type DistributionOriginGroupMemberArrayOutput struct{ *pulumi.OutputState }

func (DistributionOriginGroupMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionOriginGroupMember)(nil)).Elem()
}

func (o DistributionOriginGroupMemberArrayOutput) ToDistributionOriginGroupMemberArrayOutput() DistributionOriginGroupMemberArrayOutput {
	return o
}

func (o DistributionOriginGroupMemberArrayOutput) ToDistributionOriginGroupMemberArrayOutputWithContext(ctx context.Context) DistributionOriginGroupMemberArrayOutput {
	return o
}

func (o DistributionOriginGroupMemberArrayOutput) Index(i pulumi.IntInput) DistributionOriginGroupMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionOriginGroupMember {
		return vs[0].([]DistributionOriginGroupMember)[vs[1].(int)]
	}).(DistributionOriginGroupMemberOutput)
}

// A complex data type for the origins included in an origin group.
type DistributionOriginGroupMembers struct {
	// Items (origins) in an origin group.
	Items []DistributionOriginGroupMember `pulumi:"items"`
	// The number of origins in an origin group.
	Quantity int `pulumi:"quantity"`
}

// DistributionOriginGroupMembersInput is an input type that accepts DistributionOriginGroupMembersArgs and DistributionOriginGroupMembersOutput values.
// You can construct a concrete instance of `DistributionOriginGroupMembersInput` via:
//
//	DistributionOriginGroupMembersArgs{...}
type DistributionOriginGroupMembersInput interface {
	pulumi.Input

	ToDistributionOriginGroupMembersOutput() DistributionOriginGroupMembersOutput
	ToDistributionOriginGroupMembersOutputWithContext(context.Context) DistributionOriginGroupMembersOutput
}

// A complex data type for the origins included in an origin group.
type DistributionOriginGroupMembersArgs struct {
	// Items (origins) in an origin group.
	Items DistributionOriginGroupMemberArrayInput `pulumi:"items"`
	// The number of origins in an origin group.
	Quantity pulumi.IntInput `pulumi:"quantity"`
}

func (DistributionOriginGroupMembersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroupMembers)(nil)).Elem()
}

func (i DistributionOriginGroupMembersArgs) ToDistributionOriginGroupMembersOutput() DistributionOriginGroupMembersOutput {
	return i.ToDistributionOriginGroupMembersOutputWithContext(context.Background())
}

func (i DistributionOriginGroupMembersArgs) ToDistributionOriginGroupMembersOutputWithContext(ctx context.Context) DistributionOriginGroupMembersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginGroupMembersOutput)
}

// A complex data type for the origins included in an origin group.
type DistributionOriginGroupMembersOutput struct{ *pulumi.OutputState }

func (DistributionOriginGroupMembersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroupMembers)(nil)).Elem()
}

func (o DistributionOriginGroupMembersOutput) ToDistributionOriginGroupMembersOutput() DistributionOriginGroupMembersOutput {
	return o
}

func (o DistributionOriginGroupMembersOutput) ToDistributionOriginGroupMembersOutputWithContext(ctx context.Context) DistributionOriginGroupMembersOutput {
	return o
}

// Items (origins) in an origin group.
func (o DistributionOriginGroupMembersOutput) Items() DistributionOriginGroupMemberArrayOutput {
	return o.ApplyT(func(v DistributionOriginGroupMembers) []DistributionOriginGroupMember { return v.Items }).(DistributionOriginGroupMemberArrayOutput)
}

// The number of origins in an origin group.
func (o DistributionOriginGroupMembersOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v DistributionOriginGroupMembers) int { return v.Quantity }).(pulumi.IntOutput)
}

// A complex data type for the origin groups specified for a distribution.
type DistributionOriginGroups struct {
	// The items (origin groups) in a distribution.
	Items []DistributionOriginGroup `pulumi:"items"`
	// The number of origin groups.
	Quantity int `pulumi:"quantity"`
}

// DistributionOriginGroupsInput is an input type that accepts DistributionOriginGroupsArgs and DistributionOriginGroupsOutput values.
// You can construct a concrete instance of `DistributionOriginGroupsInput` via:
//
//	DistributionOriginGroupsArgs{...}
type DistributionOriginGroupsInput interface {
	pulumi.Input

	ToDistributionOriginGroupsOutput() DistributionOriginGroupsOutput
	ToDistributionOriginGroupsOutputWithContext(context.Context) DistributionOriginGroupsOutput
}

// A complex data type for the origin groups specified for a distribution.
type DistributionOriginGroupsArgs struct {
	// The items (origin groups) in a distribution.
	Items DistributionOriginGroupArrayInput `pulumi:"items"`
	// The number of origin groups.
	Quantity pulumi.IntInput `pulumi:"quantity"`
}

func (DistributionOriginGroupsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroups)(nil)).Elem()
}

func (i DistributionOriginGroupsArgs) ToDistributionOriginGroupsOutput() DistributionOriginGroupsOutput {
	return i.ToDistributionOriginGroupsOutputWithContext(context.Background())
}

func (i DistributionOriginGroupsArgs) ToDistributionOriginGroupsOutputWithContext(ctx context.Context) DistributionOriginGroupsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginGroupsOutput)
}

func (i DistributionOriginGroupsArgs) ToDistributionOriginGroupsPtrOutput() DistributionOriginGroupsPtrOutput {
	return i.ToDistributionOriginGroupsPtrOutputWithContext(context.Background())
}

func (i DistributionOriginGroupsArgs) ToDistributionOriginGroupsPtrOutputWithContext(ctx context.Context) DistributionOriginGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginGroupsOutput).ToDistributionOriginGroupsPtrOutputWithContext(ctx)
}

// DistributionOriginGroupsPtrInput is an input type that accepts DistributionOriginGroupsArgs, DistributionOriginGroupsPtr and DistributionOriginGroupsPtrOutput values.
// You can construct a concrete instance of `DistributionOriginGroupsPtrInput` via:
//
//	        DistributionOriginGroupsArgs{...}
//
//	or:
//
//	        nil
type DistributionOriginGroupsPtrInput interface {
	pulumi.Input

	ToDistributionOriginGroupsPtrOutput() DistributionOriginGroupsPtrOutput
	ToDistributionOriginGroupsPtrOutputWithContext(context.Context) DistributionOriginGroupsPtrOutput
}

type distributionOriginGroupsPtrType DistributionOriginGroupsArgs

func DistributionOriginGroupsPtr(v *DistributionOriginGroupsArgs) DistributionOriginGroupsPtrInput {
	return (*distributionOriginGroupsPtrType)(v)
}

func (*distributionOriginGroupsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionOriginGroups)(nil)).Elem()
}

func (i *distributionOriginGroupsPtrType) ToDistributionOriginGroupsPtrOutput() DistributionOriginGroupsPtrOutput {
	return i.ToDistributionOriginGroupsPtrOutputWithContext(context.Background())
}

func (i *distributionOriginGroupsPtrType) ToDistributionOriginGroupsPtrOutputWithContext(ctx context.Context) DistributionOriginGroupsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginGroupsPtrOutput)
}

// A complex data type for the origin groups specified for a distribution.
type DistributionOriginGroupsOutput struct{ *pulumi.OutputState }

func (DistributionOriginGroupsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginGroups)(nil)).Elem()
}

func (o DistributionOriginGroupsOutput) ToDistributionOriginGroupsOutput() DistributionOriginGroupsOutput {
	return o
}

func (o DistributionOriginGroupsOutput) ToDistributionOriginGroupsOutputWithContext(ctx context.Context) DistributionOriginGroupsOutput {
	return o
}

func (o DistributionOriginGroupsOutput) ToDistributionOriginGroupsPtrOutput() DistributionOriginGroupsPtrOutput {
	return o.ToDistributionOriginGroupsPtrOutputWithContext(context.Background())
}

func (o DistributionOriginGroupsOutput) ToDistributionOriginGroupsPtrOutputWithContext(ctx context.Context) DistributionOriginGroupsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionOriginGroups) *DistributionOriginGroups {
		return &v
	}).(DistributionOriginGroupsPtrOutput)
}

// The items (origin groups) in a distribution.
func (o DistributionOriginGroupsOutput) Items() DistributionOriginGroupArrayOutput {
	return o.ApplyT(func(v DistributionOriginGroups) []DistributionOriginGroup { return v.Items }).(DistributionOriginGroupArrayOutput)
}

// The number of origin groups.
func (o DistributionOriginGroupsOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v DistributionOriginGroups) int { return v.Quantity }).(pulumi.IntOutput)
}

type DistributionOriginGroupsPtrOutput struct{ *pulumi.OutputState }

func (DistributionOriginGroupsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionOriginGroups)(nil)).Elem()
}

func (o DistributionOriginGroupsPtrOutput) ToDistributionOriginGroupsPtrOutput() DistributionOriginGroupsPtrOutput {
	return o
}

func (o DistributionOriginGroupsPtrOutput) ToDistributionOriginGroupsPtrOutputWithContext(ctx context.Context) DistributionOriginGroupsPtrOutput {
	return o
}

func (o DistributionOriginGroupsPtrOutput) Elem() DistributionOriginGroupsOutput {
	return o.ApplyT(func(v *DistributionOriginGroups) DistributionOriginGroups {
		if v != nil {
			return *v
		}
		var ret DistributionOriginGroups
		return ret
	}).(DistributionOriginGroupsOutput)
}

// The items (origin groups) in a distribution.
func (o DistributionOriginGroupsPtrOutput) Items() DistributionOriginGroupArrayOutput {
	return o.ApplyT(func(v *DistributionOriginGroups) []DistributionOriginGroup {
		if v == nil {
			return nil
		}
		return v.Items
	}).(DistributionOriginGroupArrayOutput)
}

// The number of origin groups.
func (o DistributionOriginGroupsPtrOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionOriginGroups) *int {
		if v == nil {
			return nil
		}
		return &v.Quantity
	}).(pulumi.IntPtrOutput)
}

// CloudFront Origin Shield.
//
//	Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*.
type DistributionOriginShield struct {
	// A flag that specifies whether Origin Shield is enabled.
	//  When it's enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it's disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.
	Enabled *bool `pulumi:"enabled"`
	// The AWS-Region for Origin Shield.
	//  Specify the AWS-Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as ``us-east-2``.
	//  When you enable CloudFront Origin Shield, you must specify the AWS-Region for Origin Shield. For the list of AWS-Regions that you can specify, and for help choosing the best Region for your origin, see [Choosing the for Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html#choose-origin-shield-region) in the *Amazon CloudFront Developer Guide*.
	OriginShieldRegion *string `pulumi:"originShieldRegion"`
}

// DistributionOriginShieldInput is an input type that accepts DistributionOriginShieldArgs and DistributionOriginShieldOutput values.
// You can construct a concrete instance of `DistributionOriginShieldInput` via:
//
//	DistributionOriginShieldArgs{...}
type DistributionOriginShieldInput interface {
	pulumi.Input

	ToDistributionOriginShieldOutput() DistributionOriginShieldOutput
	ToDistributionOriginShieldOutputWithContext(context.Context) DistributionOriginShieldOutput
}

// CloudFront Origin Shield.
//
//	Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*.
type DistributionOriginShieldArgs struct {
	// A flag that specifies whether Origin Shield is enabled.
	//  When it's enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it's disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The AWS-Region for Origin Shield.
	//  Specify the AWS-Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as ``us-east-2``.
	//  When you enable CloudFront Origin Shield, you must specify the AWS-Region for Origin Shield. For the list of AWS-Regions that you can specify, and for help choosing the best Region for your origin, see [Choosing the for Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html#choose-origin-shield-region) in the *Amazon CloudFront Developer Guide*.
	OriginShieldRegion pulumi.StringPtrInput `pulumi:"originShieldRegion"`
}

func (DistributionOriginShieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginShield)(nil)).Elem()
}

func (i DistributionOriginShieldArgs) ToDistributionOriginShieldOutput() DistributionOriginShieldOutput {
	return i.ToDistributionOriginShieldOutputWithContext(context.Background())
}

func (i DistributionOriginShieldArgs) ToDistributionOriginShieldOutputWithContext(ctx context.Context) DistributionOriginShieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginShieldOutput)
}

func (i DistributionOriginShieldArgs) ToDistributionOriginShieldPtrOutput() DistributionOriginShieldPtrOutput {
	return i.ToDistributionOriginShieldPtrOutputWithContext(context.Background())
}

func (i DistributionOriginShieldArgs) ToDistributionOriginShieldPtrOutputWithContext(ctx context.Context) DistributionOriginShieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginShieldOutput).ToDistributionOriginShieldPtrOutputWithContext(ctx)
}

// DistributionOriginShieldPtrInput is an input type that accepts DistributionOriginShieldArgs, DistributionOriginShieldPtr and DistributionOriginShieldPtrOutput values.
// You can construct a concrete instance of `DistributionOriginShieldPtrInput` via:
//
//	        DistributionOriginShieldArgs{...}
//
//	or:
//
//	        nil
type DistributionOriginShieldPtrInput interface {
	pulumi.Input

	ToDistributionOriginShieldPtrOutput() DistributionOriginShieldPtrOutput
	ToDistributionOriginShieldPtrOutputWithContext(context.Context) DistributionOriginShieldPtrOutput
}

type distributionOriginShieldPtrType DistributionOriginShieldArgs

func DistributionOriginShieldPtr(v *DistributionOriginShieldArgs) DistributionOriginShieldPtrInput {
	return (*distributionOriginShieldPtrType)(v)
}

func (*distributionOriginShieldPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionOriginShield)(nil)).Elem()
}

func (i *distributionOriginShieldPtrType) ToDistributionOriginShieldPtrOutput() DistributionOriginShieldPtrOutput {
	return i.ToDistributionOriginShieldPtrOutputWithContext(context.Background())
}

func (i *distributionOriginShieldPtrType) ToDistributionOriginShieldPtrOutputWithContext(ctx context.Context) DistributionOriginShieldPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginShieldPtrOutput)
}

// CloudFront Origin Shield.
//
//	Using Origin Shield can help reduce the load on your origin. For more information, see [Using Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html) in the *Amazon CloudFront Developer Guide*.
type DistributionOriginShieldOutput struct{ *pulumi.OutputState }

func (DistributionOriginShieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOriginShield)(nil)).Elem()
}

func (o DistributionOriginShieldOutput) ToDistributionOriginShieldOutput() DistributionOriginShieldOutput {
	return o
}

func (o DistributionOriginShieldOutput) ToDistributionOriginShieldOutputWithContext(ctx context.Context) DistributionOriginShieldOutput {
	return o
}

func (o DistributionOriginShieldOutput) ToDistributionOriginShieldPtrOutput() DistributionOriginShieldPtrOutput {
	return o.ToDistributionOriginShieldPtrOutputWithContext(context.Background())
}

func (o DistributionOriginShieldOutput) ToDistributionOriginShieldPtrOutputWithContext(ctx context.Context) DistributionOriginShieldPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionOriginShield) *DistributionOriginShield {
		return &v
	}).(DistributionOriginShieldPtrOutput)
}

// A flag that specifies whether Origin Shield is enabled.
//
//	When it's enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it's disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.
func (o DistributionOriginShieldOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionOriginShield) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The AWS-Region for Origin Shield.
//
//	Specify the AWS-Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as ``us-east-2``.
//	When you enable CloudFront Origin Shield, you must specify the AWS-Region for Origin Shield. For the list of AWS-Regions that you can specify, and for help choosing the best Region for your origin, see [Choosing the for Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html#choose-origin-shield-region) in the *Amazon CloudFront Developer Guide*.
func (o DistributionOriginShieldOutput) OriginShieldRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionOriginShield) *string { return v.OriginShieldRegion }).(pulumi.StringPtrOutput)
}

type DistributionOriginShieldPtrOutput struct{ *pulumi.OutputState }

func (DistributionOriginShieldPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionOriginShield)(nil)).Elem()
}

func (o DistributionOriginShieldPtrOutput) ToDistributionOriginShieldPtrOutput() DistributionOriginShieldPtrOutput {
	return o
}

func (o DistributionOriginShieldPtrOutput) ToDistributionOriginShieldPtrOutputWithContext(ctx context.Context) DistributionOriginShieldPtrOutput {
	return o
}

func (o DistributionOriginShieldPtrOutput) Elem() DistributionOriginShieldOutput {
	return o.ApplyT(func(v *DistributionOriginShield) DistributionOriginShield {
		if v != nil {
			return *v
		}
		var ret DistributionOriginShield
		return ret
	}).(DistributionOriginShieldOutput)
}

// A flag that specifies whether Origin Shield is enabled.
//
//	When it's enabled, CloudFront routes all requests through Origin Shield, which can help protect your origin. When it's disabled, CloudFront might send requests directly to your origin from multiple edge locations or regional edge caches.
func (o DistributionOriginShieldPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DistributionOriginShield) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The AWS-Region for Origin Shield.
//
//	Specify the AWS-Region that has the lowest latency to your origin. To specify a region, use the region code, not the region name. For example, specify the US East (Ohio) region as ``us-east-2``.
//	When you enable CloudFront Origin Shield, you must specify the AWS-Region for Origin Shield. For the list of AWS-Regions that you can specify, and for help choosing the best Region for your origin, see [Choosing the for Origin Shield](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/origin-shield.html#choose-origin-shield-region) in the *Amazon CloudFront Developer Guide*.
func (o DistributionOriginShieldPtrOutput) OriginShieldRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionOriginShield) *string {
		if v == nil {
			return nil
		}
		return v.OriginShieldRegion
	}).(pulumi.StringPtrOutput)
}

// A complex type that identifies ways in which you want to restrict distribution of your content.
type DistributionRestrictions struct {
	// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
	GeoRestriction DistributionGeoRestriction `pulumi:"geoRestriction"`
}

// DistributionRestrictionsInput is an input type that accepts DistributionRestrictionsArgs and DistributionRestrictionsOutput values.
// You can construct a concrete instance of `DistributionRestrictionsInput` via:
//
//	DistributionRestrictionsArgs{...}
type DistributionRestrictionsInput interface {
	pulumi.Input

	ToDistributionRestrictionsOutput() DistributionRestrictionsOutput
	ToDistributionRestrictionsOutputWithContext(context.Context) DistributionRestrictionsOutput
}

// A complex type that identifies ways in which you want to restrict distribution of your content.
type DistributionRestrictionsArgs struct {
	// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using ``MaxMind`` GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
	GeoRestriction DistributionGeoRestrictionInput `pulumi:"geoRestriction"`
}

func (DistributionRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRestrictions)(nil)).Elem()
}

func (i DistributionRestrictionsArgs) ToDistributionRestrictionsOutput() DistributionRestrictionsOutput {
	return i.ToDistributionRestrictionsOutputWithContext(context.Background())
}

func (i DistributionRestrictionsArgs) ToDistributionRestrictionsOutputWithContext(ctx context.Context) DistributionRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRestrictionsOutput)
}

func (i DistributionRestrictionsArgs) ToDistributionRestrictionsPtrOutput() DistributionRestrictionsPtrOutput {
	return i.ToDistributionRestrictionsPtrOutputWithContext(context.Background())
}

func (i DistributionRestrictionsArgs) ToDistributionRestrictionsPtrOutputWithContext(ctx context.Context) DistributionRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRestrictionsOutput).ToDistributionRestrictionsPtrOutputWithContext(ctx)
}

// DistributionRestrictionsPtrInput is an input type that accepts DistributionRestrictionsArgs, DistributionRestrictionsPtr and DistributionRestrictionsPtrOutput values.
// You can construct a concrete instance of `DistributionRestrictionsPtrInput` via:
//
//	        DistributionRestrictionsArgs{...}
//
//	or:
//
//	        nil
type DistributionRestrictionsPtrInput interface {
	pulumi.Input

	ToDistributionRestrictionsPtrOutput() DistributionRestrictionsPtrOutput
	ToDistributionRestrictionsPtrOutputWithContext(context.Context) DistributionRestrictionsPtrOutput
}

type distributionRestrictionsPtrType DistributionRestrictionsArgs

func DistributionRestrictionsPtr(v *DistributionRestrictionsArgs) DistributionRestrictionsPtrInput {
	return (*distributionRestrictionsPtrType)(v)
}

func (*distributionRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionRestrictions)(nil)).Elem()
}

func (i *distributionRestrictionsPtrType) ToDistributionRestrictionsPtrOutput() DistributionRestrictionsPtrOutput {
	return i.ToDistributionRestrictionsPtrOutputWithContext(context.Background())
}

func (i *distributionRestrictionsPtrType) ToDistributionRestrictionsPtrOutputWithContext(ctx context.Context) DistributionRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionRestrictionsPtrOutput)
}

// A complex type that identifies ways in which you want to restrict distribution of your content.
type DistributionRestrictionsOutput struct{ *pulumi.OutputState }

func (DistributionRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionRestrictions)(nil)).Elem()
}

func (o DistributionRestrictionsOutput) ToDistributionRestrictionsOutput() DistributionRestrictionsOutput {
	return o
}

func (o DistributionRestrictionsOutput) ToDistributionRestrictionsOutputWithContext(ctx context.Context) DistributionRestrictionsOutput {
	return o
}

func (o DistributionRestrictionsOutput) ToDistributionRestrictionsPtrOutput() DistributionRestrictionsPtrOutput {
	return o.ToDistributionRestrictionsPtrOutputWithContext(context.Background())
}

func (o DistributionRestrictionsOutput) ToDistributionRestrictionsPtrOutputWithContext(ctx context.Context) DistributionRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionRestrictions) *DistributionRestrictions {
		return &v
	}).(DistributionRestrictionsPtrOutput)
}

// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
func (o DistributionRestrictionsOutput) GeoRestriction() DistributionGeoRestrictionOutput {
	return o.ApplyT(func(v DistributionRestrictions) DistributionGeoRestriction { return v.GeoRestriction }).(DistributionGeoRestrictionOutput)
}

type DistributionRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (DistributionRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionRestrictions)(nil)).Elem()
}

func (o DistributionRestrictionsPtrOutput) ToDistributionRestrictionsPtrOutput() DistributionRestrictionsPtrOutput {
	return o
}

func (o DistributionRestrictionsPtrOutput) ToDistributionRestrictionsPtrOutputWithContext(ctx context.Context) DistributionRestrictionsPtrOutput {
	return o
}

func (o DistributionRestrictionsPtrOutput) Elem() DistributionRestrictionsOutput {
	return o.ApplyT(func(v *DistributionRestrictions) DistributionRestrictions {
		if v != nil {
			return *v
		}
		var ret DistributionRestrictions
		return ret
	}).(DistributionRestrictionsOutput)
}

// A complex type that controls the countries in which your content is distributed. CF determines the location of your users using “MaxMind“ GeoIP databases. To disable geo restriction, remove the [Restrictions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cloudfront-distribution-distributionconfig.html#cfn-cloudfront-distribution-distributionconfig-restrictions) property from your stack template.
func (o DistributionRestrictionsPtrOutput) GeoRestriction() DistributionGeoRestrictionPtrOutput {
	return o.ApplyT(func(v *DistributionRestrictions) *DistributionGeoRestriction {
		if v == nil {
			return nil
		}
		return &v.GeoRestriction
	}).(DistributionGeoRestrictionPtrOutput)
}

// A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use the “CustomOriginConfig“ element instead.
type DistributionS3OriginConfig struct {
	// The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can *only* access objects in an Amazon S3 bucket through CloudFront. The format of the value is:
	//  origin-access-identity/cloudfront/*ID-of-origin-access-identity*
	//  where ``ID-of-origin-access-identity`` is the value that CloudFront returned in the ``ID`` element when you created the origin access identity.
	//  If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.
	//  To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty ``OriginAccessIdentity`` element.
	//  To replace the origin access identity, update the distribution configuration and specify the new origin access identity.
	//  For more information about the origin access identity, see [Serving Private Content through CloudFront](https://d
	OriginAccessIdentity *string `pulumi:"originAccessIdentity"`
}

// DistributionS3OriginConfigInput is an input type that accepts DistributionS3OriginConfigArgs and DistributionS3OriginConfigOutput values.
// You can construct a concrete instance of `DistributionS3OriginConfigInput` via:
//
//	DistributionS3OriginConfigArgs{...}
type DistributionS3OriginConfigInput interface {
	pulumi.Input

	ToDistributionS3OriginConfigOutput() DistributionS3OriginConfigOutput
	ToDistributionS3OriginConfigOutputWithContext(context.Context) DistributionS3OriginConfigOutput
}

// A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use the “CustomOriginConfig“ element instead.
type DistributionS3OriginConfigArgs struct {
	// The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can *only* access objects in an Amazon S3 bucket through CloudFront. The format of the value is:
	//  origin-access-identity/cloudfront/*ID-of-origin-access-identity*
	//  where ``ID-of-origin-access-identity`` is the value that CloudFront returned in the ``ID`` element when you created the origin access identity.
	//  If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.
	//  To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty ``OriginAccessIdentity`` element.
	//  To replace the origin access identity, update the distribution configuration and specify the new origin access identity.
	//  For more information about the origin access identity, see [Serving Private Content through CloudFront](https://d
	OriginAccessIdentity pulumi.StringPtrInput `pulumi:"originAccessIdentity"`
}

func (DistributionS3OriginConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionS3OriginConfig)(nil)).Elem()
}

func (i DistributionS3OriginConfigArgs) ToDistributionS3OriginConfigOutput() DistributionS3OriginConfigOutput {
	return i.ToDistributionS3OriginConfigOutputWithContext(context.Background())
}

func (i DistributionS3OriginConfigArgs) ToDistributionS3OriginConfigOutputWithContext(ctx context.Context) DistributionS3OriginConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionS3OriginConfigOutput)
}

func (i DistributionS3OriginConfigArgs) ToDistributionS3OriginConfigPtrOutput() DistributionS3OriginConfigPtrOutput {
	return i.ToDistributionS3OriginConfigPtrOutputWithContext(context.Background())
}

func (i DistributionS3OriginConfigArgs) ToDistributionS3OriginConfigPtrOutputWithContext(ctx context.Context) DistributionS3OriginConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionS3OriginConfigOutput).ToDistributionS3OriginConfigPtrOutputWithContext(ctx)
}

// DistributionS3OriginConfigPtrInput is an input type that accepts DistributionS3OriginConfigArgs, DistributionS3OriginConfigPtr and DistributionS3OriginConfigPtrOutput values.
// You can construct a concrete instance of `DistributionS3OriginConfigPtrInput` via:
//
//	        DistributionS3OriginConfigArgs{...}
//
//	or:
//
//	        nil
type DistributionS3OriginConfigPtrInput interface {
	pulumi.Input

	ToDistributionS3OriginConfigPtrOutput() DistributionS3OriginConfigPtrOutput
	ToDistributionS3OriginConfigPtrOutputWithContext(context.Context) DistributionS3OriginConfigPtrOutput
}

type distributionS3OriginConfigPtrType DistributionS3OriginConfigArgs

func DistributionS3OriginConfigPtr(v *DistributionS3OriginConfigArgs) DistributionS3OriginConfigPtrInput {
	return (*distributionS3OriginConfigPtrType)(v)
}

func (*distributionS3OriginConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionS3OriginConfig)(nil)).Elem()
}

func (i *distributionS3OriginConfigPtrType) ToDistributionS3OriginConfigPtrOutput() DistributionS3OriginConfigPtrOutput {
	return i.ToDistributionS3OriginConfigPtrOutputWithContext(context.Background())
}

func (i *distributionS3OriginConfigPtrType) ToDistributionS3OriginConfigPtrOutputWithContext(ctx context.Context) DistributionS3OriginConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionS3OriginConfigPtrOutput)
}

// A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin or an S3 bucket that is configured as a website endpoint, use the “CustomOriginConfig“ element instead.
type DistributionS3OriginConfigOutput struct{ *pulumi.OutputState }

func (DistributionS3OriginConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionS3OriginConfig)(nil)).Elem()
}

func (o DistributionS3OriginConfigOutput) ToDistributionS3OriginConfigOutput() DistributionS3OriginConfigOutput {
	return o
}

func (o DistributionS3OriginConfigOutput) ToDistributionS3OriginConfigOutputWithContext(ctx context.Context) DistributionS3OriginConfigOutput {
	return o
}

func (o DistributionS3OriginConfigOutput) ToDistributionS3OriginConfigPtrOutput() DistributionS3OriginConfigPtrOutput {
	return o.ToDistributionS3OriginConfigPtrOutputWithContext(context.Background())
}

func (o DistributionS3OriginConfigOutput) ToDistributionS3OriginConfigPtrOutputWithContext(ctx context.Context) DistributionS3OriginConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionS3OriginConfig) *DistributionS3OriginConfig {
		return &v
	}).(DistributionS3OriginConfigPtrOutput)
}

// The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can *only* access objects in an Amazon S3 bucket through CloudFront. The format of the value is:
//
//	origin-access-identity/cloudfront/*ID-of-origin-access-identity*
//	where ``ID-of-origin-access-identity`` is the value that CloudFront returned in the ``ID`` element when you created the origin access identity.
//	If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.
//	To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty ``OriginAccessIdentity`` element.
//	To replace the origin access identity, update the distribution configuration and specify the new origin access identity.
//	For more information about the origin access identity, see [Serving Private Content through CloudFront](https://d
func (o DistributionS3OriginConfigOutput) OriginAccessIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionS3OriginConfig) *string { return v.OriginAccessIdentity }).(pulumi.StringPtrOutput)
}

type DistributionS3OriginConfigPtrOutput struct{ *pulumi.OutputState }

func (DistributionS3OriginConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionS3OriginConfig)(nil)).Elem()
}

func (o DistributionS3OriginConfigPtrOutput) ToDistributionS3OriginConfigPtrOutput() DistributionS3OriginConfigPtrOutput {
	return o
}

func (o DistributionS3OriginConfigPtrOutput) ToDistributionS3OriginConfigPtrOutputWithContext(ctx context.Context) DistributionS3OriginConfigPtrOutput {
	return o
}

func (o DistributionS3OriginConfigPtrOutput) Elem() DistributionS3OriginConfigOutput {
	return o.ApplyT(func(v *DistributionS3OriginConfig) DistributionS3OriginConfig {
		if v != nil {
			return *v
		}
		var ret DistributionS3OriginConfig
		return ret
	}).(DistributionS3OriginConfigOutput)
}

// The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that viewers can *only* access objects in an Amazon S3 bucket through CloudFront. The format of the value is:
//
//	origin-access-identity/cloudfront/*ID-of-origin-access-identity*
//	where ``ID-of-origin-access-identity`` is the value that CloudFront returned in the ``ID`` element when you created the origin access identity.
//	If you want viewers to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty ``OriginAccessIdentity`` element.
//	To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty ``OriginAccessIdentity`` element.
//	To replace the origin access identity, update the distribution configuration and specify the new origin access identity.
//	For more information about the origin access identity, see [Serving Private Content through CloudFront](https://d
func (o DistributionS3OriginConfigPtrOutput) OriginAccessIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionS3OriginConfig) *string {
		if v == nil {
			return nil
		}
		return v.OriginAccessIdentity
	}).(pulumi.StringPtrOutput)
}

// A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
type DistributionStatusCodes struct {
	// The items (status codes) for an origin group.
	Items []int `pulumi:"items"`
	// The number of status codes.
	Quantity int `pulumi:"quantity"`
}

// DistributionStatusCodesInput is an input type that accepts DistributionStatusCodesArgs and DistributionStatusCodesOutput values.
// You can construct a concrete instance of `DistributionStatusCodesInput` via:
//
//	DistributionStatusCodesArgs{...}
type DistributionStatusCodesInput interface {
	pulumi.Input

	ToDistributionStatusCodesOutput() DistributionStatusCodesOutput
	ToDistributionStatusCodesOutputWithContext(context.Context) DistributionStatusCodesOutput
}

// A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
type DistributionStatusCodesArgs struct {
	// The items (status codes) for an origin group.
	Items pulumi.IntArrayInput `pulumi:"items"`
	// The number of status codes.
	Quantity pulumi.IntInput `pulumi:"quantity"`
}

func (DistributionStatusCodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionStatusCodes)(nil)).Elem()
}

func (i DistributionStatusCodesArgs) ToDistributionStatusCodesOutput() DistributionStatusCodesOutput {
	return i.ToDistributionStatusCodesOutputWithContext(context.Background())
}

func (i DistributionStatusCodesArgs) ToDistributionStatusCodesOutputWithContext(ctx context.Context) DistributionStatusCodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionStatusCodesOutput)
}

// A complex data type for the status codes that you specify that, when returned by a primary origin, trigger CloudFront to failover to a second origin.
type DistributionStatusCodesOutput struct{ *pulumi.OutputState }

func (DistributionStatusCodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionStatusCodes)(nil)).Elem()
}

func (o DistributionStatusCodesOutput) ToDistributionStatusCodesOutput() DistributionStatusCodesOutput {
	return o
}

func (o DistributionStatusCodesOutput) ToDistributionStatusCodesOutputWithContext(ctx context.Context) DistributionStatusCodesOutput {
	return o
}

// The items (status codes) for an origin group.
func (o DistributionStatusCodesOutput) Items() pulumi.IntArrayOutput {
	return o.ApplyT(func(v DistributionStatusCodes) []int { return v.Items }).(pulumi.IntArrayOutput)
}

// The number of status codes.
func (o DistributionStatusCodesOutput) Quantity() pulumi.IntOutput {
	return o.ApplyT(func(v DistributionStatusCodes) int { return v.Quantity }).(pulumi.IntOutput)
}

// A complex type that contains “Tag“ key and “Tag“ value.
type DistributionTag struct {
	// A string that contains ``Tag`` key.
	//  The string length should be between 1 and 128 characters. Valid characters include ``a-z``, ``A-Z``, ``0-9``, space, and the special characters ``_ - . : / = + @``.
	Key string `pulumi:"key"`
	// A string that contains an optional ``Tag`` value.
	//  The string length should be between 0 and 256 characters. Valid characters include ``a-z``, ``A-Z``, ``0-9``, space, and the special characters ``_ - . : / = + @``.
	Value string `pulumi:"value"`
}

// A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers.
//
//	If the distribution doesn't use ``Aliases`` (also known as alternate domain names or CNAMEs)—that is, if the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``—set ``CloudFrontDefaultCertificate`` to ``true`` and leave all other fields empty.
//	If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), use the fields in this type to specify the following settings:
//	 +  Which viewers the distribution accepts HTTPS connections from: only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication) (recommended), or all viewers including those that don't support SNI.
//	 +  To accept HTTPS connections from only viewers that support SNI, set ``SSLSupportMethod`` to ``sni-only``. This is recommended. Most browsers and clients support SNI. (In CloudFormation, the field n
type DistributionViewerCertificate struct {
	// In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization.
	//   If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (``us-east-1``).
	//  If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
	AcmCertificateArn *string `pulumi:"acmCertificateArn"`
	// If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``.
	//  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following fields:
	//   +   ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both)
	//   +   ``MinimumProtocolVersion``
	//   +   ``SslSupportMethod``
	CloudFrontDefaultCertificate *bool `pulumi:"cloudFrontDefaultCertificate"`
	// In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization.
	//   If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate.
	//  If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
	IamCertificateId *string `pulumi:"iamCertificateId"`
	// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:
	//   +  The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.
	//   +  The ciphers that CloudFront can use to encrypt the content that it returns to viewers.
	//
	//  For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.
	//   On the CloudFront console, this setting is called *Security Policy*.
	//   When you're using SNI only (you set ``SSLSupportMethod`` to ``sni-onl
	MinimumProtocolVersion *string `pulumi:"minimumProtocolVersion"`
	// In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization.
	//   If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.
	//   +   ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.
	//   +   ``vip`` – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.
	//   +   ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).
	SslSupportMethod *string `pulumi:"sslSupportMethod"`
}

// DistributionViewerCertificateInput is an input type that accepts DistributionViewerCertificateArgs and DistributionViewerCertificateOutput values.
// You can construct a concrete instance of `DistributionViewerCertificateInput` via:
//
//	DistributionViewerCertificateArgs{...}
type DistributionViewerCertificateInput interface {
	pulumi.Input

	ToDistributionViewerCertificateOutput() DistributionViewerCertificateOutput
	ToDistributionViewerCertificateOutputWithContext(context.Context) DistributionViewerCertificateOutput
}

// A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers.
//
//	If the distribution doesn't use ``Aliases`` (also known as alternate domain names or CNAMEs)—that is, if the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``—set ``CloudFrontDefaultCertificate`` to ``true`` and leave all other fields empty.
//	If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), use the fields in this type to specify the following settings:
//	 +  Which viewers the distribution accepts HTTPS connections from: only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication) (recommended), or all viewers including those that don't support SNI.
//	 +  To accept HTTPS connections from only viewers that support SNI, set ``SSLSupportMethod`` to ``sni-only``. This is recommended. Most browsers and clients support SNI. (In CloudFormation, the field n
type DistributionViewerCertificateArgs struct {
	// In CloudFormation, this field name is ``AcmCertificateArn``. Note the different capitalization.
	//   If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (``us-east-1``).
	//  If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
	AcmCertificateArn pulumi.StringPtrInput `pulumi:"acmCertificateArn"`
	// If the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``, set this field to ``true``.
	//  If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following fields:
	//   +   ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both)
	//   +   ``MinimumProtocolVersion``
	//   +   ``SslSupportMethod``
	CloudFrontDefaultCertificate pulumi.BoolPtrInput `pulumi:"cloudFrontDefaultCertificate"`
	// In CloudFormation, this field name is ``IamCertificateId``. Note the different capitalization.
	//   If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate.
	//  If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
	IamCertificateId pulumi.StringPtrInput `pulumi:"iamCertificateId"`
	// If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:
	//   +  The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.
	//   +  The ciphers that CloudFront can use to encrypt the content that it returns to viewers.
	//
	//  For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.
	//   On the CloudFront console, this setting is called *Security Policy*.
	//   When you're using SNI only (you set ``SSLSupportMethod`` to ``sni-onl
	MinimumProtocolVersion pulumi.StringPtrInput `pulumi:"minimumProtocolVersion"`
	// In CloudFormation, this field name is ``SslSupportMethod``. Note the different capitalization.
	//   If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.
	//   +   ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.
	//   +   ``vip`` – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.
	//   +   ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).
	SslSupportMethod pulumi.StringPtrInput `pulumi:"sslSupportMethod"`
}

func (DistributionViewerCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionViewerCertificate)(nil)).Elem()
}

func (i DistributionViewerCertificateArgs) ToDistributionViewerCertificateOutput() DistributionViewerCertificateOutput {
	return i.ToDistributionViewerCertificateOutputWithContext(context.Background())
}

func (i DistributionViewerCertificateArgs) ToDistributionViewerCertificateOutputWithContext(ctx context.Context) DistributionViewerCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionViewerCertificateOutput)
}

func (i DistributionViewerCertificateArgs) ToDistributionViewerCertificatePtrOutput() DistributionViewerCertificatePtrOutput {
	return i.ToDistributionViewerCertificatePtrOutputWithContext(context.Background())
}

func (i DistributionViewerCertificateArgs) ToDistributionViewerCertificatePtrOutputWithContext(ctx context.Context) DistributionViewerCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionViewerCertificateOutput).ToDistributionViewerCertificatePtrOutputWithContext(ctx)
}

// DistributionViewerCertificatePtrInput is an input type that accepts DistributionViewerCertificateArgs, DistributionViewerCertificatePtr and DistributionViewerCertificatePtrOutput values.
// You can construct a concrete instance of `DistributionViewerCertificatePtrInput` via:
//
//	        DistributionViewerCertificateArgs{...}
//
//	or:
//
//	        nil
type DistributionViewerCertificatePtrInput interface {
	pulumi.Input

	ToDistributionViewerCertificatePtrOutput() DistributionViewerCertificatePtrOutput
	ToDistributionViewerCertificatePtrOutputWithContext(context.Context) DistributionViewerCertificatePtrOutput
}

type distributionViewerCertificatePtrType DistributionViewerCertificateArgs

func DistributionViewerCertificatePtr(v *DistributionViewerCertificateArgs) DistributionViewerCertificatePtrInput {
	return (*distributionViewerCertificatePtrType)(v)
}

func (*distributionViewerCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionViewerCertificate)(nil)).Elem()
}

func (i *distributionViewerCertificatePtrType) ToDistributionViewerCertificatePtrOutput() DistributionViewerCertificatePtrOutput {
	return i.ToDistributionViewerCertificatePtrOutputWithContext(context.Background())
}

func (i *distributionViewerCertificatePtrType) ToDistributionViewerCertificatePtrOutputWithContext(ctx context.Context) DistributionViewerCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionViewerCertificatePtrOutput)
}

// A complex type that determines the distribution's SSL/TLS configuration for communicating with viewers.
//
//	If the distribution doesn't use ``Aliases`` (also known as alternate domain names or CNAMEs)—that is, if the distribution uses the CloudFront domain name such as ``d111111abcdef8.cloudfront.net``—set ``CloudFrontDefaultCertificate`` to ``true`` and leave all other fields empty.
//	If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), use the fields in this type to specify the following settings:
//	 +  Which viewers the distribution accepts HTTPS connections from: only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication) (recommended), or all viewers including those that don't support SNI.
//	 +  To accept HTTPS connections from only viewers that support SNI, set ``SSLSupportMethod`` to ``sni-only``. This is recommended. Most browsers and clients support SNI. (In CloudFormation, the field n
type DistributionViewerCertificateOutput struct{ *pulumi.OutputState }

func (DistributionViewerCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionViewerCertificate)(nil)).Elem()
}

func (o DistributionViewerCertificateOutput) ToDistributionViewerCertificateOutput() DistributionViewerCertificateOutput {
	return o
}

func (o DistributionViewerCertificateOutput) ToDistributionViewerCertificateOutputWithContext(ctx context.Context) DistributionViewerCertificateOutput {
	return o
}

func (o DistributionViewerCertificateOutput) ToDistributionViewerCertificatePtrOutput() DistributionViewerCertificatePtrOutput {
	return o.ToDistributionViewerCertificatePtrOutputWithContext(context.Background())
}

func (o DistributionViewerCertificateOutput) ToDistributionViewerCertificatePtrOutputWithContext(ctx context.Context) DistributionViewerCertificatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionViewerCertificate) *DistributionViewerCertificate {
		return &v
	}).(DistributionViewerCertificatePtrOutput)
}

// In CloudFormation, this field name is “AcmCertificateArn“. Note the different capitalization.
//
//	 If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (``us-east-1``).
//	If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
func (o DistributionViewerCertificateOutput) AcmCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionViewerCertificate) *string { return v.AcmCertificateArn }).(pulumi.StringPtrOutput)
}

// If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“, set this field to “true“.
//
//	If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following fields:
//	 +   ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both)
//	 +   ``MinimumProtocolVersion``
//	 +   ``SslSupportMethod``
func (o DistributionViewerCertificateOutput) CloudFrontDefaultCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionViewerCertificate) *bool { return v.CloudFrontDefaultCertificate }).(pulumi.BoolPtrOutput)
}

// In CloudFormation, this field name is “IamCertificateId“. Note the different capitalization.
//
//	 If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate.
//	If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
func (o DistributionViewerCertificateOutput) IamCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionViewerCertificate) *string { return v.IamCertificateId }).(pulumi.StringPtrOutput)
}

// If the distribution uses “Aliases“ (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:
//
//   - The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.
//
//   - The ciphers that CloudFront can use to encrypt the content that it returns to viewers.
//
//     For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.
//     On the CloudFront console, this setting is called *Security Policy*.
//     When you're using SNI only (you set “SSLSupportMethod“ to “sni-onl
func (o DistributionViewerCertificateOutput) MinimumProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionViewerCertificate) *string { return v.MinimumProtocolVersion }).(pulumi.StringPtrOutput)
}

// In CloudFormation, this field name is “SslSupportMethod“. Note the different capitalization.
//
//	If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.
//	+   ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.
//	+   ``vip`` – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.
//	+   ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).
func (o DistributionViewerCertificateOutput) SslSupportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionViewerCertificate) *string { return v.SslSupportMethod }).(pulumi.StringPtrOutput)
}

type DistributionViewerCertificatePtrOutput struct{ *pulumi.OutputState }

func (DistributionViewerCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionViewerCertificate)(nil)).Elem()
}

func (o DistributionViewerCertificatePtrOutput) ToDistributionViewerCertificatePtrOutput() DistributionViewerCertificatePtrOutput {
	return o
}

func (o DistributionViewerCertificatePtrOutput) ToDistributionViewerCertificatePtrOutputWithContext(ctx context.Context) DistributionViewerCertificatePtrOutput {
	return o
}

func (o DistributionViewerCertificatePtrOutput) Elem() DistributionViewerCertificateOutput {
	return o.ApplyT(func(v *DistributionViewerCertificate) DistributionViewerCertificate {
		if v != nil {
			return *v
		}
		var ret DistributionViewerCertificate
		return ret
	}).(DistributionViewerCertificateOutput)
}

// In CloudFormation, this field name is “AcmCertificateArn“. Note the different capitalization.
//
//	 If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (``us-east-1``).
//	If you specify an ACM certificate ARN, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
func (o DistributionViewerCertificatePtrOutput) AcmCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionViewerCertificate) *string {
		if v == nil {
			return nil
		}
		return v.AcmCertificateArn
	}).(pulumi.StringPtrOutput)
}

// If the distribution uses the CloudFront domain name such as “d111111abcdef8.cloudfront.net“, set this field to “true“.
//
//	If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), omit this field and specify values for the following fields:
//	 +   ``AcmCertificateArn`` or ``IamCertificateId`` (specify a value for one, not both)
//	 +   ``MinimumProtocolVersion``
//	 +   ``SslSupportMethod``
func (o DistributionViewerCertificatePtrOutput) CloudFrontDefaultCertificate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DistributionViewerCertificate) *bool {
		if v == nil {
			return nil
		}
		return v.CloudFrontDefaultCertificate
	}).(pulumi.BoolPtrOutput)
}

// In CloudFormation, this field name is “IamCertificateId“. Note the different capitalization.
//
//	 If the distribution uses ``Aliases`` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [(IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate.
//	If you specify an IAM certificate ID, you must also specify values for ``MinimumProtocolVersion`` and ``SSLSupportMethod``. (In CloudFormation, the field name is ``SslSupportMethod``. Note the different capitalization.)
func (o DistributionViewerCertificatePtrOutput) IamCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionViewerCertificate) *string {
		if v == nil {
			return nil
		}
		return v.IamCertificateId
	}).(pulumi.StringPtrOutput)
}

// If the distribution uses “Aliases“ (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:
//
//   - The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.
//
//   - The ciphers that CloudFront can use to encrypt the content that it returns to viewers.
//
//     For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the *Amazon CloudFront Developer Guide*.
//     On the CloudFront console, this setting is called *Security Policy*.
//     When you're using SNI only (you set “SSLSupportMethod“ to “sni-onl
func (o DistributionViewerCertificatePtrOutput) MinimumProtocolVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionViewerCertificate) *string {
		if v == nil {
			return nil
		}
		return v.MinimumProtocolVersion
	}).(pulumi.StringPtrOutput)
}

// In CloudFormation, this field name is “SslSupportMethod“. Note the different capitalization.
//
//	If the distribution uses ``Aliases`` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.
//	+   ``sni-only`` – The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://docs.aws.amazon.com/https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.
//	+   ``vip`` – The distribution accepts HTTPS connections from all viewers including those that don't support SNI. This is not recommended, and results in additional monthly charges from CloudFront.
//	+   ``static-ip`` - Do not specify this value unless your distribution has been enabled for this feature by the CloudFront team. If you have a use case that requires static IP addresses for a distribution, contact CloudFront through the [Center](https://docs.aws.amazon.com/support/home).
func (o DistributionViewerCertificatePtrOutput) SslSupportMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionViewerCertificate) *string {
		if v == nil {
			return nil
		}
		return v.SslSupportMethod
	}).(pulumi.StringPtrOutput)
}

type FunctionConfig struct {
	Comment                   string                             `pulumi:"comment"`
	KeyValueStoreAssociations []FunctionKeyValueStoreAssociation `pulumi:"keyValueStoreAssociations"`
	Runtime                   string                             `pulumi:"runtime"`
}

// FunctionConfigInput is an input type that accepts FunctionConfigArgs and FunctionConfigOutput values.
// You can construct a concrete instance of `FunctionConfigInput` via:
//
//	FunctionConfigArgs{...}
type FunctionConfigInput interface {
	pulumi.Input

	ToFunctionConfigOutput() FunctionConfigOutput
	ToFunctionConfigOutputWithContext(context.Context) FunctionConfigOutput
}

type FunctionConfigArgs struct {
	Comment                   pulumi.StringInput                         `pulumi:"comment"`
	KeyValueStoreAssociations FunctionKeyValueStoreAssociationArrayInput `pulumi:"keyValueStoreAssociations"`
	Runtime                   pulumi.StringInput                         `pulumi:"runtime"`
}

func (FunctionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionConfig)(nil)).Elem()
}

func (i FunctionConfigArgs) ToFunctionConfigOutput() FunctionConfigOutput {
	return i.ToFunctionConfigOutputWithContext(context.Background())
}

func (i FunctionConfigArgs) ToFunctionConfigOutputWithContext(ctx context.Context) FunctionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionConfigOutput)
}

type FunctionConfigOutput struct{ *pulumi.OutputState }

func (FunctionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionConfig)(nil)).Elem()
}

func (o FunctionConfigOutput) ToFunctionConfigOutput() FunctionConfigOutput {
	return o
}

func (o FunctionConfigOutput) ToFunctionConfigOutputWithContext(ctx context.Context) FunctionConfigOutput {
	return o
}

func (o FunctionConfigOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionConfig) string { return v.Comment }).(pulumi.StringOutput)
}

func (o FunctionConfigOutput) KeyValueStoreAssociations() FunctionKeyValueStoreAssociationArrayOutput {
	return o.ApplyT(func(v FunctionConfig) []FunctionKeyValueStoreAssociation { return v.KeyValueStoreAssociations }).(FunctionKeyValueStoreAssociationArrayOutput)
}

func (o FunctionConfigOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionConfig) string { return v.Runtime }).(pulumi.StringOutput)
}

type FunctionConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionConfig)(nil)).Elem()
}

func (o FunctionConfigPtrOutput) ToFunctionConfigPtrOutput() FunctionConfigPtrOutput {
	return o
}

func (o FunctionConfigPtrOutput) ToFunctionConfigPtrOutputWithContext(ctx context.Context) FunctionConfigPtrOutput {
	return o
}

func (o FunctionConfigPtrOutput) Elem() FunctionConfigOutput {
	return o.ApplyT(func(v *FunctionConfig) FunctionConfig {
		if v != nil {
			return *v
		}
		var ret FunctionConfig
		return ret
	}).(FunctionConfigOutput)
}

func (o FunctionConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Comment
	}).(pulumi.StringPtrOutput)
}

func (o FunctionConfigPtrOutput) KeyValueStoreAssociations() FunctionKeyValueStoreAssociationArrayOutput {
	return o.ApplyT(func(v *FunctionConfig) []FunctionKeyValueStoreAssociation {
		if v == nil {
			return nil
		}
		return v.KeyValueStoreAssociations
	}).(FunctionKeyValueStoreAssociationArrayOutput)
}

func (o FunctionConfigPtrOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Runtime
	}).(pulumi.StringPtrOutput)
}

type FunctionKeyValueStoreAssociation struct {
	KeyValueStoreArn string `pulumi:"keyValueStoreArn"`
}

// FunctionKeyValueStoreAssociationInput is an input type that accepts FunctionKeyValueStoreAssociationArgs and FunctionKeyValueStoreAssociationOutput values.
// You can construct a concrete instance of `FunctionKeyValueStoreAssociationInput` via:
//
//	FunctionKeyValueStoreAssociationArgs{...}
type FunctionKeyValueStoreAssociationInput interface {
	pulumi.Input

	ToFunctionKeyValueStoreAssociationOutput() FunctionKeyValueStoreAssociationOutput
	ToFunctionKeyValueStoreAssociationOutputWithContext(context.Context) FunctionKeyValueStoreAssociationOutput
}

type FunctionKeyValueStoreAssociationArgs struct {
	KeyValueStoreArn pulumi.StringInput `pulumi:"keyValueStoreArn"`
}

func (FunctionKeyValueStoreAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionKeyValueStoreAssociation)(nil)).Elem()
}

func (i FunctionKeyValueStoreAssociationArgs) ToFunctionKeyValueStoreAssociationOutput() FunctionKeyValueStoreAssociationOutput {
	return i.ToFunctionKeyValueStoreAssociationOutputWithContext(context.Background())
}

func (i FunctionKeyValueStoreAssociationArgs) ToFunctionKeyValueStoreAssociationOutputWithContext(ctx context.Context) FunctionKeyValueStoreAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionKeyValueStoreAssociationOutput)
}

// FunctionKeyValueStoreAssociationArrayInput is an input type that accepts FunctionKeyValueStoreAssociationArray and FunctionKeyValueStoreAssociationArrayOutput values.
// You can construct a concrete instance of `FunctionKeyValueStoreAssociationArrayInput` via:
//
//	FunctionKeyValueStoreAssociationArray{ FunctionKeyValueStoreAssociationArgs{...} }
type FunctionKeyValueStoreAssociationArrayInput interface {
	pulumi.Input

	ToFunctionKeyValueStoreAssociationArrayOutput() FunctionKeyValueStoreAssociationArrayOutput
	ToFunctionKeyValueStoreAssociationArrayOutputWithContext(context.Context) FunctionKeyValueStoreAssociationArrayOutput
}

type FunctionKeyValueStoreAssociationArray []FunctionKeyValueStoreAssociationInput

func (FunctionKeyValueStoreAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionKeyValueStoreAssociation)(nil)).Elem()
}

func (i FunctionKeyValueStoreAssociationArray) ToFunctionKeyValueStoreAssociationArrayOutput() FunctionKeyValueStoreAssociationArrayOutput {
	return i.ToFunctionKeyValueStoreAssociationArrayOutputWithContext(context.Background())
}

func (i FunctionKeyValueStoreAssociationArray) ToFunctionKeyValueStoreAssociationArrayOutputWithContext(ctx context.Context) FunctionKeyValueStoreAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionKeyValueStoreAssociationArrayOutput)
}

type FunctionKeyValueStoreAssociationOutput struct{ *pulumi.OutputState }

func (FunctionKeyValueStoreAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionKeyValueStoreAssociation)(nil)).Elem()
}

func (o FunctionKeyValueStoreAssociationOutput) ToFunctionKeyValueStoreAssociationOutput() FunctionKeyValueStoreAssociationOutput {
	return o
}

func (o FunctionKeyValueStoreAssociationOutput) ToFunctionKeyValueStoreAssociationOutputWithContext(ctx context.Context) FunctionKeyValueStoreAssociationOutput {
	return o
}

func (o FunctionKeyValueStoreAssociationOutput) KeyValueStoreArn() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionKeyValueStoreAssociation) string { return v.KeyValueStoreArn }).(pulumi.StringOutput)
}

type FunctionKeyValueStoreAssociationArrayOutput struct{ *pulumi.OutputState }

func (FunctionKeyValueStoreAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FunctionKeyValueStoreAssociation)(nil)).Elem()
}

func (o FunctionKeyValueStoreAssociationArrayOutput) ToFunctionKeyValueStoreAssociationArrayOutput() FunctionKeyValueStoreAssociationArrayOutput {
	return o
}

func (o FunctionKeyValueStoreAssociationArrayOutput) ToFunctionKeyValueStoreAssociationArrayOutputWithContext(ctx context.Context) FunctionKeyValueStoreAssociationArrayOutput {
	return o
}

func (o FunctionKeyValueStoreAssociationArrayOutput) Index(i pulumi.IntInput) FunctionKeyValueStoreAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FunctionKeyValueStoreAssociation {
		return vs[0].([]FunctionKeyValueStoreAssociation)[vs[1].(int)]
	}).(FunctionKeyValueStoreAssociationOutput)
}

type FunctionMetadata struct {
	FunctionArn *string `pulumi:"functionArn"`
}

// FunctionMetadataInput is an input type that accepts FunctionMetadataArgs and FunctionMetadataOutput values.
// You can construct a concrete instance of `FunctionMetadataInput` via:
//
//	FunctionMetadataArgs{...}
type FunctionMetadataInput interface {
	pulumi.Input

	ToFunctionMetadataOutput() FunctionMetadataOutput
	ToFunctionMetadataOutputWithContext(context.Context) FunctionMetadataOutput
}

type FunctionMetadataArgs struct {
	FunctionArn pulumi.StringPtrInput `pulumi:"functionArn"`
}

func (FunctionMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionMetadata)(nil)).Elem()
}

func (i FunctionMetadataArgs) ToFunctionMetadataOutput() FunctionMetadataOutput {
	return i.ToFunctionMetadataOutputWithContext(context.Background())
}

func (i FunctionMetadataArgs) ToFunctionMetadataOutputWithContext(ctx context.Context) FunctionMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionMetadataOutput)
}

func (i FunctionMetadataArgs) ToFunctionMetadataPtrOutput() FunctionMetadataPtrOutput {
	return i.ToFunctionMetadataPtrOutputWithContext(context.Background())
}

func (i FunctionMetadataArgs) ToFunctionMetadataPtrOutputWithContext(ctx context.Context) FunctionMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionMetadataOutput).ToFunctionMetadataPtrOutputWithContext(ctx)
}

// FunctionMetadataPtrInput is an input type that accepts FunctionMetadataArgs, FunctionMetadataPtr and FunctionMetadataPtrOutput values.
// You can construct a concrete instance of `FunctionMetadataPtrInput` via:
//
//	        FunctionMetadataArgs{...}
//
//	or:
//
//	        nil
type FunctionMetadataPtrInput interface {
	pulumi.Input

	ToFunctionMetadataPtrOutput() FunctionMetadataPtrOutput
	ToFunctionMetadataPtrOutputWithContext(context.Context) FunctionMetadataPtrOutput
}

type functionMetadataPtrType FunctionMetadataArgs

func FunctionMetadataPtr(v *FunctionMetadataArgs) FunctionMetadataPtrInput {
	return (*functionMetadataPtrType)(v)
}

func (*functionMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionMetadata)(nil)).Elem()
}

func (i *functionMetadataPtrType) ToFunctionMetadataPtrOutput() FunctionMetadataPtrOutput {
	return i.ToFunctionMetadataPtrOutputWithContext(context.Background())
}

func (i *functionMetadataPtrType) ToFunctionMetadataPtrOutputWithContext(ctx context.Context) FunctionMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionMetadataPtrOutput)
}

type FunctionMetadataOutput struct{ *pulumi.OutputState }

func (FunctionMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionMetadata)(nil)).Elem()
}

func (o FunctionMetadataOutput) ToFunctionMetadataOutput() FunctionMetadataOutput {
	return o
}

func (o FunctionMetadataOutput) ToFunctionMetadataOutputWithContext(ctx context.Context) FunctionMetadataOutput {
	return o
}

func (o FunctionMetadataOutput) ToFunctionMetadataPtrOutput() FunctionMetadataPtrOutput {
	return o.ToFunctionMetadataPtrOutputWithContext(context.Background())
}

func (o FunctionMetadataOutput) ToFunctionMetadataPtrOutputWithContext(ctx context.Context) FunctionMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionMetadata) *FunctionMetadata {
		return &v
	}).(FunctionMetadataPtrOutput)
}

func (o FunctionMetadataOutput) FunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionMetadata) *string { return v.FunctionArn }).(pulumi.StringPtrOutput)
}

type FunctionMetadataPtrOutput struct{ *pulumi.OutputState }

func (FunctionMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionMetadata)(nil)).Elem()
}

func (o FunctionMetadataPtrOutput) ToFunctionMetadataPtrOutput() FunctionMetadataPtrOutput {
	return o
}

func (o FunctionMetadataPtrOutput) ToFunctionMetadataPtrOutputWithContext(ctx context.Context) FunctionMetadataPtrOutput {
	return o
}

func (o FunctionMetadataPtrOutput) Elem() FunctionMetadataOutput {
	return o.ApplyT(func(v *FunctionMetadata) FunctionMetadata {
		if v != nil {
			return *v
		}
		var ret FunctionMetadata
		return ret
	}).(FunctionMetadataOutput)
}

func (o FunctionMetadataPtrOutput) FunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionMetadata) *string {
		if v == nil {
			return nil
		}
		return v.FunctionArn
	}).(pulumi.StringPtrOutput)
}

type KeyGroupConfig struct {
	Comment *string  `pulumi:"comment"`
	Items   []string `pulumi:"items"`
	Name    string   `pulumi:"name"`
}

// KeyGroupConfigInput is an input type that accepts KeyGroupConfigArgs and KeyGroupConfigOutput values.
// You can construct a concrete instance of `KeyGroupConfigInput` via:
//
//	KeyGroupConfigArgs{...}
type KeyGroupConfigInput interface {
	pulumi.Input

	ToKeyGroupConfigOutput() KeyGroupConfigOutput
	ToKeyGroupConfigOutputWithContext(context.Context) KeyGroupConfigOutput
}

type KeyGroupConfigArgs struct {
	Comment pulumi.StringPtrInput   `pulumi:"comment"`
	Items   pulumi.StringArrayInput `pulumi:"items"`
	Name    pulumi.StringInput      `pulumi:"name"`
}

func (KeyGroupConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyGroupConfig)(nil)).Elem()
}

func (i KeyGroupConfigArgs) ToKeyGroupConfigOutput() KeyGroupConfigOutput {
	return i.ToKeyGroupConfigOutputWithContext(context.Background())
}

func (i KeyGroupConfigArgs) ToKeyGroupConfigOutputWithContext(ctx context.Context) KeyGroupConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyGroupConfigOutput)
}

type KeyGroupConfigOutput struct{ *pulumi.OutputState }

func (KeyGroupConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyGroupConfig)(nil)).Elem()
}

func (o KeyGroupConfigOutput) ToKeyGroupConfigOutput() KeyGroupConfigOutput {
	return o
}

func (o KeyGroupConfigOutput) ToKeyGroupConfigOutputWithContext(ctx context.Context) KeyGroupConfigOutput {
	return o
}

func (o KeyGroupConfigOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyGroupConfig) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o KeyGroupConfigOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KeyGroupConfig) []string { return v.Items }).(pulumi.StringArrayOutput)
}

func (o KeyGroupConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KeyGroupConfig) string { return v.Name }).(pulumi.StringOutput)
}

type KeyGroupConfigPtrOutput struct{ *pulumi.OutputState }

func (KeyGroupConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyGroupConfig)(nil)).Elem()
}

func (o KeyGroupConfigPtrOutput) ToKeyGroupConfigPtrOutput() KeyGroupConfigPtrOutput {
	return o
}

func (o KeyGroupConfigPtrOutput) ToKeyGroupConfigPtrOutputWithContext(ctx context.Context) KeyGroupConfigPtrOutput {
	return o
}

func (o KeyGroupConfigPtrOutput) Elem() KeyGroupConfigOutput {
	return o.ApplyT(func(v *KeyGroupConfig) KeyGroupConfig {
		if v != nil {
			return *v
		}
		var ret KeyGroupConfig
		return ret
	}).(KeyGroupConfigOutput)
}

func (o KeyGroupConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyGroupConfig) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

func (o KeyGroupConfigPtrOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KeyGroupConfig) []string {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.StringArrayOutput)
}

func (o KeyGroupConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyGroupConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type KeyValueStoreImportSource struct {
	SourceArn  string `pulumi:"sourceArn"`
	SourceType string `pulumi:"sourceType"`
}

// KeyValueStoreImportSourceInput is an input type that accepts KeyValueStoreImportSourceArgs and KeyValueStoreImportSourceOutput values.
// You can construct a concrete instance of `KeyValueStoreImportSourceInput` via:
//
//	KeyValueStoreImportSourceArgs{...}
type KeyValueStoreImportSourceInput interface {
	pulumi.Input

	ToKeyValueStoreImportSourceOutput() KeyValueStoreImportSourceOutput
	ToKeyValueStoreImportSourceOutputWithContext(context.Context) KeyValueStoreImportSourceOutput
}

type KeyValueStoreImportSourceArgs struct {
	SourceArn  pulumi.StringInput `pulumi:"sourceArn"`
	SourceType pulumi.StringInput `pulumi:"sourceType"`
}

func (KeyValueStoreImportSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyValueStoreImportSource)(nil)).Elem()
}

func (i KeyValueStoreImportSourceArgs) ToKeyValueStoreImportSourceOutput() KeyValueStoreImportSourceOutput {
	return i.ToKeyValueStoreImportSourceOutputWithContext(context.Background())
}

func (i KeyValueStoreImportSourceArgs) ToKeyValueStoreImportSourceOutputWithContext(ctx context.Context) KeyValueStoreImportSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyValueStoreImportSourceOutput)
}

func (i KeyValueStoreImportSourceArgs) ToKeyValueStoreImportSourcePtrOutput() KeyValueStoreImportSourcePtrOutput {
	return i.ToKeyValueStoreImportSourcePtrOutputWithContext(context.Background())
}

func (i KeyValueStoreImportSourceArgs) ToKeyValueStoreImportSourcePtrOutputWithContext(ctx context.Context) KeyValueStoreImportSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyValueStoreImportSourceOutput).ToKeyValueStoreImportSourcePtrOutputWithContext(ctx)
}

// KeyValueStoreImportSourcePtrInput is an input type that accepts KeyValueStoreImportSourceArgs, KeyValueStoreImportSourcePtr and KeyValueStoreImportSourcePtrOutput values.
// You can construct a concrete instance of `KeyValueStoreImportSourcePtrInput` via:
//
//	        KeyValueStoreImportSourceArgs{...}
//
//	or:
//
//	        nil
type KeyValueStoreImportSourcePtrInput interface {
	pulumi.Input

	ToKeyValueStoreImportSourcePtrOutput() KeyValueStoreImportSourcePtrOutput
	ToKeyValueStoreImportSourcePtrOutputWithContext(context.Context) KeyValueStoreImportSourcePtrOutput
}

type keyValueStoreImportSourcePtrType KeyValueStoreImportSourceArgs

func KeyValueStoreImportSourcePtr(v *KeyValueStoreImportSourceArgs) KeyValueStoreImportSourcePtrInput {
	return (*keyValueStoreImportSourcePtrType)(v)
}

func (*keyValueStoreImportSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyValueStoreImportSource)(nil)).Elem()
}

func (i *keyValueStoreImportSourcePtrType) ToKeyValueStoreImportSourcePtrOutput() KeyValueStoreImportSourcePtrOutput {
	return i.ToKeyValueStoreImportSourcePtrOutputWithContext(context.Background())
}

func (i *keyValueStoreImportSourcePtrType) ToKeyValueStoreImportSourcePtrOutputWithContext(ctx context.Context) KeyValueStoreImportSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyValueStoreImportSourcePtrOutput)
}

type KeyValueStoreImportSourceOutput struct{ *pulumi.OutputState }

func (KeyValueStoreImportSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyValueStoreImportSource)(nil)).Elem()
}

func (o KeyValueStoreImportSourceOutput) ToKeyValueStoreImportSourceOutput() KeyValueStoreImportSourceOutput {
	return o
}

func (o KeyValueStoreImportSourceOutput) ToKeyValueStoreImportSourceOutputWithContext(ctx context.Context) KeyValueStoreImportSourceOutput {
	return o
}

func (o KeyValueStoreImportSourceOutput) ToKeyValueStoreImportSourcePtrOutput() KeyValueStoreImportSourcePtrOutput {
	return o.ToKeyValueStoreImportSourcePtrOutputWithContext(context.Background())
}

func (o KeyValueStoreImportSourceOutput) ToKeyValueStoreImportSourcePtrOutputWithContext(ctx context.Context) KeyValueStoreImportSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KeyValueStoreImportSource) *KeyValueStoreImportSource {
		return &v
	}).(KeyValueStoreImportSourcePtrOutput)
}

func (o KeyValueStoreImportSourceOutput) SourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v KeyValueStoreImportSource) string { return v.SourceArn }).(pulumi.StringOutput)
}

func (o KeyValueStoreImportSourceOutput) SourceType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyValueStoreImportSource) string { return v.SourceType }).(pulumi.StringOutput)
}

type KeyValueStoreImportSourcePtrOutput struct{ *pulumi.OutputState }

func (KeyValueStoreImportSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyValueStoreImportSource)(nil)).Elem()
}

func (o KeyValueStoreImportSourcePtrOutput) ToKeyValueStoreImportSourcePtrOutput() KeyValueStoreImportSourcePtrOutput {
	return o
}

func (o KeyValueStoreImportSourcePtrOutput) ToKeyValueStoreImportSourcePtrOutputWithContext(ctx context.Context) KeyValueStoreImportSourcePtrOutput {
	return o
}

func (o KeyValueStoreImportSourcePtrOutput) Elem() KeyValueStoreImportSourceOutput {
	return o.ApplyT(func(v *KeyValueStoreImportSource) KeyValueStoreImportSource {
		if v != nil {
			return *v
		}
		var ret KeyValueStoreImportSource
		return ret
	}).(KeyValueStoreImportSourceOutput)
}

func (o KeyValueStoreImportSourcePtrOutput) SourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyValueStoreImportSource) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArn
	}).(pulumi.StringPtrOutput)
}

func (o KeyValueStoreImportSourcePtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyValueStoreImportSource) *string {
		if v == nil {
			return nil
		}
		return &v.SourceType
	}).(pulumi.StringPtrOutput)
}

type MonitoringSubscriptionType struct {
	RealtimeMetricsSubscriptionConfig *MonitoringSubscriptionRealtimeMetricsSubscriptionConfig `pulumi:"realtimeMetricsSubscriptionConfig"`
}

// MonitoringSubscriptionTypeInput is an input type that accepts MonitoringSubscriptionTypeArgs and MonitoringSubscriptionTypeOutput values.
// You can construct a concrete instance of `MonitoringSubscriptionTypeInput` via:
//
//	MonitoringSubscriptionTypeArgs{...}
type MonitoringSubscriptionTypeInput interface {
	pulumi.Input

	ToMonitoringSubscriptionTypeOutput() MonitoringSubscriptionTypeOutput
	ToMonitoringSubscriptionTypeOutputWithContext(context.Context) MonitoringSubscriptionTypeOutput
}

type MonitoringSubscriptionTypeArgs struct {
	RealtimeMetricsSubscriptionConfig MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrInput `pulumi:"realtimeMetricsSubscriptionConfig"`
}

func (MonitoringSubscriptionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSubscriptionType)(nil)).Elem()
}

func (i MonitoringSubscriptionTypeArgs) ToMonitoringSubscriptionTypeOutput() MonitoringSubscriptionTypeOutput {
	return i.ToMonitoringSubscriptionTypeOutputWithContext(context.Background())
}

func (i MonitoringSubscriptionTypeArgs) ToMonitoringSubscriptionTypeOutputWithContext(ctx context.Context) MonitoringSubscriptionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSubscriptionTypeOutput)
}

type MonitoringSubscriptionTypeOutput struct{ *pulumi.OutputState }

func (MonitoringSubscriptionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSubscriptionType)(nil)).Elem()
}

func (o MonitoringSubscriptionTypeOutput) ToMonitoringSubscriptionTypeOutput() MonitoringSubscriptionTypeOutput {
	return o
}

func (o MonitoringSubscriptionTypeOutput) ToMonitoringSubscriptionTypeOutputWithContext(ctx context.Context) MonitoringSubscriptionTypeOutput {
	return o
}

func (o MonitoringSubscriptionTypeOutput) RealtimeMetricsSubscriptionConfig() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput {
	return o.ApplyT(func(v MonitoringSubscriptionType) *MonitoringSubscriptionRealtimeMetricsSubscriptionConfig {
		return v.RealtimeMetricsSubscriptionConfig
	}).(MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput)
}

type MonitoringSubscriptionTypePtrOutput struct{ *pulumi.OutputState }

func (MonitoringSubscriptionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringSubscriptionType)(nil)).Elem()
}

func (o MonitoringSubscriptionTypePtrOutput) ToMonitoringSubscriptionTypePtrOutput() MonitoringSubscriptionTypePtrOutput {
	return o
}

func (o MonitoringSubscriptionTypePtrOutput) ToMonitoringSubscriptionTypePtrOutputWithContext(ctx context.Context) MonitoringSubscriptionTypePtrOutput {
	return o
}

func (o MonitoringSubscriptionTypePtrOutput) Elem() MonitoringSubscriptionTypeOutput {
	return o.ApplyT(func(v *MonitoringSubscriptionType) MonitoringSubscriptionType {
		if v != nil {
			return *v
		}
		var ret MonitoringSubscriptionType
		return ret
	}).(MonitoringSubscriptionTypeOutput)
}

func (o MonitoringSubscriptionTypePtrOutput) RealtimeMetricsSubscriptionConfig() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput {
	return o.ApplyT(func(v *MonitoringSubscriptionType) *MonitoringSubscriptionRealtimeMetricsSubscriptionConfig {
		if v == nil {
			return nil
		}
		return v.RealtimeMetricsSubscriptionConfig
	}).(MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput)
}

type MonitoringSubscriptionRealtimeMetricsSubscriptionConfig struct {
	RealtimeMetricsSubscriptionStatus MonitoringSubscriptionRealtimeMetricsSubscriptionConfigRealtimeMetricsSubscriptionStatus `pulumi:"realtimeMetricsSubscriptionStatus"`
}

// MonitoringSubscriptionRealtimeMetricsSubscriptionConfigInput is an input type that accepts MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs and MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput values.
// You can construct a concrete instance of `MonitoringSubscriptionRealtimeMetricsSubscriptionConfigInput` via:
//
//	MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs{...}
type MonitoringSubscriptionRealtimeMetricsSubscriptionConfigInput interface {
	pulumi.Input

	ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput
	ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutputWithContext(context.Context) MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput
}

type MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs struct {
	RealtimeMetricsSubscriptionStatus MonitoringSubscriptionRealtimeMetricsSubscriptionConfigRealtimeMetricsSubscriptionStatusInput `pulumi:"realtimeMetricsSubscriptionStatus"`
}

func (MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSubscriptionRealtimeMetricsSubscriptionConfig)(nil)).Elem()
}

func (i MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs) ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput {
	return i.ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutputWithContext(context.Background())
}

func (i MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs) ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutputWithContext(ctx context.Context) MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput)
}

func (i MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs) ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput {
	return i.ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutputWithContext(context.Background())
}

func (i MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs) ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutputWithContext(ctx context.Context) MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput).ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutputWithContext(ctx)
}

// MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrInput is an input type that accepts MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs, MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtr and MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput values.
// You can construct a concrete instance of `MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrInput` via:
//
//	        MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs{...}
//
//	or:
//
//	        nil
type MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrInput interface {
	pulumi.Input

	ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput
	ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutputWithContext(context.Context) MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput
}

type monitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrType MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs

func MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtr(v *MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs) MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrInput {
	return (*monitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrType)(v)
}

func (*monitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringSubscriptionRealtimeMetricsSubscriptionConfig)(nil)).Elem()
}

func (i *monitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrType) ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput {
	return i.ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutputWithContext(context.Background())
}

func (i *monitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrType) ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutputWithContext(ctx context.Context) MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput)
}

type MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput struct{ *pulumi.OutputState }

func (MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitoringSubscriptionRealtimeMetricsSubscriptionConfig)(nil)).Elem()
}

func (o MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput) ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput {
	return o
}

func (o MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput) ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutputWithContext(ctx context.Context) MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput {
	return o
}

func (o MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput) ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput {
	return o.ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutputWithContext(context.Background())
}

func (o MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput) ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutputWithContext(ctx context.Context) MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitoringSubscriptionRealtimeMetricsSubscriptionConfig) *MonitoringSubscriptionRealtimeMetricsSubscriptionConfig {
		return &v
	}).(MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput)
}

func (o MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput) RealtimeMetricsSubscriptionStatus() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigRealtimeMetricsSubscriptionStatusOutput {
	return o.ApplyT(func(v MonitoringSubscriptionRealtimeMetricsSubscriptionConfig) MonitoringSubscriptionRealtimeMetricsSubscriptionConfigRealtimeMetricsSubscriptionStatus {
		return v.RealtimeMetricsSubscriptionStatus
	}).(MonitoringSubscriptionRealtimeMetricsSubscriptionConfigRealtimeMetricsSubscriptionStatusOutput)
}

type MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput struct{ *pulumi.OutputState }

func (MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitoringSubscriptionRealtimeMetricsSubscriptionConfig)(nil)).Elem()
}

func (o MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput) ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput {
	return o
}

func (o MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput) ToMonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutputWithContext(ctx context.Context) MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput {
	return o
}

func (o MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput) Elem() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput {
	return o.ApplyT(func(v *MonitoringSubscriptionRealtimeMetricsSubscriptionConfig) MonitoringSubscriptionRealtimeMetricsSubscriptionConfig {
		if v != nil {
			return *v
		}
		var ret MonitoringSubscriptionRealtimeMetricsSubscriptionConfig
		return ret
	}).(MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput)
}

func (o MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput) RealtimeMetricsSubscriptionStatus() MonitoringSubscriptionRealtimeMetricsSubscriptionConfigRealtimeMetricsSubscriptionStatusPtrOutput {
	return o.ApplyT(func(v *MonitoringSubscriptionRealtimeMetricsSubscriptionConfig) *MonitoringSubscriptionRealtimeMetricsSubscriptionConfigRealtimeMetricsSubscriptionStatus {
		if v == nil {
			return nil
		}
		return &v.RealtimeMetricsSubscriptionStatus
	}).(MonitoringSubscriptionRealtimeMetricsSubscriptionConfigRealtimeMetricsSubscriptionStatusPtrOutput)
}

type OriginAccessControlConfig struct {
	Description                   *string `pulumi:"description"`
	Name                          string  `pulumi:"name"`
	OriginAccessControlOriginType string  `pulumi:"originAccessControlOriginType"`
	SigningBehavior               string  `pulumi:"signingBehavior"`
	SigningProtocol               string  `pulumi:"signingProtocol"`
}

// OriginAccessControlConfigInput is an input type that accepts OriginAccessControlConfigArgs and OriginAccessControlConfigOutput values.
// You can construct a concrete instance of `OriginAccessControlConfigInput` via:
//
//	OriginAccessControlConfigArgs{...}
type OriginAccessControlConfigInput interface {
	pulumi.Input

	ToOriginAccessControlConfigOutput() OriginAccessControlConfigOutput
	ToOriginAccessControlConfigOutputWithContext(context.Context) OriginAccessControlConfigOutput
}

type OriginAccessControlConfigArgs struct {
	Description                   pulumi.StringPtrInput `pulumi:"description"`
	Name                          pulumi.StringInput    `pulumi:"name"`
	OriginAccessControlOriginType pulumi.StringInput    `pulumi:"originAccessControlOriginType"`
	SigningBehavior               pulumi.StringInput    `pulumi:"signingBehavior"`
	SigningProtocol               pulumi.StringInput    `pulumi:"signingProtocol"`
}

func (OriginAccessControlConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginAccessControlConfig)(nil)).Elem()
}

func (i OriginAccessControlConfigArgs) ToOriginAccessControlConfigOutput() OriginAccessControlConfigOutput {
	return i.ToOriginAccessControlConfigOutputWithContext(context.Background())
}

func (i OriginAccessControlConfigArgs) ToOriginAccessControlConfigOutputWithContext(ctx context.Context) OriginAccessControlConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginAccessControlConfigOutput)
}

type OriginAccessControlConfigOutput struct{ *pulumi.OutputState }

func (OriginAccessControlConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginAccessControlConfig)(nil)).Elem()
}

func (o OriginAccessControlConfigOutput) ToOriginAccessControlConfigOutput() OriginAccessControlConfigOutput {
	return o
}

func (o OriginAccessControlConfigOutput) ToOriginAccessControlConfigOutputWithContext(ctx context.Context) OriginAccessControlConfigOutput {
	return o
}

func (o OriginAccessControlConfigOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginAccessControlConfig) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o OriginAccessControlConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OriginAccessControlConfig) string { return v.Name }).(pulumi.StringOutput)
}

func (o OriginAccessControlConfigOutput) OriginAccessControlOriginType() pulumi.StringOutput {
	return o.ApplyT(func(v OriginAccessControlConfig) string { return v.OriginAccessControlOriginType }).(pulumi.StringOutput)
}

func (o OriginAccessControlConfigOutput) SigningBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v OriginAccessControlConfig) string { return v.SigningBehavior }).(pulumi.StringOutput)
}

func (o OriginAccessControlConfigOutput) SigningProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v OriginAccessControlConfig) string { return v.SigningProtocol }).(pulumi.StringOutput)
}

type OriginAccessControlConfigPtrOutput struct{ *pulumi.OutputState }

func (OriginAccessControlConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginAccessControlConfig)(nil)).Elem()
}

func (o OriginAccessControlConfigPtrOutput) ToOriginAccessControlConfigPtrOutput() OriginAccessControlConfigPtrOutput {
	return o
}

func (o OriginAccessControlConfigPtrOutput) ToOriginAccessControlConfigPtrOutputWithContext(ctx context.Context) OriginAccessControlConfigPtrOutput {
	return o
}

func (o OriginAccessControlConfigPtrOutput) Elem() OriginAccessControlConfigOutput {
	return o.ApplyT(func(v *OriginAccessControlConfig) OriginAccessControlConfig {
		if v != nil {
			return *v
		}
		var ret OriginAccessControlConfig
		return ret
	}).(OriginAccessControlConfigOutput)
}

func (o OriginAccessControlConfigPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginAccessControlConfig) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o OriginAccessControlConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginAccessControlConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o OriginAccessControlConfigPtrOutput) OriginAccessControlOriginType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginAccessControlConfig) *string {
		if v == nil {
			return nil
		}
		return &v.OriginAccessControlOriginType
	}).(pulumi.StringPtrOutput)
}

func (o OriginAccessControlConfigPtrOutput) SigningBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginAccessControlConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SigningBehavior
	}).(pulumi.StringPtrOutput)
}

func (o OriginAccessControlConfigPtrOutput) SigningProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginAccessControlConfig) *string {
		if v == nil {
			return nil
		}
		return &v.SigningProtocol
	}).(pulumi.StringPtrOutput)
}

type OriginRequestPolicyConfig struct {
	Comment            *string                               `pulumi:"comment"`
	CookiesConfig      OriginRequestPolicyCookiesConfig      `pulumi:"cookiesConfig"`
	HeadersConfig      OriginRequestPolicyHeadersConfig      `pulumi:"headersConfig"`
	Name               string                                `pulumi:"name"`
	QueryStringsConfig OriginRequestPolicyQueryStringsConfig `pulumi:"queryStringsConfig"`
}

// OriginRequestPolicyConfigInput is an input type that accepts OriginRequestPolicyConfigArgs and OriginRequestPolicyConfigOutput values.
// You can construct a concrete instance of `OriginRequestPolicyConfigInput` via:
//
//	OriginRequestPolicyConfigArgs{...}
type OriginRequestPolicyConfigInput interface {
	pulumi.Input

	ToOriginRequestPolicyConfigOutput() OriginRequestPolicyConfigOutput
	ToOriginRequestPolicyConfigOutputWithContext(context.Context) OriginRequestPolicyConfigOutput
}

type OriginRequestPolicyConfigArgs struct {
	Comment            pulumi.StringPtrInput                      `pulumi:"comment"`
	CookiesConfig      OriginRequestPolicyCookiesConfigInput      `pulumi:"cookiesConfig"`
	HeadersConfig      OriginRequestPolicyHeadersConfigInput      `pulumi:"headersConfig"`
	Name               pulumi.StringInput                         `pulumi:"name"`
	QueryStringsConfig OriginRequestPolicyQueryStringsConfigInput `pulumi:"queryStringsConfig"`
}

func (OriginRequestPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyConfig)(nil)).Elem()
}

func (i OriginRequestPolicyConfigArgs) ToOriginRequestPolicyConfigOutput() OriginRequestPolicyConfigOutput {
	return i.ToOriginRequestPolicyConfigOutputWithContext(context.Background())
}

func (i OriginRequestPolicyConfigArgs) ToOriginRequestPolicyConfigOutputWithContext(ctx context.Context) OriginRequestPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginRequestPolicyConfigOutput)
}

type OriginRequestPolicyConfigOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyConfig)(nil)).Elem()
}

func (o OriginRequestPolicyConfigOutput) ToOriginRequestPolicyConfigOutput() OriginRequestPolicyConfigOutput {
	return o
}

func (o OriginRequestPolicyConfigOutput) ToOriginRequestPolicyConfigOutputWithContext(ctx context.Context) OriginRequestPolicyConfigOutput {
	return o
}

func (o OriginRequestPolicyConfigOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginRequestPolicyConfig) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o OriginRequestPolicyConfigOutput) CookiesConfig() OriginRequestPolicyCookiesConfigOutput {
	return o.ApplyT(func(v OriginRequestPolicyConfig) OriginRequestPolicyCookiesConfig { return v.CookiesConfig }).(OriginRequestPolicyCookiesConfigOutput)
}

func (o OriginRequestPolicyConfigOutput) HeadersConfig() OriginRequestPolicyHeadersConfigOutput {
	return o.ApplyT(func(v OriginRequestPolicyConfig) OriginRequestPolicyHeadersConfig { return v.HeadersConfig }).(OriginRequestPolicyHeadersConfigOutput)
}

func (o OriginRequestPolicyConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OriginRequestPolicyConfig) string { return v.Name }).(pulumi.StringOutput)
}

func (o OriginRequestPolicyConfigOutput) QueryStringsConfig() OriginRequestPolicyQueryStringsConfigOutput {
	return o.ApplyT(func(v OriginRequestPolicyConfig) OriginRequestPolicyQueryStringsConfig { return v.QueryStringsConfig }).(OriginRequestPolicyQueryStringsConfigOutput)
}

type OriginRequestPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginRequestPolicyConfig)(nil)).Elem()
}

func (o OriginRequestPolicyConfigPtrOutput) ToOriginRequestPolicyConfigPtrOutput() OriginRequestPolicyConfigPtrOutput {
	return o
}

func (o OriginRequestPolicyConfigPtrOutput) ToOriginRequestPolicyConfigPtrOutputWithContext(ctx context.Context) OriginRequestPolicyConfigPtrOutput {
	return o
}

func (o OriginRequestPolicyConfigPtrOutput) Elem() OriginRequestPolicyConfigOutput {
	return o.ApplyT(func(v *OriginRequestPolicyConfig) OriginRequestPolicyConfig {
		if v != nil {
			return *v
		}
		var ret OriginRequestPolicyConfig
		return ret
	}).(OriginRequestPolicyConfigOutput)
}

func (o OriginRequestPolicyConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginRequestPolicyConfig) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

func (o OriginRequestPolicyConfigPtrOutput) CookiesConfig() OriginRequestPolicyCookiesConfigPtrOutput {
	return o.ApplyT(func(v *OriginRequestPolicyConfig) *OriginRequestPolicyCookiesConfig {
		if v == nil {
			return nil
		}
		return &v.CookiesConfig
	}).(OriginRequestPolicyCookiesConfigPtrOutput)
}

func (o OriginRequestPolicyConfigPtrOutput) HeadersConfig() OriginRequestPolicyHeadersConfigPtrOutput {
	return o.ApplyT(func(v *OriginRequestPolicyConfig) *OriginRequestPolicyHeadersConfig {
		if v == nil {
			return nil
		}
		return &v.HeadersConfig
	}).(OriginRequestPolicyHeadersConfigPtrOutput)
}

func (o OriginRequestPolicyConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginRequestPolicyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o OriginRequestPolicyConfigPtrOutput) QueryStringsConfig() OriginRequestPolicyQueryStringsConfigPtrOutput {
	return o.ApplyT(func(v *OriginRequestPolicyConfig) *OriginRequestPolicyQueryStringsConfig {
		if v == nil {
			return nil
		}
		return &v.QueryStringsConfig
	}).(OriginRequestPolicyQueryStringsConfigPtrOutput)
}

type OriginRequestPolicyCookiesConfig struct {
	CookieBehavior string   `pulumi:"cookieBehavior"`
	Cookies        []string `pulumi:"cookies"`
}

// OriginRequestPolicyCookiesConfigInput is an input type that accepts OriginRequestPolicyCookiesConfigArgs and OriginRequestPolicyCookiesConfigOutput values.
// You can construct a concrete instance of `OriginRequestPolicyCookiesConfigInput` via:
//
//	OriginRequestPolicyCookiesConfigArgs{...}
type OriginRequestPolicyCookiesConfigInput interface {
	pulumi.Input

	ToOriginRequestPolicyCookiesConfigOutput() OriginRequestPolicyCookiesConfigOutput
	ToOriginRequestPolicyCookiesConfigOutputWithContext(context.Context) OriginRequestPolicyCookiesConfigOutput
}

type OriginRequestPolicyCookiesConfigArgs struct {
	CookieBehavior pulumi.StringInput      `pulumi:"cookieBehavior"`
	Cookies        pulumi.StringArrayInput `pulumi:"cookies"`
}

func (OriginRequestPolicyCookiesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyCookiesConfig)(nil)).Elem()
}

func (i OriginRequestPolicyCookiesConfigArgs) ToOriginRequestPolicyCookiesConfigOutput() OriginRequestPolicyCookiesConfigOutput {
	return i.ToOriginRequestPolicyCookiesConfigOutputWithContext(context.Background())
}

func (i OriginRequestPolicyCookiesConfigArgs) ToOriginRequestPolicyCookiesConfigOutputWithContext(ctx context.Context) OriginRequestPolicyCookiesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginRequestPolicyCookiesConfigOutput)
}

type OriginRequestPolicyCookiesConfigOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyCookiesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyCookiesConfig)(nil)).Elem()
}

func (o OriginRequestPolicyCookiesConfigOutput) ToOriginRequestPolicyCookiesConfigOutput() OriginRequestPolicyCookiesConfigOutput {
	return o
}

func (o OriginRequestPolicyCookiesConfigOutput) ToOriginRequestPolicyCookiesConfigOutputWithContext(ctx context.Context) OriginRequestPolicyCookiesConfigOutput {
	return o
}

func (o OriginRequestPolicyCookiesConfigOutput) CookieBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v OriginRequestPolicyCookiesConfig) string { return v.CookieBehavior }).(pulumi.StringOutput)
}

func (o OriginRequestPolicyCookiesConfigOutput) Cookies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OriginRequestPolicyCookiesConfig) []string { return v.Cookies }).(pulumi.StringArrayOutput)
}

type OriginRequestPolicyCookiesConfigPtrOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyCookiesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginRequestPolicyCookiesConfig)(nil)).Elem()
}

func (o OriginRequestPolicyCookiesConfigPtrOutput) ToOriginRequestPolicyCookiesConfigPtrOutput() OriginRequestPolicyCookiesConfigPtrOutput {
	return o
}

func (o OriginRequestPolicyCookiesConfigPtrOutput) ToOriginRequestPolicyCookiesConfigPtrOutputWithContext(ctx context.Context) OriginRequestPolicyCookiesConfigPtrOutput {
	return o
}

func (o OriginRequestPolicyCookiesConfigPtrOutput) Elem() OriginRequestPolicyCookiesConfigOutput {
	return o.ApplyT(func(v *OriginRequestPolicyCookiesConfig) OriginRequestPolicyCookiesConfig {
		if v != nil {
			return *v
		}
		var ret OriginRequestPolicyCookiesConfig
		return ret
	}).(OriginRequestPolicyCookiesConfigOutput)
}

func (o OriginRequestPolicyCookiesConfigPtrOutput) CookieBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginRequestPolicyCookiesConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CookieBehavior
	}).(pulumi.StringPtrOutput)
}

func (o OriginRequestPolicyCookiesConfigPtrOutput) Cookies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OriginRequestPolicyCookiesConfig) []string {
		if v == nil {
			return nil
		}
		return v.Cookies
	}).(pulumi.StringArrayOutput)
}

type OriginRequestPolicyHeadersConfig struct {
	HeaderBehavior string   `pulumi:"headerBehavior"`
	Headers        []string `pulumi:"headers"`
}

// OriginRequestPolicyHeadersConfigInput is an input type that accepts OriginRequestPolicyHeadersConfigArgs and OriginRequestPolicyHeadersConfigOutput values.
// You can construct a concrete instance of `OriginRequestPolicyHeadersConfigInput` via:
//
//	OriginRequestPolicyHeadersConfigArgs{...}
type OriginRequestPolicyHeadersConfigInput interface {
	pulumi.Input

	ToOriginRequestPolicyHeadersConfigOutput() OriginRequestPolicyHeadersConfigOutput
	ToOriginRequestPolicyHeadersConfigOutputWithContext(context.Context) OriginRequestPolicyHeadersConfigOutput
}

type OriginRequestPolicyHeadersConfigArgs struct {
	HeaderBehavior pulumi.StringInput      `pulumi:"headerBehavior"`
	Headers        pulumi.StringArrayInput `pulumi:"headers"`
}

func (OriginRequestPolicyHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyHeadersConfig)(nil)).Elem()
}

func (i OriginRequestPolicyHeadersConfigArgs) ToOriginRequestPolicyHeadersConfigOutput() OriginRequestPolicyHeadersConfigOutput {
	return i.ToOriginRequestPolicyHeadersConfigOutputWithContext(context.Background())
}

func (i OriginRequestPolicyHeadersConfigArgs) ToOriginRequestPolicyHeadersConfigOutputWithContext(ctx context.Context) OriginRequestPolicyHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginRequestPolicyHeadersConfigOutput)
}

type OriginRequestPolicyHeadersConfigOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyHeadersConfig)(nil)).Elem()
}

func (o OriginRequestPolicyHeadersConfigOutput) ToOriginRequestPolicyHeadersConfigOutput() OriginRequestPolicyHeadersConfigOutput {
	return o
}

func (o OriginRequestPolicyHeadersConfigOutput) ToOriginRequestPolicyHeadersConfigOutputWithContext(ctx context.Context) OriginRequestPolicyHeadersConfigOutput {
	return o
}

func (o OriginRequestPolicyHeadersConfigOutput) HeaderBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v OriginRequestPolicyHeadersConfig) string { return v.HeaderBehavior }).(pulumi.StringOutput)
}

func (o OriginRequestPolicyHeadersConfigOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OriginRequestPolicyHeadersConfig) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

type OriginRequestPolicyHeadersConfigPtrOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyHeadersConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginRequestPolicyHeadersConfig)(nil)).Elem()
}

func (o OriginRequestPolicyHeadersConfigPtrOutput) ToOriginRequestPolicyHeadersConfigPtrOutput() OriginRequestPolicyHeadersConfigPtrOutput {
	return o
}

func (o OriginRequestPolicyHeadersConfigPtrOutput) ToOriginRequestPolicyHeadersConfigPtrOutputWithContext(ctx context.Context) OriginRequestPolicyHeadersConfigPtrOutput {
	return o
}

func (o OriginRequestPolicyHeadersConfigPtrOutput) Elem() OriginRequestPolicyHeadersConfigOutput {
	return o.ApplyT(func(v *OriginRequestPolicyHeadersConfig) OriginRequestPolicyHeadersConfig {
		if v != nil {
			return *v
		}
		var ret OriginRequestPolicyHeadersConfig
		return ret
	}).(OriginRequestPolicyHeadersConfigOutput)
}

func (o OriginRequestPolicyHeadersConfigPtrOutput) HeaderBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginRequestPolicyHeadersConfig) *string {
		if v == nil {
			return nil
		}
		return &v.HeaderBehavior
	}).(pulumi.StringPtrOutput)
}

func (o OriginRequestPolicyHeadersConfigPtrOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OriginRequestPolicyHeadersConfig) []string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringArrayOutput)
}

type OriginRequestPolicyQueryStringsConfig struct {
	QueryStringBehavior string   `pulumi:"queryStringBehavior"`
	QueryStrings        []string `pulumi:"queryStrings"`
}

// OriginRequestPolicyQueryStringsConfigInput is an input type that accepts OriginRequestPolicyQueryStringsConfigArgs and OriginRequestPolicyQueryStringsConfigOutput values.
// You can construct a concrete instance of `OriginRequestPolicyQueryStringsConfigInput` via:
//
//	OriginRequestPolicyQueryStringsConfigArgs{...}
type OriginRequestPolicyQueryStringsConfigInput interface {
	pulumi.Input

	ToOriginRequestPolicyQueryStringsConfigOutput() OriginRequestPolicyQueryStringsConfigOutput
	ToOriginRequestPolicyQueryStringsConfigOutputWithContext(context.Context) OriginRequestPolicyQueryStringsConfigOutput
}

type OriginRequestPolicyQueryStringsConfigArgs struct {
	QueryStringBehavior pulumi.StringInput      `pulumi:"queryStringBehavior"`
	QueryStrings        pulumi.StringArrayInput `pulumi:"queryStrings"`
}

func (OriginRequestPolicyQueryStringsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyQueryStringsConfig)(nil)).Elem()
}

func (i OriginRequestPolicyQueryStringsConfigArgs) ToOriginRequestPolicyQueryStringsConfigOutput() OriginRequestPolicyQueryStringsConfigOutput {
	return i.ToOriginRequestPolicyQueryStringsConfigOutputWithContext(context.Background())
}

func (i OriginRequestPolicyQueryStringsConfigArgs) ToOriginRequestPolicyQueryStringsConfigOutputWithContext(ctx context.Context) OriginRequestPolicyQueryStringsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginRequestPolicyQueryStringsConfigOutput)
}

type OriginRequestPolicyQueryStringsConfigOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyQueryStringsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginRequestPolicyQueryStringsConfig)(nil)).Elem()
}

func (o OriginRequestPolicyQueryStringsConfigOutput) ToOriginRequestPolicyQueryStringsConfigOutput() OriginRequestPolicyQueryStringsConfigOutput {
	return o
}

func (o OriginRequestPolicyQueryStringsConfigOutput) ToOriginRequestPolicyQueryStringsConfigOutputWithContext(ctx context.Context) OriginRequestPolicyQueryStringsConfigOutput {
	return o
}

func (o OriginRequestPolicyQueryStringsConfigOutput) QueryStringBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v OriginRequestPolicyQueryStringsConfig) string { return v.QueryStringBehavior }).(pulumi.StringOutput)
}

func (o OriginRequestPolicyQueryStringsConfigOutput) QueryStrings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OriginRequestPolicyQueryStringsConfig) []string { return v.QueryStrings }).(pulumi.StringArrayOutput)
}

type OriginRequestPolicyQueryStringsConfigPtrOutput struct{ *pulumi.OutputState }

func (OriginRequestPolicyQueryStringsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginRequestPolicyQueryStringsConfig)(nil)).Elem()
}

func (o OriginRequestPolicyQueryStringsConfigPtrOutput) ToOriginRequestPolicyQueryStringsConfigPtrOutput() OriginRequestPolicyQueryStringsConfigPtrOutput {
	return o
}

func (o OriginRequestPolicyQueryStringsConfigPtrOutput) ToOriginRequestPolicyQueryStringsConfigPtrOutputWithContext(ctx context.Context) OriginRequestPolicyQueryStringsConfigPtrOutput {
	return o
}

func (o OriginRequestPolicyQueryStringsConfigPtrOutput) Elem() OriginRequestPolicyQueryStringsConfigOutput {
	return o.ApplyT(func(v *OriginRequestPolicyQueryStringsConfig) OriginRequestPolicyQueryStringsConfig {
		if v != nil {
			return *v
		}
		var ret OriginRequestPolicyQueryStringsConfig
		return ret
	}).(OriginRequestPolicyQueryStringsConfigOutput)
}

func (o OriginRequestPolicyQueryStringsConfigPtrOutput) QueryStringBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginRequestPolicyQueryStringsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.QueryStringBehavior
	}).(pulumi.StringPtrOutput)
}

func (o OriginRequestPolicyQueryStringsConfigPtrOutput) QueryStrings() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OriginRequestPolicyQueryStringsConfig) []string {
		if v == nil {
			return nil
		}
		return v.QueryStrings
	}).(pulumi.StringArrayOutput)
}

type PublicKeyConfig struct {
	CallerReference string  `pulumi:"callerReference"`
	Comment         *string `pulumi:"comment"`
	EncodedKey      string  `pulumi:"encodedKey"`
	Name            string  `pulumi:"name"`
}

// PublicKeyConfigInput is an input type that accepts PublicKeyConfigArgs and PublicKeyConfigOutput values.
// You can construct a concrete instance of `PublicKeyConfigInput` via:
//
//	PublicKeyConfigArgs{...}
type PublicKeyConfigInput interface {
	pulumi.Input

	ToPublicKeyConfigOutput() PublicKeyConfigOutput
	ToPublicKeyConfigOutputWithContext(context.Context) PublicKeyConfigOutput
}

type PublicKeyConfigArgs struct {
	CallerReference pulumi.StringInput    `pulumi:"callerReference"`
	Comment         pulumi.StringPtrInput `pulumi:"comment"`
	EncodedKey      pulumi.StringInput    `pulumi:"encodedKey"`
	Name            pulumi.StringInput    `pulumi:"name"`
}

func (PublicKeyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicKeyConfig)(nil)).Elem()
}

func (i PublicKeyConfigArgs) ToPublicKeyConfigOutput() PublicKeyConfigOutput {
	return i.ToPublicKeyConfigOutputWithContext(context.Background())
}

func (i PublicKeyConfigArgs) ToPublicKeyConfigOutputWithContext(ctx context.Context) PublicKeyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicKeyConfigOutput)
}

type PublicKeyConfigOutput struct{ *pulumi.OutputState }

func (PublicKeyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicKeyConfig)(nil)).Elem()
}

func (o PublicKeyConfigOutput) ToPublicKeyConfigOutput() PublicKeyConfigOutput {
	return o
}

func (o PublicKeyConfigOutput) ToPublicKeyConfigOutputWithContext(ctx context.Context) PublicKeyConfigOutput {
	return o
}

func (o PublicKeyConfigOutput) CallerReference() pulumi.StringOutput {
	return o.ApplyT(func(v PublicKeyConfig) string { return v.CallerReference }).(pulumi.StringOutput)
}

func (o PublicKeyConfigOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PublicKeyConfig) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o PublicKeyConfigOutput) EncodedKey() pulumi.StringOutput {
	return o.ApplyT(func(v PublicKeyConfig) string { return v.EncodedKey }).(pulumi.StringOutput)
}

func (o PublicKeyConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PublicKeyConfig) string { return v.Name }).(pulumi.StringOutput)
}

type PublicKeyConfigPtrOutput struct{ *pulumi.OutputState }

func (PublicKeyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicKeyConfig)(nil)).Elem()
}

func (o PublicKeyConfigPtrOutput) ToPublicKeyConfigPtrOutput() PublicKeyConfigPtrOutput {
	return o
}

func (o PublicKeyConfigPtrOutput) ToPublicKeyConfigPtrOutputWithContext(ctx context.Context) PublicKeyConfigPtrOutput {
	return o
}

func (o PublicKeyConfigPtrOutput) Elem() PublicKeyConfigOutput {
	return o.ApplyT(func(v *PublicKeyConfig) PublicKeyConfig {
		if v != nil {
			return *v
		}
		var ret PublicKeyConfig
		return ret
	}).(PublicKeyConfigOutput)
}

func (o PublicKeyConfigPtrOutput) CallerReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicKeyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CallerReference
	}).(pulumi.StringPtrOutput)
}

func (o PublicKeyConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicKeyConfig) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

func (o PublicKeyConfigPtrOutput) EncodedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicKeyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.EncodedKey
	}).(pulumi.StringPtrOutput)
}

func (o PublicKeyConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PublicKeyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type RealtimeLogConfigEndPoint struct {
	KinesisStreamConfig RealtimeLogConfigKinesisStreamConfig `pulumi:"kinesisStreamConfig"`
	StreamType          string                               `pulumi:"streamType"`
}

// RealtimeLogConfigEndPointInput is an input type that accepts RealtimeLogConfigEndPointArgs and RealtimeLogConfigEndPointOutput values.
// You can construct a concrete instance of `RealtimeLogConfigEndPointInput` via:
//
//	RealtimeLogConfigEndPointArgs{...}
type RealtimeLogConfigEndPointInput interface {
	pulumi.Input

	ToRealtimeLogConfigEndPointOutput() RealtimeLogConfigEndPointOutput
	ToRealtimeLogConfigEndPointOutputWithContext(context.Context) RealtimeLogConfigEndPointOutput
}

type RealtimeLogConfigEndPointArgs struct {
	KinesisStreamConfig RealtimeLogConfigKinesisStreamConfigInput `pulumi:"kinesisStreamConfig"`
	StreamType          pulumi.StringInput                        `pulumi:"streamType"`
}

func (RealtimeLogConfigEndPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfigEndPoint)(nil)).Elem()
}

func (i RealtimeLogConfigEndPointArgs) ToRealtimeLogConfigEndPointOutput() RealtimeLogConfigEndPointOutput {
	return i.ToRealtimeLogConfigEndPointOutputWithContext(context.Background())
}

func (i RealtimeLogConfigEndPointArgs) ToRealtimeLogConfigEndPointOutputWithContext(ctx context.Context) RealtimeLogConfigEndPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogConfigEndPointOutput)
}

// RealtimeLogConfigEndPointArrayInput is an input type that accepts RealtimeLogConfigEndPointArray and RealtimeLogConfigEndPointArrayOutput values.
// You can construct a concrete instance of `RealtimeLogConfigEndPointArrayInput` via:
//
//	RealtimeLogConfigEndPointArray{ RealtimeLogConfigEndPointArgs{...} }
type RealtimeLogConfigEndPointArrayInput interface {
	pulumi.Input

	ToRealtimeLogConfigEndPointArrayOutput() RealtimeLogConfigEndPointArrayOutput
	ToRealtimeLogConfigEndPointArrayOutputWithContext(context.Context) RealtimeLogConfigEndPointArrayOutput
}

type RealtimeLogConfigEndPointArray []RealtimeLogConfigEndPointInput

func (RealtimeLogConfigEndPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealtimeLogConfigEndPoint)(nil)).Elem()
}

func (i RealtimeLogConfigEndPointArray) ToRealtimeLogConfigEndPointArrayOutput() RealtimeLogConfigEndPointArrayOutput {
	return i.ToRealtimeLogConfigEndPointArrayOutputWithContext(context.Background())
}

func (i RealtimeLogConfigEndPointArray) ToRealtimeLogConfigEndPointArrayOutputWithContext(ctx context.Context) RealtimeLogConfigEndPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogConfigEndPointArrayOutput)
}

type RealtimeLogConfigEndPointOutput struct{ *pulumi.OutputState }

func (RealtimeLogConfigEndPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfigEndPoint)(nil)).Elem()
}

func (o RealtimeLogConfigEndPointOutput) ToRealtimeLogConfigEndPointOutput() RealtimeLogConfigEndPointOutput {
	return o
}

func (o RealtimeLogConfigEndPointOutput) ToRealtimeLogConfigEndPointOutputWithContext(ctx context.Context) RealtimeLogConfigEndPointOutput {
	return o
}

func (o RealtimeLogConfigEndPointOutput) KinesisStreamConfig() RealtimeLogConfigKinesisStreamConfigOutput {
	return o.ApplyT(func(v RealtimeLogConfigEndPoint) RealtimeLogConfigKinesisStreamConfig { return v.KinesisStreamConfig }).(RealtimeLogConfigKinesisStreamConfigOutput)
}

func (o RealtimeLogConfigEndPointOutput) StreamType() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogConfigEndPoint) string { return v.StreamType }).(pulumi.StringOutput)
}

type RealtimeLogConfigEndPointArrayOutput struct{ *pulumi.OutputState }

func (RealtimeLogConfigEndPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RealtimeLogConfigEndPoint)(nil)).Elem()
}

func (o RealtimeLogConfigEndPointArrayOutput) ToRealtimeLogConfigEndPointArrayOutput() RealtimeLogConfigEndPointArrayOutput {
	return o
}

func (o RealtimeLogConfigEndPointArrayOutput) ToRealtimeLogConfigEndPointArrayOutputWithContext(ctx context.Context) RealtimeLogConfigEndPointArrayOutput {
	return o
}

func (o RealtimeLogConfigEndPointArrayOutput) Index(i pulumi.IntInput) RealtimeLogConfigEndPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RealtimeLogConfigEndPoint {
		return vs[0].([]RealtimeLogConfigEndPoint)[vs[1].(int)]
	}).(RealtimeLogConfigEndPointOutput)
}

type RealtimeLogConfigKinesisStreamConfig struct {
	RoleArn   string `pulumi:"roleArn"`
	StreamArn string `pulumi:"streamArn"`
}

// RealtimeLogConfigKinesisStreamConfigInput is an input type that accepts RealtimeLogConfigKinesisStreamConfigArgs and RealtimeLogConfigKinesisStreamConfigOutput values.
// You can construct a concrete instance of `RealtimeLogConfigKinesisStreamConfigInput` via:
//
//	RealtimeLogConfigKinesisStreamConfigArgs{...}
type RealtimeLogConfigKinesisStreamConfigInput interface {
	pulumi.Input

	ToRealtimeLogConfigKinesisStreamConfigOutput() RealtimeLogConfigKinesisStreamConfigOutput
	ToRealtimeLogConfigKinesisStreamConfigOutputWithContext(context.Context) RealtimeLogConfigKinesisStreamConfigOutput
}

type RealtimeLogConfigKinesisStreamConfigArgs struct {
	RoleArn   pulumi.StringInput `pulumi:"roleArn"`
	StreamArn pulumi.StringInput `pulumi:"streamArn"`
}

func (RealtimeLogConfigKinesisStreamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfigKinesisStreamConfig)(nil)).Elem()
}

func (i RealtimeLogConfigKinesisStreamConfigArgs) ToRealtimeLogConfigKinesisStreamConfigOutput() RealtimeLogConfigKinesisStreamConfigOutput {
	return i.ToRealtimeLogConfigKinesisStreamConfigOutputWithContext(context.Background())
}

func (i RealtimeLogConfigKinesisStreamConfigArgs) ToRealtimeLogConfigKinesisStreamConfigOutputWithContext(ctx context.Context) RealtimeLogConfigKinesisStreamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RealtimeLogConfigKinesisStreamConfigOutput)
}

type RealtimeLogConfigKinesisStreamConfigOutput struct{ *pulumi.OutputState }

func (RealtimeLogConfigKinesisStreamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RealtimeLogConfigKinesisStreamConfig)(nil)).Elem()
}

func (o RealtimeLogConfigKinesisStreamConfigOutput) ToRealtimeLogConfigKinesisStreamConfigOutput() RealtimeLogConfigKinesisStreamConfigOutput {
	return o
}

func (o RealtimeLogConfigKinesisStreamConfigOutput) ToRealtimeLogConfigKinesisStreamConfigOutputWithContext(ctx context.Context) RealtimeLogConfigKinesisStreamConfigOutput {
	return o
}

func (o RealtimeLogConfigKinesisStreamConfigOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogConfigKinesisStreamConfig) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o RealtimeLogConfigKinesisStreamConfigOutput) StreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v RealtimeLogConfigKinesisStreamConfig) string { return v.StreamArn }).(pulumi.StringOutput)
}

type ResponseHeadersPolicyAccessControlAllowHeaders struct {
	Items []string `pulumi:"items"`
}

// ResponseHeadersPolicyAccessControlAllowHeadersInput is an input type that accepts ResponseHeadersPolicyAccessControlAllowHeadersArgs and ResponseHeadersPolicyAccessControlAllowHeadersOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyAccessControlAllowHeadersInput` via:
//
//	ResponseHeadersPolicyAccessControlAllowHeadersArgs{...}
type ResponseHeadersPolicyAccessControlAllowHeadersInput interface {
	pulumi.Input

	ToResponseHeadersPolicyAccessControlAllowHeadersOutput() ResponseHeadersPolicyAccessControlAllowHeadersOutput
	ToResponseHeadersPolicyAccessControlAllowHeadersOutputWithContext(context.Context) ResponseHeadersPolicyAccessControlAllowHeadersOutput
}

type ResponseHeadersPolicyAccessControlAllowHeadersArgs struct {
	Items pulumi.StringArrayInput `pulumi:"items"`
}

func (ResponseHeadersPolicyAccessControlAllowHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyAccessControlAllowHeaders)(nil)).Elem()
}

func (i ResponseHeadersPolicyAccessControlAllowHeadersArgs) ToResponseHeadersPolicyAccessControlAllowHeadersOutput() ResponseHeadersPolicyAccessControlAllowHeadersOutput {
	return i.ToResponseHeadersPolicyAccessControlAllowHeadersOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyAccessControlAllowHeadersArgs) ToResponseHeadersPolicyAccessControlAllowHeadersOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyAccessControlAllowHeadersOutput)
}

func (i ResponseHeadersPolicyAccessControlAllowHeadersArgs) ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutput() ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput {
	return i.ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyAccessControlAllowHeadersArgs) ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyAccessControlAllowHeadersOutput).ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyAccessControlAllowHeadersPtrInput is an input type that accepts ResponseHeadersPolicyAccessControlAllowHeadersArgs, ResponseHeadersPolicyAccessControlAllowHeadersPtr and ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyAccessControlAllowHeadersPtrInput` via:
//
//	        ResponseHeadersPolicyAccessControlAllowHeadersArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyAccessControlAllowHeadersPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutput() ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput
	ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutputWithContext(context.Context) ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput
}

type responseHeadersPolicyAccessControlAllowHeadersPtrType ResponseHeadersPolicyAccessControlAllowHeadersArgs

func ResponseHeadersPolicyAccessControlAllowHeadersPtr(v *ResponseHeadersPolicyAccessControlAllowHeadersArgs) ResponseHeadersPolicyAccessControlAllowHeadersPtrInput {
	return (*responseHeadersPolicyAccessControlAllowHeadersPtrType)(v)
}

func (*responseHeadersPolicyAccessControlAllowHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyAccessControlAllowHeaders)(nil)).Elem()
}

func (i *responseHeadersPolicyAccessControlAllowHeadersPtrType) ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutput() ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput {
	return i.ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyAccessControlAllowHeadersPtrType) ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput)
}

type ResponseHeadersPolicyAccessControlAllowHeadersOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyAccessControlAllowHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyAccessControlAllowHeaders)(nil)).Elem()
}

func (o ResponseHeadersPolicyAccessControlAllowHeadersOutput) ToResponseHeadersPolicyAccessControlAllowHeadersOutput() ResponseHeadersPolicyAccessControlAllowHeadersOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlAllowHeadersOutput) ToResponseHeadersPolicyAccessControlAllowHeadersOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowHeadersOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlAllowHeadersOutput) ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutput() ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput {
	return o.ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyAccessControlAllowHeadersOutput) ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyAccessControlAllowHeaders) *ResponseHeadersPolicyAccessControlAllowHeaders {
		return &v
	}).(ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput)
}

func (o ResponseHeadersPolicyAccessControlAllowHeadersOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyAccessControlAllowHeaders) []string { return v.Items }).(pulumi.StringArrayOutput)
}

type ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyAccessControlAllowHeaders)(nil)).Elem()
}

func (o ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput) ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutput() ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput) ToResponseHeadersPolicyAccessControlAllowHeadersPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput) Elem() ResponseHeadersPolicyAccessControlAllowHeadersOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyAccessControlAllowHeaders) ResponseHeadersPolicyAccessControlAllowHeaders {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyAccessControlAllowHeaders
		return ret
	}).(ResponseHeadersPolicyAccessControlAllowHeadersOutput)
}

func (o ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyAccessControlAllowHeaders) []string {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.StringArrayOutput)
}

type ResponseHeadersPolicyAccessControlAllowMethods struct {
	Items []string `pulumi:"items"`
}

// ResponseHeadersPolicyAccessControlAllowMethodsInput is an input type that accepts ResponseHeadersPolicyAccessControlAllowMethodsArgs and ResponseHeadersPolicyAccessControlAllowMethodsOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyAccessControlAllowMethodsInput` via:
//
//	ResponseHeadersPolicyAccessControlAllowMethodsArgs{...}
type ResponseHeadersPolicyAccessControlAllowMethodsInput interface {
	pulumi.Input

	ToResponseHeadersPolicyAccessControlAllowMethodsOutput() ResponseHeadersPolicyAccessControlAllowMethodsOutput
	ToResponseHeadersPolicyAccessControlAllowMethodsOutputWithContext(context.Context) ResponseHeadersPolicyAccessControlAllowMethodsOutput
}

type ResponseHeadersPolicyAccessControlAllowMethodsArgs struct {
	Items pulumi.StringArrayInput `pulumi:"items"`
}

func (ResponseHeadersPolicyAccessControlAllowMethodsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyAccessControlAllowMethods)(nil)).Elem()
}

func (i ResponseHeadersPolicyAccessControlAllowMethodsArgs) ToResponseHeadersPolicyAccessControlAllowMethodsOutput() ResponseHeadersPolicyAccessControlAllowMethodsOutput {
	return i.ToResponseHeadersPolicyAccessControlAllowMethodsOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyAccessControlAllowMethodsArgs) ToResponseHeadersPolicyAccessControlAllowMethodsOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowMethodsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyAccessControlAllowMethodsOutput)
}

func (i ResponseHeadersPolicyAccessControlAllowMethodsArgs) ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutput() ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput {
	return i.ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyAccessControlAllowMethodsArgs) ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyAccessControlAllowMethodsOutput).ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyAccessControlAllowMethodsPtrInput is an input type that accepts ResponseHeadersPolicyAccessControlAllowMethodsArgs, ResponseHeadersPolicyAccessControlAllowMethodsPtr and ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyAccessControlAllowMethodsPtrInput` via:
//
//	        ResponseHeadersPolicyAccessControlAllowMethodsArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyAccessControlAllowMethodsPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutput() ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput
	ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutputWithContext(context.Context) ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput
}

type responseHeadersPolicyAccessControlAllowMethodsPtrType ResponseHeadersPolicyAccessControlAllowMethodsArgs

func ResponseHeadersPolicyAccessControlAllowMethodsPtr(v *ResponseHeadersPolicyAccessControlAllowMethodsArgs) ResponseHeadersPolicyAccessControlAllowMethodsPtrInput {
	return (*responseHeadersPolicyAccessControlAllowMethodsPtrType)(v)
}

func (*responseHeadersPolicyAccessControlAllowMethodsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyAccessControlAllowMethods)(nil)).Elem()
}

func (i *responseHeadersPolicyAccessControlAllowMethodsPtrType) ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutput() ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput {
	return i.ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyAccessControlAllowMethodsPtrType) ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput)
}

type ResponseHeadersPolicyAccessControlAllowMethodsOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyAccessControlAllowMethodsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyAccessControlAllowMethods)(nil)).Elem()
}

func (o ResponseHeadersPolicyAccessControlAllowMethodsOutput) ToResponseHeadersPolicyAccessControlAllowMethodsOutput() ResponseHeadersPolicyAccessControlAllowMethodsOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlAllowMethodsOutput) ToResponseHeadersPolicyAccessControlAllowMethodsOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowMethodsOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlAllowMethodsOutput) ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutput() ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput {
	return o.ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyAccessControlAllowMethodsOutput) ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyAccessControlAllowMethods) *ResponseHeadersPolicyAccessControlAllowMethods {
		return &v
	}).(ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput)
}

func (o ResponseHeadersPolicyAccessControlAllowMethodsOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyAccessControlAllowMethods) []string { return v.Items }).(pulumi.StringArrayOutput)
}

type ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyAccessControlAllowMethods)(nil)).Elem()
}

func (o ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput) ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutput() ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput) ToResponseHeadersPolicyAccessControlAllowMethodsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput) Elem() ResponseHeadersPolicyAccessControlAllowMethodsOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyAccessControlAllowMethods) ResponseHeadersPolicyAccessControlAllowMethods {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyAccessControlAllowMethods
		return ret
	}).(ResponseHeadersPolicyAccessControlAllowMethodsOutput)
}

func (o ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyAccessControlAllowMethods) []string {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.StringArrayOutput)
}

type ResponseHeadersPolicyAccessControlAllowOrigins struct {
	Items []string `pulumi:"items"`
}

// ResponseHeadersPolicyAccessControlAllowOriginsInput is an input type that accepts ResponseHeadersPolicyAccessControlAllowOriginsArgs and ResponseHeadersPolicyAccessControlAllowOriginsOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyAccessControlAllowOriginsInput` via:
//
//	ResponseHeadersPolicyAccessControlAllowOriginsArgs{...}
type ResponseHeadersPolicyAccessControlAllowOriginsInput interface {
	pulumi.Input

	ToResponseHeadersPolicyAccessControlAllowOriginsOutput() ResponseHeadersPolicyAccessControlAllowOriginsOutput
	ToResponseHeadersPolicyAccessControlAllowOriginsOutputWithContext(context.Context) ResponseHeadersPolicyAccessControlAllowOriginsOutput
}

type ResponseHeadersPolicyAccessControlAllowOriginsArgs struct {
	Items pulumi.StringArrayInput `pulumi:"items"`
}

func (ResponseHeadersPolicyAccessControlAllowOriginsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyAccessControlAllowOrigins)(nil)).Elem()
}

func (i ResponseHeadersPolicyAccessControlAllowOriginsArgs) ToResponseHeadersPolicyAccessControlAllowOriginsOutput() ResponseHeadersPolicyAccessControlAllowOriginsOutput {
	return i.ToResponseHeadersPolicyAccessControlAllowOriginsOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyAccessControlAllowOriginsArgs) ToResponseHeadersPolicyAccessControlAllowOriginsOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowOriginsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyAccessControlAllowOriginsOutput)
}

func (i ResponseHeadersPolicyAccessControlAllowOriginsArgs) ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutput() ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput {
	return i.ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyAccessControlAllowOriginsArgs) ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyAccessControlAllowOriginsOutput).ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyAccessControlAllowOriginsPtrInput is an input type that accepts ResponseHeadersPolicyAccessControlAllowOriginsArgs, ResponseHeadersPolicyAccessControlAllowOriginsPtr and ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyAccessControlAllowOriginsPtrInput` via:
//
//	        ResponseHeadersPolicyAccessControlAllowOriginsArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyAccessControlAllowOriginsPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutput() ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput
	ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutputWithContext(context.Context) ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput
}

type responseHeadersPolicyAccessControlAllowOriginsPtrType ResponseHeadersPolicyAccessControlAllowOriginsArgs

func ResponseHeadersPolicyAccessControlAllowOriginsPtr(v *ResponseHeadersPolicyAccessControlAllowOriginsArgs) ResponseHeadersPolicyAccessControlAllowOriginsPtrInput {
	return (*responseHeadersPolicyAccessControlAllowOriginsPtrType)(v)
}

func (*responseHeadersPolicyAccessControlAllowOriginsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyAccessControlAllowOrigins)(nil)).Elem()
}

func (i *responseHeadersPolicyAccessControlAllowOriginsPtrType) ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutput() ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput {
	return i.ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyAccessControlAllowOriginsPtrType) ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput)
}

type ResponseHeadersPolicyAccessControlAllowOriginsOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyAccessControlAllowOriginsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyAccessControlAllowOrigins)(nil)).Elem()
}

func (o ResponseHeadersPolicyAccessControlAllowOriginsOutput) ToResponseHeadersPolicyAccessControlAllowOriginsOutput() ResponseHeadersPolicyAccessControlAllowOriginsOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlAllowOriginsOutput) ToResponseHeadersPolicyAccessControlAllowOriginsOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowOriginsOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlAllowOriginsOutput) ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutput() ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput {
	return o.ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyAccessControlAllowOriginsOutput) ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyAccessControlAllowOrigins) *ResponseHeadersPolicyAccessControlAllowOrigins {
		return &v
	}).(ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput)
}

func (o ResponseHeadersPolicyAccessControlAllowOriginsOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyAccessControlAllowOrigins) []string { return v.Items }).(pulumi.StringArrayOutput)
}

type ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyAccessControlAllowOrigins)(nil)).Elem()
}

func (o ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput) ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutput() ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput) ToResponseHeadersPolicyAccessControlAllowOriginsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput) Elem() ResponseHeadersPolicyAccessControlAllowOriginsOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyAccessControlAllowOrigins) ResponseHeadersPolicyAccessControlAllowOrigins {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyAccessControlAllowOrigins
		return ret
	}).(ResponseHeadersPolicyAccessControlAllowOriginsOutput)
}

func (o ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyAccessControlAllowOrigins) []string {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.StringArrayOutput)
}

type ResponseHeadersPolicyAccessControlExposeHeaders struct {
	Items []string `pulumi:"items"`
}

// ResponseHeadersPolicyAccessControlExposeHeadersInput is an input type that accepts ResponseHeadersPolicyAccessControlExposeHeadersArgs and ResponseHeadersPolicyAccessControlExposeHeadersOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyAccessControlExposeHeadersInput` via:
//
//	ResponseHeadersPolicyAccessControlExposeHeadersArgs{...}
type ResponseHeadersPolicyAccessControlExposeHeadersInput interface {
	pulumi.Input

	ToResponseHeadersPolicyAccessControlExposeHeadersOutput() ResponseHeadersPolicyAccessControlExposeHeadersOutput
	ToResponseHeadersPolicyAccessControlExposeHeadersOutputWithContext(context.Context) ResponseHeadersPolicyAccessControlExposeHeadersOutput
}

type ResponseHeadersPolicyAccessControlExposeHeadersArgs struct {
	Items pulumi.StringArrayInput `pulumi:"items"`
}

func (ResponseHeadersPolicyAccessControlExposeHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyAccessControlExposeHeaders)(nil)).Elem()
}

func (i ResponseHeadersPolicyAccessControlExposeHeadersArgs) ToResponseHeadersPolicyAccessControlExposeHeadersOutput() ResponseHeadersPolicyAccessControlExposeHeadersOutput {
	return i.ToResponseHeadersPolicyAccessControlExposeHeadersOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyAccessControlExposeHeadersArgs) ToResponseHeadersPolicyAccessControlExposeHeadersOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlExposeHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyAccessControlExposeHeadersOutput)
}

func (i ResponseHeadersPolicyAccessControlExposeHeadersArgs) ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutput() ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput {
	return i.ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyAccessControlExposeHeadersArgs) ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyAccessControlExposeHeadersOutput).ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyAccessControlExposeHeadersPtrInput is an input type that accepts ResponseHeadersPolicyAccessControlExposeHeadersArgs, ResponseHeadersPolicyAccessControlExposeHeadersPtr and ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyAccessControlExposeHeadersPtrInput` via:
//
//	        ResponseHeadersPolicyAccessControlExposeHeadersArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyAccessControlExposeHeadersPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutput() ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput
	ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutputWithContext(context.Context) ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput
}

type responseHeadersPolicyAccessControlExposeHeadersPtrType ResponseHeadersPolicyAccessControlExposeHeadersArgs

func ResponseHeadersPolicyAccessControlExposeHeadersPtr(v *ResponseHeadersPolicyAccessControlExposeHeadersArgs) ResponseHeadersPolicyAccessControlExposeHeadersPtrInput {
	return (*responseHeadersPolicyAccessControlExposeHeadersPtrType)(v)
}

func (*responseHeadersPolicyAccessControlExposeHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyAccessControlExposeHeaders)(nil)).Elem()
}

func (i *responseHeadersPolicyAccessControlExposeHeadersPtrType) ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutput() ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput {
	return i.ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyAccessControlExposeHeadersPtrType) ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput)
}

type ResponseHeadersPolicyAccessControlExposeHeadersOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyAccessControlExposeHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyAccessControlExposeHeaders)(nil)).Elem()
}

func (o ResponseHeadersPolicyAccessControlExposeHeadersOutput) ToResponseHeadersPolicyAccessControlExposeHeadersOutput() ResponseHeadersPolicyAccessControlExposeHeadersOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlExposeHeadersOutput) ToResponseHeadersPolicyAccessControlExposeHeadersOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlExposeHeadersOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlExposeHeadersOutput) ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutput() ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput {
	return o.ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyAccessControlExposeHeadersOutput) ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyAccessControlExposeHeaders) *ResponseHeadersPolicyAccessControlExposeHeaders {
		return &v
	}).(ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput)
}

func (o ResponseHeadersPolicyAccessControlExposeHeadersOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyAccessControlExposeHeaders) []string { return v.Items }).(pulumi.StringArrayOutput)
}

type ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyAccessControlExposeHeaders)(nil)).Elem()
}

func (o ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput) ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutput() ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput) ToResponseHeadersPolicyAccessControlExposeHeadersPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput {
	return o
}

func (o ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput) Elem() ResponseHeadersPolicyAccessControlExposeHeadersOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyAccessControlExposeHeaders) ResponseHeadersPolicyAccessControlExposeHeaders {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyAccessControlExposeHeaders
		return ret
	}).(ResponseHeadersPolicyAccessControlExposeHeadersOutput)
}

func (o ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput) Items() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyAccessControlExposeHeaders) []string {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.StringArrayOutput)
}

type ResponseHeadersPolicyConfig struct {
	Comment                   *string                                         `pulumi:"comment"`
	CorsConfig                *ResponseHeadersPolicyCorsConfig                `pulumi:"corsConfig"`
	CustomHeadersConfig       *ResponseHeadersPolicyCustomHeadersConfig       `pulumi:"customHeadersConfig"`
	Name                      string                                          `pulumi:"name"`
	RemoveHeadersConfig       *ResponseHeadersPolicyRemoveHeadersConfig       `pulumi:"removeHeadersConfig"`
	SecurityHeadersConfig     *ResponseHeadersPolicySecurityHeadersConfig     `pulumi:"securityHeadersConfig"`
	ServerTimingHeadersConfig *ResponseHeadersPolicyServerTimingHeadersConfig `pulumi:"serverTimingHeadersConfig"`
}

// ResponseHeadersPolicyConfigInput is an input type that accepts ResponseHeadersPolicyConfigArgs and ResponseHeadersPolicyConfigOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyConfigInput` via:
//
//	ResponseHeadersPolicyConfigArgs{...}
type ResponseHeadersPolicyConfigInput interface {
	pulumi.Input

	ToResponseHeadersPolicyConfigOutput() ResponseHeadersPolicyConfigOutput
	ToResponseHeadersPolicyConfigOutputWithContext(context.Context) ResponseHeadersPolicyConfigOutput
}

type ResponseHeadersPolicyConfigArgs struct {
	Comment                   pulumi.StringPtrInput                                  `pulumi:"comment"`
	CorsConfig                ResponseHeadersPolicyCorsConfigPtrInput                `pulumi:"corsConfig"`
	CustomHeadersConfig       ResponseHeadersPolicyCustomHeadersConfigPtrInput       `pulumi:"customHeadersConfig"`
	Name                      pulumi.StringInput                                     `pulumi:"name"`
	RemoveHeadersConfig       ResponseHeadersPolicyRemoveHeadersConfigPtrInput       `pulumi:"removeHeadersConfig"`
	SecurityHeadersConfig     ResponseHeadersPolicySecurityHeadersConfigPtrInput     `pulumi:"securityHeadersConfig"`
	ServerTimingHeadersConfig ResponseHeadersPolicyServerTimingHeadersConfigPtrInput `pulumi:"serverTimingHeadersConfig"`
}

func (ResponseHeadersPolicyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyConfig)(nil)).Elem()
}

func (i ResponseHeadersPolicyConfigArgs) ToResponseHeadersPolicyConfigOutput() ResponseHeadersPolicyConfigOutput {
	return i.ToResponseHeadersPolicyConfigOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyConfigArgs) ToResponseHeadersPolicyConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyConfigOutput)
}

type ResponseHeadersPolicyConfigOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyConfigOutput) ToResponseHeadersPolicyConfigOutput() ResponseHeadersPolicyConfigOutput {
	return o
}

func (o ResponseHeadersPolicyConfigOutput) ToResponseHeadersPolicyConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyConfigOutput {
	return o
}

func (o ResponseHeadersPolicyConfigOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyConfig) *string { return v.Comment }).(pulumi.StringPtrOutput)
}

func (o ResponseHeadersPolicyConfigOutput) CorsConfig() ResponseHeadersPolicyCorsConfigPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyConfig) *ResponseHeadersPolicyCorsConfig { return v.CorsConfig }).(ResponseHeadersPolicyCorsConfigPtrOutput)
}

func (o ResponseHeadersPolicyConfigOutput) CustomHeadersConfig() ResponseHeadersPolicyCustomHeadersConfigPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyConfig) *ResponseHeadersPolicyCustomHeadersConfig {
		return v.CustomHeadersConfig
	}).(ResponseHeadersPolicyCustomHeadersConfigPtrOutput)
}

func (o ResponseHeadersPolicyConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyConfig) string { return v.Name }).(pulumi.StringOutput)
}

func (o ResponseHeadersPolicyConfigOutput) RemoveHeadersConfig() ResponseHeadersPolicyRemoveHeadersConfigPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyConfig) *ResponseHeadersPolicyRemoveHeadersConfig {
		return v.RemoveHeadersConfig
	}).(ResponseHeadersPolicyRemoveHeadersConfigPtrOutput)
}

func (o ResponseHeadersPolicyConfigOutput) SecurityHeadersConfig() ResponseHeadersPolicySecurityHeadersConfigPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyConfig) *ResponseHeadersPolicySecurityHeadersConfig {
		return v.SecurityHeadersConfig
	}).(ResponseHeadersPolicySecurityHeadersConfigPtrOutput)
}

func (o ResponseHeadersPolicyConfigOutput) ServerTimingHeadersConfig() ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyConfig) *ResponseHeadersPolicyServerTimingHeadersConfig {
		return v.ServerTimingHeadersConfig
	}).(ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput)
}

type ResponseHeadersPolicyConfigPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyConfigPtrOutput) ToResponseHeadersPolicyConfigPtrOutput() ResponseHeadersPolicyConfigPtrOutput {
	return o
}

func (o ResponseHeadersPolicyConfigPtrOutput) ToResponseHeadersPolicyConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyConfigPtrOutput {
	return o
}

func (o ResponseHeadersPolicyConfigPtrOutput) Elem() ResponseHeadersPolicyConfigOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyConfig) ResponseHeadersPolicyConfig {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyConfig
		return ret
	}).(ResponseHeadersPolicyConfigOutput)
}

func (o ResponseHeadersPolicyConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyConfig) *string {
		if v == nil {
			return nil
		}
		return v.Comment
	}).(pulumi.StringPtrOutput)
}

func (o ResponseHeadersPolicyConfigPtrOutput) CorsConfig() ResponseHeadersPolicyCorsConfigPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyConfig) *ResponseHeadersPolicyCorsConfig {
		if v == nil {
			return nil
		}
		return v.CorsConfig
	}).(ResponseHeadersPolicyCorsConfigPtrOutput)
}

func (o ResponseHeadersPolicyConfigPtrOutput) CustomHeadersConfig() ResponseHeadersPolicyCustomHeadersConfigPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyConfig) *ResponseHeadersPolicyCustomHeadersConfig {
		if v == nil {
			return nil
		}
		return v.CustomHeadersConfig
	}).(ResponseHeadersPolicyCustomHeadersConfigPtrOutput)
}

func (o ResponseHeadersPolicyConfigPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ResponseHeadersPolicyConfigPtrOutput) RemoveHeadersConfig() ResponseHeadersPolicyRemoveHeadersConfigPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyConfig) *ResponseHeadersPolicyRemoveHeadersConfig {
		if v == nil {
			return nil
		}
		return v.RemoveHeadersConfig
	}).(ResponseHeadersPolicyRemoveHeadersConfigPtrOutput)
}

func (o ResponseHeadersPolicyConfigPtrOutput) SecurityHeadersConfig() ResponseHeadersPolicySecurityHeadersConfigPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyConfig) *ResponseHeadersPolicySecurityHeadersConfig {
		if v == nil {
			return nil
		}
		return v.SecurityHeadersConfig
	}).(ResponseHeadersPolicySecurityHeadersConfigPtrOutput)
}

func (o ResponseHeadersPolicyConfigPtrOutput) ServerTimingHeadersConfig() ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyConfig) *ResponseHeadersPolicyServerTimingHeadersConfig {
		if v == nil {
			return nil
		}
		return v.ServerTimingHeadersConfig
	}).(ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput)
}

type ResponseHeadersPolicyContentSecurityPolicy struct {
	ContentSecurityPolicy string `pulumi:"contentSecurityPolicy"`
	Override              bool   `pulumi:"override"`
}

// ResponseHeadersPolicyContentSecurityPolicyInput is an input type that accepts ResponseHeadersPolicyContentSecurityPolicyArgs and ResponseHeadersPolicyContentSecurityPolicyOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyContentSecurityPolicyInput` via:
//
//	ResponseHeadersPolicyContentSecurityPolicyArgs{...}
type ResponseHeadersPolicyContentSecurityPolicyInput interface {
	pulumi.Input

	ToResponseHeadersPolicyContentSecurityPolicyOutput() ResponseHeadersPolicyContentSecurityPolicyOutput
	ToResponseHeadersPolicyContentSecurityPolicyOutputWithContext(context.Context) ResponseHeadersPolicyContentSecurityPolicyOutput
}

type ResponseHeadersPolicyContentSecurityPolicyArgs struct {
	ContentSecurityPolicy pulumi.StringInput `pulumi:"contentSecurityPolicy"`
	Override              pulumi.BoolInput   `pulumi:"override"`
}

func (ResponseHeadersPolicyContentSecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyContentSecurityPolicy)(nil)).Elem()
}

func (i ResponseHeadersPolicyContentSecurityPolicyArgs) ToResponseHeadersPolicyContentSecurityPolicyOutput() ResponseHeadersPolicyContentSecurityPolicyOutput {
	return i.ToResponseHeadersPolicyContentSecurityPolicyOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyContentSecurityPolicyArgs) ToResponseHeadersPolicyContentSecurityPolicyOutputWithContext(ctx context.Context) ResponseHeadersPolicyContentSecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyContentSecurityPolicyOutput)
}

func (i ResponseHeadersPolicyContentSecurityPolicyArgs) ToResponseHeadersPolicyContentSecurityPolicyPtrOutput() ResponseHeadersPolicyContentSecurityPolicyPtrOutput {
	return i.ToResponseHeadersPolicyContentSecurityPolicyPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyContentSecurityPolicyArgs) ToResponseHeadersPolicyContentSecurityPolicyPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyContentSecurityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyContentSecurityPolicyOutput).ToResponseHeadersPolicyContentSecurityPolicyPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyContentSecurityPolicyPtrInput is an input type that accepts ResponseHeadersPolicyContentSecurityPolicyArgs, ResponseHeadersPolicyContentSecurityPolicyPtr and ResponseHeadersPolicyContentSecurityPolicyPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyContentSecurityPolicyPtrInput` via:
//
//	        ResponseHeadersPolicyContentSecurityPolicyArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyContentSecurityPolicyPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyContentSecurityPolicyPtrOutput() ResponseHeadersPolicyContentSecurityPolicyPtrOutput
	ToResponseHeadersPolicyContentSecurityPolicyPtrOutputWithContext(context.Context) ResponseHeadersPolicyContentSecurityPolicyPtrOutput
}

type responseHeadersPolicyContentSecurityPolicyPtrType ResponseHeadersPolicyContentSecurityPolicyArgs

func ResponseHeadersPolicyContentSecurityPolicyPtr(v *ResponseHeadersPolicyContentSecurityPolicyArgs) ResponseHeadersPolicyContentSecurityPolicyPtrInput {
	return (*responseHeadersPolicyContentSecurityPolicyPtrType)(v)
}

func (*responseHeadersPolicyContentSecurityPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyContentSecurityPolicy)(nil)).Elem()
}

func (i *responseHeadersPolicyContentSecurityPolicyPtrType) ToResponseHeadersPolicyContentSecurityPolicyPtrOutput() ResponseHeadersPolicyContentSecurityPolicyPtrOutput {
	return i.ToResponseHeadersPolicyContentSecurityPolicyPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyContentSecurityPolicyPtrType) ToResponseHeadersPolicyContentSecurityPolicyPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyContentSecurityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyContentSecurityPolicyPtrOutput)
}

type ResponseHeadersPolicyContentSecurityPolicyOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyContentSecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyContentSecurityPolicy)(nil)).Elem()
}

func (o ResponseHeadersPolicyContentSecurityPolicyOutput) ToResponseHeadersPolicyContentSecurityPolicyOutput() ResponseHeadersPolicyContentSecurityPolicyOutput {
	return o
}

func (o ResponseHeadersPolicyContentSecurityPolicyOutput) ToResponseHeadersPolicyContentSecurityPolicyOutputWithContext(ctx context.Context) ResponseHeadersPolicyContentSecurityPolicyOutput {
	return o
}

func (o ResponseHeadersPolicyContentSecurityPolicyOutput) ToResponseHeadersPolicyContentSecurityPolicyPtrOutput() ResponseHeadersPolicyContentSecurityPolicyPtrOutput {
	return o.ToResponseHeadersPolicyContentSecurityPolicyPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyContentSecurityPolicyOutput) ToResponseHeadersPolicyContentSecurityPolicyPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyContentSecurityPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyContentSecurityPolicy) *ResponseHeadersPolicyContentSecurityPolicy {
		return &v
	}).(ResponseHeadersPolicyContentSecurityPolicyPtrOutput)
}

func (o ResponseHeadersPolicyContentSecurityPolicyOutput) ContentSecurityPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyContentSecurityPolicy) string { return v.ContentSecurityPolicy }).(pulumi.StringOutput)
}

func (o ResponseHeadersPolicyContentSecurityPolicyOutput) Override() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyContentSecurityPolicy) bool { return v.Override }).(pulumi.BoolOutput)
}

type ResponseHeadersPolicyContentSecurityPolicyPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyContentSecurityPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyContentSecurityPolicy)(nil)).Elem()
}

func (o ResponseHeadersPolicyContentSecurityPolicyPtrOutput) ToResponseHeadersPolicyContentSecurityPolicyPtrOutput() ResponseHeadersPolicyContentSecurityPolicyPtrOutput {
	return o
}

func (o ResponseHeadersPolicyContentSecurityPolicyPtrOutput) ToResponseHeadersPolicyContentSecurityPolicyPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyContentSecurityPolicyPtrOutput {
	return o
}

func (o ResponseHeadersPolicyContentSecurityPolicyPtrOutput) Elem() ResponseHeadersPolicyContentSecurityPolicyOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyContentSecurityPolicy) ResponseHeadersPolicyContentSecurityPolicy {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyContentSecurityPolicy
		return ret
	}).(ResponseHeadersPolicyContentSecurityPolicyOutput)
}

func (o ResponseHeadersPolicyContentSecurityPolicyPtrOutput) ContentSecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyContentSecurityPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.ContentSecurityPolicy
	}).(pulumi.StringPtrOutput)
}

func (o ResponseHeadersPolicyContentSecurityPolicyPtrOutput) Override() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyContentSecurityPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Override
	}).(pulumi.BoolPtrOutput)
}

type ResponseHeadersPolicyContentTypeOptions struct {
	Override bool `pulumi:"override"`
}

// ResponseHeadersPolicyContentTypeOptionsInput is an input type that accepts ResponseHeadersPolicyContentTypeOptionsArgs and ResponseHeadersPolicyContentTypeOptionsOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyContentTypeOptionsInput` via:
//
//	ResponseHeadersPolicyContentTypeOptionsArgs{...}
type ResponseHeadersPolicyContentTypeOptionsInput interface {
	pulumi.Input

	ToResponseHeadersPolicyContentTypeOptionsOutput() ResponseHeadersPolicyContentTypeOptionsOutput
	ToResponseHeadersPolicyContentTypeOptionsOutputWithContext(context.Context) ResponseHeadersPolicyContentTypeOptionsOutput
}

type ResponseHeadersPolicyContentTypeOptionsArgs struct {
	Override pulumi.BoolInput `pulumi:"override"`
}

func (ResponseHeadersPolicyContentTypeOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyContentTypeOptions)(nil)).Elem()
}

func (i ResponseHeadersPolicyContentTypeOptionsArgs) ToResponseHeadersPolicyContentTypeOptionsOutput() ResponseHeadersPolicyContentTypeOptionsOutput {
	return i.ToResponseHeadersPolicyContentTypeOptionsOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyContentTypeOptionsArgs) ToResponseHeadersPolicyContentTypeOptionsOutputWithContext(ctx context.Context) ResponseHeadersPolicyContentTypeOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyContentTypeOptionsOutput)
}

func (i ResponseHeadersPolicyContentTypeOptionsArgs) ToResponseHeadersPolicyContentTypeOptionsPtrOutput() ResponseHeadersPolicyContentTypeOptionsPtrOutput {
	return i.ToResponseHeadersPolicyContentTypeOptionsPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyContentTypeOptionsArgs) ToResponseHeadersPolicyContentTypeOptionsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyContentTypeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyContentTypeOptionsOutput).ToResponseHeadersPolicyContentTypeOptionsPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyContentTypeOptionsPtrInput is an input type that accepts ResponseHeadersPolicyContentTypeOptionsArgs, ResponseHeadersPolicyContentTypeOptionsPtr and ResponseHeadersPolicyContentTypeOptionsPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyContentTypeOptionsPtrInput` via:
//
//	        ResponseHeadersPolicyContentTypeOptionsArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyContentTypeOptionsPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyContentTypeOptionsPtrOutput() ResponseHeadersPolicyContentTypeOptionsPtrOutput
	ToResponseHeadersPolicyContentTypeOptionsPtrOutputWithContext(context.Context) ResponseHeadersPolicyContentTypeOptionsPtrOutput
}

type responseHeadersPolicyContentTypeOptionsPtrType ResponseHeadersPolicyContentTypeOptionsArgs

func ResponseHeadersPolicyContentTypeOptionsPtr(v *ResponseHeadersPolicyContentTypeOptionsArgs) ResponseHeadersPolicyContentTypeOptionsPtrInput {
	return (*responseHeadersPolicyContentTypeOptionsPtrType)(v)
}

func (*responseHeadersPolicyContentTypeOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyContentTypeOptions)(nil)).Elem()
}

func (i *responseHeadersPolicyContentTypeOptionsPtrType) ToResponseHeadersPolicyContentTypeOptionsPtrOutput() ResponseHeadersPolicyContentTypeOptionsPtrOutput {
	return i.ToResponseHeadersPolicyContentTypeOptionsPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyContentTypeOptionsPtrType) ToResponseHeadersPolicyContentTypeOptionsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyContentTypeOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyContentTypeOptionsPtrOutput)
}

type ResponseHeadersPolicyContentTypeOptionsOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyContentTypeOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyContentTypeOptions)(nil)).Elem()
}

func (o ResponseHeadersPolicyContentTypeOptionsOutput) ToResponseHeadersPolicyContentTypeOptionsOutput() ResponseHeadersPolicyContentTypeOptionsOutput {
	return o
}

func (o ResponseHeadersPolicyContentTypeOptionsOutput) ToResponseHeadersPolicyContentTypeOptionsOutputWithContext(ctx context.Context) ResponseHeadersPolicyContentTypeOptionsOutput {
	return o
}

func (o ResponseHeadersPolicyContentTypeOptionsOutput) ToResponseHeadersPolicyContentTypeOptionsPtrOutput() ResponseHeadersPolicyContentTypeOptionsPtrOutput {
	return o.ToResponseHeadersPolicyContentTypeOptionsPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyContentTypeOptionsOutput) ToResponseHeadersPolicyContentTypeOptionsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyContentTypeOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyContentTypeOptions) *ResponseHeadersPolicyContentTypeOptions {
		return &v
	}).(ResponseHeadersPolicyContentTypeOptionsPtrOutput)
}

func (o ResponseHeadersPolicyContentTypeOptionsOutput) Override() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyContentTypeOptions) bool { return v.Override }).(pulumi.BoolOutput)
}

type ResponseHeadersPolicyContentTypeOptionsPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyContentTypeOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyContentTypeOptions)(nil)).Elem()
}

func (o ResponseHeadersPolicyContentTypeOptionsPtrOutput) ToResponseHeadersPolicyContentTypeOptionsPtrOutput() ResponseHeadersPolicyContentTypeOptionsPtrOutput {
	return o
}

func (o ResponseHeadersPolicyContentTypeOptionsPtrOutput) ToResponseHeadersPolicyContentTypeOptionsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyContentTypeOptionsPtrOutput {
	return o
}

func (o ResponseHeadersPolicyContentTypeOptionsPtrOutput) Elem() ResponseHeadersPolicyContentTypeOptionsOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyContentTypeOptions) ResponseHeadersPolicyContentTypeOptions {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyContentTypeOptions
		return ret
	}).(ResponseHeadersPolicyContentTypeOptionsOutput)
}

func (o ResponseHeadersPolicyContentTypeOptionsPtrOutput) Override() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyContentTypeOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.Override
	}).(pulumi.BoolPtrOutput)
}

type ResponseHeadersPolicyCorsConfig struct {
	AccessControlAllowCredentials bool                                             `pulumi:"accessControlAllowCredentials"`
	AccessControlAllowHeaders     ResponseHeadersPolicyAccessControlAllowHeaders   `pulumi:"accessControlAllowHeaders"`
	AccessControlAllowMethods     ResponseHeadersPolicyAccessControlAllowMethods   `pulumi:"accessControlAllowMethods"`
	AccessControlAllowOrigins     ResponseHeadersPolicyAccessControlAllowOrigins   `pulumi:"accessControlAllowOrigins"`
	AccessControlExposeHeaders    *ResponseHeadersPolicyAccessControlExposeHeaders `pulumi:"accessControlExposeHeaders"`
	AccessControlMaxAgeSec        *int                                             `pulumi:"accessControlMaxAgeSec"`
	OriginOverride                bool                                             `pulumi:"originOverride"`
}

// ResponseHeadersPolicyCorsConfigInput is an input type that accepts ResponseHeadersPolicyCorsConfigArgs and ResponseHeadersPolicyCorsConfigOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyCorsConfigInput` via:
//
//	ResponseHeadersPolicyCorsConfigArgs{...}
type ResponseHeadersPolicyCorsConfigInput interface {
	pulumi.Input

	ToResponseHeadersPolicyCorsConfigOutput() ResponseHeadersPolicyCorsConfigOutput
	ToResponseHeadersPolicyCorsConfigOutputWithContext(context.Context) ResponseHeadersPolicyCorsConfigOutput
}

type ResponseHeadersPolicyCorsConfigArgs struct {
	AccessControlAllowCredentials pulumi.BoolInput                                        `pulumi:"accessControlAllowCredentials"`
	AccessControlAllowHeaders     ResponseHeadersPolicyAccessControlAllowHeadersInput     `pulumi:"accessControlAllowHeaders"`
	AccessControlAllowMethods     ResponseHeadersPolicyAccessControlAllowMethodsInput     `pulumi:"accessControlAllowMethods"`
	AccessControlAllowOrigins     ResponseHeadersPolicyAccessControlAllowOriginsInput     `pulumi:"accessControlAllowOrigins"`
	AccessControlExposeHeaders    ResponseHeadersPolicyAccessControlExposeHeadersPtrInput `pulumi:"accessControlExposeHeaders"`
	AccessControlMaxAgeSec        pulumi.IntPtrInput                                      `pulumi:"accessControlMaxAgeSec"`
	OriginOverride                pulumi.BoolInput                                        `pulumi:"originOverride"`
}

func (ResponseHeadersPolicyCorsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCorsConfig)(nil)).Elem()
}

func (i ResponseHeadersPolicyCorsConfigArgs) ToResponseHeadersPolicyCorsConfigOutput() ResponseHeadersPolicyCorsConfigOutput {
	return i.ToResponseHeadersPolicyCorsConfigOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCorsConfigArgs) ToResponseHeadersPolicyCorsConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCorsConfigOutput)
}

func (i ResponseHeadersPolicyCorsConfigArgs) ToResponseHeadersPolicyCorsConfigPtrOutput() ResponseHeadersPolicyCorsConfigPtrOutput {
	return i.ToResponseHeadersPolicyCorsConfigPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCorsConfigArgs) ToResponseHeadersPolicyCorsConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCorsConfigOutput).ToResponseHeadersPolicyCorsConfigPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyCorsConfigPtrInput is an input type that accepts ResponseHeadersPolicyCorsConfigArgs, ResponseHeadersPolicyCorsConfigPtr and ResponseHeadersPolicyCorsConfigPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyCorsConfigPtrInput` via:
//
//	        ResponseHeadersPolicyCorsConfigArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyCorsConfigPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyCorsConfigPtrOutput() ResponseHeadersPolicyCorsConfigPtrOutput
	ToResponseHeadersPolicyCorsConfigPtrOutputWithContext(context.Context) ResponseHeadersPolicyCorsConfigPtrOutput
}

type responseHeadersPolicyCorsConfigPtrType ResponseHeadersPolicyCorsConfigArgs

func ResponseHeadersPolicyCorsConfigPtr(v *ResponseHeadersPolicyCorsConfigArgs) ResponseHeadersPolicyCorsConfigPtrInput {
	return (*responseHeadersPolicyCorsConfigPtrType)(v)
}

func (*responseHeadersPolicyCorsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyCorsConfig)(nil)).Elem()
}

func (i *responseHeadersPolicyCorsConfigPtrType) ToResponseHeadersPolicyCorsConfigPtrOutput() ResponseHeadersPolicyCorsConfigPtrOutput {
	return i.ToResponseHeadersPolicyCorsConfigPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyCorsConfigPtrType) ToResponseHeadersPolicyCorsConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCorsConfigPtrOutput)
}

type ResponseHeadersPolicyCorsConfigOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCorsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCorsConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyCorsConfigOutput) ToResponseHeadersPolicyCorsConfigOutput() ResponseHeadersPolicyCorsConfigOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigOutput) ToResponseHeadersPolicyCorsConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigOutput) ToResponseHeadersPolicyCorsConfigPtrOutput() ResponseHeadersPolicyCorsConfigPtrOutput {
	return o.ToResponseHeadersPolicyCorsConfigPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyCorsConfigOutput) ToResponseHeadersPolicyCorsConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyCorsConfig) *ResponseHeadersPolicyCorsConfig {
		return &v
	}).(ResponseHeadersPolicyCorsConfigPtrOutput)
}

func (o ResponseHeadersPolicyCorsConfigOutput) AccessControlAllowCredentials() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyCorsConfig) bool { return v.AccessControlAllowCredentials }).(pulumi.BoolOutput)
}

func (o ResponseHeadersPolicyCorsConfigOutput) AccessControlAllowHeaders() ResponseHeadersPolicyAccessControlAllowHeadersOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyCorsConfig) ResponseHeadersPolicyAccessControlAllowHeaders {
		return v.AccessControlAllowHeaders
	}).(ResponseHeadersPolicyAccessControlAllowHeadersOutput)
}

func (o ResponseHeadersPolicyCorsConfigOutput) AccessControlAllowMethods() ResponseHeadersPolicyAccessControlAllowMethodsOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyCorsConfig) ResponseHeadersPolicyAccessControlAllowMethods {
		return v.AccessControlAllowMethods
	}).(ResponseHeadersPolicyAccessControlAllowMethodsOutput)
}

func (o ResponseHeadersPolicyCorsConfigOutput) AccessControlAllowOrigins() ResponseHeadersPolicyAccessControlAllowOriginsOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyCorsConfig) ResponseHeadersPolicyAccessControlAllowOrigins {
		return v.AccessControlAllowOrigins
	}).(ResponseHeadersPolicyAccessControlAllowOriginsOutput)
}

func (o ResponseHeadersPolicyCorsConfigOutput) AccessControlExposeHeaders() ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyCorsConfig) *ResponseHeadersPolicyAccessControlExposeHeaders {
		return v.AccessControlExposeHeaders
	}).(ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput)
}

func (o ResponseHeadersPolicyCorsConfigOutput) AccessControlMaxAgeSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyCorsConfig) *int { return v.AccessControlMaxAgeSec }).(pulumi.IntPtrOutput)
}

func (o ResponseHeadersPolicyCorsConfigOutput) OriginOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyCorsConfig) bool { return v.OriginOverride }).(pulumi.BoolOutput)
}

type ResponseHeadersPolicyCorsConfigPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCorsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyCorsConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyCorsConfigPtrOutput) ToResponseHeadersPolicyCorsConfigPtrOutput() ResponseHeadersPolicyCorsConfigPtrOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigPtrOutput) ToResponseHeadersPolicyCorsConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyCorsConfigPtrOutput {
	return o
}

func (o ResponseHeadersPolicyCorsConfigPtrOutput) Elem() ResponseHeadersPolicyCorsConfigOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyCorsConfig) ResponseHeadersPolicyCorsConfig {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyCorsConfig
		return ret
	}).(ResponseHeadersPolicyCorsConfigOutput)
}

func (o ResponseHeadersPolicyCorsConfigPtrOutput) AccessControlAllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyCorsConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.AccessControlAllowCredentials
	}).(pulumi.BoolPtrOutput)
}

func (o ResponseHeadersPolicyCorsConfigPtrOutput) AccessControlAllowHeaders() ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyCorsConfig) *ResponseHeadersPolicyAccessControlAllowHeaders {
		if v == nil {
			return nil
		}
		return &v.AccessControlAllowHeaders
	}).(ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput)
}

func (o ResponseHeadersPolicyCorsConfigPtrOutput) AccessControlAllowMethods() ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyCorsConfig) *ResponseHeadersPolicyAccessControlAllowMethods {
		if v == nil {
			return nil
		}
		return &v.AccessControlAllowMethods
	}).(ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput)
}

func (o ResponseHeadersPolicyCorsConfigPtrOutput) AccessControlAllowOrigins() ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyCorsConfig) *ResponseHeadersPolicyAccessControlAllowOrigins {
		if v == nil {
			return nil
		}
		return &v.AccessControlAllowOrigins
	}).(ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput)
}

func (o ResponseHeadersPolicyCorsConfigPtrOutput) AccessControlExposeHeaders() ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyCorsConfig) *ResponseHeadersPolicyAccessControlExposeHeaders {
		if v == nil {
			return nil
		}
		return v.AccessControlExposeHeaders
	}).(ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput)
}

func (o ResponseHeadersPolicyCorsConfigPtrOutput) AccessControlMaxAgeSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyCorsConfig) *int {
		if v == nil {
			return nil
		}
		return v.AccessControlMaxAgeSec
	}).(pulumi.IntPtrOutput)
}

func (o ResponseHeadersPolicyCorsConfigPtrOutput) OriginOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyCorsConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.OriginOverride
	}).(pulumi.BoolPtrOutput)
}

type ResponseHeadersPolicyCustomHeader struct {
	Header   string `pulumi:"header"`
	Override bool   `pulumi:"override"`
	Value    string `pulumi:"value"`
}

// ResponseHeadersPolicyCustomHeaderInput is an input type that accepts ResponseHeadersPolicyCustomHeaderArgs and ResponseHeadersPolicyCustomHeaderOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyCustomHeaderInput` via:
//
//	ResponseHeadersPolicyCustomHeaderArgs{...}
type ResponseHeadersPolicyCustomHeaderInput interface {
	pulumi.Input

	ToResponseHeadersPolicyCustomHeaderOutput() ResponseHeadersPolicyCustomHeaderOutput
	ToResponseHeadersPolicyCustomHeaderOutputWithContext(context.Context) ResponseHeadersPolicyCustomHeaderOutput
}

type ResponseHeadersPolicyCustomHeaderArgs struct {
	Header   pulumi.StringInput `pulumi:"header"`
	Override pulumi.BoolInput   `pulumi:"override"`
	Value    pulumi.StringInput `pulumi:"value"`
}

func (ResponseHeadersPolicyCustomHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCustomHeader)(nil)).Elem()
}

func (i ResponseHeadersPolicyCustomHeaderArgs) ToResponseHeadersPolicyCustomHeaderOutput() ResponseHeadersPolicyCustomHeaderOutput {
	return i.ToResponseHeadersPolicyCustomHeaderOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCustomHeaderArgs) ToResponseHeadersPolicyCustomHeaderOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCustomHeaderOutput)
}

// ResponseHeadersPolicyCustomHeaderArrayInput is an input type that accepts ResponseHeadersPolicyCustomHeaderArray and ResponseHeadersPolicyCustomHeaderArrayOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyCustomHeaderArrayInput` via:
//
//	ResponseHeadersPolicyCustomHeaderArray{ ResponseHeadersPolicyCustomHeaderArgs{...} }
type ResponseHeadersPolicyCustomHeaderArrayInput interface {
	pulumi.Input

	ToResponseHeadersPolicyCustomHeaderArrayOutput() ResponseHeadersPolicyCustomHeaderArrayOutput
	ToResponseHeadersPolicyCustomHeaderArrayOutputWithContext(context.Context) ResponseHeadersPolicyCustomHeaderArrayOutput
}

type ResponseHeadersPolicyCustomHeaderArray []ResponseHeadersPolicyCustomHeaderInput

func (ResponseHeadersPolicyCustomHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponseHeadersPolicyCustomHeader)(nil)).Elem()
}

func (i ResponseHeadersPolicyCustomHeaderArray) ToResponseHeadersPolicyCustomHeaderArrayOutput() ResponseHeadersPolicyCustomHeaderArrayOutput {
	return i.ToResponseHeadersPolicyCustomHeaderArrayOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCustomHeaderArray) ToResponseHeadersPolicyCustomHeaderArrayOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCustomHeaderArrayOutput)
}

type ResponseHeadersPolicyCustomHeaderOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCustomHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCustomHeader)(nil)).Elem()
}

func (o ResponseHeadersPolicyCustomHeaderOutput) ToResponseHeadersPolicyCustomHeaderOutput() ResponseHeadersPolicyCustomHeaderOutput {
	return o
}

func (o ResponseHeadersPolicyCustomHeaderOutput) ToResponseHeadersPolicyCustomHeaderOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeaderOutput {
	return o
}

func (o ResponseHeadersPolicyCustomHeaderOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyCustomHeader) string { return v.Header }).(pulumi.StringOutput)
}

func (o ResponseHeadersPolicyCustomHeaderOutput) Override() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyCustomHeader) bool { return v.Override }).(pulumi.BoolOutput)
}

func (o ResponseHeadersPolicyCustomHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyCustomHeader) string { return v.Value }).(pulumi.StringOutput)
}

type ResponseHeadersPolicyCustomHeaderArrayOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCustomHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponseHeadersPolicyCustomHeader)(nil)).Elem()
}

func (o ResponseHeadersPolicyCustomHeaderArrayOutput) ToResponseHeadersPolicyCustomHeaderArrayOutput() ResponseHeadersPolicyCustomHeaderArrayOutput {
	return o
}

func (o ResponseHeadersPolicyCustomHeaderArrayOutput) ToResponseHeadersPolicyCustomHeaderArrayOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeaderArrayOutput {
	return o
}

func (o ResponseHeadersPolicyCustomHeaderArrayOutput) Index(i pulumi.IntInput) ResponseHeadersPolicyCustomHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponseHeadersPolicyCustomHeader {
		return vs[0].([]ResponseHeadersPolicyCustomHeader)[vs[1].(int)]
	}).(ResponseHeadersPolicyCustomHeaderOutput)
}

type ResponseHeadersPolicyCustomHeadersConfig struct {
	Items []ResponseHeadersPolicyCustomHeader `pulumi:"items"`
}

// ResponseHeadersPolicyCustomHeadersConfigInput is an input type that accepts ResponseHeadersPolicyCustomHeadersConfigArgs and ResponseHeadersPolicyCustomHeadersConfigOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyCustomHeadersConfigInput` via:
//
//	ResponseHeadersPolicyCustomHeadersConfigArgs{...}
type ResponseHeadersPolicyCustomHeadersConfigInput interface {
	pulumi.Input

	ToResponseHeadersPolicyCustomHeadersConfigOutput() ResponseHeadersPolicyCustomHeadersConfigOutput
	ToResponseHeadersPolicyCustomHeadersConfigOutputWithContext(context.Context) ResponseHeadersPolicyCustomHeadersConfigOutput
}

type ResponseHeadersPolicyCustomHeadersConfigArgs struct {
	Items ResponseHeadersPolicyCustomHeaderArrayInput `pulumi:"items"`
}

func (ResponseHeadersPolicyCustomHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCustomHeadersConfig)(nil)).Elem()
}

func (i ResponseHeadersPolicyCustomHeadersConfigArgs) ToResponseHeadersPolicyCustomHeadersConfigOutput() ResponseHeadersPolicyCustomHeadersConfigOutput {
	return i.ToResponseHeadersPolicyCustomHeadersConfigOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCustomHeadersConfigArgs) ToResponseHeadersPolicyCustomHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCustomHeadersConfigOutput)
}

func (i ResponseHeadersPolicyCustomHeadersConfigArgs) ToResponseHeadersPolicyCustomHeadersConfigPtrOutput() ResponseHeadersPolicyCustomHeadersConfigPtrOutput {
	return i.ToResponseHeadersPolicyCustomHeadersConfigPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyCustomHeadersConfigArgs) ToResponseHeadersPolicyCustomHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCustomHeadersConfigOutput).ToResponseHeadersPolicyCustomHeadersConfigPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyCustomHeadersConfigPtrInput is an input type that accepts ResponseHeadersPolicyCustomHeadersConfigArgs, ResponseHeadersPolicyCustomHeadersConfigPtr and ResponseHeadersPolicyCustomHeadersConfigPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyCustomHeadersConfigPtrInput` via:
//
//	        ResponseHeadersPolicyCustomHeadersConfigArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyCustomHeadersConfigPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyCustomHeadersConfigPtrOutput() ResponseHeadersPolicyCustomHeadersConfigPtrOutput
	ToResponseHeadersPolicyCustomHeadersConfigPtrOutputWithContext(context.Context) ResponseHeadersPolicyCustomHeadersConfigPtrOutput
}

type responseHeadersPolicyCustomHeadersConfigPtrType ResponseHeadersPolicyCustomHeadersConfigArgs

func ResponseHeadersPolicyCustomHeadersConfigPtr(v *ResponseHeadersPolicyCustomHeadersConfigArgs) ResponseHeadersPolicyCustomHeadersConfigPtrInput {
	return (*responseHeadersPolicyCustomHeadersConfigPtrType)(v)
}

func (*responseHeadersPolicyCustomHeadersConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyCustomHeadersConfig)(nil)).Elem()
}

func (i *responseHeadersPolicyCustomHeadersConfigPtrType) ToResponseHeadersPolicyCustomHeadersConfigPtrOutput() ResponseHeadersPolicyCustomHeadersConfigPtrOutput {
	return i.ToResponseHeadersPolicyCustomHeadersConfigPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyCustomHeadersConfigPtrType) ToResponseHeadersPolicyCustomHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyCustomHeadersConfigPtrOutput)
}

type ResponseHeadersPolicyCustomHeadersConfigOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCustomHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyCustomHeadersConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyCustomHeadersConfigOutput) ToResponseHeadersPolicyCustomHeadersConfigOutput() ResponseHeadersPolicyCustomHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicyCustomHeadersConfigOutput) ToResponseHeadersPolicyCustomHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicyCustomHeadersConfigOutput) ToResponseHeadersPolicyCustomHeadersConfigPtrOutput() ResponseHeadersPolicyCustomHeadersConfigPtrOutput {
	return o.ToResponseHeadersPolicyCustomHeadersConfigPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyCustomHeadersConfigOutput) ToResponseHeadersPolicyCustomHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeadersConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyCustomHeadersConfig) *ResponseHeadersPolicyCustomHeadersConfig {
		return &v
	}).(ResponseHeadersPolicyCustomHeadersConfigPtrOutput)
}

func (o ResponseHeadersPolicyCustomHeadersConfigOutput) Items() ResponseHeadersPolicyCustomHeaderArrayOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyCustomHeadersConfig) []ResponseHeadersPolicyCustomHeader { return v.Items }).(ResponseHeadersPolicyCustomHeaderArrayOutput)
}

type ResponseHeadersPolicyCustomHeadersConfigPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyCustomHeadersConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyCustomHeadersConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyCustomHeadersConfigPtrOutput) ToResponseHeadersPolicyCustomHeadersConfigPtrOutput() ResponseHeadersPolicyCustomHeadersConfigPtrOutput {
	return o
}

func (o ResponseHeadersPolicyCustomHeadersConfigPtrOutput) ToResponseHeadersPolicyCustomHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyCustomHeadersConfigPtrOutput {
	return o
}

func (o ResponseHeadersPolicyCustomHeadersConfigPtrOutput) Elem() ResponseHeadersPolicyCustomHeadersConfigOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyCustomHeadersConfig) ResponseHeadersPolicyCustomHeadersConfig {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyCustomHeadersConfig
		return ret
	}).(ResponseHeadersPolicyCustomHeadersConfigOutput)
}

func (o ResponseHeadersPolicyCustomHeadersConfigPtrOutput) Items() ResponseHeadersPolicyCustomHeaderArrayOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyCustomHeadersConfig) []ResponseHeadersPolicyCustomHeader {
		if v == nil {
			return nil
		}
		return v.Items
	}).(ResponseHeadersPolicyCustomHeaderArrayOutput)
}

type ResponseHeadersPolicyFrameOptions struct {
	FrameOption string `pulumi:"frameOption"`
	Override    bool   `pulumi:"override"`
}

// ResponseHeadersPolicyFrameOptionsInput is an input type that accepts ResponseHeadersPolicyFrameOptionsArgs and ResponseHeadersPolicyFrameOptionsOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyFrameOptionsInput` via:
//
//	ResponseHeadersPolicyFrameOptionsArgs{...}
type ResponseHeadersPolicyFrameOptionsInput interface {
	pulumi.Input

	ToResponseHeadersPolicyFrameOptionsOutput() ResponseHeadersPolicyFrameOptionsOutput
	ToResponseHeadersPolicyFrameOptionsOutputWithContext(context.Context) ResponseHeadersPolicyFrameOptionsOutput
}

type ResponseHeadersPolicyFrameOptionsArgs struct {
	FrameOption pulumi.StringInput `pulumi:"frameOption"`
	Override    pulumi.BoolInput   `pulumi:"override"`
}

func (ResponseHeadersPolicyFrameOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyFrameOptions)(nil)).Elem()
}

func (i ResponseHeadersPolicyFrameOptionsArgs) ToResponseHeadersPolicyFrameOptionsOutput() ResponseHeadersPolicyFrameOptionsOutput {
	return i.ToResponseHeadersPolicyFrameOptionsOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyFrameOptionsArgs) ToResponseHeadersPolicyFrameOptionsOutputWithContext(ctx context.Context) ResponseHeadersPolicyFrameOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyFrameOptionsOutput)
}

func (i ResponseHeadersPolicyFrameOptionsArgs) ToResponseHeadersPolicyFrameOptionsPtrOutput() ResponseHeadersPolicyFrameOptionsPtrOutput {
	return i.ToResponseHeadersPolicyFrameOptionsPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyFrameOptionsArgs) ToResponseHeadersPolicyFrameOptionsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyFrameOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyFrameOptionsOutput).ToResponseHeadersPolicyFrameOptionsPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyFrameOptionsPtrInput is an input type that accepts ResponseHeadersPolicyFrameOptionsArgs, ResponseHeadersPolicyFrameOptionsPtr and ResponseHeadersPolicyFrameOptionsPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyFrameOptionsPtrInput` via:
//
//	        ResponseHeadersPolicyFrameOptionsArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyFrameOptionsPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyFrameOptionsPtrOutput() ResponseHeadersPolicyFrameOptionsPtrOutput
	ToResponseHeadersPolicyFrameOptionsPtrOutputWithContext(context.Context) ResponseHeadersPolicyFrameOptionsPtrOutput
}

type responseHeadersPolicyFrameOptionsPtrType ResponseHeadersPolicyFrameOptionsArgs

func ResponseHeadersPolicyFrameOptionsPtr(v *ResponseHeadersPolicyFrameOptionsArgs) ResponseHeadersPolicyFrameOptionsPtrInput {
	return (*responseHeadersPolicyFrameOptionsPtrType)(v)
}

func (*responseHeadersPolicyFrameOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyFrameOptions)(nil)).Elem()
}

func (i *responseHeadersPolicyFrameOptionsPtrType) ToResponseHeadersPolicyFrameOptionsPtrOutput() ResponseHeadersPolicyFrameOptionsPtrOutput {
	return i.ToResponseHeadersPolicyFrameOptionsPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyFrameOptionsPtrType) ToResponseHeadersPolicyFrameOptionsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyFrameOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyFrameOptionsPtrOutput)
}

type ResponseHeadersPolicyFrameOptionsOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyFrameOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyFrameOptions)(nil)).Elem()
}

func (o ResponseHeadersPolicyFrameOptionsOutput) ToResponseHeadersPolicyFrameOptionsOutput() ResponseHeadersPolicyFrameOptionsOutput {
	return o
}

func (o ResponseHeadersPolicyFrameOptionsOutput) ToResponseHeadersPolicyFrameOptionsOutputWithContext(ctx context.Context) ResponseHeadersPolicyFrameOptionsOutput {
	return o
}

func (o ResponseHeadersPolicyFrameOptionsOutput) ToResponseHeadersPolicyFrameOptionsPtrOutput() ResponseHeadersPolicyFrameOptionsPtrOutput {
	return o.ToResponseHeadersPolicyFrameOptionsPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyFrameOptionsOutput) ToResponseHeadersPolicyFrameOptionsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyFrameOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyFrameOptions) *ResponseHeadersPolicyFrameOptions {
		return &v
	}).(ResponseHeadersPolicyFrameOptionsPtrOutput)
}

func (o ResponseHeadersPolicyFrameOptionsOutput) FrameOption() pulumi.StringOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyFrameOptions) string { return v.FrameOption }).(pulumi.StringOutput)
}

func (o ResponseHeadersPolicyFrameOptionsOutput) Override() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyFrameOptions) bool { return v.Override }).(pulumi.BoolOutput)
}

type ResponseHeadersPolicyFrameOptionsPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyFrameOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyFrameOptions)(nil)).Elem()
}

func (o ResponseHeadersPolicyFrameOptionsPtrOutput) ToResponseHeadersPolicyFrameOptionsPtrOutput() ResponseHeadersPolicyFrameOptionsPtrOutput {
	return o
}

func (o ResponseHeadersPolicyFrameOptionsPtrOutput) ToResponseHeadersPolicyFrameOptionsPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyFrameOptionsPtrOutput {
	return o
}

func (o ResponseHeadersPolicyFrameOptionsPtrOutput) Elem() ResponseHeadersPolicyFrameOptionsOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyFrameOptions) ResponseHeadersPolicyFrameOptions {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyFrameOptions
		return ret
	}).(ResponseHeadersPolicyFrameOptionsOutput)
}

func (o ResponseHeadersPolicyFrameOptionsPtrOutput) FrameOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyFrameOptions) *string {
		if v == nil {
			return nil
		}
		return &v.FrameOption
	}).(pulumi.StringPtrOutput)
}

func (o ResponseHeadersPolicyFrameOptionsPtrOutput) Override() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyFrameOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.Override
	}).(pulumi.BoolPtrOutput)
}

type ResponseHeadersPolicyReferrerPolicy struct {
	Override       bool   `pulumi:"override"`
	ReferrerPolicy string `pulumi:"referrerPolicy"`
}

// ResponseHeadersPolicyReferrerPolicyInput is an input type that accepts ResponseHeadersPolicyReferrerPolicyArgs and ResponseHeadersPolicyReferrerPolicyOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyReferrerPolicyInput` via:
//
//	ResponseHeadersPolicyReferrerPolicyArgs{...}
type ResponseHeadersPolicyReferrerPolicyInput interface {
	pulumi.Input

	ToResponseHeadersPolicyReferrerPolicyOutput() ResponseHeadersPolicyReferrerPolicyOutput
	ToResponseHeadersPolicyReferrerPolicyOutputWithContext(context.Context) ResponseHeadersPolicyReferrerPolicyOutput
}

type ResponseHeadersPolicyReferrerPolicyArgs struct {
	Override       pulumi.BoolInput   `pulumi:"override"`
	ReferrerPolicy pulumi.StringInput `pulumi:"referrerPolicy"`
}

func (ResponseHeadersPolicyReferrerPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyReferrerPolicy)(nil)).Elem()
}

func (i ResponseHeadersPolicyReferrerPolicyArgs) ToResponseHeadersPolicyReferrerPolicyOutput() ResponseHeadersPolicyReferrerPolicyOutput {
	return i.ToResponseHeadersPolicyReferrerPolicyOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyReferrerPolicyArgs) ToResponseHeadersPolicyReferrerPolicyOutputWithContext(ctx context.Context) ResponseHeadersPolicyReferrerPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyReferrerPolicyOutput)
}

func (i ResponseHeadersPolicyReferrerPolicyArgs) ToResponseHeadersPolicyReferrerPolicyPtrOutput() ResponseHeadersPolicyReferrerPolicyPtrOutput {
	return i.ToResponseHeadersPolicyReferrerPolicyPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyReferrerPolicyArgs) ToResponseHeadersPolicyReferrerPolicyPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyReferrerPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyReferrerPolicyOutput).ToResponseHeadersPolicyReferrerPolicyPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyReferrerPolicyPtrInput is an input type that accepts ResponseHeadersPolicyReferrerPolicyArgs, ResponseHeadersPolicyReferrerPolicyPtr and ResponseHeadersPolicyReferrerPolicyPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyReferrerPolicyPtrInput` via:
//
//	        ResponseHeadersPolicyReferrerPolicyArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyReferrerPolicyPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyReferrerPolicyPtrOutput() ResponseHeadersPolicyReferrerPolicyPtrOutput
	ToResponseHeadersPolicyReferrerPolicyPtrOutputWithContext(context.Context) ResponseHeadersPolicyReferrerPolicyPtrOutput
}

type responseHeadersPolicyReferrerPolicyPtrType ResponseHeadersPolicyReferrerPolicyArgs

func ResponseHeadersPolicyReferrerPolicyPtr(v *ResponseHeadersPolicyReferrerPolicyArgs) ResponseHeadersPolicyReferrerPolicyPtrInput {
	return (*responseHeadersPolicyReferrerPolicyPtrType)(v)
}

func (*responseHeadersPolicyReferrerPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyReferrerPolicy)(nil)).Elem()
}

func (i *responseHeadersPolicyReferrerPolicyPtrType) ToResponseHeadersPolicyReferrerPolicyPtrOutput() ResponseHeadersPolicyReferrerPolicyPtrOutput {
	return i.ToResponseHeadersPolicyReferrerPolicyPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyReferrerPolicyPtrType) ToResponseHeadersPolicyReferrerPolicyPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyReferrerPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyReferrerPolicyPtrOutput)
}

type ResponseHeadersPolicyReferrerPolicyOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyReferrerPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyReferrerPolicy)(nil)).Elem()
}

func (o ResponseHeadersPolicyReferrerPolicyOutput) ToResponseHeadersPolicyReferrerPolicyOutput() ResponseHeadersPolicyReferrerPolicyOutput {
	return o
}

func (o ResponseHeadersPolicyReferrerPolicyOutput) ToResponseHeadersPolicyReferrerPolicyOutputWithContext(ctx context.Context) ResponseHeadersPolicyReferrerPolicyOutput {
	return o
}

func (o ResponseHeadersPolicyReferrerPolicyOutput) ToResponseHeadersPolicyReferrerPolicyPtrOutput() ResponseHeadersPolicyReferrerPolicyPtrOutput {
	return o.ToResponseHeadersPolicyReferrerPolicyPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyReferrerPolicyOutput) ToResponseHeadersPolicyReferrerPolicyPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyReferrerPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyReferrerPolicy) *ResponseHeadersPolicyReferrerPolicy {
		return &v
	}).(ResponseHeadersPolicyReferrerPolicyPtrOutput)
}

func (o ResponseHeadersPolicyReferrerPolicyOutput) Override() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyReferrerPolicy) bool { return v.Override }).(pulumi.BoolOutput)
}

func (o ResponseHeadersPolicyReferrerPolicyOutput) ReferrerPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyReferrerPolicy) string { return v.ReferrerPolicy }).(pulumi.StringOutput)
}

type ResponseHeadersPolicyReferrerPolicyPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyReferrerPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyReferrerPolicy)(nil)).Elem()
}

func (o ResponseHeadersPolicyReferrerPolicyPtrOutput) ToResponseHeadersPolicyReferrerPolicyPtrOutput() ResponseHeadersPolicyReferrerPolicyPtrOutput {
	return o
}

func (o ResponseHeadersPolicyReferrerPolicyPtrOutput) ToResponseHeadersPolicyReferrerPolicyPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyReferrerPolicyPtrOutput {
	return o
}

func (o ResponseHeadersPolicyReferrerPolicyPtrOutput) Elem() ResponseHeadersPolicyReferrerPolicyOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyReferrerPolicy) ResponseHeadersPolicyReferrerPolicy {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyReferrerPolicy
		return ret
	}).(ResponseHeadersPolicyReferrerPolicyOutput)
}

func (o ResponseHeadersPolicyReferrerPolicyPtrOutput) Override() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyReferrerPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Override
	}).(pulumi.BoolPtrOutput)
}

func (o ResponseHeadersPolicyReferrerPolicyPtrOutput) ReferrerPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyReferrerPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.ReferrerPolicy
	}).(pulumi.StringPtrOutput)
}

type ResponseHeadersPolicyRemoveHeader struct {
	Header string `pulumi:"header"`
}

// ResponseHeadersPolicyRemoveHeaderInput is an input type that accepts ResponseHeadersPolicyRemoveHeaderArgs and ResponseHeadersPolicyRemoveHeaderOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyRemoveHeaderInput` via:
//
//	ResponseHeadersPolicyRemoveHeaderArgs{...}
type ResponseHeadersPolicyRemoveHeaderInput interface {
	pulumi.Input

	ToResponseHeadersPolicyRemoveHeaderOutput() ResponseHeadersPolicyRemoveHeaderOutput
	ToResponseHeadersPolicyRemoveHeaderOutputWithContext(context.Context) ResponseHeadersPolicyRemoveHeaderOutput
}

type ResponseHeadersPolicyRemoveHeaderArgs struct {
	Header pulumi.StringInput `pulumi:"header"`
}

func (ResponseHeadersPolicyRemoveHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyRemoveHeader)(nil)).Elem()
}

func (i ResponseHeadersPolicyRemoveHeaderArgs) ToResponseHeadersPolicyRemoveHeaderOutput() ResponseHeadersPolicyRemoveHeaderOutput {
	return i.ToResponseHeadersPolicyRemoveHeaderOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyRemoveHeaderArgs) ToResponseHeadersPolicyRemoveHeaderOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyRemoveHeaderOutput)
}

// ResponseHeadersPolicyRemoveHeaderArrayInput is an input type that accepts ResponseHeadersPolicyRemoveHeaderArray and ResponseHeadersPolicyRemoveHeaderArrayOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyRemoveHeaderArrayInput` via:
//
//	ResponseHeadersPolicyRemoveHeaderArray{ ResponseHeadersPolicyRemoveHeaderArgs{...} }
type ResponseHeadersPolicyRemoveHeaderArrayInput interface {
	pulumi.Input

	ToResponseHeadersPolicyRemoveHeaderArrayOutput() ResponseHeadersPolicyRemoveHeaderArrayOutput
	ToResponseHeadersPolicyRemoveHeaderArrayOutputWithContext(context.Context) ResponseHeadersPolicyRemoveHeaderArrayOutput
}

type ResponseHeadersPolicyRemoveHeaderArray []ResponseHeadersPolicyRemoveHeaderInput

func (ResponseHeadersPolicyRemoveHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponseHeadersPolicyRemoveHeader)(nil)).Elem()
}

func (i ResponseHeadersPolicyRemoveHeaderArray) ToResponseHeadersPolicyRemoveHeaderArrayOutput() ResponseHeadersPolicyRemoveHeaderArrayOutput {
	return i.ToResponseHeadersPolicyRemoveHeaderArrayOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyRemoveHeaderArray) ToResponseHeadersPolicyRemoveHeaderArrayOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyRemoveHeaderArrayOutput)
}

type ResponseHeadersPolicyRemoveHeaderOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyRemoveHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyRemoveHeader)(nil)).Elem()
}

func (o ResponseHeadersPolicyRemoveHeaderOutput) ToResponseHeadersPolicyRemoveHeaderOutput() ResponseHeadersPolicyRemoveHeaderOutput {
	return o
}

func (o ResponseHeadersPolicyRemoveHeaderOutput) ToResponseHeadersPolicyRemoveHeaderOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeaderOutput {
	return o
}

func (o ResponseHeadersPolicyRemoveHeaderOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyRemoveHeader) string { return v.Header }).(pulumi.StringOutput)
}

type ResponseHeadersPolicyRemoveHeaderArrayOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyRemoveHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResponseHeadersPolicyRemoveHeader)(nil)).Elem()
}

func (o ResponseHeadersPolicyRemoveHeaderArrayOutput) ToResponseHeadersPolicyRemoveHeaderArrayOutput() ResponseHeadersPolicyRemoveHeaderArrayOutput {
	return o
}

func (o ResponseHeadersPolicyRemoveHeaderArrayOutput) ToResponseHeadersPolicyRemoveHeaderArrayOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeaderArrayOutput {
	return o
}

func (o ResponseHeadersPolicyRemoveHeaderArrayOutput) Index(i pulumi.IntInput) ResponseHeadersPolicyRemoveHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResponseHeadersPolicyRemoveHeader {
		return vs[0].([]ResponseHeadersPolicyRemoveHeader)[vs[1].(int)]
	}).(ResponseHeadersPolicyRemoveHeaderOutput)
}

type ResponseHeadersPolicyRemoveHeadersConfig struct {
	Items []ResponseHeadersPolicyRemoveHeader `pulumi:"items"`
}

// ResponseHeadersPolicyRemoveHeadersConfigInput is an input type that accepts ResponseHeadersPolicyRemoveHeadersConfigArgs and ResponseHeadersPolicyRemoveHeadersConfigOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyRemoveHeadersConfigInput` via:
//
//	ResponseHeadersPolicyRemoveHeadersConfigArgs{...}
type ResponseHeadersPolicyRemoveHeadersConfigInput interface {
	pulumi.Input

	ToResponseHeadersPolicyRemoveHeadersConfigOutput() ResponseHeadersPolicyRemoveHeadersConfigOutput
	ToResponseHeadersPolicyRemoveHeadersConfigOutputWithContext(context.Context) ResponseHeadersPolicyRemoveHeadersConfigOutput
}

type ResponseHeadersPolicyRemoveHeadersConfigArgs struct {
	Items ResponseHeadersPolicyRemoveHeaderArrayInput `pulumi:"items"`
}

func (ResponseHeadersPolicyRemoveHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyRemoveHeadersConfig)(nil)).Elem()
}

func (i ResponseHeadersPolicyRemoveHeadersConfigArgs) ToResponseHeadersPolicyRemoveHeadersConfigOutput() ResponseHeadersPolicyRemoveHeadersConfigOutput {
	return i.ToResponseHeadersPolicyRemoveHeadersConfigOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyRemoveHeadersConfigArgs) ToResponseHeadersPolicyRemoveHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyRemoveHeadersConfigOutput)
}

func (i ResponseHeadersPolicyRemoveHeadersConfigArgs) ToResponseHeadersPolicyRemoveHeadersConfigPtrOutput() ResponseHeadersPolicyRemoveHeadersConfigPtrOutput {
	return i.ToResponseHeadersPolicyRemoveHeadersConfigPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyRemoveHeadersConfigArgs) ToResponseHeadersPolicyRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyRemoveHeadersConfigOutput).ToResponseHeadersPolicyRemoveHeadersConfigPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyRemoveHeadersConfigPtrInput is an input type that accepts ResponseHeadersPolicyRemoveHeadersConfigArgs, ResponseHeadersPolicyRemoveHeadersConfigPtr and ResponseHeadersPolicyRemoveHeadersConfigPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyRemoveHeadersConfigPtrInput` via:
//
//	        ResponseHeadersPolicyRemoveHeadersConfigArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyRemoveHeadersConfigPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyRemoveHeadersConfigPtrOutput() ResponseHeadersPolicyRemoveHeadersConfigPtrOutput
	ToResponseHeadersPolicyRemoveHeadersConfigPtrOutputWithContext(context.Context) ResponseHeadersPolicyRemoveHeadersConfigPtrOutput
}

type responseHeadersPolicyRemoveHeadersConfigPtrType ResponseHeadersPolicyRemoveHeadersConfigArgs

func ResponseHeadersPolicyRemoveHeadersConfigPtr(v *ResponseHeadersPolicyRemoveHeadersConfigArgs) ResponseHeadersPolicyRemoveHeadersConfigPtrInput {
	return (*responseHeadersPolicyRemoveHeadersConfigPtrType)(v)
}

func (*responseHeadersPolicyRemoveHeadersConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyRemoveHeadersConfig)(nil)).Elem()
}

func (i *responseHeadersPolicyRemoveHeadersConfigPtrType) ToResponseHeadersPolicyRemoveHeadersConfigPtrOutput() ResponseHeadersPolicyRemoveHeadersConfigPtrOutput {
	return i.ToResponseHeadersPolicyRemoveHeadersConfigPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyRemoveHeadersConfigPtrType) ToResponseHeadersPolicyRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyRemoveHeadersConfigPtrOutput)
}

type ResponseHeadersPolicyRemoveHeadersConfigOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyRemoveHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyRemoveHeadersConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyRemoveHeadersConfigOutput) ToResponseHeadersPolicyRemoveHeadersConfigOutput() ResponseHeadersPolicyRemoveHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicyRemoveHeadersConfigOutput) ToResponseHeadersPolicyRemoveHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicyRemoveHeadersConfigOutput) ToResponseHeadersPolicyRemoveHeadersConfigPtrOutput() ResponseHeadersPolicyRemoveHeadersConfigPtrOutput {
	return o.ToResponseHeadersPolicyRemoveHeadersConfigPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyRemoveHeadersConfigOutput) ToResponseHeadersPolicyRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeadersConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyRemoveHeadersConfig) *ResponseHeadersPolicyRemoveHeadersConfig {
		return &v
	}).(ResponseHeadersPolicyRemoveHeadersConfigPtrOutput)
}

func (o ResponseHeadersPolicyRemoveHeadersConfigOutput) Items() ResponseHeadersPolicyRemoveHeaderArrayOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyRemoveHeadersConfig) []ResponseHeadersPolicyRemoveHeader { return v.Items }).(ResponseHeadersPolicyRemoveHeaderArrayOutput)
}

type ResponseHeadersPolicyRemoveHeadersConfigPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyRemoveHeadersConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyRemoveHeadersConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyRemoveHeadersConfigPtrOutput) ToResponseHeadersPolicyRemoveHeadersConfigPtrOutput() ResponseHeadersPolicyRemoveHeadersConfigPtrOutput {
	return o
}

func (o ResponseHeadersPolicyRemoveHeadersConfigPtrOutput) ToResponseHeadersPolicyRemoveHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyRemoveHeadersConfigPtrOutput {
	return o
}

func (o ResponseHeadersPolicyRemoveHeadersConfigPtrOutput) Elem() ResponseHeadersPolicyRemoveHeadersConfigOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyRemoveHeadersConfig) ResponseHeadersPolicyRemoveHeadersConfig {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyRemoveHeadersConfig
		return ret
	}).(ResponseHeadersPolicyRemoveHeadersConfigOutput)
}

func (o ResponseHeadersPolicyRemoveHeadersConfigPtrOutput) Items() ResponseHeadersPolicyRemoveHeaderArrayOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyRemoveHeadersConfig) []ResponseHeadersPolicyRemoveHeader {
		if v == nil {
			return nil
		}
		return v.Items
	}).(ResponseHeadersPolicyRemoveHeaderArrayOutput)
}

type ResponseHeadersPolicySecurityHeadersConfig struct {
	ContentSecurityPolicy   *ResponseHeadersPolicyContentSecurityPolicy   `pulumi:"contentSecurityPolicy"`
	ContentTypeOptions      *ResponseHeadersPolicyContentTypeOptions      `pulumi:"contentTypeOptions"`
	FrameOptions            *ResponseHeadersPolicyFrameOptions            `pulumi:"frameOptions"`
	ReferrerPolicy          *ResponseHeadersPolicyReferrerPolicy          `pulumi:"referrerPolicy"`
	StrictTransportSecurity *ResponseHeadersPolicyStrictTransportSecurity `pulumi:"strictTransportSecurity"`
	XssProtection           *ResponseHeadersPolicyXssProtection           `pulumi:"xssProtection"`
}

// ResponseHeadersPolicySecurityHeadersConfigInput is an input type that accepts ResponseHeadersPolicySecurityHeadersConfigArgs and ResponseHeadersPolicySecurityHeadersConfigOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicySecurityHeadersConfigInput` via:
//
//	ResponseHeadersPolicySecurityHeadersConfigArgs{...}
type ResponseHeadersPolicySecurityHeadersConfigInput interface {
	pulumi.Input

	ToResponseHeadersPolicySecurityHeadersConfigOutput() ResponseHeadersPolicySecurityHeadersConfigOutput
	ToResponseHeadersPolicySecurityHeadersConfigOutputWithContext(context.Context) ResponseHeadersPolicySecurityHeadersConfigOutput
}

type ResponseHeadersPolicySecurityHeadersConfigArgs struct {
	ContentSecurityPolicy   ResponseHeadersPolicyContentSecurityPolicyPtrInput   `pulumi:"contentSecurityPolicy"`
	ContentTypeOptions      ResponseHeadersPolicyContentTypeOptionsPtrInput      `pulumi:"contentTypeOptions"`
	FrameOptions            ResponseHeadersPolicyFrameOptionsPtrInput            `pulumi:"frameOptions"`
	ReferrerPolicy          ResponseHeadersPolicyReferrerPolicyPtrInput          `pulumi:"referrerPolicy"`
	StrictTransportSecurity ResponseHeadersPolicyStrictTransportSecurityPtrInput `pulumi:"strictTransportSecurity"`
	XssProtection           ResponseHeadersPolicyXssProtectionPtrInput           `pulumi:"xssProtection"`
}

func (ResponseHeadersPolicySecurityHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfig)(nil)).Elem()
}

func (i ResponseHeadersPolicySecurityHeadersConfigArgs) ToResponseHeadersPolicySecurityHeadersConfigOutput() ResponseHeadersPolicySecurityHeadersConfigOutput {
	return i.ToResponseHeadersPolicySecurityHeadersConfigOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicySecurityHeadersConfigArgs) ToResponseHeadersPolicySecurityHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicySecurityHeadersConfigOutput)
}

func (i ResponseHeadersPolicySecurityHeadersConfigArgs) ToResponseHeadersPolicySecurityHeadersConfigPtrOutput() ResponseHeadersPolicySecurityHeadersConfigPtrOutput {
	return i.ToResponseHeadersPolicySecurityHeadersConfigPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicySecurityHeadersConfigArgs) ToResponseHeadersPolicySecurityHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicySecurityHeadersConfigOutput).ToResponseHeadersPolicySecurityHeadersConfigPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicySecurityHeadersConfigPtrInput is an input type that accepts ResponseHeadersPolicySecurityHeadersConfigArgs, ResponseHeadersPolicySecurityHeadersConfigPtr and ResponseHeadersPolicySecurityHeadersConfigPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicySecurityHeadersConfigPtrInput` via:
//
//	        ResponseHeadersPolicySecurityHeadersConfigArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicySecurityHeadersConfigPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicySecurityHeadersConfigPtrOutput() ResponseHeadersPolicySecurityHeadersConfigPtrOutput
	ToResponseHeadersPolicySecurityHeadersConfigPtrOutputWithContext(context.Context) ResponseHeadersPolicySecurityHeadersConfigPtrOutput
}

type responseHeadersPolicySecurityHeadersConfigPtrType ResponseHeadersPolicySecurityHeadersConfigArgs

func ResponseHeadersPolicySecurityHeadersConfigPtr(v *ResponseHeadersPolicySecurityHeadersConfigArgs) ResponseHeadersPolicySecurityHeadersConfigPtrInput {
	return (*responseHeadersPolicySecurityHeadersConfigPtrType)(v)
}

func (*responseHeadersPolicySecurityHeadersConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicySecurityHeadersConfig)(nil)).Elem()
}

func (i *responseHeadersPolicySecurityHeadersConfigPtrType) ToResponseHeadersPolicySecurityHeadersConfigPtrOutput() ResponseHeadersPolicySecurityHeadersConfigPtrOutput {
	return i.ToResponseHeadersPolicySecurityHeadersConfigPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicySecurityHeadersConfigPtrType) ToResponseHeadersPolicySecurityHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicySecurityHeadersConfigPtrOutput)
}

type ResponseHeadersPolicySecurityHeadersConfigOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicySecurityHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ToResponseHeadersPolicySecurityHeadersConfigOutput() ResponseHeadersPolicySecurityHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ToResponseHeadersPolicySecurityHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ToResponseHeadersPolicySecurityHeadersConfigPtrOutput() ResponseHeadersPolicySecurityHeadersConfigPtrOutput {
	return o.ToResponseHeadersPolicySecurityHeadersConfigPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ToResponseHeadersPolicySecurityHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicySecurityHeadersConfig {
		return &v
	}).(ResponseHeadersPolicySecurityHeadersConfigPtrOutput)
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ContentSecurityPolicy() ResponseHeadersPolicyContentSecurityPolicyPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicyContentSecurityPolicy {
		return v.ContentSecurityPolicy
	}).(ResponseHeadersPolicyContentSecurityPolicyPtrOutput)
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ContentTypeOptions() ResponseHeadersPolicyContentTypeOptionsPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicyContentTypeOptions {
		return v.ContentTypeOptions
	}).(ResponseHeadersPolicyContentTypeOptionsPtrOutput)
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) FrameOptions() ResponseHeadersPolicyFrameOptionsPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicyFrameOptions {
		return v.FrameOptions
	}).(ResponseHeadersPolicyFrameOptionsPtrOutput)
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) ReferrerPolicy() ResponseHeadersPolicyReferrerPolicyPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicyReferrerPolicy {
		return v.ReferrerPolicy
	}).(ResponseHeadersPolicyReferrerPolicyPtrOutput)
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) StrictTransportSecurity() ResponseHeadersPolicyStrictTransportSecurityPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicyStrictTransportSecurity {
		return v.StrictTransportSecurity
	}).(ResponseHeadersPolicyStrictTransportSecurityPtrOutput)
}

func (o ResponseHeadersPolicySecurityHeadersConfigOutput) XssProtection() ResponseHeadersPolicyXssProtectionPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicyXssProtection {
		return v.XssProtection
	}).(ResponseHeadersPolicyXssProtectionPtrOutput)
}

type ResponseHeadersPolicySecurityHeadersConfigPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicySecurityHeadersConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicySecurityHeadersConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicySecurityHeadersConfigPtrOutput) ToResponseHeadersPolicySecurityHeadersConfigPtrOutput() ResponseHeadersPolicySecurityHeadersConfigPtrOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigPtrOutput) ToResponseHeadersPolicySecurityHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicySecurityHeadersConfigPtrOutput {
	return o
}

func (o ResponseHeadersPolicySecurityHeadersConfigPtrOutput) Elem() ResponseHeadersPolicySecurityHeadersConfigOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicySecurityHeadersConfig) ResponseHeadersPolicySecurityHeadersConfig {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicySecurityHeadersConfig
		return ret
	}).(ResponseHeadersPolicySecurityHeadersConfigOutput)
}

func (o ResponseHeadersPolicySecurityHeadersConfigPtrOutput) ContentSecurityPolicy() ResponseHeadersPolicyContentSecurityPolicyPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicyContentSecurityPolicy {
		if v == nil {
			return nil
		}
		return v.ContentSecurityPolicy
	}).(ResponseHeadersPolicyContentSecurityPolicyPtrOutput)
}

func (o ResponseHeadersPolicySecurityHeadersConfigPtrOutput) ContentTypeOptions() ResponseHeadersPolicyContentTypeOptionsPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicyContentTypeOptions {
		if v == nil {
			return nil
		}
		return v.ContentTypeOptions
	}).(ResponseHeadersPolicyContentTypeOptionsPtrOutput)
}

func (o ResponseHeadersPolicySecurityHeadersConfigPtrOutput) FrameOptions() ResponseHeadersPolicyFrameOptionsPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicyFrameOptions {
		if v == nil {
			return nil
		}
		return v.FrameOptions
	}).(ResponseHeadersPolicyFrameOptionsPtrOutput)
}

func (o ResponseHeadersPolicySecurityHeadersConfigPtrOutput) ReferrerPolicy() ResponseHeadersPolicyReferrerPolicyPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicyReferrerPolicy {
		if v == nil {
			return nil
		}
		return v.ReferrerPolicy
	}).(ResponseHeadersPolicyReferrerPolicyPtrOutput)
}

func (o ResponseHeadersPolicySecurityHeadersConfigPtrOutput) StrictTransportSecurity() ResponseHeadersPolicyStrictTransportSecurityPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicyStrictTransportSecurity {
		if v == nil {
			return nil
		}
		return v.StrictTransportSecurity
	}).(ResponseHeadersPolicyStrictTransportSecurityPtrOutput)
}

func (o ResponseHeadersPolicySecurityHeadersConfigPtrOutput) XssProtection() ResponseHeadersPolicyXssProtectionPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicySecurityHeadersConfig) *ResponseHeadersPolicyXssProtection {
		if v == nil {
			return nil
		}
		return v.XssProtection
	}).(ResponseHeadersPolicyXssProtectionPtrOutput)
}

type ResponseHeadersPolicyServerTimingHeadersConfig struct {
	Enabled      bool     `pulumi:"enabled"`
	SamplingRate *float64 `pulumi:"samplingRate"`
}

// ResponseHeadersPolicyServerTimingHeadersConfigInput is an input type that accepts ResponseHeadersPolicyServerTimingHeadersConfigArgs and ResponseHeadersPolicyServerTimingHeadersConfigOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyServerTimingHeadersConfigInput` via:
//
//	ResponseHeadersPolicyServerTimingHeadersConfigArgs{...}
type ResponseHeadersPolicyServerTimingHeadersConfigInput interface {
	pulumi.Input

	ToResponseHeadersPolicyServerTimingHeadersConfigOutput() ResponseHeadersPolicyServerTimingHeadersConfigOutput
	ToResponseHeadersPolicyServerTimingHeadersConfigOutputWithContext(context.Context) ResponseHeadersPolicyServerTimingHeadersConfigOutput
}

type ResponseHeadersPolicyServerTimingHeadersConfigArgs struct {
	Enabled      pulumi.BoolInput       `pulumi:"enabled"`
	SamplingRate pulumi.Float64PtrInput `pulumi:"samplingRate"`
}

func (ResponseHeadersPolicyServerTimingHeadersConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyServerTimingHeadersConfig)(nil)).Elem()
}

func (i ResponseHeadersPolicyServerTimingHeadersConfigArgs) ToResponseHeadersPolicyServerTimingHeadersConfigOutput() ResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return i.ToResponseHeadersPolicyServerTimingHeadersConfigOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyServerTimingHeadersConfigArgs) ToResponseHeadersPolicyServerTimingHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyServerTimingHeadersConfigOutput)
}

func (i ResponseHeadersPolicyServerTimingHeadersConfigArgs) ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutput() ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput {
	return i.ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyServerTimingHeadersConfigArgs) ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyServerTimingHeadersConfigOutput).ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyServerTimingHeadersConfigPtrInput is an input type that accepts ResponseHeadersPolicyServerTimingHeadersConfigArgs, ResponseHeadersPolicyServerTimingHeadersConfigPtr and ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyServerTimingHeadersConfigPtrInput` via:
//
//	        ResponseHeadersPolicyServerTimingHeadersConfigArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyServerTimingHeadersConfigPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutput() ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput
	ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutputWithContext(context.Context) ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput
}

type responseHeadersPolicyServerTimingHeadersConfigPtrType ResponseHeadersPolicyServerTimingHeadersConfigArgs

func ResponseHeadersPolicyServerTimingHeadersConfigPtr(v *ResponseHeadersPolicyServerTimingHeadersConfigArgs) ResponseHeadersPolicyServerTimingHeadersConfigPtrInput {
	return (*responseHeadersPolicyServerTimingHeadersConfigPtrType)(v)
}

func (*responseHeadersPolicyServerTimingHeadersConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyServerTimingHeadersConfig)(nil)).Elem()
}

func (i *responseHeadersPolicyServerTimingHeadersConfigPtrType) ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutput() ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput {
	return i.ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyServerTimingHeadersConfigPtrType) ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput)
}

type ResponseHeadersPolicyServerTimingHeadersConfigOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyServerTimingHeadersConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyServerTimingHeadersConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigOutput) ToResponseHeadersPolicyServerTimingHeadersConfigOutput() ResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigOutput) ToResponseHeadersPolicyServerTimingHeadersConfigOutputWithContext(ctx context.Context) ResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return o
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigOutput) ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutput() ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput {
	return o.ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigOutput) ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyServerTimingHeadersConfig) *ResponseHeadersPolicyServerTimingHeadersConfig {
		return &v
	}).(ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput)
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyServerTimingHeadersConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigOutput) SamplingRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyServerTimingHeadersConfig) *float64 { return v.SamplingRate }).(pulumi.Float64PtrOutput)
}

type ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyServerTimingHeadersConfig)(nil)).Elem()
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput) ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutput() ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput {
	return o
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput) ToResponseHeadersPolicyServerTimingHeadersConfigPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput {
	return o
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput) Elem() ResponseHeadersPolicyServerTimingHeadersConfigOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyServerTimingHeadersConfig) ResponseHeadersPolicyServerTimingHeadersConfig {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyServerTimingHeadersConfig
		return ret
	}).(ResponseHeadersPolicyServerTimingHeadersConfigOutput)
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyServerTimingHeadersConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput) SamplingRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyServerTimingHeadersConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.SamplingRate
	}).(pulumi.Float64PtrOutput)
}

type ResponseHeadersPolicyStrictTransportSecurity struct {
	AccessControlMaxAgeSec int   `pulumi:"accessControlMaxAgeSec"`
	IncludeSubdomains      *bool `pulumi:"includeSubdomains"`
	Override               bool  `pulumi:"override"`
	Preload                *bool `pulumi:"preload"`
}

// ResponseHeadersPolicyStrictTransportSecurityInput is an input type that accepts ResponseHeadersPolicyStrictTransportSecurityArgs and ResponseHeadersPolicyStrictTransportSecurityOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyStrictTransportSecurityInput` via:
//
//	ResponseHeadersPolicyStrictTransportSecurityArgs{...}
type ResponseHeadersPolicyStrictTransportSecurityInput interface {
	pulumi.Input

	ToResponseHeadersPolicyStrictTransportSecurityOutput() ResponseHeadersPolicyStrictTransportSecurityOutput
	ToResponseHeadersPolicyStrictTransportSecurityOutputWithContext(context.Context) ResponseHeadersPolicyStrictTransportSecurityOutput
}

type ResponseHeadersPolicyStrictTransportSecurityArgs struct {
	AccessControlMaxAgeSec pulumi.IntInput     `pulumi:"accessControlMaxAgeSec"`
	IncludeSubdomains      pulumi.BoolPtrInput `pulumi:"includeSubdomains"`
	Override               pulumi.BoolInput    `pulumi:"override"`
	Preload                pulumi.BoolPtrInput `pulumi:"preload"`
}

func (ResponseHeadersPolicyStrictTransportSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyStrictTransportSecurity)(nil)).Elem()
}

func (i ResponseHeadersPolicyStrictTransportSecurityArgs) ToResponseHeadersPolicyStrictTransportSecurityOutput() ResponseHeadersPolicyStrictTransportSecurityOutput {
	return i.ToResponseHeadersPolicyStrictTransportSecurityOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyStrictTransportSecurityArgs) ToResponseHeadersPolicyStrictTransportSecurityOutputWithContext(ctx context.Context) ResponseHeadersPolicyStrictTransportSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyStrictTransportSecurityOutput)
}

func (i ResponseHeadersPolicyStrictTransportSecurityArgs) ToResponseHeadersPolicyStrictTransportSecurityPtrOutput() ResponseHeadersPolicyStrictTransportSecurityPtrOutput {
	return i.ToResponseHeadersPolicyStrictTransportSecurityPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyStrictTransportSecurityArgs) ToResponseHeadersPolicyStrictTransportSecurityPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyStrictTransportSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyStrictTransportSecurityOutput).ToResponseHeadersPolicyStrictTransportSecurityPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyStrictTransportSecurityPtrInput is an input type that accepts ResponseHeadersPolicyStrictTransportSecurityArgs, ResponseHeadersPolicyStrictTransportSecurityPtr and ResponseHeadersPolicyStrictTransportSecurityPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyStrictTransportSecurityPtrInput` via:
//
//	        ResponseHeadersPolicyStrictTransportSecurityArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyStrictTransportSecurityPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyStrictTransportSecurityPtrOutput() ResponseHeadersPolicyStrictTransportSecurityPtrOutput
	ToResponseHeadersPolicyStrictTransportSecurityPtrOutputWithContext(context.Context) ResponseHeadersPolicyStrictTransportSecurityPtrOutput
}

type responseHeadersPolicyStrictTransportSecurityPtrType ResponseHeadersPolicyStrictTransportSecurityArgs

func ResponseHeadersPolicyStrictTransportSecurityPtr(v *ResponseHeadersPolicyStrictTransportSecurityArgs) ResponseHeadersPolicyStrictTransportSecurityPtrInput {
	return (*responseHeadersPolicyStrictTransportSecurityPtrType)(v)
}

func (*responseHeadersPolicyStrictTransportSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyStrictTransportSecurity)(nil)).Elem()
}

func (i *responseHeadersPolicyStrictTransportSecurityPtrType) ToResponseHeadersPolicyStrictTransportSecurityPtrOutput() ResponseHeadersPolicyStrictTransportSecurityPtrOutput {
	return i.ToResponseHeadersPolicyStrictTransportSecurityPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyStrictTransportSecurityPtrType) ToResponseHeadersPolicyStrictTransportSecurityPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyStrictTransportSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyStrictTransportSecurityPtrOutput)
}

type ResponseHeadersPolicyStrictTransportSecurityOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyStrictTransportSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyStrictTransportSecurity)(nil)).Elem()
}

func (o ResponseHeadersPolicyStrictTransportSecurityOutput) ToResponseHeadersPolicyStrictTransportSecurityOutput() ResponseHeadersPolicyStrictTransportSecurityOutput {
	return o
}

func (o ResponseHeadersPolicyStrictTransportSecurityOutput) ToResponseHeadersPolicyStrictTransportSecurityOutputWithContext(ctx context.Context) ResponseHeadersPolicyStrictTransportSecurityOutput {
	return o
}

func (o ResponseHeadersPolicyStrictTransportSecurityOutput) ToResponseHeadersPolicyStrictTransportSecurityPtrOutput() ResponseHeadersPolicyStrictTransportSecurityPtrOutput {
	return o.ToResponseHeadersPolicyStrictTransportSecurityPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyStrictTransportSecurityOutput) ToResponseHeadersPolicyStrictTransportSecurityPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyStrictTransportSecurityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyStrictTransportSecurity) *ResponseHeadersPolicyStrictTransportSecurity {
		return &v
	}).(ResponseHeadersPolicyStrictTransportSecurityPtrOutput)
}

func (o ResponseHeadersPolicyStrictTransportSecurityOutput) AccessControlMaxAgeSec() pulumi.IntOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyStrictTransportSecurity) int { return v.AccessControlMaxAgeSec }).(pulumi.IntOutput)
}

func (o ResponseHeadersPolicyStrictTransportSecurityOutput) IncludeSubdomains() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyStrictTransportSecurity) *bool { return v.IncludeSubdomains }).(pulumi.BoolPtrOutput)
}

func (o ResponseHeadersPolicyStrictTransportSecurityOutput) Override() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyStrictTransportSecurity) bool { return v.Override }).(pulumi.BoolOutput)
}

func (o ResponseHeadersPolicyStrictTransportSecurityOutput) Preload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyStrictTransportSecurity) *bool { return v.Preload }).(pulumi.BoolPtrOutput)
}

type ResponseHeadersPolicyStrictTransportSecurityPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyStrictTransportSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyStrictTransportSecurity)(nil)).Elem()
}

func (o ResponseHeadersPolicyStrictTransportSecurityPtrOutput) ToResponseHeadersPolicyStrictTransportSecurityPtrOutput() ResponseHeadersPolicyStrictTransportSecurityPtrOutput {
	return o
}

func (o ResponseHeadersPolicyStrictTransportSecurityPtrOutput) ToResponseHeadersPolicyStrictTransportSecurityPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyStrictTransportSecurityPtrOutput {
	return o
}

func (o ResponseHeadersPolicyStrictTransportSecurityPtrOutput) Elem() ResponseHeadersPolicyStrictTransportSecurityOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyStrictTransportSecurity) ResponseHeadersPolicyStrictTransportSecurity {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyStrictTransportSecurity
		return ret
	}).(ResponseHeadersPolicyStrictTransportSecurityOutput)
}

func (o ResponseHeadersPolicyStrictTransportSecurityPtrOutput) AccessControlMaxAgeSec() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyStrictTransportSecurity) *int {
		if v == nil {
			return nil
		}
		return &v.AccessControlMaxAgeSec
	}).(pulumi.IntPtrOutput)
}

func (o ResponseHeadersPolicyStrictTransportSecurityPtrOutput) IncludeSubdomains() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyStrictTransportSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeSubdomains
	}).(pulumi.BoolPtrOutput)
}

func (o ResponseHeadersPolicyStrictTransportSecurityPtrOutput) Override() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyStrictTransportSecurity) *bool {
		if v == nil {
			return nil
		}
		return &v.Override
	}).(pulumi.BoolPtrOutput)
}

func (o ResponseHeadersPolicyStrictTransportSecurityPtrOutput) Preload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyStrictTransportSecurity) *bool {
		if v == nil {
			return nil
		}
		return v.Preload
	}).(pulumi.BoolPtrOutput)
}

type ResponseHeadersPolicyXssProtection struct {
	ModeBlock  *bool   `pulumi:"modeBlock"`
	Override   bool    `pulumi:"override"`
	Protection bool    `pulumi:"protection"`
	ReportUri  *string `pulumi:"reportUri"`
}

// ResponseHeadersPolicyXssProtectionInput is an input type that accepts ResponseHeadersPolicyXssProtectionArgs and ResponseHeadersPolicyXssProtectionOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyXssProtectionInput` via:
//
//	ResponseHeadersPolicyXssProtectionArgs{...}
type ResponseHeadersPolicyXssProtectionInput interface {
	pulumi.Input

	ToResponseHeadersPolicyXssProtectionOutput() ResponseHeadersPolicyXssProtectionOutput
	ToResponseHeadersPolicyXssProtectionOutputWithContext(context.Context) ResponseHeadersPolicyXssProtectionOutput
}

type ResponseHeadersPolicyXssProtectionArgs struct {
	ModeBlock  pulumi.BoolPtrInput   `pulumi:"modeBlock"`
	Override   pulumi.BoolInput      `pulumi:"override"`
	Protection pulumi.BoolInput      `pulumi:"protection"`
	ReportUri  pulumi.StringPtrInput `pulumi:"reportUri"`
}

func (ResponseHeadersPolicyXssProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyXssProtection)(nil)).Elem()
}

func (i ResponseHeadersPolicyXssProtectionArgs) ToResponseHeadersPolicyXssProtectionOutput() ResponseHeadersPolicyXssProtectionOutput {
	return i.ToResponseHeadersPolicyXssProtectionOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyXssProtectionArgs) ToResponseHeadersPolicyXssProtectionOutputWithContext(ctx context.Context) ResponseHeadersPolicyXssProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyXssProtectionOutput)
}

func (i ResponseHeadersPolicyXssProtectionArgs) ToResponseHeadersPolicyXssProtectionPtrOutput() ResponseHeadersPolicyXssProtectionPtrOutput {
	return i.ToResponseHeadersPolicyXssProtectionPtrOutputWithContext(context.Background())
}

func (i ResponseHeadersPolicyXssProtectionArgs) ToResponseHeadersPolicyXssProtectionPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyXssProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyXssProtectionOutput).ToResponseHeadersPolicyXssProtectionPtrOutputWithContext(ctx)
}

// ResponseHeadersPolicyXssProtectionPtrInput is an input type that accepts ResponseHeadersPolicyXssProtectionArgs, ResponseHeadersPolicyXssProtectionPtr and ResponseHeadersPolicyXssProtectionPtrOutput values.
// You can construct a concrete instance of `ResponseHeadersPolicyXssProtectionPtrInput` via:
//
//	        ResponseHeadersPolicyXssProtectionArgs{...}
//
//	or:
//
//	        nil
type ResponseHeadersPolicyXssProtectionPtrInput interface {
	pulumi.Input

	ToResponseHeadersPolicyXssProtectionPtrOutput() ResponseHeadersPolicyXssProtectionPtrOutput
	ToResponseHeadersPolicyXssProtectionPtrOutputWithContext(context.Context) ResponseHeadersPolicyXssProtectionPtrOutput
}

type responseHeadersPolicyXssProtectionPtrType ResponseHeadersPolicyXssProtectionArgs

func ResponseHeadersPolicyXssProtectionPtr(v *ResponseHeadersPolicyXssProtectionArgs) ResponseHeadersPolicyXssProtectionPtrInput {
	return (*responseHeadersPolicyXssProtectionPtrType)(v)
}

func (*responseHeadersPolicyXssProtectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyXssProtection)(nil)).Elem()
}

func (i *responseHeadersPolicyXssProtectionPtrType) ToResponseHeadersPolicyXssProtectionPtrOutput() ResponseHeadersPolicyXssProtectionPtrOutput {
	return i.ToResponseHeadersPolicyXssProtectionPtrOutputWithContext(context.Background())
}

func (i *responseHeadersPolicyXssProtectionPtrType) ToResponseHeadersPolicyXssProtectionPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyXssProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyXssProtectionPtrOutput)
}

type ResponseHeadersPolicyXssProtectionOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyXssProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResponseHeadersPolicyXssProtection)(nil)).Elem()
}

func (o ResponseHeadersPolicyXssProtectionOutput) ToResponseHeadersPolicyXssProtectionOutput() ResponseHeadersPolicyXssProtectionOutput {
	return o
}

func (o ResponseHeadersPolicyXssProtectionOutput) ToResponseHeadersPolicyXssProtectionOutputWithContext(ctx context.Context) ResponseHeadersPolicyXssProtectionOutput {
	return o
}

func (o ResponseHeadersPolicyXssProtectionOutput) ToResponseHeadersPolicyXssProtectionPtrOutput() ResponseHeadersPolicyXssProtectionPtrOutput {
	return o.ToResponseHeadersPolicyXssProtectionPtrOutputWithContext(context.Background())
}

func (o ResponseHeadersPolicyXssProtectionOutput) ToResponseHeadersPolicyXssProtectionPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyXssProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResponseHeadersPolicyXssProtection) *ResponseHeadersPolicyXssProtection {
		return &v
	}).(ResponseHeadersPolicyXssProtectionPtrOutput)
}

func (o ResponseHeadersPolicyXssProtectionOutput) ModeBlock() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyXssProtection) *bool { return v.ModeBlock }).(pulumi.BoolPtrOutput)
}

func (o ResponseHeadersPolicyXssProtectionOutput) Override() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyXssProtection) bool { return v.Override }).(pulumi.BoolOutput)
}

func (o ResponseHeadersPolicyXssProtectionOutput) Protection() pulumi.BoolOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyXssProtection) bool { return v.Protection }).(pulumi.BoolOutput)
}

func (o ResponseHeadersPolicyXssProtectionOutput) ReportUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResponseHeadersPolicyXssProtection) *string { return v.ReportUri }).(pulumi.StringPtrOutput)
}

type ResponseHeadersPolicyXssProtectionPtrOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyXssProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicyXssProtection)(nil)).Elem()
}

func (o ResponseHeadersPolicyXssProtectionPtrOutput) ToResponseHeadersPolicyXssProtectionPtrOutput() ResponseHeadersPolicyXssProtectionPtrOutput {
	return o
}

func (o ResponseHeadersPolicyXssProtectionPtrOutput) ToResponseHeadersPolicyXssProtectionPtrOutputWithContext(ctx context.Context) ResponseHeadersPolicyXssProtectionPtrOutput {
	return o
}

func (o ResponseHeadersPolicyXssProtectionPtrOutput) Elem() ResponseHeadersPolicyXssProtectionOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyXssProtection) ResponseHeadersPolicyXssProtection {
		if v != nil {
			return *v
		}
		var ret ResponseHeadersPolicyXssProtection
		return ret
	}).(ResponseHeadersPolicyXssProtectionOutput)
}

func (o ResponseHeadersPolicyXssProtectionPtrOutput) ModeBlock() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyXssProtection) *bool {
		if v == nil {
			return nil
		}
		return v.ModeBlock
	}).(pulumi.BoolPtrOutput)
}

func (o ResponseHeadersPolicyXssProtectionPtrOutput) Override() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyXssProtection) *bool {
		if v == nil {
			return nil
		}
		return &v.Override
	}).(pulumi.BoolPtrOutput)
}

func (o ResponseHeadersPolicyXssProtectionPtrOutput) Protection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyXssProtection) *bool {
		if v == nil {
			return nil
		}
		return &v.Protection
	}).(pulumi.BoolPtrOutput)
}

func (o ResponseHeadersPolicyXssProtectionPtrOutput) ReportUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicyXssProtection) *string {
		if v == nil {
			return nil
		}
		return v.ReportUri
	}).(pulumi.StringPtrOutput)
}

type StreamingDistributionConfig struct {
	Aliases        []string                            `pulumi:"aliases"`
	Comment        string                              `pulumi:"comment"`
	Enabled        bool                                `pulumi:"enabled"`
	Logging        *StreamingDistributionLogging       `pulumi:"logging"`
	PriceClass     *string                             `pulumi:"priceClass"`
	S3Origin       StreamingDistributionS3Origin       `pulumi:"s3Origin"`
	TrustedSigners StreamingDistributionTrustedSigners `pulumi:"trustedSigners"`
}

// StreamingDistributionConfigInput is an input type that accepts StreamingDistributionConfigArgs and StreamingDistributionConfigOutput values.
// You can construct a concrete instance of `StreamingDistributionConfigInput` via:
//
//	StreamingDistributionConfigArgs{...}
type StreamingDistributionConfigInput interface {
	pulumi.Input

	ToStreamingDistributionConfigOutput() StreamingDistributionConfigOutput
	ToStreamingDistributionConfigOutputWithContext(context.Context) StreamingDistributionConfigOutput
}

type StreamingDistributionConfigArgs struct {
	Aliases        pulumi.StringArrayInput                  `pulumi:"aliases"`
	Comment        pulumi.StringInput                       `pulumi:"comment"`
	Enabled        pulumi.BoolInput                         `pulumi:"enabled"`
	Logging        StreamingDistributionLoggingPtrInput     `pulumi:"logging"`
	PriceClass     pulumi.StringPtrInput                    `pulumi:"priceClass"`
	S3Origin       StreamingDistributionS3OriginInput       `pulumi:"s3Origin"`
	TrustedSigners StreamingDistributionTrustedSignersInput `pulumi:"trustedSigners"`
}

func (StreamingDistributionConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingDistributionConfig)(nil)).Elem()
}

func (i StreamingDistributionConfigArgs) ToStreamingDistributionConfigOutput() StreamingDistributionConfigOutput {
	return i.ToStreamingDistributionConfigOutputWithContext(context.Background())
}

func (i StreamingDistributionConfigArgs) ToStreamingDistributionConfigOutputWithContext(ctx context.Context) StreamingDistributionConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingDistributionConfigOutput)
}

type StreamingDistributionConfigOutput struct{ *pulumi.OutputState }

func (StreamingDistributionConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingDistributionConfig)(nil)).Elem()
}

func (o StreamingDistributionConfigOutput) ToStreamingDistributionConfigOutput() StreamingDistributionConfigOutput {
	return o
}

func (o StreamingDistributionConfigOutput) ToStreamingDistributionConfigOutputWithContext(ctx context.Context) StreamingDistributionConfigOutput {
	return o
}

func (o StreamingDistributionConfigOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StreamingDistributionConfig) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

func (o StreamingDistributionConfigOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingDistributionConfig) string { return v.Comment }).(pulumi.StringOutput)
}

func (o StreamingDistributionConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v StreamingDistributionConfig) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o StreamingDistributionConfigOutput) Logging() StreamingDistributionLoggingPtrOutput {
	return o.ApplyT(func(v StreamingDistributionConfig) *StreamingDistributionLogging { return v.Logging }).(StreamingDistributionLoggingPtrOutput)
}

func (o StreamingDistributionConfigOutput) PriceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StreamingDistributionConfig) *string { return v.PriceClass }).(pulumi.StringPtrOutput)
}

func (o StreamingDistributionConfigOutput) S3Origin() StreamingDistributionS3OriginOutput {
	return o.ApplyT(func(v StreamingDistributionConfig) StreamingDistributionS3Origin { return v.S3Origin }).(StreamingDistributionS3OriginOutput)
}

func (o StreamingDistributionConfigOutput) TrustedSigners() StreamingDistributionTrustedSignersOutput {
	return o.ApplyT(func(v StreamingDistributionConfig) StreamingDistributionTrustedSigners { return v.TrustedSigners }).(StreamingDistributionTrustedSignersOutput)
}

type StreamingDistributionConfigPtrOutput struct{ *pulumi.OutputState }

func (StreamingDistributionConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingDistributionConfig)(nil)).Elem()
}

func (o StreamingDistributionConfigPtrOutput) ToStreamingDistributionConfigPtrOutput() StreamingDistributionConfigPtrOutput {
	return o
}

func (o StreamingDistributionConfigPtrOutput) ToStreamingDistributionConfigPtrOutputWithContext(ctx context.Context) StreamingDistributionConfigPtrOutput {
	return o
}

func (o StreamingDistributionConfigPtrOutput) Elem() StreamingDistributionConfigOutput {
	return o.ApplyT(func(v *StreamingDistributionConfig) StreamingDistributionConfig {
		if v != nil {
			return *v
		}
		var ret StreamingDistributionConfig
		return ret
	}).(StreamingDistributionConfigOutput)
}

func (o StreamingDistributionConfigPtrOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StreamingDistributionConfig) []string {
		if v == nil {
			return nil
		}
		return v.Aliases
	}).(pulumi.StringArrayOutput)
}

func (o StreamingDistributionConfigPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingDistributionConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Comment
	}).(pulumi.StringPtrOutput)
}

func (o StreamingDistributionConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StreamingDistributionConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o StreamingDistributionConfigPtrOutput) Logging() StreamingDistributionLoggingPtrOutput {
	return o.ApplyT(func(v *StreamingDistributionConfig) *StreamingDistributionLogging {
		if v == nil {
			return nil
		}
		return v.Logging
	}).(StreamingDistributionLoggingPtrOutput)
}

func (o StreamingDistributionConfigPtrOutput) PriceClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingDistributionConfig) *string {
		if v == nil {
			return nil
		}
		return v.PriceClass
	}).(pulumi.StringPtrOutput)
}

func (o StreamingDistributionConfigPtrOutput) S3Origin() StreamingDistributionS3OriginPtrOutput {
	return o.ApplyT(func(v *StreamingDistributionConfig) *StreamingDistributionS3Origin {
		if v == nil {
			return nil
		}
		return &v.S3Origin
	}).(StreamingDistributionS3OriginPtrOutput)
}

func (o StreamingDistributionConfigPtrOutput) TrustedSigners() StreamingDistributionTrustedSignersPtrOutput {
	return o.ApplyT(func(v *StreamingDistributionConfig) *StreamingDistributionTrustedSigners {
		if v == nil {
			return nil
		}
		return &v.TrustedSigners
	}).(StreamingDistributionTrustedSignersPtrOutput)
}

type StreamingDistributionLogging struct {
	Bucket  string `pulumi:"bucket"`
	Enabled bool   `pulumi:"enabled"`
	Prefix  string `pulumi:"prefix"`
}

// StreamingDistributionLoggingInput is an input type that accepts StreamingDistributionLoggingArgs and StreamingDistributionLoggingOutput values.
// You can construct a concrete instance of `StreamingDistributionLoggingInput` via:
//
//	StreamingDistributionLoggingArgs{...}
type StreamingDistributionLoggingInput interface {
	pulumi.Input

	ToStreamingDistributionLoggingOutput() StreamingDistributionLoggingOutput
	ToStreamingDistributionLoggingOutputWithContext(context.Context) StreamingDistributionLoggingOutput
}

type StreamingDistributionLoggingArgs struct {
	Bucket  pulumi.StringInput `pulumi:"bucket"`
	Enabled pulumi.BoolInput   `pulumi:"enabled"`
	Prefix  pulumi.StringInput `pulumi:"prefix"`
}

func (StreamingDistributionLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingDistributionLogging)(nil)).Elem()
}

func (i StreamingDistributionLoggingArgs) ToStreamingDistributionLoggingOutput() StreamingDistributionLoggingOutput {
	return i.ToStreamingDistributionLoggingOutputWithContext(context.Background())
}

func (i StreamingDistributionLoggingArgs) ToStreamingDistributionLoggingOutputWithContext(ctx context.Context) StreamingDistributionLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingDistributionLoggingOutput)
}

func (i StreamingDistributionLoggingArgs) ToStreamingDistributionLoggingPtrOutput() StreamingDistributionLoggingPtrOutput {
	return i.ToStreamingDistributionLoggingPtrOutputWithContext(context.Background())
}

func (i StreamingDistributionLoggingArgs) ToStreamingDistributionLoggingPtrOutputWithContext(ctx context.Context) StreamingDistributionLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingDistributionLoggingOutput).ToStreamingDistributionLoggingPtrOutputWithContext(ctx)
}

// StreamingDistributionLoggingPtrInput is an input type that accepts StreamingDistributionLoggingArgs, StreamingDistributionLoggingPtr and StreamingDistributionLoggingPtrOutput values.
// You can construct a concrete instance of `StreamingDistributionLoggingPtrInput` via:
//
//	        StreamingDistributionLoggingArgs{...}
//
//	or:
//
//	        nil
type StreamingDistributionLoggingPtrInput interface {
	pulumi.Input

	ToStreamingDistributionLoggingPtrOutput() StreamingDistributionLoggingPtrOutput
	ToStreamingDistributionLoggingPtrOutputWithContext(context.Context) StreamingDistributionLoggingPtrOutput
}

type streamingDistributionLoggingPtrType StreamingDistributionLoggingArgs

func StreamingDistributionLoggingPtr(v *StreamingDistributionLoggingArgs) StreamingDistributionLoggingPtrInput {
	return (*streamingDistributionLoggingPtrType)(v)
}

func (*streamingDistributionLoggingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingDistributionLogging)(nil)).Elem()
}

func (i *streamingDistributionLoggingPtrType) ToStreamingDistributionLoggingPtrOutput() StreamingDistributionLoggingPtrOutput {
	return i.ToStreamingDistributionLoggingPtrOutputWithContext(context.Background())
}

func (i *streamingDistributionLoggingPtrType) ToStreamingDistributionLoggingPtrOutputWithContext(ctx context.Context) StreamingDistributionLoggingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingDistributionLoggingPtrOutput)
}

type StreamingDistributionLoggingOutput struct{ *pulumi.OutputState }

func (StreamingDistributionLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingDistributionLogging)(nil)).Elem()
}

func (o StreamingDistributionLoggingOutput) ToStreamingDistributionLoggingOutput() StreamingDistributionLoggingOutput {
	return o
}

func (o StreamingDistributionLoggingOutput) ToStreamingDistributionLoggingOutputWithContext(ctx context.Context) StreamingDistributionLoggingOutput {
	return o
}

func (o StreamingDistributionLoggingOutput) ToStreamingDistributionLoggingPtrOutput() StreamingDistributionLoggingPtrOutput {
	return o.ToStreamingDistributionLoggingPtrOutputWithContext(context.Background())
}

func (o StreamingDistributionLoggingOutput) ToStreamingDistributionLoggingPtrOutputWithContext(ctx context.Context) StreamingDistributionLoggingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StreamingDistributionLogging) *StreamingDistributionLogging {
		return &v
	}).(StreamingDistributionLoggingPtrOutput)
}

func (o StreamingDistributionLoggingOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingDistributionLogging) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o StreamingDistributionLoggingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v StreamingDistributionLogging) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o StreamingDistributionLoggingOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingDistributionLogging) string { return v.Prefix }).(pulumi.StringOutput)
}

type StreamingDistributionLoggingPtrOutput struct{ *pulumi.OutputState }

func (StreamingDistributionLoggingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingDistributionLogging)(nil)).Elem()
}

func (o StreamingDistributionLoggingPtrOutput) ToStreamingDistributionLoggingPtrOutput() StreamingDistributionLoggingPtrOutput {
	return o
}

func (o StreamingDistributionLoggingPtrOutput) ToStreamingDistributionLoggingPtrOutputWithContext(ctx context.Context) StreamingDistributionLoggingPtrOutput {
	return o
}

func (o StreamingDistributionLoggingPtrOutput) Elem() StreamingDistributionLoggingOutput {
	return o.ApplyT(func(v *StreamingDistributionLogging) StreamingDistributionLogging {
		if v != nil {
			return *v
		}
		var ret StreamingDistributionLogging
		return ret
	}).(StreamingDistributionLoggingOutput)
}

func (o StreamingDistributionLoggingPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingDistributionLogging) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o StreamingDistributionLoggingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StreamingDistributionLogging) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o StreamingDistributionLoggingPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingDistributionLogging) *string {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.StringPtrOutput)
}

type StreamingDistributionS3Origin struct {
	DomainName           string `pulumi:"domainName"`
	OriginAccessIdentity string `pulumi:"originAccessIdentity"`
}

// StreamingDistributionS3OriginInput is an input type that accepts StreamingDistributionS3OriginArgs and StreamingDistributionS3OriginOutput values.
// You can construct a concrete instance of `StreamingDistributionS3OriginInput` via:
//
//	StreamingDistributionS3OriginArgs{...}
type StreamingDistributionS3OriginInput interface {
	pulumi.Input

	ToStreamingDistributionS3OriginOutput() StreamingDistributionS3OriginOutput
	ToStreamingDistributionS3OriginOutputWithContext(context.Context) StreamingDistributionS3OriginOutput
}

type StreamingDistributionS3OriginArgs struct {
	DomainName           pulumi.StringInput `pulumi:"domainName"`
	OriginAccessIdentity pulumi.StringInput `pulumi:"originAccessIdentity"`
}

func (StreamingDistributionS3OriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingDistributionS3Origin)(nil)).Elem()
}

func (i StreamingDistributionS3OriginArgs) ToStreamingDistributionS3OriginOutput() StreamingDistributionS3OriginOutput {
	return i.ToStreamingDistributionS3OriginOutputWithContext(context.Background())
}

func (i StreamingDistributionS3OriginArgs) ToStreamingDistributionS3OriginOutputWithContext(ctx context.Context) StreamingDistributionS3OriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingDistributionS3OriginOutput)
}

type StreamingDistributionS3OriginOutput struct{ *pulumi.OutputState }

func (StreamingDistributionS3OriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingDistributionS3Origin)(nil)).Elem()
}

func (o StreamingDistributionS3OriginOutput) ToStreamingDistributionS3OriginOutput() StreamingDistributionS3OriginOutput {
	return o
}

func (o StreamingDistributionS3OriginOutput) ToStreamingDistributionS3OriginOutputWithContext(ctx context.Context) StreamingDistributionS3OriginOutput {
	return o
}

func (o StreamingDistributionS3OriginOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingDistributionS3Origin) string { return v.DomainName }).(pulumi.StringOutput)
}

func (o StreamingDistributionS3OriginOutput) OriginAccessIdentity() pulumi.StringOutput {
	return o.ApplyT(func(v StreamingDistributionS3Origin) string { return v.OriginAccessIdentity }).(pulumi.StringOutput)
}

type StreamingDistributionS3OriginPtrOutput struct{ *pulumi.OutputState }

func (StreamingDistributionS3OriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingDistributionS3Origin)(nil)).Elem()
}

func (o StreamingDistributionS3OriginPtrOutput) ToStreamingDistributionS3OriginPtrOutput() StreamingDistributionS3OriginPtrOutput {
	return o
}

func (o StreamingDistributionS3OriginPtrOutput) ToStreamingDistributionS3OriginPtrOutputWithContext(ctx context.Context) StreamingDistributionS3OriginPtrOutput {
	return o
}

func (o StreamingDistributionS3OriginPtrOutput) Elem() StreamingDistributionS3OriginOutput {
	return o.ApplyT(func(v *StreamingDistributionS3Origin) StreamingDistributionS3Origin {
		if v != nil {
			return *v
		}
		var ret StreamingDistributionS3Origin
		return ret
	}).(StreamingDistributionS3OriginOutput)
}

func (o StreamingDistributionS3OriginPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingDistributionS3Origin) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

func (o StreamingDistributionS3OriginPtrOutput) OriginAccessIdentity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StreamingDistributionS3Origin) *string {
		if v == nil {
			return nil
		}
		return &v.OriginAccessIdentity
	}).(pulumi.StringPtrOutput)
}

type StreamingDistributionTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

type StreamingDistributionTrustedSigners struct {
	AwsAccountNumbers []string `pulumi:"awsAccountNumbers"`
	Enabled           bool     `pulumi:"enabled"`
}

// StreamingDistributionTrustedSignersInput is an input type that accepts StreamingDistributionTrustedSignersArgs and StreamingDistributionTrustedSignersOutput values.
// You can construct a concrete instance of `StreamingDistributionTrustedSignersInput` via:
//
//	StreamingDistributionTrustedSignersArgs{...}
type StreamingDistributionTrustedSignersInput interface {
	pulumi.Input

	ToStreamingDistributionTrustedSignersOutput() StreamingDistributionTrustedSignersOutput
	ToStreamingDistributionTrustedSignersOutputWithContext(context.Context) StreamingDistributionTrustedSignersOutput
}

type StreamingDistributionTrustedSignersArgs struct {
	AwsAccountNumbers pulumi.StringArrayInput `pulumi:"awsAccountNumbers"`
	Enabled           pulumi.BoolInput        `pulumi:"enabled"`
}

func (StreamingDistributionTrustedSignersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingDistributionTrustedSigners)(nil)).Elem()
}

func (i StreamingDistributionTrustedSignersArgs) ToStreamingDistributionTrustedSignersOutput() StreamingDistributionTrustedSignersOutput {
	return i.ToStreamingDistributionTrustedSignersOutputWithContext(context.Background())
}

func (i StreamingDistributionTrustedSignersArgs) ToStreamingDistributionTrustedSignersOutputWithContext(ctx context.Context) StreamingDistributionTrustedSignersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StreamingDistributionTrustedSignersOutput)
}

type StreamingDistributionTrustedSignersOutput struct{ *pulumi.OutputState }

func (StreamingDistributionTrustedSignersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StreamingDistributionTrustedSigners)(nil)).Elem()
}

func (o StreamingDistributionTrustedSignersOutput) ToStreamingDistributionTrustedSignersOutput() StreamingDistributionTrustedSignersOutput {
	return o
}

func (o StreamingDistributionTrustedSignersOutput) ToStreamingDistributionTrustedSignersOutputWithContext(ctx context.Context) StreamingDistributionTrustedSignersOutput {
	return o
}

func (o StreamingDistributionTrustedSignersOutput) AwsAccountNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StreamingDistributionTrustedSigners) []string { return v.AwsAccountNumbers }).(pulumi.StringArrayOutput)
}

func (o StreamingDistributionTrustedSignersOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v StreamingDistributionTrustedSigners) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type StreamingDistributionTrustedSignersPtrOutput struct{ *pulumi.OutputState }

func (StreamingDistributionTrustedSignersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StreamingDistributionTrustedSigners)(nil)).Elem()
}

func (o StreamingDistributionTrustedSignersPtrOutput) ToStreamingDistributionTrustedSignersPtrOutput() StreamingDistributionTrustedSignersPtrOutput {
	return o
}

func (o StreamingDistributionTrustedSignersPtrOutput) ToStreamingDistributionTrustedSignersPtrOutputWithContext(ctx context.Context) StreamingDistributionTrustedSignersPtrOutput {
	return o
}

func (o StreamingDistributionTrustedSignersPtrOutput) Elem() StreamingDistributionTrustedSignersOutput {
	return o.ApplyT(func(v *StreamingDistributionTrustedSigners) StreamingDistributionTrustedSigners {
		if v != nil {
			return *v
		}
		var ret StreamingDistributionTrustedSigners
		return ret
	}).(StreamingDistributionTrustedSignersOutput)
}

func (o StreamingDistributionTrustedSignersPtrOutput) AwsAccountNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StreamingDistributionTrustedSigners) []string {
		if v == nil {
			return nil
		}
		return v.AwsAccountNumbers
	}).(pulumi.StringArrayOutput)
}

func (o StreamingDistributionTrustedSignersPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StreamingDistributionTrustedSigners) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CachePolicyConfigInput)(nil)).Elem(), CachePolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CachePolicyCookiesConfigInput)(nil)).Elem(), CachePolicyCookiesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CachePolicyHeadersConfigInput)(nil)).Elem(), CachePolicyHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CachePolicyParametersInCacheKeyAndForwardedToOriginInput)(nil)).Elem(), CachePolicyParametersInCacheKeyAndForwardedToOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CachePolicyQueryStringsConfigInput)(nil)).Elem(), CachePolicyQueryStringsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudFrontOriginAccessIdentityConfigInput)(nil)).Elem(), CloudFrontOriginAccessIdentityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicyConfigInput)(nil)).Elem(), ContinuousDeploymentPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesInput)(nil)).Elem(), ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrInput)(nil)).Elem(), ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesInput)(nil)).Elem(), ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrInput)(nil)).Elem(), ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicySessionStickinessConfigInput)(nil)).Elem(), ContinuousDeploymentPolicySessionStickinessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicySessionStickinessConfigPtrInput)(nil)).Elem(), ContinuousDeploymentPolicySessionStickinessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicySingleHeaderConfigInput)(nil)).Elem(), ContinuousDeploymentPolicySingleHeaderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicySingleHeaderConfigPtrInput)(nil)).Elem(), ContinuousDeploymentPolicySingleHeaderConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicySingleWeightConfigInput)(nil)).Elem(), ContinuousDeploymentPolicySingleWeightConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicySingleWeightConfigPtrInput)(nil)).Elem(), ContinuousDeploymentPolicySingleWeightConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicyTrafficConfigInput)(nil)).Elem(), ContinuousDeploymentPolicyTrafficConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContinuousDeploymentPolicyTrafficConfigPtrInput)(nil)).Elem(), ContinuousDeploymentPolicyTrafficConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorInput)(nil)).Elem(), DistributionCacheBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorArrayInput)(nil)).Elem(), DistributionCacheBehaviorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionConfigInput)(nil)).Elem(), DistributionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCookiesInput)(nil)).Elem(), DistributionCookiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCookiesPtrInput)(nil)).Elem(), DistributionCookiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCustomErrorResponseInput)(nil)).Elem(), DistributionCustomErrorResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCustomErrorResponseArrayInput)(nil)).Elem(), DistributionCustomErrorResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCustomOriginConfigInput)(nil)).Elem(), DistributionCustomOriginConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCustomOriginConfigPtrInput)(nil)).Elem(), DistributionCustomOriginConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionDefaultCacheBehaviorInput)(nil)).Elem(), DistributionDefaultCacheBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionForwardedValuesInput)(nil)).Elem(), DistributionForwardedValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionForwardedValuesPtrInput)(nil)).Elem(), DistributionForwardedValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionFunctionAssociationInput)(nil)).Elem(), DistributionFunctionAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionFunctionAssociationArrayInput)(nil)).Elem(), DistributionFunctionAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionGeoRestrictionInput)(nil)).Elem(), DistributionGeoRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionGeoRestrictionPtrInput)(nil)).Elem(), DistributionGeoRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionLambdaFunctionAssociationInput)(nil)).Elem(), DistributionLambdaFunctionAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionLambdaFunctionAssociationArrayInput)(nil)).Elem(), DistributionLambdaFunctionAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionLegacyCustomOriginInput)(nil)).Elem(), DistributionLegacyCustomOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionLegacyCustomOriginPtrInput)(nil)).Elem(), DistributionLegacyCustomOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionLegacyS3OriginInput)(nil)).Elem(), DistributionLegacyS3OriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionLegacyS3OriginPtrInput)(nil)).Elem(), DistributionLegacyS3OriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionLoggingInput)(nil)).Elem(), DistributionLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionLoggingPtrInput)(nil)).Elem(), DistributionLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginInput)(nil)).Elem(), DistributionOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginArrayInput)(nil)).Elem(), DistributionOriginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginCustomHeaderInput)(nil)).Elem(), DistributionOriginCustomHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginCustomHeaderArrayInput)(nil)).Elem(), DistributionOriginCustomHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginGroupInput)(nil)).Elem(), DistributionOriginGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginGroupArrayInput)(nil)).Elem(), DistributionOriginGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginGroupFailoverCriteriaInput)(nil)).Elem(), DistributionOriginGroupFailoverCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginGroupMemberInput)(nil)).Elem(), DistributionOriginGroupMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginGroupMemberArrayInput)(nil)).Elem(), DistributionOriginGroupMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginGroupMembersInput)(nil)).Elem(), DistributionOriginGroupMembersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginGroupsInput)(nil)).Elem(), DistributionOriginGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginGroupsPtrInput)(nil)).Elem(), DistributionOriginGroupsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginShieldInput)(nil)).Elem(), DistributionOriginShieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginShieldPtrInput)(nil)).Elem(), DistributionOriginShieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionRestrictionsInput)(nil)).Elem(), DistributionRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionRestrictionsPtrInput)(nil)).Elem(), DistributionRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionS3OriginConfigInput)(nil)).Elem(), DistributionS3OriginConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionS3OriginConfigPtrInput)(nil)).Elem(), DistributionS3OriginConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionStatusCodesInput)(nil)).Elem(), DistributionStatusCodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionViewerCertificateInput)(nil)).Elem(), DistributionViewerCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionViewerCertificatePtrInput)(nil)).Elem(), DistributionViewerCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionConfigInput)(nil)).Elem(), FunctionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionKeyValueStoreAssociationInput)(nil)).Elem(), FunctionKeyValueStoreAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionKeyValueStoreAssociationArrayInput)(nil)).Elem(), FunctionKeyValueStoreAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionMetadataInput)(nil)).Elem(), FunctionMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionMetadataPtrInput)(nil)).Elem(), FunctionMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyGroupConfigInput)(nil)).Elem(), KeyGroupConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyValueStoreImportSourceInput)(nil)).Elem(), KeyValueStoreImportSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KeyValueStoreImportSourcePtrInput)(nil)).Elem(), KeyValueStoreImportSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringSubscriptionTypeInput)(nil)).Elem(), MonitoringSubscriptionTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringSubscriptionRealtimeMetricsSubscriptionConfigInput)(nil)).Elem(), MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrInput)(nil)).Elem(), MonitoringSubscriptionRealtimeMetricsSubscriptionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginAccessControlConfigInput)(nil)).Elem(), OriginAccessControlConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginRequestPolicyConfigInput)(nil)).Elem(), OriginRequestPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginRequestPolicyCookiesConfigInput)(nil)).Elem(), OriginRequestPolicyCookiesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginRequestPolicyHeadersConfigInput)(nil)).Elem(), OriginRequestPolicyHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginRequestPolicyQueryStringsConfigInput)(nil)).Elem(), OriginRequestPolicyQueryStringsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicKeyConfigInput)(nil)).Elem(), PublicKeyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogConfigEndPointInput)(nil)).Elem(), RealtimeLogConfigEndPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogConfigEndPointArrayInput)(nil)).Elem(), RealtimeLogConfigEndPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RealtimeLogConfigKinesisStreamConfigInput)(nil)).Elem(), RealtimeLogConfigKinesisStreamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyAccessControlAllowHeadersInput)(nil)).Elem(), ResponseHeadersPolicyAccessControlAllowHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyAccessControlAllowHeadersPtrInput)(nil)).Elem(), ResponseHeadersPolicyAccessControlAllowHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyAccessControlAllowMethodsInput)(nil)).Elem(), ResponseHeadersPolicyAccessControlAllowMethodsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyAccessControlAllowMethodsPtrInput)(nil)).Elem(), ResponseHeadersPolicyAccessControlAllowMethodsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyAccessControlAllowOriginsInput)(nil)).Elem(), ResponseHeadersPolicyAccessControlAllowOriginsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyAccessControlAllowOriginsPtrInput)(nil)).Elem(), ResponseHeadersPolicyAccessControlAllowOriginsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyAccessControlExposeHeadersInput)(nil)).Elem(), ResponseHeadersPolicyAccessControlExposeHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyAccessControlExposeHeadersPtrInput)(nil)).Elem(), ResponseHeadersPolicyAccessControlExposeHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyConfigInput)(nil)).Elem(), ResponseHeadersPolicyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyContentSecurityPolicyInput)(nil)).Elem(), ResponseHeadersPolicyContentSecurityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyContentSecurityPolicyPtrInput)(nil)).Elem(), ResponseHeadersPolicyContentSecurityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyContentTypeOptionsInput)(nil)).Elem(), ResponseHeadersPolicyContentTypeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyContentTypeOptionsPtrInput)(nil)).Elem(), ResponseHeadersPolicyContentTypeOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyCorsConfigInput)(nil)).Elem(), ResponseHeadersPolicyCorsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyCorsConfigPtrInput)(nil)).Elem(), ResponseHeadersPolicyCorsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyCustomHeaderInput)(nil)).Elem(), ResponseHeadersPolicyCustomHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyCustomHeaderArrayInput)(nil)).Elem(), ResponseHeadersPolicyCustomHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyCustomHeadersConfigInput)(nil)).Elem(), ResponseHeadersPolicyCustomHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyCustomHeadersConfigPtrInput)(nil)).Elem(), ResponseHeadersPolicyCustomHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyFrameOptionsInput)(nil)).Elem(), ResponseHeadersPolicyFrameOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyFrameOptionsPtrInput)(nil)).Elem(), ResponseHeadersPolicyFrameOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyReferrerPolicyInput)(nil)).Elem(), ResponseHeadersPolicyReferrerPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyReferrerPolicyPtrInput)(nil)).Elem(), ResponseHeadersPolicyReferrerPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyRemoveHeaderInput)(nil)).Elem(), ResponseHeadersPolicyRemoveHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyRemoveHeaderArrayInput)(nil)).Elem(), ResponseHeadersPolicyRemoveHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyRemoveHeadersConfigInput)(nil)).Elem(), ResponseHeadersPolicyRemoveHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyRemoveHeadersConfigPtrInput)(nil)).Elem(), ResponseHeadersPolicyRemoveHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigInput)(nil)).Elem(), ResponseHeadersPolicySecurityHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicySecurityHeadersConfigPtrInput)(nil)).Elem(), ResponseHeadersPolicySecurityHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyServerTimingHeadersConfigInput)(nil)).Elem(), ResponseHeadersPolicyServerTimingHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyServerTimingHeadersConfigPtrInput)(nil)).Elem(), ResponseHeadersPolicyServerTimingHeadersConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyStrictTransportSecurityInput)(nil)).Elem(), ResponseHeadersPolicyStrictTransportSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyStrictTransportSecurityPtrInput)(nil)).Elem(), ResponseHeadersPolicyStrictTransportSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyXssProtectionInput)(nil)).Elem(), ResponseHeadersPolicyXssProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyXssProtectionPtrInput)(nil)).Elem(), ResponseHeadersPolicyXssProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamingDistributionConfigInput)(nil)).Elem(), StreamingDistributionConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamingDistributionLoggingInput)(nil)).Elem(), StreamingDistributionLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamingDistributionLoggingPtrInput)(nil)).Elem(), StreamingDistributionLoggingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamingDistributionS3OriginInput)(nil)).Elem(), StreamingDistributionS3OriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StreamingDistributionTrustedSignersInput)(nil)).Elem(), StreamingDistributionTrustedSignersArgs{})
	pulumi.RegisterOutputType(CachePolicyConfigOutput{})
	pulumi.RegisterOutputType(CachePolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(CachePolicyCookiesConfigOutput{})
	pulumi.RegisterOutputType(CachePolicyCookiesConfigPtrOutput{})
	pulumi.RegisterOutputType(CachePolicyHeadersConfigOutput{})
	pulumi.RegisterOutputType(CachePolicyHeadersConfigPtrOutput{})
	pulumi.RegisterOutputType(CachePolicyParametersInCacheKeyAndForwardedToOriginOutput{})
	pulumi.RegisterOutputType(CachePolicyParametersInCacheKeyAndForwardedToOriginPtrOutput{})
	pulumi.RegisterOutputType(CachePolicyQueryStringsConfigOutput{})
	pulumi.RegisterOutputType(CachePolicyQueryStringsConfigPtrOutput{})
	pulumi.RegisterOutputType(CloudFrontOriginAccessIdentityConfigOutput{})
	pulumi.RegisterOutputType(CloudFrontOriginAccessIdentityConfigPtrOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyConfigOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyConfigSingleHeaderPolicyConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyConfigSingleWeightPolicyConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicySessionStickinessConfigOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicySessionStickinessConfigPtrOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicySingleHeaderConfigOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicySingleHeaderConfigPtrOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicySingleWeightConfigOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicySingleWeightConfigPtrOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyTrafficConfigOutput{})
	pulumi.RegisterOutputType(ContinuousDeploymentPolicyTrafficConfigPtrOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorArrayOutput{})
	pulumi.RegisterOutputType(DistributionConfigOutput{})
	pulumi.RegisterOutputType(DistributionConfigPtrOutput{})
	pulumi.RegisterOutputType(DistributionCookiesOutput{})
	pulumi.RegisterOutputType(DistributionCookiesPtrOutput{})
	pulumi.RegisterOutputType(DistributionCustomErrorResponseOutput{})
	pulumi.RegisterOutputType(DistributionCustomErrorResponseArrayOutput{})
	pulumi.RegisterOutputType(DistributionCustomOriginConfigOutput{})
	pulumi.RegisterOutputType(DistributionCustomOriginConfigPtrOutput{})
	pulumi.RegisterOutputType(DistributionDefaultCacheBehaviorOutput{})
	pulumi.RegisterOutputType(DistributionDefaultCacheBehaviorPtrOutput{})
	pulumi.RegisterOutputType(DistributionForwardedValuesOutput{})
	pulumi.RegisterOutputType(DistributionForwardedValuesPtrOutput{})
	pulumi.RegisterOutputType(DistributionFunctionAssociationOutput{})
	pulumi.RegisterOutputType(DistributionFunctionAssociationArrayOutput{})
	pulumi.RegisterOutputType(DistributionGeoRestrictionOutput{})
	pulumi.RegisterOutputType(DistributionGeoRestrictionPtrOutput{})
	pulumi.RegisterOutputType(DistributionLambdaFunctionAssociationOutput{})
	pulumi.RegisterOutputType(DistributionLambdaFunctionAssociationArrayOutput{})
	pulumi.RegisterOutputType(DistributionLegacyCustomOriginOutput{})
	pulumi.RegisterOutputType(DistributionLegacyCustomOriginPtrOutput{})
	pulumi.RegisterOutputType(DistributionLegacyS3OriginOutput{})
	pulumi.RegisterOutputType(DistributionLegacyS3OriginPtrOutput{})
	pulumi.RegisterOutputType(DistributionLoggingOutput{})
	pulumi.RegisterOutputType(DistributionLoggingPtrOutput{})
	pulumi.RegisterOutputType(DistributionOriginOutput{})
	pulumi.RegisterOutputType(DistributionOriginArrayOutput{})
	pulumi.RegisterOutputType(DistributionOriginCustomHeaderOutput{})
	pulumi.RegisterOutputType(DistributionOriginCustomHeaderArrayOutput{})
	pulumi.RegisterOutputType(DistributionOriginGroupOutput{})
	pulumi.RegisterOutputType(DistributionOriginGroupArrayOutput{})
	pulumi.RegisterOutputType(DistributionOriginGroupFailoverCriteriaOutput{})
	pulumi.RegisterOutputType(DistributionOriginGroupMemberOutput{})
	pulumi.RegisterOutputType(DistributionOriginGroupMemberArrayOutput{})
	pulumi.RegisterOutputType(DistributionOriginGroupMembersOutput{})
	pulumi.RegisterOutputType(DistributionOriginGroupsOutput{})
	pulumi.RegisterOutputType(DistributionOriginGroupsPtrOutput{})
	pulumi.RegisterOutputType(DistributionOriginShieldOutput{})
	pulumi.RegisterOutputType(DistributionOriginShieldPtrOutput{})
	pulumi.RegisterOutputType(DistributionRestrictionsOutput{})
	pulumi.RegisterOutputType(DistributionRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(DistributionS3OriginConfigOutput{})
	pulumi.RegisterOutputType(DistributionS3OriginConfigPtrOutput{})
	pulumi.RegisterOutputType(DistributionStatusCodesOutput{})
	pulumi.RegisterOutputType(DistributionViewerCertificateOutput{})
	pulumi.RegisterOutputType(DistributionViewerCertificatePtrOutput{})
	pulumi.RegisterOutputType(FunctionConfigOutput{})
	pulumi.RegisterOutputType(FunctionConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionKeyValueStoreAssociationOutput{})
	pulumi.RegisterOutputType(FunctionKeyValueStoreAssociationArrayOutput{})
	pulumi.RegisterOutputType(FunctionMetadataOutput{})
	pulumi.RegisterOutputType(FunctionMetadataPtrOutput{})
	pulumi.RegisterOutputType(KeyGroupConfigOutput{})
	pulumi.RegisterOutputType(KeyGroupConfigPtrOutput{})
	pulumi.RegisterOutputType(KeyValueStoreImportSourceOutput{})
	pulumi.RegisterOutputType(KeyValueStoreImportSourcePtrOutput{})
	pulumi.RegisterOutputType(MonitoringSubscriptionTypeOutput{})
	pulumi.RegisterOutputType(MonitoringSubscriptionTypePtrOutput{})
	pulumi.RegisterOutputType(MonitoringSubscriptionRealtimeMetricsSubscriptionConfigOutput{})
	pulumi.RegisterOutputType(MonitoringSubscriptionRealtimeMetricsSubscriptionConfigPtrOutput{})
	pulumi.RegisterOutputType(OriginAccessControlConfigOutput{})
	pulumi.RegisterOutputType(OriginAccessControlConfigPtrOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyConfigOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyCookiesConfigOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyCookiesConfigPtrOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyHeadersConfigOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyHeadersConfigPtrOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyQueryStringsConfigOutput{})
	pulumi.RegisterOutputType(OriginRequestPolicyQueryStringsConfigPtrOutput{})
	pulumi.RegisterOutputType(PublicKeyConfigOutput{})
	pulumi.RegisterOutputType(PublicKeyConfigPtrOutput{})
	pulumi.RegisterOutputType(RealtimeLogConfigEndPointOutput{})
	pulumi.RegisterOutputType(RealtimeLogConfigEndPointArrayOutput{})
	pulumi.RegisterOutputType(RealtimeLogConfigKinesisStreamConfigOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyAccessControlAllowHeadersOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyAccessControlAllowHeadersPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyAccessControlAllowMethodsOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyAccessControlAllowMethodsPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyAccessControlAllowOriginsOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyAccessControlAllowOriginsPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyAccessControlExposeHeadersOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyAccessControlExposeHeadersPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyConfigOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyConfigPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyContentSecurityPolicyOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyContentSecurityPolicyPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyContentTypeOptionsOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyContentTypeOptionsPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCorsConfigOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCorsConfigPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCustomHeaderOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCustomHeaderArrayOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCustomHeadersConfigOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyCustomHeadersConfigPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyFrameOptionsOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyFrameOptionsPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyReferrerPolicyOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyReferrerPolicyPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyRemoveHeaderOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyRemoveHeaderArrayOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyRemoveHeadersConfigOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyRemoveHeadersConfigPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicySecurityHeadersConfigOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicySecurityHeadersConfigPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyServerTimingHeadersConfigOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyServerTimingHeadersConfigPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyStrictTransportSecurityOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyStrictTransportSecurityPtrOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyXssProtectionOutput{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyXssProtectionPtrOutput{})
	pulumi.RegisterOutputType(StreamingDistributionConfigOutput{})
	pulumi.RegisterOutputType(StreamingDistributionConfigPtrOutput{})
	pulumi.RegisterOutputType(StreamingDistributionLoggingOutput{})
	pulumi.RegisterOutputType(StreamingDistributionLoggingPtrOutput{})
	pulumi.RegisterOutputType(StreamingDistributionS3OriginOutput{})
	pulumi.RegisterOutputType(StreamingDistributionS3OriginPtrOutput{})
	pulumi.RegisterOutputType(StreamingDistributionTrustedSignersOutput{})
	pulumi.RegisterOutputType(StreamingDistributionTrustedSignersPtrOutput{})
}
