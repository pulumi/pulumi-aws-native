// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::CloudFront::ContinuousDeploymentPolicy
func LookupContinuousDeploymentPolicy(ctx *pulumi.Context, args *LookupContinuousDeploymentPolicyArgs, opts ...pulumi.InvokeOption) (*LookupContinuousDeploymentPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContinuousDeploymentPolicyResult
	err := ctx.Invoke("aws-native:cloudfront:getContinuousDeploymentPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupContinuousDeploymentPolicyArgs struct {
	Id string `pulumi:"id"`
}

type LookupContinuousDeploymentPolicyResult struct {
	ContinuousDeploymentPolicyConfig *ContinuousDeploymentPolicyConfig `pulumi:"continuousDeploymentPolicyConfig"`
	Id                               *string                           `pulumi:"id"`
	LastModifiedTime                 *string                           `pulumi:"lastModifiedTime"`
}

func LookupContinuousDeploymentPolicyOutput(ctx *pulumi.Context, args LookupContinuousDeploymentPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupContinuousDeploymentPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContinuousDeploymentPolicyResult, error) {
			args := v.(LookupContinuousDeploymentPolicyArgs)
			r, err := LookupContinuousDeploymentPolicy(ctx, &args, opts...)
			var s LookupContinuousDeploymentPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupContinuousDeploymentPolicyResultOutput)
}

type LookupContinuousDeploymentPolicyOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupContinuousDeploymentPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContinuousDeploymentPolicyArgs)(nil)).Elem()
}

type LookupContinuousDeploymentPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupContinuousDeploymentPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContinuousDeploymentPolicyResult)(nil)).Elem()
}

func (o LookupContinuousDeploymentPolicyResultOutput) ToLookupContinuousDeploymentPolicyResultOutput() LookupContinuousDeploymentPolicyResultOutput {
	return o
}

func (o LookupContinuousDeploymentPolicyResultOutput) ToLookupContinuousDeploymentPolicyResultOutputWithContext(ctx context.Context) LookupContinuousDeploymentPolicyResultOutput {
	return o
}

func (o LookupContinuousDeploymentPolicyResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupContinuousDeploymentPolicyResult] {
	return pulumix.Output[LookupContinuousDeploymentPolicyResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupContinuousDeploymentPolicyResultOutput) ContinuousDeploymentPolicyConfig() ContinuousDeploymentPolicyConfigPtrOutput {
	return o.ApplyT(func(v LookupContinuousDeploymentPolicyResult) *ContinuousDeploymentPolicyConfig {
		return v.ContinuousDeploymentPolicyConfig
	}).(ContinuousDeploymentPolicyConfigPtrOutput)
}

func (o LookupContinuousDeploymentPolicyResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContinuousDeploymentPolicyResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupContinuousDeploymentPolicyResultOutput) LastModifiedTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupContinuousDeploymentPolicyResult) *string { return v.LastModifiedTime }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContinuousDeploymentPolicyResultOutput{})
}
