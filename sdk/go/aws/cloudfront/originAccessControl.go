// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::CloudFront::OriginAccessControl
type OriginAccessControl struct {
	pulumi.CustomResourceState

	OriginAccessControlConfig OriginAccessControlConfigOutput `pulumi:"originAccessControlConfig"`
}

// NewOriginAccessControl registers a new resource with the given unique name, arguments, and options.
func NewOriginAccessControl(ctx *pulumi.Context,
	name string, args *OriginAccessControlArgs, opts ...pulumi.ResourceOption) (*OriginAccessControl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OriginAccessControlConfig == nil {
		return nil, errors.New("invalid value for required argument 'OriginAccessControlConfig'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OriginAccessControl
	err := ctx.RegisterResource("aws-native:cloudfront:OriginAccessControl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOriginAccessControl gets an existing OriginAccessControl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOriginAccessControl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OriginAccessControlState, opts ...pulumi.ResourceOption) (*OriginAccessControl, error) {
	var resource OriginAccessControl
	err := ctx.ReadResource("aws-native:cloudfront:OriginAccessControl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OriginAccessControl resources.
type originAccessControlState struct {
}

type OriginAccessControlState struct {
}

func (OriginAccessControlState) ElementType() reflect.Type {
	return reflect.TypeOf((*originAccessControlState)(nil)).Elem()
}

type originAccessControlArgs struct {
	OriginAccessControlConfig OriginAccessControlConfig `pulumi:"originAccessControlConfig"`
}

// The set of arguments for constructing a OriginAccessControl resource.
type OriginAccessControlArgs struct {
	OriginAccessControlConfig OriginAccessControlConfigInput
}

func (OriginAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*originAccessControlArgs)(nil)).Elem()
}

type OriginAccessControlInput interface {
	pulumi.Input

	ToOriginAccessControlOutput() OriginAccessControlOutput
	ToOriginAccessControlOutputWithContext(ctx context.Context) OriginAccessControlOutput
}

func (*OriginAccessControl) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginAccessControl)(nil)).Elem()
}

func (i *OriginAccessControl) ToOriginAccessControlOutput() OriginAccessControlOutput {
	return i.ToOriginAccessControlOutputWithContext(context.Background())
}

func (i *OriginAccessControl) ToOriginAccessControlOutputWithContext(ctx context.Context) OriginAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginAccessControlOutput)
}

func (i *OriginAccessControl) ToOutput(ctx context.Context) pulumix.Output[*OriginAccessControl] {
	return pulumix.Output[*OriginAccessControl]{
		OutputState: i.ToOriginAccessControlOutputWithContext(ctx).OutputState,
	}
}

type OriginAccessControlOutput struct{ *pulumi.OutputState }

func (OriginAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginAccessControl)(nil)).Elem()
}

func (o OriginAccessControlOutput) ToOriginAccessControlOutput() OriginAccessControlOutput {
	return o
}

func (o OriginAccessControlOutput) ToOriginAccessControlOutputWithContext(ctx context.Context) OriginAccessControlOutput {
	return o
}

func (o OriginAccessControlOutput) ToOutput(ctx context.Context) pulumix.Output[*OriginAccessControl] {
	return pulumix.Output[*OriginAccessControl]{
		OutputState: o.OutputState,
	}
}

func (o OriginAccessControlOutput) OriginAccessControlConfig() OriginAccessControlConfigOutput {
	return o.ApplyT(func(v *OriginAccessControl) OriginAccessControlConfigOutput { return v.OriginAccessControlConfig }).(OriginAccessControlConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OriginAccessControlInput)(nil)).Elem(), &OriginAccessControl{})
	pulumi.RegisterOutputType(OriginAccessControlOutput{})
}
