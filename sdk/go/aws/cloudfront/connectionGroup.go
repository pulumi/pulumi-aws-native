// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::CloudFront::ConnectionGroup
type ConnectionGroup struct {
	pulumi.CustomResourceState

	AnycastIpListId  pulumi.StringPtrOutput `pulumi:"anycastIpListId"`
	Arn              pulumi.StringOutput    `pulumi:"arn"`
	AwsId            pulumi.StringOutput    `pulumi:"awsId"`
	CreatedTime      pulumi.StringOutput    `pulumi:"createdTime"`
	ETag             pulumi.StringOutput    `pulumi:"eTag"`
	Enabled          pulumi.BoolPtrOutput   `pulumi:"enabled"`
	Ipv6Enabled      pulumi.BoolPtrOutput   `pulumi:"ipv6Enabled"`
	IsDefault        pulumi.BoolOutput      `pulumi:"isDefault"`
	LastModifiedTime pulumi.StringOutput    `pulumi:"lastModifiedTime"`
	Name             pulumi.StringOutput    `pulumi:"name"`
	RoutingEndpoint  pulumi.StringOutput    `pulumi:"routingEndpoint"`
	Status           pulumi.StringOutput    `pulumi:"status"`
	Tags             aws.TagArrayOutput     `pulumi:"tags"`
}

// NewConnectionGroup registers a new resource with the given unique name, arguments, and options.
func NewConnectionGroup(ctx *pulumi.Context,
	name string, args *ConnectionGroupArgs, opts ...pulumi.ResourceOption) (*ConnectionGroup, error) {
	if args == nil {
		args = &ConnectionGroupArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConnectionGroup
	err := ctx.RegisterResource("aws-native:cloudfront:ConnectionGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConnectionGroup gets an existing ConnectionGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConnectionGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConnectionGroupState, opts ...pulumi.ResourceOption) (*ConnectionGroup, error) {
	var resource ConnectionGroup
	err := ctx.ReadResource("aws-native:cloudfront:ConnectionGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConnectionGroup resources.
type connectionGroupState struct {
}

type ConnectionGroupState struct {
}

func (ConnectionGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionGroupState)(nil)).Elem()
}

type connectionGroupArgs struct {
	AnycastIpListId *string   `pulumi:"anycastIpListId"`
	Enabled         *bool     `pulumi:"enabled"`
	Ipv6Enabled     *bool     `pulumi:"ipv6Enabled"`
	Name            *string   `pulumi:"name"`
	Tags            []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ConnectionGroup resource.
type ConnectionGroupArgs struct {
	AnycastIpListId pulumi.StringPtrInput
	Enabled         pulumi.BoolPtrInput
	Ipv6Enabled     pulumi.BoolPtrInput
	Name            pulumi.StringPtrInput
	Tags            aws.TagArrayInput
}

func (ConnectionGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*connectionGroupArgs)(nil)).Elem()
}

type ConnectionGroupInput interface {
	pulumi.Input

	ToConnectionGroupOutput() ConnectionGroupOutput
	ToConnectionGroupOutputWithContext(ctx context.Context) ConnectionGroupOutput
}

func (*ConnectionGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGroup)(nil)).Elem()
}

func (i *ConnectionGroup) ToConnectionGroupOutput() ConnectionGroupOutput {
	return i.ToConnectionGroupOutputWithContext(context.Background())
}

func (i *ConnectionGroup) ToConnectionGroupOutputWithContext(ctx context.Context) ConnectionGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionGroupOutput)
}

type ConnectionGroupOutput struct{ *pulumi.OutputState }

func (ConnectionGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionGroup)(nil)).Elem()
}

func (o ConnectionGroupOutput) ToConnectionGroupOutput() ConnectionGroupOutput {
	return o
}

func (o ConnectionGroupOutput) ToConnectionGroupOutputWithContext(ctx context.Context) ConnectionGroupOutput {
	return o
}

func (o ConnectionGroupOutput) AnycastIpListId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionGroup) pulumi.StringPtrOutput { return v.AnycastIpListId }).(pulumi.StringPtrOutput)
}

func (o ConnectionGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ConnectionGroupOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionGroup) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

func (o ConnectionGroupOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionGroup) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

func (o ConnectionGroupOutput) ETag() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionGroup) pulumi.StringOutput { return v.ETag }).(pulumi.StringOutput)
}

func (o ConnectionGroupOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionGroup) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ConnectionGroupOutput) Ipv6Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionGroup) pulumi.BoolPtrOutput { return v.Ipv6Enabled }).(pulumi.BoolPtrOutput)
}

func (o ConnectionGroupOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *ConnectionGroup) pulumi.BoolOutput { return v.IsDefault }).(pulumi.BoolOutput)
}

func (o ConnectionGroupOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionGroup) pulumi.StringOutput { return v.LastModifiedTime }).(pulumi.StringOutput)
}

func (o ConnectionGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ConnectionGroupOutput) RoutingEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionGroup) pulumi.StringOutput { return v.RoutingEndpoint }).(pulumi.StringOutput)
}

func (o ConnectionGroupOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ConnectionGroup) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o ConnectionGroupOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ConnectionGroup) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionGroupInput)(nil)).Elem(), &ConnectionGroup{})
	pulumi.RegisterOutputType(ConnectionGroupOutput{})
}
