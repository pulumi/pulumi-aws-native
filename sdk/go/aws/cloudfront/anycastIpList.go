// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::CloudFront::AnycastIpList Resource Type
type AnycastIpList struct {
	pulumi.CustomResourceState

	AnycastIpList AnycastIpListTypeOutput    `pulumi:"anycastIpList"`
	AwsId         pulumi.StringOutput        `pulumi:"awsId"`
	ETag          pulumi.StringOutput        `pulumi:"eTag"`
	IpCount       pulumi.IntOutput           `pulumi:"ipCount"`
	Name          pulumi.StringOutput        `pulumi:"name"`
	Tags          AnycastIpListTagsPtrOutput `pulumi:"tags"`
}

// NewAnycastIpList registers a new resource with the given unique name, arguments, and options.
func NewAnycastIpList(ctx *pulumi.Context,
	name string, args *AnycastIpListArgs, opts ...pulumi.ResourceOption) (*AnycastIpList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IpCount == nil {
		return nil, errors.New("invalid value for required argument 'IpCount'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"ipCount",
		"name",
		"tags",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AnycastIpList
	err := ctx.RegisterResource("aws-native:cloudfront:AnycastIpList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnycastIpList gets an existing AnycastIpList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnycastIpList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnycastIpListState, opts ...pulumi.ResourceOption) (*AnycastIpList, error) {
	var resource AnycastIpList
	err := ctx.ReadResource("aws-native:cloudfront:AnycastIpList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnycastIpList resources.
type anycastIpListState struct {
}

type AnycastIpListState struct {
}

func (AnycastIpListState) ElementType() reflect.Type {
	return reflect.TypeOf((*anycastIpListState)(nil)).Elem()
}

type anycastIpListArgs struct {
	IpCount int                `pulumi:"ipCount"`
	Name    *string            `pulumi:"name"`
	Tags    *AnycastIpListTags `pulumi:"tags"`
}

// The set of arguments for constructing a AnycastIpList resource.
type AnycastIpListArgs struct {
	IpCount pulumi.IntInput
	Name    pulumi.StringPtrInput
	Tags    AnycastIpListTagsPtrInput
}

func (AnycastIpListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*anycastIpListArgs)(nil)).Elem()
}

type AnycastIpListInput interface {
	pulumi.Input

	ToAnycastIpListOutput() AnycastIpListOutput
	ToAnycastIpListOutputWithContext(ctx context.Context) AnycastIpListOutput
}

func (*AnycastIpList) ElementType() reflect.Type {
	return reflect.TypeOf((**AnycastIpList)(nil)).Elem()
}

func (i *AnycastIpList) ToAnycastIpListOutput() AnycastIpListOutput {
	return i.ToAnycastIpListOutputWithContext(context.Background())
}

func (i *AnycastIpList) ToAnycastIpListOutputWithContext(ctx context.Context) AnycastIpListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnycastIpListOutput)
}

type AnycastIpListOutput struct{ *pulumi.OutputState }

func (AnycastIpListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AnycastIpList)(nil)).Elem()
}

func (o AnycastIpListOutput) ToAnycastIpListOutput() AnycastIpListOutput {
	return o
}

func (o AnycastIpListOutput) ToAnycastIpListOutputWithContext(ctx context.Context) AnycastIpListOutput {
	return o
}

func (o AnycastIpListOutput) AnycastIpList() AnycastIpListTypeOutput {
	return o.ApplyT(func(v *AnycastIpList) AnycastIpListTypeOutput { return v.AnycastIpList }).(AnycastIpListTypeOutput)
}

func (o AnycastIpListOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *AnycastIpList) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

func (o AnycastIpListOutput) ETag() pulumi.StringOutput {
	return o.ApplyT(func(v *AnycastIpList) pulumi.StringOutput { return v.ETag }).(pulumi.StringOutput)
}

func (o AnycastIpListOutput) IpCount() pulumi.IntOutput {
	return o.ApplyT(func(v *AnycastIpList) pulumi.IntOutput { return v.IpCount }).(pulumi.IntOutput)
}

func (o AnycastIpListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AnycastIpList) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o AnycastIpListOutput) Tags() AnycastIpListTagsPtrOutput {
	return o.ApplyT(func(v *AnycastIpList) AnycastIpListTagsPtrOutput { return v.Tags }).(AnycastIpListTagsPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AnycastIpListInput)(nil)).Elem(), &AnycastIpList{})
	pulumi.RegisterOutputType(AnycastIpListOutput{})
}
