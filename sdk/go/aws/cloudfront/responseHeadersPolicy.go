// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A response headers policy.
//
//	A response headers policy contains information about a set of HTTP response headers.
//	After you create a response headers policy, you can use its ID to attach it to one or more cache behaviors in a CloudFront distribution. When it's attached to a cache behavior, the response headers policy affects the HTTP headers that CloudFront includes in HTTP responses to requests that match the cache behavior. CloudFront adds or removes response headers according to the configuration of the response headers policy.
//	For more information, see [Adding or removing HTTP headers in CloudFront responses](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/modifying-response-headers.html) in the *Amazon CloudFront Developer Guide*.
type ResponseHeadersPolicy struct {
	pulumi.CustomResourceState

	// The unique identifier for the response headers policy. For example: `57f99797-3b20-4e1b-a728-27972a74082a` .
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// The date and time when the response headers policy was last modified.
	LastModifiedTime pulumi.StringOutput `pulumi:"lastModifiedTime"`
	// A response headers policy configuration.
	ResponseHeadersPolicyConfig ResponseHeadersPolicyConfigOutput `pulumi:"responseHeadersPolicyConfig"`
}

// NewResponseHeadersPolicy registers a new resource with the given unique name, arguments, and options.
func NewResponseHeadersPolicy(ctx *pulumi.Context,
	name string, args *ResponseHeadersPolicyArgs, opts ...pulumi.ResourceOption) (*ResponseHeadersPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResponseHeadersPolicyConfig == nil {
		return nil, errors.New("invalid value for required argument 'ResponseHeadersPolicyConfig'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResponseHeadersPolicy
	err := ctx.RegisterResource("aws-native:cloudfront:ResponseHeadersPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResponseHeadersPolicy gets an existing ResponseHeadersPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResponseHeadersPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResponseHeadersPolicyState, opts ...pulumi.ResourceOption) (*ResponseHeadersPolicy, error) {
	var resource ResponseHeadersPolicy
	err := ctx.ReadResource("aws-native:cloudfront:ResponseHeadersPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResponseHeadersPolicy resources.
type responseHeadersPolicyState struct {
}

type ResponseHeadersPolicyState struct {
}

func (ResponseHeadersPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*responseHeadersPolicyState)(nil)).Elem()
}

type responseHeadersPolicyArgs struct {
	// A response headers policy configuration.
	ResponseHeadersPolicyConfig ResponseHeadersPolicyConfig `pulumi:"responseHeadersPolicyConfig"`
}

// The set of arguments for constructing a ResponseHeadersPolicy resource.
type ResponseHeadersPolicyArgs struct {
	// A response headers policy configuration.
	ResponseHeadersPolicyConfig ResponseHeadersPolicyConfigInput
}

func (ResponseHeadersPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*responseHeadersPolicyArgs)(nil)).Elem()
}

type ResponseHeadersPolicyInput interface {
	pulumi.Input

	ToResponseHeadersPolicyOutput() ResponseHeadersPolicyOutput
	ToResponseHeadersPolicyOutputWithContext(ctx context.Context) ResponseHeadersPolicyOutput
}

func (*ResponseHeadersPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicy)(nil)).Elem()
}

func (i *ResponseHeadersPolicy) ToResponseHeadersPolicyOutput() ResponseHeadersPolicyOutput {
	return i.ToResponseHeadersPolicyOutputWithContext(context.Background())
}

func (i *ResponseHeadersPolicy) ToResponseHeadersPolicyOutputWithContext(ctx context.Context) ResponseHeadersPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseHeadersPolicyOutput)
}

type ResponseHeadersPolicyOutput struct{ *pulumi.OutputState }

func (ResponseHeadersPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponseHeadersPolicy)(nil)).Elem()
}

func (o ResponseHeadersPolicyOutput) ToResponseHeadersPolicyOutput() ResponseHeadersPolicyOutput {
	return o
}

func (o ResponseHeadersPolicyOutput) ToResponseHeadersPolicyOutputWithContext(ctx context.Context) ResponseHeadersPolicyOutput {
	return o
}

// The unique identifier for the response headers policy. For example: `57f99797-3b20-4e1b-a728-27972a74082a` .
func (o ResponseHeadersPolicyOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicy) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// The date and time when the response headers policy was last modified.
func (o ResponseHeadersPolicyOutput) LastModifiedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicy) pulumi.StringOutput { return v.LastModifiedTime }).(pulumi.StringOutput)
}

// A response headers policy configuration.
func (o ResponseHeadersPolicyOutput) ResponseHeadersPolicyConfig() ResponseHeadersPolicyConfigOutput {
	return o.ApplyT(func(v *ResponseHeadersPolicy) ResponseHeadersPolicyConfigOutput { return v.ResponseHeadersPolicyConfig }).(ResponseHeadersPolicyConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseHeadersPolicyInput)(nil)).Elem(), &ResponseHeadersPolicy{})
	pulumi.RegisterOutputType(ResponseHeadersPolicyOutput{})
}
