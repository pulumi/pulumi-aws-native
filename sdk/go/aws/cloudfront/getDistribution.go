// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudfront

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A distribution tells CloudFront where you want content to be delivered from, and the details about how to track and manage content delivery.
func LookupDistribution(ctx *pulumi.Context, args *LookupDistributionArgs, opts ...pulumi.InvokeOption) (*LookupDistributionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDistributionResult
	err := ctx.Invoke("aws-native:cloudfront:getDistribution", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDistributionArgs struct {
	// The distribution's identifier. For example: `E1U5RQF7T870K0` .
	Id string `pulumi:"id"`
}

type LookupDistributionResult struct {
	// The distribution's configuration.
	DistributionConfig *DistributionConfig `pulumi:"distributionConfig"`
	// The domain name of the resource, such as `d111111abcdef8.cloudfront.net` .
	DomainName *string `pulumi:"domainName"`
	// The distribution's identifier. For example: `E1U5RQF7T870K0` .
	Id *string `pulumi:"id"`
	// A complex type that contains zero or more ``Tag`` elements.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDistributionOutput(ctx *pulumi.Context, args LookupDistributionOutputArgs, opts ...pulumi.InvokeOption) LookupDistributionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDistributionResultOutput, error) {
			args := v.(LookupDistributionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupDistributionResult
			secret, err := ctx.InvokePackageRaw("aws-native:cloudfront:getDistribution", args, &rv, "", opts...)
			if err != nil {
				return LookupDistributionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupDistributionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupDistributionResultOutput), nil
			}
			return output, nil
		}).(LookupDistributionResultOutput)
}

type LookupDistributionOutputArgs struct {
	// The distribution's identifier. For example: `E1U5RQF7T870K0` .
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupDistributionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDistributionArgs)(nil)).Elem()
}

type LookupDistributionResultOutput struct{ *pulumi.OutputState }

func (LookupDistributionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDistributionResult)(nil)).Elem()
}

func (o LookupDistributionResultOutput) ToLookupDistributionResultOutput() LookupDistributionResultOutput {
	return o
}

func (o LookupDistributionResultOutput) ToLookupDistributionResultOutputWithContext(ctx context.Context) LookupDistributionResultOutput {
	return o
}

// The distribution's configuration.
func (o LookupDistributionResultOutput) DistributionConfig() DistributionConfigPtrOutput {
	return o.ApplyT(func(v LookupDistributionResult) *DistributionConfig { return v.DistributionConfig }).(DistributionConfigPtrOutput)
}

// The domain name of the resource, such as `d111111abcdef8.cloudfront.net` .
func (o LookupDistributionResultOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDistributionResult) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// The distribution's identifier. For example: `E1U5RQF7T870K0` .
func (o LookupDistributionResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDistributionResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A complex type that contains zero or more “Tag“ elements.
func (o LookupDistributionResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDistributionResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDistributionResultOutput{})
}
