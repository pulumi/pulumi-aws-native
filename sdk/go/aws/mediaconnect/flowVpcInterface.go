// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package mediaconnect

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::MediaConnect::FlowVpcInterface
type FlowVpcInterface struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
	FlowArn pulumi.StringOutput `pulumi:"flowArn"`
	// Immutable and has to be a unique against other VpcInterfaces in this Flow.
	Name pulumi.StringOutput `pulumi:"name"`
	// IDs of the network interfaces created in customer's account by MediaConnect.
	NetworkInterfaceIds pulumi.StringArrayOutput `pulumi:"networkInterfaceIds"`
	// Role Arn MediaConnect can assumes to create ENIs in customer's account.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// Security Group IDs to be used on ENI.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// Subnet must be in the AZ of the Flow
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
}

// NewFlowVpcInterface registers a new resource with the given unique name, arguments, and options.
func NewFlowVpcInterface(ctx *pulumi.Context,
	name string, args *FlowVpcInterfaceArgs, opts ...pulumi.ResourceOption) (*FlowVpcInterface, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FlowArn == nil {
		return nil, errors.New("invalid value for required argument 'FlowArn'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	if args.SecurityGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIds'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	var resource FlowVpcInterface
	err := ctx.RegisterResource("aws-native:mediaconnect:FlowVpcInterface", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlowVpcInterface gets an existing FlowVpcInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlowVpcInterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlowVpcInterfaceState, opts ...pulumi.ResourceOption) (*FlowVpcInterface, error) {
	var resource FlowVpcInterface
	err := ctx.ReadResource("aws-native:mediaconnect:FlowVpcInterface", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FlowVpcInterface resources.
type flowVpcInterfaceState struct {
}

type FlowVpcInterfaceState struct {
}

func (FlowVpcInterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*flowVpcInterfaceState)(nil)).Elem()
}

type flowVpcInterfaceArgs struct {
	// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
	FlowArn string `pulumi:"flowArn"`
	// Immutable and has to be a unique against other VpcInterfaces in this Flow.
	Name string `pulumi:"name"`
	// Role Arn MediaConnect can assumes to create ENIs in customer's account.
	RoleArn string `pulumi:"roleArn"`
	// Security Group IDs to be used on ENI.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Subnet must be in the AZ of the Flow
	SubnetId string `pulumi:"subnetId"`
}

// The set of arguments for constructing a FlowVpcInterface resource.
type FlowVpcInterfaceArgs struct {
	// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
	FlowArn pulumi.StringInput
	// Immutable and has to be a unique against other VpcInterfaces in this Flow.
	Name pulumi.StringInput
	// Role Arn MediaConnect can assumes to create ENIs in customer's account.
	RoleArn pulumi.StringInput
	// Security Group IDs to be used on ENI.
	SecurityGroupIds pulumi.StringArrayInput
	// Subnet must be in the AZ of the Flow
	SubnetId pulumi.StringInput
}

func (FlowVpcInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flowVpcInterfaceArgs)(nil)).Elem()
}

type FlowVpcInterfaceInput interface {
	pulumi.Input

	ToFlowVpcInterfaceOutput() FlowVpcInterfaceOutput
	ToFlowVpcInterfaceOutputWithContext(ctx context.Context) FlowVpcInterfaceOutput
}

func (*FlowVpcInterface) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVpcInterface)(nil))
}

func (i *FlowVpcInterface) ToFlowVpcInterfaceOutput() FlowVpcInterfaceOutput {
	return i.ToFlowVpcInterfaceOutputWithContext(context.Background())
}

func (i *FlowVpcInterface) ToFlowVpcInterfaceOutputWithContext(ctx context.Context) FlowVpcInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowVpcInterfaceOutput)
}

type FlowVpcInterfaceOutput struct{ *pulumi.OutputState }

func (FlowVpcInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVpcInterface)(nil))
}

func (o FlowVpcInterfaceOutput) ToFlowVpcInterfaceOutput() FlowVpcInterfaceOutput {
	return o
}

func (o FlowVpcInterfaceOutput) ToFlowVpcInterfaceOutputWithContext(ctx context.Context) FlowVpcInterfaceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(FlowVpcInterfaceOutput{})
}
