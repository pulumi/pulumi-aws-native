// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaconnect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::MediaConnect::BridgeOutput
func LookupBridgeOutputResource(ctx *pulumi.Context, args *LookupBridgeOutputResourceArgs, opts ...pulumi.InvokeOption) (*LookupBridgeOutputResourceResult, error) {
	var rv LookupBridgeOutputResourceResult
	err := ctx.Invoke("aws-native:mediaconnect:getBridgeOutputResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBridgeOutputResourceArgs struct {
	// The Amazon Resource Number (ARN) of the bridge.
	BridgeArn string `pulumi:"bridgeArn"`
	// The network output name.
	Name string `pulumi:"name"`
}

type LookupBridgeOutputResourceResult struct {
	// The output of the bridge.
	NetworkOutput *BridgeOutputResourceBridgeNetworkOutput `pulumi:"networkOutput"`
}

func LookupBridgeOutputResourceOutput(ctx *pulumi.Context, args LookupBridgeOutputResourceOutputArgs, opts ...pulumi.InvokeOption) LookupBridgeOutputResourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBridgeOutputResourceResult, error) {
			args := v.(LookupBridgeOutputResourceArgs)
			r, err := LookupBridgeOutputResource(ctx, &args, opts...)
			var s LookupBridgeOutputResourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBridgeOutputResourceResultOutput)
}

type LookupBridgeOutputResourceOutputArgs struct {
	// The Amazon Resource Number (ARN) of the bridge.
	BridgeArn pulumi.StringInput `pulumi:"bridgeArn"`
	// The network output name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupBridgeOutputResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBridgeOutputResourceArgs)(nil)).Elem()
}

type LookupBridgeOutputResourceResultOutput struct{ *pulumi.OutputState }

func (LookupBridgeOutputResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBridgeOutputResourceResult)(nil)).Elem()
}

func (o LookupBridgeOutputResourceResultOutput) ToLookupBridgeOutputResourceResultOutput() LookupBridgeOutputResourceResultOutput {
	return o
}

func (o LookupBridgeOutputResourceResultOutput) ToLookupBridgeOutputResourceResultOutputWithContext(ctx context.Context) LookupBridgeOutputResourceResultOutput {
	return o
}

// The output of the bridge.
func (o LookupBridgeOutputResourceResultOutput) NetworkOutput() BridgeOutputResourceBridgeNetworkOutputPtrOutput {
	return o.ApplyT(func(v LookupBridgeOutputResourceResult) *BridgeOutputResourceBridgeNetworkOutput {
		return v.NetworkOutput
	}).(BridgeOutputResourceBridgeNetworkOutputPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBridgeOutputResourceResultOutput{})
}
