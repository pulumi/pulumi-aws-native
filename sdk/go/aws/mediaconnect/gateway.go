// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaconnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource schema for AWS::MediaConnect::Gateway
type Gateway struct {
	pulumi.CustomResourceState

	// The range of IP addresses that contribute content or initiate output requests for flows communicating with this gateway. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
	EgressCidrBlocks pulumi.StringArrayOutput `pulumi:"egressCidrBlocks"`
	// The Amazon Resource Name (ARN) of the gateway.
	GatewayArn pulumi.StringOutput `pulumi:"gatewayArn"`
	// The current status of the gateway.
	GatewayState GatewayStateEnumOutput `pulumi:"gatewayState"`
	// The name of the gateway. This name can not be modified after the gateway is created.
	Name pulumi.StringOutput `pulumi:"name"`
	// The list of networks in the gateway.
	Networks GatewayNetworkArrayOutput `pulumi:"networks"`
}

// NewGateway registers a new resource with the given unique name, arguments, and options.
func NewGateway(ctx *pulumi.Context,
	name string, args *GatewayArgs, opts ...pulumi.ResourceOption) (*Gateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EgressCidrBlocks == nil {
		return nil, errors.New("invalid value for required argument 'EgressCidrBlocks'")
	}
	if args.Networks == nil {
		return nil, errors.New("invalid value for required argument 'Networks'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"egressCidrBlocks[*]",
		"name",
		"networks[*]",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Gateway
	err := ctx.RegisterResource("aws-native:mediaconnect:Gateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGateway gets an existing Gateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayState, opts ...pulumi.ResourceOption) (*Gateway, error) {
	var resource Gateway
	err := ctx.ReadResource("aws-native:mediaconnect:Gateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Gateway resources.
type gatewayState struct {
}

type GatewayState struct {
}

func (GatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayState)(nil)).Elem()
}

type gatewayArgs struct {
	// The range of IP addresses that contribute content or initiate output requests for flows communicating with this gateway. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
	EgressCidrBlocks []string `pulumi:"egressCidrBlocks"`
	// The name of the gateway. This name can not be modified after the gateway is created.
	Name *string `pulumi:"name"`
	// The list of networks in the gateway.
	Networks []GatewayNetwork `pulumi:"networks"`
}

// The set of arguments for constructing a Gateway resource.
type GatewayArgs struct {
	// The range of IP addresses that contribute content or initiate output requests for flows communicating with this gateway. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
	EgressCidrBlocks pulumi.StringArrayInput
	// The name of the gateway. This name can not be modified after the gateway is created.
	Name pulumi.StringPtrInput
	// The list of networks in the gateway.
	Networks GatewayNetworkArrayInput
}

func (GatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayArgs)(nil)).Elem()
}

type GatewayInput interface {
	pulumi.Input

	ToGatewayOutput() GatewayOutput
	ToGatewayOutputWithContext(ctx context.Context) GatewayOutput
}

func (*Gateway) ElementType() reflect.Type {
	return reflect.TypeOf((**Gateway)(nil)).Elem()
}

func (i *Gateway) ToGatewayOutput() GatewayOutput {
	return i.ToGatewayOutputWithContext(context.Background())
}

func (i *Gateway) ToGatewayOutputWithContext(ctx context.Context) GatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayOutput)
}

func (i *Gateway) ToOutput(ctx context.Context) pulumix.Output[*Gateway] {
	return pulumix.Output[*Gateway]{
		OutputState: i.ToGatewayOutputWithContext(ctx).OutputState,
	}
}

type GatewayOutput struct{ *pulumi.OutputState }

func (GatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Gateway)(nil)).Elem()
}

func (o GatewayOutput) ToGatewayOutput() GatewayOutput {
	return o
}

func (o GatewayOutput) ToGatewayOutputWithContext(ctx context.Context) GatewayOutput {
	return o
}

func (o GatewayOutput) ToOutput(ctx context.Context) pulumix.Output[*Gateway] {
	return pulumix.Output[*Gateway]{
		OutputState: o.OutputState,
	}
}

// The range of IP addresses that contribute content or initiate output requests for flows communicating with this gateway. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
func (o GatewayOutput) EgressCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringArrayOutput { return v.EgressCidrBlocks }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) of the gateway.
func (o GatewayOutput) GatewayArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringOutput { return v.GatewayArn }).(pulumi.StringOutput)
}

// The current status of the gateway.
func (o GatewayOutput) GatewayState() GatewayStateEnumOutput {
	return o.ApplyT(func(v *Gateway) GatewayStateEnumOutput { return v.GatewayState }).(GatewayStateEnumOutput)
}

// The name of the gateway. This name can not be modified after the gateway is created.
func (o GatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Gateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The list of networks in the gateway.
func (o GatewayOutput) Networks() GatewayNetworkArrayOutput {
	return o.ApplyT(func(v *Gateway) GatewayNetworkArrayOutput { return v.Networks }).(GatewayNetworkArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayInput)(nil)).Elem(), &Gateway{})
	pulumi.RegisterOutputType(GatewayOutput{})
}
