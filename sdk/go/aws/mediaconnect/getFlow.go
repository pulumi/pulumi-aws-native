// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaconnect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::MediaConnect::Flow
func LookupFlow(ctx *pulumi.Context, args *LookupFlowArgs, opts ...pulumi.InvokeOption) (*LookupFlowResult, error) {
	var rv LookupFlowResult
	err := ctx.Invoke("aws-native:mediaconnect:getFlow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFlowArgs struct {
	// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
	FlowArn string `pulumi:"flowArn"`
}

type LookupFlowResult struct {
	// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
	FlowArn *string `pulumi:"flowArn"`
	// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)
	FlowAvailabilityZone *string `pulumi:"flowAvailabilityZone"`
	// The source of the flow.
	Source *FlowSourceType `pulumi:"source"`
	// The source failover config of the flow.
	SourceFailoverConfig *FlowFailoverConfig `pulumi:"sourceFailoverConfig"`
}

func LookupFlowOutput(ctx *pulumi.Context, args LookupFlowOutputArgs, opts ...pulumi.InvokeOption) LookupFlowResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFlowResult, error) {
			args := v.(LookupFlowArgs)
			r, err := LookupFlow(ctx, &args, opts...)
			var s LookupFlowResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFlowResultOutput)
}

type LookupFlowOutputArgs struct {
	// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
	FlowArn pulumi.StringInput `pulumi:"flowArn"`
}

func (LookupFlowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowArgs)(nil)).Elem()
}

type LookupFlowResultOutput struct{ *pulumi.OutputState }

func (LookupFlowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowResult)(nil)).Elem()
}

func (o LookupFlowResultOutput) ToLookupFlowResultOutput() LookupFlowResultOutput {
	return o
}

func (o LookupFlowResultOutput) ToLookupFlowResultOutputWithContext(ctx context.Context) LookupFlowResultOutput {
	return o
}

// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
func (o LookupFlowResultOutput) FlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *string { return v.FlowArn }).(pulumi.StringPtrOutput)
}

// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)
func (o LookupFlowResultOutput) FlowAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *string { return v.FlowAvailabilityZone }).(pulumi.StringPtrOutput)
}

// The source of the flow.
func (o LookupFlowResultOutput) Source() FlowSourceTypePtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *FlowSourceType { return v.Source }).(FlowSourceTypePtrOutput)
}

// The source failover config of the flow.
func (o LookupFlowResultOutput) SourceFailoverConfig() FlowFailoverConfigPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *FlowFailoverConfig { return v.SourceFailoverConfig }).(FlowFailoverConfigPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlowResultOutput{})
}
