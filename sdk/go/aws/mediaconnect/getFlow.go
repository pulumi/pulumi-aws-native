// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaconnect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::MediaConnect::Flow
func LookupFlow(ctx *pulumi.Context, args *LookupFlowArgs, opts ...pulumi.InvokeOption) (*LookupFlowResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFlowResult
	err := ctx.Invoke("aws-native:mediaconnect:getFlow", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFlowArgs struct {
	// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
	FlowArn string `pulumi:"flowArn"`
}

type LookupFlowResult struct {
	// The IP address from which video will be sent to output destinations.
	EgressIp *string `pulumi:"egressIp"`
	// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
	FlowArn *string `pulumi:"flowArn"`
	// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)
	FlowAvailabilityZone *string `pulumi:"flowAvailabilityZone"`
	// A prefix for the names of the NDI sources that the flow creates.(ReadOnly)
	FlowNdiMachineName *string `pulumi:"flowNdiMachineName"`
	// Determines the processing capacity and feature set of the flow. Set this optional parameter to LARGE if you want to enable NDI outputs on the flow.
	FlowSize *FlowSize `pulumi:"flowSize"`
	// The maintenance settings you want to use for the flow.
	Maintenance *FlowMaintenance `pulumi:"maintenance"`
	// The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.
	MediaStreams []FlowMediaStream `pulumi:"mediaStreams"`
	// Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs.
	NdiConfig *FlowNdiConfig `pulumi:"ndiConfig"`
	// The source of the flow.
	Source *FlowSourceType `pulumi:"source"`
	// The source failover config of the flow.
	SourceFailoverConfig *FlowFailoverConfig `pulumi:"sourceFailoverConfig"`
	// The source monitoring config of the flow.
	SourceMonitoringConfig *FlowSourceMonitoringConfig `pulumi:"sourceMonitoringConfig"`
	// The VPC interfaces that you added to this flow.
	VpcInterfaces []FlowVpcInterfaceType `pulumi:"vpcInterfaces"`
}

func LookupFlowOutput(ctx *pulumi.Context, args LookupFlowOutputArgs, opts ...pulumi.InvokeOption) LookupFlowResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFlowResultOutput, error) {
			args := v.(LookupFlowArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:mediaconnect:getFlow", args, LookupFlowResultOutput{}, options).(LookupFlowResultOutput), nil
		}).(LookupFlowResultOutput)
}

type LookupFlowOutputArgs struct {
	// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
	FlowArn pulumi.StringInput `pulumi:"flowArn"`
}

func (LookupFlowOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowArgs)(nil)).Elem()
}

type LookupFlowResultOutput struct{ *pulumi.OutputState }

func (LookupFlowResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFlowResult)(nil)).Elem()
}

func (o LookupFlowResultOutput) ToLookupFlowResultOutput() LookupFlowResultOutput {
	return o
}

func (o LookupFlowResultOutput) ToLookupFlowResultOutputWithContext(ctx context.Context) LookupFlowResultOutput {
	return o
}

// The IP address from which video will be sent to output destinations.
func (o LookupFlowResultOutput) EgressIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *string { return v.EgressIp }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
func (o LookupFlowResultOutput) FlowArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *string { return v.FlowArn }).(pulumi.StringPtrOutput)
}

// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)
func (o LookupFlowResultOutput) FlowAvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *string { return v.FlowAvailabilityZone }).(pulumi.StringPtrOutput)
}

// A prefix for the names of the NDI sources that the flow creates.(ReadOnly)
func (o LookupFlowResultOutput) FlowNdiMachineName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *string { return v.FlowNdiMachineName }).(pulumi.StringPtrOutput)
}

// Determines the processing capacity and feature set of the flow. Set this optional parameter to LARGE if you want to enable NDI outputs on the flow.
func (o LookupFlowResultOutput) FlowSize() FlowSizePtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *FlowSize { return v.FlowSize }).(FlowSizePtrOutput)
}

// The maintenance settings you want to use for the flow.
func (o LookupFlowResultOutput) Maintenance() FlowMaintenancePtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *FlowMaintenance { return v.Maintenance }).(FlowMaintenancePtrOutput)
}

// The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.
func (o LookupFlowResultOutput) MediaStreams() FlowMediaStreamArrayOutput {
	return o.ApplyT(func(v LookupFlowResult) []FlowMediaStream { return v.MediaStreams }).(FlowMediaStreamArrayOutput)
}

// Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs.
func (o LookupFlowResultOutput) NdiConfig() FlowNdiConfigPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *FlowNdiConfig { return v.NdiConfig }).(FlowNdiConfigPtrOutput)
}

// The source of the flow.
func (o LookupFlowResultOutput) Source() FlowSourceTypePtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *FlowSourceType { return v.Source }).(FlowSourceTypePtrOutput)
}

// The source failover config of the flow.
func (o LookupFlowResultOutput) SourceFailoverConfig() FlowFailoverConfigPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *FlowFailoverConfig { return v.SourceFailoverConfig }).(FlowFailoverConfigPtrOutput)
}

// The source monitoring config of the flow.
func (o LookupFlowResultOutput) SourceMonitoringConfig() FlowSourceMonitoringConfigPtrOutput {
	return o.ApplyT(func(v LookupFlowResult) *FlowSourceMonitoringConfig { return v.SourceMonitoringConfig }).(FlowSourceMonitoringConfigPtrOutput)
}

// The VPC interfaces that you added to this flow.
func (o LookupFlowResultOutput) VpcInterfaces() FlowVpcInterfaceTypeArrayOutput {
	return o.ApplyT(func(v LookupFlowResult) []FlowVpcInterfaceType { return v.VpcInterfaces }).(FlowVpcInterfaceTypeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFlowResultOutput{})
}
