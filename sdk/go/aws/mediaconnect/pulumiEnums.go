// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaconnect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BridgeFailoverConfigStateEnum string

const (
	BridgeFailoverConfigStateEnumEnabled  = BridgeFailoverConfigStateEnum("ENABLED")
	BridgeFailoverConfigStateEnumDisabled = BridgeFailoverConfigStateEnum("DISABLED")
)

func (BridgeFailoverConfigStateEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*BridgeFailoverConfigStateEnum)(nil)).Elem()
}

func (e BridgeFailoverConfigStateEnum) ToBridgeFailoverConfigStateEnumOutput() BridgeFailoverConfigStateEnumOutput {
	return pulumi.ToOutput(e).(BridgeFailoverConfigStateEnumOutput)
}

func (e BridgeFailoverConfigStateEnum) ToBridgeFailoverConfigStateEnumOutputWithContext(ctx context.Context) BridgeFailoverConfigStateEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BridgeFailoverConfigStateEnumOutput)
}

func (e BridgeFailoverConfigStateEnum) ToBridgeFailoverConfigStateEnumPtrOutput() BridgeFailoverConfigStateEnumPtrOutput {
	return e.ToBridgeFailoverConfigStateEnumPtrOutputWithContext(context.Background())
}

func (e BridgeFailoverConfigStateEnum) ToBridgeFailoverConfigStateEnumPtrOutputWithContext(ctx context.Context) BridgeFailoverConfigStateEnumPtrOutput {
	return BridgeFailoverConfigStateEnum(e).ToBridgeFailoverConfigStateEnumOutputWithContext(ctx).ToBridgeFailoverConfigStateEnumPtrOutputWithContext(ctx)
}

func (e BridgeFailoverConfigStateEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BridgeFailoverConfigStateEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BridgeFailoverConfigStateEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BridgeFailoverConfigStateEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BridgeFailoverConfigStateEnumOutput struct{ *pulumi.OutputState }

func (BridgeFailoverConfigStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BridgeFailoverConfigStateEnum)(nil)).Elem()
}

func (o BridgeFailoverConfigStateEnumOutput) ToBridgeFailoverConfigStateEnumOutput() BridgeFailoverConfigStateEnumOutput {
	return o
}

func (o BridgeFailoverConfigStateEnumOutput) ToBridgeFailoverConfigStateEnumOutputWithContext(ctx context.Context) BridgeFailoverConfigStateEnumOutput {
	return o
}

func (o BridgeFailoverConfigStateEnumOutput) ToBridgeFailoverConfigStateEnumPtrOutput() BridgeFailoverConfigStateEnumPtrOutput {
	return o.ToBridgeFailoverConfigStateEnumPtrOutputWithContext(context.Background())
}

func (o BridgeFailoverConfigStateEnumOutput) ToBridgeFailoverConfigStateEnumPtrOutputWithContext(ctx context.Context) BridgeFailoverConfigStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BridgeFailoverConfigStateEnum) *BridgeFailoverConfigStateEnum {
		return &v
	}).(BridgeFailoverConfigStateEnumPtrOutput)
}

func (o BridgeFailoverConfigStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BridgeFailoverConfigStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BridgeFailoverConfigStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BridgeFailoverConfigStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BridgeFailoverConfigStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BridgeFailoverConfigStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BridgeFailoverConfigStateEnumPtrOutput struct{ *pulumi.OutputState }

func (BridgeFailoverConfigStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BridgeFailoverConfigStateEnum)(nil)).Elem()
}

func (o BridgeFailoverConfigStateEnumPtrOutput) ToBridgeFailoverConfigStateEnumPtrOutput() BridgeFailoverConfigStateEnumPtrOutput {
	return o
}

func (o BridgeFailoverConfigStateEnumPtrOutput) ToBridgeFailoverConfigStateEnumPtrOutputWithContext(ctx context.Context) BridgeFailoverConfigStateEnumPtrOutput {
	return o
}

func (o BridgeFailoverConfigStateEnumPtrOutput) Elem() BridgeFailoverConfigStateEnumOutput {
	return o.ApplyT(func(v *BridgeFailoverConfigStateEnum) BridgeFailoverConfigStateEnum {
		if v != nil {
			return *v
		}
		var ret BridgeFailoverConfigStateEnum
		return ret
	}).(BridgeFailoverConfigStateEnumOutput)
}

func (o BridgeFailoverConfigStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BridgeFailoverConfigStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BridgeFailoverConfigStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BridgeFailoverConfigStateEnumInput is an input type that accepts values of the BridgeFailoverConfigStateEnum enum
// A concrete instance of `BridgeFailoverConfigStateEnumInput` can be one of the following:
//
//	BridgeFailoverConfigStateEnumEnabled
//	BridgeFailoverConfigStateEnumDisabled
type BridgeFailoverConfigStateEnumInput interface {
	pulumi.Input

	ToBridgeFailoverConfigStateEnumOutput() BridgeFailoverConfigStateEnumOutput
	ToBridgeFailoverConfigStateEnumOutputWithContext(context.Context) BridgeFailoverConfigStateEnumOutput
}

var bridgeFailoverConfigStateEnumPtrType = reflect.TypeOf((**BridgeFailoverConfigStateEnum)(nil)).Elem()

type BridgeFailoverConfigStateEnumPtrInput interface {
	pulumi.Input

	ToBridgeFailoverConfigStateEnumPtrOutput() BridgeFailoverConfigStateEnumPtrOutput
	ToBridgeFailoverConfigStateEnumPtrOutputWithContext(context.Context) BridgeFailoverConfigStateEnumPtrOutput
}

type bridgeFailoverConfigStateEnumPtr string

func BridgeFailoverConfigStateEnumPtr(v string) BridgeFailoverConfigStateEnumPtrInput {
	return (*bridgeFailoverConfigStateEnumPtr)(&v)
}

func (*bridgeFailoverConfigStateEnumPtr) ElementType() reflect.Type {
	return bridgeFailoverConfigStateEnumPtrType
}

func (in *bridgeFailoverConfigStateEnumPtr) ToBridgeFailoverConfigStateEnumPtrOutput() BridgeFailoverConfigStateEnumPtrOutput {
	return pulumi.ToOutput(in).(BridgeFailoverConfigStateEnumPtrOutput)
}

func (in *bridgeFailoverConfigStateEnumPtr) ToBridgeFailoverConfigStateEnumPtrOutputWithContext(ctx context.Context) BridgeFailoverConfigStateEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BridgeFailoverConfigStateEnumPtrOutput)
}

type BridgeFailoverModeEnum string

const (
	BridgeFailoverModeEnumFailover = BridgeFailoverModeEnum("FAILOVER")
)

func (BridgeFailoverModeEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*BridgeFailoverModeEnum)(nil)).Elem()
}

func (e BridgeFailoverModeEnum) ToBridgeFailoverModeEnumOutput() BridgeFailoverModeEnumOutput {
	return pulumi.ToOutput(e).(BridgeFailoverModeEnumOutput)
}

func (e BridgeFailoverModeEnum) ToBridgeFailoverModeEnumOutputWithContext(ctx context.Context) BridgeFailoverModeEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BridgeFailoverModeEnumOutput)
}

func (e BridgeFailoverModeEnum) ToBridgeFailoverModeEnumPtrOutput() BridgeFailoverModeEnumPtrOutput {
	return e.ToBridgeFailoverModeEnumPtrOutputWithContext(context.Background())
}

func (e BridgeFailoverModeEnum) ToBridgeFailoverModeEnumPtrOutputWithContext(ctx context.Context) BridgeFailoverModeEnumPtrOutput {
	return BridgeFailoverModeEnum(e).ToBridgeFailoverModeEnumOutputWithContext(ctx).ToBridgeFailoverModeEnumPtrOutputWithContext(ctx)
}

func (e BridgeFailoverModeEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BridgeFailoverModeEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BridgeFailoverModeEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BridgeFailoverModeEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BridgeFailoverModeEnumOutput struct{ *pulumi.OutputState }

func (BridgeFailoverModeEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BridgeFailoverModeEnum)(nil)).Elem()
}

func (o BridgeFailoverModeEnumOutput) ToBridgeFailoverModeEnumOutput() BridgeFailoverModeEnumOutput {
	return o
}

func (o BridgeFailoverModeEnumOutput) ToBridgeFailoverModeEnumOutputWithContext(ctx context.Context) BridgeFailoverModeEnumOutput {
	return o
}

func (o BridgeFailoverModeEnumOutput) ToBridgeFailoverModeEnumPtrOutput() BridgeFailoverModeEnumPtrOutput {
	return o.ToBridgeFailoverModeEnumPtrOutputWithContext(context.Background())
}

func (o BridgeFailoverModeEnumOutput) ToBridgeFailoverModeEnumPtrOutputWithContext(ctx context.Context) BridgeFailoverModeEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BridgeFailoverModeEnum) *BridgeFailoverModeEnum {
		return &v
	}).(BridgeFailoverModeEnumPtrOutput)
}

func (o BridgeFailoverModeEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BridgeFailoverModeEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BridgeFailoverModeEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BridgeFailoverModeEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BridgeFailoverModeEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BridgeFailoverModeEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BridgeFailoverModeEnumPtrOutput struct{ *pulumi.OutputState }

func (BridgeFailoverModeEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BridgeFailoverModeEnum)(nil)).Elem()
}

func (o BridgeFailoverModeEnumPtrOutput) ToBridgeFailoverModeEnumPtrOutput() BridgeFailoverModeEnumPtrOutput {
	return o
}

func (o BridgeFailoverModeEnumPtrOutput) ToBridgeFailoverModeEnumPtrOutputWithContext(ctx context.Context) BridgeFailoverModeEnumPtrOutput {
	return o
}

func (o BridgeFailoverModeEnumPtrOutput) Elem() BridgeFailoverModeEnumOutput {
	return o.ApplyT(func(v *BridgeFailoverModeEnum) BridgeFailoverModeEnum {
		if v != nil {
			return *v
		}
		var ret BridgeFailoverModeEnum
		return ret
	}).(BridgeFailoverModeEnumOutput)
}

func (o BridgeFailoverModeEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BridgeFailoverModeEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BridgeFailoverModeEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BridgeFailoverModeEnumInput is an input type that accepts values of the BridgeFailoverModeEnum enum
// A concrete instance of `BridgeFailoverModeEnumInput` can be one of the following:
//
//	BridgeFailoverModeEnumFailover
type BridgeFailoverModeEnumInput interface {
	pulumi.Input

	ToBridgeFailoverModeEnumOutput() BridgeFailoverModeEnumOutput
	ToBridgeFailoverModeEnumOutputWithContext(context.Context) BridgeFailoverModeEnumOutput
}

var bridgeFailoverModeEnumPtrType = reflect.TypeOf((**BridgeFailoverModeEnum)(nil)).Elem()

type BridgeFailoverModeEnumPtrInput interface {
	pulumi.Input

	ToBridgeFailoverModeEnumPtrOutput() BridgeFailoverModeEnumPtrOutput
	ToBridgeFailoverModeEnumPtrOutputWithContext(context.Context) BridgeFailoverModeEnumPtrOutput
}

type bridgeFailoverModeEnumPtr string

func BridgeFailoverModeEnumPtr(v string) BridgeFailoverModeEnumPtrInput {
	return (*bridgeFailoverModeEnumPtr)(&v)
}

func (*bridgeFailoverModeEnumPtr) ElementType() reflect.Type {
	return bridgeFailoverModeEnumPtrType
}

func (in *bridgeFailoverModeEnumPtr) ToBridgeFailoverModeEnumPtrOutput() BridgeFailoverModeEnumPtrOutput {
	return pulumi.ToOutput(in).(BridgeFailoverModeEnumPtrOutput)
}

func (in *bridgeFailoverModeEnumPtr) ToBridgeFailoverModeEnumPtrOutputWithContext(ctx context.Context) BridgeFailoverModeEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BridgeFailoverModeEnumPtrOutput)
}

// The network output protocol.
type BridgeOutputResourceBridgeNetworkOutputProtocol string

const (
	BridgeOutputResourceBridgeNetworkOutputProtocolRtpFec = BridgeOutputResourceBridgeNetworkOutputProtocol("rtp-fec")
	BridgeOutputResourceBridgeNetworkOutputProtocolRtp    = BridgeOutputResourceBridgeNetworkOutputProtocol("rtp")
	BridgeOutputResourceBridgeNetworkOutputProtocolUdp    = BridgeOutputResourceBridgeNetworkOutputProtocol("udp")
)

func (BridgeOutputResourceBridgeNetworkOutputProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*BridgeOutputResourceBridgeNetworkOutputProtocol)(nil)).Elem()
}

func (e BridgeOutputResourceBridgeNetworkOutputProtocol) ToBridgeOutputResourceBridgeNetworkOutputProtocolOutput() BridgeOutputResourceBridgeNetworkOutputProtocolOutput {
	return pulumi.ToOutput(e).(BridgeOutputResourceBridgeNetworkOutputProtocolOutput)
}

func (e BridgeOutputResourceBridgeNetworkOutputProtocol) ToBridgeOutputResourceBridgeNetworkOutputProtocolOutputWithContext(ctx context.Context) BridgeOutputResourceBridgeNetworkOutputProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BridgeOutputResourceBridgeNetworkOutputProtocolOutput)
}

func (e BridgeOutputResourceBridgeNetworkOutputProtocol) ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput() BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput {
	return e.ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutputWithContext(context.Background())
}

func (e BridgeOutputResourceBridgeNetworkOutputProtocol) ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutputWithContext(ctx context.Context) BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput {
	return BridgeOutputResourceBridgeNetworkOutputProtocol(e).ToBridgeOutputResourceBridgeNetworkOutputProtocolOutputWithContext(ctx).ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutputWithContext(ctx)
}

func (e BridgeOutputResourceBridgeNetworkOutputProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BridgeOutputResourceBridgeNetworkOutputProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BridgeOutputResourceBridgeNetworkOutputProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BridgeOutputResourceBridgeNetworkOutputProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BridgeOutputResourceBridgeNetworkOutputProtocolOutput struct{ *pulumi.OutputState }

func (BridgeOutputResourceBridgeNetworkOutputProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BridgeOutputResourceBridgeNetworkOutputProtocol)(nil)).Elem()
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolOutput) ToBridgeOutputResourceBridgeNetworkOutputProtocolOutput() BridgeOutputResourceBridgeNetworkOutputProtocolOutput {
	return o
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolOutput) ToBridgeOutputResourceBridgeNetworkOutputProtocolOutputWithContext(ctx context.Context) BridgeOutputResourceBridgeNetworkOutputProtocolOutput {
	return o
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolOutput) ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput() BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput {
	return o.ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutputWithContext(context.Background())
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolOutput) ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutputWithContext(ctx context.Context) BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BridgeOutputResourceBridgeNetworkOutputProtocol) *BridgeOutputResourceBridgeNetworkOutputProtocol {
		return &v
	}).(BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput)
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BridgeOutputResourceBridgeNetworkOutputProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BridgeOutputResourceBridgeNetworkOutputProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput struct{ *pulumi.OutputState }

func (BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BridgeOutputResourceBridgeNetworkOutputProtocol)(nil)).Elem()
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput) ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput() BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput {
	return o
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput) ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutputWithContext(ctx context.Context) BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput {
	return o
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput) Elem() BridgeOutputResourceBridgeNetworkOutputProtocolOutput {
	return o.ApplyT(func(v *BridgeOutputResourceBridgeNetworkOutputProtocol) BridgeOutputResourceBridgeNetworkOutputProtocol {
		if v != nil {
			return *v
		}
		var ret BridgeOutputResourceBridgeNetworkOutputProtocol
		return ret
	}).(BridgeOutputResourceBridgeNetworkOutputProtocolOutput)
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BridgeOutputResourceBridgeNetworkOutputProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BridgeOutputResourceBridgeNetworkOutputProtocolInput is an input type that accepts values of the BridgeOutputResourceBridgeNetworkOutputProtocol enum
// A concrete instance of `BridgeOutputResourceBridgeNetworkOutputProtocolInput` can be one of the following:
//
//	BridgeOutputResourceBridgeNetworkOutputProtocolRtpFec
//	BridgeOutputResourceBridgeNetworkOutputProtocolRtp
//	BridgeOutputResourceBridgeNetworkOutputProtocolUdp
type BridgeOutputResourceBridgeNetworkOutputProtocolInput interface {
	pulumi.Input

	ToBridgeOutputResourceBridgeNetworkOutputProtocolOutput() BridgeOutputResourceBridgeNetworkOutputProtocolOutput
	ToBridgeOutputResourceBridgeNetworkOutputProtocolOutputWithContext(context.Context) BridgeOutputResourceBridgeNetworkOutputProtocolOutput
}

var bridgeOutputResourceBridgeNetworkOutputProtocolPtrType = reflect.TypeOf((**BridgeOutputResourceBridgeNetworkOutputProtocol)(nil)).Elem()

type BridgeOutputResourceBridgeNetworkOutputProtocolPtrInput interface {
	pulumi.Input

	ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput() BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput
	ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutputWithContext(context.Context) BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput
}

type bridgeOutputResourceBridgeNetworkOutputProtocolPtr string

func BridgeOutputResourceBridgeNetworkOutputProtocolPtr(v string) BridgeOutputResourceBridgeNetworkOutputProtocolPtrInput {
	return (*bridgeOutputResourceBridgeNetworkOutputProtocolPtr)(&v)
}

func (*bridgeOutputResourceBridgeNetworkOutputProtocolPtr) ElementType() reflect.Type {
	return bridgeOutputResourceBridgeNetworkOutputProtocolPtrType
}

func (in *bridgeOutputResourceBridgeNetworkOutputProtocolPtr) ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput() BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput {
	return pulumi.ToOutput(in).(BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput)
}

func (in *bridgeOutputResourceBridgeNetworkOutputProtocolPtr) ToBridgeOutputResourceBridgeNetworkOutputProtocolPtrOutputWithContext(ctx context.Context) BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput)
}

type BridgeProtocolEnum string

const (
	BridgeProtocolEnumRtpFec = BridgeProtocolEnum("rtp-fec")
	BridgeProtocolEnumRtp    = BridgeProtocolEnum("rtp")
	BridgeProtocolEnumUdp    = BridgeProtocolEnum("udp")
)

func (BridgeProtocolEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*BridgeProtocolEnum)(nil)).Elem()
}

func (e BridgeProtocolEnum) ToBridgeProtocolEnumOutput() BridgeProtocolEnumOutput {
	return pulumi.ToOutput(e).(BridgeProtocolEnumOutput)
}

func (e BridgeProtocolEnum) ToBridgeProtocolEnumOutputWithContext(ctx context.Context) BridgeProtocolEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BridgeProtocolEnumOutput)
}

func (e BridgeProtocolEnum) ToBridgeProtocolEnumPtrOutput() BridgeProtocolEnumPtrOutput {
	return e.ToBridgeProtocolEnumPtrOutputWithContext(context.Background())
}

func (e BridgeProtocolEnum) ToBridgeProtocolEnumPtrOutputWithContext(ctx context.Context) BridgeProtocolEnumPtrOutput {
	return BridgeProtocolEnum(e).ToBridgeProtocolEnumOutputWithContext(ctx).ToBridgeProtocolEnumPtrOutputWithContext(ctx)
}

func (e BridgeProtocolEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BridgeProtocolEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BridgeProtocolEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BridgeProtocolEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BridgeProtocolEnumOutput struct{ *pulumi.OutputState }

func (BridgeProtocolEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BridgeProtocolEnum)(nil)).Elem()
}

func (o BridgeProtocolEnumOutput) ToBridgeProtocolEnumOutput() BridgeProtocolEnumOutput {
	return o
}

func (o BridgeProtocolEnumOutput) ToBridgeProtocolEnumOutputWithContext(ctx context.Context) BridgeProtocolEnumOutput {
	return o
}

func (o BridgeProtocolEnumOutput) ToBridgeProtocolEnumPtrOutput() BridgeProtocolEnumPtrOutput {
	return o.ToBridgeProtocolEnumPtrOutputWithContext(context.Background())
}

func (o BridgeProtocolEnumOutput) ToBridgeProtocolEnumPtrOutputWithContext(ctx context.Context) BridgeProtocolEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BridgeProtocolEnum) *BridgeProtocolEnum {
		return &v
	}).(BridgeProtocolEnumPtrOutput)
}

func (o BridgeProtocolEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BridgeProtocolEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BridgeProtocolEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BridgeProtocolEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BridgeProtocolEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BridgeProtocolEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BridgeProtocolEnumPtrOutput struct{ *pulumi.OutputState }

func (BridgeProtocolEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BridgeProtocolEnum)(nil)).Elem()
}

func (o BridgeProtocolEnumPtrOutput) ToBridgeProtocolEnumPtrOutput() BridgeProtocolEnumPtrOutput {
	return o
}

func (o BridgeProtocolEnumPtrOutput) ToBridgeProtocolEnumPtrOutputWithContext(ctx context.Context) BridgeProtocolEnumPtrOutput {
	return o
}

func (o BridgeProtocolEnumPtrOutput) Elem() BridgeProtocolEnumOutput {
	return o.ApplyT(func(v *BridgeProtocolEnum) BridgeProtocolEnum {
		if v != nil {
			return *v
		}
		var ret BridgeProtocolEnum
		return ret
	}).(BridgeProtocolEnumOutput)
}

func (o BridgeProtocolEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BridgeProtocolEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BridgeProtocolEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BridgeProtocolEnumInput is an input type that accepts values of the BridgeProtocolEnum enum
// A concrete instance of `BridgeProtocolEnumInput` can be one of the following:
//
//	BridgeProtocolEnumRtpFec
//	BridgeProtocolEnumRtp
//	BridgeProtocolEnumUdp
type BridgeProtocolEnumInput interface {
	pulumi.Input

	ToBridgeProtocolEnumOutput() BridgeProtocolEnumOutput
	ToBridgeProtocolEnumOutputWithContext(context.Context) BridgeProtocolEnumOutput
}

var bridgeProtocolEnumPtrType = reflect.TypeOf((**BridgeProtocolEnum)(nil)).Elem()

type BridgeProtocolEnumPtrInput interface {
	pulumi.Input

	ToBridgeProtocolEnumPtrOutput() BridgeProtocolEnumPtrOutput
	ToBridgeProtocolEnumPtrOutputWithContext(context.Context) BridgeProtocolEnumPtrOutput
}

type bridgeProtocolEnumPtr string

func BridgeProtocolEnumPtr(v string) BridgeProtocolEnumPtrInput {
	return (*bridgeProtocolEnumPtr)(&v)
}

func (*bridgeProtocolEnumPtr) ElementType() reflect.Type {
	return bridgeProtocolEnumPtrType
}

func (in *bridgeProtocolEnumPtr) ToBridgeProtocolEnumPtrOutput() BridgeProtocolEnumPtrOutput {
	return pulumi.ToOutput(in).(BridgeProtocolEnumPtrOutput)
}

func (in *bridgeProtocolEnumPtr) ToBridgeProtocolEnumPtrOutputWithContext(ctx context.Context) BridgeProtocolEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BridgeProtocolEnumPtrOutput)
}

type BridgeSourceProtocolEnum string

const (
	BridgeSourceProtocolEnumRtpFec = BridgeSourceProtocolEnum("rtp-fec")
	BridgeSourceProtocolEnumRtp    = BridgeSourceProtocolEnum("rtp")
	BridgeSourceProtocolEnumUdp    = BridgeSourceProtocolEnum("udp")
)

func (BridgeSourceProtocolEnum) ElementType() reflect.Type {
	return reflect.TypeOf((*BridgeSourceProtocolEnum)(nil)).Elem()
}

func (e BridgeSourceProtocolEnum) ToBridgeSourceProtocolEnumOutput() BridgeSourceProtocolEnumOutput {
	return pulumi.ToOutput(e).(BridgeSourceProtocolEnumOutput)
}

func (e BridgeSourceProtocolEnum) ToBridgeSourceProtocolEnumOutputWithContext(ctx context.Context) BridgeSourceProtocolEnumOutput {
	return pulumi.ToOutputWithContext(ctx, e).(BridgeSourceProtocolEnumOutput)
}

func (e BridgeSourceProtocolEnum) ToBridgeSourceProtocolEnumPtrOutput() BridgeSourceProtocolEnumPtrOutput {
	return e.ToBridgeSourceProtocolEnumPtrOutputWithContext(context.Background())
}

func (e BridgeSourceProtocolEnum) ToBridgeSourceProtocolEnumPtrOutputWithContext(ctx context.Context) BridgeSourceProtocolEnumPtrOutput {
	return BridgeSourceProtocolEnum(e).ToBridgeSourceProtocolEnumOutputWithContext(ctx).ToBridgeSourceProtocolEnumPtrOutputWithContext(ctx)
}

func (e BridgeSourceProtocolEnum) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e BridgeSourceProtocolEnum) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e BridgeSourceProtocolEnum) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e BridgeSourceProtocolEnum) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type BridgeSourceProtocolEnumOutput struct{ *pulumi.OutputState }

func (BridgeSourceProtocolEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BridgeSourceProtocolEnum)(nil)).Elem()
}

func (o BridgeSourceProtocolEnumOutput) ToBridgeSourceProtocolEnumOutput() BridgeSourceProtocolEnumOutput {
	return o
}

func (o BridgeSourceProtocolEnumOutput) ToBridgeSourceProtocolEnumOutputWithContext(ctx context.Context) BridgeSourceProtocolEnumOutput {
	return o
}

func (o BridgeSourceProtocolEnumOutput) ToBridgeSourceProtocolEnumPtrOutput() BridgeSourceProtocolEnumPtrOutput {
	return o.ToBridgeSourceProtocolEnumPtrOutputWithContext(context.Background())
}

func (o BridgeSourceProtocolEnumOutput) ToBridgeSourceProtocolEnumPtrOutputWithContext(ctx context.Context) BridgeSourceProtocolEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BridgeSourceProtocolEnum) *BridgeSourceProtocolEnum {
		return &v
	}).(BridgeSourceProtocolEnumPtrOutput)
}

func (o BridgeSourceProtocolEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BridgeSourceProtocolEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BridgeSourceProtocolEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BridgeSourceProtocolEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BridgeSourceProtocolEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BridgeSourceProtocolEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BridgeSourceProtocolEnumPtrOutput struct{ *pulumi.OutputState }

func (BridgeSourceProtocolEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BridgeSourceProtocolEnum)(nil)).Elem()
}

func (o BridgeSourceProtocolEnumPtrOutput) ToBridgeSourceProtocolEnumPtrOutput() BridgeSourceProtocolEnumPtrOutput {
	return o
}

func (o BridgeSourceProtocolEnumPtrOutput) ToBridgeSourceProtocolEnumPtrOutputWithContext(ctx context.Context) BridgeSourceProtocolEnumPtrOutput {
	return o
}

func (o BridgeSourceProtocolEnumPtrOutput) Elem() BridgeSourceProtocolEnumOutput {
	return o.ApplyT(func(v *BridgeSourceProtocolEnum) BridgeSourceProtocolEnum {
		if v != nil {
			return *v
		}
		var ret BridgeSourceProtocolEnum
		return ret
	}).(BridgeSourceProtocolEnumOutput)
}

func (o BridgeSourceProtocolEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BridgeSourceProtocolEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BridgeSourceProtocolEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// BridgeSourceProtocolEnumInput is an input type that accepts values of the BridgeSourceProtocolEnum enum
// A concrete instance of `BridgeSourceProtocolEnumInput` can be one of the following:
//
//	BridgeSourceProtocolEnumRtpFec
//	BridgeSourceProtocolEnumRtp
//	BridgeSourceProtocolEnumUdp
type BridgeSourceProtocolEnumInput interface {
	pulumi.Input

	ToBridgeSourceProtocolEnumOutput() BridgeSourceProtocolEnumOutput
	ToBridgeSourceProtocolEnumOutputWithContext(context.Context) BridgeSourceProtocolEnumOutput
}

var bridgeSourceProtocolEnumPtrType = reflect.TypeOf((**BridgeSourceProtocolEnum)(nil)).Elem()

type BridgeSourceProtocolEnumPtrInput interface {
	pulumi.Input

	ToBridgeSourceProtocolEnumPtrOutput() BridgeSourceProtocolEnumPtrOutput
	ToBridgeSourceProtocolEnumPtrOutputWithContext(context.Context) BridgeSourceProtocolEnumPtrOutput
}

type bridgeSourceProtocolEnumPtr string

func BridgeSourceProtocolEnumPtr(v string) BridgeSourceProtocolEnumPtrInput {
	return (*bridgeSourceProtocolEnumPtr)(&v)
}

func (*bridgeSourceProtocolEnumPtr) ElementType() reflect.Type {
	return bridgeSourceProtocolEnumPtrType
}

func (in *bridgeSourceProtocolEnumPtr) ToBridgeSourceProtocolEnumPtrOutput() BridgeSourceProtocolEnumPtrOutput {
	return pulumi.ToOutput(in).(BridgeSourceProtocolEnumPtrOutput)
}

func (in *bridgeSourceProtocolEnumPtr) ToBridgeSourceProtocolEnumPtrOutputWithContext(ctx context.Context) BridgeSourceProtocolEnumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(BridgeSourceProtocolEnumPtrOutput)
}

type BridgeStateEnum string

const (
	BridgeStateEnumCreating     = BridgeStateEnum("CREATING")
	BridgeStateEnumStandby      = BridgeStateEnum("STANDBY")
	BridgeStateEnumStarting     = BridgeStateEnum("STARTING")
	BridgeStateEnumDeploying    = BridgeStateEnum("DEPLOYING")
	BridgeStateEnumActive       = BridgeStateEnum("ACTIVE")
	BridgeStateEnumStopping     = BridgeStateEnum("STOPPING")
	BridgeStateEnumDeleting     = BridgeStateEnum("DELETING")
	BridgeStateEnumDeleted      = BridgeStateEnum("DELETED")
	BridgeStateEnumStartFailed  = BridgeStateEnum("START_FAILED")
	BridgeStateEnumStartPending = BridgeStateEnum("START_PENDING")
	BridgeStateEnumUpdating     = BridgeStateEnum("UPDATING")
)

type BridgeStateEnumOutput struct{ *pulumi.OutputState }

func (BridgeStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BridgeStateEnum)(nil)).Elem()
}

func (o BridgeStateEnumOutput) ToBridgeStateEnumOutput() BridgeStateEnumOutput {
	return o
}

func (o BridgeStateEnumOutput) ToBridgeStateEnumOutputWithContext(ctx context.Context) BridgeStateEnumOutput {
	return o
}

func (o BridgeStateEnumOutput) ToBridgeStateEnumPtrOutput() BridgeStateEnumPtrOutput {
	return o.ToBridgeStateEnumPtrOutputWithContext(context.Background())
}

func (o BridgeStateEnumOutput) ToBridgeStateEnumPtrOutputWithContext(ctx context.Context) BridgeStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BridgeStateEnum) *BridgeStateEnum {
		return &v
	}).(BridgeStateEnumPtrOutput)
}

func (o BridgeStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o BridgeStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BridgeStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o BridgeStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BridgeStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e BridgeStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type BridgeStateEnumPtrOutput struct{ *pulumi.OutputState }

func (BridgeStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BridgeStateEnum)(nil)).Elem()
}

func (o BridgeStateEnumPtrOutput) ToBridgeStateEnumPtrOutput() BridgeStateEnumPtrOutput {
	return o
}

func (o BridgeStateEnumPtrOutput) ToBridgeStateEnumPtrOutputWithContext(ctx context.Context) BridgeStateEnumPtrOutput {
	return o
}

func (o BridgeStateEnumPtrOutput) Elem() BridgeStateEnumOutput {
	return o.ApplyT(func(v *BridgeStateEnum) BridgeStateEnum {
		if v != nil {
			return *v
		}
		var ret BridgeStateEnum
		return ret
	}).(BridgeStateEnumOutput)
}

func (o BridgeStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o BridgeStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *BridgeStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
type FlowEncryptionAlgorithm string

const (
	FlowEncryptionAlgorithmAes128 = FlowEncryptionAlgorithm("aes128")
	FlowEncryptionAlgorithmAes192 = FlowEncryptionAlgorithm("aes192")
	FlowEncryptionAlgorithmAes256 = FlowEncryptionAlgorithm("aes256")
)

func (FlowEncryptionAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEncryptionAlgorithm)(nil)).Elem()
}

func (e FlowEncryptionAlgorithm) ToFlowEncryptionAlgorithmOutput() FlowEncryptionAlgorithmOutput {
	return pulumi.ToOutput(e).(FlowEncryptionAlgorithmOutput)
}

func (e FlowEncryptionAlgorithm) ToFlowEncryptionAlgorithmOutputWithContext(ctx context.Context) FlowEncryptionAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowEncryptionAlgorithmOutput)
}

func (e FlowEncryptionAlgorithm) ToFlowEncryptionAlgorithmPtrOutput() FlowEncryptionAlgorithmPtrOutput {
	return e.ToFlowEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (e FlowEncryptionAlgorithm) ToFlowEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowEncryptionAlgorithmPtrOutput {
	return FlowEncryptionAlgorithm(e).ToFlowEncryptionAlgorithmOutputWithContext(ctx).ToFlowEncryptionAlgorithmPtrOutputWithContext(ctx)
}

func (e FlowEncryptionAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowEncryptionAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowEncryptionAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowEncryptionAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowEncryptionAlgorithmOutput struct{ *pulumi.OutputState }

func (FlowEncryptionAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEncryptionAlgorithm)(nil)).Elem()
}

func (o FlowEncryptionAlgorithmOutput) ToFlowEncryptionAlgorithmOutput() FlowEncryptionAlgorithmOutput {
	return o
}

func (o FlowEncryptionAlgorithmOutput) ToFlowEncryptionAlgorithmOutputWithContext(ctx context.Context) FlowEncryptionAlgorithmOutput {
	return o
}

func (o FlowEncryptionAlgorithmOutput) ToFlowEncryptionAlgorithmPtrOutput() FlowEncryptionAlgorithmPtrOutput {
	return o.ToFlowEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (o FlowEncryptionAlgorithmOutput) ToFlowEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowEncryptionAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowEncryptionAlgorithm) *FlowEncryptionAlgorithm {
		return &v
	}).(FlowEncryptionAlgorithmPtrOutput)
}

func (o FlowEncryptionAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowEncryptionAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowEncryptionAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowEncryptionAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowEncryptionAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowEncryptionAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowEncryptionAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (FlowEncryptionAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowEncryptionAlgorithm)(nil)).Elem()
}

func (o FlowEncryptionAlgorithmPtrOutput) ToFlowEncryptionAlgorithmPtrOutput() FlowEncryptionAlgorithmPtrOutput {
	return o
}

func (o FlowEncryptionAlgorithmPtrOutput) ToFlowEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowEncryptionAlgorithmPtrOutput {
	return o
}

func (o FlowEncryptionAlgorithmPtrOutput) Elem() FlowEncryptionAlgorithmOutput {
	return o.ApplyT(func(v *FlowEncryptionAlgorithm) FlowEncryptionAlgorithm {
		if v != nil {
			return *v
		}
		var ret FlowEncryptionAlgorithm
		return ret
	}).(FlowEncryptionAlgorithmOutput)
}

func (o FlowEncryptionAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowEncryptionAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowEncryptionAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowEncryptionAlgorithmInput is an input type that accepts values of the FlowEncryptionAlgorithm enum
// A concrete instance of `FlowEncryptionAlgorithmInput` can be one of the following:
//
//	FlowEncryptionAlgorithmAes128
//	FlowEncryptionAlgorithmAes192
//	FlowEncryptionAlgorithmAes256
type FlowEncryptionAlgorithmInput interface {
	pulumi.Input

	ToFlowEncryptionAlgorithmOutput() FlowEncryptionAlgorithmOutput
	ToFlowEncryptionAlgorithmOutputWithContext(context.Context) FlowEncryptionAlgorithmOutput
}

var flowEncryptionAlgorithmPtrType = reflect.TypeOf((**FlowEncryptionAlgorithm)(nil)).Elem()

type FlowEncryptionAlgorithmPtrInput interface {
	pulumi.Input

	ToFlowEncryptionAlgorithmPtrOutput() FlowEncryptionAlgorithmPtrOutput
	ToFlowEncryptionAlgorithmPtrOutputWithContext(context.Context) FlowEncryptionAlgorithmPtrOutput
}

type flowEncryptionAlgorithmPtr string

func FlowEncryptionAlgorithmPtr(v string) FlowEncryptionAlgorithmPtrInput {
	return (*flowEncryptionAlgorithmPtr)(&v)
}

func (*flowEncryptionAlgorithmPtr) ElementType() reflect.Type {
	return flowEncryptionAlgorithmPtrType
}

func (in *flowEncryptionAlgorithmPtr) ToFlowEncryptionAlgorithmPtrOutput() FlowEncryptionAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(FlowEncryptionAlgorithmPtrOutput)
}

func (in *flowEncryptionAlgorithmPtr) ToFlowEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowEncryptionAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowEncryptionAlgorithmPtrOutput)
}

// The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
type FlowEncryptionKeyType string

const (
	FlowEncryptionKeyTypeSpeke       = FlowEncryptionKeyType("speke")
	FlowEncryptionKeyTypeStaticKey   = FlowEncryptionKeyType("static-key")
	FlowEncryptionKeyTypeSrtPassword = FlowEncryptionKeyType("srt-password")
)

func (FlowEncryptionKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEncryptionKeyType)(nil)).Elem()
}

func (e FlowEncryptionKeyType) ToFlowEncryptionKeyTypeOutput() FlowEncryptionKeyTypeOutput {
	return pulumi.ToOutput(e).(FlowEncryptionKeyTypeOutput)
}

func (e FlowEncryptionKeyType) ToFlowEncryptionKeyTypeOutputWithContext(ctx context.Context) FlowEncryptionKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowEncryptionKeyTypeOutput)
}

func (e FlowEncryptionKeyType) ToFlowEncryptionKeyTypePtrOutput() FlowEncryptionKeyTypePtrOutput {
	return e.ToFlowEncryptionKeyTypePtrOutputWithContext(context.Background())
}

func (e FlowEncryptionKeyType) ToFlowEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowEncryptionKeyTypePtrOutput {
	return FlowEncryptionKeyType(e).ToFlowEncryptionKeyTypeOutputWithContext(ctx).ToFlowEncryptionKeyTypePtrOutputWithContext(ctx)
}

func (e FlowEncryptionKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowEncryptionKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowEncryptionKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowEncryptionKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowEncryptionKeyTypeOutput struct{ *pulumi.OutputState }

func (FlowEncryptionKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEncryptionKeyType)(nil)).Elem()
}

func (o FlowEncryptionKeyTypeOutput) ToFlowEncryptionKeyTypeOutput() FlowEncryptionKeyTypeOutput {
	return o
}

func (o FlowEncryptionKeyTypeOutput) ToFlowEncryptionKeyTypeOutputWithContext(ctx context.Context) FlowEncryptionKeyTypeOutput {
	return o
}

func (o FlowEncryptionKeyTypeOutput) ToFlowEncryptionKeyTypePtrOutput() FlowEncryptionKeyTypePtrOutput {
	return o.ToFlowEncryptionKeyTypePtrOutputWithContext(context.Background())
}

func (o FlowEncryptionKeyTypeOutput) ToFlowEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowEncryptionKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowEncryptionKeyType) *FlowEncryptionKeyType {
		return &v
	}).(FlowEncryptionKeyTypePtrOutput)
}

func (o FlowEncryptionKeyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowEncryptionKeyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowEncryptionKeyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowEncryptionKeyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowEncryptionKeyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowEncryptionKeyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowEncryptionKeyTypePtrOutput struct{ *pulumi.OutputState }

func (FlowEncryptionKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowEncryptionKeyType)(nil)).Elem()
}

func (o FlowEncryptionKeyTypePtrOutput) ToFlowEncryptionKeyTypePtrOutput() FlowEncryptionKeyTypePtrOutput {
	return o
}

func (o FlowEncryptionKeyTypePtrOutput) ToFlowEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowEncryptionKeyTypePtrOutput {
	return o
}

func (o FlowEncryptionKeyTypePtrOutput) Elem() FlowEncryptionKeyTypeOutput {
	return o.ApplyT(func(v *FlowEncryptionKeyType) FlowEncryptionKeyType {
		if v != nil {
			return *v
		}
		var ret FlowEncryptionKeyType
		return ret
	}).(FlowEncryptionKeyTypeOutput)
}

func (o FlowEncryptionKeyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowEncryptionKeyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowEncryptionKeyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowEncryptionKeyTypeInput is an input type that accepts values of the FlowEncryptionKeyType enum
// A concrete instance of `FlowEncryptionKeyTypeInput` can be one of the following:
//
//	FlowEncryptionKeyTypeSpeke
//	FlowEncryptionKeyTypeStaticKey
//	FlowEncryptionKeyTypeSrtPassword
type FlowEncryptionKeyTypeInput interface {
	pulumi.Input

	ToFlowEncryptionKeyTypeOutput() FlowEncryptionKeyTypeOutput
	ToFlowEncryptionKeyTypeOutputWithContext(context.Context) FlowEncryptionKeyTypeOutput
}

var flowEncryptionKeyTypePtrType = reflect.TypeOf((**FlowEncryptionKeyType)(nil)).Elem()

type FlowEncryptionKeyTypePtrInput interface {
	pulumi.Input

	ToFlowEncryptionKeyTypePtrOutput() FlowEncryptionKeyTypePtrOutput
	ToFlowEncryptionKeyTypePtrOutputWithContext(context.Context) FlowEncryptionKeyTypePtrOutput
}

type flowEncryptionKeyTypePtr string

func FlowEncryptionKeyTypePtr(v string) FlowEncryptionKeyTypePtrInput {
	return (*flowEncryptionKeyTypePtr)(&v)
}

func (*flowEncryptionKeyTypePtr) ElementType() reflect.Type {
	return flowEncryptionKeyTypePtrType
}

func (in *flowEncryptionKeyTypePtr) ToFlowEncryptionKeyTypePtrOutput() FlowEncryptionKeyTypePtrOutput {
	return pulumi.ToOutput(in).(FlowEncryptionKeyTypePtrOutput)
}

func (in *flowEncryptionKeyTypePtr) ToFlowEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowEncryptionKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowEncryptionKeyTypePtrOutput)
}

// The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
type FlowEntitlementEncryptionAlgorithm string

const (
	FlowEntitlementEncryptionAlgorithmAes128 = FlowEntitlementEncryptionAlgorithm("aes128")
	FlowEntitlementEncryptionAlgorithmAes192 = FlowEntitlementEncryptionAlgorithm("aes192")
	FlowEntitlementEncryptionAlgorithmAes256 = FlowEntitlementEncryptionAlgorithm("aes256")
)

func (FlowEntitlementEncryptionAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEntitlementEncryptionAlgorithm)(nil)).Elem()
}

func (e FlowEntitlementEncryptionAlgorithm) ToFlowEntitlementEncryptionAlgorithmOutput() FlowEntitlementEncryptionAlgorithmOutput {
	return pulumi.ToOutput(e).(FlowEntitlementEncryptionAlgorithmOutput)
}

func (e FlowEntitlementEncryptionAlgorithm) ToFlowEntitlementEncryptionAlgorithmOutputWithContext(ctx context.Context) FlowEntitlementEncryptionAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowEntitlementEncryptionAlgorithmOutput)
}

func (e FlowEntitlementEncryptionAlgorithm) ToFlowEntitlementEncryptionAlgorithmPtrOutput() FlowEntitlementEncryptionAlgorithmPtrOutput {
	return e.ToFlowEntitlementEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (e FlowEntitlementEncryptionAlgorithm) ToFlowEntitlementEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowEntitlementEncryptionAlgorithmPtrOutput {
	return FlowEntitlementEncryptionAlgorithm(e).ToFlowEntitlementEncryptionAlgorithmOutputWithContext(ctx).ToFlowEntitlementEncryptionAlgorithmPtrOutputWithContext(ctx)
}

func (e FlowEntitlementEncryptionAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowEntitlementEncryptionAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowEntitlementEncryptionAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowEntitlementEncryptionAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowEntitlementEncryptionAlgorithmOutput struct{ *pulumi.OutputState }

func (FlowEntitlementEncryptionAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEntitlementEncryptionAlgorithm)(nil)).Elem()
}

func (o FlowEntitlementEncryptionAlgorithmOutput) ToFlowEntitlementEncryptionAlgorithmOutput() FlowEntitlementEncryptionAlgorithmOutput {
	return o
}

func (o FlowEntitlementEncryptionAlgorithmOutput) ToFlowEntitlementEncryptionAlgorithmOutputWithContext(ctx context.Context) FlowEntitlementEncryptionAlgorithmOutput {
	return o
}

func (o FlowEntitlementEncryptionAlgorithmOutput) ToFlowEntitlementEncryptionAlgorithmPtrOutput() FlowEntitlementEncryptionAlgorithmPtrOutput {
	return o.ToFlowEntitlementEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (o FlowEntitlementEncryptionAlgorithmOutput) ToFlowEntitlementEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowEntitlementEncryptionAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowEntitlementEncryptionAlgorithm) *FlowEntitlementEncryptionAlgorithm {
		return &v
	}).(FlowEntitlementEncryptionAlgorithmPtrOutput)
}

func (o FlowEntitlementEncryptionAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowEntitlementEncryptionAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowEntitlementEncryptionAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowEntitlementEncryptionAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowEntitlementEncryptionAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowEntitlementEncryptionAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowEntitlementEncryptionAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (FlowEntitlementEncryptionAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowEntitlementEncryptionAlgorithm)(nil)).Elem()
}

func (o FlowEntitlementEncryptionAlgorithmPtrOutput) ToFlowEntitlementEncryptionAlgorithmPtrOutput() FlowEntitlementEncryptionAlgorithmPtrOutput {
	return o
}

func (o FlowEntitlementEncryptionAlgorithmPtrOutput) ToFlowEntitlementEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowEntitlementEncryptionAlgorithmPtrOutput {
	return o
}

func (o FlowEntitlementEncryptionAlgorithmPtrOutput) Elem() FlowEntitlementEncryptionAlgorithmOutput {
	return o.ApplyT(func(v *FlowEntitlementEncryptionAlgorithm) FlowEntitlementEncryptionAlgorithm {
		if v != nil {
			return *v
		}
		var ret FlowEntitlementEncryptionAlgorithm
		return ret
	}).(FlowEntitlementEncryptionAlgorithmOutput)
}

func (o FlowEntitlementEncryptionAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowEntitlementEncryptionAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowEntitlementEncryptionAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowEntitlementEncryptionAlgorithmInput is an input type that accepts values of the FlowEntitlementEncryptionAlgorithm enum
// A concrete instance of `FlowEntitlementEncryptionAlgorithmInput` can be one of the following:
//
//	FlowEntitlementEncryptionAlgorithmAes128
//	FlowEntitlementEncryptionAlgorithmAes192
//	FlowEntitlementEncryptionAlgorithmAes256
type FlowEntitlementEncryptionAlgorithmInput interface {
	pulumi.Input

	ToFlowEntitlementEncryptionAlgorithmOutput() FlowEntitlementEncryptionAlgorithmOutput
	ToFlowEntitlementEncryptionAlgorithmOutputWithContext(context.Context) FlowEntitlementEncryptionAlgorithmOutput
}

var flowEntitlementEncryptionAlgorithmPtrType = reflect.TypeOf((**FlowEntitlementEncryptionAlgorithm)(nil)).Elem()

type FlowEntitlementEncryptionAlgorithmPtrInput interface {
	pulumi.Input

	ToFlowEntitlementEncryptionAlgorithmPtrOutput() FlowEntitlementEncryptionAlgorithmPtrOutput
	ToFlowEntitlementEncryptionAlgorithmPtrOutputWithContext(context.Context) FlowEntitlementEncryptionAlgorithmPtrOutput
}

type flowEntitlementEncryptionAlgorithmPtr string

func FlowEntitlementEncryptionAlgorithmPtr(v string) FlowEntitlementEncryptionAlgorithmPtrInput {
	return (*flowEntitlementEncryptionAlgorithmPtr)(&v)
}

func (*flowEntitlementEncryptionAlgorithmPtr) ElementType() reflect.Type {
	return flowEntitlementEncryptionAlgorithmPtrType
}

func (in *flowEntitlementEncryptionAlgorithmPtr) ToFlowEntitlementEncryptionAlgorithmPtrOutput() FlowEntitlementEncryptionAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(FlowEntitlementEncryptionAlgorithmPtrOutput)
}

func (in *flowEntitlementEncryptionAlgorithmPtr) ToFlowEntitlementEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowEntitlementEncryptionAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowEntitlementEncryptionAlgorithmPtrOutput)
}

// The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
type FlowEntitlementEncryptionKeyType string

const (
	FlowEntitlementEncryptionKeyTypeSpeke     = FlowEntitlementEncryptionKeyType("speke")
	FlowEntitlementEncryptionKeyTypeStaticKey = FlowEntitlementEncryptionKeyType("static-key")
)

func (FlowEntitlementEncryptionKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEntitlementEncryptionKeyType)(nil)).Elem()
}

func (e FlowEntitlementEncryptionKeyType) ToFlowEntitlementEncryptionKeyTypeOutput() FlowEntitlementEncryptionKeyTypeOutput {
	return pulumi.ToOutput(e).(FlowEntitlementEncryptionKeyTypeOutput)
}

func (e FlowEntitlementEncryptionKeyType) ToFlowEntitlementEncryptionKeyTypeOutputWithContext(ctx context.Context) FlowEntitlementEncryptionKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowEntitlementEncryptionKeyTypeOutput)
}

func (e FlowEntitlementEncryptionKeyType) ToFlowEntitlementEncryptionKeyTypePtrOutput() FlowEntitlementEncryptionKeyTypePtrOutput {
	return e.ToFlowEntitlementEncryptionKeyTypePtrOutputWithContext(context.Background())
}

func (e FlowEntitlementEncryptionKeyType) ToFlowEntitlementEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowEntitlementEncryptionKeyTypePtrOutput {
	return FlowEntitlementEncryptionKeyType(e).ToFlowEntitlementEncryptionKeyTypeOutputWithContext(ctx).ToFlowEntitlementEncryptionKeyTypePtrOutputWithContext(ctx)
}

func (e FlowEntitlementEncryptionKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowEntitlementEncryptionKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowEntitlementEncryptionKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowEntitlementEncryptionKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowEntitlementEncryptionKeyTypeOutput struct{ *pulumi.OutputState }

func (FlowEntitlementEncryptionKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEntitlementEncryptionKeyType)(nil)).Elem()
}

func (o FlowEntitlementEncryptionKeyTypeOutput) ToFlowEntitlementEncryptionKeyTypeOutput() FlowEntitlementEncryptionKeyTypeOutput {
	return o
}

func (o FlowEntitlementEncryptionKeyTypeOutput) ToFlowEntitlementEncryptionKeyTypeOutputWithContext(ctx context.Context) FlowEntitlementEncryptionKeyTypeOutput {
	return o
}

func (o FlowEntitlementEncryptionKeyTypeOutput) ToFlowEntitlementEncryptionKeyTypePtrOutput() FlowEntitlementEncryptionKeyTypePtrOutput {
	return o.ToFlowEntitlementEncryptionKeyTypePtrOutputWithContext(context.Background())
}

func (o FlowEntitlementEncryptionKeyTypeOutput) ToFlowEntitlementEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowEntitlementEncryptionKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowEntitlementEncryptionKeyType) *FlowEntitlementEncryptionKeyType {
		return &v
	}).(FlowEntitlementEncryptionKeyTypePtrOutput)
}

func (o FlowEntitlementEncryptionKeyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowEntitlementEncryptionKeyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowEntitlementEncryptionKeyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowEntitlementEncryptionKeyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowEntitlementEncryptionKeyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowEntitlementEncryptionKeyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowEntitlementEncryptionKeyTypePtrOutput struct{ *pulumi.OutputState }

func (FlowEntitlementEncryptionKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowEntitlementEncryptionKeyType)(nil)).Elem()
}

func (o FlowEntitlementEncryptionKeyTypePtrOutput) ToFlowEntitlementEncryptionKeyTypePtrOutput() FlowEntitlementEncryptionKeyTypePtrOutput {
	return o
}

func (o FlowEntitlementEncryptionKeyTypePtrOutput) ToFlowEntitlementEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowEntitlementEncryptionKeyTypePtrOutput {
	return o
}

func (o FlowEntitlementEncryptionKeyTypePtrOutput) Elem() FlowEntitlementEncryptionKeyTypeOutput {
	return o.ApplyT(func(v *FlowEntitlementEncryptionKeyType) FlowEntitlementEncryptionKeyType {
		if v != nil {
			return *v
		}
		var ret FlowEntitlementEncryptionKeyType
		return ret
	}).(FlowEntitlementEncryptionKeyTypeOutput)
}

func (o FlowEntitlementEncryptionKeyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowEntitlementEncryptionKeyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowEntitlementEncryptionKeyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowEntitlementEncryptionKeyTypeInput is an input type that accepts values of the FlowEntitlementEncryptionKeyType enum
// A concrete instance of `FlowEntitlementEncryptionKeyTypeInput` can be one of the following:
//
//	FlowEntitlementEncryptionKeyTypeSpeke
//	FlowEntitlementEncryptionKeyTypeStaticKey
type FlowEntitlementEncryptionKeyTypeInput interface {
	pulumi.Input

	ToFlowEntitlementEncryptionKeyTypeOutput() FlowEntitlementEncryptionKeyTypeOutput
	ToFlowEntitlementEncryptionKeyTypeOutputWithContext(context.Context) FlowEntitlementEncryptionKeyTypeOutput
}

var flowEntitlementEncryptionKeyTypePtrType = reflect.TypeOf((**FlowEntitlementEncryptionKeyType)(nil)).Elem()

type FlowEntitlementEncryptionKeyTypePtrInput interface {
	pulumi.Input

	ToFlowEntitlementEncryptionKeyTypePtrOutput() FlowEntitlementEncryptionKeyTypePtrOutput
	ToFlowEntitlementEncryptionKeyTypePtrOutputWithContext(context.Context) FlowEntitlementEncryptionKeyTypePtrOutput
}

type flowEntitlementEncryptionKeyTypePtr string

func FlowEntitlementEncryptionKeyTypePtr(v string) FlowEntitlementEncryptionKeyTypePtrInput {
	return (*flowEntitlementEncryptionKeyTypePtr)(&v)
}

func (*flowEntitlementEncryptionKeyTypePtr) ElementType() reflect.Type {
	return flowEntitlementEncryptionKeyTypePtrType
}

func (in *flowEntitlementEncryptionKeyTypePtr) ToFlowEntitlementEncryptionKeyTypePtrOutput() FlowEntitlementEncryptionKeyTypePtrOutput {
	return pulumi.ToOutput(in).(FlowEntitlementEncryptionKeyTypePtrOutput)
}

func (in *flowEntitlementEncryptionKeyTypePtr) ToFlowEntitlementEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowEntitlementEncryptionKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowEntitlementEncryptionKeyTypePtrOutput)
}

// An indication of whether the entitlement is enabled.
type FlowEntitlementEntitlementStatus string

const (
	FlowEntitlementEntitlementStatusEnabled  = FlowEntitlementEntitlementStatus("ENABLED")
	FlowEntitlementEntitlementStatusDisabled = FlowEntitlementEntitlementStatus("DISABLED")
)

func (FlowEntitlementEntitlementStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEntitlementEntitlementStatus)(nil)).Elem()
}

func (e FlowEntitlementEntitlementStatus) ToFlowEntitlementEntitlementStatusOutput() FlowEntitlementEntitlementStatusOutput {
	return pulumi.ToOutput(e).(FlowEntitlementEntitlementStatusOutput)
}

func (e FlowEntitlementEntitlementStatus) ToFlowEntitlementEntitlementStatusOutputWithContext(ctx context.Context) FlowEntitlementEntitlementStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowEntitlementEntitlementStatusOutput)
}

func (e FlowEntitlementEntitlementStatus) ToFlowEntitlementEntitlementStatusPtrOutput() FlowEntitlementEntitlementStatusPtrOutput {
	return e.ToFlowEntitlementEntitlementStatusPtrOutputWithContext(context.Background())
}

func (e FlowEntitlementEntitlementStatus) ToFlowEntitlementEntitlementStatusPtrOutputWithContext(ctx context.Context) FlowEntitlementEntitlementStatusPtrOutput {
	return FlowEntitlementEntitlementStatus(e).ToFlowEntitlementEntitlementStatusOutputWithContext(ctx).ToFlowEntitlementEntitlementStatusPtrOutputWithContext(ctx)
}

func (e FlowEntitlementEntitlementStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowEntitlementEntitlementStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowEntitlementEntitlementStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowEntitlementEntitlementStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowEntitlementEntitlementStatusOutput struct{ *pulumi.OutputState }

func (FlowEntitlementEntitlementStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowEntitlementEntitlementStatus)(nil)).Elem()
}

func (o FlowEntitlementEntitlementStatusOutput) ToFlowEntitlementEntitlementStatusOutput() FlowEntitlementEntitlementStatusOutput {
	return o
}

func (o FlowEntitlementEntitlementStatusOutput) ToFlowEntitlementEntitlementStatusOutputWithContext(ctx context.Context) FlowEntitlementEntitlementStatusOutput {
	return o
}

func (o FlowEntitlementEntitlementStatusOutput) ToFlowEntitlementEntitlementStatusPtrOutput() FlowEntitlementEntitlementStatusPtrOutput {
	return o.ToFlowEntitlementEntitlementStatusPtrOutputWithContext(context.Background())
}

func (o FlowEntitlementEntitlementStatusOutput) ToFlowEntitlementEntitlementStatusPtrOutputWithContext(ctx context.Context) FlowEntitlementEntitlementStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowEntitlementEntitlementStatus) *FlowEntitlementEntitlementStatus {
		return &v
	}).(FlowEntitlementEntitlementStatusPtrOutput)
}

func (o FlowEntitlementEntitlementStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowEntitlementEntitlementStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowEntitlementEntitlementStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowEntitlementEntitlementStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowEntitlementEntitlementStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowEntitlementEntitlementStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowEntitlementEntitlementStatusPtrOutput struct{ *pulumi.OutputState }

func (FlowEntitlementEntitlementStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowEntitlementEntitlementStatus)(nil)).Elem()
}

func (o FlowEntitlementEntitlementStatusPtrOutput) ToFlowEntitlementEntitlementStatusPtrOutput() FlowEntitlementEntitlementStatusPtrOutput {
	return o
}

func (o FlowEntitlementEntitlementStatusPtrOutput) ToFlowEntitlementEntitlementStatusPtrOutputWithContext(ctx context.Context) FlowEntitlementEntitlementStatusPtrOutput {
	return o
}

func (o FlowEntitlementEntitlementStatusPtrOutput) Elem() FlowEntitlementEntitlementStatusOutput {
	return o.ApplyT(func(v *FlowEntitlementEntitlementStatus) FlowEntitlementEntitlementStatus {
		if v != nil {
			return *v
		}
		var ret FlowEntitlementEntitlementStatus
		return ret
	}).(FlowEntitlementEntitlementStatusOutput)
}

func (o FlowEntitlementEntitlementStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowEntitlementEntitlementStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowEntitlementEntitlementStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowEntitlementEntitlementStatusInput is an input type that accepts values of the FlowEntitlementEntitlementStatus enum
// A concrete instance of `FlowEntitlementEntitlementStatusInput` can be one of the following:
//
//	FlowEntitlementEntitlementStatusEnabled
//	FlowEntitlementEntitlementStatusDisabled
type FlowEntitlementEntitlementStatusInput interface {
	pulumi.Input

	ToFlowEntitlementEntitlementStatusOutput() FlowEntitlementEntitlementStatusOutput
	ToFlowEntitlementEntitlementStatusOutputWithContext(context.Context) FlowEntitlementEntitlementStatusOutput
}

var flowEntitlementEntitlementStatusPtrType = reflect.TypeOf((**FlowEntitlementEntitlementStatus)(nil)).Elem()

type FlowEntitlementEntitlementStatusPtrInput interface {
	pulumi.Input

	ToFlowEntitlementEntitlementStatusPtrOutput() FlowEntitlementEntitlementStatusPtrOutput
	ToFlowEntitlementEntitlementStatusPtrOutputWithContext(context.Context) FlowEntitlementEntitlementStatusPtrOutput
}

type flowEntitlementEntitlementStatusPtr string

func FlowEntitlementEntitlementStatusPtr(v string) FlowEntitlementEntitlementStatusPtrInput {
	return (*flowEntitlementEntitlementStatusPtr)(&v)
}

func (*flowEntitlementEntitlementStatusPtr) ElementType() reflect.Type {
	return flowEntitlementEntitlementStatusPtrType
}

func (in *flowEntitlementEntitlementStatusPtr) ToFlowEntitlementEntitlementStatusPtrOutput() FlowEntitlementEntitlementStatusPtrOutput {
	return pulumi.ToOutput(in).(FlowEntitlementEntitlementStatusPtrOutput)
}

func (in *flowEntitlementEntitlementStatusPtr) ToFlowEntitlementEntitlementStatusPtrOutputWithContext(ctx context.Context) FlowEntitlementEntitlementStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowEntitlementEntitlementStatusPtrOutput)
}

// The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.
type FlowFailoverConfigFailoverMode string

const (
	FlowFailoverConfigFailoverModeMerge    = FlowFailoverConfigFailoverMode("MERGE")
	FlowFailoverConfigFailoverModeFailover = FlowFailoverConfigFailoverMode("FAILOVER")
)

func (FlowFailoverConfigFailoverMode) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowFailoverConfigFailoverMode)(nil)).Elem()
}

func (e FlowFailoverConfigFailoverMode) ToFlowFailoverConfigFailoverModeOutput() FlowFailoverConfigFailoverModeOutput {
	return pulumi.ToOutput(e).(FlowFailoverConfigFailoverModeOutput)
}

func (e FlowFailoverConfigFailoverMode) ToFlowFailoverConfigFailoverModeOutputWithContext(ctx context.Context) FlowFailoverConfigFailoverModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowFailoverConfigFailoverModeOutput)
}

func (e FlowFailoverConfigFailoverMode) ToFlowFailoverConfigFailoverModePtrOutput() FlowFailoverConfigFailoverModePtrOutput {
	return e.ToFlowFailoverConfigFailoverModePtrOutputWithContext(context.Background())
}

func (e FlowFailoverConfigFailoverMode) ToFlowFailoverConfigFailoverModePtrOutputWithContext(ctx context.Context) FlowFailoverConfigFailoverModePtrOutput {
	return FlowFailoverConfigFailoverMode(e).ToFlowFailoverConfigFailoverModeOutputWithContext(ctx).ToFlowFailoverConfigFailoverModePtrOutputWithContext(ctx)
}

func (e FlowFailoverConfigFailoverMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowFailoverConfigFailoverMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowFailoverConfigFailoverMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowFailoverConfigFailoverMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowFailoverConfigFailoverModeOutput struct{ *pulumi.OutputState }

func (FlowFailoverConfigFailoverModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowFailoverConfigFailoverMode)(nil)).Elem()
}

func (o FlowFailoverConfigFailoverModeOutput) ToFlowFailoverConfigFailoverModeOutput() FlowFailoverConfigFailoverModeOutput {
	return o
}

func (o FlowFailoverConfigFailoverModeOutput) ToFlowFailoverConfigFailoverModeOutputWithContext(ctx context.Context) FlowFailoverConfigFailoverModeOutput {
	return o
}

func (o FlowFailoverConfigFailoverModeOutput) ToFlowFailoverConfigFailoverModePtrOutput() FlowFailoverConfigFailoverModePtrOutput {
	return o.ToFlowFailoverConfigFailoverModePtrOutputWithContext(context.Background())
}

func (o FlowFailoverConfigFailoverModeOutput) ToFlowFailoverConfigFailoverModePtrOutputWithContext(ctx context.Context) FlowFailoverConfigFailoverModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowFailoverConfigFailoverMode) *FlowFailoverConfigFailoverMode {
		return &v
	}).(FlowFailoverConfigFailoverModePtrOutput)
}

func (o FlowFailoverConfigFailoverModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowFailoverConfigFailoverModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowFailoverConfigFailoverMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowFailoverConfigFailoverModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowFailoverConfigFailoverModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowFailoverConfigFailoverMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowFailoverConfigFailoverModePtrOutput struct{ *pulumi.OutputState }

func (FlowFailoverConfigFailoverModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowFailoverConfigFailoverMode)(nil)).Elem()
}

func (o FlowFailoverConfigFailoverModePtrOutput) ToFlowFailoverConfigFailoverModePtrOutput() FlowFailoverConfigFailoverModePtrOutput {
	return o
}

func (o FlowFailoverConfigFailoverModePtrOutput) ToFlowFailoverConfigFailoverModePtrOutputWithContext(ctx context.Context) FlowFailoverConfigFailoverModePtrOutput {
	return o
}

func (o FlowFailoverConfigFailoverModePtrOutput) Elem() FlowFailoverConfigFailoverModeOutput {
	return o.ApplyT(func(v *FlowFailoverConfigFailoverMode) FlowFailoverConfigFailoverMode {
		if v != nil {
			return *v
		}
		var ret FlowFailoverConfigFailoverMode
		return ret
	}).(FlowFailoverConfigFailoverModeOutput)
}

func (o FlowFailoverConfigFailoverModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowFailoverConfigFailoverModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowFailoverConfigFailoverMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowFailoverConfigFailoverModeInput is an input type that accepts values of the FlowFailoverConfigFailoverMode enum
// A concrete instance of `FlowFailoverConfigFailoverModeInput` can be one of the following:
//
//	FlowFailoverConfigFailoverModeMerge
//	FlowFailoverConfigFailoverModeFailover
type FlowFailoverConfigFailoverModeInput interface {
	pulumi.Input

	ToFlowFailoverConfigFailoverModeOutput() FlowFailoverConfigFailoverModeOutput
	ToFlowFailoverConfigFailoverModeOutputWithContext(context.Context) FlowFailoverConfigFailoverModeOutput
}

var flowFailoverConfigFailoverModePtrType = reflect.TypeOf((**FlowFailoverConfigFailoverMode)(nil)).Elem()

type FlowFailoverConfigFailoverModePtrInput interface {
	pulumi.Input

	ToFlowFailoverConfigFailoverModePtrOutput() FlowFailoverConfigFailoverModePtrOutput
	ToFlowFailoverConfigFailoverModePtrOutputWithContext(context.Context) FlowFailoverConfigFailoverModePtrOutput
}

type flowFailoverConfigFailoverModePtr string

func FlowFailoverConfigFailoverModePtr(v string) FlowFailoverConfigFailoverModePtrInput {
	return (*flowFailoverConfigFailoverModePtr)(&v)
}

func (*flowFailoverConfigFailoverModePtr) ElementType() reflect.Type {
	return flowFailoverConfigFailoverModePtrType
}

func (in *flowFailoverConfigFailoverModePtr) ToFlowFailoverConfigFailoverModePtrOutput() FlowFailoverConfigFailoverModePtrOutput {
	return pulumi.ToOutput(in).(FlowFailoverConfigFailoverModePtrOutput)
}

func (in *flowFailoverConfigFailoverModePtr) ToFlowFailoverConfigFailoverModePtrOutputWithContext(ctx context.Context) FlowFailoverConfigFailoverModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowFailoverConfigFailoverModePtrOutput)
}

type FlowFailoverConfigState string

const (
	FlowFailoverConfigStateEnabled  = FlowFailoverConfigState("ENABLED")
	FlowFailoverConfigStateDisabled = FlowFailoverConfigState("DISABLED")
)

func (FlowFailoverConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowFailoverConfigState)(nil)).Elem()
}

func (e FlowFailoverConfigState) ToFlowFailoverConfigStateOutput() FlowFailoverConfigStateOutput {
	return pulumi.ToOutput(e).(FlowFailoverConfigStateOutput)
}

func (e FlowFailoverConfigState) ToFlowFailoverConfigStateOutputWithContext(ctx context.Context) FlowFailoverConfigStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowFailoverConfigStateOutput)
}

func (e FlowFailoverConfigState) ToFlowFailoverConfigStatePtrOutput() FlowFailoverConfigStatePtrOutput {
	return e.ToFlowFailoverConfigStatePtrOutputWithContext(context.Background())
}

func (e FlowFailoverConfigState) ToFlowFailoverConfigStatePtrOutputWithContext(ctx context.Context) FlowFailoverConfigStatePtrOutput {
	return FlowFailoverConfigState(e).ToFlowFailoverConfigStateOutputWithContext(ctx).ToFlowFailoverConfigStatePtrOutputWithContext(ctx)
}

func (e FlowFailoverConfigState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowFailoverConfigState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowFailoverConfigState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowFailoverConfigState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowFailoverConfigStateOutput struct{ *pulumi.OutputState }

func (FlowFailoverConfigStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowFailoverConfigState)(nil)).Elem()
}

func (o FlowFailoverConfigStateOutput) ToFlowFailoverConfigStateOutput() FlowFailoverConfigStateOutput {
	return o
}

func (o FlowFailoverConfigStateOutput) ToFlowFailoverConfigStateOutputWithContext(ctx context.Context) FlowFailoverConfigStateOutput {
	return o
}

func (o FlowFailoverConfigStateOutput) ToFlowFailoverConfigStatePtrOutput() FlowFailoverConfigStatePtrOutput {
	return o.ToFlowFailoverConfigStatePtrOutputWithContext(context.Background())
}

func (o FlowFailoverConfigStateOutput) ToFlowFailoverConfigStatePtrOutputWithContext(ctx context.Context) FlowFailoverConfigStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowFailoverConfigState) *FlowFailoverConfigState {
		return &v
	}).(FlowFailoverConfigStatePtrOutput)
}

func (o FlowFailoverConfigStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowFailoverConfigStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowFailoverConfigState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowFailoverConfigStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowFailoverConfigStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowFailoverConfigState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowFailoverConfigStatePtrOutput struct{ *pulumi.OutputState }

func (FlowFailoverConfigStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowFailoverConfigState)(nil)).Elem()
}

func (o FlowFailoverConfigStatePtrOutput) ToFlowFailoverConfigStatePtrOutput() FlowFailoverConfigStatePtrOutput {
	return o
}

func (o FlowFailoverConfigStatePtrOutput) ToFlowFailoverConfigStatePtrOutputWithContext(ctx context.Context) FlowFailoverConfigStatePtrOutput {
	return o
}

func (o FlowFailoverConfigStatePtrOutput) Elem() FlowFailoverConfigStateOutput {
	return o.ApplyT(func(v *FlowFailoverConfigState) FlowFailoverConfigState {
		if v != nil {
			return *v
		}
		var ret FlowFailoverConfigState
		return ret
	}).(FlowFailoverConfigStateOutput)
}

func (o FlowFailoverConfigStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowFailoverConfigStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowFailoverConfigState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowFailoverConfigStateInput is an input type that accepts values of the FlowFailoverConfigState enum
// A concrete instance of `FlowFailoverConfigStateInput` can be one of the following:
//
//	FlowFailoverConfigStateEnabled
//	FlowFailoverConfigStateDisabled
type FlowFailoverConfigStateInput interface {
	pulumi.Input

	ToFlowFailoverConfigStateOutput() FlowFailoverConfigStateOutput
	ToFlowFailoverConfigStateOutputWithContext(context.Context) FlowFailoverConfigStateOutput
}

var flowFailoverConfigStatePtrType = reflect.TypeOf((**FlowFailoverConfigState)(nil)).Elem()

type FlowFailoverConfigStatePtrInput interface {
	pulumi.Input

	ToFlowFailoverConfigStatePtrOutput() FlowFailoverConfigStatePtrOutput
	ToFlowFailoverConfigStatePtrOutputWithContext(context.Context) FlowFailoverConfigStatePtrOutput
}

type flowFailoverConfigStatePtr string

func FlowFailoverConfigStatePtr(v string) FlowFailoverConfigStatePtrInput {
	return (*flowFailoverConfigStatePtr)(&v)
}

func (*flowFailoverConfigStatePtr) ElementType() reflect.Type {
	return flowFailoverConfigStatePtrType
}

func (in *flowFailoverConfigStatePtr) ToFlowFailoverConfigStatePtrOutput() FlowFailoverConfigStatePtrOutput {
	return pulumi.ToOutput(in).(FlowFailoverConfigStatePtrOutput)
}

func (in *flowFailoverConfigStatePtr) ToFlowFailoverConfigStatePtrOutputWithContext(ctx context.Context) FlowFailoverConfigStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowFailoverConfigStatePtrOutput)
}

// The format used for the representation of color.
type FlowFmtpColorimetry string

const (
	FlowFmtpColorimetryBt601   = FlowFmtpColorimetry("BT601")
	FlowFmtpColorimetryBt709   = FlowFmtpColorimetry("BT709")
	FlowFmtpColorimetryBt2020  = FlowFmtpColorimetry("BT2020")
	FlowFmtpColorimetryBt2100  = FlowFmtpColorimetry("BT2100")
	FlowFmtpColorimetrySt20651 = FlowFmtpColorimetry("ST2065-1")
	FlowFmtpColorimetrySt20653 = FlowFmtpColorimetry("ST2065-3")
	FlowFmtpColorimetryXyz     = FlowFmtpColorimetry("XYZ")
)

func (FlowFmtpColorimetry) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowFmtpColorimetry)(nil)).Elem()
}

func (e FlowFmtpColorimetry) ToFlowFmtpColorimetryOutput() FlowFmtpColorimetryOutput {
	return pulumi.ToOutput(e).(FlowFmtpColorimetryOutput)
}

func (e FlowFmtpColorimetry) ToFlowFmtpColorimetryOutputWithContext(ctx context.Context) FlowFmtpColorimetryOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowFmtpColorimetryOutput)
}

func (e FlowFmtpColorimetry) ToFlowFmtpColorimetryPtrOutput() FlowFmtpColorimetryPtrOutput {
	return e.ToFlowFmtpColorimetryPtrOutputWithContext(context.Background())
}

func (e FlowFmtpColorimetry) ToFlowFmtpColorimetryPtrOutputWithContext(ctx context.Context) FlowFmtpColorimetryPtrOutput {
	return FlowFmtpColorimetry(e).ToFlowFmtpColorimetryOutputWithContext(ctx).ToFlowFmtpColorimetryPtrOutputWithContext(ctx)
}

func (e FlowFmtpColorimetry) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowFmtpColorimetry) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowFmtpColorimetry) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowFmtpColorimetry) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowFmtpColorimetryOutput struct{ *pulumi.OutputState }

func (FlowFmtpColorimetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowFmtpColorimetry)(nil)).Elem()
}

func (o FlowFmtpColorimetryOutput) ToFlowFmtpColorimetryOutput() FlowFmtpColorimetryOutput {
	return o
}

func (o FlowFmtpColorimetryOutput) ToFlowFmtpColorimetryOutputWithContext(ctx context.Context) FlowFmtpColorimetryOutput {
	return o
}

func (o FlowFmtpColorimetryOutput) ToFlowFmtpColorimetryPtrOutput() FlowFmtpColorimetryPtrOutput {
	return o.ToFlowFmtpColorimetryPtrOutputWithContext(context.Background())
}

func (o FlowFmtpColorimetryOutput) ToFlowFmtpColorimetryPtrOutputWithContext(ctx context.Context) FlowFmtpColorimetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowFmtpColorimetry) *FlowFmtpColorimetry {
		return &v
	}).(FlowFmtpColorimetryPtrOutput)
}

func (o FlowFmtpColorimetryOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowFmtpColorimetryOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowFmtpColorimetry) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowFmtpColorimetryOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowFmtpColorimetryOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowFmtpColorimetry) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowFmtpColorimetryPtrOutput struct{ *pulumi.OutputState }

func (FlowFmtpColorimetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowFmtpColorimetry)(nil)).Elem()
}

func (o FlowFmtpColorimetryPtrOutput) ToFlowFmtpColorimetryPtrOutput() FlowFmtpColorimetryPtrOutput {
	return o
}

func (o FlowFmtpColorimetryPtrOutput) ToFlowFmtpColorimetryPtrOutputWithContext(ctx context.Context) FlowFmtpColorimetryPtrOutput {
	return o
}

func (o FlowFmtpColorimetryPtrOutput) Elem() FlowFmtpColorimetryOutput {
	return o.ApplyT(func(v *FlowFmtpColorimetry) FlowFmtpColorimetry {
		if v != nil {
			return *v
		}
		var ret FlowFmtpColorimetry
		return ret
	}).(FlowFmtpColorimetryOutput)
}

func (o FlowFmtpColorimetryPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowFmtpColorimetryPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowFmtpColorimetry) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowFmtpColorimetryInput is an input type that accepts values of the FlowFmtpColorimetry enum
// A concrete instance of `FlowFmtpColorimetryInput` can be one of the following:
//
//	FlowFmtpColorimetryBt601
//	FlowFmtpColorimetryBt709
//	FlowFmtpColorimetryBt2020
//	FlowFmtpColorimetryBt2100
//	FlowFmtpColorimetrySt20651
//	FlowFmtpColorimetrySt20653
//	FlowFmtpColorimetryXyz
type FlowFmtpColorimetryInput interface {
	pulumi.Input

	ToFlowFmtpColorimetryOutput() FlowFmtpColorimetryOutput
	ToFlowFmtpColorimetryOutputWithContext(context.Context) FlowFmtpColorimetryOutput
}

var flowFmtpColorimetryPtrType = reflect.TypeOf((**FlowFmtpColorimetry)(nil)).Elem()

type FlowFmtpColorimetryPtrInput interface {
	pulumi.Input

	ToFlowFmtpColorimetryPtrOutput() FlowFmtpColorimetryPtrOutput
	ToFlowFmtpColorimetryPtrOutputWithContext(context.Context) FlowFmtpColorimetryPtrOutput
}

type flowFmtpColorimetryPtr string

func FlowFmtpColorimetryPtr(v string) FlowFmtpColorimetryPtrInput {
	return (*flowFmtpColorimetryPtr)(&v)
}

func (*flowFmtpColorimetryPtr) ElementType() reflect.Type {
	return flowFmtpColorimetryPtrType
}

func (in *flowFmtpColorimetryPtr) ToFlowFmtpColorimetryPtrOutput() FlowFmtpColorimetryPtrOutput {
	return pulumi.ToOutput(in).(FlowFmtpColorimetryPtrOutput)
}

func (in *flowFmtpColorimetryPtr) ToFlowFmtpColorimetryPtrOutputWithContext(ctx context.Context) FlowFmtpColorimetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowFmtpColorimetryPtrOutput)
}

// The encoding range of the video.
type FlowFmtpRange string

const (
	FlowFmtpRangeNarrow      = FlowFmtpRange("NARROW")
	FlowFmtpRangeFull        = FlowFmtpRange("FULL")
	FlowFmtpRangeFullprotect = FlowFmtpRange("FULLPROTECT")
)

func (FlowFmtpRange) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowFmtpRange)(nil)).Elem()
}

func (e FlowFmtpRange) ToFlowFmtpRangeOutput() FlowFmtpRangeOutput {
	return pulumi.ToOutput(e).(FlowFmtpRangeOutput)
}

func (e FlowFmtpRange) ToFlowFmtpRangeOutputWithContext(ctx context.Context) FlowFmtpRangeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowFmtpRangeOutput)
}

func (e FlowFmtpRange) ToFlowFmtpRangePtrOutput() FlowFmtpRangePtrOutput {
	return e.ToFlowFmtpRangePtrOutputWithContext(context.Background())
}

func (e FlowFmtpRange) ToFlowFmtpRangePtrOutputWithContext(ctx context.Context) FlowFmtpRangePtrOutput {
	return FlowFmtpRange(e).ToFlowFmtpRangeOutputWithContext(ctx).ToFlowFmtpRangePtrOutputWithContext(ctx)
}

func (e FlowFmtpRange) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowFmtpRange) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowFmtpRange) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowFmtpRange) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowFmtpRangeOutput struct{ *pulumi.OutputState }

func (FlowFmtpRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowFmtpRange)(nil)).Elem()
}

func (o FlowFmtpRangeOutput) ToFlowFmtpRangeOutput() FlowFmtpRangeOutput {
	return o
}

func (o FlowFmtpRangeOutput) ToFlowFmtpRangeOutputWithContext(ctx context.Context) FlowFmtpRangeOutput {
	return o
}

func (o FlowFmtpRangeOutput) ToFlowFmtpRangePtrOutput() FlowFmtpRangePtrOutput {
	return o.ToFlowFmtpRangePtrOutputWithContext(context.Background())
}

func (o FlowFmtpRangeOutput) ToFlowFmtpRangePtrOutputWithContext(ctx context.Context) FlowFmtpRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowFmtpRange) *FlowFmtpRange {
		return &v
	}).(FlowFmtpRangePtrOutput)
}

func (o FlowFmtpRangeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowFmtpRangeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowFmtpRange) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowFmtpRangeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowFmtpRangeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowFmtpRange) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowFmtpRangePtrOutput struct{ *pulumi.OutputState }

func (FlowFmtpRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowFmtpRange)(nil)).Elem()
}

func (o FlowFmtpRangePtrOutput) ToFlowFmtpRangePtrOutput() FlowFmtpRangePtrOutput {
	return o
}

func (o FlowFmtpRangePtrOutput) ToFlowFmtpRangePtrOutputWithContext(ctx context.Context) FlowFmtpRangePtrOutput {
	return o
}

func (o FlowFmtpRangePtrOutput) Elem() FlowFmtpRangeOutput {
	return o.ApplyT(func(v *FlowFmtpRange) FlowFmtpRange {
		if v != nil {
			return *v
		}
		var ret FlowFmtpRange
		return ret
	}).(FlowFmtpRangeOutput)
}

func (o FlowFmtpRangePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowFmtpRangePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowFmtpRange) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowFmtpRangeInput is an input type that accepts values of the FlowFmtpRange enum
// A concrete instance of `FlowFmtpRangeInput` can be one of the following:
//
//	FlowFmtpRangeNarrow
//	FlowFmtpRangeFull
//	FlowFmtpRangeFullprotect
type FlowFmtpRangeInput interface {
	pulumi.Input

	ToFlowFmtpRangeOutput() FlowFmtpRangeOutput
	ToFlowFmtpRangeOutputWithContext(context.Context) FlowFmtpRangeOutput
}

var flowFmtpRangePtrType = reflect.TypeOf((**FlowFmtpRange)(nil)).Elem()

type FlowFmtpRangePtrInput interface {
	pulumi.Input

	ToFlowFmtpRangePtrOutput() FlowFmtpRangePtrOutput
	ToFlowFmtpRangePtrOutputWithContext(context.Context) FlowFmtpRangePtrOutput
}

type flowFmtpRangePtr string

func FlowFmtpRangePtr(v string) FlowFmtpRangePtrInput {
	return (*flowFmtpRangePtr)(&v)
}

func (*flowFmtpRangePtr) ElementType() reflect.Type {
	return flowFmtpRangePtrType
}

func (in *flowFmtpRangePtr) ToFlowFmtpRangePtrOutput() FlowFmtpRangePtrOutput {
	return pulumi.ToOutput(in).(FlowFmtpRangePtrOutput)
}

func (in *flowFmtpRangePtr) ToFlowFmtpRangePtrOutputWithContext(ctx context.Context) FlowFmtpRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowFmtpRangePtrOutput)
}

// The type of compression that was used to smooth the video's appearance.
type FlowFmtpScanMode string

const (
	FlowFmtpScanModeProgressive               = FlowFmtpScanMode("progressive")
	FlowFmtpScanModeInterlace                 = FlowFmtpScanMode("interlace")
	FlowFmtpScanModeProgressiveSegmentedFrame = FlowFmtpScanMode("progressive-segmented-frame")
)

func (FlowFmtpScanMode) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowFmtpScanMode)(nil)).Elem()
}

func (e FlowFmtpScanMode) ToFlowFmtpScanModeOutput() FlowFmtpScanModeOutput {
	return pulumi.ToOutput(e).(FlowFmtpScanModeOutput)
}

func (e FlowFmtpScanMode) ToFlowFmtpScanModeOutputWithContext(ctx context.Context) FlowFmtpScanModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowFmtpScanModeOutput)
}

func (e FlowFmtpScanMode) ToFlowFmtpScanModePtrOutput() FlowFmtpScanModePtrOutput {
	return e.ToFlowFmtpScanModePtrOutputWithContext(context.Background())
}

func (e FlowFmtpScanMode) ToFlowFmtpScanModePtrOutputWithContext(ctx context.Context) FlowFmtpScanModePtrOutput {
	return FlowFmtpScanMode(e).ToFlowFmtpScanModeOutputWithContext(ctx).ToFlowFmtpScanModePtrOutputWithContext(ctx)
}

func (e FlowFmtpScanMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowFmtpScanMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowFmtpScanMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowFmtpScanMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowFmtpScanModeOutput struct{ *pulumi.OutputState }

func (FlowFmtpScanModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowFmtpScanMode)(nil)).Elem()
}

func (o FlowFmtpScanModeOutput) ToFlowFmtpScanModeOutput() FlowFmtpScanModeOutput {
	return o
}

func (o FlowFmtpScanModeOutput) ToFlowFmtpScanModeOutputWithContext(ctx context.Context) FlowFmtpScanModeOutput {
	return o
}

func (o FlowFmtpScanModeOutput) ToFlowFmtpScanModePtrOutput() FlowFmtpScanModePtrOutput {
	return o.ToFlowFmtpScanModePtrOutputWithContext(context.Background())
}

func (o FlowFmtpScanModeOutput) ToFlowFmtpScanModePtrOutputWithContext(ctx context.Context) FlowFmtpScanModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowFmtpScanMode) *FlowFmtpScanMode {
		return &v
	}).(FlowFmtpScanModePtrOutput)
}

func (o FlowFmtpScanModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowFmtpScanModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowFmtpScanMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowFmtpScanModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowFmtpScanModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowFmtpScanMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowFmtpScanModePtrOutput struct{ *pulumi.OutputState }

func (FlowFmtpScanModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowFmtpScanMode)(nil)).Elem()
}

func (o FlowFmtpScanModePtrOutput) ToFlowFmtpScanModePtrOutput() FlowFmtpScanModePtrOutput {
	return o
}

func (o FlowFmtpScanModePtrOutput) ToFlowFmtpScanModePtrOutputWithContext(ctx context.Context) FlowFmtpScanModePtrOutput {
	return o
}

func (o FlowFmtpScanModePtrOutput) Elem() FlowFmtpScanModeOutput {
	return o.ApplyT(func(v *FlowFmtpScanMode) FlowFmtpScanMode {
		if v != nil {
			return *v
		}
		var ret FlowFmtpScanMode
		return ret
	}).(FlowFmtpScanModeOutput)
}

func (o FlowFmtpScanModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowFmtpScanModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowFmtpScanMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowFmtpScanModeInput is an input type that accepts values of the FlowFmtpScanMode enum
// A concrete instance of `FlowFmtpScanModeInput` can be one of the following:
//
//	FlowFmtpScanModeProgressive
//	FlowFmtpScanModeInterlace
//	FlowFmtpScanModeProgressiveSegmentedFrame
type FlowFmtpScanModeInput interface {
	pulumi.Input

	ToFlowFmtpScanModeOutput() FlowFmtpScanModeOutput
	ToFlowFmtpScanModeOutputWithContext(context.Context) FlowFmtpScanModeOutput
}

var flowFmtpScanModePtrType = reflect.TypeOf((**FlowFmtpScanMode)(nil)).Elem()

type FlowFmtpScanModePtrInput interface {
	pulumi.Input

	ToFlowFmtpScanModePtrOutput() FlowFmtpScanModePtrOutput
	ToFlowFmtpScanModePtrOutputWithContext(context.Context) FlowFmtpScanModePtrOutput
}

type flowFmtpScanModePtr string

func FlowFmtpScanModePtr(v string) FlowFmtpScanModePtrInput {
	return (*flowFmtpScanModePtr)(&v)
}

func (*flowFmtpScanModePtr) ElementType() reflect.Type {
	return flowFmtpScanModePtrType
}

func (in *flowFmtpScanModePtr) ToFlowFmtpScanModePtrOutput() FlowFmtpScanModePtrOutput {
	return pulumi.ToOutput(in).(FlowFmtpScanModePtrOutput)
}

func (in *flowFmtpScanModePtr) ToFlowFmtpScanModePtrOutputWithContext(ctx context.Context) FlowFmtpScanModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowFmtpScanModePtrOutput)
}

// The transfer characteristic system (TCS) that is used in the video.
type FlowFmtpTcs string

const (
	FlowFmtpTcsSdr          = FlowFmtpTcs("SDR")
	FlowFmtpTcsPq           = FlowFmtpTcs("PQ")
	FlowFmtpTcsHlg          = FlowFmtpTcs("HLG")
	FlowFmtpTcsLinear       = FlowFmtpTcs("LINEAR")
	FlowFmtpTcsBt2100linpq  = FlowFmtpTcs("BT2100LINPQ")
	FlowFmtpTcsBt2100linhlg = FlowFmtpTcs("BT2100LINHLG")
	FlowFmtpTcsSt20651      = FlowFmtpTcs("ST2065-1")
	FlowFmtpTcsSt4281       = FlowFmtpTcs("ST428-1")
	FlowFmtpTcsDensity      = FlowFmtpTcs("DENSITY")
)

func (FlowFmtpTcs) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowFmtpTcs)(nil)).Elem()
}

func (e FlowFmtpTcs) ToFlowFmtpTcsOutput() FlowFmtpTcsOutput {
	return pulumi.ToOutput(e).(FlowFmtpTcsOutput)
}

func (e FlowFmtpTcs) ToFlowFmtpTcsOutputWithContext(ctx context.Context) FlowFmtpTcsOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowFmtpTcsOutput)
}

func (e FlowFmtpTcs) ToFlowFmtpTcsPtrOutput() FlowFmtpTcsPtrOutput {
	return e.ToFlowFmtpTcsPtrOutputWithContext(context.Background())
}

func (e FlowFmtpTcs) ToFlowFmtpTcsPtrOutputWithContext(ctx context.Context) FlowFmtpTcsPtrOutput {
	return FlowFmtpTcs(e).ToFlowFmtpTcsOutputWithContext(ctx).ToFlowFmtpTcsPtrOutputWithContext(ctx)
}

func (e FlowFmtpTcs) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowFmtpTcs) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowFmtpTcs) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowFmtpTcs) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowFmtpTcsOutput struct{ *pulumi.OutputState }

func (FlowFmtpTcsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowFmtpTcs)(nil)).Elem()
}

func (o FlowFmtpTcsOutput) ToFlowFmtpTcsOutput() FlowFmtpTcsOutput {
	return o
}

func (o FlowFmtpTcsOutput) ToFlowFmtpTcsOutputWithContext(ctx context.Context) FlowFmtpTcsOutput {
	return o
}

func (o FlowFmtpTcsOutput) ToFlowFmtpTcsPtrOutput() FlowFmtpTcsPtrOutput {
	return o.ToFlowFmtpTcsPtrOutputWithContext(context.Background())
}

func (o FlowFmtpTcsOutput) ToFlowFmtpTcsPtrOutputWithContext(ctx context.Context) FlowFmtpTcsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowFmtpTcs) *FlowFmtpTcs {
		return &v
	}).(FlowFmtpTcsPtrOutput)
}

func (o FlowFmtpTcsOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowFmtpTcsOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowFmtpTcs) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowFmtpTcsOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowFmtpTcsOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowFmtpTcs) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowFmtpTcsPtrOutput struct{ *pulumi.OutputState }

func (FlowFmtpTcsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowFmtpTcs)(nil)).Elem()
}

func (o FlowFmtpTcsPtrOutput) ToFlowFmtpTcsPtrOutput() FlowFmtpTcsPtrOutput {
	return o
}

func (o FlowFmtpTcsPtrOutput) ToFlowFmtpTcsPtrOutputWithContext(ctx context.Context) FlowFmtpTcsPtrOutput {
	return o
}

func (o FlowFmtpTcsPtrOutput) Elem() FlowFmtpTcsOutput {
	return o.ApplyT(func(v *FlowFmtpTcs) FlowFmtpTcs {
		if v != nil {
			return *v
		}
		var ret FlowFmtpTcs
		return ret
	}).(FlowFmtpTcsOutput)
}

func (o FlowFmtpTcsPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowFmtpTcsPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowFmtpTcs) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowFmtpTcsInput is an input type that accepts values of the FlowFmtpTcs enum
// A concrete instance of `FlowFmtpTcsInput` can be one of the following:
//
//	FlowFmtpTcsSdr
//	FlowFmtpTcsPq
//	FlowFmtpTcsHlg
//	FlowFmtpTcsLinear
//	FlowFmtpTcsBt2100linpq
//	FlowFmtpTcsBt2100linhlg
//	FlowFmtpTcsSt20651
//	FlowFmtpTcsSt4281
//	FlowFmtpTcsDensity
type FlowFmtpTcsInput interface {
	pulumi.Input

	ToFlowFmtpTcsOutput() FlowFmtpTcsOutput
	ToFlowFmtpTcsOutputWithContext(context.Context) FlowFmtpTcsOutput
}

var flowFmtpTcsPtrType = reflect.TypeOf((**FlowFmtpTcs)(nil)).Elem()

type FlowFmtpTcsPtrInput interface {
	pulumi.Input

	ToFlowFmtpTcsPtrOutput() FlowFmtpTcsPtrOutput
	ToFlowFmtpTcsPtrOutputWithContext(context.Context) FlowFmtpTcsPtrOutput
}

type flowFmtpTcsPtr string

func FlowFmtpTcsPtr(v string) FlowFmtpTcsPtrInput {
	return (*flowFmtpTcsPtr)(&v)
}

func (*flowFmtpTcsPtr) ElementType() reflect.Type {
	return flowFmtpTcsPtrType
}

func (in *flowFmtpTcsPtr) ToFlowFmtpTcsPtrOutput() FlowFmtpTcsPtrOutput {
	return pulumi.ToOutput(in).(FlowFmtpTcsPtrOutput)
}

func (in *flowFmtpTcsPtr) ToFlowFmtpTcsPtrOutputWithContext(ctx context.Context) FlowFmtpTcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowFmtpTcsPtrOutput)
}

// A day of a week when the maintenance will happen. Use Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday.
type FlowMaintenanceMaintenanceDay string

const (
	FlowMaintenanceMaintenanceDayMonday    = FlowMaintenanceMaintenanceDay("Monday")
	FlowMaintenanceMaintenanceDayTuesday   = FlowMaintenanceMaintenanceDay("Tuesday")
	FlowMaintenanceMaintenanceDayWednesday = FlowMaintenanceMaintenanceDay("Wednesday")
	FlowMaintenanceMaintenanceDayThursday  = FlowMaintenanceMaintenanceDay("Thursday")
	FlowMaintenanceMaintenanceDayFriday    = FlowMaintenanceMaintenanceDay("Friday")
	FlowMaintenanceMaintenanceDaySaturday  = FlowMaintenanceMaintenanceDay("Saturday")
	FlowMaintenanceMaintenanceDaySunday    = FlowMaintenanceMaintenanceDay("Sunday")
)

func (FlowMaintenanceMaintenanceDay) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowMaintenanceMaintenanceDay)(nil)).Elem()
}

func (e FlowMaintenanceMaintenanceDay) ToFlowMaintenanceMaintenanceDayOutput() FlowMaintenanceMaintenanceDayOutput {
	return pulumi.ToOutput(e).(FlowMaintenanceMaintenanceDayOutput)
}

func (e FlowMaintenanceMaintenanceDay) ToFlowMaintenanceMaintenanceDayOutputWithContext(ctx context.Context) FlowMaintenanceMaintenanceDayOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowMaintenanceMaintenanceDayOutput)
}

func (e FlowMaintenanceMaintenanceDay) ToFlowMaintenanceMaintenanceDayPtrOutput() FlowMaintenanceMaintenanceDayPtrOutput {
	return e.ToFlowMaintenanceMaintenanceDayPtrOutputWithContext(context.Background())
}

func (e FlowMaintenanceMaintenanceDay) ToFlowMaintenanceMaintenanceDayPtrOutputWithContext(ctx context.Context) FlowMaintenanceMaintenanceDayPtrOutput {
	return FlowMaintenanceMaintenanceDay(e).ToFlowMaintenanceMaintenanceDayOutputWithContext(ctx).ToFlowMaintenanceMaintenanceDayPtrOutputWithContext(ctx)
}

func (e FlowMaintenanceMaintenanceDay) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowMaintenanceMaintenanceDay) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowMaintenanceMaintenanceDay) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowMaintenanceMaintenanceDay) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowMaintenanceMaintenanceDayOutput struct{ *pulumi.OutputState }

func (FlowMaintenanceMaintenanceDayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowMaintenanceMaintenanceDay)(nil)).Elem()
}

func (o FlowMaintenanceMaintenanceDayOutput) ToFlowMaintenanceMaintenanceDayOutput() FlowMaintenanceMaintenanceDayOutput {
	return o
}

func (o FlowMaintenanceMaintenanceDayOutput) ToFlowMaintenanceMaintenanceDayOutputWithContext(ctx context.Context) FlowMaintenanceMaintenanceDayOutput {
	return o
}

func (o FlowMaintenanceMaintenanceDayOutput) ToFlowMaintenanceMaintenanceDayPtrOutput() FlowMaintenanceMaintenanceDayPtrOutput {
	return o.ToFlowMaintenanceMaintenanceDayPtrOutputWithContext(context.Background())
}

func (o FlowMaintenanceMaintenanceDayOutput) ToFlowMaintenanceMaintenanceDayPtrOutputWithContext(ctx context.Context) FlowMaintenanceMaintenanceDayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowMaintenanceMaintenanceDay) *FlowMaintenanceMaintenanceDay {
		return &v
	}).(FlowMaintenanceMaintenanceDayPtrOutput)
}

func (o FlowMaintenanceMaintenanceDayOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowMaintenanceMaintenanceDayOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowMaintenanceMaintenanceDay) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowMaintenanceMaintenanceDayOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowMaintenanceMaintenanceDayOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowMaintenanceMaintenanceDay) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowMaintenanceMaintenanceDayPtrOutput struct{ *pulumi.OutputState }

func (FlowMaintenanceMaintenanceDayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowMaintenanceMaintenanceDay)(nil)).Elem()
}

func (o FlowMaintenanceMaintenanceDayPtrOutput) ToFlowMaintenanceMaintenanceDayPtrOutput() FlowMaintenanceMaintenanceDayPtrOutput {
	return o
}

func (o FlowMaintenanceMaintenanceDayPtrOutput) ToFlowMaintenanceMaintenanceDayPtrOutputWithContext(ctx context.Context) FlowMaintenanceMaintenanceDayPtrOutput {
	return o
}

func (o FlowMaintenanceMaintenanceDayPtrOutput) Elem() FlowMaintenanceMaintenanceDayOutput {
	return o.ApplyT(func(v *FlowMaintenanceMaintenanceDay) FlowMaintenanceMaintenanceDay {
		if v != nil {
			return *v
		}
		var ret FlowMaintenanceMaintenanceDay
		return ret
	}).(FlowMaintenanceMaintenanceDayOutput)
}

func (o FlowMaintenanceMaintenanceDayPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowMaintenanceMaintenanceDayPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowMaintenanceMaintenanceDay) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowMaintenanceMaintenanceDayInput is an input type that accepts values of the FlowMaintenanceMaintenanceDay enum
// A concrete instance of `FlowMaintenanceMaintenanceDayInput` can be one of the following:
//
//	FlowMaintenanceMaintenanceDayMonday
//	FlowMaintenanceMaintenanceDayTuesday
//	FlowMaintenanceMaintenanceDayWednesday
//	FlowMaintenanceMaintenanceDayThursday
//	FlowMaintenanceMaintenanceDayFriday
//	FlowMaintenanceMaintenanceDaySaturday
//	FlowMaintenanceMaintenanceDaySunday
type FlowMaintenanceMaintenanceDayInput interface {
	pulumi.Input

	ToFlowMaintenanceMaintenanceDayOutput() FlowMaintenanceMaintenanceDayOutput
	ToFlowMaintenanceMaintenanceDayOutputWithContext(context.Context) FlowMaintenanceMaintenanceDayOutput
}

var flowMaintenanceMaintenanceDayPtrType = reflect.TypeOf((**FlowMaintenanceMaintenanceDay)(nil)).Elem()

type FlowMaintenanceMaintenanceDayPtrInput interface {
	pulumi.Input

	ToFlowMaintenanceMaintenanceDayPtrOutput() FlowMaintenanceMaintenanceDayPtrOutput
	ToFlowMaintenanceMaintenanceDayPtrOutputWithContext(context.Context) FlowMaintenanceMaintenanceDayPtrOutput
}

type flowMaintenanceMaintenanceDayPtr string

func FlowMaintenanceMaintenanceDayPtr(v string) FlowMaintenanceMaintenanceDayPtrInput {
	return (*flowMaintenanceMaintenanceDayPtr)(&v)
}

func (*flowMaintenanceMaintenanceDayPtr) ElementType() reflect.Type {
	return flowMaintenanceMaintenanceDayPtrType
}

func (in *flowMaintenanceMaintenanceDayPtr) ToFlowMaintenanceMaintenanceDayPtrOutput() FlowMaintenanceMaintenanceDayPtrOutput {
	return pulumi.ToOutput(in).(FlowMaintenanceMaintenanceDayPtrOutput)
}

func (in *flowMaintenanceMaintenanceDayPtr) ToFlowMaintenanceMaintenanceDayPtrOutputWithContext(ctx context.Context) FlowMaintenanceMaintenanceDayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowMaintenanceMaintenanceDayPtrOutput)
}

// The type of media stream.
type FlowMediaStreamMediaStreamType string

const (
	FlowMediaStreamMediaStreamTypeVideo         = FlowMediaStreamMediaStreamType("video")
	FlowMediaStreamMediaStreamTypeAudio         = FlowMediaStreamMediaStreamType("audio")
	FlowMediaStreamMediaStreamTypeAncillaryData = FlowMediaStreamMediaStreamType("ancillary-data")
)

func (FlowMediaStreamMediaStreamType) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowMediaStreamMediaStreamType)(nil)).Elem()
}

func (e FlowMediaStreamMediaStreamType) ToFlowMediaStreamMediaStreamTypeOutput() FlowMediaStreamMediaStreamTypeOutput {
	return pulumi.ToOutput(e).(FlowMediaStreamMediaStreamTypeOutput)
}

func (e FlowMediaStreamMediaStreamType) ToFlowMediaStreamMediaStreamTypeOutputWithContext(ctx context.Context) FlowMediaStreamMediaStreamTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowMediaStreamMediaStreamTypeOutput)
}

func (e FlowMediaStreamMediaStreamType) ToFlowMediaStreamMediaStreamTypePtrOutput() FlowMediaStreamMediaStreamTypePtrOutput {
	return e.ToFlowMediaStreamMediaStreamTypePtrOutputWithContext(context.Background())
}

func (e FlowMediaStreamMediaStreamType) ToFlowMediaStreamMediaStreamTypePtrOutputWithContext(ctx context.Context) FlowMediaStreamMediaStreamTypePtrOutput {
	return FlowMediaStreamMediaStreamType(e).ToFlowMediaStreamMediaStreamTypeOutputWithContext(ctx).ToFlowMediaStreamMediaStreamTypePtrOutputWithContext(ctx)
}

func (e FlowMediaStreamMediaStreamType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowMediaStreamMediaStreamType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowMediaStreamMediaStreamType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowMediaStreamMediaStreamType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowMediaStreamMediaStreamTypeOutput struct{ *pulumi.OutputState }

func (FlowMediaStreamMediaStreamTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowMediaStreamMediaStreamType)(nil)).Elem()
}

func (o FlowMediaStreamMediaStreamTypeOutput) ToFlowMediaStreamMediaStreamTypeOutput() FlowMediaStreamMediaStreamTypeOutput {
	return o
}

func (o FlowMediaStreamMediaStreamTypeOutput) ToFlowMediaStreamMediaStreamTypeOutputWithContext(ctx context.Context) FlowMediaStreamMediaStreamTypeOutput {
	return o
}

func (o FlowMediaStreamMediaStreamTypeOutput) ToFlowMediaStreamMediaStreamTypePtrOutput() FlowMediaStreamMediaStreamTypePtrOutput {
	return o.ToFlowMediaStreamMediaStreamTypePtrOutputWithContext(context.Background())
}

func (o FlowMediaStreamMediaStreamTypeOutput) ToFlowMediaStreamMediaStreamTypePtrOutputWithContext(ctx context.Context) FlowMediaStreamMediaStreamTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowMediaStreamMediaStreamType) *FlowMediaStreamMediaStreamType {
		return &v
	}).(FlowMediaStreamMediaStreamTypePtrOutput)
}

func (o FlowMediaStreamMediaStreamTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowMediaStreamMediaStreamTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowMediaStreamMediaStreamType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowMediaStreamMediaStreamTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowMediaStreamMediaStreamTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowMediaStreamMediaStreamType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowMediaStreamMediaStreamTypePtrOutput struct{ *pulumi.OutputState }

func (FlowMediaStreamMediaStreamTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowMediaStreamMediaStreamType)(nil)).Elem()
}

func (o FlowMediaStreamMediaStreamTypePtrOutput) ToFlowMediaStreamMediaStreamTypePtrOutput() FlowMediaStreamMediaStreamTypePtrOutput {
	return o
}

func (o FlowMediaStreamMediaStreamTypePtrOutput) ToFlowMediaStreamMediaStreamTypePtrOutputWithContext(ctx context.Context) FlowMediaStreamMediaStreamTypePtrOutput {
	return o
}

func (o FlowMediaStreamMediaStreamTypePtrOutput) Elem() FlowMediaStreamMediaStreamTypeOutput {
	return o.ApplyT(func(v *FlowMediaStreamMediaStreamType) FlowMediaStreamMediaStreamType {
		if v != nil {
			return *v
		}
		var ret FlowMediaStreamMediaStreamType
		return ret
	}).(FlowMediaStreamMediaStreamTypeOutput)
}

func (o FlowMediaStreamMediaStreamTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowMediaStreamMediaStreamTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowMediaStreamMediaStreamType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowMediaStreamMediaStreamTypeInput is an input type that accepts values of the FlowMediaStreamMediaStreamType enum
// A concrete instance of `FlowMediaStreamMediaStreamTypeInput` can be one of the following:
//
//	FlowMediaStreamMediaStreamTypeVideo
//	FlowMediaStreamMediaStreamTypeAudio
//	FlowMediaStreamMediaStreamTypeAncillaryData
type FlowMediaStreamMediaStreamTypeInput interface {
	pulumi.Input

	ToFlowMediaStreamMediaStreamTypeOutput() FlowMediaStreamMediaStreamTypeOutput
	ToFlowMediaStreamMediaStreamTypeOutputWithContext(context.Context) FlowMediaStreamMediaStreamTypeOutput
}

var flowMediaStreamMediaStreamTypePtrType = reflect.TypeOf((**FlowMediaStreamMediaStreamType)(nil)).Elem()

type FlowMediaStreamMediaStreamTypePtrInput interface {
	pulumi.Input

	ToFlowMediaStreamMediaStreamTypePtrOutput() FlowMediaStreamMediaStreamTypePtrOutput
	ToFlowMediaStreamMediaStreamTypePtrOutputWithContext(context.Context) FlowMediaStreamMediaStreamTypePtrOutput
}

type flowMediaStreamMediaStreamTypePtr string

func FlowMediaStreamMediaStreamTypePtr(v string) FlowMediaStreamMediaStreamTypePtrInput {
	return (*flowMediaStreamMediaStreamTypePtr)(&v)
}

func (*flowMediaStreamMediaStreamTypePtr) ElementType() reflect.Type {
	return flowMediaStreamMediaStreamTypePtrType
}

func (in *flowMediaStreamMediaStreamTypePtr) ToFlowMediaStreamMediaStreamTypePtrOutput() FlowMediaStreamMediaStreamTypePtrOutput {
	return pulumi.ToOutput(in).(FlowMediaStreamMediaStreamTypePtrOutput)
}

func (in *flowMediaStreamMediaStreamTypePtr) ToFlowMediaStreamMediaStreamTypePtrOutputWithContext(ctx context.Context) FlowMediaStreamMediaStreamTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowMediaStreamMediaStreamTypePtrOutput)
}

// The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.
type FlowMediaStreamSourceConfigurationEncodingName string

const (
	FlowMediaStreamSourceConfigurationEncodingNameJxsv     = FlowMediaStreamSourceConfigurationEncodingName("jxsv")
	FlowMediaStreamSourceConfigurationEncodingNameRaw      = FlowMediaStreamSourceConfigurationEncodingName("raw")
	FlowMediaStreamSourceConfigurationEncodingNameSmpte291 = FlowMediaStreamSourceConfigurationEncodingName("smpte291")
	FlowMediaStreamSourceConfigurationEncodingNamePcm      = FlowMediaStreamSourceConfigurationEncodingName("pcm")
)

func (FlowMediaStreamSourceConfigurationEncodingName) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowMediaStreamSourceConfigurationEncodingName)(nil)).Elem()
}

func (e FlowMediaStreamSourceConfigurationEncodingName) ToFlowMediaStreamSourceConfigurationEncodingNameOutput() FlowMediaStreamSourceConfigurationEncodingNameOutput {
	return pulumi.ToOutput(e).(FlowMediaStreamSourceConfigurationEncodingNameOutput)
}

func (e FlowMediaStreamSourceConfigurationEncodingName) ToFlowMediaStreamSourceConfigurationEncodingNameOutputWithContext(ctx context.Context) FlowMediaStreamSourceConfigurationEncodingNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowMediaStreamSourceConfigurationEncodingNameOutput)
}

func (e FlowMediaStreamSourceConfigurationEncodingName) ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutput() FlowMediaStreamSourceConfigurationEncodingNamePtrOutput {
	return e.ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutputWithContext(context.Background())
}

func (e FlowMediaStreamSourceConfigurationEncodingName) ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutputWithContext(ctx context.Context) FlowMediaStreamSourceConfigurationEncodingNamePtrOutput {
	return FlowMediaStreamSourceConfigurationEncodingName(e).ToFlowMediaStreamSourceConfigurationEncodingNameOutputWithContext(ctx).ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutputWithContext(ctx)
}

func (e FlowMediaStreamSourceConfigurationEncodingName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowMediaStreamSourceConfigurationEncodingName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowMediaStreamSourceConfigurationEncodingName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowMediaStreamSourceConfigurationEncodingName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowMediaStreamSourceConfigurationEncodingNameOutput struct{ *pulumi.OutputState }

func (FlowMediaStreamSourceConfigurationEncodingNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowMediaStreamSourceConfigurationEncodingName)(nil)).Elem()
}

func (o FlowMediaStreamSourceConfigurationEncodingNameOutput) ToFlowMediaStreamSourceConfigurationEncodingNameOutput() FlowMediaStreamSourceConfigurationEncodingNameOutput {
	return o
}

func (o FlowMediaStreamSourceConfigurationEncodingNameOutput) ToFlowMediaStreamSourceConfigurationEncodingNameOutputWithContext(ctx context.Context) FlowMediaStreamSourceConfigurationEncodingNameOutput {
	return o
}

func (o FlowMediaStreamSourceConfigurationEncodingNameOutput) ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutput() FlowMediaStreamSourceConfigurationEncodingNamePtrOutput {
	return o.ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutputWithContext(context.Background())
}

func (o FlowMediaStreamSourceConfigurationEncodingNameOutput) ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutputWithContext(ctx context.Context) FlowMediaStreamSourceConfigurationEncodingNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowMediaStreamSourceConfigurationEncodingName) *FlowMediaStreamSourceConfigurationEncodingName {
		return &v
	}).(FlowMediaStreamSourceConfigurationEncodingNamePtrOutput)
}

func (o FlowMediaStreamSourceConfigurationEncodingNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowMediaStreamSourceConfigurationEncodingNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowMediaStreamSourceConfigurationEncodingName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowMediaStreamSourceConfigurationEncodingNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowMediaStreamSourceConfigurationEncodingNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowMediaStreamSourceConfigurationEncodingName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowMediaStreamSourceConfigurationEncodingNamePtrOutput struct{ *pulumi.OutputState }

func (FlowMediaStreamSourceConfigurationEncodingNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowMediaStreamSourceConfigurationEncodingName)(nil)).Elem()
}

func (o FlowMediaStreamSourceConfigurationEncodingNamePtrOutput) ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutput() FlowMediaStreamSourceConfigurationEncodingNamePtrOutput {
	return o
}

func (o FlowMediaStreamSourceConfigurationEncodingNamePtrOutput) ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutputWithContext(ctx context.Context) FlowMediaStreamSourceConfigurationEncodingNamePtrOutput {
	return o
}

func (o FlowMediaStreamSourceConfigurationEncodingNamePtrOutput) Elem() FlowMediaStreamSourceConfigurationEncodingNameOutput {
	return o.ApplyT(func(v *FlowMediaStreamSourceConfigurationEncodingName) FlowMediaStreamSourceConfigurationEncodingName {
		if v != nil {
			return *v
		}
		var ret FlowMediaStreamSourceConfigurationEncodingName
		return ret
	}).(FlowMediaStreamSourceConfigurationEncodingNameOutput)
}

func (o FlowMediaStreamSourceConfigurationEncodingNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowMediaStreamSourceConfigurationEncodingNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowMediaStreamSourceConfigurationEncodingName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowMediaStreamSourceConfigurationEncodingNameInput is an input type that accepts values of the FlowMediaStreamSourceConfigurationEncodingName enum
// A concrete instance of `FlowMediaStreamSourceConfigurationEncodingNameInput` can be one of the following:
//
//	FlowMediaStreamSourceConfigurationEncodingNameJxsv
//	FlowMediaStreamSourceConfigurationEncodingNameRaw
//	FlowMediaStreamSourceConfigurationEncodingNameSmpte291
//	FlowMediaStreamSourceConfigurationEncodingNamePcm
type FlowMediaStreamSourceConfigurationEncodingNameInput interface {
	pulumi.Input

	ToFlowMediaStreamSourceConfigurationEncodingNameOutput() FlowMediaStreamSourceConfigurationEncodingNameOutput
	ToFlowMediaStreamSourceConfigurationEncodingNameOutputWithContext(context.Context) FlowMediaStreamSourceConfigurationEncodingNameOutput
}

var flowMediaStreamSourceConfigurationEncodingNamePtrType = reflect.TypeOf((**FlowMediaStreamSourceConfigurationEncodingName)(nil)).Elem()

type FlowMediaStreamSourceConfigurationEncodingNamePtrInput interface {
	pulumi.Input

	ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutput() FlowMediaStreamSourceConfigurationEncodingNamePtrOutput
	ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutputWithContext(context.Context) FlowMediaStreamSourceConfigurationEncodingNamePtrOutput
}

type flowMediaStreamSourceConfigurationEncodingNamePtr string

func FlowMediaStreamSourceConfigurationEncodingNamePtr(v string) FlowMediaStreamSourceConfigurationEncodingNamePtrInput {
	return (*flowMediaStreamSourceConfigurationEncodingNamePtr)(&v)
}

func (*flowMediaStreamSourceConfigurationEncodingNamePtr) ElementType() reflect.Type {
	return flowMediaStreamSourceConfigurationEncodingNamePtrType
}

func (in *flowMediaStreamSourceConfigurationEncodingNamePtr) ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutput() FlowMediaStreamSourceConfigurationEncodingNamePtrOutput {
	return pulumi.ToOutput(in).(FlowMediaStreamSourceConfigurationEncodingNamePtrOutput)
}

func (in *flowMediaStreamSourceConfigurationEncodingNamePtr) ToFlowMediaStreamSourceConfigurationEncodingNamePtrOutputWithContext(ctx context.Context) FlowMediaStreamSourceConfigurationEncodingNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowMediaStreamSourceConfigurationEncodingNamePtrOutput)
}

// The resolution of the video.
type FlowMediaStreamVideoFormat string

const (
	FlowMediaStreamVideoFormat_2160p = FlowMediaStreamVideoFormat("2160p")
	FlowMediaStreamVideoFormat_1080p = FlowMediaStreamVideoFormat("1080p")
	FlowMediaStreamVideoFormat_1080i = FlowMediaStreamVideoFormat("1080i")
	FlowMediaStreamVideoFormat_720p  = FlowMediaStreamVideoFormat("720p")
	FlowMediaStreamVideoFormat_480p  = FlowMediaStreamVideoFormat("480p")
)

func (FlowMediaStreamVideoFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowMediaStreamVideoFormat)(nil)).Elem()
}

func (e FlowMediaStreamVideoFormat) ToFlowMediaStreamVideoFormatOutput() FlowMediaStreamVideoFormatOutput {
	return pulumi.ToOutput(e).(FlowMediaStreamVideoFormatOutput)
}

func (e FlowMediaStreamVideoFormat) ToFlowMediaStreamVideoFormatOutputWithContext(ctx context.Context) FlowMediaStreamVideoFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowMediaStreamVideoFormatOutput)
}

func (e FlowMediaStreamVideoFormat) ToFlowMediaStreamVideoFormatPtrOutput() FlowMediaStreamVideoFormatPtrOutput {
	return e.ToFlowMediaStreamVideoFormatPtrOutputWithContext(context.Background())
}

func (e FlowMediaStreamVideoFormat) ToFlowMediaStreamVideoFormatPtrOutputWithContext(ctx context.Context) FlowMediaStreamVideoFormatPtrOutput {
	return FlowMediaStreamVideoFormat(e).ToFlowMediaStreamVideoFormatOutputWithContext(ctx).ToFlowMediaStreamVideoFormatPtrOutputWithContext(ctx)
}

func (e FlowMediaStreamVideoFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowMediaStreamVideoFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowMediaStreamVideoFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowMediaStreamVideoFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowMediaStreamVideoFormatOutput struct{ *pulumi.OutputState }

func (FlowMediaStreamVideoFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowMediaStreamVideoFormat)(nil)).Elem()
}

func (o FlowMediaStreamVideoFormatOutput) ToFlowMediaStreamVideoFormatOutput() FlowMediaStreamVideoFormatOutput {
	return o
}

func (o FlowMediaStreamVideoFormatOutput) ToFlowMediaStreamVideoFormatOutputWithContext(ctx context.Context) FlowMediaStreamVideoFormatOutput {
	return o
}

func (o FlowMediaStreamVideoFormatOutput) ToFlowMediaStreamVideoFormatPtrOutput() FlowMediaStreamVideoFormatPtrOutput {
	return o.ToFlowMediaStreamVideoFormatPtrOutputWithContext(context.Background())
}

func (o FlowMediaStreamVideoFormatOutput) ToFlowMediaStreamVideoFormatPtrOutputWithContext(ctx context.Context) FlowMediaStreamVideoFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowMediaStreamVideoFormat) *FlowMediaStreamVideoFormat {
		return &v
	}).(FlowMediaStreamVideoFormatPtrOutput)
}

func (o FlowMediaStreamVideoFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowMediaStreamVideoFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowMediaStreamVideoFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowMediaStreamVideoFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowMediaStreamVideoFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowMediaStreamVideoFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowMediaStreamVideoFormatPtrOutput struct{ *pulumi.OutputState }

func (FlowMediaStreamVideoFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowMediaStreamVideoFormat)(nil)).Elem()
}

func (o FlowMediaStreamVideoFormatPtrOutput) ToFlowMediaStreamVideoFormatPtrOutput() FlowMediaStreamVideoFormatPtrOutput {
	return o
}

func (o FlowMediaStreamVideoFormatPtrOutput) ToFlowMediaStreamVideoFormatPtrOutputWithContext(ctx context.Context) FlowMediaStreamVideoFormatPtrOutput {
	return o
}

func (o FlowMediaStreamVideoFormatPtrOutput) Elem() FlowMediaStreamVideoFormatOutput {
	return o.ApplyT(func(v *FlowMediaStreamVideoFormat) FlowMediaStreamVideoFormat {
		if v != nil {
			return *v
		}
		var ret FlowMediaStreamVideoFormat
		return ret
	}).(FlowMediaStreamVideoFormatOutput)
}

func (o FlowMediaStreamVideoFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowMediaStreamVideoFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowMediaStreamVideoFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowMediaStreamVideoFormatInput is an input type that accepts values of the FlowMediaStreamVideoFormat enum
// A concrete instance of `FlowMediaStreamVideoFormatInput` can be one of the following:
//
//	FlowMediaStreamVideoFormat_2160p
//	FlowMediaStreamVideoFormat_1080p
//	FlowMediaStreamVideoFormat_1080i
//	FlowMediaStreamVideoFormat_720p
//	FlowMediaStreamVideoFormat_480p
type FlowMediaStreamVideoFormatInput interface {
	pulumi.Input

	ToFlowMediaStreamVideoFormatOutput() FlowMediaStreamVideoFormatOutput
	ToFlowMediaStreamVideoFormatOutputWithContext(context.Context) FlowMediaStreamVideoFormatOutput
}

var flowMediaStreamVideoFormatPtrType = reflect.TypeOf((**FlowMediaStreamVideoFormat)(nil)).Elem()

type FlowMediaStreamVideoFormatPtrInput interface {
	pulumi.Input

	ToFlowMediaStreamVideoFormatPtrOutput() FlowMediaStreamVideoFormatPtrOutput
	ToFlowMediaStreamVideoFormatPtrOutputWithContext(context.Context) FlowMediaStreamVideoFormatPtrOutput
}

type flowMediaStreamVideoFormatPtr string

func FlowMediaStreamVideoFormatPtr(v string) FlowMediaStreamVideoFormatPtrInput {
	return (*flowMediaStreamVideoFormatPtr)(&v)
}

func (*flowMediaStreamVideoFormatPtr) ElementType() reflect.Type {
	return flowMediaStreamVideoFormatPtrType
}

func (in *flowMediaStreamVideoFormatPtr) ToFlowMediaStreamVideoFormatPtrOutput() FlowMediaStreamVideoFormatPtrOutput {
	return pulumi.ToOutput(in).(FlowMediaStreamVideoFormatPtrOutput)
}

func (in *flowMediaStreamVideoFormatPtr) ToFlowMediaStreamVideoFormatPtrOutputWithContext(ctx context.Context) FlowMediaStreamVideoFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowMediaStreamVideoFormatPtrOutput)
}

// A setting on the encoder that drives compression settings. This property only applies to video media streams associated with outputs that use the ST 2110 JPEG XS protocol, with a flow source that uses the CDI protocol.
type FlowOutputEncodingParametersEncoderProfile string

const (
	FlowOutputEncodingParametersEncoderProfileMain = FlowOutputEncodingParametersEncoderProfile("main")
	FlowOutputEncodingParametersEncoderProfileHigh = FlowOutputEncodingParametersEncoderProfile("high")
)

func (FlowOutputEncodingParametersEncoderProfile) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutputEncodingParametersEncoderProfile)(nil)).Elem()
}

func (e FlowOutputEncodingParametersEncoderProfile) ToFlowOutputEncodingParametersEncoderProfileOutput() FlowOutputEncodingParametersEncoderProfileOutput {
	return pulumi.ToOutput(e).(FlowOutputEncodingParametersEncoderProfileOutput)
}

func (e FlowOutputEncodingParametersEncoderProfile) ToFlowOutputEncodingParametersEncoderProfileOutputWithContext(ctx context.Context) FlowOutputEncodingParametersEncoderProfileOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowOutputEncodingParametersEncoderProfileOutput)
}

func (e FlowOutputEncodingParametersEncoderProfile) ToFlowOutputEncodingParametersEncoderProfilePtrOutput() FlowOutputEncodingParametersEncoderProfilePtrOutput {
	return e.ToFlowOutputEncodingParametersEncoderProfilePtrOutputWithContext(context.Background())
}

func (e FlowOutputEncodingParametersEncoderProfile) ToFlowOutputEncodingParametersEncoderProfilePtrOutputWithContext(ctx context.Context) FlowOutputEncodingParametersEncoderProfilePtrOutput {
	return FlowOutputEncodingParametersEncoderProfile(e).ToFlowOutputEncodingParametersEncoderProfileOutputWithContext(ctx).ToFlowOutputEncodingParametersEncoderProfilePtrOutputWithContext(ctx)
}

func (e FlowOutputEncodingParametersEncoderProfile) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowOutputEncodingParametersEncoderProfile) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowOutputEncodingParametersEncoderProfile) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowOutputEncodingParametersEncoderProfile) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowOutputEncodingParametersEncoderProfileOutput struct{ *pulumi.OutputState }

func (FlowOutputEncodingParametersEncoderProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutputEncodingParametersEncoderProfile)(nil)).Elem()
}

func (o FlowOutputEncodingParametersEncoderProfileOutput) ToFlowOutputEncodingParametersEncoderProfileOutput() FlowOutputEncodingParametersEncoderProfileOutput {
	return o
}

func (o FlowOutputEncodingParametersEncoderProfileOutput) ToFlowOutputEncodingParametersEncoderProfileOutputWithContext(ctx context.Context) FlowOutputEncodingParametersEncoderProfileOutput {
	return o
}

func (o FlowOutputEncodingParametersEncoderProfileOutput) ToFlowOutputEncodingParametersEncoderProfilePtrOutput() FlowOutputEncodingParametersEncoderProfilePtrOutput {
	return o.ToFlowOutputEncodingParametersEncoderProfilePtrOutputWithContext(context.Background())
}

func (o FlowOutputEncodingParametersEncoderProfileOutput) ToFlowOutputEncodingParametersEncoderProfilePtrOutputWithContext(ctx context.Context) FlowOutputEncodingParametersEncoderProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowOutputEncodingParametersEncoderProfile) *FlowOutputEncodingParametersEncoderProfile {
		return &v
	}).(FlowOutputEncodingParametersEncoderProfilePtrOutput)
}

func (o FlowOutputEncodingParametersEncoderProfileOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowOutputEncodingParametersEncoderProfileOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowOutputEncodingParametersEncoderProfile) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowOutputEncodingParametersEncoderProfileOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowOutputEncodingParametersEncoderProfileOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowOutputEncodingParametersEncoderProfile) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowOutputEncodingParametersEncoderProfilePtrOutput struct{ *pulumi.OutputState }

func (FlowOutputEncodingParametersEncoderProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowOutputEncodingParametersEncoderProfile)(nil)).Elem()
}

func (o FlowOutputEncodingParametersEncoderProfilePtrOutput) ToFlowOutputEncodingParametersEncoderProfilePtrOutput() FlowOutputEncodingParametersEncoderProfilePtrOutput {
	return o
}

func (o FlowOutputEncodingParametersEncoderProfilePtrOutput) ToFlowOutputEncodingParametersEncoderProfilePtrOutputWithContext(ctx context.Context) FlowOutputEncodingParametersEncoderProfilePtrOutput {
	return o
}

func (o FlowOutputEncodingParametersEncoderProfilePtrOutput) Elem() FlowOutputEncodingParametersEncoderProfileOutput {
	return o.ApplyT(func(v *FlowOutputEncodingParametersEncoderProfile) FlowOutputEncodingParametersEncoderProfile {
		if v != nil {
			return *v
		}
		var ret FlowOutputEncodingParametersEncoderProfile
		return ret
	}).(FlowOutputEncodingParametersEncoderProfileOutput)
}

func (o FlowOutputEncodingParametersEncoderProfilePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowOutputEncodingParametersEncoderProfilePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowOutputEncodingParametersEncoderProfile) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowOutputEncodingParametersEncoderProfileInput is an input type that accepts values of the FlowOutputEncodingParametersEncoderProfile enum
// A concrete instance of `FlowOutputEncodingParametersEncoderProfileInput` can be one of the following:
//
//	FlowOutputEncodingParametersEncoderProfileMain
//	FlowOutputEncodingParametersEncoderProfileHigh
type FlowOutputEncodingParametersEncoderProfileInput interface {
	pulumi.Input

	ToFlowOutputEncodingParametersEncoderProfileOutput() FlowOutputEncodingParametersEncoderProfileOutput
	ToFlowOutputEncodingParametersEncoderProfileOutputWithContext(context.Context) FlowOutputEncodingParametersEncoderProfileOutput
}

var flowOutputEncodingParametersEncoderProfilePtrType = reflect.TypeOf((**FlowOutputEncodingParametersEncoderProfile)(nil)).Elem()

type FlowOutputEncodingParametersEncoderProfilePtrInput interface {
	pulumi.Input

	ToFlowOutputEncodingParametersEncoderProfilePtrOutput() FlowOutputEncodingParametersEncoderProfilePtrOutput
	ToFlowOutputEncodingParametersEncoderProfilePtrOutputWithContext(context.Context) FlowOutputEncodingParametersEncoderProfilePtrOutput
}

type flowOutputEncodingParametersEncoderProfilePtr string

func FlowOutputEncodingParametersEncoderProfilePtr(v string) FlowOutputEncodingParametersEncoderProfilePtrInput {
	return (*flowOutputEncodingParametersEncoderProfilePtr)(&v)
}

func (*flowOutputEncodingParametersEncoderProfilePtr) ElementType() reflect.Type {
	return flowOutputEncodingParametersEncoderProfilePtrType
}

func (in *flowOutputEncodingParametersEncoderProfilePtr) ToFlowOutputEncodingParametersEncoderProfilePtrOutput() FlowOutputEncodingParametersEncoderProfilePtrOutput {
	return pulumi.ToOutput(in).(FlowOutputEncodingParametersEncoderProfilePtrOutput)
}

func (in *flowOutputEncodingParametersEncoderProfilePtr) ToFlowOutputEncodingParametersEncoderProfilePtrOutputWithContext(ctx context.Context) FlowOutputEncodingParametersEncoderProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowOutputEncodingParametersEncoderProfilePtrOutput)
}

// The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
type FlowOutputEncryptionAlgorithm string

const (
	FlowOutputEncryptionAlgorithmAes128 = FlowOutputEncryptionAlgorithm("aes128")
	FlowOutputEncryptionAlgorithmAes192 = FlowOutputEncryptionAlgorithm("aes192")
	FlowOutputEncryptionAlgorithmAes256 = FlowOutputEncryptionAlgorithm("aes256")
)

func (FlowOutputEncryptionAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutputEncryptionAlgorithm)(nil)).Elem()
}

func (e FlowOutputEncryptionAlgorithm) ToFlowOutputEncryptionAlgorithmOutput() FlowOutputEncryptionAlgorithmOutput {
	return pulumi.ToOutput(e).(FlowOutputEncryptionAlgorithmOutput)
}

func (e FlowOutputEncryptionAlgorithm) ToFlowOutputEncryptionAlgorithmOutputWithContext(ctx context.Context) FlowOutputEncryptionAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowOutputEncryptionAlgorithmOutput)
}

func (e FlowOutputEncryptionAlgorithm) ToFlowOutputEncryptionAlgorithmPtrOutput() FlowOutputEncryptionAlgorithmPtrOutput {
	return e.ToFlowOutputEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (e FlowOutputEncryptionAlgorithm) ToFlowOutputEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowOutputEncryptionAlgorithmPtrOutput {
	return FlowOutputEncryptionAlgorithm(e).ToFlowOutputEncryptionAlgorithmOutputWithContext(ctx).ToFlowOutputEncryptionAlgorithmPtrOutputWithContext(ctx)
}

func (e FlowOutputEncryptionAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowOutputEncryptionAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowOutputEncryptionAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowOutputEncryptionAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowOutputEncryptionAlgorithmOutput struct{ *pulumi.OutputState }

func (FlowOutputEncryptionAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutputEncryptionAlgorithm)(nil)).Elem()
}

func (o FlowOutputEncryptionAlgorithmOutput) ToFlowOutputEncryptionAlgorithmOutput() FlowOutputEncryptionAlgorithmOutput {
	return o
}

func (o FlowOutputEncryptionAlgorithmOutput) ToFlowOutputEncryptionAlgorithmOutputWithContext(ctx context.Context) FlowOutputEncryptionAlgorithmOutput {
	return o
}

func (o FlowOutputEncryptionAlgorithmOutput) ToFlowOutputEncryptionAlgorithmPtrOutput() FlowOutputEncryptionAlgorithmPtrOutput {
	return o.ToFlowOutputEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (o FlowOutputEncryptionAlgorithmOutput) ToFlowOutputEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowOutputEncryptionAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowOutputEncryptionAlgorithm) *FlowOutputEncryptionAlgorithm {
		return &v
	}).(FlowOutputEncryptionAlgorithmPtrOutput)
}

func (o FlowOutputEncryptionAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowOutputEncryptionAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowOutputEncryptionAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowOutputEncryptionAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowOutputEncryptionAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowOutputEncryptionAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowOutputEncryptionAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (FlowOutputEncryptionAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowOutputEncryptionAlgorithm)(nil)).Elem()
}

func (o FlowOutputEncryptionAlgorithmPtrOutput) ToFlowOutputEncryptionAlgorithmPtrOutput() FlowOutputEncryptionAlgorithmPtrOutput {
	return o
}

func (o FlowOutputEncryptionAlgorithmPtrOutput) ToFlowOutputEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowOutputEncryptionAlgorithmPtrOutput {
	return o
}

func (o FlowOutputEncryptionAlgorithmPtrOutput) Elem() FlowOutputEncryptionAlgorithmOutput {
	return o.ApplyT(func(v *FlowOutputEncryptionAlgorithm) FlowOutputEncryptionAlgorithm {
		if v != nil {
			return *v
		}
		var ret FlowOutputEncryptionAlgorithm
		return ret
	}).(FlowOutputEncryptionAlgorithmOutput)
}

func (o FlowOutputEncryptionAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowOutputEncryptionAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowOutputEncryptionAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowOutputEncryptionAlgorithmInput is an input type that accepts values of the FlowOutputEncryptionAlgorithm enum
// A concrete instance of `FlowOutputEncryptionAlgorithmInput` can be one of the following:
//
//	FlowOutputEncryptionAlgorithmAes128
//	FlowOutputEncryptionAlgorithmAes192
//	FlowOutputEncryptionAlgorithmAes256
type FlowOutputEncryptionAlgorithmInput interface {
	pulumi.Input

	ToFlowOutputEncryptionAlgorithmOutput() FlowOutputEncryptionAlgorithmOutput
	ToFlowOutputEncryptionAlgorithmOutputWithContext(context.Context) FlowOutputEncryptionAlgorithmOutput
}

var flowOutputEncryptionAlgorithmPtrType = reflect.TypeOf((**FlowOutputEncryptionAlgorithm)(nil)).Elem()

type FlowOutputEncryptionAlgorithmPtrInput interface {
	pulumi.Input

	ToFlowOutputEncryptionAlgorithmPtrOutput() FlowOutputEncryptionAlgorithmPtrOutput
	ToFlowOutputEncryptionAlgorithmPtrOutputWithContext(context.Context) FlowOutputEncryptionAlgorithmPtrOutput
}

type flowOutputEncryptionAlgorithmPtr string

func FlowOutputEncryptionAlgorithmPtr(v string) FlowOutputEncryptionAlgorithmPtrInput {
	return (*flowOutputEncryptionAlgorithmPtr)(&v)
}

func (*flowOutputEncryptionAlgorithmPtr) ElementType() reflect.Type {
	return flowOutputEncryptionAlgorithmPtrType
}

func (in *flowOutputEncryptionAlgorithmPtr) ToFlowOutputEncryptionAlgorithmPtrOutput() FlowOutputEncryptionAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(FlowOutputEncryptionAlgorithmPtrOutput)
}

func (in *flowOutputEncryptionAlgorithmPtr) ToFlowOutputEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowOutputEncryptionAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowOutputEncryptionAlgorithmPtrOutput)
}

// The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
type FlowOutputEncryptionKeyType string

const (
	FlowOutputEncryptionKeyTypeStaticKey   = FlowOutputEncryptionKeyType("static-key")
	FlowOutputEncryptionKeyTypeSrtPassword = FlowOutputEncryptionKeyType("srt-password")
)

func (FlowOutputEncryptionKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutputEncryptionKeyType)(nil)).Elem()
}

func (e FlowOutputEncryptionKeyType) ToFlowOutputEncryptionKeyTypeOutput() FlowOutputEncryptionKeyTypeOutput {
	return pulumi.ToOutput(e).(FlowOutputEncryptionKeyTypeOutput)
}

func (e FlowOutputEncryptionKeyType) ToFlowOutputEncryptionKeyTypeOutputWithContext(ctx context.Context) FlowOutputEncryptionKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowOutputEncryptionKeyTypeOutput)
}

func (e FlowOutputEncryptionKeyType) ToFlowOutputEncryptionKeyTypePtrOutput() FlowOutputEncryptionKeyTypePtrOutput {
	return e.ToFlowOutputEncryptionKeyTypePtrOutputWithContext(context.Background())
}

func (e FlowOutputEncryptionKeyType) ToFlowOutputEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowOutputEncryptionKeyTypePtrOutput {
	return FlowOutputEncryptionKeyType(e).ToFlowOutputEncryptionKeyTypeOutputWithContext(ctx).ToFlowOutputEncryptionKeyTypePtrOutputWithContext(ctx)
}

func (e FlowOutputEncryptionKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowOutputEncryptionKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowOutputEncryptionKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowOutputEncryptionKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowOutputEncryptionKeyTypeOutput struct{ *pulumi.OutputState }

func (FlowOutputEncryptionKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutputEncryptionKeyType)(nil)).Elem()
}

func (o FlowOutputEncryptionKeyTypeOutput) ToFlowOutputEncryptionKeyTypeOutput() FlowOutputEncryptionKeyTypeOutput {
	return o
}

func (o FlowOutputEncryptionKeyTypeOutput) ToFlowOutputEncryptionKeyTypeOutputWithContext(ctx context.Context) FlowOutputEncryptionKeyTypeOutput {
	return o
}

func (o FlowOutputEncryptionKeyTypeOutput) ToFlowOutputEncryptionKeyTypePtrOutput() FlowOutputEncryptionKeyTypePtrOutput {
	return o.ToFlowOutputEncryptionKeyTypePtrOutputWithContext(context.Background())
}

func (o FlowOutputEncryptionKeyTypeOutput) ToFlowOutputEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowOutputEncryptionKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowOutputEncryptionKeyType) *FlowOutputEncryptionKeyType {
		return &v
	}).(FlowOutputEncryptionKeyTypePtrOutput)
}

func (o FlowOutputEncryptionKeyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowOutputEncryptionKeyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowOutputEncryptionKeyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowOutputEncryptionKeyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowOutputEncryptionKeyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowOutputEncryptionKeyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowOutputEncryptionKeyTypePtrOutput struct{ *pulumi.OutputState }

func (FlowOutputEncryptionKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowOutputEncryptionKeyType)(nil)).Elem()
}

func (o FlowOutputEncryptionKeyTypePtrOutput) ToFlowOutputEncryptionKeyTypePtrOutput() FlowOutputEncryptionKeyTypePtrOutput {
	return o
}

func (o FlowOutputEncryptionKeyTypePtrOutput) ToFlowOutputEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowOutputEncryptionKeyTypePtrOutput {
	return o
}

func (o FlowOutputEncryptionKeyTypePtrOutput) Elem() FlowOutputEncryptionKeyTypeOutput {
	return o.ApplyT(func(v *FlowOutputEncryptionKeyType) FlowOutputEncryptionKeyType {
		if v != nil {
			return *v
		}
		var ret FlowOutputEncryptionKeyType
		return ret
	}).(FlowOutputEncryptionKeyTypeOutput)
}

func (o FlowOutputEncryptionKeyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowOutputEncryptionKeyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowOutputEncryptionKeyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowOutputEncryptionKeyTypeInput is an input type that accepts values of the FlowOutputEncryptionKeyType enum
// A concrete instance of `FlowOutputEncryptionKeyTypeInput` can be one of the following:
//
//	FlowOutputEncryptionKeyTypeStaticKey
//	FlowOutputEncryptionKeyTypeSrtPassword
type FlowOutputEncryptionKeyTypeInput interface {
	pulumi.Input

	ToFlowOutputEncryptionKeyTypeOutput() FlowOutputEncryptionKeyTypeOutput
	ToFlowOutputEncryptionKeyTypeOutputWithContext(context.Context) FlowOutputEncryptionKeyTypeOutput
}

var flowOutputEncryptionKeyTypePtrType = reflect.TypeOf((**FlowOutputEncryptionKeyType)(nil)).Elem()

type FlowOutputEncryptionKeyTypePtrInput interface {
	pulumi.Input

	ToFlowOutputEncryptionKeyTypePtrOutput() FlowOutputEncryptionKeyTypePtrOutput
	ToFlowOutputEncryptionKeyTypePtrOutputWithContext(context.Context) FlowOutputEncryptionKeyTypePtrOutput
}

type flowOutputEncryptionKeyTypePtr string

func FlowOutputEncryptionKeyTypePtr(v string) FlowOutputEncryptionKeyTypePtrInput {
	return (*flowOutputEncryptionKeyTypePtr)(&v)
}

func (*flowOutputEncryptionKeyTypePtr) ElementType() reflect.Type {
	return flowOutputEncryptionKeyTypePtrType
}

func (in *flowOutputEncryptionKeyTypePtr) ToFlowOutputEncryptionKeyTypePtrOutput() FlowOutputEncryptionKeyTypePtrOutput {
	return pulumi.ToOutput(in).(FlowOutputEncryptionKeyTypePtrOutput)
}

func (in *flowOutputEncryptionKeyTypePtr) ToFlowOutputEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowOutputEncryptionKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowOutputEncryptionKeyTypePtrOutput)
}

// The format that will be used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video streams on sources or outputs that use the CDI protocol, set the encoding name to raw. For video streams on sources or outputs that use the ST 2110 JPEG XS protocol, set the encoding name to jxsv.
type FlowOutputMediaStreamOutputConfigurationEncodingName string

const (
	FlowOutputMediaStreamOutputConfigurationEncodingNameJxsv     = FlowOutputMediaStreamOutputConfigurationEncodingName("jxsv")
	FlowOutputMediaStreamOutputConfigurationEncodingNameRaw      = FlowOutputMediaStreamOutputConfigurationEncodingName("raw")
	FlowOutputMediaStreamOutputConfigurationEncodingNameSmpte291 = FlowOutputMediaStreamOutputConfigurationEncodingName("smpte291")
	FlowOutputMediaStreamOutputConfigurationEncodingNamePcm      = FlowOutputMediaStreamOutputConfigurationEncodingName("pcm")
)

func (FlowOutputMediaStreamOutputConfigurationEncodingName) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutputMediaStreamOutputConfigurationEncodingName)(nil)).Elem()
}

func (e FlowOutputMediaStreamOutputConfigurationEncodingName) ToFlowOutputMediaStreamOutputConfigurationEncodingNameOutput() FlowOutputMediaStreamOutputConfigurationEncodingNameOutput {
	return pulumi.ToOutput(e).(FlowOutputMediaStreamOutputConfigurationEncodingNameOutput)
}

func (e FlowOutputMediaStreamOutputConfigurationEncodingName) ToFlowOutputMediaStreamOutputConfigurationEncodingNameOutputWithContext(ctx context.Context) FlowOutputMediaStreamOutputConfigurationEncodingNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowOutputMediaStreamOutputConfigurationEncodingNameOutput)
}

func (e FlowOutputMediaStreamOutputConfigurationEncodingName) ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput() FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput {
	return e.ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutputWithContext(context.Background())
}

func (e FlowOutputMediaStreamOutputConfigurationEncodingName) ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutputWithContext(ctx context.Context) FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput {
	return FlowOutputMediaStreamOutputConfigurationEncodingName(e).ToFlowOutputMediaStreamOutputConfigurationEncodingNameOutputWithContext(ctx).ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutputWithContext(ctx)
}

func (e FlowOutputMediaStreamOutputConfigurationEncodingName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowOutputMediaStreamOutputConfigurationEncodingName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowOutputMediaStreamOutputConfigurationEncodingName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowOutputMediaStreamOutputConfigurationEncodingName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowOutputMediaStreamOutputConfigurationEncodingNameOutput struct{ *pulumi.OutputState }

func (FlowOutputMediaStreamOutputConfigurationEncodingNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutputMediaStreamOutputConfigurationEncodingName)(nil)).Elem()
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNameOutput) ToFlowOutputMediaStreamOutputConfigurationEncodingNameOutput() FlowOutputMediaStreamOutputConfigurationEncodingNameOutput {
	return o
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNameOutput) ToFlowOutputMediaStreamOutputConfigurationEncodingNameOutputWithContext(ctx context.Context) FlowOutputMediaStreamOutputConfigurationEncodingNameOutput {
	return o
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNameOutput) ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput() FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput {
	return o.ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutputWithContext(context.Background())
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNameOutput) ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutputWithContext(ctx context.Context) FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowOutputMediaStreamOutputConfigurationEncodingName) *FlowOutputMediaStreamOutputConfigurationEncodingName {
		return &v
	}).(FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput)
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowOutputMediaStreamOutputConfigurationEncodingName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowOutputMediaStreamOutputConfigurationEncodingName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput struct{ *pulumi.OutputState }

func (FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowOutputMediaStreamOutputConfigurationEncodingName)(nil)).Elem()
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput) ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput() FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput {
	return o
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput) ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutputWithContext(ctx context.Context) FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput {
	return o
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput) Elem() FlowOutputMediaStreamOutputConfigurationEncodingNameOutput {
	return o.ApplyT(func(v *FlowOutputMediaStreamOutputConfigurationEncodingName) FlowOutputMediaStreamOutputConfigurationEncodingName {
		if v != nil {
			return *v
		}
		var ret FlowOutputMediaStreamOutputConfigurationEncodingName
		return ret
	}).(FlowOutputMediaStreamOutputConfigurationEncodingNameOutput)
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowOutputMediaStreamOutputConfigurationEncodingName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowOutputMediaStreamOutputConfigurationEncodingNameInput is an input type that accepts values of the FlowOutputMediaStreamOutputConfigurationEncodingName enum
// A concrete instance of `FlowOutputMediaStreamOutputConfigurationEncodingNameInput` can be one of the following:
//
//	FlowOutputMediaStreamOutputConfigurationEncodingNameJxsv
//	FlowOutputMediaStreamOutputConfigurationEncodingNameRaw
//	FlowOutputMediaStreamOutputConfigurationEncodingNameSmpte291
//	FlowOutputMediaStreamOutputConfigurationEncodingNamePcm
type FlowOutputMediaStreamOutputConfigurationEncodingNameInput interface {
	pulumi.Input

	ToFlowOutputMediaStreamOutputConfigurationEncodingNameOutput() FlowOutputMediaStreamOutputConfigurationEncodingNameOutput
	ToFlowOutputMediaStreamOutputConfigurationEncodingNameOutputWithContext(context.Context) FlowOutputMediaStreamOutputConfigurationEncodingNameOutput
}

var flowOutputMediaStreamOutputConfigurationEncodingNamePtrType = reflect.TypeOf((**FlowOutputMediaStreamOutputConfigurationEncodingName)(nil)).Elem()

type FlowOutputMediaStreamOutputConfigurationEncodingNamePtrInput interface {
	pulumi.Input

	ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput() FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput
	ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutputWithContext(context.Context) FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput
}

type flowOutputMediaStreamOutputConfigurationEncodingNamePtr string

func FlowOutputMediaStreamOutputConfigurationEncodingNamePtr(v string) FlowOutputMediaStreamOutputConfigurationEncodingNamePtrInput {
	return (*flowOutputMediaStreamOutputConfigurationEncodingNamePtr)(&v)
}

func (*flowOutputMediaStreamOutputConfigurationEncodingNamePtr) ElementType() reflect.Type {
	return flowOutputMediaStreamOutputConfigurationEncodingNamePtrType
}

func (in *flowOutputMediaStreamOutputConfigurationEncodingNamePtr) ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput() FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput {
	return pulumi.ToOutput(in).(FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput)
}

func (in *flowOutputMediaStreamOutputConfigurationEncodingNamePtr) ToFlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutputWithContext(ctx context.Context) FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput)
}

// The protocol that is used by the source or output.
type FlowOutputProtocol string

const (
	FlowOutputProtocolZixiPush     = FlowOutputProtocol("zixi-push")
	FlowOutputProtocolRtpFec       = FlowOutputProtocol("rtp-fec")
	FlowOutputProtocolRtp          = FlowOutputProtocol("rtp")
	FlowOutputProtocolZixiPull     = FlowOutputProtocol("zixi-pull")
	FlowOutputProtocolRist         = FlowOutputProtocol("rist")
	FlowOutputProtocolFujitsuQos   = FlowOutputProtocol("fujitsu-qos")
	FlowOutputProtocolSrtListener  = FlowOutputProtocol("srt-listener")
	FlowOutputProtocolSrtCaller    = FlowOutputProtocol("srt-caller")
	FlowOutputProtocolSt2110Jpegxs = FlowOutputProtocol("st2110-jpegxs")
	FlowOutputProtocolCdi          = FlowOutputProtocol("cdi")
)

func (FlowOutputProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutputProtocol)(nil)).Elem()
}

func (e FlowOutputProtocol) ToFlowOutputProtocolOutput() FlowOutputProtocolOutput {
	return pulumi.ToOutput(e).(FlowOutputProtocolOutput)
}

func (e FlowOutputProtocol) ToFlowOutputProtocolOutputWithContext(ctx context.Context) FlowOutputProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowOutputProtocolOutput)
}

func (e FlowOutputProtocol) ToFlowOutputProtocolPtrOutput() FlowOutputProtocolPtrOutput {
	return e.ToFlowOutputProtocolPtrOutputWithContext(context.Background())
}

func (e FlowOutputProtocol) ToFlowOutputProtocolPtrOutputWithContext(ctx context.Context) FlowOutputProtocolPtrOutput {
	return FlowOutputProtocol(e).ToFlowOutputProtocolOutputWithContext(ctx).ToFlowOutputProtocolPtrOutputWithContext(ctx)
}

func (e FlowOutputProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowOutputProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowOutputProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowOutputProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowOutputProtocolOutput struct{ *pulumi.OutputState }

func (FlowOutputProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowOutputProtocol)(nil)).Elem()
}

func (o FlowOutputProtocolOutput) ToFlowOutputProtocolOutput() FlowOutputProtocolOutput {
	return o
}

func (o FlowOutputProtocolOutput) ToFlowOutputProtocolOutputWithContext(ctx context.Context) FlowOutputProtocolOutput {
	return o
}

func (o FlowOutputProtocolOutput) ToFlowOutputProtocolPtrOutput() FlowOutputProtocolPtrOutput {
	return o.ToFlowOutputProtocolPtrOutputWithContext(context.Background())
}

func (o FlowOutputProtocolOutput) ToFlowOutputProtocolPtrOutputWithContext(ctx context.Context) FlowOutputProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowOutputProtocol) *FlowOutputProtocol {
		return &v
	}).(FlowOutputProtocolPtrOutput)
}

func (o FlowOutputProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowOutputProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowOutputProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowOutputProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowOutputProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowOutputProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowOutputProtocolPtrOutput struct{ *pulumi.OutputState }

func (FlowOutputProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowOutputProtocol)(nil)).Elem()
}

func (o FlowOutputProtocolPtrOutput) ToFlowOutputProtocolPtrOutput() FlowOutputProtocolPtrOutput {
	return o
}

func (o FlowOutputProtocolPtrOutput) ToFlowOutputProtocolPtrOutputWithContext(ctx context.Context) FlowOutputProtocolPtrOutput {
	return o
}

func (o FlowOutputProtocolPtrOutput) Elem() FlowOutputProtocolOutput {
	return o.ApplyT(func(v *FlowOutputProtocol) FlowOutputProtocol {
		if v != nil {
			return *v
		}
		var ret FlowOutputProtocol
		return ret
	}).(FlowOutputProtocolOutput)
}

func (o FlowOutputProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowOutputProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowOutputProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowOutputProtocolInput is an input type that accepts values of the FlowOutputProtocol enum
// A concrete instance of `FlowOutputProtocolInput` can be one of the following:
//
//	FlowOutputProtocolZixiPush
//	FlowOutputProtocolRtpFec
//	FlowOutputProtocolRtp
//	FlowOutputProtocolZixiPull
//	FlowOutputProtocolRist
//	FlowOutputProtocolFujitsuQos
//	FlowOutputProtocolSrtListener
//	FlowOutputProtocolSrtCaller
//	FlowOutputProtocolSt2110Jpegxs
//	FlowOutputProtocolCdi
type FlowOutputProtocolInput interface {
	pulumi.Input

	ToFlowOutputProtocolOutput() FlowOutputProtocolOutput
	ToFlowOutputProtocolOutputWithContext(context.Context) FlowOutputProtocolOutput
}

var flowOutputProtocolPtrType = reflect.TypeOf((**FlowOutputProtocol)(nil)).Elem()

type FlowOutputProtocolPtrInput interface {
	pulumi.Input

	ToFlowOutputProtocolPtrOutput() FlowOutputProtocolPtrOutput
	ToFlowOutputProtocolPtrOutputWithContext(context.Context) FlowOutputProtocolPtrOutput
}

type flowOutputProtocolPtr string

func FlowOutputProtocolPtr(v string) FlowOutputProtocolPtrInput {
	return (*flowOutputProtocolPtr)(&v)
}

func (*flowOutputProtocolPtr) ElementType() reflect.Type {
	return flowOutputProtocolPtrType
}

func (in *flowOutputProtocolPtr) ToFlowOutputProtocolPtrOutput() FlowOutputProtocolPtrOutput {
	return pulumi.ToOutput(in).(FlowOutputProtocolPtrOutput)
}

func (in *flowOutputProtocolPtr) ToFlowOutputProtocolPtrOutputWithContext(ctx context.Context) FlowOutputProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowOutputProtocolPtrOutput)
}

// The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).
type FlowSourceEncryptionAlgorithm string

const (
	FlowSourceEncryptionAlgorithmAes128 = FlowSourceEncryptionAlgorithm("aes128")
	FlowSourceEncryptionAlgorithmAes192 = FlowSourceEncryptionAlgorithm("aes192")
	FlowSourceEncryptionAlgorithmAes256 = FlowSourceEncryptionAlgorithm("aes256")
)

func (FlowSourceEncryptionAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceEncryptionAlgorithm)(nil)).Elem()
}

func (e FlowSourceEncryptionAlgorithm) ToFlowSourceEncryptionAlgorithmOutput() FlowSourceEncryptionAlgorithmOutput {
	return pulumi.ToOutput(e).(FlowSourceEncryptionAlgorithmOutput)
}

func (e FlowSourceEncryptionAlgorithm) ToFlowSourceEncryptionAlgorithmOutputWithContext(ctx context.Context) FlowSourceEncryptionAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowSourceEncryptionAlgorithmOutput)
}

func (e FlowSourceEncryptionAlgorithm) ToFlowSourceEncryptionAlgorithmPtrOutput() FlowSourceEncryptionAlgorithmPtrOutput {
	return e.ToFlowSourceEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (e FlowSourceEncryptionAlgorithm) ToFlowSourceEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowSourceEncryptionAlgorithmPtrOutput {
	return FlowSourceEncryptionAlgorithm(e).ToFlowSourceEncryptionAlgorithmOutputWithContext(ctx).ToFlowSourceEncryptionAlgorithmPtrOutputWithContext(ctx)
}

func (e FlowSourceEncryptionAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowSourceEncryptionAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowSourceEncryptionAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowSourceEncryptionAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowSourceEncryptionAlgorithmOutput struct{ *pulumi.OutputState }

func (FlowSourceEncryptionAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceEncryptionAlgorithm)(nil)).Elem()
}

func (o FlowSourceEncryptionAlgorithmOutput) ToFlowSourceEncryptionAlgorithmOutput() FlowSourceEncryptionAlgorithmOutput {
	return o
}

func (o FlowSourceEncryptionAlgorithmOutput) ToFlowSourceEncryptionAlgorithmOutputWithContext(ctx context.Context) FlowSourceEncryptionAlgorithmOutput {
	return o
}

func (o FlowSourceEncryptionAlgorithmOutput) ToFlowSourceEncryptionAlgorithmPtrOutput() FlowSourceEncryptionAlgorithmPtrOutput {
	return o.ToFlowSourceEncryptionAlgorithmPtrOutputWithContext(context.Background())
}

func (o FlowSourceEncryptionAlgorithmOutput) ToFlowSourceEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowSourceEncryptionAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceEncryptionAlgorithm) *FlowSourceEncryptionAlgorithm {
		return &v
	}).(FlowSourceEncryptionAlgorithmPtrOutput)
}

func (o FlowSourceEncryptionAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowSourceEncryptionAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowSourceEncryptionAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowSourceEncryptionAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowSourceEncryptionAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowSourceEncryptionAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowSourceEncryptionAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceEncryptionAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceEncryptionAlgorithm)(nil)).Elem()
}

func (o FlowSourceEncryptionAlgorithmPtrOutput) ToFlowSourceEncryptionAlgorithmPtrOutput() FlowSourceEncryptionAlgorithmPtrOutput {
	return o
}

func (o FlowSourceEncryptionAlgorithmPtrOutput) ToFlowSourceEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowSourceEncryptionAlgorithmPtrOutput {
	return o
}

func (o FlowSourceEncryptionAlgorithmPtrOutput) Elem() FlowSourceEncryptionAlgorithmOutput {
	return o.ApplyT(func(v *FlowSourceEncryptionAlgorithm) FlowSourceEncryptionAlgorithm {
		if v != nil {
			return *v
		}
		var ret FlowSourceEncryptionAlgorithm
		return ret
	}).(FlowSourceEncryptionAlgorithmOutput)
}

func (o FlowSourceEncryptionAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowSourceEncryptionAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowSourceEncryptionAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowSourceEncryptionAlgorithmInput is an input type that accepts values of the FlowSourceEncryptionAlgorithm enum
// A concrete instance of `FlowSourceEncryptionAlgorithmInput` can be one of the following:
//
//	FlowSourceEncryptionAlgorithmAes128
//	FlowSourceEncryptionAlgorithmAes192
//	FlowSourceEncryptionAlgorithmAes256
type FlowSourceEncryptionAlgorithmInput interface {
	pulumi.Input

	ToFlowSourceEncryptionAlgorithmOutput() FlowSourceEncryptionAlgorithmOutput
	ToFlowSourceEncryptionAlgorithmOutputWithContext(context.Context) FlowSourceEncryptionAlgorithmOutput
}

var flowSourceEncryptionAlgorithmPtrType = reflect.TypeOf((**FlowSourceEncryptionAlgorithm)(nil)).Elem()

type FlowSourceEncryptionAlgorithmPtrInput interface {
	pulumi.Input

	ToFlowSourceEncryptionAlgorithmPtrOutput() FlowSourceEncryptionAlgorithmPtrOutput
	ToFlowSourceEncryptionAlgorithmPtrOutputWithContext(context.Context) FlowSourceEncryptionAlgorithmPtrOutput
}

type flowSourceEncryptionAlgorithmPtr string

func FlowSourceEncryptionAlgorithmPtr(v string) FlowSourceEncryptionAlgorithmPtrInput {
	return (*flowSourceEncryptionAlgorithmPtr)(&v)
}

func (*flowSourceEncryptionAlgorithmPtr) ElementType() reflect.Type {
	return flowSourceEncryptionAlgorithmPtrType
}

func (in *flowSourceEncryptionAlgorithmPtr) ToFlowSourceEncryptionAlgorithmPtrOutput() FlowSourceEncryptionAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(FlowSourceEncryptionAlgorithmPtrOutput)
}

func (in *flowSourceEncryptionAlgorithmPtr) ToFlowSourceEncryptionAlgorithmPtrOutputWithContext(ctx context.Context) FlowSourceEncryptionAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowSourceEncryptionAlgorithmPtrOutput)
}

// The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).
type FlowSourceEncryptionKeyType string

const (
	FlowSourceEncryptionKeyTypeSpeke       = FlowSourceEncryptionKeyType("speke")
	FlowSourceEncryptionKeyTypeStaticKey   = FlowSourceEncryptionKeyType("static-key")
	FlowSourceEncryptionKeyTypeSrtPassword = FlowSourceEncryptionKeyType("srt-password")
)

func (FlowSourceEncryptionKeyType) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceEncryptionKeyType)(nil)).Elem()
}

func (e FlowSourceEncryptionKeyType) ToFlowSourceEncryptionKeyTypeOutput() FlowSourceEncryptionKeyTypeOutput {
	return pulumi.ToOutput(e).(FlowSourceEncryptionKeyTypeOutput)
}

func (e FlowSourceEncryptionKeyType) ToFlowSourceEncryptionKeyTypeOutputWithContext(ctx context.Context) FlowSourceEncryptionKeyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowSourceEncryptionKeyTypeOutput)
}

func (e FlowSourceEncryptionKeyType) ToFlowSourceEncryptionKeyTypePtrOutput() FlowSourceEncryptionKeyTypePtrOutput {
	return e.ToFlowSourceEncryptionKeyTypePtrOutputWithContext(context.Background())
}

func (e FlowSourceEncryptionKeyType) ToFlowSourceEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowSourceEncryptionKeyTypePtrOutput {
	return FlowSourceEncryptionKeyType(e).ToFlowSourceEncryptionKeyTypeOutputWithContext(ctx).ToFlowSourceEncryptionKeyTypePtrOutputWithContext(ctx)
}

func (e FlowSourceEncryptionKeyType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowSourceEncryptionKeyType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowSourceEncryptionKeyType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowSourceEncryptionKeyType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowSourceEncryptionKeyTypeOutput struct{ *pulumi.OutputState }

func (FlowSourceEncryptionKeyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceEncryptionKeyType)(nil)).Elem()
}

func (o FlowSourceEncryptionKeyTypeOutput) ToFlowSourceEncryptionKeyTypeOutput() FlowSourceEncryptionKeyTypeOutput {
	return o
}

func (o FlowSourceEncryptionKeyTypeOutput) ToFlowSourceEncryptionKeyTypeOutputWithContext(ctx context.Context) FlowSourceEncryptionKeyTypeOutput {
	return o
}

func (o FlowSourceEncryptionKeyTypeOutput) ToFlowSourceEncryptionKeyTypePtrOutput() FlowSourceEncryptionKeyTypePtrOutput {
	return o.ToFlowSourceEncryptionKeyTypePtrOutputWithContext(context.Background())
}

func (o FlowSourceEncryptionKeyTypeOutput) ToFlowSourceEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowSourceEncryptionKeyTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceEncryptionKeyType) *FlowSourceEncryptionKeyType {
		return &v
	}).(FlowSourceEncryptionKeyTypePtrOutput)
}

func (o FlowSourceEncryptionKeyTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowSourceEncryptionKeyTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowSourceEncryptionKeyType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowSourceEncryptionKeyTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowSourceEncryptionKeyTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowSourceEncryptionKeyType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowSourceEncryptionKeyTypePtrOutput struct{ *pulumi.OutputState }

func (FlowSourceEncryptionKeyTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceEncryptionKeyType)(nil)).Elem()
}

func (o FlowSourceEncryptionKeyTypePtrOutput) ToFlowSourceEncryptionKeyTypePtrOutput() FlowSourceEncryptionKeyTypePtrOutput {
	return o
}

func (o FlowSourceEncryptionKeyTypePtrOutput) ToFlowSourceEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowSourceEncryptionKeyTypePtrOutput {
	return o
}

func (o FlowSourceEncryptionKeyTypePtrOutput) Elem() FlowSourceEncryptionKeyTypeOutput {
	return o.ApplyT(func(v *FlowSourceEncryptionKeyType) FlowSourceEncryptionKeyType {
		if v != nil {
			return *v
		}
		var ret FlowSourceEncryptionKeyType
		return ret
	}).(FlowSourceEncryptionKeyTypeOutput)
}

func (o FlowSourceEncryptionKeyTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowSourceEncryptionKeyTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowSourceEncryptionKeyType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowSourceEncryptionKeyTypeInput is an input type that accepts values of the FlowSourceEncryptionKeyType enum
// A concrete instance of `FlowSourceEncryptionKeyTypeInput` can be one of the following:
//
//	FlowSourceEncryptionKeyTypeSpeke
//	FlowSourceEncryptionKeyTypeStaticKey
//	FlowSourceEncryptionKeyTypeSrtPassword
type FlowSourceEncryptionKeyTypeInput interface {
	pulumi.Input

	ToFlowSourceEncryptionKeyTypeOutput() FlowSourceEncryptionKeyTypeOutput
	ToFlowSourceEncryptionKeyTypeOutputWithContext(context.Context) FlowSourceEncryptionKeyTypeOutput
}

var flowSourceEncryptionKeyTypePtrType = reflect.TypeOf((**FlowSourceEncryptionKeyType)(nil)).Elem()

type FlowSourceEncryptionKeyTypePtrInput interface {
	pulumi.Input

	ToFlowSourceEncryptionKeyTypePtrOutput() FlowSourceEncryptionKeyTypePtrOutput
	ToFlowSourceEncryptionKeyTypePtrOutputWithContext(context.Context) FlowSourceEncryptionKeyTypePtrOutput
}

type flowSourceEncryptionKeyTypePtr string

func FlowSourceEncryptionKeyTypePtr(v string) FlowSourceEncryptionKeyTypePtrInput {
	return (*flowSourceEncryptionKeyTypePtr)(&v)
}

func (*flowSourceEncryptionKeyTypePtr) ElementType() reflect.Type {
	return flowSourceEncryptionKeyTypePtrType
}

func (in *flowSourceEncryptionKeyTypePtr) ToFlowSourceEncryptionKeyTypePtrOutput() FlowSourceEncryptionKeyTypePtrOutput {
	return pulumi.ToOutput(in).(FlowSourceEncryptionKeyTypePtrOutput)
}

func (in *flowSourceEncryptionKeyTypePtr) ToFlowSourceEncryptionKeyTypePtrOutputWithContext(ctx context.Context) FlowSourceEncryptionKeyTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowSourceEncryptionKeyTypePtrOutput)
}

// The protocol that is used by the source.
type FlowSourceProtocol string

const (
	FlowSourceProtocolZixiPush     = FlowSourceProtocol("zixi-push")
	FlowSourceProtocolRtpFec       = FlowSourceProtocol("rtp-fec")
	FlowSourceProtocolRtp          = FlowSourceProtocol("rtp")
	FlowSourceProtocolRist         = FlowSourceProtocol("rist")
	FlowSourceProtocolFujitsuQos   = FlowSourceProtocol("fujitsu-qos")
	FlowSourceProtocolSrtListener  = FlowSourceProtocol("srt-listener")
	FlowSourceProtocolSrtCaller    = FlowSourceProtocol("srt-caller")
	FlowSourceProtocolSt2110Jpegxs = FlowSourceProtocol("st2110-jpegxs")
	FlowSourceProtocolCdi          = FlowSourceProtocol("cdi")
)

func (FlowSourceProtocol) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceProtocol)(nil)).Elem()
}

func (e FlowSourceProtocol) ToFlowSourceProtocolOutput() FlowSourceProtocolOutput {
	return pulumi.ToOutput(e).(FlowSourceProtocolOutput)
}

func (e FlowSourceProtocol) ToFlowSourceProtocolOutputWithContext(ctx context.Context) FlowSourceProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowSourceProtocolOutput)
}

func (e FlowSourceProtocol) ToFlowSourceProtocolPtrOutput() FlowSourceProtocolPtrOutput {
	return e.ToFlowSourceProtocolPtrOutputWithContext(context.Background())
}

func (e FlowSourceProtocol) ToFlowSourceProtocolPtrOutputWithContext(ctx context.Context) FlowSourceProtocolPtrOutput {
	return FlowSourceProtocol(e).ToFlowSourceProtocolOutputWithContext(ctx).ToFlowSourceProtocolPtrOutputWithContext(ctx)
}

func (e FlowSourceProtocol) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowSourceProtocol) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowSourceProtocol) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowSourceProtocol) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowSourceProtocolOutput struct{ *pulumi.OutputState }

func (FlowSourceProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowSourceProtocol)(nil)).Elem()
}

func (o FlowSourceProtocolOutput) ToFlowSourceProtocolOutput() FlowSourceProtocolOutput {
	return o
}

func (o FlowSourceProtocolOutput) ToFlowSourceProtocolOutputWithContext(ctx context.Context) FlowSourceProtocolOutput {
	return o
}

func (o FlowSourceProtocolOutput) ToFlowSourceProtocolPtrOutput() FlowSourceProtocolPtrOutput {
	return o.ToFlowSourceProtocolPtrOutputWithContext(context.Background())
}

func (o FlowSourceProtocolOutput) ToFlowSourceProtocolPtrOutputWithContext(ctx context.Context) FlowSourceProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowSourceProtocol) *FlowSourceProtocol {
		return &v
	}).(FlowSourceProtocolPtrOutput)
}

func (o FlowSourceProtocolOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowSourceProtocolOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowSourceProtocol) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowSourceProtocolOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowSourceProtocolOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowSourceProtocol) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowSourceProtocolPtrOutput struct{ *pulumi.OutputState }

func (FlowSourceProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowSourceProtocol)(nil)).Elem()
}

func (o FlowSourceProtocolPtrOutput) ToFlowSourceProtocolPtrOutput() FlowSourceProtocolPtrOutput {
	return o
}

func (o FlowSourceProtocolPtrOutput) ToFlowSourceProtocolPtrOutputWithContext(ctx context.Context) FlowSourceProtocolPtrOutput {
	return o
}

func (o FlowSourceProtocolPtrOutput) Elem() FlowSourceProtocolOutput {
	return o.ApplyT(func(v *FlowSourceProtocol) FlowSourceProtocol {
		if v != nil {
			return *v
		}
		var ret FlowSourceProtocol
		return ret
	}).(FlowSourceProtocolOutput)
}

func (o FlowSourceProtocolPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowSourceProtocolPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowSourceProtocol) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowSourceProtocolInput is an input type that accepts values of the FlowSourceProtocol enum
// A concrete instance of `FlowSourceProtocolInput` can be one of the following:
//
//	FlowSourceProtocolZixiPush
//	FlowSourceProtocolRtpFec
//	FlowSourceProtocolRtp
//	FlowSourceProtocolRist
//	FlowSourceProtocolFujitsuQos
//	FlowSourceProtocolSrtListener
//	FlowSourceProtocolSrtCaller
//	FlowSourceProtocolSt2110Jpegxs
//	FlowSourceProtocolCdi
type FlowSourceProtocolInput interface {
	pulumi.Input

	ToFlowSourceProtocolOutput() FlowSourceProtocolOutput
	ToFlowSourceProtocolOutputWithContext(context.Context) FlowSourceProtocolOutput
}

var flowSourceProtocolPtrType = reflect.TypeOf((**FlowSourceProtocol)(nil)).Elem()

type FlowSourceProtocolPtrInput interface {
	pulumi.Input

	ToFlowSourceProtocolPtrOutput() FlowSourceProtocolPtrOutput
	ToFlowSourceProtocolPtrOutputWithContext(context.Context) FlowSourceProtocolPtrOutput
}

type flowSourceProtocolPtr string

func FlowSourceProtocolPtr(v string) FlowSourceProtocolPtrInput {
	return (*flowSourceProtocolPtr)(&v)
}

func (*flowSourceProtocolPtr) ElementType() reflect.Type {
	return flowSourceProtocolPtrType
}

func (in *flowSourceProtocolPtr) ToFlowSourceProtocolPtrOutput() FlowSourceProtocolPtrOutput {
	return pulumi.ToOutput(in).(FlowSourceProtocolPtrOutput)
}

func (in *flowSourceProtocolPtr) ToFlowSourceProtocolPtrOutputWithContext(ctx context.Context) FlowSourceProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowSourceProtocolPtrOutput)
}

// The type of network adapter that you want MediaConnect to use on this interface. If you don't set this value, it defaults to ENA.
type FlowVpcInterfaceNetworkInterfaceType string

const (
	FlowVpcInterfaceNetworkInterfaceTypeEna = FlowVpcInterfaceNetworkInterfaceType("ena")
	FlowVpcInterfaceNetworkInterfaceTypeEfa = FlowVpcInterfaceNetworkInterfaceType("efa")
)

func (FlowVpcInterfaceNetworkInterfaceType) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVpcInterfaceNetworkInterfaceType)(nil)).Elem()
}

func (e FlowVpcInterfaceNetworkInterfaceType) ToFlowVpcInterfaceNetworkInterfaceTypeOutput() FlowVpcInterfaceNetworkInterfaceTypeOutput {
	return pulumi.ToOutput(e).(FlowVpcInterfaceNetworkInterfaceTypeOutput)
}

func (e FlowVpcInterfaceNetworkInterfaceType) ToFlowVpcInterfaceNetworkInterfaceTypeOutputWithContext(ctx context.Context) FlowVpcInterfaceNetworkInterfaceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FlowVpcInterfaceNetworkInterfaceTypeOutput)
}

func (e FlowVpcInterfaceNetworkInterfaceType) ToFlowVpcInterfaceNetworkInterfaceTypePtrOutput() FlowVpcInterfaceNetworkInterfaceTypePtrOutput {
	return e.ToFlowVpcInterfaceNetworkInterfaceTypePtrOutputWithContext(context.Background())
}

func (e FlowVpcInterfaceNetworkInterfaceType) ToFlowVpcInterfaceNetworkInterfaceTypePtrOutputWithContext(ctx context.Context) FlowVpcInterfaceNetworkInterfaceTypePtrOutput {
	return FlowVpcInterfaceNetworkInterfaceType(e).ToFlowVpcInterfaceNetworkInterfaceTypeOutputWithContext(ctx).ToFlowVpcInterfaceNetworkInterfaceTypePtrOutputWithContext(ctx)
}

func (e FlowVpcInterfaceNetworkInterfaceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowVpcInterfaceNetworkInterfaceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FlowVpcInterfaceNetworkInterfaceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FlowVpcInterfaceNetworkInterfaceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FlowVpcInterfaceNetworkInterfaceTypeOutput struct{ *pulumi.OutputState }

func (FlowVpcInterfaceNetworkInterfaceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FlowVpcInterfaceNetworkInterfaceType)(nil)).Elem()
}

func (o FlowVpcInterfaceNetworkInterfaceTypeOutput) ToFlowVpcInterfaceNetworkInterfaceTypeOutput() FlowVpcInterfaceNetworkInterfaceTypeOutput {
	return o
}

func (o FlowVpcInterfaceNetworkInterfaceTypeOutput) ToFlowVpcInterfaceNetworkInterfaceTypeOutputWithContext(ctx context.Context) FlowVpcInterfaceNetworkInterfaceTypeOutput {
	return o
}

func (o FlowVpcInterfaceNetworkInterfaceTypeOutput) ToFlowVpcInterfaceNetworkInterfaceTypePtrOutput() FlowVpcInterfaceNetworkInterfaceTypePtrOutput {
	return o.ToFlowVpcInterfaceNetworkInterfaceTypePtrOutputWithContext(context.Background())
}

func (o FlowVpcInterfaceNetworkInterfaceTypeOutput) ToFlowVpcInterfaceNetworkInterfaceTypePtrOutputWithContext(ctx context.Context) FlowVpcInterfaceNetworkInterfaceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FlowVpcInterfaceNetworkInterfaceType) *FlowVpcInterfaceNetworkInterfaceType {
		return &v
	}).(FlowVpcInterfaceNetworkInterfaceTypePtrOutput)
}

func (o FlowVpcInterfaceNetworkInterfaceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FlowVpcInterfaceNetworkInterfaceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowVpcInterfaceNetworkInterfaceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FlowVpcInterfaceNetworkInterfaceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowVpcInterfaceNetworkInterfaceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FlowVpcInterfaceNetworkInterfaceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FlowVpcInterfaceNetworkInterfaceTypePtrOutput struct{ *pulumi.OutputState }

func (FlowVpcInterfaceNetworkInterfaceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FlowVpcInterfaceNetworkInterfaceType)(nil)).Elem()
}

func (o FlowVpcInterfaceNetworkInterfaceTypePtrOutput) ToFlowVpcInterfaceNetworkInterfaceTypePtrOutput() FlowVpcInterfaceNetworkInterfaceTypePtrOutput {
	return o
}

func (o FlowVpcInterfaceNetworkInterfaceTypePtrOutput) ToFlowVpcInterfaceNetworkInterfaceTypePtrOutputWithContext(ctx context.Context) FlowVpcInterfaceNetworkInterfaceTypePtrOutput {
	return o
}

func (o FlowVpcInterfaceNetworkInterfaceTypePtrOutput) Elem() FlowVpcInterfaceNetworkInterfaceTypeOutput {
	return o.ApplyT(func(v *FlowVpcInterfaceNetworkInterfaceType) FlowVpcInterfaceNetworkInterfaceType {
		if v != nil {
			return *v
		}
		var ret FlowVpcInterfaceNetworkInterfaceType
		return ret
	}).(FlowVpcInterfaceNetworkInterfaceTypeOutput)
}

func (o FlowVpcInterfaceNetworkInterfaceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FlowVpcInterfaceNetworkInterfaceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FlowVpcInterfaceNetworkInterfaceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FlowVpcInterfaceNetworkInterfaceTypeInput is an input type that accepts values of the FlowVpcInterfaceNetworkInterfaceType enum
// A concrete instance of `FlowVpcInterfaceNetworkInterfaceTypeInput` can be one of the following:
//
//	FlowVpcInterfaceNetworkInterfaceTypeEna
//	FlowVpcInterfaceNetworkInterfaceTypeEfa
type FlowVpcInterfaceNetworkInterfaceTypeInput interface {
	pulumi.Input

	ToFlowVpcInterfaceNetworkInterfaceTypeOutput() FlowVpcInterfaceNetworkInterfaceTypeOutput
	ToFlowVpcInterfaceNetworkInterfaceTypeOutputWithContext(context.Context) FlowVpcInterfaceNetworkInterfaceTypeOutput
}

var flowVpcInterfaceNetworkInterfaceTypePtrType = reflect.TypeOf((**FlowVpcInterfaceNetworkInterfaceType)(nil)).Elem()

type FlowVpcInterfaceNetworkInterfaceTypePtrInput interface {
	pulumi.Input

	ToFlowVpcInterfaceNetworkInterfaceTypePtrOutput() FlowVpcInterfaceNetworkInterfaceTypePtrOutput
	ToFlowVpcInterfaceNetworkInterfaceTypePtrOutputWithContext(context.Context) FlowVpcInterfaceNetworkInterfaceTypePtrOutput
}

type flowVpcInterfaceNetworkInterfaceTypePtr string

func FlowVpcInterfaceNetworkInterfaceTypePtr(v string) FlowVpcInterfaceNetworkInterfaceTypePtrInput {
	return (*flowVpcInterfaceNetworkInterfaceTypePtr)(&v)
}

func (*flowVpcInterfaceNetworkInterfaceTypePtr) ElementType() reflect.Type {
	return flowVpcInterfaceNetworkInterfaceTypePtrType
}

func (in *flowVpcInterfaceNetworkInterfaceTypePtr) ToFlowVpcInterfaceNetworkInterfaceTypePtrOutput() FlowVpcInterfaceNetworkInterfaceTypePtrOutput {
	return pulumi.ToOutput(in).(FlowVpcInterfaceNetworkInterfaceTypePtrOutput)
}

func (in *flowVpcInterfaceNetworkInterfaceTypePtr) ToFlowVpcInterfaceNetworkInterfaceTypePtrOutputWithContext(ctx context.Context) FlowVpcInterfaceNetworkInterfaceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FlowVpcInterfaceNetworkInterfaceTypePtrOutput)
}

// The current status of the gateway.
type GatewayStateEnum string

const (
	GatewayStateEnumCreating = GatewayStateEnum("CREATING")
	GatewayStateEnumActive   = GatewayStateEnum("ACTIVE")
	GatewayStateEnumUpdating = GatewayStateEnum("UPDATING")
	GatewayStateEnumError    = GatewayStateEnum("ERROR")
	GatewayStateEnumDeleting = GatewayStateEnum("DELETING")
	GatewayStateEnumDeleted  = GatewayStateEnum("DELETED")
)

type GatewayStateEnumOutput struct{ *pulumi.OutputState }

func (GatewayStateEnumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayStateEnum)(nil)).Elem()
}

func (o GatewayStateEnumOutput) ToGatewayStateEnumOutput() GatewayStateEnumOutput {
	return o
}

func (o GatewayStateEnumOutput) ToGatewayStateEnumOutputWithContext(ctx context.Context) GatewayStateEnumOutput {
	return o
}

func (o GatewayStateEnumOutput) ToGatewayStateEnumPtrOutput() GatewayStateEnumPtrOutput {
	return o.ToGatewayStateEnumPtrOutputWithContext(context.Background())
}

func (o GatewayStateEnumOutput) ToGatewayStateEnumPtrOutputWithContext(ctx context.Context) GatewayStateEnumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GatewayStateEnum) *GatewayStateEnum {
		return &v
	}).(GatewayStateEnumPtrOutput)
}

func (o GatewayStateEnumOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o GatewayStateEnumOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GatewayStateEnum) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o GatewayStateEnumOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GatewayStateEnumOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e GatewayStateEnum) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type GatewayStateEnumPtrOutput struct{ *pulumi.OutputState }

func (GatewayStateEnumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GatewayStateEnum)(nil)).Elem()
}

func (o GatewayStateEnumPtrOutput) ToGatewayStateEnumPtrOutput() GatewayStateEnumPtrOutput {
	return o
}

func (o GatewayStateEnumPtrOutput) ToGatewayStateEnumPtrOutputWithContext(ctx context.Context) GatewayStateEnumPtrOutput {
	return o
}

func (o GatewayStateEnumPtrOutput) Elem() GatewayStateEnumOutput {
	return o.ApplyT(func(v *GatewayStateEnum) GatewayStateEnum {
		if v != nil {
			return *v
		}
		var ret GatewayStateEnum
		return ret
	}).(GatewayStateEnumOutput)
}

func (o GatewayStateEnumPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o GatewayStateEnumPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *GatewayStateEnum) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeFailoverConfigStateEnumInput)(nil)).Elem(), BridgeFailoverConfigStateEnum("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeFailoverConfigStateEnumPtrInput)(nil)).Elem(), BridgeFailoverConfigStateEnum("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeFailoverModeEnumInput)(nil)).Elem(), BridgeFailoverModeEnum("FAILOVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeFailoverModeEnumPtrInput)(nil)).Elem(), BridgeFailoverModeEnum("FAILOVER"))
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeOutputResourceBridgeNetworkOutputProtocolInput)(nil)).Elem(), BridgeOutputResourceBridgeNetworkOutputProtocol("rtp-fec"))
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeOutputResourceBridgeNetworkOutputProtocolPtrInput)(nil)).Elem(), BridgeOutputResourceBridgeNetworkOutputProtocol("rtp-fec"))
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeProtocolEnumInput)(nil)).Elem(), BridgeProtocolEnum("rtp-fec"))
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeProtocolEnumPtrInput)(nil)).Elem(), BridgeProtocolEnum("rtp-fec"))
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeSourceProtocolEnumInput)(nil)).Elem(), BridgeSourceProtocolEnum("rtp-fec"))
	pulumi.RegisterInputType(reflect.TypeOf((*BridgeSourceProtocolEnumPtrInput)(nil)).Elem(), BridgeSourceProtocolEnum("rtp-fec"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowEncryptionAlgorithmInput)(nil)).Elem(), FlowEncryptionAlgorithm("aes128"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowEncryptionAlgorithmPtrInput)(nil)).Elem(), FlowEncryptionAlgorithm("aes128"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowEncryptionKeyTypeInput)(nil)).Elem(), FlowEncryptionKeyType("speke"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowEncryptionKeyTypePtrInput)(nil)).Elem(), FlowEncryptionKeyType("speke"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowEntitlementEncryptionAlgorithmInput)(nil)).Elem(), FlowEntitlementEncryptionAlgorithm("aes128"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowEntitlementEncryptionAlgorithmPtrInput)(nil)).Elem(), FlowEntitlementEncryptionAlgorithm("aes128"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowEntitlementEncryptionKeyTypeInput)(nil)).Elem(), FlowEntitlementEncryptionKeyType("speke"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowEntitlementEncryptionKeyTypePtrInput)(nil)).Elem(), FlowEntitlementEncryptionKeyType("speke"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowEntitlementEntitlementStatusInput)(nil)).Elem(), FlowEntitlementEntitlementStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowEntitlementEntitlementStatusPtrInput)(nil)).Elem(), FlowEntitlementEntitlementStatus("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowFailoverConfigFailoverModeInput)(nil)).Elem(), FlowFailoverConfigFailoverMode("MERGE"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowFailoverConfigFailoverModePtrInput)(nil)).Elem(), FlowFailoverConfigFailoverMode("MERGE"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowFailoverConfigStateInput)(nil)).Elem(), FlowFailoverConfigState("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowFailoverConfigStatePtrInput)(nil)).Elem(), FlowFailoverConfigState("ENABLED"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowFmtpColorimetryInput)(nil)).Elem(), FlowFmtpColorimetry("BT601"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowFmtpColorimetryPtrInput)(nil)).Elem(), FlowFmtpColorimetry("BT601"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowFmtpRangeInput)(nil)).Elem(), FlowFmtpRange("NARROW"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowFmtpRangePtrInput)(nil)).Elem(), FlowFmtpRange("NARROW"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowFmtpScanModeInput)(nil)).Elem(), FlowFmtpScanMode("progressive"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowFmtpScanModePtrInput)(nil)).Elem(), FlowFmtpScanMode("progressive"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowFmtpTcsInput)(nil)).Elem(), FlowFmtpTcs("SDR"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowFmtpTcsPtrInput)(nil)).Elem(), FlowFmtpTcs("SDR"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowMaintenanceMaintenanceDayInput)(nil)).Elem(), FlowMaintenanceMaintenanceDay("Monday"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowMaintenanceMaintenanceDayPtrInput)(nil)).Elem(), FlowMaintenanceMaintenanceDay("Monday"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowMediaStreamMediaStreamTypeInput)(nil)).Elem(), FlowMediaStreamMediaStreamType("video"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowMediaStreamMediaStreamTypePtrInput)(nil)).Elem(), FlowMediaStreamMediaStreamType("video"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowMediaStreamSourceConfigurationEncodingNameInput)(nil)).Elem(), FlowMediaStreamSourceConfigurationEncodingName("jxsv"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowMediaStreamSourceConfigurationEncodingNamePtrInput)(nil)).Elem(), FlowMediaStreamSourceConfigurationEncodingName("jxsv"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowMediaStreamVideoFormatInput)(nil)).Elem(), FlowMediaStreamVideoFormat("2160p"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowMediaStreamVideoFormatPtrInput)(nil)).Elem(), FlowMediaStreamVideoFormat("2160p"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowOutputEncodingParametersEncoderProfileInput)(nil)).Elem(), FlowOutputEncodingParametersEncoderProfile("main"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowOutputEncodingParametersEncoderProfilePtrInput)(nil)).Elem(), FlowOutputEncodingParametersEncoderProfile("main"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowOutputEncryptionAlgorithmInput)(nil)).Elem(), FlowOutputEncryptionAlgorithm("aes128"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowOutputEncryptionAlgorithmPtrInput)(nil)).Elem(), FlowOutputEncryptionAlgorithm("aes128"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowOutputEncryptionKeyTypeInput)(nil)).Elem(), FlowOutputEncryptionKeyType("static-key"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowOutputEncryptionKeyTypePtrInput)(nil)).Elem(), FlowOutputEncryptionKeyType("static-key"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowOutputMediaStreamOutputConfigurationEncodingNameInput)(nil)).Elem(), FlowOutputMediaStreamOutputConfigurationEncodingName("jxsv"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowOutputMediaStreamOutputConfigurationEncodingNamePtrInput)(nil)).Elem(), FlowOutputMediaStreamOutputConfigurationEncodingName("jxsv"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowOutputProtocolInput)(nil)).Elem(), FlowOutputProtocol("zixi-push"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowOutputProtocolPtrInput)(nil)).Elem(), FlowOutputProtocol("zixi-push"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceEncryptionAlgorithmInput)(nil)).Elem(), FlowSourceEncryptionAlgorithm("aes128"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceEncryptionAlgorithmPtrInput)(nil)).Elem(), FlowSourceEncryptionAlgorithm("aes128"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceEncryptionKeyTypeInput)(nil)).Elem(), FlowSourceEncryptionKeyType("speke"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceEncryptionKeyTypePtrInput)(nil)).Elem(), FlowSourceEncryptionKeyType("speke"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceProtocolInput)(nil)).Elem(), FlowSourceProtocol("zixi-push"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowSourceProtocolPtrInput)(nil)).Elem(), FlowSourceProtocol("zixi-push"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowVpcInterfaceNetworkInterfaceTypeInput)(nil)).Elem(), FlowVpcInterfaceNetworkInterfaceType("ena"))
	pulumi.RegisterInputType(reflect.TypeOf((*FlowVpcInterfaceNetworkInterfaceTypePtrInput)(nil)).Elem(), FlowVpcInterfaceNetworkInterfaceType("ena"))
	pulumi.RegisterOutputType(BridgeFailoverConfigStateEnumOutput{})
	pulumi.RegisterOutputType(BridgeFailoverConfigStateEnumPtrOutput{})
	pulumi.RegisterOutputType(BridgeFailoverModeEnumOutput{})
	pulumi.RegisterOutputType(BridgeFailoverModeEnumPtrOutput{})
	pulumi.RegisterOutputType(BridgeOutputResourceBridgeNetworkOutputProtocolOutput{})
	pulumi.RegisterOutputType(BridgeOutputResourceBridgeNetworkOutputProtocolPtrOutput{})
	pulumi.RegisterOutputType(BridgeProtocolEnumOutput{})
	pulumi.RegisterOutputType(BridgeProtocolEnumPtrOutput{})
	pulumi.RegisterOutputType(BridgeSourceProtocolEnumOutput{})
	pulumi.RegisterOutputType(BridgeSourceProtocolEnumPtrOutput{})
	pulumi.RegisterOutputType(BridgeStateEnumOutput{})
	pulumi.RegisterOutputType(BridgeStateEnumPtrOutput{})
	pulumi.RegisterOutputType(FlowEncryptionAlgorithmOutput{})
	pulumi.RegisterOutputType(FlowEncryptionAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(FlowEncryptionKeyTypeOutput{})
	pulumi.RegisterOutputType(FlowEncryptionKeyTypePtrOutput{})
	pulumi.RegisterOutputType(FlowEntitlementEncryptionAlgorithmOutput{})
	pulumi.RegisterOutputType(FlowEntitlementEncryptionAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(FlowEntitlementEncryptionKeyTypeOutput{})
	pulumi.RegisterOutputType(FlowEntitlementEncryptionKeyTypePtrOutput{})
	pulumi.RegisterOutputType(FlowEntitlementEntitlementStatusOutput{})
	pulumi.RegisterOutputType(FlowEntitlementEntitlementStatusPtrOutput{})
	pulumi.RegisterOutputType(FlowFailoverConfigFailoverModeOutput{})
	pulumi.RegisterOutputType(FlowFailoverConfigFailoverModePtrOutput{})
	pulumi.RegisterOutputType(FlowFailoverConfigStateOutput{})
	pulumi.RegisterOutputType(FlowFailoverConfigStatePtrOutput{})
	pulumi.RegisterOutputType(FlowFmtpColorimetryOutput{})
	pulumi.RegisterOutputType(FlowFmtpColorimetryPtrOutput{})
	pulumi.RegisterOutputType(FlowFmtpRangeOutput{})
	pulumi.RegisterOutputType(FlowFmtpRangePtrOutput{})
	pulumi.RegisterOutputType(FlowFmtpScanModeOutput{})
	pulumi.RegisterOutputType(FlowFmtpScanModePtrOutput{})
	pulumi.RegisterOutputType(FlowFmtpTcsOutput{})
	pulumi.RegisterOutputType(FlowFmtpTcsPtrOutput{})
	pulumi.RegisterOutputType(FlowMaintenanceMaintenanceDayOutput{})
	pulumi.RegisterOutputType(FlowMaintenanceMaintenanceDayPtrOutput{})
	pulumi.RegisterOutputType(FlowMediaStreamMediaStreamTypeOutput{})
	pulumi.RegisterOutputType(FlowMediaStreamMediaStreamTypePtrOutput{})
	pulumi.RegisterOutputType(FlowMediaStreamSourceConfigurationEncodingNameOutput{})
	pulumi.RegisterOutputType(FlowMediaStreamSourceConfigurationEncodingNamePtrOutput{})
	pulumi.RegisterOutputType(FlowMediaStreamVideoFormatOutput{})
	pulumi.RegisterOutputType(FlowMediaStreamVideoFormatPtrOutput{})
	pulumi.RegisterOutputType(FlowOutputEncodingParametersEncoderProfileOutput{})
	pulumi.RegisterOutputType(FlowOutputEncodingParametersEncoderProfilePtrOutput{})
	pulumi.RegisterOutputType(FlowOutputEncryptionAlgorithmOutput{})
	pulumi.RegisterOutputType(FlowOutputEncryptionAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(FlowOutputEncryptionKeyTypeOutput{})
	pulumi.RegisterOutputType(FlowOutputEncryptionKeyTypePtrOutput{})
	pulumi.RegisterOutputType(FlowOutputMediaStreamOutputConfigurationEncodingNameOutput{})
	pulumi.RegisterOutputType(FlowOutputMediaStreamOutputConfigurationEncodingNamePtrOutput{})
	pulumi.RegisterOutputType(FlowOutputProtocolOutput{})
	pulumi.RegisterOutputType(FlowOutputProtocolPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceEncryptionAlgorithmOutput{})
	pulumi.RegisterOutputType(FlowSourceEncryptionAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(FlowSourceEncryptionKeyTypeOutput{})
	pulumi.RegisterOutputType(FlowSourceEncryptionKeyTypePtrOutput{})
	pulumi.RegisterOutputType(FlowSourceProtocolOutput{})
	pulumi.RegisterOutputType(FlowSourceProtocolPtrOutput{})
	pulumi.RegisterOutputType(FlowVpcInterfaceNetworkInterfaceTypeOutput{})
	pulumi.RegisterOutputType(FlowVpcInterfaceNetworkInterfaceTypePtrOutput{})
	pulumi.RegisterOutputType(GatewayStateEnumOutput{})
	pulumi.RegisterOutputType(GatewayStateEnumPtrOutput{})
}
