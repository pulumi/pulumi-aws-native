// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mediaconnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::MediaConnect::Flow
type Flow struct {
	pulumi.CustomResourceState

	// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
	AvailabilityZone pulumi.StringPtrOutput `pulumi:"availabilityZone"`
	// The IP address from which video will be sent to output destinations.
	EgressIp pulumi.StringOutput `pulumi:"egressIp"`
	// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
	FlowArn pulumi.StringOutput `pulumi:"flowArn"`
	// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)
	FlowAvailabilityZone pulumi.StringOutput `pulumi:"flowAvailabilityZone"`
	// A prefix for the names of the NDI sources that the flow creates.(ReadOnly)
	FlowNdiMachineName pulumi.StringOutput `pulumi:"flowNdiMachineName"`
	// Determines the processing capacity and feature set of the flow. Set this optional parameter to LARGE if you want to enable NDI outputs on the flow.
	FlowSize FlowSizePtrOutput `pulumi:"flowSize"`
	// The maintenance settings you want to use for the flow.
	Maintenance FlowMaintenancePtrOutput `pulumi:"maintenance"`
	// The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.
	MediaStreams FlowMediaStreamArrayOutput `pulumi:"mediaStreams"`
	// The name of the flow.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs.
	NdiConfig FlowNdiConfigPtrOutput `pulumi:"ndiConfig"`
	// The source of the flow.
	Source FlowSourceTypeOutput `pulumi:"source"`
	// The source failover config of the flow.
	SourceFailoverConfig FlowFailoverConfigPtrOutput `pulumi:"sourceFailoverConfig"`
	// The source monitoring config of the flow.
	SourceMonitoringConfig FlowSourceMonitoringConfigPtrOutput `pulumi:"sourceMonitoringConfig"`
	// The VPC interfaces that you added to this flow.
	VpcInterfaces FlowVpcInterfaceTypeArrayOutput `pulumi:"vpcInterfaces"`
}

// NewFlow registers a new resource with the given unique name, arguments, and options.
func NewFlow(ctx *pulumi.Context,
	name string, args *FlowArgs, opts ...pulumi.ResourceOption) (*Flow, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"availabilityZone",
		"name",
		"source.name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Flow
	err := ctx.RegisterResource("aws-native:mediaconnect:Flow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFlow gets an existing Flow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFlow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FlowState, opts ...pulumi.ResourceOption) (*Flow, error) {
	var resource Flow
	err := ctx.ReadResource("aws-native:mediaconnect:Flow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Flow resources.
type flowState struct {
}

type FlowState struct {
}

func (FlowState) ElementType() reflect.Type {
	return reflect.TypeOf((*flowState)(nil)).Elem()
}

type flowArgs struct {
	// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Determines the processing capacity and feature set of the flow. Set this optional parameter to LARGE if you want to enable NDI outputs on the flow.
	FlowSize *FlowSize `pulumi:"flowSize"`
	// The maintenance settings you want to use for the flow.
	Maintenance *FlowMaintenance `pulumi:"maintenance"`
	// The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.
	MediaStreams []FlowMediaStream `pulumi:"mediaStreams"`
	// The name of the flow.
	Name *string `pulumi:"name"`
	// Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs.
	NdiConfig *FlowNdiConfig `pulumi:"ndiConfig"`
	// The source of the flow.
	Source FlowSourceType `pulumi:"source"`
	// The source failover config of the flow.
	SourceFailoverConfig *FlowFailoverConfig `pulumi:"sourceFailoverConfig"`
	// The source monitoring config of the flow.
	SourceMonitoringConfig *FlowSourceMonitoringConfig `pulumi:"sourceMonitoringConfig"`
	// The VPC interfaces that you added to this flow.
	VpcInterfaces []FlowVpcInterfaceType `pulumi:"vpcInterfaces"`
}

// The set of arguments for constructing a Flow resource.
type FlowArgs struct {
	// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
	AvailabilityZone pulumi.StringPtrInput
	// Determines the processing capacity and feature set of the flow. Set this optional parameter to LARGE if you want to enable NDI outputs on the flow.
	FlowSize FlowSizePtrInput
	// The maintenance settings you want to use for the flow.
	Maintenance FlowMaintenancePtrInput
	// The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.
	MediaStreams FlowMediaStreamArrayInput
	// The name of the flow.
	Name pulumi.StringPtrInput
	// Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs.
	NdiConfig FlowNdiConfigPtrInput
	// The source of the flow.
	Source FlowSourceTypeInput
	// The source failover config of the flow.
	SourceFailoverConfig FlowFailoverConfigPtrInput
	// The source monitoring config of the flow.
	SourceMonitoringConfig FlowSourceMonitoringConfigPtrInput
	// The VPC interfaces that you added to this flow.
	VpcInterfaces FlowVpcInterfaceTypeArrayInput
}

func (FlowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*flowArgs)(nil)).Elem()
}

type FlowInput interface {
	pulumi.Input

	ToFlowOutput() FlowOutput
	ToFlowOutputWithContext(ctx context.Context) FlowOutput
}

func (*Flow) ElementType() reflect.Type {
	return reflect.TypeOf((**Flow)(nil)).Elem()
}

func (i *Flow) ToFlowOutput() FlowOutput {
	return i.ToFlowOutputWithContext(context.Background())
}

func (i *Flow) ToFlowOutputWithContext(ctx context.Context) FlowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FlowOutput)
}

type FlowOutput struct{ *pulumi.OutputState }

func (FlowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Flow)(nil)).Elem()
}

func (o FlowOutput) ToFlowOutput() FlowOutput {
	return o
}

func (o FlowOutput) ToFlowOutputWithContext(ctx context.Context) FlowOutput {
	return o
}

// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
func (o FlowOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Flow) pulumi.StringPtrOutput { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The IP address from which video will be sent to output destinations.
func (o FlowOutput) EgressIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Flow) pulumi.StringOutput { return v.EgressIp }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.
func (o FlowOutput) FlowArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Flow) pulumi.StringOutput { return v.FlowArn }).(pulumi.StringOutput)
}

// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)
func (o FlowOutput) FlowAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Flow) pulumi.StringOutput { return v.FlowAvailabilityZone }).(pulumi.StringOutput)
}

// A prefix for the names of the NDI sources that the flow creates.(ReadOnly)
func (o FlowOutput) FlowNdiMachineName() pulumi.StringOutput {
	return o.ApplyT(func(v *Flow) pulumi.StringOutput { return v.FlowNdiMachineName }).(pulumi.StringOutput)
}

// Determines the processing capacity and feature set of the flow. Set this optional parameter to LARGE if you want to enable NDI outputs on the flow.
func (o FlowOutput) FlowSize() FlowSizePtrOutput {
	return o.ApplyT(func(v *Flow) FlowSizePtrOutput { return v.FlowSize }).(FlowSizePtrOutput)
}

// The maintenance settings you want to use for the flow.
func (o FlowOutput) Maintenance() FlowMaintenancePtrOutput {
	return o.ApplyT(func(v *Flow) FlowMaintenancePtrOutput { return v.Maintenance }).(FlowMaintenancePtrOutput)
}

// The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.
func (o FlowOutput) MediaStreams() FlowMediaStreamArrayOutput {
	return o.ApplyT(func(v *Flow) FlowMediaStreamArrayOutput { return v.MediaStreams }).(FlowMediaStreamArrayOutput)
}

// The name of the flow.
func (o FlowOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Flow) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the configuration settings for NDI outputs. Required when the flow includes NDI outputs.
func (o FlowOutput) NdiConfig() FlowNdiConfigPtrOutput {
	return o.ApplyT(func(v *Flow) FlowNdiConfigPtrOutput { return v.NdiConfig }).(FlowNdiConfigPtrOutput)
}

// The source of the flow.
func (o FlowOutput) Source() FlowSourceTypeOutput {
	return o.ApplyT(func(v *Flow) FlowSourceTypeOutput { return v.Source }).(FlowSourceTypeOutput)
}

// The source failover config of the flow.
func (o FlowOutput) SourceFailoverConfig() FlowFailoverConfigPtrOutput {
	return o.ApplyT(func(v *Flow) FlowFailoverConfigPtrOutput { return v.SourceFailoverConfig }).(FlowFailoverConfigPtrOutput)
}

// The source monitoring config of the flow.
func (o FlowOutput) SourceMonitoringConfig() FlowSourceMonitoringConfigPtrOutput {
	return o.ApplyT(func(v *Flow) FlowSourceMonitoringConfigPtrOutput { return v.SourceMonitoringConfig }).(FlowSourceMonitoringConfigPtrOutput)
}

// The VPC interfaces that you added to this flow.
func (o FlowOutput) VpcInterfaces() FlowVpcInterfaceTypeArrayOutput {
	return o.ApplyT(func(v *Flow) FlowVpcInterfaceTypeArrayOutput { return v.VpcInterfaces }).(FlowVpcInterfaceTypeArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FlowInput)(nil)).Elem(), &Flow{})
	pulumi.RegisterOutputType(FlowOutput{})
}
