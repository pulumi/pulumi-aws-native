// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IAM::AccessKey
func LookupAccessKey(ctx *pulumi.Context, args *LookupAccessKeyArgs, opts ...pulumi.InvokeOption) (*LookupAccessKeyResult, error) {
	var rv LookupAccessKeyResult
	err := ctx.Invoke("aws-native:iam:getAccessKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAccessKeyArgs struct {
	Id string `pulumi:"id"`
}

type LookupAccessKeyResult struct {
	Id              *string `pulumi:"id"`
	SecretAccessKey *string `pulumi:"secretAccessKey"`
	Status          *string `pulumi:"status"`
}

func LookupAccessKeyOutput(ctx *pulumi.Context, args LookupAccessKeyOutputArgs, opts ...pulumi.InvokeOption) LookupAccessKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccessKeyResult, error) {
			args := v.(LookupAccessKeyArgs)
			r, err := LookupAccessKey(ctx, &args, opts...)
			var s LookupAccessKeyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAccessKeyResultOutput)
}

type LookupAccessKeyOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupAccessKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessKeyArgs)(nil)).Elem()
}

type LookupAccessKeyResultOutput struct{ *pulumi.OutputState }

func (LookupAccessKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessKeyResult)(nil)).Elem()
}

func (o LookupAccessKeyResultOutput) ToLookupAccessKeyResultOutput() LookupAccessKeyResultOutput {
	return o
}

func (o LookupAccessKeyResultOutput) ToLookupAccessKeyResultOutputWithContext(ctx context.Context) LookupAccessKeyResultOutput {
	return o
}

func (o LookupAccessKeyResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccessKeyResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupAccessKeyResultOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccessKeyResult) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

func (o LookupAccessKeyResultOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccessKeyResult) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccessKeyResultOutput{})
}
