// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates a new managed policy for your AWS-account.
//
//	This operation creates a policy version with a version identifier of ``v1`` and sets v1 as the policy's default version. For more information about policy versions, see [Versioning for managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html) in the *IAM User Guide*.
//	As a best practice, you can validate your IAM policies. To learn more, see [Validating IAM policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html) in the *IAM User Guide*.
//	For more information about managed policies in general, see [Managed policies and inline policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *IAM User Guide*.
func LookupManagedPolicy(ctx *pulumi.Context, args *LookupManagedPolicyArgs, opts ...pulumi.InvokeOption) (*LookupManagedPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupManagedPolicyResult
	err := ctx.Invoke("aws-native:iam:getManagedPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupManagedPolicyArgs struct {
	// The Amazon Resource Name (ARN) of the managed policy that you want information about.
	//
	// For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *AWS General Reference* .
	PolicyArn string `pulumi:"policyArn"`
}

type LookupManagedPolicyResult struct {
	// The number of principal entities (users, groups, and roles) that the policy is attached to.
	AttachmentCount *int `pulumi:"attachmentCount"`
	// The date and time, in [ISO 8601 date-time format](https://docs.aws.amazon.com/http://www.iso.org/iso/iso8601) , when the policy was created.
	CreateDate *string `pulumi:"createDate"`
	// The identifier for the version of the policy that is set as the default (operative) version.
	//
	// For more information about policy versions, see [Versioning for managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html) in the *IAM User Guide* .
	DefaultVersionId *string `pulumi:"defaultVersionId"`
	// The name (friendly name, not ARN) of the group to attach the policy to.
	//  This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
	Groups []string `pulumi:"groups"`
	// Specifies whether the policy can be attached to an IAM user, group, or role.
	IsAttachable *bool `pulumi:"isAttachable"`
	// The number of entities (users and roles) for which the policy is used as the permissions boundary.
	//
	// For more information about permissions boundaries, see [Permissions boundaries for IAM identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide* .
	PermissionsBoundaryUsageCount *int `pulumi:"permissionsBoundaryUsageCount"`
	// The Amazon Resource Name (ARN) of the managed policy that you want information about.
	//
	// For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *AWS General Reference* .
	PolicyArn *string `pulumi:"policyArn"`
	// The JSON policy document that you want to use as the content for the new policy.
	//  You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
	//  The maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see [IAM and character quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length).
	//  To learn more about JSON policy grammar, see [Grammar of the IAM JSON policy language](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html) in the *IAM User Guide*.
	//  The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
	//   +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
	//   +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
	//   +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::IAM::ManagedPolicy` for more information about the expected schema for this property.
	PolicyDocument interface{} `pulumi:"policyDocument"`
	// The stable and unique string identifying the policy.
	//
	// For more information about IDs, see [IAM identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide* .
	PolicyId *string `pulumi:"policyId"`
	// The name (friendly name, not ARN) of the role to attach the policy to.
	//  This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
	//   If an external policy (such as ``AWS::IAM::Policy`` or ``AWS::IAM::ManagedPolicy``) has a ``Ref`` to a role and if a resource (such as ``AWS::ECS::Service``) also has a ``Ref`` to the same role, add a ``DependsOn`` attribute to the resource to make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout the resource's lifecycle. For example, when you delete a stack with an ``AWS::ECS::Service`` resource, the ``DependsOn`` attribute ensures that CFN deletes the ``AWS::ECS::Service`` resource before deleting its role's policy.
	Roles []string `pulumi:"roles"`
	// The date and time, in [ISO 8601 date-time format](https://docs.aws.amazon.com/http://www.iso.org/iso/iso8601) , when the policy was last updated.
	//
	// When a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created.
	UpdateDate *string `pulumi:"updateDate"`
	// The name (friendly name, not ARN) of the IAM user to attach the policy to.
	//  This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
	Users []string `pulumi:"users"`
}

func LookupManagedPolicyOutput(ctx *pulumi.Context, args LookupManagedPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupManagedPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupManagedPolicyResultOutput, error) {
			args := v.(LookupManagedPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:iam:getManagedPolicy", args, LookupManagedPolicyResultOutput{}, options).(LookupManagedPolicyResultOutput), nil
		}).(LookupManagedPolicyResultOutput)
}

type LookupManagedPolicyOutputArgs struct {
	// The Amazon Resource Name (ARN) of the managed policy that you want information about.
	//
	// For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *AWS General Reference* .
	PolicyArn pulumi.StringInput `pulumi:"policyArn"`
}

func (LookupManagedPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedPolicyArgs)(nil)).Elem()
}

type LookupManagedPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupManagedPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupManagedPolicyResult)(nil)).Elem()
}

func (o LookupManagedPolicyResultOutput) ToLookupManagedPolicyResultOutput() LookupManagedPolicyResultOutput {
	return o
}

func (o LookupManagedPolicyResultOutput) ToLookupManagedPolicyResultOutputWithContext(ctx context.Context) LookupManagedPolicyResultOutput {
	return o
}

// The number of principal entities (users, groups, and roles) that the policy is attached to.
func (o LookupManagedPolicyResultOutput) AttachmentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupManagedPolicyResult) *int { return v.AttachmentCount }).(pulumi.IntPtrOutput)
}

// The date and time, in [ISO 8601 date-time format](https://docs.aws.amazon.com/http://www.iso.org/iso/iso8601) , when the policy was created.
func (o LookupManagedPolicyResultOutput) CreateDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedPolicyResult) *string { return v.CreateDate }).(pulumi.StringPtrOutput)
}

// The identifier for the version of the policy that is set as the default (operative) version.
//
// For more information about policy versions, see [Versioning for managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html) in the *IAM User Guide* .
func (o LookupManagedPolicyResultOutput) DefaultVersionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedPolicyResult) *string { return v.DefaultVersionId }).(pulumi.StringPtrOutput)
}

// The name (friendly name, not ARN) of the group to attach the policy to.
//
//	This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
func (o LookupManagedPolicyResultOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupManagedPolicyResult) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// Specifies whether the policy can be attached to an IAM user, group, or role.
func (o LookupManagedPolicyResultOutput) IsAttachable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupManagedPolicyResult) *bool { return v.IsAttachable }).(pulumi.BoolPtrOutput)
}

// The number of entities (users and roles) for which the policy is used as the permissions boundary.
//
// For more information about permissions boundaries, see [Permissions boundaries for IAM identities](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) in the *IAM User Guide* .
func (o LookupManagedPolicyResultOutput) PermissionsBoundaryUsageCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupManagedPolicyResult) *int { return v.PermissionsBoundaryUsageCount }).(pulumi.IntPtrOutput)
}

// The Amazon Resource Name (ARN) of the managed policy that you want information about.
//
// For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the *AWS General Reference* .
func (o LookupManagedPolicyResultOutput) PolicyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedPolicyResult) *string { return v.PolicyArn }).(pulumi.StringPtrOutput)
}

// The JSON policy document that you want to use as the content for the new policy.
//
//	You must provide policies in JSON format in IAM. However, for CFN templates formatted in YAML, you can provide the policy in JSON or YAML format. CFN always converts a YAML policy to JSON format before submitting it to IAM.
//	The maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see [IAM and character quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length).
//	To learn more about JSON policy grammar, see [Grammar of the IAM JSON policy language](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html) in the *IAM User Guide*.
//	The [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:
//	 +  Any printable ASCII character ranging from the space character (``\u0020``) through the end of the ASCII character range
//	 +  The printable characters in the Basic Latin and Latin-1 Supplement character set (through ``\u00FF``)
//	 +  The special characters tab (``\u0009``), line feed (``\u000A``), and carriage return (``\u000D``)
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::IAM::ManagedPolicy` for more information about the expected schema for this property.
func (o LookupManagedPolicyResultOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupManagedPolicyResult) interface{} { return v.PolicyDocument }).(pulumi.AnyOutput)
}

// The stable and unique string identifying the policy.
//
// For more information about IDs, see [IAM identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the *IAM User Guide* .
func (o LookupManagedPolicyResultOutput) PolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedPolicyResult) *string { return v.PolicyId }).(pulumi.StringPtrOutput)
}

// The name (friendly name, not ARN) of the role to attach the policy to.
//
//	This parameter allows (per its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
//	 If an external policy (such as ``AWS::IAM::Policy`` or ``AWS::IAM::ManagedPolicy``) has a ``Ref`` to a role and if a resource (such as ``AWS::ECS::Service``) also has a ``Ref`` to the same role, add a ``DependsOn`` attribute to the resource to make the resource depend on the external policy. This dependency ensures that the role's policy is available throughout the resource's lifecycle. For example, when you delete a stack with an ``AWS::ECS::Service`` resource, the ``DependsOn`` attribute ensures that CFN deletes the ``AWS::ECS::Service`` resource before deleting its role's policy.
func (o LookupManagedPolicyResultOutput) Roles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupManagedPolicyResult) []string { return v.Roles }).(pulumi.StringArrayOutput)
}

// The date and time, in [ISO 8601 date-time format](https://docs.aws.amazon.com/http://www.iso.org/iso/iso8601) , when the policy was last updated.
//
// When a policy has only one version, this field contains the date and time when the policy was created. When a policy has more than one version, this field contains the date and time when the most recent policy version was created.
func (o LookupManagedPolicyResultOutput) UpdateDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupManagedPolicyResult) *string { return v.UpdateDate }).(pulumi.StringPtrOutput)
}

// The name (friendly name, not ARN) of the IAM user to attach the policy to.
//
//	This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
func (o LookupManagedPolicyResultOutput) Users() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupManagedPolicyResult) []string { return v.Users }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupManagedPolicyResultOutput{})
}
