// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IAM::SAMLProvider
type SamlProvider struct {
	pulumi.CustomResourceState

	// The private key from your external identity provider
	AddPrivateKey pulumi.StringPtrOutput `pulumi:"addPrivateKey"`
	// Amazon Resource Name (ARN) of the SAML provider
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The encryption setting for the SAML provider
	AssertionEncryptionMode SamlProviderAssertionEncryptionModePtrOutput `pulumi:"assertionEncryptionMode"`
	// The name of the provider to create.
	//
	// This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// The private key metadata for the SAML provider.
	PrivateKeyList SamlProviderSamlPrivateKeyArrayOutput `pulumi:"privateKeyList"`
	// The Key ID of the private key to remove
	RemovePrivateKey pulumi.StringPtrOutput `pulumi:"removePrivateKey"`
	// An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.
	//
	// For more information, see [About SAML 2.0-based federation](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html) in the *IAM User Guide*
	SamlMetadataDocument pulumi.StringPtrOutput `pulumi:"samlMetadataDocument"`
	// The unique identifier assigned to the SAML provider
	SamlProviderUuid pulumi.StringOutput `pulumi:"samlProviderUuid"`
	// A list of tags that you want to attach to the new IAM SAML provider. Each tag consists of a key name and an associated value. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide* .
	//
	// > If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewSamlProvider registers a new resource with the given unique name, arguments, and options.
func NewSamlProvider(ctx *pulumi.Context,
	name string, args *SamlProviderArgs, opts ...pulumi.ResourceOption) (*SamlProvider, error) {
	if args == nil {
		args = &SamlProviderArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"addPrivateKey",
		"name",
		"removePrivateKey",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SamlProvider
	err := ctx.RegisterResource("aws-native:iam:SamlProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSamlProvider gets an existing SamlProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSamlProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SamlProviderState, opts ...pulumi.ResourceOption) (*SamlProvider, error) {
	var resource SamlProvider
	err := ctx.ReadResource("aws-native:iam:SamlProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SamlProvider resources.
type samlProviderState struct {
}

type SamlProviderState struct {
}

func (SamlProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*samlProviderState)(nil)).Elem()
}

type samlProviderArgs struct {
	// The private key from your external identity provider
	AddPrivateKey *string `pulumi:"addPrivateKey"`
	// The encryption setting for the SAML provider
	AssertionEncryptionMode *SamlProviderAssertionEncryptionMode `pulumi:"assertionEncryptionMode"`
	// The name of the provider to create.
	//
	// This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
	Name *string `pulumi:"name"`
	// The private key metadata for the SAML provider.
	PrivateKeyList []SamlProviderSamlPrivateKey `pulumi:"privateKeyList"`
	// The Key ID of the private key to remove
	RemovePrivateKey *string `pulumi:"removePrivateKey"`
	// An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.
	//
	// For more information, see [About SAML 2.0-based federation](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html) in the *IAM User Guide*
	SamlMetadataDocument *string `pulumi:"samlMetadataDocument"`
	// A list of tags that you want to attach to the new IAM SAML provider. Each tag consists of a key name and an associated value. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide* .
	//
	// > If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a SamlProvider resource.
type SamlProviderArgs struct {
	// The private key from your external identity provider
	AddPrivateKey pulumi.StringPtrInput
	// The encryption setting for the SAML provider
	AssertionEncryptionMode SamlProviderAssertionEncryptionModePtrInput
	// The name of the provider to create.
	//
	// This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
	Name pulumi.StringPtrInput
	// The private key metadata for the SAML provider.
	PrivateKeyList SamlProviderSamlPrivateKeyArrayInput
	// The Key ID of the private key to remove
	RemovePrivateKey pulumi.StringPtrInput
	// An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.
	//
	// For more information, see [About SAML 2.0-based federation](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html) in the *IAM User Guide*
	SamlMetadataDocument pulumi.StringPtrInput
	// A list of tags that you want to attach to the new IAM SAML provider. Each tag consists of a key name and an associated value. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide* .
	//
	// > If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.
	Tags aws.TagArrayInput
}

func (SamlProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*samlProviderArgs)(nil)).Elem()
}

type SamlProviderInput interface {
	pulumi.Input

	ToSamlProviderOutput() SamlProviderOutput
	ToSamlProviderOutputWithContext(ctx context.Context) SamlProviderOutput
}

func (*SamlProvider) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlProvider)(nil)).Elem()
}

func (i *SamlProvider) ToSamlProviderOutput() SamlProviderOutput {
	return i.ToSamlProviderOutputWithContext(context.Background())
}

func (i *SamlProvider) ToSamlProviderOutputWithContext(ctx context.Context) SamlProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SamlProviderOutput)
}

type SamlProviderOutput struct{ *pulumi.OutputState }

func (SamlProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SamlProvider)(nil)).Elem()
}

func (o SamlProviderOutput) ToSamlProviderOutput() SamlProviderOutput {
	return o
}

func (o SamlProviderOutput) ToSamlProviderOutputWithContext(ctx context.Context) SamlProviderOutput {
	return o
}

// The private key from your external identity provider
func (o SamlProviderOutput) AddPrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlProvider) pulumi.StringPtrOutput { return v.AddPrivateKey }).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the SAML provider
func (o SamlProviderOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *SamlProvider) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The encryption setting for the SAML provider
func (o SamlProviderOutput) AssertionEncryptionMode() SamlProviderAssertionEncryptionModePtrOutput {
	return o.ApplyT(func(v *SamlProvider) SamlProviderAssertionEncryptionModePtrOutput { return v.AssertionEncryptionMode }).(SamlProviderAssertionEncryptionModePtrOutput)
}

// The name of the provider to create.
//
// This parameter allows (through its [regex pattern](https://docs.aws.amazon.com/http://wikipedia.org/wiki/regex) ) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-
func (o SamlProviderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlProvider) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// The private key metadata for the SAML provider.
func (o SamlProviderOutput) PrivateKeyList() SamlProviderSamlPrivateKeyArrayOutput {
	return o.ApplyT(func(v *SamlProvider) SamlProviderSamlPrivateKeyArrayOutput { return v.PrivateKeyList }).(SamlProviderSamlPrivateKeyArrayOutput)
}

// The Key ID of the private key to remove
func (o SamlProviderOutput) RemovePrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlProvider) pulumi.StringPtrOutput { return v.RemovePrivateKey }).(pulumi.StringPtrOutput)
}

// An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.
//
// For more information, see [About SAML 2.0-based federation](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html) in the *IAM User Guide*
func (o SamlProviderOutput) SamlMetadataDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SamlProvider) pulumi.StringPtrOutput { return v.SamlMetadataDocument }).(pulumi.StringPtrOutput)
}

// The unique identifier assigned to the SAML provider
func (o SamlProviderOutput) SamlProviderUuid() pulumi.StringOutput {
	return o.ApplyT(func(v *SamlProvider) pulumi.StringOutput { return v.SamlProviderUuid }).(pulumi.StringOutput)
}

// A list of tags that you want to attach to the new IAM SAML provider. Each tag consists of a key name and an associated value. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide* .
//
// > If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.
func (o SamlProviderOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *SamlProvider) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SamlProviderInput)(nil)).Elem(), &SamlProvider{})
	pulumi.RegisterOutputType(SamlProviderOutput{})
}
