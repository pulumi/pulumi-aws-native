// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IAM::ServerCertificate
func LookupServerCertificate(ctx *pulumi.Context, args *LookupServerCertificateArgs, opts ...pulumi.InvokeOption) (*LookupServerCertificateResult, error) {
	var rv LookupServerCertificateResult
	err := ctx.Invoke("aws-native:iam:getServerCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServerCertificateArgs struct {
	ServerCertificateName string `pulumi:"serverCertificateName"`
}

type LookupServerCertificateResult struct {
	// Amazon Resource Name (ARN) of the server certificate
	Arn  *string                `pulumi:"arn"`
	Path *string                `pulumi:"path"`
	Tags []ServerCertificateTag `pulumi:"tags"`
}

func LookupServerCertificateOutput(ctx *pulumi.Context, args LookupServerCertificateOutputArgs, opts ...pulumi.InvokeOption) LookupServerCertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServerCertificateResult, error) {
			args := v.(LookupServerCertificateArgs)
			r, err := LookupServerCertificate(ctx, &args, opts...)
			var s LookupServerCertificateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServerCertificateResultOutput)
}

type LookupServerCertificateOutputArgs struct {
	ServerCertificateName pulumi.StringInput `pulumi:"serverCertificateName"`
}

func (LookupServerCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerCertificateArgs)(nil)).Elem()
}

type LookupServerCertificateResultOutput struct{ *pulumi.OutputState }

func (LookupServerCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerCertificateResult)(nil)).Elem()
}

func (o LookupServerCertificateResultOutput) ToLookupServerCertificateResultOutput() LookupServerCertificateResultOutput {
	return o
}

func (o LookupServerCertificateResultOutput) ToLookupServerCertificateResultOutputWithContext(ctx context.Context) LookupServerCertificateResultOutput {
	return o
}

// Amazon Resource Name (ARN) of the server certificate
func (o LookupServerCertificateResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerCertificateResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupServerCertificateResultOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerCertificateResult) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o LookupServerCertificateResultOutput) Tags() ServerCertificateTagArrayOutput {
	return o.ApplyT(func(v LookupServerCertificateResult) []ServerCertificateTag { return v.Tags }).(ServerCertificateTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerCertificateResultOutput{})
}
