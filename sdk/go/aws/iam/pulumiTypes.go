// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GroupPolicyType struct {
	// The policy document.
	PolicyDocument string `pulumi:"policyDocument"`
	// The friendly name (not ARN) identifying the policy.
	PolicyName string `pulumi:"policyName"`
}

// GroupPolicyTypeInput is an input type that accepts GroupPolicyTypeArgs and GroupPolicyTypeOutput values.
// You can construct a concrete instance of `GroupPolicyTypeInput` via:
//
//	GroupPolicyTypeArgs{...}
type GroupPolicyTypeInput interface {
	pulumi.Input

	ToGroupPolicyTypeOutput() GroupPolicyTypeOutput
	ToGroupPolicyTypeOutputWithContext(context.Context) GroupPolicyTypeOutput
}

type GroupPolicyTypeArgs struct {
	// The policy document.
	PolicyDocument pulumi.StringInput `pulumi:"policyDocument"`
	// The friendly name (not ARN) identifying the policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
}

func (GroupPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyType)(nil)).Elem()
}

func (i GroupPolicyTypeArgs) ToGroupPolicyTypeOutput() GroupPolicyTypeOutput {
	return i.ToGroupPolicyTypeOutputWithContext(context.Background())
}

func (i GroupPolicyTypeArgs) ToGroupPolicyTypeOutputWithContext(ctx context.Context) GroupPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyTypeOutput)
}

// GroupPolicyTypeArrayInput is an input type that accepts GroupPolicyTypeArray and GroupPolicyTypeArrayOutput values.
// You can construct a concrete instance of `GroupPolicyTypeArrayInput` via:
//
//	GroupPolicyTypeArray{ GroupPolicyTypeArgs{...} }
type GroupPolicyTypeArrayInput interface {
	pulumi.Input

	ToGroupPolicyTypeArrayOutput() GroupPolicyTypeArrayOutput
	ToGroupPolicyTypeArrayOutputWithContext(context.Context) GroupPolicyTypeArrayOutput
}

type GroupPolicyTypeArray []GroupPolicyTypeInput

func (GroupPolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyType)(nil)).Elem()
}

func (i GroupPolicyTypeArray) ToGroupPolicyTypeArrayOutput() GroupPolicyTypeArrayOutput {
	return i.ToGroupPolicyTypeArrayOutputWithContext(context.Background())
}

func (i GroupPolicyTypeArray) ToGroupPolicyTypeArrayOutputWithContext(ctx context.Context) GroupPolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyTypeArrayOutput)
}

type GroupPolicyTypeOutput struct{ *pulumi.OutputState }

func (GroupPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicyType)(nil)).Elem()
}

func (o GroupPolicyTypeOutput) ToGroupPolicyTypeOutput() GroupPolicyTypeOutput {
	return o
}

func (o GroupPolicyTypeOutput) ToGroupPolicyTypeOutputWithContext(ctx context.Context) GroupPolicyTypeOutput {
	return o
}

// The policy document.
func (o GroupPolicyTypeOutput) PolicyDocument() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicyType) string { return v.PolicyDocument }).(pulumi.StringOutput)
}

// The friendly name (not ARN) identifying the policy.
func (o GroupPolicyTypeOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicyType) string { return v.PolicyName }).(pulumi.StringOutput)
}

type GroupPolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (GroupPolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicyType)(nil)).Elem()
}

func (o GroupPolicyTypeArrayOutput) ToGroupPolicyTypeArrayOutput() GroupPolicyTypeArrayOutput {
	return o
}

func (o GroupPolicyTypeArrayOutput) ToGroupPolicyTypeArrayOutputWithContext(ctx context.Context) GroupPolicyTypeArrayOutput {
	return o
}

func (o GroupPolicyTypeArrayOutput) Index(i pulumi.IntInput) GroupPolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupPolicyType {
		return vs[0].([]GroupPolicyType)[vs[1].(int)]
	}).(GroupPolicyTypeOutput)
}

// A key-value pair to associate with a resource.
type OidcProviderTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// Contains information about an attached policy.
//
//	An attached policy is a managed policy that has been attached to a user, group, or role.
//	For more information about managed policies, refer to [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*.
type RolePolicyType struct {
	// The entire contents of the policy that defines permissions. For more information, see [Overview of JSON policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json).
	PolicyDocument string `pulumi:"policyDocument"`
	// The friendly name (not ARN) identifying the policy.
	PolicyName string `pulumi:"policyName"`
}

// RolePolicyTypeInput is an input type that accepts RolePolicyTypeArgs and RolePolicyTypeOutput values.
// You can construct a concrete instance of `RolePolicyTypeInput` via:
//
//	RolePolicyTypeArgs{...}
type RolePolicyTypeInput interface {
	pulumi.Input

	ToRolePolicyTypeOutput() RolePolicyTypeOutput
	ToRolePolicyTypeOutputWithContext(context.Context) RolePolicyTypeOutput
}

// Contains information about an attached policy.
//
//	An attached policy is a managed policy that has been attached to a user, group, or role.
//	For more information about managed policies, refer to [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*.
type RolePolicyTypeArgs struct {
	// The entire contents of the policy that defines permissions. For more information, see [Overview of JSON policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json).
	PolicyDocument pulumi.StringInput `pulumi:"policyDocument"`
	// The friendly name (not ARN) identifying the policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
}

func (RolePolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePolicyType)(nil)).Elem()
}

func (i RolePolicyTypeArgs) ToRolePolicyTypeOutput() RolePolicyTypeOutput {
	return i.ToRolePolicyTypeOutputWithContext(context.Background())
}

func (i RolePolicyTypeArgs) ToRolePolicyTypeOutputWithContext(ctx context.Context) RolePolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePolicyTypeOutput)
}

// RolePolicyTypeArrayInput is an input type that accepts RolePolicyTypeArray and RolePolicyTypeArrayOutput values.
// You can construct a concrete instance of `RolePolicyTypeArrayInput` via:
//
//	RolePolicyTypeArray{ RolePolicyTypeArgs{...} }
type RolePolicyTypeArrayInput interface {
	pulumi.Input

	ToRolePolicyTypeArrayOutput() RolePolicyTypeArrayOutput
	ToRolePolicyTypeArrayOutputWithContext(context.Context) RolePolicyTypeArrayOutput
}

type RolePolicyTypeArray []RolePolicyTypeInput

func (RolePolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePolicyType)(nil)).Elem()
}

func (i RolePolicyTypeArray) ToRolePolicyTypeArrayOutput() RolePolicyTypeArrayOutput {
	return i.ToRolePolicyTypeArrayOutputWithContext(context.Background())
}

func (i RolePolicyTypeArray) ToRolePolicyTypeArrayOutputWithContext(ctx context.Context) RolePolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePolicyTypeArrayOutput)
}

// Contains information about an attached policy.
//
//	An attached policy is a managed policy that has been attached to a user, group, or role.
//	For more information about managed policies, refer to [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*.
type RolePolicyTypeOutput struct{ *pulumi.OutputState }

func (RolePolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePolicyType)(nil)).Elem()
}

func (o RolePolicyTypeOutput) ToRolePolicyTypeOutput() RolePolicyTypeOutput {
	return o
}

func (o RolePolicyTypeOutput) ToRolePolicyTypeOutputWithContext(ctx context.Context) RolePolicyTypeOutput {
	return o
}

// The entire contents of the policy that defines permissions. For more information, see [Overview of JSON policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json).
func (o RolePolicyTypeOutput) PolicyDocument() pulumi.StringOutput {
	return o.ApplyT(func(v RolePolicyType) string { return v.PolicyDocument }).(pulumi.StringOutput)
}

// The friendly name (not ARN) identifying the policy.
func (o RolePolicyTypeOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v RolePolicyType) string { return v.PolicyName }).(pulumi.StringOutput)
}

type RolePolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (RolePolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePolicyType)(nil)).Elem()
}

func (o RolePolicyTypeArrayOutput) ToRolePolicyTypeArrayOutput() RolePolicyTypeArrayOutput {
	return o
}

func (o RolePolicyTypeArrayOutput) ToRolePolicyTypeArrayOutputWithContext(ctx context.Context) RolePolicyTypeArrayOutput {
	return o
}

func (o RolePolicyTypeArrayOutput) Index(i pulumi.IntInput) RolePolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolePolicyType {
		return vs[0].([]RolePolicyType)[vs[1].(int)]
	}).(RolePolicyTypeOutput)
}

// A structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide*.
type RoleTag struct {
	// The key name that can be used to look up or retrieve the associated value. For example, ``Department`` or ``Cost Center`` are common choices.
	Key string `pulumi:"key"`
	// The value associated with this tag. For example, tags with a key name of ``Department`` could have values such as ``Human Resources``, ``Accounting``, and ``Support``. Tags with a key name of ``Cost Center`` might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.
	//    AWS always interprets the tag ``Value`` as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type SamlProviderTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type ServerCertificateTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// Creates a password for the specified user, giving the user the ability to access AWS services through the console. For more information about managing passwords, see [Managing Passwords](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html) in the *User Guide*.
type UserLoginProfile struct {
	// The user's password.
	Password string `pulumi:"password"`
	// Specifies whether the user is required to set a new password on next sign-in.
	PasswordResetRequired *bool `pulumi:"passwordResetRequired"`
}

// UserLoginProfileInput is an input type that accepts UserLoginProfileArgs and UserLoginProfileOutput values.
// You can construct a concrete instance of `UserLoginProfileInput` via:
//
//	UserLoginProfileArgs{...}
type UserLoginProfileInput interface {
	pulumi.Input

	ToUserLoginProfileOutput() UserLoginProfileOutput
	ToUserLoginProfileOutputWithContext(context.Context) UserLoginProfileOutput
}

// Creates a password for the specified user, giving the user the ability to access AWS services through the console. For more information about managing passwords, see [Managing Passwords](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html) in the *User Guide*.
type UserLoginProfileArgs struct {
	// The user's password.
	Password pulumi.StringInput `pulumi:"password"`
	// Specifies whether the user is required to set a new password on next sign-in.
	PasswordResetRequired pulumi.BoolPtrInput `pulumi:"passwordResetRequired"`
}

func (UserLoginProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserLoginProfile)(nil)).Elem()
}

func (i UserLoginProfileArgs) ToUserLoginProfileOutput() UserLoginProfileOutput {
	return i.ToUserLoginProfileOutputWithContext(context.Background())
}

func (i UserLoginProfileArgs) ToUserLoginProfileOutputWithContext(ctx context.Context) UserLoginProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLoginProfileOutput)
}

func (i UserLoginProfileArgs) ToUserLoginProfilePtrOutput() UserLoginProfilePtrOutput {
	return i.ToUserLoginProfilePtrOutputWithContext(context.Background())
}

func (i UserLoginProfileArgs) ToUserLoginProfilePtrOutputWithContext(ctx context.Context) UserLoginProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLoginProfileOutput).ToUserLoginProfilePtrOutputWithContext(ctx)
}

// UserLoginProfilePtrInput is an input type that accepts UserLoginProfileArgs, UserLoginProfilePtr and UserLoginProfilePtrOutput values.
// You can construct a concrete instance of `UserLoginProfilePtrInput` via:
//
//	        UserLoginProfileArgs{...}
//
//	or:
//
//	        nil
type UserLoginProfilePtrInput interface {
	pulumi.Input

	ToUserLoginProfilePtrOutput() UserLoginProfilePtrOutput
	ToUserLoginProfilePtrOutputWithContext(context.Context) UserLoginProfilePtrOutput
}

type userLoginProfilePtrType UserLoginProfileArgs

func UserLoginProfilePtr(v *UserLoginProfileArgs) UserLoginProfilePtrInput {
	return (*userLoginProfilePtrType)(v)
}

func (*userLoginProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserLoginProfile)(nil)).Elem()
}

func (i *userLoginProfilePtrType) ToUserLoginProfilePtrOutput() UserLoginProfilePtrOutput {
	return i.ToUserLoginProfilePtrOutputWithContext(context.Background())
}

func (i *userLoginProfilePtrType) ToUserLoginProfilePtrOutputWithContext(ctx context.Context) UserLoginProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLoginProfilePtrOutput)
}

// Creates a password for the specified user, giving the user the ability to access AWS services through the console. For more information about managing passwords, see [Managing Passwords](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html) in the *User Guide*.
type UserLoginProfileOutput struct{ *pulumi.OutputState }

func (UserLoginProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserLoginProfile)(nil)).Elem()
}

func (o UserLoginProfileOutput) ToUserLoginProfileOutput() UserLoginProfileOutput {
	return o
}

func (o UserLoginProfileOutput) ToUserLoginProfileOutputWithContext(ctx context.Context) UserLoginProfileOutput {
	return o
}

func (o UserLoginProfileOutput) ToUserLoginProfilePtrOutput() UserLoginProfilePtrOutput {
	return o.ToUserLoginProfilePtrOutputWithContext(context.Background())
}

func (o UserLoginProfileOutput) ToUserLoginProfilePtrOutputWithContext(ctx context.Context) UserLoginProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserLoginProfile) *UserLoginProfile {
		return &v
	}).(UserLoginProfilePtrOutput)
}

// The user's password.
func (o UserLoginProfileOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v UserLoginProfile) string { return v.Password }).(pulumi.StringOutput)
}

// Specifies whether the user is required to set a new password on next sign-in.
func (o UserLoginProfileOutput) PasswordResetRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserLoginProfile) *bool { return v.PasswordResetRequired }).(pulumi.BoolPtrOutput)
}

type UserLoginProfilePtrOutput struct{ *pulumi.OutputState }

func (UserLoginProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserLoginProfile)(nil)).Elem()
}

func (o UserLoginProfilePtrOutput) ToUserLoginProfilePtrOutput() UserLoginProfilePtrOutput {
	return o
}

func (o UserLoginProfilePtrOutput) ToUserLoginProfilePtrOutputWithContext(ctx context.Context) UserLoginProfilePtrOutput {
	return o
}

func (o UserLoginProfilePtrOutput) Elem() UserLoginProfileOutput {
	return o.ApplyT(func(v *UserLoginProfile) UserLoginProfile {
		if v != nil {
			return *v
		}
		var ret UserLoginProfile
		return ret
	}).(UserLoginProfileOutput)
}

// The user's password.
func (o UserLoginProfilePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserLoginProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the user is required to set a new password on next sign-in.
func (o UserLoginProfilePtrOutput) PasswordResetRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserLoginProfile) *bool {
		if v == nil {
			return nil
		}
		return v.PasswordResetRequired
	}).(pulumi.BoolPtrOutput)
}

// Contains information about an attached policy.
//
//	An attached policy is a managed policy that has been attached to a user, group, or role.
//	For more information about managed policies, refer to [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*.
type UserPolicyType struct {
	// The entire contents of the policy that defines permissions. For more information, see [Overview of JSON policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json).
	PolicyDocument interface{} `pulumi:"policyDocument"`
	// The friendly name (not ARN) identifying the policy.
	PolicyName string `pulumi:"policyName"`
}

// UserPolicyTypeInput is an input type that accepts UserPolicyTypeArgs and UserPolicyTypeOutput values.
// You can construct a concrete instance of `UserPolicyTypeInput` via:
//
//	UserPolicyTypeArgs{...}
type UserPolicyTypeInput interface {
	pulumi.Input

	ToUserPolicyTypeOutput() UserPolicyTypeOutput
	ToUserPolicyTypeOutputWithContext(context.Context) UserPolicyTypeOutput
}

// Contains information about an attached policy.
//
//	An attached policy is a managed policy that has been attached to a user, group, or role.
//	For more information about managed policies, refer to [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*.
type UserPolicyTypeArgs struct {
	// The entire contents of the policy that defines permissions. For more information, see [Overview of JSON policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json).
	PolicyDocument pulumi.Input `pulumi:"policyDocument"`
	// The friendly name (not ARN) identifying the policy.
	PolicyName pulumi.StringInput `pulumi:"policyName"`
}

func (UserPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPolicyType)(nil)).Elem()
}

func (i UserPolicyTypeArgs) ToUserPolicyTypeOutput() UserPolicyTypeOutput {
	return i.ToUserPolicyTypeOutputWithContext(context.Background())
}

func (i UserPolicyTypeArgs) ToUserPolicyTypeOutputWithContext(ctx context.Context) UserPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPolicyTypeOutput)
}

// UserPolicyTypeArrayInput is an input type that accepts UserPolicyTypeArray and UserPolicyTypeArrayOutput values.
// You can construct a concrete instance of `UserPolicyTypeArrayInput` via:
//
//	UserPolicyTypeArray{ UserPolicyTypeArgs{...} }
type UserPolicyTypeArrayInput interface {
	pulumi.Input

	ToUserPolicyTypeArrayOutput() UserPolicyTypeArrayOutput
	ToUserPolicyTypeArrayOutputWithContext(context.Context) UserPolicyTypeArrayOutput
}

type UserPolicyTypeArray []UserPolicyTypeInput

func (UserPolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPolicyType)(nil)).Elem()
}

func (i UserPolicyTypeArray) ToUserPolicyTypeArrayOutput() UserPolicyTypeArrayOutput {
	return i.ToUserPolicyTypeArrayOutputWithContext(context.Background())
}

func (i UserPolicyTypeArray) ToUserPolicyTypeArrayOutputWithContext(ctx context.Context) UserPolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPolicyTypeArrayOutput)
}

// Contains information about an attached policy.
//
//	An attached policy is a managed policy that has been attached to a user, group, or role.
//	For more information about managed policies, refer to [Managed Policies and Inline Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the *User Guide*.
type UserPolicyTypeOutput struct{ *pulumi.OutputState }

func (UserPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPolicyType)(nil)).Elem()
}

func (o UserPolicyTypeOutput) ToUserPolicyTypeOutput() UserPolicyTypeOutput {
	return o
}

func (o UserPolicyTypeOutput) ToUserPolicyTypeOutputWithContext(ctx context.Context) UserPolicyTypeOutput {
	return o
}

// The entire contents of the policy that defines permissions. For more information, see [Overview of JSON policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policies-json).
func (o UserPolicyTypeOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v UserPolicyType) interface{} { return v.PolicyDocument }).(pulumi.AnyOutput)
}

// The friendly name (not ARN) identifying the policy.
func (o UserPolicyTypeOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v UserPolicyType) string { return v.PolicyName }).(pulumi.StringOutput)
}

type UserPolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (UserPolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPolicyType)(nil)).Elem()
}

func (o UserPolicyTypeArrayOutput) ToUserPolicyTypeArrayOutput() UserPolicyTypeArrayOutput {
	return o
}

func (o UserPolicyTypeArrayOutput) ToUserPolicyTypeArrayOutputWithContext(ctx context.Context) UserPolicyTypeArrayOutput {
	return o
}

func (o UserPolicyTypeArrayOutput) Index(i pulumi.IntInput) UserPolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPolicyType {
		return vs[0].([]UserPolicyType)[vs[1].(int)]
	}).(UserPolicyTypeOutput)
}

// A structure that represents user-provided metadata that can be associated with an IAM resource. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide*.
type UserTag struct {
	// The key name that can be used to look up or retrieve the associated value. For example, ``Department`` or ``Cost Center`` are common choices.
	Key string `pulumi:"key"`
	// The value associated with this tag. For example, tags with a key name of ``Department`` could have values such as ``Human Resources``, ``Accounting``, and ``Support``. Tags with a key name of ``Cost Center`` might have values that consist of the number associated with the different cost centers in your company. Typically, many resources have tags with the same key name but with different values.
	//    AWS always interprets the tag ``Value`` as a single string. If you need to store an array, you can store comma-separated values in the string. However, you must interpret the value in your code.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type VirtualMfaDeviceTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyTypeInput)(nil)).Elem(), GroupPolicyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupPolicyTypeArrayInput)(nil)).Elem(), GroupPolicyTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePolicyTypeInput)(nil)).Elem(), RolePolicyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePolicyTypeArrayInput)(nil)).Elem(), RolePolicyTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLoginProfileInput)(nil)).Elem(), UserLoginProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLoginProfilePtrInput)(nil)).Elem(), UserLoginProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPolicyTypeInput)(nil)).Elem(), UserPolicyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPolicyTypeArrayInput)(nil)).Elem(), UserPolicyTypeArray{})
	pulumi.RegisterOutputType(GroupPolicyTypeOutput{})
	pulumi.RegisterOutputType(GroupPolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(RolePolicyTypeOutput{})
	pulumi.RegisterOutputType(RolePolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(UserLoginProfileOutput{})
	pulumi.RegisterOutputType(UserLoginProfilePtrOutput{})
	pulumi.RegisterOutputType(UserPolicyTypeOutput{})
	pulumi.RegisterOutputType(UserPolicyTypeArrayOutput{})
}
