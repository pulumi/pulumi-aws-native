// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IAM::SAMLProvider
func LookupSamlProvider(ctx *pulumi.Context, args *LookupSamlProviderArgs, opts ...pulumi.InvokeOption) (*LookupSamlProviderResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSamlProviderResult
	err := ctx.Invoke("aws-native:iam:getSamlProvider", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSamlProviderArgs struct {
	// Amazon Resource Name (ARN) of the SAML provider
	Arn string `pulumi:"arn"`
}

type LookupSamlProviderResult struct {
	// Amazon Resource Name (ARN) of the SAML provider
	Arn *string `pulumi:"arn"`
	// An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.
	//
	// For more information, see [About SAML 2.0-based federation](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html) in the *IAM User Guide*
	SamlMetadataDocument *string `pulumi:"samlMetadataDocument"`
	// A list of tags that you want to attach to the new IAM SAML provider. Each tag consists of a key name and an associated value. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide* .
	//
	// > If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupSamlProviderOutput(ctx *pulumi.Context, args LookupSamlProviderOutputArgs, opts ...pulumi.InvokeOption) LookupSamlProviderResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSamlProviderResultOutput, error) {
			args := v.(LookupSamlProviderArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:iam:getSamlProvider", args, LookupSamlProviderResultOutput{}, options).(LookupSamlProviderResultOutput), nil
		}).(LookupSamlProviderResultOutput)
}

type LookupSamlProviderOutputArgs struct {
	// Amazon Resource Name (ARN) of the SAML provider
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupSamlProviderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSamlProviderArgs)(nil)).Elem()
}

type LookupSamlProviderResultOutput struct{ *pulumi.OutputState }

func (LookupSamlProviderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSamlProviderResult)(nil)).Elem()
}

func (o LookupSamlProviderResultOutput) ToLookupSamlProviderResultOutput() LookupSamlProviderResultOutput {
	return o
}

func (o LookupSamlProviderResultOutput) ToLookupSamlProviderResultOutputWithContext(ctx context.Context) LookupSamlProviderResultOutput {
	return o
}

// Amazon Resource Name (ARN) of the SAML provider
func (o LookupSamlProviderResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSamlProviderResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.
//
// For more information, see [About SAML 2.0-based federation](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html) in the *IAM User Guide*
func (o LookupSamlProviderResultOutput) SamlMetadataDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSamlProviderResult) *string { return v.SamlMetadataDocument }).(pulumi.StringPtrOutput)
}

// A list of tags that you want to attach to the new IAM SAML provider. Each tag consists of a key name and an associated value. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the *IAM User Guide* .
//
// > If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.
func (o LookupSamlProviderResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupSamlProviderResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSamlProviderResultOutput{})
}
