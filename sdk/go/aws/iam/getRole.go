// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::IAM::Role
func LookupRole(ctx *pulumi.Context, args *LookupRoleArgs, opts ...pulumi.InvokeOption) (*LookupRoleResult, error) {
	var rv LookupRoleResult
	err := ctx.Invoke("aws-native:iam:getRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRoleArgs struct {
	// A name for the IAM role, up to 64 characters in length.
	RoleName string `pulumi:"roleName"`
}

type LookupRoleResult struct {
	// The Amazon Resource Name (ARN) for the role.
	Arn *string `pulumi:"arn"`
	// The trust policy that is associated with this role.
	AssumeRolePolicyDocument interface{} `pulumi:"assumeRolePolicyDocument"`
	// A description of the role that you provide.
	Description *string `pulumi:"description"`
	// A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
	ManagedPolicyArns []string `pulumi:"managedPolicyArns"`
	// The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.
	MaxSessionDuration *int `pulumi:"maxSessionDuration"`
	// The ARN of the policy used to set the permissions boundary for the role.
	PermissionsBoundary *string `pulumi:"permissionsBoundary"`
	// Adds or updates an inline policy document that is embedded in the specified IAM role.
	Policies []RolePolicy `pulumi:"policies"`
	// The stable and unique string identifying the role.
	RoleId *string `pulumi:"roleId"`
	// A list of tags that are attached to the role.
	Tags []RoleTag `pulumi:"tags"`
}

func LookupRoleOutput(ctx *pulumi.Context, args LookupRoleOutputArgs, opts ...pulumi.InvokeOption) LookupRoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRoleResult, error) {
			args := v.(LookupRoleArgs)
			r, err := LookupRole(ctx, &args, opts...)
			var s LookupRoleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRoleResultOutput)
}

type LookupRoleOutputArgs struct {
	// A name for the IAM role, up to 64 characters in length.
	RoleName pulumi.StringInput `pulumi:"roleName"`
}

func (LookupRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleArgs)(nil)).Elem()
}

type LookupRoleResultOutput struct{ *pulumi.OutputState }

func (LookupRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRoleResult)(nil)).Elem()
}

func (o LookupRoleResultOutput) ToLookupRoleResultOutput() LookupRoleResultOutput {
	return o
}

func (o LookupRoleResultOutput) ToLookupRoleResultOutputWithContext(ctx context.Context) LookupRoleResultOutput {
	return o
}

// The Amazon Resource Name (ARN) for the role.
func (o LookupRoleResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoleResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The trust policy that is associated with this role.
func (o LookupRoleResultOutput) AssumeRolePolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupRoleResult) interface{} { return v.AssumeRolePolicyDocument }).(pulumi.AnyOutput)
}

// A description of the role that you provide.
func (o LookupRoleResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoleResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of Amazon Resource Names (ARNs) of the IAM managed policies that you want to attach to the role.
func (o LookupRoleResultOutput) ManagedPolicyArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRoleResult) []string { return v.ManagedPolicyArns }).(pulumi.StringArrayOutput)
}

// The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default maximum of one hour is applied. This setting can have a value from 1 hour to 12 hours.
func (o LookupRoleResultOutput) MaxSessionDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRoleResult) *int { return v.MaxSessionDuration }).(pulumi.IntPtrOutput)
}

// The ARN of the policy used to set the permissions boundary for the role.
func (o LookupRoleResultOutput) PermissionsBoundary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoleResult) *string { return v.PermissionsBoundary }).(pulumi.StringPtrOutput)
}

// Adds or updates an inline policy document that is embedded in the specified IAM role.
func (o LookupRoleResultOutput) Policies() RolePolicyArrayOutput {
	return o.ApplyT(func(v LookupRoleResult) []RolePolicy { return v.Policies }).(RolePolicyArrayOutput)
}

// The stable and unique string identifying the role.
func (o LookupRoleResultOutput) RoleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRoleResult) *string { return v.RoleId }).(pulumi.StringPtrOutput)
}

// A list of tags that are attached to the role.
func (o LookupRoleResultOutput) Tags() RoleTagArrayOutput {
	return o.ApplyT(func(v LookupRoleResult) []RoleTag { return v.Tags }).(RoleTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRoleResultOutput{})
}
