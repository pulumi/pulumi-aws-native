// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package odb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::ODB::CloudAutonomousVmCluster resource creates a Cloud Autonomous VM Cluster
type CloudAutonomousVmCluster struct {
	pulumi.CustomResourceState

	// The percentage of data storage currently in use for Autonomous Databases in the Autonomous VM cluster.
	AutonomousDataStoragePercentage pulumi.Float64Output `pulumi:"autonomousDataStoragePercentage"`
	// The data storage size allocated for Autonomous Databases in the Autonomous VM cluster, in TB.
	AutonomousDataStorageSizeInTbs pulumi.Float64PtrOutput `pulumi:"autonomousDataStorageSizeInTbs"`
	// The available data storage space for Autonomous Databases in the Autonomous VM cluster, in TB.
	AvailableAutonomousDataStorageSizeInTbs pulumi.Float64Output `pulumi:"availableAutonomousDataStorageSizeInTbs"`
	// The number of Autonomous CDBs that you can create with the currently available storage.
	AvailableContainerDatabases pulumi.IntOutput `pulumi:"availableContainerDatabases"`
	// The number of CPU cores available for allocation to Autonomous Databases.
	AvailableCpus pulumi.Float64Output `pulumi:"availableCpus"`
	// The Amazon Resource Name (ARN) for the Autonomous VM cluster.
	CloudAutonomousVmClusterArn pulumi.StringOutput `pulumi:"cloudAutonomousVmClusterArn"`
	// The unique identifier of the Autonomous VM cluster.
	CloudAutonomousVmClusterId pulumi.StringOutput `pulumi:"cloudAutonomousVmClusterId"`
	// The unique identifier of the Cloud Exadata Infrastructure containing this Autonomous VM cluster.
	CloudExadataInfrastructureId pulumi.StringPtrOutput `pulumi:"cloudExadataInfrastructureId"`
	// The compute model of the Autonomous VM cluster: ECPU or OCPU.
	ComputeModel CloudAutonomousVmClusterComputeModelOutput `pulumi:"computeModel"`
	// The total number of CPU cores in the Autonomous VM cluster.
	CpuCoreCount pulumi.IntOutput `pulumi:"cpuCoreCount"`
	// The number of CPU cores enabled per node in the Autonomous VM cluster.
	CpuCoreCountPerNode pulumi.IntPtrOutput `pulumi:"cpuCoreCountPerNode"`
	// The percentage of total CPU cores currently in use in the Autonomous VM cluster.
	CpuPercentage pulumi.Float64Output `pulumi:"cpuPercentage"`
	// The total data storage allocated to the Autonomous VM cluster, in GB.
	DataStorageSizeInGbs pulumi.Float64Output `pulumi:"dataStorageSizeInGbs"`
	// The total data storage allocated to the Autonomous VM cluster, in TB.
	DataStorageSizeInTbs pulumi.Float64Output `pulumi:"dataStorageSizeInTbs"`
	// The local node storage allocated to the Autonomous VM cluster, in gigabytes (GB).
	DbNodeStorageSizeInGbs pulumi.IntOutput `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of database servers associated with the Autonomous VM cluster.
	DbServers pulumi.StringArrayOutput `pulumi:"dbServers"`
	// The user-provided description of the Autonomous VM cluster.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The display name of the Autonomous VM cluster.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The domain name for the Autonomous VM cluster.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// The minimum value to which you can scale down the Exadata storage, in TB.
	ExadataStorageInTbsLowestScaledValue pulumi.Float64Output `pulumi:"exadataStorageInTbsLowestScaledValue"`
	// The hostname for the Autonomous VM cluster.
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// Indicates whether mutual TLS (mTLS) authentication is enabled for the Autonomous VM cluster.
	IsMtlsEnabledVmCluster pulumi.BoolPtrOutput `pulumi:"isMtlsEnabledVmCluster"`
	// The Oracle license model that applies to the Autonomous VM cluster. Valid values are LICENSE_INCLUDED or BRING_YOUR_OWN_LICENSE.
	LicenseModel CloudAutonomousVmClusterLicenseModelPtrOutput `pulumi:"licenseModel"`
	// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindow CloudAutonomousVmClusterMaintenanceWindowPtrOutput `pulumi:"maintenanceWindow"`
	// The minimum value to which you can scale down the maximum number of Autonomous CDBs.
	MaxAcdsLowestScaledValue pulumi.IntOutput `pulumi:"maxAcdsLowestScaledValue"`
	// The amount of memory allocated per Oracle Compute Unit, in GB.
	MemoryPerOracleComputeUnitInGbs pulumi.IntPtrOutput `pulumi:"memoryPerOracleComputeUnitInGbs"`
	// The total amount of memory allocated to the Autonomous VM cluster, in gigabytes (GB).
	MemorySizeInGbs pulumi.IntOutput `pulumi:"memorySizeInGbs"`
	// The number of database server nodes in the Autonomous VM cluster.
	NodeCount pulumi.IntOutput `pulumi:"nodeCount"`
	// The number of Autonomous CDBs that can't be provisioned because of resource constraints.
	NonProvisionableAutonomousContainerDatabases pulumi.IntOutput `pulumi:"nonProvisionableAutonomousContainerDatabases"`
	// The name of the OCI resource anchor associated with this Autonomous VM cluster.
	OciResourceAnchorName pulumi.StringOutput `pulumi:"ociResourceAnchorName"`
	// The URL for accessing the OCI console page for this Autonomous VM cluster.
	OciUrl pulumi.StringOutput `pulumi:"ociUrl"`
	// The Oracle Cloud Identifier (OCID) of the Autonomous VM cluster.
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// The unique identifier of the ODB network associated with this Autonomous VM cluster.
	OdbNetworkId pulumi.StringPtrOutput `pulumi:"odbNetworkId"`
	// The number of Autonomous CDBs that can be provisioned in the Autonomous VM cluster.
	ProvisionableAutonomousContainerDatabases pulumi.IntOutput `pulumi:"provisionableAutonomousContainerDatabases"`
	// The number of Autonomous CDBs currently provisioned in the Autonomous VM cluster.
	ProvisionedAutonomousContainerDatabases pulumi.IntOutput `pulumi:"provisionedAutonomousContainerDatabases"`
	// The number of CPU cores currently provisioned in the Autonomous VM cluster.
	ProvisionedCpus pulumi.Float64Output `pulumi:"provisionedCpus"`
	// The number of CPU cores that can be reclaimed from terminated or scaled-down Autonomous Databases.
	ReclaimableCpus pulumi.Float64Output `pulumi:"reclaimableCpus"`
	// The number of CPU cores reserved for system operations and redundancy.
	ReservedCpus pulumi.Float64Output `pulumi:"reservedCpus"`
	// The SCAN listener port for non-TLS (TCP) protocol. The default is 1521.
	ScanListenerPortNonTls pulumi.IntPtrOutput `pulumi:"scanListenerPortNonTls"`
	// The SCAN listener port for TLS (TCP) protocol. The default is 2484.
	ScanListenerPortTls pulumi.IntPtrOutput `pulumi:"scanListenerPortTls"`
	// The shape of the Exadata infrastructure for the Autonomous VM cluster.
	Shape pulumi.StringOutput `pulumi:"shape"`
	// The tags associated with the Autonomous VM cluster.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The time zone of the Autonomous VM cluster.
	TimeZone pulumi.StringPtrOutput `pulumi:"timeZone"`
	// The total number of Autonomous Container Databases that can be created with the allocated local storage.
	TotalContainerDatabases pulumi.IntPtrOutput `pulumi:"totalContainerDatabases"`
}

// NewCloudAutonomousVmCluster registers a new resource with the given unique name, arguments, and options.
func NewCloudAutonomousVmCluster(ctx *pulumi.Context,
	name string, args *CloudAutonomousVmClusterArgs, opts ...pulumi.ResourceOption) (*CloudAutonomousVmCluster, error) {
	if args == nil {
		args = &CloudAutonomousVmClusterArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"autonomousDataStorageSizeInTbs",
		"cloudExadataInfrastructureId",
		"cpuCoreCountPerNode",
		"dbServers[*]",
		"description",
		"displayName",
		"isMtlsEnabledVmCluster",
		"licenseModel",
		"maintenanceWindow",
		"memoryPerOracleComputeUnitInGbs",
		"odbNetworkId",
		"scanListenerPortNonTls",
		"scanListenerPortTls",
		"timeZone",
		"totalContainerDatabases",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudAutonomousVmCluster
	err := ctx.RegisterResource("aws-native:odb:CloudAutonomousVmCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudAutonomousVmCluster gets an existing CloudAutonomousVmCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudAutonomousVmCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudAutonomousVmClusterState, opts ...pulumi.ResourceOption) (*CloudAutonomousVmCluster, error) {
	var resource CloudAutonomousVmCluster
	err := ctx.ReadResource("aws-native:odb:CloudAutonomousVmCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudAutonomousVmCluster resources.
type cloudAutonomousVmClusterState struct {
}

type CloudAutonomousVmClusterState struct {
}

func (CloudAutonomousVmClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAutonomousVmClusterState)(nil)).Elem()
}

type cloudAutonomousVmClusterArgs struct {
	// The data storage size allocated for Autonomous Databases in the Autonomous VM cluster, in TB.
	AutonomousDataStorageSizeInTbs *float64 `pulumi:"autonomousDataStorageSizeInTbs"`
	// The unique identifier of the Cloud Exadata Infrastructure containing this Autonomous VM cluster.
	CloudExadataInfrastructureId *string `pulumi:"cloudExadataInfrastructureId"`
	// The number of CPU cores enabled per node in the Autonomous VM cluster.
	CpuCoreCountPerNode *int `pulumi:"cpuCoreCountPerNode"`
	// The list of database servers associated with the Autonomous VM cluster.
	DbServers []string `pulumi:"dbServers"`
	// The user-provided description of the Autonomous VM cluster.
	Description *string `pulumi:"description"`
	// The display name of the Autonomous VM cluster.
	DisplayName *string `pulumi:"displayName"`
	// Indicates whether mutual TLS (mTLS) authentication is enabled for the Autonomous VM cluster.
	IsMtlsEnabledVmCluster *bool `pulumi:"isMtlsEnabledVmCluster"`
	// The Oracle license model that applies to the Autonomous VM cluster. Valid values are LICENSE_INCLUDED or BRING_YOUR_OWN_LICENSE.
	LicenseModel *CloudAutonomousVmClusterLicenseModel `pulumi:"licenseModel"`
	// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindow *CloudAutonomousVmClusterMaintenanceWindow `pulumi:"maintenanceWindow"`
	// The amount of memory allocated per Oracle Compute Unit, in GB.
	MemoryPerOracleComputeUnitInGbs *int `pulumi:"memoryPerOracleComputeUnitInGbs"`
	// The unique identifier of the ODB network associated with this Autonomous VM cluster.
	OdbNetworkId *string `pulumi:"odbNetworkId"`
	// The SCAN listener port for non-TLS (TCP) protocol. The default is 1521.
	ScanListenerPortNonTls *int `pulumi:"scanListenerPortNonTls"`
	// The SCAN listener port for TLS (TCP) protocol. The default is 2484.
	ScanListenerPortTls *int `pulumi:"scanListenerPortTls"`
	// The tags associated with the Autonomous VM cluster.
	Tags []aws.Tag `pulumi:"tags"`
	// The time zone of the Autonomous VM cluster.
	TimeZone *string `pulumi:"timeZone"`
	// The total number of Autonomous Container Databases that can be created with the allocated local storage.
	TotalContainerDatabases *int `pulumi:"totalContainerDatabases"`
}

// The set of arguments for constructing a CloudAutonomousVmCluster resource.
type CloudAutonomousVmClusterArgs struct {
	// The data storage size allocated for Autonomous Databases in the Autonomous VM cluster, in TB.
	AutonomousDataStorageSizeInTbs pulumi.Float64PtrInput
	// The unique identifier of the Cloud Exadata Infrastructure containing this Autonomous VM cluster.
	CloudExadataInfrastructureId pulumi.StringPtrInput
	// The number of CPU cores enabled per node in the Autonomous VM cluster.
	CpuCoreCountPerNode pulumi.IntPtrInput
	// The list of database servers associated with the Autonomous VM cluster.
	DbServers pulumi.StringArrayInput
	// The user-provided description of the Autonomous VM cluster.
	Description pulumi.StringPtrInput
	// The display name of the Autonomous VM cluster.
	DisplayName pulumi.StringPtrInput
	// Indicates whether mutual TLS (mTLS) authentication is enabled for the Autonomous VM cluster.
	IsMtlsEnabledVmCluster pulumi.BoolPtrInput
	// The Oracle license model that applies to the Autonomous VM cluster. Valid values are LICENSE_INCLUDED or BRING_YOUR_OWN_LICENSE.
	LicenseModel CloudAutonomousVmClusterLicenseModelPtrInput
	// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window.
	MaintenanceWindow CloudAutonomousVmClusterMaintenanceWindowPtrInput
	// The amount of memory allocated per Oracle Compute Unit, in GB.
	MemoryPerOracleComputeUnitInGbs pulumi.IntPtrInput
	// The unique identifier of the ODB network associated with this Autonomous VM cluster.
	OdbNetworkId pulumi.StringPtrInput
	// The SCAN listener port for non-TLS (TCP) protocol. The default is 1521.
	ScanListenerPortNonTls pulumi.IntPtrInput
	// The SCAN listener port for TLS (TCP) protocol. The default is 2484.
	ScanListenerPortTls pulumi.IntPtrInput
	// The tags associated with the Autonomous VM cluster.
	Tags aws.TagArrayInput
	// The time zone of the Autonomous VM cluster.
	TimeZone pulumi.StringPtrInput
	// The total number of Autonomous Container Databases that can be created with the allocated local storage.
	TotalContainerDatabases pulumi.IntPtrInput
}

func (CloudAutonomousVmClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudAutonomousVmClusterArgs)(nil)).Elem()
}

type CloudAutonomousVmClusterInput interface {
	pulumi.Input

	ToCloudAutonomousVmClusterOutput() CloudAutonomousVmClusterOutput
	ToCloudAutonomousVmClusterOutputWithContext(ctx context.Context) CloudAutonomousVmClusterOutput
}

func (*CloudAutonomousVmCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAutonomousVmCluster)(nil)).Elem()
}

func (i *CloudAutonomousVmCluster) ToCloudAutonomousVmClusterOutput() CloudAutonomousVmClusterOutput {
	return i.ToCloudAutonomousVmClusterOutputWithContext(context.Background())
}

func (i *CloudAutonomousVmCluster) ToCloudAutonomousVmClusterOutputWithContext(ctx context.Context) CloudAutonomousVmClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudAutonomousVmClusterOutput)
}

type CloudAutonomousVmClusterOutput struct{ *pulumi.OutputState }

func (CloudAutonomousVmClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudAutonomousVmCluster)(nil)).Elem()
}

func (o CloudAutonomousVmClusterOutput) ToCloudAutonomousVmClusterOutput() CloudAutonomousVmClusterOutput {
	return o
}

func (o CloudAutonomousVmClusterOutput) ToCloudAutonomousVmClusterOutputWithContext(ctx context.Context) CloudAutonomousVmClusterOutput {
	return o
}

// The percentage of data storage currently in use for Autonomous Databases in the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) AutonomousDataStoragePercentage() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.Float64Output { return v.AutonomousDataStoragePercentage }).(pulumi.Float64Output)
}

// The data storage size allocated for Autonomous Databases in the Autonomous VM cluster, in TB.
func (o CloudAutonomousVmClusterOutput) AutonomousDataStorageSizeInTbs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.Float64PtrOutput { return v.AutonomousDataStorageSizeInTbs }).(pulumi.Float64PtrOutput)
}

// The available data storage space for Autonomous Databases in the Autonomous VM cluster, in TB.
func (o CloudAutonomousVmClusterOutput) AvailableAutonomousDataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.Float64Output {
		return v.AvailableAutonomousDataStorageSizeInTbs
	}).(pulumi.Float64Output)
}

// The number of Autonomous CDBs that you can create with the currently available storage.
func (o CloudAutonomousVmClusterOutput) AvailableContainerDatabases() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntOutput { return v.AvailableContainerDatabases }).(pulumi.IntOutput)
}

// The number of CPU cores available for allocation to Autonomous Databases.
func (o CloudAutonomousVmClusterOutput) AvailableCpus() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.Float64Output { return v.AvailableCpus }).(pulumi.Float64Output)
}

// The Amazon Resource Name (ARN) for the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) CloudAutonomousVmClusterArn() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringOutput { return v.CloudAutonomousVmClusterArn }).(pulumi.StringOutput)
}

// The unique identifier of the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) CloudAutonomousVmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringOutput { return v.CloudAutonomousVmClusterId }).(pulumi.StringOutput)
}

// The unique identifier of the Cloud Exadata Infrastructure containing this Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) CloudExadataInfrastructureId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringPtrOutput { return v.CloudExadataInfrastructureId }).(pulumi.StringPtrOutput)
}

// The compute model of the Autonomous VM cluster: ECPU or OCPU.
func (o CloudAutonomousVmClusterOutput) ComputeModel() CloudAutonomousVmClusterComputeModelOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) CloudAutonomousVmClusterComputeModelOutput { return v.ComputeModel }).(CloudAutonomousVmClusterComputeModelOutput)
}

// The total number of CPU cores in the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) CpuCoreCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntOutput { return v.CpuCoreCount }).(pulumi.IntOutput)
}

// The number of CPU cores enabled per node in the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) CpuCoreCountPerNode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntPtrOutput { return v.CpuCoreCountPerNode }).(pulumi.IntPtrOutput)
}

// The percentage of total CPU cores currently in use in the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) CpuPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.Float64Output { return v.CpuPercentage }).(pulumi.Float64Output)
}

// The total data storage allocated to the Autonomous VM cluster, in GB.
func (o CloudAutonomousVmClusterOutput) DataStorageSizeInGbs() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.Float64Output { return v.DataStorageSizeInGbs }).(pulumi.Float64Output)
}

// The total data storage allocated to the Autonomous VM cluster, in TB.
func (o CloudAutonomousVmClusterOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.Float64Output { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// The local node storage allocated to the Autonomous VM cluster, in gigabytes (GB).
func (o CloudAutonomousVmClusterOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntOutput { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The list of database servers associated with the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) DbServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringArrayOutput { return v.DbServers }).(pulumi.StringArrayOutput)
}

// The user-provided description of the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The domain name for the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// The minimum value to which you can scale down the Exadata storage, in TB.
func (o CloudAutonomousVmClusterOutput) ExadataStorageInTbsLowestScaledValue() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.Float64Output { return v.ExadataStorageInTbsLowestScaledValue }).(pulumi.Float64Output)
}

// The hostname for the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringOutput { return v.Hostname }).(pulumi.StringOutput)
}

// Indicates whether mutual TLS (mTLS) authentication is enabled for the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) IsMtlsEnabledVmCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.BoolPtrOutput { return v.IsMtlsEnabledVmCluster }).(pulumi.BoolPtrOutput)
}

// The Oracle license model that applies to the Autonomous VM cluster. Valid values are LICENSE_INCLUDED or BRING_YOUR_OWN_LICENSE.
func (o CloudAutonomousVmClusterOutput) LicenseModel() CloudAutonomousVmClusterLicenseModelPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) CloudAutonomousVmClusterLicenseModelPtrOutput { return v.LicenseModel }).(CloudAutonomousVmClusterLicenseModelPtrOutput)
}

// The scheduling details for the maintenance window. Patching and system updates take place during the maintenance window.
func (o CloudAutonomousVmClusterOutput) MaintenanceWindow() CloudAutonomousVmClusterMaintenanceWindowPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) CloudAutonomousVmClusterMaintenanceWindowPtrOutput {
		return v.MaintenanceWindow
	}).(CloudAutonomousVmClusterMaintenanceWindowPtrOutput)
}

// The minimum value to which you can scale down the maximum number of Autonomous CDBs.
func (o CloudAutonomousVmClusterOutput) MaxAcdsLowestScaledValue() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntOutput { return v.MaxAcdsLowestScaledValue }).(pulumi.IntOutput)
}

// The amount of memory allocated per Oracle Compute Unit, in GB.
func (o CloudAutonomousVmClusterOutput) MemoryPerOracleComputeUnitInGbs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntPtrOutput { return v.MemoryPerOracleComputeUnitInGbs }).(pulumi.IntPtrOutput)
}

// The total amount of memory allocated to the Autonomous VM cluster, in gigabytes (GB).
func (o CloudAutonomousVmClusterOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntOutput { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

// The number of database server nodes in the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntOutput { return v.NodeCount }).(pulumi.IntOutput)
}

// The number of Autonomous CDBs that can't be provisioned because of resource constraints.
func (o CloudAutonomousVmClusterOutput) NonProvisionableAutonomousContainerDatabases() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntOutput {
		return v.NonProvisionableAutonomousContainerDatabases
	}).(pulumi.IntOutput)
}

// The name of the OCI resource anchor associated with this Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) OciResourceAnchorName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringOutput { return v.OciResourceAnchorName }).(pulumi.StringOutput)
}

// The URL for accessing the OCI console page for this Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) OciUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringOutput { return v.OciUrl }).(pulumi.StringOutput)
}

// The Oracle Cloud Identifier (OCID) of the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// The unique identifier of the ODB network associated with this Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) OdbNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringPtrOutput { return v.OdbNetworkId }).(pulumi.StringPtrOutput)
}

// The number of Autonomous CDBs that can be provisioned in the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) ProvisionableAutonomousContainerDatabases() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntOutput { return v.ProvisionableAutonomousContainerDatabases }).(pulumi.IntOutput)
}

// The number of Autonomous CDBs currently provisioned in the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) ProvisionedAutonomousContainerDatabases() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntOutput { return v.ProvisionedAutonomousContainerDatabases }).(pulumi.IntOutput)
}

// The number of CPU cores currently provisioned in the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) ProvisionedCpus() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.Float64Output { return v.ProvisionedCpus }).(pulumi.Float64Output)
}

// The number of CPU cores that can be reclaimed from terminated or scaled-down Autonomous Databases.
func (o CloudAutonomousVmClusterOutput) ReclaimableCpus() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.Float64Output { return v.ReclaimableCpus }).(pulumi.Float64Output)
}

// The number of CPU cores reserved for system operations and redundancy.
func (o CloudAutonomousVmClusterOutput) ReservedCpus() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.Float64Output { return v.ReservedCpus }).(pulumi.Float64Output)
}

// The SCAN listener port for non-TLS (TCP) protocol. The default is 1521.
func (o CloudAutonomousVmClusterOutput) ScanListenerPortNonTls() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntPtrOutput { return v.ScanListenerPortNonTls }).(pulumi.IntPtrOutput)
}

// The SCAN listener port for TLS (TCP) protocol. The default is 2484.
func (o CloudAutonomousVmClusterOutput) ScanListenerPortTls() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntPtrOutput { return v.ScanListenerPortTls }).(pulumi.IntPtrOutput)
}

// The shape of the Exadata infrastructure for the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) Shape() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringOutput { return v.Shape }).(pulumi.StringOutput)
}

// The tags associated with the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The time zone of the Autonomous VM cluster.
func (o CloudAutonomousVmClusterOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.StringPtrOutput { return v.TimeZone }).(pulumi.StringPtrOutput)
}

// The total number of Autonomous Container Databases that can be created with the allocated local storage.
func (o CloudAutonomousVmClusterOutput) TotalContainerDatabases() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudAutonomousVmCluster) pulumi.IntPtrOutput { return v.TotalContainerDatabases }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudAutonomousVmClusterInput)(nil)).Elem(), &CloudAutonomousVmCluster{})
	pulumi.RegisterOutputType(CloudAutonomousVmClusterOutput{})
}
