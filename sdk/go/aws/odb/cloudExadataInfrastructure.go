// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package odb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::ODB::CloudExadataInfrastructure resource creates an Exadata Infrastructure
type CloudExadataInfrastructure struct {
	pulumi.CustomResourceState

	// The number of storage servers requested for the Exadata infrastructure.
	ActivatedStorageCount pulumi.IntOutput `pulumi:"activatedStorageCount"`
	// The number of storage servers requested for the Exadata infrastructure.
	AdditionalStorageCount pulumi.IntOutput `pulumi:"additionalStorageCount"`
	// The name of the Availability Zone (AZ) where the Exadata infrastructure is located.
	AvailabilityZone pulumi.StringPtrOutput `pulumi:"availabilityZone"`
	// The AZ ID of the AZ where the Exadata infrastructure is located.
	AvailabilityZoneId pulumi.StringPtrOutput `pulumi:"availabilityZoneId"`
	// The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
	AvailableStorageSizeInGbs pulumi.IntOutput `pulumi:"availableStorageSizeInGbs"`
	// The Amazon Resource Name (ARN) for the Exadata infrastructure.
	CloudExadataInfrastructureArn pulumi.StringOutput `pulumi:"cloudExadataInfrastructureArn"`
	// The unique identifier for the Exadata infrastructure.
	CloudExadataInfrastructureId pulumi.StringOutput `pulumi:"cloudExadataInfrastructureId"`
	// The number of database servers for the Exadata infrastructure.
	ComputeCount pulumi.IntPtrOutput `pulumi:"computeCount"`
	// The OCI model compute model used when you create or clone an instance: ECPU or OCPU. An ECPU is an abstracted measure of compute resources. ECPUs are based on the number of cores elastically allocated from a pool of compute and storage servers. An OCPU is a legacy physical measure of compute resources. OCPUs are based on the physical core of a processor with hyper-threading enabled.
	ComputeModel pulumi.StringOutput `pulumi:"computeModel"`
	// The total number of CPU cores that are allocated to the Exadata infrastructure.
	CpuCount pulumi.IntOutput `pulumi:"cpuCount"`
	// The email addresses of contacts to receive notification from Oracle about maintenance updates for the Exadata infrastructure.
	CustomerContactsToSendToOci CloudExadataInfrastructureCustomerContactArrayOutput `pulumi:"customerContactsToSendToOci"`
	// The size of the Exadata infrastructure's data disk group, in terabytes (TB).
	DataStorageSizeInTbs pulumi.Float64Output `pulumi:"dataStorageSizeInTbs"`
	// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation.
	DatabaseServerType pulumi.StringPtrOutput `pulumi:"databaseServerType"`
	// The size of the Exadata infrastructure's local node storage, in gigabytes (GB).
	DbNodeStorageSizeInGbs pulumi.IntOutput `pulumi:"dbNodeStorageSizeInGbs"`
	// The list of database server identifiers for the Exadata infrastructure.
	DbServerIds pulumi.StringArrayOutput `pulumi:"dbServerIds"`
	// The software version of the database servers (dom0) in the Exadata infrastructure.
	DbServerVersion pulumi.StringOutput `pulumi:"dbServerVersion"`
	// The user-friendly name for the Exadata infrastructure.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The total number of CPU cores available on the Exadata infrastructure.
	MaxCpuCount pulumi.IntOutput `pulumi:"maxCpuCount"`
	// The total amount of data disk group storage, in terabytes (TB), that's available on the Exadata infrastructure.
	MaxDataStorageInTbs pulumi.Float64Output `pulumi:"maxDataStorageInTbs"`
	// The total amount of local node storage, in gigabytes (GB), that's available on the Exadata infrastructure.
	MaxDbNodeStorageSizeInGbs pulumi.IntOutput `pulumi:"maxDbNodeStorageSizeInGbs"`
	// The total amount of memory, in gigabytes (GB), that's available on the Exadata infrastructure.
	MaxMemoryInGbs pulumi.IntOutput `pulumi:"maxMemoryInGbs"`
	// The amount of memory, in gigabytes (GB), that's allocated on the Exadata infrastructure.
	MemorySizeInGbs pulumi.IntOutput `pulumi:"memorySizeInGbs"`
	// The name of the OCI resource anchor for the Exadata infrastructure.
	OciResourceAnchorName pulumi.StringOutput `pulumi:"ociResourceAnchorName"`
	// The HTTPS link to the Exadata infrastructure in OCI.
	OciUrl pulumi.StringOutput `pulumi:"ociUrl"`
	// The OCID of the Exadata infrastructure.
	Ocid pulumi.StringOutput `pulumi:"ocid"`
	// The model name of the Exadata infrastructure.
	Shape pulumi.StringPtrOutput `pulumi:"shape"`
	// The number of storage servers that are activated for the Exadata infrastructure.
	StorageCount pulumi.IntPtrOutput `pulumi:"storageCount"`
	// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation.
	StorageServerType pulumi.StringPtrOutput `pulumi:"storageServerType"`
	// The software version of the storage servers on the Exadata infrastructure.
	StorageServerVersion pulumi.StringOutput `pulumi:"storageServerVersion"`
	// Tags to assign to the Exadata Infrastructure.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The total amount of storage, in gigabytes (GB), on the the Exadata infrastructure.
	TotalStorageSizeInGbs pulumi.IntOutput `pulumi:"totalStorageSizeInGbs"`
}

// NewCloudExadataInfrastructure registers a new resource with the given unique name, arguments, and options.
func NewCloudExadataInfrastructure(ctx *pulumi.Context,
	name string, args *CloudExadataInfrastructureArgs, opts ...pulumi.ResourceOption) (*CloudExadataInfrastructure, error) {
	if args == nil {
		args = &CloudExadataInfrastructureArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"availabilityZone",
		"availabilityZoneId",
		"computeCount",
		"customerContactsToSendToOci[*]",
		"databaseServerType",
		"displayName",
		"shape",
		"storageCount",
		"storageServerType",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudExadataInfrastructure
	err := ctx.RegisterResource("aws-native:odb:CloudExadataInfrastructure", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudExadataInfrastructure gets an existing CloudExadataInfrastructure resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudExadataInfrastructure(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudExadataInfrastructureState, opts ...pulumi.ResourceOption) (*CloudExadataInfrastructure, error) {
	var resource CloudExadataInfrastructure
	err := ctx.ReadResource("aws-native:odb:CloudExadataInfrastructure", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudExadataInfrastructure resources.
type cloudExadataInfrastructureState struct {
}

type CloudExadataInfrastructureState struct {
}

func (CloudExadataInfrastructureState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudExadataInfrastructureState)(nil)).Elem()
}

type cloudExadataInfrastructureArgs struct {
	// The name of the Availability Zone (AZ) where the Exadata infrastructure is located.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The AZ ID of the AZ where the Exadata infrastructure is located.
	AvailabilityZoneId *string `pulumi:"availabilityZoneId"`
	// The number of database servers for the Exadata infrastructure.
	ComputeCount *int `pulumi:"computeCount"`
	// The email addresses of contacts to receive notification from Oracle about maintenance updates for the Exadata infrastructure.
	CustomerContactsToSendToOci []CloudExadataInfrastructureCustomerContact `pulumi:"customerContactsToSendToOci"`
	// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation.
	DatabaseServerType *string `pulumi:"databaseServerType"`
	// The user-friendly name for the Exadata infrastructure.
	DisplayName *string `pulumi:"displayName"`
	// The model name of the Exadata infrastructure.
	Shape *string `pulumi:"shape"`
	// The number of storage servers that are activated for the Exadata infrastructure.
	StorageCount *int `pulumi:"storageCount"`
	// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation.
	StorageServerType *string `pulumi:"storageServerType"`
	// Tags to assign to the Exadata Infrastructure.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a CloudExadataInfrastructure resource.
type CloudExadataInfrastructureArgs struct {
	// The name of the Availability Zone (AZ) where the Exadata infrastructure is located.
	AvailabilityZone pulumi.StringPtrInput
	// The AZ ID of the AZ where the Exadata infrastructure is located.
	AvailabilityZoneId pulumi.StringPtrInput
	// The number of database servers for the Exadata infrastructure.
	ComputeCount pulumi.IntPtrInput
	// The email addresses of contacts to receive notification from Oracle about maintenance updates for the Exadata infrastructure.
	CustomerContactsToSendToOci CloudExadataInfrastructureCustomerContactArrayInput
	// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation.
	DatabaseServerType pulumi.StringPtrInput
	// The user-friendly name for the Exadata infrastructure.
	DisplayName pulumi.StringPtrInput
	// The model name of the Exadata infrastructure.
	Shape pulumi.StringPtrInput
	// The number of storage servers that are activated for the Exadata infrastructure.
	StorageCount pulumi.IntPtrInput
	// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation.
	StorageServerType pulumi.StringPtrInput
	// Tags to assign to the Exadata Infrastructure.
	Tags aws.TagArrayInput
}

func (CloudExadataInfrastructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudExadataInfrastructureArgs)(nil)).Elem()
}

type CloudExadataInfrastructureInput interface {
	pulumi.Input

	ToCloudExadataInfrastructureOutput() CloudExadataInfrastructureOutput
	ToCloudExadataInfrastructureOutputWithContext(ctx context.Context) CloudExadataInfrastructureOutput
}

func (*CloudExadataInfrastructure) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudExadataInfrastructure)(nil)).Elem()
}

func (i *CloudExadataInfrastructure) ToCloudExadataInfrastructureOutput() CloudExadataInfrastructureOutput {
	return i.ToCloudExadataInfrastructureOutputWithContext(context.Background())
}

func (i *CloudExadataInfrastructure) ToCloudExadataInfrastructureOutputWithContext(ctx context.Context) CloudExadataInfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudExadataInfrastructureOutput)
}

type CloudExadataInfrastructureOutput struct{ *pulumi.OutputState }

func (CloudExadataInfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudExadataInfrastructure)(nil)).Elem()
}

func (o CloudExadataInfrastructureOutput) ToCloudExadataInfrastructureOutput() CloudExadataInfrastructureOutput {
	return o
}

func (o CloudExadataInfrastructureOutput) ToCloudExadataInfrastructureOutputWithContext(ctx context.Context) CloudExadataInfrastructureOutput {
	return o
}

// The number of storage servers requested for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) ActivatedStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.ActivatedStorageCount }).(pulumi.IntOutput)
}

// The number of storage servers requested for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) AdditionalStorageCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.AdditionalStorageCount }).(pulumi.IntOutput)
}

// The name of the Availability Zone (AZ) where the Exadata infrastructure is located.
func (o CloudExadataInfrastructureOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringPtrOutput { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The AZ ID of the AZ where the Exadata infrastructure is located.
func (o CloudExadataInfrastructureOutput) AvailabilityZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringPtrOutput { return v.AvailabilityZoneId }).(pulumi.StringPtrOutput)
}

// The amount of available storage, in gigabytes (GB), for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) AvailableStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.AvailableStorageSizeInGbs }).(pulumi.IntOutput)
}

// The Amazon Resource Name (ARN) for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) CloudExadataInfrastructureArn() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.CloudExadataInfrastructureArn }).(pulumi.StringOutput)
}

// The unique identifier for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) CloudExadataInfrastructureId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.CloudExadataInfrastructureId }).(pulumi.StringOutput)
}

// The number of database servers for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) ComputeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntPtrOutput { return v.ComputeCount }).(pulumi.IntPtrOutput)
}

// The OCI model compute model used when you create or clone an instance: ECPU or OCPU. An ECPU is an abstracted measure of compute resources. ECPUs are based on the number of cores elastically allocated from a pool of compute and storage servers. An OCPU is a legacy physical measure of compute resources. OCPUs are based on the physical core of a processor with hyper-threading enabled.
func (o CloudExadataInfrastructureOutput) ComputeModel() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.ComputeModel }).(pulumi.StringOutput)
}

// The total number of CPU cores that are allocated to the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.CpuCount }).(pulumi.IntOutput)
}

// The email addresses of contacts to receive notification from Oracle about maintenance updates for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) CustomerContactsToSendToOci() CloudExadataInfrastructureCustomerContactArrayOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) CloudExadataInfrastructureCustomerContactArrayOutput {
		return v.CustomerContactsToSendToOci
	}).(CloudExadataInfrastructureCustomerContactArrayOutput)
}

// The size of the Exadata infrastructure's data disk group, in terabytes (TB).
func (o CloudExadataInfrastructureOutput) DataStorageSizeInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.Float64Output { return v.DataStorageSizeInTbs }).(pulumi.Float64Output)
}

// The database server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation.
func (o CloudExadataInfrastructureOutput) DatabaseServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringPtrOutput { return v.DatabaseServerType }).(pulumi.StringPtrOutput)
}

// The size of the Exadata infrastructure's local node storage, in gigabytes (GB).
func (o CloudExadataInfrastructureOutput) DbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.DbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The list of database server identifiers for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) DbServerIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringArrayOutput { return v.DbServerIds }).(pulumi.StringArrayOutput)
}

// The software version of the database servers (dom0) in the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) DbServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.DbServerVersion }).(pulumi.StringOutput)
}

// The user-friendly name for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The total number of CPU cores available on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) MaxCpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.MaxCpuCount }).(pulumi.IntOutput)
}

// The total amount of data disk group storage, in terabytes (TB), that's available on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) MaxDataStorageInTbs() pulumi.Float64Output {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.Float64Output { return v.MaxDataStorageInTbs }).(pulumi.Float64Output)
}

// The total amount of local node storage, in gigabytes (GB), that's available on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) MaxDbNodeStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.MaxDbNodeStorageSizeInGbs }).(pulumi.IntOutput)
}

// The total amount of memory, in gigabytes (GB), that's available on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) MaxMemoryInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.MaxMemoryInGbs }).(pulumi.IntOutput)
}

// The amount of memory, in gigabytes (GB), that's allocated on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) MemorySizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.MemorySizeInGbs }).(pulumi.IntOutput)
}

// The name of the OCI resource anchor for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) OciResourceAnchorName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.OciResourceAnchorName }).(pulumi.StringOutput)
}

// The HTTPS link to the Exadata infrastructure in OCI.
func (o CloudExadataInfrastructureOutput) OciUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.OciUrl }).(pulumi.StringOutput)
}

// The OCID of the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) Ocid() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.Ocid }).(pulumi.StringOutput)
}

// The model name of the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) Shape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringPtrOutput { return v.Shape }).(pulumi.StringPtrOutput)
}

// The number of storage servers that are activated for the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) StorageCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntPtrOutput { return v.StorageCount }).(pulumi.IntPtrOutput)
}

// The storage server model type of the Exadata infrastructure. For the list of valid model names, use the ListDbSystemShapes operation.
func (o CloudExadataInfrastructureOutput) StorageServerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringPtrOutput { return v.StorageServerType }).(pulumi.StringPtrOutput)
}

// The software version of the storage servers on the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) StorageServerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.StringOutput { return v.StorageServerVersion }).(pulumi.StringOutput)
}

// Tags to assign to the Exadata Infrastructure.
func (o CloudExadataInfrastructureOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The total amount of storage, in gigabytes (GB), on the the Exadata infrastructure.
func (o CloudExadataInfrastructureOutput) TotalStorageSizeInGbs() pulumi.IntOutput {
	return o.ApplyT(func(v *CloudExadataInfrastructure) pulumi.IntOutput { return v.TotalStorageSizeInGbs }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudExadataInfrastructureInput)(nil)).Elem(), &CloudExadataInfrastructure{})
	pulumi.RegisterOutputType(CloudExadataInfrastructureOutput{})
}
