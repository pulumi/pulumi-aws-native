// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package odb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::ODB::OdbNetwork resource creates an ODB Network
type OdbNetwork struct {
	pulumi.CustomResourceState

	// The AWS Availability Zone (AZ) where the ODB network is located.
	AvailabilityZone pulumi.StringPtrOutput `pulumi:"availabilityZone"`
	// The AZ ID of the AZ where the ODB network is located.
	AvailabilityZoneId pulumi.StringPtrOutput `pulumi:"availabilityZoneId"`
	// The CIDR range of the backup subnet in the ODB network.
	BackupSubnetCidr pulumi.StringPtrOutput `pulumi:"backupSubnetCidr"`
	// The CIDR range of the client subnet in the ODB network.
	ClientSubnetCidr pulumi.StringPtrOutput `pulumi:"clientSubnetCidr"`
	// The DNS prefix to the default DNS domain name. The default DNS domain name is oraclevcn.com.
	DefaultDnsPrefix pulumi.StringPtrOutput `pulumi:"defaultDnsPrefix"`
	// Specifies whether to delete associated OCI networking resources along with the ODB network.
	DeleteAssociatedResources pulumi.BoolPtrOutput `pulumi:"deleteAssociatedResources"`
	// The user-friendly name of the ODB network.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The unique identifier of the OCI network anchor for the ODB network.
	OciNetworkAnchorId pulumi.StringOutput `pulumi:"ociNetworkAnchorId"`
	// The name of the OCI resource anchor that's associated with the ODB network.
	OciResourceAnchorName pulumi.StringOutput `pulumi:"ociResourceAnchorName"`
	// The URL for the VCN that's associated with the ODB network.
	OciVcnUrl pulumi.StringOutput `pulumi:"ociVcnUrl"`
	// The Amazon Resource Name (ARN) of the ODB network.
	OdbNetworkArn pulumi.StringOutput `pulumi:"odbNetworkArn"`
	// The unique identifier of the ODB network.
	OdbNetworkId pulumi.StringOutput `pulumi:"odbNetworkId"`
	// Tags to assign to the Odb Network.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewOdbNetwork registers a new resource with the given unique name, arguments, and options.
func NewOdbNetwork(ctx *pulumi.Context,
	name string, args *OdbNetworkArgs, opts ...pulumi.ResourceOption) (*OdbNetwork, error) {
	if args == nil {
		args = &OdbNetworkArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"availabilityZone",
		"availabilityZoneId",
		"backupSubnetCidr",
		"clientSubnetCidr",
		"defaultDnsPrefix",
		"displayName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OdbNetwork
	err := ctx.RegisterResource("aws-native:odb:OdbNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOdbNetwork gets an existing OdbNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOdbNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OdbNetworkState, opts ...pulumi.ResourceOption) (*OdbNetwork, error) {
	var resource OdbNetwork
	err := ctx.ReadResource("aws-native:odb:OdbNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OdbNetwork resources.
type odbNetworkState struct {
}

type OdbNetworkState struct {
}

func (OdbNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*odbNetworkState)(nil)).Elem()
}

type odbNetworkArgs struct {
	// The AWS Availability Zone (AZ) where the ODB network is located.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// The AZ ID of the AZ where the ODB network is located.
	AvailabilityZoneId *string `pulumi:"availabilityZoneId"`
	// The CIDR range of the backup subnet in the ODB network.
	BackupSubnetCidr *string `pulumi:"backupSubnetCidr"`
	// The CIDR range of the client subnet in the ODB network.
	ClientSubnetCidr *string `pulumi:"clientSubnetCidr"`
	// The DNS prefix to the default DNS domain name. The default DNS domain name is oraclevcn.com.
	DefaultDnsPrefix *string `pulumi:"defaultDnsPrefix"`
	// Specifies whether to delete associated OCI networking resources along with the ODB network.
	DeleteAssociatedResources *bool `pulumi:"deleteAssociatedResources"`
	// The user-friendly name of the ODB network.
	DisplayName *string `pulumi:"displayName"`
	// Tags to assign to the Odb Network.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a OdbNetwork resource.
type OdbNetworkArgs struct {
	// The AWS Availability Zone (AZ) where the ODB network is located.
	AvailabilityZone pulumi.StringPtrInput
	// The AZ ID of the AZ where the ODB network is located.
	AvailabilityZoneId pulumi.StringPtrInput
	// The CIDR range of the backup subnet in the ODB network.
	BackupSubnetCidr pulumi.StringPtrInput
	// The CIDR range of the client subnet in the ODB network.
	ClientSubnetCidr pulumi.StringPtrInput
	// The DNS prefix to the default DNS domain name. The default DNS domain name is oraclevcn.com.
	DefaultDnsPrefix pulumi.StringPtrInput
	// Specifies whether to delete associated OCI networking resources along with the ODB network.
	DeleteAssociatedResources pulumi.BoolPtrInput
	// The user-friendly name of the ODB network.
	DisplayName pulumi.StringPtrInput
	// Tags to assign to the Odb Network.
	Tags aws.TagArrayInput
}

func (OdbNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*odbNetworkArgs)(nil)).Elem()
}

type OdbNetworkInput interface {
	pulumi.Input

	ToOdbNetworkOutput() OdbNetworkOutput
	ToOdbNetworkOutputWithContext(ctx context.Context) OdbNetworkOutput
}

func (*OdbNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**OdbNetwork)(nil)).Elem()
}

func (i *OdbNetwork) ToOdbNetworkOutput() OdbNetworkOutput {
	return i.ToOdbNetworkOutputWithContext(context.Background())
}

func (i *OdbNetwork) ToOdbNetworkOutputWithContext(ctx context.Context) OdbNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OdbNetworkOutput)
}

type OdbNetworkOutput struct{ *pulumi.OutputState }

func (OdbNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OdbNetwork)(nil)).Elem()
}

func (o OdbNetworkOutput) ToOdbNetworkOutput() OdbNetworkOutput {
	return o
}

func (o OdbNetworkOutput) ToOdbNetworkOutputWithContext(ctx context.Context) OdbNetworkOutput {
	return o
}

// The AWS Availability Zone (AZ) where the ODB network is located.
func (o OdbNetworkOutput) AvailabilityZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringPtrOutput { return v.AvailabilityZone }).(pulumi.StringPtrOutput)
}

// The AZ ID of the AZ where the ODB network is located.
func (o OdbNetworkOutput) AvailabilityZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringPtrOutput { return v.AvailabilityZoneId }).(pulumi.StringPtrOutput)
}

// The CIDR range of the backup subnet in the ODB network.
func (o OdbNetworkOutput) BackupSubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringPtrOutput { return v.BackupSubnetCidr }).(pulumi.StringPtrOutput)
}

// The CIDR range of the client subnet in the ODB network.
func (o OdbNetworkOutput) ClientSubnetCidr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringPtrOutput { return v.ClientSubnetCidr }).(pulumi.StringPtrOutput)
}

// The DNS prefix to the default DNS domain name. The default DNS domain name is oraclevcn.com.
func (o OdbNetworkOutput) DefaultDnsPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringPtrOutput { return v.DefaultDnsPrefix }).(pulumi.StringPtrOutput)
}

// Specifies whether to delete associated OCI networking resources along with the ODB network.
func (o OdbNetworkOutput) DeleteAssociatedResources() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.BoolPtrOutput { return v.DeleteAssociatedResources }).(pulumi.BoolPtrOutput)
}

// The user-friendly name of the ODB network.
func (o OdbNetworkOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The unique identifier of the OCI network anchor for the ODB network.
func (o OdbNetworkOutput) OciNetworkAnchorId() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.OciNetworkAnchorId }).(pulumi.StringOutput)
}

// The name of the OCI resource anchor that's associated with the ODB network.
func (o OdbNetworkOutput) OciResourceAnchorName() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.OciResourceAnchorName }).(pulumi.StringOutput)
}

// The URL for the VCN that's associated with the ODB network.
func (o OdbNetworkOutput) OciVcnUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.OciVcnUrl }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the ODB network.
func (o OdbNetworkOutput) OdbNetworkArn() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.OdbNetworkArn }).(pulumi.StringOutput)
}

// The unique identifier of the ODB network.
func (o OdbNetworkOutput) OdbNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbNetwork) pulumi.StringOutput { return v.OdbNetworkId }).(pulumi.StringOutput)
}

// Tags to assign to the Odb Network.
func (o OdbNetworkOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *OdbNetwork) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OdbNetworkInput)(nil)).Elem(), &OdbNetwork{})
	pulumi.RegisterOutputType(OdbNetworkOutput{})
}
