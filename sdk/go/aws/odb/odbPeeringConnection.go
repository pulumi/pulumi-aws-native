// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package odb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::ODB::OdbPeeringConnection.
type OdbPeeringConnection struct {
	pulumi.CustomResourceState

	// The name of the ODB peering connection.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// The Amazon Resource Name (ARN) of the ODB network.
	OdbNetworkArn pulumi.StringOutput `pulumi:"odbNetworkArn"`
	// The unique identifier of the ODB network.
	OdbNetworkId pulumi.StringPtrOutput `pulumi:"odbNetworkId"`
	// The Amazon Resource Name (ARN) of the ODB peering connection.
	OdbPeeringConnectionArn pulumi.StringOutput `pulumi:"odbPeeringConnectionArn"`
	// The unique identifier of the ODB peering connection.
	OdbPeeringConnectionId pulumi.StringOutput `pulumi:"odbPeeringConnectionId"`
	// The Amazon Resource Name (ARN) of the peer network.
	PeerNetworkArn pulumi.StringOutput `pulumi:"peerNetworkArn"`
	// The unique identifier of the peer network.
	PeerNetworkId pulumi.StringPtrOutput `pulumi:"peerNetworkId"`
	// Tags to assign to the Odb peering connection.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewOdbPeeringConnection registers a new resource with the given unique name, arguments, and options.
func NewOdbPeeringConnection(ctx *pulumi.Context,
	name string, args *OdbPeeringConnectionArgs, opts ...pulumi.ResourceOption) (*OdbPeeringConnection, error) {
	if args == nil {
		args = &OdbPeeringConnectionArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"displayName",
		"odbNetworkId",
		"peerNetworkId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OdbPeeringConnection
	err := ctx.RegisterResource("aws-native:odb:OdbPeeringConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOdbPeeringConnection gets an existing OdbPeeringConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOdbPeeringConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OdbPeeringConnectionState, opts ...pulumi.ResourceOption) (*OdbPeeringConnection, error) {
	var resource OdbPeeringConnection
	err := ctx.ReadResource("aws-native:odb:OdbPeeringConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OdbPeeringConnection resources.
type odbPeeringConnectionState struct {
}

type OdbPeeringConnectionState struct {
}

func (OdbPeeringConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*odbPeeringConnectionState)(nil)).Elem()
}

type odbPeeringConnectionArgs struct {
	// The name of the ODB peering connection.
	DisplayName *string `pulumi:"displayName"`
	// The unique identifier of the ODB network.
	OdbNetworkId *string `pulumi:"odbNetworkId"`
	// The unique identifier of the peer network.
	PeerNetworkId *string `pulumi:"peerNetworkId"`
	// Tags to assign to the Odb peering connection.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a OdbPeeringConnection resource.
type OdbPeeringConnectionArgs struct {
	// The name of the ODB peering connection.
	DisplayName pulumi.StringPtrInput
	// The unique identifier of the ODB network.
	OdbNetworkId pulumi.StringPtrInput
	// The unique identifier of the peer network.
	PeerNetworkId pulumi.StringPtrInput
	// Tags to assign to the Odb peering connection.
	Tags aws.TagArrayInput
}

func (OdbPeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*odbPeeringConnectionArgs)(nil)).Elem()
}

type OdbPeeringConnectionInput interface {
	pulumi.Input

	ToOdbPeeringConnectionOutput() OdbPeeringConnectionOutput
	ToOdbPeeringConnectionOutputWithContext(ctx context.Context) OdbPeeringConnectionOutput
}

func (*OdbPeeringConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**OdbPeeringConnection)(nil)).Elem()
}

func (i *OdbPeeringConnection) ToOdbPeeringConnectionOutput() OdbPeeringConnectionOutput {
	return i.ToOdbPeeringConnectionOutputWithContext(context.Background())
}

func (i *OdbPeeringConnection) ToOdbPeeringConnectionOutputWithContext(ctx context.Context) OdbPeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OdbPeeringConnectionOutput)
}

type OdbPeeringConnectionOutput struct{ *pulumi.OutputState }

func (OdbPeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OdbPeeringConnection)(nil)).Elem()
}

func (o OdbPeeringConnectionOutput) ToOdbPeeringConnectionOutput() OdbPeeringConnectionOutput {
	return o
}

func (o OdbPeeringConnectionOutput) ToOdbPeeringConnectionOutputWithContext(ctx context.Context) OdbPeeringConnectionOutput {
	return o
}

// The name of the ODB peering connection.
func (o OdbPeeringConnectionOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OdbPeeringConnection) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the ODB network.
func (o OdbPeeringConnectionOutput) OdbNetworkArn() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbPeeringConnection) pulumi.StringOutput { return v.OdbNetworkArn }).(pulumi.StringOutput)
}

// The unique identifier of the ODB network.
func (o OdbPeeringConnectionOutput) OdbNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OdbPeeringConnection) pulumi.StringPtrOutput { return v.OdbNetworkId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the ODB peering connection.
func (o OdbPeeringConnectionOutput) OdbPeeringConnectionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbPeeringConnection) pulumi.StringOutput { return v.OdbPeeringConnectionArn }).(pulumi.StringOutput)
}

// The unique identifier of the ODB peering connection.
func (o OdbPeeringConnectionOutput) OdbPeeringConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbPeeringConnection) pulumi.StringOutput { return v.OdbPeeringConnectionId }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the peer network.
func (o OdbPeeringConnectionOutput) PeerNetworkArn() pulumi.StringOutput {
	return o.ApplyT(func(v *OdbPeeringConnection) pulumi.StringOutput { return v.PeerNetworkArn }).(pulumi.StringOutput)
}

// The unique identifier of the peer network.
func (o OdbPeeringConnectionOutput) PeerNetworkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OdbPeeringConnection) pulumi.StringPtrOutput { return v.PeerNetworkId }).(pulumi.StringPtrOutput)
}

// Tags to assign to the Odb peering connection.
func (o OdbPeeringConnectionOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *OdbPeeringConnection) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OdbPeeringConnectionInput)(nil)).Elem(), &OdbPeeringConnection{})
	pulumi.RegisterOutputType(OdbPeeringConnectionOutput{})
}
