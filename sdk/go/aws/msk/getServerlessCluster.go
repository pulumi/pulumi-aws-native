// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::MSK::ServerlessCluster
func LookupServerlessCluster(ctx *pulumi.Context, args *LookupServerlessClusterArgs, opts ...pulumi.InvokeOption) (*LookupServerlessClusterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerlessClusterResult
	err := ctx.Invoke("aws-native:msk:getServerlessCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupServerlessClusterArgs struct {
	Arn string `pulumi:"arn"`
}

type LookupServerlessClusterResult struct {
	Arn *string `pulumi:"arn"`
}

func LookupServerlessClusterOutput(ctx *pulumi.Context, args LookupServerlessClusterOutputArgs, opts ...pulumi.InvokeOption) LookupServerlessClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServerlessClusterResult, error) {
			args := v.(LookupServerlessClusterArgs)
			r, err := LookupServerlessCluster(ctx, &args, opts...)
			var s LookupServerlessClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServerlessClusterResultOutput)
}

type LookupServerlessClusterOutputArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupServerlessClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessClusterArgs)(nil)).Elem()
}

type LookupServerlessClusterResultOutput struct{ *pulumi.OutputState }

func (LookupServerlessClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessClusterResult)(nil)).Elem()
}

func (o LookupServerlessClusterResultOutput) ToLookupServerlessClusterResultOutput() LookupServerlessClusterResultOutput {
	return o
}

func (o LookupServerlessClusterResultOutput) ToLookupServerlessClusterResultOutputWithContext(ctx context.Context) LookupServerlessClusterResultOutput {
	return o
}

func (o LookupServerlessClusterResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessClusterResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerlessClusterResultOutput{})
}
