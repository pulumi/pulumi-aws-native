// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::MSK::Cluster
func LookupCluster(ctx *pulumi.Context, args *LookupClusterArgs, opts ...pulumi.InvokeOption) (*LookupClusterResult, error) {
	var rv LookupClusterResult
	err := ctx.Invoke("aws-native:msk:getCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClusterArgs struct {
	Id string `pulumi:"id"`
}

type LookupClusterResult struct {
	BrokerNodeGroupInfo  *ClusterBrokerNodeGroupInfo  `pulumi:"brokerNodeGroupInfo"`
	ClientAuthentication *ClusterClientAuthentication `pulumi:"clientAuthentication"`
	ConfigurationInfo    *ClusterConfigurationInfo    `pulumi:"configurationInfo"`
	EncryptionInfo       *ClusterEncryptionInfo       `pulumi:"encryptionInfo"`
	EnhancedMonitoring   *string                      `pulumi:"enhancedMonitoring"`
	Id                   *string                      `pulumi:"id"`
	KafkaVersion         *string                      `pulumi:"kafkaVersion"`
	LoggingInfo          *ClusterLoggingInfo          `pulumi:"loggingInfo"`
	NumberOfBrokerNodes  *int                         `pulumi:"numberOfBrokerNodes"`
	OpenMonitoring       *ClusterOpenMonitoring       `pulumi:"openMonitoring"`
}

func LookupClusterOutput(ctx *pulumi.Context, args LookupClusterOutputArgs, opts ...pulumi.InvokeOption) LookupClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClusterResult, error) {
			args := v.(LookupClusterArgs)
			r, err := LookupCluster(ctx, &args, opts...)
			return *r, err
		}).(LookupClusterResultOutput)
}

type LookupClusterOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterArgs)(nil)).Elem()
}

type LookupClusterResultOutput struct{ *pulumi.OutputState }

func (LookupClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterResult)(nil)).Elem()
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutput() LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) ToLookupClusterResultOutputWithContext(ctx context.Context) LookupClusterResultOutput {
	return o
}

func (o LookupClusterResultOutput) BrokerNodeGroupInfo() ClusterBrokerNodeGroupInfoPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *ClusterBrokerNodeGroupInfo { return v.BrokerNodeGroupInfo }).(ClusterBrokerNodeGroupInfoPtrOutput)
}

func (o LookupClusterResultOutput) ClientAuthentication() ClusterClientAuthenticationPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *ClusterClientAuthentication { return v.ClientAuthentication }).(ClusterClientAuthenticationPtrOutput)
}

func (o LookupClusterResultOutput) ConfigurationInfo() ClusterConfigurationInfoPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *ClusterConfigurationInfo { return v.ConfigurationInfo }).(ClusterConfigurationInfoPtrOutput)
}

func (o LookupClusterResultOutput) EncryptionInfo() ClusterEncryptionInfoPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *ClusterEncryptionInfo { return v.EncryptionInfo }).(ClusterEncryptionInfoPtrOutput)
}

func (o LookupClusterResultOutput) EnhancedMonitoring() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.EnhancedMonitoring }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) KafkaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *string { return v.KafkaVersion }).(pulumi.StringPtrOutput)
}

func (o LookupClusterResultOutput) LoggingInfo() ClusterLoggingInfoPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *ClusterLoggingInfo { return v.LoggingInfo }).(ClusterLoggingInfoPtrOutput)
}

func (o LookupClusterResultOutput) NumberOfBrokerNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *int { return v.NumberOfBrokerNodes }).(pulumi.IntPtrOutput)
}

func (o LookupClusterResultOutput) OpenMonitoring() ClusterOpenMonitoringPtrOutput {
	return o.ApplyT(func(v LookupClusterResult) *ClusterOpenMonitoring { return v.OpenMonitoring }).(ClusterOpenMonitoringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterResultOutput{})
}
