// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::MSK::ClusterPolicy
func LookupClusterPolicy(ctx *pulumi.Context, args *LookupClusterPolicyArgs, opts ...pulumi.InvokeOption) (*LookupClusterPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupClusterPolicyResult
	err := ctx.Invoke("aws-native:msk:getClusterPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClusterPolicyArgs struct {
	// The arn of the cluster for the resource policy.
	ClusterArn string `pulumi:"clusterArn"`
}

type LookupClusterPolicyResult struct {
	// The current version of the policy attached to the specified cluster
	CurrentVersion *string `pulumi:"currentVersion"`
	// A policy document containing permissions to add to the specified cluster.
	Policy interface{} `pulumi:"policy"`
}

func LookupClusterPolicyOutput(ctx *pulumi.Context, args LookupClusterPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupClusterPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClusterPolicyResult, error) {
			args := v.(LookupClusterPolicyArgs)
			r, err := LookupClusterPolicy(ctx, &args, opts...)
			var s LookupClusterPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClusterPolicyResultOutput)
}

type LookupClusterPolicyOutputArgs struct {
	// The arn of the cluster for the resource policy.
	ClusterArn pulumi.StringInput `pulumi:"clusterArn"`
}

func (LookupClusterPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterPolicyArgs)(nil)).Elem()
}

type LookupClusterPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupClusterPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClusterPolicyResult)(nil)).Elem()
}

func (o LookupClusterPolicyResultOutput) ToLookupClusterPolicyResultOutput() LookupClusterPolicyResultOutput {
	return o
}

func (o LookupClusterPolicyResultOutput) ToLookupClusterPolicyResultOutputWithContext(ctx context.Context) LookupClusterPolicyResultOutput {
	return o
}

// The current version of the policy attached to the specified cluster
func (o LookupClusterPolicyResultOutput) CurrentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClusterPolicyResult) *string { return v.CurrentVersion }).(pulumi.StringPtrOutput)
}

// A policy document containing permissions to add to the specified cluster.
func (o LookupClusterPolicyResultOutput) Policy() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupClusterPolicyResult) interface{} { return v.Policy }).(pulumi.AnyOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClusterPolicyResultOutput{})
}
