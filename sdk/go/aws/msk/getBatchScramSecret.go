// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::MSK::BatchScramSecret
func LookupBatchScramSecret(ctx *pulumi.Context, args *LookupBatchScramSecretArgs, opts ...pulumi.InvokeOption) (*LookupBatchScramSecretResult, error) {
	var rv LookupBatchScramSecretResult
	err := ctx.Invoke("aws-native:msk:getBatchScramSecret", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBatchScramSecretArgs struct {
	ClusterArn string `pulumi:"clusterArn"`
}

type LookupBatchScramSecretResult struct {
	SecretArnList []string `pulumi:"secretArnList"`
}

func LookupBatchScramSecretOutput(ctx *pulumi.Context, args LookupBatchScramSecretOutputArgs, opts ...pulumi.InvokeOption) LookupBatchScramSecretResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBatchScramSecretResult, error) {
			args := v.(LookupBatchScramSecretArgs)
			r, err := LookupBatchScramSecret(ctx, &args, opts...)
			var s LookupBatchScramSecretResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBatchScramSecretResultOutput)
}

type LookupBatchScramSecretOutputArgs struct {
	ClusterArn pulumi.StringInput `pulumi:"clusterArn"`
}

func (LookupBatchScramSecretOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBatchScramSecretArgs)(nil)).Elem()
}

type LookupBatchScramSecretResultOutput struct{ *pulumi.OutputState }

func (LookupBatchScramSecretResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBatchScramSecretResult)(nil)).Elem()
}

func (o LookupBatchScramSecretResultOutput) ToLookupBatchScramSecretResultOutput() LookupBatchScramSecretResultOutput {
	return o
}

func (o LookupBatchScramSecretResultOutput) ToLookupBatchScramSecretResultOutputWithContext(ctx context.Context) LookupBatchScramSecretResultOutput {
	return o
}

func (o LookupBatchScramSecretResultOutput) SecretArnList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBatchScramSecretResult) []string { return v.SecretArnList }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBatchScramSecretResultOutput{})
}
