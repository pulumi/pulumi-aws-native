// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterBrokerLogs struct {
	CloudWatchLogs *ClusterCloudWatchLogs `pulumi:"cloudWatchLogs"`
	Firehose       *ClusterFirehose       `pulumi:"firehose"`
	S3             *ClusterS3             `pulumi:"s3"`
}

// ClusterBrokerLogsInput is an input type that accepts ClusterBrokerLogsArgs and ClusterBrokerLogsOutput values.
// You can construct a concrete instance of `ClusterBrokerLogsInput` via:
//
//          ClusterBrokerLogsArgs{...}
type ClusterBrokerLogsInput interface {
	pulumi.Input

	ToClusterBrokerLogsOutput() ClusterBrokerLogsOutput
	ToClusterBrokerLogsOutputWithContext(context.Context) ClusterBrokerLogsOutput
}

type ClusterBrokerLogsArgs struct {
	CloudWatchLogs ClusterCloudWatchLogsPtrInput `pulumi:"cloudWatchLogs"`
	Firehose       ClusterFirehosePtrInput       `pulumi:"firehose"`
	S3             ClusterS3PtrInput             `pulumi:"s3"`
}

func (ClusterBrokerLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerLogs)(nil)).Elem()
}

func (i ClusterBrokerLogsArgs) ToClusterBrokerLogsOutput() ClusterBrokerLogsOutput {
	return i.ToClusterBrokerLogsOutputWithContext(context.Background())
}

func (i ClusterBrokerLogsArgs) ToClusterBrokerLogsOutputWithContext(ctx context.Context) ClusterBrokerLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerLogsOutput)
}

func (i ClusterBrokerLogsArgs) ToClusterBrokerLogsPtrOutput() ClusterBrokerLogsPtrOutput {
	return i.ToClusterBrokerLogsPtrOutputWithContext(context.Background())
}

func (i ClusterBrokerLogsArgs) ToClusterBrokerLogsPtrOutputWithContext(ctx context.Context) ClusterBrokerLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerLogsOutput).ToClusterBrokerLogsPtrOutputWithContext(ctx)
}

// ClusterBrokerLogsPtrInput is an input type that accepts ClusterBrokerLogsArgs, ClusterBrokerLogsPtr and ClusterBrokerLogsPtrOutput values.
// You can construct a concrete instance of `ClusterBrokerLogsPtrInput` via:
//
//          ClusterBrokerLogsArgs{...}
//
//  or:
//
//          nil
type ClusterBrokerLogsPtrInput interface {
	pulumi.Input

	ToClusterBrokerLogsPtrOutput() ClusterBrokerLogsPtrOutput
	ToClusterBrokerLogsPtrOutputWithContext(context.Context) ClusterBrokerLogsPtrOutput
}

type clusterBrokerLogsPtrType ClusterBrokerLogsArgs

func ClusterBrokerLogsPtr(v *ClusterBrokerLogsArgs) ClusterBrokerLogsPtrInput {
	return (*clusterBrokerLogsPtrType)(v)
}

func (*clusterBrokerLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerLogs)(nil)).Elem()
}

func (i *clusterBrokerLogsPtrType) ToClusterBrokerLogsPtrOutput() ClusterBrokerLogsPtrOutput {
	return i.ToClusterBrokerLogsPtrOutputWithContext(context.Background())
}

func (i *clusterBrokerLogsPtrType) ToClusterBrokerLogsPtrOutputWithContext(ctx context.Context) ClusterBrokerLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerLogsPtrOutput)
}

type ClusterBrokerLogsOutput struct{ *pulumi.OutputState }

func (ClusterBrokerLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerLogs)(nil)).Elem()
}

func (o ClusterBrokerLogsOutput) ToClusterBrokerLogsOutput() ClusterBrokerLogsOutput {
	return o
}

func (o ClusterBrokerLogsOutput) ToClusterBrokerLogsOutputWithContext(ctx context.Context) ClusterBrokerLogsOutput {
	return o
}

func (o ClusterBrokerLogsOutput) ToClusterBrokerLogsPtrOutput() ClusterBrokerLogsPtrOutput {
	return o.ToClusterBrokerLogsPtrOutputWithContext(context.Background())
}

func (o ClusterBrokerLogsOutput) ToClusterBrokerLogsPtrOutputWithContext(ctx context.Context) ClusterBrokerLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBrokerLogs) *ClusterBrokerLogs {
		return &v
	}).(ClusterBrokerLogsPtrOutput)
}

func (o ClusterBrokerLogsOutput) CloudWatchLogs() ClusterCloudWatchLogsPtrOutput {
	return o.ApplyT(func(v ClusterBrokerLogs) *ClusterCloudWatchLogs { return v.CloudWatchLogs }).(ClusterCloudWatchLogsPtrOutput)
}

func (o ClusterBrokerLogsOutput) Firehose() ClusterFirehosePtrOutput {
	return o.ApplyT(func(v ClusterBrokerLogs) *ClusterFirehose { return v.Firehose }).(ClusterFirehosePtrOutput)
}

func (o ClusterBrokerLogsOutput) S3() ClusterS3PtrOutput {
	return o.ApplyT(func(v ClusterBrokerLogs) *ClusterS3 { return v.S3 }).(ClusterS3PtrOutput)
}

type ClusterBrokerLogsPtrOutput struct{ *pulumi.OutputState }

func (ClusterBrokerLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerLogs)(nil)).Elem()
}

func (o ClusterBrokerLogsPtrOutput) ToClusterBrokerLogsPtrOutput() ClusterBrokerLogsPtrOutput {
	return o
}

func (o ClusterBrokerLogsPtrOutput) ToClusterBrokerLogsPtrOutputWithContext(ctx context.Context) ClusterBrokerLogsPtrOutput {
	return o
}

func (o ClusterBrokerLogsPtrOutput) Elem() ClusterBrokerLogsOutput {
	return o.ApplyT(func(v *ClusterBrokerLogs) ClusterBrokerLogs {
		if v != nil {
			return *v
		}
		var ret ClusterBrokerLogs
		return ret
	}).(ClusterBrokerLogsOutput)
}

func (o ClusterBrokerLogsPtrOutput) CloudWatchLogs() ClusterCloudWatchLogsPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerLogs) *ClusterCloudWatchLogs {
		if v == nil {
			return nil
		}
		return v.CloudWatchLogs
	}).(ClusterCloudWatchLogsPtrOutput)
}

func (o ClusterBrokerLogsPtrOutput) Firehose() ClusterFirehosePtrOutput {
	return o.ApplyT(func(v *ClusterBrokerLogs) *ClusterFirehose {
		if v == nil {
			return nil
		}
		return v.Firehose
	}).(ClusterFirehosePtrOutput)
}

func (o ClusterBrokerLogsPtrOutput) S3() ClusterS3PtrOutput {
	return o.ApplyT(func(v *ClusterBrokerLogs) *ClusterS3 {
		if v == nil {
			return nil
		}
		return v.S3
	}).(ClusterS3PtrOutput)
}

type ClusterBrokerNodeGroupInfo struct {
	BrokerAZDistribution *string             `pulumi:"brokerAZDistribution"`
	ClientSubnets        []string            `pulumi:"clientSubnets"`
	InstanceType         string              `pulumi:"instanceType"`
	SecurityGroups       []string            `pulumi:"securityGroups"`
	StorageInfo          *ClusterStorageInfo `pulumi:"storageInfo"`
}

// ClusterBrokerNodeGroupInfoInput is an input type that accepts ClusterBrokerNodeGroupInfoArgs and ClusterBrokerNodeGroupInfoOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoInput` via:
//
//          ClusterBrokerNodeGroupInfoArgs{...}
type ClusterBrokerNodeGroupInfoInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoOutput() ClusterBrokerNodeGroupInfoOutput
	ToClusterBrokerNodeGroupInfoOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoOutput
}

type ClusterBrokerNodeGroupInfoArgs struct {
	BrokerAZDistribution pulumi.StringPtrInput      `pulumi:"brokerAZDistribution"`
	ClientSubnets        pulumi.StringArrayInput    `pulumi:"clientSubnets"`
	InstanceType         pulumi.StringInput         `pulumi:"instanceType"`
	SecurityGroups       pulumi.StringArrayInput    `pulumi:"securityGroups"`
	StorageInfo          ClusterStorageInfoPtrInput `pulumi:"storageInfo"`
}

func (ClusterBrokerNodeGroupInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfo)(nil)).Elem()
}

func (i ClusterBrokerNodeGroupInfoArgs) ToClusterBrokerNodeGroupInfoOutput() ClusterBrokerNodeGroupInfoOutput {
	return i.ToClusterBrokerNodeGroupInfoOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoArgs) ToClusterBrokerNodeGroupInfoOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoOutput)
}

func (i ClusterBrokerNodeGroupInfoArgs) ToClusterBrokerNodeGroupInfoPtrOutput() ClusterBrokerNodeGroupInfoPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoPtrOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoArgs) ToClusterBrokerNodeGroupInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoOutput).ToClusterBrokerNodeGroupInfoPtrOutputWithContext(ctx)
}

// ClusterBrokerNodeGroupInfoPtrInput is an input type that accepts ClusterBrokerNodeGroupInfoArgs, ClusterBrokerNodeGroupInfoPtr and ClusterBrokerNodeGroupInfoPtrOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoPtrInput` via:
//
//          ClusterBrokerNodeGroupInfoArgs{...}
//
//  or:
//
//          nil
type ClusterBrokerNodeGroupInfoPtrInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoPtrOutput() ClusterBrokerNodeGroupInfoPtrOutput
	ToClusterBrokerNodeGroupInfoPtrOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoPtrOutput
}

type clusterBrokerNodeGroupInfoPtrType ClusterBrokerNodeGroupInfoArgs

func ClusterBrokerNodeGroupInfoPtr(v *ClusterBrokerNodeGroupInfoArgs) ClusterBrokerNodeGroupInfoPtrInput {
	return (*clusterBrokerNodeGroupInfoPtrType)(v)
}

func (*clusterBrokerNodeGroupInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfo)(nil)).Elem()
}

func (i *clusterBrokerNodeGroupInfoPtrType) ToClusterBrokerNodeGroupInfoPtrOutput() ClusterBrokerNodeGroupInfoPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoPtrOutputWithContext(context.Background())
}

func (i *clusterBrokerNodeGroupInfoPtrType) ToClusterBrokerNodeGroupInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoPtrOutput)
}

type ClusterBrokerNodeGroupInfoOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfo)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoOutput) ToClusterBrokerNodeGroupInfoOutput() ClusterBrokerNodeGroupInfoOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoOutput) ToClusterBrokerNodeGroupInfoOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoOutput) ToClusterBrokerNodeGroupInfoPtrOutput() ClusterBrokerNodeGroupInfoPtrOutput {
	return o.ToClusterBrokerNodeGroupInfoPtrOutputWithContext(context.Background())
}

func (o ClusterBrokerNodeGroupInfoOutput) ToClusterBrokerNodeGroupInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBrokerNodeGroupInfo) *ClusterBrokerNodeGroupInfo {
		return &v
	}).(ClusterBrokerNodeGroupInfoPtrOutput)
}

func (o ClusterBrokerNodeGroupInfoOutput) BrokerAZDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfo) *string { return v.BrokerAZDistribution }).(pulumi.StringPtrOutput)
}

func (o ClusterBrokerNodeGroupInfoOutput) ClientSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfo) []string { return v.ClientSubnets }).(pulumi.StringArrayOutput)
}

func (o ClusterBrokerNodeGroupInfoOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfo) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o ClusterBrokerNodeGroupInfoOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfo) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o ClusterBrokerNodeGroupInfoOutput) StorageInfo() ClusterStorageInfoPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfo) *ClusterStorageInfo { return v.StorageInfo }).(ClusterStorageInfoPtrOutput)
}

type ClusterBrokerNodeGroupInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfo)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoPtrOutput) ToClusterBrokerNodeGroupInfoPtrOutput() ClusterBrokerNodeGroupInfoPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoPtrOutput) ToClusterBrokerNodeGroupInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoPtrOutput) Elem() ClusterBrokerNodeGroupInfoOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) ClusterBrokerNodeGroupInfo {
		if v != nil {
			return *v
		}
		var ret ClusterBrokerNodeGroupInfo
		return ret
	}).(ClusterBrokerNodeGroupInfoOutput)
}

func (o ClusterBrokerNodeGroupInfoPtrOutput) BrokerAZDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) *string {
		if v == nil {
			return nil
		}
		return v.BrokerAZDistribution
	}).(pulumi.StringPtrOutput)
}

func (o ClusterBrokerNodeGroupInfoPtrOutput) ClientSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) []string {
		if v == nil {
			return nil
		}
		return v.ClientSubnets
	}).(pulumi.StringArrayOutput)
}

func (o ClusterBrokerNodeGroupInfoPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterBrokerNodeGroupInfoPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

func (o ClusterBrokerNodeGroupInfoPtrOutput) StorageInfo() ClusterStorageInfoPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) *ClusterStorageInfo {
		if v == nil {
			return nil
		}
		return v.StorageInfo
	}).(ClusterStorageInfoPtrOutput)
}

type ClusterClientAuthentication struct {
	Sasl            *ClusterSasl            `pulumi:"sasl"`
	Tls             *ClusterTls             `pulumi:"tls"`
	Unauthenticated *ClusterUnauthenticated `pulumi:"unauthenticated"`
}

// ClusterClientAuthenticationInput is an input type that accepts ClusterClientAuthenticationArgs and ClusterClientAuthenticationOutput values.
// You can construct a concrete instance of `ClusterClientAuthenticationInput` via:
//
//          ClusterClientAuthenticationArgs{...}
type ClusterClientAuthenticationInput interface {
	pulumi.Input

	ToClusterClientAuthenticationOutput() ClusterClientAuthenticationOutput
	ToClusterClientAuthenticationOutputWithContext(context.Context) ClusterClientAuthenticationOutput
}

type ClusterClientAuthenticationArgs struct {
	Sasl            ClusterSaslPtrInput            `pulumi:"sasl"`
	Tls             ClusterTlsPtrInput             `pulumi:"tls"`
	Unauthenticated ClusterUnauthenticatedPtrInput `pulumi:"unauthenticated"`
}

func (ClusterClientAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClientAuthentication)(nil)).Elem()
}

func (i ClusterClientAuthenticationArgs) ToClusterClientAuthenticationOutput() ClusterClientAuthenticationOutput {
	return i.ToClusterClientAuthenticationOutputWithContext(context.Background())
}

func (i ClusterClientAuthenticationArgs) ToClusterClientAuthenticationOutputWithContext(ctx context.Context) ClusterClientAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClientAuthenticationOutput)
}

func (i ClusterClientAuthenticationArgs) ToClusterClientAuthenticationPtrOutput() ClusterClientAuthenticationPtrOutput {
	return i.ToClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (i ClusterClientAuthenticationArgs) ToClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClientAuthenticationOutput).ToClusterClientAuthenticationPtrOutputWithContext(ctx)
}

// ClusterClientAuthenticationPtrInput is an input type that accepts ClusterClientAuthenticationArgs, ClusterClientAuthenticationPtr and ClusterClientAuthenticationPtrOutput values.
// You can construct a concrete instance of `ClusterClientAuthenticationPtrInput` via:
//
//          ClusterClientAuthenticationArgs{...}
//
//  or:
//
//          nil
type ClusterClientAuthenticationPtrInput interface {
	pulumi.Input

	ToClusterClientAuthenticationPtrOutput() ClusterClientAuthenticationPtrOutput
	ToClusterClientAuthenticationPtrOutputWithContext(context.Context) ClusterClientAuthenticationPtrOutput
}

type clusterClientAuthenticationPtrType ClusterClientAuthenticationArgs

func ClusterClientAuthenticationPtr(v *ClusterClientAuthenticationArgs) ClusterClientAuthenticationPtrInput {
	return (*clusterClientAuthenticationPtrType)(v)
}

func (*clusterClientAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClientAuthentication)(nil)).Elem()
}

func (i *clusterClientAuthenticationPtrType) ToClusterClientAuthenticationPtrOutput() ClusterClientAuthenticationPtrOutput {
	return i.ToClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (i *clusterClientAuthenticationPtrType) ToClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClientAuthenticationPtrOutput)
}

type ClusterClientAuthenticationOutput struct{ *pulumi.OutputState }

func (ClusterClientAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClientAuthentication)(nil)).Elem()
}

func (o ClusterClientAuthenticationOutput) ToClusterClientAuthenticationOutput() ClusterClientAuthenticationOutput {
	return o
}

func (o ClusterClientAuthenticationOutput) ToClusterClientAuthenticationOutputWithContext(ctx context.Context) ClusterClientAuthenticationOutput {
	return o
}

func (o ClusterClientAuthenticationOutput) ToClusterClientAuthenticationPtrOutput() ClusterClientAuthenticationPtrOutput {
	return o.ToClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (o ClusterClientAuthenticationOutput) ToClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClientAuthentication) *ClusterClientAuthentication {
		return &v
	}).(ClusterClientAuthenticationPtrOutput)
}

func (o ClusterClientAuthenticationOutput) Sasl() ClusterSaslPtrOutput {
	return o.ApplyT(func(v ClusterClientAuthentication) *ClusterSasl { return v.Sasl }).(ClusterSaslPtrOutput)
}

func (o ClusterClientAuthenticationOutput) Tls() ClusterTlsPtrOutput {
	return o.ApplyT(func(v ClusterClientAuthentication) *ClusterTls { return v.Tls }).(ClusterTlsPtrOutput)
}

func (o ClusterClientAuthenticationOutput) Unauthenticated() ClusterUnauthenticatedPtrOutput {
	return o.ApplyT(func(v ClusterClientAuthentication) *ClusterUnauthenticated { return v.Unauthenticated }).(ClusterUnauthenticatedPtrOutput)
}

type ClusterClientAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ClusterClientAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClientAuthentication)(nil)).Elem()
}

func (o ClusterClientAuthenticationPtrOutput) ToClusterClientAuthenticationPtrOutput() ClusterClientAuthenticationPtrOutput {
	return o
}

func (o ClusterClientAuthenticationPtrOutput) ToClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationPtrOutput {
	return o
}

func (o ClusterClientAuthenticationPtrOutput) Elem() ClusterClientAuthenticationOutput {
	return o.ApplyT(func(v *ClusterClientAuthentication) ClusterClientAuthentication {
		if v != nil {
			return *v
		}
		var ret ClusterClientAuthentication
		return ret
	}).(ClusterClientAuthenticationOutput)
}

func (o ClusterClientAuthenticationPtrOutput) Sasl() ClusterSaslPtrOutput {
	return o.ApplyT(func(v *ClusterClientAuthentication) *ClusterSasl {
		if v == nil {
			return nil
		}
		return v.Sasl
	}).(ClusterSaslPtrOutput)
}

func (o ClusterClientAuthenticationPtrOutput) Tls() ClusterTlsPtrOutput {
	return o.ApplyT(func(v *ClusterClientAuthentication) *ClusterTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(ClusterTlsPtrOutput)
}

func (o ClusterClientAuthenticationPtrOutput) Unauthenticated() ClusterUnauthenticatedPtrOutput {
	return o.ApplyT(func(v *ClusterClientAuthentication) *ClusterUnauthenticated {
		if v == nil {
			return nil
		}
		return v.Unauthenticated
	}).(ClusterUnauthenticatedPtrOutput)
}

type ClusterCloudWatchLogs struct {
	Enabled  bool    `pulumi:"enabled"`
	LogGroup *string `pulumi:"logGroup"`
}

// ClusterCloudWatchLogsInput is an input type that accepts ClusterCloudWatchLogsArgs and ClusterCloudWatchLogsOutput values.
// You can construct a concrete instance of `ClusterCloudWatchLogsInput` via:
//
//          ClusterCloudWatchLogsArgs{...}
type ClusterCloudWatchLogsInput interface {
	pulumi.Input

	ToClusterCloudWatchLogsOutput() ClusterCloudWatchLogsOutput
	ToClusterCloudWatchLogsOutputWithContext(context.Context) ClusterCloudWatchLogsOutput
}

type ClusterCloudWatchLogsArgs struct {
	Enabled  pulumi.BoolInput      `pulumi:"enabled"`
	LogGroup pulumi.StringPtrInput `pulumi:"logGroup"`
}

func (ClusterCloudWatchLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudWatchLogs)(nil)).Elem()
}

func (i ClusterCloudWatchLogsArgs) ToClusterCloudWatchLogsOutput() ClusterCloudWatchLogsOutput {
	return i.ToClusterCloudWatchLogsOutputWithContext(context.Background())
}

func (i ClusterCloudWatchLogsArgs) ToClusterCloudWatchLogsOutputWithContext(ctx context.Context) ClusterCloudWatchLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudWatchLogsOutput)
}

func (i ClusterCloudWatchLogsArgs) ToClusterCloudWatchLogsPtrOutput() ClusterCloudWatchLogsPtrOutput {
	return i.ToClusterCloudWatchLogsPtrOutputWithContext(context.Background())
}

func (i ClusterCloudWatchLogsArgs) ToClusterCloudWatchLogsPtrOutputWithContext(ctx context.Context) ClusterCloudWatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudWatchLogsOutput).ToClusterCloudWatchLogsPtrOutputWithContext(ctx)
}

// ClusterCloudWatchLogsPtrInput is an input type that accepts ClusterCloudWatchLogsArgs, ClusterCloudWatchLogsPtr and ClusterCloudWatchLogsPtrOutput values.
// You can construct a concrete instance of `ClusterCloudWatchLogsPtrInput` via:
//
//          ClusterCloudWatchLogsArgs{...}
//
//  or:
//
//          nil
type ClusterCloudWatchLogsPtrInput interface {
	pulumi.Input

	ToClusterCloudWatchLogsPtrOutput() ClusterCloudWatchLogsPtrOutput
	ToClusterCloudWatchLogsPtrOutputWithContext(context.Context) ClusterCloudWatchLogsPtrOutput
}

type clusterCloudWatchLogsPtrType ClusterCloudWatchLogsArgs

func ClusterCloudWatchLogsPtr(v *ClusterCloudWatchLogsArgs) ClusterCloudWatchLogsPtrInput {
	return (*clusterCloudWatchLogsPtrType)(v)
}

func (*clusterCloudWatchLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudWatchLogs)(nil)).Elem()
}

func (i *clusterCloudWatchLogsPtrType) ToClusterCloudWatchLogsPtrOutput() ClusterCloudWatchLogsPtrOutput {
	return i.ToClusterCloudWatchLogsPtrOutputWithContext(context.Background())
}

func (i *clusterCloudWatchLogsPtrType) ToClusterCloudWatchLogsPtrOutputWithContext(ctx context.Context) ClusterCloudWatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterCloudWatchLogsPtrOutput)
}

type ClusterCloudWatchLogsOutput struct{ *pulumi.OutputState }

func (ClusterCloudWatchLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterCloudWatchLogs)(nil)).Elem()
}

func (o ClusterCloudWatchLogsOutput) ToClusterCloudWatchLogsOutput() ClusterCloudWatchLogsOutput {
	return o
}

func (o ClusterCloudWatchLogsOutput) ToClusterCloudWatchLogsOutputWithContext(ctx context.Context) ClusterCloudWatchLogsOutput {
	return o
}

func (o ClusterCloudWatchLogsOutput) ToClusterCloudWatchLogsPtrOutput() ClusterCloudWatchLogsPtrOutput {
	return o.ToClusterCloudWatchLogsPtrOutputWithContext(context.Background())
}

func (o ClusterCloudWatchLogsOutput) ToClusterCloudWatchLogsPtrOutputWithContext(ctx context.Context) ClusterCloudWatchLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterCloudWatchLogs) *ClusterCloudWatchLogs {
		return &v
	}).(ClusterCloudWatchLogsPtrOutput)
}

func (o ClusterCloudWatchLogsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterCloudWatchLogs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o ClusterCloudWatchLogsOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterCloudWatchLogs) *string { return v.LogGroup }).(pulumi.StringPtrOutput)
}

type ClusterCloudWatchLogsPtrOutput struct{ *pulumi.OutputState }

func (ClusterCloudWatchLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterCloudWatchLogs)(nil)).Elem()
}

func (o ClusterCloudWatchLogsPtrOutput) ToClusterCloudWatchLogsPtrOutput() ClusterCloudWatchLogsPtrOutput {
	return o
}

func (o ClusterCloudWatchLogsPtrOutput) ToClusterCloudWatchLogsPtrOutputWithContext(ctx context.Context) ClusterCloudWatchLogsPtrOutput {
	return o
}

func (o ClusterCloudWatchLogsPtrOutput) Elem() ClusterCloudWatchLogsOutput {
	return o.ApplyT(func(v *ClusterCloudWatchLogs) ClusterCloudWatchLogs {
		if v != nil {
			return *v
		}
		var ret ClusterCloudWatchLogs
		return ret
	}).(ClusterCloudWatchLogsOutput)
}

func (o ClusterCloudWatchLogsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterCloudWatchLogs) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterCloudWatchLogsPtrOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterCloudWatchLogs) *string {
		if v == nil {
			return nil
		}
		return v.LogGroup
	}).(pulumi.StringPtrOutput)
}

type ClusterConfigurationInfo struct {
	Arn      string `pulumi:"arn"`
	Revision int    `pulumi:"revision"`
}

// ClusterConfigurationInfoInput is an input type that accepts ClusterConfigurationInfoArgs and ClusterConfigurationInfoOutput values.
// You can construct a concrete instance of `ClusterConfigurationInfoInput` via:
//
//          ClusterConfigurationInfoArgs{...}
type ClusterConfigurationInfoInput interface {
	pulumi.Input

	ToClusterConfigurationInfoOutput() ClusterConfigurationInfoOutput
	ToClusterConfigurationInfoOutputWithContext(context.Context) ClusterConfigurationInfoOutput
}

type ClusterConfigurationInfoArgs struct {
	Arn      pulumi.StringInput `pulumi:"arn"`
	Revision pulumi.IntInput    `pulumi:"revision"`
}

func (ClusterConfigurationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfigurationInfo)(nil)).Elem()
}

func (i ClusterConfigurationInfoArgs) ToClusterConfigurationInfoOutput() ClusterConfigurationInfoOutput {
	return i.ToClusterConfigurationInfoOutputWithContext(context.Background())
}

func (i ClusterConfigurationInfoArgs) ToClusterConfigurationInfoOutputWithContext(ctx context.Context) ClusterConfigurationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigurationInfoOutput)
}

func (i ClusterConfigurationInfoArgs) ToClusterConfigurationInfoPtrOutput() ClusterConfigurationInfoPtrOutput {
	return i.ToClusterConfigurationInfoPtrOutputWithContext(context.Background())
}

func (i ClusterConfigurationInfoArgs) ToClusterConfigurationInfoPtrOutputWithContext(ctx context.Context) ClusterConfigurationInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigurationInfoOutput).ToClusterConfigurationInfoPtrOutputWithContext(ctx)
}

// ClusterConfigurationInfoPtrInput is an input type that accepts ClusterConfigurationInfoArgs, ClusterConfigurationInfoPtr and ClusterConfigurationInfoPtrOutput values.
// You can construct a concrete instance of `ClusterConfigurationInfoPtrInput` via:
//
//          ClusterConfigurationInfoArgs{...}
//
//  or:
//
//          nil
type ClusterConfigurationInfoPtrInput interface {
	pulumi.Input

	ToClusterConfigurationInfoPtrOutput() ClusterConfigurationInfoPtrOutput
	ToClusterConfigurationInfoPtrOutputWithContext(context.Context) ClusterConfigurationInfoPtrOutput
}

type clusterConfigurationInfoPtrType ClusterConfigurationInfoArgs

func ClusterConfigurationInfoPtr(v *ClusterConfigurationInfoArgs) ClusterConfigurationInfoPtrInput {
	return (*clusterConfigurationInfoPtrType)(v)
}

func (*clusterConfigurationInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConfigurationInfo)(nil)).Elem()
}

func (i *clusterConfigurationInfoPtrType) ToClusterConfigurationInfoPtrOutput() ClusterConfigurationInfoPtrOutput {
	return i.ToClusterConfigurationInfoPtrOutputWithContext(context.Background())
}

func (i *clusterConfigurationInfoPtrType) ToClusterConfigurationInfoPtrOutputWithContext(ctx context.Context) ClusterConfigurationInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigurationInfoPtrOutput)
}

type ClusterConfigurationInfoOutput struct{ *pulumi.OutputState }

func (ClusterConfigurationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfigurationInfo)(nil)).Elem()
}

func (o ClusterConfigurationInfoOutput) ToClusterConfigurationInfoOutput() ClusterConfigurationInfoOutput {
	return o
}

func (o ClusterConfigurationInfoOutput) ToClusterConfigurationInfoOutputWithContext(ctx context.Context) ClusterConfigurationInfoOutput {
	return o
}

func (o ClusterConfigurationInfoOutput) ToClusterConfigurationInfoPtrOutput() ClusterConfigurationInfoPtrOutput {
	return o.ToClusterConfigurationInfoPtrOutputWithContext(context.Background())
}

func (o ClusterConfigurationInfoOutput) ToClusterConfigurationInfoPtrOutputWithContext(ctx context.Context) ClusterConfigurationInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterConfigurationInfo) *ClusterConfigurationInfo {
		return &v
	}).(ClusterConfigurationInfoPtrOutput)
}

func (o ClusterConfigurationInfoOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterConfigurationInfo) string { return v.Arn }).(pulumi.StringOutput)
}

func (o ClusterConfigurationInfoOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterConfigurationInfo) int { return v.Revision }).(pulumi.IntOutput)
}

type ClusterConfigurationInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterConfigurationInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConfigurationInfo)(nil)).Elem()
}

func (o ClusterConfigurationInfoPtrOutput) ToClusterConfigurationInfoPtrOutput() ClusterConfigurationInfoPtrOutput {
	return o
}

func (o ClusterConfigurationInfoPtrOutput) ToClusterConfigurationInfoPtrOutputWithContext(ctx context.Context) ClusterConfigurationInfoPtrOutput {
	return o
}

func (o ClusterConfigurationInfoPtrOutput) Elem() ClusterConfigurationInfoOutput {
	return o.ApplyT(func(v *ClusterConfigurationInfo) ClusterConfigurationInfo {
		if v != nil {
			return *v
		}
		var ret ClusterConfigurationInfo
		return ret
	}).(ClusterConfigurationInfoOutput)
}

func (o ClusterConfigurationInfoPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterConfigurationInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o ClusterConfigurationInfoPtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterConfigurationInfo) *int {
		if v == nil {
			return nil
		}
		return &v.Revision
	}).(pulumi.IntPtrOutput)
}

type ClusterEBSStorageInfo struct {
	VolumeSize *int `pulumi:"volumeSize"`
}

// ClusterEBSStorageInfoInput is an input type that accepts ClusterEBSStorageInfoArgs and ClusterEBSStorageInfoOutput values.
// You can construct a concrete instance of `ClusterEBSStorageInfoInput` via:
//
//          ClusterEBSStorageInfoArgs{...}
type ClusterEBSStorageInfoInput interface {
	pulumi.Input

	ToClusterEBSStorageInfoOutput() ClusterEBSStorageInfoOutput
	ToClusterEBSStorageInfoOutputWithContext(context.Context) ClusterEBSStorageInfoOutput
}

type ClusterEBSStorageInfoArgs struct {
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
}

func (ClusterEBSStorageInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEBSStorageInfo)(nil)).Elem()
}

func (i ClusterEBSStorageInfoArgs) ToClusterEBSStorageInfoOutput() ClusterEBSStorageInfoOutput {
	return i.ToClusterEBSStorageInfoOutputWithContext(context.Background())
}

func (i ClusterEBSStorageInfoArgs) ToClusterEBSStorageInfoOutputWithContext(ctx context.Context) ClusterEBSStorageInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEBSStorageInfoOutput)
}

func (i ClusterEBSStorageInfoArgs) ToClusterEBSStorageInfoPtrOutput() ClusterEBSStorageInfoPtrOutput {
	return i.ToClusterEBSStorageInfoPtrOutputWithContext(context.Background())
}

func (i ClusterEBSStorageInfoArgs) ToClusterEBSStorageInfoPtrOutputWithContext(ctx context.Context) ClusterEBSStorageInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEBSStorageInfoOutput).ToClusterEBSStorageInfoPtrOutputWithContext(ctx)
}

// ClusterEBSStorageInfoPtrInput is an input type that accepts ClusterEBSStorageInfoArgs, ClusterEBSStorageInfoPtr and ClusterEBSStorageInfoPtrOutput values.
// You can construct a concrete instance of `ClusterEBSStorageInfoPtrInput` via:
//
//          ClusterEBSStorageInfoArgs{...}
//
//  or:
//
//          nil
type ClusterEBSStorageInfoPtrInput interface {
	pulumi.Input

	ToClusterEBSStorageInfoPtrOutput() ClusterEBSStorageInfoPtrOutput
	ToClusterEBSStorageInfoPtrOutputWithContext(context.Context) ClusterEBSStorageInfoPtrOutput
}

type clusterEBSStorageInfoPtrType ClusterEBSStorageInfoArgs

func ClusterEBSStorageInfoPtr(v *ClusterEBSStorageInfoArgs) ClusterEBSStorageInfoPtrInput {
	return (*clusterEBSStorageInfoPtrType)(v)
}

func (*clusterEBSStorageInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEBSStorageInfo)(nil)).Elem()
}

func (i *clusterEBSStorageInfoPtrType) ToClusterEBSStorageInfoPtrOutput() ClusterEBSStorageInfoPtrOutput {
	return i.ToClusterEBSStorageInfoPtrOutputWithContext(context.Background())
}

func (i *clusterEBSStorageInfoPtrType) ToClusterEBSStorageInfoPtrOutputWithContext(ctx context.Context) ClusterEBSStorageInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEBSStorageInfoPtrOutput)
}

type ClusterEBSStorageInfoOutput struct{ *pulumi.OutputState }

func (ClusterEBSStorageInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEBSStorageInfo)(nil)).Elem()
}

func (o ClusterEBSStorageInfoOutput) ToClusterEBSStorageInfoOutput() ClusterEBSStorageInfoOutput {
	return o
}

func (o ClusterEBSStorageInfoOutput) ToClusterEBSStorageInfoOutputWithContext(ctx context.Context) ClusterEBSStorageInfoOutput {
	return o
}

func (o ClusterEBSStorageInfoOutput) ToClusterEBSStorageInfoPtrOutput() ClusterEBSStorageInfoPtrOutput {
	return o.ToClusterEBSStorageInfoPtrOutputWithContext(context.Background())
}

func (o ClusterEBSStorageInfoOutput) ToClusterEBSStorageInfoPtrOutputWithContext(ctx context.Context) ClusterEBSStorageInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEBSStorageInfo) *ClusterEBSStorageInfo {
		return &v
	}).(ClusterEBSStorageInfoPtrOutput)
}

func (o ClusterEBSStorageInfoOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterEBSStorageInfo) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

type ClusterEBSStorageInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterEBSStorageInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEBSStorageInfo)(nil)).Elem()
}

func (o ClusterEBSStorageInfoPtrOutput) ToClusterEBSStorageInfoPtrOutput() ClusterEBSStorageInfoPtrOutput {
	return o
}

func (o ClusterEBSStorageInfoPtrOutput) ToClusterEBSStorageInfoPtrOutputWithContext(ctx context.Context) ClusterEBSStorageInfoPtrOutput {
	return o
}

func (o ClusterEBSStorageInfoPtrOutput) Elem() ClusterEBSStorageInfoOutput {
	return o.ApplyT(func(v *ClusterEBSStorageInfo) ClusterEBSStorageInfo {
		if v != nil {
			return *v
		}
		var ret ClusterEBSStorageInfo
		return ret
	}).(ClusterEBSStorageInfoOutput)
}

func (o ClusterEBSStorageInfoPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterEBSStorageInfo) *int {
		if v == nil {
			return nil
		}
		return v.VolumeSize
	}).(pulumi.IntPtrOutput)
}

type ClusterEncryptionAtRest struct {
	DataVolumeKMSKeyId string `pulumi:"dataVolumeKMSKeyId"`
}

// ClusterEncryptionAtRestInput is an input type that accepts ClusterEncryptionAtRestArgs and ClusterEncryptionAtRestOutput values.
// You can construct a concrete instance of `ClusterEncryptionAtRestInput` via:
//
//          ClusterEncryptionAtRestArgs{...}
type ClusterEncryptionAtRestInput interface {
	pulumi.Input

	ToClusterEncryptionAtRestOutput() ClusterEncryptionAtRestOutput
	ToClusterEncryptionAtRestOutputWithContext(context.Context) ClusterEncryptionAtRestOutput
}

type ClusterEncryptionAtRestArgs struct {
	DataVolumeKMSKeyId pulumi.StringInput `pulumi:"dataVolumeKMSKeyId"`
}

func (ClusterEncryptionAtRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionAtRest)(nil)).Elem()
}

func (i ClusterEncryptionAtRestArgs) ToClusterEncryptionAtRestOutput() ClusterEncryptionAtRestOutput {
	return i.ToClusterEncryptionAtRestOutputWithContext(context.Background())
}

func (i ClusterEncryptionAtRestArgs) ToClusterEncryptionAtRestOutputWithContext(ctx context.Context) ClusterEncryptionAtRestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionAtRestOutput)
}

func (i ClusterEncryptionAtRestArgs) ToClusterEncryptionAtRestPtrOutput() ClusterEncryptionAtRestPtrOutput {
	return i.ToClusterEncryptionAtRestPtrOutputWithContext(context.Background())
}

func (i ClusterEncryptionAtRestArgs) ToClusterEncryptionAtRestPtrOutputWithContext(ctx context.Context) ClusterEncryptionAtRestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionAtRestOutput).ToClusterEncryptionAtRestPtrOutputWithContext(ctx)
}

// ClusterEncryptionAtRestPtrInput is an input type that accepts ClusterEncryptionAtRestArgs, ClusterEncryptionAtRestPtr and ClusterEncryptionAtRestPtrOutput values.
// You can construct a concrete instance of `ClusterEncryptionAtRestPtrInput` via:
//
//          ClusterEncryptionAtRestArgs{...}
//
//  or:
//
//          nil
type ClusterEncryptionAtRestPtrInput interface {
	pulumi.Input

	ToClusterEncryptionAtRestPtrOutput() ClusterEncryptionAtRestPtrOutput
	ToClusterEncryptionAtRestPtrOutputWithContext(context.Context) ClusterEncryptionAtRestPtrOutput
}

type clusterEncryptionAtRestPtrType ClusterEncryptionAtRestArgs

func ClusterEncryptionAtRestPtr(v *ClusterEncryptionAtRestArgs) ClusterEncryptionAtRestPtrInput {
	return (*clusterEncryptionAtRestPtrType)(v)
}

func (*clusterEncryptionAtRestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionAtRest)(nil)).Elem()
}

func (i *clusterEncryptionAtRestPtrType) ToClusterEncryptionAtRestPtrOutput() ClusterEncryptionAtRestPtrOutput {
	return i.ToClusterEncryptionAtRestPtrOutputWithContext(context.Background())
}

func (i *clusterEncryptionAtRestPtrType) ToClusterEncryptionAtRestPtrOutputWithContext(ctx context.Context) ClusterEncryptionAtRestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionAtRestPtrOutput)
}

type ClusterEncryptionAtRestOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionAtRestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionAtRest)(nil)).Elem()
}

func (o ClusterEncryptionAtRestOutput) ToClusterEncryptionAtRestOutput() ClusterEncryptionAtRestOutput {
	return o
}

func (o ClusterEncryptionAtRestOutput) ToClusterEncryptionAtRestOutputWithContext(ctx context.Context) ClusterEncryptionAtRestOutput {
	return o
}

func (o ClusterEncryptionAtRestOutput) ToClusterEncryptionAtRestPtrOutput() ClusterEncryptionAtRestPtrOutput {
	return o.ToClusterEncryptionAtRestPtrOutputWithContext(context.Background())
}

func (o ClusterEncryptionAtRestOutput) ToClusterEncryptionAtRestPtrOutputWithContext(ctx context.Context) ClusterEncryptionAtRestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEncryptionAtRest) *ClusterEncryptionAtRest {
		return &v
	}).(ClusterEncryptionAtRestPtrOutput)
}

func (o ClusterEncryptionAtRestOutput) DataVolumeKMSKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterEncryptionAtRest) string { return v.DataVolumeKMSKeyId }).(pulumi.StringOutput)
}

type ClusterEncryptionAtRestPtrOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionAtRestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionAtRest)(nil)).Elem()
}

func (o ClusterEncryptionAtRestPtrOutput) ToClusterEncryptionAtRestPtrOutput() ClusterEncryptionAtRestPtrOutput {
	return o
}

func (o ClusterEncryptionAtRestPtrOutput) ToClusterEncryptionAtRestPtrOutputWithContext(ctx context.Context) ClusterEncryptionAtRestPtrOutput {
	return o
}

func (o ClusterEncryptionAtRestPtrOutput) Elem() ClusterEncryptionAtRestOutput {
	return o.ApplyT(func(v *ClusterEncryptionAtRest) ClusterEncryptionAtRest {
		if v != nil {
			return *v
		}
		var ret ClusterEncryptionAtRest
		return ret
	}).(ClusterEncryptionAtRestOutput)
}

func (o ClusterEncryptionAtRestPtrOutput) DataVolumeKMSKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionAtRest) *string {
		if v == nil {
			return nil
		}
		return &v.DataVolumeKMSKeyId
	}).(pulumi.StringPtrOutput)
}

type ClusterEncryptionInTransit struct {
	ClientBroker *string `pulumi:"clientBroker"`
	InCluster    *bool   `pulumi:"inCluster"`
}

// ClusterEncryptionInTransitInput is an input type that accepts ClusterEncryptionInTransitArgs and ClusterEncryptionInTransitOutput values.
// You can construct a concrete instance of `ClusterEncryptionInTransitInput` via:
//
//          ClusterEncryptionInTransitArgs{...}
type ClusterEncryptionInTransitInput interface {
	pulumi.Input

	ToClusterEncryptionInTransitOutput() ClusterEncryptionInTransitOutput
	ToClusterEncryptionInTransitOutputWithContext(context.Context) ClusterEncryptionInTransitOutput
}

type ClusterEncryptionInTransitArgs struct {
	ClientBroker pulumi.StringPtrInput `pulumi:"clientBroker"`
	InCluster    pulumi.BoolPtrInput   `pulumi:"inCluster"`
}

func (ClusterEncryptionInTransitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionInTransit)(nil)).Elem()
}

func (i ClusterEncryptionInTransitArgs) ToClusterEncryptionInTransitOutput() ClusterEncryptionInTransitOutput {
	return i.ToClusterEncryptionInTransitOutputWithContext(context.Background())
}

func (i ClusterEncryptionInTransitArgs) ToClusterEncryptionInTransitOutputWithContext(ctx context.Context) ClusterEncryptionInTransitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInTransitOutput)
}

func (i ClusterEncryptionInTransitArgs) ToClusterEncryptionInTransitPtrOutput() ClusterEncryptionInTransitPtrOutput {
	return i.ToClusterEncryptionInTransitPtrOutputWithContext(context.Background())
}

func (i ClusterEncryptionInTransitArgs) ToClusterEncryptionInTransitPtrOutputWithContext(ctx context.Context) ClusterEncryptionInTransitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInTransitOutput).ToClusterEncryptionInTransitPtrOutputWithContext(ctx)
}

// ClusterEncryptionInTransitPtrInput is an input type that accepts ClusterEncryptionInTransitArgs, ClusterEncryptionInTransitPtr and ClusterEncryptionInTransitPtrOutput values.
// You can construct a concrete instance of `ClusterEncryptionInTransitPtrInput` via:
//
//          ClusterEncryptionInTransitArgs{...}
//
//  or:
//
//          nil
type ClusterEncryptionInTransitPtrInput interface {
	pulumi.Input

	ToClusterEncryptionInTransitPtrOutput() ClusterEncryptionInTransitPtrOutput
	ToClusterEncryptionInTransitPtrOutputWithContext(context.Context) ClusterEncryptionInTransitPtrOutput
}

type clusterEncryptionInTransitPtrType ClusterEncryptionInTransitArgs

func ClusterEncryptionInTransitPtr(v *ClusterEncryptionInTransitArgs) ClusterEncryptionInTransitPtrInput {
	return (*clusterEncryptionInTransitPtrType)(v)
}

func (*clusterEncryptionInTransitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionInTransit)(nil)).Elem()
}

func (i *clusterEncryptionInTransitPtrType) ToClusterEncryptionInTransitPtrOutput() ClusterEncryptionInTransitPtrOutput {
	return i.ToClusterEncryptionInTransitPtrOutputWithContext(context.Background())
}

func (i *clusterEncryptionInTransitPtrType) ToClusterEncryptionInTransitPtrOutputWithContext(ctx context.Context) ClusterEncryptionInTransitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInTransitPtrOutput)
}

type ClusterEncryptionInTransitOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionInTransitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionInTransit)(nil)).Elem()
}

func (o ClusterEncryptionInTransitOutput) ToClusterEncryptionInTransitOutput() ClusterEncryptionInTransitOutput {
	return o
}

func (o ClusterEncryptionInTransitOutput) ToClusterEncryptionInTransitOutputWithContext(ctx context.Context) ClusterEncryptionInTransitOutput {
	return o
}

func (o ClusterEncryptionInTransitOutput) ToClusterEncryptionInTransitPtrOutput() ClusterEncryptionInTransitPtrOutput {
	return o.ToClusterEncryptionInTransitPtrOutputWithContext(context.Background())
}

func (o ClusterEncryptionInTransitOutput) ToClusterEncryptionInTransitPtrOutputWithContext(ctx context.Context) ClusterEncryptionInTransitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEncryptionInTransit) *ClusterEncryptionInTransit {
		return &v
	}).(ClusterEncryptionInTransitPtrOutput)
}

func (o ClusterEncryptionInTransitOutput) ClientBroker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionInTransit) *string { return v.ClientBroker }).(pulumi.StringPtrOutput)
}

func (o ClusterEncryptionInTransitOutput) InCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionInTransit) *bool { return v.InCluster }).(pulumi.BoolPtrOutput)
}

type ClusterEncryptionInTransitPtrOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionInTransitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionInTransit)(nil)).Elem()
}

func (o ClusterEncryptionInTransitPtrOutput) ToClusterEncryptionInTransitPtrOutput() ClusterEncryptionInTransitPtrOutput {
	return o
}

func (o ClusterEncryptionInTransitPtrOutput) ToClusterEncryptionInTransitPtrOutputWithContext(ctx context.Context) ClusterEncryptionInTransitPtrOutput {
	return o
}

func (o ClusterEncryptionInTransitPtrOutput) Elem() ClusterEncryptionInTransitOutput {
	return o.ApplyT(func(v *ClusterEncryptionInTransit) ClusterEncryptionInTransit {
		if v != nil {
			return *v
		}
		var ret ClusterEncryptionInTransit
		return ret
	}).(ClusterEncryptionInTransitOutput)
}

func (o ClusterEncryptionInTransitPtrOutput) ClientBroker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionInTransit) *string {
		if v == nil {
			return nil
		}
		return v.ClientBroker
	}).(pulumi.StringPtrOutput)
}

func (o ClusterEncryptionInTransitPtrOutput) InCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionInTransit) *bool {
		if v == nil {
			return nil
		}
		return v.InCluster
	}).(pulumi.BoolPtrOutput)
}

type ClusterEncryptionInfo struct {
	EncryptionAtRest    *ClusterEncryptionAtRest    `pulumi:"encryptionAtRest"`
	EncryptionInTransit *ClusterEncryptionInTransit `pulumi:"encryptionInTransit"`
}

// ClusterEncryptionInfoInput is an input type that accepts ClusterEncryptionInfoArgs and ClusterEncryptionInfoOutput values.
// You can construct a concrete instance of `ClusterEncryptionInfoInput` via:
//
//          ClusterEncryptionInfoArgs{...}
type ClusterEncryptionInfoInput interface {
	pulumi.Input

	ToClusterEncryptionInfoOutput() ClusterEncryptionInfoOutput
	ToClusterEncryptionInfoOutputWithContext(context.Context) ClusterEncryptionInfoOutput
}

type ClusterEncryptionInfoArgs struct {
	EncryptionAtRest    ClusterEncryptionAtRestPtrInput    `pulumi:"encryptionAtRest"`
	EncryptionInTransit ClusterEncryptionInTransitPtrInput `pulumi:"encryptionInTransit"`
}

func (ClusterEncryptionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionInfo)(nil)).Elem()
}

func (i ClusterEncryptionInfoArgs) ToClusterEncryptionInfoOutput() ClusterEncryptionInfoOutput {
	return i.ToClusterEncryptionInfoOutputWithContext(context.Background())
}

func (i ClusterEncryptionInfoArgs) ToClusterEncryptionInfoOutputWithContext(ctx context.Context) ClusterEncryptionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInfoOutput)
}

func (i ClusterEncryptionInfoArgs) ToClusterEncryptionInfoPtrOutput() ClusterEncryptionInfoPtrOutput {
	return i.ToClusterEncryptionInfoPtrOutputWithContext(context.Background())
}

func (i ClusterEncryptionInfoArgs) ToClusterEncryptionInfoPtrOutputWithContext(ctx context.Context) ClusterEncryptionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInfoOutput).ToClusterEncryptionInfoPtrOutputWithContext(ctx)
}

// ClusterEncryptionInfoPtrInput is an input type that accepts ClusterEncryptionInfoArgs, ClusterEncryptionInfoPtr and ClusterEncryptionInfoPtrOutput values.
// You can construct a concrete instance of `ClusterEncryptionInfoPtrInput` via:
//
//          ClusterEncryptionInfoArgs{...}
//
//  or:
//
//          nil
type ClusterEncryptionInfoPtrInput interface {
	pulumi.Input

	ToClusterEncryptionInfoPtrOutput() ClusterEncryptionInfoPtrOutput
	ToClusterEncryptionInfoPtrOutputWithContext(context.Context) ClusterEncryptionInfoPtrOutput
}

type clusterEncryptionInfoPtrType ClusterEncryptionInfoArgs

func ClusterEncryptionInfoPtr(v *ClusterEncryptionInfoArgs) ClusterEncryptionInfoPtrInput {
	return (*clusterEncryptionInfoPtrType)(v)
}

func (*clusterEncryptionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionInfo)(nil)).Elem()
}

func (i *clusterEncryptionInfoPtrType) ToClusterEncryptionInfoPtrOutput() ClusterEncryptionInfoPtrOutput {
	return i.ToClusterEncryptionInfoPtrOutputWithContext(context.Background())
}

func (i *clusterEncryptionInfoPtrType) ToClusterEncryptionInfoPtrOutputWithContext(ctx context.Context) ClusterEncryptionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInfoPtrOutput)
}

type ClusterEncryptionInfoOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionInfo)(nil)).Elem()
}

func (o ClusterEncryptionInfoOutput) ToClusterEncryptionInfoOutput() ClusterEncryptionInfoOutput {
	return o
}

func (o ClusterEncryptionInfoOutput) ToClusterEncryptionInfoOutputWithContext(ctx context.Context) ClusterEncryptionInfoOutput {
	return o
}

func (o ClusterEncryptionInfoOutput) ToClusterEncryptionInfoPtrOutput() ClusterEncryptionInfoPtrOutput {
	return o.ToClusterEncryptionInfoPtrOutputWithContext(context.Background())
}

func (o ClusterEncryptionInfoOutput) ToClusterEncryptionInfoPtrOutputWithContext(ctx context.Context) ClusterEncryptionInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEncryptionInfo) *ClusterEncryptionInfo {
		return &v
	}).(ClusterEncryptionInfoPtrOutput)
}

func (o ClusterEncryptionInfoOutput) EncryptionAtRest() ClusterEncryptionAtRestPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionInfo) *ClusterEncryptionAtRest { return v.EncryptionAtRest }).(ClusterEncryptionAtRestPtrOutput)
}

func (o ClusterEncryptionInfoOutput) EncryptionInTransit() ClusterEncryptionInTransitPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionInfo) *ClusterEncryptionInTransit { return v.EncryptionInTransit }).(ClusterEncryptionInTransitPtrOutput)
}

type ClusterEncryptionInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionInfo)(nil)).Elem()
}

func (o ClusterEncryptionInfoPtrOutput) ToClusterEncryptionInfoPtrOutput() ClusterEncryptionInfoPtrOutput {
	return o
}

func (o ClusterEncryptionInfoPtrOutput) ToClusterEncryptionInfoPtrOutputWithContext(ctx context.Context) ClusterEncryptionInfoPtrOutput {
	return o
}

func (o ClusterEncryptionInfoPtrOutput) Elem() ClusterEncryptionInfoOutput {
	return o.ApplyT(func(v *ClusterEncryptionInfo) ClusterEncryptionInfo {
		if v != nil {
			return *v
		}
		var ret ClusterEncryptionInfo
		return ret
	}).(ClusterEncryptionInfoOutput)
}

func (o ClusterEncryptionInfoPtrOutput) EncryptionAtRest() ClusterEncryptionAtRestPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionInfo) *ClusterEncryptionAtRest {
		if v == nil {
			return nil
		}
		return v.EncryptionAtRest
	}).(ClusterEncryptionAtRestPtrOutput)
}

func (o ClusterEncryptionInfoPtrOutput) EncryptionInTransit() ClusterEncryptionInTransitPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionInfo) *ClusterEncryptionInTransit {
		if v == nil {
			return nil
		}
		return v.EncryptionInTransit
	}).(ClusterEncryptionInTransitPtrOutput)
}

type ClusterFirehose struct {
	DeliveryStream *string `pulumi:"deliveryStream"`
	Enabled        bool    `pulumi:"enabled"`
}

// ClusterFirehoseInput is an input type that accepts ClusterFirehoseArgs and ClusterFirehoseOutput values.
// You can construct a concrete instance of `ClusterFirehoseInput` via:
//
//          ClusterFirehoseArgs{...}
type ClusterFirehoseInput interface {
	pulumi.Input

	ToClusterFirehoseOutput() ClusterFirehoseOutput
	ToClusterFirehoseOutputWithContext(context.Context) ClusterFirehoseOutput
}

type ClusterFirehoseArgs struct {
	DeliveryStream pulumi.StringPtrInput `pulumi:"deliveryStream"`
	Enabled        pulumi.BoolInput      `pulumi:"enabled"`
}

func (ClusterFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFirehose)(nil)).Elem()
}

func (i ClusterFirehoseArgs) ToClusterFirehoseOutput() ClusterFirehoseOutput {
	return i.ToClusterFirehoseOutputWithContext(context.Background())
}

func (i ClusterFirehoseArgs) ToClusterFirehoseOutputWithContext(ctx context.Context) ClusterFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFirehoseOutput)
}

func (i ClusterFirehoseArgs) ToClusterFirehosePtrOutput() ClusterFirehosePtrOutput {
	return i.ToClusterFirehosePtrOutputWithContext(context.Background())
}

func (i ClusterFirehoseArgs) ToClusterFirehosePtrOutputWithContext(ctx context.Context) ClusterFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFirehoseOutput).ToClusterFirehosePtrOutputWithContext(ctx)
}

// ClusterFirehosePtrInput is an input type that accepts ClusterFirehoseArgs, ClusterFirehosePtr and ClusterFirehosePtrOutput values.
// You can construct a concrete instance of `ClusterFirehosePtrInput` via:
//
//          ClusterFirehoseArgs{...}
//
//  or:
//
//          nil
type ClusterFirehosePtrInput interface {
	pulumi.Input

	ToClusterFirehosePtrOutput() ClusterFirehosePtrOutput
	ToClusterFirehosePtrOutputWithContext(context.Context) ClusterFirehosePtrOutput
}

type clusterFirehosePtrType ClusterFirehoseArgs

func ClusterFirehosePtr(v *ClusterFirehoseArgs) ClusterFirehosePtrInput {
	return (*clusterFirehosePtrType)(v)
}

func (*clusterFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterFirehose)(nil)).Elem()
}

func (i *clusterFirehosePtrType) ToClusterFirehosePtrOutput() ClusterFirehosePtrOutput {
	return i.ToClusterFirehosePtrOutputWithContext(context.Background())
}

func (i *clusterFirehosePtrType) ToClusterFirehosePtrOutputWithContext(ctx context.Context) ClusterFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterFirehosePtrOutput)
}

type ClusterFirehoseOutput struct{ *pulumi.OutputState }

func (ClusterFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterFirehose)(nil)).Elem()
}

func (o ClusterFirehoseOutput) ToClusterFirehoseOutput() ClusterFirehoseOutput {
	return o
}

func (o ClusterFirehoseOutput) ToClusterFirehoseOutputWithContext(ctx context.Context) ClusterFirehoseOutput {
	return o
}

func (o ClusterFirehoseOutput) ToClusterFirehosePtrOutput() ClusterFirehosePtrOutput {
	return o.ToClusterFirehosePtrOutputWithContext(context.Background())
}

func (o ClusterFirehoseOutput) ToClusterFirehosePtrOutputWithContext(ctx context.Context) ClusterFirehosePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterFirehose) *ClusterFirehose {
		return &v
	}).(ClusterFirehosePtrOutput)
}

func (o ClusterFirehoseOutput) DeliveryStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterFirehose) *string { return v.DeliveryStream }).(pulumi.StringPtrOutput)
}

func (o ClusterFirehoseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterFirehose) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterFirehosePtrOutput struct{ *pulumi.OutputState }

func (ClusterFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterFirehose)(nil)).Elem()
}

func (o ClusterFirehosePtrOutput) ToClusterFirehosePtrOutput() ClusterFirehosePtrOutput {
	return o
}

func (o ClusterFirehosePtrOutput) ToClusterFirehosePtrOutputWithContext(ctx context.Context) ClusterFirehosePtrOutput {
	return o
}

func (o ClusterFirehosePtrOutput) Elem() ClusterFirehoseOutput {
	return o.ApplyT(func(v *ClusterFirehose) ClusterFirehose {
		if v != nil {
			return *v
		}
		var ret ClusterFirehose
		return ret
	}).(ClusterFirehoseOutput)
}

func (o ClusterFirehosePtrOutput) DeliveryStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterFirehose) *string {
		if v == nil {
			return nil
		}
		return v.DeliveryStream
	}).(pulumi.StringPtrOutput)
}

func (o ClusterFirehosePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterFirehose) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterIam struct {
	Enabled bool `pulumi:"enabled"`
}

// ClusterIamInput is an input type that accepts ClusterIamArgs and ClusterIamOutput values.
// You can construct a concrete instance of `ClusterIamInput` via:
//
//          ClusterIamArgs{...}
type ClusterIamInput interface {
	pulumi.Input

	ToClusterIamOutput() ClusterIamOutput
	ToClusterIamOutputWithContext(context.Context) ClusterIamOutput
}

type ClusterIamArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterIamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIam)(nil)).Elem()
}

func (i ClusterIamArgs) ToClusterIamOutput() ClusterIamOutput {
	return i.ToClusterIamOutputWithContext(context.Background())
}

func (i ClusterIamArgs) ToClusterIamOutputWithContext(ctx context.Context) ClusterIamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIamOutput)
}

func (i ClusterIamArgs) ToClusterIamPtrOutput() ClusterIamPtrOutput {
	return i.ToClusterIamPtrOutputWithContext(context.Background())
}

func (i ClusterIamArgs) ToClusterIamPtrOutputWithContext(ctx context.Context) ClusterIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIamOutput).ToClusterIamPtrOutputWithContext(ctx)
}

// ClusterIamPtrInput is an input type that accepts ClusterIamArgs, ClusterIamPtr and ClusterIamPtrOutput values.
// You can construct a concrete instance of `ClusterIamPtrInput` via:
//
//          ClusterIamArgs{...}
//
//  or:
//
//          nil
type ClusterIamPtrInput interface {
	pulumi.Input

	ToClusterIamPtrOutput() ClusterIamPtrOutput
	ToClusterIamPtrOutputWithContext(context.Context) ClusterIamPtrOutput
}

type clusterIamPtrType ClusterIamArgs

func ClusterIamPtr(v *ClusterIamArgs) ClusterIamPtrInput {
	return (*clusterIamPtrType)(v)
}

func (*clusterIamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIam)(nil)).Elem()
}

func (i *clusterIamPtrType) ToClusterIamPtrOutput() ClusterIamPtrOutput {
	return i.ToClusterIamPtrOutputWithContext(context.Background())
}

func (i *clusterIamPtrType) ToClusterIamPtrOutputWithContext(ctx context.Context) ClusterIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterIamPtrOutput)
}

type ClusterIamOutput struct{ *pulumi.OutputState }

func (ClusterIamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterIam)(nil)).Elem()
}

func (o ClusterIamOutput) ToClusterIamOutput() ClusterIamOutput {
	return o
}

func (o ClusterIamOutput) ToClusterIamOutputWithContext(ctx context.Context) ClusterIamOutput {
	return o
}

func (o ClusterIamOutput) ToClusterIamPtrOutput() ClusterIamPtrOutput {
	return o.ToClusterIamPtrOutputWithContext(context.Background())
}

func (o ClusterIamOutput) ToClusterIamPtrOutputWithContext(ctx context.Context) ClusterIamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterIam) *ClusterIam {
		return &v
	}).(ClusterIamPtrOutput)
}

func (o ClusterIamOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterIam) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterIamPtrOutput struct{ *pulumi.OutputState }

func (ClusterIamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterIam)(nil)).Elem()
}

func (o ClusterIamPtrOutput) ToClusterIamPtrOutput() ClusterIamPtrOutput {
	return o
}

func (o ClusterIamPtrOutput) ToClusterIamPtrOutputWithContext(ctx context.Context) ClusterIamPtrOutput {
	return o
}

func (o ClusterIamPtrOutput) Elem() ClusterIamOutput {
	return o.ApplyT(func(v *ClusterIam) ClusterIam {
		if v != nil {
			return *v
		}
		var ret ClusterIam
		return ret
	}).(ClusterIamOutput)
}

func (o ClusterIamPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterIam) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterJmxExporter struct {
	EnabledInBroker bool `pulumi:"enabledInBroker"`
}

// ClusterJmxExporterInput is an input type that accepts ClusterJmxExporterArgs and ClusterJmxExporterOutput values.
// You can construct a concrete instance of `ClusterJmxExporterInput` via:
//
//          ClusterJmxExporterArgs{...}
type ClusterJmxExporterInput interface {
	pulumi.Input

	ToClusterJmxExporterOutput() ClusterJmxExporterOutput
	ToClusterJmxExporterOutputWithContext(context.Context) ClusterJmxExporterOutput
}

type ClusterJmxExporterArgs struct {
	EnabledInBroker pulumi.BoolInput `pulumi:"enabledInBroker"`
}

func (ClusterJmxExporterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterJmxExporter)(nil)).Elem()
}

func (i ClusterJmxExporterArgs) ToClusterJmxExporterOutput() ClusterJmxExporterOutput {
	return i.ToClusterJmxExporterOutputWithContext(context.Background())
}

func (i ClusterJmxExporterArgs) ToClusterJmxExporterOutputWithContext(ctx context.Context) ClusterJmxExporterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterJmxExporterOutput)
}

func (i ClusterJmxExporterArgs) ToClusterJmxExporterPtrOutput() ClusterJmxExporterPtrOutput {
	return i.ToClusterJmxExporterPtrOutputWithContext(context.Background())
}

func (i ClusterJmxExporterArgs) ToClusterJmxExporterPtrOutputWithContext(ctx context.Context) ClusterJmxExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterJmxExporterOutput).ToClusterJmxExporterPtrOutputWithContext(ctx)
}

// ClusterJmxExporterPtrInput is an input type that accepts ClusterJmxExporterArgs, ClusterJmxExporterPtr and ClusterJmxExporterPtrOutput values.
// You can construct a concrete instance of `ClusterJmxExporterPtrInput` via:
//
//          ClusterJmxExporterArgs{...}
//
//  or:
//
//          nil
type ClusterJmxExporterPtrInput interface {
	pulumi.Input

	ToClusterJmxExporterPtrOutput() ClusterJmxExporterPtrOutput
	ToClusterJmxExporterPtrOutputWithContext(context.Context) ClusterJmxExporterPtrOutput
}

type clusterJmxExporterPtrType ClusterJmxExporterArgs

func ClusterJmxExporterPtr(v *ClusterJmxExporterArgs) ClusterJmxExporterPtrInput {
	return (*clusterJmxExporterPtrType)(v)
}

func (*clusterJmxExporterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterJmxExporter)(nil)).Elem()
}

func (i *clusterJmxExporterPtrType) ToClusterJmxExporterPtrOutput() ClusterJmxExporterPtrOutput {
	return i.ToClusterJmxExporterPtrOutputWithContext(context.Background())
}

func (i *clusterJmxExporterPtrType) ToClusterJmxExporterPtrOutputWithContext(ctx context.Context) ClusterJmxExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterJmxExporterPtrOutput)
}

type ClusterJmxExporterOutput struct{ *pulumi.OutputState }

func (ClusterJmxExporterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterJmxExporter)(nil)).Elem()
}

func (o ClusterJmxExporterOutput) ToClusterJmxExporterOutput() ClusterJmxExporterOutput {
	return o
}

func (o ClusterJmxExporterOutput) ToClusterJmxExporterOutputWithContext(ctx context.Context) ClusterJmxExporterOutput {
	return o
}

func (o ClusterJmxExporterOutput) ToClusterJmxExporterPtrOutput() ClusterJmxExporterPtrOutput {
	return o.ToClusterJmxExporterPtrOutputWithContext(context.Background())
}

func (o ClusterJmxExporterOutput) ToClusterJmxExporterPtrOutputWithContext(ctx context.Context) ClusterJmxExporterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterJmxExporter) *ClusterJmxExporter {
		return &v
	}).(ClusterJmxExporterPtrOutput)
}

func (o ClusterJmxExporterOutput) EnabledInBroker() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterJmxExporter) bool { return v.EnabledInBroker }).(pulumi.BoolOutput)
}

type ClusterJmxExporterPtrOutput struct{ *pulumi.OutputState }

func (ClusterJmxExporterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterJmxExporter)(nil)).Elem()
}

func (o ClusterJmxExporterPtrOutput) ToClusterJmxExporterPtrOutput() ClusterJmxExporterPtrOutput {
	return o
}

func (o ClusterJmxExporterPtrOutput) ToClusterJmxExporterPtrOutputWithContext(ctx context.Context) ClusterJmxExporterPtrOutput {
	return o
}

func (o ClusterJmxExporterPtrOutput) Elem() ClusterJmxExporterOutput {
	return o.ApplyT(func(v *ClusterJmxExporter) ClusterJmxExporter {
		if v != nil {
			return *v
		}
		var ret ClusterJmxExporter
		return ret
	}).(ClusterJmxExporterOutput)
}

func (o ClusterJmxExporterPtrOutput) EnabledInBroker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterJmxExporter) *bool {
		if v == nil {
			return nil
		}
		return &v.EnabledInBroker
	}).(pulumi.BoolPtrOutput)
}

type ClusterLoggingInfo struct {
	BrokerLogs ClusterBrokerLogs `pulumi:"brokerLogs"`
}

// ClusterLoggingInfoInput is an input type that accepts ClusterLoggingInfoArgs and ClusterLoggingInfoOutput values.
// You can construct a concrete instance of `ClusterLoggingInfoInput` via:
//
//          ClusterLoggingInfoArgs{...}
type ClusterLoggingInfoInput interface {
	pulumi.Input

	ToClusterLoggingInfoOutput() ClusterLoggingInfoOutput
	ToClusterLoggingInfoOutputWithContext(context.Context) ClusterLoggingInfoOutput
}

type ClusterLoggingInfoArgs struct {
	BrokerLogs ClusterBrokerLogsInput `pulumi:"brokerLogs"`
}

func (ClusterLoggingInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingInfo)(nil)).Elem()
}

func (i ClusterLoggingInfoArgs) ToClusterLoggingInfoOutput() ClusterLoggingInfoOutput {
	return i.ToClusterLoggingInfoOutputWithContext(context.Background())
}

func (i ClusterLoggingInfoArgs) ToClusterLoggingInfoOutputWithContext(ctx context.Context) ClusterLoggingInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoOutput)
}

func (i ClusterLoggingInfoArgs) ToClusterLoggingInfoPtrOutput() ClusterLoggingInfoPtrOutput {
	return i.ToClusterLoggingInfoPtrOutputWithContext(context.Background())
}

func (i ClusterLoggingInfoArgs) ToClusterLoggingInfoPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoOutput).ToClusterLoggingInfoPtrOutputWithContext(ctx)
}

// ClusterLoggingInfoPtrInput is an input type that accepts ClusterLoggingInfoArgs, ClusterLoggingInfoPtr and ClusterLoggingInfoPtrOutput values.
// You can construct a concrete instance of `ClusterLoggingInfoPtrInput` via:
//
//          ClusterLoggingInfoArgs{...}
//
//  or:
//
//          nil
type ClusterLoggingInfoPtrInput interface {
	pulumi.Input

	ToClusterLoggingInfoPtrOutput() ClusterLoggingInfoPtrOutput
	ToClusterLoggingInfoPtrOutputWithContext(context.Context) ClusterLoggingInfoPtrOutput
}

type clusterLoggingInfoPtrType ClusterLoggingInfoArgs

func ClusterLoggingInfoPtr(v *ClusterLoggingInfoArgs) ClusterLoggingInfoPtrInput {
	return (*clusterLoggingInfoPtrType)(v)
}

func (*clusterLoggingInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingInfo)(nil)).Elem()
}

func (i *clusterLoggingInfoPtrType) ToClusterLoggingInfoPtrOutput() ClusterLoggingInfoPtrOutput {
	return i.ToClusterLoggingInfoPtrOutputWithContext(context.Background())
}

func (i *clusterLoggingInfoPtrType) ToClusterLoggingInfoPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoPtrOutput)
}

type ClusterLoggingInfoOutput struct{ *pulumi.OutputState }

func (ClusterLoggingInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingInfo)(nil)).Elem()
}

func (o ClusterLoggingInfoOutput) ToClusterLoggingInfoOutput() ClusterLoggingInfoOutput {
	return o
}

func (o ClusterLoggingInfoOutput) ToClusterLoggingInfoOutputWithContext(ctx context.Context) ClusterLoggingInfoOutput {
	return o
}

func (o ClusterLoggingInfoOutput) ToClusterLoggingInfoPtrOutput() ClusterLoggingInfoPtrOutput {
	return o.ToClusterLoggingInfoPtrOutputWithContext(context.Background())
}

func (o ClusterLoggingInfoOutput) ToClusterLoggingInfoPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLoggingInfo) *ClusterLoggingInfo {
		return &v
	}).(ClusterLoggingInfoPtrOutput)
}

func (o ClusterLoggingInfoOutput) BrokerLogs() ClusterBrokerLogsOutput {
	return o.ApplyT(func(v ClusterLoggingInfo) ClusterBrokerLogs { return v.BrokerLogs }).(ClusterBrokerLogsOutput)
}

type ClusterLoggingInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterLoggingInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingInfo)(nil)).Elem()
}

func (o ClusterLoggingInfoPtrOutput) ToClusterLoggingInfoPtrOutput() ClusterLoggingInfoPtrOutput {
	return o
}

func (o ClusterLoggingInfoPtrOutput) ToClusterLoggingInfoPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoPtrOutput {
	return o
}

func (o ClusterLoggingInfoPtrOutput) Elem() ClusterLoggingInfoOutput {
	return o.ApplyT(func(v *ClusterLoggingInfo) ClusterLoggingInfo {
		if v != nil {
			return *v
		}
		var ret ClusterLoggingInfo
		return ret
	}).(ClusterLoggingInfoOutput)
}

func (o ClusterLoggingInfoPtrOutput) BrokerLogs() ClusterBrokerLogsPtrOutput {
	return o.ApplyT(func(v *ClusterLoggingInfo) *ClusterBrokerLogs {
		if v == nil {
			return nil
		}
		return &v.BrokerLogs
	}).(ClusterBrokerLogsPtrOutput)
}

type ClusterNodeExporter struct {
	EnabledInBroker bool `pulumi:"enabledInBroker"`
}

// ClusterNodeExporterInput is an input type that accepts ClusterNodeExporterArgs and ClusterNodeExporterOutput values.
// You can construct a concrete instance of `ClusterNodeExporterInput` via:
//
//          ClusterNodeExporterArgs{...}
type ClusterNodeExporterInput interface {
	pulumi.Input

	ToClusterNodeExporterOutput() ClusterNodeExporterOutput
	ToClusterNodeExporterOutputWithContext(context.Context) ClusterNodeExporterOutput
}

type ClusterNodeExporterArgs struct {
	EnabledInBroker pulumi.BoolInput `pulumi:"enabledInBroker"`
}

func (ClusterNodeExporterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeExporter)(nil)).Elem()
}

func (i ClusterNodeExporterArgs) ToClusterNodeExporterOutput() ClusterNodeExporterOutput {
	return i.ToClusterNodeExporterOutputWithContext(context.Background())
}

func (i ClusterNodeExporterArgs) ToClusterNodeExporterOutputWithContext(ctx context.Context) ClusterNodeExporterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeExporterOutput)
}

func (i ClusterNodeExporterArgs) ToClusterNodeExporterPtrOutput() ClusterNodeExporterPtrOutput {
	return i.ToClusterNodeExporterPtrOutputWithContext(context.Background())
}

func (i ClusterNodeExporterArgs) ToClusterNodeExporterPtrOutputWithContext(ctx context.Context) ClusterNodeExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeExporterOutput).ToClusterNodeExporterPtrOutputWithContext(ctx)
}

// ClusterNodeExporterPtrInput is an input type that accepts ClusterNodeExporterArgs, ClusterNodeExporterPtr and ClusterNodeExporterPtrOutput values.
// You can construct a concrete instance of `ClusterNodeExporterPtrInput` via:
//
//          ClusterNodeExporterArgs{...}
//
//  or:
//
//          nil
type ClusterNodeExporterPtrInput interface {
	pulumi.Input

	ToClusterNodeExporterPtrOutput() ClusterNodeExporterPtrOutput
	ToClusterNodeExporterPtrOutputWithContext(context.Context) ClusterNodeExporterPtrOutput
}

type clusterNodeExporterPtrType ClusterNodeExporterArgs

func ClusterNodeExporterPtr(v *ClusterNodeExporterArgs) ClusterNodeExporterPtrInput {
	return (*clusterNodeExporterPtrType)(v)
}

func (*clusterNodeExporterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeExporter)(nil)).Elem()
}

func (i *clusterNodeExporterPtrType) ToClusterNodeExporterPtrOutput() ClusterNodeExporterPtrOutput {
	return i.ToClusterNodeExporterPtrOutputWithContext(context.Background())
}

func (i *clusterNodeExporterPtrType) ToClusterNodeExporterPtrOutputWithContext(ctx context.Context) ClusterNodeExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterNodeExporterPtrOutput)
}

type ClusterNodeExporterOutput struct{ *pulumi.OutputState }

func (ClusterNodeExporterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterNodeExporter)(nil)).Elem()
}

func (o ClusterNodeExporterOutput) ToClusterNodeExporterOutput() ClusterNodeExporterOutput {
	return o
}

func (o ClusterNodeExporterOutput) ToClusterNodeExporterOutputWithContext(ctx context.Context) ClusterNodeExporterOutput {
	return o
}

func (o ClusterNodeExporterOutput) ToClusterNodeExporterPtrOutput() ClusterNodeExporterPtrOutput {
	return o.ToClusterNodeExporterPtrOutputWithContext(context.Background())
}

func (o ClusterNodeExporterOutput) ToClusterNodeExporterPtrOutputWithContext(ctx context.Context) ClusterNodeExporterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterNodeExporter) *ClusterNodeExporter {
		return &v
	}).(ClusterNodeExporterPtrOutput)
}

func (o ClusterNodeExporterOutput) EnabledInBroker() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterNodeExporter) bool { return v.EnabledInBroker }).(pulumi.BoolOutput)
}

type ClusterNodeExporterPtrOutput struct{ *pulumi.OutputState }

func (ClusterNodeExporterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterNodeExporter)(nil)).Elem()
}

func (o ClusterNodeExporterPtrOutput) ToClusterNodeExporterPtrOutput() ClusterNodeExporterPtrOutput {
	return o
}

func (o ClusterNodeExporterPtrOutput) ToClusterNodeExporterPtrOutputWithContext(ctx context.Context) ClusterNodeExporterPtrOutput {
	return o
}

func (o ClusterNodeExporterPtrOutput) Elem() ClusterNodeExporterOutput {
	return o.ApplyT(func(v *ClusterNodeExporter) ClusterNodeExporter {
		if v != nil {
			return *v
		}
		var ret ClusterNodeExporter
		return ret
	}).(ClusterNodeExporterOutput)
}

func (o ClusterNodeExporterPtrOutput) EnabledInBroker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterNodeExporter) *bool {
		if v == nil {
			return nil
		}
		return &v.EnabledInBroker
	}).(pulumi.BoolPtrOutput)
}

type ClusterOpenMonitoring struct {
	Prometheus ClusterPrometheus `pulumi:"prometheus"`
}

// ClusterOpenMonitoringInput is an input type that accepts ClusterOpenMonitoringArgs and ClusterOpenMonitoringOutput values.
// You can construct a concrete instance of `ClusterOpenMonitoringInput` via:
//
//          ClusterOpenMonitoringArgs{...}
type ClusterOpenMonitoringInput interface {
	pulumi.Input

	ToClusterOpenMonitoringOutput() ClusterOpenMonitoringOutput
	ToClusterOpenMonitoringOutputWithContext(context.Context) ClusterOpenMonitoringOutput
}

type ClusterOpenMonitoringArgs struct {
	Prometheus ClusterPrometheusInput `pulumi:"prometheus"`
}

func (ClusterOpenMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOpenMonitoring)(nil)).Elem()
}

func (i ClusterOpenMonitoringArgs) ToClusterOpenMonitoringOutput() ClusterOpenMonitoringOutput {
	return i.ToClusterOpenMonitoringOutputWithContext(context.Background())
}

func (i ClusterOpenMonitoringArgs) ToClusterOpenMonitoringOutputWithContext(ctx context.Context) ClusterOpenMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringOutput)
}

func (i ClusterOpenMonitoringArgs) ToClusterOpenMonitoringPtrOutput() ClusterOpenMonitoringPtrOutput {
	return i.ToClusterOpenMonitoringPtrOutputWithContext(context.Background())
}

func (i ClusterOpenMonitoringArgs) ToClusterOpenMonitoringPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringOutput).ToClusterOpenMonitoringPtrOutputWithContext(ctx)
}

// ClusterOpenMonitoringPtrInput is an input type that accepts ClusterOpenMonitoringArgs, ClusterOpenMonitoringPtr and ClusterOpenMonitoringPtrOutput values.
// You can construct a concrete instance of `ClusterOpenMonitoringPtrInput` via:
//
//          ClusterOpenMonitoringArgs{...}
//
//  or:
//
//          nil
type ClusterOpenMonitoringPtrInput interface {
	pulumi.Input

	ToClusterOpenMonitoringPtrOutput() ClusterOpenMonitoringPtrOutput
	ToClusterOpenMonitoringPtrOutputWithContext(context.Context) ClusterOpenMonitoringPtrOutput
}

type clusterOpenMonitoringPtrType ClusterOpenMonitoringArgs

func ClusterOpenMonitoringPtr(v *ClusterOpenMonitoringArgs) ClusterOpenMonitoringPtrInput {
	return (*clusterOpenMonitoringPtrType)(v)
}

func (*clusterOpenMonitoringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOpenMonitoring)(nil)).Elem()
}

func (i *clusterOpenMonitoringPtrType) ToClusterOpenMonitoringPtrOutput() ClusterOpenMonitoringPtrOutput {
	return i.ToClusterOpenMonitoringPtrOutputWithContext(context.Background())
}

func (i *clusterOpenMonitoringPtrType) ToClusterOpenMonitoringPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringPtrOutput)
}

type ClusterOpenMonitoringOutput struct{ *pulumi.OutputState }

func (ClusterOpenMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOpenMonitoring)(nil)).Elem()
}

func (o ClusterOpenMonitoringOutput) ToClusterOpenMonitoringOutput() ClusterOpenMonitoringOutput {
	return o
}

func (o ClusterOpenMonitoringOutput) ToClusterOpenMonitoringOutputWithContext(ctx context.Context) ClusterOpenMonitoringOutput {
	return o
}

func (o ClusterOpenMonitoringOutput) ToClusterOpenMonitoringPtrOutput() ClusterOpenMonitoringPtrOutput {
	return o.ToClusterOpenMonitoringPtrOutputWithContext(context.Background())
}

func (o ClusterOpenMonitoringOutput) ToClusterOpenMonitoringPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterOpenMonitoring) *ClusterOpenMonitoring {
		return &v
	}).(ClusterOpenMonitoringPtrOutput)
}

func (o ClusterOpenMonitoringOutput) Prometheus() ClusterPrometheusOutput {
	return o.ApplyT(func(v ClusterOpenMonitoring) ClusterPrometheus { return v.Prometheus }).(ClusterPrometheusOutput)
}

type ClusterOpenMonitoringPtrOutput struct{ *pulumi.OutputState }

func (ClusterOpenMonitoringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOpenMonitoring)(nil)).Elem()
}

func (o ClusterOpenMonitoringPtrOutput) ToClusterOpenMonitoringPtrOutput() ClusterOpenMonitoringPtrOutput {
	return o
}

func (o ClusterOpenMonitoringPtrOutput) ToClusterOpenMonitoringPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPtrOutput {
	return o
}

func (o ClusterOpenMonitoringPtrOutput) Elem() ClusterOpenMonitoringOutput {
	return o.ApplyT(func(v *ClusterOpenMonitoring) ClusterOpenMonitoring {
		if v != nil {
			return *v
		}
		var ret ClusterOpenMonitoring
		return ret
	}).(ClusterOpenMonitoringOutput)
}

func (o ClusterOpenMonitoringPtrOutput) Prometheus() ClusterPrometheusPtrOutput {
	return o.ApplyT(func(v *ClusterOpenMonitoring) *ClusterPrometheus {
		if v == nil {
			return nil
		}
		return &v.Prometheus
	}).(ClusterPrometheusPtrOutput)
}

type ClusterPrometheus struct {
	JmxExporter  *ClusterJmxExporter  `pulumi:"jmxExporter"`
	NodeExporter *ClusterNodeExporter `pulumi:"nodeExporter"`
}

// ClusterPrometheusInput is an input type that accepts ClusterPrometheusArgs and ClusterPrometheusOutput values.
// You can construct a concrete instance of `ClusterPrometheusInput` via:
//
//          ClusterPrometheusArgs{...}
type ClusterPrometheusInput interface {
	pulumi.Input

	ToClusterPrometheusOutput() ClusterPrometheusOutput
	ToClusterPrometheusOutputWithContext(context.Context) ClusterPrometheusOutput
}

type ClusterPrometheusArgs struct {
	JmxExporter  ClusterJmxExporterPtrInput  `pulumi:"jmxExporter"`
	NodeExporter ClusterNodeExporterPtrInput `pulumi:"nodeExporter"`
}

func (ClusterPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrometheus)(nil)).Elem()
}

func (i ClusterPrometheusArgs) ToClusterPrometheusOutput() ClusterPrometheusOutput {
	return i.ToClusterPrometheusOutputWithContext(context.Background())
}

func (i ClusterPrometheusArgs) ToClusterPrometheusOutputWithContext(ctx context.Context) ClusterPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrometheusOutput)
}

func (i ClusterPrometheusArgs) ToClusterPrometheusPtrOutput() ClusterPrometheusPtrOutput {
	return i.ToClusterPrometheusPtrOutputWithContext(context.Background())
}

func (i ClusterPrometheusArgs) ToClusterPrometheusPtrOutputWithContext(ctx context.Context) ClusterPrometheusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrometheusOutput).ToClusterPrometheusPtrOutputWithContext(ctx)
}

// ClusterPrometheusPtrInput is an input type that accepts ClusterPrometheusArgs, ClusterPrometheusPtr and ClusterPrometheusPtrOutput values.
// You can construct a concrete instance of `ClusterPrometheusPtrInput` via:
//
//          ClusterPrometheusArgs{...}
//
//  or:
//
//          nil
type ClusterPrometheusPtrInput interface {
	pulumi.Input

	ToClusterPrometheusPtrOutput() ClusterPrometheusPtrOutput
	ToClusterPrometheusPtrOutputWithContext(context.Context) ClusterPrometheusPtrOutput
}

type clusterPrometheusPtrType ClusterPrometheusArgs

func ClusterPrometheusPtr(v *ClusterPrometheusArgs) ClusterPrometheusPtrInput {
	return (*clusterPrometheusPtrType)(v)
}

func (*clusterPrometheusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrometheus)(nil)).Elem()
}

func (i *clusterPrometheusPtrType) ToClusterPrometheusPtrOutput() ClusterPrometheusPtrOutput {
	return i.ToClusterPrometheusPtrOutputWithContext(context.Background())
}

func (i *clusterPrometheusPtrType) ToClusterPrometheusPtrOutputWithContext(ctx context.Context) ClusterPrometheusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterPrometheusPtrOutput)
}

type ClusterPrometheusOutput struct{ *pulumi.OutputState }

func (ClusterPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterPrometheus)(nil)).Elem()
}

func (o ClusterPrometheusOutput) ToClusterPrometheusOutput() ClusterPrometheusOutput {
	return o
}

func (o ClusterPrometheusOutput) ToClusterPrometheusOutputWithContext(ctx context.Context) ClusterPrometheusOutput {
	return o
}

func (o ClusterPrometheusOutput) ToClusterPrometheusPtrOutput() ClusterPrometheusPtrOutput {
	return o.ToClusterPrometheusPtrOutputWithContext(context.Background())
}

func (o ClusterPrometheusOutput) ToClusterPrometheusPtrOutputWithContext(ctx context.Context) ClusterPrometheusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterPrometheus) *ClusterPrometheus {
		return &v
	}).(ClusterPrometheusPtrOutput)
}

func (o ClusterPrometheusOutput) JmxExporter() ClusterJmxExporterPtrOutput {
	return o.ApplyT(func(v ClusterPrometheus) *ClusterJmxExporter { return v.JmxExporter }).(ClusterJmxExporterPtrOutput)
}

func (o ClusterPrometheusOutput) NodeExporter() ClusterNodeExporterPtrOutput {
	return o.ApplyT(func(v ClusterPrometheus) *ClusterNodeExporter { return v.NodeExporter }).(ClusterNodeExporterPtrOutput)
}

type ClusterPrometheusPtrOutput struct{ *pulumi.OutputState }

func (ClusterPrometheusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterPrometheus)(nil)).Elem()
}

func (o ClusterPrometheusPtrOutput) ToClusterPrometheusPtrOutput() ClusterPrometheusPtrOutput {
	return o
}

func (o ClusterPrometheusPtrOutput) ToClusterPrometheusPtrOutputWithContext(ctx context.Context) ClusterPrometheusPtrOutput {
	return o
}

func (o ClusterPrometheusPtrOutput) Elem() ClusterPrometheusOutput {
	return o.ApplyT(func(v *ClusterPrometheus) ClusterPrometheus {
		if v != nil {
			return *v
		}
		var ret ClusterPrometheus
		return ret
	}).(ClusterPrometheusOutput)
}

func (o ClusterPrometheusPtrOutput) JmxExporter() ClusterJmxExporterPtrOutput {
	return o.ApplyT(func(v *ClusterPrometheus) *ClusterJmxExporter {
		if v == nil {
			return nil
		}
		return v.JmxExporter
	}).(ClusterJmxExporterPtrOutput)
}

func (o ClusterPrometheusPtrOutput) NodeExporter() ClusterNodeExporterPtrOutput {
	return o.ApplyT(func(v *ClusterPrometheus) *ClusterNodeExporter {
		if v == nil {
			return nil
		}
		return v.NodeExporter
	}).(ClusterNodeExporterPtrOutput)
}

type ClusterS3 struct {
	Bucket  *string `pulumi:"bucket"`
	Enabled bool    `pulumi:"enabled"`
	Prefix  *string `pulumi:"prefix"`
}

// ClusterS3Input is an input type that accepts ClusterS3Args and ClusterS3Output values.
// You can construct a concrete instance of `ClusterS3Input` via:
//
//          ClusterS3Args{...}
type ClusterS3Input interface {
	pulumi.Input

	ToClusterS3Output() ClusterS3Output
	ToClusterS3OutputWithContext(context.Context) ClusterS3Output
}

type ClusterS3Args struct {
	Bucket  pulumi.StringPtrInput `pulumi:"bucket"`
	Enabled pulumi.BoolInput      `pulumi:"enabled"`
	Prefix  pulumi.StringPtrInput `pulumi:"prefix"`
}

func (ClusterS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterS3)(nil)).Elem()
}

func (i ClusterS3Args) ToClusterS3Output() ClusterS3Output {
	return i.ToClusterS3OutputWithContext(context.Background())
}

func (i ClusterS3Args) ToClusterS3OutputWithContext(ctx context.Context) ClusterS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterS3Output)
}

func (i ClusterS3Args) ToClusterS3PtrOutput() ClusterS3PtrOutput {
	return i.ToClusterS3PtrOutputWithContext(context.Background())
}

func (i ClusterS3Args) ToClusterS3PtrOutputWithContext(ctx context.Context) ClusterS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterS3Output).ToClusterS3PtrOutputWithContext(ctx)
}

// ClusterS3PtrInput is an input type that accepts ClusterS3Args, ClusterS3Ptr and ClusterS3PtrOutput values.
// You can construct a concrete instance of `ClusterS3PtrInput` via:
//
//          ClusterS3Args{...}
//
//  or:
//
//          nil
type ClusterS3PtrInput interface {
	pulumi.Input

	ToClusterS3PtrOutput() ClusterS3PtrOutput
	ToClusterS3PtrOutputWithContext(context.Context) ClusterS3PtrOutput
}

type clusterS3PtrType ClusterS3Args

func ClusterS3Ptr(v *ClusterS3Args) ClusterS3PtrInput {
	return (*clusterS3PtrType)(v)
}

func (*clusterS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterS3)(nil)).Elem()
}

func (i *clusterS3PtrType) ToClusterS3PtrOutput() ClusterS3PtrOutput {
	return i.ToClusterS3PtrOutputWithContext(context.Background())
}

func (i *clusterS3PtrType) ToClusterS3PtrOutputWithContext(ctx context.Context) ClusterS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterS3PtrOutput)
}

type ClusterS3Output struct{ *pulumi.OutputState }

func (ClusterS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterS3)(nil)).Elem()
}

func (o ClusterS3Output) ToClusterS3Output() ClusterS3Output {
	return o
}

func (o ClusterS3Output) ToClusterS3OutputWithContext(ctx context.Context) ClusterS3Output {
	return o
}

func (o ClusterS3Output) ToClusterS3PtrOutput() ClusterS3PtrOutput {
	return o.ToClusterS3PtrOutputWithContext(context.Background())
}

func (o ClusterS3Output) ToClusterS3PtrOutputWithContext(ctx context.Context) ClusterS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterS3) *ClusterS3 {
		return &v
	}).(ClusterS3PtrOutput)
}

func (o ClusterS3Output) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterS3) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

func (o ClusterS3Output) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterS3) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o ClusterS3Output) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterS3) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type ClusterS3PtrOutput struct{ *pulumi.OutputState }

func (ClusterS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterS3)(nil)).Elem()
}

func (o ClusterS3PtrOutput) ToClusterS3PtrOutput() ClusterS3PtrOutput {
	return o
}

func (o ClusterS3PtrOutput) ToClusterS3PtrOutputWithContext(ctx context.Context) ClusterS3PtrOutput {
	return o
}

func (o ClusterS3PtrOutput) Elem() ClusterS3Output {
	return o.ApplyT(func(v *ClusterS3) ClusterS3 {
		if v != nil {
			return *v
		}
		var ret ClusterS3
		return ret
	}).(ClusterS3Output)
}

func (o ClusterS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterS3) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o ClusterS3PtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterS3) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterS3PtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterS3) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

type ClusterSasl struct {
	Iam   *ClusterIam   `pulumi:"iam"`
	Scram *ClusterScram `pulumi:"scram"`
}

// ClusterSaslInput is an input type that accepts ClusterSaslArgs and ClusterSaslOutput values.
// You can construct a concrete instance of `ClusterSaslInput` via:
//
//          ClusterSaslArgs{...}
type ClusterSaslInput interface {
	pulumi.Input

	ToClusterSaslOutput() ClusterSaslOutput
	ToClusterSaslOutputWithContext(context.Context) ClusterSaslOutput
}

type ClusterSaslArgs struct {
	Iam   ClusterIamPtrInput   `pulumi:"iam"`
	Scram ClusterScramPtrInput `pulumi:"scram"`
}

func (ClusterSaslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSasl)(nil)).Elem()
}

func (i ClusterSaslArgs) ToClusterSaslOutput() ClusterSaslOutput {
	return i.ToClusterSaslOutputWithContext(context.Background())
}

func (i ClusterSaslArgs) ToClusterSaslOutputWithContext(ctx context.Context) ClusterSaslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSaslOutput)
}

func (i ClusterSaslArgs) ToClusterSaslPtrOutput() ClusterSaslPtrOutput {
	return i.ToClusterSaslPtrOutputWithContext(context.Background())
}

func (i ClusterSaslArgs) ToClusterSaslPtrOutputWithContext(ctx context.Context) ClusterSaslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSaslOutput).ToClusterSaslPtrOutputWithContext(ctx)
}

// ClusterSaslPtrInput is an input type that accepts ClusterSaslArgs, ClusterSaslPtr and ClusterSaslPtrOutput values.
// You can construct a concrete instance of `ClusterSaslPtrInput` via:
//
//          ClusterSaslArgs{...}
//
//  or:
//
//          nil
type ClusterSaslPtrInput interface {
	pulumi.Input

	ToClusterSaslPtrOutput() ClusterSaslPtrOutput
	ToClusterSaslPtrOutputWithContext(context.Context) ClusterSaslPtrOutput
}

type clusterSaslPtrType ClusterSaslArgs

func ClusterSaslPtr(v *ClusterSaslArgs) ClusterSaslPtrInput {
	return (*clusterSaslPtrType)(v)
}

func (*clusterSaslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSasl)(nil)).Elem()
}

func (i *clusterSaslPtrType) ToClusterSaslPtrOutput() ClusterSaslPtrOutput {
	return i.ToClusterSaslPtrOutputWithContext(context.Background())
}

func (i *clusterSaslPtrType) ToClusterSaslPtrOutputWithContext(ctx context.Context) ClusterSaslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSaslPtrOutput)
}

type ClusterSaslOutput struct{ *pulumi.OutputState }

func (ClusterSaslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSasl)(nil)).Elem()
}

func (o ClusterSaslOutput) ToClusterSaslOutput() ClusterSaslOutput {
	return o
}

func (o ClusterSaslOutput) ToClusterSaslOutputWithContext(ctx context.Context) ClusterSaslOutput {
	return o
}

func (o ClusterSaslOutput) ToClusterSaslPtrOutput() ClusterSaslPtrOutput {
	return o.ToClusterSaslPtrOutputWithContext(context.Background())
}

func (o ClusterSaslOutput) ToClusterSaslPtrOutputWithContext(ctx context.Context) ClusterSaslPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterSasl) *ClusterSasl {
		return &v
	}).(ClusterSaslPtrOutput)
}

func (o ClusterSaslOutput) Iam() ClusterIamPtrOutput {
	return o.ApplyT(func(v ClusterSasl) *ClusterIam { return v.Iam }).(ClusterIamPtrOutput)
}

func (o ClusterSaslOutput) Scram() ClusterScramPtrOutput {
	return o.ApplyT(func(v ClusterSasl) *ClusterScram { return v.Scram }).(ClusterScramPtrOutput)
}

type ClusterSaslPtrOutput struct{ *pulumi.OutputState }

func (ClusterSaslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterSasl)(nil)).Elem()
}

func (o ClusterSaslPtrOutput) ToClusterSaslPtrOutput() ClusterSaslPtrOutput {
	return o
}

func (o ClusterSaslPtrOutput) ToClusterSaslPtrOutputWithContext(ctx context.Context) ClusterSaslPtrOutput {
	return o
}

func (o ClusterSaslPtrOutput) Elem() ClusterSaslOutput {
	return o.ApplyT(func(v *ClusterSasl) ClusterSasl {
		if v != nil {
			return *v
		}
		var ret ClusterSasl
		return ret
	}).(ClusterSaslOutput)
}

func (o ClusterSaslPtrOutput) Iam() ClusterIamPtrOutput {
	return o.ApplyT(func(v *ClusterSasl) *ClusterIam {
		if v == nil {
			return nil
		}
		return v.Iam
	}).(ClusterIamPtrOutput)
}

func (o ClusterSaslPtrOutput) Scram() ClusterScramPtrOutput {
	return o.ApplyT(func(v *ClusterSasl) *ClusterScram {
		if v == nil {
			return nil
		}
		return v.Scram
	}).(ClusterScramPtrOutput)
}

type ClusterScram struct {
	Enabled bool `pulumi:"enabled"`
}

// ClusterScramInput is an input type that accepts ClusterScramArgs and ClusterScramOutput values.
// You can construct a concrete instance of `ClusterScramInput` via:
//
//          ClusterScramArgs{...}
type ClusterScramInput interface {
	pulumi.Input

	ToClusterScramOutput() ClusterScramOutput
	ToClusterScramOutputWithContext(context.Context) ClusterScramOutput
}

type ClusterScramArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterScramArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterScram)(nil)).Elem()
}

func (i ClusterScramArgs) ToClusterScramOutput() ClusterScramOutput {
	return i.ToClusterScramOutputWithContext(context.Background())
}

func (i ClusterScramArgs) ToClusterScramOutputWithContext(ctx context.Context) ClusterScramOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterScramOutput)
}

func (i ClusterScramArgs) ToClusterScramPtrOutput() ClusterScramPtrOutput {
	return i.ToClusterScramPtrOutputWithContext(context.Background())
}

func (i ClusterScramArgs) ToClusterScramPtrOutputWithContext(ctx context.Context) ClusterScramPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterScramOutput).ToClusterScramPtrOutputWithContext(ctx)
}

// ClusterScramPtrInput is an input type that accepts ClusterScramArgs, ClusterScramPtr and ClusterScramPtrOutput values.
// You can construct a concrete instance of `ClusterScramPtrInput` via:
//
//          ClusterScramArgs{...}
//
//  or:
//
//          nil
type ClusterScramPtrInput interface {
	pulumi.Input

	ToClusterScramPtrOutput() ClusterScramPtrOutput
	ToClusterScramPtrOutputWithContext(context.Context) ClusterScramPtrOutput
}

type clusterScramPtrType ClusterScramArgs

func ClusterScramPtr(v *ClusterScramArgs) ClusterScramPtrInput {
	return (*clusterScramPtrType)(v)
}

func (*clusterScramPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterScram)(nil)).Elem()
}

func (i *clusterScramPtrType) ToClusterScramPtrOutput() ClusterScramPtrOutput {
	return i.ToClusterScramPtrOutputWithContext(context.Background())
}

func (i *clusterScramPtrType) ToClusterScramPtrOutputWithContext(ctx context.Context) ClusterScramPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterScramPtrOutput)
}

type ClusterScramOutput struct{ *pulumi.OutputState }

func (ClusterScramOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterScram)(nil)).Elem()
}

func (o ClusterScramOutput) ToClusterScramOutput() ClusterScramOutput {
	return o
}

func (o ClusterScramOutput) ToClusterScramOutputWithContext(ctx context.Context) ClusterScramOutput {
	return o
}

func (o ClusterScramOutput) ToClusterScramPtrOutput() ClusterScramPtrOutput {
	return o.ToClusterScramPtrOutputWithContext(context.Background())
}

func (o ClusterScramOutput) ToClusterScramPtrOutputWithContext(ctx context.Context) ClusterScramPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterScram) *ClusterScram {
		return &v
	}).(ClusterScramPtrOutput)
}

func (o ClusterScramOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterScram) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterScramPtrOutput struct{ *pulumi.OutputState }

func (ClusterScramPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterScram)(nil)).Elem()
}

func (o ClusterScramPtrOutput) ToClusterScramPtrOutput() ClusterScramPtrOutput {
	return o
}

func (o ClusterScramPtrOutput) ToClusterScramPtrOutputWithContext(ctx context.Context) ClusterScramPtrOutput {
	return o
}

func (o ClusterScramPtrOutput) Elem() ClusterScramOutput {
	return o.ApplyT(func(v *ClusterScram) ClusterScram {
		if v != nil {
			return *v
		}
		var ret ClusterScram
		return ret
	}).(ClusterScramOutput)
}

func (o ClusterScramPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterScram) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterStorageInfo struct {
	EBSStorageInfo *ClusterEBSStorageInfo `pulumi:"eBSStorageInfo"`
}

// ClusterStorageInfoInput is an input type that accepts ClusterStorageInfoArgs and ClusterStorageInfoOutput values.
// You can construct a concrete instance of `ClusterStorageInfoInput` via:
//
//          ClusterStorageInfoArgs{...}
type ClusterStorageInfoInput interface {
	pulumi.Input

	ToClusterStorageInfoOutput() ClusterStorageInfoOutput
	ToClusterStorageInfoOutputWithContext(context.Context) ClusterStorageInfoOutput
}

type ClusterStorageInfoArgs struct {
	EBSStorageInfo ClusterEBSStorageInfoPtrInput `pulumi:"eBSStorageInfo"`
}

func (ClusterStorageInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStorageInfo)(nil)).Elem()
}

func (i ClusterStorageInfoArgs) ToClusterStorageInfoOutput() ClusterStorageInfoOutput {
	return i.ToClusterStorageInfoOutputWithContext(context.Background())
}

func (i ClusterStorageInfoArgs) ToClusterStorageInfoOutputWithContext(ctx context.Context) ClusterStorageInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStorageInfoOutput)
}

func (i ClusterStorageInfoArgs) ToClusterStorageInfoPtrOutput() ClusterStorageInfoPtrOutput {
	return i.ToClusterStorageInfoPtrOutputWithContext(context.Background())
}

func (i ClusterStorageInfoArgs) ToClusterStorageInfoPtrOutputWithContext(ctx context.Context) ClusterStorageInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStorageInfoOutput).ToClusterStorageInfoPtrOutputWithContext(ctx)
}

// ClusterStorageInfoPtrInput is an input type that accepts ClusterStorageInfoArgs, ClusterStorageInfoPtr and ClusterStorageInfoPtrOutput values.
// You can construct a concrete instance of `ClusterStorageInfoPtrInput` via:
//
//          ClusterStorageInfoArgs{...}
//
//  or:
//
//          nil
type ClusterStorageInfoPtrInput interface {
	pulumi.Input

	ToClusterStorageInfoPtrOutput() ClusterStorageInfoPtrOutput
	ToClusterStorageInfoPtrOutputWithContext(context.Context) ClusterStorageInfoPtrOutput
}

type clusterStorageInfoPtrType ClusterStorageInfoArgs

func ClusterStorageInfoPtr(v *ClusterStorageInfoArgs) ClusterStorageInfoPtrInput {
	return (*clusterStorageInfoPtrType)(v)
}

func (*clusterStorageInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStorageInfo)(nil)).Elem()
}

func (i *clusterStorageInfoPtrType) ToClusterStorageInfoPtrOutput() ClusterStorageInfoPtrOutput {
	return i.ToClusterStorageInfoPtrOutputWithContext(context.Background())
}

func (i *clusterStorageInfoPtrType) ToClusterStorageInfoPtrOutputWithContext(ctx context.Context) ClusterStorageInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterStorageInfoPtrOutput)
}

type ClusterStorageInfoOutput struct{ *pulumi.OutputState }

func (ClusterStorageInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterStorageInfo)(nil)).Elem()
}

func (o ClusterStorageInfoOutput) ToClusterStorageInfoOutput() ClusterStorageInfoOutput {
	return o
}

func (o ClusterStorageInfoOutput) ToClusterStorageInfoOutputWithContext(ctx context.Context) ClusterStorageInfoOutput {
	return o
}

func (o ClusterStorageInfoOutput) ToClusterStorageInfoPtrOutput() ClusterStorageInfoPtrOutput {
	return o.ToClusterStorageInfoPtrOutputWithContext(context.Background())
}

func (o ClusterStorageInfoOutput) ToClusterStorageInfoPtrOutputWithContext(ctx context.Context) ClusterStorageInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterStorageInfo) *ClusterStorageInfo {
		return &v
	}).(ClusterStorageInfoPtrOutput)
}

func (o ClusterStorageInfoOutput) EBSStorageInfo() ClusterEBSStorageInfoPtrOutput {
	return o.ApplyT(func(v ClusterStorageInfo) *ClusterEBSStorageInfo { return v.EBSStorageInfo }).(ClusterEBSStorageInfoPtrOutput)
}

type ClusterStorageInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterStorageInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterStorageInfo)(nil)).Elem()
}

func (o ClusterStorageInfoPtrOutput) ToClusterStorageInfoPtrOutput() ClusterStorageInfoPtrOutput {
	return o
}

func (o ClusterStorageInfoPtrOutput) ToClusterStorageInfoPtrOutputWithContext(ctx context.Context) ClusterStorageInfoPtrOutput {
	return o
}

func (o ClusterStorageInfoPtrOutput) Elem() ClusterStorageInfoOutput {
	return o.ApplyT(func(v *ClusterStorageInfo) ClusterStorageInfo {
		if v != nil {
			return *v
		}
		var ret ClusterStorageInfo
		return ret
	}).(ClusterStorageInfoOutput)
}

func (o ClusterStorageInfoPtrOutput) EBSStorageInfo() ClusterEBSStorageInfoPtrOutput {
	return o.ApplyT(func(v *ClusterStorageInfo) *ClusterEBSStorageInfo {
		if v == nil {
			return nil
		}
		return v.EBSStorageInfo
	}).(ClusterEBSStorageInfoPtrOutput)
}

type ClusterTls struct {
	CertificateAuthorityArnList []string `pulumi:"certificateAuthorityArnList"`
	Enabled                     *bool    `pulumi:"enabled"`
}

// ClusterTlsInput is an input type that accepts ClusterTlsArgs and ClusterTlsOutput values.
// You can construct a concrete instance of `ClusterTlsInput` via:
//
//          ClusterTlsArgs{...}
type ClusterTlsInput interface {
	pulumi.Input

	ToClusterTlsOutput() ClusterTlsOutput
	ToClusterTlsOutputWithContext(context.Context) ClusterTlsOutput
}

type ClusterTlsArgs struct {
	CertificateAuthorityArnList pulumi.StringArrayInput `pulumi:"certificateAuthorityArnList"`
	Enabled                     pulumi.BoolPtrInput     `pulumi:"enabled"`
}

func (ClusterTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTls)(nil)).Elem()
}

func (i ClusterTlsArgs) ToClusterTlsOutput() ClusterTlsOutput {
	return i.ToClusterTlsOutputWithContext(context.Background())
}

func (i ClusterTlsArgs) ToClusterTlsOutputWithContext(ctx context.Context) ClusterTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTlsOutput)
}

func (i ClusterTlsArgs) ToClusterTlsPtrOutput() ClusterTlsPtrOutput {
	return i.ToClusterTlsPtrOutputWithContext(context.Background())
}

func (i ClusterTlsArgs) ToClusterTlsPtrOutputWithContext(ctx context.Context) ClusterTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTlsOutput).ToClusterTlsPtrOutputWithContext(ctx)
}

// ClusterTlsPtrInput is an input type that accepts ClusterTlsArgs, ClusterTlsPtr and ClusterTlsPtrOutput values.
// You can construct a concrete instance of `ClusterTlsPtrInput` via:
//
//          ClusterTlsArgs{...}
//
//  or:
//
//          nil
type ClusterTlsPtrInput interface {
	pulumi.Input

	ToClusterTlsPtrOutput() ClusterTlsPtrOutput
	ToClusterTlsPtrOutputWithContext(context.Context) ClusterTlsPtrOutput
}

type clusterTlsPtrType ClusterTlsArgs

func ClusterTlsPtr(v *ClusterTlsArgs) ClusterTlsPtrInput {
	return (*clusterTlsPtrType)(v)
}

func (*clusterTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterTls)(nil)).Elem()
}

func (i *clusterTlsPtrType) ToClusterTlsPtrOutput() ClusterTlsPtrOutput {
	return i.ToClusterTlsPtrOutputWithContext(context.Background())
}

func (i *clusterTlsPtrType) ToClusterTlsPtrOutputWithContext(ctx context.Context) ClusterTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTlsPtrOutput)
}

type ClusterTlsOutput struct{ *pulumi.OutputState }

func (ClusterTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterTls)(nil)).Elem()
}

func (o ClusterTlsOutput) ToClusterTlsOutput() ClusterTlsOutput {
	return o
}

func (o ClusterTlsOutput) ToClusterTlsOutputWithContext(ctx context.Context) ClusterTlsOutput {
	return o
}

func (o ClusterTlsOutput) ToClusterTlsPtrOutput() ClusterTlsPtrOutput {
	return o.ToClusterTlsPtrOutputWithContext(context.Background())
}

func (o ClusterTlsOutput) ToClusterTlsPtrOutputWithContext(ctx context.Context) ClusterTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterTls) *ClusterTls {
		return &v
	}).(ClusterTlsPtrOutput)
}

func (o ClusterTlsOutput) CertificateAuthorityArnList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterTls) []string { return v.CertificateAuthorityArnList }).(pulumi.StringArrayOutput)
}

func (o ClusterTlsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterTls) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClusterTlsPtrOutput struct{ *pulumi.OutputState }

func (ClusterTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterTls)(nil)).Elem()
}

func (o ClusterTlsPtrOutput) ToClusterTlsPtrOutput() ClusterTlsPtrOutput {
	return o
}

func (o ClusterTlsPtrOutput) ToClusterTlsPtrOutputWithContext(ctx context.Context) ClusterTlsPtrOutput {
	return o
}

func (o ClusterTlsPtrOutput) Elem() ClusterTlsOutput {
	return o.ApplyT(func(v *ClusterTls) ClusterTls {
		if v != nil {
			return *v
		}
		var ret ClusterTls
		return ret
	}).(ClusterTlsOutput)
}

func (o ClusterTlsPtrOutput) CertificateAuthorityArnList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterTls) []string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthorityArnList
	}).(pulumi.StringArrayOutput)
}

func (o ClusterTlsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterTls) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterUnauthenticated struct {
	Enabled bool `pulumi:"enabled"`
}

// ClusterUnauthenticatedInput is an input type that accepts ClusterUnauthenticatedArgs and ClusterUnauthenticatedOutput values.
// You can construct a concrete instance of `ClusterUnauthenticatedInput` via:
//
//          ClusterUnauthenticatedArgs{...}
type ClusterUnauthenticatedInput interface {
	pulumi.Input

	ToClusterUnauthenticatedOutput() ClusterUnauthenticatedOutput
	ToClusterUnauthenticatedOutputWithContext(context.Context) ClusterUnauthenticatedOutput
}

type ClusterUnauthenticatedArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ClusterUnauthenticatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUnauthenticated)(nil)).Elem()
}

func (i ClusterUnauthenticatedArgs) ToClusterUnauthenticatedOutput() ClusterUnauthenticatedOutput {
	return i.ToClusterUnauthenticatedOutputWithContext(context.Background())
}

func (i ClusterUnauthenticatedArgs) ToClusterUnauthenticatedOutputWithContext(ctx context.Context) ClusterUnauthenticatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUnauthenticatedOutput)
}

func (i ClusterUnauthenticatedArgs) ToClusterUnauthenticatedPtrOutput() ClusterUnauthenticatedPtrOutput {
	return i.ToClusterUnauthenticatedPtrOutputWithContext(context.Background())
}

func (i ClusterUnauthenticatedArgs) ToClusterUnauthenticatedPtrOutputWithContext(ctx context.Context) ClusterUnauthenticatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUnauthenticatedOutput).ToClusterUnauthenticatedPtrOutputWithContext(ctx)
}

// ClusterUnauthenticatedPtrInput is an input type that accepts ClusterUnauthenticatedArgs, ClusterUnauthenticatedPtr and ClusterUnauthenticatedPtrOutput values.
// You can construct a concrete instance of `ClusterUnauthenticatedPtrInput` via:
//
//          ClusterUnauthenticatedArgs{...}
//
//  or:
//
//          nil
type ClusterUnauthenticatedPtrInput interface {
	pulumi.Input

	ToClusterUnauthenticatedPtrOutput() ClusterUnauthenticatedPtrOutput
	ToClusterUnauthenticatedPtrOutputWithContext(context.Context) ClusterUnauthenticatedPtrOutput
}

type clusterUnauthenticatedPtrType ClusterUnauthenticatedArgs

func ClusterUnauthenticatedPtr(v *ClusterUnauthenticatedArgs) ClusterUnauthenticatedPtrInput {
	return (*clusterUnauthenticatedPtrType)(v)
}

func (*clusterUnauthenticatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterUnauthenticated)(nil)).Elem()
}

func (i *clusterUnauthenticatedPtrType) ToClusterUnauthenticatedPtrOutput() ClusterUnauthenticatedPtrOutput {
	return i.ToClusterUnauthenticatedPtrOutputWithContext(context.Background())
}

func (i *clusterUnauthenticatedPtrType) ToClusterUnauthenticatedPtrOutputWithContext(ctx context.Context) ClusterUnauthenticatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterUnauthenticatedPtrOutput)
}

type ClusterUnauthenticatedOutput struct{ *pulumi.OutputState }

func (ClusterUnauthenticatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterUnauthenticated)(nil)).Elem()
}

func (o ClusterUnauthenticatedOutput) ToClusterUnauthenticatedOutput() ClusterUnauthenticatedOutput {
	return o
}

func (o ClusterUnauthenticatedOutput) ToClusterUnauthenticatedOutputWithContext(ctx context.Context) ClusterUnauthenticatedOutput {
	return o
}

func (o ClusterUnauthenticatedOutput) ToClusterUnauthenticatedPtrOutput() ClusterUnauthenticatedPtrOutput {
	return o.ToClusterUnauthenticatedPtrOutputWithContext(context.Background())
}

func (o ClusterUnauthenticatedOutput) ToClusterUnauthenticatedPtrOutputWithContext(ctx context.Context) ClusterUnauthenticatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterUnauthenticated) *ClusterUnauthenticated {
		return &v
	}).(ClusterUnauthenticatedPtrOutput)
}

func (o ClusterUnauthenticatedOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterUnauthenticated) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterUnauthenticatedPtrOutput struct{ *pulumi.OutputState }

func (ClusterUnauthenticatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterUnauthenticated)(nil)).Elem()
}

func (o ClusterUnauthenticatedPtrOutput) ToClusterUnauthenticatedPtrOutput() ClusterUnauthenticatedPtrOutput {
	return o
}

func (o ClusterUnauthenticatedPtrOutput) ToClusterUnauthenticatedPtrOutputWithContext(ctx context.Context) ClusterUnauthenticatedPtrOutput {
	return o
}

func (o ClusterUnauthenticatedPtrOutput) Elem() ClusterUnauthenticatedOutput {
	return o.ApplyT(func(v *ClusterUnauthenticated) ClusterUnauthenticated {
		if v != nil {
			return *v
		}
		var ret ClusterUnauthenticated
		return ret
	}).(ClusterUnauthenticatedOutput)
}

func (o ClusterUnauthenticatedPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterUnauthenticated) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterBrokerLogsOutput{})
	pulumi.RegisterOutputType(ClusterBrokerLogsPtrOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterClientAuthenticationOutput{})
	pulumi.RegisterOutputType(ClusterClientAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ClusterCloudWatchLogsOutput{})
	pulumi.RegisterOutputType(ClusterCloudWatchLogsPtrOutput{})
	pulumi.RegisterOutputType(ClusterConfigurationInfoOutput{})
	pulumi.RegisterOutputType(ClusterConfigurationInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterEBSStorageInfoOutput{})
	pulumi.RegisterOutputType(ClusterEBSStorageInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionAtRestOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionAtRestPtrOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionInTransitOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionInTransitPtrOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionInfoOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterFirehoseOutput{})
	pulumi.RegisterOutputType(ClusterFirehosePtrOutput{})
	pulumi.RegisterOutputType(ClusterIamOutput{})
	pulumi.RegisterOutputType(ClusterIamPtrOutput{})
	pulumi.RegisterOutputType(ClusterJmxExporterOutput{})
	pulumi.RegisterOutputType(ClusterJmxExporterPtrOutput{})
	pulumi.RegisterOutputType(ClusterLoggingInfoOutput{})
	pulumi.RegisterOutputType(ClusterLoggingInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterNodeExporterOutput{})
	pulumi.RegisterOutputType(ClusterNodeExporterPtrOutput{})
	pulumi.RegisterOutputType(ClusterOpenMonitoringOutput{})
	pulumi.RegisterOutputType(ClusterOpenMonitoringPtrOutput{})
	pulumi.RegisterOutputType(ClusterPrometheusOutput{})
	pulumi.RegisterOutputType(ClusterPrometheusPtrOutput{})
	pulumi.RegisterOutputType(ClusterS3Output{})
	pulumi.RegisterOutputType(ClusterS3PtrOutput{})
	pulumi.RegisterOutputType(ClusterSaslOutput{})
	pulumi.RegisterOutputType(ClusterSaslPtrOutput{})
	pulumi.RegisterOutputType(ClusterScramOutput{})
	pulumi.RegisterOutputType(ClusterScramPtrOutput{})
	pulumi.RegisterOutputType(ClusterStorageInfoOutput{})
	pulumi.RegisterOutputType(ClusterStorageInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterTlsOutput{})
	pulumi.RegisterOutputType(ClusterTlsPtrOutput{})
	pulumi.RegisterOutputType(ClusterUnauthenticatedOutput{})
	pulumi.RegisterOutputType(ClusterUnauthenticatedPtrOutput{})
}
