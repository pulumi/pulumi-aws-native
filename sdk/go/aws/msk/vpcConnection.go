// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::MSK::VpcConnection
type VpcConnection struct {
	pulumi.CustomResourceState

	Arn            pulumi.StringOutput               `pulumi:"arn"`
	Authentication VpcConnectionAuthenticationOutput `pulumi:"authentication"`
	ClientSubnets  pulumi.StringArrayOutput          `pulumi:"clientSubnets"`
	SecurityGroups pulumi.StringArrayOutput          `pulumi:"securityGroups"`
	Tags           VpcConnectionTagsPtrOutput        `pulumi:"tags"`
	// The Amazon Resource Name (ARN) of the target cluster
	TargetClusterArn pulumi.StringOutput `pulumi:"targetClusterArn"`
	VpcId            pulumi.StringOutput `pulumi:"vpcId"`
}

// NewVpcConnection registers a new resource with the given unique name, arguments, and options.
func NewVpcConnection(ctx *pulumi.Context,
	name string, args *VpcConnectionArgs, opts ...pulumi.ResourceOption) (*VpcConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authentication == nil {
		return nil, errors.New("invalid value for required argument 'Authentication'")
	}
	if args.ClientSubnets == nil {
		return nil, errors.New("invalid value for required argument 'ClientSubnets'")
	}
	if args.SecurityGroups == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroups'")
	}
	if args.TargetClusterArn == nil {
		return nil, errors.New("invalid value for required argument 'TargetClusterArn'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	var resource VpcConnection
	err := ctx.RegisterResource("aws-native:msk:VpcConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcConnection gets an existing VpcConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcConnectionState, opts ...pulumi.ResourceOption) (*VpcConnection, error) {
	var resource VpcConnection
	err := ctx.ReadResource("aws-native:msk:VpcConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcConnection resources.
type vpcConnectionState struct {
}

type VpcConnectionState struct {
}

func (VpcConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcConnectionState)(nil)).Elem()
}

type vpcConnectionArgs struct {
	Authentication VpcConnectionAuthentication `pulumi:"authentication"`
	ClientSubnets  []string                    `pulumi:"clientSubnets"`
	SecurityGroups []string                    `pulumi:"securityGroups"`
	Tags           *VpcConnectionTags          `pulumi:"tags"`
	// The Amazon Resource Name (ARN) of the target cluster
	TargetClusterArn string `pulumi:"targetClusterArn"`
	VpcId            string `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpcConnection resource.
type VpcConnectionArgs struct {
	Authentication VpcConnectionAuthenticationInput
	ClientSubnets  pulumi.StringArrayInput
	SecurityGroups pulumi.StringArrayInput
	Tags           VpcConnectionTagsPtrInput
	// The Amazon Resource Name (ARN) of the target cluster
	TargetClusterArn pulumi.StringInput
	VpcId            pulumi.StringInput
}

func (VpcConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcConnectionArgs)(nil)).Elem()
}

type VpcConnectionInput interface {
	pulumi.Input

	ToVpcConnectionOutput() VpcConnectionOutput
	ToVpcConnectionOutputWithContext(ctx context.Context) VpcConnectionOutput
}

func (*VpcConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConnection)(nil)).Elem()
}

func (i *VpcConnection) ToVpcConnectionOutput() VpcConnectionOutput {
	return i.ToVpcConnectionOutputWithContext(context.Background())
}

func (i *VpcConnection) ToVpcConnectionOutputWithContext(ctx context.Context) VpcConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcConnectionOutput)
}

type VpcConnectionOutput struct{ *pulumi.OutputState }

func (VpcConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcConnection)(nil)).Elem()
}

func (o VpcConnectionOutput) ToVpcConnectionOutput() VpcConnectionOutput {
	return o
}

func (o VpcConnectionOutput) ToVpcConnectionOutputWithContext(ctx context.Context) VpcConnectionOutput {
	return o
}

func (o VpcConnectionOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o VpcConnectionOutput) Authentication() VpcConnectionAuthenticationOutput {
	return o.ApplyT(func(v *VpcConnection) VpcConnectionAuthenticationOutput { return v.Authentication }).(VpcConnectionAuthenticationOutput)
}

func (o VpcConnectionOutput) ClientSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringArrayOutput { return v.ClientSubnets }).(pulumi.StringArrayOutput)
}

func (o VpcConnectionOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o VpcConnectionOutput) Tags() VpcConnectionTagsPtrOutput {
	return o.ApplyT(func(v *VpcConnection) VpcConnectionTagsPtrOutput { return v.Tags }).(VpcConnectionTagsPtrOutput)
}

// The Amazon Resource Name (ARN) of the target cluster
func (o VpcConnectionOutput) TargetClusterArn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringOutput { return v.TargetClusterArn }).(pulumi.StringOutput)
}

func (o VpcConnectionOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcConnection) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcConnectionInput)(nil)).Elem(), &VpcConnection{})
	pulumi.RegisterOutputType(VpcConnectionOutput{})
}
