// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::MSK::BatchScramSecret
type BatchScramSecret struct {
	pulumi.CustomResourceState

	ClusterArn    pulumi.StringOutput      `pulumi:"clusterArn"`
	SecretArnList pulumi.StringArrayOutput `pulumi:"secretArnList"`
}

// NewBatchScramSecret registers a new resource with the given unique name, arguments, and options.
func NewBatchScramSecret(ctx *pulumi.Context,
	name string, args *BatchScramSecretArgs, opts ...pulumi.ResourceOption) (*BatchScramSecret, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterArn == nil {
		return nil, errors.New("invalid value for required argument 'ClusterArn'")
	}
	var resource BatchScramSecret
	err := ctx.RegisterResource("aws-native:msk:BatchScramSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBatchScramSecret gets an existing BatchScramSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBatchScramSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BatchScramSecretState, opts ...pulumi.ResourceOption) (*BatchScramSecret, error) {
	var resource BatchScramSecret
	err := ctx.ReadResource("aws-native:msk:BatchScramSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BatchScramSecret resources.
type batchScramSecretState struct {
}

type BatchScramSecretState struct {
}

func (BatchScramSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*batchScramSecretState)(nil)).Elem()
}

type batchScramSecretArgs struct {
	ClusterArn    string   `pulumi:"clusterArn"`
	SecretArnList []string `pulumi:"secretArnList"`
}

// The set of arguments for constructing a BatchScramSecret resource.
type BatchScramSecretArgs struct {
	ClusterArn    pulumi.StringInput
	SecretArnList pulumi.StringArrayInput
}

func (BatchScramSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*batchScramSecretArgs)(nil)).Elem()
}

type BatchScramSecretInput interface {
	pulumi.Input

	ToBatchScramSecretOutput() BatchScramSecretOutput
	ToBatchScramSecretOutputWithContext(ctx context.Context) BatchScramSecretOutput
}

func (*BatchScramSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchScramSecret)(nil)).Elem()
}

func (i *BatchScramSecret) ToBatchScramSecretOutput() BatchScramSecretOutput {
	return i.ToBatchScramSecretOutputWithContext(context.Background())
}

func (i *BatchScramSecret) ToBatchScramSecretOutputWithContext(ctx context.Context) BatchScramSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BatchScramSecretOutput)
}

type BatchScramSecretOutput struct{ *pulumi.OutputState }

func (BatchScramSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BatchScramSecret)(nil)).Elem()
}

func (o BatchScramSecretOutput) ToBatchScramSecretOutput() BatchScramSecretOutput {
	return o
}

func (o BatchScramSecretOutput) ToBatchScramSecretOutputWithContext(ctx context.Context) BatchScramSecretOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BatchScramSecretInput)(nil)).Elem(), &BatchScramSecret{})
	pulumi.RegisterOutputType(BatchScramSecretOutput{})
}
