// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rtbfabric

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::RTBFabric::ResponderGateway Resource Type
type ResponderGateway struct {
	pulumi.CustomResourceState

	Arn                          pulumi.StringOutput                                   `pulumi:"arn"`
	CreatedTimestamp             pulumi.StringOutput                                   `pulumi:"createdTimestamp"`
	Description                  pulumi.StringPtrOutput                                `pulumi:"description"`
	DomainName                   pulumi.StringPtrOutput                                `pulumi:"domainName"`
	GatewayId                    pulumi.StringOutput                                   `pulumi:"gatewayId"`
	ManagedEndpointConfiguration ResponderGatewayManagedEndpointConfigurationPtrOutput `pulumi:"managedEndpointConfiguration"`
	Port                         pulumi.IntOutput                                      `pulumi:"port"`
	Protocol                     ResponderGatewayProtocolOutput                        `pulumi:"protocol"`
	ResponderGatewayStatus       ResponderGatewayStatusOutput                          `pulumi:"responderGatewayStatus"`
	SecurityGroupIds             pulumi.StringArrayOutput                              `pulumi:"securityGroupIds"`
	SubnetIds                    pulumi.StringArrayOutput                              `pulumi:"subnetIds"`
	Tags                         aws.TagArrayOutput                                    `pulumi:"tags"`
	TrustStoreConfiguration      ResponderGatewayTrustStoreConfigurationPtrOutput      `pulumi:"trustStoreConfiguration"`
	UpdatedTimestamp             pulumi.StringOutput                                   `pulumi:"updatedTimestamp"`
	VpcId                        pulumi.StringOutput                                   `pulumi:"vpcId"`
}

// NewResponderGateway registers a new resource with the given unique name, arguments, and options.
func NewResponderGateway(ctx *pulumi.Context,
	name string, args *ResponderGatewayArgs, opts ...pulumi.ResourceOption) (*ResponderGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Port == nil {
		return nil, errors.New("invalid value for required argument 'Port'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.SecurityGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIds'")
	}
	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResponderGateway
	err := ctx.RegisterResource("aws-native:rtbfabric:ResponderGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResponderGateway gets an existing ResponderGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResponderGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResponderGatewayState, opts ...pulumi.ResourceOption) (*ResponderGateway, error) {
	var resource ResponderGateway
	err := ctx.ReadResource("aws-native:rtbfabric:ResponderGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResponderGateway resources.
type responderGatewayState struct {
}

type ResponderGatewayState struct {
}

func (ResponderGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*responderGatewayState)(nil)).Elem()
}

type responderGatewayArgs struct {
	Description                  *string                                       `pulumi:"description"`
	DomainName                   *string                                       `pulumi:"domainName"`
	ManagedEndpointConfiguration *ResponderGatewayManagedEndpointConfiguration `pulumi:"managedEndpointConfiguration"`
	Port                         int                                           `pulumi:"port"`
	Protocol                     ResponderGatewayProtocol                      `pulumi:"protocol"`
	SecurityGroupIds             []string                                      `pulumi:"securityGroupIds"`
	SubnetIds                    []string                                      `pulumi:"subnetIds"`
	Tags                         []aws.Tag                                     `pulumi:"tags"`
	TrustStoreConfiguration      *ResponderGatewayTrustStoreConfiguration      `pulumi:"trustStoreConfiguration"`
	VpcId                        string                                        `pulumi:"vpcId"`
}

// The set of arguments for constructing a ResponderGateway resource.
type ResponderGatewayArgs struct {
	Description                  pulumi.StringPtrInput
	DomainName                   pulumi.StringPtrInput
	ManagedEndpointConfiguration ResponderGatewayManagedEndpointConfigurationPtrInput
	Port                         pulumi.IntInput
	Protocol                     ResponderGatewayProtocolInput
	SecurityGroupIds             pulumi.StringArrayInput
	SubnetIds                    pulumi.StringArrayInput
	Tags                         aws.TagArrayInput
	TrustStoreConfiguration      ResponderGatewayTrustStoreConfigurationPtrInput
	VpcId                        pulumi.StringInput
}

func (ResponderGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*responderGatewayArgs)(nil)).Elem()
}

type ResponderGatewayInput interface {
	pulumi.Input

	ToResponderGatewayOutput() ResponderGatewayOutput
	ToResponderGatewayOutputWithContext(ctx context.Context) ResponderGatewayOutput
}

func (*ResponderGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponderGateway)(nil)).Elem()
}

func (i *ResponderGateway) ToResponderGatewayOutput() ResponderGatewayOutput {
	return i.ToResponderGatewayOutputWithContext(context.Background())
}

func (i *ResponderGateway) ToResponderGatewayOutputWithContext(ctx context.Context) ResponderGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponderGatewayOutput)
}

type ResponderGatewayOutput struct{ *pulumi.OutputState }

func (ResponderGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResponderGateway)(nil)).Elem()
}

func (o ResponderGatewayOutput) ToResponderGatewayOutput() ResponderGatewayOutput {
	return o
}

func (o ResponderGatewayOutput) ToResponderGatewayOutputWithContext(ctx context.Context) ResponderGatewayOutput {
	return o
}

func (o ResponderGatewayOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderGateway) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ResponderGatewayOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderGateway) pulumi.StringOutput { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

func (o ResponderGatewayOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponderGateway) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ResponderGatewayOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResponderGateway) pulumi.StringPtrOutput { return v.DomainName }).(pulumi.StringPtrOutput)
}

func (o ResponderGatewayOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderGateway) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

func (o ResponderGatewayOutput) ManagedEndpointConfiguration() ResponderGatewayManagedEndpointConfigurationPtrOutput {
	return o.ApplyT(func(v *ResponderGateway) ResponderGatewayManagedEndpointConfigurationPtrOutput {
		return v.ManagedEndpointConfiguration
	}).(ResponderGatewayManagedEndpointConfigurationPtrOutput)
}

func (o ResponderGatewayOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v *ResponderGateway) pulumi.IntOutput { return v.Port }).(pulumi.IntOutput)
}

func (o ResponderGatewayOutput) Protocol() ResponderGatewayProtocolOutput {
	return o.ApplyT(func(v *ResponderGateway) ResponderGatewayProtocolOutput { return v.Protocol }).(ResponderGatewayProtocolOutput)
}

func (o ResponderGatewayOutput) ResponderGatewayStatus() ResponderGatewayStatusOutput {
	return o.ApplyT(func(v *ResponderGateway) ResponderGatewayStatusOutput { return v.ResponderGatewayStatus }).(ResponderGatewayStatusOutput)
}

func (o ResponderGatewayOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResponderGateway) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o ResponderGatewayOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResponderGateway) pulumi.StringArrayOutput { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o ResponderGatewayOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ResponderGateway) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func (o ResponderGatewayOutput) TrustStoreConfiguration() ResponderGatewayTrustStoreConfigurationPtrOutput {
	return o.ApplyT(func(v *ResponderGateway) ResponderGatewayTrustStoreConfigurationPtrOutput {
		return v.TrustStoreConfiguration
	}).(ResponderGatewayTrustStoreConfigurationPtrOutput)
}

func (o ResponderGatewayOutput) UpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderGateway) pulumi.StringOutput { return v.UpdatedTimestamp }).(pulumi.StringOutput)
}

func (o ResponderGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResponderGateway) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResponderGatewayInput)(nil)).Elem(), &ResponderGateway{})
	pulumi.RegisterOutputType(ResponderGatewayOutput{})
}
