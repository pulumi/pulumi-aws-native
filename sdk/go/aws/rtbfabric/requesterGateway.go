// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rtbfabric

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::RTBFabric::RequesterGateway Resource Type.
type RequesterGateway struct {
	pulumi.CustomResourceState

	ActiveLinksCount       pulumi.IntOutput             `pulumi:"activeLinksCount"`
	Arn                    pulumi.StringOutput          `pulumi:"arn"`
	CreatedTimestamp       pulumi.StringOutput          `pulumi:"createdTimestamp"`
	Description            pulumi.StringPtrOutput       `pulumi:"description"`
	DomainName             pulumi.StringOutput          `pulumi:"domainName"`
	GatewayId              pulumi.StringOutput          `pulumi:"gatewayId"`
	RequesterGatewayStatus RequesterGatewayStatusOutput `pulumi:"requesterGatewayStatus"`
	SecurityGroupIds       pulumi.StringArrayOutput     `pulumi:"securityGroupIds"`
	SubnetIds              pulumi.StringArrayOutput     `pulumi:"subnetIds"`
	Tags                   aws.TagArrayOutput           `pulumi:"tags"`
	TotalLinksCount        pulumi.IntOutput             `pulumi:"totalLinksCount"`
	UpdatedTimestamp       pulumi.StringOutput          `pulumi:"updatedTimestamp"`
	VpcId                  pulumi.StringOutput          `pulumi:"vpcId"`
}

// NewRequesterGateway registers a new resource with the given unique name, arguments, and options.
func NewRequesterGateway(ctx *pulumi.Context,
	name string, args *RequesterGatewayArgs, opts ...pulumi.ResourceOption) (*RequesterGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIds'")
	}
	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RequesterGateway
	err := ctx.RegisterResource("aws-native:rtbfabric:RequesterGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRequesterGateway gets an existing RequesterGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRequesterGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RequesterGatewayState, opts ...pulumi.ResourceOption) (*RequesterGateway, error) {
	var resource RequesterGateway
	err := ctx.ReadResource("aws-native:rtbfabric:RequesterGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RequesterGateway resources.
type requesterGatewayState struct {
}

type RequesterGatewayState struct {
}

func (RequesterGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*requesterGatewayState)(nil)).Elem()
}

type requesterGatewayArgs struct {
	Description      *string   `pulumi:"description"`
	SecurityGroupIds []string  `pulumi:"securityGroupIds"`
	SubnetIds        []string  `pulumi:"subnetIds"`
	Tags             []aws.Tag `pulumi:"tags"`
	VpcId            string    `pulumi:"vpcId"`
}

// The set of arguments for constructing a RequesterGateway resource.
type RequesterGatewayArgs struct {
	Description      pulumi.StringPtrInput
	SecurityGroupIds pulumi.StringArrayInput
	SubnetIds        pulumi.StringArrayInput
	Tags             aws.TagArrayInput
	VpcId            pulumi.StringInput
}

func (RequesterGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*requesterGatewayArgs)(nil)).Elem()
}

type RequesterGatewayInput interface {
	pulumi.Input

	ToRequesterGatewayOutput() RequesterGatewayOutput
	ToRequesterGatewayOutputWithContext(ctx context.Context) RequesterGatewayOutput
}

func (*RequesterGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**RequesterGateway)(nil)).Elem()
}

func (i *RequesterGateway) ToRequesterGatewayOutput() RequesterGatewayOutput {
	return i.ToRequesterGatewayOutputWithContext(context.Background())
}

func (i *RequesterGateway) ToRequesterGatewayOutputWithContext(ctx context.Context) RequesterGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequesterGatewayOutput)
}

type RequesterGatewayOutput struct{ *pulumi.OutputState }

func (RequesterGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequesterGateway)(nil)).Elem()
}

func (o RequesterGatewayOutput) ToRequesterGatewayOutput() RequesterGatewayOutput {
	return o
}

func (o RequesterGatewayOutput) ToRequesterGatewayOutputWithContext(ctx context.Context) RequesterGatewayOutput {
	return o
}

func (o RequesterGatewayOutput) ActiveLinksCount() pulumi.IntOutput {
	return o.ApplyT(func(v *RequesterGateway) pulumi.IntOutput { return v.ActiveLinksCount }).(pulumi.IntOutput)
}

func (o RequesterGatewayOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *RequesterGateway) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o RequesterGatewayOutput) CreatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *RequesterGateway) pulumi.StringOutput { return v.CreatedTimestamp }).(pulumi.StringOutput)
}

func (o RequesterGatewayOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequesterGateway) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RequesterGatewayOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *RequesterGateway) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

func (o RequesterGatewayOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *RequesterGateway) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

func (o RequesterGatewayOutput) RequesterGatewayStatus() RequesterGatewayStatusOutput {
	return o.ApplyT(func(v *RequesterGateway) RequesterGatewayStatusOutput { return v.RequesterGatewayStatus }).(RequesterGatewayStatusOutput)
}

func (o RequesterGatewayOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequesterGateway) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o RequesterGatewayOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RequesterGateway) pulumi.StringArrayOutput { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o RequesterGatewayOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *RequesterGateway) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func (o RequesterGatewayOutput) TotalLinksCount() pulumi.IntOutput {
	return o.ApplyT(func(v *RequesterGateway) pulumi.IntOutput { return v.TotalLinksCount }).(pulumi.IntOutput)
}

func (o RequesterGatewayOutput) UpdatedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v *RequesterGateway) pulumi.StringOutput { return v.UpdatedTimestamp }).(pulumi.StringOutput)
}

func (o RequesterGatewayOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *RequesterGateway) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RequesterGatewayInput)(nil)).Elem(), &RequesterGateway{})
	pulumi.RegisterOutputType(RequesterGatewayOutput{})
}
