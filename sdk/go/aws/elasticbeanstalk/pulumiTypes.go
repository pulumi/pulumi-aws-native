// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticbeanstalk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApplicationMaxAgeRule struct {
	// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
	DeleteSourceFromS3 *bool `pulumi:"deleteSourceFromS3"`
	// Specify true to apply the rule, or false to disable it.
	Enabled *bool `pulumi:"enabled"`
	// Specify the number of days to retain an application versions.
	MaxAgeInDays *int `pulumi:"maxAgeInDays"`
}

// ApplicationMaxAgeRuleInput is an input type that accepts ApplicationMaxAgeRuleArgs and ApplicationMaxAgeRuleOutput values.
// You can construct a concrete instance of `ApplicationMaxAgeRuleInput` via:
//
//	ApplicationMaxAgeRuleArgs{...}
type ApplicationMaxAgeRuleInput interface {
	pulumi.Input

	ToApplicationMaxAgeRuleOutput() ApplicationMaxAgeRuleOutput
	ToApplicationMaxAgeRuleOutputWithContext(context.Context) ApplicationMaxAgeRuleOutput
}

type ApplicationMaxAgeRuleArgs struct {
	// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
	DeleteSourceFromS3 pulumi.BoolPtrInput `pulumi:"deleteSourceFromS3"`
	// Specify true to apply the rule, or false to disable it.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specify the number of days to retain an application versions.
	MaxAgeInDays pulumi.IntPtrInput `pulumi:"maxAgeInDays"`
}

func (ApplicationMaxAgeRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationMaxAgeRule)(nil)).Elem()
}

func (i ApplicationMaxAgeRuleArgs) ToApplicationMaxAgeRuleOutput() ApplicationMaxAgeRuleOutput {
	return i.ToApplicationMaxAgeRuleOutputWithContext(context.Background())
}

func (i ApplicationMaxAgeRuleArgs) ToApplicationMaxAgeRuleOutputWithContext(ctx context.Context) ApplicationMaxAgeRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMaxAgeRuleOutput)
}

func (i ApplicationMaxAgeRuleArgs) ToApplicationMaxAgeRulePtrOutput() ApplicationMaxAgeRulePtrOutput {
	return i.ToApplicationMaxAgeRulePtrOutputWithContext(context.Background())
}

func (i ApplicationMaxAgeRuleArgs) ToApplicationMaxAgeRulePtrOutputWithContext(ctx context.Context) ApplicationMaxAgeRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMaxAgeRuleOutput).ToApplicationMaxAgeRulePtrOutputWithContext(ctx)
}

// ApplicationMaxAgeRulePtrInput is an input type that accepts ApplicationMaxAgeRuleArgs, ApplicationMaxAgeRulePtr and ApplicationMaxAgeRulePtrOutput values.
// You can construct a concrete instance of `ApplicationMaxAgeRulePtrInput` via:
//
//	        ApplicationMaxAgeRuleArgs{...}
//
//	or:
//
//	        nil
type ApplicationMaxAgeRulePtrInput interface {
	pulumi.Input

	ToApplicationMaxAgeRulePtrOutput() ApplicationMaxAgeRulePtrOutput
	ToApplicationMaxAgeRulePtrOutputWithContext(context.Context) ApplicationMaxAgeRulePtrOutput
}

type applicationMaxAgeRulePtrType ApplicationMaxAgeRuleArgs

func ApplicationMaxAgeRulePtr(v *ApplicationMaxAgeRuleArgs) ApplicationMaxAgeRulePtrInput {
	return (*applicationMaxAgeRulePtrType)(v)
}

func (*applicationMaxAgeRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationMaxAgeRule)(nil)).Elem()
}

func (i *applicationMaxAgeRulePtrType) ToApplicationMaxAgeRulePtrOutput() ApplicationMaxAgeRulePtrOutput {
	return i.ToApplicationMaxAgeRulePtrOutputWithContext(context.Background())
}

func (i *applicationMaxAgeRulePtrType) ToApplicationMaxAgeRulePtrOutputWithContext(ctx context.Context) ApplicationMaxAgeRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMaxAgeRulePtrOutput)
}

type ApplicationMaxAgeRuleOutput struct{ *pulumi.OutputState }

func (ApplicationMaxAgeRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationMaxAgeRule)(nil)).Elem()
}

func (o ApplicationMaxAgeRuleOutput) ToApplicationMaxAgeRuleOutput() ApplicationMaxAgeRuleOutput {
	return o
}

func (o ApplicationMaxAgeRuleOutput) ToApplicationMaxAgeRuleOutputWithContext(ctx context.Context) ApplicationMaxAgeRuleOutput {
	return o
}

func (o ApplicationMaxAgeRuleOutput) ToApplicationMaxAgeRulePtrOutput() ApplicationMaxAgeRulePtrOutput {
	return o.ToApplicationMaxAgeRulePtrOutputWithContext(context.Background())
}

func (o ApplicationMaxAgeRuleOutput) ToApplicationMaxAgeRulePtrOutputWithContext(ctx context.Context) ApplicationMaxAgeRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationMaxAgeRule) *ApplicationMaxAgeRule {
		return &v
	}).(ApplicationMaxAgeRulePtrOutput)
}

// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
func (o ApplicationMaxAgeRuleOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationMaxAgeRule) *bool { return v.DeleteSourceFromS3 }).(pulumi.BoolPtrOutput)
}

// Specify true to apply the rule, or false to disable it.
func (o ApplicationMaxAgeRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationMaxAgeRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specify the number of days to retain an application versions.
func (o ApplicationMaxAgeRuleOutput) MaxAgeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationMaxAgeRule) *int { return v.MaxAgeInDays }).(pulumi.IntPtrOutput)
}

type ApplicationMaxAgeRulePtrOutput struct{ *pulumi.OutputState }

func (ApplicationMaxAgeRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationMaxAgeRule)(nil)).Elem()
}

func (o ApplicationMaxAgeRulePtrOutput) ToApplicationMaxAgeRulePtrOutput() ApplicationMaxAgeRulePtrOutput {
	return o
}

func (o ApplicationMaxAgeRulePtrOutput) ToApplicationMaxAgeRulePtrOutputWithContext(ctx context.Context) ApplicationMaxAgeRulePtrOutput {
	return o
}

func (o ApplicationMaxAgeRulePtrOutput) Elem() ApplicationMaxAgeRuleOutput {
	return o.ApplyT(func(v *ApplicationMaxAgeRule) ApplicationMaxAgeRule {
		if v != nil {
			return *v
		}
		var ret ApplicationMaxAgeRule
		return ret
	}).(ApplicationMaxAgeRuleOutput)
}

// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
func (o ApplicationMaxAgeRulePtrOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationMaxAgeRule) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteSourceFromS3
	}).(pulumi.BoolPtrOutput)
}

// Specify true to apply the rule, or false to disable it.
func (o ApplicationMaxAgeRulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationMaxAgeRule) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specify the number of days to retain an application versions.
func (o ApplicationMaxAgeRulePtrOutput) MaxAgeInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationMaxAgeRule) *int {
		if v == nil {
			return nil
		}
		return v.MaxAgeInDays
	}).(pulumi.IntPtrOutput)
}

type ApplicationMaxCountRule struct {
	// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
	DeleteSourceFromS3 *bool `pulumi:"deleteSourceFromS3"`
	// Specify true to apply the rule, or false to disable it.
	Enabled *bool `pulumi:"enabled"`
	// Specify the maximum number of application versions to retain.
	MaxCount *int `pulumi:"maxCount"`
}

// ApplicationMaxCountRuleInput is an input type that accepts ApplicationMaxCountRuleArgs and ApplicationMaxCountRuleOutput values.
// You can construct a concrete instance of `ApplicationMaxCountRuleInput` via:
//
//	ApplicationMaxCountRuleArgs{...}
type ApplicationMaxCountRuleInput interface {
	pulumi.Input

	ToApplicationMaxCountRuleOutput() ApplicationMaxCountRuleOutput
	ToApplicationMaxCountRuleOutputWithContext(context.Context) ApplicationMaxCountRuleOutput
}

type ApplicationMaxCountRuleArgs struct {
	// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
	DeleteSourceFromS3 pulumi.BoolPtrInput `pulumi:"deleteSourceFromS3"`
	// Specify true to apply the rule, or false to disable it.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Specify the maximum number of application versions to retain.
	MaxCount pulumi.IntPtrInput `pulumi:"maxCount"`
}

func (ApplicationMaxCountRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationMaxCountRule)(nil)).Elem()
}

func (i ApplicationMaxCountRuleArgs) ToApplicationMaxCountRuleOutput() ApplicationMaxCountRuleOutput {
	return i.ToApplicationMaxCountRuleOutputWithContext(context.Background())
}

func (i ApplicationMaxCountRuleArgs) ToApplicationMaxCountRuleOutputWithContext(ctx context.Context) ApplicationMaxCountRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMaxCountRuleOutput)
}

func (i ApplicationMaxCountRuleArgs) ToApplicationMaxCountRulePtrOutput() ApplicationMaxCountRulePtrOutput {
	return i.ToApplicationMaxCountRulePtrOutputWithContext(context.Background())
}

func (i ApplicationMaxCountRuleArgs) ToApplicationMaxCountRulePtrOutputWithContext(ctx context.Context) ApplicationMaxCountRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMaxCountRuleOutput).ToApplicationMaxCountRulePtrOutputWithContext(ctx)
}

// ApplicationMaxCountRulePtrInput is an input type that accepts ApplicationMaxCountRuleArgs, ApplicationMaxCountRulePtr and ApplicationMaxCountRulePtrOutput values.
// You can construct a concrete instance of `ApplicationMaxCountRulePtrInput` via:
//
//	        ApplicationMaxCountRuleArgs{...}
//
//	or:
//
//	        nil
type ApplicationMaxCountRulePtrInput interface {
	pulumi.Input

	ToApplicationMaxCountRulePtrOutput() ApplicationMaxCountRulePtrOutput
	ToApplicationMaxCountRulePtrOutputWithContext(context.Context) ApplicationMaxCountRulePtrOutput
}

type applicationMaxCountRulePtrType ApplicationMaxCountRuleArgs

func ApplicationMaxCountRulePtr(v *ApplicationMaxCountRuleArgs) ApplicationMaxCountRulePtrInput {
	return (*applicationMaxCountRulePtrType)(v)
}

func (*applicationMaxCountRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationMaxCountRule)(nil)).Elem()
}

func (i *applicationMaxCountRulePtrType) ToApplicationMaxCountRulePtrOutput() ApplicationMaxCountRulePtrOutput {
	return i.ToApplicationMaxCountRulePtrOutputWithContext(context.Background())
}

func (i *applicationMaxCountRulePtrType) ToApplicationMaxCountRulePtrOutputWithContext(ctx context.Context) ApplicationMaxCountRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMaxCountRulePtrOutput)
}

type ApplicationMaxCountRuleOutput struct{ *pulumi.OutputState }

func (ApplicationMaxCountRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationMaxCountRule)(nil)).Elem()
}

func (o ApplicationMaxCountRuleOutput) ToApplicationMaxCountRuleOutput() ApplicationMaxCountRuleOutput {
	return o
}

func (o ApplicationMaxCountRuleOutput) ToApplicationMaxCountRuleOutputWithContext(ctx context.Context) ApplicationMaxCountRuleOutput {
	return o
}

func (o ApplicationMaxCountRuleOutput) ToApplicationMaxCountRulePtrOutput() ApplicationMaxCountRulePtrOutput {
	return o.ToApplicationMaxCountRulePtrOutputWithContext(context.Background())
}

func (o ApplicationMaxCountRuleOutput) ToApplicationMaxCountRulePtrOutputWithContext(ctx context.Context) ApplicationMaxCountRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationMaxCountRule) *ApplicationMaxCountRule {
		return &v
	}).(ApplicationMaxCountRulePtrOutput)
}

// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
func (o ApplicationMaxCountRuleOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationMaxCountRule) *bool { return v.DeleteSourceFromS3 }).(pulumi.BoolPtrOutput)
}

// Specify true to apply the rule, or false to disable it.
func (o ApplicationMaxCountRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationMaxCountRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Specify the maximum number of application versions to retain.
func (o ApplicationMaxCountRuleOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationMaxCountRule) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

type ApplicationMaxCountRulePtrOutput struct{ *pulumi.OutputState }

func (ApplicationMaxCountRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationMaxCountRule)(nil)).Elem()
}

func (o ApplicationMaxCountRulePtrOutput) ToApplicationMaxCountRulePtrOutput() ApplicationMaxCountRulePtrOutput {
	return o
}

func (o ApplicationMaxCountRulePtrOutput) ToApplicationMaxCountRulePtrOutputWithContext(ctx context.Context) ApplicationMaxCountRulePtrOutput {
	return o
}

func (o ApplicationMaxCountRulePtrOutput) Elem() ApplicationMaxCountRuleOutput {
	return o.ApplyT(func(v *ApplicationMaxCountRule) ApplicationMaxCountRule {
		if v != nil {
			return *v
		}
		var ret ApplicationMaxCountRule
		return ret
	}).(ApplicationMaxCountRuleOutput)
}

// Set to true to delete a version's source bundle from Amazon S3 when Elastic Beanstalk deletes the application version.
func (o ApplicationMaxCountRulePtrOutput) DeleteSourceFromS3() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationMaxCountRule) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteSourceFromS3
	}).(pulumi.BoolPtrOutput)
}

// Specify true to apply the rule, or false to disable it.
func (o ApplicationMaxCountRulePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationMaxCountRule) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Specify the maximum number of application versions to retain.
func (o ApplicationMaxCountRulePtrOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationMaxCountRule) *int {
		if v == nil {
			return nil
		}
		return v.MaxCount
	}).(pulumi.IntPtrOutput)
}

type ApplicationResourceLifecycleConfig struct {
	// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in subsequent updates to change the Service Role to another value.
	ServiceRole *string `pulumi:"serviceRole"`
	// Defines lifecycle settings for application versions.
	VersionLifecycleConfig *ApplicationVersionLifecycleConfig `pulumi:"versionLifecycleConfig"`
}

// ApplicationResourceLifecycleConfigInput is an input type that accepts ApplicationResourceLifecycleConfigArgs and ApplicationResourceLifecycleConfigOutput values.
// You can construct a concrete instance of `ApplicationResourceLifecycleConfigInput` via:
//
//	ApplicationResourceLifecycleConfigArgs{...}
type ApplicationResourceLifecycleConfigInput interface {
	pulumi.Input

	ToApplicationResourceLifecycleConfigOutput() ApplicationResourceLifecycleConfigOutput
	ToApplicationResourceLifecycleConfigOutputWithContext(context.Context) ApplicationResourceLifecycleConfigOutput
}

type ApplicationResourceLifecycleConfigArgs struct {
	// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in subsequent updates to change the Service Role to another value.
	ServiceRole pulumi.StringPtrInput `pulumi:"serviceRole"`
	// Defines lifecycle settings for application versions.
	VersionLifecycleConfig ApplicationVersionLifecycleConfigPtrInput `pulumi:"versionLifecycleConfig"`
}

func (ApplicationResourceLifecycleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationResourceLifecycleConfig)(nil)).Elem()
}

func (i ApplicationResourceLifecycleConfigArgs) ToApplicationResourceLifecycleConfigOutput() ApplicationResourceLifecycleConfigOutput {
	return i.ToApplicationResourceLifecycleConfigOutputWithContext(context.Background())
}

func (i ApplicationResourceLifecycleConfigArgs) ToApplicationResourceLifecycleConfigOutputWithContext(ctx context.Context) ApplicationResourceLifecycleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationResourceLifecycleConfigOutput)
}

func (i ApplicationResourceLifecycleConfigArgs) ToApplicationResourceLifecycleConfigPtrOutput() ApplicationResourceLifecycleConfigPtrOutput {
	return i.ToApplicationResourceLifecycleConfigPtrOutputWithContext(context.Background())
}

func (i ApplicationResourceLifecycleConfigArgs) ToApplicationResourceLifecycleConfigPtrOutputWithContext(ctx context.Context) ApplicationResourceLifecycleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationResourceLifecycleConfigOutput).ToApplicationResourceLifecycleConfigPtrOutputWithContext(ctx)
}

// ApplicationResourceLifecycleConfigPtrInput is an input type that accepts ApplicationResourceLifecycleConfigArgs, ApplicationResourceLifecycleConfigPtr and ApplicationResourceLifecycleConfigPtrOutput values.
// You can construct a concrete instance of `ApplicationResourceLifecycleConfigPtrInput` via:
//
//	        ApplicationResourceLifecycleConfigArgs{...}
//
//	or:
//
//	        nil
type ApplicationResourceLifecycleConfigPtrInput interface {
	pulumi.Input

	ToApplicationResourceLifecycleConfigPtrOutput() ApplicationResourceLifecycleConfigPtrOutput
	ToApplicationResourceLifecycleConfigPtrOutputWithContext(context.Context) ApplicationResourceLifecycleConfigPtrOutput
}

type applicationResourceLifecycleConfigPtrType ApplicationResourceLifecycleConfigArgs

func ApplicationResourceLifecycleConfigPtr(v *ApplicationResourceLifecycleConfigArgs) ApplicationResourceLifecycleConfigPtrInput {
	return (*applicationResourceLifecycleConfigPtrType)(v)
}

func (*applicationResourceLifecycleConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationResourceLifecycleConfig)(nil)).Elem()
}

func (i *applicationResourceLifecycleConfigPtrType) ToApplicationResourceLifecycleConfigPtrOutput() ApplicationResourceLifecycleConfigPtrOutput {
	return i.ToApplicationResourceLifecycleConfigPtrOutputWithContext(context.Background())
}

func (i *applicationResourceLifecycleConfigPtrType) ToApplicationResourceLifecycleConfigPtrOutputWithContext(ctx context.Context) ApplicationResourceLifecycleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationResourceLifecycleConfigPtrOutput)
}

type ApplicationResourceLifecycleConfigOutput struct{ *pulumi.OutputState }

func (ApplicationResourceLifecycleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationResourceLifecycleConfig)(nil)).Elem()
}

func (o ApplicationResourceLifecycleConfigOutput) ToApplicationResourceLifecycleConfigOutput() ApplicationResourceLifecycleConfigOutput {
	return o
}

func (o ApplicationResourceLifecycleConfigOutput) ToApplicationResourceLifecycleConfigOutputWithContext(ctx context.Context) ApplicationResourceLifecycleConfigOutput {
	return o
}

func (o ApplicationResourceLifecycleConfigOutput) ToApplicationResourceLifecycleConfigPtrOutput() ApplicationResourceLifecycleConfigPtrOutput {
	return o.ToApplicationResourceLifecycleConfigPtrOutputWithContext(context.Background())
}

func (o ApplicationResourceLifecycleConfigOutput) ToApplicationResourceLifecycleConfigPtrOutputWithContext(ctx context.Context) ApplicationResourceLifecycleConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationResourceLifecycleConfig) *ApplicationResourceLifecycleConfig {
		return &v
	}).(ApplicationResourceLifecycleConfigPtrOutput)
}

// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in subsequent updates to change the Service Role to another value.
func (o ApplicationResourceLifecycleConfigOutput) ServiceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationResourceLifecycleConfig) *string { return v.ServiceRole }).(pulumi.StringPtrOutput)
}

// Defines lifecycle settings for application versions.
func (o ApplicationResourceLifecycleConfigOutput) VersionLifecycleConfig() ApplicationVersionLifecycleConfigPtrOutput {
	return o.ApplyT(func(v ApplicationResourceLifecycleConfig) *ApplicationVersionLifecycleConfig {
		return v.VersionLifecycleConfig
	}).(ApplicationVersionLifecycleConfigPtrOutput)
}

type ApplicationResourceLifecycleConfigPtrOutput struct{ *pulumi.OutputState }

func (ApplicationResourceLifecycleConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationResourceLifecycleConfig)(nil)).Elem()
}

func (o ApplicationResourceLifecycleConfigPtrOutput) ToApplicationResourceLifecycleConfigPtrOutput() ApplicationResourceLifecycleConfigPtrOutput {
	return o
}

func (o ApplicationResourceLifecycleConfigPtrOutput) ToApplicationResourceLifecycleConfigPtrOutputWithContext(ctx context.Context) ApplicationResourceLifecycleConfigPtrOutput {
	return o
}

func (o ApplicationResourceLifecycleConfigPtrOutput) Elem() ApplicationResourceLifecycleConfigOutput {
	return o.ApplyT(func(v *ApplicationResourceLifecycleConfig) ApplicationResourceLifecycleConfig {
		if v != nil {
			return *v
		}
		var ret ApplicationResourceLifecycleConfig
		return ret
	}).(ApplicationResourceLifecycleConfigOutput)
}

// The ARN of an IAM service role that Elastic Beanstalk has permission to assume. The ServiceRole property is required the first time that you provide a ResourceLifecycleConfig for the application. After you provide it once, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again. You can, however, specify it in subsequent updates to change the Service Role to another value.
func (o ApplicationResourceLifecycleConfigPtrOutput) ServiceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationResourceLifecycleConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceRole
	}).(pulumi.StringPtrOutput)
}

// Defines lifecycle settings for application versions.
func (o ApplicationResourceLifecycleConfigPtrOutput) VersionLifecycleConfig() ApplicationVersionLifecycleConfigPtrOutput {
	return o.ApplyT(func(v *ApplicationResourceLifecycleConfig) *ApplicationVersionLifecycleConfig {
		if v == nil {
			return nil
		}
		return v.VersionLifecycleConfig
	}).(ApplicationVersionLifecycleConfigPtrOutput)
}

type ApplicationVersionLifecycleConfig struct {
	// Specify a max age rule to restrict the length of time that application versions are retained for an application.
	MaxAgeRule *ApplicationMaxAgeRule `pulumi:"maxAgeRule"`
	// Specify a max count rule to restrict the number of application versions that are retained for an application.
	MaxCountRule *ApplicationMaxCountRule `pulumi:"maxCountRule"`
}

// ApplicationVersionLifecycleConfigInput is an input type that accepts ApplicationVersionLifecycleConfigArgs and ApplicationVersionLifecycleConfigOutput values.
// You can construct a concrete instance of `ApplicationVersionLifecycleConfigInput` via:
//
//	ApplicationVersionLifecycleConfigArgs{...}
type ApplicationVersionLifecycleConfigInput interface {
	pulumi.Input

	ToApplicationVersionLifecycleConfigOutput() ApplicationVersionLifecycleConfigOutput
	ToApplicationVersionLifecycleConfigOutputWithContext(context.Context) ApplicationVersionLifecycleConfigOutput
}

type ApplicationVersionLifecycleConfigArgs struct {
	// Specify a max age rule to restrict the length of time that application versions are retained for an application.
	MaxAgeRule ApplicationMaxAgeRulePtrInput `pulumi:"maxAgeRule"`
	// Specify a max count rule to restrict the number of application versions that are retained for an application.
	MaxCountRule ApplicationMaxCountRulePtrInput `pulumi:"maxCountRule"`
}

func (ApplicationVersionLifecycleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationVersionLifecycleConfig)(nil)).Elem()
}

func (i ApplicationVersionLifecycleConfigArgs) ToApplicationVersionLifecycleConfigOutput() ApplicationVersionLifecycleConfigOutput {
	return i.ToApplicationVersionLifecycleConfigOutputWithContext(context.Background())
}

func (i ApplicationVersionLifecycleConfigArgs) ToApplicationVersionLifecycleConfigOutputWithContext(ctx context.Context) ApplicationVersionLifecycleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationVersionLifecycleConfigOutput)
}

func (i ApplicationVersionLifecycleConfigArgs) ToApplicationVersionLifecycleConfigPtrOutput() ApplicationVersionLifecycleConfigPtrOutput {
	return i.ToApplicationVersionLifecycleConfigPtrOutputWithContext(context.Background())
}

func (i ApplicationVersionLifecycleConfigArgs) ToApplicationVersionLifecycleConfigPtrOutputWithContext(ctx context.Context) ApplicationVersionLifecycleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationVersionLifecycleConfigOutput).ToApplicationVersionLifecycleConfigPtrOutputWithContext(ctx)
}

// ApplicationVersionLifecycleConfigPtrInput is an input type that accepts ApplicationVersionLifecycleConfigArgs, ApplicationVersionLifecycleConfigPtr and ApplicationVersionLifecycleConfigPtrOutput values.
// You can construct a concrete instance of `ApplicationVersionLifecycleConfigPtrInput` via:
//
//	        ApplicationVersionLifecycleConfigArgs{...}
//
//	or:
//
//	        nil
type ApplicationVersionLifecycleConfigPtrInput interface {
	pulumi.Input

	ToApplicationVersionLifecycleConfigPtrOutput() ApplicationVersionLifecycleConfigPtrOutput
	ToApplicationVersionLifecycleConfigPtrOutputWithContext(context.Context) ApplicationVersionLifecycleConfigPtrOutput
}

type applicationVersionLifecycleConfigPtrType ApplicationVersionLifecycleConfigArgs

func ApplicationVersionLifecycleConfigPtr(v *ApplicationVersionLifecycleConfigArgs) ApplicationVersionLifecycleConfigPtrInput {
	return (*applicationVersionLifecycleConfigPtrType)(v)
}

func (*applicationVersionLifecycleConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationVersionLifecycleConfig)(nil)).Elem()
}

func (i *applicationVersionLifecycleConfigPtrType) ToApplicationVersionLifecycleConfigPtrOutput() ApplicationVersionLifecycleConfigPtrOutput {
	return i.ToApplicationVersionLifecycleConfigPtrOutputWithContext(context.Background())
}

func (i *applicationVersionLifecycleConfigPtrType) ToApplicationVersionLifecycleConfigPtrOutputWithContext(ctx context.Context) ApplicationVersionLifecycleConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationVersionLifecycleConfigPtrOutput)
}

type ApplicationVersionLifecycleConfigOutput struct{ *pulumi.OutputState }

func (ApplicationVersionLifecycleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationVersionLifecycleConfig)(nil)).Elem()
}

func (o ApplicationVersionLifecycleConfigOutput) ToApplicationVersionLifecycleConfigOutput() ApplicationVersionLifecycleConfigOutput {
	return o
}

func (o ApplicationVersionLifecycleConfigOutput) ToApplicationVersionLifecycleConfigOutputWithContext(ctx context.Context) ApplicationVersionLifecycleConfigOutput {
	return o
}

func (o ApplicationVersionLifecycleConfigOutput) ToApplicationVersionLifecycleConfigPtrOutput() ApplicationVersionLifecycleConfigPtrOutput {
	return o.ToApplicationVersionLifecycleConfigPtrOutputWithContext(context.Background())
}

func (o ApplicationVersionLifecycleConfigOutput) ToApplicationVersionLifecycleConfigPtrOutputWithContext(ctx context.Context) ApplicationVersionLifecycleConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationVersionLifecycleConfig) *ApplicationVersionLifecycleConfig {
		return &v
	}).(ApplicationVersionLifecycleConfigPtrOutput)
}

// Specify a max age rule to restrict the length of time that application versions are retained for an application.
func (o ApplicationVersionLifecycleConfigOutput) MaxAgeRule() ApplicationMaxAgeRulePtrOutput {
	return o.ApplyT(func(v ApplicationVersionLifecycleConfig) *ApplicationMaxAgeRule { return v.MaxAgeRule }).(ApplicationMaxAgeRulePtrOutput)
}

// Specify a max count rule to restrict the number of application versions that are retained for an application.
func (o ApplicationVersionLifecycleConfigOutput) MaxCountRule() ApplicationMaxCountRulePtrOutput {
	return o.ApplyT(func(v ApplicationVersionLifecycleConfig) *ApplicationMaxCountRule { return v.MaxCountRule }).(ApplicationMaxCountRulePtrOutput)
}

type ApplicationVersionLifecycleConfigPtrOutput struct{ *pulumi.OutputState }

func (ApplicationVersionLifecycleConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationVersionLifecycleConfig)(nil)).Elem()
}

func (o ApplicationVersionLifecycleConfigPtrOutput) ToApplicationVersionLifecycleConfigPtrOutput() ApplicationVersionLifecycleConfigPtrOutput {
	return o
}

func (o ApplicationVersionLifecycleConfigPtrOutput) ToApplicationVersionLifecycleConfigPtrOutputWithContext(ctx context.Context) ApplicationVersionLifecycleConfigPtrOutput {
	return o
}

func (o ApplicationVersionLifecycleConfigPtrOutput) Elem() ApplicationVersionLifecycleConfigOutput {
	return o.ApplyT(func(v *ApplicationVersionLifecycleConfig) ApplicationVersionLifecycleConfig {
		if v != nil {
			return *v
		}
		var ret ApplicationVersionLifecycleConfig
		return ret
	}).(ApplicationVersionLifecycleConfigOutput)
}

// Specify a max age rule to restrict the length of time that application versions are retained for an application.
func (o ApplicationVersionLifecycleConfigPtrOutput) MaxAgeRule() ApplicationMaxAgeRulePtrOutput {
	return o.ApplyT(func(v *ApplicationVersionLifecycleConfig) *ApplicationMaxAgeRule {
		if v == nil {
			return nil
		}
		return v.MaxAgeRule
	}).(ApplicationMaxAgeRulePtrOutput)
}

// Specify a max count rule to restrict the number of application versions that are retained for an application.
func (o ApplicationVersionLifecycleConfigPtrOutput) MaxCountRule() ApplicationMaxCountRulePtrOutput {
	return o.ApplyT(func(v *ApplicationVersionLifecycleConfig) *ApplicationMaxCountRule {
		if v == nil {
			return nil
		}
		return v.MaxCountRule
	}).(ApplicationMaxCountRulePtrOutput)
}

type ApplicationVersionSourceBundle struct {
	// The Amazon S3 bucket where the data is located.
	S3Bucket string `pulumi:"s3Bucket"`
	// The Amazon S3 key where the data is located.
	S3Key string `pulumi:"s3Key"`
}

// ApplicationVersionSourceBundleInput is an input type that accepts ApplicationVersionSourceBundleArgs and ApplicationVersionSourceBundleOutput values.
// You can construct a concrete instance of `ApplicationVersionSourceBundleInput` via:
//
//	ApplicationVersionSourceBundleArgs{...}
type ApplicationVersionSourceBundleInput interface {
	pulumi.Input

	ToApplicationVersionSourceBundleOutput() ApplicationVersionSourceBundleOutput
	ToApplicationVersionSourceBundleOutputWithContext(context.Context) ApplicationVersionSourceBundleOutput
}

type ApplicationVersionSourceBundleArgs struct {
	// The Amazon S3 bucket where the data is located.
	S3Bucket pulumi.StringInput `pulumi:"s3Bucket"`
	// The Amazon S3 key where the data is located.
	S3Key pulumi.StringInput `pulumi:"s3Key"`
}

func (ApplicationVersionSourceBundleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationVersionSourceBundle)(nil)).Elem()
}

func (i ApplicationVersionSourceBundleArgs) ToApplicationVersionSourceBundleOutput() ApplicationVersionSourceBundleOutput {
	return i.ToApplicationVersionSourceBundleOutputWithContext(context.Background())
}

func (i ApplicationVersionSourceBundleArgs) ToApplicationVersionSourceBundleOutputWithContext(ctx context.Context) ApplicationVersionSourceBundleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationVersionSourceBundleOutput)
}

type ApplicationVersionSourceBundleOutput struct{ *pulumi.OutputState }

func (ApplicationVersionSourceBundleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationVersionSourceBundle)(nil)).Elem()
}

func (o ApplicationVersionSourceBundleOutput) ToApplicationVersionSourceBundleOutput() ApplicationVersionSourceBundleOutput {
	return o
}

func (o ApplicationVersionSourceBundleOutput) ToApplicationVersionSourceBundleOutputWithContext(ctx context.Context) ApplicationVersionSourceBundleOutput {
	return o
}

// The Amazon S3 bucket where the data is located.
func (o ApplicationVersionSourceBundleOutput) S3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationVersionSourceBundle) string { return v.S3Bucket }).(pulumi.StringOutput)
}

// The Amazon S3 key where the data is located.
func (o ApplicationVersionSourceBundleOutput) S3Key() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationVersionSourceBundle) string { return v.S3Key }).(pulumi.StringOutput)
}

type ConfigurationTemplateConfigurationOptionSetting struct {
	Namespace    string  `pulumi:"namespace"`
	OptionName   string  `pulumi:"optionName"`
	ResourceName *string `pulumi:"resourceName"`
	Value        *string `pulumi:"value"`
}

// ConfigurationTemplateConfigurationOptionSettingInput is an input type that accepts ConfigurationTemplateConfigurationOptionSettingArgs and ConfigurationTemplateConfigurationOptionSettingOutput values.
// You can construct a concrete instance of `ConfigurationTemplateConfigurationOptionSettingInput` via:
//
//	ConfigurationTemplateConfigurationOptionSettingArgs{...}
type ConfigurationTemplateConfigurationOptionSettingInput interface {
	pulumi.Input

	ToConfigurationTemplateConfigurationOptionSettingOutput() ConfigurationTemplateConfigurationOptionSettingOutput
	ToConfigurationTemplateConfigurationOptionSettingOutputWithContext(context.Context) ConfigurationTemplateConfigurationOptionSettingOutput
}

type ConfigurationTemplateConfigurationOptionSettingArgs struct {
	Namespace    pulumi.StringInput    `pulumi:"namespace"`
	OptionName   pulumi.StringInput    `pulumi:"optionName"`
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	Value        pulumi.StringPtrInput `pulumi:"value"`
}

func (ConfigurationTemplateConfigurationOptionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationTemplateConfigurationOptionSetting)(nil)).Elem()
}

func (i ConfigurationTemplateConfigurationOptionSettingArgs) ToConfigurationTemplateConfigurationOptionSettingOutput() ConfigurationTemplateConfigurationOptionSettingOutput {
	return i.ToConfigurationTemplateConfigurationOptionSettingOutputWithContext(context.Background())
}

func (i ConfigurationTemplateConfigurationOptionSettingArgs) ToConfigurationTemplateConfigurationOptionSettingOutputWithContext(ctx context.Context) ConfigurationTemplateConfigurationOptionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationTemplateConfigurationOptionSettingOutput)
}

// ConfigurationTemplateConfigurationOptionSettingArrayInput is an input type that accepts ConfigurationTemplateConfigurationOptionSettingArray and ConfigurationTemplateConfigurationOptionSettingArrayOutput values.
// You can construct a concrete instance of `ConfigurationTemplateConfigurationOptionSettingArrayInput` via:
//
//	ConfigurationTemplateConfigurationOptionSettingArray{ ConfigurationTemplateConfigurationOptionSettingArgs{...} }
type ConfigurationTemplateConfigurationOptionSettingArrayInput interface {
	pulumi.Input

	ToConfigurationTemplateConfigurationOptionSettingArrayOutput() ConfigurationTemplateConfigurationOptionSettingArrayOutput
	ToConfigurationTemplateConfigurationOptionSettingArrayOutputWithContext(context.Context) ConfigurationTemplateConfigurationOptionSettingArrayOutput
}

type ConfigurationTemplateConfigurationOptionSettingArray []ConfigurationTemplateConfigurationOptionSettingInput

func (ConfigurationTemplateConfigurationOptionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationTemplateConfigurationOptionSetting)(nil)).Elem()
}

func (i ConfigurationTemplateConfigurationOptionSettingArray) ToConfigurationTemplateConfigurationOptionSettingArrayOutput() ConfigurationTemplateConfigurationOptionSettingArrayOutput {
	return i.ToConfigurationTemplateConfigurationOptionSettingArrayOutputWithContext(context.Background())
}

func (i ConfigurationTemplateConfigurationOptionSettingArray) ToConfigurationTemplateConfigurationOptionSettingArrayOutputWithContext(ctx context.Context) ConfigurationTemplateConfigurationOptionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationTemplateConfigurationOptionSettingArrayOutput)
}

type ConfigurationTemplateConfigurationOptionSettingOutput struct{ *pulumi.OutputState }

func (ConfigurationTemplateConfigurationOptionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationTemplateConfigurationOptionSetting)(nil)).Elem()
}

func (o ConfigurationTemplateConfigurationOptionSettingOutput) ToConfigurationTemplateConfigurationOptionSettingOutput() ConfigurationTemplateConfigurationOptionSettingOutput {
	return o
}

func (o ConfigurationTemplateConfigurationOptionSettingOutput) ToConfigurationTemplateConfigurationOptionSettingOutputWithContext(ctx context.Context) ConfigurationTemplateConfigurationOptionSettingOutput {
	return o
}

func (o ConfigurationTemplateConfigurationOptionSettingOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationTemplateConfigurationOptionSetting) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o ConfigurationTemplateConfigurationOptionSettingOutput) OptionName() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationTemplateConfigurationOptionSetting) string { return v.OptionName }).(pulumi.StringOutput)
}

func (o ConfigurationTemplateConfigurationOptionSettingOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationTemplateConfigurationOptionSetting) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

func (o ConfigurationTemplateConfigurationOptionSettingOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationTemplateConfigurationOptionSetting) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConfigurationTemplateConfigurationOptionSettingArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationTemplateConfigurationOptionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationTemplateConfigurationOptionSetting)(nil)).Elem()
}

func (o ConfigurationTemplateConfigurationOptionSettingArrayOutput) ToConfigurationTemplateConfigurationOptionSettingArrayOutput() ConfigurationTemplateConfigurationOptionSettingArrayOutput {
	return o
}

func (o ConfigurationTemplateConfigurationOptionSettingArrayOutput) ToConfigurationTemplateConfigurationOptionSettingArrayOutputWithContext(ctx context.Context) ConfigurationTemplateConfigurationOptionSettingArrayOutput {
	return o
}

func (o ConfigurationTemplateConfigurationOptionSettingArrayOutput) Index(i pulumi.IntInput) ConfigurationTemplateConfigurationOptionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationTemplateConfigurationOptionSetting {
		return vs[0].([]ConfigurationTemplateConfigurationOptionSetting)[vs[1].(int)]
	}).(ConfigurationTemplateConfigurationOptionSettingOutput)
}

type ConfigurationTemplateSourceConfiguration struct {
	ApplicationName string `pulumi:"applicationName"`
	TemplateName    string `pulumi:"templateName"`
}

// ConfigurationTemplateSourceConfigurationInput is an input type that accepts ConfigurationTemplateSourceConfigurationArgs and ConfigurationTemplateSourceConfigurationOutput values.
// You can construct a concrete instance of `ConfigurationTemplateSourceConfigurationInput` via:
//
//	ConfigurationTemplateSourceConfigurationArgs{...}
type ConfigurationTemplateSourceConfigurationInput interface {
	pulumi.Input

	ToConfigurationTemplateSourceConfigurationOutput() ConfigurationTemplateSourceConfigurationOutput
	ToConfigurationTemplateSourceConfigurationOutputWithContext(context.Context) ConfigurationTemplateSourceConfigurationOutput
}

type ConfigurationTemplateSourceConfigurationArgs struct {
	ApplicationName pulumi.StringInput `pulumi:"applicationName"`
	TemplateName    pulumi.StringInput `pulumi:"templateName"`
}

func (ConfigurationTemplateSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationTemplateSourceConfiguration)(nil)).Elem()
}

func (i ConfigurationTemplateSourceConfigurationArgs) ToConfigurationTemplateSourceConfigurationOutput() ConfigurationTemplateSourceConfigurationOutput {
	return i.ToConfigurationTemplateSourceConfigurationOutputWithContext(context.Background())
}

func (i ConfigurationTemplateSourceConfigurationArgs) ToConfigurationTemplateSourceConfigurationOutputWithContext(ctx context.Context) ConfigurationTemplateSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationTemplateSourceConfigurationOutput)
}

func (i ConfigurationTemplateSourceConfigurationArgs) ToConfigurationTemplateSourceConfigurationPtrOutput() ConfigurationTemplateSourceConfigurationPtrOutput {
	return i.ToConfigurationTemplateSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i ConfigurationTemplateSourceConfigurationArgs) ToConfigurationTemplateSourceConfigurationPtrOutputWithContext(ctx context.Context) ConfigurationTemplateSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationTemplateSourceConfigurationOutput).ToConfigurationTemplateSourceConfigurationPtrOutputWithContext(ctx)
}

// ConfigurationTemplateSourceConfigurationPtrInput is an input type that accepts ConfigurationTemplateSourceConfigurationArgs, ConfigurationTemplateSourceConfigurationPtr and ConfigurationTemplateSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `ConfigurationTemplateSourceConfigurationPtrInput` via:
//
//	        ConfigurationTemplateSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type ConfigurationTemplateSourceConfigurationPtrInput interface {
	pulumi.Input

	ToConfigurationTemplateSourceConfigurationPtrOutput() ConfigurationTemplateSourceConfigurationPtrOutput
	ToConfigurationTemplateSourceConfigurationPtrOutputWithContext(context.Context) ConfigurationTemplateSourceConfigurationPtrOutput
}

type configurationTemplateSourceConfigurationPtrType ConfigurationTemplateSourceConfigurationArgs

func ConfigurationTemplateSourceConfigurationPtr(v *ConfigurationTemplateSourceConfigurationArgs) ConfigurationTemplateSourceConfigurationPtrInput {
	return (*configurationTemplateSourceConfigurationPtrType)(v)
}

func (*configurationTemplateSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationTemplateSourceConfiguration)(nil)).Elem()
}

func (i *configurationTemplateSourceConfigurationPtrType) ToConfigurationTemplateSourceConfigurationPtrOutput() ConfigurationTemplateSourceConfigurationPtrOutput {
	return i.ToConfigurationTemplateSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *configurationTemplateSourceConfigurationPtrType) ToConfigurationTemplateSourceConfigurationPtrOutputWithContext(ctx context.Context) ConfigurationTemplateSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationTemplateSourceConfigurationPtrOutput)
}

type ConfigurationTemplateSourceConfigurationOutput struct{ *pulumi.OutputState }

func (ConfigurationTemplateSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationTemplateSourceConfiguration)(nil)).Elem()
}

func (o ConfigurationTemplateSourceConfigurationOutput) ToConfigurationTemplateSourceConfigurationOutput() ConfigurationTemplateSourceConfigurationOutput {
	return o
}

func (o ConfigurationTemplateSourceConfigurationOutput) ToConfigurationTemplateSourceConfigurationOutputWithContext(ctx context.Context) ConfigurationTemplateSourceConfigurationOutput {
	return o
}

func (o ConfigurationTemplateSourceConfigurationOutput) ToConfigurationTemplateSourceConfigurationPtrOutput() ConfigurationTemplateSourceConfigurationPtrOutput {
	return o.ToConfigurationTemplateSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o ConfigurationTemplateSourceConfigurationOutput) ToConfigurationTemplateSourceConfigurationPtrOutputWithContext(ctx context.Context) ConfigurationTemplateSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationTemplateSourceConfiguration) *ConfigurationTemplateSourceConfiguration {
		return &v
	}).(ConfigurationTemplateSourceConfigurationPtrOutput)
}

func (o ConfigurationTemplateSourceConfigurationOutput) ApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationTemplateSourceConfiguration) string { return v.ApplicationName }).(pulumi.StringOutput)
}

func (o ConfigurationTemplateSourceConfigurationOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationTemplateSourceConfiguration) string { return v.TemplateName }).(pulumi.StringOutput)
}

type ConfigurationTemplateSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConfigurationTemplateSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationTemplateSourceConfiguration)(nil)).Elem()
}

func (o ConfigurationTemplateSourceConfigurationPtrOutput) ToConfigurationTemplateSourceConfigurationPtrOutput() ConfigurationTemplateSourceConfigurationPtrOutput {
	return o
}

func (o ConfigurationTemplateSourceConfigurationPtrOutput) ToConfigurationTemplateSourceConfigurationPtrOutputWithContext(ctx context.Context) ConfigurationTemplateSourceConfigurationPtrOutput {
	return o
}

func (o ConfigurationTemplateSourceConfigurationPtrOutput) Elem() ConfigurationTemplateSourceConfigurationOutput {
	return o.ApplyT(func(v *ConfigurationTemplateSourceConfiguration) ConfigurationTemplateSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret ConfigurationTemplateSourceConfiguration
		return ret
	}).(ConfigurationTemplateSourceConfigurationOutput)
}

func (o ConfigurationTemplateSourceConfigurationPtrOutput) ApplicationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationTemplateSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ApplicationName
	}).(pulumi.StringPtrOutput)
}

func (o ConfigurationTemplateSourceConfigurationPtrOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationTemplateSourceConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TemplateName
	}).(pulumi.StringPtrOutput)
}

type EnvironmentOptionSetting struct {
	// A unique namespace that identifies the option's associated AWS resource.
	Namespace string `pulumi:"namespace"`
	// The name of the configuration option.
	OptionName string `pulumi:"optionName"`
	// A unique resource name for the option setting. Use it for a time–based scaling configuration option.
	ResourceName *string `pulumi:"resourceName"`
	// The current value for the configuration option.
	Value *string `pulumi:"value"`
}

// EnvironmentOptionSettingInput is an input type that accepts EnvironmentOptionSettingArgs and EnvironmentOptionSettingOutput values.
// You can construct a concrete instance of `EnvironmentOptionSettingInput` via:
//
//	EnvironmentOptionSettingArgs{...}
type EnvironmentOptionSettingInput interface {
	pulumi.Input

	ToEnvironmentOptionSettingOutput() EnvironmentOptionSettingOutput
	ToEnvironmentOptionSettingOutputWithContext(context.Context) EnvironmentOptionSettingOutput
}

type EnvironmentOptionSettingArgs struct {
	// A unique namespace that identifies the option's associated AWS resource.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The name of the configuration option.
	OptionName pulumi.StringInput `pulumi:"optionName"`
	// A unique resource name for the option setting. Use it for a time–based scaling configuration option.
	ResourceName pulumi.StringPtrInput `pulumi:"resourceName"`
	// The current value for the configuration option.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EnvironmentOptionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentOptionSetting)(nil)).Elem()
}

func (i EnvironmentOptionSettingArgs) ToEnvironmentOptionSettingOutput() EnvironmentOptionSettingOutput {
	return i.ToEnvironmentOptionSettingOutputWithContext(context.Background())
}

func (i EnvironmentOptionSettingArgs) ToEnvironmentOptionSettingOutputWithContext(ctx context.Context) EnvironmentOptionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOptionSettingOutput)
}

// EnvironmentOptionSettingArrayInput is an input type that accepts EnvironmentOptionSettingArray and EnvironmentOptionSettingArrayOutput values.
// You can construct a concrete instance of `EnvironmentOptionSettingArrayInput` via:
//
//	EnvironmentOptionSettingArray{ EnvironmentOptionSettingArgs{...} }
type EnvironmentOptionSettingArrayInput interface {
	pulumi.Input

	ToEnvironmentOptionSettingArrayOutput() EnvironmentOptionSettingArrayOutput
	ToEnvironmentOptionSettingArrayOutputWithContext(context.Context) EnvironmentOptionSettingArrayOutput
}

type EnvironmentOptionSettingArray []EnvironmentOptionSettingInput

func (EnvironmentOptionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentOptionSetting)(nil)).Elem()
}

func (i EnvironmentOptionSettingArray) ToEnvironmentOptionSettingArrayOutput() EnvironmentOptionSettingArrayOutput {
	return i.ToEnvironmentOptionSettingArrayOutputWithContext(context.Background())
}

func (i EnvironmentOptionSettingArray) ToEnvironmentOptionSettingArrayOutputWithContext(ctx context.Context) EnvironmentOptionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOptionSettingArrayOutput)
}

type EnvironmentOptionSettingOutput struct{ *pulumi.OutputState }

func (EnvironmentOptionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentOptionSetting)(nil)).Elem()
}

func (o EnvironmentOptionSettingOutput) ToEnvironmentOptionSettingOutput() EnvironmentOptionSettingOutput {
	return o
}

func (o EnvironmentOptionSettingOutput) ToEnvironmentOptionSettingOutputWithContext(ctx context.Context) EnvironmentOptionSettingOutput {
	return o
}

// A unique namespace that identifies the option's associated AWS resource.
func (o EnvironmentOptionSettingOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentOptionSetting) string { return v.Namespace }).(pulumi.StringOutput)
}

// The name of the configuration option.
func (o EnvironmentOptionSettingOutput) OptionName() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentOptionSetting) string { return v.OptionName }).(pulumi.StringOutput)
}

// A unique resource name for the option setting. Use it for a time–based scaling configuration option.
func (o EnvironmentOptionSettingOutput) ResourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentOptionSetting) *string { return v.ResourceName }).(pulumi.StringPtrOutput)
}

// The current value for the configuration option.
func (o EnvironmentOptionSettingOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentOptionSetting) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EnvironmentOptionSettingArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentOptionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentOptionSetting)(nil)).Elem()
}

func (o EnvironmentOptionSettingArrayOutput) ToEnvironmentOptionSettingArrayOutput() EnvironmentOptionSettingArrayOutput {
	return o
}

func (o EnvironmentOptionSettingArrayOutput) ToEnvironmentOptionSettingArrayOutputWithContext(ctx context.Context) EnvironmentOptionSettingArrayOutput {
	return o
}

func (o EnvironmentOptionSettingArrayOutput) Index(i pulumi.IntInput) EnvironmentOptionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentOptionSetting {
		return vs[0].([]EnvironmentOptionSetting)[vs[1].(int)]
	}).(EnvironmentOptionSettingOutput)
}

type EnvironmentTag struct {
	// The key name of the tag.
	Key string `pulumi:"key"`
	// The value for the tag.
	Value string `pulumi:"value"`
}

// EnvironmentTagInput is an input type that accepts EnvironmentTagArgs and EnvironmentTagOutput values.
// You can construct a concrete instance of `EnvironmentTagInput` via:
//
//	EnvironmentTagArgs{...}
type EnvironmentTagInput interface {
	pulumi.Input

	ToEnvironmentTagOutput() EnvironmentTagOutput
	ToEnvironmentTagOutputWithContext(context.Context) EnvironmentTagOutput
}

type EnvironmentTagArgs struct {
	// The key name of the tag.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EnvironmentTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentTag)(nil)).Elem()
}

func (i EnvironmentTagArgs) ToEnvironmentTagOutput() EnvironmentTagOutput {
	return i.ToEnvironmentTagOutputWithContext(context.Background())
}

func (i EnvironmentTagArgs) ToEnvironmentTagOutputWithContext(ctx context.Context) EnvironmentTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTagOutput)
}

// EnvironmentTagArrayInput is an input type that accepts EnvironmentTagArray and EnvironmentTagArrayOutput values.
// You can construct a concrete instance of `EnvironmentTagArrayInput` via:
//
//	EnvironmentTagArray{ EnvironmentTagArgs{...} }
type EnvironmentTagArrayInput interface {
	pulumi.Input

	ToEnvironmentTagArrayOutput() EnvironmentTagArrayOutput
	ToEnvironmentTagArrayOutputWithContext(context.Context) EnvironmentTagArrayOutput
}

type EnvironmentTagArray []EnvironmentTagInput

func (EnvironmentTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentTag)(nil)).Elem()
}

func (i EnvironmentTagArray) ToEnvironmentTagArrayOutput() EnvironmentTagArrayOutput {
	return i.ToEnvironmentTagArrayOutputWithContext(context.Background())
}

func (i EnvironmentTagArray) ToEnvironmentTagArrayOutputWithContext(ctx context.Context) EnvironmentTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTagArrayOutput)
}

type EnvironmentTagOutput struct{ *pulumi.OutputState }

func (EnvironmentTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentTag)(nil)).Elem()
}

func (o EnvironmentTagOutput) ToEnvironmentTagOutput() EnvironmentTagOutput {
	return o
}

func (o EnvironmentTagOutput) ToEnvironmentTagOutputWithContext(ctx context.Context) EnvironmentTagOutput {
	return o
}

// The key name of the tag.
func (o EnvironmentTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag.
func (o EnvironmentTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentTag) string { return v.Value }).(pulumi.StringOutput)
}

type EnvironmentTagArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentTag)(nil)).Elem()
}

func (o EnvironmentTagArrayOutput) ToEnvironmentTagArrayOutput() EnvironmentTagArrayOutput {
	return o
}

func (o EnvironmentTagArrayOutput) ToEnvironmentTagArrayOutputWithContext(ctx context.Context) EnvironmentTagArrayOutput {
	return o
}

func (o EnvironmentTagArrayOutput) Index(i pulumi.IntInput) EnvironmentTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentTag {
		return vs[0].([]EnvironmentTag)[vs[1].(int)]
	}).(EnvironmentTagOutput)
}

type EnvironmentTier struct {
	// The name of this environment tier.
	Name *string `pulumi:"name"`
	// The type of this environment tier.
	Type *string `pulumi:"type"`
	// The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.
	Version *string `pulumi:"version"`
}

// EnvironmentTierInput is an input type that accepts EnvironmentTierArgs and EnvironmentTierOutput values.
// You can construct a concrete instance of `EnvironmentTierInput` via:
//
//	EnvironmentTierArgs{...}
type EnvironmentTierInput interface {
	pulumi.Input

	ToEnvironmentTierOutput() EnvironmentTierOutput
	ToEnvironmentTierOutputWithContext(context.Context) EnvironmentTierOutput
}

type EnvironmentTierArgs struct {
	// The name of this environment tier.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The type of this environment tier.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (EnvironmentTierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentTier)(nil)).Elem()
}

func (i EnvironmentTierArgs) ToEnvironmentTierOutput() EnvironmentTierOutput {
	return i.ToEnvironmentTierOutputWithContext(context.Background())
}

func (i EnvironmentTierArgs) ToEnvironmentTierOutputWithContext(ctx context.Context) EnvironmentTierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTierOutput)
}

func (i EnvironmentTierArgs) ToEnvironmentTierPtrOutput() EnvironmentTierPtrOutput {
	return i.ToEnvironmentTierPtrOutputWithContext(context.Background())
}

func (i EnvironmentTierArgs) ToEnvironmentTierPtrOutputWithContext(ctx context.Context) EnvironmentTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTierOutput).ToEnvironmentTierPtrOutputWithContext(ctx)
}

// EnvironmentTierPtrInput is an input type that accepts EnvironmentTierArgs, EnvironmentTierPtr and EnvironmentTierPtrOutput values.
// You can construct a concrete instance of `EnvironmentTierPtrInput` via:
//
//	        EnvironmentTierArgs{...}
//
//	or:
//
//	        nil
type EnvironmentTierPtrInput interface {
	pulumi.Input

	ToEnvironmentTierPtrOutput() EnvironmentTierPtrOutput
	ToEnvironmentTierPtrOutputWithContext(context.Context) EnvironmentTierPtrOutput
}

type environmentTierPtrType EnvironmentTierArgs

func EnvironmentTierPtr(v *EnvironmentTierArgs) EnvironmentTierPtrInput {
	return (*environmentTierPtrType)(v)
}

func (*environmentTierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentTier)(nil)).Elem()
}

func (i *environmentTierPtrType) ToEnvironmentTierPtrOutput() EnvironmentTierPtrOutput {
	return i.ToEnvironmentTierPtrOutputWithContext(context.Background())
}

func (i *environmentTierPtrType) ToEnvironmentTierPtrOutputWithContext(ctx context.Context) EnvironmentTierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTierPtrOutput)
}

type EnvironmentTierOutput struct{ *pulumi.OutputState }

func (EnvironmentTierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentTier)(nil)).Elem()
}

func (o EnvironmentTierOutput) ToEnvironmentTierOutput() EnvironmentTierOutput {
	return o
}

func (o EnvironmentTierOutput) ToEnvironmentTierOutputWithContext(ctx context.Context) EnvironmentTierOutput {
	return o
}

func (o EnvironmentTierOutput) ToEnvironmentTierPtrOutput() EnvironmentTierPtrOutput {
	return o.ToEnvironmentTierPtrOutputWithContext(context.Background())
}

func (o EnvironmentTierOutput) ToEnvironmentTierPtrOutputWithContext(ctx context.Context) EnvironmentTierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentTier) *EnvironmentTier {
		return &v
	}).(EnvironmentTierPtrOutput)
}

// The name of this environment tier.
func (o EnvironmentTierOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentTier) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The type of this environment tier.
func (o EnvironmentTierOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentTier) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.
func (o EnvironmentTierOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentTier) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type EnvironmentTierPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentTierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentTier)(nil)).Elem()
}

func (o EnvironmentTierPtrOutput) ToEnvironmentTierPtrOutput() EnvironmentTierPtrOutput {
	return o
}

func (o EnvironmentTierPtrOutput) ToEnvironmentTierPtrOutputWithContext(ctx context.Context) EnvironmentTierPtrOutput {
	return o
}

func (o EnvironmentTierPtrOutput) Elem() EnvironmentTierOutput {
	return o.ApplyT(func(v *EnvironmentTier) EnvironmentTier {
		if v != nil {
			return *v
		}
		var ret EnvironmentTier
		return ret
	}).(EnvironmentTierOutput)
}

// The name of this environment tier.
func (o EnvironmentTierPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentTier) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The type of this environment tier.
func (o EnvironmentTierPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentTier) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.
func (o EnvironmentTierPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentTier) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationMaxAgeRuleInput)(nil)).Elem(), ApplicationMaxAgeRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationMaxAgeRulePtrInput)(nil)).Elem(), ApplicationMaxAgeRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationMaxCountRuleInput)(nil)).Elem(), ApplicationMaxCountRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationMaxCountRulePtrInput)(nil)).Elem(), ApplicationMaxCountRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationResourceLifecycleConfigInput)(nil)).Elem(), ApplicationResourceLifecycleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationResourceLifecycleConfigPtrInput)(nil)).Elem(), ApplicationResourceLifecycleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationVersionLifecycleConfigInput)(nil)).Elem(), ApplicationVersionLifecycleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationVersionLifecycleConfigPtrInput)(nil)).Elem(), ApplicationVersionLifecycleConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationVersionSourceBundleInput)(nil)).Elem(), ApplicationVersionSourceBundleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationTemplateConfigurationOptionSettingInput)(nil)).Elem(), ConfigurationTemplateConfigurationOptionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationTemplateConfigurationOptionSettingArrayInput)(nil)).Elem(), ConfigurationTemplateConfigurationOptionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationTemplateSourceConfigurationInput)(nil)).Elem(), ConfigurationTemplateSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationTemplateSourceConfigurationPtrInput)(nil)).Elem(), ConfigurationTemplateSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentOptionSettingInput)(nil)).Elem(), EnvironmentOptionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentOptionSettingArrayInput)(nil)).Elem(), EnvironmentOptionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentTagInput)(nil)).Elem(), EnvironmentTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentTagArrayInput)(nil)).Elem(), EnvironmentTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentTierInput)(nil)).Elem(), EnvironmentTierArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentTierPtrInput)(nil)).Elem(), EnvironmentTierArgs{})
	pulumi.RegisterOutputType(ApplicationMaxAgeRuleOutput{})
	pulumi.RegisterOutputType(ApplicationMaxAgeRulePtrOutput{})
	pulumi.RegisterOutputType(ApplicationMaxCountRuleOutput{})
	pulumi.RegisterOutputType(ApplicationMaxCountRulePtrOutput{})
	pulumi.RegisterOutputType(ApplicationResourceLifecycleConfigOutput{})
	pulumi.RegisterOutputType(ApplicationResourceLifecycleConfigPtrOutput{})
	pulumi.RegisterOutputType(ApplicationVersionLifecycleConfigOutput{})
	pulumi.RegisterOutputType(ApplicationVersionLifecycleConfigPtrOutput{})
	pulumi.RegisterOutputType(ApplicationVersionSourceBundleOutput{})
	pulumi.RegisterOutputType(ConfigurationTemplateConfigurationOptionSettingOutput{})
	pulumi.RegisterOutputType(ConfigurationTemplateConfigurationOptionSettingArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationTemplateSourceConfigurationOutput{})
	pulumi.RegisterOutputType(ConfigurationTemplateSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentOptionSettingOutput{})
	pulumi.RegisterOutputType(EnvironmentOptionSettingArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentTagOutput{})
	pulumi.RegisterOutputType(EnvironmentTagArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentTierOutput{})
	pulumi.RegisterOutputType(EnvironmentTierPtrOutput{})
}
