// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticbeanstalk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::ElasticBeanstalk::ConfigurationTemplate
func LookupConfigurationTemplate(ctx *pulumi.Context, args *LookupConfigurationTemplateArgs, opts ...pulumi.InvokeOption) (*LookupConfigurationTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupConfigurationTemplateResult
	err := ctx.Invoke("aws-native:elasticbeanstalk:getConfigurationTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConfigurationTemplateArgs struct {
	// The name of the Elastic Beanstalk application to associate with this configuration template.
	ApplicationName string `pulumi:"applicationName"`
	// The name of the configuration template
	TemplateName string `pulumi:"templateName"`
}

type LookupConfigurationTemplateResult struct {
	// An optional description for this configuration.
	Description *string `pulumi:"description"`
	// Option values for the Elastic Beanstalk configuration, such as the instance type. If specified, these values override the values obtained from the solution stack or the source configuration template. For a complete list of Elastic Beanstalk configuration options, see [Option Values](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html) in the AWS Elastic Beanstalk Developer Guide.
	OptionSettings []ConfigurationTemplateConfigurationOptionSetting `pulumi:"optionSettings"`
	// The name of the configuration template
	TemplateName *string `pulumi:"templateName"`
}

func LookupConfigurationTemplateOutput(ctx *pulumi.Context, args LookupConfigurationTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupConfigurationTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConfigurationTemplateResult, error) {
			args := v.(LookupConfigurationTemplateArgs)
			r, err := LookupConfigurationTemplate(ctx, &args, opts...)
			var s LookupConfigurationTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupConfigurationTemplateResultOutput)
}

type LookupConfigurationTemplateOutputArgs struct {
	// The name of the Elastic Beanstalk application to associate with this configuration template.
	ApplicationName pulumi.StringInput `pulumi:"applicationName"`
	// The name of the configuration template
	TemplateName pulumi.StringInput `pulumi:"templateName"`
}

func (LookupConfigurationTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationTemplateArgs)(nil)).Elem()
}

type LookupConfigurationTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupConfigurationTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConfigurationTemplateResult)(nil)).Elem()
}

func (o LookupConfigurationTemplateResultOutput) ToLookupConfigurationTemplateResultOutput() LookupConfigurationTemplateResultOutput {
	return o
}

func (o LookupConfigurationTemplateResultOutput) ToLookupConfigurationTemplateResultOutputWithContext(ctx context.Context) LookupConfigurationTemplateResultOutput {
	return o
}

func (o LookupConfigurationTemplateResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupConfigurationTemplateResult] {
	return pulumix.Output[LookupConfigurationTemplateResult]{
		OutputState: o.OutputState,
	}
}

// An optional description for this configuration.
func (o LookupConfigurationTemplateResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationTemplateResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Option values for the Elastic Beanstalk configuration, such as the instance type. If specified, these values override the values obtained from the solution stack or the source configuration template. For a complete list of Elastic Beanstalk configuration options, see [Option Values](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html) in the AWS Elastic Beanstalk Developer Guide.
func (o LookupConfigurationTemplateResultOutput) OptionSettings() ConfigurationTemplateConfigurationOptionSettingArrayOutput {
	return o.ApplyT(func(v LookupConfigurationTemplateResult) []ConfigurationTemplateConfigurationOptionSetting {
		return v.OptionSettings
	}).(ConfigurationTemplateConfigurationOptionSettingArrayOutput)
}

// The name of the configuration template
func (o LookupConfigurationTemplateResultOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConfigurationTemplateResult) *string { return v.TemplateName }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConfigurationTemplateResultOutput{})
}
