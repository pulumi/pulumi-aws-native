// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Backup::RestoreTestingPlan Resource Type
type RestoreTestingPlan struct {
	pulumi.CustomResourceState

	RecoveryPointSelection     RestoreTestingPlanRestoreTestingRecoveryPointSelectionOutput `pulumi:"recoveryPointSelection"`
	RestoreTestingPlanArn      pulumi.StringOutput                                          `pulumi:"restoreTestingPlanArn"`
	RestoreTestingPlanName     pulumi.StringOutput                                          `pulumi:"restoreTestingPlanName"`
	ScheduleExpression         pulumi.StringOutput                                          `pulumi:"scheduleExpression"`
	ScheduleExpressionTimezone pulumi.StringPtrOutput                                       `pulumi:"scheduleExpressionTimezone"`
	StartWindowHours           pulumi.IntPtrOutput                                          `pulumi:"startWindowHours"`
	Tags                       aws.TagArrayOutput                                           `pulumi:"tags"`
}

// NewRestoreTestingPlan registers a new resource with the given unique name, arguments, and options.
func NewRestoreTestingPlan(ctx *pulumi.Context,
	name string, args *RestoreTestingPlanArgs, opts ...pulumi.ResourceOption) (*RestoreTestingPlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RecoveryPointSelection == nil {
		return nil, errors.New("invalid value for required argument 'RecoveryPointSelection'")
	}
	if args.ScheduleExpression == nil {
		return nil, errors.New("invalid value for required argument 'ScheduleExpression'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"restoreTestingPlanName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RestoreTestingPlan
	err := ctx.RegisterResource("aws-native:backup:RestoreTestingPlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestoreTestingPlan gets an existing RestoreTestingPlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestoreTestingPlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestoreTestingPlanState, opts ...pulumi.ResourceOption) (*RestoreTestingPlan, error) {
	var resource RestoreTestingPlan
	err := ctx.ReadResource("aws-native:backup:RestoreTestingPlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestoreTestingPlan resources.
type restoreTestingPlanState struct {
}

type RestoreTestingPlanState struct {
}

func (RestoreTestingPlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*restoreTestingPlanState)(nil)).Elem()
}

type restoreTestingPlanArgs struct {
	RecoveryPointSelection     RestoreTestingPlanRestoreTestingRecoveryPointSelection `pulumi:"recoveryPointSelection"`
	RestoreTestingPlanName     *string                                                `pulumi:"restoreTestingPlanName"`
	ScheduleExpression         string                                                 `pulumi:"scheduleExpression"`
	ScheduleExpressionTimezone *string                                                `pulumi:"scheduleExpressionTimezone"`
	StartWindowHours           *int                                                   `pulumi:"startWindowHours"`
	Tags                       []aws.Tag                                              `pulumi:"tags"`
}

// The set of arguments for constructing a RestoreTestingPlan resource.
type RestoreTestingPlanArgs struct {
	RecoveryPointSelection     RestoreTestingPlanRestoreTestingRecoveryPointSelectionInput
	RestoreTestingPlanName     pulumi.StringPtrInput
	ScheduleExpression         pulumi.StringInput
	ScheduleExpressionTimezone pulumi.StringPtrInput
	StartWindowHours           pulumi.IntPtrInput
	Tags                       aws.TagArrayInput
}

func (RestoreTestingPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restoreTestingPlanArgs)(nil)).Elem()
}

type RestoreTestingPlanInput interface {
	pulumi.Input

	ToRestoreTestingPlanOutput() RestoreTestingPlanOutput
	ToRestoreTestingPlanOutputWithContext(ctx context.Context) RestoreTestingPlanOutput
}

func (*RestoreTestingPlan) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreTestingPlan)(nil)).Elem()
}

func (i *RestoreTestingPlan) ToRestoreTestingPlanOutput() RestoreTestingPlanOutput {
	return i.ToRestoreTestingPlanOutputWithContext(context.Background())
}

func (i *RestoreTestingPlan) ToRestoreTestingPlanOutputWithContext(ctx context.Context) RestoreTestingPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreTestingPlanOutput)
}

type RestoreTestingPlanOutput struct{ *pulumi.OutputState }

func (RestoreTestingPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreTestingPlan)(nil)).Elem()
}

func (o RestoreTestingPlanOutput) ToRestoreTestingPlanOutput() RestoreTestingPlanOutput {
	return o
}

func (o RestoreTestingPlanOutput) ToRestoreTestingPlanOutputWithContext(ctx context.Context) RestoreTestingPlanOutput {
	return o
}

func (o RestoreTestingPlanOutput) RecoveryPointSelection() RestoreTestingPlanRestoreTestingRecoveryPointSelectionOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) RestoreTestingPlanRestoreTestingRecoveryPointSelectionOutput {
		return v.RecoveryPointSelection
	}).(RestoreTestingPlanRestoreTestingRecoveryPointSelectionOutput)
}

func (o RestoreTestingPlanOutput) RestoreTestingPlanArn() pulumi.StringOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) pulumi.StringOutput { return v.RestoreTestingPlanArn }).(pulumi.StringOutput)
}

func (o RestoreTestingPlanOutput) RestoreTestingPlanName() pulumi.StringOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) pulumi.StringOutput { return v.RestoreTestingPlanName }).(pulumi.StringOutput)
}

func (o RestoreTestingPlanOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) pulumi.StringOutput { return v.ScheduleExpression }).(pulumi.StringOutput)
}

func (o RestoreTestingPlanOutput) ScheduleExpressionTimezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) pulumi.StringPtrOutput { return v.ScheduleExpressionTimezone }).(pulumi.StringPtrOutput)
}

func (o RestoreTestingPlanOutput) StartWindowHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) pulumi.IntPtrOutput { return v.StartWindowHours }).(pulumi.IntPtrOutput)
}

func (o RestoreTestingPlanOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreTestingPlanInput)(nil)).Elem(), &RestoreTestingPlan{})
	pulumi.RegisterOutputType(RestoreTestingPlanOutput{})
}
