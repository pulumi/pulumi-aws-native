// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Backup::BackupVault
type BackupVault struct {
	pulumi.CustomResourceState

	AccessPolicy      pulumi.AnyOutput                           `pulumi:"accessPolicy"`
	BackupVaultArn    pulumi.StringOutput                        `pulumi:"backupVaultArn"`
	BackupVaultName   pulumi.StringOutput                        `pulumi:"backupVaultName"`
	BackupVaultTags   pulumi.AnyOutput                           `pulumi:"backupVaultTags"`
	EncryptionKeyArn  pulumi.StringPtrOutput                     `pulumi:"encryptionKeyArn"`
	LockConfiguration BackupVaultLockConfigurationTypePtrOutput  `pulumi:"lockConfiguration"`
	Notifications     BackupVaultNotificationObjectTypePtrOutput `pulumi:"notifications"`
}

// NewBackupVault registers a new resource with the given unique name, arguments, and options.
func NewBackupVault(ctx *pulumi.Context,
	name string, args *BackupVaultArgs, opts ...pulumi.ResourceOption) (*BackupVault, error) {
	if args == nil {
		args = &BackupVaultArgs{}
	}

	var resource BackupVault
	err := ctx.RegisterResource("aws-native:backup:BackupVault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBackupVault gets an existing BackupVault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBackupVault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BackupVaultState, opts ...pulumi.ResourceOption) (*BackupVault, error) {
	var resource BackupVault
	err := ctx.ReadResource("aws-native:backup:BackupVault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BackupVault resources.
type backupVaultState struct {
}

type BackupVaultState struct {
}

func (BackupVaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*backupVaultState)(nil)).Elem()
}

type backupVaultArgs struct {
	AccessPolicy      interface{}                        `pulumi:"accessPolicy"`
	BackupVaultName   *string                            `pulumi:"backupVaultName"`
	BackupVaultTags   interface{}                        `pulumi:"backupVaultTags"`
	EncryptionKeyArn  *string                            `pulumi:"encryptionKeyArn"`
	LockConfiguration *BackupVaultLockConfigurationType  `pulumi:"lockConfiguration"`
	Notifications     *BackupVaultNotificationObjectType `pulumi:"notifications"`
}

// The set of arguments for constructing a BackupVault resource.
type BackupVaultArgs struct {
	AccessPolicy      pulumi.Input
	BackupVaultName   pulumi.StringPtrInput
	BackupVaultTags   pulumi.Input
	EncryptionKeyArn  pulumi.StringPtrInput
	LockConfiguration BackupVaultLockConfigurationTypePtrInput
	Notifications     BackupVaultNotificationObjectTypePtrInput
}

func (BackupVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*backupVaultArgs)(nil)).Elem()
}

type BackupVaultInput interface {
	pulumi.Input

	ToBackupVaultOutput() BackupVaultOutput
	ToBackupVaultOutputWithContext(ctx context.Context) BackupVaultOutput
}

func (*BackupVault) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupVault)(nil)).Elem()
}

func (i *BackupVault) ToBackupVaultOutput() BackupVaultOutput {
	return i.ToBackupVaultOutputWithContext(context.Background())
}

func (i *BackupVault) ToBackupVaultOutputWithContext(ctx context.Context) BackupVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultOutput)
}

type BackupVaultOutput struct{ *pulumi.OutputState }

func (BackupVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupVault)(nil)).Elem()
}

func (o BackupVaultOutput) ToBackupVaultOutput() BackupVaultOutput {
	return o
}

func (o BackupVaultOutput) ToBackupVaultOutputWithContext(ctx context.Context) BackupVaultOutput {
	return o
}

func (o BackupVaultOutput) AccessPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v *BackupVault) pulumi.AnyOutput { return v.AccessPolicy }).(pulumi.AnyOutput)
}

func (o BackupVaultOutput) BackupVaultArn() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupVault) pulumi.StringOutput { return v.BackupVaultArn }).(pulumi.StringOutput)
}

func (o BackupVaultOutput) BackupVaultName() pulumi.StringOutput {
	return o.ApplyT(func(v *BackupVault) pulumi.StringOutput { return v.BackupVaultName }).(pulumi.StringOutput)
}

func (o BackupVaultOutput) BackupVaultTags() pulumi.AnyOutput {
	return o.ApplyT(func(v *BackupVault) pulumi.AnyOutput { return v.BackupVaultTags }).(pulumi.AnyOutput)
}

func (o BackupVaultOutput) EncryptionKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupVault) pulumi.StringPtrOutput { return v.EncryptionKeyArn }).(pulumi.StringPtrOutput)
}

func (o BackupVaultOutput) LockConfiguration() BackupVaultLockConfigurationTypePtrOutput {
	return o.ApplyT(func(v *BackupVault) BackupVaultLockConfigurationTypePtrOutput { return v.LockConfiguration }).(BackupVaultLockConfigurationTypePtrOutput)
}

func (o BackupVaultOutput) Notifications() BackupVaultNotificationObjectTypePtrOutput {
	return o.ApplyT(func(v *BackupVault) BackupVaultNotificationObjectTypePtrOutput { return v.Notifications }).(BackupVaultNotificationObjectTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BackupVaultInput)(nil)).Elem(), &BackupVault{})
	pulumi.RegisterOutputType(BackupVaultOutput{})
}
