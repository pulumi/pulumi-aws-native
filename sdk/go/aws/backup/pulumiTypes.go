// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BackupPlanAdvancedBackupSettingResourceType struct {
	BackupOptions interface{} `pulumi:"backupOptions"`
	ResourceType  string      `pulumi:"resourceType"`
}

// BackupPlanAdvancedBackupSettingResourceTypeInput is an input type that accepts BackupPlanAdvancedBackupSettingResourceTypeArgs and BackupPlanAdvancedBackupSettingResourceTypeOutput values.
// You can construct a concrete instance of `BackupPlanAdvancedBackupSettingResourceTypeInput` via:
//
//          BackupPlanAdvancedBackupSettingResourceTypeArgs{...}
type BackupPlanAdvancedBackupSettingResourceTypeInput interface {
	pulumi.Input

	ToBackupPlanAdvancedBackupSettingResourceTypeOutput() BackupPlanAdvancedBackupSettingResourceTypeOutput
	ToBackupPlanAdvancedBackupSettingResourceTypeOutputWithContext(context.Context) BackupPlanAdvancedBackupSettingResourceTypeOutput
}

type BackupPlanAdvancedBackupSettingResourceTypeArgs struct {
	BackupOptions pulumi.Input       `pulumi:"backupOptions"`
	ResourceType  pulumi.StringInput `pulumi:"resourceType"`
}

func (BackupPlanAdvancedBackupSettingResourceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPlanAdvancedBackupSettingResourceType)(nil)).Elem()
}

func (i BackupPlanAdvancedBackupSettingResourceTypeArgs) ToBackupPlanAdvancedBackupSettingResourceTypeOutput() BackupPlanAdvancedBackupSettingResourceTypeOutput {
	return i.ToBackupPlanAdvancedBackupSettingResourceTypeOutputWithContext(context.Background())
}

func (i BackupPlanAdvancedBackupSettingResourceTypeArgs) ToBackupPlanAdvancedBackupSettingResourceTypeOutputWithContext(ctx context.Context) BackupPlanAdvancedBackupSettingResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanAdvancedBackupSettingResourceTypeOutput)
}

// BackupPlanAdvancedBackupSettingResourceTypeArrayInput is an input type that accepts BackupPlanAdvancedBackupSettingResourceTypeArray and BackupPlanAdvancedBackupSettingResourceTypeArrayOutput values.
// You can construct a concrete instance of `BackupPlanAdvancedBackupSettingResourceTypeArrayInput` via:
//
//          BackupPlanAdvancedBackupSettingResourceTypeArray{ BackupPlanAdvancedBackupSettingResourceTypeArgs{...} }
type BackupPlanAdvancedBackupSettingResourceTypeArrayInput interface {
	pulumi.Input

	ToBackupPlanAdvancedBackupSettingResourceTypeArrayOutput() BackupPlanAdvancedBackupSettingResourceTypeArrayOutput
	ToBackupPlanAdvancedBackupSettingResourceTypeArrayOutputWithContext(context.Context) BackupPlanAdvancedBackupSettingResourceTypeArrayOutput
}

type BackupPlanAdvancedBackupSettingResourceTypeArray []BackupPlanAdvancedBackupSettingResourceTypeInput

func (BackupPlanAdvancedBackupSettingResourceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupPlanAdvancedBackupSettingResourceType)(nil)).Elem()
}

func (i BackupPlanAdvancedBackupSettingResourceTypeArray) ToBackupPlanAdvancedBackupSettingResourceTypeArrayOutput() BackupPlanAdvancedBackupSettingResourceTypeArrayOutput {
	return i.ToBackupPlanAdvancedBackupSettingResourceTypeArrayOutputWithContext(context.Background())
}

func (i BackupPlanAdvancedBackupSettingResourceTypeArray) ToBackupPlanAdvancedBackupSettingResourceTypeArrayOutputWithContext(ctx context.Context) BackupPlanAdvancedBackupSettingResourceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanAdvancedBackupSettingResourceTypeArrayOutput)
}

type BackupPlanAdvancedBackupSettingResourceTypeOutput struct{ *pulumi.OutputState }

func (BackupPlanAdvancedBackupSettingResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPlanAdvancedBackupSettingResourceType)(nil)).Elem()
}

func (o BackupPlanAdvancedBackupSettingResourceTypeOutput) ToBackupPlanAdvancedBackupSettingResourceTypeOutput() BackupPlanAdvancedBackupSettingResourceTypeOutput {
	return o
}

func (o BackupPlanAdvancedBackupSettingResourceTypeOutput) ToBackupPlanAdvancedBackupSettingResourceTypeOutputWithContext(ctx context.Context) BackupPlanAdvancedBackupSettingResourceTypeOutput {
	return o
}

func (o BackupPlanAdvancedBackupSettingResourceTypeOutput) BackupOptions() pulumi.AnyOutput {
	return o.ApplyT(func(v BackupPlanAdvancedBackupSettingResourceType) interface{} { return v.BackupOptions }).(pulumi.AnyOutput)
}

func (o BackupPlanAdvancedBackupSettingResourceTypeOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPlanAdvancedBackupSettingResourceType) string { return v.ResourceType }).(pulumi.StringOutput)
}

type BackupPlanAdvancedBackupSettingResourceTypeArrayOutput struct{ *pulumi.OutputState }

func (BackupPlanAdvancedBackupSettingResourceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupPlanAdvancedBackupSettingResourceType)(nil)).Elem()
}

func (o BackupPlanAdvancedBackupSettingResourceTypeArrayOutput) ToBackupPlanAdvancedBackupSettingResourceTypeArrayOutput() BackupPlanAdvancedBackupSettingResourceTypeArrayOutput {
	return o
}

func (o BackupPlanAdvancedBackupSettingResourceTypeArrayOutput) ToBackupPlanAdvancedBackupSettingResourceTypeArrayOutputWithContext(ctx context.Context) BackupPlanAdvancedBackupSettingResourceTypeArrayOutput {
	return o
}

func (o BackupPlanAdvancedBackupSettingResourceTypeArrayOutput) Index(i pulumi.IntInput) BackupPlanAdvancedBackupSettingResourceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupPlanAdvancedBackupSettingResourceType {
		return vs[0].([]BackupPlanAdvancedBackupSettingResourceType)[vs[1].(int)]
	}).(BackupPlanAdvancedBackupSettingResourceTypeOutput)
}

type BackupPlanBackupRuleResourceType struct {
	CompletionWindowMinutes *float64                           `pulumi:"completionWindowMinutes"`
	CopyActions             []BackupPlanCopyActionResourceType `pulumi:"copyActions"`
	EnableContinuousBackup  *bool                              `pulumi:"enableContinuousBackup"`
	Lifecycle               *BackupPlanLifecycleResourceType   `pulumi:"lifecycle"`
	RecoveryPointTags       interface{}                        `pulumi:"recoveryPointTags"`
	RuleName                string                             `pulumi:"ruleName"`
	ScheduleExpression      *string                            `pulumi:"scheduleExpression"`
	StartWindowMinutes      *float64                           `pulumi:"startWindowMinutes"`
	TargetBackupVault       string                             `pulumi:"targetBackupVault"`
}

// BackupPlanBackupRuleResourceTypeInput is an input type that accepts BackupPlanBackupRuleResourceTypeArgs and BackupPlanBackupRuleResourceTypeOutput values.
// You can construct a concrete instance of `BackupPlanBackupRuleResourceTypeInput` via:
//
//          BackupPlanBackupRuleResourceTypeArgs{...}
type BackupPlanBackupRuleResourceTypeInput interface {
	pulumi.Input

	ToBackupPlanBackupRuleResourceTypeOutput() BackupPlanBackupRuleResourceTypeOutput
	ToBackupPlanBackupRuleResourceTypeOutputWithContext(context.Context) BackupPlanBackupRuleResourceTypeOutput
}

type BackupPlanBackupRuleResourceTypeArgs struct {
	CompletionWindowMinutes pulumi.Float64PtrInput                     `pulumi:"completionWindowMinutes"`
	CopyActions             BackupPlanCopyActionResourceTypeArrayInput `pulumi:"copyActions"`
	EnableContinuousBackup  pulumi.BoolPtrInput                        `pulumi:"enableContinuousBackup"`
	Lifecycle               BackupPlanLifecycleResourceTypePtrInput    `pulumi:"lifecycle"`
	RecoveryPointTags       pulumi.Input                               `pulumi:"recoveryPointTags"`
	RuleName                pulumi.StringInput                         `pulumi:"ruleName"`
	ScheduleExpression      pulumi.StringPtrInput                      `pulumi:"scheduleExpression"`
	StartWindowMinutes      pulumi.Float64PtrInput                     `pulumi:"startWindowMinutes"`
	TargetBackupVault       pulumi.StringInput                         `pulumi:"targetBackupVault"`
}

func (BackupPlanBackupRuleResourceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPlanBackupRuleResourceType)(nil)).Elem()
}

func (i BackupPlanBackupRuleResourceTypeArgs) ToBackupPlanBackupRuleResourceTypeOutput() BackupPlanBackupRuleResourceTypeOutput {
	return i.ToBackupPlanBackupRuleResourceTypeOutputWithContext(context.Background())
}

func (i BackupPlanBackupRuleResourceTypeArgs) ToBackupPlanBackupRuleResourceTypeOutputWithContext(ctx context.Context) BackupPlanBackupRuleResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanBackupRuleResourceTypeOutput)
}

// BackupPlanBackupRuleResourceTypeArrayInput is an input type that accepts BackupPlanBackupRuleResourceTypeArray and BackupPlanBackupRuleResourceTypeArrayOutput values.
// You can construct a concrete instance of `BackupPlanBackupRuleResourceTypeArrayInput` via:
//
//          BackupPlanBackupRuleResourceTypeArray{ BackupPlanBackupRuleResourceTypeArgs{...} }
type BackupPlanBackupRuleResourceTypeArrayInput interface {
	pulumi.Input

	ToBackupPlanBackupRuleResourceTypeArrayOutput() BackupPlanBackupRuleResourceTypeArrayOutput
	ToBackupPlanBackupRuleResourceTypeArrayOutputWithContext(context.Context) BackupPlanBackupRuleResourceTypeArrayOutput
}

type BackupPlanBackupRuleResourceTypeArray []BackupPlanBackupRuleResourceTypeInput

func (BackupPlanBackupRuleResourceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupPlanBackupRuleResourceType)(nil)).Elem()
}

func (i BackupPlanBackupRuleResourceTypeArray) ToBackupPlanBackupRuleResourceTypeArrayOutput() BackupPlanBackupRuleResourceTypeArrayOutput {
	return i.ToBackupPlanBackupRuleResourceTypeArrayOutputWithContext(context.Background())
}

func (i BackupPlanBackupRuleResourceTypeArray) ToBackupPlanBackupRuleResourceTypeArrayOutputWithContext(ctx context.Context) BackupPlanBackupRuleResourceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanBackupRuleResourceTypeArrayOutput)
}

type BackupPlanBackupRuleResourceTypeOutput struct{ *pulumi.OutputState }

func (BackupPlanBackupRuleResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPlanBackupRuleResourceType)(nil)).Elem()
}

func (o BackupPlanBackupRuleResourceTypeOutput) ToBackupPlanBackupRuleResourceTypeOutput() BackupPlanBackupRuleResourceTypeOutput {
	return o
}

func (o BackupPlanBackupRuleResourceTypeOutput) ToBackupPlanBackupRuleResourceTypeOutputWithContext(ctx context.Context) BackupPlanBackupRuleResourceTypeOutput {
	return o
}

func (o BackupPlanBackupRuleResourceTypeOutput) CompletionWindowMinutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BackupPlanBackupRuleResourceType) *float64 { return v.CompletionWindowMinutes }).(pulumi.Float64PtrOutput)
}

func (o BackupPlanBackupRuleResourceTypeOutput) CopyActions() BackupPlanCopyActionResourceTypeArrayOutput {
	return o.ApplyT(func(v BackupPlanBackupRuleResourceType) []BackupPlanCopyActionResourceType { return v.CopyActions }).(BackupPlanCopyActionResourceTypeArrayOutput)
}

func (o BackupPlanBackupRuleResourceTypeOutput) EnableContinuousBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BackupPlanBackupRuleResourceType) *bool { return v.EnableContinuousBackup }).(pulumi.BoolPtrOutput)
}

func (o BackupPlanBackupRuleResourceTypeOutput) Lifecycle() BackupPlanLifecycleResourceTypePtrOutput {
	return o.ApplyT(func(v BackupPlanBackupRuleResourceType) *BackupPlanLifecycleResourceType { return v.Lifecycle }).(BackupPlanLifecycleResourceTypePtrOutput)
}

func (o BackupPlanBackupRuleResourceTypeOutput) RecoveryPointTags() pulumi.AnyOutput {
	return o.ApplyT(func(v BackupPlanBackupRuleResourceType) interface{} { return v.RecoveryPointTags }).(pulumi.AnyOutput)
}

func (o BackupPlanBackupRuleResourceTypeOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPlanBackupRuleResourceType) string { return v.RuleName }).(pulumi.StringOutput)
}

func (o BackupPlanBackupRuleResourceTypeOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupPlanBackupRuleResourceType) *string { return v.ScheduleExpression }).(pulumi.StringPtrOutput)
}

func (o BackupPlanBackupRuleResourceTypeOutput) StartWindowMinutes() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BackupPlanBackupRuleResourceType) *float64 { return v.StartWindowMinutes }).(pulumi.Float64PtrOutput)
}

func (o BackupPlanBackupRuleResourceTypeOutput) TargetBackupVault() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPlanBackupRuleResourceType) string { return v.TargetBackupVault }).(pulumi.StringOutput)
}

type BackupPlanBackupRuleResourceTypeArrayOutput struct{ *pulumi.OutputState }

func (BackupPlanBackupRuleResourceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupPlanBackupRuleResourceType)(nil)).Elem()
}

func (o BackupPlanBackupRuleResourceTypeArrayOutput) ToBackupPlanBackupRuleResourceTypeArrayOutput() BackupPlanBackupRuleResourceTypeArrayOutput {
	return o
}

func (o BackupPlanBackupRuleResourceTypeArrayOutput) ToBackupPlanBackupRuleResourceTypeArrayOutputWithContext(ctx context.Context) BackupPlanBackupRuleResourceTypeArrayOutput {
	return o
}

func (o BackupPlanBackupRuleResourceTypeArrayOutput) Index(i pulumi.IntInput) BackupPlanBackupRuleResourceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupPlanBackupRuleResourceType {
		return vs[0].([]BackupPlanBackupRuleResourceType)[vs[1].(int)]
	}).(BackupPlanBackupRuleResourceTypeOutput)
}

type BackupPlanCopyActionResourceType struct {
	DestinationBackupVaultArn string                           `pulumi:"destinationBackupVaultArn"`
	Lifecycle                 *BackupPlanLifecycleResourceType `pulumi:"lifecycle"`
}

// BackupPlanCopyActionResourceTypeInput is an input type that accepts BackupPlanCopyActionResourceTypeArgs and BackupPlanCopyActionResourceTypeOutput values.
// You can construct a concrete instance of `BackupPlanCopyActionResourceTypeInput` via:
//
//          BackupPlanCopyActionResourceTypeArgs{...}
type BackupPlanCopyActionResourceTypeInput interface {
	pulumi.Input

	ToBackupPlanCopyActionResourceTypeOutput() BackupPlanCopyActionResourceTypeOutput
	ToBackupPlanCopyActionResourceTypeOutputWithContext(context.Context) BackupPlanCopyActionResourceTypeOutput
}

type BackupPlanCopyActionResourceTypeArgs struct {
	DestinationBackupVaultArn pulumi.StringInput                      `pulumi:"destinationBackupVaultArn"`
	Lifecycle                 BackupPlanLifecycleResourceTypePtrInput `pulumi:"lifecycle"`
}

func (BackupPlanCopyActionResourceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPlanCopyActionResourceType)(nil)).Elem()
}

func (i BackupPlanCopyActionResourceTypeArgs) ToBackupPlanCopyActionResourceTypeOutput() BackupPlanCopyActionResourceTypeOutput {
	return i.ToBackupPlanCopyActionResourceTypeOutputWithContext(context.Background())
}

func (i BackupPlanCopyActionResourceTypeArgs) ToBackupPlanCopyActionResourceTypeOutputWithContext(ctx context.Context) BackupPlanCopyActionResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanCopyActionResourceTypeOutput)
}

// BackupPlanCopyActionResourceTypeArrayInput is an input type that accepts BackupPlanCopyActionResourceTypeArray and BackupPlanCopyActionResourceTypeArrayOutput values.
// You can construct a concrete instance of `BackupPlanCopyActionResourceTypeArrayInput` via:
//
//          BackupPlanCopyActionResourceTypeArray{ BackupPlanCopyActionResourceTypeArgs{...} }
type BackupPlanCopyActionResourceTypeArrayInput interface {
	pulumi.Input

	ToBackupPlanCopyActionResourceTypeArrayOutput() BackupPlanCopyActionResourceTypeArrayOutput
	ToBackupPlanCopyActionResourceTypeArrayOutputWithContext(context.Context) BackupPlanCopyActionResourceTypeArrayOutput
}

type BackupPlanCopyActionResourceTypeArray []BackupPlanCopyActionResourceTypeInput

func (BackupPlanCopyActionResourceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupPlanCopyActionResourceType)(nil)).Elem()
}

func (i BackupPlanCopyActionResourceTypeArray) ToBackupPlanCopyActionResourceTypeArrayOutput() BackupPlanCopyActionResourceTypeArrayOutput {
	return i.ToBackupPlanCopyActionResourceTypeArrayOutputWithContext(context.Background())
}

func (i BackupPlanCopyActionResourceTypeArray) ToBackupPlanCopyActionResourceTypeArrayOutputWithContext(ctx context.Context) BackupPlanCopyActionResourceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanCopyActionResourceTypeArrayOutput)
}

type BackupPlanCopyActionResourceTypeOutput struct{ *pulumi.OutputState }

func (BackupPlanCopyActionResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPlanCopyActionResourceType)(nil)).Elem()
}

func (o BackupPlanCopyActionResourceTypeOutput) ToBackupPlanCopyActionResourceTypeOutput() BackupPlanCopyActionResourceTypeOutput {
	return o
}

func (o BackupPlanCopyActionResourceTypeOutput) ToBackupPlanCopyActionResourceTypeOutputWithContext(ctx context.Context) BackupPlanCopyActionResourceTypeOutput {
	return o
}

func (o BackupPlanCopyActionResourceTypeOutput) DestinationBackupVaultArn() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPlanCopyActionResourceType) string { return v.DestinationBackupVaultArn }).(pulumi.StringOutput)
}

func (o BackupPlanCopyActionResourceTypeOutput) Lifecycle() BackupPlanLifecycleResourceTypePtrOutput {
	return o.ApplyT(func(v BackupPlanCopyActionResourceType) *BackupPlanLifecycleResourceType { return v.Lifecycle }).(BackupPlanLifecycleResourceTypePtrOutput)
}

type BackupPlanCopyActionResourceTypeArrayOutput struct{ *pulumi.OutputState }

func (BackupPlanCopyActionResourceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupPlanCopyActionResourceType)(nil)).Elem()
}

func (o BackupPlanCopyActionResourceTypeArrayOutput) ToBackupPlanCopyActionResourceTypeArrayOutput() BackupPlanCopyActionResourceTypeArrayOutput {
	return o
}

func (o BackupPlanCopyActionResourceTypeArrayOutput) ToBackupPlanCopyActionResourceTypeArrayOutputWithContext(ctx context.Context) BackupPlanCopyActionResourceTypeArrayOutput {
	return o
}

func (o BackupPlanCopyActionResourceTypeArrayOutput) Index(i pulumi.IntInput) BackupPlanCopyActionResourceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupPlanCopyActionResourceType {
		return vs[0].([]BackupPlanCopyActionResourceType)[vs[1].(int)]
	}).(BackupPlanCopyActionResourceTypeOutput)
}

type BackupPlanLifecycleResourceType struct {
	DeleteAfterDays            *float64 `pulumi:"deleteAfterDays"`
	MoveToColdStorageAfterDays *float64 `pulumi:"moveToColdStorageAfterDays"`
}

// BackupPlanLifecycleResourceTypeInput is an input type that accepts BackupPlanLifecycleResourceTypeArgs and BackupPlanLifecycleResourceTypeOutput values.
// You can construct a concrete instance of `BackupPlanLifecycleResourceTypeInput` via:
//
//          BackupPlanLifecycleResourceTypeArgs{...}
type BackupPlanLifecycleResourceTypeInput interface {
	pulumi.Input

	ToBackupPlanLifecycleResourceTypeOutput() BackupPlanLifecycleResourceTypeOutput
	ToBackupPlanLifecycleResourceTypeOutputWithContext(context.Context) BackupPlanLifecycleResourceTypeOutput
}

type BackupPlanLifecycleResourceTypeArgs struct {
	DeleteAfterDays            pulumi.Float64PtrInput `pulumi:"deleteAfterDays"`
	MoveToColdStorageAfterDays pulumi.Float64PtrInput `pulumi:"moveToColdStorageAfterDays"`
}

func (BackupPlanLifecycleResourceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPlanLifecycleResourceType)(nil)).Elem()
}

func (i BackupPlanLifecycleResourceTypeArgs) ToBackupPlanLifecycleResourceTypeOutput() BackupPlanLifecycleResourceTypeOutput {
	return i.ToBackupPlanLifecycleResourceTypeOutputWithContext(context.Background())
}

func (i BackupPlanLifecycleResourceTypeArgs) ToBackupPlanLifecycleResourceTypeOutputWithContext(ctx context.Context) BackupPlanLifecycleResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanLifecycleResourceTypeOutput)
}

func (i BackupPlanLifecycleResourceTypeArgs) ToBackupPlanLifecycleResourceTypePtrOutput() BackupPlanLifecycleResourceTypePtrOutput {
	return i.ToBackupPlanLifecycleResourceTypePtrOutputWithContext(context.Background())
}

func (i BackupPlanLifecycleResourceTypeArgs) ToBackupPlanLifecycleResourceTypePtrOutputWithContext(ctx context.Context) BackupPlanLifecycleResourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanLifecycleResourceTypeOutput).ToBackupPlanLifecycleResourceTypePtrOutputWithContext(ctx)
}

// BackupPlanLifecycleResourceTypePtrInput is an input type that accepts BackupPlanLifecycleResourceTypeArgs, BackupPlanLifecycleResourceTypePtr and BackupPlanLifecycleResourceTypePtrOutput values.
// You can construct a concrete instance of `BackupPlanLifecycleResourceTypePtrInput` via:
//
//          BackupPlanLifecycleResourceTypeArgs{...}
//
//  or:
//
//          nil
type BackupPlanLifecycleResourceTypePtrInput interface {
	pulumi.Input

	ToBackupPlanLifecycleResourceTypePtrOutput() BackupPlanLifecycleResourceTypePtrOutput
	ToBackupPlanLifecycleResourceTypePtrOutputWithContext(context.Context) BackupPlanLifecycleResourceTypePtrOutput
}

type backupPlanLifecycleResourceTypePtrType BackupPlanLifecycleResourceTypeArgs

func BackupPlanLifecycleResourceTypePtr(v *BackupPlanLifecycleResourceTypeArgs) BackupPlanLifecycleResourceTypePtrInput {
	return (*backupPlanLifecycleResourceTypePtrType)(v)
}

func (*backupPlanLifecycleResourceTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPlanLifecycleResourceType)(nil)).Elem()
}

func (i *backupPlanLifecycleResourceTypePtrType) ToBackupPlanLifecycleResourceTypePtrOutput() BackupPlanLifecycleResourceTypePtrOutput {
	return i.ToBackupPlanLifecycleResourceTypePtrOutputWithContext(context.Background())
}

func (i *backupPlanLifecycleResourceTypePtrType) ToBackupPlanLifecycleResourceTypePtrOutputWithContext(ctx context.Context) BackupPlanLifecycleResourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanLifecycleResourceTypePtrOutput)
}

type BackupPlanLifecycleResourceTypeOutput struct{ *pulumi.OutputState }

func (BackupPlanLifecycleResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPlanLifecycleResourceType)(nil)).Elem()
}

func (o BackupPlanLifecycleResourceTypeOutput) ToBackupPlanLifecycleResourceTypeOutput() BackupPlanLifecycleResourceTypeOutput {
	return o
}

func (o BackupPlanLifecycleResourceTypeOutput) ToBackupPlanLifecycleResourceTypeOutputWithContext(ctx context.Context) BackupPlanLifecycleResourceTypeOutput {
	return o
}

func (o BackupPlanLifecycleResourceTypeOutput) ToBackupPlanLifecycleResourceTypePtrOutput() BackupPlanLifecycleResourceTypePtrOutput {
	return o.ToBackupPlanLifecycleResourceTypePtrOutputWithContext(context.Background())
}

func (o BackupPlanLifecycleResourceTypeOutput) ToBackupPlanLifecycleResourceTypePtrOutputWithContext(ctx context.Context) BackupPlanLifecycleResourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupPlanLifecycleResourceType) *BackupPlanLifecycleResourceType {
		return &v
	}).(BackupPlanLifecycleResourceTypePtrOutput)
}

func (o BackupPlanLifecycleResourceTypeOutput) DeleteAfterDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BackupPlanLifecycleResourceType) *float64 { return v.DeleteAfterDays }).(pulumi.Float64PtrOutput)
}

func (o BackupPlanLifecycleResourceTypeOutput) MoveToColdStorageAfterDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BackupPlanLifecycleResourceType) *float64 { return v.MoveToColdStorageAfterDays }).(pulumi.Float64PtrOutput)
}

type BackupPlanLifecycleResourceTypePtrOutput struct{ *pulumi.OutputState }

func (BackupPlanLifecycleResourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPlanLifecycleResourceType)(nil)).Elem()
}

func (o BackupPlanLifecycleResourceTypePtrOutput) ToBackupPlanLifecycleResourceTypePtrOutput() BackupPlanLifecycleResourceTypePtrOutput {
	return o
}

func (o BackupPlanLifecycleResourceTypePtrOutput) ToBackupPlanLifecycleResourceTypePtrOutputWithContext(ctx context.Context) BackupPlanLifecycleResourceTypePtrOutput {
	return o
}

func (o BackupPlanLifecycleResourceTypePtrOutput) Elem() BackupPlanLifecycleResourceTypeOutput {
	return o.ApplyT(func(v *BackupPlanLifecycleResourceType) BackupPlanLifecycleResourceType {
		if v != nil {
			return *v
		}
		var ret BackupPlanLifecycleResourceType
		return ret
	}).(BackupPlanLifecycleResourceTypeOutput)
}

func (o BackupPlanLifecycleResourceTypePtrOutput) DeleteAfterDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BackupPlanLifecycleResourceType) *float64 {
		if v == nil {
			return nil
		}
		return v.DeleteAfterDays
	}).(pulumi.Float64PtrOutput)
}

func (o BackupPlanLifecycleResourceTypePtrOutput) MoveToColdStorageAfterDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BackupPlanLifecycleResourceType) *float64 {
		if v == nil {
			return nil
		}
		return v.MoveToColdStorageAfterDays
	}).(pulumi.Float64PtrOutput)
}

type BackupPlanResourceType struct {
	AdvancedBackupSettings []BackupPlanAdvancedBackupSettingResourceType `pulumi:"advancedBackupSettings"`
	BackupPlanName         string                                        `pulumi:"backupPlanName"`
	BackupPlanRule         []BackupPlanBackupRuleResourceType            `pulumi:"backupPlanRule"`
}

// BackupPlanResourceTypeInput is an input type that accepts BackupPlanResourceTypeArgs and BackupPlanResourceTypeOutput values.
// You can construct a concrete instance of `BackupPlanResourceTypeInput` via:
//
//          BackupPlanResourceTypeArgs{...}
type BackupPlanResourceTypeInput interface {
	pulumi.Input

	ToBackupPlanResourceTypeOutput() BackupPlanResourceTypeOutput
	ToBackupPlanResourceTypeOutputWithContext(context.Context) BackupPlanResourceTypeOutput
}

type BackupPlanResourceTypeArgs struct {
	AdvancedBackupSettings BackupPlanAdvancedBackupSettingResourceTypeArrayInput `pulumi:"advancedBackupSettings"`
	BackupPlanName         pulumi.StringInput                                    `pulumi:"backupPlanName"`
	BackupPlanRule         BackupPlanBackupRuleResourceTypeArrayInput            `pulumi:"backupPlanRule"`
}

func (BackupPlanResourceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPlanResourceType)(nil)).Elem()
}

func (i BackupPlanResourceTypeArgs) ToBackupPlanResourceTypeOutput() BackupPlanResourceTypeOutput {
	return i.ToBackupPlanResourceTypeOutputWithContext(context.Background())
}

func (i BackupPlanResourceTypeArgs) ToBackupPlanResourceTypeOutputWithContext(ctx context.Context) BackupPlanResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanResourceTypeOutput)
}

func (i BackupPlanResourceTypeArgs) ToBackupPlanResourceTypePtrOutput() BackupPlanResourceTypePtrOutput {
	return i.ToBackupPlanResourceTypePtrOutputWithContext(context.Background())
}

func (i BackupPlanResourceTypeArgs) ToBackupPlanResourceTypePtrOutputWithContext(ctx context.Context) BackupPlanResourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanResourceTypeOutput).ToBackupPlanResourceTypePtrOutputWithContext(ctx)
}

// BackupPlanResourceTypePtrInput is an input type that accepts BackupPlanResourceTypeArgs, BackupPlanResourceTypePtr and BackupPlanResourceTypePtrOutput values.
// You can construct a concrete instance of `BackupPlanResourceTypePtrInput` via:
//
//          BackupPlanResourceTypeArgs{...}
//
//  or:
//
//          nil
type BackupPlanResourceTypePtrInput interface {
	pulumi.Input

	ToBackupPlanResourceTypePtrOutput() BackupPlanResourceTypePtrOutput
	ToBackupPlanResourceTypePtrOutputWithContext(context.Context) BackupPlanResourceTypePtrOutput
}

type backupPlanResourceTypePtrType BackupPlanResourceTypeArgs

func BackupPlanResourceTypePtr(v *BackupPlanResourceTypeArgs) BackupPlanResourceTypePtrInput {
	return (*backupPlanResourceTypePtrType)(v)
}

func (*backupPlanResourceTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPlanResourceType)(nil)).Elem()
}

func (i *backupPlanResourceTypePtrType) ToBackupPlanResourceTypePtrOutput() BackupPlanResourceTypePtrOutput {
	return i.ToBackupPlanResourceTypePtrOutputWithContext(context.Background())
}

func (i *backupPlanResourceTypePtrType) ToBackupPlanResourceTypePtrOutputWithContext(ctx context.Context) BackupPlanResourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPlanResourceTypePtrOutput)
}

type BackupPlanResourceTypeOutput struct{ *pulumi.OutputState }

func (BackupPlanResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPlanResourceType)(nil)).Elem()
}

func (o BackupPlanResourceTypeOutput) ToBackupPlanResourceTypeOutput() BackupPlanResourceTypeOutput {
	return o
}

func (o BackupPlanResourceTypeOutput) ToBackupPlanResourceTypeOutputWithContext(ctx context.Context) BackupPlanResourceTypeOutput {
	return o
}

func (o BackupPlanResourceTypeOutput) ToBackupPlanResourceTypePtrOutput() BackupPlanResourceTypePtrOutput {
	return o.ToBackupPlanResourceTypePtrOutputWithContext(context.Background())
}

func (o BackupPlanResourceTypeOutput) ToBackupPlanResourceTypePtrOutputWithContext(ctx context.Context) BackupPlanResourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupPlanResourceType) *BackupPlanResourceType {
		return &v
	}).(BackupPlanResourceTypePtrOutput)
}

func (o BackupPlanResourceTypeOutput) AdvancedBackupSettings() BackupPlanAdvancedBackupSettingResourceTypeArrayOutput {
	return o.ApplyT(func(v BackupPlanResourceType) []BackupPlanAdvancedBackupSettingResourceType {
		return v.AdvancedBackupSettings
	}).(BackupPlanAdvancedBackupSettingResourceTypeArrayOutput)
}

func (o BackupPlanResourceTypeOutput) BackupPlanName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPlanResourceType) string { return v.BackupPlanName }).(pulumi.StringOutput)
}

func (o BackupPlanResourceTypeOutput) BackupPlanRule() BackupPlanBackupRuleResourceTypeArrayOutput {
	return o.ApplyT(func(v BackupPlanResourceType) []BackupPlanBackupRuleResourceType { return v.BackupPlanRule }).(BackupPlanBackupRuleResourceTypeArrayOutput)
}

type BackupPlanResourceTypePtrOutput struct{ *pulumi.OutputState }

func (BackupPlanResourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPlanResourceType)(nil)).Elem()
}

func (o BackupPlanResourceTypePtrOutput) ToBackupPlanResourceTypePtrOutput() BackupPlanResourceTypePtrOutput {
	return o
}

func (o BackupPlanResourceTypePtrOutput) ToBackupPlanResourceTypePtrOutputWithContext(ctx context.Context) BackupPlanResourceTypePtrOutput {
	return o
}

func (o BackupPlanResourceTypePtrOutput) Elem() BackupPlanResourceTypeOutput {
	return o.ApplyT(func(v *BackupPlanResourceType) BackupPlanResourceType {
		if v != nil {
			return *v
		}
		var ret BackupPlanResourceType
		return ret
	}).(BackupPlanResourceTypeOutput)
}

func (o BackupPlanResourceTypePtrOutput) AdvancedBackupSettings() BackupPlanAdvancedBackupSettingResourceTypeArrayOutput {
	return o.ApplyT(func(v *BackupPlanResourceType) []BackupPlanAdvancedBackupSettingResourceType {
		if v == nil {
			return nil
		}
		return v.AdvancedBackupSettings
	}).(BackupPlanAdvancedBackupSettingResourceTypeArrayOutput)
}

func (o BackupPlanResourceTypePtrOutput) BackupPlanName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPlanResourceType) *string {
		if v == nil {
			return nil
		}
		return &v.BackupPlanName
	}).(pulumi.StringPtrOutput)
}

func (o BackupPlanResourceTypePtrOutput) BackupPlanRule() BackupPlanBackupRuleResourceTypeArrayOutput {
	return o.ApplyT(func(v *BackupPlanResourceType) []BackupPlanBackupRuleResourceType {
		if v == nil {
			return nil
		}
		return v.BackupPlanRule
	}).(BackupPlanBackupRuleResourceTypeArrayOutput)
}

type BackupSelectionConditionParameter struct {
	ConditionKey   *string `pulumi:"conditionKey"`
	ConditionValue *string `pulumi:"conditionValue"`
}

// BackupSelectionConditionParameterInput is an input type that accepts BackupSelectionConditionParameterArgs and BackupSelectionConditionParameterOutput values.
// You can construct a concrete instance of `BackupSelectionConditionParameterInput` via:
//
//          BackupSelectionConditionParameterArgs{...}
type BackupSelectionConditionParameterInput interface {
	pulumi.Input

	ToBackupSelectionConditionParameterOutput() BackupSelectionConditionParameterOutput
	ToBackupSelectionConditionParameterOutputWithContext(context.Context) BackupSelectionConditionParameterOutput
}

type BackupSelectionConditionParameterArgs struct {
	ConditionKey   pulumi.StringPtrInput `pulumi:"conditionKey"`
	ConditionValue pulumi.StringPtrInput `pulumi:"conditionValue"`
}

func (BackupSelectionConditionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSelectionConditionParameter)(nil)).Elem()
}

func (i BackupSelectionConditionParameterArgs) ToBackupSelectionConditionParameterOutput() BackupSelectionConditionParameterOutput {
	return i.ToBackupSelectionConditionParameterOutputWithContext(context.Background())
}

func (i BackupSelectionConditionParameterArgs) ToBackupSelectionConditionParameterOutputWithContext(ctx context.Context) BackupSelectionConditionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSelectionConditionParameterOutput)
}

// BackupSelectionConditionParameterArrayInput is an input type that accepts BackupSelectionConditionParameterArray and BackupSelectionConditionParameterArrayOutput values.
// You can construct a concrete instance of `BackupSelectionConditionParameterArrayInput` via:
//
//          BackupSelectionConditionParameterArray{ BackupSelectionConditionParameterArgs{...} }
type BackupSelectionConditionParameterArrayInput interface {
	pulumi.Input

	ToBackupSelectionConditionParameterArrayOutput() BackupSelectionConditionParameterArrayOutput
	ToBackupSelectionConditionParameterArrayOutputWithContext(context.Context) BackupSelectionConditionParameterArrayOutput
}

type BackupSelectionConditionParameterArray []BackupSelectionConditionParameterInput

func (BackupSelectionConditionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupSelectionConditionParameter)(nil)).Elem()
}

func (i BackupSelectionConditionParameterArray) ToBackupSelectionConditionParameterArrayOutput() BackupSelectionConditionParameterArrayOutput {
	return i.ToBackupSelectionConditionParameterArrayOutputWithContext(context.Background())
}

func (i BackupSelectionConditionParameterArray) ToBackupSelectionConditionParameterArrayOutputWithContext(ctx context.Context) BackupSelectionConditionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSelectionConditionParameterArrayOutput)
}

type BackupSelectionConditionParameterOutput struct{ *pulumi.OutputState }

func (BackupSelectionConditionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSelectionConditionParameter)(nil)).Elem()
}

func (o BackupSelectionConditionParameterOutput) ToBackupSelectionConditionParameterOutput() BackupSelectionConditionParameterOutput {
	return o
}

func (o BackupSelectionConditionParameterOutput) ToBackupSelectionConditionParameterOutputWithContext(ctx context.Context) BackupSelectionConditionParameterOutput {
	return o
}

func (o BackupSelectionConditionParameterOutput) ConditionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSelectionConditionParameter) *string { return v.ConditionKey }).(pulumi.StringPtrOutput)
}

func (o BackupSelectionConditionParameterOutput) ConditionValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BackupSelectionConditionParameter) *string { return v.ConditionValue }).(pulumi.StringPtrOutput)
}

type BackupSelectionConditionParameterArrayOutput struct{ *pulumi.OutputState }

func (BackupSelectionConditionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupSelectionConditionParameter)(nil)).Elem()
}

func (o BackupSelectionConditionParameterArrayOutput) ToBackupSelectionConditionParameterArrayOutput() BackupSelectionConditionParameterArrayOutput {
	return o
}

func (o BackupSelectionConditionParameterArrayOutput) ToBackupSelectionConditionParameterArrayOutputWithContext(ctx context.Context) BackupSelectionConditionParameterArrayOutput {
	return o
}

func (o BackupSelectionConditionParameterArrayOutput) Index(i pulumi.IntInput) BackupSelectionConditionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupSelectionConditionParameter {
		return vs[0].([]BackupSelectionConditionParameter)[vs[1].(int)]
	}).(BackupSelectionConditionParameterOutput)
}

type BackupSelectionConditionResourceType struct {
	ConditionKey   string `pulumi:"conditionKey"`
	ConditionType  string `pulumi:"conditionType"`
	ConditionValue string `pulumi:"conditionValue"`
}

// BackupSelectionConditionResourceTypeInput is an input type that accepts BackupSelectionConditionResourceTypeArgs and BackupSelectionConditionResourceTypeOutput values.
// You can construct a concrete instance of `BackupSelectionConditionResourceTypeInput` via:
//
//          BackupSelectionConditionResourceTypeArgs{...}
type BackupSelectionConditionResourceTypeInput interface {
	pulumi.Input

	ToBackupSelectionConditionResourceTypeOutput() BackupSelectionConditionResourceTypeOutput
	ToBackupSelectionConditionResourceTypeOutputWithContext(context.Context) BackupSelectionConditionResourceTypeOutput
}

type BackupSelectionConditionResourceTypeArgs struct {
	ConditionKey   pulumi.StringInput `pulumi:"conditionKey"`
	ConditionType  pulumi.StringInput `pulumi:"conditionType"`
	ConditionValue pulumi.StringInput `pulumi:"conditionValue"`
}

func (BackupSelectionConditionResourceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSelectionConditionResourceType)(nil)).Elem()
}

func (i BackupSelectionConditionResourceTypeArgs) ToBackupSelectionConditionResourceTypeOutput() BackupSelectionConditionResourceTypeOutput {
	return i.ToBackupSelectionConditionResourceTypeOutputWithContext(context.Background())
}

func (i BackupSelectionConditionResourceTypeArgs) ToBackupSelectionConditionResourceTypeOutputWithContext(ctx context.Context) BackupSelectionConditionResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSelectionConditionResourceTypeOutput)
}

// BackupSelectionConditionResourceTypeArrayInput is an input type that accepts BackupSelectionConditionResourceTypeArray and BackupSelectionConditionResourceTypeArrayOutput values.
// You can construct a concrete instance of `BackupSelectionConditionResourceTypeArrayInput` via:
//
//          BackupSelectionConditionResourceTypeArray{ BackupSelectionConditionResourceTypeArgs{...} }
type BackupSelectionConditionResourceTypeArrayInput interface {
	pulumi.Input

	ToBackupSelectionConditionResourceTypeArrayOutput() BackupSelectionConditionResourceTypeArrayOutput
	ToBackupSelectionConditionResourceTypeArrayOutputWithContext(context.Context) BackupSelectionConditionResourceTypeArrayOutput
}

type BackupSelectionConditionResourceTypeArray []BackupSelectionConditionResourceTypeInput

func (BackupSelectionConditionResourceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupSelectionConditionResourceType)(nil)).Elem()
}

func (i BackupSelectionConditionResourceTypeArray) ToBackupSelectionConditionResourceTypeArrayOutput() BackupSelectionConditionResourceTypeArrayOutput {
	return i.ToBackupSelectionConditionResourceTypeArrayOutputWithContext(context.Background())
}

func (i BackupSelectionConditionResourceTypeArray) ToBackupSelectionConditionResourceTypeArrayOutputWithContext(ctx context.Context) BackupSelectionConditionResourceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSelectionConditionResourceTypeArrayOutput)
}

type BackupSelectionConditionResourceTypeOutput struct{ *pulumi.OutputState }

func (BackupSelectionConditionResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSelectionConditionResourceType)(nil)).Elem()
}

func (o BackupSelectionConditionResourceTypeOutput) ToBackupSelectionConditionResourceTypeOutput() BackupSelectionConditionResourceTypeOutput {
	return o
}

func (o BackupSelectionConditionResourceTypeOutput) ToBackupSelectionConditionResourceTypeOutputWithContext(ctx context.Context) BackupSelectionConditionResourceTypeOutput {
	return o
}

func (o BackupSelectionConditionResourceTypeOutput) ConditionKey() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSelectionConditionResourceType) string { return v.ConditionKey }).(pulumi.StringOutput)
}

func (o BackupSelectionConditionResourceTypeOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSelectionConditionResourceType) string { return v.ConditionType }).(pulumi.StringOutput)
}

func (o BackupSelectionConditionResourceTypeOutput) ConditionValue() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSelectionConditionResourceType) string { return v.ConditionValue }).(pulumi.StringOutput)
}

type BackupSelectionConditionResourceTypeArrayOutput struct{ *pulumi.OutputState }

func (BackupSelectionConditionResourceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BackupSelectionConditionResourceType)(nil)).Elem()
}

func (o BackupSelectionConditionResourceTypeArrayOutput) ToBackupSelectionConditionResourceTypeArrayOutput() BackupSelectionConditionResourceTypeArrayOutput {
	return o
}

func (o BackupSelectionConditionResourceTypeArrayOutput) ToBackupSelectionConditionResourceTypeArrayOutputWithContext(ctx context.Context) BackupSelectionConditionResourceTypeArrayOutput {
	return o
}

func (o BackupSelectionConditionResourceTypeArrayOutput) Index(i pulumi.IntInput) BackupSelectionConditionResourceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BackupSelectionConditionResourceType {
		return vs[0].([]BackupSelectionConditionResourceType)[vs[1].(int)]
	}).(BackupSelectionConditionResourceTypeOutput)
}

type BackupSelectionResourceType struct {
	Conditions    *BackupSelectionResourceTypeConditionsProperties `pulumi:"conditions"`
	IamRoleArn    string                                           `pulumi:"iamRoleArn"`
	ListOfTags    []BackupSelectionConditionResourceType           `pulumi:"listOfTags"`
	NotResources  []string                                         `pulumi:"notResources"`
	Resources     []string                                         `pulumi:"resources"`
	SelectionName string                                           `pulumi:"selectionName"`
}

// BackupSelectionResourceTypeInput is an input type that accepts BackupSelectionResourceTypeArgs and BackupSelectionResourceTypeOutput values.
// You can construct a concrete instance of `BackupSelectionResourceTypeInput` via:
//
//          BackupSelectionResourceTypeArgs{...}
type BackupSelectionResourceTypeInput interface {
	pulumi.Input

	ToBackupSelectionResourceTypeOutput() BackupSelectionResourceTypeOutput
	ToBackupSelectionResourceTypeOutputWithContext(context.Context) BackupSelectionResourceTypeOutput
}

type BackupSelectionResourceTypeArgs struct {
	Conditions    BackupSelectionResourceTypeConditionsPropertiesPtrInput `pulumi:"conditions"`
	IamRoleArn    pulumi.StringInput                                      `pulumi:"iamRoleArn"`
	ListOfTags    BackupSelectionConditionResourceTypeArrayInput          `pulumi:"listOfTags"`
	NotResources  pulumi.StringArrayInput                                 `pulumi:"notResources"`
	Resources     pulumi.StringArrayInput                                 `pulumi:"resources"`
	SelectionName pulumi.StringInput                                      `pulumi:"selectionName"`
}

func (BackupSelectionResourceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSelectionResourceType)(nil)).Elem()
}

func (i BackupSelectionResourceTypeArgs) ToBackupSelectionResourceTypeOutput() BackupSelectionResourceTypeOutput {
	return i.ToBackupSelectionResourceTypeOutputWithContext(context.Background())
}

func (i BackupSelectionResourceTypeArgs) ToBackupSelectionResourceTypeOutputWithContext(ctx context.Context) BackupSelectionResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSelectionResourceTypeOutput)
}

func (i BackupSelectionResourceTypeArgs) ToBackupSelectionResourceTypePtrOutput() BackupSelectionResourceTypePtrOutput {
	return i.ToBackupSelectionResourceTypePtrOutputWithContext(context.Background())
}

func (i BackupSelectionResourceTypeArgs) ToBackupSelectionResourceTypePtrOutputWithContext(ctx context.Context) BackupSelectionResourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSelectionResourceTypeOutput).ToBackupSelectionResourceTypePtrOutputWithContext(ctx)
}

// BackupSelectionResourceTypePtrInput is an input type that accepts BackupSelectionResourceTypeArgs, BackupSelectionResourceTypePtr and BackupSelectionResourceTypePtrOutput values.
// You can construct a concrete instance of `BackupSelectionResourceTypePtrInput` via:
//
//          BackupSelectionResourceTypeArgs{...}
//
//  or:
//
//          nil
type BackupSelectionResourceTypePtrInput interface {
	pulumi.Input

	ToBackupSelectionResourceTypePtrOutput() BackupSelectionResourceTypePtrOutput
	ToBackupSelectionResourceTypePtrOutputWithContext(context.Context) BackupSelectionResourceTypePtrOutput
}

type backupSelectionResourceTypePtrType BackupSelectionResourceTypeArgs

func BackupSelectionResourceTypePtr(v *BackupSelectionResourceTypeArgs) BackupSelectionResourceTypePtrInput {
	return (*backupSelectionResourceTypePtrType)(v)
}

func (*backupSelectionResourceTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSelectionResourceType)(nil)).Elem()
}

func (i *backupSelectionResourceTypePtrType) ToBackupSelectionResourceTypePtrOutput() BackupSelectionResourceTypePtrOutput {
	return i.ToBackupSelectionResourceTypePtrOutputWithContext(context.Background())
}

func (i *backupSelectionResourceTypePtrType) ToBackupSelectionResourceTypePtrOutputWithContext(ctx context.Context) BackupSelectionResourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSelectionResourceTypePtrOutput)
}

type BackupSelectionResourceTypeOutput struct{ *pulumi.OutputState }

func (BackupSelectionResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSelectionResourceType)(nil)).Elem()
}

func (o BackupSelectionResourceTypeOutput) ToBackupSelectionResourceTypeOutput() BackupSelectionResourceTypeOutput {
	return o
}

func (o BackupSelectionResourceTypeOutput) ToBackupSelectionResourceTypeOutputWithContext(ctx context.Context) BackupSelectionResourceTypeOutput {
	return o
}

func (o BackupSelectionResourceTypeOutput) ToBackupSelectionResourceTypePtrOutput() BackupSelectionResourceTypePtrOutput {
	return o.ToBackupSelectionResourceTypePtrOutputWithContext(context.Background())
}

func (o BackupSelectionResourceTypeOutput) ToBackupSelectionResourceTypePtrOutputWithContext(ctx context.Context) BackupSelectionResourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupSelectionResourceType) *BackupSelectionResourceType {
		return &v
	}).(BackupSelectionResourceTypePtrOutput)
}

func (o BackupSelectionResourceTypeOutput) Conditions() BackupSelectionResourceTypeConditionsPropertiesPtrOutput {
	return o.ApplyT(func(v BackupSelectionResourceType) *BackupSelectionResourceTypeConditionsProperties {
		return v.Conditions
	}).(BackupSelectionResourceTypeConditionsPropertiesPtrOutput)
}

func (o BackupSelectionResourceTypeOutput) IamRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSelectionResourceType) string { return v.IamRoleArn }).(pulumi.StringOutput)
}

func (o BackupSelectionResourceTypeOutput) ListOfTags() BackupSelectionConditionResourceTypeArrayOutput {
	return o.ApplyT(func(v BackupSelectionResourceType) []BackupSelectionConditionResourceType { return v.ListOfTags }).(BackupSelectionConditionResourceTypeArrayOutput)
}

func (o BackupSelectionResourceTypeOutput) NotResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupSelectionResourceType) []string { return v.NotResources }).(pulumi.StringArrayOutput)
}

func (o BackupSelectionResourceTypeOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupSelectionResourceType) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

func (o BackupSelectionResourceTypeOutput) SelectionName() pulumi.StringOutput {
	return o.ApplyT(func(v BackupSelectionResourceType) string { return v.SelectionName }).(pulumi.StringOutput)
}

type BackupSelectionResourceTypePtrOutput struct{ *pulumi.OutputState }

func (BackupSelectionResourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSelectionResourceType)(nil)).Elem()
}

func (o BackupSelectionResourceTypePtrOutput) ToBackupSelectionResourceTypePtrOutput() BackupSelectionResourceTypePtrOutput {
	return o
}

func (o BackupSelectionResourceTypePtrOutput) ToBackupSelectionResourceTypePtrOutputWithContext(ctx context.Context) BackupSelectionResourceTypePtrOutput {
	return o
}

func (o BackupSelectionResourceTypePtrOutput) Elem() BackupSelectionResourceTypeOutput {
	return o.ApplyT(func(v *BackupSelectionResourceType) BackupSelectionResourceType {
		if v != nil {
			return *v
		}
		var ret BackupSelectionResourceType
		return ret
	}).(BackupSelectionResourceTypeOutput)
}

func (o BackupSelectionResourceTypePtrOutput) Conditions() BackupSelectionResourceTypeConditionsPropertiesPtrOutput {
	return o.ApplyT(func(v *BackupSelectionResourceType) *BackupSelectionResourceTypeConditionsProperties {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(BackupSelectionResourceTypeConditionsPropertiesPtrOutput)
}

func (o BackupSelectionResourceTypePtrOutput) IamRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSelectionResourceType) *string {
		if v == nil {
			return nil
		}
		return &v.IamRoleArn
	}).(pulumi.StringPtrOutput)
}

func (o BackupSelectionResourceTypePtrOutput) ListOfTags() BackupSelectionConditionResourceTypeArrayOutput {
	return o.ApplyT(func(v *BackupSelectionResourceType) []BackupSelectionConditionResourceType {
		if v == nil {
			return nil
		}
		return v.ListOfTags
	}).(BackupSelectionConditionResourceTypeArrayOutput)
}

func (o BackupSelectionResourceTypePtrOutput) NotResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupSelectionResourceType) []string {
		if v == nil {
			return nil
		}
		return v.NotResources
	}).(pulumi.StringArrayOutput)
}

func (o BackupSelectionResourceTypePtrOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupSelectionResourceType) []string {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(pulumi.StringArrayOutput)
}

func (o BackupSelectionResourceTypePtrOutput) SelectionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupSelectionResourceType) *string {
		if v == nil {
			return nil
		}
		return &v.SelectionName
	}).(pulumi.StringPtrOutput)
}

type BackupSelectionResourceTypeConditionsProperties struct {
	StringEquals    []BackupSelectionConditionParameter `pulumi:"stringEquals"`
	StringLike      []BackupSelectionConditionParameter `pulumi:"stringLike"`
	StringNotEquals []BackupSelectionConditionParameter `pulumi:"stringNotEquals"`
	StringNotLike   []BackupSelectionConditionParameter `pulumi:"stringNotLike"`
}

// BackupSelectionResourceTypeConditionsPropertiesInput is an input type that accepts BackupSelectionResourceTypeConditionsPropertiesArgs and BackupSelectionResourceTypeConditionsPropertiesOutput values.
// You can construct a concrete instance of `BackupSelectionResourceTypeConditionsPropertiesInput` via:
//
//          BackupSelectionResourceTypeConditionsPropertiesArgs{...}
type BackupSelectionResourceTypeConditionsPropertiesInput interface {
	pulumi.Input

	ToBackupSelectionResourceTypeConditionsPropertiesOutput() BackupSelectionResourceTypeConditionsPropertiesOutput
	ToBackupSelectionResourceTypeConditionsPropertiesOutputWithContext(context.Context) BackupSelectionResourceTypeConditionsPropertiesOutput
}

type BackupSelectionResourceTypeConditionsPropertiesArgs struct {
	StringEquals    BackupSelectionConditionParameterArrayInput `pulumi:"stringEquals"`
	StringLike      BackupSelectionConditionParameterArrayInput `pulumi:"stringLike"`
	StringNotEquals BackupSelectionConditionParameterArrayInput `pulumi:"stringNotEquals"`
	StringNotLike   BackupSelectionConditionParameterArrayInput `pulumi:"stringNotLike"`
}

func (BackupSelectionResourceTypeConditionsPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSelectionResourceTypeConditionsProperties)(nil)).Elem()
}

func (i BackupSelectionResourceTypeConditionsPropertiesArgs) ToBackupSelectionResourceTypeConditionsPropertiesOutput() BackupSelectionResourceTypeConditionsPropertiesOutput {
	return i.ToBackupSelectionResourceTypeConditionsPropertiesOutputWithContext(context.Background())
}

func (i BackupSelectionResourceTypeConditionsPropertiesArgs) ToBackupSelectionResourceTypeConditionsPropertiesOutputWithContext(ctx context.Context) BackupSelectionResourceTypeConditionsPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSelectionResourceTypeConditionsPropertiesOutput)
}

func (i BackupSelectionResourceTypeConditionsPropertiesArgs) ToBackupSelectionResourceTypeConditionsPropertiesPtrOutput() BackupSelectionResourceTypeConditionsPropertiesPtrOutput {
	return i.ToBackupSelectionResourceTypeConditionsPropertiesPtrOutputWithContext(context.Background())
}

func (i BackupSelectionResourceTypeConditionsPropertiesArgs) ToBackupSelectionResourceTypeConditionsPropertiesPtrOutputWithContext(ctx context.Context) BackupSelectionResourceTypeConditionsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSelectionResourceTypeConditionsPropertiesOutput).ToBackupSelectionResourceTypeConditionsPropertiesPtrOutputWithContext(ctx)
}

// BackupSelectionResourceTypeConditionsPropertiesPtrInput is an input type that accepts BackupSelectionResourceTypeConditionsPropertiesArgs, BackupSelectionResourceTypeConditionsPropertiesPtr and BackupSelectionResourceTypeConditionsPropertiesPtrOutput values.
// You can construct a concrete instance of `BackupSelectionResourceTypeConditionsPropertiesPtrInput` via:
//
//          BackupSelectionResourceTypeConditionsPropertiesArgs{...}
//
//  or:
//
//          nil
type BackupSelectionResourceTypeConditionsPropertiesPtrInput interface {
	pulumi.Input

	ToBackupSelectionResourceTypeConditionsPropertiesPtrOutput() BackupSelectionResourceTypeConditionsPropertiesPtrOutput
	ToBackupSelectionResourceTypeConditionsPropertiesPtrOutputWithContext(context.Context) BackupSelectionResourceTypeConditionsPropertiesPtrOutput
}

type backupSelectionResourceTypeConditionsPropertiesPtrType BackupSelectionResourceTypeConditionsPropertiesArgs

func BackupSelectionResourceTypeConditionsPropertiesPtr(v *BackupSelectionResourceTypeConditionsPropertiesArgs) BackupSelectionResourceTypeConditionsPropertiesPtrInput {
	return (*backupSelectionResourceTypeConditionsPropertiesPtrType)(v)
}

func (*backupSelectionResourceTypeConditionsPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSelectionResourceTypeConditionsProperties)(nil)).Elem()
}

func (i *backupSelectionResourceTypeConditionsPropertiesPtrType) ToBackupSelectionResourceTypeConditionsPropertiesPtrOutput() BackupSelectionResourceTypeConditionsPropertiesPtrOutput {
	return i.ToBackupSelectionResourceTypeConditionsPropertiesPtrOutputWithContext(context.Background())
}

func (i *backupSelectionResourceTypeConditionsPropertiesPtrType) ToBackupSelectionResourceTypeConditionsPropertiesPtrOutputWithContext(ctx context.Context) BackupSelectionResourceTypeConditionsPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupSelectionResourceTypeConditionsPropertiesPtrOutput)
}

type BackupSelectionResourceTypeConditionsPropertiesOutput struct{ *pulumi.OutputState }

func (BackupSelectionResourceTypeConditionsPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupSelectionResourceTypeConditionsProperties)(nil)).Elem()
}

func (o BackupSelectionResourceTypeConditionsPropertiesOutput) ToBackupSelectionResourceTypeConditionsPropertiesOutput() BackupSelectionResourceTypeConditionsPropertiesOutput {
	return o
}

func (o BackupSelectionResourceTypeConditionsPropertiesOutput) ToBackupSelectionResourceTypeConditionsPropertiesOutputWithContext(ctx context.Context) BackupSelectionResourceTypeConditionsPropertiesOutput {
	return o
}

func (o BackupSelectionResourceTypeConditionsPropertiesOutput) ToBackupSelectionResourceTypeConditionsPropertiesPtrOutput() BackupSelectionResourceTypeConditionsPropertiesPtrOutput {
	return o.ToBackupSelectionResourceTypeConditionsPropertiesPtrOutputWithContext(context.Background())
}

func (o BackupSelectionResourceTypeConditionsPropertiesOutput) ToBackupSelectionResourceTypeConditionsPropertiesPtrOutputWithContext(ctx context.Context) BackupSelectionResourceTypeConditionsPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupSelectionResourceTypeConditionsProperties) *BackupSelectionResourceTypeConditionsProperties {
		return &v
	}).(BackupSelectionResourceTypeConditionsPropertiesPtrOutput)
}

func (o BackupSelectionResourceTypeConditionsPropertiesOutput) StringEquals() BackupSelectionConditionParameterArrayOutput {
	return o.ApplyT(func(v BackupSelectionResourceTypeConditionsProperties) []BackupSelectionConditionParameter {
		return v.StringEquals
	}).(BackupSelectionConditionParameterArrayOutput)
}

func (o BackupSelectionResourceTypeConditionsPropertiesOutput) StringLike() BackupSelectionConditionParameterArrayOutput {
	return o.ApplyT(func(v BackupSelectionResourceTypeConditionsProperties) []BackupSelectionConditionParameter {
		return v.StringLike
	}).(BackupSelectionConditionParameterArrayOutput)
}

func (o BackupSelectionResourceTypeConditionsPropertiesOutput) StringNotEquals() BackupSelectionConditionParameterArrayOutput {
	return o.ApplyT(func(v BackupSelectionResourceTypeConditionsProperties) []BackupSelectionConditionParameter {
		return v.StringNotEquals
	}).(BackupSelectionConditionParameterArrayOutput)
}

func (o BackupSelectionResourceTypeConditionsPropertiesOutput) StringNotLike() BackupSelectionConditionParameterArrayOutput {
	return o.ApplyT(func(v BackupSelectionResourceTypeConditionsProperties) []BackupSelectionConditionParameter {
		return v.StringNotLike
	}).(BackupSelectionConditionParameterArrayOutput)
}

type BackupSelectionResourceTypeConditionsPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BackupSelectionResourceTypeConditionsPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupSelectionResourceTypeConditionsProperties)(nil)).Elem()
}

func (o BackupSelectionResourceTypeConditionsPropertiesPtrOutput) ToBackupSelectionResourceTypeConditionsPropertiesPtrOutput() BackupSelectionResourceTypeConditionsPropertiesPtrOutput {
	return o
}

func (o BackupSelectionResourceTypeConditionsPropertiesPtrOutput) ToBackupSelectionResourceTypeConditionsPropertiesPtrOutputWithContext(ctx context.Context) BackupSelectionResourceTypeConditionsPropertiesPtrOutput {
	return o
}

func (o BackupSelectionResourceTypeConditionsPropertiesPtrOutput) Elem() BackupSelectionResourceTypeConditionsPropertiesOutput {
	return o.ApplyT(func(v *BackupSelectionResourceTypeConditionsProperties) BackupSelectionResourceTypeConditionsProperties {
		if v != nil {
			return *v
		}
		var ret BackupSelectionResourceTypeConditionsProperties
		return ret
	}).(BackupSelectionResourceTypeConditionsPropertiesOutput)
}

func (o BackupSelectionResourceTypeConditionsPropertiesPtrOutput) StringEquals() BackupSelectionConditionParameterArrayOutput {
	return o.ApplyT(func(v *BackupSelectionResourceTypeConditionsProperties) []BackupSelectionConditionParameter {
		if v == nil {
			return nil
		}
		return v.StringEquals
	}).(BackupSelectionConditionParameterArrayOutput)
}

func (o BackupSelectionResourceTypeConditionsPropertiesPtrOutput) StringLike() BackupSelectionConditionParameterArrayOutput {
	return o.ApplyT(func(v *BackupSelectionResourceTypeConditionsProperties) []BackupSelectionConditionParameter {
		if v == nil {
			return nil
		}
		return v.StringLike
	}).(BackupSelectionConditionParameterArrayOutput)
}

func (o BackupSelectionResourceTypeConditionsPropertiesPtrOutput) StringNotEquals() BackupSelectionConditionParameterArrayOutput {
	return o.ApplyT(func(v *BackupSelectionResourceTypeConditionsProperties) []BackupSelectionConditionParameter {
		if v == nil {
			return nil
		}
		return v.StringNotEquals
	}).(BackupSelectionConditionParameterArrayOutput)
}

func (o BackupSelectionResourceTypeConditionsPropertiesPtrOutput) StringNotLike() BackupSelectionConditionParameterArrayOutput {
	return o.ApplyT(func(v *BackupSelectionResourceTypeConditionsProperties) []BackupSelectionConditionParameter {
		if v == nil {
			return nil
		}
		return v.StringNotLike
	}).(BackupSelectionConditionParameterArrayOutput)
}

type BackupVaultLockConfigurationType struct {
	ChangeableForDays *float64 `pulumi:"changeableForDays"`
	MaxRetentionDays  *float64 `pulumi:"maxRetentionDays"`
	MinRetentionDays  float64  `pulumi:"minRetentionDays"`
}

// BackupVaultLockConfigurationTypeInput is an input type that accepts BackupVaultLockConfigurationTypeArgs and BackupVaultLockConfigurationTypeOutput values.
// You can construct a concrete instance of `BackupVaultLockConfigurationTypeInput` via:
//
//          BackupVaultLockConfigurationTypeArgs{...}
type BackupVaultLockConfigurationTypeInput interface {
	pulumi.Input

	ToBackupVaultLockConfigurationTypeOutput() BackupVaultLockConfigurationTypeOutput
	ToBackupVaultLockConfigurationTypeOutputWithContext(context.Context) BackupVaultLockConfigurationTypeOutput
}

type BackupVaultLockConfigurationTypeArgs struct {
	ChangeableForDays pulumi.Float64PtrInput `pulumi:"changeableForDays"`
	MaxRetentionDays  pulumi.Float64PtrInput `pulumi:"maxRetentionDays"`
	MinRetentionDays  pulumi.Float64Input    `pulumi:"minRetentionDays"`
}

func (BackupVaultLockConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupVaultLockConfigurationType)(nil)).Elem()
}

func (i BackupVaultLockConfigurationTypeArgs) ToBackupVaultLockConfigurationTypeOutput() BackupVaultLockConfigurationTypeOutput {
	return i.ToBackupVaultLockConfigurationTypeOutputWithContext(context.Background())
}

func (i BackupVaultLockConfigurationTypeArgs) ToBackupVaultLockConfigurationTypeOutputWithContext(ctx context.Context) BackupVaultLockConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultLockConfigurationTypeOutput)
}

func (i BackupVaultLockConfigurationTypeArgs) ToBackupVaultLockConfigurationTypePtrOutput() BackupVaultLockConfigurationTypePtrOutput {
	return i.ToBackupVaultLockConfigurationTypePtrOutputWithContext(context.Background())
}

func (i BackupVaultLockConfigurationTypeArgs) ToBackupVaultLockConfigurationTypePtrOutputWithContext(ctx context.Context) BackupVaultLockConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultLockConfigurationTypeOutput).ToBackupVaultLockConfigurationTypePtrOutputWithContext(ctx)
}

// BackupVaultLockConfigurationTypePtrInput is an input type that accepts BackupVaultLockConfigurationTypeArgs, BackupVaultLockConfigurationTypePtr and BackupVaultLockConfigurationTypePtrOutput values.
// You can construct a concrete instance of `BackupVaultLockConfigurationTypePtrInput` via:
//
//          BackupVaultLockConfigurationTypeArgs{...}
//
//  or:
//
//          nil
type BackupVaultLockConfigurationTypePtrInput interface {
	pulumi.Input

	ToBackupVaultLockConfigurationTypePtrOutput() BackupVaultLockConfigurationTypePtrOutput
	ToBackupVaultLockConfigurationTypePtrOutputWithContext(context.Context) BackupVaultLockConfigurationTypePtrOutput
}

type backupVaultLockConfigurationTypePtrType BackupVaultLockConfigurationTypeArgs

func BackupVaultLockConfigurationTypePtr(v *BackupVaultLockConfigurationTypeArgs) BackupVaultLockConfigurationTypePtrInput {
	return (*backupVaultLockConfigurationTypePtrType)(v)
}

func (*backupVaultLockConfigurationTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupVaultLockConfigurationType)(nil)).Elem()
}

func (i *backupVaultLockConfigurationTypePtrType) ToBackupVaultLockConfigurationTypePtrOutput() BackupVaultLockConfigurationTypePtrOutput {
	return i.ToBackupVaultLockConfigurationTypePtrOutputWithContext(context.Background())
}

func (i *backupVaultLockConfigurationTypePtrType) ToBackupVaultLockConfigurationTypePtrOutputWithContext(ctx context.Context) BackupVaultLockConfigurationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultLockConfigurationTypePtrOutput)
}

type BackupVaultLockConfigurationTypeOutput struct{ *pulumi.OutputState }

func (BackupVaultLockConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupVaultLockConfigurationType)(nil)).Elem()
}

func (o BackupVaultLockConfigurationTypeOutput) ToBackupVaultLockConfigurationTypeOutput() BackupVaultLockConfigurationTypeOutput {
	return o
}

func (o BackupVaultLockConfigurationTypeOutput) ToBackupVaultLockConfigurationTypeOutputWithContext(ctx context.Context) BackupVaultLockConfigurationTypeOutput {
	return o
}

func (o BackupVaultLockConfigurationTypeOutput) ToBackupVaultLockConfigurationTypePtrOutput() BackupVaultLockConfigurationTypePtrOutput {
	return o.ToBackupVaultLockConfigurationTypePtrOutputWithContext(context.Background())
}

func (o BackupVaultLockConfigurationTypeOutput) ToBackupVaultLockConfigurationTypePtrOutputWithContext(ctx context.Context) BackupVaultLockConfigurationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupVaultLockConfigurationType) *BackupVaultLockConfigurationType {
		return &v
	}).(BackupVaultLockConfigurationTypePtrOutput)
}

func (o BackupVaultLockConfigurationTypeOutput) ChangeableForDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BackupVaultLockConfigurationType) *float64 { return v.ChangeableForDays }).(pulumi.Float64PtrOutput)
}

func (o BackupVaultLockConfigurationTypeOutput) MaxRetentionDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BackupVaultLockConfigurationType) *float64 { return v.MaxRetentionDays }).(pulumi.Float64PtrOutput)
}

func (o BackupVaultLockConfigurationTypeOutput) MinRetentionDays() pulumi.Float64Output {
	return o.ApplyT(func(v BackupVaultLockConfigurationType) float64 { return v.MinRetentionDays }).(pulumi.Float64Output)
}

type BackupVaultLockConfigurationTypePtrOutput struct{ *pulumi.OutputState }

func (BackupVaultLockConfigurationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupVaultLockConfigurationType)(nil)).Elem()
}

func (o BackupVaultLockConfigurationTypePtrOutput) ToBackupVaultLockConfigurationTypePtrOutput() BackupVaultLockConfigurationTypePtrOutput {
	return o
}

func (o BackupVaultLockConfigurationTypePtrOutput) ToBackupVaultLockConfigurationTypePtrOutputWithContext(ctx context.Context) BackupVaultLockConfigurationTypePtrOutput {
	return o
}

func (o BackupVaultLockConfigurationTypePtrOutput) Elem() BackupVaultLockConfigurationTypeOutput {
	return o.ApplyT(func(v *BackupVaultLockConfigurationType) BackupVaultLockConfigurationType {
		if v != nil {
			return *v
		}
		var ret BackupVaultLockConfigurationType
		return ret
	}).(BackupVaultLockConfigurationTypeOutput)
}

func (o BackupVaultLockConfigurationTypePtrOutput) ChangeableForDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BackupVaultLockConfigurationType) *float64 {
		if v == nil {
			return nil
		}
		return v.ChangeableForDays
	}).(pulumi.Float64PtrOutput)
}

func (o BackupVaultLockConfigurationTypePtrOutput) MaxRetentionDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BackupVaultLockConfigurationType) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxRetentionDays
	}).(pulumi.Float64PtrOutput)
}

func (o BackupVaultLockConfigurationTypePtrOutput) MinRetentionDays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BackupVaultLockConfigurationType) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinRetentionDays
	}).(pulumi.Float64PtrOutput)
}

type BackupVaultNotificationObjectType struct {
	BackupVaultEvents []string `pulumi:"backupVaultEvents"`
	SNSTopicArn       string   `pulumi:"sNSTopicArn"`
}

// BackupVaultNotificationObjectTypeInput is an input type that accepts BackupVaultNotificationObjectTypeArgs and BackupVaultNotificationObjectTypeOutput values.
// You can construct a concrete instance of `BackupVaultNotificationObjectTypeInput` via:
//
//          BackupVaultNotificationObjectTypeArgs{...}
type BackupVaultNotificationObjectTypeInput interface {
	pulumi.Input

	ToBackupVaultNotificationObjectTypeOutput() BackupVaultNotificationObjectTypeOutput
	ToBackupVaultNotificationObjectTypeOutputWithContext(context.Context) BackupVaultNotificationObjectTypeOutput
}

type BackupVaultNotificationObjectTypeArgs struct {
	BackupVaultEvents pulumi.StringArrayInput `pulumi:"backupVaultEvents"`
	SNSTopicArn       pulumi.StringInput      `pulumi:"sNSTopicArn"`
}

func (BackupVaultNotificationObjectTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupVaultNotificationObjectType)(nil)).Elem()
}

func (i BackupVaultNotificationObjectTypeArgs) ToBackupVaultNotificationObjectTypeOutput() BackupVaultNotificationObjectTypeOutput {
	return i.ToBackupVaultNotificationObjectTypeOutputWithContext(context.Background())
}

func (i BackupVaultNotificationObjectTypeArgs) ToBackupVaultNotificationObjectTypeOutputWithContext(ctx context.Context) BackupVaultNotificationObjectTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultNotificationObjectTypeOutput)
}

func (i BackupVaultNotificationObjectTypeArgs) ToBackupVaultNotificationObjectTypePtrOutput() BackupVaultNotificationObjectTypePtrOutput {
	return i.ToBackupVaultNotificationObjectTypePtrOutputWithContext(context.Background())
}

func (i BackupVaultNotificationObjectTypeArgs) ToBackupVaultNotificationObjectTypePtrOutputWithContext(ctx context.Context) BackupVaultNotificationObjectTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultNotificationObjectTypeOutput).ToBackupVaultNotificationObjectTypePtrOutputWithContext(ctx)
}

// BackupVaultNotificationObjectTypePtrInput is an input type that accepts BackupVaultNotificationObjectTypeArgs, BackupVaultNotificationObjectTypePtr and BackupVaultNotificationObjectTypePtrOutput values.
// You can construct a concrete instance of `BackupVaultNotificationObjectTypePtrInput` via:
//
//          BackupVaultNotificationObjectTypeArgs{...}
//
//  or:
//
//          nil
type BackupVaultNotificationObjectTypePtrInput interface {
	pulumi.Input

	ToBackupVaultNotificationObjectTypePtrOutput() BackupVaultNotificationObjectTypePtrOutput
	ToBackupVaultNotificationObjectTypePtrOutputWithContext(context.Context) BackupVaultNotificationObjectTypePtrOutput
}

type backupVaultNotificationObjectTypePtrType BackupVaultNotificationObjectTypeArgs

func BackupVaultNotificationObjectTypePtr(v *BackupVaultNotificationObjectTypeArgs) BackupVaultNotificationObjectTypePtrInput {
	return (*backupVaultNotificationObjectTypePtrType)(v)
}

func (*backupVaultNotificationObjectTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupVaultNotificationObjectType)(nil)).Elem()
}

func (i *backupVaultNotificationObjectTypePtrType) ToBackupVaultNotificationObjectTypePtrOutput() BackupVaultNotificationObjectTypePtrOutput {
	return i.ToBackupVaultNotificationObjectTypePtrOutputWithContext(context.Background())
}

func (i *backupVaultNotificationObjectTypePtrType) ToBackupVaultNotificationObjectTypePtrOutputWithContext(ctx context.Context) BackupVaultNotificationObjectTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupVaultNotificationObjectTypePtrOutput)
}

type BackupVaultNotificationObjectTypeOutput struct{ *pulumi.OutputState }

func (BackupVaultNotificationObjectTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupVaultNotificationObjectType)(nil)).Elem()
}

func (o BackupVaultNotificationObjectTypeOutput) ToBackupVaultNotificationObjectTypeOutput() BackupVaultNotificationObjectTypeOutput {
	return o
}

func (o BackupVaultNotificationObjectTypeOutput) ToBackupVaultNotificationObjectTypeOutputWithContext(ctx context.Context) BackupVaultNotificationObjectTypeOutput {
	return o
}

func (o BackupVaultNotificationObjectTypeOutput) ToBackupVaultNotificationObjectTypePtrOutput() BackupVaultNotificationObjectTypePtrOutput {
	return o.ToBackupVaultNotificationObjectTypePtrOutputWithContext(context.Background())
}

func (o BackupVaultNotificationObjectTypeOutput) ToBackupVaultNotificationObjectTypePtrOutputWithContext(ctx context.Context) BackupVaultNotificationObjectTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupVaultNotificationObjectType) *BackupVaultNotificationObjectType {
		return &v
	}).(BackupVaultNotificationObjectTypePtrOutput)
}

func (o BackupVaultNotificationObjectTypeOutput) BackupVaultEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BackupVaultNotificationObjectType) []string { return v.BackupVaultEvents }).(pulumi.StringArrayOutput)
}

func (o BackupVaultNotificationObjectTypeOutput) SNSTopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v BackupVaultNotificationObjectType) string { return v.SNSTopicArn }).(pulumi.StringOutput)
}

type BackupVaultNotificationObjectTypePtrOutput struct{ *pulumi.OutputState }

func (BackupVaultNotificationObjectTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupVaultNotificationObjectType)(nil)).Elem()
}

func (o BackupVaultNotificationObjectTypePtrOutput) ToBackupVaultNotificationObjectTypePtrOutput() BackupVaultNotificationObjectTypePtrOutput {
	return o
}

func (o BackupVaultNotificationObjectTypePtrOutput) ToBackupVaultNotificationObjectTypePtrOutputWithContext(ctx context.Context) BackupVaultNotificationObjectTypePtrOutput {
	return o
}

func (o BackupVaultNotificationObjectTypePtrOutput) Elem() BackupVaultNotificationObjectTypeOutput {
	return o.ApplyT(func(v *BackupVaultNotificationObjectType) BackupVaultNotificationObjectType {
		if v != nil {
			return *v
		}
		var ret BackupVaultNotificationObjectType
		return ret
	}).(BackupVaultNotificationObjectTypeOutput)
}

func (o BackupVaultNotificationObjectTypePtrOutput) BackupVaultEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BackupVaultNotificationObjectType) []string {
		if v == nil {
			return nil
		}
		return v.BackupVaultEvents
	}).(pulumi.StringArrayOutput)
}

func (o BackupVaultNotificationObjectTypePtrOutput) SNSTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupVaultNotificationObjectType) *string {
		if v == nil {
			return nil
		}
		return &v.SNSTopicArn
	}).(pulumi.StringPtrOutput)
}

type FrameworkControl struct {
	// A list of ParameterName and ParameterValue pairs.
	ControlInputParameters []FrameworkControlInputParameter `pulumi:"controlInputParameters"`
	// The name of a control. This name is between 1 and 256 characters.
	ControlName string `pulumi:"controlName"`
	// The scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans.
	ControlScope *FrameworkControlControlScopeProperties `pulumi:"controlScope"`
}

// FrameworkControlInput is an input type that accepts FrameworkControlArgs and FrameworkControlOutput values.
// You can construct a concrete instance of `FrameworkControlInput` via:
//
//          FrameworkControlArgs{...}
type FrameworkControlInput interface {
	pulumi.Input

	ToFrameworkControlOutput() FrameworkControlOutput
	ToFrameworkControlOutputWithContext(context.Context) FrameworkControlOutput
}

type FrameworkControlArgs struct {
	// A list of ParameterName and ParameterValue pairs.
	ControlInputParameters FrameworkControlInputParameterArrayInput `pulumi:"controlInputParameters"`
	// The name of a control. This name is between 1 and 256 characters.
	ControlName pulumi.StringInput `pulumi:"controlName"`
	// The scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans.
	ControlScope FrameworkControlControlScopePropertiesPtrInput `pulumi:"controlScope"`
}

func (FrameworkControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrameworkControl)(nil)).Elem()
}

func (i FrameworkControlArgs) ToFrameworkControlOutput() FrameworkControlOutput {
	return i.ToFrameworkControlOutputWithContext(context.Background())
}

func (i FrameworkControlArgs) ToFrameworkControlOutputWithContext(ctx context.Context) FrameworkControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkControlOutput)
}

// FrameworkControlArrayInput is an input type that accepts FrameworkControlArray and FrameworkControlArrayOutput values.
// You can construct a concrete instance of `FrameworkControlArrayInput` via:
//
//          FrameworkControlArray{ FrameworkControlArgs{...} }
type FrameworkControlArrayInput interface {
	pulumi.Input

	ToFrameworkControlArrayOutput() FrameworkControlArrayOutput
	ToFrameworkControlArrayOutputWithContext(context.Context) FrameworkControlArrayOutput
}

type FrameworkControlArray []FrameworkControlInput

func (FrameworkControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrameworkControl)(nil)).Elem()
}

func (i FrameworkControlArray) ToFrameworkControlArrayOutput() FrameworkControlArrayOutput {
	return i.ToFrameworkControlArrayOutputWithContext(context.Background())
}

func (i FrameworkControlArray) ToFrameworkControlArrayOutputWithContext(ctx context.Context) FrameworkControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkControlArrayOutput)
}

type FrameworkControlOutput struct{ *pulumi.OutputState }

func (FrameworkControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrameworkControl)(nil)).Elem()
}

func (o FrameworkControlOutput) ToFrameworkControlOutput() FrameworkControlOutput {
	return o
}

func (o FrameworkControlOutput) ToFrameworkControlOutputWithContext(ctx context.Context) FrameworkControlOutput {
	return o
}

// A list of ParameterName and ParameterValue pairs.
func (o FrameworkControlOutput) ControlInputParameters() FrameworkControlInputParameterArrayOutput {
	return o.ApplyT(func(v FrameworkControl) []FrameworkControlInputParameter { return v.ControlInputParameters }).(FrameworkControlInputParameterArrayOutput)
}

// The name of a control. This name is between 1 and 256 characters.
func (o FrameworkControlOutput) ControlName() pulumi.StringOutput {
	return o.ApplyT(func(v FrameworkControl) string { return v.ControlName }).(pulumi.StringOutput)
}

// The scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans.
func (o FrameworkControlOutput) ControlScope() FrameworkControlControlScopePropertiesPtrOutput {
	return o.ApplyT(func(v FrameworkControl) *FrameworkControlControlScopeProperties { return v.ControlScope }).(FrameworkControlControlScopePropertiesPtrOutput)
}

type FrameworkControlArrayOutput struct{ *pulumi.OutputState }

func (FrameworkControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrameworkControl)(nil)).Elem()
}

func (o FrameworkControlArrayOutput) ToFrameworkControlArrayOutput() FrameworkControlArrayOutput {
	return o
}

func (o FrameworkControlArrayOutput) ToFrameworkControlArrayOutputWithContext(ctx context.Context) FrameworkControlArrayOutput {
	return o
}

func (o FrameworkControlArrayOutput) Index(i pulumi.IntInput) FrameworkControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrameworkControl {
		return vs[0].([]FrameworkControl)[vs[1].(int)]
	}).(FrameworkControlOutput)
}

// The scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans.
type FrameworkControlControlScopeProperties struct {
	// The ID of the only AWS resource that you want your control scope to contain.
	ComplianceResourceIds []string `pulumi:"complianceResourceIds"`
	// Describes whether the control scope includes one or more types of resources, such as `EFS` or `RDS`.
	ComplianceResourceTypes []string `pulumi:"complianceResourceTypes"`
	// Describes whether the control scope includes resources with one or more tags. Each tag is a key-value pair.
	Tags []FrameworkTag `pulumi:"tags"`
}

// FrameworkControlControlScopePropertiesInput is an input type that accepts FrameworkControlControlScopePropertiesArgs and FrameworkControlControlScopePropertiesOutput values.
// You can construct a concrete instance of `FrameworkControlControlScopePropertiesInput` via:
//
//          FrameworkControlControlScopePropertiesArgs{...}
type FrameworkControlControlScopePropertiesInput interface {
	pulumi.Input

	ToFrameworkControlControlScopePropertiesOutput() FrameworkControlControlScopePropertiesOutput
	ToFrameworkControlControlScopePropertiesOutputWithContext(context.Context) FrameworkControlControlScopePropertiesOutput
}

// The scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans.
type FrameworkControlControlScopePropertiesArgs struct {
	// The ID of the only AWS resource that you want your control scope to contain.
	ComplianceResourceIds pulumi.StringArrayInput `pulumi:"complianceResourceIds"`
	// Describes whether the control scope includes one or more types of resources, such as `EFS` or `RDS`.
	ComplianceResourceTypes pulumi.StringArrayInput `pulumi:"complianceResourceTypes"`
	// Describes whether the control scope includes resources with one or more tags. Each tag is a key-value pair.
	Tags FrameworkTagArrayInput `pulumi:"tags"`
}

func (FrameworkControlControlScopePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrameworkControlControlScopeProperties)(nil)).Elem()
}

func (i FrameworkControlControlScopePropertiesArgs) ToFrameworkControlControlScopePropertiesOutput() FrameworkControlControlScopePropertiesOutput {
	return i.ToFrameworkControlControlScopePropertiesOutputWithContext(context.Background())
}

func (i FrameworkControlControlScopePropertiesArgs) ToFrameworkControlControlScopePropertiesOutputWithContext(ctx context.Context) FrameworkControlControlScopePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkControlControlScopePropertiesOutput)
}

func (i FrameworkControlControlScopePropertiesArgs) ToFrameworkControlControlScopePropertiesPtrOutput() FrameworkControlControlScopePropertiesPtrOutput {
	return i.ToFrameworkControlControlScopePropertiesPtrOutputWithContext(context.Background())
}

func (i FrameworkControlControlScopePropertiesArgs) ToFrameworkControlControlScopePropertiesPtrOutputWithContext(ctx context.Context) FrameworkControlControlScopePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkControlControlScopePropertiesOutput).ToFrameworkControlControlScopePropertiesPtrOutputWithContext(ctx)
}

// FrameworkControlControlScopePropertiesPtrInput is an input type that accepts FrameworkControlControlScopePropertiesArgs, FrameworkControlControlScopePropertiesPtr and FrameworkControlControlScopePropertiesPtrOutput values.
// You can construct a concrete instance of `FrameworkControlControlScopePropertiesPtrInput` via:
//
//          FrameworkControlControlScopePropertiesArgs{...}
//
//  or:
//
//          nil
type FrameworkControlControlScopePropertiesPtrInput interface {
	pulumi.Input

	ToFrameworkControlControlScopePropertiesPtrOutput() FrameworkControlControlScopePropertiesPtrOutput
	ToFrameworkControlControlScopePropertiesPtrOutputWithContext(context.Context) FrameworkControlControlScopePropertiesPtrOutput
}

type frameworkControlControlScopePropertiesPtrType FrameworkControlControlScopePropertiesArgs

func FrameworkControlControlScopePropertiesPtr(v *FrameworkControlControlScopePropertiesArgs) FrameworkControlControlScopePropertiesPtrInput {
	return (*frameworkControlControlScopePropertiesPtrType)(v)
}

func (*frameworkControlControlScopePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FrameworkControlControlScopeProperties)(nil)).Elem()
}

func (i *frameworkControlControlScopePropertiesPtrType) ToFrameworkControlControlScopePropertiesPtrOutput() FrameworkControlControlScopePropertiesPtrOutput {
	return i.ToFrameworkControlControlScopePropertiesPtrOutputWithContext(context.Background())
}

func (i *frameworkControlControlScopePropertiesPtrType) ToFrameworkControlControlScopePropertiesPtrOutputWithContext(ctx context.Context) FrameworkControlControlScopePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkControlControlScopePropertiesPtrOutput)
}

// The scope of a control. The control scope defines what the control will evaluate. Three examples of control scopes are: a specific backup plan, all backup plans with a specific tag, or all backup plans.
type FrameworkControlControlScopePropertiesOutput struct{ *pulumi.OutputState }

func (FrameworkControlControlScopePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrameworkControlControlScopeProperties)(nil)).Elem()
}

func (o FrameworkControlControlScopePropertiesOutput) ToFrameworkControlControlScopePropertiesOutput() FrameworkControlControlScopePropertiesOutput {
	return o
}

func (o FrameworkControlControlScopePropertiesOutput) ToFrameworkControlControlScopePropertiesOutputWithContext(ctx context.Context) FrameworkControlControlScopePropertiesOutput {
	return o
}

func (o FrameworkControlControlScopePropertiesOutput) ToFrameworkControlControlScopePropertiesPtrOutput() FrameworkControlControlScopePropertiesPtrOutput {
	return o.ToFrameworkControlControlScopePropertiesPtrOutputWithContext(context.Background())
}

func (o FrameworkControlControlScopePropertiesOutput) ToFrameworkControlControlScopePropertiesPtrOutputWithContext(ctx context.Context) FrameworkControlControlScopePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FrameworkControlControlScopeProperties) *FrameworkControlControlScopeProperties {
		return &v
	}).(FrameworkControlControlScopePropertiesPtrOutput)
}

// The ID of the only AWS resource that you want your control scope to contain.
func (o FrameworkControlControlScopePropertiesOutput) ComplianceResourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrameworkControlControlScopeProperties) []string { return v.ComplianceResourceIds }).(pulumi.StringArrayOutput)
}

// Describes whether the control scope includes one or more types of resources, such as `EFS` or `RDS`.
func (o FrameworkControlControlScopePropertiesOutput) ComplianceResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FrameworkControlControlScopeProperties) []string { return v.ComplianceResourceTypes }).(pulumi.StringArrayOutput)
}

// Describes whether the control scope includes resources with one or more tags. Each tag is a key-value pair.
func (o FrameworkControlControlScopePropertiesOutput) Tags() FrameworkTagArrayOutput {
	return o.ApplyT(func(v FrameworkControlControlScopeProperties) []FrameworkTag { return v.Tags }).(FrameworkTagArrayOutput)
}

type FrameworkControlControlScopePropertiesPtrOutput struct{ *pulumi.OutputState }

func (FrameworkControlControlScopePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FrameworkControlControlScopeProperties)(nil)).Elem()
}

func (o FrameworkControlControlScopePropertiesPtrOutput) ToFrameworkControlControlScopePropertiesPtrOutput() FrameworkControlControlScopePropertiesPtrOutput {
	return o
}

func (o FrameworkControlControlScopePropertiesPtrOutput) ToFrameworkControlControlScopePropertiesPtrOutputWithContext(ctx context.Context) FrameworkControlControlScopePropertiesPtrOutput {
	return o
}

func (o FrameworkControlControlScopePropertiesPtrOutput) Elem() FrameworkControlControlScopePropertiesOutput {
	return o.ApplyT(func(v *FrameworkControlControlScopeProperties) FrameworkControlControlScopeProperties {
		if v != nil {
			return *v
		}
		var ret FrameworkControlControlScopeProperties
		return ret
	}).(FrameworkControlControlScopePropertiesOutput)
}

// The ID of the only AWS resource that you want your control scope to contain.
func (o FrameworkControlControlScopePropertiesPtrOutput) ComplianceResourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrameworkControlControlScopeProperties) []string {
		if v == nil {
			return nil
		}
		return v.ComplianceResourceIds
	}).(pulumi.StringArrayOutput)
}

// Describes whether the control scope includes one or more types of resources, such as `EFS` or `RDS`.
func (o FrameworkControlControlScopePropertiesPtrOutput) ComplianceResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FrameworkControlControlScopeProperties) []string {
		if v == nil {
			return nil
		}
		return v.ComplianceResourceTypes
	}).(pulumi.StringArrayOutput)
}

// Describes whether the control scope includes resources with one or more tags. Each tag is a key-value pair.
func (o FrameworkControlControlScopePropertiesPtrOutput) Tags() FrameworkTagArrayOutput {
	return o.ApplyT(func(v *FrameworkControlControlScopeProperties) []FrameworkTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(FrameworkTagArrayOutput)
}

type FrameworkControlInputParameter struct {
	ParameterName  string `pulumi:"parameterName"`
	ParameterValue string `pulumi:"parameterValue"`
}

// FrameworkControlInputParameterInput is an input type that accepts FrameworkControlInputParameterArgs and FrameworkControlInputParameterOutput values.
// You can construct a concrete instance of `FrameworkControlInputParameterInput` via:
//
//          FrameworkControlInputParameterArgs{...}
type FrameworkControlInputParameterInput interface {
	pulumi.Input

	ToFrameworkControlInputParameterOutput() FrameworkControlInputParameterOutput
	ToFrameworkControlInputParameterOutputWithContext(context.Context) FrameworkControlInputParameterOutput
}

type FrameworkControlInputParameterArgs struct {
	ParameterName  pulumi.StringInput `pulumi:"parameterName"`
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (FrameworkControlInputParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrameworkControlInputParameter)(nil)).Elem()
}

func (i FrameworkControlInputParameterArgs) ToFrameworkControlInputParameterOutput() FrameworkControlInputParameterOutput {
	return i.ToFrameworkControlInputParameterOutputWithContext(context.Background())
}

func (i FrameworkControlInputParameterArgs) ToFrameworkControlInputParameterOutputWithContext(ctx context.Context) FrameworkControlInputParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkControlInputParameterOutput)
}

// FrameworkControlInputParameterArrayInput is an input type that accepts FrameworkControlInputParameterArray and FrameworkControlInputParameterArrayOutput values.
// You can construct a concrete instance of `FrameworkControlInputParameterArrayInput` via:
//
//          FrameworkControlInputParameterArray{ FrameworkControlInputParameterArgs{...} }
type FrameworkControlInputParameterArrayInput interface {
	pulumi.Input

	ToFrameworkControlInputParameterArrayOutput() FrameworkControlInputParameterArrayOutput
	ToFrameworkControlInputParameterArrayOutputWithContext(context.Context) FrameworkControlInputParameterArrayOutput
}

type FrameworkControlInputParameterArray []FrameworkControlInputParameterInput

func (FrameworkControlInputParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrameworkControlInputParameter)(nil)).Elem()
}

func (i FrameworkControlInputParameterArray) ToFrameworkControlInputParameterArrayOutput() FrameworkControlInputParameterArrayOutput {
	return i.ToFrameworkControlInputParameterArrayOutputWithContext(context.Background())
}

func (i FrameworkControlInputParameterArray) ToFrameworkControlInputParameterArrayOutputWithContext(ctx context.Context) FrameworkControlInputParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkControlInputParameterArrayOutput)
}

type FrameworkControlInputParameterOutput struct{ *pulumi.OutputState }

func (FrameworkControlInputParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrameworkControlInputParameter)(nil)).Elem()
}

func (o FrameworkControlInputParameterOutput) ToFrameworkControlInputParameterOutput() FrameworkControlInputParameterOutput {
	return o
}

func (o FrameworkControlInputParameterOutput) ToFrameworkControlInputParameterOutputWithContext(ctx context.Context) FrameworkControlInputParameterOutput {
	return o
}

func (o FrameworkControlInputParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v FrameworkControlInputParameter) string { return v.ParameterName }).(pulumi.StringOutput)
}

func (o FrameworkControlInputParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v FrameworkControlInputParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type FrameworkControlInputParameterArrayOutput struct{ *pulumi.OutputState }

func (FrameworkControlInputParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrameworkControlInputParameter)(nil)).Elem()
}

func (o FrameworkControlInputParameterArrayOutput) ToFrameworkControlInputParameterArrayOutput() FrameworkControlInputParameterArrayOutput {
	return o
}

func (o FrameworkControlInputParameterArrayOutput) ToFrameworkControlInputParameterArrayOutputWithContext(ctx context.Context) FrameworkControlInputParameterArrayOutput {
	return o
}

func (o FrameworkControlInputParameterArrayOutput) Index(i pulumi.IntInput) FrameworkControlInputParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrameworkControlInputParameter {
		return vs[0].([]FrameworkControlInputParameter)[vs[1].(int)]
	}).(FrameworkControlInputParameterOutput)
}

// A key-value pair to associate with a resource.
type FrameworkTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// FrameworkTagInput is an input type that accepts FrameworkTagArgs and FrameworkTagOutput values.
// You can construct a concrete instance of `FrameworkTagInput` via:
//
//          FrameworkTagArgs{...}
type FrameworkTagInput interface {
	pulumi.Input

	ToFrameworkTagOutput() FrameworkTagOutput
	ToFrameworkTagOutputWithContext(context.Context) FrameworkTagOutput
}

// A key-value pair to associate with a resource.
type FrameworkTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FrameworkTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FrameworkTag)(nil)).Elem()
}

func (i FrameworkTagArgs) ToFrameworkTagOutput() FrameworkTagOutput {
	return i.ToFrameworkTagOutputWithContext(context.Background())
}

func (i FrameworkTagArgs) ToFrameworkTagOutputWithContext(ctx context.Context) FrameworkTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkTagOutput)
}

// FrameworkTagArrayInput is an input type that accepts FrameworkTagArray and FrameworkTagArrayOutput values.
// You can construct a concrete instance of `FrameworkTagArrayInput` via:
//
//          FrameworkTagArray{ FrameworkTagArgs{...} }
type FrameworkTagArrayInput interface {
	pulumi.Input

	ToFrameworkTagArrayOutput() FrameworkTagArrayOutput
	ToFrameworkTagArrayOutputWithContext(context.Context) FrameworkTagArrayOutput
}

type FrameworkTagArray []FrameworkTagInput

func (FrameworkTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrameworkTag)(nil)).Elem()
}

func (i FrameworkTagArray) ToFrameworkTagArrayOutput() FrameworkTagArrayOutput {
	return i.ToFrameworkTagArrayOutputWithContext(context.Background())
}

func (i FrameworkTagArray) ToFrameworkTagArrayOutputWithContext(ctx context.Context) FrameworkTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FrameworkTagArrayOutput)
}

// A key-value pair to associate with a resource.
type FrameworkTagOutput struct{ *pulumi.OutputState }

func (FrameworkTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FrameworkTag)(nil)).Elem()
}

func (o FrameworkTagOutput) ToFrameworkTagOutput() FrameworkTagOutput {
	return o
}

func (o FrameworkTagOutput) ToFrameworkTagOutputWithContext(ctx context.Context) FrameworkTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o FrameworkTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FrameworkTag) string { return v.Key }).(pulumi.StringOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o FrameworkTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FrameworkTag) string { return v.Value }).(pulumi.StringOutput)
}

type FrameworkTagArrayOutput struct{ *pulumi.OutputState }

func (FrameworkTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FrameworkTag)(nil)).Elem()
}

func (o FrameworkTagArrayOutput) ToFrameworkTagArrayOutput() FrameworkTagArrayOutput {
	return o
}

func (o FrameworkTagArrayOutput) ToFrameworkTagArrayOutputWithContext(ctx context.Context) FrameworkTagArrayOutput {
	return o
}

func (o FrameworkTagArrayOutput) Index(i pulumi.IntInput) FrameworkTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FrameworkTag {
		return vs[0].([]FrameworkTag)[vs[1].(int)]
	}).(FrameworkTagOutput)
}

// A structure that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.
type ReportDeliveryChannelProperties struct {
	// A list of the format of your reports: CSV, JSON, or both. If not specified, the default format is CSV.
	Formats []string `pulumi:"formats"`
	// The unique name of the S3 bucket that receives your reports.
	S3BucketName string `pulumi:"s3BucketName"`
	// The prefix for where AWS Backup Audit Manager delivers your reports to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/prefix/Backup/us-west-2/year/month/day/report-name. If not specified, there is no prefix.
	S3KeyPrefix *string `pulumi:"s3KeyPrefix"`
}

// ReportDeliveryChannelPropertiesInput is an input type that accepts ReportDeliveryChannelPropertiesArgs and ReportDeliveryChannelPropertiesOutput values.
// You can construct a concrete instance of `ReportDeliveryChannelPropertiesInput` via:
//
//          ReportDeliveryChannelPropertiesArgs{...}
type ReportDeliveryChannelPropertiesInput interface {
	pulumi.Input

	ToReportDeliveryChannelPropertiesOutput() ReportDeliveryChannelPropertiesOutput
	ToReportDeliveryChannelPropertiesOutputWithContext(context.Context) ReportDeliveryChannelPropertiesOutput
}

// A structure that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.
type ReportDeliveryChannelPropertiesArgs struct {
	// A list of the format of your reports: CSV, JSON, or both. If not specified, the default format is CSV.
	Formats pulumi.StringArrayInput `pulumi:"formats"`
	// The unique name of the S3 bucket that receives your reports.
	S3BucketName pulumi.StringInput `pulumi:"s3BucketName"`
	// The prefix for where AWS Backup Audit Manager delivers your reports to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/prefix/Backup/us-west-2/year/month/day/report-name. If not specified, there is no prefix.
	S3KeyPrefix pulumi.StringPtrInput `pulumi:"s3KeyPrefix"`
}

func (ReportDeliveryChannelPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportDeliveryChannelProperties)(nil)).Elem()
}

func (i ReportDeliveryChannelPropertiesArgs) ToReportDeliveryChannelPropertiesOutput() ReportDeliveryChannelPropertiesOutput {
	return i.ToReportDeliveryChannelPropertiesOutputWithContext(context.Background())
}

func (i ReportDeliveryChannelPropertiesArgs) ToReportDeliveryChannelPropertiesOutputWithContext(ctx context.Context) ReportDeliveryChannelPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportDeliveryChannelPropertiesOutput)
}

func (i ReportDeliveryChannelPropertiesArgs) ToReportDeliveryChannelPropertiesPtrOutput() ReportDeliveryChannelPropertiesPtrOutput {
	return i.ToReportDeliveryChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i ReportDeliveryChannelPropertiesArgs) ToReportDeliveryChannelPropertiesPtrOutputWithContext(ctx context.Context) ReportDeliveryChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportDeliveryChannelPropertiesOutput).ToReportDeliveryChannelPropertiesPtrOutputWithContext(ctx)
}

// ReportDeliveryChannelPropertiesPtrInput is an input type that accepts ReportDeliveryChannelPropertiesArgs, ReportDeliveryChannelPropertiesPtr and ReportDeliveryChannelPropertiesPtrOutput values.
// You can construct a concrete instance of `ReportDeliveryChannelPropertiesPtrInput` via:
//
//          ReportDeliveryChannelPropertiesArgs{...}
//
//  or:
//
//          nil
type ReportDeliveryChannelPropertiesPtrInput interface {
	pulumi.Input

	ToReportDeliveryChannelPropertiesPtrOutput() ReportDeliveryChannelPropertiesPtrOutput
	ToReportDeliveryChannelPropertiesPtrOutputWithContext(context.Context) ReportDeliveryChannelPropertiesPtrOutput
}

type reportDeliveryChannelPropertiesPtrType ReportDeliveryChannelPropertiesArgs

func ReportDeliveryChannelPropertiesPtr(v *ReportDeliveryChannelPropertiesArgs) ReportDeliveryChannelPropertiesPtrInput {
	return (*reportDeliveryChannelPropertiesPtrType)(v)
}

func (*reportDeliveryChannelPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportDeliveryChannelProperties)(nil)).Elem()
}

func (i *reportDeliveryChannelPropertiesPtrType) ToReportDeliveryChannelPropertiesPtrOutput() ReportDeliveryChannelPropertiesPtrOutput {
	return i.ToReportDeliveryChannelPropertiesPtrOutputWithContext(context.Background())
}

func (i *reportDeliveryChannelPropertiesPtrType) ToReportDeliveryChannelPropertiesPtrOutputWithContext(ctx context.Context) ReportDeliveryChannelPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportDeliveryChannelPropertiesPtrOutput)
}

// A structure that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.
type ReportDeliveryChannelPropertiesOutput struct{ *pulumi.OutputState }

func (ReportDeliveryChannelPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportDeliveryChannelProperties)(nil)).Elem()
}

func (o ReportDeliveryChannelPropertiesOutput) ToReportDeliveryChannelPropertiesOutput() ReportDeliveryChannelPropertiesOutput {
	return o
}

func (o ReportDeliveryChannelPropertiesOutput) ToReportDeliveryChannelPropertiesOutputWithContext(ctx context.Context) ReportDeliveryChannelPropertiesOutput {
	return o
}

func (o ReportDeliveryChannelPropertiesOutput) ToReportDeliveryChannelPropertiesPtrOutput() ReportDeliveryChannelPropertiesPtrOutput {
	return o.ToReportDeliveryChannelPropertiesPtrOutputWithContext(context.Background())
}

func (o ReportDeliveryChannelPropertiesOutput) ToReportDeliveryChannelPropertiesPtrOutputWithContext(ctx context.Context) ReportDeliveryChannelPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportDeliveryChannelProperties) *ReportDeliveryChannelProperties {
		return &v
	}).(ReportDeliveryChannelPropertiesPtrOutput)
}

// A list of the format of your reports: CSV, JSON, or both. If not specified, the default format is CSV.
func (o ReportDeliveryChannelPropertiesOutput) Formats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReportDeliveryChannelProperties) []string { return v.Formats }).(pulumi.StringArrayOutput)
}

// The unique name of the S3 bucket that receives your reports.
func (o ReportDeliveryChannelPropertiesOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ReportDeliveryChannelProperties) string { return v.S3BucketName }).(pulumi.StringOutput)
}

// The prefix for where AWS Backup Audit Manager delivers your reports to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/prefix/Backup/us-west-2/year/month/day/report-name. If not specified, there is no prefix.
func (o ReportDeliveryChannelPropertiesOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportDeliveryChannelProperties) *string { return v.S3KeyPrefix }).(pulumi.StringPtrOutput)
}

type ReportDeliveryChannelPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ReportDeliveryChannelPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportDeliveryChannelProperties)(nil)).Elem()
}

func (o ReportDeliveryChannelPropertiesPtrOutput) ToReportDeliveryChannelPropertiesPtrOutput() ReportDeliveryChannelPropertiesPtrOutput {
	return o
}

func (o ReportDeliveryChannelPropertiesPtrOutput) ToReportDeliveryChannelPropertiesPtrOutputWithContext(ctx context.Context) ReportDeliveryChannelPropertiesPtrOutput {
	return o
}

func (o ReportDeliveryChannelPropertiesPtrOutput) Elem() ReportDeliveryChannelPropertiesOutput {
	return o.ApplyT(func(v *ReportDeliveryChannelProperties) ReportDeliveryChannelProperties {
		if v != nil {
			return *v
		}
		var ret ReportDeliveryChannelProperties
		return ret
	}).(ReportDeliveryChannelPropertiesOutput)
}

// A list of the format of your reports: CSV, JSON, or both. If not specified, the default format is CSV.
func (o ReportDeliveryChannelPropertiesPtrOutput) Formats() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReportDeliveryChannelProperties) []string {
		if v == nil {
			return nil
		}
		return v.Formats
	}).(pulumi.StringArrayOutput)
}

// The unique name of the S3 bucket that receives your reports.
func (o ReportDeliveryChannelPropertiesPtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportDeliveryChannelProperties) *string {
		if v == nil {
			return nil
		}
		return &v.S3BucketName
	}).(pulumi.StringPtrOutput)
}

// The prefix for where AWS Backup Audit Manager delivers your reports to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/prefix/Backup/us-west-2/year/month/day/report-name. If not specified, there is no prefix.
func (o ReportDeliveryChannelPropertiesPtrOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportDeliveryChannelProperties) *string {
		if v == nil {
			return nil
		}
		return v.S3KeyPrefix
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type ReportPlanTag struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key *string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value *string `pulumi:"value"`
}

// ReportPlanTagInput is an input type that accepts ReportPlanTagArgs and ReportPlanTagOutput values.
// You can construct a concrete instance of `ReportPlanTagInput` via:
//
//          ReportPlanTagArgs{...}
type ReportPlanTagInput interface {
	pulumi.Input

	ToReportPlanTagOutput() ReportPlanTagOutput
	ToReportPlanTagOutputWithContext(context.Context) ReportPlanTagOutput
}

// A key-value pair to associate with a resource.
type ReportPlanTagArgs struct {
	// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ReportPlanTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportPlanTag)(nil)).Elem()
}

func (i ReportPlanTagArgs) ToReportPlanTagOutput() ReportPlanTagOutput {
	return i.ToReportPlanTagOutputWithContext(context.Background())
}

func (i ReportPlanTagArgs) ToReportPlanTagOutputWithContext(ctx context.Context) ReportPlanTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportPlanTagOutput)
}

// ReportPlanTagArrayInput is an input type that accepts ReportPlanTagArray and ReportPlanTagArrayOutput values.
// You can construct a concrete instance of `ReportPlanTagArrayInput` via:
//
//          ReportPlanTagArray{ ReportPlanTagArgs{...} }
type ReportPlanTagArrayInput interface {
	pulumi.Input

	ToReportPlanTagArrayOutput() ReportPlanTagArrayOutput
	ToReportPlanTagArrayOutputWithContext(context.Context) ReportPlanTagArrayOutput
}

type ReportPlanTagArray []ReportPlanTagInput

func (ReportPlanTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportPlanTag)(nil)).Elem()
}

func (i ReportPlanTagArray) ToReportPlanTagArrayOutput() ReportPlanTagArrayOutput {
	return i.ToReportPlanTagArrayOutputWithContext(context.Background())
}

func (i ReportPlanTagArray) ToReportPlanTagArrayOutputWithContext(ctx context.Context) ReportPlanTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportPlanTagArrayOutput)
}

// A key-value pair to associate with a resource.
type ReportPlanTagOutput struct{ *pulumi.OutputState }

func (ReportPlanTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportPlanTag)(nil)).Elem()
}

func (o ReportPlanTagOutput) ToReportPlanTagOutput() ReportPlanTagOutput {
	return o
}

func (o ReportPlanTagOutput) ToReportPlanTagOutputWithContext(ctx context.Context) ReportPlanTagOutput {
	return o
}

// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ReportPlanTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportPlanTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
func (o ReportPlanTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportPlanTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ReportPlanTagArrayOutput struct{ *pulumi.OutputState }

func (ReportPlanTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReportPlanTag)(nil)).Elem()
}

func (o ReportPlanTagArrayOutput) ToReportPlanTagArrayOutput() ReportPlanTagArrayOutput {
	return o
}

func (o ReportPlanTagArrayOutput) ToReportPlanTagArrayOutputWithContext(ctx context.Context) ReportPlanTagArrayOutput {
	return o
}

func (o ReportPlanTagArrayOutput) Index(i pulumi.IntInput) ReportPlanTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReportPlanTag {
		return vs[0].([]ReportPlanTag)[vs[1].(int)]
	}).(ReportPlanTagOutput)
}

// Identifies the report template for the report. Reports are built using a report template.
type ReportSettingProperties struct {
	// The Amazon Resource Names (ARNs) of the frameworks a report covers.
	FrameworkArns []string `pulumi:"frameworkArns"`
	// Identifies the report template for the report. Reports are built using a report template. The report templates are: `BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT`
	ReportTemplate string `pulumi:"reportTemplate"`
}

// ReportSettingPropertiesInput is an input type that accepts ReportSettingPropertiesArgs and ReportSettingPropertiesOutput values.
// You can construct a concrete instance of `ReportSettingPropertiesInput` via:
//
//          ReportSettingPropertiesArgs{...}
type ReportSettingPropertiesInput interface {
	pulumi.Input

	ToReportSettingPropertiesOutput() ReportSettingPropertiesOutput
	ToReportSettingPropertiesOutputWithContext(context.Context) ReportSettingPropertiesOutput
}

// Identifies the report template for the report. Reports are built using a report template.
type ReportSettingPropertiesArgs struct {
	// The Amazon Resource Names (ARNs) of the frameworks a report covers.
	FrameworkArns pulumi.StringArrayInput `pulumi:"frameworkArns"`
	// Identifies the report template for the report. Reports are built using a report template. The report templates are: `BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT`
	ReportTemplate pulumi.StringInput `pulumi:"reportTemplate"`
}

func (ReportSettingPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportSettingProperties)(nil)).Elem()
}

func (i ReportSettingPropertiesArgs) ToReportSettingPropertiesOutput() ReportSettingPropertiesOutput {
	return i.ToReportSettingPropertiesOutputWithContext(context.Background())
}

func (i ReportSettingPropertiesArgs) ToReportSettingPropertiesOutputWithContext(ctx context.Context) ReportSettingPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportSettingPropertiesOutput)
}

func (i ReportSettingPropertiesArgs) ToReportSettingPropertiesPtrOutput() ReportSettingPropertiesPtrOutput {
	return i.ToReportSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i ReportSettingPropertiesArgs) ToReportSettingPropertiesPtrOutputWithContext(ctx context.Context) ReportSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportSettingPropertiesOutput).ToReportSettingPropertiesPtrOutputWithContext(ctx)
}

// ReportSettingPropertiesPtrInput is an input type that accepts ReportSettingPropertiesArgs, ReportSettingPropertiesPtr and ReportSettingPropertiesPtrOutput values.
// You can construct a concrete instance of `ReportSettingPropertiesPtrInput` via:
//
//          ReportSettingPropertiesArgs{...}
//
//  or:
//
//          nil
type ReportSettingPropertiesPtrInput interface {
	pulumi.Input

	ToReportSettingPropertiesPtrOutput() ReportSettingPropertiesPtrOutput
	ToReportSettingPropertiesPtrOutputWithContext(context.Context) ReportSettingPropertiesPtrOutput
}

type reportSettingPropertiesPtrType ReportSettingPropertiesArgs

func ReportSettingPropertiesPtr(v *ReportSettingPropertiesArgs) ReportSettingPropertiesPtrInput {
	return (*reportSettingPropertiesPtrType)(v)
}

func (*reportSettingPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportSettingProperties)(nil)).Elem()
}

func (i *reportSettingPropertiesPtrType) ToReportSettingPropertiesPtrOutput() ReportSettingPropertiesPtrOutput {
	return i.ToReportSettingPropertiesPtrOutputWithContext(context.Background())
}

func (i *reportSettingPropertiesPtrType) ToReportSettingPropertiesPtrOutputWithContext(ctx context.Context) ReportSettingPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportSettingPropertiesPtrOutput)
}

// Identifies the report template for the report. Reports are built using a report template.
type ReportSettingPropertiesOutput struct{ *pulumi.OutputState }

func (ReportSettingPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportSettingProperties)(nil)).Elem()
}

func (o ReportSettingPropertiesOutput) ToReportSettingPropertiesOutput() ReportSettingPropertiesOutput {
	return o
}

func (o ReportSettingPropertiesOutput) ToReportSettingPropertiesOutputWithContext(ctx context.Context) ReportSettingPropertiesOutput {
	return o
}

func (o ReportSettingPropertiesOutput) ToReportSettingPropertiesPtrOutput() ReportSettingPropertiesPtrOutput {
	return o.ToReportSettingPropertiesPtrOutputWithContext(context.Background())
}

func (o ReportSettingPropertiesOutput) ToReportSettingPropertiesPtrOutputWithContext(ctx context.Context) ReportSettingPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportSettingProperties) *ReportSettingProperties {
		return &v
	}).(ReportSettingPropertiesPtrOutput)
}

// The Amazon Resource Names (ARNs) of the frameworks a report covers.
func (o ReportSettingPropertiesOutput) FrameworkArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReportSettingProperties) []string { return v.FrameworkArns }).(pulumi.StringArrayOutput)
}

// Identifies the report template for the report. Reports are built using a report template. The report templates are: `BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT`
func (o ReportSettingPropertiesOutput) ReportTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v ReportSettingProperties) string { return v.ReportTemplate }).(pulumi.StringOutput)
}

type ReportSettingPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ReportSettingPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportSettingProperties)(nil)).Elem()
}

func (o ReportSettingPropertiesPtrOutput) ToReportSettingPropertiesPtrOutput() ReportSettingPropertiesPtrOutput {
	return o
}

func (o ReportSettingPropertiesPtrOutput) ToReportSettingPropertiesPtrOutputWithContext(ctx context.Context) ReportSettingPropertiesPtrOutput {
	return o
}

func (o ReportSettingPropertiesPtrOutput) Elem() ReportSettingPropertiesOutput {
	return o.ApplyT(func(v *ReportSettingProperties) ReportSettingProperties {
		if v != nil {
			return *v
		}
		var ret ReportSettingProperties
		return ret
	}).(ReportSettingPropertiesOutput)
}

// The Amazon Resource Names (ARNs) of the frameworks a report covers.
func (o ReportSettingPropertiesPtrOutput) FrameworkArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReportSettingProperties) []string {
		if v == nil {
			return nil
		}
		return v.FrameworkArns
	}).(pulumi.StringArrayOutput)
}

// Identifies the report template for the report. Reports are built using a report template. The report templates are: `BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT`
func (o ReportSettingPropertiesPtrOutput) ReportTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportSettingProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ReportTemplate
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BackupPlanAdvancedBackupSettingResourceTypeOutput{})
	pulumi.RegisterOutputType(BackupPlanAdvancedBackupSettingResourceTypeArrayOutput{})
	pulumi.RegisterOutputType(BackupPlanBackupRuleResourceTypeOutput{})
	pulumi.RegisterOutputType(BackupPlanBackupRuleResourceTypeArrayOutput{})
	pulumi.RegisterOutputType(BackupPlanCopyActionResourceTypeOutput{})
	pulumi.RegisterOutputType(BackupPlanCopyActionResourceTypeArrayOutput{})
	pulumi.RegisterOutputType(BackupPlanLifecycleResourceTypeOutput{})
	pulumi.RegisterOutputType(BackupPlanLifecycleResourceTypePtrOutput{})
	pulumi.RegisterOutputType(BackupPlanResourceTypeOutput{})
	pulumi.RegisterOutputType(BackupPlanResourceTypePtrOutput{})
	pulumi.RegisterOutputType(BackupSelectionConditionParameterOutput{})
	pulumi.RegisterOutputType(BackupSelectionConditionParameterArrayOutput{})
	pulumi.RegisterOutputType(BackupSelectionConditionResourceTypeOutput{})
	pulumi.RegisterOutputType(BackupSelectionConditionResourceTypeArrayOutput{})
	pulumi.RegisterOutputType(BackupSelectionResourceTypeOutput{})
	pulumi.RegisterOutputType(BackupSelectionResourceTypePtrOutput{})
	pulumi.RegisterOutputType(BackupSelectionResourceTypeConditionsPropertiesOutput{})
	pulumi.RegisterOutputType(BackupSelectionResourceTypeConditionsPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BackupVaultLockConfigurationTypeOutput{})
	pulumi.RegisterOutputType(BackupVaultLockConfigurationTypePtrOutput{})
	pulumi.RegisterOutputType(BackupVaultNotificationObjectTypeOutput{})
	pulumi.RegisterOutputType(BackupVaultNotificationObjectTypePtrOutput{})
	pulumi.RegisterOutputType(FrameworkControlOutput{})
	pulumi.RegisterOutputType(FrameworkControlArrayOutput{})
	pulumi.RegisterOutputType(FrameworkControlControlScopePropertiesOutput{})
	pulumi.RegisterOutputType(FrameworkControlControlScopePropertiesPtrOutput{})
	pulumi.RegisterOutputType(FrameworkControlInputParameterOutput{})
	pulumi.RegisterOutputType(FrameworkControlInputParameterArrayOutput{})
	pulumi.RegisterOutputType(FrameworkTagOutput{})
	pulumi.RegisterOutputType(FrameworkTagArrayOutput{})
	pulumi.RegisterOutputType(ReportDeliveryChannelPropertiesOutput{})
	pulumi.RegisterOutputType(ReportDeliveryChannelPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ReportPlanTagOutput{})
	pulumi.RegisterOutputType(ReportPlanTagArrayOutput{})
	pulumi.RegisterOutputType(ReportSettingPropertiesOutput{})
	pulumi.RegisterOutputType(ReportSettingPropertiesPtrOutput{})
}
