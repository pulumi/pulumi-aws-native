// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

type RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm string

const (
	RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmLatestWithinWindow = RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm("LATEST_WITHIN_WINDOW")
	RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmRandomWithinWindow = RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm("RANDOM_WITHIN_WINDOW")
)

func (RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm)(nil)).Elem()
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput() RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput {
	return pulumi.ToOutput(e).(RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput)
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput)
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput() RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput {
	return e.ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutputWithContext(context.Background())
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput {
	return RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm(e).ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutputWithContext(ctx).ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutputWithContext(ctx)
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput struct{ *pulumi.OutputState }

func (RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm)(nil)).Elem()
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput() RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput {
	return o
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput {
	return o
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput() RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput {
	return o.ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutputWithContext(context.Background())
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) *RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm {
		return &v
	}).(RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput)
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput) ToOutput(ctx context.Context) pulumix.Output[RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm] {
	return pulumix.Output[RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm]{
		OutputState: o.OutputState,
	}
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput struct{ *pulumi.OutputState }

func (RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm)(nil)).Elem()
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput() RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput {
	return o
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput {
	return o
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm] {
	return pulumix.Output[*RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm]{
		OutputState: o.OutputState,
	}
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput) Elem() RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput {
	return o.ApplyT(func(v *RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm {
		if v != nil {
			return *v
		}
		var ret RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm
		return ret
	}).(RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput)
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmInput is an input type that accepts RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmArgs and RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput values.
// You can construct a concrete instance of `RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmInput` via:
//
//	RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmArgs{...}
type RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmInput interface {
	pulumi.Input

	ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput() RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput
	ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutputWithContext(context.Context) RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput
}

var restoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrType = reflect.TypeOf((**RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm)(nil)).Elem()

type RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrInput interface {
	pulumi.Input

	ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput() RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput
	ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutputWithContext(context.Context) RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput
}

type restoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtr string

func RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtr(v string) RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrInput {
	return (*restoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtr)(&v)
}

func (*restoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtr) ElementType() reflect.Type {
	return restoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrType
}

func (in *restoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtr) ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput() RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput {
	return pulumi.ToOutput(in).(RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput)
}

func (in *restoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtr) ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput)
}

func (in *restoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtr) ToOutput(ctx context.Context) pulumix.Output[*RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm] {
	return pulumix.Output[*RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm]{
		OutputState: in.ToRestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutputWithContext(ctx).OutputState,
	}
}

type RestoreTestingPlanRestoreTestingRecoveryPointType string

const (
	RestoreTestingPlanRestoreTestingRecoveryPointTypeSnapshot   = RestoreTestingPlanRestoreTestingRecoveryPointType("SNAPSHOT")
	RestoreTestingPlanRestoreTestingRecoveryPointTypeContinuous = RestoreTestingPlanRestoreTestingRecoveryPointType("CONTINUOUS")
)

func (RestoreTestingPlanRestoreTestingRecoveryPointType) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreTestingPlanRestoreTestingRecoveryPointType)(nil)).Elem()
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointType) ToRestoreTestingPlanRestoreTestingRecoveryPointTypeOutput() RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput {
	return pulumi.ToOutput(e).(RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput)
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointType) ToRestoreTestingPlanRestoreTestingRecoveryPointTypeOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput)
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointType) ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput() RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput {
	return e.ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutputWithContext(context.Background())
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointType) ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput {
	return RestoreTestingPlanRestoreTestingRecoveryPointType(e).ToRestoreTestingPlanRestoreTestingRecoveryPointTypeOutputWithContext(ctx).ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutputWithContext(ctx)
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e RestoreTestingPlanRestoreTestingRecoveryPointType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput struct{ *pulumi.OutputState }

func (RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestoreTestingPlanRestoreTestingRecoveryPointType)(nil)).Elem()
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointTypeOutput() RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput {
	return o
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointTypeOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput {
	return o
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput() RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput {
	return o.ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutputWithContext(context.Background())
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RestoreTestingPlanRestoreTestingRecoveryPointType) *RestoreTestingPlanRestoreTestingRecoveryPointType {
		return &v
	}).(RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput)
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput) ToOutput(ctx context.Context) pulumix.Output[RestoreTestingPlanRestoreTestingRecoveryPointType] {
	return pulumix.Output[RestoreTestingPlanRestoreTestingRecoveryPointType]{
		OutputState: o.OutputState,
	}
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RestoreTestingPlanRestoreTestingRecoveryPointType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e RestoreTestingPlanRestoreTestingRecoveryPointType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput struct{ *pulumi.OutputState }

func (RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreTestingPlanRestoreTestingRecoveryPointType)(nil)).Elem()
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput() RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput {
	return o
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput {
	return o
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*RestoreTestingPlanRestoreTestingRecoveryPointType] {
	return pulumix.Output[*RestoreTestingPlanRestoreTestingRecoveryPointType]{
		OutputState: o.OutputState,
	}
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput) Elem() RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput {
	return o.ApplyT(func(v *RestoreTestingPlanRestoreTestingRecoveryPointType) RestoreTestingPlanRestoreTestingRecoveryPointType {
		if v != nil {
			return *v
		}
		var ret RestoreTestingPlanRestoreTestingRecoveryPointType
		return ret
	}).(RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput)
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *RestoreTestingPlanRestoreTestingRecoveryPointType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// RestoreTestingPlanRestoreTestingRecoveryPointTypeInput is an input type that accepts RestoreTestingPlanRestoreTestingRecoveryPointTypeArgs and RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput values.
// You can construct a concrete instance of `RestoreTestingPlanRestoreTestingRecoveryPointTypeInput` via:
//
//	RestoreTestingPlanRestoreTestingRecoveryPointTypeArgs{...}
type RestoreTestingPlanRestoreTestingRecoveryPointTypeInput interface {
	pulumi.Input

	ToRestoreTestingPlanRestoreTestingRecoveryPointTypeOutput() RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput
	ToRestoreTestingPlanRestoreTestingRecoveryPointTypeOutputWithContext(context.Context) RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput
}

var restoreTestingPlanRestoreTestingRecoveryPointTypePtrType = reflect.TypeOf((**RestoreTestingPlanRestoreTestingRecoveryPointType)(nil)).Elem()

type RestoreTestingPlanRestoreTestingRecoveryPointTypePtrInput interface {
	pulumi.Input

	ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput() RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput
	ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutputWithContext(context.Context) RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput
}

type restoreTestingPlanRestoreTestingRecoveryPointTypePtr string

func RestoreTestingPlanRestoreTestingRecoveryPointTypePtr(v string) RestoreTestingPlanRestoreTestingRecoveryPointTypePtrInput {
	return (*restoreTestingPlanRestoreTestingRecoveryPointTypePtr)(&v)
}

func (*restoreTestingPlanRestoreTestingRecoveryPointTypePtr) ElementType() reflect.Type {
	return restoreTestingPlanRestoreTestingRecoveryPointTypePtrType
}

func (in *restoreTestingPlanRestoreTestingRecoveryPointTypePtr) ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput() RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput {
	return pulumi.ToOutput(in).(RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput)
}

func (in *restoreTestingPlanRestoreTestingRecoveryPointTypePtr) ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput)
}

func (in *restoreTestingPlanRestoreTestingRecoveryPointTypePtr) ToOutput(ctx context.Context) pulumix.Output[*RestoreTestingPlanRestoreTestingRecoveryPointType] {
	return pulumix.Output[*RestoreTestingPlanRestoreTestingRecoveryPointType]{
		OutputState: in.ToRestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutputWithContext(ctx).OutputState,
	}
}

// RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayInput is an input type that accepts RestoreTestingPlanRestoreTestingRecoveryPointTypeArray and RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput values.
// You can construct a concrete instance of `RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayInput` via:
//
//	RestoreTestingPlanRestoreTestingRecoveryPointTypeArray{ RestoreTestingPlanRestoreTestingRecoveryPointTypeArgs{...} }
type RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayInput interface {
	pulumi.Input

	ToRestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput() RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput
	ToRestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutputWithContext(context.Context) RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput
}

type RestoreTestingPlanRestoreTestingRecoveryPointTypeArray []RestoreTestingPlanRestoreTestingRecoveryPointType

func (RestoreTestingPlanRestoreTestingRecoveryPointTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestoreTestingPlanRestoreTestingRecoveryPointType)(nil)).Elem()
}

func (i RestoreTestingPlanRestoreTestingRecoveryPointTypeArray) ToRestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput() RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput {
	return i.ToRestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutputWithContext(context.Background())
}

func (i RestoreTestingPlanRestoreTestingRecoveryPointTypeArray) ToRestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput)
}

func (i RestoreTestingPlanRestoreTestingRecoveryPointTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]RestoreTestingPlanRestoreTestingRecoveryPointType] {
	return pulumix.Output[[]RestoreTestingPlanRestoreTestingRecoveryPointType]{
		OutputState: i.ToRestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput struct{ *pulumi.OutputState }

func (RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RestoreTestingPlanRestoreTestingRecoveryPointType)(nil)).Elem()
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput() RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput {
	return o
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput) ToRestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutputWithContext(ctx context.Context) RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput {
	return o
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RestoreTestingPlanRestoreTestingRecoveryPointType] {
	return pulumix.Output[[]RestoreTestingPlanRestoreTestingRecoveryPointType]{
		OutputState: o.OutputState,
	}
}

func (o RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput) Index(i pulumi.IntInput) RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RestoreTestingPlanRestoreTestingRecoveryPointType {
		return vs[0].([]RestoreTestingPlanRestoreTestingRecoveryPointType)[vs[1].(int)]
	}).(RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmInput)(nil)).Elem(), RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm("LATEST_WITHIN_WINDOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrInput)(nil)).Elem(), RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithm("LATEST_WITHIN_WINDOW"))
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreTestingPlanRestoreTestingRecoveryPointTypeInput)(nil)).Elem(), RestoreTestingPlanRestoreTestingRecoveryPointType("SNAPSHOT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreTestingPlanRestoreTestingRecoveryPointTypePtrInput)(nil)).Elem(), RestoreTestingPlanRestoreTestingRecoveryPointType("SNAPSHOT"))
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayInput)(nil)).Elem(), RestoreTestingPlanRestoreTestingRecoveryPointTypeArray{})
	pulumi.RegisterOutputType(RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmOutput{})
	pulumi.RegisterOutputType(RestoreTestingPlanRestoreTestingRecoveryPointSelectionAlgorithmPtrOutput{})
	pulumi.RegisterOutputType(RestoreTestingPlanRestoreTestingRecoveryPointTypeOutput{})
	pulumi.RegisterOutputType(RestoreTestingPlanRestoreTestingRecoveryPointTypePtrOutput{})
	pulumi.RegisterOutputType(RestoreTestingPlanRestoreTestingRecoveryPointTypeArrayOutput{})
}
