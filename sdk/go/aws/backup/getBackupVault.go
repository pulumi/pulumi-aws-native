// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::Backup::BackupVault
func LookupBackupVault(ctx *pulumi.Context, args *LookupBackupVaultArgs, opts ...pulumi.InvokeOption) (*LookupBackupVaultResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBackupVaultResult
	err := ctx.Invoke("aws-native:backup:getBackupVault", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupBackupVaultArgs struct {
	// The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created.
	BackupVaultName string `pulumi:"backupVaultName"`
}

type LookupBackupVaultResult struct {
	// A resource-based policy that is used to manage access permissions on the target backup vault.
	//
	// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Backup::BackupVault` for more information about the expected schema for this property.
	AccessPolicy interface{} `pulumi:"accessPolicy"`
	// An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault` .
	BackupVaultArn *string `pulumi:"backupVaultArn"`
	// The tags to assign to the backup vault.
	BackupVaultTags map[string]string `pulumi:"backupVaultTags"`
	// The `LockConfigurationType` property type specifies configuration for [AWS Backup Vault Lock](https://docs.aws.amazon.com/aws-backup/latest/devguide/vault-lock.html) .
	LockConfiguration *BackupVaultLockConfigurationType `pulumi:"lockConfiguration"`
	// Specifies an object containing SNS event notification properties for the target backup vault.
	Notifications *BackupVaultNotificationObjectType `pulumi:"notifications"`
}

func LookupBackupVaultOutput(ctx *pulumi.Context, args LookupBackupVaultOutputArgs, opts ...pulumi.InvokeOption) LookupBackupVaultResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBackupVaultResult, error) {
			args := v.(LookupBackupVaultArgs)
			r, err := LookupBackupVault(ctx, &args, opts...)
			var s LookupBackupVaultResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBackupVaultResultOutput)
}

type LookupBackupVaultOutputArgs struct {
	// The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the account used to create them and the AWS Region where they are created.
	BackupVaultName pulumi.StringInput `pulumi:"backupVaultName"`
}

func (LookupBackupVaultOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupVaultArgs)(nil)).Elem()
}

type LookupBackupVaultResultOutput struct{ *pulumi.OutputState }

func (LookupBackupVaultResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBackupVaultResult)(nil)).Elem()
}

func (o LookupBackupVaultResultOutput) ToLookupBackupVaultResultOutput() LookupBackupVaultResultOutput {
	return o
}

func (o LookupBackupVaultResultOutput) ToLookupBackupVaultResultOutputWithContext(ctx context.Context) LookupBackupVaultResultOutput {
	return o
}

// A resource-based policy that is used to manage access permissions on the target backup vault.
//
// Search the [CloudFormation User Guide](https://docs.aws.amazon.com/cloudformation/) for `AWS::Backup::BackupVault` for more information about the expected schema for this property.
func (o LookupBackupVaultResultOutput) AccessPolicy() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) interface{} { return v.AccessPolicy }).(pulumi.AnyOutput)
}

// An Amazon Resource Name (ARN) that uniquely identifies a backup vault; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault` .
func (o LookupBackupVaultResultOutput) BackupVaultArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) *string { return v.BackupVaultArn }).(pulumi.StringPtrOutput)
}

// The tags to assign to the backup vault.
func (o LookupBackupVaultResultOutput) BackupVaultTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) map[string]string { return v.BackupVaultTags }).(pulumi.StringMapOutput)
}

// The `LockConfigurationType` property type specifies configuration for [AWS Backup Vault Lock](https://docs.aws.amazon.com/aws-backup/latest/devguide/vault-lock.html) .
func (o LookupBackupVaultResultOutput) LockConfiguration() BackupVaultLockConfigurationTypePtrOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) *BackupVaultLockConfigurationType { return v.LockConfiguration }).(BackupVaultLockConfigurationTypePtrOutput)
}

// Specifies an object containing SNS event notification properties for the target backup vault.
func (o LookupBackupVaultResultOutput) Notifications() BackupVaultNotificationObjectTypePtrOutput {
	return o.ApplyT(func(v LookupBackupVaultResult) *BackupVaultNotificationObjectType { return v.Notifications }).(BackupVaultNotificationObjectTypePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBackupVaultResultOutput{})
}
