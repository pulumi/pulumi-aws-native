// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53recoveryreadiness

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The API Schema for AWS Route53 Recovery Readiness Cells.
func LookupCell(ctx *pulumi.Context, args *LookupCellArgs, opts ...pulumi.InvokeOption) (*LookupCellResult, error) {
	var rv LookupCellResult
	err := ctx.Invoke("aws-native:route53recoveryreadiness:getCell", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCellArgs struct {
	// The name of the cell to create.
	CellName string `pulumi:"cellName"`
}

type LookupCellResult struct {
	// The Amazon Resource Name (ARN) of the cell.
	CellArn *string `pulumi:"cellArn"`
	// A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific Regions.
	Cells []string `pulumi:"cells"`
	// The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element.
	ParentReadinessScopes []string `pulumi:"parentReadinessScopes"`
	// A collection of tags associated with a resource
	Tags []CellTag `pulumi:"tags"`
}

func LookupCellOutput(ctx *pulumi.Context, args LookupCellOutputArgs, opts ...pulumi.InvokeOption) LookupCellResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCellResult, error) {
			args := v.(LookupCellArgs)
			r, err := LookupCell(ctx, &args, opts...)
			return *r, err
		}).(LookupCellResultOutput)
}

type LookupCellOutputArgs struct {
	// The name of the cell to create.
	CellName pulumi.StringInput `pulumi:"cellName"`
}

func (LookupCellOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCellArgs)(nil)).Elem()
}

type LookupCellResultOutput struct{ *pulumi.OutputState }

func (LookupCellResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCellResult)(nil)).Elem()
}

func (o LookupCellResultOutput) ToLookupCellResultOutput() LookupCellResultOutput {
	return o
}

func (o LookupCellResultOutput) ToLookupCellResultOutputWithContext(ctx context.Context) LookupCellResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the cell.
func (o LookupCellResultOutput) CellArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCellResult) *string { return v.CellArn }).(pulumi.StringPtrOutput)
}

// A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific Regions.
func (o LookupCellResultOutput) Cells() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCellResult) []string { return v.Cells }).(pulumi.StringArrayOutput)
}

// The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element.
func (o LookupCellResultOutput) ParentReadinessScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCellResult) []string { return v.ParentReadinessScopes }).(pulumi.StringArrayOutput)
}

// A collection of tags associated with a resource
func (o LookupCellResultOutput) Tags() CellTagArrayOutput {
	return o.ApplyT(func(v LookupCellResult) []CellTag { return v.Tags }).(CellTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCellResultOutput{})
}
