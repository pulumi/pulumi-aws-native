// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53recoveryreadiness

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CellTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

type ReadinessCheckTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

type RecoveryGroupTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// A component for DNS/routing control readiness checks.
type ResourceSetDnsTargetResource struct {
	// The domain name that acts as an ingress point to a portion of the customer application.
	DomainName *string `pulumi:"domainName"`
	// The hosted zone Amazon Resource Name (ARN) that contains the DNS record with the provided name of the target resource.
	HostedZoneArn *string `pulumi:"hostedZoneArn"`
	// The Route 53 record set ID that will uniquely identify a DNS record, given a name and a type.
	RecordSetId *string `pulumi:"recordSetId"`
	// The type of DNS record of the target resource.
	RecordType     *string                    `pulumi:"recordType"`
	TargetResource *ResourceSetTargetResource `pulumi:"targetResource"`
}

// ResourceSetDnsTargetResourceInput is an input type that accepts ResourceSetDnsTargetResourceArgs and ResourceSetDnsTargetResourceOutput values.
// You can construct a concrete instance of `ResourceSetDnsTargetResourceInput` via:
//
//	ResourceSetDnsTargetResourceArgs{...}
type ResourceSetDnsTargetResourceInput interface {
	pulumi.Input

	ToResourceSetDnsTargetResourceOutput() ResourceSetDnsTargetResourceOutput
	ToResourceSetDnsTargetResourceOutputWithContext(context.Context) ResourceSetDnsTargetResourceOutput
}

// A component for DNS/routing control readiness checks.
type ResourceSetDnsTargetResourceArgs struct {
	// The domain name that acts as an ingress point to a portion of the customer application.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// The hosted zone Amazon Resource Name (ARN) that contains the DNS record with the provided name of the target resource.
	HostedZoneArn pulumi.StringPtrInput `pulumi:"hostedZoneArn"`
	// The Route 53 record set ID that will uniquely identify a DNS record, given a name and a type.
	RecordSetId pulumi.StringPtrInput `pulumi:"recordSetId"`
	// The type of DNS record of the target resource.
	RecordType     pulumi.StringPtrInput             `pulumi:"recordType"`
	TargetResource ResourceSetTargetResourcePtrInput `pulumi:"targetResource"`
}

func (ResourceSetDnsTargetResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetDnsTargetResource)(nil)).Elem()
}

func (i ResourceSetDnsTargetResourceArgs) ToResourceSetDnsTargetResourceOutput() ResourceSetDnsTargetResourceOutput {
	return i.ToResourceSetDnsTargetResourceOutputWithContext(context.Background())
}

func (i ResourceSetDnsTargetResourceArgs) ToResourceSetDnsTargetResourceOutputWithContext(ctx context.Context) ResourceSetDnsTargetResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetDnsTargetResourceOutput)
}

func (i ResourceSetDnsTargetResourceArgs) ToResourceSetDnsTargetResourcePtrOutput() ResourceSetDnsTargetResourcePtrOutput {
	return i.ToResourceSetDnsTargetResourcePtrOutputWithContext(context.Background())
}

func (i ResourceSetDnsTargetResourceArgs) ToResourceSetDnsTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetDnsTargetResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetDnsTargetResourceOutput).ToResourceSetDnsTargetResourcePtrOutputWithContext(ctx)
}

// ResourceSetDnsTargetResourcePtrInput is an input type that accepts ResourceSetDnsTargetResourceArgs, ResourceSetDnsTargetResourcePtr and ResourceSetDnsTargetResourcePtrOutput values.
// You can construct a concrete instance of `ResourceSetDnsTargetResourcePtrInput` via:
//
//	        ResourceSetDnsTargetResourceArgs{...}
//
//	or:
//
//	        nil
type ResourceSetDnsTargetResourcePtrInput interface {
	pulumi.Input

	ToResourceSetDnsTargetResourcePtrOutput() ResourceSetDnsTargetResourcePtrOutput
	ToResourceSetDnsTargetResourcePtrOutputWithContext(context.Context) ResourceSetDnsTargetResourcePtrOutput
}

type resourceSetDnsTargetResourcePtrType ResourceSetDnsTargetResourceArgs

func ResourceSetDnsTargetResourcePtr(v *ResourceSetDnsTargetResourceArgs) ResourceSetDnsTargetResourcePtrInput {
	return (*resourceSetDnsTargetResourcePtrType)(v)
}

func (*resourceSetDnsTargetResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetDnsTargetResource)(nil)).Elem()
}

func (i *resourceSetDnsTargetResourcePtrType) ToResourceSetDnsTargetResourcePtrOutput() ResourceSetDnsTargetResourcePtrOutput {
	return i.ToResourceSetDnsTargetResourcePtrOutputWithContext(context.Background())
}

func (i *resourceSetDnsTargetResourcePtrType) ToResourceSetDnsTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetDnsTargetResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetDnsTargetResourcePtrOutput)
}

// A component for DNS/routing control readiness checks.
type ResourceSetDnsTargetResourceOutput struct{ *pulumi.OutputState }

func (ResourceSetDnsTargetResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetDnsTargetResource)(nil)).Elem()
}

func (o ResourceSetDnsTargetResourceOutput) ToResourceSetDnsTargetResourceOutput() ResourceSetDnsTargetResourceOutput {
	return o
}

func (o ResourceSetDnsTargetResourceOutput) ToResourceSetDnsTargetResourceOutputWithContext(ctx context.Context) ResourceSetDnsTargetResourceOutput {
	return o
}

func (o ResourceSetDnsTargetResourceOutput) ToResourceSetDnsTargetResourcePtrOutput() ResourceSetDnsTargetResourcePtrOutput {
	return o.ToResourceSetDnsTargetResourcePtrOutputWithContext(context.Background())
}

func (o ResourceSetDnsTargetResourceOutput) ToResourceSetDnsTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetDnsTargetResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceSetDnsTargetResource) *ResourceSetDnsTargetResource {
		return &v
	}).(ResourceSetDnsTargetResourcePtrOutput)
}

// The domain name that acts as an ingress point to a portion of the customer application.
func (o ResourceSetDnsTargetResourceOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetDnsTargetResource) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// The hosted zone Amazon Resource Name (ARN) that contains the DNS record with the provided name of the target resource.
func (o ResourceSetDnsTargetResourceOutput) HostedZoneArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetDnsTargetResource) *string { return v.HostedZoneArn }).(pulumi.StringPtrOutput)
}

// The Route 53 record set ID that will uniquely identify a DNS record, given a name and a type.
func (o ResourceSetDnsTargetResourceOutput) RecordSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetDnsTargetResource) *string { return v.RecordSetId }).(pulumi.StringPtrOutput)
}

// The type of DNS record of the target resource.
func (o ResourceSetDnsTargetResourceOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetDnsTargetResource) *string { return v.RecordType }).(pulumi.StringPtrOutput)
}

func (o ResourceSetDnsTargetResourceOutput) TargetResource() ResourceSetTargetResourcePtrOutput {
	return o.ApplyT(func(v ResourceSetDnsTargetResource) *ResourceSetTargetResource { return v.TargetResource }).(ResourceSetTargetResourcePtrOutput)
}

type ResourceSetDnsTargetResourcePtrOutput struct{ *pulumi.OutputState }

func (ResourceSetDnsTargetResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetDnsTargetResource)(nil)).Elem()
}

func (o ResourceSetDnsTargetResourcePtrOutput) ToResourceSetDnsTargetResourcePtrOutput() ResourceSetDnsTargetResourcePtrOutput {
	return o
}

func (o ResourceSetDnsTargetResourcePtrOutput) ToResourceSetDnsTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetDnsTargetResourcePtrOutput {
	return o
}

func (o ResourceSetDnsTargetResourcePtrOutput) Elem() ResourceSetDnsTargetResourceOutput {
	return o.ApplyT(func(v *ResourceSetDnsTargetResource) ResourceSetDnsTargetResource {
		if v != nil {
			return *v
		}
		var ret ResourceSetDnsTargetResource
		return ret
	}).(ResourceSetDnsTargetResourceOutput)
}

// The domain name that acts as an ingress point to a portion of the customer application.
func (o ResourceSetDnsTargetResourcePtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetDnsTargetResource) *string {
		if v == nil {
			return nil
		}
		return v.DomainName
	}).(pulumi.StringPtrOutput)
}

// The hosted zone Amazon Resource Name (ARN) that contains the DNS record with the provided name of the target resource.
func (o ResourceSetDnsTargetResourcePtrOutput) HostedZoneArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetDnsTargetResource) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneArn
	}).(pulumi.StringPtrOutput)
}

// The Route 53 record set ID that will uniquely identify a DNS record, given a name and a type.
func (o ResourceSetDnsTargetResourcePtrOutput) RecordSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetDnsTargetResource) *string {
		if v == nil {
			return nil
		}
		return v.RecordSetId
	}).(pulumi.StringPtrOutput)
}

// The type of DNS record of the target resource.
func (o ResourceSetDnsTargetResourcePtrOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetDnsTargetResource) *string {
		if v == nil {
			return nil
		}
		return v.RecordType
	}).(pulumi.StringPtrOutput)
}

func (o ResourceSetDnsTargetResourcePtrOutput) TargetResource() ResourceSetTargetResourcePtrOutput {
	return o.ApplyT(func(v *ResourceSetDnsTargetResource) *ResourceSetTargetResource {
		if v == nil {
			return nil
		}
		return v.TargetResource
	}).(ResourceSetTargetResourcePtrOutput)
}

// The Network Load Balancer resource that a DNS target resource points to.
type ResourceSetNlbResource struct {
	// A Network Load Balancer resource Amazon Resource Name (ARN).
	Arn *string `pulumi:"arn"`
}

// ResourceSetNlbResourceInput is an input type that accepts ResourceSetNlbResourceArgs and ResourceSetNlbResourceOutput values.
// You can construct a concrete instance of `ResourceSetNlbResourceInput` via:
//
//	ResourceSetNlbResourceArgs{...}
type ResourceSetNlbResourceInput interface {
	pulumi.Input

	ToResourceSetNlbResourceOutput() ResourceSetNlbResourceOutput
	ToResourceSetNlbResourceOutputWithContext(context.Context) ResourceSetNlbResourceOutput
}

// The Network Load Balancer resource that a DNS target resource points to.
type ResourceSetNlbResourceArgs struct {
	// A Network Load Balancer resource Amazon Resource Name (ARN).
	Arn pulumi.StringPtrInput `pulumi:"arn"`
}

func (ResourceSetNlbResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetNlbResource)(nil)).Elem()
}

func (i ResourceSetNlbResourceArgs) ToResourceSetNlbResourceOutput() ResourceSetNlbResourceOutput {
	return i.ToResourceSetNlbResourceOutputWithContext(context.Background())
}

func (i ResourceSetNlbResourceArgs) ToResourceSetNlbResourceOutputWithContext(ctx context.Context) ResourceSetNlbResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetNlbResourceOutput)
}

func (i ResourceSetNlbResourceArgs) ToResourceSetNlbResourcePtrOutput() ResourceSetNlbResourcePtrOutput {
	return i.ToResourceSetNlbResourcePtrOutputWithContext(context.Background())
}

func (i ResourceSetNlbResourceArgs) ToResourceSetNlbResourcePtrOutputWithContext(ctx context.Context) ResourceSetNlbResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetNlbResourceOutput).ToResourceSetNlbResourcePtrOutputWithContext(ctx)
}

// ResourceSetNlbResourcePtrInput is an input type that accepts ResourceSetNlbResourceArgs, ResourceSetNlbResourcePtr and ResourceSetNlbResourcePtrOutput values.
// You can construct a concrete instance of `ResourceSetNlbResourcePtrInput` via:
//
//	        ResourceSetNlbResourceArgs{...}
//
//	or:
//
//	        nil
type ResourceSetNlbResourcePtrInput interface {
	pulumi.Input

	ToResourceSetNlbResourcePtrOutput() ResourceSetNlbResourcePtrOutput
	ToResourceSetNlbResourcePtrOutputWithContext(context.Context) ResourceSetNlbResourcePtrOutput
}

type resourceSetNlbResourcePtrType ResourceSetNlbResourceArgs

func ResourceSetNlbResourcePtr(v *ResourceSetNlbResourceArgs) ResourceSetNlbResourcePtrInput {
	return (*resourceSetNlbResourcePtrType)(v)
}

func (*resourceSetNlbResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetNlbResource)(nil)).Elem()
}

func (i *resourceSetNlbResourcePtrType) ToResourceSetNlbResourcePtrOutput() ResourceSetNlbResourcePtrOutput {
	return i.ToResourceSetNlbResourcePtrOutputWithContext(context.Background())
}

func (i *resourceSetNlbResourcePtrType) ToResourceSetNlbResourcePtrOutputWithContext(ctx context.Context) ResourceSetNlbResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetNlbResourcePtrOutput)
}

// The Network Load Balancer resource that a DNS target resource points to.
type ResourceSetNlbResourceOutput struct{ *pulumi.OutputState }

func (ResourceSetNlbResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetNlbResource)(nil)).Elem()
}

func (o ResourceSetNlbResourceOutput) ToResourceSetNlbResourceOutput() ResourceSetNlbResourceOutput {
	return o
}

func (o ResourceSetNlbResourceOutput) ToResourceSetNlbResourceOutputWithContext(ctx context.Context) ResourceSetNlbResourceOutput {
	return o
}

func (o ResourceSetNlbResourceOutput) ToResourceSetNlbResourcePtrOutput() ResourceSetNlbResourcePtrOutput {
	return o.ToResourceSetNlbResourcePtrOutputWithContext(context.Background())
}

func (o ResourceSetNlbResourceOutput) ToResourceSetNlbResourcePtrOutputWithContext(ctx context.Context) ResourceSetNlbResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceSetNlbResource) *ResourceSetNlbResource {
		return &v
	}).(ResourceSetNlbResourcePtrOutput)
}

// A Network Load Balancer resource Amazon Resource Name (ARN).
func (o ResourceSetNlbResourceOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetNlbResource) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

type ResourceSetNlbResourcePtrOutput struct{ *pulumi.OutputState }

func (ResourceSetNlbResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetNlbResource)(nil)).Elem()
}

func (o ResourceSetNlbResourcePtrOutput) ToResourceSetNlbResourcePtrOutput() ResourceSetNlbResourcePtrOutput {
	return o
}

func (o ResourceSetNlbResourcePtrOutput) ToResourceSetNlbResourcePtrOutputWithContext(ctx context.Context) ResourceSetNlbResourcePtrOutput {
	return o
}

func (o ResourceSetNlbResourcePtrOutput) Elem() ResourceSetNlbResourceOutput {
	return o.ApplyT(func(v *ResourceSetNlbResource) ResourceSetNlbResource {
		if v != nil {
			return *v
		}
		var ret ResourceSetNlbResource
		return ret
	}).(ResourceSetNlbResourceOutput)
}

// A Network Load Balancer resource Amazon Resource Name (ARN).
func (o ResourceSetNlbResourcePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetNlbResource) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

// The Route 53 resource that a DNS target resource record points to.
type ResourceSetR53ResourceRecord struct {
	// The DNS target domain name.
	DomainName *string `pulumi:"domainName"`
	// The Resource Record set id.
	RecordSetId *string `pulumi:"recordSetId"`
}

// ResourceSetR53ResourceRecordInput is an input type that accepts ResourceSetR53ResourceRecordArgs and ResourceSetR53ResourceRecordOutput values.
// You can construct a concrete instance of `ResourceSetR53ResourceRecordInput` via:
//
//	ResourceSetR53ResourceRecordArgs{...}
type ResourceSetR53ResourceRecordInput interface {
	pulumi.Input

	ToResourceSetR53ResourceRecordOutput() ResourceSetR53ResourceRecordOutput
	ToResourceSetR53ResourceRecordOutputWithContext(context.Context) ResourceSetR53ResourceRecordOutput
}

// The Route 53 resource that a DNS target resource record points to.
type ResourceSetR53ResourceRecordArgs struct {
	// The DNS target domain name.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// The Resource Record set id.
	RecordSetId pulumi.StringPtrInput `pulumi:"recordSetId"`
}

func (ResourceSetR53ResourceRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetR53ResourceRecord)(nil)).Elem()
}

func (i ResourceSetR53ResourceRecordArgs) ToResourceSetR53ResourceRecordOutput() ResourceSetR53ResourceRecordOutput {
	return i.ToResourceSetR53ResourceRecordOutputWithContext(context.Background())
}

func (i ResourceSetR53ResourceRecordArgs) ToResourceSetR53ResourceRecordOutputWithContext(ctx context.Context) ResourceSetR53ResourceRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetR53ResourceRecordOutput)
}

func (i ResourceSetR53ResourceRecordArgs) ToResourceSetR53ResourceRecordPtrOutput() ResourceSetR53ResourceRecordPtrOutput {
	return i.ToResourceSetR53ResourceRecordPtrOutputWithContext(context.Background())
}

func (i ResourceSetR53ResourceRecordArgs) ToResourceSetR53ResourceRecordPtrOutputWithContext(ctx context.Context) ResourceSetR53ResourceRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetR53ResourceRecordOutput).ToResourceSetR53ResourceRecordPtrOutputWithContext(ctx)
}

// ResourceSetR53ResourceRecordPtrInput is an input type that accepts ResourceSetR53ResourceRecordArgs, ResourceSetR53ResourceRecordPtr and ResourceSetR53ResourceRecordPtrOutput values.
// You can construct a concrete instance of `ResourceSetR53ResourceRecordPtrInput` via:
//
//	        ResourceSetR53ResourceRecordArgs{...}
//
//	or:
//
//	        nil
type ResourceSetR53ResourceRecordPtrInput interface {
	pulumi.Input

	ToResourceSetR53ResourceRecordPtrOutput() ResourceSetR53ResourceRecordPtrOutput
	ToResourceSetR53ResourceRecordPtrOutputWithContext(context.Context) ResourceSetR53ResourceRecordPtrOutput
}

type resourceSetR53ResourceRecordPtrType ResourceSetR53ResourceRecordArgs

func ResourceSetR53ResourceRecordPtr(v *ResourceSetR53ResourceRecordArgs) ResourceSetR53ResourceRecordPtrInput {
	return (*resourceSetR53ResourceRecordPtrType)(v)
}

func (*resourceSetR53ResourceRecordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetR53ResourceRecord)(nil)).Elem()
}

func (i *resourceSetR53ResourceRecordPtrType) ToResourceSetR53ResourceRecordPtrOutput() ResourceSetR53ResourceRecordPtrOutput {
	return i.ToResourceSetR53ResourceRecordPtrOutputWithContext(context.Background())
}

func (i *resourceSetR53ResourceRecordPtrType) ToResourceSetR53ResourceRecordPtrOutputWithContext(ctx context.Context) ResourceSetR53ResourceRecordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetR53ResourceRecordPtrOutput)
}

// The Route 53 resource that a DNS target resource record points to.
type ResourceSetR53ResourceRecordOutput struct{ *pulumi.OutputState }

func (ResourceSetR53ResourceRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetR53ResourceRecord)(nil)).Elem()
}

func (o ResourceSetR53ResourceRecordOutput) ToResourceSetR53ResourceRecordOutput() ResourceSetR53ResourceRecordOutput {
	return o
}

func (o ResourceSetR53ResourceRecordOutput) ToResourceSetR53ResourceRecordOutputWithContext(ctx context.Context) ResourceSetR53ResourceRecordOutput {
	return o
}

func (o ResourceSetR53ResourceRecordOutput) ToResourceSetR53ResourceRecordPtrOutput() ResourceSetR53ResourceRecordPtrOutput {
	return o.ToResourceSetR53ResourceRecordPtrOutputWithContext(context.Background())
}

func (o ResourceSetR53ResourceRecordOutput) ToResourceSetR53ResourceRecordPtrOutputWithContext(ctx context.Context) ResourceSetR53ResourceRecordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceSetR53ResourceRecord) *ResourceSetR53ResourceRecord {
		return &v
	}).(ResourceSetR53ResourceRecordPtrOutput)
}

// The DNS target domain name.
func (o ResourceSetR53ResourceRecordOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetR53ResourceRecord) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// The Resource Record set id.
func (o ResourceSetR53ResourceRecordOutput) RecordSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetR53ResourceRecord) *string { return v.RecordSetId }).(pulumi.StringPtrOutput)
}

type ResourceSetR53ResourceRecordPtrOutput struct{ *pulumi.OutputState }

func (ResourceSetR53ResourceRecordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetR53ResourceRecord)(nil)).Elem()
}

func (o ResourceSetR53ResourceRecordPtrOutput) ToResourceSetR53ResourceRecordPtrOutput() ResourceSetR53ResourceRecordPtrOutput {
	return o
}

func (o ResourceSetR53ResourceRecordPtrOutput) ToResourceSetR53ResourceRecordPtrOutputWithContext(ctx context.Context) ResourceSetR53ResourceRecordPtrOutput {
	return o
}

func (o ResourceSetR53ResourceRecordPtrOutput) Elem() ResourceSetR53ResourceRecordOutput {
	return o.ApplyT(func(v *ResourceSetR53ResourceRecord) ResourceSetR53ResourceRecord {
		if v != nil {
			return *v
		}
		var ret ResourceSetR53ResourceRecord
		return ret
	}).(ResourceSetR53ResourceRecordOutput)
}

// The DNS target domain name.
func (o ResourceSetR53ResourceRecordPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetR53ResourceRecord) *string {
		if v == nil {
			return nil
		}
		return v.DomainName
	}).(pulumi.StringPtrOutput)
}

// The Resource Record set id.
func (o ResourceSetR53ResourceRecordPtrOutput) RecordSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetR53ResourceRecord) *string {
		if v == nil {
			return nil
		}
		return v.RecordSetId
	}).(pulumi.StringPtrOutput)
}

// The resource element of a ResourceSet
type ResourceSetResource struct {
	// The component identifier of the resource, generated when DNS target resource is used.
	ComponentId       *string                       `pulumi:"componentId"`
	DnsTargetResource *ResourceSetDnsTargetResource `pulumi:"dnsTargetResource"`
	// A list of recovery group Amazon Resource Names (ARNs) and cell ARNs that this resource is contained within.
	ReadinessScopes []string `pulumi:"readinessScopes"`
	// The Amazon Resource Name (ARN) of the AWS resource.
	ResourceArn *string `pulumi:"resourceArn"`
}

// ResourceSetResourceInput is an input type that accepts ResourceSetResourceArgs and ResourceSetResourceOutput values.
// You can construct a concrete instance of `ResourceSetResourceInput` via:
//
//	ResourceSetResourceArgs{...}
type ResourceSetResourceInput interface {
	pulumi.Input

	ToResourceSetResourceOutput() ResourceSetResourceOutput
	ToResourceSetResourceOutputWithContext(context.Context) ResourceSetResourceOutput
}

// The resource element of a ResourceSet
type ResourceSetResourceArgs struct {
	// The component identifier of the resource, generated when DNS target resource is used.
	ComponentId       pulumi.StringPtrInput                `pulumi:"componentId"`
	DnsTargetResource ResourceSetDnsTargetResourcePtrInput `pulumi:"dnsTargetResource"`
	// A list of recovery group Amazon Resource Names (ARNs) and cell ARNs that this resource is contained within.
	ReadinessScopes pulumi.StringArrayInput `pulumi:"readinessScopes"`
	// The Amazon Resource Name (ARN) of the AWS resource.
	ResourceArn pulumi.StringPtrInput `pulumi:"resourceArn"`
}

func (ResourceSetResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResource)(nil)).Elem()
}

func (i ResourceSetResourceArgs) ToResourceSetResourceOutput() ResourceSetResourceOutput {
	return i.ToResourceSetResourceOutputWithContext(context.Background())
}

func (i ResourceSetResourceArgs) ToResourceSetResourceOutputWithContext(ctx context.Context) ResourceSetResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceOutput)
}

// ResourceSetResourceArrayInput is an input type that accepts ResourceSetResourceArray and ResourceSetResourceArrayOutput values.
// You can construct a concrete instance of `ResourceSetResourceArrayInput` via:
//
//	ResourceSetResourceArray{ ResourceSetResourceArgs{...} }
type ResourceSetResourceArrayInput interface {
	pulumi.Input

	ToResourceSetResourceArrayOutput() ResourceSetResourceArrayOutput
	ToResourceSetResourceArrayOutputWithContext(context.Context) ResourceSetResourceArrayOutput
}

type ResourceSetResourceArray []ResourceSetResourceInput

func (ResourceSetResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceSetResource)(nil)).Elem()
}

func (i ResourceSetResourceArray) ToResourceSetResourceArrayOutput() ResourceSetResourceArrayOutput {
	return i.ToResourceSetResourceArrayOutputWithContext(context.Background())
}

func (i ResourceSetResourceArray) ToResourceSetResourceArrayOutputWithContext(ctx context.Context) ResourceSetResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceArrayOutput)
}

// The resource element of a ResourceSet
type ResourceSetResourceOutput struct{ *pulumi.OutputState }

func (ResourceSetResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResource)(nil)).Elem()
}

func (o ResourceSetResourceOutput) ToResourceSetResourceOutput() ResourceSetResourceOutput {
	return o
}

func (o ResourceSetResourceOutput) ToResourceSetResourceOutputWithContext(ctx context.Context) ResourceSetResourceOutput {
	return o
}

// The component identifier of the resource, generated when DNS target resource is used.
func (o ResourceSetResourceOutput) ComponentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResource) *string { return v.ComponentId }).(pulumi.StringPtrOutput)
}

func (o ResourceSetResourceOutput) DnsTargetResource() ResourceSetDnsTargetResourcePtrOutput {
	return o.ApplyT(func(v ResourceSetResource) *ResourceSetDnsTargetResource { return v.DnsTargetResource }).(ResourceSetDnsTargetResourcePtrOutput)
}

// A list of recovery group Amazon Resource Names (ARNs) and cell ARNs that this resource is contained within.
func (o ResourceSetResourceOutput) ReadinessScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceSetResource) []string { return v.ReadinessScopes }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) of the AWS resource.
func (o ResourceSetResourceOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResource) *string { return v.ResourceArn }).(pulumi.StringPtrOutput)
}

type ResourceSetResourceArrayOutput struct{ *pulumi.OutputState }

func (ResourceSetResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceSetResource)(nil)).Elem()
}

func (o ResourceSetResourceArrayOutput) ToResourceSetResourceArrayOutput() ResourceSetResourceArrayOutput {
	return o
}

func (o ResourceSetResourceArrayOutput) ToResourceSetResourceArrayOutputWithContext(ctx context.Context) ResourceSetResourceArrayOutput {
	return o
}

func (o ResourceSetResourceArrayOutput) Index(i pulumi.IntInput) ResourceSetResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceSetResource {
		return vs[0].([]ResourceSetResource)[vs[1].(int)]
	}).(ResourceSetResourceOutput)
}

type ResourceSetTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// The target resource that the Route 53 record points to.
type ResourceSetTargetResource struct {
	NlbResource *ResourceSetNlbResource       `pulumi:"nlbResource"`
	R53Resource *ResourceSetR53ResourceRecord `pulumi:"r53Resource"`
}

// ResourceSetTargetResourceInput is an input type that accepts ResourceSetTargetResourceArgs and ResourceSetTargetResourceOutput values.
// You can construct a concrete instance of `ResourceSetTargetResourceInput` via:
//
//	ResourceSetTargetResourceArgs{...}
type ResourceSetTargetResourceInput interface {
	pulumi.Input

	ToResourceSetTargetResourceOutput() ResourceSetTargetResourceOutput
	ToResourceSetTargetResourceOutputWithContext(context.Context) ResourceSetTargetResourceOutput
}

// The target resource that the Route 53 record points to.
type ResourceSetTargetResourceArgs struct {
	NlbResource ResourceSetNlbResourcePtrInput       `pulumi:"nlbResource"`
	R53Resource ResourceSetR53ResourceRecordPtrInput `pulumi:"r53Resource"`
}

func (ResourceSetTargetResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetTargetResource)(nil)).Elem()
}

func (i ResourceSetTargetResourceArgs) ToResourceSetTargetResourceOutput() ResourceSetTargetResourceOutput {
	return i.ToResourceSetTargetResourceOutputWithContext(context.Background())
}

func (i ResourceSetTargetResourceArgs) ToResourceSetTargetResourceOutputWithContext(ctx context.Context) ResourceSetTargetResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetTargetResourceOutput)
}

func (i ResourceSetTargetResourceArgs) ToResourceSetTargetResourcePtrOutput() ResourceSetTargetResourcePtrOutput {
	return i.ToResourceSetTargetResourcePtrOutputWithContext(context.Background())
}

func (i ResourceSetTargetResourceArgs) ToResourceSetTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetTargetResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetTargetResourceOutput).ToResourceSetTargetResourcePtrOutputWithContext(ctx)
}

// ResourceSetTargetResourcePtrInput is an input type that accepts ResourceSetTargetResourceArgs, ResourceSetTargetResourcePtr and ResourceSetTargetResourcePtrOutput values.
// You can construct a concrete instance of `ResourceSetTargetResourcePtrInput` via:
//
//	        ResourceSetTargetResourceArgs{...}
//
//	or:
//
//	        nil
type ResourceSetTargetResourcePtrInput interface {
	pulumi.Input

	ToResourceSetTargetResourcePtrOutput() ResourceSetTargetResourcePtrOutput
	ToResourceSetTargetResourcePtrOutputWithContext(context.Context) ResourceSetTargetResourcePtrOutput
}

type resourceSetTargetResourcePtrType ResourceSetTargetResourceArgs

func ResourceSetTargetResourcePtr(v *ResourceSetTargetResourceArgs) ResourceSetTargetResourcePtrInput {
	return (*resourceSetTargetResourcePtrType)(v)
}

func (*resourceSetTargetResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetTargetResource)(nil)).Elem()
}

func (i *resourceSetTargetResourcePtrType) ToResourceSetTargetResourcePtrOutput() ResourceSetTargetResourcePtrOutput {
	return i.ToResourceSetTargetResourcePtrOutputWithContext(context.Background())
}

func (i *resourceSetTargetResourcePtrType) ToResourceSetTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetTargetResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetTargetResourcePtrOutput)
}

// The target resource that the Route 53 record points to.
type ResourceSetTargetResourceOutput struct{ *pulumi.OutputState }

func (ResourceSetTargetResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetTargetResource)(nil)).Elem()
}

func (o ResourceSetTargetResourceOutput) ToResourceSetTargetResourceOutput() ResourceSetTargetResourceOutput {
	return o
}

func (o ResourceSetTargetResourceOutput) ToResourceSetTargetResourceOutputWithContext(ctx context.Context) ResourceSetTargetResourceOutput {
	return o
}

func (o ResourceSetTargetResourceOutput) ToResourceSetTargetResourcePtrOutput() ResourceSetTargetResourcePtrOutput {
	return o.ToResourceSetTargetResourcePtrOutputWithContext(context.Background())
}

func (o ResourceSetTargetResourceOutput) ToResourceSetTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetTargetResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceSetTargetResource) *ResourceSetTargetResource {
		return &v
	}).(ResourceSetTargetResourcePtrOutput)
}

func (o ResourceSetTargetResourceOutput) NlbResource() ResourceSetNlbResourcePtrOutput {
	return o.ApplyT(func(v ResourceSetTargetResource) *ResourceSetNlbResource { return v.NlbResource }).(ResourceSetNlbResourcePtrOutput)
}

func (o ResourceSetTargetResourceOutput) R53Resource() ResourceSetR53ResourceRecordPtrOutput {
	return o.ApplyT(func(v ResourceSetTargetResource) *ResourceSetR53ResourceRecord { return v.R53Resource }).(ResourceSetR53ResourceRecordPtrOutput)
}

type ResourceSetTargetResourcePtrOutput struct{ *pulumi.OutputState }

func (ResourceSetTargetResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetTargetResource)(nil)).Elem()
}

func (o ResourceSetTargetResourcePtrOutput) ToResourceSetTargetResourcePtrOutput() ResourceSetTargetResourcePtrOutput {
	return o
}

func (o ResourceSetTargetResourcePtrOutput) ToResourceSetTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetTargetResourcePtrOutput {
	return o
}

func (o ResourceSetTargetResourcePtrOutput) Elem() ResourceSetTargetResourceOutput {
	return o.ApplyT(func(v *ResourceSetTargetResource) ResourceSetTargetResource {
		if v != nil {
			return *v
		}
		var ret ResourceSetTargetResource
		return ret
	}).(ResourceSetTargetResourceOutput)
}

func (o ResourceSetTargetResourcePtrOutput) NlbResource() ResourceSetNlbResourcePtrOutput {
	return o.ApplyT(func(v *ResourceSetTargetResource) *ResourceSetNlbResource {
		if v == nil {
			return nil
		}
		return v.NlbResource
	}).(ResourceSetNlbResourcePtrOutput)
}

func (o ResourceSetTargetResourcePtrOutput) R53Resource() ResourceSetR53ResourceRecordPtrOutput {
	return o.ApplyT(func(v *ResourceSetTargetResource) *ResourceSetR53ResourceRecord {
		if v == nil {
			return nil
		}
		return v.R53Resource
	}).(ResourceSetR53ResourceRecordPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetDnsTargetResourceInput)(nil)).Elem(), ResourceSetDnsTargetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetDnsTargetResourcePtrInput)(nil)).Elem(), ResourceSetDnsTargetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetNlbResourceInput)(nil)).Elem(), ResourceSetNlbResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetNlbResourcePtrInput)(nil)).Elem(), ResourceSetNlbResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetR53ResourceRecordInput)(nil)).Elem(), ResourceSetR53ResourceRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetR53ResourceRecordPtrInput)(nil)).Elem(), ResourceSetR53ResourceRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetResourceInput)(nil)).Elem(), ResourceSetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetResourceArrayInput)(nil)).Elem(), ResourceSetResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetTargetResourceInput)(nil)).Elem(), ResourceSetTargetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetTargetResourcePtrInput)(nil)).Elem(), ResourceSetTargetResourceArgs{})
	pulumi.RegisterOutputType(ResourceSetDnsTargetResourceOutput{})
	pulumi.RegisterOutputType(ResourceSetDnsTargetResourcePtrOutput{})
	pulumi.RegisterOutputType(ResourceSetNlbResourceOutput{})
	pulumi.RegisterOutputType(ResourceSetNlbResourcePtrOutput{})
	pulumi.RegisterOutputType(ResourceSetR53ResourceRecordOutput{})
	pulumi.RegisterOutputType(ResourceSetR53ResourceRecordPtrOutput{})
	pulumi.RegisterOutputType(ResourceSetResourceOutput{})
	pulumi.RegisterOutputType(ResourceSetResourceArrayOutput{})
	pulumi.RegisterOutputType(ResourceSetTargetResourceOutput{})
	pulumi.RegisterOutputType(ResourceSetTargetResourcePtrOutput{})
}
