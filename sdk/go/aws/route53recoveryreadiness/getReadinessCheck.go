// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53recoveryreadiness

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Aws Route53 Recovery Readiness Check Schema and API specification.
func LookupReadinessCheck(ctx *pulumi.Context, args *LookupReadinessCheckArgs, opts ...pulumi.InvokeOption) (*LookupReadinessCheckResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupReadinessCheckResult
	err := ctx.Invoke("aws-native:route53recoveryreadiness:getReadinessCheck", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupReadinessCheckArgs struct {
	// Name of the ReadinessCheck to create.
	ReadinessCheckName string `pulumi:"readinessCheckName"`
}

type LookupReadinessCheckResult struct {
	// The Amazon Resource Name (ARN) of the readiness check.
	ReadinessCheckArn *string `pulumi:"readinessCheckArn"`
	// The name of the resource set to check.
	ResourceSetName *string `pulumi:"resourceSetName"`
	// A collection of tags associated with a resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupReadinessCheckOutput(ctx *pulumi.Context, args LookupReadinessCheckOutputArgs, opts ...pulumi.InvokeOption) LookupReadinessCheckResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReadinessCheckResultOutput, error) {
			args := v.(LookupReadinessCheckArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupReadinessCheckResult
			secret, err := ctx.InvokePackageRaw("aws-native:route53recoveryreadiness:getReadinessCheck", args, &rv, "", opts...)
			if err != nil {
				return LookupReadinessCheckResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupReadinessCheckResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupReadinessCheckResultOutput), nil
			}
			return output, nil
		}).(LookupReadinessCheckResultOutput)
}

type LookupReadinessCheckOutputArgs struct {
	// Name of the ReadinessCheck to create.
	ReadinessCheckName pulumi.StringInput `pulumi:"readinessCheckName"`
}

func (LookupReadinessCheckOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReadinessCheckArgs)(nil)).Elem()
}

type LookupReadinessCheckResultOutput struct{ *pulumi.OutputState }

func (LookupReadinessCheckResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReadinessCheckResult)(nil)).Elem()
}

func (o LookupReadinessCheckResultOutput) ToLookupReadinessCheckResultOutput() LookupReadinessCheckResultOutput {
	return o
}

func (o LookupReadinessCheckResultOutput) ToLookupReadinessCheckResultOutputWithContext(ctx context.Context) LookupReadinessCheckResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the readiness check.
func (o LookupReadinessCheckResultOutput) ReadinessCheckArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupReadinessCheckResult) *string { return v.ReadinessCheckArn }).(pulumi.StringPtrOutput)
}

// The name of the resource set to check.
func (o LookupReadinessCheckResultOutput) ResourceSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupReadinessCheckResult) *string { return v.ResourceSetName }).(pulumi.StringPtrOutput)
}

// A collection of tags associated with a resource.
func (o LookupReadinessCheckResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupReadinessCheckResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReadinessCheckResultOutput{})
}
