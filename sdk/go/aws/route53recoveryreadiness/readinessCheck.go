// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53recoveryreadiness

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Aws Route53 Recovery Readiness Check Schema and API specification.
type ReadinessCheck struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the readiness check.
	ReadinessCheckArn pulumi.StringOutput `pulumi:"readinessCheckArn"`
	// Name of the ReadinessCheck to create.
	ReadinessCheckName pulumi.StringOutput `pulumi:"readinessCheckName"`
	// The name of the resource set to check.
	ResourceSetName pulumi.StringPtrOutput `pulumi:"resourceSetName"`
	// A collection of tags associated with a resource.
	Tags ReadinessCheckTagArrayOutput `pulumi:"tags"`
}

// NewReadinessCheck registers a new resource with the given unique name, arguments, and options.
func NewReadinessCheck(ctx *pulumi.Context,
	name string, args *ReadinessCheckArgs, opts ...pulumi.ResourceOption) (*ReadinessCheck, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ReadinessCheckName == nil {
		return nil, errors.New("invalid value for required argument 'ReadinessCheckName'")
	}
	var resource ReadinessCheck
	err := ctx.RegisterResource("aws-native:route53recoveryreadiness:ReadinessCheck", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReadinessCheck gets an existing ReadinessCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReadinessCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReadinessCheckState, opts ...pulumi.ResourceOption) (*ReadinessCheck, error) {
	var resource ReadinessCheck
	err := ctx.ReadResource("aws-native:route53recoveryreadiness:ReadinessCheck", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReadinessCheck resources.
type readinessCheckState struct {
}

type ReadinessCheckState struct {
}

func (ReadinessCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*readinessCheckState)(nil)).Elem()
}

type readinessCheckArgs struct {
	// Name of the ReadinessCheck to create.
	ReadinessCheckName string `pulumi:"readinessCheckName"`
	// The name of the resource set to check.
	ResourceSetName *string `pulumi:"resourceSetName"`
	// A collection of tags associated with a resource.
	Tags []ReadinessCheckTag `pulumi:"tags"`
}

// The set of arguments for constructing a ReadinessCheck resource.
type ReadinessCheckArgs struct {
	// Name of the ReadinessCheck to create.
	ReadinessCheckName pulumi.StringInput
	// The name of the resource set to check.
	ResourceSetName pulumi.StringPtrInput
	// A collection of tags associated with a resource.
	Tags ReadinessCheckTagArrayInput
}

func (ReadinessCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*readinessCheckArgs)(nil)).Elem()
}

type ReadinessCheckInput interface {
	pulumi.Input

	ToReadinessCheckOutput() ReadinessCheckOutput
	ToReadinessCheckOutputWithContext(ctx context.Context) ReadinessCheckOutput
}

func (*ReadinessCheck) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadinessCheck)(nil))
}

func (i *ReadinessCheck) ToReadinessCheckOutput() ReadinessCheckOutput {
	return i.ToReadinessCheckOutputWithContext(context.Background())
}

func (i *ReadinessCheck) ToReadinessCheckOutputWithContext(ctx context.Context) ReadinessCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReadinessCheckOutput)
}

type ReadinessCheckOutput struct{ *pulumi.OutputState }

func (ReadinessCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReadinessCheck)(nil))
}

func (o ReadinessCheckOutput) ToReadinessCheckOutput() ReadinessCheckOutput {
	return o
}

func (o ReadinessCheckOutput) ToReadinessCheckOutputWithContext(ctx context.Context) ReadinessCheckOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ReadinessCheckOutput{})
}
