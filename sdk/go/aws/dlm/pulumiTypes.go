// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dlm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LifecyclePolicyAction struct {
	CrossRegionCopy []LifecyclePolicyCrossRegionCopyAction `pulumi:"crossRegionCopy"`
	Name            string                                 `pulumi:"name"`
}

// LifecyclePolicyActionInput is an input type that accepts LifecyclePolicyActionArgs and LifecyclePolicyActionOutput values.
// You can construct a concrete instance of `LifecyclePolicyActionInput` via:
//
//          LifecyclePolicyActionArgs{...}
type LifecyclePolicyActionInput interface {
	pulumi.Input

	ToLifecyclePolicyActionOutput() LifecyclePolicyActionOutput
	ToLifecyclePolicyActionOutputWithContext(context.Context) LifecyclePolicyActionOutput
}

type LifecyclePolicyActionArgs struct {
	CrossRegionCopy LifecyclePolicyCrossRegionCopyActionArrayInput `pulumi:"crossRegionCopy"`
	Name            pulumi.StringInput                             `pulumi:"name"`
}

func (LifecyclePolicyActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyAction)(nil)).Elem()
}

func (i LifecyclePolicyActionArgs) ToLifecyclePolicyActionOutput() LifecyclePolicyActionOutput {
	return i.ToLifecyclePolicyActionOutputWithContext(context.Background())
}

func (i LifecyclePolicyActionArgs) ToLifecyclePolicyActionOutputWithContext(ctx context.Context) LifecyclePolicyActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyActionOutput)
}

// LifecyclePolicyActionArrayInput is an input type that accepts LifecyclePolicyActionArray and LifecyclePolicyActionArrayOutput values.
// You can construct a concrete instance of `LifecyclePolicyActionArrayInput` via:
//
//          LifecyclePolicyActionArray{ LifecyclePolicyActionArgs{...} }
type LifecyclePolicyActionArrayInput interface {
	pulumi.Input

	ToLifecyclePolicyActionArrayOutput() LifecyclePolicyActionArrayOutput
	ToLifecyclePolicyActionArrayOutputWithContext(context.Context) LifecyclePolicyActionArrayOutput
}

type LifecyclePolicyActionArray []LifecyclePolicyActionInput

func (LifecyclePolicyActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePolicyAction)(nil)).Elem()
}

func (i LifecyclePolicyActionArray) ToLifecyclePolicyActionArrayOutput() LifecyclePolicyActionArrayOutput {
	return i.ToLifecyclePolicyActionArrayOutputWithContext(context.Background())
}

func (i LifecyclePolicyActionArray) ToLifecyclePolicyActionArrayOutputWithContext(ctx context.Context) LifecyclePolicyActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyActionArrayOutput)
}

type LifecyclePolicyActionOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyAction)(nil)).Elem()
}

func (o LifecyclePolicyActionOutput) ToLifecyclePolicyActionOutput() LifecyclePolicyActionOutput {
	return o
}

func (o LifecyclePolicyActionOutput) ToLifecyclePolicyActionOutputWithContext(ctx context.Context) LifecyclePolicyActionOutput {
	return o
}

func (o LifecyclePolicyActionOutput) CrossRegionCopy() LifecyclePolicyCrossRegionCopyActionArrayOutput {
	return o.ApplyT(func(v LifecyclePolicyAction) []LifecyclePolicyCrossRegionCopyAction { return v.CrossRegionCopy }).(LifecyclePolicyCrossRegionCopyActionArrayOutput)
}

func (o LifecyclePolicyActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LifecyclePolicyAction) string { return v.Name }).(pulumi.StringOutput)
}

type LifecyclePolicyActionArrayOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePolicyAction)(nil)).Elem()
}

func (o LifecyclePolicyActionArrayOutput) ToLifecyclePolicyActionArrayOutput() LifecyclePolicyActionArrayOutput {
	return o
}

func (o LifecyclePolicyActionArrayOutput) ToLifecyclePolicyActionArrayOutputWithContext(ctx context.Context) LifecyclePolicyActionArrayOutput {
	return o
}

func (o LifecyclePolicyActionArrayOutput) Index(i pulumi.IntInput) LifecyclePolicyActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecyclePolicyAction {
		return vs[0].([]LifecyclePolicyAction)[vs[1].(int)]
	}).(LifecyclePolicyActionOutput)
}

type LifecyclePolicyCreateRule struct {
	CronExpression *string  `pulumi:"cronExpression"`
	Interval       *int     `pulumi:"interval"`
	IntervalUnit   *string  `pulumi:"intervalUnit"`
	Location       *string  `pulumi:"location"`
	Times          []string `pulumi:"times"`
}

// LifecyclePolicyCreateRuleInput is an input type that accepts LifecyclePolicyCreateRuleArgs and LifecyclePolicyCreateRuleOutput values.
// You can construct a concrete instance of `LifecyclePolicyCreateRuleInput` via:
//
//          LifecyclePolicyCreateRuleArgs{...}
type LifecyclePolicyCreateRuleInput interface {
	pulumi.Input

	ToLifecyclePolicyCreateRuleOutput() LifecyclePolicyCreateRuleOutput
	ToLifecyclePolicyCreateRuleOutputWithContext(context.Context) LifecyclePolicyCreateRuleOutput
}

type LifecyclePolicyCreateRuleArgs struct {
	CronExpression pulumi.StringPtrInput   `pulumi:"cronExpression"`
	Interval       pulumi.IntPtrInput      `pulumi:"interval"`
	IntervalUnit   pulumi.StringPtrInput   `pulumi:"intervalUnit"`
	Location       pulumi.StringPtrInput   `pulumi:"location"`
	Times          pulumi.StringArrayInput `pulumi:"times"`
}

func (LifecyclePolicyCreateRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyCreateRule)(nil)).Elem()
}

func (i LifecyclePolicyCreateRuleArgs) ToLifecyclePolicyCreateRuleOutput() LifecyclePolicyCreateRuleOutput {
	return i.ToLifecyclePolicyCreateRuleOutputWithContext(context.Background())
}

func (i LifecyclePolicyCreateRuleArgs) ToLifecyclePolicyCreateRuleOutputWithContext(ctx context.Context) LifecyclePolicyCreateRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCreateRuleOutput)
}

func (i LifecyclePolicyCreateRuleArgs) ToLifecyclePolicyCreateRulePtrOutput() LifecyclePolicyCreateRulePtrOutput {
	return i.ToLifecyclePolicyCreateRulePtrOutputWithContext(context.Background())
}

func (i LifecyclePolicyCreateRuleArgs) ToLifecyclePolicyCreateRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyCreateRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCreateRuleOutput).ToLifecyclePolicyCreateRulePtrOutputWithContext(ctx)
}

// LifecyclePolicyCreateRulePtrInput is an input type that accepts LifecyclePolicyCreateRuleArgs, LifecyclePolicyCreateRulePtr and LifecyclePolicyCreateRulePtrOutput values.
// You can construct a concrete instance of `LifecyclePolicyCreateRulePtrInput` via:
//
//          LifecyclePolicyCreateRuleArgs{...}
//
//  or:
//
//          nil
type LifecyclePolicyCreateRulePtrInput interface {
	pulumi.Input

	ToLifecyclePolicyCreateRulePtrOutput() LifecyclePolicyCreateRulePtrOutput
	ToLifecyclePolicyCreateRulePtrOutputWithContext(context.Context) LifecyclePolicyCreateRulePtrOutput
}

type lifecyclePolicyCreateRulePtrType LifecyclePolicyCreateRuleArgs

func LifecyclePolicyCreateRulePtr(v *LifecyclePolicyCreateRuleArgs) LifecyclePolicyCreateRulePtrInput {
	return (*lifecyclePolicyCreateRulePtrType)(v)
}

func (*lifecyclePolicyCreateRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyCreateRule)(nil)).Elem()
}

func (i *lifecyclePolicyCreateRulePtrType) ToLifecyclePolicyCreateRulePtrOutput() LifecyclePolicyCreateRulePtrOutput {
	return i.ToLifecyclePolicyCreateRulePtrOutputWithContext(context.Background())
}

func (i *lifecyclePolicyCreateRulePtrType) ToLifecyclePolicyCreateRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyCreateRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCreateRulePtrOutput)
}

type LifecyclePolicyCreateRuleOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyCreateRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyCreateRule)(nil)).Elem()
}

func (o LifecyclePolicyCreateRuleOutput) ToLifecyclePolicyCreateRuleOutput() LifecyclePolicyCreateRuleOutput {
	return o
}

func (o LifecyclePolicyCreateRuleOutput) ToLifecyclePolicyCreateRuleOutputWithContext(ctx context.Context) LifecyclePolicyCreateRuleOutput {
	return o
}

func (o LifecyclePolicyCreateRuleOutput) ToLifecyclePolicyCreateRulePtrOutput() LifecyclePolicyCreateRulePtrOutput {
	return o.ToLifecyclePolicyCreateRulePtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyCreateRuleOutput) ToLifecyclePolicyCreateRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyCreateRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LifecyclePolicyCreateRule) *LifecyclePolicyCreateRule {
		return &v
	}).(LifecyclePolicyCreateRulePtrOutput)
}

func (o LifecyclePolicyCreateRuleOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyCreateRule) *string { return v.CronExpression }).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyCreateRuleOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyCreateRule) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyCreateRuleOutput) IntervalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyCreateRule) *string { return v.IntervalUnit }).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyCreateRuleOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyCreateRule) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyCreateRuleOutput) Times() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LifecyclePolicyCreateRule) []string { return v.Times }).(pulumi.StringArrayOutput)
}

type LifecyclePolicyCreateRulePtrOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyCreateRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyCreateRule)(nil)).Elem()
}

func (o LifecyclePolicyCreateRulePtrOutput) ToLifecyclePolicyCreateRulePtrOutput() LifecyclePolicyCreateRulePtrOutput {
	return o
}

func (o LifecyclePolicyCreateRulePtrOutput) ToLifecyclePolicyCreateRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyCreateRulePtrOutput {
	return o
}

func (o LifecyclePolicyCreateRulePtrOutput) Elem() LifecyclePolicyCreateRuleOutput {
	return o.ApplyT(func(v *LifecyclePolicyCreateRule) LifecyclePolicyCreateRule {
		if v != nil {
			return *v
		}
		var ret LifecyclePolicyCreateRule
		return ret
	}).(LifecyclePolicyCreateRuleOutput)
}

func (o LifecyclePolicyCreateRulePtrOutput) CronExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyCreateRule) *string {
		if v == nil {
			return nil
		}
		return v.CronExpression
	}).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyCreateRulePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyCreateRule) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyCreateRulePtrOutput) IntervalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyCreateRule) *string {
		if v == nil {
			return nil
		}
		return v.IntervalUnit
	}).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyCreateRulePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyCreateRule) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyCreateRulePtrOutput) Times() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LifecyclePolicyCreateRule) []string {
		if v == nil {
			return nil
		}
		return v.Times
	}).(pulumi.StringArrayOutput)
}

type LifecyclePolicyCrossRegionCopyAction struct {
	EncryptionConfiguration LifecyclePolicyEncryptionConfiguration    `pulumi:"encryptionConfiguration"`
	RetainRule              *LifecyclePolicyCrossRegionCopyRetainRule `pulumi:"retainRule"`
	Target                  string                                    `pulumi:"target"`
}

// LifecyclePolicyCrossRegionCopyActionInput is an input type that accepts LifecyclePolicyCrossRegionCopyActionArgs and LifecyclePolicyCrossRegionCopyActionOutput values.
// You can construct a concrete instance of `LifecyclePolicyCrossRegionCopyActionInput` via:
//
//          LifecyclePolicyCrossRegionCopyActionArgs{...}
type LifecyclePolicyCrossRegionCopyActionInput interface {
	pulumi.Input

	ToLifecyclePolicyCrossRegionCopyActionOutput() LifecyclePolicyCrossRegionCopyActionOutput
	ToLifecyclePolicyCrossRegionCopyActionOutputWithContext(context.Context) LifecyclePolicyCrossRegionCopyActionOutput
}

type LifecyclePolicyCrossRegionCopyActionArgs struct {
	EncryptionConfiguration LifecyclePolicyEncryptionConfigurationInput      `pulumi:"encryptionConfiguration"`
	RetainRule              LifecyclePolicyCrossRegionCopyRetainRulePtrInput `pulumi:"retainRule"`
	Target                  pulumi.StringInput                               `pulumi:"target"`
}

func (LifecyclePolicyCrossRegionCopyActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyCrossRegionCopyAction)(nil)).Elem()
}

func (i LifecyclePolicyCrossRegionCopyActionArgs) ToLifecyclePolicyCrossRegionCopyActionOutput() LifecyclePolicyCrossRegionCopyActionOutput {
	return i.ToLifecyclePolicyCrossRegionCopyActionOutputWithContext(context.Background())
}

func (i LifecyclePolicyCrossRegionCopyActionArgs) ToLifecyclePolicyCrossRegionCopyActionOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCrossRegionCopyActionOutput)
}

// LifecyclePolicyCrossRegionCopyActionArrayInput is an input type that accepts LifecyclePolicyCrossRegionCopyActionArray and LifecyclePolicyCrossRegionCopyActionArrayOutput values.
// You can construct a concrete instance of `LifecyclePolicyCrossRegionCopyActionArrayInput` via:
//
//          LifecyclePolicyCrossRegionCopyActionArray{ LifecyclePolicyCrossRegionCopyActionArgs{...} }
type LifecyclePolicyCrossRegionCopyActionArrayInput interface {
	pulumi.Input

	ToLifecyclePolicyCrossRegionCopyActionArrayOutput() LifecyclePolicyCrossRegionCopyActionArrayOutput
	ToLifecyclePolicyCrossRegionCopyActionArrayOutputWithContext(context.Context) LifecyclePolicyCrossRegionCopyActionArrayOutput
}

type LifecyclePolicyCrossRegionCopyActionArray []LifecyclePolicyCrossRegionCopyActionInput

func (LifecyclePolicyCrossRegionCopyActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePolicyCrossRegionCopyAction)(nil)).Elem()
}

func (i LifecyclePolicyCrossRegionCopyActionArray) ToLifecyclePolicyCrossRegionCopyActionArrayOutput() LifecyclePolicyCrossRegionCopyActionArrayOutput {
	return i.ToLifecyclePolicyCrossRegionCopyActionArrayOutputWithContext(context.Background())
}

func (i LifecyclePolicyCrossRegionCopyActionArray) ToLifecyclePolicyCrossRegionCopyActionArrayOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCrossRegionCopyActionArrayOutput)
}

type LifecyclePolicyCrossRegionCopyActionOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyCrossRegionCopyActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyCrossRegionCopyAction)(nil)).Elem()
}

func (o LifecyclePolicyCrossRegionCopyActionOutput) ToLifecyclePolicyCrossRegionCopyActionOutput() LifecyclePolicyCrossRegionCopyActionOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyActionOutput) ToLifecyclePolicyCrossRegionCopyActionOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyActionOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyActionOutput) EncryptionConfiguration() LifecyclePolicyEncryptionConfigurationOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyAction) LifecyclePolicyEncryptionConfiguration {
		return v.EncryptionConfiguration
	}).(LifecyclePolicyEncryptionConfigurationOutput)
}

func (o LifecyclePolicyCrossRegionCopyActionOutput) RetainRule() LifecyclePolicyCrossRegionCopyRetainRulePtrOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyAction) *LifecyclePolicyCrossRegionCopyRetainRule {
		return v.RetainRule
	}).(LifecyclePolicyCrossRegionCopyRetainRulePtrOutput)
}

func (o LifecyclePolicyCrossRegionCopyActionOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyAction) string { return v.Target }).(pulumi.StringOutput)
}

type LifecyclePolicyCrossRegionCopyActionArrayOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyCrossRegionCopyActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePolicyCrossRegionCopyAction)(nil)).Elem()
}

func (o LifecyclePolicyCrossRegionCopyActionArrayOutput) ToLifecyclePolicyCrossRegionCopyActionArrayOutput() LifecyclePolicyCrossRegionCopyActionArrayOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyActionArrayOutput) ToLifecyclePolicyCrossRegionCopyActionArrayOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyActionArrayOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyActionArrayOutput) Index(i pulumi.IntInput) LifecyclePolicyCrossRegionCopyActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecyclePolicyCrossRegionCopyAction {
		return vs[0].([]LifecyclePolicyCrossRegionCopyAction)[vs[1].(int)]
	}).(LifecyclePolicyCrossRegionCopyActionOutput)
}

type LifecyclePolicyCrossRegionCopyDeprecateRule struct {
	Interval     int    `pulumi:"interval"`
	IntervalUnit string `pulumi:"intervalUnit"`
}

// LifecyclePolicyCrossRegionCopyDeprecateRuleInput is an input type that accepts LifecyclePolicyCrossRegionCopyDeprecateRuleArgs and LifecyclePolicyCrossRegionCopyDeprecateRuleOutput values.
// You can construct a concrete instance of `LifecyclePolicyCrossRegionCopyDeprecateRuleInput` via:
//
//          LifecyclePolicyCrossRegionCopyDeprecateRuleArgs{...}
type LifecyclePolicyCrossRegionCopyDeprecateRuleInput interface {
	pulumi.Input

	ToLifecyclePolicyCrossRegionCopyDeprecateRuleOutput() LifecyclePolicyCrossRegionCopyDeprecateRuleOutput
	ToLifecyclePolicyCrossRegionCopyDeprecateRuleOutputWithContext(context.Context) LifecyclePolicyCrossRegionCopyDeprecateRuleOutput
}

type LifecyclePolicyCrossRegionCopyDeprecateRuleArgs struct {
	Interval     pulumi.IntInput    `pulumi:"interval"`
	IntervalUnit pulumi.StringInput `pulumi:"intervalUnit"`
}

func (LifecyclePolicyCrossRegionCopyDeprecateRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyCrossRegionCopyDeprecateRule)(nil)).Elem()
}

func (i LifecyclePolicyCrossRegionCopyDeprecateRuleArgs) ToLifecyclePolicyCrossRegionCopyDeprecateRuleOutput() LifecyclePolicyCrossRegionCopyDeprecateRuleOutput {
	return i.ToLifecyclePolicyCrossRegionCopyDeprecateRuleOutputWithContext(context.Background())
}

func (i LifecyclePolicyCrossRegionCopyDeprecateRuleArgs) ToLifecyclePolicyCrossRegionCopyDeprecateRuleOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyDeprecateRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCrossRegionCopyDeprecateRuleOutput)
}

func (i LifecyclePolicyCrossRegionCopyDeprecateRuleArgs) ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput() LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput {
	return i.ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutputWithContext(context.Background())
}

func (i LifecyclePolicyCrossRegionCopyDeprecateRuleArgs) ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCrossRegionCopyDeprecateRuleOutput).ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutputWithContext(ctx)
}

// LifecyclePolicyCrossRegionCopyDeprecateRulePtrInput is an input type that accepts LifecyclePolicyCrossRegionCopyDeprecateRuleArgs, LifecyclePolicyCrossRegionCopyDeprecateRulePtr and LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput values.
// You can construct a concrete instance of `LifecyclePolicyCrossRegionCopyDeprecateRulePtrInput` via:
//
//          LifecyclePolicyCrossRegionCopyDeprecateRuleArgs{...}
//
//  or:
//
//          nil
type LifecyclePolicyCrossRegionCopyDeprecateRulePtrInput interface {
	pulumi.Input

	ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput() LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput
	ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutputWithContext(context.Context) LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput
}

type lifecyclePolicyCrossRegionCopyDeprecateRulePtrType LifecyclePolicyCrossRegionCopyDeprecateRuleArgs

func LifecyclePolicyCrossRegionCopyDeprecateRulePtr(v *LifecyclePolicyCrossRegionCopyDeprecateRuleArgs) LifecyclePolicyCrossRegionCopyDeprecateRulePtrInput {
	return (*lifecyclePolicyCrossRegionCopyDeprecateRulePtrType)(v)
}

func (*lifecyclePolicyCrossRegionCopyDeprecateRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyCrossRegionCopyDeprecateRule)(nil)).Elem()
}

func (i *lifecyclePolicyCrossRegionCopyDeprecateRulePtrType) ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput() LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput {
	return i.ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutputWithContext(context.Background())
}

func (i *lifecyclePolicyCrossRegionCopyDeprecateRulePtrType) ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput)
}

type LifecyclePolicyCrossRegionCopyDeprecateRuleOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyCrossRegionCopyDeprecateRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyCrossRegionCopyDeprecateRule)(nil)).Elem()
}

func (o LifecyclePolicyCrossRegionCopyDeprecateRuleOutput) ToLifecyclePolicyCrossRegionCopyDeprecateRuleOutput() LifecyclePolicyCrossRegionCopyDeprecateRuleOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyDeprecateRuleOutput) ToLifecyclePolicyCrossRegionCopyDeprecateRuleOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyDeprecateRuleOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyDeprecateRuleOutput) ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput() LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput {
	return o.ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyCrossRegionCopyDeprecateRuleOutput) ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LifecyclePolicyCrossRegionCopyDeprecateRule) *LifecyclePolicyCrossRegionCopyDeprecateRule {
		return &v
	}).(LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput)
}

func (o LifecyclePolicyCrossRegionCopyDeprecateRuleOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyDeprecateRule) int { return v.Interval }).(pulumi.IntOutput)
}

func (o LifecyclePolicyCrossRegionCopyDeprecateRuleOutput) IntervalUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyDeprecateRule) string { return v.IntervalUnit }).(pulumi.StringOutput)
}

type LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyCrossRegionCopyDeprecateRule)(nil)).Elem()
}

func (o LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput) ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput() LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput) ToLifecyclePolicyCrossRegionCopyDeprecateRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput) Elem() LifecyclePolicyCrossRegionCopyDeprecateRuleOutput {
	return o.ApplyT(func(v *LifecyclePolicyCrossRegionCopyDeprecateRule) LifecyclePolicyCrossRegionCopyDeprecateRule {
		if v != nil {
			return *v
		}
		var ret LifecyclePolicyCrossRegionCopyDeprecateRule
		return ret
	}).(LifecyclePolicyCrossRegionCopyDeprecateRuleOutput)
}

func (o LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyCrossRegionCopyDeprecateRule) *int {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput) IntervalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyCrossRegionCopyDeprecateRule) *string {
		if v == nil {
			return nil
		}
		return &v.IntervalUnit
	}).(pulumi.StringPtrOutput)
}

type LifecyclePolicyCrossRegionCopyRetainRule struct {
	Interval     int    `pulumi:"interval"`
	IntervalUnit string `pulumi:"intervalUnit"`
}

// LifecyclePolicyCrossRegionCopyRetainRuleInput is an input type that accepts LifecyclePolicyCrossRegionCopyRetainRuleArgs and LifecyclePolicyCrossRegionCopyRetainRuleOutput values.
// You can construct a concrete instance of `LifecyclePolicyCrossRegionCopyRetainRuleInput` via:
//
//          LifecyclePolicyCrossRegionCopyRetainRuleArgs{...}
type LifecyclePolicyCrossRegionCopyRetainRuleInput interface {
	pulumi.Input

	ToLifecyclePolicyCrossRegionCopyRetainRuleOutput() LifecyclePolicyCrossRegionCopyRetainRuleOutput
	ToLifecyclePolicyCrossRegionCopyRetainRuleOutputWithContext(context.Context) LifecyclePolicyCrossRegionCopyRetainRuleOutput
}

type LifecyclePolicyCrossRegionCopyRetainRuleArgs struct {
	Interval     pulumi.IntInput    `pulumi:"interval"`
	IntervalUnit pulumi.StringInput `pulumi:"intervalUnit"`
}

func (LifecyclePolicyCrossRegionCopyRetainRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyCrossRegionCopyRetainRule)(nil)).Elem()
}

func (i LifecyclePolicyCrossRegionCopyRetainRuleArgs) ToLifecyclePolicyCrossRegionCopyRetainRuleOutput() LifecyclePolicyCrossRegionCopyRetainRuleOutput {
	return i.ToLifecyclePolicyCrossRegionCopyRetainRuleOutputWithContext(context.Background())
}

func (i LifecyclePolicyCrossRegionCopyRetainRuleArgs) ToLifecyclePolicyCrossRegionCopyRetainRuleOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyRetainRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCrossRegionCopyRetainRuleOutput)
}

func (i LifecyclePolicyCrossRegionCopyRetainRuleArgs) ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutput() LifecyclePolicyCrossRegionCopyRetainRulePtrOutput {
	return i.ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutputWithContext(context.Background())
}

func (i LifecyclePolicyCrossRegionCopyRetainRuleArgs) ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyRetainRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCrossRegionCopyRetainRuleOutput).ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutputWithContext(ctx)
}

// LifecyclePolicyCrossRegionCopyRetainRulePtrInput is an input type that accepts LifecyclePolicyCrossRegionCopyRetainRuleArgs, LifecyclePolicyCrossRegionCopyRetainRulePtr and LifecyclePolicyCrossRegionCopyRetainRulePtrOutput values.
// You can construct a concrete instance of `LifecyclePolicyCrossRegionCopyRetainRulePtrInput` via:
//
//          LifecyclePolicyCrossRegionCopyRetainRuleArgs{...}
//
//  or:
//
//          nil
type LifecyclePolicyCrossRegionCopyRetainRulePtrInput interface {
	pulumi.Input

	ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutput() LifecyclePolicyCrossRegionCopyRetainRulePtrOutput
	ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutputWithContext(context.Context) LifecyclePolicyCrossRegionCopyRetainRulePtrOutput
}

type lifecyclePolicyCrossRegionCopyRetainRulePtrType LifecyclePolicyCrossRegionCopyRetainRuleArgs

func LifecyclePolicyCrossRegionCopyRetainRulePtr(v *LifecyclePolicyCrossRegionCopyRetainRuleArgs) LifecyclePolicyCrossRegionCopyRetainRulePtrInput {
	return (*lifecyclePolicyCrossRegionCopyRetainRulePtrType)(v)
}

func (*lifecyclePolicyCrossRegionCopyRetainRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyCrossRegionCopyRetainRule)(nil)).Elem()
}

func (i *lifecyclePolicyCrossRegionCopyRetainRulePtrType) ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutput() LifecyclePolicyCrossRegionCopyRetainRulePtrOutput {
	return i.ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutputWithContext(context.Background())
}

func (i *lifecyclePolicyCrossRegionCopyRetainRulePtrType) ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyRetainRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCrossRegionCopyRetainRulePtrOutput)
}

type LifecyclePolicyCrossRegionCopyRetainRuleOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyCrossRegionCopyRetainRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyCrossRegionCopyRetainRule)(nil)).Elem()
}

func (o LifecyclePolicyCrossRegionCopyRetainRuleOutput) ToLifecyclePolicyCrossRegionCopyRetainRuleOutput() LifecyclePolicyCrossRegionCopyRetainRuleOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyRetainRuleOutput) ToLifecyclePolicyCrossRegionCopyRetainRuleOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyRetainRuleOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyRetainRuleOutput) ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutput() LifecyclePolicyCrossRegionCopyRetainRulePtrOutput {
	return o.ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyCrossRegionCopyRetainRuleOutput) ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyRetainRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LifecyclePolicyCrossRegionCopyRetainRule) *LifecyclePolicyCrossRegionCopyRetainRule {
		return &v
	}).(LifecyclePolicyCrossRegionCopyRetainRulePtrOutput)
}

func (o LifecyclePolicyCrossRegionCopyRetainRuleOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyRetainRule) int { return v.Interval }).(pulumi.IntOutput)
}

func (o LifecyclePolicyCrossRegionCopyRetainRuleOutput) IntervalUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyRetainRule) string { return v.IntervalUnit }).(pulumi.StringOutput)
}

type LifecyclePolicyCrossRegionCopyRetainRulePtrOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyCrossRegionCopyRetainRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyCrossRegionCopyRetainRule)(nil)).Elem()
}

func (o LifecyclePolicyCrossRegionCopyRetainRulePtrOutput) ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutput() LifecyclePolicyCrossRegionCopyRetainRulePtrOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyRetainRulePtrOutput) ToLifecyclePolicyCrossRegionCopyRetainRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyRetainRulePtrOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyRetainRulePtrOutput) Elem() LifecyclePolicyCrossRegionCopyRetainRuleOutput {
	return o.ApplyT(func(v *LifecyclePolicyCrossRegionCopyRetainRule) LifecyclePolicyCrossRegionCopyRetainRule {
		if v != nil {
			return *v
		}
		var ret LifecyclePolicyCrossRegionCopyRetainRule
		return ret
	}).(LifecyclePolicyCrossRegionCopyRetainRuleOutput)
}

func (o LifecyclePolicyCrossRegionCopyRetainRulePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyCrossRegionCopyRetainRule) *int {
		if v == nil {
			return nil
		}
		return &v.Interval
	}).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyCrossRegionCopyRetainRulePtrOutput) IntervalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyCrossRegionCopyRetainRule) *string {
		if v == nil {
			return nil
		}
		return &v.IntervalUnit
	}).(pulumi.StringPtrOutput)
}

type LifecyclePolicyCrossRegionCopyRule struct {
	CmkArn        *string                                      `pulumi:"cmkArn"`
	CopyTags      *bool                                        `pulumi:"copyTags"`
	DeprecateRule *LifecyclePolicyCrossRegionCopyDeprecateRule `pulumi:"deprecateRule"`
	Encrypted     bool                                         `pulumi:"encrypted"`
	RetainRule    *LifecyclePolicyCrossRegionCopyRetainRule    `pulumi:"retainRule"`
	Target        *string                                      `pulumi:"target"`
	TargetRegion  *string                                      `pulumi:"targetRegion"`
}

// LifecyclePolicyCrossRegionCopyRuleInput is an input type that accepts LifecyclePolicyCrossRegionCopyRuleArgs and LifecyclePolicyCrossRegionCopyRuleOutput values.
// You can construct a concrete instance of `LifecyclePolicyCrossRegionCopyRuleInput` via:
//
//          LifecyclePolicyCrossRegionCopyRuleArgs{...}
type LifecyclePolicyCrossRegionCopyRuleInput interface {
	pulumi.Input

	ToLifecyclePolicyCrossRegionCopyRuleOutput() LifecyclePolicyCrossRegionCopyRuleOutput
	ToLifecyclePolicyCrossRegionCopyRuleOutputWithContext(context.Context) LifecyclePolicyCrossRegionCopyRuleOutput
}

type LifecyclePolicyCrossRegionCopyRuleArgs struct {
	CmkArn        pulumi.StringPtrInput                               `pulumi:"cmkArn"`
	CopyTags      pulumi.BoolPtrInput                                 `pulumi:"copyTags"`
	DeprecateRule LifecyclePolicyCrossRegionCopyDeprecateRulePtrInput `pulumi:"deprecateRule"`
	Encrypted     pulumi.BoolInput                                    `pulumi:"encrypted"`
	RetainRule    LifecyclePolicyCrossRegionCopyRetainRulePtrInput    `pulumi:"retainRule"`
	Target        pulumi.StringPtrInput                               `pulumi:"target"`
	TargetRegion  pulumi.StringPtrInput                               `pulumi:"targetRegion"`
}

func (LifecyclePolicyCrossRegionCopyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyCrossRegionCopyRule)(nil)).Elem()
}

func (i LifecyclePolicyCrossRegionCopyRuleArgs) ToLifecyclePolicyCrossRegionCopyRuleOutput() LifecyclePolicyCrossRegionCopyRuleOutput {
	return i.ToLifecyclePolicyCrossRegionCopyRuleOutputWithContext(context.Background())
}

func (i LifecyclePolicyCrossRegionCopyRuleArgs) ToLifecyclePolicyCrossRegionCopyRuleOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCrossRegionCopyRuleOutput)
}

// LifecyclePolicyCrossRegionCopyRuleArrayInput is an input type that accepts LifecyclePolicyCrossRegionCopyRuleArray and LifecyclePolicyCrossRegionCopyRuleArrayOutput values.
// You can construct a concrete instance of `LifecyclePolicyCrossRegionCopyRuleArrayInput` via:
//
//          LifecyclePolicyCrossRegionCopyRuleArray{ LifecyclePolicyCrossRegionCopyRuleArgs{...} }
type LifecyclePolicyCrossRegionCopyRuleArrayInput interface {
	pulumi.Input

	ToLifecyclePolicyCrossRegionCopyRuleArrayOutput() LifecyclePolicyCrossRegionCopyRuleArrayOutput
	ToLifecyclePolicyCrossRegionCopyRuleArrayOutputWithContext(context.Context) LifecyclePolicyCrossRegionCopyRuleArrayOutput
}

type LifecyclePolicyCrossRegionCopyRuleArray []LifecyclePolicyCrossRegionCopyRuleInput

func (LifecyclePolicyCrossRegionCopyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePolicyCrossRegionCopyRule)(nil)).Elem()
}

func (i LifecyclePolicyCrossRegionCopyRuleArray) ToLifecyclePolicyCrossRegionCopyRuleArrayOutput() LifecyclePolicyCrossRegionCopyRuleArrayOutput {
	return i.ToLifecyclePolicyCrossRegionCopyRuleArrayOutputWithContext(context.Background())
}

func (i LifecyclePolicyCrossRegionCopyRuleArray) ToLifecyclePolicyCrossRegionCopyRuleArrayOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyCrossRegionCopyRuleArrayOutput)
}

type LifecyclePolicyCrossRegionCopyRuleOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyCrossRegionCopyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyCrossRegionCopyRule)(nil)).Elem()
}

func (o LifecyclePolicyCrossRegionCopyRuleOutput) ToLifecyclePolicyCrossRegionCopyRuleOutput() LifecyclePolicyCrossRegionCopyRuleOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyRuleOutput) ToLifecyclePolicyCrossRegionCopyRuleOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyRuleOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyRuleOutput) CmkArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyRule) *string { return v.CmkArn }).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyCrossRegionCopyRuleOutput) CopyTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyRule) *bool { return v.CopyTags }).(pulumi.BoolPtrOutput)
}

func (o LifecyclePolicyCrossRegionCopyRuleOutput) DeprecateRule() LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyRule) *LifecyclePolicyCrossRegionCopyDeprecateRule {
		return v.DeprecateRule
	}).(LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput)
}

func (o LifecyclePolicyCrossRegionCopyRuleOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyRule) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

func (o LifecyclePolicyCrossRegionCopyRuleOutput) RetainRule() LifecyclePolicyCrossRegionCopyRetainRulePtrOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyRule) *LifecyclePolicyCrossRegionCopyRetainRule {
		return v.RetainRule
	}).(LifecyclePolicyCrossRegionCopyRetainRulePtrOutput)
}

func (o LifecyclePolicyCrossRegionCopyRuleOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyRule) *string { return v.Target }).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyCrossRegionCopyRuleOutput) TargetRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyCrossRegionCopyRule) *string { return v.TargetRegion }).(pulumi.StringPtrOutput)
}

type LifecyclePolicyCrossRegionCopyRuleArrayOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyCrossRegionCopyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePolicyCrossRegionCopyRule)(nil)).Elem()
}

func (o LifecyclePolicyCrossRegionCopyRuleArrayOutput) ToLifecyclePolicyCrossRegionCopyRuleArrayOutput() LifecyclePolicyCrossRegionCopyRuleArrayOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyRuleArrayOutput) ToLifecyclePolicyCrossRegionCopyRuleArrayOutputWithContext(ctx context.Context) LifecyclePolicyCrossRegionCopyRuleArrayOutput {
	return o
}

func (o LifecyclePolicyCrossRegionCopyRuleArrayOutput) Index(i pulumi.IntInput) LifecyclePolicyCrossRegionCopyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecyclePolicyCrossRegionCopyRule {
		return vs[0].([]LifecyclePolicyCrossRegionCopyRule)[vs[1].(int)]
	}).(LifecyclePolicyCrossRegionCopyRuleOutput)
}

type LifecyclePolicyDeprecateRule struct {
	Count        *int    `pulumi:"count"`
	Interval     *int    `pulumi:"interval"`
	IntervalUnit *string `pulumi:"intervalUnit"`
}

// LifecyclePolicyDeprecateRuleInput is an input type that accepts LifecyclePolicyDeprecateRuleArgs and LifecyclePolicyDeprecateRuleOutput values.
// You can construct a concrete instance of `LifecyclePolicyDeprecateRuleInput` via:
//
//          LifecyclePolicyDeprecateRuleArgs{...}
type LifecyclePolicyDeprecateRuleInput interface {
	pulumi.Input

	ToLifecyclePolicyDeprecateRuleOutput() LifecyclePolicyDeprecateRuleOutput
	ToLifecyclePolicyDeprecateRuleOutputWithContext(context.Context) LifecyclePolicyDeprecateRuleOutput
}

type LifecyclePolicyDeprecateRuleArgs struct {
	Count        pulumi.IntPtrInput    `pulumi:"count"`
	Interval     pulumi.IntPtrInput    `pulumi:"interval"`
	IntervalUnit pulumi.StringPtrInput `pulumi:"intervalUnit"`
}

func (LifecyclePolicyDeprecateRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyDeprecateRule)(nil)).Elem()
}

func (i LifecyclePolicyDeprecateRuleArgs) ToLifecyclePolicyDeprecateRuleOutput() LifecyclePolicyDeprecateRuleOutput {
	return i.ToLifecyclePolicyDeprecateRuleOutputWithContext(context.Background())
}

func (i LifecyclePolicyDeprecateRuleArgs) ToLifecyclePolicyDeprecateRuleOutputWithContext(ctx context.Context) LifecyclePolicyDeprecateRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyDeprecateRuleOutput)
}

func (i LifecyclePolicyDeprecateRuleArgs) ToLifecyclePolicyDeprecateRulePtrOutput() LifecyclePolicyDeprecateRulePtrOutput {
	return i.ToLifecyclePolicyDeprecateRulePtrOutputWithContext(context.Background())
}

func (i LifecyclePolicyDeprecateRuleArgs) ToLifecyclePolicyDeprecateRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyDeprecateRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyDeprecateRuleOutput).ToLifecyclePolicyDeprecateRulePtrOutputWithContext(ctx)
}

// LifecyclePolicyDeprecateRulePtrInput is an input type that accepts LifecyclePolicyDeprecateRuleArgs, LifecyclePolicyDeprecateRulePtr and LifecyclePolicyDeprecateRulePtrOutput values.
// You can construct a concrete instance of `LifecyclePolicyDeprecateRulePtrInput` via:
//
//          LifecyclePolicyDeprecateRuleArgs{...}
//
//  or:
//
//          nil
type LifecyclePolicyDeprecateRulePtrInput interface {
	pulumi.Input

	ToLifecyclePolicyDeprecateRulePtrOutput() LifecyclePolicyDeprecateRulePtrOutput
	ToLifecyclePolicyDeprecateRulePtrOutputWithContext(context.Context) LifecyclePolicyDeprecateRulePtrOutput
}

type lifecyclePolicyDeprecateRulePtrType LifecyclePolicyDeprecateRuleArgs

func LifecyclePolicyDeprecateRulePtr(v *LifecyclePolicyDeprecateRuleArgs) LifecyclePolicyDeprecateRulePtrInput {
	return (*lifecyclePolicyDeprecateRulePtrType)(v)
}

func (*lifecyclePolicyDeprecateRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyDeprecateRule)(nil)).Elem()
}

func (i *lifecyclePolicyDeprecateRulePtrType) ToLifecyclePolicyDeprecateRulePtrOutput() LifecyclePolicyDeprecateRulePtrOutput {
	return i.ToLifecyclePolicyDeprecateRulePtrOutputWithContext(context.Background())
}

func (i *lifecyclePolicyDeprecateRulePtrType) ToLifecyclePolicyDeprecateRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyDeprecateRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyDeprecateRulePtrOutput)
}

type LifecyclePolicyDeprecateRuleOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyDeprecateRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyDeprecateRule)(nil)).Elem()
}

func (o LifecyclePolicyDeprecateRuleOutput) ToLifecyclePolicyDeprecateRuleOutput() LifecyclePolicyDeprecateRuleOutput {
	return o
}

func (o LifecyclePolicyDeprecateRuleOutput) ToLifecyclePolicyDeprecateRuleOutputWithContext(ctx context.Context) LifecyclePolicyDeprecateRuleOutput {
	return o
}

func (o LifecyclePolicyDeprecateRuleOutput) ToLifecyclePolicyDeprecateRulePtrOutput() LifecyclePolicyDeprecateRulePtrOutput {
	return o.ToLifecyclePolicyDeprecateRulePtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyDeprecateRuleOutput) ToLifecyclePolicyDeprecateRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyDeprecateRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LifecyclePolicyDeprecateRule) *LifecyclePolicyDeprecateRule {
		return &v
	}).(LifecyclePolicyDeprecateRulePtrOutput)
}

func (o LifecyclePolicyDeprecateRuleOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyDeprecateRule) *int { return v.Count }).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyDeprecateRuleOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyDeprecateRule) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyDeprecateRuleOutput) IntervalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyDeprecateRule) *string { return v.IntervalUnit }).(pulumi.StringPtrOutput)
}

type LifecyclePolicyDeprecateRulePtrOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyDeprecateRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyDeprecateRule)(nil)).Elem()
}

func (o LifecyclePolicyDeprecateRulePtrOutput) ToLifecyclePolicyDeprecateRulePtrOutput() LifecyclePolicyDeprecateRulePtrOutput {
	return o
}

func (o LifecyclePolicyDeprecateRulePtrOutput) ToLifecyclePolicyDeprecateRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyDeprecateRulePtrOutput {
	return o
}

func (o LifecyclePolicyDeprecateRulePtrOutput) Elem() LifecyclePolicyDeprecateRuleOutput {
	return o.ApplyT(func(v *LifecyclePolicyDeprecateRule) LifecyclePolicyDeprecateRule {
		if v != nil {
			return *v
		}
		var ret LifecyclePolicyDeprecateRule
		return ret
	}).(LifecyclePolicyDeprecateRuleOutput)
}

func (o LifecyclePolicyDeprecateRulePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyDeprecateRule) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyDeprecateRulePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyDeprecateRule) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyDeprecateRulePtrOutput) IntervalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyDeprecateRule) *string {
		if v == nil {
			return nil
		}
		return v.IntervalUnit
	}).(pulumi.StringPtrOutput)
}

type LifecyclePolicyEncryptionConfiguration struct {
	CmkArn    *string `pulumi:"cmkArn"`
	Encrypted bool    `pulumi:"encrypted"`
}

// LifecyclePolicyEncryptionConfigurationInput is an input type that accepts LifecyclePolicyEncryptionConfigurationArgs and LifecyclePolicyEncryptionConfigurationOutput values.
// You can construct a concrete instance of `LifecyclePolicyEncryptionConfigurationInput` via:
//
//          LifecyclePolicyEncryptionConfigurationArgs{...}
type LifecyclePolicyEncryptionConfigurationInput interface {
	pulumi.Input

	ToLifecyclePolicyEncryptionConfigurationOutput() LifecyclePolicyEncryptionConfigurationOutput
	ToLifecyclePolicyEncryptionConfigurationOutputWithContext(context.Context) LifecyclePolicyEncryptionConfigurationOutput
}

type LifecyclePolicyEncryptionConfigurationArgs struct {
	CmkArn    pulumi.StringPtrInput `pulumi:"cmkArn"`
	Encrypted pulumi.BoolInput      `pulumi:"encrypted"`
}

func (LifecyclePolicyEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyEncryptionConfiguration)(nil)).Elem()
}

func (i LifecyclePolicyEncryptionConfigurationArgs) ToLifecyclePolicyEncryptionConfigurationOutput() LifecyclePolicyEncryptionConfigurationOutput {
	return i.ToLifecyclePolicyEncryptionConfigurationOutputWithContext(context.Background())
}

func (i LifecyclePolicyEncryptionConfigurationArgs) ToLifecyclePolicyEncryptionConfigurationOutputWithContext(ctx context.Context) LifecyclePolicyEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyEncryptionConfigurationOutput)
}

type LifecyclePolicyEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyEncryptionConfiguration)(nil)).Elem()
}

func (o LifecyclePolicyEncryptionConfigurationOutput) ToLifecyclePolicyEncryptionConfigurationOutput() LifecyclePolicyEncryptionConfigurationOutput {
	return o
}

func (o LifecyclePolicyEncryptionConfigurationOutput) ToLifecyclePolicyEncryptionConfigurationOutputWithContext(ctx context.Context) LifecyclePolicyEncryptionConfigurationOutput {
	return o
}

func (o LifecyclePolicyEncryptionConfigurationOutput) CmkArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyEncryptionConfiguration) *string { return v.CmkArn }).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyEncryptionConfigurationOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v LifecyclePolicyEncryptionConfiguration) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

type LifecyclePolicyEventParameters struct {
	DescriptionRegex *string  `pulumi:"descriptionRegex"`
	EventType        string   `pulumi:"eventType"`
	SnapshotOwner    []string `pulumi:"snapshotOwner"`
}

// LifecyclePolicyEventParametersInput is an input type that accepts LifecyclePolicyEventParametersArgs and LifecyclePolicyEventParametersOutput values.
// You can construct a concrete instance of `LifecyclePolicyEventParametersInput` via:
//
//          LifecyclePolicyEventParametersArgs{...}
type LifecyclePolicyEventParametersInput interface {
	pulumi.Input

	ToLifecyclePolicyEventParametersOutput() LifecyclePolicyEventParametersOutput
	ToLifecyclePolicyEventParametersOutputWithContext(context.Context) LifecyclePolicyEventParametersOutput
}

type LifecyclePolicyEventParametersArgs struct {
	DescriptionRegex pulumi.StringPtrInput   `pulumi:"descriptionRegex"`
	EventType        pulumi.StringInput      `pulumi:"eventType"`
	SnapshotOwner    pulumi.StringArrayInput `pulumi:"snapshotOwner"`
}

func (LifecyclePolicyEventParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyEventParameters)(nil)).Elem()
}

func (i LifecyclePolicyEventParametersArgs) ToLifecyclePolicyEventParametersOutput() LifecyclePolicyEventParametersOutput {
	return i.ToLifecyclePolicyEventParametersOutputWithContext(context.Background())
}

func (i LifecyclePolicyEventParametersArgs) ToLifecyclePolicyEventParametersOutputWithContext(ctx context.Context) LifecyclePolicyEventParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyEventParametersOutput)
}

func (i LifecyclePolicyEventParametersArgs) ToLifecyclePolicyEventParametersPtrOutput() LifecyclePolicyEventParametersPtrOutput {
	return i.ToLifecyclePolicyEventParametersPtrOutputWithContext(context.Background())
}

func (i LifecyclePolicyEventParametersArgs) ToLifecyclePolicyEventParametersPtrOutputWithContext(ctx context.Context) LifecyclePolicyEventParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyEventParametersOutput).ToLifecyclePolicyEventParametersPtrOutputWithContext(ctx)
}

// LifecyclePolicyEventParametersPtrInput is an input type that accepts LifecyclePolicyEventParametersArgs, LifecyclePolicyEventParametersPtr and LifecyclePolicyEventParametersPtrOutput values.
// You can construct a concrete instance of `LifecyclePolicyEventParametersPtrInput` via:
//
//          LifecyclePolicyEventParametersArgs{...}
//
//  or:
//
//          nil
type LifecyclePolicyEventParametersPtrInput interface {
	pulumi.Input

	ToLifecyclePolicyEventParametersPtrOutput() LifecyclePolicyEventParametersPtrOutput
	ToLifecyclePolicyEventParametersPtrOutputWithContext(context.Context) LifecyclePolicyEventParametersPtrOutput
}

type lifecyclePolicyEventParametersPtrType LifecyclePolicyEventParametersArgs

func LifecyclePolicyEventParametersPtr(v *LifecyclePolicyEventParametersArgs) LifecyclePolicyEventParametersPtrInput {
	return (*lifecyclePolicyEventParametersPtrType)(v)
}

func (*lifecyclePolicyEventParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyEventParameters)(nil)).Elem()
}

func (i *lifecyclePolicyEventParametersPtrType) ToLifecyclePolicyEventParametersPtrOutput() LifecyclePolicyEventParametersPtrOutput {
	return i.ToLifecyclePolicyEventParametersPtrOutputWithContext(context.Background())
}

func (i *lifecyclePolicyEventParametersPtrType) ToLifecyclePolicyEventParametersPtrOutputWithContext(ctx context.Context) LifecyclePolicyEventParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyEventParametersPtrOutput)
}

type LifecyclePolicyEventParametersOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyEventParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyEventParameters)(nil)).Elem()
}

func (o LifecyclePolicyEventParametersOutput) ToLifecyclePolicyEventParametersOutput() LifecyclePolicyEventParametersOutput {
	return o
}

func (o LifecyclePolicyEventParametersOutput) ToLifecyclePolicyEventParametersOutputWithContext(ctx context.Context) LifecyclePolicyEventParametersOutput {
	return o
}

func (o LifecyclePolicyEventParametersOutput) ToLifecyclePolicyEventParametersPtrOutput() LifecyclePolicyEventParametersPtrOutput {
	return o.ToLifecyclePolicyEventParametersPtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyEventParametersOutput) ToLifecyclePolicyEventParametersPtrOutputWithContext(ctx context.Context) LifecyclePolicyEventParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LifecyclePolicyEventParameters) *LifecyclePolicyEventParameters {
		return &v
	}).(LifecyclePolicyEventParametersPtrOutput)
}

func (o LifecyclePolicyEventParametersOutput) DescriptionRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyEventParameters) *string { return v.DescriptionRegex }).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyEventParametersOutput) EventType() pulumi.StringOutput {
	return o.ApplyT(func(v LifecyclePolicyEventParameters) string { return v.EventType }).(pulumi.StringOutput)
}

func (o LifecyclePolicyEventParametersOutput) SnapshotOwner() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LifecyclePolicyEventParameters) []string { return v.SnapshotOwner }).(pulumi.StringArrayOutput)
}

type LifecyclePolicyEventParametersPtrOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyEventParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyEventParameters)(nil)).Elem()
}

func (o LifecyclePolicyEventParametersPtrOutput) ToLifecyclePolicyEventParametersPtrOutput() LifecyclePolicyEventParametersPtrOutput {
	return o
}

func (o LifecyclePolicyEventParametersPtrOutput) ToLifecyclePolicyEventParametersPtrOutputWithContext(ctx context.Context) LifecyclePolicyEventParametersPtrOutput {
	return o
}

func (o LifecyclePolicyEventParametersPtrOutput) Elem() LifecyclePolicyEventParametersOutput {
	return o.ApplyT(func(v *LifecyclePolicyEventParameters) LifecyclePolicyEventParameters {
		if v != nil {
			return *v
		}
		var ret LifecyclePolicyEventParameters
		return ret
	}).(LifecyclePolicyEventParametersOutput)
}

func (o LifecyclePolicyEventParametersPtrOutput) DescriptionRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyEventParameters) *string {
		if v == nil {
			return nil
		}
		return v.DescriptionRegex
	}).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyEventParametersPtrOutput) EventType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyEventParameters) *string {
		if v == nil {
			return nil
		}
		return &v.EventType
	}).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyEventParametersPtrOutput) SnapshotOwner() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LifecyclePolicyEventParameters) []string {
		if v == nil {
			return nil
		}
		return v.SnapshotOwner
	}).(pulumi.StringArrayOutput)
}

type LifecyclePolicyEventSource struct {
	Parameters *LifecyclePolicyEventParameters `pulumi:"parameters"`
	Type       string                          `pulumi:"type"`
}

// LifecyclePolicyEventSourceInput is an input type that accepts LifecyclePolicyEventSourceArgs and LifecyclePolicyEventSourceOutput values.
// You can construct a concrete instance of `LifecyclePolicyEventSourceInput` via:
//
//          LifecyclePolicyEventSourceArgs{...}
type LifecyclePolicyEventSourceInput interface {
	pulumi.Input

	ToLifecyclePolicyEventSourceOutput() LifecyclePolicyEventSourceOutput
	ToLifecyclePolicyEventSourceOutputWithContext(context.Context) LifecyclePolicyEventSourceOutput
}

type LifecyclePolicyEventSourceArgs struct {
	Parameters LifecyclePolicyEventParametersPtrInput `pulumi:"parameters"`
	Type       pulumi.StringInput                     `pulumi:"type"`
}

func (LifecyclePolicyEventSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyEventSource)(nil)).Elem()
}

func (i LifecyclePolicyEventSourceArgs) ToLifecyclePolicyEventSourceOutput() LifecyclePolicyEventSourceOutput {
	return i.ToLifecyclePolicyEventSourceOutputWithContext(context.Background())
}

func (i LifecyclePolicyEventSourceArgs) ToLifecyclePolicyEventSourceOutputWithContext(ctx context.Context) LifecyclePolicyEventSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyEventSourceOutput)
}

func (i LifecyclePolicyEventSourceArgs) ToLifecyclePolicyEventSourcePtrOutput() LifecyclePolicyEventSourcePtrOutput {
	return i.ToLifecyclePolicyEventSourcePtrOutputWithContext(context.Background())
}

func (i LifecyclePolicyEventSourceArgs) ToLifecyclePolicyEventSourcePtrOutputWithContext(ctx context.Context) LifecyclePolicyEventSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyEventSourceOutput).ToLifecyclePolicyEventSourcePtrOutputWithContext(ctx)
}

// LifecyclePolicyEventSourcePtrInput is an input type that accepts LifecyclePolicyEventSourceArgs, LifecyclePolicyEventSourcePtr and LifecyclePolicyEventSourcePtrOutput values.
// You can construct a concrete instance of `LifecyclePolicyEventSourcePtrInput` via:
//
//          LifecyclePolicyEventSourceArgs{...}
//
//  or:
//
//          nil
type LifecyclePolicyEventSourcePtrInput interface {
	pulumi.Input

	ToLifecyclePolicyEventSourcePtrOutput() LifecyclePolicyEventSourcePtrOutput
	ToLifecyclePolicyEventSourcePtrOutputWithContext(context.Context) LifecyclePolicyEventSourcePtrOutput
}

type lifecyclePolicyEventSourcePtrType LifecyclePolicyEventSourceArgs

func LifecyclePolicyEventSourcePtr(v *LifecyclePolicyEventSourceArgs) LifecyclePolicyEventSourcePtrInput {
	return (*lifecyclePolicyEventSourcePtrType)(v)
}

func (*lifecyclePolicyEventSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyEventSource)(nil)).Elem()
}

func (i *lifecyclePolicyEventSourcePtrType) ToLifecyclePolicyEventSourcePtrOutput() LifecyclePolicyEventSourcePtrOutput {
	return i.ToLifecyclePolicyEventSourcePtrOutputWithContext(context.Background())
}

func (i *lifecyclePolicyEventSourcePtrType) ToLifecyclePolicyEventSourcePtrOutputWithContext(ctx context.Context) LifecyclePolicyEventSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyEventSourcePtrOutput)
}

type LifecyclePolicyEventSourceOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyEventSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyEventSource)(nil)).Elem()
}

func (o LifecyclePolicyEventSourceOutput) ToLifecyclePolicyEventSourceOutput() LifecyclePolicyEventSourceOutput {
	return o
}

func (o LifecyclePolicyEventSourceOutput) ToLifecyclePolicyEventSourceOutputWithContext(ctx context.Context) LifecyclePolicyEventSourceOutput {
	return o
}

func (o LifecyclePolicyEventSourceOutput) ToLifecyclePolicyEventSourcePtrOutput() LifecyclePolicyEventSourcePtrOutput {
	return o.ToLifecyclePolicyEventSourcePtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyEventSourceOutput) ToLifecyclePolicyEventSourcePtrOutputWithContext(ctx context.Context) LifecyclePolicyEventSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LifecyclePolicyEventSource) *LifecyclePolicyEventSource {
		return &v
	}).(LifecyclePolicyEventSourcePtrOutput)
}

func (o LifecyclePolicyEventSourceOutput) Parameters() LifecyclePolicyEventParametersPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyEventSource) *LifecyclePolicyEventParameters { return v.Parameters }).(LifecyclePolicyEventParametersPtrOutput)
}

func (o LifecyclePolicyEventSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LifecyclePolicyEventSource) string { return v.Type }).(pulumi.StringOutput)
}

type LifecyclePolicyEventSourcePtrOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyEventSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyEventSource)(nil)).Elem()
}

func (o LifecyclePolicyEventSourcePtrOutput) ToLifecyclePolicyEventSourcePtrOutput() LifecyclePolicyEventSourcePtrOutput {
	return o
}

func (o LifecyclePolicyEventSourcePtrOutput) ToLifecyclePolicyEventSourcePtrOutputWithContext(ctx context.Context) LifecyclePolicyEventSourcePtrOutput {
	return o
}

func (o LifecyclePolicyEventSourcePtrOutput) Elem() LifecyclePolicyEventSourceOutput {
	return o.ApplyT(func(v *LifecyclePolicyEventSource) LifecyclePolicyEventSource {
		if v != nil {
			return *v
		}
		var ret LifecyclePolicyEventSource
		return ret
	}).(LifecyclePolicyEventSourceOutput)
}

func (o LifecyclePolicyEventSourcePtrOutput) Parameters() LifecyclePolicyEventParametersPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyEventSource) *LifecyclePolicyEventParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(LifecyclePolicyEventParametersPtrOutput)
}

func (o LifecyclePolicyEventSourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyEventSource) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type LifecyclePolicyFastRestoreRule struct {
	AvailabilityZones []string `pulumi:"availabilityZones"`
	Count             *int     `pulumi:"count"`
	Interval          *int     `pulumi:"interval"`
	IntervalUnit      *string  `pulumi:"intervalUnit"`
}

// LifecyclePolicyFastRestoreRuleInput is an input type that accepts LifecyclePolicyFastRestoreRuleArgs and LifecyclePolicyFastRestoreRuleOutput values.
// You can construct a concrete instance of `LifecyclePolicyFastRestoreRuleInput` via:
//
//          LifecyclePolicyFastRestoreRuleArgs{...}
type LifecyclePolicyFastRestoreRuleInput interface {
	pulumi.Input

	ToLifecyclePolicyFastRestoreRuleOutput() LifecyclePolicyFastRestoreRuleOutput
	ToLifecyclePolicyFastRestoreRuleOutputWithContext(context.Context) LifecyclePolicyFastRestoreRuleOutput
}

type LifecyclePolicyFastRestoreRuleArgs struct {
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	Count             pulumi.IntPtrInput      `pulumi:"count"`
	Interval          pulumi.IntPtrInput      `pulumi:"interval"`
	IntervalUnit      pulumi.StringPtrInput   `pulumi:"intervalUnit"`
}

func (LifecyclePolicyFastRestoreRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyFastRestoreRule)(nil)).Elem()
}

func (i LifecyclePolicyFastRestoreRuleArgs) ToLifecyclePolicyFastRestoreRuleOutput() LifecyclePolicyFastRestoreRuleOutput {
	return i.ToLifecyclePolicyFastRestoreRuleOutputWithContext(context.Background())
}

func (i LifecyclePolicyFastRestoreRuleArgs) ToLifecyclePolicyFastRestoreRuleOutputWithContext(ctx context.Context) LifecyclePolicyFastRestoreRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyFastRestoreRuleOutput)
}

func (i LifecyclePolicyFastRestoreRuleArgs) ToLifecyclePolicyFastRestoreRulePtrOutput() LifecyclePolicyFastRestoreRulePtrOutput {
	return i.ToLifecyclePolicyFastRestoreRulePtrOutputWithContext(context.Background())
}

func (i LifecyclePolicyFastRestoreRuleArgs) ToLifecyclePolicyFastRestoreRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyFastRestoreRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyFastRestoreRuleOutput).ToLifecyclePolicyFastRestoreRulePtrOutputWithContext(ctx)
}

// LifecyclePolicyFastRestoreRulePtrInput is an input type that accepts LifecyclePolicyFastRestoreRuleArgs, LifecyclePolicyFastRestoreRulePtr and LifecyclePolicyFastRestoreRulePtrOutput values.
// You can construct a concrete instance of `LifecyclePolicyFastRestoreRulePtrInput` via:
//
//          LifecyclePolicyFastRestoreRuleArgs{...}
//
//  or:
//
//          nil
type LifecyclePolicyFastRestoreRulePtrInput interface {
	pulumi.Input

	ToLifecyclePolicyFastRestoreRulePtrOutput() LifecyclePolicyFastRestoreRulePtrOutput
	ToLifecyclePolicyFastRestoreRulePtrOutputWithContext(context.Context) LifecyclePolicyFastRestoreRulePtrOutput
}

type lifecyclePolicyFastRestoreRulePtrType LifecyclePolicyFastRestoreRuleArgs

func LifecyclePolicyFastRestoreRulePtr(v *LifecyclePolicyFastRestoreRuleArgs) LifecyclePolicyFastRestoreRulePtrInput {
	return (*lifecyclePolicyFastRestoreRulePtrType)(v)
}

func (*lifecyclePolicyFastRestoreRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyFastRestoreRule)(nil)).Elem()
}

func (i *lifecyclePolicyFastRestoreRulePtrType) ToLifecyclePolicyFastRestoreRulePtrOutput() LifecyclePolicyFastRestoreRulePtrOutput {
	return i.ToLifecyclePolicyFastRestoreRulePtrOutputWithContext(context.Background())
}

func (i *lifecyclePolicyFastRestoreRulePtrType) ToLifecyclePolicyFastRestoreRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyFastRestoreRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyFastRestoreRulePtrOutput)
}

type LifecyclePolicyFastRestoreRuleOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyFastRestoreRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyFastRestoreRule)(nil)).Elem()
}

func (o LifecyclePolicyFastRestoreRuleOutput) ToLifecyclePolicyFastRestoreRuleOutput() LifecyclePolicyFastRestoreRuleOutput {
	return o
}

func (o LifecyclePolicyFastRestoreRuleOutput) ToLifecyclePolicyFastRestoreRuleOutputWithContext(ctx context.Context) LifecyclePolicyFastRestoreRuleOutput {
	return o
}

func (o LifecyclePolicyFastRestoreRuleOutput) ToLifecyclePolicyFastRestoreRulePtrOutput() LifecyclePolicyFastRestoreRulePtrOutput {
	return o.ToLifecyclePolicyFastRestoreRulePtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyFastRestoreRuleOutput) ToLifecyclePolicyFastRestoreRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyFastRestoreRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LifecyclePolicyFastRestoreRule) *LifecyclePolicyFastRestoreRule {
		return &v
	}).(LifecyclePolicyFastRestoreRulePtrOutput)
}

func (o LifecyclePolicyFastRestoreRuleOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LifecyclePolicyFastRestoreRule) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o LifecyclePolicyFastRestoreRuleOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyFastRestoreRule) *int { return v.Count }).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyFastRestoreRuleOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyFastRestoreRule) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyFastRestoreRuleOutput) IntervalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyFastRestoreRule) *string { return v.IntervalUnit }).(pulumi.StringPtrOutput)
}

type LifecyclePolicyFastRestoreRulePtrOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyFastRestoreRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyFastRestoreRule)(nil)).Elem()
}

func (o LifecyclePolicyFastRestoreRulePtrOutput) ToLifecyclePolicyFastRestoreRulePtrOutput() LifecyclePolicyFastRestoreRulePtrOutput {
	return o
}

func (o LifecyclePolicyFastRestoreRulePtrOutput) ToLifecyclePolicyFastRestoreRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyFastRestoreRulePtrOutput {
	return o
}

func (o LifecyclePolicyFastRestoreRulePtrOutput) Elem() LifecyclePolicyFastRestoreRuleOutput {
	return o.ApplyT(func(v *LifecyclePolicyFastRestoreRule) LifecyclePolicyFastRestoreRule {
		if v != nil {
			return *v
		}
		var ret LifecyclePolicyFastRestoreRule
		return ret
	}).(LifecyclePolicyFastRestoreRuleOutput)
}

func (o LifecyclePolicyFastRestoreRulePtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LifecyclePolicyFastRestoreRule) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

func (o LifecyclePolicyFastRestoreRulePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyFastRestoreRule) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyFastRestoreRulePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyFastRestoreRule) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyFastRestoreRulePtrOutput) IntervalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyFastRestoreRule) *string {
		if v == nil {
			return nil
		}
		return v.IntervalUnit
	}).(pulumi.StringPtrOutput)
}

type LifecyclePolicyParameters struct {
	ExcludeBootVolume *bool `pulumi:"excludeBootVolume"`
	NoReboot          *bool `pulumi:"noReboot"`
}

// LifecyclePolicyParametersInput is an input type that accepts LifecyclePolicyParametersArgs and LifecyclePolicyParametersOutput values.
// You can construct a concrete instance of `LifecyclePolicyParametersInput` via:
//
//          LifecyclePolicyParametersArgs{...}
type LifecyclePolicyParametersInput interface {
	pulumi.Input

	ToLifecyclePolicyParametersOutput() LifecyclePolicyParametersOutput
	ToLifecyclePolicyParametersOutputWithContext(context.Context) LifecyclePolicyParametersOutput
}

type LifecyclePolicyParametersArgs struct {
	ExcludeBootVolume pulumi.BoolPtrInput `pulumi:"excludeBootVolume"`
	NoReboot          pulumi.BoolPtrInput `pulumi:"noReboot"`
}

func (LifecyclePolicyParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyParameters)(nil)).Elem()
}

func (i LifecyclePolicyParametersArgs) ToLifecyclePolicyParametersOutput() LifecyclePolicyParametersOutput {
	return i.ToLifecyclePolicyParametersOutputWithContext(context.Background())
}

func (i LifecyclePolicyParametersArgs) ToLifecyclePolicyParametersOutputWithContext(ctx context.Context) LifecyclePolicyParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyParametersOutput)
}

func (i LifecyclePolicyParametersArgs) ToLifecyclePolicyParametersPtrOutput() LifecyclePolicyParametersPtrOutput {
	return i.ToLifecyclePolicyParametersPtrOutputWithContext(context.Background())
}

func (i LifecyclePolicyParametersArgs) ToLifecyclePolicyParametersPtrOutputWithContext(ctx context.Context) LifecyclePolicyParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyParametersOutput).ToLifecyclePolicyParametersPtrOutputWithContext(ctx)
}

// LifecyclePolicyParametersPtrInput is an input type that accepts LifecyclePolicyParametersArgs, LifecyclePolicyParametersPtr and LifecyclePolicyParametersPtrOutput values.
// You can construct a concrete instance of `LifecyclePolicyParametersPtrInput` via:
//
//          LifecyclePolicyParametersArgs{...}
//
//  or:
//
//          nil
type LifecyclePolicyParametersPtrInput interface {
	pulumi.Input

	ToLifecyclePolicyParametersPtrOutput() LifecyclePolicyParametersPtrOutput
	ToLifecyclePolicyParametersPtrOutputWithContext(context.Context) LifecyclePolicyParametersPtrOutput
}

type lifecyclePolicyParametersPtrType LifecyclePolicyParametersArgs

func LifecyclePolicyParametersPtr(v *LifecyclePolicyParametersArgs) LifecyclePolicyParametersPtrInput {
	return (*lifecyclePolicyParametersPtrType)(v)
}

func (*lifecyclePolicyParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyParameters)(nil)).Elem()
}

func (i *lifecyclePolicyParametersPtrType) ToLifecyclePolicyParametersPtrOutput() LifecyclePolicyParametersPtrOutput {
	return i.ToLifecyclePolicyParametersPtrOutputWithContext(context.Background())
}

func (i *lifecyclePolicyParametersPtrType) ToLifecyclePolicyParametersPtrOutputWithContext(ctx context.Context) LifecyclePolicyParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyParametersPtrOutput)
}

type LifecyclePolicyParametersOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyParameters)(nil)).Elem()
}

func (o LifecyclePolicyParametersOutput) ToLifecyclePolicyParametersOutput() LifecyclePolicyParametersOutput {
	return o
}

func (o LifecyclePolicyParametersOutput) ToLifecyclePolicyParametersOutputWithContext(ctx context.Context) LifecyclePolicyParametersOutput {
	return o
}

func (o LifecyclePolicyParametersOutput) ToLifecyclePolicyParametersPtrOutput() LifecyclePolicyParametersPtrOutput {
	return o.ToLifecyclePolicyParametersPtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyParametersOutput) ToLifecyclePolicyParametersPtrOutputWithContext(ctx context.Context) LifecyclePolicyParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LifecyclePolicyParameters) *LifecyclePolicyParameters {
		return &v
	}).(LifecyclePolicyParametersPtrOutput)
}

func (o LifecyclePolicyParametersOutput) ExcludeBootVolume() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyParameters) *bool { return v.ExcludeBootVolume }).(pulumi.BoolPtrOutput)
}

func (o LifecyclePolicyParametersOutput) NoReboot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyParameters) *bool { return v.NoReboot }).(pulumi.BoolPtrOutput)
}

type LifecyclePolicyParametersPtrOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyParameters)(nil)).Elem()
}

func (o LifecyclePolicyParametersPtrOutput) ToLifecyclePolicyParametersPtrOutput() LifecyclePolicyParametersPtrOutput {
	return o
}

func (o LifecyclePolicyParametersPtrOutput) ToLifecyclePolicyParametersPtrOutputWithContext(ctx context.Context) LifecyclePolicyParametersPtrOutput {
	return o
}

func (o LifecyclePolicyParametersPtrOutput) Elem() LifecyclePolicyParametersOutput {
	return o.ApplyT(func(v *LifecyclePolicyParameters) LifecyclePolicyParameters {
		if v != nil {
			return *v
		}
		var ret LifecyclePolicyParameters
		return ret
	}).(LifecyclePolicyParametersOutput)
}

func (o LifecyclePolicyParametersPtrOutput) ExcludeBootVolume() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyParameters) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeBootVolume
	}).(pulumi.BoolPtrOutput)
}

func (o LifecyclePolicyParametersPtrOutput) NoReboot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyParameters) *bool {
		if v == nil {
			return nil
		}
		return v.NoReboot
	}).(pulumi.BoolPtrOutput)
}

type LifecyclePolicyPolicyDetails struct {
	Actions           []LifecyclePolicyAction     `pulumi:"actions"`
	EventSource       *LifecyclePolicyEventSource `pulumi:"eventSource"`
	Parameters        *LifecyclePolicyParameters  `pulumi:"parameters"`
	PolicyType        *string                     `pulumi:"policyType"`
	ResourceLocations []string                    `pulumi:"resourceLocations"`
	ResourceTypes     []string                    `pulumi:"resourceTypes"`
	Schedules         []LifecyclePolicySchedule   `pulumi:"schedules"`
	TargetTags        []LifecyclePolicyTag        `pulumi:"targetTags"`
}

// LifecyclePolicyPolicyDetailsInput is an input type that accepts LifecyclePolicyPolicyDetailsArgs and LifecyclePolicyPolicyDetailsOutput values.
// You can construct a concrete instance of `LifecyclePolicyPolicyDetailsInput` via:
//
//          LifecyclePolicyPolicyDetailsArgs{...}
type LifecyclePolicyPolicyDetailsInput interface {
	pulumi.Input

	ToLifecyclePolicyPolicyDetailsOutput() LifecyclePolicyPolicyDetailsOutput
	ToLifecyclePolicyPolicyDetailsOutputWithContext(context.Context) LifecyclePolicyPolicyDetailsOutput
}

type LifecyclePolicyPolicyDetailsArgs struct {
	Actions           LifecyclePolicyActionArrayInput    `pulumi:"actions"`
	EventSource       LifecyclePolicyEventSourcePtrInput `pulumi:"eventSource"`
	Parameters        LifecyclePolicyParametersPtrInput  `pulumi:"parameters"`
	PolicyType        pulumi.StringPtrInput              `pulumi:"policyType"`
	ResourceLocations pulumi.StringArrayInput            `pulumi:"resourceLocations"`
	ResourceTypes     pulumi.StringArrayInput            `pulumi:"resourceTypes"`
	Schedules         LifecyclePolicyScheduleArrayInput  `pulumi:"schedules"`
	TargetTags        LifecyclePolicyTagArrayInput       `pulumi:"targetTags"`
}

func (LifecyclePolicyPolicyDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyPolicyDetails)(nil)).Elem()
}

func (i LifecyclePolicyPolicyDetailsArgs) ToLifecyclePolicyPolicyDetailsOutput() LifecyclePolicyPolicyDetailsOutput {
	return i.ToLifecyclePolicyPolicyDetailsOutputWithContext(context.Background())
}

func (i LifecyclePolicyPolicyDetailsArgs) ToLifecyclePolicyPolicyDetailsOutputWithContext(ctx context.Context) LifecyclePolicyPolicyDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyPolicyDetailsOutput)
}

func (i LifecyclePolicyPolicyDetailsArgs) ToLifecyclePolicyPolicyDetailsPtrOutput() LifecyclePolicyPolicyDetailsPtrOutput {
	return i.ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(context.Background())
}

func (i LifecyclePolicyPolicyDetailsArgs) ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(ctx context.Context) LifecyclePolicyPolicyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyPolicyDetailsOutput).ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(ctx)
}

// LifecyclePolicyPolicyDetailsPtrInput is an input type that accepts LifecyclePolicyPolicyDetailsArgs, LifecyclePolicyPolicyDetailsPtr and LifecyclePolicyPolicyDetailsPtrOutput values.
// You can construct a concrete instance of `LifecyclePolicyPolicyDetailsPtrInput` via:
//
//          LifecyclePolicyPolicyDetailsArgs{...}
//
//  or:
//
//          nil
type LifecyclePolicyPolicyDetailsPtrInput interface {
	pulumi.Input

	ToLifecyclePolicyPolicyDetailsPtrOutput() LifecyclePolicyPolicyDetailsPtrOutput
	ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(context.Context) LifecyclePolicyPolicyDetailsPtrOutput
}

type lifecyclePolicyPolicyDetailsPtrType LifecyclePolicyPolicyDetailsArgs

func LifecyclePolicyPolicyDetailsPtr(v *LifecyclePolicyPolicyDetailsArgs) LifecyclePolicyPolicyDetailsPtrInput {
	return (*lifecyclePolicyPolicyDetailsPtrType)(v)
}

func (*lifecyclePolicyPolicyDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyPolicyDetails)(nil)).Elem()
}

func (i *lifecyclePolicyPolicyDetailsPtrType) ToLifecyclePolicyPolicyDetailsPtrOutput() LifecyclePolicyPolicyDetailsPtrOutput {
	return i.ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(context.Background())
}

func (i *lifecyclePolicyPolicyDetailsPtrType) ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(ctx context.Context) LifecyclePolicyPolicyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyPolicyDetailsPtrOutput)
}

type LifecyclePolicyPolicyDetailsOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyPolicyDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyPolicyDetails)(nil)).Elem()
}

func (o LifecyclePolicyPolicyDetailsOutput) ToLifecyclePolicyPolicyDetailsOutput() LifecyclePolicyPolicyDetailsOutput {
	return o
}

func (o LifecyclePolicyPolicyDetailsOutput) ToLifecyclePolicyPolicyDetailsOutputWithContext(ctx context.Context) LifecyclePolicyPolicyDetailsOutput {
	return o
}

func (o LifecyclePolicyPolicyDetailsOutput) ToLifecyclePolicyPolicyDetailsPtrOutput() LifecyclePolicyPolicyDetailsPtrOutput {
	return o.ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyPolicyDetailsOutput) ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(ctx context.Context) LifecyclePolicyPolicyDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LifecyclePolicyPolicyDetails) *LifecyclePolicyPolicyDetails {
		return &v
	}).(LifecyclePolicyPolicyDetailsPtrOutput)
}

func (o LifecyclePolicyPolicyDetailsOutput) Actions() LifecyclePolicyActionArrayOutput {
	return o.ApplyT(func(v LifecyclePolicyPolicyDetails) []LifecyclePolicyAction { return v.Actions }).(LifecyclePolicyActionArrayOutput)
}

func (o LifecyclePolicyPolicyDetailsOutput) EventSource() LifecyclePolicyEventSourcePtrOutput {
	return o.ApplyT(func(v LifecyclePolicyPolicyDetails) *LifecyclePolicyEventSource { return v.EventSource }).(LifecyclePolicyEventSourcePtrOutput)
}

func (o LifecyclePolicyPolicyDetailsOutput) Parameters() LifecyclePolicyParametersPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyPolicyDetails) *LifecyclePolicyParameters { return v.Parameters }).(LifecyclePolicyParametersPtrOutput)
}

func (o LifecyclePolicyPolicyDetailsOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyPolicyDetails) *string { return v.PolicyType }).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyPolicyDetailsOutput) ResourceLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LifecyclePolicyPolicyDetails) []string { return v.ResourceLocations }).(pulumi.StringArrayOutput)
}

func (o LifecyclePolicyPolicyDetailsOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LifecyclePolicyPolicyDetails) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

func (o LifecyclePolicyPolicyDetailsOutput) Schedules() LifecyclePolicyScheduleArrayOutput {
	return o.ApplyT(func(v LifecyclePolicyPolicyDetails) []LifecyclePolicySchedule { return v.Schedules }).(LifecyclePolicyScheduleArrayOutput)
}

func (o LifecyclePolicyPolicyDetailsOutput) TargetTags() LifecyclePolicyTagArrayOutput {
	return o.ApplyT(func(v LifecyclePolicyPolicyDetails) []LifecyclePolicyTag { return v.TargetTags }).(LifecyclePolicyTagArrayOutput)
}

type LifecyclePolicyPolicyDetailsPtrOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyPolicyDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyPolicyDetails)(nil)).Elem()
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) ToLifecyclePolicyPolicyDetailsPtrOutput() LifecyclePolicyPolicyDetailsPtrOutput {
	return o
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) ToLifecyclePolicyPolicyDetailsPtrOutputWithContext(ctx context.Context) LifecyclePolicyPolicyDetailsPtrOutput {
	return o
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) Elem() LifecyclePolicyPolicyDetailsOutput {
	return o.ApplyT(func(v *LifecyclePolicyPolicyDetails) LifecyclePolicyPolicyDetails {
		if v != nil {
			return *v
		}
		var ret LifecyclePolicyPolicyDetails
		return ret
	}).(LifecyclePolicyPolicyDetailsOutput)
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) Actions() LifecyclePolicyActionArrayOutput {
	return o.ApplyT(func(v *LifecyclePolicyPolicyDetails) []LifecyclePolicyAction {
		if v == nil {
			return nil
		}
		return v.Actions
	}).(LifecyclePolicyActionArrayOutput)
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) EventSource() LifecyclePolicyEventSourcePtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyPolicyDetails) *LifecyclePolicyEventSource {
		if v == nil {
			return nil
		}
		return v.EventSource
	}).(LifecyclePolicyEventSourcePtrOutput)
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) Parameters() LifecyclePolicyParametersPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyPolicyDetails) *LifecyclePolicyParameters {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(LifecyclePolicyParametersPtrOutput)
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) PolicyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyPolicyDetails) *string {
		if v == nil {
			return nil
		}
		return v.PolicyType
	}).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) ResourceLocations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LifecyclePolicyPolicyDetails) []string {
		if v == nil {
			return nil
		}
		return v.ResourceLocations
	}).(pulumi.StringArrayOutput)
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LifecyclePolicyPolicyDetails) []string {
		if v == nil {
			return nil
		}
		return v.ResourceTypes
	}).(pulumi.StringArrayOutput)
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) Schedules() LifecyclePolicyScheduleArrayOutput {
	return o.ApplyT(func(v *LifecyclePolicyPolicyDetails) []LifecyclePolicySchedule {
		if v == nil {
			return nil
		}
		return v.Schedules
	}).(LifecyclePolicyScheduleArrayOutput)
}

func (o LifecyclePolicyPolicyDetailsPtrOutput) TargetTags() LifecyclePolicyTagArrayOutput {
	return o.ApplyT(func(v *LifecyclePolicyPolicyDetails) []LifecyclePolicyTag {
		if v == nil {
			return nil
		}
		return v.TargetTags
	}).(LifecyclePolicyTagArrayOutput)
}

type LifecyclePolicyRetainRule struct {
	Count        *int    `pulumi:"count"`
	Interval     *int    `pulumi:"interval"`
	IntervalUnit *string `pulumi:"intervalUnit"`
}

// LifecyclePolicyRetainRuleInput is an input type that accepts LifecyclePolicyRetainRuleArgs and LifecyclePolicyRetainRuleOutput values.
// You can construct a concrete instance of `LifecyclePolicyRetainRuleInput` via:
//
//          LifecyclePolicyRetainRuleArgs{...}
type LifecyclePolicyRetainRuleInput interface {
	pulumi.Input

	ToLifecyclePolicyRetainRuleOutput() LifecyclePolicyRetainRuleOutput
	ToLifecyclePolicyRetainRuleOutputWithContext(context.Context) LifecyclePolicyRetainRuleOutput
}

type LifecyclePolicyRetainRuleArgs struct {
	Count        pulumi.IntPtrInput    `pulumi:"count"`
	Interval     pulumi.IntPtrInput    `pulumi:"interval"`
	IntervalUnit pulumi.StringPtrInput `pulumi:"intervalUnit"`
}

func (LifecyclePolicyRetainRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyRetainRule)(nil)).Elem()
}

func (i LifecyclePolicyRetainRuleArgs) ToLifecyclePolicyRetainRuleOutput() LifecyclePolicyRetainRuleOutput {
	return i.ToLifecyclePolicyRetainRuleOutputWithContext(context.Background())
}

func (i LifecyclePolicyRetainRuleArgs) ToLifecyclePolicyRetainRuleOutputWithContext(ctx context.Context) LifecyclePolicyRetainRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyRetainRuleOutput)
}

func (i LifecyclePolicyRetainRuleArgs) ToLifecyclePolicyRetainRulePtrOutput() LifecyclePolicyRetainRulePtrOutput {
	return i.ToLifecyclePolicyRetainRulePtrOutputWithContext(context.Background())
}

func (i LifecyclePolicyRetainRuleArgs) ToLifecyclePolicyRetainRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyRetainRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyRetainRuleOutput).ToLifecyclePolicyRetainRulePtrOutputWithContext(ctx)
}

// LifecyclePolicyRetainRulePtrInput is an input type that accepts LifecyclePolicyRetainRuleArgs, LifecyclePolicyRetainRulePtr and LifecyclePolicyRetainRulePtrOutput values.
// You can construct a concrete instance of `LifecyclePolicyRetainRulePtrInput` via:
//
//          LifecyclePolicyRetainRuleArgs{...}
//
//  or:
//
//          nil
type LifecyclePolicyRetainRulePtrInput interface {
	pulumi.Input

	ToLifecyclePolicyRetainRulePtrOutput() LifecyclePolicyRetainRulePtrOutput
	ToLifecyclePolicyRetainRulePtrOutputWithContext(context.Context) LifecyclePolicyRetainRulePtrOutput
}

type lifecyclePolicyRetainRulePtrType LifecyclePolicyRetainRuleArgs

func LifecyclePolicyRetainRulePtr(v *LifecyclePolicyRetainRuleArgs) LifecyclePolicyRetainRulePtrInput {
	return (*lifecyclePolicyRetainRulePtrType)(v)
}

func (*lifecyclePolicyRetainRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyRetainRule)(nil)).Elem()
}

func (i *lifecyclePolicyRetainRulePtrType) ToLifecyclePolicyRetainRulePtrOutput() LifecyclePolicyRetainRulePtrOutput {
	return i.ToLifecyclePolicyRetainRulePtrOutputWithContext(context.Background())
}

func (i *lifecyclePolicyRetainRulePtrType) ToLifecyclePolicyRetainRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyRetainRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyRetainRulePtrOutput)
}

type LifecyclePolicyRetainRuleOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyRetainRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyRetainRule)(nil)).Elem()
}

func (o LifecyclePolicyRetainRuleOutput) ToLifecyclePolicyRetainRuleOutput() LifecyclePolicyRetainRuleOutput {
	return o
}

func (o LifecyclePolicyRetainRuleOutput) ToLifecyclePolicyRetainRuleOutputWithContext(ctx context.Context) LifecyclePolicyRetainRuleOutput {
	return o
}

func (o LifecyclePolicyRetainRuleOutput) ToLifecyclePolicyRetainRulePtrOutput() LifecyclePolicyRetainRulePtrOutput {
	return o.ToLifecyclePolicyRetainRulePtrOutputWithContext(context.Background())
}

func (o LifecyclePolicyRetainRuleOutput) ToLifecyclePolicyRetainRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyRetainRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LifecyclePolicyRetainRule) *LifecyclePolicyRetainRule {
		return &v
	}).(LifecyclePolicyRetainRulePtrOutput)
}

func (o LifecyclePolicyRetainRuleOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyRetainRule) *int { return v.Count }).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyRetainRuleOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyRetainRule) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyRetainRuleOutput) IntervalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyRetainRule) *string { return v.IntervalUnit }).(pulumi.StringPtrOutput)
}

type LifecyclePolicyRetainRulePtrOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyRetainRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LifecyclePolicyRetainRule)(nil)).Elem()
}

func (o LifecyclePolicyRetainRulePtrOutput) ToLifecyclePolicyRetainRulePtrOutput() LifecyclePolicyRetainRulePtrOutput {
	return o
}

func (o LifecyclePolicyRetainRulePtrOutput) ToLifecyclePolicyRetainRulePtrOutputWithContext(ctx context.Context) LifecyclePolicyRetainRulePtrOutput {
	return o
}

func (o LifecyclePolicyRetainRulePtrOutput) Elem() LifecyclePolicyRetainRuleOutput {
	return o.ApplyT(func(v *LifecyclePolicyRetainRule) LifecyclePolicyRetainRule {
		if v != nil {
			return *v
		}
		var ret LifecyclePolicyRetainRule
		return ret
	}).(LifecyclePolicyRetainRuleOutput)
}

func (o LifecyclePolicyRetainRulePtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyRetainRule) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyRetainRulePtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyRetainRule) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyRetainRulePtrOutput) IntervalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LifecyclePolicyRetainRule) *string {
		if v == nil {
			return nil
		}
		return v.IntervalUnit
	}).(pulumi.StringPtrOutput)
}

type LifecyclePolicySchedule struct {
	CopyTags             *bool                                `pulumi:"copyTags"`
	CreateRule           *LifecyclePolicyCreateRule           `pulumi:"createRule"`
	CrossRegionCopyRules []LifecyclePolicyCrossRegionCopyRule `pulumi:"crossRegionCopyRules"`
	DeprecateRule        *LifecyclePolicyDeprecateRule        `pulumi:"deprecateRule"`
	FastRestoreRule      *LifecyclePolicyFastRestoreRule      `pulumi:"fastRestoreRule"`
	Name                 *string                              `pulumi:"name"`
	RetainRule           *LifecyclePolicyRetainRule           `pulumi:"retainRule"`
	ShareRules           []LifecyclePolicyShareRule           `pulumi:"shareRules"`
	TagsToAdd            []LifecyclePolicyTag                 `pulumi:"tagsToAdd"`
	VariableTags         []LifecyclePolicyTag                 `pulumi:"variableTags"`
}

// LifecyclePolicyScheduleInput is an input type that accepts LifecyclePolicyScheduleArgs and LifecyclePolicyScheduleOutput values.
// You can construct a concrete instance of `LifecyclePolicyScheduleInput` via:
//
//          LifecyclePolicyScheduleArgs{...}
type LifecyclePolicyScheduleInput interface {
	pulumi.Input

	ToLifecyclePolicyScheduleOutput() LifecyclePolicyScheduleOutput
	ToLifecyclePolicyScheduleOutputWithContext(context.Context) LifecyclePolicyScheduleOutput
}

type LifecyclePolicyScheduleArgs struct {
	CopyTags             pulumi.BoolPtrInput                          `pulumi:"copyTags"`
	CreateRule           LifecyclePolicyCreateRulePtrInput            `pulumi:"createRule"`
	CrossRegionCopyRules LifecyclePolicyCrossRegionCopyRuleArrayInput `pulumi:"crossRegionCopyRules"`
	DeprecateRule        LifecyclePolicyDeprecateRulePtrInput         `pulumi:"deprecateRule"`
	FastRestoreRule      LifecyclePolicyFastRestoreRulePtrInput       `pulumi:"fastRestoreRule"`
	Name                 pulumi.StringPtrInput                        `pulumi:"name"`
	RetainRule           LifecyclePolicyRetainRulePtrInput            `pulumi:"retainRule"`
	ShareRules           LifecyclePolicyShareRuleArrayInput           `pulumi:"shareRules"`
	TagsToAdd            LifecyclePolicyTagArrayInput                 `pulumi:"tagsToAdd"`
	VariableTags         LifecyclePolicyTagArrayInput                 `pulumi:"variableTags"`
}

func (LifecyclePolicyScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicySchedule)(nil)).Elem()
}

func (i LifecyclePolicyScheduleArgs) ToLifecyclePolicyScheduleOutput() LifecyclePolicyScheduleOutput {
	return i.ToLifecyclePolicyScheduleOutputWithContext(context.Background())
}

func (i LifecyclePolicyScheduleArgs) ToLifecyclePolicyScheduleOutputWithContext(ctx context.Context) LifecyclePolicyScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyScheduleOutput)
}

// LifecyclePolicyScheduleArrayInput is an input type that accepts LifecyclePolicyScheduleArray and LifecyclePolicyScheduleArrayOutput values.
// You can construct a concrete instance of `LifecyclePolicyScheduleArrayInput` via:
//
//          LifecyclePolicyScheduleArray{ LifecyclePolicyScheduleArgs{...} }
type LifecyclePolicyScheduleArrayInput interface {
	pulumi.Input

	ToLifecyclePolicyScheduleArrayOutput() LifecyclePolicyScheduleArrayOutput
	ToLifecyclePolicyScheduleArrayOutputWithContext(context.Context) LifecyclePolicyScheduleArrayOutput
}

type LifecyclePolicyScheduleArray []LifecyclePolicyScheduleInput

func (LifecyclePolicyScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePolicySchedule)(nil)).Elem()
}

func (i LifecyclePolicyScheduleArray) ToLifecyclePolicyScheduleArrayOutput() LifecyclePolicyScheduleArrayOutput {
	return i.ToLifecyclePolicyScheduleArrayOutputWithContext(context.Background())
}

func (i LifecyclePolicyScheduleArray) ToLifecyclePolicyScheduleArrayOutputWithContext(ctx context.Context) LifecyclePolicyScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyScheduleArrayOutput)
}

type LifecyclePolicyScheduleOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicySchedule)(nil)).Elem()
}

func (o LifecyclePolicyScheduleOutput) ToLifecyclePolicyScheduleOutput() LifecyclePolicyScheduleOutput {
	return o
}

func (o LifecyclePolicyScheduleOutput) ToLifecyclePolicyScheduleOutputWithContext(ctx context.Context) LifecyclePolicyScheduleOutput {
	return o
}

func (o LifecyclePolicyScheduleOutput) CopyTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LifecyclePolicySchedule) *bool { return v.CopyTags }).(pulumi.BoolPtrOutput)
}

func (o LifecyclePolicyScheduleOutput) CreateRule() LifecyclePolicyCreateRulePtrOutput {
	return o.ApplyT(func(v LifecyclePolicySchedule) *LifecyclePolicyCreateRule { return v.CreateRule }).(LifecyclePolicyCreateRulePtrOutput)
}

func (o LifecyclePolicyScheduleOutput) CrossRegionCopyRules() LifecyclePolicyCrossRegionCopyRuleArrayOutput {
	return o.ApplyT(func(v LifecyclePolicySchedule) []LifecyclePolicyCrossRegionCopyRule { return v.CrossRegionCopyRules }).(LifecyclePolicyCrossRegionCopyRuleArrayOutput)
}

func (o LifecyclePolicyScheduleOutput) DeprecateRule() LifecyclePolicyDeprecateRulePtrOutput {
	return o.ApplyT(func(v LifecyclePolicySchedule) *LifecyclePolicyDeprecateRule { return v.DeprecateRule }).(LifecyclePolicyDeprecateRulePtrOutput)
}

func (o LifecyclePolicyScheduleOutput) FastRestoreRule() LifecyclePolicyFastRestoreRulePtrOutput {
	return o.ApplyT(func(v LifecyclePolicySchedule) *LifecyclePolicyFastRestoreRule { return v.FastRestoreRule }).(LifecyclePolicyFastRestoreRulePtrOutput)
}

func (o LifecyclePolicyScheduleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicySchedule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LifecyclePolicyScheduleOutput) RetainRule() LifecyclePolicyRetainRulePtrOutput {
	return o.ApplyT(func(v LifecyclePolicySchedule) *LifecyclePolicyRetainRule { return v.RetainRule }).(LifecyclePolicyRetainRulePtrOutput)
}

func (o LifecyclePolicyScheduleOutput) ShareRules() LifecyclePolicyShareRuleArrayOutput {
	return o.ApplyT(func(v LifecyclePolicySchedule) []LifecyclePolicyShareRule { return v.ShareRules }).(LifecyclePolicyShareRuleArrayOutput)
}

func (o LifecyclePolicyScheduleOutput) TagsToAdd() LifecyclePolicyTagArrayOutput {
	return o.ApplyT(func(v LifecyclePolicySchedule) []LifecyclePolicyTag { return v.TagsToAdd }).(LifecyclePolicyTagArrayOutput)
}

func (o LifecyclePolicyScheduleOutput) VariableTags() LifecyclePolicyTagArrayOutput {
	return o.ApplyT(func(v LifecyclePolicySchedule) []LifecyclePolicyTag { return v.VariableTags }).(LifecyclePolicyTagArrayOutput)
}

type LifecyclePolicyScheduleArrayOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePolicySchedule)(nil)).Elem()
}

func (o LifecyclePolicyScheduleArrayOutput) ToLifecyclePolicyScheduleArrayOutput() LifecyclePolicyScheduleArrayOutput {
	return o
}

func (o LifecyclePolicyScheduleArrayOutput) ToLifecyclePolicyScheduleArrayOutputWithContext(ctx context.Context) LifecyclePolicyScheduleArrayOutput {
	return o
}

func (o LifecyclePolicyScheduleArrayOutput) Index(i pulumi.IntInput) LifecyclePolicyScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecyclePolicySchedule {
		return vs[0].([]LifecyclePolicySchedule)[vs[1].(int)]
	}).(LifecyclePolicyScheduleOutput)
}

type LifecyclePolicyShareRule struct {
	TargetAccounts      []string `pulumi:"targetAccounts"`
	UnshareInterval     *int     `pulumi:"unshareInterval"`
	UnshareIntervalUnit *string  `pulumi:"unshareIntervalUnit"`
}

// LifecyclePolicyShareRuleInput is an input type that accepts LifecyclePolicyShareRuleArgs and LifecyclePolicyShareRuleOutput values.
// You can construct a concrete instance of `LifecyclePolicyShareRuleInput` via:
//
//          LifecyclePolicyShareRuleArgs{...}
type LifecyclePolicyShareRuleInput interface {
	pulumi.Input

	ToLifecyclePolicyShareRuleOutput() LifecyclePolicyShareRuleOutput
	ToLifecyclePolicyShareRuleOutputWithContext(context.Context) LifecyclePolicyShareRuleOutput
}

type LifecyclePolicyShareRuleArgs struct {
	TargetAccounts      pulumi.StringArrayInput `pulumi:"targetAccounts"`
	UnshareInterval     pulumi.IntPtrInput      `pulumi:"unshareInterval"`
	UnshareIntervalUnit pulumi.StringPtrInput   `pulumi:"unshareIntervalUnit"`
}

func (LifecyclePolicyShareRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyShareRule)(nil)).Elem()
}

func (i LifecyclePolicyShareRuleArgs) ToLifecyclePolicyShareRuleOutput() LifecyclePolicyShareRuleOutput {
	return i.ToLifecyclePolicyShareRuleOutputWithContext(context.Background())
}

func (i LifecyclePolicyShareRuleArgs) ToLifecyclePolicyShareRuleOutputWithContext(ctx context.Context) LifecyclePolicyShareRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyShareRuleOutput)
}

// LifecyclePolicyShareRuleArrayInput is an input type that accepts LifecyclePolicyShareRuleArray and LifecyclePolicyShareRuleArrayOutput values.
// You can construct a concrete instance of `LifecyclePolicyShareRuleArrayInput` via:
//
//          LifecyclePolicyShareRuleArray{ LifecyclePolicyShareRuleArgs{...} }
type LifecyclePolicyShareRuleArrayInput interface {
	pulumi.Input

	ToLifecyclePolicyShareRuleArrayOutput() LifecyclePolicyShareRuleArrayOutput
	ToLifecyclePolicyShareRuleArrayOutputWithContext(context.Context) LifecyclePolicyShareRuleArrayOutput
}

type LifecyclePolicyShareRuleArray []LifecyclePolicyShareRuleInput

func (LifecyclePolicyShareRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePolicyShareRule)(nil)).Elem()
}

func (i LifecyclePolicyShareRuleArray) ToLifecyclePolicyShareRuleArrayOutput() LifecyclePolicyShareRuleArrayOutput {
	return i.ToLifecyclePolicyShareRuleArrayOutputWithContext(context.Background())
}

func (i LifecyclePolicyShareRuleArray) ToLifecyclePolicyShareRuleArrayOutputWithContext(ctx context.Context) LifecyclePolicyShareRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyShareRuleArrayOutput)
}

type LifecyclePolicyShareRuleOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyShareRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyShareRule)(nil)).Elem()
}

func (o LifecyclePolicyShareRuleOutput) ToLifecyclePolicyShareRuleOutput() LifecyclePolicyShareRuleOutput {
	return o
}

func (o LifecyclePolicyShareRuleOutput) ToLifecyclePolicyShareRuleOutputWithContext(ctx context.Context) LifecyclePolicyShareRuleOutput {
	return o
}

func (o LifecyclePolicyShareRuleOutput) TargetAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LifecyclePolicyShareRule) []string { return v.TargetAccounts }).(pulumi.StringArrayOutput)
}

func (o LifecyclePolicyShareRuleOutput) UnshareInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyShareRule) *int { return v.UnshareInterval }).(pulumi.IntPtrOutput)
}

func (o LifecyclePolicyShareRuleOutput) UnshareIntervalUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LifecyclePolicyShareRule) *string { return v.UnshareIntervalUnit }).(pulumi.StringPtrOutput)
}

type LifecyclePolicyShareRuleArrayOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyShareRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePolicyShareRule)(nil)).Elem()
}

func (o LifecyclePolicyShareRuleArrayOutput) ToLifecyclePolicyShareRuleArrayOutput() LifecyclePolicyShareRuleArrayOutput {
	return o
}

func (o LifecyclePolicyShareRuleArrayOutput) ToLifecyclePolicyShareRuleArrayOutputWithContext(ctx context.Context) LifecyclePolicyShareRuleArrayOutput {
	return o
}

func (o LifecyclePolicyShareRuleArrayOutput) Index(i pulumi.IntInput) LifecyclePolicyShareRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecyclePolicyShareRule {
		return vs[0].([]LifecyclePolicyShareRule)[vs[1].(int)]
	}).(LifecyclePolicyShareRuleOutput)
}

type LifecyclePolicyTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// LifecyclePolicyTagInput is an input type that accepts LifecyclePolicyTagArgs and LifecyclePolicyTagOutput values.
// You can construct a concrete instance of `LifecyclePolicyTagInput` via:
//
//          LifecyclePolicyTagArgs{...}
type LifecyclePolicyTagInput interface {
	pulumi.Input

	ToLifecyclePolicyTagOutput() LifecyclePolicyTagOutput
	ToLifecyclePolicyTagOutputWithContext(context.Context) LifecyclePolicyTagOutput
}

type LifecyclePolicyTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (LifecyclePolicyTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyTag)(nil)).Elem()
}

func (i LifecyclePolicyTagArgs) ToLifecyclePolicyTagOutput() LifecyclePolicyTagOutput {
	return i.ToLifecyclePolicyTagOutputWithContext(context.Background())
}

func (i LifecyclePolicyTagArgs) ToLifecyclePolicyTagOutputWithContext(ctx context.Context) LifecyclePolicyTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyTagOutput)
}

// LifecyclePolicyTagArrayInput is an input type that accepts LifecyclePolicyTagArray and LifecyclePolicyTagArrayOutput values.
// You can construct a concrete instance of `LifecyclePolicyTagArrayInput` via:
//
//          LifecyclePolicyTagArray{ LifecyclePolicyTagArgs{...} }
type LifecyclePolicyTagArrayInput interface {
	pulumi.Input

	ToLifecyclePolicyTagArrayOutput() LifecyclePolicyTagArrayOutput
	ToLifecyclePolicyTagArrayOutputWithContext(context.Context) LifecyclePolicyTagArrayOutput
}

type LifecyclePolicyTagArray []LifecyclePolicyTagInput

func (LifecyclePolicyTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePolicyTag)(nil)).Elem()
}

func (i LifecyclePolicyTagArray) ToLifecyclePolicyTagArrayOutput() LifecyclePolicyTagArrayOutput {
	return i.ToLifecyclePolicyTagArrayOutputWithContext(context.Background())
}

func (i LifecyclePolicyTagArray) ToLifecyclePolicyTagArrayOutputWithContext(ctx context.Context) LifecyclePolicyTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LifecyclePolicyTagArrayOutput)
}

type LifecyclePolicyTagOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LifecyclePolicyTag)(nil)).Elem()
}

func (o LifecyclePolicyTagOutput) ToLifecyclePolicyTagOutput() LifecyclePolicyTagOutput {
	return o
}

func (o LifecyclePolicyTagOutput) ToLifecyclePolicyTagOutputWithContext(ctx context.Context) LifecyclePolicyTagOutput {
	return o
}

func (o LifecyclePolicyTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LifecyclePolicyTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o LifecyclePolicyTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LifecyclePolicyTag) string { return v.Value }).(pulumi.StringOutput)
}

type LifecyclePolicyTagArrayOutput struct{ *pulumi.OutputState }

func (LifecyclePolicyTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LifecyclePolicyTag)(nil)).Elem()
}

func (o LifecyclePolicyTagArrayOutput) ToLifecyclePolicyTagArrayOutput() LifecyclePolicyTagArrayOutput {
	return o
}

func (o LifecyclePolicyTagArrayOutput) ToLifecyclePolicyTagArrayOutputWithContext(ctx context.Context) LifecyclePolicyTagArrayOutput {
	return o
}

func (o LifecyclePolicyTagArrayOutput) Index(i pulumi.IntInput) LifecyclePolicyTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LifecyclePolicyTag {
		return vs[0].([]LifecyclePolicyTag)[vs[1].(int)]
	}).(LifecyclePolicyTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyActionInput)(nil)).Elem(), LifecyclePolicyActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyActionArrayInput)(nil)).Elem(), LifecyclePolicyActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyCreateRuleInput)(nil)).Elem(), LifecyclePolicyCreateRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyCreateRulePtrInput)(nil)).Elem(), LifecyclePolicyCreateRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyCrossRegionCopyActionInput)(nil)).Elem(), LifecyclePolicyCrossRegionCopyActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyCrossRegionCopyActionArrayInput)(nil)).Elem(), LifecyclePolicyCrossRegionCopyActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyCrossRegionCopyDeprecateRuleInput)(nil)).Elem(), LifecyclePolicyCrossRegionCopyDeprecateRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyCrossRegionCopyDeprecateRulePtrInput)(nil)).Elem(), LifecyclePolicyCrossRegionCopyDeprecateRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyCrossRegionCopyRetainRuleInput)(nil)).Elem(), LifecyclePolicyCrossRegionCopyRetainRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyCrossRegionCopyRetainRulePtrInput)(nil)).Elem(), LifecyclePolicyCrossRegionCopyRetainRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyCrossRegionCopyRuleInput)(nil)).Elem(), LifecyclePolicyCrossRegionCopyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyCrossRegionCopyRuleArrayInput)(nil)).Elem(), LifecyclePolicyCrossRegionCopyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyDeprecateRuleInput)(nil)).Elem(), LifecyclePolicyDeprecateRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyDeprecateRulePtrInput)(nil)).Elem(), LifecyclePolicyDeprecateRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyEncryptionConfigurationInput)(nil)).Elem(), LifecyclePolicyEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyEventParametersInput)(nil)).Elem(), LifecyclePolicyEventParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyEventParametersPtrInput)(nil)).Elem(), LifecyclePolicyEventParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyEventSourceInput)(nil)).Elem(), LifecyclePolicyEventSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyEventSourcePtrInput)(nil)).Elem(), LifecyclePolicyEventSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyFastRestoreRuleInput)(nil)).Elem(), LifecyclePolicyFastRestoreRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyFastRestoreRulePtrInput)(nil)).Elem(), LifecyclePolicyFastRestoreRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyParametersInput)(nil)).Elem(), LifecyclePolicyParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyParametersPtrInput)(nil)).Elem(), LifecyclePolicyParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyPolicyDetailsInput)(nil)).Elem(), LifecyclePolicyPolicyDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyPolicyDetailsPtrInput)(nil)).Elem(), LifecyclePolicyPolicyDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyRetainRuleInput)(nil)).Elem(), LifecyclePolicyRetainRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyRetainRulePtrInput)(nil)).Elem(), LifecyclePolicyRetainRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyScheduleInput)(nil)).Elem(), LifecyclePolicyScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyScheduleArrayInput)(nil)).Elem(), LifecyclePolicyScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyShareRuleInput)(nil)).Elem(), LifecyclePolicyShareRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyShareRuleArrayInput)(nil)).Elem(), LifecyclePolicyShareRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyTagInput)(nil)).Elem(), LifecyclePolicyTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LifecyclePolicyTagArrayInput)(nil)).Elem(), LifecyclePolicyTagArray{})
	pulumi.RegisterOutputType(LifecyclePolicyActionOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyActionArrayOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyCreateRuleOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyCreateRulePtrOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyCrossRegionCopyActionOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyCrossRegionCopyActionArrayOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyCrossRegionCopyDeprecateRuleOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyCrossRegionCopyDeprecateRulePtrOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyCrossRegionCopyRetainRuleOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyCrossRegionCopyRetainRulePtrOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyCrossRegionCopyRuleOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyCrossRegionCopyRuleArrayOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyDeprecateRuleOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyDeprecateRulePtrOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyEventParametersOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyEventParametersPtrOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyEventSourceOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyEventSourcePtrOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyFastRestoreRuleOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyFastRestoreRulePtrOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyParametersOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyParametersPtrOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyPolicyDetailsOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyPolicyDetailsPtrOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyRetainRuleOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyRetainRulePtrOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyScheduleOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyScheduleArrayOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyShareRuleOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyShareRuleArrayOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyTagOutput{})
	pulumi.RegisterOutputType(LifecyclePolicyTagArrayOutput{})
}
