// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package greengrassv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ComponentVersionComponentPlatform struct {
	Attributes interface{} `pulumi:"attributes"`
	Name       *string     `pulumi:"name"`
}

// ComponentVersionComponentPlatformInput is an input type that accepts ComponentVersionComponentPlatformArgs and ComponentVersionComponentPlatformOutput values.
// You can construct a concrete instance of `ComponentVersionComponentPlatformInput` via:
//
//          ComponentVersionComponentPlatformArgs{...}
type ComponentVersionComponentPlatformInput interface {
	pulumi.Input

	ToComponentVersionComponentPlatformOutput() ComponentVersionComponentPlatformOutput
	ToComponentVersionComponentPlatformOutputWithContext(context.Context) ComponentVersionComponentPlatformOutput
}

type ComponentVersionComponentPlatformArgs struct {
	Attributes pulumi.Input          `pulumi:"attributes"`
	Name       pulumi.StringPtrInput `pulumi:"name"`
}

func (ComponentVersionComponentPlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionComponentPlatform)(nil)).Elem()
}

func (i ComponentVersionComponentPlatformArgs) ToComponentVersionComponentPlatformOutput() ComponentVersionComponentPlatformOutput {
	return i.ToComponentVersionComponentPlatformOutputWithContext(context.Background())
}

func (i ComponentVersionComponentPlatformArgs) ToComponentVersionComponentPlatformOutputWithContext(ctx context.Context) ComponentVersionComponentPlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionComponentPlatformOutput)
}

// ComponentVersionComponentPlatformArrayInput is an input type that accepts ComponentVersionComponentPlatformArray and ComponentVersionComponentPlatformArrayOutput values.
// You can construct a concrete instance of `ComponentVersionComponentPlatformArrayInput` via:
//
//          ComponentVersionComponentPlatformArray{ ComponentVersionComponentPlatformArgs{...} }
type ComponentVersionComponentPlatformArrayInput interface {
	pulumi.Input

	ToComponentVersionComponentPlatformArrayOutput() ComponentVersionComponentPlatformArrayOutput
	ToComponentVersionComponentPlatformArrayOutputWithContext(context.Context) ComponentVersionComponentPlatformArrayOutput
}

type ComponentVersionComponentPlatformArray []ComponentVersionComponentPlatformInput

func (ComponentVersionComponentPlatformArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentVersionComponentPlatform)(nil)).Elem()
}

func (i ComponentVersionComponentPlatformArray) ToComponentVersionComponentPlatformArrayOutput() ComponentVersionComponentPlatformArrayOutput {
	return i.ToComponentVersionComponentPlatformArrayOutputWithContext(context.Background())
}

func (i ComponentVersionComponentPlatformArray) ToComponentVersionComponentPlatformArrayOutputWithContext(ctx context.Context) ComponentVersionComponentPlatformArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionComponentPlatformArrayOutput)
}

type ComponentVersionComponentPlatformOutput struct{ *pulumi.OutputState }

func (ComponentVersionComponentPlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionComponentPlatform)(nil)).Elem()
}

func (o ComponentVersionComponentPlatformOutput) ToComponentVersionComponentPlatformOutput() ComponentVersionComponentPlatformOutput {
	return o
}

func (o ComponentVersionComponentPlatformOutput) ToComponentVersionComponentPlatformOutputWithContext(ctx context.Context) ComponentVersionComponentPlatformOutput {
	return o
}

func (o ComponentVersionComponentPlatformOutput) Attributes() pulumi.AnyOutput {
	return o.ApplyT(func(v ComponentVersionComponentPlatform) interface{} { return v.Attributes }).(pulumi.AnyOutput)
}

func (o ComponentVersionComponentPlatformOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentVersionComponentPlatform) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ComponentVersionComponentPlatformArrayOutput struct{ *pulumi.OutputState }

func (ComponentVersionComponentPlatformArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentVersionComponentPlatform)(nil)).Elem()
}

func (o ComponentVersionComponentPlatformArrayOutput) ToComponentVersionComponentPlatformArrayOutput() ComponentVersionComponentPlatformArrayOutput {
	return o
}

func (o ComponentVersionComponentPlatformArrayOutput) ToComponentVersionComponentPlatformArrayOutputWithContext(ctx context.Context) ComponentVersionComponentPlatformArrayOutput {
	return o
}

func (o ComponentVersionComponentPlatformArrayOutput) Index(i pulumi.IntInput) ComponentVersionComponentPlatformOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentVersionComponentPlatform {
		return vs[0].([]ComponentVersionComponentPlatform)[vs[1].(int)]
	}).(ComponentVersionComponentPlatformOutput)
}

type ComponentVersionLambdaContainerParams struct {
	Devices        []ComponentVersionLambdaDeviceMount `pulumi:"devices"`
	MemorySizeInKB *int                                `pulumi:"memorySizeInKB"`
	MountROSysfs   *bool                               `pulumi:"mountROSysfs"`
	Volumes        []ComponentVersionLambdaVolumeMount `pulumi:"volumes"`
}

// ComponentVersionLambdaContainerParamsInput is an input type that accepts ComponentVersionLambdaContainerParamsArgs and ComponentVersionLambdaContainerParamsOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaContainerParamsInput` via:
//
//          ComponentVersionLambdaContainerParamsArgs{...}
type ComponentVersionLambdaContainerParamsInput interface {
	pulumi.Input

	ToComponentVersionLambdaContainerParamsOutput() ComponentVersionLambdaContainerParamsOutput
	ToComponentVersionLambdaContainerParamsOutputWithContext(context.Context) ComponentVersionLambdaContainerParamsOutput
}

type ComponentVersionLambdaContainerParamsArgs struct {
	Devices        ComponentVersionLambdaDeviceMountArrayInput `pulumi:"devices"`
	MemorySizeInKB pulumi.IntPtrInput                          `pulumi:"memorySizeInKB"`
	MountROSysfs   pulumi.BoolPtrInput                         `pulumi:"mountROSysfs"`
	Volumes        ComponentVersionLambdaVolumeMountArrayInput `pulumi:"volumes"`
}

func (ComponentVersionLambdaContainerParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaContainerParams)(nil)).Elem()
}

func (i ComponentVersionLambdaContainerParamsArgs) ToComponentVersionLambdaContainerParamsOutput() ComponentVersionLambdaContainerParamsOutput {
	return i.ToComponentVersionLambdaContainerParamsOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaContainerParamsArgs) ToComponentVersionLambdaContainerParamsOutputWithContext(ctx context.Context) ComponentVersionLambdaContainerParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaContainerParamsOutput)
}

func (i ComponentVersionLambdaContainerParamsArgs) ToComponentVersionLambdaContainerParamsPtrOutput() ComponentVersionLambdaContainerParamsPtrOutput {
	return i.ToComponentVersionLambdaContainerParamsPtrOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaContainerParamsArgs) ToComponentVersionLambdaContainerParamsPtrOutputWithContext(ctx context.Context) ComponentVersionLambdaContainerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaContainerParamsOutput).ToComponentVersionLambdaContainerParamsPtrOutputWithContext(ctx)
}

// ComponentVersionLambdaContainerParamsPtrInput is an input type that accepts ComponentVersionLambdaContainerParamsArgs, ComponentVersionLambdaContainerParamsPtr and ComponentVersionLambdaContainerParamsPtrOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaContainerParamsPtrInput` via:
//
//          ComponentVersionLambdaContainerParamsArgs{...}
//
//  or:
//
//          nil
type ComponentVersionLambdaContainerParamsPtrInput interface {
	pulumi.Input

	ToComponentVersionLambdaContainerParamsPtrOutput() ComponentVersionLambdaContainerParamsPtrOutput
	ToComponentVersionLambdaContainerParamsPtrOutputWithContext(context.Context) ComponentVersionLambdaContainerParamsPtrOutput
}

type componentVersionLambdaContainerParamsPtrType ComponentVersionLambdaContainerParamsArgs

func ComponentVersionLambdaContainerParamsPtr(v *ComponentVersionLambdaContainerParamsArgs) ComponentVersionLambdaContainerParamsPtrInput {
	return (*componentVersionLambdaContainerParamsPtrType)(v)
}

func (*componentVersionLambdaContainerParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentVersionLambdaContainerParams)(nil)).Elem()
}

func (i *componentVersionLambdaContainerParamsPtrType) ToComponentVersionLambdaContainerParamsPtrOutput() ComponentVersionLambdaContainerParamsPtrOutput {
	return i.ToComponentVersionLambdaContainerParamsPtrOutputWithContext(context.Background())
}

func (i *componentVersionLambdaContainerParamsPtrType) ToComponentVersionLambdaContainerParamsPtrOutputWithContext(ctx context.Context) ComponentVersionLambdaContainerParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaContainerParamsPtrOutput)
}

type ComponentVersionLambdaContainerParamsOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaContainerParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaContainerParams)(nil)).Elem()
}

func (o ComponentVersionLambdaContainerParamsOutput) ToComponentVersionLambdaContainerParamsOutput() ComponentVersionLambdaContainerParamsOutput {
	return o
}

func (o ComponentVersionLambdaContainerParamsOutput) ToComponentVersionLambdaContainerParamsOutputWithContext(ctx context.Context) ComponentVersionLambdaContainerParamsOutput {
	return o
}

func (o ComponentVersionLambdaContainerParamsOutput) ToComponentVersionLambdaContainerParamsPtrOutput() ComponentVersionLambdaContainerParamsPtrOutput {
	return o.ToComponentVersionLambdaContainerParamsPtrOutputWithContext(context.Background())
}

func (o ComponentVersionLambdaContainerParamsOutput) ToComponentVersionLambdaContainerParamsPtrOutputWithContext(ctx context.Context) ComponentVersionLambdaContainerParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentVersionLambdaContainerParams) *ComponentVersionLambdaContainerParams {
		return &v
	}).(ComponentVersionLambdaContainerParamsPtrOutput)
}

func (o ComponentVersionLambdaContainerParamsOutput) Devices() ComponentVersionLambdaDeviceMountArrayOutput {
	return o.ApplyT(func(v ComponentVersionLambdaContainerParams) []ComponentVersionLambdaDeviceMount { return v.Devices }).(ComponentVersionLambdaDeviceMountArrayOutput)
}

func (o ComponentVersionLambdaContainerParamsOutput) MemorySizeInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaContainerParams) *int { return v.MemorySizeInKB }).(pulumi.IntPtrOutput)
}

func (o ComponentVersionLambdaContainerParamsOutput) MountROSysfs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaContainerParams) *bool { return v.MountROSysfs }).(pulumi.BoolPtrOutput)
}

func (o ComponentVersionLambdaContainerParamsOutput) Volumes() ComponentVersionLambdaVolumeMountArrayOutput {
	return o.ApplyT(func(v ComponentVersionLambdaContainerParams) []ComponentVersionLambdaVolumeMount { return v.Volumes }).(ComponentVersionLambdaVolumeMountArrayOutput)
}

type ComponentVersionLambdaContainerParamsPtrOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaContainerParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentVersionLambdaContainerParams)(nil)).Elem()
}

func (o ComponentVersionLambdaContainerParamsPtrOutput) ToComponentVersionLambdaContainerParamsPtrOutput() ComponentVersionLambdaContainerParamsPtrOutput {
	return o
}

func (o ComponentVersionLambdaContainerParamsPtrOutput) ToComponentVersionLambdaContainerParamsPtrOutputWithContext(ctx context.Context) ComponentVersionLambdaContainerParamsPtrOutput {
	return o
}

func (o ComponentVersionLambdaContainerParamsPtrOutput) Elem() ComponentVersionLambdaContainerParamsOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaContainerParams) ComponentVersionLambdaContainerParams {
		if v != nil {
			return *v
		}
		var ret ComponentVersionLambdaContainerParams
		return ret
	}).(ComponentVersionLambdaContainerParamsOutput)
}

func (o ComponentVersionLambdaContainerParamsPtrOutput) Devices() ComponentVersionLambdaDeviceMountArrayOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaContainerParams) []ComponentVersionLambdaDeviceMount {
		if v == nil {
			return nil
		}
		return v.Devices
	}).(ComponentVersionLambdaDeviceMountArrayOutput)
}

func (o ComponentVersionLambdaContainerParamsPtrOutput) MemorySizeInKB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaContainerParams) *int {
		if v == nil {
			return nil
		}
		return v.MemorySizeInKB
	}).(pulumi.IntPtrOutput)
}

func (o ComponentVersionLambdaContainerParamsPtrOutput) MountROSysfs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaContainerParams) *bool {
		if v == nil {
			return nil
		}
		return v.MountROSysfs
	}).(pulumi.BoolPtrOutput)
}

func (o ComponentVersionLambdaContainerParamsPtrOutput) Volumes() ComponentVersionLambdaVolumeMountArrayOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaContainerParams) []ComponentVersionLambdaVolumeMount {
		if v == nil {
			return nil
		}
		return v.Volumes
	}).(ComponentVersionLambdaVolumeMountArrayOutput)
}

type ComponentVersionLambdaDeviceMount struct {
	AddGroupOwner *bool                                       `pulumi:"addGroupOwner"`
	Path          *string                                     `pulumi:"path"`
	Permission    *ComponentVersionLambdaFilesystemPermission `pulumi:"permission"`
}

// ComponentVersionLambdaDeviceMountInput is an input type that accepts ComponentVersionLambdaDeviceMountArgs and ComponentVersionLambdaDeviceMountOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaDeviceMountInput` via:
//
//          ComponentVersionLambdaDeviceMountArgs{...}
type ComponentVersionLambdaDeviceMountInput interface {
	pulumi.Input

	ToComponentVersionLambdaDeviceMountOutput() ComponentVersionLambdaDeviceMountOutput
	ToComponentVersionLambdaDeviceMountOutputWithContext(context.Context) ComponentVersionLambdaDeviceMountOutput
}

type ComponentVersionLambdaDeviceMountArgs struct {
	AddGroupOwner pulumi.BoolPtrInput                                `pulumi:"addGroupOwner"`
	Path          pulumi.StringPtrInput                              `pulumi:"path"`
	Permission    ComponentVersionLambdaFilesystemPermissionPtrInput `pulumi:"permission"`
}

func (ComponentVersionLambdaDeviceMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaDeviceMount)(nil)).Elem()
}

func (i ComponentVersionLambdaDeviceMountArgs) ToComponentVersionLambdaDeviceMountOutput() ComponentVersionLambdaDeviceMountOutput {
	return i.ToComponentVersionLambdaDeviceMountOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaDeviceMountArgs) ToComponentVersionLambdaDeviceMountOutputWithContext(ctx context.Context) ComponentVersionLambdaDeviceMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaDeviceMountOutput)
}

// ComponentVersionLambdaDeviceMountArrayInput is an input type that accepts ComponentVersionLambdaDeviceMountArray and ComponentVersionLambdaDeviceMountArrayOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaDeviceMountArrayInput` via:
//
//          ComponentVersionLambdaDeviceMountArray{ ComponentVersionLambdaDeviceMountArgs{...} }
type ComponentVersionLambdaDeviceMountArrayInput interface {
	pulumi.Input

	ToComponentVersionLambdaDeviceMountArrayOutput() ComponentVersionLambdaDeviceMountArrayOutput
	ToComponentVersionLambdaDeviceMountArrayOutputWithContext(context.Context) ComponentVersionLambdaDeviceMountArrayOutput
}

type ComponentVersionLambdaDeviceMountArray []ComponentVersionLambdaDeviceMountInput

func (ComponentVersionLambdaDeviceMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentVersionLambdaDeviceMount)(nil)).Elem()
}

func (i ComponentVersionLambdaDeviceMountArray) ToComponentVersionLambdaDeviceMountArrayOutput() ComponentVersionLambdaDeviceMountArrayOutput {
	return i.ToComponentVersionLambdaDeviceMountArrayOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaDeviceMountArray) ToComponentVersionLambdaDeviceMountArrayOutputWithContext(ctx context.Context) ComponentVersionLambdaDeviceMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaDeviceMountArrayOutput)
}

type ComponentVersionLambdaDeviceMountOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaDeviceMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaDeviceMount)(nil)).Elem()
}

func (o ComponentVersionLambdaDeviceMountOutput) ToComponentVersionLambdaDeviceMountOutput() ComponentVersionLambdaDeviceMountOutput {
	return o
}

func (o ComponentVersionLambdaDeviceMountOutput) ToComponentVersionLambdaDeviceMountOutputWithContext(ctx context.Context) ComponentVersionLambdaDeviceMountOutput {
	return o
}

func (o ComponentVersionLambdaDeviceMountOutput) AddGroupOwner() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaDeviceMount) *bool { return v.AddGroupOwner }).(pulumi.BoolPtrOutput)
}

func (o ComponentVersionLambdaDeviceMountOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaDeviceMount) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o ComponentVersionLambdaDeviceMountOutput) Permission() ComponentVersionLambdaFilesystemPermissionPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaDeviceMount) *ComponentVersionLambdaFilesystemPermission {
		return v.Permission
	}).(ComponentVersionLambdaFilesystemPermissionPtrOutput)
}

type ComponentVersionLambdaDeviceMountArrayOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaDeviceMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentVersionLambdaDeviceMount)(nil)).Elem()
}

func (o ComponentVersionLambdaDeviceMountArrayOutput) ToComponentVersionLambdaDeviceMountArrayOutput() ComponentVersionLambdaDeviceMountArrayOutput {
	return o
}

func (o ComponentVersionLambdaDeviceMountArrayOutput) ToComponentVersionLambdaDeviceMountArrayOutputWithContext(ctx context.Context) ComponentVersionLambdaDeviceMountArrayOutput {
	return o
}

func (o ComponentVersionLambdaDeviceMountArrayOutput) Index(i pulumi.IntInput) ComponentVersionLambdaDeviceMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentVersionLambdaDeviceMount {
		return vs[0].([]ComponentVersionLambdaDeviceMount)[vs[1].(int)]
	}).(ComponentVersionLambdaDeviceMountOutput)
}

type ComponentVersionLambdaEventSource struct {
	Topic *string                                `pulumi:"topic"`
	Type  *ComponentVersionLambdaEventSourceType `pulumi:"type"`
}

// ComponentVersionLambdaEventSourceInput is an input type that accepts ComponentVersionLambdaEventSourceArgs and ComponentVersionLambdaEventSourceOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaEventSourceInput` via:
//
//          ComponentVersionLambdaEventSourceArgs{...}
type ComponentVersionLambdaEventSourceInput interface {
	pulumi.Input

	ToComponentVersionLambdaEventSourceOutput() ComponentVersionLambdaEventSourceOutput
	ToComponentVersionLambdaEventSourceOutputWithContext(context.Context) ComponentVersionLambdaEventSourceOutput
}

type ComponentVersionLambdaEventSourceArgs struct {
	Topic pulumi.StringPtrInput                         `pulumi:"topic"`
	Type  ComponentVersionLambdaEventSourceTypePtrInput `pulumi:"type"`
}

func (ComponentVersionLambdaEventSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaEventSource)(nil)).Elem()
}

func (i ComponentVersionLambdaEventSourceArgs) ToComponentVersionLambdaEventSourceOutput() ComponentVersionLambdaEventSourceOutput {
	return i.ToComponentVersionLambdaEventSourceOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaEventSourceArgs) ToComponentVersionLambdaEventSourceOutputWithContext(ctx context.Context) ComponentVersionLambdaEventSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaEventSourceOutput)
}

// ComponentVersionLambdaEventSourceArrayInput is an input type that accepts ComponentVersionLambdaEventSourceArray and ComponentVersionLambdaEventSourceArrayOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaEventSourceArrayInput` via:
//
//          ComponentVersionLambdaEventSourceArray{ ComponentVersionLambdaEventSourceArgs{...} }
type ComponentVersionLambdaEventSourceArrayInput interface {
	pulumi.Input

	ToComponentVersionLambdaEventSourceArrayOutput() ComponentVersionLambdaEventSourceArrayOutput
	ToComponentVersionLambdaEventSourceArrayOutputWithContext(context.Context) ComponentVersionLambdaEventSourceArrayOutput
}

type ComponentVersionLambdaEventSourceArray []ComponentVersionLambdaEventSourceInput

func (ComponentVersionLambdaEventSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentVersionLambdaEventSource)(nil)).Elem()
}

func (i ComponentVersionLambdaEventSourceArray) ToComponentVersionLambdaEventSourceArrayOutput() ComponentVersionLambdaEventSourceArrayOutput {
	return i.ToComponentVersionLambdaEventSourceArrayOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaEventSourceArray) ToComponentVersionLambdaEventSourceArrayOutputWithContext(ctx context.Context) ComponentVersionLambdaEventSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaEventSourceArrayOutput)
}

type ComponentVersionLambdaEventSourceOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaEventSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaEventSource)(nil)).Elem()
}

func (o ComponentVersionLambdaEventSourceOutput) ToComponentVersionLambdaEventSourceOutput() ComponentVersionLambdaEventSourceOutput {
	return o
}

func (o ComponentVersionLambdaEventSourceOutput) ToComponentVersionLambdaEventSourceOutputWithContext(ctx context.Context) ComponentVersionLambdaEventSourceOutput {
	return o
}

func (o ComponentVersionLambdaEventSourceOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaEventSource) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

func (o ComponentVersionLambdaEventSourceOutput) Type() ComponentVersionLambdaEventSourceTypePtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaEventSource) *ComponentVersionLambdaEventSourceType { return v.Type }).(ComponentVersionLambdaEventSourceTypePtrOutput)
}

type ComponentVersionLambdaEventSourceArrayOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaEventSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentVersionLambdaEventSource)(nil)).Elem()
}

func (o ComponentVersionLambdaEventSourceArrayOutput) ToComponentVersionLambdaEventSourceArrayOutput() ComponentVersionLambdaEventSourceArrayOutput {
	return o
}

func (o ComponentVersionLambdaEventSourceArrayOutput) ToComponentVersionLambdaEventSourceArrayOutputWithContext(ctx context.Context) ComponentVersionLambdaEventSourceArrayOutput {
	return o
}

func (o ComponentVersionLambdaEventSourceArrayOutput) Index(i pulumi.IntInput) ComponentVersionLambdaEventSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentVersionLambdaEventSource {
		return vs[0].([]ComponentVersionLambdaEventSource)[vs[1].(int)]
	}).(ComponentVersionLambdaEventSourceOutput)
}

type ComponentVersionLambdaExecutionParameters struct {
	EnvironmentVariables     interface{}                                                        `pulumi:"environmentVariables"`
	EventSources             []ComponentVersionLambdaEventSource                                `pulumi:"eventSources"`
	ExecArgs                 []string                                                           `pulumi:"execArgs"`
	InputPayloadEncodingType *ComponentVersionLambdaExecutionParametersInputPayloadEncodingType `pulumi:"inputPayloadEncodingType"`
	LinuxProcessParams       *ComponentVersionLambdaLinuxProcessParams                          `pulumi:"linuxProcessParams"`
	MaxIdleTimeInSeconds     *int                                                               `pulumi:"maxIdleTimeInSeconds"`
	MaxInstancesCount        *int                                                               `pulumi:"maxInstancesCount"`
	MaxQueueSize             *int                                                               `pulumi:"maxQueueSize"`
	Pinned                   *bool                                                              `pulumi:"pinned"`
	StatusTimeoutInSeconds   *int                                                               `pulumi:"statusTimeoutInSeconds"`
	TimeoutInSeconds         *int                                                               `pulumi:"timeoutInSeconds"`
}

// ComponentVersionLambdaExecutionParametersInput is an input type that accepts ComponentVersionLambdaExecutionParametersArgs and ComponentVersionLambdaExecutionParametersOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaExecutionParametersInput` via:
//
//          ComponentVersionLambdaExecutionParametersArgs{...}
type ComponentVersionLambdaExecutionParametersInput interface {
	pulumi.Input

	ToComponentVersionLambdaExecutionParametersOutput() ComponentVersionLambdaExecutionParametersOutput
	ToComponentVersionLambdaExecutionParametersOutputWithContext(context.Context) ComponentVersionLambdaExecutionParametersOutput
}

type ComponentVersionLambdaExecutionParametersArgs struct {
	EnvironmentVariables     pulumi.Input                                                              `pulumi:"environmentVariables"`
	EventSources             ComponentVersionLambdaEventSourceArrayInput                               `pulumi:"eventSources"`
	ExecArgs                 pulumi.StringArrayInput                                                   `pulumi:"execArgs"`
	InputPayloadEncodingType ComponentVersionLambdaExecutionParametersInputPayloadEncodingTypePtrInput `pulumi:"inputPayloadEncodingType"`
	LinuxProcessParams       ComponentVersionLambdaLinuxProcessParamsPtrInput                          `pulumi:"linuxProcessParams"`
	MaxIdleTimeInSeconds     pulumi.IntPtrInput                                                        `pulumi:"maxIdleTimeInSeconds"`
	MaxInstancesCount        pulumi.IntPtrInput                                                        `pulumi:"maxInstancesCount"`
	MaxQueueSize             pulumi.IntPtrInput                                                        `pulumi:"maxQueueSize"`
	Pinned                   pulumi.BoolPtrInput                                                       `pulumi:"pinned"`
	StatusTimeoutInSeconds   pulumi.IntPtrInput                                                        `pulumi:"statusTimeoutInSeconds"`
	TimeoutInSeconds         pulumi.IntPtrInput                                                        `pulumi:"timeoutInSeconds"`
}

func (ComponentVersionLambdaExecutionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaExecutionParameters)(nil)).Elem()
}

func (i ComponentVersionLambdaExecutionParametersArgs) ToComponentVersionLambdaExecutionParametersOutput() ComponentVersionLambdaExecutionParametersOutput {
	return i.ToComponentVersionLambdaExecutionParametersOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaExecutionParametersArgs) ToComponentVersionLambdaExecutionParametersOutputWithContext(ctx context.Context) ComponentVersionLambdaExecutionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaExecutionParametersOutput)
}

func (i ComponentVersionLambdaExecutionParametersArgs) ToComponentVersionLambdaExecutionParametersPtrOutput() ComponentVersionLambdaExecutionParametersPtrOutput {
	return i.ToComponentVersionLambdaExecutionParametersPtrOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaExecutionParametersArgs) ToComponentVersionLambdaExecutionParametersPtrOutputWithContext(ctx context.Context) ComponentVersionLambdaExecutionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaExecutionParametersOutput).ToComponentVersionLambdaExecutionParametersPtrOutputWithContext(ctx)
}

// ComponentVersionLambdaExecutionParametersPtrInput is an input type that accepts ComponentVersionLambdaExecutionParametersArgs, ComponentVersionLambdaExecutionParametersPtr and ComponentVersionLambdaExecutionParametersPtrOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaExecutionParametersPtrInput` via:
//
//          ComponentVersionLambdaExecutionParametersArgs{...}
//
//  or:
//
//          nil
type ComponentVersionLambdaExecutionParametersPtrInput interface {
	pulumi.Input

	ToComponentVersionLambdaExecutionParametersPtrOutput() ComponentVersionLambdaExecutionParametersPtrOutput
	ToComponentVersionLambdaExecutionParametersPtrOutputWithContext(context.Context) ComponentVersionLambdaExecutionParametersPtrOutput
}

type componentVersionLambdaExecutionParametersPtrType ComponentVersionLambdaExecutionParametersArgs

func ComponentVersionLambdaExecutionParametersPtr(v *ComponentVersionLambdaExecutionParametersArgs) ComponentVersionLambdaExecutionParametersPtrInput {
	return (*componentVersionLambdaExecutionParametersPtrType)(v)
}

func (*componentVersionLambdaExecutionParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentVersionLambdaExecutionParameters)(nil)).Elem()
}

func (i *componentVersionLambdaExecutionParametersPtrType) ToComponentVersionLambdaExecutionParametersPtrOutput() ComponentVersionLambdaExecutionParametersPtrOutput {
	return i.ToComponentVersionLambdaExecutionParametersPtrOutputWithContext(context.Background())
}

func (i *componentVersionLambdaExecutionParametersPtrType) ToComponentVersionLambdaExecutionParametersPtrOutputWithContext(ctx context.Context) ComponentVersionLambdaExecutionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaExecutionParametersPtrOutput)
}

type ComponentVersionLambdaExecutionParametersOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaExecutionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaExecutionParameters)(nil)).Elem()
}

func (o ComponentVersionLambdaExecutionParametersOutput) ToComponentVersionLambdaExecutionParametersOutput() ComponentVersionLambdaExecutionParametersOutput {
	return o
}

func (o ComponentVersionLambdaExecutionParametersOutput) ToComponentVersionLambdaExecutionParametersOutputWithContext(ctx context.Context) ComponentVersionLambdaExecutionParametersOutput {
	return o
}

func (o ComponentVersionLambdaExecutionParametersOutput) ToComponentVersionLambdaExecutionParametersPtrOutput() ComponentVersionLambdaExecutionParametersPtrOutput {
	return o.ToComponentVersionLambdaExecutionParametersPtrOutputWithContext(context.Background())
}

func (o ComponentVersionLambdaExecutionParametersOutput) ToComponentVersionLambdaExecutionParametersPtrOutputWithContext(ctx context.Context) ComponentVersionLambdaExecutionParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentVersionLambdaExecutionParameters) *ComponentVersionLambdaExecutionParameters {
		return &v
	}).(ComponentVersionLambdaExecutionParametersPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersOutput) EnvironmentVariables() pulumi.AnyOutput {
	return o.ApplyT(func(v ComponentVersionLambdaExecutionParameters) interface{} { return v.EnvironmentVariables }).(pulumi.AnyOutput)
}

func (o ComponentVersionLambdaExecutionParametersOutput) EventSources() ComponentVersionLambdaEventSourceArrayOutput {
	return o.ApplyT(func(v ComponentVersionLambdaExecutionParameters) []ComponentVersionLambdaEventSource {
		return v.EventSources
	}).(ComponentVersionLambdaEventSourceArrayOutput)
}

func (o ComponentVersionLambdaExecutionParametersOutput) ExecArgs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ComponentVersionLambdaExecutionParameters) []string { return v.ExecArgs }).(pulumi.StringArrayOutput)
}

func (o ComponentVersionLambdaExecutionParametersOutput) InputPayloadEncodingType() ComponentVersionLambdaExecutionParametersInputPayloadEncodingTypePtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaExecutionParameters) *ComponentVersionLambdaExecutionParametersInputPayloadEncodingType {
		return v.InputPayloadEncodingType
	}).(ComponentVersionLambdaExecutionParametersInputPayloadEncodingTypePtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersOutput) LinuxProcessParams() ComponentVersionLambdaLinuxProcessParamsPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaExecutionParameters) *ComponentVersionLambdaLinuxProcessParams {
		return v.LinuxProcessParams
	}).(ComponentVersionLambdaLinuxProcessParamsPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersOutput) MaxIdleTimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaExecutionParameters) *int { return v.MaxIdleTimeInSeconds }).(pulumi.IntPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersOutput) MaxInstancesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaExecutionParameters) *int { return v.MaxInstancesCount }).(pulumi.IntPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersOutput) MaxQueueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaExecutionParameters) *int { return v.MaxQueueSize }).(pulumi.IntPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersOutput) Pinned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaExecutionParameters) *bool { return v.Pinned }).(pulumi.BoolPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersOutput) StatusTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaExecutionParameters) *int { return v.StatusTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaExecutionParameters) *int { return v.TimeoutInSeconds }).(pulumi.IntPtrOutput)
}

type ComponentVersionLambdaExecutionParametersPtrOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaExecutionParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentVersionLambdaExecutionParameters)(nil)).Elem()
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) ToComponentVersionLambdaExecutionParametersPtrOutput() ComponentVersionLambdaExecutionParametersPtrOutput {
	return o
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) ToComponentVersionLambdaExecutionParametersPtrOutputWithContext(ctx context.Context) ComponentVersionLambdaExecutionParametersPtrOutput {
	return o
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) Elem() ComponentVersionLambdaExecutionParametersOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaExecutionParameters) ComponentVersionLambdaExecutionParameters {
		if v != nil {
			return *v
		}
		var ret ComponentVersionLambdaExecutionParameters
		return ret
	}).(ComponentVersionLambdaExecutionParametersOutput)
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) EnvironmentVariables() pulumi.AnyOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaExecutionParameters) interface{} {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(pulumi.AnyOutput)
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) EventSources() ComponentVersionLambdaEventSourceArrayOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaExecutionParameters) []ComponentVersionLambdaEventSource {
		if v == nil {
			return nil
		}
		return v.EventSources
	}).(ComponentVersionLambdaEventSourceArrayOutput)
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) ExecArgs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaExecutionParameters) []string {
		if v == nil {
			return nil
		}
		return v.ExecArgs
	}).(pulumi.StringArrayOutput)
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) InputPayloadEncodingType() ComponentVersionLambdaExecutionParametersInputPayloadEncodingTypePtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaExecutionParameters) *ComponentVersionLambdaExecutionParametersInputPayloadEncodingType {
		if v == nil {
			return nil
		}
		return v.InputPayloadEncodingType
	}).(ComponentVersionLambdaExecutionParametersInputPayloadEncodingTypePtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) LinuxProcessParams() ComponentVersionLambdaLinuxProcessParamsPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaExecutionParameters) *ComponentVersionLambdaLinuxProcessParams {
		if v == nil {
			return nil
		}
		return v.LinuxProcessParams
	}).(ComponentVersionLambdaLinuxProcessParamsPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) MaxIdleTimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaExecutionParameters) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleTimeInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) MaxInstancesCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaExecutionParameters) *int {
		if v == nil {
			return nil
		}
		return v.MaxInstancesCount
	}).(pulumi.IntPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) MaxQueueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaExecutionParameters) *int {
		if v == nil {
			return nil
		}
		return v.MaxQueueSize
	}).(pulumi.IntPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) Pinned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaExecutionParameters) *bool {
		if v == nil {
			return nil
		}
		return v.Pinned
	}).(pulumi.BoolPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) StatusTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaExecutionParameters) *int {
		if v == nil {
			return nil
		}
		return v.StatusTimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ComponentVersionLambdaExecutionParametersPtrOutput) TimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaExecutionParameters) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInSeconds
	}).(pulumi.IntPtrOutput)
}

type ComponentVersionLambdaFunctionRecipeSource struct {
	ComponentDependencies     interface{}                                `pulumi:"componentDependencies"`
	ComponentLambdaParameters *ComponentVersionLambdaExecutionParameters `pulumi:"componentLambdaParameters"`
	ComponentName             *string                                    `pulumi:"componentName"`
	ComponentPlatforms        []ComponentVersionComponentPlatform        `pulumi:"componentPlatforms"`
	ComponentVersion          *string                                    `pulumi:"componentVersion"`
	LambdaArn                 *string                                    `pulumi:"lambdaArn"`
}

// ComponentVersionLambdaFunctionRecipeSourceInput is an input type that accepts ComponentVersionLambdaFunctionRecipeSourceArgs and ComponentVersionLambdaFunctionRecipeSourceOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaFunctionRecipeSourceInput` via:
//
//          ComponentVersionLambdaFunctionRecipeSourceArgs{...}
type ComponentVersionLambdaFunctionRecipeSourceInput interface {
	pulumi.Input

	ToComponentVersionLambdaFunctionRecipeSourceOutput() ComponentVersionLambdaFunctionRecipeSourceOutput
	ToComponentVersionLambdaFunctionRecipeSourceOutputWithContext(context.Context) ComponentVersionLambdaFunctionRecipeSourceOutput
}

type ComponentVersionLambdaFunctionRecipeSourceArgs struct {
	ComponentDependencies     pulumi.Input                                      `pulumi:"componentDependencies"`
	ComponentLambdaParameters ComponentVersionLambdaExecutionParametersPtrInput `pulumi:"componentLambdaParameters"`
	ComponentName             pulumi.StringPtrInput                             `pulumi:"componentName"`
	ComponentPlatforms        ComponentVersionComponentPlatformArrayInput       `pulumi:"componentPlatforms"`
	ComponentVersion          pulumi.StringPtrInput                             `pulumi:"componentVersion"`
	LambdaArn                 pulumi.StringPtrInput                             `pulumi:"lambdaArn"`
}

func (ComponentVersionLambdaFunctionRecipeSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaFunctionRecipeSource)(nil)).Elem()
}

func (i ComponentVersionLambdaFunctionRecipeSourceArgs) ToComponentVersionLambdaFunctionRecipeSourceOutput() ComponentVersionLambdaFunctionRecipeSourceOutput {
	return i.ToComponentVersionLambdaFunctionRecipeSourceOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaFunctionRecipeSourceArgs) ToComponentVersionLambdaFunctionRecipeSourceOutputWithContext(ctx context.Context) ComponentVersionLambdaFunctionRecipeSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaFunctionRecipeSourceOutput)
}

func (i ComponentVersionLambdaFunctionRecipeSourceArgs) ToComponentVersionLambdaFunctionRecipeSourcePtrOutput() ComponentVersionLambdaFunctionRecipeSourcePtrOutput {
	return i.ToComponentVersionLambdaFunctionRecipeSourcePtrOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaFunctionRecipeSourceArgs) ToComponentVersionLambdaFunctionRecipeSourcePtrOutputWithContext(ctx context.Context) ComponentVersionLambdaFunctionRecipeSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaFunctionRecipeSourceOutput).ToComponentVersionLambdaFunctionRecipeSourcePtrOutputWithContext(ctx)
}

// ComponentVersionLambdaFunctionRecipeSourcePtrInput is an input type that accepts ComponentVersionLambdaFunctionRecipeSourceArgs, ComponentVersionLambdaFunctionRecipeSourcePtr and ComponentVersionLambdaFunctionRecipeSourcePtrOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaFunctionRecipeSourcePtrInput` via:
//
//          ComponentVersionLambdaFunctionRecipeSourceArgs{...}
//
//  or:
//
//          nil
type ComponentVersionLambdaFunctionRecipeSourcePtrInput interface {
	pulumi.Input

	ToComponentVersionLambdaFunctionRecipeSourcePtrOutput() ComponentVersionLambdaFunctionRecipeSourcePtrOutput
	ToComponentVersionLambdaFunctionRecipeSourcePtrOutputWithContext(context.Context) ComponentVersionLambdaFunctionRecipeSourcePtrOutput
}

type componentVersionLambdaFunctionRecipeSourcePtrType ComponentVersionLambdaFunctionRecipeSourceArgs

func ComponentVersionLambdaFunctionRecipeSourcePtr(v *ComponentVersionLambdaFunctionRecipeSourceArgs) ComponentVersionLambdaFunctionRecipeSourcePtrInput {
	return (*componentVersionLambdaFunctionRecipeSourcePtrType)(v)
}

func (*componentVersionLambdaFunctionRecipeSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentVersionLambdaFunctionRecipeSource)(nil)).Elem()
}

func (i *componentVersionLambdaFunctionRecipeSourcePtrType) ToComponentVersionLambdaFunctionRecipeSourcePtrOutput() ComponentVersionLambdaFunctionRecipeSourcePtrOutput {
	return i.ToComponentVersionLambdaFunctionRecipeSourcePtrOutputWithContext(context.Background())
}

func (i *componentVersionLambdaFunctionRecipeSourcePtrType) ToComponentVersionLambdaFunctionRecipeSourcePtrOutputWithContext(ctx context.Context) ComponentVersionLambdaFunctionRecipeSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaFunctionRecipeSourcePtrOutput)
}

type ComponentVersionLambdaFunctionRecipeSourceOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaFunctionRecipeSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaFunctionRecipeSource)(nil)).Elem()
}

func (o ComponentVersionLambdaFunctionRecipeSourceOutput) ToComponentVersionLambdaFunctionRecipeSourceOutput() ComponentVersionLambdaFunctionRecipeSourceOutput {
	return o
}

func (o ComponentVersionLambdaFunctionRecipeSourceOutput) ToComponentVersionLambdaFunctionRecipeSourceOutputWithContext(ctx context.Context) ComponentVersionLambdaFunctionRecipeSourceOutput {
	return o
}

func (o ComponentVersionLambdaFunctionRecipeSourceOutput) ToComponentVersionLambdaFunctionRecipeSourcePtrOutput() ComponentVersionLambdaFunctionRecipeSourcePtrOutput {
	return o.ToComponentVersionLambdaFunctionRecipeSourcePtrOutputWithContext(context.Background())
}

func (o ComponentVersionLambdaFunctionRecipeSourceOutput) ToComponentVersionLambdaFunctionRecipeSourcePtrOutputWithContext(ctx context.Context) ComponentVersionLambdaFunctionRecipeSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentVersionLambdaFunctionRecipeSource) *ComponentVersionLambdaFunctionRecipeSource {
		return &v
	}).(ComponentVersionLambdaFunctionRecipeSourcePtrOutput)
}

func (o ComponentVersionLambdaFunctionRecipeSourceOutput) ComponentDependencies() pulumi.AnyOutput {
	return o.ApplyT(func(v ComponentVersionLambdaFunctionRecipeSource) interface{} { return v.ComponentDependencies }).(pulumi.AnyOutput)
}

func (o ComponentVersionLambdaFunctionRecipeSourceOutput) ComponentLambdaParameters() ComponentVersionLambdaExecutionParametersPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaFunctionRecipeSource) *ComponentVersionLambdaExecutionParameters {
		return v.ComponentLambdaParameters
	}).(ComponentVersionLambdaExecutionParametersPtrOutput)
}

func (o ComponentVersionLambdaFunctionRecipeSourceOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaFunctionRecipeSource) *string { return v.ComponentName }).(pulumi.StringPtrOutput)
}

func (o ComponentVersionLambdaFunctionRecipeSourceOutput) ComponentPlatforms() ComponentVersionComponentPlatformArrayOutput {
	return o.ApplyT(func(v ComponentVersionLambdaFunctionRecipeSource) []ComponentVersionComponentPlatform {
		return v.ComponentPlatforms
	}).(ComponentVersionComponentPlatformArrayOutput)
}

func (o ComponentVersionLambdaFunctionRecipeSourceOutput) ComponentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaFunctionRecipeSource) *string { return v.ComponentVersion }).(pulumi.StringPtrOutput)
}

func (o ComponentVersionLambdaFunctionRecipeSourceOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaFunctionRecipeSource) *string { return v.LambdaArn }).(pulumi.StringPtrOutput)
}

type ComponentVersionLambdaFunctionRecipeSourcePtrOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaFunctionRecipeSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentVersionLambdaFunctionRecipeSource)(nil)).Elem()
}

func (o ComponentVersionLambdaFunctionRecipeSourcePtrOutput) ToComponentVersionLambdaFunctionRecipeSourcePtrOutput() ComponentVersionLambdaFunctionRecipeSourcePtrOutput {
	return o
}

func (o ComponentVersionLambdaFunctionRecipeSourcePtrOutput) ToComponentVersionLambdaFunctionRecipeSourcePtrOutputWithContext(ctx context.Context) ComponentVersionLambdaFunctionRecipeSourcePtrOutput {
	return o
}

func (o ComponentVersionLambdaFunctionRecipeSourcePtrOutput) Elem() ComponentVersionLambdaFunctionRecipeSourceOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaFunctionRecipeSource) ComponentVersionLambdaFunctionRecipeSource {
		if v != nil {
			return *v
		}
		var ret ComponentVersionLambdaFunctionRecipeSource
		return ret
	}).(ComponentVersionLambdaFunctionRecipeSourceOutput)
}

func (o ComponentVersionLambdaFunctionRecipeSourcePtrOutput) ComponentDependencies() pulumi.AnyOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaFunctionRecipeSource) interface{} {
		if v == nil {
			return nil
		}
		return v.ComponentDependencies
	}).(pulumi.AnyOutput)
}

func (o ComponentVersionLambdaFunctionRecipeSourcePtrOutput) ComponentLambdaParameters() ComponentVersionLambdaExecutionParametersPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaFunctionRecipeSource) *ComponentVersionLambdaExecutionParameters {
		if v == nil {
			return nil
		}
		return v.ComponentLambdaParameters
	}).(ComponentVersionLambdaExecutionParametersPtrOutput)
}

func (o ComponentVersionLambdaFunctionRecipeSourcePtrOutput) ComponentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaFunctionRecipeSource) *string {
		if v == nil {
			return nil
		}
		return v.ComponentName
	}).(pulumi.StringPtrOutput)
}

func (o ComponentVersionLambdaFunctionRecipeSourcePtrOutput) ComponentPlatforms() ComponentVersionComponentPlatformArrayOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaFunctionRecipeSource) []ComponentVersionComponentPlatform {
		if v == nil {
			return nil
		}
		return v.ComponentPlatforms
	}).(ComponentVersionComponentPlatformArrayOutput)
}

func (o ComponentVersionLambdaFunctionRecipeSourcePtrOutput) ComponentVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaFunctionRecipeSource) *string {
		if v == nil {
			return nil
		}
		return v.ComponentVersion
	}).(pulumi.StringPtrOutput)
}

func (o ComponentVersionLambdaFunctionRecipeSourcePtrOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaFunctionRecipeSource) *string {
		if v == nil {
			return nil
		}
		return v.LambdaArn
	}).(pulumi.StringPtrOutput)
}

type ComponentVersionLambdaLinuxProcessParams struct {
	ContainerParams *ComponentVersionLambdaContainerParams                 `pulumi:"containerParams"`
	IsolationMode   *ComponentVersionLambdaLinuxProcessParamsIsolationMode `pulumi:"isolationMode"`
}

// ComponentVersionLambdaLinuxProcessParamsInput is an input type that accepts ComponentVersionLambdaLinuxProcessParamsArgs and ComponentVersionLambdaLinuxProcessParamsOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaLinuxProcessParamsInput` via:
//
//          ComponentVersionLambdaLinuxProcessParamsArgs{...}
type ComponentVersionLambdaLinuxProcessParamsInput interface {
	pulumi.Input

	ToComponentVersionLambdaLinuxProcessParamsOutput() ComponentVersionLambdaLinuxProcessParamsOutput
	ToComponentVersionLambdaLinuxProcessParamsOutputWithContext(context.Context) ComponentVersionLambdaLinuxProcessParamsOutput
}

type ComponentVersionLambdaLinuxProcessParamsArgs struct {
	ContainerParams ComponentVersionLambdaContainerParamsPtrInput                 `pulumi:"containerParams"`
	IsolationMode   ComponentVersionLambdaLinuxProcessParamsIsolationModePtrInput `pulumi:"isolationMode"`
}

func (ComponentVersionLambdaLinuxProcessParamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaLinuxProcessParams)(nil)).Elem()
}

func (i ComponentVersionLambdaLinuxProcessParamsArgs) ToComponentVersionLambdaLinuxProcessParamsOutput() ComponentVersionLambdaLinuxProcessParamsOutput {
	return i.ToComponentVersionLambdaLinuxProcessParamsOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaLinuxProcessParamsArgs) ToComponentVersionLambdaLinuxProcessParamsOutputWithContext(ctx context.Context) ComponentVersionLambdaLinuxProcessParamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaLinuxProcessParamsOutput)
}

func (i ComponentVersionLambdaLinuxProcessParamsArgs) ToComponentVersionLambdaLinuxProcessParamsPtrOutput() ComponentVersionLambdaLinuxProcessParamsPtrOutput {
	return i.ToComponentVersionLambdaLinuxProcessParamsPtrOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaLinuxProcessParamsArgs) ToComponentVersionLambdaLinuxProcessParamsPtrOutputWithContext(ctx context.Context) ComponentVersionLambdaLinuxProcessParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaLinuxProcessParamsOutput).ToComponentVersionLambdaLinuxProcessParamsPtrOutputWithContext(ctx)
}

// ComponentVersionLambdaLinuxProcessParamsPtrInput is an input type that accepts ComponentVersionLambdaLinuxProcessParamsArgs, ComponentVersionLambdaLinuxProcessParamsPtr and ComponentVersionLambdaLinuxProcessParamsPtrOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaLinuxProcessParamsPtrInput` via:
//
//          ComponentVersionLambdaLinuxProcessParamsArgs{...}
//
//  or:
//
//          nil
type ComponentVersionLambdaLinuxProcessParamsPtrInput interface {
	pulumi.Input

	ToComponentVersionLambdaLinuxProcessParamsPtrOutput() ComponentVersionLambdaLinuxProcessParamsPtrOutput
	ToComponentVersionLambdaLinuxProcessParamsPtrOutputWithContext(context.Context) ComponentVersionLambdaLinuxProcessParamsPtrOutput
}

type componentVersionLambdaLinuxProcessParamsPtrType ComponentVersionLambdaLinuxProcessParamsArgs

func ComponentVersionLambdaLinuxProcessParamsPtr(v *ComponentVersionLambdaLinuxProcessParamsArgs) ComponentVersionLambdaLinuxProcessParamsPtrInput {
	return (*componentVersionLambdaLinuxProcessParamsPtrType)(v)
}

func (*componentVersionLambdaLinuxProcessParamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentVersionLambdaLinuxProcessParams)(nil)).Elem()
}

func (i *componentVersionLambdaLinuxProcessParamsPtrType) ToComponentVersionLambdaLinuxProcessParamsPtrOutput() ComponentVersionLambdaLinuxProcessParamsPtrOutput {
	return i.ToComponentVersionLambdaLinuxProcessParamsPtrOutputWithContext(context.Background())
}

func (i *componentVersionLambdaLinuxProcessParamsPtrType) ToComponentVersionLambdaLinuxProcessParamsPtrOutputWithContext(ctx context.Context) ComponentVersionLambdaLinuxProcessParamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaLinuxProcessParamsPtrOutput)
}

type ComponentVersionLambdaLinuxProcessParamsOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaLinuxProcessParamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaLinuxProcessParams)(nil)).Elem()
}

func (o ComponentVersionLambdaLinuxProcessParamsOutput) ToComponentVersionLambdaLinuxProcessParamsOutput() ComponentVersionLambdaLinuxProcessParamsOutput {
	return o
}

func (o ComponentVersionLambdaLinuxProcessParamsOutput) ToComponentVersionLambdaLinuxProcessParamsOutputWithContext(ctx context.Context) ComponentVersionLambdaLinuxProcessParamsOutput {
	return o
}

func (o ComponentVersionLambdaLinuxProcessParamsOutput) ToComponentVersionLambdaLinuxProcessParamsPtrOutput() ComponentVersionLambdaLinuxProcessParamsPtrOutput {
	return o.ToComponentVersionLambdaLinuxProcessParamsPtrOutputWithContext(context.Background())
}

func (o ComponentVersionLambdaLinuxProcessParamsOutput) ToComponentVersionLambdaLinuxProcessParamsPtrOutputWithContext(ctx context.Context) ComponentVersionLambdaLinuxProcessParamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ComponentVersionLambdaLinuxProcessParams) *ComponentVersionLambdaLinuxProcessParams {
		return &v
	}).(ComponentVersionLambdaLinuxProcessParamsPtrOutput)
}

func (o ComponentVersionLambdaLinuxProcessParamsOutput) ContainerParams() ComponentVersionLambdaContainerParamsPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaLinuxProcessParams) *ComponentVersionLambdaContainerParams {
		return v.ContainerParams
	}).(ComponentVersionLambdaContainerParamsPtrOutput)
}

func (o ComponentVersionLambdaLinuxProcessParamsOutput) IsolationMode() ComponentVersionLambdaLinuxProcessParamsIsolationModePtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaLinuxProcessParams) *ComponentVersionLambdaLinuxProcessParamsIsolationMode {
		return v.IsolationMode
	}).(ComponentVersionLambdaLinuxProcessParamsIsolationModePtrOutput)
}

type ComponentVersionLambdaLinuxProcessParamsPtrOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaLinuxProcessParamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ComponentVersionLambdaLinuxProcessParams)(nil)).Elem()
}

func (o ComponentVersionLambdaLinuxProcessParamsPtrOutput) ToComponentVersionLambdaLinuxProcessParamsPtrOutput() ComponentVersionLambdaLinuxProcessParamsPtrOutput {
	return o
}

func (o ComponentVersionLambdaLinuxProcessParamsPtrOutput) ToComponentVersionLambdaLinuxProcessParamsPtrOutputWithContext(ctx context.Context) ComponentVersionLambdaLinuxProcessParamsPtrOutput {
	return o
}

func (o ComponentVersionLambdaLinuxProcessParamsPtrOutput) Elem() ComponentVersionLambdaLinuxProcessParamsOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaLinuxProcessParams) ComponentVersionLambdaLinuxProcessParams {
		if v != nil {
			return *v
		}
		var ret ComponentVersionLambdaLinuxProcessParams
		return ret
	}).(ComponentVersionLambdaLinuxProcessParamsOutput)
}

func (o ComponentVersionLambdaLinuxProcessParamsPtrOutput) ContainerParams() ComponentVersionLambdaContainerParamsPtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaLinuxProcessParams) *ComponentVersionLambdaContainerParams {
		if v == nil {
			return nil
		}
		return v.ContainerParams
	}).(ComponentVersionLambdaContainerParamsPtrOutput)
}

func (o ComponentVersionLambdaLinuxProcessParamsPtrOutput) IsolationMode() ComponentVersionLambdaLinuxProcessParamsIsolationModePtrOutput {
	return o.ApplyT(func(v *ComponentVersionLambdaLinuxProcessParams) *ComponentVersionLambdaLinuxProcessParamsIsolationMode {
		if v == nil {
			return nil
		}
		return v.IsolationMode
	}).(ComponentVersionLambdaLinuxProcessParamsIsolationModePtrOutput)
}

type ComponentVersionLambdaVolumeMount struct {
	AddGroupOwner   *bool                                       `pulumi:"addGroupOwner"`
	DestinationPath *string                                     `pulumi:"destinationPath"`
	Permission      *ComponentVersionLambdaFilesystemPermission `pulumi:"permission"`
	SourcePath      *string                                     `pulumi:"sourcePath"`
}

// ComponentVersionLambdaVolumeMountInput is an input type that accepts ComponentVersionLambdaVolumeMountArgs and ComponentVersionLambdaVolumeMountOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaVolumeMountInput` via:
//
//          ComponentVersionLambdaVolumeMountArgs{...}
type ComponentVersionLambdaVolumeMountInput interface {
	pulumi.Input

	ToComponentVersionLambdaVolumeMountOutput() ComponentVersionLambdaVolumeMountOutput
	ToComponentVersionLambdaVolumeMountOutputWithContext(context.Context) ComponentVersionLambdaVolumeMountOutput
}

type ComponentVersionLambdaVolumeMountArgs struct {
	AddGroupOwner   pulumi.BoolPtrInput                                `pulumi:"addGroupOwner"`
	DestinationPath pulumi.StringPtrInput                              `pulumi:"destinationPath"`
	Permission      ComponentVersionLambdaFilesystemPermissionPtrInput `pulumi:"permission"`
	SourcePath      pulumi.StringPtrInput                              `pulumi:"sourcePath"`
}

func (ComponentVersionLambdaVolumeMountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaVolumeMount)(nil)).Elem()
}

func (i ComponentVersionLambdaVolumeMountArgs) ToComponentVersionLambdaVolumeMountOutput() ComponentVersionLambdaVolumeMountOutput {
	return i.ToComponentVersionLambdaVolumeMountOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaVolumeMountArgs) ToComponentVersionLambdaVolumeMountOutputWithContext(ctx context.Context) ComponentVersionLambdaVolumeMountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaVolumeMountOutput)
}

// ComponentVersionLambdaVolumeMountArrayInput is an input type that accepts ComponentVersionLambdaVolumeMountArray and ComponentVersionLambdaVolumeMountArrayOutput values.
// You can construct a concrete instance of `ComponentVersionLambdaVolumeMountArrayInput` via:
//
//          ComponentVersionLambdaVolumeMountArray{ ComponentVersionLambdaVolumeMountArgs{...} }
type ComponentVersionLambdaVolumeMountArrayInput interface {
	pulumi.Input

	ToComponentVersionLambdaVolumeMountArrayOutput() ComponentVersionLambdaVolumeMountArrayOutput
	ToComponentVersionLambdaVolumeMountArrayOutputWithContext(context.Context) ComponentVersionLambdaVolumeMountArrayOutput
}

type ComponentVersionLambdaVolumeMountArray []ComponentVersionLambdaVolumeMountInput

func (ComponentVersionLambdaVolumeMountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentVersionLambdaVolumeMount)(nil)).Elem()
}

func (i ComponentVersionLambdaVolumeMountArray) ToComponentVersionLambdaVolumeMountArrayOutput() ComponentVersionLambdaVolumeMountArrayOutput {
	return i.ToComponentVersionLambdaVolumeMountArrayOutputWithContext(context.Background())
}

func (i ComponentVersionLambdaVolumeMountArray) ToComponentVersionLambdaVolumeMountArrayOutputWithContext(ctx context.Context) ComponentVersionLambdaVolumeMountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ComponentVersionLambdaVolumeMountArrayOutput)
}

type ComponentVersionLambdaVolumeMountOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaVolumeMountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ComponentVersionLambdaVolumeMount)(nil)).Elem()
}

func (o ComponentVersionLambdaVolumeMountOutput) ToComponentVersionLambdaVolumeMountOutput() ComponentVersionLambdaVolumeMountOutput {
	return o
}

func (o ComponentVersionLambdaVolumeMountOutput) ToComponentVersionLambdaVolumeMountOutputWithContext(ctx context.Context) ComponentVersionLambdaVolumeMountOutput {
	return o
}

func (o ComponentVersionLambdaVolumeMountOutput) AddGroupOwner() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaVolumeMount) *bool { return v.AddGroupOwner }).(pulumi.BoolPtrOutput)
}

func (o ComponentVersionLambdaVolumeMountOutput) DestinationPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaVolumeMount) *string { return v.DestinationPath }).(pulumi.StringPtrOutput)
}

func (o ComponentVersionLambdaVolumeMountOutput) Permission() ComponentVersionLambdaFilesystemPermissionPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaVolumeMount) *ComponentVersionLambdaFilesystemPermission {
		return v.Permission
	}).(ComponentVersionLambdaFilesystemPermissionPtrOutput)
}

func (o ComponentVersionLambdaVolumeMountOutput) SourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ComponentVersionLambdaVolumeMount) *string { return v.SourcePath }).(pulumi.StringPtrOutput)
}

type ComponentVersionLambdaVolumeMountArrayOutput struct{ *pulumi.OutputState }

func (ComponentVersionLambdaVolumeMountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ComponentVersionLambdaVolumeMount)(nil)).Elem()
}

func (o ComponentVersionLambdaVolumeMountArrayOutput) ToComponentVersionLambdaVolumeMountArrayOutput() ComponentVersionLambdaVolumeMountArrayOutput {
	return o
}

func (o ComponentVersionLambdaVolumeMountArrayOutput) ToComponentVersionLambdaVolumeMountArrayOutputWithContext(ctx context.Context) ComponentVersionLambdaVolumeMountArrayOutput {
	return o
}

func (o ComponentVersionLambdaVolumeMountArrayOutput) Index(i pulumi.IntInput) ComponentVersionLambdaVolumeMountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ComponentVersionLambdaVolumeMount {
		return vs[0].([]ComponentVersionLambdaVolumeMount)[vs[1].(int)]
	}).(ComponentVersionLambdaVolumeMountOutput)
}

func init() {
	pulumi.RegisterOutputType(ComponentVersionComponentPlatformOutput{})
	pulumi.RegisterOutputType(ComponentVersionComponentPlatformArrayOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaContainerParamsOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaContainerParamsPtrOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaDeviceMountOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaDeviceMountArrayOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaEventSourceOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaEventSourceArrayOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaExecutionParametersOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaExecutionParametersPtrOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaFunctionRecipeSourceOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaFunctionRecipeSourcePtrOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaLinuxProcessParamsOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaLinuxProcessParamsPtrOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaVolumeMountOutput{})
	pulumi.RegisterOutputType(ComponentVersionLambdaVolumeMountArrayOutput{})
}
