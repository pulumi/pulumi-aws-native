// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3outposts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AccessPointVpcConfiguration struct {
	// Virtual Private Cloud (VPC) Id from which AccessPoint will allow requests.
	VpcId *string `pulumi:"vpcId"`
}

// AccessPointVpcConfigurationInput is an input type that accepts AccessPointVpcConfigurationArgs and AccessPointVpcConfigurationOutput values.
// You can construct a concrete instance of `AccessPointVpcConfigurationInput` via:
//
//	AccessPointVpcConfigurationArgs{...}
type AccessPointVpcConfigurationInput interface {
	pulumi.Input

	ToAccessPointVpcConfigurationOutput() AccessPointVpcConfigurationOutput
	ToAccessPointVpcConfigurationOutputWithContext(context.Context) AccessPointVpcConfigurationOutput
}

type AccessPointVpcConfigurationArgs struct {
	// Virtual Private Cloud (VPC) Id from which AccessPoint will allow requests.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (AccessPointVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointVpcConfiguration)(nil)).Elem()
}

func (i AccessPointVpcConfigurationArgs) ToAccessPointVpcConfigurationOutput() AccessPointVpcConfigurationOutput {
	return i.ToAccessPointVpcConfigurationOutputWithContext(context.Background())
}

func (i AccessPointVpcConfigurationArgs) ToAccessPointVpcConfigurationOutputWithContext(ctx context.Context) AccessPointVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointVpcConfigurationOutput)
}

type AccessPointVpcConfigurationOutput struct{ *pulumi.OutputState }

func (AccessPointVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointVpcConfiguration)(nil)).Elem()
}

func (o AccessPointVpcConfigurationOutput) ToAccessPointVpcConfigurationOutput() AccessPointVpcConfigurationOutput {
	return o
}

func (o AccessPointVpcConfigurationOutput) ToAccessPointVpcConfigurationOutputWithContext(ctx context.Context) AccessPointVpcConfigurationOutput {
	return o
}

// Virtual Private Cloud (VPC) Id from which AccessPoint will allow requests.
func (o AccessPointVpcConfigurationOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPointVpcConfiguration) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3Outposts will wait before permanently removing all parts of the upload.
type BucketAbortIncompleteMultipartUpload struct {
	// Specifies the number of days after which Amazon S3Outposts aborts an incomplete multipart upload.
	DaysAfterInitiation int `pulumi:"daysAfterInitiation"`
}

// BucketAbortIncompleteMultipartUploadInput is an input type that accepts BucketAbortIncompleteMultipartUploadArgs and BucketAbortIncompleteMultipartUploadOutput values.
// You can construct a concrete instance of `BucketAbortIncompleteMultipartUploadInput` via:
//
//	BucketAbortIncompleteMultipartUploadArgs{...}
type BucketAbortIncompleteMultipartUploadInput interface {
	pulumi.Input

	ToBucketAbortIncompleteMultipartUploadOutput() BucketAbortIncompleteMultipartUploadOutput
	ToBucketAbortIncompleteMultipartUploadOutputWithContext(context.Context) BucketAbortIncompleteMultipartUploadOutput
}

// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3Outposts will wait before permanently removing all parts of the upload.
type BucketAbortIncompleteMultipartUploadArgs struct {
	// Specifies the number of days after which Amazon S3Outposts aborts an incomplete multipart upload.
	DaysAfterInitiation pulumi.IntInput `pulumi:"daysAfterInitiation"`
}

func (BucketAbortIncompleteMultipartUploadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i BucketAbortIncompleteMultipartUploadArgs) ToBucketAbortIncompleteMultipartUploadOutput() BucketAbortIncompleteMultipartUploadOutput {
	return i.ToBucketAbortIncompleteMultipartUploadOutputWithContext(context.Background())
}

func (i BucketAbortIncompleteMultipartUploadArgs) ToBucketAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) BucketAbortIncompleteMultipartUploadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAbortIncompleteMultipartUploadOutput)
}

func (i BucketAbortIncompleteMultipartUploadArgs) ToBucketAbortIncompleteMultipartUploadPtrOutput() BucketAbortIncompleteMultipartUploadPtrOutput {
	return i.ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (i BucketAbortIncompleteMultipartUploadArgs) ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketAbortIncompleteMultipartUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAbortIncompleteMultipartUploadOutput).ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx)
}

// BucketAbortIncompleteMultipartUploadPtrInput is an input type that accepts BucketAbortIncompleteMultipartUploadArgs, BucketAbortIncompleteMultipartUploadPtr and BucketAbortIncompleteMultipartUploadPtrOutput values.
// You can construct a concrete instance of `BucketAbortIncompleteMultipartUploadPtrInput` via:
//
//	        BucketAbortIncompleteMultipartUploadArgs{...}
//
//	or:
//
//	        nil
type BucketAbortIncompleteMultipartUploadPtrInput interface {
	pulumi.Input

	ToBucketAbortIncompleteMultipartUploadPtrOutput() BucketAbortIncompleteMultipartUploadPtrOutput
	ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(context.Context) BucketAbortIncompleteMultipartUploadPtrOutput
}

type bucketAbortIncompleteMultipartUploadPtrType BucketAbortIncompleteMultipartUploadArgs

func BucketAbortIncompleteMultipartUploadPtr(v *BucketAbortIncompleteMultipartUploadArgs) BucketAbortIncompleteMultipartUploadPtrInput {
	return (*bucketAbortIncompleteMultipartUploadPtrType)(v)
}

func (*bucketAbortIncompleteMultipartUploadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (i *bucketAbortIncompleteMultipartUploadPtrType) ToBucketAbortIncompleteMultipartUploadPtrOutput() BucketAbortIncompleteMultipartUploadPtrOutput {
	return i.ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (i *bucketAbortIncompleteMultipartUploadPtrType) ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketAbortIncompleteMultipartUploadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAbortIncompleteMultipartUploadPtrOutput)
}

// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3Outposts will wait before permanently removing all parts of the upload.
type BucketAbortIncompleteMultipartUploadOutput struct{ *pulumi.OutputState }

func (BucketAbortIncompleteMultipartUploadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o BucketAbortIncompleteMultipartUploadOutput) ToBucketAbortIncompleteMultipartUploadOutput() BucketAbortIncompleteMultipartUploadOutput {
	return o
}

func (o BucketAbortIncompleteMultipartUploadOutput) ToBucketAbortIncompleteMultipartUploadOutputWithContext(ctx context.Context) BucketAbortIncompleteMultipartUploadOutput {
	return o
}

func (o BucketAbortIncompleteMultipartUploadOutput) ToBucketAbortIncompleteMultipartUploadPtrOutput() BucketAbortIncompleteMultipartUploadPtrOutput {
	return o.ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(context.Background())
}

func (o BucketAbortIncompleteMultipartUploadOutput) ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketAbortIncompleteMultipartUploadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketAbortIncompleteMultipartUpload) *BucketAbortIncompleteMultipartUpload {
		return &v
	}).(BucketAbortIncompleteMultipartUploadPtrOutput)
}

// Specifies the number of days after which Amazon S3Outposts aborts an incomplete multipart upload.
func (o BucketAbortIncompleteMultipartUploadOutput) DaysAfterInitiation() pulumi.IntOutput {
	return o.ApplyT(func(v BucketAbortIncompleteMultipartUpload) int { return v.DaysAfterInitiation }).(pulumi.IntOutput)
}

type BucketAbortIncompleteMultipartUploadPtrOutput struct{ *pulumi.OutputState }

func (BucketAbortIncompleteMultipartUploadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAbortIncompleteMultipartUpload)(nil)).Elem()
}

func (o BucketAbortIncompleteMultipartUploadPtrOutput) ToBucketAbortIncompleteMultipartUploadPtrOutput() BucketAbortIncompleteMultipartUploadPtrOutput {
	return o
}

func (o BucketAbortIncompleteMultipartUploadPtrOutput) ToBucketAbortIncompleteMultipartUploadPtrOutputWithContext(ctx context.Context) BucketAbortIncompleteMultipartUploadPtrOutput {
	return o
}

func (o BucketAbortIncompleteMultipartUploadPtrOutput) Elem() BucketAbortIncompleteMultipartUploadOutput {
	return o.ApplyT(func(v *BucketAbortIncompleteMultipartUpload) BucketAbortIncompleteMultipartUpload {
		if v != nil {
			return *v
		}
		var ret BucketAbortIncompleteMultipartUpload
		return ret
	}).(BucketAbortIncompleteMultipartUploadOutput)
}

// Specifies the number of days after which Amazon S3Outposts aborts an incomplete multipart upload.
func (o BucketAbortIncompleteMultipartUploadPtrOutput) DaysAfterInitiation() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BucketAbortIncompleteMultipartUpload) *int {
		if v == nil {
			return nil
		}
		return &v.DaysAfterInitiation
	}).(pulumi.IntPtrOutput)
}

// Tag used to identify a subset of objects for an Amazon S3Outposts bucket.
type BucketFilterTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// BucketFilterTagInput is an input type that accepts BucketFilterTagArgs and BucketFilterTagOutput values.
// You can construct a concrete instance of `BucketFilterTagInput` via:
//
//	BucketFilterTagArgs{...}
type BucketFilterTagInput interface {
	pulumi.Input

	ToBucketFilterTagOutput() BucketFilterTagOutput
	ToBucketFilterTagOutputWithContext(context.Context) BucketFilterTagOutput
}

// Tag used to identify a subset of objects for an Amazon S3Outposts bucket.
type BucketFilterTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (BucketFilterTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketFilterTag)(nil)).Elem()
}

func (i BucketFilterTagArgs) ToBucketFilterTagOutput() BucketFilterTagOutput {
	return i.ToBucketFilterTagOutputWithContext(context.Background())
}

func (i BucketFilterTagArgs) ToBucketFilterTagOutputWithContext(ctx context.Context) BucketFilterTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketFilterTagOutput)
}

func (i BucketFilterTagArgs) ToBucketFilterTagPtrOutput() BucketFilterTagPtrOutput {
	return i.ToBucketFilterTagPtrOutputWithContext(context.Background())
}

func (i BucketFilterTagArgs) ToBucketFilterTagPtrOutputWithContext(ctx context.Context) BucketFilterTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketFilterTagOutput).ToBucketFilterTagPtrOutputWithContext(ctx)
}

// BucketFilterTagPtrInput is an input type that accepts BucketFilterTagArgs, BucketFilterTagPtr and BucketFilterTagPtrOutput values.
// You can construct a concrete instance of `BucketFilterTagPtrInput` via:
//
//	        BucketFilterTagArgs{...}
//
//	or:
//
//	        nil
type BucketFilterTagPtrInput interface {
	pulumi.Input

	ToBucketFilterTagPtrOutput() BucketFilterTagPtrOutput
	ToBucketFilterTagPtrOutputWithContext(context.Context) BucketFilterTagPtrOutput
}

type bucketFilterTagPtrType BucketFilterTagArgs

func BucketFilterTagPtr(v *BucketFilterTagArgs) BucketFilterTagPtrInput {
	return (*bucketFilterTagPtrType)(v)
}

func (*bucketFilterTagPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketFilterTag)(nil)).Elem()
}

func (i *bucketFilterTagPtrType) ToBucketFilterTagPtrOutput() BucketFilterTagPtrOutput {
	return i.ToBucketFilterTagPtrOutputWithContext(context.Background())
}

func (i *bucketFilterTagPtrType) ToBucketFilterTagPtrOutputWithContext(ctx context.Context) BucketFilterTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketFilterTagPtrOutput)
}

// BucketFilterTagArrayInput is an input type that accepts BucketFilterTagArray and BucketFilterTagArrayOutput values.
// You can construct a concrete instance of `BucketFilterTagArrayInput` via:
//
//	BucketFilterTagArray{ BucketFilterTagArgs{...} }
type BucketFilterTagArrayInput interface {
	pulumi.Input

	ToBucketFilterTagArrayOutput() BucketFilterTagArrayOutput
	ToBucketFilterTagArrayOutputWithContext(context.Context) BucketFilterTagArrayOutput
}

type BucketFilterTagArray []BucketFilterTagInput

func (BucketFilterTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketFilterTag)(nil)).Elem()
}

func (i BucketFilterTagArray) ToBucketFilterTagArrayOutput() BucketFilterTagArrayOutput {
	return i.ToBucketFilterTagArrayOutputWithContext(context.Background())
}

func (i BucketFilterTagArray) ToBucketFilterTagArrayOutputWithContext(ctx context.Context) BucketFilterTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketFilterTagArrayOutput)
}

// Tag used to identify a subset of objects for an Amazon S3Outposts bucket.
type BucketFilterTagOutput struct{ *pulumi.OutputState }

func (BucketFilterTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketFilterTag)(nil)).Elem()
}

func (o BucketFilterTagOutput) ToBucketFilterTagOutput() BucketFilterTagOutput {
	return o
}

func (o BucketFilterTagOutput) ToBucketFilterTagOutputWithContext(ctx context.Context) BucketFilterTagOutput {
	return o
}

func (o BucketFilterTagOutput) ToBucketFilterTagPtrOutput() BucketFilterTagPtrOutput {
	return o.ToBucketFilterTagPtrOutputWithContext(context.Background())
}

func (o BucketFilterTagOutput) ToBucketFilterTagPtrOutputWithContext(ctx context.Context) BucketFilterTagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketFilterTag) *BucketFilterTag {
		return &v
	}).(BucketFilterTagPtrOutput)
}

func (o BucketFilterTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BucketFilterTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o BucketFilterTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BucketFilterTag) string { return v.Value }).(pulumi.StringOutput)
}

type BucketFilterTagPtrOutput struct{ *pulumi.OutputState }

func (BucketFilterTagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketFilterTag)(nil)).Elem()
}

func (o BucketFilterTagPtrOutput) ToBucketFilterTagPtrOutput() BucketFilterTagPtrOutput {
	return o
}

func (o BucketFilterTagPtrOutput) ToBucketFilterTagPtrOutputWithContext(ctx context.Context) BucketFilterTagPtrOutput {
	return o
}

func (o BucketFilterTagPtrOutput) Elem() BucketFilterTagOutput {
	return o.ApplyT(func(v *BucketFilterTag) BucketFilterTag {
		if v != nil {
			return *v
		}
		var ret BucketFilterTag
		return ret
	}).(BucketFilterTagOutput)
}

func (o BucketFilterTagPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketFilterTag) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

func (o BucketFilterTagPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketFilterTag) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type BucketFilterTagArrayOutput struct{ *pulumi.OutputState }

func (BucketFilterTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketFilterTag)(nil)).Elem()
}

func (o BucketFilterTagArrayOutput) ToBucketFilterTagArrayOutput() BucketFilterTagArrayOutput {
	return o
}

func (o BucketFilterTagArrayOutput) ToBucketFilterTagArrayOutputWithContext(ctx context.Context) BucketFilterTagArrayOutput {
	return o
}

func (o BucketFilterTagArrayOutput) Index(i pulumi.IntInput) BucketFilterTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketFilterTag {
		return vs[0].([]BucketFilterTag)[vs[1].(int)]
	}).(BucketFilterTagOutput)
}

type BucketLifecycleConfiguration struct {
	// A list of lifecycle rules for individual objects in an Amazon S3Outposts bucket.
	Rules []BucketRule `pulumi:"rules"`
}

// BucketLifecycleConfigurationInput is an input type that accepts BucketLifecycleConfigurationArgs and BucketLifecycleConfigurationOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationInput` via:
//
//	BucketLifecycleConfigurationArgs{...}
type BucketLifecycleConfigurationInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationOutput() BucketLifecycleConfigurationOutput
	ToBucketLifecycleConfigurationOutputWithContext(context.Context) BucketLifecycleConfigurationOutput
}

type BucketLifecycleConfigurationArgs struct {
	// A list of lifecycle rules for individual objects in an Amazon S3Outposts bucket.
	Rules BucketRuleArrayInput `pulumi:"rules"`
}

func (BucketLifecycleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfiguration)(nil)).Elem()
}

func (i BucketLifecycleConfigurationArgs) ToBucketLifecycleConfigurationOutput() BucketLifecycleConfigurationOutput {
	return i.ToBucketLifecycleConfigurationOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationArgs) ToBucketLifecycleConfigurationOutputWithContext(ctx context.Context) BucketLifecycleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationOutput)
}

func (i BucketLifecycleConfigurationArgs) ToBucketLifecycleConfigurationPtrOutput() BucketLifecycleConfigurationPtrOutput {
	return i.ToBucketLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationArgs) ToBucketLifecycleConfigurationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationOutput).ToBucketLifecycleConfigurationPtrOutputWithContext(ctx)
}

// BucketLifecycleConfigurationPtrInput is an input type that accepts BucketLifecycleConfigurationArgs, BucketLifecycleConfigurationPtr and BucketLifecycleConfigurationPtrOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationPtrInput` via:
//
//	        BucketLifecycleConfigurationArgs{...}
//
//	or:
//
//	        nil
type BucketLifecycleConfigurationPtrInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationPtrOutput() BucketLifecycleConfigurationPtrOutput
	ToBucketLifecycleConfigurationPtrOutputWithContext(context.Context) BucketLifecycleConfigurationPtrOutput
}

type bucketLifecycleConfigurationPtrType BucketLifecycleConfigurationArgs

func BucketLifecycleConfigurationPtr(v *BucketLifecycleConfigurationArgs) BucketLifecycleConfigurationPtrInput {
	return (*bucketLifecycleConfigurationPtrType)(v)
}

func (*bucketLifecycleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfiguration)(nil)).Elem()
}

func (i *bucketLifecycleConfigurationPtrType) ToBucketLifecycleConfigurationPtrOutput() BucketLifecycleConfigurationPtrOutput {
	return i.ToBucketLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleConfigurationPtrType) ToBucketLifecycleConfigurationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationPtrOutput)
}

type BucketLifecycleConfigurationOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleConfiguration)(nil)).Elem()
}

func (o BucketLifecycleConfigurationOutput) ToBucketLifecycleConfigurationOutput() BucketLifecycleConfigurationOutput {
	return o
}

func (o BucketLifecycleConfigurationOutput) ToBucketLifecycleConfigurationOutputWithContext(ctx context.Context) BucketLifecycleConfigurationOutput {
	return o
}

func (o BucketLifecycleConfigurationOutput) ToBucketLifecycleConfigurationPtrOutput() BucketLifecycleConfigurationPtrOutput {
	return o.ToBucketLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleConfigurationOutput) ToBucketLifecycleConfigurationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketLifecycleConfiguration) *BucketLifecycleConfiguration {
		return &v
	}).(BucketLifecycleConfigurationPtrOutput)
}

// A list of lifecycle rules for individual objects in an Amazon S3Outposts bucket.
func (o BucketLifecycleConfigurationOutput) Rules() BucketRuleArrayOutput {
	return o.ApplyT(func(v BucketLifecycleConfiguration) []BucketRule { return v.Rules }).(BucketRuleArrayOutput)
}

type BucketLifecycleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfiguration)(nil)).Elem()
}

func (o BucketLifecycleConfigurationPtrOutput) ToBucketLifecycleConfigurationPtrOutput() BucketLifecycleConfigurationPtrOutput {
	return o
}

func (o BucketLifecycleConfigurationPtrOutput) ToBucketLifecycleConfigurationPtrOutputWithContext(ctx context.Context) BucketLifecycleConfigurationPtrOutput {
	return o
}

func (o BucketLifecycleConfigurationPtrOutput) Elem() BucketLifecycleConfigurationOutput {
	return o.ApplyT(func(v *BucketLifecycleConfiguration) BucketLifecycleConfiguration {
		if v != nil {
			return *v
		}
		var ret BucketLifecycleConfiguration
		return ret
	}).(BucketLifecycleConfigurationOutput)
}

// A list of lifecycle rules for individual objects in an Amazon S3Outposts bucket.
func (o BucketLifecycleConfigurationPtrOutput) Rules() BucketRuleArrayOutput {
	return o.ApplyT(func(v *BucketLifecycleConfiguration) []BucketRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(BucketRuleArrayOutput)
}

// Specifies lifecycle rules for an Amazon S3Outposts bucket. You must specify at least one of the following: AbortIncompleteMultipartUpload, ExpirationDate, ExpirationInDays.
type BucketRule struct {
	// Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3Outposts bucket.
	AbortIncompleteMultipartUpload *BucketAbortIncompleteMultipartUpload `pulumi:"abortIncompleteMultipartUpload"`
	// Indicates when objects are deleted from Amazon S3Outposts. The date value must be in ISO 8601 format. The time is always midnight UTC.
	ExpirationDate *string `pulumi:"expirationDate"`
	// Indicates the number of days after creation when objects are deleted from Amazon S3Outposts.
	ExpirationInDays *int `pulumi:"expirationInDays"`
	// The container for the filter of the lifecycle rule.
	Filter *BucketRuleFilterProperties `pulumi:"filter"`
	// Unique identifier for the lifecycle rule. The value can't be longer than 255 characters.
	Id     *string           `pulumi:"id"`
	Status *BucketRuleStatus `pulumi:"status"`
}

// BucketRuleInput is an input type that accepts BucketRuleArgs and BucketRuleOutput values.
// You can construct a concrete instance of `BucketRuleInput` via:
//
//	BucketRuleArgs{...}
type BucketRuleInput interface {
	pulumi.Input

	ToBucketRuleOutput() BucketRuleOutput
	ToBucketRuleOutputWithContext(context.Context) BucketRuleOutput
}

// Specifies lifecycle rules for an Amazon S3Outposts bucket. You must specify at least one of the following: AbortIncompleteMultipartUpload, ExpirationDate, ExpirationInDays.
type BucketRuleArgs struct {
	// Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3Outposts bucket.
	AbortIncompleteMultipartUpload BucketAbortIncompleteMultipartUploadPtrInput `pulumi:"abortIncompleteMultipartUpload"`
	// Indicates when objects are deleted from Amazon S3Outposts. The date value must be in ISO 8601 format. The time is always midnight UTC.
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// Indicates the number of days after creation when objects are deleted from Amazon S3Outposts.
	ExpirationInDays pulumi.IntPtrInput `pulumi:"expirationInDays"`
	// The container for the filter of the lifecycle rule.
	Filter BucketRuleFilterPropertiesPtrInput `pulumi:"filter"`
	// Unique identifier for the lifecycle rule. The value can't be longer than 255 characters.
	Id     pulumi.StringPtrInput    `pulumi:"id"`
	Status BucketRuleStatusPtrInput `pulumi:"status"`
}

func (BucketRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRule)(nil)).Elem()
}

func (i BucketRuleArgs) ToBucketRuleOutput() BucketRuleOutput {
	return i.ToBucketRuleOutputWithContext(context.Background())
}

func (i BucketRuleArgs) ToBucketRuleOutputWithContext(ctx context.Context) BucketRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRuleOutput)
}

// BucketRuleArrayInput is an input type that accepts BucketRuleArray and BucketRuleArrayOutput values.
// You can construct a concrete instance of `BucketRuleArrayInput` via:
//
//	BucketRuleArray{ BucketRuleArgs{...} }
type BucketRuleArrayInput interface {
	pulumi.Input

	ToBucketRuleArrayOutput() BucketRuleArrayOutput
	ToBucketRuleArrayOutputWithContext(context.Context) BucketRuleArrayOutput
}

type BucketRuleArray []BucketRuleInput

func (BucketRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketRule)(nil)).Elem()
}

func (i BucketRuleArray) ToBucketRuleArrayOutput() BucketRuleArrayOutput {
	return i.ToBucketRuleArrayOutputWithContext(context.Background())
}

func (i BucketRuleArray) ToBucketRuleArrayOutputWithContext(ctx context.Context) BucketRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRuleArrayOutput)
}

// Specifies lifecycle rules for an Amazon S3Outposts bucket. You must specify at least one of the following: AbortIncompleteMultipartUpload, ExpirationDate, ExpirationInDays.
type BucketRuleOutput struct{ *pulumi.OutputState }

func (BucketRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRule)(nil)).Elem()
}

func (o BucketRuleOutput) ToBucketRuleOutput() BucketRuleOutput {
	return o
}

func (o BucketRuleOutput) ToBucketRuleOutputWithContext(ctx context.Context) BucketRuleOutput {
	return o
}

// Specifies a lifecycle rule that stops incomplete multipart uploads to an Amazon S3Outposts bucket.
func (o BucketRuleOutput) AbortIncompleteMultipartUpload() BucketAbortIncompleteMultipartUploadPtrOutput {
	return o.ApplyT(func(v BucketRule) *BucketAbortIncompleteMultipartUpload { return v.AbortIncompleteMultipartUpload }).(BucketAbortIncompleteMultipartUploadPtrOutput)
}

// Indicates when objects are deleted from Amazon S3Outposts. The date value must be in ISO 8601 format. The time is always midnight UTC.
func (o BucketRuleOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRule) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Indicates the number of days after creation when objects are deleted from Amazon S3Outposts.
func (o BucketRuleOutput) ExpirationInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BucketRule) *int { return v.ExpirationInDays }).(pulumi.IntPtrOutput)
}

// The container for the filter of the lifecycle rule.
func (o BucketRuleOutput) Filter() BucketRuleFilterPropertiesPtrOutput {
	return o.ApplyT(func(v BucketRule) *BucketRuleFilterProperties { return v.Filter }).(BucketRuleFilterPropertiesPtrOutput)
}

// Unique identifier for the lifecycle rule. The value can't be longer than 255 characters.
func (o BucketRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o BucketRuleOutput) Status() BucketRuleStatusPtrOutput {
	return o.ApplyT(func(v BucketRule) *BucketRuleStatus { return v.Status }).(BucketRuleStatusPtrOutput)
}

type BucketRuleArrayOutput struct{ *pulumi.OutputState }

func (BucketRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketRule)(nil)).Elem()
}

func (o BucketRuleArrayOutput) ToBucketRuleArrayOutput() BucketRuleArrayOutput {
	return o
}

func (o BucketRuleArrayOutput) ToBucketRuleArrayOutputWithContext(ctx context.Context) BucketRuleArrayOutput {
	return o
}

func (o BucketRuleArrayOutput) Index(i pulumi.IntInput) BucketRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketRule {
		return vs[0].([]BucketRule)[vs[1].(int)]
	}).(BucketRuleOutput)
}

// The container for the filter of the lifecycle rule.
type BucketRuleFilterProperties struct {
	// The container for the AND condition for the lifecycle rule. A combination of Prefix and 1 or more Tags OR a minimum of 2 or more tags.
	AndOperator *FilterAndOperatorProperties `pulumi:"andOperator"`
	// Object key prefix that identifies one or more objects to which this rule applies.
	Prefix *string `pulumi:"prefix"`
	// Specifies a tag used to identify a subset of objects for an Amazon S3Outposts bucket.
	Tag *BucketFilterTag `pulumi:"tag"`
}

// BucketRuleFilterPropertiesInput is an input type that accepts BucketRuleFilterPropertiesArgs and BucketRuleFilterPropertiesOutput values.
// You can construct a concrete instance of `BucketRuleFilterPropertiesInput` via:
//
//	BucketRuleFilterPropertiesArgs{...}
type BucketRuleFilterPropertiesInput interface {
	pulumi.Input

	ToBucketRuleFilterPropertiesOutput() BucketRuleFilterPropertiesOutput
	ToBucketRuleFilterPropertiesOutputWithContext(context.Context) BucketRuleFilterPropertiesOutput
}

// The container for the filter of the lifecycle rule.
type BucketRuleFilterPropertiesArgs struct {
	// The container for the AND condition for the lifecycle rule. A combination of Prefix and 1 or more Tags OR a minimum of 2 or more tags.
	AndOperator FilterAndOperatorPropertiesPtrInput `pulumi:"andOperator"`
	// Object key prefix that identifies one or more objects to which this rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Specifies a tag used to identify a subset of objects for an Amazon S3Outposts bucket.
	Tag BucketFilterTagPtrInput `pulumi:"tag"`
}

func (BucketRuleFilterPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRuleFilterProperties)(nil)).Elem()
}

func (i BucketRuleFilterPropertiesArgs) ToBucketRuleFilterPropertiesOutput() BucketRuleFilterPropertiesOutput {
	return i.ToBucketRuleFilterPropertiesOutputWithContext(context.Background())
}

func (i BucketRuleFilterPropertiesArgs) ToBucketRuleFilterPropertiesOutputWithContext(ctx context.Context) BucketRuleFilterPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRuleFilterPropertiesOutput)
}

func (i BucketRuleFilterPropertiesArgs) ToBucketRuleFilterPropertiesPtrOutput() BucketRuleFilterPropertiesPtrOutput {
	return i.ToBucketRuleFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i BucketRuleFilterPropertiesArgs) ToBucketRuleFilterPropertiesPtrOutputWithContext(ctx context.Context) BucketRuleFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRuleFilterPropertiesOutput).ToBucketRuleFilterPropertiesPtrOutputWithContext(ctx)
}

// BucketRuleFilterPropertiesPtrInput is an input type that accepts BucketRuleFilterPropertiesArgs, BucketRuleFilterPropertiesPtr and BucketRuleFilterPropertiesPtrOutput values.
// You can construct a concrete instance of `BucketRuleFilterPropertiesPtrInput` via:
//
//	        BucketRuleFilterPropertiesArgs{...}
//
//	or:
//
//	        nil
type BucketRuleFilterPropertiesPtrInput interface {
	pulumi.Input

	ToBucketRuleFilterPropertiesPtrOutput() BucketRuleFilterPropertiesPtrOutput
	ToBucketRuleFilterPropertiesPtrOutputWithContext(context.Context) BucketRuleFilterPropertiesPtrOutput
}

type bucketRuleFilterPropertiesPtrType BucketRuleFilterPropertiesArgs

func BucketRuleFilterPropertiesPtr(v *BucketRuleFilterPropertiesArgs) BucketRuleFilterPropertiesPtrInput {
	return (*bucketRuleFilterPropertiesPtrType)(v)
}

func (*bucketRuleFilterPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRuleFilterProperties)(nil)).Elem()
}

func (i *bucketRuleFilterPropertiesPtrType) ToBucketRuleFilterPropertiesPtrOutput() BucketRuleFilterPropertiesPtrOutput {
	return i.ToBucketRuleFilterPropertiesPtrOutputWithContext(context.Background())
}

func (i *bucketRuleFilterPropertiesPtrType) ToBucketRuleFilterPropertiesPtrOutputWithContext(ctx context.Context) BucketRuleFilterPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRuleFilterPropertiesPtrOutput)
}

// The container for the filter of the lifecycle rule.
type BucketRuleFilterPropertiesOutput struct{ *pulumi.OutputState }

func (BucketRuleFilterPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketRuleFilterProperties)(nil)).Elem()
}

func (o BucketRuleFilterPropertiesOutput) ToBucketRuleFilterPropertiesOutput() BucketRuleFilterPropertiesOutput {
	return o
}

func (o BucketRuleFilterPropertiesOutput) ToBucketRuleFilterPropertiesOutputWithContext(ctx context.Context) BucketRuleFilterPropertiesOutput {
	return o
}

func (o BucketRuleFilterPropertiesOutput) ToBucketRuleFilterPropertiesPtrOutput() BucketRuleFilterPropertiesPtrOutput {
	return o.ToBucketRuleFilterPropertiesPtrOutputWithContext(context.Background())
}

func (o BucketRuleFilterPropertiesOutput) ToBucketRuleFilterPropertiesPtrOutputWithContext(ctx context.Context) BucketRuleFilterPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketRuleFilterProperties) *BucketRuleFilterProperties {
		return &v
	}).(BucketRuleFilterPropertiesPtrOutput)
}

// The container for the AND condition for the lifecycle rule. A combination of Prefix and 1 or more Tags OR a minimum of 2 or more tags.
func (o BucketRuleFilterPropertiesOutput) AndOperator() FilterAndOperatorPropertiesPtrOutput {
	return o.ApplyT(func(v BucketRuleFilterProperties) *FilterAndOperatorProperties { return v.AndOperator }).(FilterAndOperatorPropertiesPtrOutput)
}

// Object key prefix that identifies one or more objects to which this rule applies.
func (o BucketRuleFilterPropertiesOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketRuleFilterProperties) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Specifies a tag used to identify a subset of objects for an Amazon S3Outposts bucket.
func (o BucketRuleFilterPropertiesOutput) Tag() BucketFilterTagPtrOutput {
	return o.ApplyT(func(v BucketRuleFilterProperties) *BucketFilterTag { return v.Tag }).(BucketFilterTagPtrOutput)
}

type BucketRuleFilterPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BucketRuleFilterPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRuleFilterProperties)(nil)).Elem()
}

func (o BucketRuleFilterPropertiesPtrOutput) ToBucketRuleFilterPropertiesPtrOutput() BucketRuleFilterPropertiesPtrOutput {
	return o
}

func (o BucketRuleFilterPropertiesPtrOutput) ToBucketRuleFilterPropertiesPtrOutputWithContext(ctx context.Context) BucketRuleFilterPropertiesPtrOutput {
	return o
}

func (o BucketRuleFilterPropertiesPtrOutput) Elem() BucketRuleFilterPropertiesOutput {
	return o.ApplyT(func(v *BucketRuleFilterProperties) BucketRuleFilterProperties {
		if v != nil {
			return *v
		}
		var ret BucketRuleFilterProperties
		return ret
	}).(BucketRuleFilterPropertiesOutput)
}

// The container for the AND condition for the lifecycle rule. A combination of Prefix and 1 or more Tags OR a minimum of 2 or more tags.
func (o BucketRuleFilterPropertiesPtrOutput) AndOperator() FilterAndOperatorPropertiesPtrOutput {
	return o.ApplyT(func(v *BucketRuleFilterProperties) *FilterAndOperatorProperties {
		if v == nil {
			return nil
		}
		return v.AndOperator
	}).(FilterAndOperatorPropertiesPtrOutput)
}

// Object key prefix that identifies one or more objects to which this rule applies.
func (o BucketRuleFilterPropertiesPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketRuleFilterProperties) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Specifies a tag used to identify a subset of objects for an Amazon S3Outposts bucket.
func (o BucketRuleFilterPropertiesPtrOutput) Tag() BucketFilterTagPtrOutput {
	return o.ApplyT(func(v *BucketRuleFilterProperties) *BucketFilterTag {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(BucketFilterTagPtrOutput)
}

type BucketTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// BucketTagInput is an input type that accepts BucketTagArgs and BucketTagOutput values.
// You can construct a concrete instance of `BucketTagInput` via:
//
//	BucketTagArgs{...}
type BucketTagInput interface {
	pulumi.Input

	ToBucketTagOutput() BucketTagOutput
	ToBucketTagOutputWithContext(context.Context) BucketTagOutput
}

type BucketTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (BucketTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTag)(nil)).Elem()
}

func (i BucketTagArgs) ToBucketTagOutput() BucketTagOutput {
	return i.ToBucketTagOutputWithContext(context.Background())
}

func (i BucketTagArgs) ToBucketTagOutputWithContext(ctx context.Context) BucketTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTagOutput)
}

// BucketTagArrayInput is an input type that accepts BucketTagArray and BucketTagArrayOutput values.
// You can construct a concrete instance of `BucketTagArrayInput` via:
//
//	BucketTagArray{ BucketTagArgs{...} }
type BucketTagArrayInput interface {
	pulumi.Input

	ToBucketTagArrayOutput() BucketTagArrayOutput
	ToBucketTagArrayOutputWithContext(context.Context) BucketTagArrayOutput
}

type BucketTagArray []BucketTagInput

func (BucketTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTag)(nil)).Elem()
}

func (i BucketTagArray) ToBucketTagArrayOutput() BucketTagArrayOutput {
	return i.ToBucketTagArrayOutputWithContext(context.Background())
}

func (i BucketTagArray) ToBucketTagArrayOutputWithContext(ctx context.Context) BucketTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketTagArrayOutput)
}

type BucketTagOutput struct{ *pulumi.OutputState }

func (BucketTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketTag)(nil)).Elem()
}

func (o BucketTagOutput) ToBucketTagOutput() BucketTagOutput {
	return o
}

func (o BucketTagOutput) ToBucketTagOutputWithContext(ctx context.Context) BucketTagOutput {
	return o
}

func (o BucketTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v BucketTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o BucketTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v BucketTag) string { return v.Value }).(pulumi.StringOutput)
}

type BucketTagArrayOutput struct{ *pulumi.OutputState }

func (BucketTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketTag)(nil)).Elem()
}

func (o BucketTagArrayOutput) ToBucketTagArrayOutput() BucketTagArrayOutput {
	return o
}

func (o BucketTagArrayOutput) ToBucketTagArrayOutputWithContext(ctx context.Context) BucketTagArrayOutput {
	return o
}

func (o BucketTagArrayOutput) Index(i pulumi.IntInput) BucketTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketTag {
		return vs[0].([]BucketTag)[vs[1].(int)]
	}).(BucketTagOutput)
}

type EndpointFailedReason struct {
	// The failure code, if any, for a create or delete endpoint operation.
	ErrorCode *string `pulumi:"errorCode"`
	// Additional error details describing the endpoint failure and recommended action.
	Message *string `pulumi:"message"`
}

// EndpointFailedReasonInput is an input type that accepts EndpointFailedReasonArgs and EndpointFailedReasonOutput values.
// You can construct a concrete instance of `EndpointFailedReasonInput` via:
//
//	EndpointFailedReasonArgs{...}
type EndpointFailedReasonInput interface {
	pulumi.Input

	ToEndpointFailedReasonOutput() EndpointFailedReasonOutput
	ToEndpointFailedReasonOutputWithContext(context.Context) EndpointFailedReasonOutput
}

type EndpointFailedReasonArgs struct {
	// The failure code, if any, for a create or delete endpoint operation.
	ErrorCode pulumi.StringPtrInput `pulumi:"errorCode"`
	// Additional error details describing the endpoint failure and recommended action.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (EndpointFailedReasonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointFailedReason)(nil)).Elem()
}

func (i EndpointFailedReasonArgs) ToEndpointFailedReasonOutput() EndpointFailedReasonOutput {
	return i.ToEndpointFailedReasonOutputWithContext(context.Background())
}

func (i EndpointFailedReasonArgs) ToEndpointFailedReasonOutputWithContext(ctx context.Context) EndpointFailedReasonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointFailedReasonOutput)
}

func (i EndpointFailedReasonArgs) ToEndpointFailedReasonPtrOutput() EndpointFailedReasonPtrOutput {
	return i.ToEndpointFailedReasonPtrOutputWithContext(context.Background())
}

func (i EndpointFailedReasonArgs) ToEndpointFailedReasonPtrOutputWithContext(ctx context.Context) EndpointFailedReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointFailedReasonOutput).ToEndpointFailedReasonPtrOutputWithContext(ctx)
}

// EndpointFailedReasonPtrInput is an input type that accepts EndpointFailedReasonArgs, EndpointFailedReasonPtr and EndpointFailedReasonPtrOutput values.
// You can construct a concrete instance of `EndpointFailedReasonPtrInput` via:
//
//	        EndpointFailedReasonArgs{...}
//
//	or:
//
//	        nil
type EndpointFailedReasonPtrInput interface {
	pulumi.Input

	ToEndpointFailedReasonPtrOutput() EndpointFailedReasonPtrOutput
	ToEndpointFailedReasonPtrOutputWithContext(context.Context) EndpointFailedReasonPtrOutput
}

type endpointFailedReasonPtrType EndpointFailedReasonArgs

func EndpointFailedReasonPtr(v *EndpointFailedReasonArgs) EndpointFailedReasonPtrInput {
	return (*endpointFailedReasonPtrType)(v)
}

func (*endpointFailedReasonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointFailedReason)(nil)).Elem()
}

func (i *endpointFailedReasonPtrType) ToEndpointFailedReasonPtrOutput() EndpointFailedReasonPtrOutput {
	return i.ToEndpointFailedReasonPtrOutputWithContext(context.Background())
}

func (i *endpointFailedReasonPtrType) ToEndpointFailedReasonPtrOutputWithContext(ctx context.Context) EndpointFailedReasonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointFailedReasonPtrOutput)
}

type EndpointFailedReasonOutput struct{ *pulumi.OutputState }

func (EndpointFailedReasonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointFailedReason)(nil)).Elem()
}

func (o EndpointFailedReasonOutput) ToEndpointFailedReasonOutput() EndpointFailedReasonOutput {
	return o
}

func (o EndpointFailedReasonOutput) ToEndpointFailedReasonOutputWithContext(ctx context.Context) EndpointFailedReasonOutput {
	return o
}

func (o EndpointFailedReasonOutput) ToEndpointFailedReasonPtrOutput() EndpointFailedReasonPtrOutput {
	return o.ToEndpointFailedReasonPtrOutputWithContext(context.Background())
}

func (o EndpointFailedReasonOutput) ToEndpointFailedReasonPtrOutputWithContext(ctx context.Context) EndpointFailedReasonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointFailedReason) *EndpointFailedReason {
		return &v
	}).(EndpointFailedReasonPtrOutput)
}

// The failure code, if any, for a create or delete endpoint operation.
func (o EndpointFailedReasonOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointFailedReason) *string { return v.ErrorCode }).(pulumi.StringPtrOutput)
}

// Additional error details describing the endpoint failure and recommended action.
func (o EndpointFailedReasonOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointFailedReason) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type EndpointFailedReasonPtrOutput struct{ *pulumi.OutputState }

func (EndpointFailedReasonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointFailedReason)(nil)).Elem()
}

func (o EndpointFailedReasonPtrOutput) ToEndpointFailedReasonPtrOutput() EndpointFailedReasonPtrOutput {
	return o
}

func (o EndpointFailedReasonPtrOutput) ToEndpointFailedReasonPtrOutputWithContext(ctx context.Context) EndpointFailedReasonPtrOutput {
	return o
}

func (o EndpointFailedReasonPtrOutput) Elem() EndpointFailedReasonOutput {
	return o.ApplyT(func(v *EndpointFailedReason) EndpointFailedReason {
		if v != nil {
			return *v
		}
		var ret EndpointFailedReason
		return ret
	}).(EndpointFailedReasonOutput)
}

// The failure code, if any, for a create or delete endpoint operation.
func (o EndpointFailedReasonPtrOutput) ErrorCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointFailedReason) *string {
		if v == nil {
			return nil
		}
		return v.ErrorCode
	}).(pulumi.StringPtrOutput)
}

// Additional error details describing the endpoint failure and recommended action.
func (o EndpointFailedReasonPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointFailedReason) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

// The container for the network interface.
type EndpointNetworkInterface struct {
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
}

// The container for the network interface.
type EndpointNetworkInterfaceOutput struct{ *pulumi.OutputState }

func (EndpointNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointNetworkInterface)(nil)).Elem()
}

func (o EndpointNetworkInterfaceOutput) ToEndpointNetworkInterfaceOutput() EndpointNetworkInterfaceOutput {
	return o
}

func (o EndpointNetworkInterfaceOutput) ToEndpointNetworkInterfaceOutputWithContext(ctx context.Context) EndpointNetworkInterfaceOutput {
	return o
}

func (o EndpointNetworkInterfaceOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointNetworkInterface) string { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

type EndpointNetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (EndpointNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EndpointNetworkInterface)(nil)).Elem()
}

func (o EndpointNetworkInterfaceArrayOutput) ToEndpointNetworkInterfaceArrayOutput() EndpointNetworkInterfaceArrayOutput {
	return o
}

func (o EndpointNetworkInterfaceArrayOutput) ToEndpointNetworkInterfaceArrayOutputWithContext(ctx context.Context) EndpointNetworkInterfaceArrayOutput {
	return o
}

func (o EndpointNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) EndpointNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EndpointNetworkInterface {
		return vs[0].([]EndpointNetworkInterface)[vs[1].(int)]
	}).(EndpointNetworkInterfaceOutput)
}

type FilterAndOperator0Properties struct {
	// Prefix identifies one or more objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
	// All of these tags must exist in the object's tag set in order for the rule to apply.
	Tags []BucketFilterTag `pulumi:"tags"`
}

type FilterAndOperatorProperties struct {
	// Prefix identifies one or more objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
	// All of these tags must exist in the object's tag set in order for the rule to apply.
	Tags []BucketFilterTag `pulumi:"tags"`
}

// FilterAndOperatorPropertiesInput is an input type that accepts FilterAndOperatorPropertiesArgs and FilterAndOperatorPropertiesOutput values.
// You can construct a concrete instance of `FilterAndOperatorPropertiesInput` via:
//
//	FilterAndOperatorPropertiesArgs{...}
type FilterAndOperatorPropertiesInput interface {
	pulumi.Input

	ToFilterAndOperatorPropertiesOutput() FilterAndOperatorPropertiesOutput
	ToFilterAndOperatorPropertiesOutputWithContext(context.Context) FilterAndOperatorPropertiesOutput
}

type FilterAndOperatorPropertiesArgs struct {
	// Prefix identifies one or more objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// All of these tags must exist in the object's tag set in order for the rule to apply.
	Tags BucketFilterTagArrayInput `pulumi:"tags"`
}

func (FilterAndOperatorPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterAndOperatorProperties)(nil)).Elem()
}

func (i FilterAndOperatorPropertiesArgs) ToFilterAndOperatorPropertiesOutput() FilterAndOperatorPropertiesOutput {
	return i.ToFilterAndOperatorPropertiesOutputWithContext(context.Background())
}

func (i FilterAndOperatorPropertiesArgs) ToFilterAndOperatorPropertiesOutputWithContext(ctx context.Context) FilterAndOperatorPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterAndOperatorPropertiesOutput)
}

func (i FilterAndOperatorPropertiesArgs) ToFilterAndOperatorPropertiesPtrOutput() FilterAndOperatorPropertiesPtrOutput {
	return i.ToFilterAndOperatorPropertiesPtrOutputWithContext(context.Background())
}

func (i FilterAndOperatorPropertiesArgs) ToFilterAndOperatorPropertiesPtrOutputWithContext(ctx context.Context) FilterAndOperatorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterAndOperatorPropertiesOutput).ToFilterAndOperatorPropertiesPtrOutputWithContext(ctx)
}

// FilterAndOperatorPropertiesPtrInput is an input type that accepts FilterAndOperatorPropertiesArgs, FilterAndOperatorPropertiesPtr and FilterAndOperatorPropertiesPtrOutput values.
// You can construct a concrete instance of `FilterAndOperatorPropertiesPtrInput` via:
//
//	        FilterAndOperatorPropertiesArgs{...}
//
//	or:
//
//	        nil
type FilterAndOperatorPropertiesPtrInput interface {
	pulumi.Input

	ToFilterAndOperatorPropertiesPtrOutput() FilterAndOperatorPropertiesPtrOutput
	ToFilterAndOperatorPropertiesPtrOutputWithContext(context.Context) FilterAndOperatorPropertiesPtrOutput
}

type filterAndOperatorPropertiesPtrType FilterAndOperatorPropertiesArgs

func FilterAndOperatorPropertiesPtr(v *FilterAndOperatorPropertiesArgs) FilterAndOperatorPropertiesPtrInput {
	return (*filterAndOperatorPropertiesPtrType)(v)
}

func (*filterAndOperatorPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterAndOperatorProperties)(nil)).Elem()
}

func (i *filterAndOperatorPropertiesPtrType) ToFilterAndOperatorPropertiesPtrOutput() FilterAndOperatorPropertiesPtrOutput {
	return i.ToFilterAndOperatorPropertiesPtrOutputWithContext(context.Background())
}

func (i *filterAndOperatorPropertiesPtrType) ToFilterAndOperatorPropertiesPtrOutputWithContext(ctx context.Context) FilterAndOperatorPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterAndOperatorPropertiesPtrOutput)
}

type FilterAndOperatorPropertiesOutput struct{ *pulumi.OutputState }

func (FilterAndOperatorPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterAndOperatorProperties)(nil)).Elem()
}

func (o FilterAndOperatorPropertiesOutput) ToFilterAndOperatorPropertiesOutput() FilterAndOperatorPropertiesOutput {
	return o
}

func (o FilterAndOperatorPropertiesOutput) ToFilterAndOperatorPropertiesOutputWithContext(ctx context.Context) FilterAndOperatorPropertiesOutput {
	return o
}

func (o FilterAndOperatorPropertiesOutput) ToFilterAndOperatorPropertiesPtrOutput() FilterAndOperatorPropertiesPtrOutput {
	return o.ToFilterAndOperatorPropertiesPtrOutputWithContext(context.Background())
}

func (o FilterAndOperatorPropertiesOutput) ToFilterAndOperatorPropertiesPtrOutputWithContext(ctx context.Context) FilterAndOperatorPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterAndOperatorProperties) *FilterAndOperatorProperties {
		return &v
	}).(FilterAndOperatorPropertiesPtrOutput)
}

// Prefix identifies one or more objects to which the rule applies.
func (o FilterAndOperatorPropertiesOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterAndOperatorProperties) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// All of these tags must exist in the object's tag set in order for the rule to apply.
func (o FilterAndOperatorPropertiesOutput) Tags() BucketFilterTagArrayOutput {
	return o.ApplyT(func(v FilterAndOperatorProperties) []BucketFilterTag { return v.Tags }).(BucketFilterTagArrayOutput)
}

type FilterAndOperatorPropertiesPtrOutput struct{ *pulumi.OutputState }

func (FilterAndOperatorPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterAndOperatorProperties)(nil)).Elem()
}

func (o FilterAndOperatorPropertiesPtrOutput) ToFilterAndOperatorPropertiesPtrOutput() FilterAndOperatorPropertiesPtrOutput {
	return o
}

func (o FilterAndOperatorPropertiesPtrOutput) ToFilterAndOperatorPropertiesPtrOutputWithContext(ctx context.Context) FilterAndOperatorPropertiesPtrOutput {
	return o
}

func (o FilterAndOperatorPropertiesPtrOutput) Elem() FilterAndOperatorPropertiesOutput {
	return o.ApplyT(func(v *FilterAndOperatorProperties) FilterAndOperatorProperties {
		if v != nil {
			return *v
		}
		var ret FilterAndOperatorProperties
		return ret
	}).(FilterAndOperatorPropertiesOutput)
}

// Prefix identifies one or more objects to which the rule applies.
func (o FilterAndOperatorPropertiesPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterAndOperatorProperties) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// All of these tags must exist in the object's tag set in order for the rule to apply.
func (o FilterAndOperatorPropertiesPtrOutput) Tags() BucketFilterTagArrayOutput {
	return o.ApplyT(func(v *FilterAndOperatorProperties) []BucketFilterTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(BucketFilterTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointVpcConfigurationInput)(nil)).Elem(), AccessPointVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAbortIncompleteMultipartUploadInput)(nil)).Elem(), BucketAbortIncompleteMultipartUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAbortIncompleteMultipartUploadPtrInput)(nil)).Elem(), BucketAbortIncompleteMultipartUploadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketFilterTagInput)(nil)).Elem(), BucketFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketFilterTagPtrInput)(nil)).Elem(), BucketFilterTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketFilterTagArrayInput)(nil)).Elem(), BucketFilterTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigurationInput)(nil)).Elem(), BucketLifecycleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigurationPtrInput)(nil)).Elem(), BucketLifecycleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRuleInput)(nil)).Elem(), BucketRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRuleArrayInput)(nil)).Elem(), BucketRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRuleFilterPropertiesInput)(nil)).Elem(), BucketRuleFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRuleFilterPropertiesPtrInput)(nil)).Elem(), BucketRuleFilterPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTagInput)(nil)).Elem(), BucketTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketTagArrayInput)(nil)).Elem(), BucketTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointFailedReasonInput)(nil)).Elem(), EndpointFailedReasonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointFailedReasonPtrInput)(nil)).Elem(), EndpointFailedReasonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterAndOperatorPropertiesInput)(nil)).Elem(), FilterAndOperatorPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterAndOperatorPropertiesPtrInput)(nil)).Elem(), FilterAndOperatorPropertiesArgs{})
	pulumi.RegisterOutputType(AccessPointVpcConfigurationOutput{})
	pulumi.RegisterOutputType(BucketAbortIncompleteMultipartUploadOutput{})
	pulumi.RegisterOutputType(BucketAbortIncompleteMultipartUploadPtrOutput{})
	pulumi.RegisterOutputType(BucketFilterTagOutput{})
	pulumi.RegisterOutputType(BucketFilterTagPtrOutput{})
	pulumi.RegisterOutputType(BucketFilterTagArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketRuleOutput{})
	pulumi.RegisterOutputType(BucketRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketRuleFilterPropertiesOutput{})
	pulumi.RegisterOutputType(BucketRuleFilterPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BucketTagOutput{})
	pulumi.RegisterOutputType(BucketTagArrayOutput{})
	pulumi.RegisterOutputType(EndpointFailedReasonOutput{})
	pulumi.RegisterOutputType(EndpointFailedReasonPtrOutput{})
	pulumi.RegisterOutputType(EndpointNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(EndpointNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(FilterAndOperatorPropertiesOutput{})
	pulumi.RegisterOutputType(FilterAndOperatorPropertiesPtrOutput{})
}
