// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3vectors

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::S3Vectors::VectorBucketPolicy
func LookupVectorBucketPolicy(ctx *pulumi.Context, args *LookupVectorBucketPolicyArgs, opts ...pulumi.InvokeOption) (*LookupVectorBucketPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVectorBucketPolicyResult
	err := ctx.Invoke("aws-native:s3vectors:getVectorBucketPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVectorBucketPolicyArgs struct {
	VectorBucketArn string `pulumi:"vectorBucketArn"`
}

type LookupVectorBucketPolicyResult struct {
	Policy *VectorBucketPolicyPolicy `pulumi:"policy"`
}

func LookupVectorBucketPolicyOutput(ctx *pulumi.Context, args LookupVectorBucketPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupVectorBucketPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVectorBucketPolicyResultOutput, error) {
			args := v.(LookupVectorBucketPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:s3vectors:getVectorBucketPolicy", args, LookupVectorBucketPolicyResultOutput{}, options).(LookupVectorBucketPolicyResultOutput), nil
		}).(LookupVectorBucketPolicyResultOutput)
}

type LookupVectorBucketPolicyOutputArgs struct {
	VectorBucketArn pulumi.StringInput `pulumi:"vectorBucketArn"`
}

func (LookupVectorBucketPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVectorBucketPolicyArgs)(nil)).Elem()
}

type LookupVectorBucketPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupVectorBucketPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVectorBucketPolicyResult)(nil)).Elem()
}

func (o LookupVectorBucketPolicyResultOutput) ToLookupVectorBucketPolicyResultOutput() LookupVectorBucketPolicyResultOutput {
	return o
}

func (o LookupVectorBucketPolicyResultOutput) ToLookupVectorBucketPolicyResultOutputWithContext(ctx context.Context) LookupVectorBucketPolicyResultOutput {
	return o
}

func (o LookupVectorBucketPolicyResultOutput) Policy() VectorBucketPolicyPolicyPtrOutput {
	return o.ApplyT(func(v LookupVectorBucketPolicyResult) *VectorBucketPolicyPolicy { return v.Policy }).(VectorBucketPolicyPolicyPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVectorBucketPolicyResultOutput{})
}
