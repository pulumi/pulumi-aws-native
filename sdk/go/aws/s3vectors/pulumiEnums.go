// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3vectors

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The data type of the vectors to be inserted into the vector index.
type IndexDataType string

const (
	IndexDataTypeFloat32 = IndexDataType("float32")
)

func (IndexDataType) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexDataType)(nil)).Elem()
}

func (e IndexDataType) ToIndexDataTypeOutput() IndexDataTypeOutput {
	return pulumi.ToOutput(e).(IndexDataTypeOutput)
}

func (e IndexDataType) ToIndexDataTypeOutputWithContext(ctx context.Context) IndexDataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IndexDataTypeOutput)
}

func (e IndexDataType) ToIndexDataTypePtrOutput() IndexDataTypePtrOutput {
	return e.ToIndexDataTypePtrOutputWithContext(context.Background())
}

func (e IndexDataType) ToIndexDataTypePtrOutputWithContext(ctx context.Context) IndexDataTypePtrOutput {
	return IndexDataType(e).ToIndexDataTypeOutputWithContext(ctx).ToIndexDataTypePtrOutputWithContext(ctx)
}

func (e IndexDataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexDataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexDataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IndexDataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IndexDataTypeOutput struct{ *pulumi.OutputState }

func (IndexDataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexDataType)(nil)).Elem()
}

func (o IndexDataTypeOutput) ToIndexDataTypeOutput() IndexDataTypeOutput {
	return o
}

func (o IndexDataTypeOutput) ToIndexDataTypeOutputWithContext(ctx context.Context) IndexDataTypeOutput {
	return o
}

func (o IndexDataTypeOutput) ToIndexDataTypePtrOutput() IndexDataTypePtrOutput {
	return o.ToIndexDataTypePtrOutputWithContext(context.Background())
}

func (o IndexDataTypeOutput) ToIndexDataTypePtrOutputWithContext(ctx context.Context) IndexDataTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexDataType) *IndexDataType {
		return &v
	}).(IndexDataTypePtrOutput)
}

func (o IndexDataTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IndexDataTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexDataType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IndexDataTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexDataTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexDataType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IndexDataTypePtrOutput struct{ *pulumi.OutputState }

func (IndexDataTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexDataType)(nil)).Elem()
}

func (o IndexDataTypePtrOutput) ToIndexDataTypePtrOutput() IndexDataTypePtrOutput {
	return o
}

func (o IndexDataTypePtrOutput) ToIndexDataTypePtrOutputWithContext(ctx context.Context) IndexDataTypePtrOutput {
	return o
}

func (o IndexDataTypePtrOutput) Elem() IndexDataTypeOutput {
	return o.ApplyT(func(v *IndexDataType) IndexDataType {
		if v != nil {
			return *v
		}
		var ret IndexDataType
		return ret
	}).(IndexDataTypeOutput)
}

func (o IndexDataTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexDataTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IndexDataType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IndexDataTypeInput is an input type that accepts values of the IndexDataType enum
// A concrete instance of `IndexDataTypeInput` can be one of the following:
//
//	IndexDataTypeFloat32
type IndexDataTypeInput interface {
	pulumi.Input

	ToIndexDataTypeOutput() IndexDataTypeOutput
	ToIndexDataTypeOutputWithContext(context.Context) IndexDataTypeOutput
}

var indexDataTypePtrType = reflect.TypeOf((**IndexDataType)(nil)).Elem()

type IndexDataTypePtrInput interface {
	pulumi.Input

	ToIndexDataTypePtrOutput() IndexDataTypePtrOutput
	ToIndexDataTypePtrOutputWithContext(context.Context) IndexDataTypePtrOutput
}

type indexDataTypePtr string

func IndexDataTypePtr(v string) IndexDataTypePtrInput {
	return (*indexDataTypePtr)(&v)
}

func (*indexDataTypePtr) ElementType() reflect.Type {
	return indexDataTypePtrType
}

func (in *indexDataTypePtr) ToIndexDataTypePtrOutput() IndexDataTypePtrOutput {
	return pulumi.ToOutput(in).(IndexDataTypePtrOutput)
}

func (in *indexDataTypePtr) ToIndexDataTypePtrOutputWithContext(ctx context.Context) IndexDataTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IndexDataTypePtrOutput)
}

// The distance metric to be used for similarity search.
type IndexDistanceMetric string

const (
	IndexDistanceMetricCosine    = IndexDistanceMetric("cosine")
	IndexDistanceMetricEuclidean = IndexDistanceMetric("euclidean")
)

func (IndexDistanceMetric) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexDistanceMetric)(nil)).Elem()
}

func (e IndexDistanceMetric) ToIndexDistanceMetricOutput() IndexDistanceMetricOutput {
	return pulumi.ToOutput(e).(IndexDistanceMetricOutput)
}

func (e IndexDistanceMetric) ToIndexDistanceMetricOutputWithContext(ctx context.Context) IndexDistanceMetricOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IndexDistanceMetricOutput)
}

func (e IndexDistanceMetric) ToIndexDistanceMetricPtrOutput() IndexDistanceMetricPtrOutput {
	return e.ToIndexDistanceMetricPtrOutputWithContext(context.Background())
}

func (e IndexDistanceMetric) ToIndexDistanceMetricPtrOutputWithContext(ctx context.Context) IndexDistanceMetricPtrOutput {
	return IndexDistanceMetric(e).ToIndexDistanceMetricOutputWithContext(ctx).ToIndexDistanceMetricPtrOutputWithContext(ctx)
}

func (e IndexDistanceMetric) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexDistanceMetric) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexDistanceMetric) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IndexDistanceMetric) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IndexDistanceMetricOutput struct{ *pulumi.OutputState }

func (IndexDistanceMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexDistanceMetric)(nil)).Elem()
}

func (o IndexDistanceMetricOutput) ToIndexDistanceMetricOutput() IndexDistanceMetricOutput {
	return o
}

func (o IndexDistanceMetricOutput) ToIndexDistanceMetricOutputWithContext(ctx context.Context) IndexDistanceMetricOutput {
	return o
}

func (o IndexDistanceMetricOutput) ToIndexDistanceMetricPtrOutput() IndexDistanceMetricPtrOutput {
	return o.ToIndexDistanceMetricPtrOutputWithContext(context.Background())
}

func (o IndexDistanceMetricOutput) ToIndexDistanceMetricPtrOutputWithContext(ctx context.Context) IndexDistanceMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexDistanceMetric) *IndexDistanceMetric {
		return &v
	}).(IndexDistanceMetricPtrOutput)
}

func (o IndexDistanceMetricOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IndexDistanceMetricOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexDistanceMetric) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IndexDistanceMetricOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexDistanceMetricOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexDistanceMetric) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IndexDistanceMetricPtrOutput struct{ *pulumi.OutputState }

func (IndexDistanceMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexDistanceMetric)(nil)).Elem()
}

func (o IndexDistanceMetricPtrOutput) ToIndexDistanceMetricPtrOutput() IndexDistanceMetricPtrOutput {
	return o
}

func (o IndexDistanceMetricPtrOutput) ToIndexDistanceMetricPtrOutputWithContext(ctx context.Context) IndexDistanceMetricPtrOutput {
	return o
}

func (o IndexDistanceMetricPtrOutput) Elem() IndexDistanceMetricOutput {
	return o.ApplyT(func(v *IndexDistanceMetric) IndexDistanceMetric {
		if v != nil {
			return *v
		}
		var ret IndexDistanceMetric
		return ret
	}).(IndexDistanceMetricOutput)
}

func (o IndexDistanceMetricPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexDistanceMetricPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IndexDistanceMetric) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IndexDistanceMetricInput is an input type that accepts values of the IndexDistanceMetric enum
// A concrete instance of `IndexDistanceMetricInput` can be one of the following:
//
//	IndexDistanceMetricCosine
//	IndexDistanceMetricEuclidean
type IndexDistanceMetricInput interface {
	pulumi.Input

	ToIndexDistanceMetricOutput() IndexDistanceMetricOutput
	ToIndexDistanceMetricOutputWithContext(context.Context) IndexDistanceMetricOutput
}

var indexDistanceMetricPtrType = reflect.TypeOf((**IndexDistanceMetric)(nil)).Elem()

type IndexDistanceMetricPtrInput interface {
	pulumi.Input

	ToIndexDistanceMetricPtrOutput() IndexDistanceMetricPtrOutput
	ToIndexDistanceMetricPtrOutputWithContext(context.Context) IndexDistanceMetricPtrOutput
}

type indexDistanceMetricPtr string

func IndexDistanceMetricPtr(v string) IndexDistanceMetricPtrInput {
	return (*indexDistanceMetricPtr)(&v)
}

func (*indexDistanceMetricPtr) ElementType() reflect.Type {
	return indexDistanceMetricPtrType
}

func (in *indexDistanceMetricPtr) ToIndexDistanceMetricPtrOutput() IndexDistanceMetricPtrOutput {
	return pulumi.ToOutput(in).(IndexDistanceMetricPtrOutput)
}

func (in *indexDistanceMetricPtr) ToIndexDistanceMetricPtrOutputWithContext(ctx context.Context) IndexDistanceMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IndexDistanceMetricPtrOutput)
}

// The server-side encryption type to use for the encryption configuration of the vector bucket. By default, if you don't specify, all new vectors in Amazon S3 vector buckets use server-side encryption with Amazon S3 managed keys (SSE-S3), specifically AES256.
type VectorBucketEncryptionConfigurationSseType string

const (
	VectorBucketEncryptionConfigurationSseTypeAes256 = VectorBucketEncryptionConfigurationSseType("AES256")
	VectorBucketEncryptionConfigurationSseTypeAwskms = VectorBucketEncryptionConfigurationSseType("aws:kms")
)

func (VectorBucketEncryptionConfigurationSseType) ElementType() reflect.Type {
	return reflect.TypeOf((*VectorBucketEncryptionConfigurationSseType)(nil)).Elem()
}

func (e VectorBucketEncryptionConfigurationSseType) ToVectorBucketEncryptionConfigurationSseTypeOutput() VectorBucketEncryptionConfigurationSseTypeOutput {
	return pulumi.ToOutput(e).(VectorBucketEncryptionConfigurationSseTypeOutput)
}

func (e VectorBucketEncryptionConfigurationSseType) ToVectorBucketEncryptionConfigurationSseTypeOutputWithContext(ctx context.Context) VectorBucketEncryptionConfigurationSseTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(VectorBucketEncryptionConfigurationSseTypeOutput)
}

func (e VectorBucketEncryptionConfigurationSseType) ToVectorBucketEncryptionConfigurationSseTypePtrOutput() VectorBucketEncryptionConfigurationSseTypePtrOutput {
	return e.ToVectorBucketEncryptionConfigurationSseTypePtrOutputWithContext(context.Background())
}

func (e VectorBucketEncryptionConfigurationSseType) ToVectorBucketEncryptionConfigurationSseTypePtrOutputWithContext(ctx context.Context) VectorBucketEncryptionConfigurationSseTypePtrOutput {
	return VectorBucketEncryptionConfigurationSseType(e).ToVectorBucketEncryptionConfigurationSseTypeOutputWithContext(ctx).ToVectorBucketEncryptionConfigurationSseTypePtrOutputWithContext(ctx)
}

func (e VectorBucketEncryptionConfigurationSseType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e VectorBucketEncryptionConfigurationSseType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e VectorBucketEncryptionConfigurationSseType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e VectorBucketEncryptionConfigurationSseType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type VectorBucketEncryptionConfigurationSseTypeOutput struct{ *pulumi.OutputState }

func (VectorBucketEncryptionConfigurationSseTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VectorBucketEncryptionConfigurationSseType)(nil)).Elem()
}

func (o VectorBucketEncryptionConfigurationSseTypeOutput) ToVectorBucketEncryptionConfigurationSseTypeOutput() VectorBucketEncryptionConfigurationSseTypeOutput {
	return o
}

func (o VectorBucketEncryptionConfigurationSseTypeOutput) ToVectorBucketEncryptionConfigurationSseTypeOutputWithContext(ctx context.Context) VectorBucketEncryptionConfigurationSseTypeOutput {
	return o
}

func (o VectorBucketEncryptionConfigurationSseTypeOutput) ToVectorBucketEncryptionConfigurationSseTypePtrOutput() VectorBucketEncryptionConfigurationSseTypePtrOutput {
	return o.ToVectorBucketEncryptionConfigurationSseTypePtrOutputWithContext(context.Background())
}

func (o VectorBucketEncryptionConfigurationSseTypeOutput) ToVectorBucketEncryptionConfigurationSseTypePtrOutputWithContext(ctx context.Context) VectorBucketEncryptionConfigurationSseTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VectorBucketEncryptionConfigurationSseType) *VectorBucketEncryptionConfigurationSseType {
		return &v
	}).(VectorBucketEncryptionConfigurationSseTypePtrOutput)
}

func (o VectorBucketEncryptionConfigurationSseTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o VectorBucketEncryptionConfigurationSseTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VectorBucketEncryptionConfigurationSseType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o VectorBucketEncryptionConfigurationSseTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VectorBucketEncryptionConfigurationSseTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e VectorBucketEncryptionConfigurationSseType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type VectorBucketEncryptionConfigurationSseTypePtrOutput struct{ *pulumi.OutputState }

func (VectorBucketEncryptionConfigurationSseTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VectorBucketEncryptionConfigurationSseType)(nil)).Elem()
}

func (o VectorBucketEncryptionConfigurationSseTypePtrOutput) ToVectorBucketEncryptionConfigurationSseTypePtrOutput() VectorBucketEncryptionConfigurationSseTypePtrOutput {
	return o
}

func (o VectorBucketEncryptionConfigurationSseTypePtrOutput) ToVectorBucketEncryptionConfigurationSseTypePtrOutputWithContext(ctx context.Context) VectorBucketEncryptionConfigurationSseTypePtrOutput {
	return o
}

func (o VectorBucketEncryptionConfigurationSseTypePtrOutput) Elem() VectorBucketEncryptionConfigurationSseTypeOutput {
	return o.ApplyT(func(v *VectorBucketEncryptionConfigurationSseType) VectorBucketEncryptionConfigurationSseType {
		if v != nil {
			return *v
		}
		var ret VectorBucketEncryptionConfigurationSseType
		return ret
	}).(VectorBucketEncryptionConfigurationSseTypeOutput)
}

func (o VectorBucketEncryptionConfigurationSseTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o VectorBucketEncryptionConfigurationSseTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *VectorBucketEncryptionConfigurationSseType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// VectorBucketEncryptionConfigurationSseTypeInput is an input type that accepts values of the VectorBucketEncryptionConfigurationSseType enum
// A concrete instance of `VectorBucketEncryptionConfigurationSseTypeInput` can be one of the following:
//
//	VectorBucketEncryptionConfigurationSseTypeAes256
//	VectorBucketEncryptionConfigurationSseTypeAwskms
type VectorBucketEncryptionConfigurationSseTypeInput interface {
	pulumi.Input

	ToVectorBucketEncryptionConfigurationSseTypeOutput() VectorBucketEncryptionConfigurationSseTypeOutput
	ToVectorBucketEncryptionConfigurationSseTypeOutputWithContext(context.Context) VectorBucketEncryptionConfigurationSseTypeOutput
}

var vectorBucketEncryptionConfigurationSseTypePtrType = reflect.TypeOf((**VectorBucketEncryptionConfigurationSseType)(nil)).Elem()

type VectorBucketEncryptionConfigurationSseTypePtrInput interface {
	pulumi.Input

	ToVectorBucketEncryptionConfigurationSseTypePtrOutput() VectorBucketEncryptionConfigurationSseTypePtrOutput
	ToVectorBucketEncryptionConfigurationSseTypePtrOutputWithContext(context.Context) VectorBucketEncryptionConfigurationSseTypePtrOutput
}

type vectorBucketEncryptionConfigurationSseTypePtr string

func VectorBucketEncryptionConfigurationSseTypePtr(v string) VectorBucketEncryptionConfigurationSseTypePtrInput {
	return (*vectorBucketEncryptionConfigurationSseTypePtr)(&v)
}

func (*vectorBucketEncryptionConfigurationSseTypePtr) ElementType() reflect.Type {
	return vectorBucketEncryptionConfigurationSseTypePtrType
}

func (in *vectorBucketEncryptionConfigurationSseTypePtr) ToVectorBucketEncryptionConfigurationSseTypePtrOutput() VectorBucketEncryptionConfigurationSseTypePtrOutput {
	return pulumi.ToOutput(in).(VectorBucketEncryptionConfigurationSseTypePtrOutput)
}

func (in *vectorBucketEncryptionConfigurationSseTypePtr) ToVectorBucketEncryptionConfigurationSseTypePtrOutputWithContext(ctx context.Context) VectorBucketEncryptionConfigurationSseTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(VectorBucketEncryptionConfigurationSseTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IndexDataTypeInput)(nil)).Elem(), IndexDataType("float32"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexDataTypePtrInput)(nil)).Elem(), IndexDataType("float32"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexDistanceMetricInput)(nil)).Elem(), IndexDistanceMetric("cosine"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexDistanceMetricPtrInput)(nil)).Elem(), IndexDistanceMetric("cosine"))
	pulumi.RegisterInputType(reflect.TypeOf((*VectorBucketEncryptionConfigurationSseTypeInput)(nil)).Elem(), VectorBucketEncryptionConfigurationSseType("AES256"))
	pulumi.RegisterInputType(reflect.TypeOf((*VectorBucketEncryptionConfigurationSseTypePtrInput)(nil)).Elem(), VectorBucketEncryptionConfigurationSseType("AES256"))
	pulumi.RegisterOutputType(IndexDataTypeOutput{})
	pulumi.RegisterOutputType(IndexDataTypePtrOutput{})
	pulumi.RegisterOutputType(IndexDistanceMetricOutput{})
	pulumi.RegisterOutputType(IndexDistanceMetricPtrOutput{})
	pulumi.RegisterOutputType(VectorBucketEncryptionConfigurationSseTypeOutput{})
	pulumi.RegisterOutputType(VectorBucketEncryptionConfigurationSseTypePtrOutput{})
}
