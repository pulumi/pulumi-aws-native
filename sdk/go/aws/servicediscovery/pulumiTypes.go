// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package servicediscovery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HttpNamespaceTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// HttpNamespaceTagInput is an input type that accepts HttpNamespaceTagArgs and HttpNamespaceTagOutput values.
// You can construct a concrete instance of `HttpNamespaceTagInput` via:
//
//          HttpNamespaceTagArgs{...}
type HttpNamespaceTagInput interface {
	pulumi.Input

	ToHttpNamespaceTagOutput() HttpNamespaceTagOutput
	ToHttpNamespaceTagOutputWithContext(context.Context) HttpNamespaceTagOutput
}

type HttpNamespaceTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (HttpNamespaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpNamespaceTag)(nil)).Elem()
}

func (i HttpNamespaceTagArgs) ToHttpNamespaceTagOutput() HttpNamespaceTagOutput {
	return i.ToHttpNamespaceTagOutputWithContext(context.Background())
}

func (i HttpNamespaceTagArgs) ToHttpNamespaceTagOutputWithContext(ctx context.Context) HttpNamespaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpNamespaceTagOutput)
}

// HttpNamespaceTagArrayInput is an input type that accepts HttpNamespaceTagArray and HttpNamespaceTagArrayOutput values.
// You can construct a concrete instance of `HttpNamespaceTagArrayInput` via:
//
//          HttpNamespaceTagArray{ HttpNamespaceTagArgs{...} }
type HttpNamespaceTagArrayInput interface {
	pulumi.Input

	ToHttpNamespaceTagArrayOutput() HttpNamespaceTagArrayOutput
	ToHttpNamespaceTagArrayOutputWithContext(context.Context) HttpNamespaceTagArrayOutput
}

type HttpNamespaceTagArray []HttpNamespaceTagInput

func (HttpNamespaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpNamespaceTag)(nil)).Elem()
}

func (i HttpNamespaceTagArray) ToHttpNamespaceTagArrayOutput() HttpNamespaceTagArrayOutput {
	return i.ToHttpNamespaceTagArrayOutputWithContext(context.Background())
}

func (i HttpNamespaceTagArray) ToHttpNamespaceTagArrayOutputWithContext(ctx context.Context) HttpNamespaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HttpNamespaceTagArrayOutput)
}

type HttpNamespaceTagOutput struct{ *pulumi.OutputState }

func (HttpNamespaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HttpNamespaceTag)(nil)).Elem()
}

func (o HttpNamespaceTagOutput) ToHttpNamespaceTagOutput() HttpNamespaceTagOutput {
	return o
}

func (o HttpNamespaceTagOutput) ToHttpNamespaceTagOutputWithContext(ctx context.Context) HttpNamespaceTagOutput {
	return o
}

func (o HttpNamespaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v HttpNamespaceTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o HttpNamespaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v HttpNamespaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type HttpNamespaceTagArrayOutput struct{ *pulumi.OutputState }

func (HttpNamespaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]HttpNamespaceTag)(nil)).Elem()
}

func (o HttpNamespaceTagArrayOutput) ToHttpNamespaceTagArrayOutput() HttpNamespaceTagArrayOutput {
	return o
}

func (o HttpNamespaceTagArrayOutput) ToHttpNamespaceTagArrayOutputWithContext(ctx context.Context) HttpNamespaceTagArrayOutput {
	return o
}

func (o HttpNamespaceTagArrayOutput) Index(i pulumi.IntInput) HttpNamespaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) HttpNamespaceTag {
		return vs[0].([]HttpNamespaceTag)[vs[1].(int)]
	}).(HttpNamespaceTagOutput)
}

type PrivateDnsNamespacePrivateDnsPropertiesMutable struct {
	SOA *PrivateDnsNamespaceSOA `pulumi:"sOA"`
}

// PrivateDnsNamespacePrivateDnsPropertiesMutableInput is an input type that accepts PrivateDnsNamespacePrivateDnsPropertiesMutableArgs and PrivateDnsNamespacePrivateDnsPropertiesMutableOutput values.
// You can construct a concrete instance of `PrivateDnsNamespacePrivateDnsPropertiesMutableInput` via:
//
//          PrivateDnsNamespacePrivateDnsPropertiesMutableArgs{...}
type PrivateDnsNamespacePrivateDnsPropertiesMutableInput interface {
	pulumi.Input

	ToPrivateDnsNamespacePrivateDnsPropertiesMutableOutput() PrivateDnsNamespacePrivateDnsPropertiesMutableOutput
	ToPrivateDnsNamespacePrivateDnsPropertiesMutableOutputWithContext(context.Context) PrivateDnsNamespacePrivateDnsPropertiesMutableOutput
}

type PrivateDnsNamespacePrivateDnsPropertiesMutableArgs struct {
	SOA PrivateDnsNamespaceSOAPtrInput `pulumi:"sOA"`
}

func (PrivateDnsNamespacePrivateDnsPropertiesMutableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNamespacePrivateDnsPropertiesMutable)(nil)).Elem()
}

func (i PrivateDnsNamespacePrivateDnsPropertiesMutableArgs) ToPrivateDnsNamespacePrivateDnsPropertiesMutableOutput() PrivateDnsNamespacePrivateDnsPropertiesMutableOutput {
	return i.ToPrivateDnsNamespacePrivateDnsPropertiesMutableOutputWithContext(context.Background())
}

func (i PrivateDnsNamespacePrivateDnsPropertiesMutableArgs) ToPrivateDnsNamespacePrivateDnsPropertiesMutableOutputWithContext(ctx context.Context) PrivateDnsNamespacePrivateDnsPropertiesMutableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespacePrivateDnsPropertiesMutableOutput)
}

func (i PrivateDnsNamespacePrivateDnsPropertiesMutableArgs) ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput() PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput {
	return i.ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutputWithContext(context.Background())
}

func (i PrivateDnsNamespacePrivateDnsPropertiesMutableArgs) ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutputWithContext(ctx context.Context) PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespacePrivateDnsPropertiesMutableOutput).ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutputWithContext(ctx)
}

// PrivateDnsNamespacePrivateDnsPropertiesMutablePtrInput is an input type that accepts PrivateDnsNamespacePrivateDnsPropertiesMutableArgs, PrivateDnsNamespacePrivateDnsPropertiesMutablePtr and PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput values.
// You can construct a concrete instance of `PrivateDnsNamespacePrivateDnsPropertiesMutablePtrInput` via:
//
//          PrivateDnsNamespacePrivateDnsPropertiesMutableArgs{...}
//
//  or:
//
//          nil
type PrivateDnsNamespacePrivateDnsPropertiesMutablePtrInput interface {
	pulumi.Input

	ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput() PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput
	ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutputWithContext(context.Context) PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput
}

type privateDnsNamespacePrivateDnsPropertiesMutablePtrType PrivateDnsNamespacePrivateDnsPropertiesMutableArgs

func PrivateDnsNamespacePrivateDnsPropertiesMutablePtr(v *PrivateDnsNamespacePrivateDnsPropertiesMutableArgs) PrivateDnsNamespacePrivateDnsPropertiesMutablePtrInput {
	return (*privateDnsNamespacePrivateDnsPropertiesMutablePtrType)(v)
}

func (*privateDnsNamespacePrivateDnsPropertiesMutablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNamespacePrivateDnsPropertiesMutable)(nil)).Elem()
}

func (i *privateDnsNamespacePrivateDnsPropertiesMutablePtrType) ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput() PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput {
	return i.ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutputWithContext(context.Background())
}

func (i *privateDnsNamespacePrivateDnsPropertiesMutablePtrType) ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutputWithContext(ctx context.Context) PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput)
}

type PrivateDnsNamespacePrivateDnsPropertiesMutableOutput struct{ *pulumi.OutputState }

func (PrivateDnsNamespacePrivateDnsPropertiesMutableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNamespacePrivateDnsPropertiesMutable)(nil)).Elem()
}

func (o PrivateDnsNamespacePrivateDnsPropertiesMutableOutput) ToPrivateDnsNamespacePrivateDnsPropertiesMutableOutput() PrivateDnsNamespacePrivateDnsPropertiesMutableOutput {
	return o
}

func (o PrivateDnsNamespacePrivateDnsPropertiesMutableOutput) ToPrivateDnsNamespacePrivateDnsPropertiesMutableOutputWithContext(ctx context.Context) PrivateDnsNamespacePrivateDnsPropertiesMutableOutput {
	return o
}

func (o PrivateDnsNamespacePrivateDnsPropertiesMutableOutput) ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput() PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput {
	return o.ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutputWithContext(context.Background())
}

func (o PrivateDnsNamespacePrivateDnsPropertiesMutableOutput) ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutputWithContext(ctx context.Context) PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateDnsNamespacePrivateDnsPropertiesMutable) *PrivateDnsNamespacePrivateDnsPropertiesMutable {
		return &v
	}).(PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput)
}

func (o PrivateDnsNamespacePrivateDnsPropertiesMutableOutput) SOA() PrivateDnsNamespaceSOAPtrOutput {
	return o.ApplyT(func(v PrivateDnsNamespacePrivateDnsPropertiesMutable) *PrivateDnsNamespaceSOA { return v.SOA }).(PrivateDnsNamespaceSOAPtrOutput)
}

type PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput struct{ *pulumi.OutputState }

func (PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNamespacePrivateDnsPropertiesMutable)(nil)).Elem()
}

func (o PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput) ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput() PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput {
	return o
}

func (o PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput) ToPrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutputWithContext(ctx context.Context) PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput {
	return o
}

func (o PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput) Elem() PrivateDnsNamespacePrivateDnsPropertiesMutableOutput {
	return o.ApplyT(func(v *PrivateDnsNamespacePrivateDnsPropertiesMutable) PrivateDnsNamespacePrivateDnsPropertiesMutable {
		if v != nil {
			return *v
		}
		var ret PrivateDnsNamespacePrivateDnsPropertiesMutable
		return ret
	}).(PrivateDnsNamespacePrivateDnsPropertiesMutableOutput)
}

func (o PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput) SOA() PrivateDnsNamespaceSOAPtrOutput {
	return o.ApplyT(func(v *PrivateDnsNamespacePrivateDnsPropertiesMutable) *PrivateDnsNamespaceSOA {
		if v == nil {
			return nil
		}
		return v.SOA
	}).(PrivateDnsNamespaceSOAPtrOutput)
}

type PrivateDnsNamespaceProperties struct {
	DnsProperties *PrivateDnsNamespacePrivateDnsPropertiesMutable `pulumi:"dnsProperties"`
}

// PrivateDnsNamespacePropertiesInput is an input type that accepts PrivateDnsNamespacePropertiesArgs and PrivateDnsNamespacePropertiesOutput values.
// You can construct a concrete instance of `PrivateDnsNamespacePropertiesInput` via:
//
//          PrivateDnsNamespacePropertiesArgs{...}
type PrivateDnsNamespacePropertiesInput interface {
	pulumi.Input

	ToPrivateDnsNamespacePropertiesOutput() PrivateDnsNamespacePropertiesOutput
	ToPrivateDnsNamespacePropertiesOutputWithContext(context.Context) PrivateDnsNamespacePropertiesOutput
}

type PrivateDnsNamespacePropertiesArgs struct {
	DnsProperties PrivateDnsNamespacePrivateDnsPropertiesMutablePtrInput `pulumi:"dnsProperties"`
}

func (PrivateDnsNamespacePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNamespaceProperties)(nil)).Elem()
}

func (i PrivateDnsNamespacePropertiesArgs) ToPrivateDnsNamespacePropertiesOutput() PrivateDnsNamespacePropertiesOutput {
	return i.ToPrivateDnsNamespacePropertiesOutputWithContext(context.Background())
}

func (i PrivateDnsNamespacePropertiesArgs) ToPrivateDnsNamespacePropertiesOutputWithContext(ctx context.Context) PrivateDnsNamespacePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespacePropertiesOutput)
}

func (i PrivateDnsNamespacePropertiesArgs) ToPrivateDnsNamespacePropertiesPtrOutput() PrivateDnsNamespacePropertiesPtrOutput {
	return i.ToPrivateDnsNamespacePropertiesPtrOutputWithContext(context.Background())
}

func (i PrivateDnsNamespacePropertiesArgs) ToPrivateDnsNamespacePropertiesPtrOutputWithContext(ctx context.Context) PrivateDnsNamespacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespacePropertiesOutput).ToPrivateDnsNamespacePropertiesPtrOutputWithContext(ctx)
}

// PrivateDnsNamespacePropertiesPtrInput is an input type that accepts PrivateDnsNamespacePropertiesArgs, PrivateDnsNamespacePropertiesPtr and PrivateDnsNamespacePropertiesPtrOutput values.
// You can construct a concrete instance of `PrivateDnsNamespacePropertiesPtrInput` via:
//
//          PrivateDnsNamespacePropertiesArgs{...}
//
//  or:
//
//          nil
type PrivateDnsNamespacePropertiesPtrInput interface {
	pulumi.Input

	ToPrivateDnsNamespacePropertiesPtrOutput() PrivateDnsNamespacePropertiesPtrOutput
	ToPrivateDnsNamespacePropertiesPtrOutputWithContext(context.Context) PrivateDnsNamespacePropertiesPtrOutput
}

type privateDnsNamespacePropertiesPtrType PrivateDnsNamespacePropertiesArgs

func PrivateDnsNamespacePropertiesPtr(v *PrivateDnsNamespacePropertiesArgs) PrivateDnsNamespacePropertiesPtrInput {
	return (*privateDnsNamespacePropertiesPtrType)(v)
}

func (*privateDnsNamespacePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNamespaceProperties)(nil)).Elem()
}

func (i *privateDnsNamespacePropertiesPtrType) ToPrivateDnsNamespacePropertiesPtrOutput() PrivateDnsNamespacePropertiesPtrOutput {
	return i.ToPrivateDnsNamespacePropertiesPtrOutputWithContext(context.Background())
}

func (i *privateDnsNamespacePropertiesPtrType) ToPrivateDnsNamespacePropertiesPtrOutputWithContext(ctx context.Context) PrivateDnsNamespacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespacePropertiesPtrOutput)
}

type PrivateDnsNamespacePropertiesOutput struct{ *pulumi.OutputState }

func (PrivateDnsNamespacePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNamespaceProperties)(nil)).Elem()
}

func (o PrivateDnsNamespacePropertiesOutput) ToPrivateDnsNamespacePropertiesOutput() PrivateDnsNamespacePropertiesOutput {
	return o
}

func (o PrivateDnsNamespacePropertiesOutput) ToPrivateDnsNamespacePropertiesOutputWithContext(ctx context.Context) PrivateDnsNamespacePropertiesOutput {
	return o
}

func (o PrivateDnsNamespacePropertiesOutput) ToPrivateDnsNamespacePropertiesPtrOutput() PrivateDnsNamespacePropertiesPtrOutput {
	return o.ToPrivateDnsNamespacePropertiesPtrOutputWithContext(context.Background())
}

func (o PrivateDnsNamespacePropertiesOutput) ToPrivateDnsNamespacePropertiesPtrOutputWithContext(ctx context.Context) PrivateDnsNamespacePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateDnsNamespaceProperties) *PrivateDnsNamespaceProperties {
		return &v
	}).(PrivateDnsNamespacePropertiesPtrOutput)
}

func (o PrivateDnsNamespacePropertiesOutput) DnsProperties() PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput {
	return o.ApplyT(func(v PrivateDnsNamespaceProperties) *PrivateDnsNamespacePrivateDnsPropertiesMutable {
		return v.DnsProperties
	}).(PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput)
}

type PrivateDnsNamespacePropertiesPtrOutput struct{ *pulumi.OutputState }

func (PrivateDnsNamespacePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNamespaceProperties)(nil)).Elem()
}

func (o PrivateDnsNamespacePropertiesPtrOutput) ToPrivateDnsNamespacePropertiesPtrOutput() PrivateDnsNamespacePropertiesPtrOutput {
	return o
}

func (o PrivateDnsNamespacePropertiesPtrOutput) ToPrivateDnsNamespacePropertiesPtrOutputWithContext(ctx context.Context) PrivateDnsNamespacePropertiesPtrOutput {
	return o
}

func (o PrivateDnsNamespacePropertiesPtrOutput) Elem() PrivateDnsNamespacePropertiesOutput {
	return o.ApplyT(func(v *PrivateDnsNamespaceProperties) PrivateDnsNamespaceProperties {
		if v != nil {
			return *v
		}
		var ret PrivateDnsNamespaceProperties
		return ret
	}).(PrivateDnsNamespacePropertiesOutput)
}

func (o PrivateDnsNamespacePropertiesPtrOutput) DnsProperties() PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput {
	return o.ApplyT(func(v *PrivateDnsNamespaceProperties) *PrivateDnsNamespacePrivateDnsPropertiesMutable {
		if v == nil {
			return nil
		}
		return v.DnsProperties
	}).(PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput)
}

type PrivateDnsNamespaceSOA struct {
	TTL *float64 `pulumi:"tTL"`
}

// PrivateDnsNamespaceSOAInput is an input type that accepts PrivateDnsNamespaceSOAArgs and PrivateDnsNamespaceSOAOutput values.
// You can construct a concrete instance of `PrivateDnsNamespaceSOAInput` via:
//
//          PrivateDnsNamespaceSOAArgs{...}
type PrivateDnsNamespaceSOAInput interface {
	pulumi.Input

	ToPrivateDnsNamespaceSOAOutput() PrivateDnsNamespaceSOAOutput
	ToPrivateDnsNamespaceSOAOutputWithContext(context.Context) PrivateDnsNamespaceSOAOutput
}

type PrivateDnsNamespaceSOAArgs struct {
	TTL pulumi.Float64PtrInput `pulumi:"tTL"`
}

func (PrivateDnsNamespaceSOAArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNamespaceSOA)(nil)).Elem()
}

func (i PrivateDnsNamespaceSOAArgs) ToPrivateDnsNamespaceSOAOutput() PrivateDnsNamespaceSOAOutput {
	return i.ToPrivateDnsNamespaceSOAOutputWithContext(context.Background())
}

func (i PrivateDnsNamespaceSOAArgs) ToPrivateDnsNamespaceSOAOutputWithContext(ctx context.Context) PrivateDnsNamespaceSOAOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespaceSOAOutput)
}

func (i PrivateDnsNamespaceSOAArgs) ToPrivateDnsNamespaceSOAPtrOutput() PrivateDnsNamespaceSOAPtrOutput {
	return i.ToPrivateDnsNamespaceSOAPtrOutputWithContext(context.Background())
}

func (i PrivateDnsNamespaceSOAArgs) ToPrivateDnsNamespaceSOAPtrOutputWithContext(ctx context.Context) PrivateDnsNamespaceSOAPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespaceSOAOutput).ToPrivateDnsNamespaceSOAPtrOutputWithContext(ctx)
}

// PrivateDnsNamespaceSOAPtrInput is an input type that accepts PrivateDnsNamespaceSOAArgs, PrivateDnsNamespaceSOAPtr and PrivateDnsNamespaceSOAPtrOutput values.
// You can construct a concrete instance of `PrivateDnsNamespaceSOAPtrInput` via:
//
//          PrivateDnsNamespaceSOAArgs{...}
//
//  or:
//
//          nil
type PrivateDnsNamespaceSOAPtrInput interface {
	pulumi.Input

	ToPrivateDnsNamespaceSOAPtrOutput() PrivateDnsNamespaceSOAPtrOutput
	ToPrivateDnsNamespaceSOAPtrOutputWithContext(context.Context) PrivateDnsNamespaceSOAPtrOutput
}

type privateDnsNamespaceSOAPtrType PrivateDnsNamespaceSOAArgs

func PrivateDnsNamespaceSOAPtr(v *PrivateDnsNamespaceSOAArgs) PrivateDnsNamespaceSOAPtrInput {
	return (*privateDnsNamespaceSOAPtrType)(v)
}

func (*privateDnsNamespaceSOAPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNamespaceSOA)(nil)).Elem()
}

func (i *privateDnsNamespaceSOAPtrType) ToPrivateDnsNamespaceSOAPtrOutput() PrivateDnsNamespaceSOAPtrOutput {
	return i.ToPrivateDnsNamespaceSOAPtrOutputWithContext(context.Background())
}

func (i *privateDnsNamespaceSOAPtrType) ToPrivateDnsNamespaceSOAPtrOutputWithContext(ctx context.Context) PrivateDnsNamespaceSOAPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespaceSOAPtrOutput)
}

type PrivateDnsNamespaceSOAOutput struct{ *pulumi.OutputState }

func (PrivateDnsNamespaceSOAOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNamespaceSOA)(nil)).Elem()
}

func (o PrivateDnsNamespaceSOAOutput) ToPrivateDnsNamespaceSOAOutput() PrivateDnsNamespaceSOAOutput {
	return o
}

func (o PrivateDnsNamespaceSOAOutput) ToPrivateDnsNamespaceSOAOutputWithContext(ctx context.Context) PrivateDnsNamespaceSOAOutput {
	return o
}

func (o PrivateDnsNamespaceSOAOutput) ToPrivateDnsNamespaceSOAPtrOutput() PrivateDnsNamespaceSOAPtrOutput {
	return o.ToPrivateDnsNamespaceSOAPtrOutputWithContext(context.Background())
}

func (o PrivateDnsNamespaceSOAOutput) ToPrivateDnsNamespaceSOAPtrOutputWithContext(ctx context.Context) PrivateDnsNamespaceSOAPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PrivateDnsNamespaceSOA) *PrivateDnsNamespaceSOA {
		return &v
	}).(PrivateDnsNamespaceSOAPtrOutput)
}

func (o PrivateDnsNamespaceSOAOutput) TTL() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PrivateDnsNamespaceSOA) *float64 { return v.TTL }).(pulumi.Float64PtrOutput)
}

type PrivateDnsNamespaceSOAPtrOutput struct{ *pulumi.OutputState }

func (PrivateDnsNamespaceSOAPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNamespaceSOA)(nil)).Elem()
}

func (o PrivateDnsNamespaceSOAPtrOutput) ToPrivateDnsNamespaceSOAPtrOutput() PrivateDnsNamespaceSOAPtrOutput {
	return o
}

func (o PrivateDnsNamespaceSOAPtrOutput) ToPrivateDnsNamespaceSOAPtrOutputWithContext(ctx context.Context) PrivateDnsNamespaceSOAPtrOutput {
	return o
}

func (o PrivateDnsNamespaceSOAPtrOutput) Elem() PrivateDnsNamespaceSOAOutput {
	return o.ApplyT(func(v *PrivateDnsNamespaceSOA) PrivateDnsNamespaceSOA {
		if v != nil {
			return *v
		}
		var ret PrivateDnsNamespaceSOA
		return ret
	}).(PrivateDnsNamespaceSOAOutput)
}

func (o PrivateDnsNamespaceSOAPtrOutput) TTL() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PrivateDnsNamespaceSOA) *float64 {
		if v == nil {
			return nil
		}
		return v.TTL
	}).(pulumi.Float64PtrOutput)
}

type PrivateDnsNamespaceTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// PrivateDnsNamespaceTagInput is an input type that accepts PrivateDnsNamespaceTagArgs and PrivateDnsNamespaceTagOutput values.
// You can construct a concrete instance of `PrivateDnsNamespaceTagInput` via:
//
//          PrivateDnsNamespaceTagArgs{...}
type PrivateDnsNamespaceTagInput interface {
	pulumi.Input

	ToPrivateDnsNamespaceTagOutput() PrivateDnsNamespaceTagOutput
	ToPrivateDnsNamespaceTagOutputWithContext(context.Context) PrivateDnsNamespaceTagOutput
}

type PrivateDnsNamespaceTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PrivateDnsNamespaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNamespaceTag)(nil)).Elem()
}

func (i PrivateDnsNamespaceTagArgs) ToPrivateDnsNamespaceTagOutput() PrivateDnsNamespaceTagOutput {
	return i.ToPrivateDnsNamespaceTagOutputWithContext(context.Background())
}

func (i PrivateDnsNamespaceTagArgs) ToPrivateDnsNamespaceTagOutputWithContext(ctx context.Context) PrivateDnsNamespaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespaceTagOutput)
}

// PrivateDnsNamespaceTagArrayInput is an input type that accepts PrivateDnsNamespaceTagArray and PrivateDnsNamespaceTagArrayOutput values.
// You can construct a concrete instance of `PrivateDnsNamespaceTagArrayInput` via:
//
//          PrivateDnsNamespaceTagArray{ PrivateDnsNamespaceTagArgs{...} }
type PrivateDnsNamespaceTagArrayInput interface {
	pulumi.Input

	ToPrivateDnsNamespaceTagArrayOutput() PrivateDnsNamespaceTagArrayOutput
	ToPrivateDnsNamespaceTagArrayOutputWithContext(context.Context) PrivateDnsNamespaceTagArrayOutput
}

type PrivateDnsNamespaceTagArray []PrivateDnsNamespaceTagInput

func (PrivateDnsNamespaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateDnsNamespaceTag)(nil)).Elem()
}

func (i PrivateDnsNamespaceTagArray) ToPrivateDnsNamespaceTagArrayOutput() PrivateDnsNamespaceTagArrayOutput {
	return i.ToPrivateDnsNamespaceTagArrayOutputWithContext(context.Background())
}

func (i PrivateDnsNamespaceTagArray) ToPrivateDnsNamespaceTagArrayOutputWithContext(ctx context.Context) PrivateDnsNamespaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespaceTagArrayOutput)
}

type PrivateDnsNamespaceTagOutput struct{ *pulumi.OutputState }

func (PrivateDnsNamespaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PrivateDnsNamespaceTag)(nil)).Elem()
}

func (o PrivateDnsNamespaceTagOutput) ToPrivateDnsNamespaceTagOutput() PrivateDnsNamespaceTagOutput {
	return o
}

func (o PrivateDnsNamespaceTagOutput) ToPrivateDnsNamespaceTagOutputWithContext(ctx context.Context) PrivateDnsNamespaceTagOutput {
	return o
}

func (o PrivateDnsNamespaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateDnsNamespaceTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o PrivateDnsNamespaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PrivateDnsNamespaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type PrivateDnsNamespaceTagArrayOutput struct{ *pulumi.OutputState }

func (PrivateDnsNamespaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PrivateDnsNamespaceTag)(nil)).Elem()
}

func (o PrivateDnsNamespaceTagArrayOutput) ToPrivateDnsNamespaceTagArrayOutput() PrivateDnsNamespaceTagArrayOutput {
	return o
}

func (o PrivateDnsNamespaceTagArrayOutput) ToPrivateDnsNamespaceTagArrayOutputWithContext(ctx context.Context) PrivateDnsNamespaceTagArrayOutput {
	return o
}

func (o PrivateDnsNamespaceTagArrayOutput) Index(i pulumi.IntInput) PrivateDnsNamespaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PrivateDnsNamespaceTag {
		return vs[0].([]PrivateDnsNamespaceTag)[vs[1].(int)]
	}).(PrivateDnsNamespaceTagOutput)
}

type PublicDnsNamespaceProperties struct {
	DnsProperties *PublicDnsNamespacePublicDnsPropertiesMutable `pulumi:"dnsProperties"`
}

// PublicDnsNamespacePropertiesInput is an input type that accepts PublicDnsNamespacePropertiesArgs and PublicDnsNamespacePropertiesOutput values.
// You can construct a concrete instance of `PublicDnsNamespacePropertiesInput` via:
//
//          PublicDnsNamespacePropertiesArgs{...}
type PublicDnsNamespacePropertiesInput interface {
	pulumi.Input

	ToPublicDnsNamespacePropertiesOutput() PublicDnsNamespacePropertiesOutput
	ToPublicDnsNamespacePropertiesOutputWithContext(context.Context) PublicDnsNamespacePropertiesOutput
}

type PublicDnsNamespacePropertiesArgs struct {
	DnsProperties PublicDnsNamespacePublicDnsPropertiesMutablePtrInput `pulumi:"dnsProperties"`
}

func (PublicDnsNamespacePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicDnsNamespaceProperties)(nil)).Elem()
}

func (i PublicDnsNamespacePropertiesArgs) ToPublicDnsNamespacePropertiesOutput() PublicDnsNamespacePropertiesOutput {
	return i.ToPublicDnsNamespacePropertiesOutputWithContext(context.Background())
}

func (i PublicDnsNamespacePropertiesArgs) ToPublicDnsNamespacePropertiesOutputWithContext(ctx context.Context) PublicDnsNamespacePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDnsNamespacePropertiesOutput)
}

func (i PublicDnsNamespacePropertiesArgs) ToPublicDnsNamespacePropertiesPtrOutput() PublicDnsNamespacePropertiesPtrOutput {
	return i.ToPublicDnsNamespacePropertiesPtrOutputWithContext(context.Background())
}

func (i PublicDnsNamespacePropertiesArgs) ToPublicDnsNamespacePropertiesPtrOutputWithContext(ctx context.Context) PublicDnsNamespacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDnsNamespacePropertiesOutput).ToPublicDnsNamespacePropertiesPtrOutputWithContext(ctx)
}

// PublicDnsNamespacePropertiesPtrInput is an input type that accepts PublicDnsNamespacePropertiesArgs, PublicDnsNamespacePropertiesPtr and PublicDnsNamespacePropertiesPtrOutput values.
// You can construct a concrete instance of `PublicDnsNamespacePropertiesPtrInput` via:
//
//          PublicDnsNamespacePropertiesArgs{...}
//
//  or:
//
//          nil
type PublicDnsNamespacePropertiesPtrInput interface {
	pulumi.Input

	ToPublicDnsNamespacePropertiesPtrOutput() PublicDnsNamespacePropertiesPtrOutput
	ToPublicDnsNamespacePropertiesPtrOutputWithContext(context.Context) PublicDnsNamespacePropertiesPtrOutput
}

type publicDnsNamespacePropertiesPtrType PublicDnsNamespacePropertiesArgs

func PublicDnsNamespacePropertiesPtr(v *PublicDnsNamespacePropertiesArgs) PublicDnsNamespacePropertiesPtrInput {
	return (*publicDnsNamespacePropertiesPtrType)(v)
}

func (*publicDnsNamespacePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicDnsNamespaceProperties)(nil)).Elem()
}

func (i *publicDnsNamespacePropertiesPtrType) ToPublicDnsNamespacePropertiesPtrOutput() PublicDnsNamespacePropertiesPtrOutput {
	return i.ToPublicDnsNamespacePropertiesPtrOutputWithContext(context.Background())
}

func (i *publicDnsNamespacePropertiesPtrType) ToPublicDnsNamespacePropertiesPtrOutputWithContext(ctx context.Context) PublicDnsNamespacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDnsNamespacePropertiesPtrOutput)
}

type PublicDnsNamespacePropertiesOutput struct{ *pulumi.OutputState }

func (PublicDnsNamespacePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicDnsNamespaceProperties)(nil)).Elem()
}

func (o PublicDnsNamespacePropertiesOutput) ToPublicDnsNamespacePropertiesOutput() PublicDnsNamespacePropertiesOutput {
	return o
}

func (o PublicDnsNamespacePropertiesOutput) ToPublicDnsNamespacePropertiesOutputWithContext(ctx context.Context) PublicDnsNamespacePropertiesOutput {
	return o
}

func (o PublicDnsNamespacePropertiesOutput) ToPublicDnsNamespacePropertiesPtrOutput() PublicDnsNamespacePropertiesPtrOutput {
	return o.ToPublicDnsNamespacePropertiesPtrOutputWithContext(context.Background())
}

func (o PublicDnsNamespacePropertiesOutput) ToPublicDnsNamespacePropertiesPtrOutputWithContext(ctx context.Context) PublicDnsNamespacePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicDnsNamespaceProperties) *PublicDnsNamespaceProperties {
		return &v
	}).(PublicDnsNamespacePropertiesPtrOutput)
}

func (o PublicDnsNamespacePropertiesOutput) DnsProperties() PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput {
	return o.ApplyT(func(v PublicDnsNamespaceProperties) *PublicDnsNamespacePublicDnsPropertiesMutable {
		return v.DnsProperties
	}).(PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput)
}

type PublicDnsNamespacePropertiesPtrOutput struct{ *pulumi.OutputState }

func (PublicDnsNamespacePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicDnsNamespaceProperties)(nil)).Elem()
}

func (o PublicDnsNamespacePropertiesPtrOutput) ToPublicDnsNamespacePropertiesPtrOutput() PublicDnsNamespacePropertiesPtrOutput {
	return o
}

func (o PublicDnsNamespacePropertiesPtrOutput) ToPublicDnsNamespacePropertiesPtrOutputWithContext(ctx context.Context) PublicDnsNamespacePropertiesPtrOutput {
	return o
}

func (o PublicDnsNamespacePropertiesPtrOutput) Elem() PublicDnsNamespacePropertiesOutput {
	return o.ApplyT(func(v *PublicDnsNamespaceProperties) PublicDnsNamespaceProperties {
		if v != nil {
			return *v
		}
		var ret PublicDnsNamespaceProperties
		return ret
	}).(PublicDnsNamespacePropertiesOutput)
}

func (o PublicDnsNamespacePropertiesPtrOutput) DnsProperties() PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput {
	return o.ApplyT(func(v *PublicDnsNamespaceProperties) *PublicDnsNamespacePublicDnsPropertiesMutable {
		if v == nil {
			return nil
		}
		return v.DnsProperties
	}).(PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput)
}

type PublicDnsNamespacePublicDnsPropertiesMutable struct {
	SOA *PublicDnsNamespaceSOA `pulumi:"sOA"`
}

// PublicDnsNamespacePublicDnsPropertiesMutableInput is an input type that accepts PublicDnsNamespacePublicDnsPropertiesMutableArgs and PublicDnsNamespacePublicDnsPropertiesMutableOutput values.
// You can construct a concrete instance of `PublicDnsNamespacePublicDnsPropertiesMutableInput` via:
//
//          PublicDnsNamespacePublicDnsPropertiesMutableArgs{...}
type PublicDnsNamespacePublicDnsPropertiesMutableInput interface {
	pulumi.Input

	ToPublicDnsNamespacePublicDnsPropertiesMutableOutput() PublicDnsNamespacePublicDnsPropertiesMutableOutput
	ToPublicDnsNamespacePublicDnsPropertiesMutableOutputWithContext(context.Context) PublicDnsNamespacePublicDnsPropertiesMutableOutput
}

type PublicDnsNamespacePublicDnsPropertiesMutableArgs struct {
	SOA PublicDnsNamespaceSOAPtrInput `pulumi:"sOA"`
}

func (PublicDnsNamespacePublicDnsPropertiesMutableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicDnsNamespacePublicDnsPropertiesMutable)(nil)).Elem()
}

func (i PublicDnsNamespacePublicDnsPropertiesMutableArgs) ToPublicDnsNamespacePublicDnsPropertiesMutableOutput() PublicDnsNamespacePublicDnsPropertiesMutableOutput {
	return i.ToPublicDnsNamespacePublicDnsPropertiesMutableOutputWithContext(context.Background())
}

func (i PublicDnsNamespacePublicDnsPropertiesMutableArgs) ToPublicDnsNamespacePublicDnsPropertiesMutableOutputWithContext(ctx context.Context) PublicDnsNamespacePublicDnsPropertiesMutableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDnsNamespacePublicDnsPropertiesMutableOutput)
}

func (i PublicDnsNamespacePublicDnsPropertiesMutableArgs) ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutput() PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput {
	return i.ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutputWithContext(context.Background())
}

func (i PublicDnsNamespacePublicDnsPropertiesMutableArgs) ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutputWithContext(ctx context.Context) PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDnsNamespacePublicDnsPropertiesMutableOutput).ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutputWithContext(ctx)
}

// PublicDnsNamespacePublicDnsPropertiesMutablePtrInput is an input type that accepts PublicDnsNamespacePublicDnsPropertiesMutableArgs, PublicDnsNamespacePublicDnsPropertiesMutablePtr and PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput values.
// You can construct a concrete instance of `PublicDnsNamespacePublicDnsPropertiesMutablePtrInput` via:
//
//          PublicDnsNamespacePublicDnsPropertiesMutableArgs{...}
//
//  or:
//
//          nil
type PublicDnsNamespacePublicDnsPropertiesMutablePtrInput interface {
	pulumi.Input

	ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutput() PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput
	ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutputWithContext(context.Context) PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput
}

type publicDnsNamespacePublicDnsPropertiesMutablePtrType PublicDnsNamespacePublicDnsPropertiesMutableArgs

func PublicDnsNamespacePublicDnsPropertiesMutablePtr(v *PublicDnsNamespacePublicDnsPropertiesMutableArgs) PublicDnsNamespacePublicDnsPropertiesMutablePtrInput {
	return (*publicDnsNamespacePublicDnsPropertiesMutablePtrType)(v)
}

func (*publicDnsNamespacePublicDnsPropertiesMutablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicDnsNamespacePublicDnsPropertiesMutable)(nil)).Elem()
}

func (i *publicDnsNamespacePublicDnsPropertiesMutablePtrType) ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutput() PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput {
	return i.ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutputWithContext(context.Background())
}

func (i *publicDnsNamespacePublicDnsPropertiesMutablePtrType) ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutputWithContext(ctx context.Context) PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput)
}

type PublicDnsNamespacePublicDnsPropertiesMutableOutput struct{ *pulumi.OutputState }

func (PublicDnsNamespacePublicDnsPropertiesMutableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicDnsNamespacePublicDnsPropertiesMutable)(nil)).Elem()
}

func (o PublicDnsNamespacePublicDnsPropertiesMutableOutput) ToPublicDnsNamespacePublicDnsPropertiesMutableOutput() PublicDnsNamespacePublicDnsPropertiesMutableOutput {
	return o
}

func (o PublicDnsNamespacePublicDnsPropertiesMutableOutput) ToPublicDnsNamespacePublicDnsPropertiesMutableOutputWithContext(ctx context.Context) PublicDnsNamespacePublicDnsPropertiesMutableOutput {
	return o
}

func (o PublicDnsNamespacePublicDnsPropertiesMutableOutput) ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutput() PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput {
	return o.ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutputWithContext(context.Background())
}

func (o PublicDnsNamespacePublicDnsPropertiesMutableOutput) ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutputWithContext(ctx context.Context) PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicDnsNamespacePublicDnsPropertiesMutable) *PublicDnsNamespacePublicDnsPropertiesMutable {
		return &v
	}).(PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput)
}

func (o PublicDnsNamespacePublicDnsPropertiesMutableOutput) SOA() PublicDnsNamespaceSOAPtrOutput {
	return o.ApplyT(func(v PublicDnsNamespacePublicDnsPropertiesMutable) *PublicDnsNamespaceSOA { return v.SOA }).(PublicDnsNamespaceSOAPtrOutput)
}

type PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput struct{ *pulumi.OutputState }

func (PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicDnsNamespacePublicDnsPropertiesMutable)(nil)).Elem()
}

func (o PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput) ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutput() PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput {
	return o
}

func (o PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput) ToPublicDnsNamespacePublicDnsPropertiesMutablePtrOutputWithContext(ctx context.Context) PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput {
	return o
}

func (o PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput) Elem() PublicDnsNamespacePublicDnsPropertiesMutableOutput {
	return o.ApplyT(func(v *PublicDnsNamespacePublicDnsPropertiesMutable) PublicDnsNamespacePublicDnsPropertiesMutable {
		if v != nil {
			return *v
		}
		var ret PublicDnsNamespacePublicDnsPropertiesMutable
		return ret
	}).(PublicDnsNamespacePublicDnsPropertiesMutableOutput)
}

func (o PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput) SOA() PublicDnsNamespaceSOAPtrOutput {
	return o.ApplyT(func(v *PublicDnsNamespacePublicDnsPropertiesMutable) *PublicDnsNamespaceSOA {
		if v == nil {
			return nil
		}
		return v.SOA
	}).(PublicDnsNamespaceSOAPtrOutput)
}

type PublicDnsNamespaceSOA struct {
	TTL *float64 `pulumi:"tTL"`
}

// PublicDnsNamespaceSOAInput is an input type that accepts PublicDnsNamespaceSOAArgs and PublicDnsNamespaceSOAOutput values.
// You can construct a concrete instance of `PublicDnsNamespaceSOAInput` via:
//
//          PublicDnsNamespaceSOAArgs{...}
type PublicDnsNamespaceSOAInput interface {
	pulumi.Input

	ToPublicDnsNamespaceSOAOutput() PublicDnsNamespaceSOAOutput
	ToPublicDnsNamespaceSOAOutputWithContext(context.Context) PublicDnsNamespaceSOAOutput
}

type PublicDnsNamespaceSOAArgs struct {
	TTL pulumi.Float64PtrInput `pulumi:"tTL"`
}

func (PublicDnsNamespaceSOAArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicDnsNamespaceSOA)(nil)).Elem()
}

func (i PublicDnsNamespaceSOAArgs) ToPublicDnsNamespaceSOAOutput() PublicDnsNamespaceSOAOutput {
	return i.ToPublicDnsNamespaceSOAOutputWithContext(context.Background())
}

func (i PublicDnsNamespaceSOAArgs) ToPublicDnsNamespaceSOAOutputWithContext(ctx context.Context) PublicDnsNamespaceSOAOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDnsNamespaceSOAOutput)
}

func (i PublicDnsNamespaceSOAArgs) ToPublicDnsNamespaceSOAPtrOutput() PublicDnsNamespaceSOAPtrOutput {
	return i.ToPublicDnsNamespaceSOAPtrOutputWithContext(context.Background())
}

func (i PublicDnsNamespaceSOAArgs) ToPublicDnsNamespaceSOAPtrOutputWithContext(ctx context.Context) PublicDnsNamespaceSOAPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDnsNamespaceSOAOutput).ToPublicDnsNamespaceSOAPtrOutputWithContext(ctx)
}

// PublicDnsNamespaceSOAPtrInput is an input type that accepts PublicDnsNamespaceSOAArgs, PublicDnsNamespaceSOAPtr and PublicDnsNamespaceSOAPtrOutput values.
// You can construct a concrete instance of `PublicDnsNamespaceSOAPtrInput` via:
//
//          PublicDnsNamespaceSOAArgs{...}
//
//  or:
//
//          nil
type PublicDnsNamespaceSOAPtrInput interface {
	pulumi.Input

	ToPublicDnsNamespaceSOAPtrOutput() PublicDnsNamespaceSOAPtrOutput
	ToPublicDnsNamespaceSOAPtrOutputWithContext(context.Context) PublicDnsNamespaceSOAPtrOutput
}

type publicDnsNamespaceSOAPtrType PublicDnsNamespaceSOAArgs

func PublicDnsNamespaceSOAPtr(v *PublicDnsNamespaceSOAArgs) PublicDnsNamespaceSOAPtrInput {
	return (*publicDnsNamespaceSOAPtrType)(v)
}

func (*publicDnsNamespaceSOAPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicDnsNamespaceSOA)(nil)).Elem()
}

func (i *publicDnsNamespaceSOAPtrType) ToPublicDnsNamespaceSOAPtrOutput() PublicDnsNamespaceSOAPtrOutput {
	return i.ToPublicDnsNamespaceSOAPtrOutputWithContext(context.Background())
}

func (i *publicDnsNamespaceSOAPtrType) ToPublicDnsNamespaceSOAPtrOutputWithContext(ctx context.Context) PublicDnsNamespaceSOAPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDnsNamespaceSOAPtrOutput)
}

type PublicDnsNamespaceSOAOutput struct{ *pulumi.OutputState }

func (PublicDnsNamespaceSOAOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicDnsNamespaceSOA)(nil)).Elem()
}

func (o PublicDnsNamespaceSOAOutput) ToPublicDnsNamespaceSOAOutput() PublicDnsNamespaceSOAOutput {
	return o
}

func (o PublicDnsNamespaceSOAOutput) ToPublicDnsNamespaceSOAOutputWithContext(ctx context.Context) PublicDnsNamespaceSOAOutput {
	return o
}

func (o PublicDnsNamespaceSOAOutput) ToPublicDnsNamespaceSOAPtrOutput() PublicDnsNamespaceSOAPtrOutput {
	return o.ToPublicDnsNamespaceSOAPtrOutputWithContext(context.Background())
}

func (o PublicDnsNamespaceSOAOutput) ToPublicDnsNamespaceSOAPtrOutputWithContext(ctx context.Context) PublicDnsNamespaceSOAPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PublicDnsNamespaceSOA) *PublicDnsNamespaceSOA {
		return &v
	}).(PublicDnsNamespaceSOAPtrOutput)
}

func (o PublicDnsNamespaceSOAOutput) TTL() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PublicDnsNamespaceSOA) *float64 { return v.TTL }).(pulumi.Float64PtrOutput)
}

type PublicDnsNamespaceSOAPtrOutput struct{ *pulumi.OutputState }

func (PublicDnsNamespaceSOAPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PublicDnsNamespaceSOA)(nil)).Elem()
}

func (o PublicDnsNamespaceSOAPtrOutput) ToPublicDnsNamespaceSOAPtrOutput() PublicDnsNamespaceSOAPtrOutput {
	return o
}

func (o PublicDnsNamespaceSOAPtrOutput) ToPublicDnsNamespaceSOAPtrOutputWithContext(ctx context.Context) PublicDnsNamespaceSOAPtrOutput {
	return o
}

func (o PublicDnsNamespaceSOAPtrOutput) Elem() PublicDnsNamespaceSOAOutput {
	return o.ApplyT(func(v *PublicDnsNamespaceSOA) PublicDnsNamespaceSOA {
		if v != nil {
			return *v
		}
		var ret PublicDnsNamespaceSOA
		return ret
	}).(PublicDnsNamespaceSOAOutput)
}

func (o PublicDnsNamespaceSOAPtrOutput) TTL() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *PublicDnsNamespaceSOA) *float64 {
		if v == nil {
			return nil
		}
		return v.TTL
	}).(pulumi.Float64PtrOutput)
}

type PublicDnsNamespaceTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// PublicDnsNamespaceTagInput is an input type that accepts PublicDnsNamespaceTagArgs and PublicDnsNamespaceTagOutput values.
// You can construct a concrete instance of `PublicDnsNamespaceTagInput` via:
//
//          PublicDnsNamespaceTagArgs{...}
type PublicDnsNamespaceTagInput interface {
	pulumi.Input

	ToPublicDnsNamespaceTagOutput() PublicDnsNamespaceTagOutput
	ToPublicDnsNamespaceTagOutputWithContext(context.Context) PublicDnsNamespaceTagOutput
}

type PublicDnsNamespaceTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PublicDnsNamespaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicDnsNamespaceTag)(nil)).Elem()
}

func (i PublicDnsNamespaceTagArgs) ToPublicDnsNamespaceTagOutput() PublicDnsNamespaceTagOutput {
	return i.ToPublicDnsNamespaceTagOutputWithContext(context.Background())
}

func (i PublicDnsNamespaceTagArgs) ToPublicDnsNamespaceTagOutputWithContext(ctx context.Context) PublicDnsNamespaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDnsNamespaceTagOutput)
}

// PublicDnsNamespaceTagArrayInput is an input type that accepts PublicDnsNamespaceTagArray and PublicDnsNamespaceTagArrayOutput values.
// You can construct a concrete instance of `PublicDnsNamespaceTagArrayInput` via:
//
//          PublicDnsNamespaceTagArray{ PublicDnsNamespaceTagArgs{...} }
type PublicDnsNamespaceTagArrayInput interface {
	pulumi.Input

	ToPublicDnsNamespaceTagArrayOutput() PublicDnsNamespaceTagArrayOutput
	ToPublicDnsNamespaceTagArrayOutputWithContext(context.Context) PublicDnsNamespaceTagArrayOutput
}

type PublicDnsNamespaceTagArray []PublicDnsNamespaceTagInput

func (PublicDnsNamespaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicDnsNamespaceTag)(nil)).Elem()
}

func (i PublicDnsNamespaceTagArray) ToPublicDnsNamespaceTagArrayOutput() PublicDnsNamespaceTagArrayOutput {
	return i.ToPublicDnsNamespaceTagArrayOutputWithContext(context.Background())
}

func (i PublicDnsNamespaceTagArray) ToPublicDnsNamespaceTagArrayOutputWithContext(ctx context.Context) PublicDnsNamespaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PublicDnsNamespaceTagArrayOutput)
}

type PublicDnsNamespaceTagOutput struct{ *pulumi.OutputState }

func (PublicDnsNamespaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PublicDnsNamespaceTag)(nil)).Elem()
}

func (o PublicDnsNamespaceTagOutput) ToPublicDnsNamespaceTagOutput() PublicDnsNamespaceTagOutput {
	return o
}

func (o PublicDnsNamespaceTagOutput) ToPublicDnsNamespaceTagOutputWithContext(ctx context.Context) PublicDnsNamespaceTagOutput {
	return o
}

func (o PublicDnsNamespaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PublicDnsNamespaceTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o PublicDnsNamespaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PublicDnsNamespaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type PublicDnsNamespaceTagArrayOutput struct{ *pulumi.OutputState }

func (PublicDnsNamespaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PublicDnsNamespaceTag)(nil)).Elem()
}

func (o PublicDnsNamespaceTagArrayOutput) ToPublicDnsNamespaceTagArrayOutput() PublicDnsNamespaceTagArrayOutput {
	return o
}

func (o PublicDnsNamespaceTagArrayOutput) ToPublicDnsNamespaceTagArrayOutputWithContext(ctx context.Context) PublicDnsNamespaceTagArrayOutput {
	return o
}

func (o PublicDnsNamespaceTagArrayOutput) Index(i pulumi.IntInput) PublicDnsNamespaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PublicDnsNamespaceTag {
		return vs[0].([]PublicDnsNamespaceTag)[vs[1].(int)]
	}).(PublicDnsNamespaceTagOutput)
}

type ServiceDnsConfig struct {
	DnsRecords    []ServiceDnsRecord `pulumi:"dnsRecords"`
	NamespaceId   *string            `pulumi:"namespaceId"`
	RoutingPolicy *string            `pulumi:"routingPolicy"`
}

// ServiceDnsConfigInput is an input type that accepts ServiceDnsConfigArgs and ServiceDnsConfigOutput values.
// You can construct a concrete instance of `ServiceDnsConfigInput` via:
//
//          ServiceDnsConfigArgs{...}
type ServiceDnsConfigInput interface {
	pulumi.Input

	ToServiceDnsConfigOutput() ServiceDnsConfigOutput
	ToServiceDnsConfigOutputWithContext(context.Context) ServiceDnsConfigOutput
}

type ServiceDnsConfigArgs struct {
	DnsRecords    ServiceDnsRecordArrayInput `pulumi:"dnsRecords"`
	NamespaceId   pulumi.StringPtrInput      `pulumi:"namespaceId"`
	RoutingPolicy pulumi.StringPtrInput      `pulumi:"routingPolicy"`
}

func (ServiceDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDnsConfig)(nil)).Elem()
}

func (i ServiceDnsConfigArgs) ToServiceDnsConfigOutput() ServiceDnsConfigOutput {
	return i.ToServiceDnsConfigOutputWithContext(context.Background())
}

func (i ServiceDnsConfigArgs) ToServiceDnsConfigOutputWithContext(ctx context.Context) ServiceDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigOutput)
}

func (i ServiceDnsConfigArgs) ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput {
	return i.ToServiceDnsConfigPtrOutputWithContext(context.Background())
}

func (i ServiceDnsConfigArgs) ToServiceDnsConfigPtrOutputWithContext(ctx context.Context) ServiceDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigOutput).ToServiceDnsConfigPtrOutputWithContext(ctx)
}

// ServiceDnsConfigPtrInput is an input type that accepts ServiceDnsConfigArgs, ServiceDnsConfigPtr and ServiceDnsConfigPtrOutput values.
// You can construct a concrete instance of `ServiceDnsConfigPtrInput` via:
//
//          ServiceDnsConfigArgs{...}
//
//  or:
//
//          nil
type ServiceDnsConfigPtrInput interface {
	pulumi.Input

	ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput
	ToServiceDnsConfigPtrOutputWithContext(context.Context) ServiceDnsConfigPtrOutput
}

type serviceDnsConfigPtrType ServiceDnsConfigArgs

func ServiceDnsConfigPtr(v *ServiceDnsConfigArgs) ServiceDnsConfigPtrInput {
	return (*serviceDnsConfigPtrType)(v)
}

func (*serviceDnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDnsConfig)(nil)).Elem()
}

func (i *serviceDnsConfigPtrType) ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput {
	return i.ToServiceDnsConfigPtrOutputWithContext(context.Background())
}

func (i *serviceDnsConfigPtrType) ToServiceDnsConfigPtrOutputWithContext(ctx context.Context) ServiceDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigPtrOutput)
}

type ServiceDnsConfigOutput struct{ *pulumi.OutputState }

func (ServiceDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDnsConfig)(nil)).Elem()
}

func (o ServiceDnsConfigOutput) ToServiceDnsConfigOutput() ServiceDnsConfigOutput {
	return o
}

func (o ServiceDnsConfigOutput) ToServiceDnsConfigOutputWithContext(ctx context.Context) ServiceDnsConfigOutput {
	return o
}

func (o ServiceDnsConfigOutput) ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput {
	return o.ToServiceDnsConfigPtrOutputWithContext(context.Background())
}

func (o ServiceDnsConfigOutput) ToServiceDnsConfigPtrOutputWithContext(ctx context.Context) ServiceDnsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDnsConfig) *ServiceDnsConfig {
		return &v
	}).(ServiceDnsConfigPtrOutput)
}

func (o ServiceDnsConfigOutput) DnsRecords() ServiceDnsRecordArrayOutput {
	return o.ApplyT(func(v ServiceDnsConfig) []ServiceDnsRecord { return v.DnsRecords }).(ServiceDnsRecordArrayOutput)
}

func (o ServiceDnsConfigOutput) NamespaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDnsConfig) *string { return v.NamespaceId }).(pulumi.StringPtrOutput)
}

func (o ServiceDnsConfigOutput) RoutingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDnsConfig) *string { return v.RoutingPolicy }).(pulumi.StringPtrOutput)
}

type ServiceDnsConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceDnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDnsConfig)(nil)).Elem()
}

func (o ServiceDnsConfigPtrOutput) ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput {
	return o
}

func (o ServiceDnsConfigPtrOutput) ToServiceDnsConfigPtrOutputWithContext(ctx context.Context) ServiceDnsConfigPtrOutput {
	return o
}

func (o ServiceDnsConfigPtrOutput) Elem() ServiceDnsConfigOutput {
	return o.ApplyT(func(v *ServiceDnsConfig) ServiceDnsConfig {
		if v != nil {
			return *v
		}
		var ret ServiceDnsConfig
		return ret
	}).(ServiceDnsConfigOutput)
}

func (o ServiceDnsConfigPtrOutput) DnsRecords() ServiceDnsRecordArrayOutput {
	return o.ApplyT(func(v *ServiceDnsConfig) []ServiceDnsRecord {
		if v == nil {
			return nil
		}
		return v.DnsRecords
	}).(ServiceDnsRecordArrayOutput)
}

func (o ServiceDnsConfigPtrOutput) NamespaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDnsConfig) *string {
		if v == nil {
			return nil
		}
		return v.NamespaceId
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDnsConfigPtrOutput) RoutingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDnsConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoutingPolicy
	}).(pulumi.StringPtrOutput)
}

type ServiceDnsRecord struct {
	TTL  float64 `pulumi:"tTL"`
	Type string  `pulumi:"type"`
}

// ServiceDnsRecordInput is an input type that accepts ServiceDnsRecordArgs and ServiceDnsRecordOutput values.
// You can construct a concrete instance of `ServiceDnsRecordInput` via:
//
//          ServiceDnsRecordArgs{...}
type ServiceDnsRecordInput interface {
	pulumi.Input

	ToServiceDnsRecordOutput() ServiceDnsRecordOutput
	ToServiceDnsRecordOutputWithContext(context.Context) ServiceDnsRecordOutput
}

type ServiceDnsRecordArgs struct {
	TTL  pulumi.Float64Input `pulumi:"tTL"`
	Type pulumi.StringInput  `pulumi:"type"`
}

func (ServiceDnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDnsRecord)(nil)).Elem()
}

func (i ServiceDnsRecordArgs) ToServiceDnsRecordOutput() ServiceDnsRecordOutput {
	return i.ToServiceDnsRecordOutputWithContext(context.Background())
}

func (i ServiceDnsRecordArgs) ToServiceDnsRecordOutputWithContext(ctx context.Context) ServiceDnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsRecordOutput)
}

// ServiceDnsRecordArrayInput is an input type that accepts ServiceDnsRecordArray and ServiceDnsRecordArrayOutput values.
// You can construct a concrete instance of `ServiceDnsRecordArrayInput` via:
//
//          ServiceDnsRecordArray{ ServiceDnsRecordArgs{...} }
type ServiceDnsRecordArrayInput interface {
	pulumi.Input

	ToServiceDnsRecordArrayOutput() ServiceDnsRecordArrayOutput
	ToServiceDnsRecordArrayOutputWithContext(context.Context) ServiceDnsRecordArrayOutput
}

type ServiceDnsRecordArray []ServiceDnsRecordInput

func (ServiceDnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDnsRecord)(nil)).Elem()
}

func (i ServiceDnsRecordArray) ToServiceDnsRecordArrayOutput() ServiceDnsRecordArrayOutput {
	return i.ToServiceDnsRecordArrayOutputWithContext(context.Background())
}

func (i ServiceDnsRecordArray) ToServiceDnsRecordArrayOutputWithContext(ctx context.Context) ServiceDnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsRecordArrayOutput)
}

type ServiceDnsRecordOutput struct{ *pulumi.OutputState }

func (ServiceDnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDnsRecord)(nil)).Elem()
}

func (o ServiceDnsRecordOutput) ToServiceDnsRecordOutput() ServiceDnsRecordOutput {
	return o
}

func (o ServiceDnsRecordOutput) ToServiceDnsRecordOutputWithContext(ctx context.Context) ServiceDnsRecordOutput {
	return o
}

func (o ServiceDnsRecordOutput) TTL() pulumi.Float64Output {
	return o.ApplyT(func(v ServiceDnsRecord) float64 { return v.TTL }).(pulumi.Float64Output)
}

func (o ServiceDnsRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDnsRecord) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceDnsRecordArrayOutput struct{ *pulumi.OutputState }

func (ServiceDnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDnsRecord)(nil)).Elem()
}

func (o ServiceDnsRecordArrayOutput) ToServiceDnsRecordArrayOutput() ServiceDnsRecordArrayOutput {
	return o
}

func (o ServiceDnsRecordArrayOutput) ToServiceDnsRecordArrayOutputWithContext(ctx context.Context) ServiceDnsRecordArrayOutput {
	return o
}

func (o ServiceDnsRecordArrayOutput) Index(i pulumi.IntInput) ServiceDnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDnsRecord {
		return vs[0].([]ServiceDnsRecord)[vs[1].(int)]
	}).(ServiceDnsRecordOutput)
}

type ServiceHealthCheckConfig struct {
	FailureThreshold *float64 `pulumi:"failureThreshold"`
	ResourcePath     *string  `pulumi:"resourcePath"`
	Type             string   `pulumi:"type"`
}

// ServiceHealthCheckConfigInput is an input type that accepts ServiceHealthCheckConfigArgs and ServiceHealthCheckConfigOutput values.
// You can construct a concrete instance of `ServiceHealthCheckConfigInput` via:
//
//          ServiceHealthCheckConfigArgs{...}
type ServiceHealthCheckConfigInput interface {
	pulumi.Input

	ToServiceHealthCheckConfigOutput() ServiceHealthCheckConfigOutput
	ToServiceHealthCheckConfigOutputWithContext(context.Context) ServiceHealthCheckConfigOutput
}

type ServiceHealthCheckConfigArgs struct {
	FailureThreshold pulumi.Float64PtrInput `pulumi:"failureThreshold"`
	ResourcePath     pulumi.StringPtrInput  `pulumi:"resourcePath"`
	Type             pulumi.StringInput     `pulumi:"type"`
}

func (ServiceHealthCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHealthCheckConfig)(nil)).Elem()
}

func (i ServiceHealthCheckConfigArgs) ToServiceHealthCheckConfigOutput() ServiceHealthCheckConfigOutput {
	return i.ToServiceHealthCheckConfigOutputWithContext(context.Background())
}

func (i ServiceHealthCheckConfigArgs) ToServiceHealthCheckConfigOutputWithContext(ctx context.Context) ServiceHealthCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckConfigOutput)
}

func (i ServiceHealthCheckConfigArgs) ToServiceHealthCheckConfigPtrOutput() ServiceHealthCheckConfigPtrOutput {
	return i.ToServiceHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i ServiceHealthCheckConfigArgs) ToServiceHealthCheckConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckConfigOutput).ToServiceHealthCheckConfigPtrOutputWithContext(ctx)
}

// ServiceHealthCheckConfigPtrInput is an input type that accepts ServiceHealthCheckConfigArgs, ServiceHealthCheckConfigPtr and ServiceHealthCheckConfigPtrOutput values.
// You can construct a concrete instance of `ServiceHealthCheckConfigPtrInput` via:
//
//          ServiceHealthCheckConfigArgs{...}
//
//  or:
//
//          nil
type ServiceHealthCheckConfigPtrInput interface {
	pulumi.Input

	ToServiceHealthCheckConfigPtrOutput() ServiceHealthCheckConfigPtrOutput
	ToServiceHealthCheckConfigPtrOutputWithContext(context.Context) ServiceHealthCheckConfigPtrOutput
}

type serviceHealthCheckConfigPtrType ServiceHealthCheckConfigArgs

func ServiceHealthCheckConfigPtr(v *ServiceHealthCheckConfigArgs) ServiceHealthCheckConfigPtrInput {
	return (*serviceHealthCheckConfigPtrType)(v)
}

func (*serviceHealthCheckConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHealthCheckConfig)(nil)).Elem()
}

func (i *serviceHealthCheckConfigPtrType) ToServiceHealthCheckConfigPtrOutput() ServiceHealthCheckConfigPtrOutput {
	return i.ToServiceHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i *serviceHealthCheckConfigPtrType) ToServiceHealthCheckConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckConfigPtrOutput)
}

type ServiceHealthCheckConfigOutput struct{ *pulumi.OutputState }

func (ServiceHealthCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHealthCheckConfig)(nil)).Elem()
}

func (o ServiceHealthCheckConfigOutput) ToServiceHealthCheckConfigOutput() ServiceHealthCheckConfigOutput {
	return o
}

func (o ServiceHealthCheckConfigOutput) ToServiceHealthCheckConfigOutputWithContext(ctx context.Context) ServiceHealthCheckConfigOutput {
	return o
}

func (o ServiceHealthCheckConfigOutput) ToServiceHealthCheckConfigPtrOutput() ServiceHealthCheckConfigPtrOutput {
	return o.ToServiceHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (o ServiceHealthCheckConfigOutput) ToServiceHealthCheckConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceHealthCheckConfig) *ServiceHealthCheckConfig {
		return &v
	}).(ServiceHealthCheckConfigPtrOutput)
}

func (o ServiceHealthCheckConfigOutput) FailureThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckConfig) *float64 { return v.FailureThreshold }).(pulumi.Float64PtrOutput)
}

func (o ServiceHealthCheckConfigOutput) ResourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckConfig) *string { return v.ResourcePath }).(pulumi.StringPtrOutput)
}

func (o ServiceHealthCheckConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHealthCheckConfig) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceHealthCheckConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceHealthCheckConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHealthCheckConfig)(nil)).Elem()
}

func (o ServiceHealthCheckConfigPtrOutput) ToServiceHealthCheckConfigPtrOutput() ServiceHealthCheckConfigPtrOutput {
	return o
}

func (o ServiceHealthCheckConfigPtrOutput) ToServiceHealthCheckConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckConfigPtrOutput {
	return o
}

func (o ServiceHealthCheckConfigPtrOutput) Elem() ServiceHealthCheckConfigOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfig) ServiceHealthCheckConfig {
		if v != nil {
			return *v
		}
		var ret ServiceHealthCheckConfig
		return ret
	}).(ServiceHealthCheckConfigOutput)
}

func (o ServiceHealthCheckConfigPtrOutput) FailureThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.Float64PtrOutput)
}

func (o ServiceHealthCheckConfigPtrOutput) ResourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.ResourcePath
	}).(pulumi.StringPtrOutput)
}

func (o ServiceHealthCheckConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ServiceHealthCheckCustomConfig struct {
	FailureThreshold *float64 `pulumi:"failureThreshold"`
}

// ServiceHealthCheckCustomConfigInput is an input type that accepts ServiceHealthCheckCustomConfigArgs and ServiceHealthCheckCustomConfigOutput values.
// You can construct a concrete instance of `ServiceHealthCheckCustomConfigInput` via:
//
//          ServiceHealthCheckCustomConfigArgs{...}
type ServiceHealthCheckCustomConfigInput interface {
	pulumi.Input

	ToServiceHealthCheckCustomConfigOutput() ServiceHealthCheckCustomConfigOutput
	ToServiceHealthCheckCustomConfigOutputWithContext(context.Context) ServiceHealthCheckCustomConfigOutput
}

type ServiceHealthCheckCustomConfigArgs struct {
	FailureThreshold pulumi.Float64PtrInput `pulumi:"failureThreshold"`
}

func (ServiceHealthCheckCustomConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHealthCheckCustomConfig)(nil)).Elem()
}

func (i ServiceHealthCheckCustomConfigArgs) ToServiceHealthCheckCustomConfigOutput() ServiceHealthCheckCustomConfigOutput {
	return i.ToServiceHealthCheckCustomConfigOutputWithContext(context.Background())
}

func (i ServiceHealthCheckCustomConfigArgs) ToServiceHealthCheckCustomConfigOutputWithContext(ctx context.Context) ServiceHealthCheckCustomConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckCustomConfigOutput)
}

func (i ServiceHealthCheckCustomConfigArgs) ToServiceHealthCheckCustomConfigPtrOutput() ServiceHealthCheckCustomConfigPtrOutput {
	return i.ToServiceHealthCheckCustomConfigPtrOutputWithContext(context.Background())
}

func (i ServiceHealthCheckCustomConfigArgs) ToServiceHealthCheckCustomConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckCustomConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckCustomConfigOutput).ToServiceHealthCheckCustomConfigPtrOutputWithContext(ctx)
}

// ServiceHealthCheckCustomConfigPtrInput is an input type that accepts ServiceHealthCheckCustomConfigArgs, ServiceHealthCheckCustomConfigPtr and ServiceHealthCheckCustomConfigPtrOutput values.
// You can construct a concrete instance of `ServiceHealthCheckCustomConfigPtrInput` via:
//
//          ServiceHealthCheckCustomConfigArgs{...}
//
//  or:
//
//          nil
type ServiceHealthCheckCustomConfigPtrInput interface {
	pulumi.Input

	ToServiceHealthCheckCustomConfigPtrOutput() ServiceHealthCheckCustomConfigPtrOutput
	ToServiceHealthCheckCustomConfigPtrOutputWithContext(context.Context) ServiceHealthCheckCustomConfigPtrOutput
}

type serviceHealthCheckCustomConfigPtrType ServiceHealthCheckCustomConfigArgs

func ServiceHealthCheckCustomConfigPtr(v *ServiceHealthCheckCustomConfigArgs) ServiceHealthCheckCustomConfigPtrInput {
	return (*serviceHealthCheckCustomConfigPtrType)(v)
}

func (*serviceHealthCheckCustomConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHealthCheckCustomConfig)(nil)).Elem()
}

func (i *serviceHealthCheckCustomConfigPtrType) ToServiceHealthCheckCustomConfigPtrOutput() ServiceHealthCheckCustomConfigPtrOutput {
	return i.ToServiceHealthCheckCustomConfigPtrOutputWithContext(context.Background())
}

func (i *serviceHealthCheckCustomConfigPtrType) ToServiceHealthCheckCustomConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckCustomConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckCustomConfigPtrOutput)
}

type ServiceHealthCheckCustomConfigOutput struct{ *pulumi.OutputState }

func (ServiceHealthCheckCustomConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHealthCheckCustomConfig)(nil)).Elem()
}

func (o ServiceHealthCheckCustomConfigOutput) ToServiceHealthCheckCustomConfigOutput() ServiceHealthCheckCustomConfigOutput {
	return o
}

func (o ServiceHealthCheckCustomConfigOutput) ToServiceHealthCheckCustomConfigOutputWithContext(ctx context.Context) ServiceHealthCheckCustomConfigOutput {
	return o
}

func (o ServiceHealthCheckCustomConfigOutput) ToServiceHealthCheckCustomConfigPtrOutput() ServiceHealthCheckCustomConfigPtrOutput {
	return o.ToServiceHealthCheckCustomConfigPtrOutputWithContext(context.Background())
}

func (o ServiceHealthCheckCustomConfigOutput) ToServiceHealthCheckCustomConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckCustomConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceHealthCheckCustomConfig) *ServiceHealthCheckCustomConfig {
		return &v
	}).(ServiceHealthCheckCustomConfigPtrOutput)
}

func (o ServiceHealthCheckCustomConfigOutput) FailureThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckCustomConfig) *float64 { return v.FailureThreshold }).(pulumi.Float64PtrOutput)
}

type ServiceHealthCheckCustomConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceHealthCheckCustomConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHealthCheckCustomConfig)(nil)).Elem()
}

func (o ServiceHealthCheckCustomConfigPtrOutput) ToServiceHealthCheckCustomConfigPtrOutput() ServiceHealthCheckCustomConfigPtrOutput {
	return o
}

func (o ServiceHealthCheckCustomConfigPtrOutput) ToServiceHealthCheckCustomConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckCustomConfigPtrOutput {
	return o
}

func (o ServiceHealthCheckCustomConfigPtrOutput) Elem() ServiceHealthCheckCustomConfigOutput {
	return o.ApplyT(func(v *ServiceHealthCheckCustomConfig) ServiceHealthCheckCustomConfig {
		if v != nil {
			return *v
		}
		var ret ServiceHealthCheckCustomConfig
		return ret
	}).(ServiceHealthCheckCustomConfigOutput)
}

func (o ServiceHealthCheckCustomConfigPtrOutput) FailureThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckCustomConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.Float64PtrOutput)
}

type ServiceTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ServiceTagInput is an input type that accepts ServiceTagArgs and ServiceTagOutput values.
// You can construct a concrete instance of `ServiceTagInput` via:
//
//          ServiceTagArgs{...}
type ServiceTagInput interface {
	pulumi.Input

	ToServiceTagOutput() ServiceTagOutput
	ToServiceTagOutputWithContext(context.Context) ServiceTagOutput
}

type ServiceTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTag)(nil)).Elem()
}

func (i ServiceTagArgs) ToServiceTagOutput() ServiceTagOutput {
	return i.ToServiceTagOutputWithContext(context.Background())
}

func (i ServiceTagArgs) ToServiceTagOutputWithContext(ctx context.Context) ServiceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTagOutput)
}

// ServiceTagArrayInput is an input type that accepts ServiceTagArray and ServiceTagArrayOutput values.
// You can construct a concrete instance of `ServiceTagArrayInput` via:
//
//          ServiceTagArray{ ServiceTagArgs{...} }
type ServiceTagArrayInput interface {
	pulumi.Input

	ToServiceTagArrayOutput() ServiceTagArrayOutput
	ToServiceTagArrayOutputWithContext(context.Context) ServiceTagArrayOutput
}

type ServiceTagArray []ServiceTagInput

func (ServiceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTag)(nil)).Elem()
}

func (i ServiceTagArray) ToServiceTagArrayOutput() ServiceTagArrayOutput {
	return i.ToServiceTagArrayOutputWithContext(context.Background())
}

func (i ServiceTagArray) ToServiceTagArrayOutputWithContext(ctx context.Context) ServiceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceTagArrayOutput)
}

type ServiceTagOutput struct{ *pulumi.OutputState }

func (ServiceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceTag)(nil)).Elem()
}

func (o ServiceTagOutput) ToServiceTagOutput() ServiceTagOutput {
	return o
}

func (o ServiceTagOutput) ToServiceTagOutputWithContext(ctx context.Context) ServiceTagOutput {
	return o
}

func (o ServiceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ServiceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceTag) string { return v.Value }).(pulumi.StringOutput)
}

type ServiceTagArrayOutput struct{ *pulumi.OutputState }

func (ServiceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceTag)(nil)).Elem()
}

func (o ServiceTagArrayOutput) ToServiceTagArrayOutput() ServiceTagArrayOutput {
	return o
}

func (o ServiceTagArrayOutput) ToServiceTagArrayOutputWithContext(ctx context.Context) ServiceTagArrayOutput {
	return o
}

func (o ServiceTagArrayOutput) Index(i pulumi.IntInput) ServiceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceTag {
		return vs[0].([]ServiceTag)[vs[1].(int)]
	}).(ServiceTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HttpNamespaceTagInput)(nil)).Elem(), HttpNamespaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HttpNamespaceTagArrayInput)(nil)).Elem(), HttpNamespaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateDnsNamespacePrivateDnsPropertiesMutableInput)(nil)).Elem(), PrivateDnsNamespacePrivateDnsPropertiesMutableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateDnsNamespacePrivateDnsPropertiesMutablePtrInput)(nil)).Elem(), PrivateDnsNamespacePrivateDnsPropertiesMutableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateDnsNamespacePropertiesInput)(nil)).Elem(), PrivateDnsNamespacePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateDnsNamespacePropertiesPtrInput)(nil)).Elem(), PrivateDnsNamespacePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateDnsNamespaceSOAInput)(nil)).Elem(), PrivateDnsNamespaceSOAArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateDnsNamespaceSOAPtrInput)(nil)).Elem(), PrivateDnsNamespaceSOAArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateDnsNamespaceTagInput)(nil)).Elem(), PrivateDnsNamespaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateDnsNamespaceTagArrayInput)(nil)).Elem(), PrivateDnsNamespaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicDnsNamespacePropertiesInput)(nil)).Elem(), PublicDnsNamespacePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicDnsNamespacePropertiesPtrInput)(nil)).Elem(), PublicDnsNamespacePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicDnsNamespacePublicDnsPropertiesMutableInput)(nil)).Elem(), PublicDnsNamespacePublicDnsPropertiesMutableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicDnsNamespacePublicDnsPropertiesMutablePtrInput)(nil)).Elem(), PublicDnsNamespacePublicDnsPropertiesMutableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicDnsNamespaceSOAInput)(nil)).Elem(), PublicDnsNamespaceSOAArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicDnsNamespaceSOAPtrInput)(nil)).Elem(), PublicDnsNamespaceSOAArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicDnsNamespaceTagInput)(nil)).Elem(), PublicDnsNamespaceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PublicDnsNamespaceTagArrayInput)(nil)).Elem(), PublicDnsNamespaceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDnsConfigInput)(nil)).Elem(), ServiceDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDnsConfigPtrInput)(nil)).Elem(), ServiceDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDnsRecordInput)(nil)).Elem(), ServiceDnsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDnsRecordArrayInput)(nil)).Elem(), ServiceDnsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHealthCheckConfigInput)(nil)).Elem(), ServiceHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHealthCheckConfigPtrInput)(nil)).Elem(), ServiceHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHealthCheckCustomConfigInput)(nil)).Elem(), ServiceHealthCheckCustomConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHealthCheckCustomConfigPtrInput)(nil)).Elem(), ServiceHealthCheckCustomConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTagInput)(nil)).Elem(), ServiceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceTagArrayInput)(nil)).Elem(), ServiceTagArray{})
	pulumi.RegisterOutputType(HttpNamespaceTagOutput{})
	pulumi.RegisterOutputType(HttpNamespaceTagArrayOutput{})
	pulumi.RegisterOutputType(PrivateDnsNamespacePrivateDnsPropertiesMutableOutput{})
	pulumi.RegisterOutputType(PrivateDnsNamespacePrivateDnsPropertiesMutablePtrOutput{})
	pulumi.RegisterOutputType(PrivateDnsNamespacePropertiesOutput{})
	pulumi.RegisterOutputType(PrivateDnsNamespacePropertiesPtrOutput{})
	pulumi.RegisterOutputType(PrivateDnsNamespaceSOAOutput{})
	pulumi.RegisterOutputType(PrivateDnsNamespaceSOAPtrOutput{})
	pulumi.RegisterOutputType(PrivateDnsNamespaceTagOutput{})
	pulumi.RegisterOutputType(PrivateDnsNamespaceTagArrayOutput{})
	pulumi.RegisterOutputType(PublicDnsNamespacePropertiesOutput{})
	pulumi.RegisterOutputType(PublicDnsNamespacePropertiesPtrOutput{})
	pulumi.RegisterOutputType(PublicDnsNamespacePublicDnsPropertiesMutableOutput{})
	pulumi.RegisterOutputType(PublicDnsNamespacePublicDnsPropertiesMutablePtrOutput{})
	pulumi.RegisterOutputType(PublicDnsNamespaceSOAOutput{})
	pulumi.RegisterOutputType(PublicDnsNamespaceSOAPtrOutput{})
	pulumi.RegisterOutputType(PublicDnsNamespaceTagOutput{})
	pulumi.RegisterOutputType(PublicDnsNamespaceTagArrayOutput{})
	pulumi.RegisterOutputType(ServiceDnsConfigOutput{})
	pulumi.RegisterOutputType(ServiceDnsConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceDnsRecordOutput{})
	pulumi.RegisterOutputType(ServiceDnsRecordArrayOutput{})
	pulumi.RegisterOutputType(ServiceHealthCheckConfigOutput{})
	pulumi.RegisterOutputType(ServiceHealthCheckConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceHealthCheckCustomConfigOutput{})
	pulumi.RegisterOutputType(ServiceHealthCheckCustomConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceTagOutput{})
	pulumi.RegisterOutputType(ServiceTagArrayOutput{})
}
