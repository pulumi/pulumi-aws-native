// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package codepipeline

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::CodePipeline::CustomActionType
//
// Deprecated: CustomActionType is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type CustomActionType struct {
	pulumi.CustomResourceState

	Category                pulumi.StringOutput                                `pulumi:"category"`
	ConfigurationProperties CustomActionTypeConfigurationPropertiesArrayOutput `pulumi:"configurationProperties"`
	InputArtifactDetails    CustomActionTypeArtifactDetailsOutput              `pulumi:"inputArtifactDetails"`
	OutputArtifactDetails   CustomActionTypeArtifactDetailsOutput              `pulumi:"outputArtifactDetails"`
	Provider                pulumi.StringOutput                                `pulumi:"provider"`
	Settings                CustomActionTypeSettingsPtrOutput                  `pulumi:"settings"`
	Tags                    CustomActionTypeTagArrayOutput                     `pulumi:"tags"`
	Version                 pulumi.StringOutput                                `pulumi:"version"`
}

// NewCustomActionType registers a new resource with the given unique name, arguments, and options.
func NewCustomActionType(ctx *pulumi.Context,
	name string, args *CustomActionTypeArgs, opts ...pulumi.ResourceOption) (*CustomActionType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Category == nil {
		return nil, errors.New("invalid value for required argument 'Category'")
	}
	if args.InputArtifactDetails == nil {
		return nil, errors.New("invalid value for required argument 'InputArtifactDetails'")
	}
	if args.OutputArtifactDetails == nil {
		return nil, errors.New("invalid value for required argument 'OutputArtifactDetails'")
	}
	if args.Provider == nil {
		return nil, errors.New("invalid value for required argument 'Provider'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource CustomActionType
	err := ctx.RegisterResource("aws-native:codepipeline:CustomActionType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomActionType gets an existing CustomActionType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomActionType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomActionTypeState, opts ...pulumi.ResourceOption) (*CustomActionType, error) {
	var resource CustomActionType
	err := ctx.ReadResource("aws-native:codepipeline:CustomActionType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomActionType resources.
type customActionTypeState struct {
}

type CustomActionTypeState struct {
}

func (CustomActionTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*customActionTypeState)(nil)).Elem()
}

type customActionTypeArgs struct {
	Category                string                                    `pulumi:"category"`
	ConfigurationProperties []CustomActionTypeConfigurationProperties `pulumi:"configurationProperties"`
	InputArtifactDetails    CustomActionTypeArtifactDetails           `pulumi:"inputArtifactDetails"`
	OutputArtifactDetails   CustomActionTypeArtifactDetails           `pulumi:"outputArtifactDetails"`
	Provider                string                                    `pulumi:"provider"`
	Settings                *CustomActionTypeSettings                 `pulumi:"settings"`
	Tags                    []CustomActionTypeTag                     `pulumi:"tags"`
	Version                 string                                    `pulumi:"version"`
}

// The set of arguments for constructing a CustomActionType resource.
type CustomActionTypeArgs struct {
	Category                pulumi.StringInput
	ConfigurationProperties CustomActionTypeConfigurationPropertiesArrayInput
	InputArtifactDetails    CustomActionTypeArtifactDetailsInput
	OutputArtifactDetails   CustomActionTypeArtifactDetailsInput
	Provider                pulumi.StringInput
	Settings                CustomActionTypeSettingsPtrInput
	Tags                    CustomActionTypeTagArrayInput
	Version                 pulumi.StringInput
}

func (CustomActionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customActionTypeArgs)(nil)).Elem()
}

type CustomActionTypeInput interface {
	pulumi.Input

	ToCustomActionTypeOutput() CustomActionTypeOutput
	ToCustomActionTypeOutputWithContext(ctx context.Context) CustomActionTypeOutput
}

func (*CustomActionType) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionType)(nil))
}

func (i *CustomActionType) ToCustomActionTypeOutput() CustomActionTypeOutput {
	return i.ToCustomActionTypeOutputWithContext(context.Background())
}

func (i *CustomActionType) ToCustomActionTypeOutputWithContext(ctx context.Context) CustomActionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeOutput)
}

type CustomActionTypeOutput struct{ *pulumi.OutputState }

func (CustomActionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionType)(nil))
}

func (o CustomActionTypeOutput) ToCustomActionTypeOutput() CustomActionTypeOutput {
	return o
}

func (o CustomActionTypeOutput) ToCustomActionTypeOutputWithContext(ctx context.Context) CustomActionTypeOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(CustomActionTypeOutput{})
}
