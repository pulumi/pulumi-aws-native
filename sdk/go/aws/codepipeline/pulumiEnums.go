// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codepipeline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A category defines what kind of action can be taken in the stage, and constrains the provider type for the action. Valid categories are limited to one of the values below.
type PipelineActionTypeIdCategory string

const (
	PipelineActionTypeIdCategorySource   = PipelineActionTypeIdCategory("Source")
	PipelineActionTypeIdCategoryBuild    = PipelineActionTypeIdCategory("Build")
	PipelineActionTypeIdCategoryTest     = PipelineActionTypeIdCategory("Test")
	PipelineActionTypeIdCategoryDeploy   = PipelineActionTypeIdCategory("Deploy")
	PipelineActionTypeIdCategoryInvoke   = PipelineActionTypeIdCategory("Invoke")
	PipelineActionTypeIdCategoryApproval = PipelineActionTypeIdCategory("Approval")
	PipelineActionTypeIdCategoryCompute  = PipelineActionTypeIdCategory("Compute")
)

func (PipelineActionTypeIdCategory) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActionTypeIdCategory)(nil)).Elem()
}

func (e PipelineActionTypeIdCategory) ToPipelineActionTypeIdCategoryOutput() PipelineActionTypeIdCategoryOutput {
	return pulumi.ToOutput(e).(PipelineActionTypeIdCategoryOutput)
}

func (e PipelineActionTypeIdCategory) ToPipelineActionTypeIdCategoryOutputWithContext(ctx context.Context) PipelineActionTypeIdCategoryOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PipelineActionTypeIdCategoryOutput)
}

func (e PipelineActionTypeIdCategory) ToPipelineActionTypeIdCategoryPtrOutput() PipelineActionTypeIdCategoryPtrOutput {
	return e.ToPipelineActionTypeIdCategoryPtrOutputWithContext(context.Background())
}

func (e PipelineActionTypeIdCategory) ToPipelineActionTypeIdCategoryPtrOutputWithContext(ctx context.Context) PipelineActionTypeIdCategoryPtrOutput {
	return PipelineActionTypeIdCategory(e).ToPipelineActionTypeIdCategoryOutputWithContext(ctx).ToPipelineActionTypeIdCategoryPtrOutputWithContext(ctx)
}

func (e PipelineActionTypeIdCategory) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineActionTypeIdCategory) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineActionTypeIdCategory) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PipelineActionTypeIdCategory) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PipelineActionTypeIdCategoryOutput struct{ *pulumi.OutputState }

func (PipelineActionTypeIdCategoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActionTypeIdCategory)(nil)).Elem()
}

func (o PipelineActionTypeIdCategoryOutput) ToPipelineActionTypeIdCategoryOutput() PipelineActionTypeIdCategoryOutput {
	return o
}

func (o PipelineActionTypeIdCategoryOutput) ToPipelineActionTypeIdCategoryOutputWithContext(ctx context.Context) PipelineActionTypeIdCategoryOutput {
	return o
}

func (o PipelineActionTypeIdCategoryOutput) ToPipelineActionTypeIdCategoryPtrOutput() PipelineActionTypeIdCategoryPtrOutput {
	return o.ToPipelineActionTypeIdCategoryPtrOutputWithContext(context.Background())
}

func (o PipelineActionTypeIdCategoryOutput) ToPipelineActionTypeIdCategoryPtrOutputWithContext(ctx context.Context) PipelineActionTypeIdCategoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineActionTypeIdCategory) *PipelineActionTypeIdCategory {
		return &v
	}).(PipelineActionTypeIdCategoryPtrOutput)
}

func (o PipelineActionTypeIdCategoryOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PipelineActionTypeIdCategoryOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineActionTypeIdCategory) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PipelineActionTypeIdCategoryOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineActionTypeIdCategoryOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineActionTypeIdCategory) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PipelineActionTypeIdCategoryPtrOutput struct{ *pulumi.OutputState }

func (PipelineActionTypeIdCategoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineActionTypeIdCategory)(nil)).Elem()
}

func (o PipelineActionTypeIdCategoryPtrOutput) ToPipelineActionTypeIdCategoryPtrOutput() PipelineActionTypeIdCategoryPtrOutput {
	return o
}

func (o PipelineActionTypeIdCategoryPtrOutput) ToPipelineActionTypeIdCategoryPtrOutputWithContext(ctx context.Context) PipelineActionTypeIdCategoryPtrOutput {
	return o
}

func (o PipelineActionTypeIdCategoryPtrOutput) Elem() PipelineActionTypeIdCategoryOutput {
	return o.ApplyT(func(v *PipelineActionTypeIdCategory) PipelineActionTypeIdCategory {
		if v != nil {
			return *v
		}
		var ret PipelineActionTypeIdCategory
		return ret
	}).(PipelineActionTypeIdCategoryOutput)
}

func (o PipelineActionTypeIdCategoryPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineActionTypeIdCategoryPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PipelineActionTypeIdCategory) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PipelineActionTypeIdCategoryInput is an input type that accepts values of the PipelineActionTypeIdCategory enum
// A concrete instance of `PipelineActionTypeIdCategoryInput` can be one of the following:
//
//	PipelineActionTypeIdCategorySource
//	PipelineActionTypeIdCategoryBuild
//	PipelineActionTypeIdCategoryTest
//	PipelineActionTypeIdCategoryDeploy
//	PipelineActionTypeIdCategoryInvoke
//	PipelineActionTypeIdCategoryApproval
//	PipelineActionTypeIdCategoryCompute
type PipelineActionTypeIdCategoryInput interface {
	pulumi.Input

	ToPipelineActionTypeIdCategoryOutput() PipelineActionTypeIdCategoryOutput
	ToPipelineActionTypeIdCategoryOutputWithContext(context.Context) PipelineActionTypeIdCategoryOutput
}

var pipelineActionTypeIdCategoryPtrType = reflect.TypeOf((**PipelineActionTypeIdCategory)(nil)).Elem()

type PipelineActionTypeIdCategoryPtrInput interface {
	pulumi.Input

	ToPipelineActionTypeIdCategoryPtrOutput() PipelineActionTypeIdCategoryPtrOutput
	ToPipelineActionTypeIdCategoryPtrOutputWithContext(context.Context) PipelineActionTypeIdCategoryPtrOutput
}

type pipelineActionTypeIdCategoryPtr string

func PipelineActionTypeIdCategoryPtr(v string) PipelineActionTypeIdCategoryPtrInput {
	return (*pipelineActionTypeIdCategoryPtr)(&v)
}

func (*pipelineActionTypeIdCategoryPtr) ElementType() reflect.Type {
	return pipelineActionTypeIdCategoryPtrType
}

func (in *pipelineActionTypeIdCategoryPtr) ToPipelineActionTypeIdCategoryPtrOutput() PipelineActionTypeIdCategoryPtrOutput {
	return pulumi.ToOutput(in).(PipelineActionTypeIdCategoryPtrOutput)
}

func (in *pipelineActionTypeIdCategoryPtr) ToPipelineActionTypeIdCategoryPtrOutputWithContext(ctx context.Context) PipelineActionTypeIdCategoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PipelineActionTypeIdCategoryPtrOutput)
}

// The type of the artifact store, such as S3.
type PipelineArtifactStoreType string

const (
	PipelineArtifactStoreTypeS3 = PipelineArtifactStoreType("S3")
)

func (PipelineArtifactStoreType) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStoreType)(nil)).Elem()
}

func (e PipelineArtifactStoreType) ToPipelineArtifactStoreTypeOutput() PipelineArtifactStoreTypeOutput {
	return pulumi.ToOutput(e).(PipelineArtifactStoreTypeOutput)
}

func (e PipelineArtifactStoreType) ToPipelineArtifactStoreTypeOutputWithContext(ctx context.Context) PipelineArtifactStoreTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PipelineArtifactStoreTypeOutput)
}

func (e PipelineArtifactStoreType) ToPipelineArtifactStoreTypePtrOutput() PipelineArtifactStoreTypePtrOutput {
	return e.ToPipelineArtifactStoreTypePtrOutputWithContext(context.Background())
}

func (e PipelineArtifactStoreType) ToPipelineArtifactStoreTypePtrOutputWithContext(ctx context.Context) PipelineArtifactStoreTypePtrOutput {
	return PipelineArtifactStoreType(e).ToPipelineArtifactStoreTypeOutputWithContext(ctx).ToPipelineArtifactStoreTypePtrOutputWithContext(ctx)
}

func (e PipelineArtifactStoreType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineArtifactStoreType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineArtifactStoreType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PipelineArtifactStoreType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PipelineArtifactStoreTypeOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStoreType)(nil)).Elem()
}

func (o PipelineArtifactStoreTypeOutput) ToPipelineArtifactStoreTypeOutput() PipelineArtifactStoreTypeOutput {
	return o
}

func (o PipelineArtifactStoreTypeOutput) ToPipelineArtifactStoreTypeOutputWithContext(ctx context.Context) PipelineArtifactStoreTypeOutput {
	return o
}

func (o PipelineArtifactStoreTypeOutput) ToPipelineArtifactStoreTypePtrOutput() PipelineArtifactStoreTypePtrOutput {
	return o.ToPipelineArtifactStoreTypePtrOutputWithContext(context.Background())
}

func (o PipelineArtifactStoreTypeOutput) ToPipelineArtifactStoreTypePtrOutputWithContext(ctx context.Context) PipelineArtifactStoreTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineArtifactStoreType) *PipelineArtifactStoreType {
		return &v
	}).(PipelineArtifactStoreTypePtrOutput)
}

func (o PipelineArtifactStoreTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PipelineArtifactStoreTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineArtifactStoreType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PipelineArtifactStoreTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineArtifactStoreTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineArtifactStoreType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PipelineArtifactStoreTypePtrOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineArtifactStoreType)(nil)).Elem()
}

func (o PipelineArtifactStoreTypePtrOutput) ToPipelineArtifactStoreTypePtrOutput() PipelineArtifactStoreTypePtrOutput {
	return o
}

func (o PipelineArtifactStoreTypePtrOutput) ToPipelineArtifactStoreTypePtrOutputWithContext(ctx context.Context) PipelineArtifactStoreTypePtrOutput {
	return o
}

func (o PipelineArtifactStoreTypePtrOutput) Elem() PipelineArtifactStoreTypeOutput {
	return o.ApplyT(func(v *PipelineArtifactStoreType) PipelineArtifactStoreType {
		if v != nil {
			return *v
		}
		var ret PipelineArtifactStoreType
		return ret
	}).(PipelineArtifactStoreTypeOutput)
}

func (o PipelineArtifactStoreTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineArtifactStoreTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PipelineArtifactStoreType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PipelineArtifactStoreTypeInput is an input type that accepts values of the PipelineArtifactStoreType enum
// A concrete instance of `PipelineArtifactStoreTypeInput` can be one of the following:
//
//	PipelineArtifactStoreTypeS3
type PipelineArtifactStoreTypeInput interface {
	pulumi.Input

	ToPipelineArtifactStoreTypeOutput() PipelineArtifactStoreTypeOutput
	ToPipelineArtifactStoreTypeOutputWithContext(context.Context) PipelineArtifactStoreTypeOutput
}

var pipelineArtifactStoreTypePtrType = reflect.TypeOf((**PipelineArtifactStoreType)(nil)).Elem()

type PipelineArtifactStoreTypePtrInput interface {
	pulumi.Input

	ToPipelineArtifactStoreTypePtrOutput() PipelineArtifactStoreTypePtrOutput
	ToPipelineArtifactStoreTypePtrOutputWithContext(context.Context) PipelineArtifactStoreTypePtrOutput
}

type pipelineArtifactStoreTypePtr string

func PipelineArtifactStoreTypePtr(v string) PipelineArtifactStoreTypePtrInput {
	return (*pipelineArtifactStoreTypePtr)(&v)
}

func (*pipelineArtifactStoreTypePtr) ElementType() reflect.Type {
	return pipelineArtifactStoreTypePtrType
}

func (in *pipelineArtifactStoreTypePtr) ToPipelineArtifactStoreTypePtrOutput() PipelineArtifactStoreTypePtrOutput {
	return pulumi.ToOutput(in).(PipelineArtifactStoreTypePtrOutput)
}

func (in *pipelineArtifactStoreTypePtr) ToPipelineArtifactStoreTypePtrOutputWithContext(ctx context.Context) PipelineArtifactStoreTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PipelineArtifactStoreTypePtrOutput)
}

// Reserved for future use.
type PipelineBlockerDeclarationType string

const (
	PipelineBlockerDeclarationTypeSchedule = PipelineBlockerDeclarationType("Schedule")
)

func (PipelineBlockerDeclarationType) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineBlockerDeclarationType)(nil)).Elem()
}

func (e PipelineBlockerDeclarationType) ToPipelineBlockerDeclarationTypeOutput() PipelineBlockerDeclarationTypeOutput {
	return pulumi.ToOutput(e).(PipelineBlockerDeclarationTypeOutput)
}

func (e PipelineBlockerDeclarationType) ToPipelineBlockerDeclarationTypeOutputWithContext(ctx context.Context) PipelineBlockerDeclarationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PipelineBlockerDeclarationTypeOutput)
}

func (e PipelineBlockerDeclarationType) ToPipelineBlockerDeclarationTypePtrOutput() PipelineBlockerDeclarationTypePtrOutput {
	return e.ToPipelineBlockerDeclarationTypePtrOutputWithContext(context.Background())
}

func (e PipelineBlockerDeclarationType) ToPipelineBlockerDeclarationTypePtrOutputWithContext(ctx context.Context) PipelineBlockerDeclarationTypePtrOutput {
	return PipelineBlockerDeclarationType(e).ToPipelineBlockerDeclarationTypeOutputWithContext(ctx).ToPipelineBlockerDeclarationTypePtrOutputWithContext(ctx)
}

func (e PipelineBlockerDeclarationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineBlockerDeclarationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineBlockerDeclarationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PipelineBlockerDeclarationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PipelineBlockerDeclarationTypeOutput struct{ *pulumi.OutputState }

func (PipelineBlockerDeclarationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineBlockerDeclarationType)(nil)).Elem()
}

func (o PipelineBlockerDeclarationTypeOutput) ToPipelineBlockerDeclarationTypeOutput() PipelineBlockerDeclarationTypeOutput {
	return o
}

func (o PipelineBlockerDeclarationTypeOutput) ToPipelineBlockerDeclarationTypeOutputWithContext(ctx context.Context) PipelineBlockerDeclarationTypeOutput {
	return o
}

func (o PipelineBlockerDeclarationTypeOutput) ToPipelineBlockerDeclarationTypePtrOutput() PipelineBlockerDeclarationTypePtrOutput {
	return o.ToPipelineBlockerDeclarationTypePtrOutputWithContext(context.Background())
}

func (o PipelineBlockerDeclarationTypeOutput) ToPipelineBlockerDeclarationTypePtrOutputWithContext(ctx context.Context) PipelineBlockerDeclarationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineBlockerDeclarationType) *PipelineBlockerDeclarationType {
		return &v
	}).(PipelineBlockerDeclarationTypePtrOutput)
}

func (o PipelineBlockerDeclarationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PipelineBlockerDeclarationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineBlockerDeclarationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PipelineBlockerDeclarationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineBlockerDeclarationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineBlockerDeclarationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PipelineBlockerDeclarationTypePtrOutput struct{ *pulumi.OutputState }

func (PipelineBlockerDeclarationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineBlockerDeclarationType)(nil)).Elem()
}

func (o PipelineBlockerDeclarationTypePtrOutput) ToPipelineBlockerDeclarationTypePtrOutput() PipelineBlockerDeclarationTypePtrOutput {
	return o
}

func (o PipelineBlockerDeclarationTypePtrOutput) ToPipelineBlockerDeclarationTypePtrOutputWithContext(ctx context.Context) PipelineBlockerDeclarationTypePtrOutput {
	return o
}

func (o PipelineBlockerDeclarationTypePtrOutput) Elem() PipelineBlockerDeclarationTypeOutput {
	return o.ApplyT(func(v *PipelineBlockerDeclarationType) PipelineBlockerDeclarationType {
		if v != nil {
			return *v
		}
		var ret PipelineBlockerDeclarationType
		return ret
	}).(PipelineBlockerDeclarationTypeOutput)
}

func (o PipelineBlockerDeclarationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineBlockerDeclarationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PipelineBlockerDeclarationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PipelineBlockerDeclarationTypeInput is an input type that accepts values of the PipelineBlockerDeclarationType enum
// A concrete instance of `PipelineBlockerDeclarationTypeInput` can be one of the following:
//
//	PipelineBlockerDeclarationTypeSchedule
type PipelineBlockerDeclarationTypeInput interface {
	pulumi.Input

	ToPipelineBlockerDeclarationTypeOutput() PipelineBlockerDeclarationTypeOutput
	ToPipelineBlockerDeclarationTypeOutputWithContext(context.Context) PipelineBlockerDeclarationTypeOutput
}

var pipelineBlockerDeclarationTypePtrType = reflect.TypeOf((**PipelineBlockerDeclarationType)(nil)).Elem()

type PipelineBlockerDeclarationTypePtrInput interface {
	pulumi.Input

	ToPipelineBlockerDeclarationTypePtrOutput() PipelineBlockerDeclarationTypePtrOutput
	ToPipelineBlockerDeclarationTypePtrOutputWithContext(context.Context) PipelineBlockerDeclarationTypePtrOutput
}

type pipelineBlockerDeclarationTypePtr string

func PipelineBlockerDeclarationTypePtr(v string) PipelineBlockerDeclarationTypePtrInput {
	return (*pipelineBlockerDeclarationTypePtr)(&v)
}

func (*pipelineBlockerDeclarationTypePtr) ElementType() reflect.Type {
	return pipelineBlockerDeclarationTypePtrType
}

func (in *pipelineBlockerDeclarationTypePtr) ToPipelineBlockerDeclarationTypePtrOutput() PipelineBlockerDeclarationTypePtrOutput {
	return pulumi.ToOutput(in).(PipelineBlockerDeclarationTypePtrOutput)
}

func (in *pipelineBlockerDeclarationTypePtr) ToPipelineBlockerDeclarationTypePtrOutputWithContext(ctx context.Context) PipelineBlockerDeclarationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PipelineBlockerDeclarationTypePtrOutput)
}

// The method that the pipeline will use to handle multiple executions. The default mode is SUPERSEDED.
type PipelineExecutionMode string

const (
	PipelineExecutionModeQueued     = PipelineExecutionMode("QUEUED")
	PipelineExecutionModeSuperseded = PipelineExecutionMode("SUPERSEDED")
	PipelineExecutionModeParallel   = PipelineExecutionMode("PARALLEL")
)

func (PipelineExecutionMode) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineExecutionMode)(nil)).Elem()
}

func (e PipelineExecutionMode) ToPipelineExecutionModeOutput() PipelineExecutionModeOutput {
	return pulumi.ToOutput(e).(PipelineExecutionModeOutput)
}

func (e PipelineExecutionMode) ToPipelineExecutionModeOutputWithContext(ctx context.Context) PipelineExecutionModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PipelineExecutionModeOutput)
}

func (e PipelineExecutionMode) ToPipelineExecutionModePtrOutput() PipelineExecutionModePtrOutput {
	return e.ToPipelineExecutionModePtrOutputWithContext(context.Background())
}

func (e PipelineExecutionMode) ToPipelineExecutionModePtrOutputWithContext(ctx context.Context) PipelineExecutionModePtrOutput {
	return PipelineExecutionMode(e).ToPipelineExecutionModeOutputWithContext(ctx).ToPipelineExecutionModePtrOutputWithContext(ctx)
}

func (e PipelineExecutionMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineExecutionMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineExecutionMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PipelineExecutionMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PipelineExecutionModeOutput struct{ *pulumi.OutputState }

func (PipelineExecutionModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineExecutionMode)(nil)).Elem()
}

func (o PipelineExecutionModeOutput) ToPipelineExecutionModeOutput() PipelineExecutionModeOutput {
	return o
}

func (o PipelineExecutionModeOutput) ToPipelineExecutionModeOutputWithContext(ctx context.Context) PipelineExecutionModeOutput {
	return o
}

func (o PipelineExecutionModeOutput) ToPipelineExecutionModePtrOutput() PipelineExecutionModePtrOutput {
	return o.ToPipelineExecutionModePtrOutputWithContext(context.Background())
}

func (o PipelineExecutionModeOutput) ToPipelineExecutionModePtrOutputWithContext(ctx context.Context) PipelineExecutionModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineExecutionMode) *PipelineExecutionMode {
		return &v
	}).(PipelineExecutionModePtrOutput)
}

func (o PipelineExecutionModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PipelineExecutionModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineExecutionMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PipelineExecutionModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineExecutionModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineExecutionMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PipelineExecutionModePtrOutput struct{ *pulumi.OutputState }

func (PipelineExecutionModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineExecutionMode)(nil)).Elem()
}

func (o PipelineExecutionModePtrOutput) ToPipelineExecutionModePtrOutput() PipelineExecutionModePtrOutput {
	return o
}

func (o PipelineExecutionModePtrOutput) ToPipelineExecutionModePtrOutputWithContext(ctx context.Context) PipelineExecutionModePtrOutput {
	return o
}

func (o PipelineExecutionModePtrOutput) Elem() PipelineExecutionModeOutput {
	return o.ApplyT(func(v *PipelineExecutionMode) PipelineExecutionMode {
		if v != nil {
			return *v
		}
		var ret PipelineExecutionMode
		return ret
	}).(PipelineExecutionModeOutput)
}

func (o PipelineExecutionModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineExecutionModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PipelineExecutionMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PipelineExecutionModeInput is an input type that accepts values of the PipelineExecutionMode enum
// A concrete instance of `PipelineExecutionModeInput` can be one of the following:
//
//	PipelineExecutionModeQueued
//	PipelineExecutionModeSuperseded
//	PipelineExecutionModeParallel
type PipelineExecutionModeInput interface {
	pulumi.Input

	ToPipelineExecutionModeOutput() PipelineExecutionModeOutput
	ToPipelineExecutionModeOutputWithContext(context.Context) PipelineExecutionModeOutput
}

var pipelineExecutionModePtrType = reflect.TypeOf((**PipelineExecutionMode)(nil)).Elem()

type PipelineExecutionModePtrInput interface {
	pulumi.Input

	ToPipelineExecutionModePtrOutput() PipelineExecutionModePtrOutput
	ToPipelineExecutionModePtrOutputWithContext(context.Context) PipelineExecutionModePtrOutput
}

type pipelineExecutionModePtr string

func PipelineExecutionModePtr(v string) PipelineExecutionModePtrInput {
	return (*pipelineExecutionModePtr)(&v)
}

func (*pipelineExecutionModePtr) ElementType() reflect.Type {
	return pipelineExecutionModePtrType
}

func (in *pipelineExecutionModePtr) ToPipelineExecutionModePtrOutput() PipelineExecutionModePtrOutput {
	return pulumi.ToOutput(in).(PipelineExecutionModePtrOutput)
}

func (in *pipelineExecutionModePtr) ToPipelineExecutionModePtrOutputWithContext(ctx context.Context) PipelineExecutionModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PipelineExecutionModePtrOutput)
}

// The specified result for when the failure conditions are met, such as rolling back the stage
type PipelineFailureConditionsResult string

const (
	PipelineFailureConditionsResultRollback = PipelineFailureConditionsResult("ROLLBACK")
)

func (PipelineFailureConditionsResult) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFailureConditionsResult)(nil)).Elem()
}

func (e PipelineFailureConditionsResult) ToPipelineFailureConditionsResultOutput() PipelineFailureConditionsResultOutput {
	return pulumi.ToOutput(e).(PipelineFailureConditionsResultOutput)
}

func (e PipelineFailureConditionsResult) ToPipelineFailureConditionsResultOutputWithContext(ctx context.Context) PipelineFailureConditionsResultOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PipelineFailureConditionsResultOutput)
}

func (e PipelineFailureConditionsResult) ToPipelineFailureConditionsResultPtrOutput() PipelineFailureConditionsResultPtrOutput {
	return e.ToPipelineFailureConditionsResultPtrOutputWithContext(context.Background())
}

func (e PipelineFailureConditionsResult) ToPipelineFailureConditionsResultPtrOutputWithContext(ctx context.Context) PipelineFailureConditionsResultPtrOutput {
	return PipelineFailureConditionsResult(e).ToPipelineFailureConditionsResultOutputWithContext(ctx).ToPipelineFailureConditionsResultPtrOutputWithContext(ctx)
}

func (e PipelineFailureConditionsResult) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineFailureConditionsResult) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineFailureConditionsResult) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PipelineFailureConditionsResult) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PipelineFailureConditionsResultOutput struct{ *pulumi.OutputState }

func (PipelineFailureConditionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineFailureConditionsResult)(nil)).Elem()
}

func (o PipelineFailureConditionsResultOutput) ToPipelineFailureConditionsResultOutput() PipelineFailureConditionsResultOutput {
	return o
}

func (o PipelineFailureConditionsResultOutput) ToPipelineFailureConditionsResultOutputWithContext(ctx context.Context) PipelineFailureConditionsResultOutput {
	return o
}

func (o PipelineFailureConditionsResultOutput) ToPipelineFailureConditionsResultPtrOutput() PipelineFailureConditionsResultPtrOutput {
	return o.ToPipelineFailureConditionsResultPtrOutputWithContext(context.Background())
}

func (o PipelineFailureConditionsResultOutput) ToPipelineFailureConditionsResultPtrOutputWithContext(ctx context.Context) PipelineFailureConditionsResultPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineFailureConditionsResult) *PipelineFailureConditionsResult {
		return &v
	}).(PipelineFailureConditionsResultPtrOutput)
}

func (o PipelineFailureConditionsResultOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PipelineFailureConditionsResultOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineFailureConditionsResult) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PipelineFailureConditionsResultOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineFailureConditionsResultOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineFailureConditionsResult) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PipelineFailureConditionsResultPtrOutput struct{ *pulumi.OutputState }

func (PipelineFailureConditionsResultPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineFailureConditionsResult)(nil)).Elem()
}

func (o PipelineFailureConditionsResultPtrOutput) ToPipelineFailureConditionsResultPtrOutput() PipelineFailureConditionsResultPtrOutput {
	return o
}

func (o PipelineFailureConditionsResultPtrOutput) ToPipelineFailureConditionsResultPtrOutputWithContext(ctx context.Context) PipelineFailureConditionsResultPtrOutput {
	return o
}

func (o PipelineFailureConditionsResultPtrOutput) Elem() PipelineFailureConditionsResultOutput {
	return o.ApplyT(func(v *PipelineFailureConditionsResult) PipelineFailureConditionsResult {
		if v != nil {
			return *v
		}
		var ret PipelineFailureConditionsResult
		return ret
	}).(PipelineFailureConditionsResultOutput)
}

func (o PipelineFailureConditionsResultPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineFailureConditionsResultPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PipelineFailureConditionsResult) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PipelineFailureConditionsResultInput is an input type that accepts values of the PipelineFailureConditionsResult enum
// A concrete instance of `PipelineFailureConditionsResultInput` can be one of the following:
//
//	PipelineFailureConditionsResultRollback
type PipelineFailureConditionsResultInput interface {
	pulumi.Input

	ToPipelineFailureConditionsResultOutput() PipelineFailureConditionsResultOutput
	ToPipelineFailureConditionsResultOutputWithContext(context.Context) PipelineFailureConditionsResultOutput
}

var pipelineFailureConditionsResultPtrType = reflect.TypeOf((**PipelineFailureConditionsResult)(nil)).Elem()

type PipelineFailureConditionsResultPtrInput interface {
	pulumi.Input

	ToPipelineFailureConditionsResultPtrOutput() PipelineFailureConditionsResultPtrOutput
	ToPipelineFailureConditionsResultPtrOutputWithContext(context.Context) PipelineFailureConditionsResultPtrOutput
}

type pipelineFailureConditionsResultPtr string

func PipelineFailureConditionsResultPtr(v string) PipelineFailureConditionsResultPtrInput {
	return (*pipelineFailureConditionsResultPtr)(&v)
}

func (*pipelineFailureConditionsResultPtr) ElementType() reflect.Type {
	return pipelineFailureConditionsResultPtrType
}

func (in *pipelineFailureConditionsResultPtr) ToPipelineFailureConditionsResultPtrOutput() PipelineFailureConditionsResultPtrOutput {
	return pulumi.ToOutput(in).(PipelineFailureConditionsResultPtrOutput)
}

func (in *pipelineFailureConditionsResultPtr) ToPipelineFailureConditionsResultPtrOutputWithContext(ctx context.Context) PipelineFailureConditionsResultPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PipelineFailureConditionsResultPtrOutput)
}

// The source provider for the event, such as connections configured for a repository with Git tags, for the specified trigger configuration.
type PipelineTriggerDeclarationProviderType string

const (
	PipelineTriggerDeclarationProviderTypeCodeStarSourceConnection = PipelineTriggerDeclarationProviderType("CodeStarSourceConnection")
)

func (PipelineTriggerDeclarationProviderType) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerDeclarationProviderType)(nil)).Elem()
}

func (e PipelineTriggerDeclarationProviderType) ToPipelineTriggerDeclarationProviderTypeOutput() PipelineTriggerDeclarationProviderTypeOutput {
	return pulumi.ToOutput(e).(PipelineTriggerDeclarationProviderTypeOutput)
}

func (e PipelineTriggerDeclarationProviderType) ToPipelineTriggerDeclarationProviderTypeOutputWithContext(ctx context.Context) PipelineTriggerDeclarationProviderTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PipelineTriggerDeclarationProviderTypeOutput)
}

func (e PipelineTriggerDeclarationProviderType) ToPipelineTriggerDeclarationProviderTypePtrOutput() PipelineTriggerDeclarationProviderTypePtrOutput {
	return e.ToPipelineTriggerDeclarationProviderTypePtrOutputWithContext(context.Background())
}

func (e PipelineTriggerDeclarationProviderType) ToPipelineTriggerDeclarationProviderTypePtrOutputWithContext(ctx context.Context) PipelineTriggerDeclarationProviderTypePtrOutput {
	return PipelineTriggerDeclarationProviderType(e).ToPipelineTriggerDeclarationProviderTypeOutputWithContext(ctx).ToPipelineTriggerDeclarationProviderTypePtrOutputWithContext(ctx)
}

func (e PipelineTriggerDeclarationProviderType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineTriggerDeclarationProviderType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineTriggerDeclarationProviderType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PipelineTriggerDeclarationProviderType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PipelineTriggerDeclarationProviderTypeOutput struct{ *pulumi.OutputState }

func (PipelineTriggerDeclarationProviderTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerDeclarationProviderType)(nil)).Elem()
}

func (o PipelineTriggerDeclarationProviderTypeOutput) ToPipelineTriggerDeclarationProviderTypeOutput() PipelineTriggerDeclarationProviderTypeOutput {
	return o
}

func (o PipelineTriggerDeclarationProviderTypeOutput) ToPipelineTriggerDeclarationProviderTypeOutputWithContext(ctx context.Context) PipelineTriggerDeclarationProviderTypeOutput {
	return o
}

func (o PipelineTriggerDeclarationProviderTypeOutput) ToPipelineTriggerDeclarationProviderTypePtrOutput() PipelineTriggerDeclarationProviderTypePtrOutput {
	return o.ToPipelineTriggerDeclarationProviderTypePtrOutputWithContext(context.Background())
}

func (o PipelineTriggerDeclarationProviderTypeOutput) ToPipelineTriggerDeclarationProviderTypePtrOutputWithContext(ctx context.Context) PipelineTriggerDeclarationProviderTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineTriggerDeclarationProviderType) *PipelineTriggerDeclarationProviderType {
		return &v
	}).(PipelineTriggerDeclarationProviderTypePtrOutput)
}

func (o PipelineTriggerDeclarationProviderTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PipelineTriggerDeclarationProviderTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineTriggerDeclarationProviderType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PipelineTriggerDeclarationProviderTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineTriggerDeclarationProviderTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineTriggerDeclarationProviderType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PipelineTriggerDeclarationProviderTypePtrOutput struct{ *pulumi.OutputState }

func (PipelineTriggerDeclarationProviderTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineTriggerDeclarationProviderType)(nil)).Elem()
}

func (o PipelineTriggerDeclarationProviderTypePtrOutput) ToPipelineTriggerDeclarationProviderTypePtrOutput() PipelineTriggerDeclarationProviderTypePtrOutput {
	return o
}

func (o PipelineTriggerDeclarationProviderTypePtrOutput) ToPipelineTriggerDeclarationProviderTypePtrOutputWithContext(ctx context.Context) PipelineTriggerDeclarationProviderTypePtrOutput {
	return o
}

func (o PipelineTriggerDeclarationProviderTypePtrOutput) Elem() PipelineTriggerDeclarationProviderTypeOutput {
	return o.ApplyT(func(v *PipelineTriggerDeclarationProviderType) PipelineTriggerDeclarationProviderType {
		if v != nil {
			return *v
		}
		var ret PipelineTriggerDeclarationProviderType
		return ret
	}).(PipelineTriggerDeclarationProviderTypeOutput)
}

func (o PipelineTriggerDeclarationProviderTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineTriggerDeclarationProviderTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PipelineTriggerDeclarationProviderType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PipelineTriggerDeclarationProviderTypeInput is an input type that accepts values of the PipelineTriggerDeclarationProviderType enum
// A concrete instance of `PipelineTriggerDeclarationProviderTypeInput` can be one of the following:
//
//	PipelineTriggerDeclarationProviderTypeCodeStarSourceConnection
type PipelineTriggerDeclarationProviderTypeInput interface {
	pulumi.Input

	ToPipelineTriggerDeclarationProviderTypeOutput() PipelineTriggerDeclarationProviderTypeOutput
	ToPipelineTriggerDeclarationProviderTypeOutputWithContext(context.Context) PipelineTriggerDeclarationProviderTypeOutput
}

var pipelineTriggerDeclarationProviderTypePtrType = reflect.TypeOf((**PipelineTriggerDeclarationProviderType)(nil)).Elem()

type PipelineTriggerDeclarationProviderTypePtrInput interface {
	pulumi.Input

	ToPipelineTriggerDeclarationProviderTypePtrOutput() PipelineTriggerDeclarationProviderTypePtrOutput
	ToPipelineTriggerDeclarationProviderTypePtrOutputWithContext(context.Context) PipelineTriggerDeclarationProviderTypePtrOutput
}

type pipelineTriggerDeclarationProviderTypePtr string

func PipelineTriggerDeclarationProviderTypePtr(v string) PipelineTriggerDeclarationProviderTypePtrInput {
	return (*pipelineTriggerDeclarationProviderTypePtr)(&v)
}

func (*pipelineTriggerDeclarationProviderTypePtr) ElementType() reflect.Type {
	return pipelineTriggerDeclarationProviderTypePtrType
}

func (in *pipelineTriggerDeclarationProviderTypePtr) ToPipelineTriggerDeclarationProviderTypePtrOutput() PipelineTriggerDeclarationProviderTypePtrOutput {
	return pulumi.ToOutput(in).(PipelineTriggerDeclarationProviderTypePtrOutput)
}

func (in *pipelineTriggerDeclarationProviderTypePtr) ToPipelineTriggerDeclarationProviderTypePtrOutputWithContext(ctx context.Context) PipelineTriggerDeclarationProviderTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PipelineTriggerDeclarationProviderTypePtrOutput)
}

// CodePipeline provides the following pipeline types, which differ in characteristics and price, so that you can tailor your pipeline features and cost to the needs of your applications.
type PipelineType string

const (
	PipelineTypeV1 = PipelineType("V1")
	PipelineTypeV2 = PipelineType("V2")
)

func (PipelineType) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineType)(nil)).Elem()
}

func (e PipelineType) ToPipelineTypeOutput() PipelineTypeOutput {
	return pulumi.ToOutput(e).(PipelineTypeOutput)
}

func (e PipelineType) ToPipelineTypeOutputWithContext(ctx context.Context) PipelineTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(PipelineTypeOutput)
}

func (e PipelineType) ToPipelineTypePtrOutput() PipelineTypePtrOutput {
	return e.ToPipelineTypePtrOutputWithContext(context.Background())
}

func (e PipelineType) ToPipelineTypePtrOutputWithContext(ctx context.Context) PipelineTypePtrOutput {
	return PipelineType(e).ToPipelineTypeOutputWithContext(ctx).ToPipelineTypePtrOutputWithContext(ctx)
}

func (e PipelineType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e PipelineType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e PipelineType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type PipelineTypeOutput struct{ *pulumi.OutputState }

func (PipelineTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineType)(nil)).Elem()
}

func (o PipelineTypeOutput) ToPipelineTypeOutput() PipelineTypeOutput {
	return o
}

func (o PipelineTypeOutput) ToPipelineTypeOutputWithContext(ctx context.Context) PipelineTypeOutput {
	return o
}

func (o PipelineTypeOutput) ToPipelineTypePtrOutput() PipelineTypePtrOutput {
	return o.ToPipelineTypePtrOutputWithContext(context.Background())
}

func (o PipelineTypeOutput) ToPipelineTypePtrOutputWithContext(ctx context.Context) PipelineTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineType) *PipelineType {
		return &v
	}).(PipelineTypePtrOutput)
}

func (o PipelineTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o PipelineTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o PipelineTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e PipelineType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type PipelineTypePtrOutput struct{ *pulumi.OutputState }

func (PipelineTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineType)(nil)).Elem()
}

func (o PipelineTypePtrOutput) ToPipelineTypePtrOutput() PipelineTypePtrOutput {
	return o
}

func (o PipelineTypePtrOutput) ToPipelineTypePtrOutputWithContext(ctx context.Context) PipelineTypePtrOutput {
	return o
}

func (o PipelineTypePtrOutput) Elem() PipelineTypeOutput {
	return o.ApplyT(func(v *PipelineType) PipelineType {
		if v != nil {
			return *v
		}
		var ret PipelineType
		return ret
	}).(PipelineTypeOutput)
}

func (o PipelineTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o PipelineTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *PipelineType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// PipelineTypeInput is an input type that accepts values of the PipelineType enum
// A concrete instance of `PipelineTypeInput` can be one of the following:
//
//	PipelineTypeV1
//	PipelineTypeV2
type PipelineTypeInput interface {
	pulumi.Input

	ToPipelineTypeOutput() PipelineTypeOutput
	ToPipelineTypeOutputWithContext(context.Context) PipelineTypeOutput
}

var pipelineTypePtrType = reflect.TypeOf((**PipelineType)(nil)).Elem()

type PipelineTypePtrInput interface {
	pulumi.Input

	ToPipelineTypePtrOutput() PipelineTypePtrOutput
	ToPipelineTypePtrOutputWithContext(context.Context) PipelineTypePtrOutput
}

type pipelineTypePtr string

func PipelineTypePtr(v string) PipelineTypePtrInput {
	return (*pipelineTypePtr)(&v)
}

func (*pipelineTypePtr) ElementType() reflect.Type {
	return pipelineTypePtrType
}

func (in *pipelineTypePtr) ToPipelineTypePtrOutput() PipelineTypePtrOutput {
	return pulumi.ToOutput(in).(PipelineTypePtrOutput)
}

func (in *pipelineTypePtr) ToPipelineTypePtrOutputWithContext(ctx context.Context) PipelineTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(PipelineTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineActionTypeIdCategoryInput)(nil)).Elem(), PipelineActionTypeIdCategory("Source"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineActionTypeIdCategoryPtrInput)(nil)).Elem(), PipelineActionTypeIdCategory("Source"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreTypeInput)(nil)).Elem(), PipelineArtifactStoreType("S3"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreTypePtrInput)(nil)).Elem(), PipelineArtifactStoreType("S3"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineBlockerDeclarationTypeInput)(nil)).Elem(), PipelineBlockerDeclarationType("Schedule"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineBlockerDeclarationTypePtrInput)(nil)).Elem(), PipelineBlockerDeclarationType("Schedule"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineExecutionModeInput)(nil)).Elem(), PipelineExecutionMode("QUEUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineExecutionModePtrInput)(nil)).Elem(), PipelineExecutionMode("QUEUED"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFailureConditionsResultInput)(nil)).Elem(), PipelineFailureConditionsResult("ROLLBACK"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineFailureConditionsResultPtrInput)(nil)).Elem(), PipelineFailureConditionsResult("ROLLBACK"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerDeclarationProviderTypeInput)(nil)).Elem(), PipelineTriggerDeclarationProviderType("CodeStarSourceConnection"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerDeclarationProviderTypePtrInput)(nil)).Elem(), PipelineTriggerDeclarationProviderType("CodeStarSourceConnection"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTypeInput)(nil)).Elem(), PipelineType("V1"))
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTypePtrInput)(nil)).Elem(), PipelineType("V1"))
	pulumi.RegisterOutputType(PipelineActionTypeIdCategoryOutput{})
	pulumi.RegisterOutputType(PipelineActionTypeIdCategoryPtrOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreTypeOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreTypePtrOutput{})
	pulumi.RegisterOutputType(PipelineBlockerDeclarationTypeOutput{})
	pulumi.RegisterOutputType(PipelineBlockerDeclarationTypePtrOutput{})
	pulumi.RegisterOutputType(PipelineExecutionModeOutput{})
	pulumi.RegisterOutputType(PipelineExecutionModePtrOutput{})
	pulumi.RegisterOutputType(PipelineFailureConditionsResultOutput{})
	pulumi.RegisterOutputType(PipelineFailureConditionsResultPtrOutput{})
	pulumi.RegisterOutputType(PipelineTriggerDeclarationProviderTypeOutput{})
	pulumi.RegisterOutputType(PipelineTriggerDeclarationProviderTypePtrOutput{})
	pulumi.RegisterOutputType(PipelineTypeOutput{})
	pulumi.RegisterOutputType(PipelineTypePtrOutput{})
}
