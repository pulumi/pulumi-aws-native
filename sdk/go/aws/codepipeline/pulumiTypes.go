// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package codepipeline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CustomActionTypeArtifactDetails struct {
	MaximumCount int `pulumi:"maximumCount"`
	MinimumCount int `pulumi:"minimumCount"`
}

// CustomActionTypeArtifactDetailsInput is an input type that accepts CustomActionTypeArtifactDetailsArgs and CustomActionTypeArtifactDetailsOutput values.
// You can construct a concrete instance of `CustomActionTypeArtifactDetailsInput` via:
//
//          CustomActionTypeArtifactDetailsArgs{...}
type CustomActionTypeArtifactDetailsInput interface {
	pulumi.Input

	ToCustomActionTypeArtifactDetailsOutput() CustomActionTypeArtifactDetailsOutput
	ToCustomActionTypeArtifactDetailsOutputWithContext(context.Context) CustomActionTypeArtifactDetailsOutput
}

type CustomActionTypeArtifactDetailsArgs struct {
	MaximumCount pulumi.IntInput `pulumi:"maximumCount"`
	MinimumCount pulumi.IntInput `pulumi:"minimumCount"`
}

func (CustomActionTypeArtifactDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeArtifactDetails)(nil)).Elem()
}

func (i CustomActionTypeArtifactDetailsArgs) ToCustomActionTypeArtifactDetailsOutput() CustomActionTypeArtifactDetailsOutput {
	return i.ToCustomActionTypeArtifactDetailsOutputWithContext(context.Background())
}

func (i CustomActionTypeArtifactDetailsArgs) ToCustomActionTypeArtifactDetailsOutputWithContext(ctx context.Context) CustomActionTypeArtifactDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeArtifactDetailsOutput)
}

func (i CustomActionTypeArtifactDetailsArgs) ToCustomActionTypeArtifactDetailsPtrOutput() CustomActionTypeArtifactDetailsPtrOutput {
	return i.ToCustomActionTypeArtifactDetailsPtrOutputWithContext(context.Background())
}

func (i CustomActionTypeArtifactDetailsArgs) ToCustomActionTypeArtifactDetailsPtrOutputWithContext(ctx context.Context) CustomActionTypeArtifactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeArtifactDetailsOutput).ToCustomActionTypeArtifactDetailsPtrOutputWithContext(ctx)
}

// CustomActionTypeArtifactDetailsPtrInput is an input type that accepts CustomActionTypeArtifactDetailsArgs, CustomActionTypeArtifactDetailsPtr and CustomActionTypeArtifactDetailsPtrOutput values.
// You can construct a concrete instance of `CustomActionTypeArtifactDetailsPtrInput` via:
//
//          CustomActionTypeArtifactDetailsArgs{...}
//
//  or:
//
//          nil
type CustomActionTypeArtifactDetailsPtrInput interface {
	pulumi.Input

	ToCustomActionTypeArtifactDetailsPtrOutput() CustomActionTypeArtifactDetailsPtrOutput
	ToCustomActionTypeArtifactDetailsPtrOutputWithContext(context.Context) CustomActionTypeArtifactDetailsPtrOutput
}

type customActionTypeArtifactDetailsPtrType CustomActionTypeArtifactDetailsArgs

func CustomActionTypeArtifactDetailsPtr(v *CustomActionTypeArtifactDetailsArgs) CustomActionTypeArtifactDetailsPtrInput {
	return (*customActionTypeArtifactDetailsPtrType)(v)
}

func (*customActionTypeArtifactDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionTypeArtifactDetails)(nil)).Elem()
}

func (i *customActionTypeArtifactDetailsPtrType) ToCustomActionTypeArtifactDetailsPtrOutput() CustomActionTypeArtifactDetailsPtrOutput {
	return i.ToCustomActionTypeArtifactDetailsPtrOutputWithContext(context.Background())
}

func (i *customActionTypeArtifactDetailsPtrType) ToCustomActionTypeArtifactDetailsPtrOutputWithContext(ctx context.Context) CustomActionTypeArtifactDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeArtifactDetailsPtrOutput)
}

type CustomActionTypeArtifactDetailsOutput struct{ *pulumi.OutputState }

func (CustomActionTypeArtifactDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeArtifactDetails)(nil)).Elem()
}

func (o CustomActionTypeArtifactDetailsOutput) ToCustomActionTypeArtifactDetailsOutput() CustomActionTypeArtifactDetailsOutput {
	return o
}

func (o CustomActionTypeArtifactDetailsOutput) ToCustomActionTypeArtifactDetailsOutputWithContext(ctx context.Context) CustomActionTypeArtifactDetailsOutput {
	return o
}

func (o CustomActionTypeArtifactDetailsOutput) ToCustomActionTypeArtifactDetailsPtrOutput() CustomActionTypeArtifactDetailsPtrOutput {
	return o.ToCustomActionTypeArtifactDetailsPtrOutputWithContext(context.Background())
}

func (o CustomActionTypeArtifactDetailsOutput) ToCustomActionTypeArtifactDetailsPtrOutputWithContext(ctx context.Context) CustomActionTypeArtifactDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomActionTypeArtifactDetails) *CustomActionTypeArtifactDetails {
		return &v
	}).(CustomActionTypeArtifactDetailsPtrOutput)
}

func (o CustomActionTypeArtifactDetailsOutput) MaximumCount() pulumi.IntOutput {
	return o.ApplyT(func(v CustomActionTypeArtifactDetails) int { return v.MaximumCount }).(pulumi.IntOutput)
}

func (o CustomActionTypeArtifactDetailsOutput) MinimumCount() pulumi.IntOutput {
	return o.ApplyT(func(v CustomActionTypeArtifactDetails) int { return v.MinimumCount }).(pulumi.IntOutput)
}

type CustomActionTypeArtifactDetailsPtrOutput struct{ *pulumi.OutputState }

func (CustomActionTypeArtifactDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionTypeArtifactDetails)(nil)).Elem()
}

func (o CustomActionTypeArtifactDetailsPtrOutput) ToCustomActionTypeArtifactDetailsPtrOutput() CustomActionTypeArtifactDetailsPtrOutput {
	return o
}

func (o CustomActionTypeArtifactDetailsPtrOutput) ToCustomActionTypeArtifactDetailsPtrOutputWithContext(ctx context.Context) CustomActionTypeArtifactDetailsPtrOutput {
	return o
}

func (o CustomActionTypeArtifactDetailsPtrOutput) Elem() CustomActionTypeArtifactDetailsOutput {
	return o.ApplyT(func(v *CustomActionTypeArtifactDetails) CustomActionTypeArtifactDetails {
		if v != nil {
			return *v
		}
		var ret CustomActionTypeArtifactDetails
		return ret
	}).(CustomActionTypeArtifactDetailsOutput)
}

func (o CustomActionTypeArtifactDetailsPtrOutput) MaximumCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeArtifactDetails) *int {
		if v == nil {
			return nil
		}
		return &v.MaximumCount
	}).(pulumi.IntPtrOutput)
}

func (o CustomActionTypeArtifactDetailsPtrOutput) MinimumCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeArtifactDetails) *int {
		if v == nil {
			return nil
		}
		return &v.MinimumCount
	}).(pulumi.IntPtrOutput)
}

type CustomActionTypeConfigurationProperties struct {
	Description *string `pulumi:"description"`
	Key         bool    `pulumi:"key"`
	Name        string  `pulumi:"name"`
	Queryable   *bool   `pulumi:"queryable"`
	Required    bool    `pulumi:"required"`
	Secret      bool    `pulumi:"secret"`
	Type        *string `pulumi:"type"`
}

// CustomActionTypeConfigurationPropertiesInput is an input type that accepts CustomActionTypeConfigurationPropertiesArgs and CustomActionTypeConfigurationPropertiesOutput values.
// You can construct a concrete instance of `CustomActionTypeConfigurationPropertiesInput` via:
//
//          CustomActionTypeConfigurationPropertiesArgs{...}
type CustomActionTypeConfigurationPropertiesInput interface {
	pulumi.Input

	ToCustomActionTypeConfigurationPropertiesOutput() CustomActionTypeConfigurationPropertiesOutput
	ToCustomActionTypeConfigurationPropertiesOutputWithContext(context.Context) CustomActionTypeConfigurationPropertiesOutput
}

type CustomActionTypeConfigurationPropertiesArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Key         pulumi.BoolInput      `pulumi:"key"`
	Name        pulumi.StringInput    `pulumi:"name"`
	Queryable   pulumi.BoolPtrInput   `pulumi:"queryable"`
	Required    pulumi.BoolInput      `pulumi:"required"`
	Secret      pulumi.BoolInput      `pulumi:"secret"`
	Type        pulumi.StringPtrInput `pulumi:"type"`
}

func (CustomActionTypeConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeConfigurationProperties)(nil)).Elem()
}

func (i CustomActionTypeConfigurationPropertiesArgs) ToCustomActionTypeConfigurationPropertiesOutput() CustomActionTypeConfigurationPropertiesOutput {
	return i.ToCustomActionTypeConfigurationPropertiesOutputWithContext(context.Background())
}

func (i CustomActionTypeConfigurationPropertiesArgs) ToCustomActionTypeConfigurationPropertiesOutputWithContext(ctx context.Context) CustomActionTypeConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeConfigurationPropertiesOutput)
}

// CustomActionTypeConfigurationPropertiesArrayInput is an input type that accepts CustomActionTypeConfigurationPropertiesArray and CustomActionTypeConfigurationPropertiesArrayOutput values.
// You can construct a concrete instance of `CustomActionTypeConfigurationPropertiesArrayInput` via:
//
//          CustomActionTypeConfigurationPropertiesArray{ CustomActionTypeConfigurationPropertiesArgs{...} }
type CustomActionTypeConfigurationPropertiesArrayInput interface {
	pulumi.Input

	ToCustomActionTypeConfigurationPropertiesArrayOutput() CustomActionTypeConfigurationPropertiesArrayOutput
	ToCustomActionTypeConfigurationPropertiesArrayOutputWithContext(context.Context) CustomActionTypeConfigurationPropertiesArrayOutput
}

type CustomActionTypeConfigurationPropertiesArray []CustomActionTypeConfigurationPropertiesInput

func (CustomActionTypeConfigurationPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionTypeConfigurationProperties)(nil)).Elem()
}

func (i CustomActionTypeConfigurationPropertiesArray) ToCustomActionTypeConfigurationPropertiesArrayOutput() CustomActionTypeConfigurationPropertiesArrayOutput {
	return i.ToCustomActionTypeConfigurationPropertiesArrayOutputWithContext(context.Background())
}

func (i CustomActionTypeConfigurationPropertiesArray) ToCustomActionTypeConfigurationPropertiesArrayOutputWithContext(ctx context.Context) CustomActionTypeConfigurationPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeConfigurationPropertiesArrayOutput)
}

type CustomActionTypeConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (CustomActionTypeConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeConfigurationProperties)(nil)).Elem()
}

func (o CustomActionTypeConfigurationPropertiesOutput) ToCustomActionTypeConfigurationPropertiesOutput() CustomActionTypeConfigurationPropertiesOutput {
	return o
}

func (o CustomActionTypeConfigurationPropertiesOutput) ToCustomActionTypeConfigurationPropertiesOutputWithContext(ctx context.Context) CustomActionTypeConfigurationPropertiesOutput {
	return o
}

func (o CustomActionTypeConfigurationPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o CustomActionTypeConfigurationPropertiesOutput) Key() pulumi.BoolOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) bool { return v.Key }).(pulumi.BoolOutput)
}

func (o CustomActionTypeConfigurationPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) string { return v.Name }).(pulumi.StringOutput)
}

func (o CustomActionTypeConfigurationPropertiesOutput) Queryable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) *bool { return v.Queryable }).(pulumi.BoolPtrOutput)
}

func (o CustomActionTypeConfigurationPropertiesOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) bool { return v.Required }).(pulumi.BoolOutput)
}

func (o CustomActionTypeConfigurationPropertiesOutput) Secret() pulumi.BoolOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) bool { return v.Secret }).(pulumi.BoolOutput)
}

func (o CustomActionTypeConfigurationPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CustomActionTypeConfigurationPropertiesArrayOutput struct{ *pulumi.OutputState }

func (CustomActionTypeConfigurationPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionTypeConfigurationProperties)(nil)).Elem()
}

func (o CustomActionTypeConfigurationPropertiesArrayOutput) ToCustomActionTypeConfigurationPropertiesArrayOutput() CustomActionTypeConfigurationPropertiesArrayOutput {
	return o
}

func (o CustomActionTypeConfigurationPropertiesArrayOutput) ToCustomActionTypeConfigurationPropertiesArrayOutputWithContext(ctx context.Context) CustomActionTypeConfigurationPropertiesArrayOutput {
	return o
}

func (o CustomActionTypeConfigurationPropertiesArrayOutput) Index(i pulumi.IntInput) CustomActionTypeConfigurationPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomActionTypeConfigurationProperties {
		return vs[0].([]CustomActionTypeConfigurationProperties)[vs[1].(int)]
	}).(CustomActionTypeConfigurationPropertiesOutput)
}

type CustomActionTypeSettings struct {
	EntityUrlTemplate          *string `pulumi:"entityUrlTemplate"`
	ExecutionUrlTemplate       *string `pulumi:"executionUrlTemplate"`
	RevisionUrlTemplate        *string `pulumi:"revisionUrlTemplate"`
	ThirdPartyConfigurationUrl *string `pulumi:"thirdPartyConfigurationUrl"`
}

// CustomActionTypeSettingsInput is an input type that accepts CustomActionTypeSettingsArgs and CustomActionTypeSettingsOutput values.
// You can construct a concrete instance of `CustomActionTypeSettingsInput` via:
//
//          CustomActionTypeSettingsArgs{...}
type CustomActionTypeSettingsInput interface {
	pulumi.Input

	ToCustomActionTypeSettingsOutput() CustomActionTypeSettingsOutput
	ToCustomActionTypeSettingsOutputWithContext(context.Context) CustomActionTypeSettingsOutput
}

type CustomActionTypeSettingsArgs struct {
	EntityUrlTemplate          pulumi.StringPtrInput `pulumi:"entityUrlTemplate"`
	ExecutionUrlTemplate       pulumi.StringPtrInput `pulumi:"executionUrlTemplate"`
	RevisionUrlTemplate        pulumi.StringPtrInput `pulumi:"revisionUrlTemplate"`
	ThirdPartyConfigurationUrl pulumi.StringPtrInput `pulumi:"thirdPartyConfigurationUrl"`
}

func (CustomActionTypeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeSettings)(nil)).Elem()
}

func (i CustomActionTypeSettingsArgs) ToCustomActionTypeSettingsOutput() CustomActionTypeSettingsOutput {
	return i.ToCustomActionTypeSettingsOutputWithContext(context.Background())
}

func (i CustomActionTypeSettingsArgs) ToCustomActionTypeSettingsOutputWithContext(ctx context.Context) CustomActionTypeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeSettingsOutput)
}

func (i CustomActionTypeSettingsArgs) ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput {
	return i.ToCustomActionTypeSettingsPtrOutputWithContext(context.Background())
}

func (i CustomActionTypeSettingsArgs) ToCustomActionTypeSettingsPtrOutputWithContext(ctx context.Context) CustomActionTypeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeSettingsOutput).ToCustomActionTypeSettingsPtrOutputWithContext(ctx)
}

// CustomActionTypeSettingsPtrInput is an input type that accepts CustomActionTypeSettingsArgs, CustomActionTypeSettingsPtr and CustomActionTypeSettingsPtrOutput values.
// You can construct a concrete instance of `CustomActionTypeSettingsPtrInput` via:
//
//          CustomActionTypeSettingsArgs{...}
//
//  or:
//
//          nil
type CustomActionTypeSettingsPtrInput interface {
	pulumi.Input

	ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput
	ToCustomActionTypeSettingsPtrOutputWithContext(context.Context) CustomActionTypeSettingsPtrOutput
}

type customActionTypeSettingsPtrType CustomActionTypeSettingsArgs

func CustomActionTypeSettingsPtr(v *CustomActionTypeSettingsArgs) CustomActionTypeSettingsPtrInput {
	return (*customActionTypeSettingsPtrType)(v)
}

func (*customActionTypeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionTypeSettings)(nil)).Elem()
}

func (i *customActionTypeSettingsPtrType) ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput {
	return i.ToCustomActionTypeSettingsPtrOutputWithContext(context.Background())
}

func (i *customActionTypeSettingsPtrType) ToCustomActionTypeSettingsPtrOutputWithContext(ctx context.Context) CustomActionTypeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeSettingsPtrOutput)
}

type CustomActionTypeSettingsOutput struct{ *pulumi.OutputState }

func (CustomActionTypeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeSettings)(nil)).Elem()
}

func (o CustomActionTypeSettingsOutput) ToCustomActionTypeSettingsOutput() CustomActionTypeSettingsOutput {
	return o
}

func (o CustomActionTypeSettingsOutput) ToCustomActionTypeSettingsOutputWithContext(ctx context.Context) CustomActionTypeSettingsOutput {
	return o
}

func (o CustomActionTypeSettingsOutput) ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput {
	return o.ToCustomActionTypeSettingsPtrOutputWithContext(context.Background())
}

func (o CustomActionTypeSettingsOutput) ToCustomActionTypeSettingsPtrOutputWithContext(ctx context.Context) CustomActionTypeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomActionTypeSettings) *CustomActionTypeSettings {
		return &v
	}).(CustomActionTypeSettingsPtrOutput)
}

func (o CustomActionTypeSettingsOutput) EntityUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeSettings) *string { return v.EntityUrlTemplate }).(pulumi.StringPtrOutput)
}

func (o CustomActionTypeSettingsOutput) ExecutionUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeSettings) *string { return v.ExecutionUrlTemplate }).(pulumi.StringPtrOutput)
}

func (o CustomActionTypeSettingsOutput) RevisionUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeSettings) *string { return v.RevisionUrlTemplate }).(pulumi.StringPtrOutput)
}

func (o CustomActionTypeSettingsOutput) ThirdPartyConfigurationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeSettings) *string { return v.ThirdPartyConfigurationUrl }).(pulumi.StringPtrOutput)
}

type CustomActionTypeSettingsPtrOutput struct{ *pulumi.OutputState }

func (CustomActionTypeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionTypeSettings)(nil)).Elem()
}

func (o CustomActionTypeSettingsPtrOutput) ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput {
	return o
}

func (o CustomActionTypeSettingsPtrOutput) ToCustomActionTypeSettingsPtrOutputWithContext(ctx context.Context) CustomActionTypeSettingsPtrOutput {
	return o
}

func (o CustomActionTypeSettingsPtrOutput) Elem() CustomActionTypeSettingsOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) CustomActionTypeSettings {
		if v != nil {
			return *v
		}
		var ret CustomActionTypeSettings
		return ret
	}).(CustomActionTypeSettingsOutput)
}

func (o CustomActionTypeSettingsPtrOutput) EntityUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) *string {
		if v == nil {
			return nil
		}
		return v.EntityUrlTemplate
	}).(pulumi.StringPtrOutput)
}

func (o CustomActionTypeSettingsPtrOutput) ExecutionUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionUrlTemplate
	}).(pulumi.StringPtrOutput)
}

func (o CustomActionTypeSettingsPtrOutput) RevisionUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) *string {
		if v == nil {
			return nil
		}
		return v.RevisionUrlTemplate
	}).(pulumi.StringPtrOutput)
}

func (o CustomActionTypeSettingsPtrOutput) ThirdPartyConfigurationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) *string {
		if v == nil {
			return nil
		}
		return v.ThirdPartyConfigurationUrl
	}).(pulumi.StringPtrOutput)
}

type CustomActionTypeTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// CustomActionTypeTagInput is an input type that accepts CustomActionTypeTagArgs and CustomActionTypeTagOutput values.
// You can construct a concrete instance of `CustomActionTypeTagInput` via:
//
//          CustomActionTypeTagArgs{...}
type CustomActionTypeTagInput interface {
	pulumi.Input

	ToCustomActionTypeTagOutput() CustomActionTypeTagOutput
	ToCustomActionTypeTagOutputWithContext(context.Context) CustomActionTypeTagOutput
}

type CustomActionTypeTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (CustomActionTypeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeTag)(nil)).Elem()
}

func (i CustomActionTypeTagArgs) ToCustomActionTypeTagOutput() CustomActionTypeTagOutput {
	return i.ToCustomActionTypeTagOutputWithContext(context.Background())
}

func (i CustomActionTypeTagArgs) ToCustomActionTypeTagOutputWithContext(ctx context.Context) CustomActionTypeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeTagOutput)
}

// CustomActionTypeTagArrayInput is an input type that accepts CustomActionTypeTagArray and CustomActionTypeTagArrayOutput values.
// You can construct a concrete instance of `CustomActionTypeTagArrayInput` via:
//
//          CustomActionTypeTagArray{ CustomActionTypeTagArgs{...} }
type CustomActionTypeTagArrayInput interface {
	pulumi.Input

	ToCustomActionTypeTagArrayOutput() CustomActionTypeTagArrayOutput
	ToCustomActionTypeTagArrayOutputWithContext(context.Context) CustomActionTypeTagArrayOutput
}

type CustomActionTypeTagArray []CustomActionTypeTagInput

func (CustomActionTypeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionTypeTag)(nil)).Elem()
}

func (i CustomActionTypeTagArray) ToCustomActionTypeTagArrayOutput() CustomActionTypeTagArrayOutput {
	return i.ToCustomActionTypeTagArrayOutputWithContext(context.Background())
}

func (i CustomActionTypeTagArray) ToCustomActionTypeTagArrayOutputWithContext(ctx context.Context) CustomActionTypeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeTagArrayOutput)
}

type CustomActionTypeTagOutput struct{ *pulumi.OutputState }

func (CustomActionTypeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeTag)(nil)).Elem()
}

func (o CustomActionTypeTagOutput) ToCustomActionTypeTagOutput() CustomActionTypeTagOutput {
	return o
}

func (o CustomActionTypeTagOutput) ToCustomActionTypeTagOutputWithContext(ctx context.Context) CustomActionTypeTagOutput {
	return o
}

func (o CustomActionTypeTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActionTypeTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o CustomActionTypeTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActionTypeTag) string { return v.Value }).(pulumi.StringOutput)
}

type CustomActionTypeTagArrayOutput struct{ *pulumi.OutputState }

func (CustomActionTypeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionTypeTag)(nil)).Elem()
}

func (o CustomActionTypeTagArrayOutput) ToCustomActionTypeTagArrayOutput() CustomActionTypeTagArrayOutput {
	return o
}

func (o CustomActionTypeTagArrayOutput) ToCustomActionTypeTagArrayOutputWithContext(ctx context.Context) CustomActionTypeTagArrayOutput {
	return o
}

func (o CustomActionTypeTagArrayOutput) Index(i pulumi.IntInput) CustomActionTypeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomActionTypeTag {
		return vs[0].([]CustomActionTypeTag)[vs[1].(int)]
	}).(CustomActionTypeTagOutput)
}

type PipelineActionDeclaration struct {
	ActionTypeId    PipelineActionTypeId     `pulumi:"actionTypeId"`
	Configuration   interface{}              `pulumi:"configuration"`
	InputArtifacts  []PipelineInputArtifact  `pulumi:"inputArtifacts"`
	Name            string                   `pulumi:"name"`
	Namespace       *string                  `pulumi:"namespace"`
	OutputArtifacts []PipelineOutputArtifact `pulumi:"outputArtifacts"`
	Region          *string                  `pulumi:"region"`
	RoleArn         *string                  `pulumi:"roleArn"`
	RunOrder        *int                     `pulumi:"runOrder"`
}

// PipelineActionDeclarationInput is an input type that accepts PipelineActionDeclarationArgs and PipelineActionDeclarationOutput values.
// You can construct a concrete instance of `PipelineActionDeclarationInput` via:
//
//          PipelineActionDeclarationArgs{...}
type PipelineActionDeclarationInput interface {
	pulumi.Input

	ToPipelineActionDeclarationOutput() PipelineActionDeclarationOutput
	ToPipelineActionDeclarationOutputWithContext(context.Context) PipelineActionDeclarationOutput
}

type PipelineActionDeclarationArgs struct {
	ActionTypeId    PipelineActionTypeIdInput        `pulumi:"actionTypeId"`
	Configuration   pulumi.Input                     `pulumi:"configuration"`
	InputArtifacts  PipelineInputArtifactArrayInput  `pulumi:"inputArtifacts"`
	Name            pulumi.StringInput               `pulumi:"name"`
	Namespace       pulumi.StringPtrInput            `pulumi:"namespace"`
	OutputArtifacts PipelineOutputArtifactArrayInput `pulumi:"outputArtifacts"`
	Region          pulumi.StringPtrInput            `pulumi:"region"`
	RoleArn         pulumi.StringPtrInput            `pulumi:"roleArn"`
	RunOrder        pulumi.IntPtrInput               `pulumi:"runOrder"`
}

func (PipelineActionDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActionDeclaration)(nil)).Elem()
}

func (i PipelineActionDeclarationArgs) ToPipelineActionDeclarationOutput() PipelineActionDeclarationOutput {
	return i.ToPipelineActionDeclarationOutputWithContext(context.Background())
}

func (i PipelineActionDeclarationArgs) ToPipelineActionDeclarationOutputWithContext(ctx context.Context) PipelineActionDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineActionDeclarationOutput)
}

// PipelineActionDeclarationArrayInput is an input type that accepts PipelineActionDeclarationArray and PipelineActionDeclarationArrayOutput values.
// You can construct a concrete instance of `PipelineActionDeclarationArrayInput` via:
//
//          PipelineActionDeclarationArray{ PipelineActionDeclarationArgs{...} }
type PipelineActionDeclarationArrayInput interface {
	pulumi.Input

	ToPipelineActionDeclarationArrayOutput() PipelineActionDeclarationArrayOutput
	ToPipelineActionDeclarationArrayOutputWithContext(context.Context) PipelineActionDeclarationArrayOutput
}

type PipelineActionDeclarationArray []PipelineActionDeclarationInput

func (PipelineActionDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineActionDeclaration)(nil)).Elem()
}

func (i PipelineActionDeclarationArray) ToPipelineActionDeclarationArrayOutput() PipelineActionDeclarationArrayOutput {
	return i.ToPipelineActionDeclarationArrayOutputWithContext(context.Background())
}

func (i PipelineActionDeclarationArray) ToPipelineActionDeclarationArrayOutputWithContext(ctx context.Context) PipelineActionDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineActionDeclarationArrayOutput)
}

type PipelineActionDeclarationOutput struct{ *pulumi.OutputState }

func (PipelineActionDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActionDeclaration)(nil)).Elem()
}

func (o PipelineActionDeclarationOutput) ToPipelineActionDeclarationOutput() PipelineActionDeclarationOutput {
	return o
}

func (o PipelineActionDeclarationOutput) ToPipelineActionDeclarationOutputWithContext(ctx context.Context) PipelineActionDeclarationOutput {
	return o
}

func (o PipelineActionDeclarationOutput) ActionTypeId() PipelineActionTypeIdOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) PipelineActionTypeId { return v.ActionTypeId }).(PipelineActionTypeIdOutput)
}

func (o PipelineActionDeclarationOutput) Configuration() pulumi.AnyOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) interface{} { return v.Configuration }).(pulumi.AnyOutput)
}

func (o PipelineActionDeclarationOutput) InputArtifacts() PipelineInputArtifactArrayOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) []PipelineInputArtifact { return v.InputArtifacts }).(PipelineInputArtifactArrayOutput)
}

func (o PipelineActionDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o PipelineActionDeclarationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o PipelineActionDeclarationOutput) OutputArtifacts() PipelineOutputArtifactArrayOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) []PipelineOutputArtifact { return v.OutputArtifacts }).(PipelineOutputArtifactArrayOutput)
}

func (o PipelineActionDeclarationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o PipelineActionDeclarationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o PipelineActionDeclarationOutput) RunOrder() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) *int { return v.RunOrder }).(pulumi.IntPtrOutput)
}

type PipelineActionDeclarationArrayOutput struct{ *pulumi.OutputState }

func (PipelineActionDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineActionDeclaration)(nil)).Elem()
}

func (o PipelineActionDeclarationArrayOutput) ToPipelineActionDeclarationArrayOutput() PipelineActionDeclarationArrayOutput {
	return o
}

func (o PipelineActionDeclarationArrayOutput) ToPipelineActionDeclarationArrayOutputWithContext(ctx context.Context) PipelineActionDeclarationArrayOutput {
	return o
}

func (o PipelineActionDeclarationArrayOutput) Index(i pulumi.IntInput) PipelineActionDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineActionDeclaration {
		return vs[0].([]PipelineActionDeclaration)[vs[1].(int)]
	}).(PipelineActionDeclarationOutput)
}

type PipelineActionTypeId struct {
	Category string `pulumi:"category"`
	Owner    string `pulumi:"owner"`
	Provider string `pulumi:"provider"`
	Version  string `pulumi:"version"`
}

// PipelineActionTypeIdInput is an input type that accepts PipelineActionTypeIdArgs and PipelineActionTypeIdOutput values.
// You can construct a concrete instance of `PipelineActionTypeIdInput` via:
//
//          PipelineActionTypeIdArgs{...}
type PipelineActionTypeIdInput interface {
	pulumi.Input

	ToPipelineActionTypeIdOutput() PipelineActionTypeIdOutput
	ToPipelineActionTypeIdOutputWithContext(context.Context) PipelineActionTypeIdOutput
}

type PipelineActionTypeIdArgs struct {
	Category pulumi.StringInput `pulumi:"category"`
	Owner    pulumi.StringInput `pulumi:"owner"`
	Provider pulumi.StringInput `pulumi:"provider"`
	Version  pulumi.StringInput `pulumi:"version"`
}

func (PipelineActionTypeIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActionTypeId)(nil)).Elem()
}

func (i PipelineActionTypeIdArgs) ToPipelineActionTypeIdOutput() PipelineActionTypeIdOutput {
	return i.ToPipelineActionTypeIdOutputWithContext(context.Background())
}

func (i PipelineActionTypeIdArgs) ToPipelineActionTypeIdOutputWithContext(ctx context.Context) PipelineActionTypeIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineActionTypeIdOutput)
}

type PipelineActionTypeIdOutput struct{ *pulumi.OutputState }

func (PipelineActionTypeIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActionTypeId)(nil)).Elem()
}

func (o PipelineActionTypeIdOutput) ToPipelineActionTypeIdOutput() PipelineActionTypeIdOutput {
	return o
}

func (o PipelineActionTypeIdOutput) ToPipelineActionTypeIdOutputWithContext(ctx context.Context) PipelineActionTypeIdOutput {
	return o
}

func (o PipelineActionTypeIdOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineActionTypeId) string { return v.Category }).(pulumi.StringOutput)
}

func (o PipelineActionTypeIdOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineActionTypeId) string { return v.Owner }).(pulumi.StringOutput)
}

func (o PipelineActionTypeIdOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineActionTypeId) string { return v.Provider }).(pulumi.StringOutput)
}

func (o PipelineActionTypeIdOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineActionTypeId) string { return v.Version }).(pulumi.StringOutput)
}

type PipelineArtifactStore struct {
	EncryptionKey *PipelineEncryptionKey `pulumi:"encryptionKey"`
	Location      string                 `pulumi:"location"`
	Type          string                 `pulumi:"type"`
}

// PipelineArtifactStoreInput is an input type that accepts PipelineArtifactStoreArgs and PipelineArtifactStoreOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreInput` via:
//
//          PipelineArtifactStoreArgs{...}
type PipelineArtifactStoreInput interface {
	pulumi.Input

	ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput
	ToPipelineArtifactStoreOutputWithContext(context.Context) PipelineArtifactStoreOutput
}

type PipelineArtifactStoreArgs struct {
	EncryptionKey PipelineEncryptionKeyPtrInput `pulumi:"encryptionKey"`
	Location      pulumi.StringInput            `pulumi:"location"`
	Type          pulumi.StringInput            `pulumi:"type"`
}

func (PipelineArtifactStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStore)(nil)).Elem()
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput {
	return i.ToPipelineArtifactStoreOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStoreOutputWithContext(ctx context.Context) PipelineArtifactStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreOutput)
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput {
	return i.ToPipelineArtifactStorePtrOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStorePtrOutputWithContext(ctx context.Context) PipelineArtifactStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreOutput).ToPipelineArtifactStorePtrOutputWithContext(ctx)
}

// PipelineArtifactStorePtrInput is an input type that accepts PipelineArtifactStoreArgs, PipelineArtifactStorePtr and PipelineArtifactStorePtrOutput values.
// You can construct a concrete instance of `PipelineArtifactStorePtrInput` via:
//
//          PipelineArtifactStoreArgs{...}
//
//  or:
//
//          nil
type PipelineArtifactStorePtrInput interface {
	pulumi.Input

	ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput
	ToPipelineArtifactStorePtrOutputWithContext(context.Context) PipelineArtifactStorePtrOutput
}

type pipelineArtifactStorePtrType PipelineArtifactStoreArgs

func PipelineArtifactStorePtr(v *PipelineArtifactStoreArgs) PipelineArtifactStorePtrInput {
	return (*pipelineArtifactStorePtrType)(v)
}

func (*pipelineArtifactStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineArtifactStore)(nil)).Elem()
}

func (i *pipelineArtifactStorePtrType) ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput {
	return i.ToPipelineArtifactStorePtrOutputWithContext(context.Background())
}

func (i *pipelineArtifactStorePtrType) ToPipelineArtifactStorePtrOutputWithContext(ctx context.Context) PipelineArtifactStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStorePtrOutput)
}

type PipelineArtifactStoreOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStore)(nil)).Elem()
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput {
	return o
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStoreOutputWithContext(ctx context.Context) PipelineArtifactStoreOutput {
	return o
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput {
	return o.ToPipelineArtifactStorePtrOutputWithContext(context.Background())
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStorePtrOutputWithContext(ctx context.Context) PipelineArtifactStorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineArtifactStore) *PipelineArtifactStore {
		return &v
	}).(PipelineArtifactStorePtrOutput)
}

func (o PipelineArtifactStoreOutput) EncryptionKey() PipelineEncryptionKeyPtrOutput {
	return o.ApplyT(func(v PipelineArtifactStore) *PipelineEncryptionKey { return v.EncryptionKey }).(PipelineEncryptionKeyPtrOutput)
}

func (o PipelineArtifactStoreOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStore) string { return v.Location }).(pulumi.StringOutput)
}

func (o PipelineArtifactStoreOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStore) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineArtifactStorePtrOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineArtifactStore)(nil)).Elem()
}

func (o PipelineArtifactStorePtrOutput) ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput {
	return o
}

func (o PipelineArtifactStorePtrOutput) ToPipelineArtifactStorePtrOutputWithContext(ctx context.Context) PipelineArtifactStorePtrOutput {
	return o
}

func (o PipelineArtifactStorePtrOutput) Elem() PipelineArtifactStoreOutput {
	return o.ApplyT(func(v *PipelineArtifactStore) PipelineArtifactStore {
		if v != nil {
			return *v
		}
		var ret PipelineArtifactStore
		return ret
	}).(PipelineArtifactStoreOutput)
}

func (o PipelineArtifactStorePtrOutput) EncryptionKey() PipelineEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *PipelineArtifactStore) *PipelineEncryptionKey {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(PipelineEncryptionKeyPtrOutput)
}

func (o PipelineArtifactStorePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineArtifactStore) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

func (o PipelineArtifactStorePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineArtifactStore) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PipelineArtifactStoreMap struct {
	ArtifactStore PipelineArtifactStore `pulumi:"artifactStore"`
	Region        string                `pulumi:"region"`
}

// PipelineArtifactStoreMapInput is an input type that accepts PipelineArtifactStoreMap and PipelineArtifactStoreMapOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreMapInput` via:
//
//          PipelineArtifactStoreMap{ "key": PipelineArtifactStoreArgs{...} }
type PipelineArtifactStoreMapInput interface {
	pulumi.Input

	ToPipelineArtifactStoreMapOutput() PipelineArtifactStoreMapOutput
	ToPipelineArtifactStoreMapOutputWithContext(context.Context) PipelineArtifactStoreMapOutput
}

type PipelineArtifactStoreMapArgs struct {
	ArtifactStore PipelineArtifactStoreInput `pulumi:"artifactStore"`
	Region        pulumi.StringInput         `pulumi:"region"`
}

func (PipelineArtifactStoreMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStoreMap)(nil)).Elem()
}

func (i PipelineArtifactStoreMapArgs) ToPipelineArtifactStoreMapOutput() PipelineArtifactStoreMapOutput {
	return i.ToPipelineArtifactStoreMapOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreMapArgs) ToPipelineArtifactStoreMapOutputWithContext(ctx context.Context) PipelineArtifactStoreMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreMapOutput)
}

// PipelineArtifactStoreMapArrayInput is an input type that accepts PipelineArtifactStoreMapArray and PipelineArtifactStoreMapArrayOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreMapArrayInput` via:
//
//          PipelineArtifactStoreMapArray{ PipelineArtifactStoreMapArgs{...} }
type PipelineArtifactStoreMapArrayInput interface {
	pulumi.Input

	ToPipelineArtifactStoreMapArrayOutput() PipelineArtifactStoreMapArrayOutput
	ToPipelineArtifactStoreMapArrayOutputWithContext(context.Context) PipelineArtifactStoreMapArrayOutput
}

type PipelineArtifactStoreMapArray []PipelineArtifactStoreMapInput

func (PipelineArtifactStoreMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineArtifactStoreMap)(nil)).Elem()
}

func (i PipelineArtifactStoreMapArray) ToPipelineArtifactStoreMapArrayOutput() PipelineArtifactStoreMapArrayOutput {
	return i.ToPipelineArtifactStoreMapArrayOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreMapArray) ToPipelineArtifactStoreMapArrayOutputWithContext(ctx context.Context) PipelineArtifactStoreMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreMapArrayOutput)
}

type PipelineArtifactStoreMapOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStoreMap)(nil)).Elem()
}

func (o PipelineArtifactStoreMapOutput) ToPipelineArtifactStoreMapOutput() PipelineArtifactStoreMapOutput {
	return o
}

func (o PipelineArtifactStoreMapOutput) ToPipelineArtifactStoreMapOutputWithContext(ctx context.Context) PipelineArtifactStoreMapOutput {
	return o
}

func (o PipelineArtifactStoreMapOutput) ArtifactStore() PipelineArtifactStoreOutput {
	return o.ApplyT(func(v PipelineArtifactStoreMap) PipelineArtifactStore { return v.ArtifactStore }).(PipelineArtifactStoreOutput)
}

func (o PipelineArtifactStoreMapOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStoreMap) string { return v.Region }).(pulumi.StringOutput)
}

type PipelineArtifactStoreMapArrayOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineArtifactStoreMap)(nil)).Elem()
}

func (o PipelineArtifactStoreMapArrayOutput) ToPipelineArtifactStoreMapArrayOutput() PipelineArtifactStoreMapArrayOutput {
	return o
}

func (o PipelineArtifactStoreMapArrayOutput) ToPipelineArtifactStoreMapArrayOutputWithContext(ctx context.Context) PipelineArtifactStoreMapArrayOutput {
	return o
}

func (o PipelineArtifactStoreMapArrayOutput) Index(i pulumi.IntInput) PipelineArtifactStoreMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineArtifactStoreMap {
		return vs[0].([]PipelineArtifactStoreMap)[vs[1].(int)]
	}).(PipelineArtifactStoreMapOutput)
}

type PipelineBlockerDeclaration struct {
	Name string `pulumi:"name"`
	Type string `pulumi:"type"`
}

// PipelineBlockerDeclarationInput is an input type that accepts PipelineBlockerDeclarationArgs and PipelineBlockerDeclarationOutput values.
// You can construct a concrete instance of `PipelineBlockerDeclarationInput` via:
//
//          PipelineBlockerDeclarationArgs{...}
type PipelineBlockerDeclarationInput interface {
	pulumi.Input

	ToPipelineBlockerDeclarationOutput() PipelineBlockerDeclarationOutput
	ToPipelineBlockerDeclarationOutputWithContext(context.Context) PipelineBlockerDeclarationOutput
}

type PipelineBlockerDeclarationArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (PipelineBlockerDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineBlockerDeclaration)(nil)).Elem()
}

func (i PipelineBlockerDeclarationArgs) ToPipelineBlockerDeclarationOutput() PipelineBlockerDeclarationOutput {
	return i.ToPipelineBlockerDeclarationOutputWithContext(context.Background())
}

func (i PipelineBlockerDeclarationArgs) ToPipelineBlockerDeclarationOutputWithContext(ctx context.Context) PipelineBlockerDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineBlockerDeclarationOutput)
}

// PipelineBlockerDeclarationArrayInput is an input type that accepts PipelineBlockerDeclarationArray and PipelineBlockerDeclarationArrayOutput values.
// You can construct a concrete instance of `PipelineBlockerDeclarationArrayInput` via:
//
//          PipelineBlockerDeclarationArray{ PipelineBlockerDeclarationArgs{...} }
type PipelineBlockerDeclarationArrayInput interface {
	pulumi.Input

	ToPipelineBlockerDeclarationArrayOutput() PipelineBlockerDeclarationArrayOutput
	ToPipelineBlockerDeclarationArrayOutputWithContext(context.Context) PipelineBlockerDeclarationArrayOutput
}

type PipelineBlockerDeclarationArray []PipelineBlockerDeclarationInput

func (PipelineBlockerDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineBlockerDeclaration)(nil)).Elem()
}

func (i PipelineBlockerDeclarationArray) ToPipelineBlockerDeclarationArrayOutput() PipelineBlockerDeclarationArrayOutput {
	return i.ToPipelineBlockerDeclarationArrayOutputWithContext(context.Background())
}

func (i PipelineBlockerDeclarationArray) ToPipelineBlockerDeclarationArrayOutputWithContext(ctx context.Context) PipelineBlockerDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineBlockerDeclarationArrayOutput)
}

type PipelineBlockerDeclarationOutput struct{ *pulumi.OutputState }

func (PipelineBlockerDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineBlockerDeclaration)(nil)).Elem()
}

func (o PipelineBlockerDeclarationOutput) ToPipelineBlockerDeclarationOutput() PipelineBlockerDeclarationOutput {
	return o
}

func (o PipelineBlockerDeclarationOutput) ToPipelineBlockerDeclarationOutputWithContext(ctx context.Context) PipelineBlockerDeclarationOutput {
	return o
}

func (o PipelineBlockerDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineBlockerDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o PipelineBlockerDeclarationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineBlockerDeclaration) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineBlockerDeclarationArrayOutput struct{ *pulumi.OutputState }

func (PipelineBlockerDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineBlockerDeclaration)(nil)).Elem()
}

func (o PipelineBlockerDeclarationArrayOutput) ToPipelineBlockerDeclarationArrayOutput() PipelineBlockerDeclarationArrayOutput {
	return o
}

func (o PipelineBlockerDeclarationArrayOutput) ToPipelineBlockerDeclarationArrayOutputWithContext(ctx context.Context) PipelineBlockerDeclarationArrayOutput {
	return o
}

func (o PipelineBlockerDeclarationArrayOutput) Index(i pulumi.IntInput) PipelineBlockerDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineBlockerDeclaration {
		return vs[0].([]PipelineBlockerDeclaration)[vs[1].(int)]
	}).(PipelineBlockerDeclarationOutput)
}

type PipelineEncryptionKey struct {
	Id   string `pulumi:"id"`
	Type string `pulumi:"type"`
}

// PipelineEncryptionKeyInput is an input type that accepts PipelineEncryptionKeyArgs and PipelineEncryptionKeyOutput values.
// You can construct a concrete instance of `PipelineEncryptionKeyInput` via:
//
//          PipelineEncryptionKeyArgs{...}
type PipelineEncryptionKeyInput interface {
	pulumi.Input

	ToPipelineEncryptionKeyOutput() PipelineEncryptionKeyOutput
	ToPipelineEncryptionKeyOutputWithContext(context.Context) PipelineEncryptionKeyOutput
}

type PipelineEncryptionKeyArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (PipelineEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineEncryptionKey)(nil)).Elem()
}

func (i PipelineEncryptionKeyArgs) ToPipelineEncryptionKeyOutput() PipelineEncryptionKeyOutput {
	return i.ToPipelineEncryptionKeyOutputWithContext(context.Background())
}

func (i PipelineEncryptionKeyArgs) ToPipelineEncryptionKeyOutputWithContext(ctx context.Context) PipelineEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineEncryptionKeyOutput)
}

func (i PipelineEncryptionKeyArgs) ToPipelineEncryptionKeyPtrOutput() PipelineEncryptionKeyPtrOutput {
	return i.ToPipelineEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i PipelineEncryptionKeyArgs) ToPipelineEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineEncryptionKeyOutput).ToPipelineEncryptionKeyPtrOutputWithContext(ctx)
}

// PipelineEncryptionKeyPtrInput is an input type that accepts PipelineEncryptionKeyArgs, PipelineEncryptionKeyPtr and PipelineEncryptionKeyPtrOutput values.
// You can construct a concrete instance of `PipelineEncryptionKeyPtrInput` via:
//
//          PipelineEncryptionKeyArgs{...}
//
//  or:
//
//          nil
type PipelineEncryptionKeyPtrInput interface {
	pulumi.Input

	ToPipelineEncryptionKeyPtrOutput() PipelineEncryptionKeyPtrOutput
	ToPipelineEncryptionKeyPtrOutputWithContext(context.Context) PipelineEncryptionKeyPtrOutput
}

type pipelineEncryptionKeyPtrType PipelineEncryptionKeyArgs

func PipelineEncryptionKeyPtr(v *PipelineEncryptionKeyArgs) PipelineEncryptionKeyPtrInput {
	return (*pipelineEncryptionKeyPtrType)(v)
}

func (*pipelineEncryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineEncryptionKey)(nil)).Elem()
}

func (i *pipelineEncryptionKeyPtrType) ToPipelineEncryptionKeyPtrOutput() PipelineEncryptionKeyPtrOutput {
	return i.ToPipelineEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *pipelineEncryptionKeyPtrType) ToPipelineEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineEncryptionKeyPtrOutput)
}

type PipelineEncryptionKeyOutput struct{ *pulumi.OutputState }

func (PipelineEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineEncryptionKey)(nil)).Elem()
}

func (o PipelineEncryptionKeyOutput) ToPipelineEncryptionKeyOutput() PipelineEncryptionKeyOutput {
	return o
}

func (o PipelineEncryptionKeyOutput) ToPipelineEncryptionKeyOutputWithContext(ctx context.Context) PipelineEncryptionKeyOutput {
	return o
}

func (o PipelineEncryptionKeyOutput) ToPipelineEncryptionKeyPtrOutput() PipelineEncryptionKeyPtrOutput {
	return o.ToPipelineEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o PipelineEncryptionKeyOutput) ToPipelineEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineEncryptionKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineEncryptionKey) *PipelineEncryptionKey {
		return &v
	}).(PipelineEncryptionKeyPtrOutput)
}

func (o PipelineEncryptionKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineEncryptionKey) string { return v.Id }).(pulumi.StringOutput)
}

func (o PipelineEncryptionKeyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineEncryptionKey) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineEncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (PipelineEncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineEncryptionKey)(nil)).Elem()
}

func (o PipelineEncryptionKeyPtrOutput) ToPipelineEncryptionKeyPtrOutput() PipelineEncryptionKeyPtrOutput {
	return o
}

func (o PipelineEncryptionKeyPtrOutput) ToPipelineEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineEncryptionKeyPtrOutput {
	return o
}

func (o PipelineEncryptionKeyPtrOutput) Elem() PipelineEncryptionKeyOutput {
	return o.ApplyT(func(v *PipelineEncryptionKey) PipelineEncryptionKey {
		if v != nil {
			return *v
		}
		var ret PipelineEncryptionKey
		return ret
	}).(PipelineEncryptionKeyOutput)
}

func (o PipelineEncryptionKeyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o PipelineEncryptionKeyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PipelineInputArtifact struct {
	Name string `pulumi:"name"`
}

// PipelineInputArtifactInput is an input type that accepts PipelineInputArtifactArgs and PipelineInputArtifactOutput values.
// You can construct a concrete instance of `PipelineInputArtifactInput` via:
//
//          PipelineInputArtifactArgs{...}
type PipelineInputArtifactInput interface {
	pulumi.Input

	ToPipelineInputArtifactOutput() PipelineInputArtifactOutput
	ToPipelineInputArtifactOutputWithContext(context.Context) PipelineInputArtifactOutput
}

type PipelineInputArtifactArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (PipelineInputArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineInputArtifact)(nil)).Elem()
}

func (i PipelineInputArtifactArgs) ToPipelineInputArtifactOutput() PipelineInputArtifactOutput {
	return i.ToPipelineInputArtifactOutputWithContext(context.Background())
}

func (i PipelineInputArtifactArgs) ToPipelineInputArtifactOutputWithContext(ctx context.Context) PipelineInputArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineInputArtifactOutput)
}

// PipelineInputArtifactArrayInput is an input type that accepts PipelineInputArtifactArray and PipelineInputArtifactArrayOutput values.
// You can construct a concrete instance of `PipelineInputArtifactArrayInput` via:
//
//          PipelineInputArtifactArray{ PipelineInputArtifactArgs{...} }
type PipelineInputArtifactArrayInput interface {
	pulumi.Input

	ToPipelineInputArtifactArrayOutput() PipelineInputArtifactArrayOutput
	ToPipelineInputArtifactArrayOutputWithContext(context.Context) PipelineInputArtifactArrayOutput
}

type PipelineInputArtifactArray []PipelineInputArtifactInput

func (PipelineInputArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineInputArtifact)(nil)).Elem()
}

func (i PipelineInputArtifactArray) ToPipelineInputArtifactArrayOutput() PipelineInputArtifactArrayOutput {
	return i.ToPipelineInputArtifactArrayOutputWithContext(context.Background())
}

func (i PipelineInputArtifactArray) ToPipelineInputArtifactArrayOutputWithContext(ctx context.Context) PipelineInputArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineInputArtifactArrayOutput)
}

type PipelineInputArtifactOutput struct{ *pulumi.OutputState }

func (PipelineInputArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineInputArtifact)(nil)).Elem()
}

func (o PipelineInputArtifactOutput) ToPipelineInputArtifactOutput() PipelineInputArtifactOutput {
	return o
}

func (o PipelineInputArtifactOutput) ToPipelineInputArtifactOutputWithContext(ctx context.Context) PipelineInputArtifactOutput {
	return o
}

func (o PipelineInputArtifactOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineInputArtifact) string { return v.Name }).(pulumi.StringOutput)
}

type PipelineInputArtifactArrayOutput struct{ *pulumi.OutputState }

func (PipelineInputArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineInputArtifact)(nil)).Elem()
}

func (o PipelineInputArtifactArrayOutput) ToPipelineInputArtifactArrayOutput() PipelineInputArtifactArrayOutput {
	return o
}

func (o PipelineInputArtifactArrayOutput) ToPipelineInputArtifactArrayOutputWithContext(ctx context.Context) PipelineInputArtifactArrayOutput {
	return o
}

func (o PipelineInputArtifactArrayOutput) Index(i pulumi.IntInput) PipelineInputArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineInputArtifact {
		return vs[0].([]PipelineInputArtifact)[vs[1].(int)]
	}).(PipelineInputArtifactOutput)
}

type PipelineOutputArtifact struct {
	Name string `pulumi:"name"`
}

// PipelineOutputArtifactInput is an input type that accepts PipelineOutputArtifactArgs and PipelineOutputArtifactOutput values.
// You can construct a concrete instance of `PipelineOutputArtifactInput` via:
//
//          PipelineOutputArtifactArgs{...}
type PipelineOutputArtifactInput interface {
	pulumi.Input

	ToPipelineOutputArtifactOutput() PipelineOutputArtifactOutput
	ToPipelineOutputArtifactOutputWithContext(context.Context) PipelineOutputArtifactOutput
}

type PipelineOutputArtifactArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (PipelineOutputArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineOutputArtifact)(nil)).Elem()
}

func (i PipelineOutputArtifactArgs) ToPipelineOutputArtifactOutput() PipelineOutputArtifactOutput {
	return i.ToPipelineOutputArtifactOutputWithContext(context.Background())
}

func (i PipelineOutputArtifactArgs) ToPipelineOutputArtifactOutputWithContext(ctx context.Context) PipelineOutputArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineOutputArtifactOutput)
}

// PipelineOutputArtifactArrayInput is an input type that accepts PipelineOutputArtifactArray and PipelineOutputArtifactArrayOutput values.
// You can construct a concrete instance of `PipelineOutputArtifactArrayInput` via:
//
//          PipelineOutputArtifactArray{ PipelineOutputArtifactArgs{...} }
type PipelineOutputArtifactArrayInput interface {
	pulumi.Input

	ToPipelineOutputArtifactArrayOutput() PipelineOutputArtifactArrayOutput
	ToPipelineOutputArtifactArrayOutputWithContext(context.Context) PipelineOutputArtifactArrayOutput
}

type PipelineOutputArtifactArray []PipelineOutputArtifactInput

func (PipelineOutputArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineOutputArtifact)(nil)).Elem()
}

func (i PipelineOutputArtifactArray) ToPipelineOutputArtifactArrayOutput() PipelineOutputArtifactArrayOutput {
	return i.ToPipelineOutputArtifactArrayOutputWithContext(context.Background())
}

func (i PipelineOutputArtifactArray) ToPipelineOutputArtifactArrayOutputWithContext(ctx context.Context) PipelineOutputArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineOutputArtifactArrayOutput)
}

type PipelineOutputArtifactOutput struct{ *pulumi.OutputState }

func (PipelineOutputArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineOutputArtifact)(nil)).Elem()
}

func (o PipelineOutputArtifactOutput) ToPipelineOutputArtifactOutput() PipelineOutputArtifactOutput {
	return o
}

func (o PipelineOutputArtifactOutput) ToPipelineOutputArtifactOutputWithContext(ctx context.Context) PipelineOutputArtifactOutput {
	return o
}

func (o PipelineOutputArtifactOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineOutputArtifact) string { return v.Name }).(pulumi.StringOutput)
}

type PipelineOutputArtifactArrayOutput struct{ *pulumi.OutputState }

func (PipelineOutputArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineOutputArtifact)(nil)).Elem()
}

func (o PipelineOutputArtifactArrayOutput) ToPipelineOutputArtifactArrayOutput() PipelineOutputArtifactArrayOutput {
	return o
}

func (o PipelineOutputArtifactArrayOutput) ToPipelineOutputArtifactArrayOutputWithContext(ctx context.Context) PipelineOutputArtifactArrayOutput {
	return o
}

func (o PipelineOutputArtifactArrayOutput) Index(i pulumi.IntInput) PipelineOutputArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineOutputArtifact {
		return vs[0].([]PipelineOutputArtifact)[vs[1].(int)]
	}).(PipelineOutputArtifactOutput)
}

type PipelineStageDeclaration struct {
	Actions  []PipelineActionDeclaration  `pulumi:"actions"`
	Blockers []PipelineBlockerDeclaration `pulumi:"blockers"`
	Name     string                       `pulumi:"name"`
}

// PipelineStageDeclarationInput is an input type that accepts PipelineStageDeclarationArgs and PipelineStageDeclarationOutput values.
// You can construct a concrete instance of `PipelineStageDeclarationInput` via:
//
//          PipelineStageDeclarationArgs{...}
type PipelineStageDeclarationInput interface {
	pulumi.Input

	ToPipelineStageDeclarationOutput() PipelineStageDeclarationOutput
	ToPipelineStageDeclarationOutputWithContext(context.Context) PipelineStageDeclarationOutput
}

type PipelineStageDeclarationArgs struct {
	Actions  PipelineActionDeclarationArrayInput  `pulumi:"actions"`
	Blockers PipelineBlockerDeclarationArrayInput `pulumi:"blockers"`
	Name     pulumi.StringInput                   `pulumi:"name"`
}

func (PipelineStageDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStageDeclaration)(nil)).Elem()
}

func (i PipelineStageDeclarationArgs) ToPipelineStageDeclarationOutput() PipelineStageDeclarationOutput {
	return i.ToPipelineStageDeclarationOutputWithContext(context.Background())
}

func (i PipelineStageDeclarationArgs) ToPipelineStageDeclarationOutputWithContext(ctx context.Context) PipelineStageDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageDeclarationOutput)
}

// PipelineStageDeclarationArrayInput is an input type that accepts PipelineStageDeclarationArray and PipelineStageDeclarationArrayOutput values.
// You can construct a concrete instance of `PipelineStageDeclarationArrayInput` via:
//
//          PipelineStageDeclarationArray{ PipelineStageDeclarationArgs{...} }
type PipelineStageDeclarationArrayInput interface {
	pulumi.Input

	ToPipelineStageDeclarationArrayOutput() PipelineStageDeclarationArrayOutput
	ToPipelineStageDeclarationArrayOutputWithContext(context.Context) PipelineStageDeclarationArrayOutput
}

type PipelineStageDeclarationArray []PipelineStageDeclarationInput

func (PipelineStageDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStageDeclaration)(nil)).Elem()
}

func (i PipelineStageDeclarationArray) ToPipelineStageDeclarationArrayOutput() PipelineStageDeclarationArrayOutput {
	return i.ToPipelineStageDeclarationArrayOutputWithContext(context.Background())
}

func (i PipelineStageDeclarationArray) ToPipelineStageDeclarationArrayOutputWithContext(ctx context.Context) PipelineStageDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageDeclarationArrayOutput)
}

type PipelineStageDeclarationOutput struct{ *pulumi.OutputState }

func (PipelineStageDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStageDeclaration)(nil)).Elem()
}

func (o PipelineStageDeclarationOutput) ToPipelineStageDeclarationOutput() PipelineStageDeclarationOutput {
	return o
}

func (o PipelineStageDeclarationOutput) ToPipelineStageDeclarationOutputWithContext(ctx context.Context) PipelineStageDeclarationOutput {
	return o
}

func (o PipelineStageDeclarationOutput) Actions() PipelineActionDeclarationArrayOutput {
	return o.ApplyT(func(v PipelineStageDeclaration) []PipelineActionDeclaration { return v.Actions }).(PipelineActionDeclarationArrayOutput)
}

func (o PipelineStageDeclarationOutput) Blockers() PipelineBlockerDeclarationArrayOutput {
	return o.ApplyT(func(v PipelineStageDeclaration) []PipelineBlockerDeclaration { return v.Blockers }).(PipelineBlockerDeclarationArrayOutput)
}

func (o PipelineStageDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

type PipelineStageDeclarationArrayOutput struct{ *pulumi.OutputState }

func (PipelineStageDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStageDeclaration)(nil)).Elem()
}

func (o PipelineStageDeclarationArrayOutput) ToPipelineStageDeclarationArrayOutput() PipelineStageDeclarationArrayOutput {
	return o
}

func (o PipelineStageDeclarationArrayOutput) ToPipelineStageDeclarationArrayOutputWithContext(ctx context.Context) PipelineStageDeclarationArrayOutput {
	return o
}

func (o PipelineStageDeclarationArrayOutput) Index(i pulumi.IntInput) PipelineStageDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineStageDeclaration {
		return vs[0].([]PipelineStageDeclaration)[vs[1].(int)]
	}).(PipelineStageDeclarationOutput)
}

type PipelineStageTransition struct {
	Reason    string `pulumi:"reason"`
	StageName string `pulumi:"stageName"`
}

// PipelineStageTransitionInput is an input type that accepts PipelineStageTransitionArgs and PipelineStageTransitionOutput values.
// You can construct a concrete instance of `PipelineStageTransitionInput` via:
//
//          PipelineStageTransitionArgs{...}
type PipelineStageTransitionInput interface {
	pulumi.Input

	ToPipelineStageTransitionOutput() PipelineStageTransitionOutput
	ToPipelineStageTransitionOutputWithContext(context.Context) PipelineStageTransitionOutput
}

type PipelineStageTransitionArgs struct {
	Reason    pulumi.StringInput `pulumi:"reason"`
	StageName pulumi.StringInput `pulumi:"stageName"`
}

func (PipelineStageTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStageTransition)(nil)).Elem()
}

func (i PipelineStageTransitionArgs) ToPipelineStageTransitionOutput() PipelineStageTransitionOutput {
	return i.ToPipelineStageTransitionOutputWithContext(context.Background())
}

func (i PipelineStageTransitionArgs) ToPipelineStageTransitionOutputWithContext(ctx context.Context) PipelineStageTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageTransitionOutput)
}

// PipelineStageTransitionArrayInput is an input type that accepts PipelineStageTransitionArray and PipelineStageTransitionArrayOutput values.
// You can construct a concrete instance of `PipelineStageTransitionArrayInput` via:
//
//          PipelineStageTransitionArray{ PipelineStageTransitionArgs{...} }
type PipelineStageTransitionArrayInput interface {
	pulumi.Input

	ToPipelineStageTransitionArrayOutput() PipelineStageTransitionArrayOutput
	ToPipelineStageTransitionArrayOutputWithContext(context.Context) PipelineStageTransitionArrayOutput
}

type PipelineStageTransitionArray []PipelineStageTransitionInput

func (PipelineStageTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStageTransition)(nil)).Elem()
}

func (i PipelineStageTransitionArray) ToPipelineStageTransitionArrayOutput() PipelineStageTransitionArrayOutput {
	return i.ToPipelineStageTransitionArrayOutputWithContext(context.Background())
}

func (i PipelineStageTransitionArray) ToPipelineStageTransitionArrayOutputWithContext(ctx context.Context) PipelineStageTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageTransitionArrayOutput)
}

type PipelineStageTransitionOutput struct{ *pulumi.OutputState }

func (PipelineStageTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStageTransition)(nil)).Elem()
}

func (o PipelineStageTransitionOutput) ToPipelineStageTransitionOutput() PipelineStageTransitionOutput {
	return o
}

func (o PipelineStageTransitionOutput) ToPipelineStageTransitionOutputWithContext(ctx context.Context) PipelineStageTransitionOutput {
	return o
}

func (o PipelineStageTransitionOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageTransition) string { return v.Reason }).(pulumi.StringOutput)
}

func (o PipelineStageTransitionOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageTransition) string { return v.StageName }).(pulumi.StringOutput)
}

type PipelineStageTransitionArrayOutput struct{ *pulumi.OutputState }

func (PipelineStageTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStageTransition)(nil)).Elem()
}

func (o PipelineStageTransitionArrayOutput) ToPipelineStageTransitionArrayOutput() PipelineStageTransitionArrayOutput {
	return o
}

func (o PipelineStageTransitionArrayOutput) ToPipelineStageTransitionArrayOutputWithContext(ctx context.Context) PipelineStageTransitionArrayOutput {
	return o
}

func (o PipelineStageTransitionArrayOutput) Index(i pulumi.IntInput) PipelineStageTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineStageTransition {
		return vs[0].([]PipelineStageTransition)[vs[1].(int)]
	}).(PipelineStageTransitionOutput)
}

type PipelineTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// PipelineTagInput is an input type that accepts PipelineTagArgs and PipelineTagOutput values.
// You can construct a concrete instance of `PipelineTagInput` via:
//
//          PipelineTagArgs{...}
type PipelineTagInput interface {
	pulumi.Input

	ToPipelineTagOutput() PipelineTagOutput
	ToPipelineTagOutputWithContext(context.Context) PipelineTagOutput
}

type PipelineTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PipelineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTag)(nil)).Elem()
}

func (i PipelineTagArgs) ToPipelineTagOutput() PipelineTagOutput {
	return i.ToPipelineTagOutputWithContext(context.Background())
}

func (i PipelineTagArgs) ToPipelineTagOutputWithContext(ctx context.Context) PipelineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTagOutput)
}

// PipelineTagArrayInput is an input type that accepts PipelineTagArray and PipelineTagArrayOutput values.
// You can construct a concrete instance of `PipelineTagArrayInput` via:
//
//          PipelineTagArray{ PipelineTagArgs{...} }
type PipelineTagArrayInput interface {
	pulumi.Input

	ToPipelineTagArrayOutput() PipelineTagArrayOutput
	ToPipelineTagArrayOutputWithContext(context.Context) PipelineTagArrayOutput
}

type PipelineTagArray []PipelineTagInput

func (PipelineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTag)(nil)).Elem()
}

func (i PipelineTagArray) ToPipelineTagArrayOutput() PipelineTagArrayOutput {
	return i.ToPipelineTagArrayOutputWithContext(context.Background())
}

func (i PipelineTagArray) ToPipelineTagArrayOutputWithContext(ctx context.Context) PipelineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTagArrayOutput)
}

type PipelineTagOutput struct{ *pulumi.OutputState }

func (PipelineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTag)(nil)).Elem()
}

func (o PipelineTagOutput) ToPipelineTagOutput() PipelineTagOutput {
	return o
}

func (o PipelineTagOutput) ToPipelineTagOutputWithContext(ctx context.Context) PipelineTagOutput {
	return o
}

func (o PipelineTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o PipelineTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTag) string { return v.Value }).(pulumi.StringOutput)
}

type PipelineTagArrayOutput struct{ *pulumi.OutputState }

func (PipelineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTag)(nil)).Elem()
}

func (o PipelineTagArrayOutput) ToPipelineTagArrayOutput() PipelineTagArrayOutput {
	return o
}

func (o PipelineTagArrayOutput) ToPipelineTagArrayOutputWithContext(ctx context.Context) PipelineTagArrayOutput {
	return o
}

func (o PipelineTagArrayOutput) Index(i pulumi.IntInput) PipelineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineTag {
		return vs[0].([]PipelineTag)[vs[1].(int)]
	}).(PipelineTagOutput)
}

type WebhookAuthConfiguration struct {
	AllowedIPRange *string `pulumi:"allowedIPRange"`
	SecretToken    *string `pulumi:"secretToken"`
}

// WebhookAuthConfigurationInput is an input type that accepts WebhookAuthConfigurationArgs and WebhookAuthConfigurationOutput values.
// You can construct a concrete instance of `WebhookAuthConfigurationInput` via:
//
//          WebhookAuthConfigurationArgs{...}
type WebhookAuthConfigurationInput interface {
	pulumi.Input

	ToWebhookAuthConfigurationOutput() WebhookAuthConfigurationOutput
	ToWebhookAuthConfigurationOutputWithContext(context.Context) WebhookAuthConfigurationOutput
}

type WebhookAuthConfigurationArgs struct {
	AllowedIPRange pulumi.StringPtrInput `pulumi:"allowedIPRange"`
	SecretToken    pulumi.StringPtrInput `pulumi:"secretToken"`
}

func (WebhookAuthConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookAuthConfiguration)(nil)).Elem()
}

func (i WebhookAuthConfigurationArgs) ToWebhookAuthConfigurationOutput() WebhookAuthConfigurationOutput {
	return i.ToWebhookAuthConfigurationOutputWithContext(context.Background())
}

func (i WebhookAuthConfigurationArgs) ToWebhookAuthConfigurationOutputWithContext(ctx context.Context) WebhookAuthConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAuthConfigurationOutput)
}

func (i WebhookAuthConfigurationArgs) ToWebhookAuthConfigurationPtrOutput() WebhookAuthConfigurationPtrOutput {
	return i.ToWebhookAuthConfigurationPtrOutputWithContext(context.Background())
}

func (i WebhookAuthConfigurationArgs) ToWebhookAuthConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAuthConfigurationOutput).ToWebhookAuthConfigurationPtrOutputWithContext(ctx)
}

// WebhookAuthConfigurationPtrInput is an input type that accepts WebhookAuthConfigurationArgs, WebhookAuthConfigurationPtr and WebhookAuthConfigurationPtrOutput values.
// You can construct a concrete instance of `WebhookAuthConfigurationPtrInput` via:
//
//          WebhookAuthConfigurationArgs{...}
//
//  or:
//
//          nil
type WebhookAuthConfigurationPtrInput interface {
	pulumi.Input

	ToWebhookAuthConfigurationPtrOutput() WebhookAuthConfigurationPtrOutput
	ToWebhookAuthConfigurationPtrOutputWithContext(context.Context) WebhookAuthConfigurationPtrOutput
}

type webhookAuthConfigurationPtrType WebhookAuthConfigurationArgs

func WebhookAuthConfigurationPtr(v *WebhookAuthConfigurationArgs) WebhookAuthConfigurationPtrInput {
	return (*webhookAuthConfigurationPtrType)(v)
}

func (*webhookAuthConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookAuthConfiguration)(nil)).Elem()
}

func (i *webhookAuthConfigurationPtrType) ToWebhookAuthConfigurationPtrOutput() WebhookAuthConfigurationPtrOutput {
	return i.ToWebhookAuthConfigurationPtrOutputWithContext(context.Background())
}

func (i *webhookAuthConfigurationPtrType) ToWebhookAuthConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAuthConfigurationPtrOutput)
}

type WebhookAuthConfigurationOutput struct{ *pulumi.OutputState }

func (WebhookAuthConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookAuthConfiguration)(nil)).Elem()
}

func (o WebhookAuthConfigurationOutput) ToWebhookAuthConfigurationOutput() WebhookAuthConfigurationOutput {
	return o
}

func (o WebhookAuthConfigurationOutput) ToWebhookAuthConfigurationOutputWithContext(ctx context.Context) WebhookAuthConfigurationOutput {
	return o
}

func (o WebhookAuthConfigurationOutput) ToWebhookAuthConfigurationPtrOutput() WebhookAuthConfigurationPtrOutput {
	return o.ToWebhookAuthConfigurationPtrOutputWithContext(context.Background())
}

func (o WebhookAuthConfigurationOutput) ToWebhookAuthConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookAuthConfiguration) *WebhookAuthConfiguration {
		return &v
	}).(WebhookAuthConfigurationPtrOutput)
}

func (o WebhookAuthConfigurationOutput) AllowedIPRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookAuthConfiguration) *string { return v.AllowedIPRange }).(pulumi.StringPtrOutput)
}

func (o WebhookAuthConfigurationOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookAuthConfiguration) *string { return v.SecretToken }).(pulumi.StringPtrOutput)
}

type WebhookAuthConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WebhookAuthConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookAuthConfiguration)(nil)).Elem()
}

func (o WebhookAuthConfigurationPtrOutput) ToWebhookAuthConfigurationPtrOutput() WebhookAuthConfigurationPtrOutput {
	return o
}

func (o WebhookAuthConfigurationPtrOutput) ToWebhookAuthConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthConfigurationPtrOutput {
	return o
}

func (o WebhookAuthConfigurationPtrOutput) Elem() WebhookAuthConfigurationOutput {
	return o.ApplyT(func(v *WebhookAuthConfiguration) WebhookAuthConfiguration {
		if v != nil {
			return *v
		}
		var ret WebhookAuthConfiguration
		return ret
	}).(WebhookAuthConfigurationOutput)
}

func (o WebhookAuthConfigurationPtrOutput) AllowedIPRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookAuthConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AllowedIPRange
	}).(pulumi.StringPtrOutput)
}

func (o WebhookAuthConfigurationPtrOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookAuthConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SecretToken
	}).(pulumi.StringPtrOutput)
}

type WebhookFilterRule struct {
	JsonPath    string  `pulumi:"jsonPath"`
	MatchEquals *string `pulumi:"matchEquals"`
}

// WebhookFilterRuleInput is an input type that accepts WebhookFilterRuleArgs and WebhookFilterRuleOutput values.
// You can construct a concrete instance of `WebhookFilterRuleInput` via:
//
//          WebhookFilterRuleArgs{...}
type WebhookFilterRuleInput interface {
	pulumi.Input

	ToWebhookFilterRuleOutput() WebhookFilterRuleOutput
	ToWebhookFilterRuleOutputWithContext(context.Context) WebhookFilterRuleOutput
}

type WebhookFilterRuleArgs struct {
	JsonPath    pulumi.StringInput    `pulumi:"jsonPath"`
	MatchEquals pulumi.StringPtrInput `pulumi:"matchEquals"`
}

func (WebhookFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterRule)(nil)).Elem()
}

func (i WebhookFilterRuleArgs) ToWebhookFilterRuleOutput() WebhookFilterRuleOutput {
	return i.ToWebhookFilterRuleOutputWithContext(context.Background())
}

func (i WebhookFilterRuleArgs) ToWebhookFilterRuleOutputWithContext(ctx context.Context) WebhookFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterRuleOutput)
}

// WebhookFilterRuleArrayInput is an input type that accepts WebhookFilterRuleArray and WebhookFilterRuleArrayOutput values.
// You can construct a concrete instance of `WebhookFilterRuleArrayInput` via:
//
//          WebhookFilterRuleArray{ WebhookFilterRuleArgs{...} }
type WebhookFilterRuleArrayInput interface {
	pulumi.Input

	ToWebhookFilterRuleArrayOutput() WebhookFilterRuleArrayOutput
	ToWebhookFilterRuleArrayOutputWithContext(context.Context) WebhookFilterRuleArrayOutput
}

type WebhookFilterRuleArray []WebhookFilterRuleInput

func (WebhookFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilterRule)(nil)).Elem()
}

func (i WebhookFilterRuleArray) ToWebhookFilterRuleArrayOutput() WebhookFilterRuleArrayOutput {
	return i.ToWebhookFilterRuleArrayOutputWithContext(context.Background())
}

func (i WebhookFilterRuleArray) ToWebhookFilterRuleArrayOutputWithContext(ctx context.Context) WebhookFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterRuleArrayOutput)
}

type WebhookFilterRuleOutput struct{ *pulumi.OutputState }

func (WebhookFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterRule)(nil)).Elem()
}

func (o WebhookFilterRuleOutput) ToWebhookFilterRuleOutput() WebhookFilterRuleOutput {
	return o
}

func (o WebhookFilterRuleOutput) ToWebhookFilterRuleOutputWithContext(ctx context.Context) WebhookFilterRuleOutput {
	return o
}

func (o WebhookFilterRuleOutput) JsonPath() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookFilterRule) string { return v.JsonPath }).(pulumi.StringOutput)
}

func (o WebhookFilterRuleOutput) MatchEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookFilterRule) *string { return v.MatchEquals }).(pulumi.StringPtrOutput)
}

type WebhookFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (WebhookFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilterRule)(nil)).Elem()
}

func (o WebhookFilterRuleArrayOutput) ToWebhookFilterRuleArrayOutput() WebhookFilterRuleArrayOutput {
	return o
}

func (o WebhookFilterRuleArrayOutput) ToWebhookFilterRuleArrayOutputWithContext(ctx context.Context) WebhookFilterRuleArrayOutput {
	return o
}

func (o WebhookFilterRuleArrayOutput) Index(i pulumi.IntInput) WebhookFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookFilterRule {
		return vs[0].([]WebhookFilterRule)[vs[1].(int)]
	}).(WebhookFilterRuleOutput)
}

func init() {
	pulumi.RegisterOutputType(CustomActionTypeArtifactDetailsOutput{})
	pulumi.RegisterOutputType(CustomActionTypeArtifactDetailsPtrOutput{})
	pulumi.RegisterOutputType(CustomActionTypeConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(CustomActionTypeConfigurationPropertiesArrayOutput{})
	pulumi.RegisterOutputType(CustomActionTypeSettingsOutput{})
	pulumi.RegisterOutputType(CustomActionTypeSettingsPtrOutput{})
	pulumi.RegisterOutputType(CustomActionTypeTagOutput{})
	pulumi.RegisterOutputType(CustomActionTypeTagArrayOutput{})
	pulumi.RegisterOutputType(PipelineActionDeclarationOutput{})
	pulumi.RegisterOutputType(PipelineActionDeclarationArrayOutput{})
	pulumi.RegisterOutputType(PipelineActionTypeIdOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStorePtrOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreMapOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreMapArrayOutput{})
	pulumi.RegisterOutputType(PipelineBlockerDeclarationOutput{})
	pulumi.RegisterOutputType(PipelineBlockerDeclarationArrayOutput{})
	pulumi.RegisterOutputType(PipelineEncryptionKeyOutput{})
	pulumi.RegisterOutputType(PipelineEncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(PipelineInputArtifactOutput{})
	pulumi.RegisterOutputType(PipelineInputArtifactArrayOutput{})
	pulumi.RegisterOutputType(PipelineOutputArtifactOutput{})
	pulumi.RegisterOutputType(PipelineOutputArtifactArrayOutput{})
	pulumi.RegisterOutputType(PipelineStageDeclarationOutput{})
	pulumi.RegisterOutputType(PipelineStageDeclarationArrayOutput{})
	pulumi.RegisterOutputType(PipelineStageTransitionOutput{})
	pulumi.RegisterOutputType(PipelineStageTransitionArrayOutput{})
	pulumi.RegisterOutputType(PipelineTagOutput{})
	pulumi.RegisterOutputType(PipelineTagArrayOutput{})
	pulumi.RegisterOutputType(WebhookAuthConfigurationOutput{})
	pulumi.RegisterOutputType(WebhookAuthConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WebhookFilterRuleOutput{})
	pulumi.RegisterOutputType(WebhookFilterRuleArrayOutput{})
}
