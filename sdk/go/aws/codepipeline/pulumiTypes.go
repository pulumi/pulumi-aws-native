// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codepipeline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// Returns information about the details of an artifact.
type CustomActionTypeArtifactDetails struct {
	// The maximum number of artifacts allowed for the action type.
	MaximumCount int `pulumi:"maximumCount"`
	// The minimum number of artifacts allowed for the action type.
	MinimumCount int `pulumi:"minimumCount"`
}

// CustomActionTypeArtifactDetailsInput is an input type that accepts CustomActionTypeArtifactDetailsArgs and CustomActionTypeArtifactDetailsOutput values.
// You can construct a concrete instance of `CustomActionTypeArtifactDetailsInput` via:
//
//	CustomActionTypeArtifactDetailsArgs{...}
type CustomActionTypeArtifactDetailsInput interface {
	pulumi.Input

	ToCustomActionTypeArtifactDetailsOutput() CustomActionTypeArtifactDetailsOutput
	ToCustomActionTypeArtifactDetailsOutputWithContext(context.Context) CustomActionTypeArtifactDetailsOutput
}

// Returns information about the details of an artifact.
type CustomActionTypeArtifactDetailsArgs struct {
	// The maximum number of artifacts allowed for the action type.
	MaximumCount pulumi.IntInput `pulumi:"maximumCount"`
	// The minimum number of artifacts allowed for the action type.
	MinimumCount pulumi.IntInput `pulumi:"minimumCount"`
}

func (CustomActionTypeArtifactDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeArtifactDetails)(nil)).Elem()
}

func (i CustomActionTypeArtifactDetailsArgs) ToCustomActionTypeArtifactDetailsOutput() CustomActionTypeArtifactDetailsOutput {
	return i.ToCustomActionTypeArtifactDetailsOutputWithContext(context.Background())
}

func (i CustomActionTypeArtifactDetailsArgs) ToCustomActionTypeArtifactDetailsOutputWithContext(ctx context.Context) CustomActionTypeArtifactDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeArtifactDetailsOutput)
}

// Returns information about the details of an artifact.
type CustomActionTypeArtifactDetailsOutput struct{ *pulumi.OutputState }

func (CustomActionTypeArtifactDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeArtifactDetails)(nil)).Elem()
}

func (o CustomActionTypeArtifactDetailsOutput) ToCustomActionTypeArtifactDetailsOutput() CustomActionTypeArtifactDetailsOutput {
	return o
}

func (o CustomActionTypeArtifactDetailsOutput) ToCustomActionTypeArtifactDetailsOutputWithContext(ctx context.Context) CustomActionTypeArtifactDetailsOutput {
	return o
}

// The maximum number of artifacts allowed for the action type.
func (o CustomActionTypeArtifactDetailsOutput) MaximumCount() pulumi.IntOutput {
	return o.ApplyT(func(v CustomActionTypeArtifactDetails) int { return v.MaximumCount }).(pulumi.IntOutput)
}

// The minimum number of artifacts allowed for the action type.
func (o CustomActionTypeArtifactDetailsOutput) MinimumCount() pulumi.IntOutput {
	return o.ApplyT(func(v CustomActionTypeArtifactDetails) int { return v.MinimumCount }).(pulumi.IntOutput)
}

// The configuration properties for the custom action.
type CustomActionTypeConfigurationProperties struct {
	// The description of the action configuration property that is displayed to users.
	Description *string `pulumi:"description"`
	// Whether the configuration property is a key.
	Key bool `pulumi:"key"`
	// The name of the action configuration property.
	Name string `pulumi:"name"`
	// Indicates that the property is used with PollForJobs. When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.If you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to other restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric characters, underscores, and hyphens.
	Queryable *bool `pulumi:"queryable"`
	// Whether the configuration property is a required value.
	Required bool `pulumi:"required"`
	// Whether the configuration property is secret. Secrets are hidden from all calls except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and PollForThirdPartyJobs.
	Secret bool `pulumi:"secret"`
	// The type of the configuration property.
	Type *string `pulumi:"type"`
}

// CustomActionTypeConfigurationPropertiesInput is an input type that accepts CustomActionTypeConfigurationPropertiesArgs and CustomActionTypeConfigurationPropertiesOutput values.
// You can construct a concrete instance of `CustomActionTypeConfigurationPropertiesInput` via:
//
//	CustomActionTypeConfigurationPropertiesArgs{...}
type CustomActionTypeConfigurationPropertiesInput interface {
	pulumi.Input

	ToCustomActionTypeConfigurationPropertiesOutput() CustomActionTypeConfigurationPropertiesOutput
	ToCustomActionTypeConfigurationPropertiesOutputWithContext(context.Context) CustomActionTypeConfigurationPropertiesOutput
}

// The configuration properties for the custom action.
type CustomActionTypeConfigurationPropertiesArgs struct {
	// The description of the action configuration property that is displayed to users.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether the configuration property is a key.
	Key pulumi.BoolInput `pulumi:"key"`
	// The name of the action configuration property.
	Name pulumi.StringInput `pulumi:"name"`
	// Indicates that the property is used with PollForJobs. When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.If you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to other restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric characters, underscores, and hyphens.
	Queryable pulumi.BoolPtrInput `pulumi:"queryable"`
	// Whether the configuration property is a required value.
	Required pulumi.BoolInput `pulumi:"required"`
	// Whether the configuration property is secret. Secrets are hidden from all calls except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and PollForThirdPartyJobs.
	Secret pulumi.BoolInput `pulumi:"secret"`
	// The type of the configuration property.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CustomActionTypeConfigurationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeConfigurationProperties)(nil)).Elem()
}

func (i CustomActionTypeConfigurationPropertiesArgs) ToCustomActionTypeConfigurationPropertiesOutput() CustomActionTypeConfigurationPropertiesOutput {
	return i.ToCustomActionTypeConfigurationPropertiesOutputWithContext(context.Background())
}

func (i CustomActionTypeConfigurationPropertiesArgs) ToCustomActionTypeConfigurationPropertiesOutputWithContext(ctx context.Context) CustomActionTypeConfigurationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeConfigurationPropertiesOutput)
}

// CustomActionTypeConfigurationPropertiesArrayInput is an input type that accepts CustomActionTypeConfigurationPropertiesArray and CustomActionTypeConfigurationPropertiesArrayOutput values.
// You can construct a concrete instance of `CustomActionTypeConfigurationPropertiesArrayInput` via:
//
//	CustomActionTypeConfigurationPropertiesArray{ CustomActionTypeConfigurationPropertiesArgs{...} }
type CustomActionTypeConfigurationPropertiesArrayInput interface {
	pulumi.Input

	ToCustomActionTypeConfigurationPropertiesArrayOutput() CustomActionTypeConfigurationPropertiesArrayOutput
	ToCustomActionTypeConfigurationPropertiesArrayOutputWithContext(context.Context) CustomActionTypeConfigurationPropertiesArrayOutput
}

type CustomActionTypeConfigurationPropertiesArray []CustomActionTypeConfigurationPropertiesInput

func (CustomActionTypeConfigurationPropertiesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionTypeConfigurationProperties)(nil)).Elem()
}

func (i CustomActionTypeConfigurationPropertiesArray) ToCustomActionTypeConfigurationPropertiesArrayOutput() CustomActionTypeConfigurationPropertiesArrayOutput {
	return i.ToCustomActionTypeConfigurationPropertiesArrayOutputWithContext(context.Background())
}

func (i CustomActionTypeConfigurationPropertiesArray) ToCustomActionTypeConfigurationPropertiesArrayOutputWithContext(ctx context.Context) CustomActionTypeConfigurationPropertiesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeConfigurationPropertiesArrayOutput)
}

// The configuration properties for the custom action.
type CustomActionTypeConfigurationPropertiesOutput struct{ *pulumi.OutputState }

func (CustomActionTypeConfigurationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeConfigurationProperties)(nil)).Elem()
}

func (o CustomActionTypeConfigurationPropertiesOutput) ToCustomActionTypeConfigurationPropertiesOutput() CustomActionTypeConfigurationPropertiesOutput {
	return o
}

func (o CustomActionTypeConfigurationPropertiesOutput) ToCustomActionTypeConfigurationPropertiesOutputWithContext(ctx context.Context) CustomActionTypeConfigurationPropertiesOutput {
	return o
}

// The description of the action configuration property that is displayed to users.
func (o CustomActionTypeConfigurationPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether the configuration property is a key.
func (o CustomActionTypeConfigurationPropertiesOutput) Key() pulumi.BoolOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) bool { return v.Key }).(pulumi.BoolOutput)
}

// The name of the action configuration property.
func (o CustomActionTypeConfigurationPropertiesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) string { return v.Name }).(pulumi.StringOutput)
}

// Indicates that the property is used with PollForJobs. When creating a custom action, an action can have up to one queryable property. If it has one, that property must be both required and not secret.If you create a pipeline with a custom action type, and that custom action contains a queryable property, the value for that configuration property is subject to other restrictions. The value must be less than or equal to twenty (20) characters. The value can contain only alphanumeric characters, underscores, and hyphens.
func (o CustomActionTypeConfigurationPropertiesOutput) Queryable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) *bool { return v.Queryable }).(pulumi.BoolPtrOutput)
}

// Whether the configuration property is a required value.
func (o CustomActionTypeConfigurationPropertiesOutput) Required() pulumi.BoolOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) bool { return v.Required }).(pulumi.BoolOutput)
}

// Whether the configuration property is secret. Secrets are hidden from all calls except for GetJobDetails, GetThirdPartyJobDetails, PollForJobs, and PollForThirdPartyJobs.
func (o CustomActionTypeConfigurationPropertiesOutput) Secret() pulumi.BoolOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) bool { return v.Secret }).(pulumi.BoolOutput)
}

// The type of the configuration property.
func (o CustomActionTypeConfigurationPropertiesOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeConfigurationProperties) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CustomActionTypeConfigurationPropertiesArrayOutput struct{ *pulumi.OutputState }

func (CustomActionTypeConfigurationPropertiesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionTypeConfigurationProperties)(nil)).Elem()
}

func (o CustomActionTypeConfigurationPropertiesArrayOutput) ToCustomActionTypeConfigurationPropertiesArrayOutput() CustomActionTypeConfigurationPropertiesArrayOutput {
	return o
}

func (o CustomActionTypeConfigurationPropertiesArrayOutput) ToCustomActionTypeConfigurationPropertiesArrayOutputWithContext(ctx context.Context) CustomActionTypeConfigurationPropertiesArrayOutput {
	return o
}

func (o CustomActionTypeConfigurationPropertiesArrayOutput) Index(i pulumi.IntInput) CustomActionTypeConfigurationPropertiesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomActionTypeConfigurationProperties {
		return vs[0].([]CustomActionTypeConfigurationProperties)[vs[1].(int)]
	}).(CustomActionTypeConfigurationPropertiesOutput)
}

// Settings is a property of the AWS::CodePipeline::CustomActionType resource that provides URLs that users can access to view information about the CodePipeline custom action.
type CustomActionTypeSettings struct {
	// The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display in the pipeline.
	EntityUrlTemplate *string `pulumi:"entityUrlTemplate"`
	// The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as the console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action.
	ExecutionUrlTemplate *string `pulumi:"executionUrlTemplate"`
	// The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
	RevisionUrlTemplate *string `pulumi:"revisionUrlTemplate"`
	// The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
	ThirdPartyConfigurationUrl *string `pulumi:"thirdPartyConfigurationUrl"`
}

// CustomActionTypeSettingsInput is an input type that accepts CustomActionTypeSettingsArgs and CustomActionTypeSettingsOutput values.
// You can construct a concrete instance of `CustomActionTypeSettingsInput` via:
//
//	CustomActionTypeSettingsArgs{...}
type CustomActionTypeSettingsInput interface {
	pulumi.Input

	ToCustomActionTypeSettingsOutput() CustomActionTypeSettingsOutput
	ToCustomActionTypeSettingsOutputWithContext(context.Context) CustomActionTypeSettingsOutput
}

// Settings is a property of the AWS::CodePipeline::CustomActionType resource that provides URLs that users can access to view information about the CodePipeline custom action.
type CustomActionTypeSettingsArgs struct {
	// The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display in the pipeline.
	EntityUrlTemplate pulumi.StringPtrInput `pulumi:"entityUrlTemplate"`
	// The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as the console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action.
	ExecutionUrlTemplate pulumi.StringPtrInput `pulumi:"executionUrlTemplate"`
	// The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
	RevisionUrlTemplate pulumi.StringPtrInput `pulumi:"revisionUrlTemplate"`
	// The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
	ThirdPartyConfigurationUrl pulumi.StringPtrInput `pulumi:"thirdPartyConfigurationUrl"`
}

func (CustomActionTypeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeSettings)(nil)).Elem()
}

func (i CustomActionTypeSettingsArgs) ToCustomActionTypeSettingsOutput() CustomActionTypeSettingsOutput {
	return i.ToCustomActionTypeSettingsOutputWithContext(context.Background())
}

func (i CustomActionTypeSettingsArgs) ToCustomActionTypeSettingsOutputWithContext(ctx context.Context) CustomActionTypeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeSettingsOutput)
}

func (i CustomActionTypeSettingsArgs) ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput {
	return i.ToCustomActionTypeSettingsPtrOutputWithContext(context.Background())
}

func (i CustomActionTypeSettingsArgs) ToCustomActionTypeSettingsPtrOutputWithContext(ctx context.Context) CustomActionTypeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeSettingsOutput).ToCustomActionTypeSettingsPtrOutputWithContext(ctx)
}

// CustomActionTypeSettingsPtrInput is an input type that accepts CustomActionTypeSettingsArgs, CustomActionTypeSettingsPtr and CustomActionTypeSettingsPtrOutput values.
// You can construct a concrete instance of `CustomActionTypeSettingsPtrInput` via:
//
//	        CustomActionTypeSettingsArgs{...}
//
//	or:
//
//	        nil
type CustomActionTypeSettingsPtrInput interface {
	pulumi.Input

	ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput
	ToCustomActionTypeSettingsPtrOutputWithContext(context.Context) CustomActionTypeSettingsPtrOutput
}

type customActionTypeSettingsPtrType CustomActionTypeSettingsArgs

func CustomActionTypeSettingsPtr(v *CustomActionTypeSettingsArgs) CustomActionTypeSettingsPtrInput {
	return (*customActionTypeSettingsPtrType)(v)
}

func (*customActionTypeSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionTypeSettings)(nil)).Elem()
}

func (i *customActionTypeSettingsPtrType) ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput {
	return i.ToCustomActionTypeSettingsPtrOutputWithContext(context.Background())
}

func (i *customActionTypeSettingsPtrType) ToCustomActionTypeSettingsPtrOutputWithContext(ctx context.Context) CustomActionTypeSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeSettingsPtrOutput)
}

// Settings is a property of the AWS::CodePipeline::CustomActionType resource that provides URLs that users can access to view information about the CodePipeline custom action.
type CustomActionTypeSettingsOutput struct{ *pulumi.OutputState }

func (CustomActionTypeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeSettings)(nil)).Elem()
}

func (o CustomActionTypeSettingsOutput) ToCustomActionTypeSettingsOutput() CustomActionTypeSettingsOutput {
	return o
}

func (o CustomActionTypeSettingsOutput) ToCustomActionTypeSettingsOutputWithContext(ctx context.Context) CustomActionTypeSettingsOutput {
	return o
}

func (o CustomActionTypeSettingsOutput) ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput {
	return o.ToCustomActionTypeSettingsPtrOutputWithContext(context.Background())
}

func (o CustomActionTypeSettingsOutput) ToCustomActionTypeSettingsPtrOutputWithContext(ctx context.Context) CustomActionTypeSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomActionTypeSettings) *CustomActionTypeSettings {
		return &v
	}).(CustomActionTypeSettingsPtrOutput)
}

// The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display in the pipeline.
func (o CustomActionTypeSettingsOutput) EntityUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeSettings) *string { return v.EntityUrlTemplate }).(pulumi.StringPtrOutput)
}

// The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as the console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action.
func (o CustomActionTypeSettingsOutput) ExecutionUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeSettings) *string { return v.ExecutionUrlTemplate }).(pulumi.StringPtrOutput)
}

// The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
func (o CustomActionTypeSettingsOutput) RevisionUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeSettings) *string { return v.RevisionUrlTemplate }).(pulumi.StringPtrOutput)
}

// The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
func (o CustomActionTypeSettingsOutput) ThirdPartyConfigurationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomActionTypeSettings) *string { return v.ThirdPartyConfigurationUrl }).(pulumi.StringPtrOutput)
}

type CustomActionTypeSettingsPtrOutput struct{ *pulumi.OutputState }

func (CustomActionTypeSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomActionTypeSettings)(nil)).Elem()
}

func (o CustomActionTypeSettingsPtrOutput) ToCustomActionTypeSettingsPtrOutput() CustomActionTypeSettingsPtrOutput {
	return o
}

func (o CustomActionTypeSettingsPtrOutput) ToCustomActionTypeSettingsPtrOutputWithContext(ctx context.Context) CustomActionTypeSettingsPtrOutput {
	return o
}

func (o CustomActionTypeSettingsPtrOutput) Elem() CustomActionTypeSettingsOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) CustomActionTypeSettings {
		if v != nil {
			return *v
		}
		var ret CustomActionTypeSettings
		return ret
	}).(CustomActionTypeSettingsOutput)
}

// The URL returned to the AWS CodePipeline console that provides a deep link to the resources of the external system, such as the configuration page for an AWS CodeDeploy deployment group. This link is provided as part of the action display in the pipeline.
func (o CustomActionTypeSettingsPtrOutput) EntityUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) *string {
		if v == nil {
			return nil
		}
		return v.EntityUrlTemplate
	}).(pulumi.StringPtrOutput)
}

// The URL returned to the AWS CodePipeline console that contains a link to the top-level landing page for the external system, such as the console page for AWS CodeDeploy. This link is shown on the pipeline view page in the AWS CodePipeline console and provides a link to the execution entity of the external action.
func (o CustomActionTypeSettingsPtrOutput) ExecutionUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) *string {
		if v == nil {
			return nil
		}
		return v.ExecutionUrlTemplate
	}).(pulumi.StringPtrOutput)
}

// The URL returned to the AWS CodePipeline console that contains a link to the page where customers can update or change the configuration of the external action.
func (o CustomActionTypeSettingsPtrOutput) RevisionUrlTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) *string {
		if v == nil {
			return nil
		}
		return v.RevisionUrlTemplate
	}).(pulumi.StringPtrOutput)
}

// The URL of a sign-up page where users can sign up for an external service and perform initial configuration of the action provided by that service.
func (o CustomActionTypeSettingsPtrOutput) ThirdPartyConfigurationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomActionTypeSettings) *string {
		if v == nil {
			return nil
		}
		return v.ThirdPartyConfigurationUrl
	}).(pulumi.StringPtrOutput)
}

type CustomActionTypeTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// CustomActionTypeTagInput is an input type that accepts CustomActionTypeTagArgs and CustomActionTypeTagOutput values.
// You can construct a concrete instance of `CustomActionTypeTagInput` via:
//
//	CustomActionTypeTagArgs{...}
type CustomActionTypeTagInput interface {
	pulumi.Input

	ToCustomActionTypeTagOutput() CustomActionTypeTagOutput
	ToCustomActionTypeTagOutputWithContext(context.Context) CustomActionTypeTagOutput
}

type CustomActionTypeTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (CustomActionTypeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeTag)(nil)).Elem()
}

func (i CustomActionTypeTagArgs) ToCustomActionTypeTagOutput() CustomActionTypeTagOutput {
	return i.ToCustomActionTypeTagOutputWithContext(context.Background())
}

func (i CustomActionTypeTagArgs) ToCustomActionTypeTagOutputWithContext(ctx context.Context) CustomActionTypeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeTagOutput)
}

// CustomActionTypeTagArrayInput is an input type that accepts CustomActionTypeTagArray and CustomActionTypeTagArrayOutput values.
// You can construct a concrete instance of `CustomActionTypeTagArrayInput` via:
//
//	CustomActionTypeTagArray{ CustomActionTypeTagArgs{...} }
type CustomActionTypeTagArrayInput interface {
	pulumi.Input

	ToCustomActionTypeTagArrayOutput() CustomActionTypeTagArrayOutput
	ToCustomActionTypeTagArrayOutputWithContext(context.Context) CustomActionTypeTagArrayOutput
}

type CustomActionTypeTagArray []CustomActionTypeTagInput

func (CustomActionTypeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionTypeTag)(nil)).Elem()
}

func (i CustomActionTypeTagArray) ToCustomActionTypeTagArrayOutput() CustomActionTypeTagArrayOutput {
	return i.ToCustomActionTypeTagArrayOutputWithContext(context.Background())
}

func (i CustomActionTypeTagArray) ToCustomActionTypeTagArrayOutputWithContext(ctx context.Context) CustomActionTypeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomActionTypeTagArrayOutput)
}

type CustomActionTypeTagOutput struct{ *pulumi.OutputState }

func (CustomActionTypeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomActionTypeTag)(nil)).Elem()
}

func (o CustomActionTypeTagOutput) ToCustomActionTypeTagOutput() CustomActionTypeTagOutput {
	return o
}

func (o CustomActionTypeTagOutput) ToCustomActionTypeTagOutputWithContext(ctx context.Context) CustomActionTypeTagOutput {
	return o
}

func (o CustomActionTypeTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActionTypeTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o CustomActionTypeTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CustomActionTypeTag) string { return v.Value }).(pulumi.StringOutput)
}

type CustomActionTypeTagArrayOutput struct{ *pulumi.OutputState }

func (CustomActionTypeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomActionTypeTag)(nil)).Elem()
}

func (o CustomActionTypeTagArrayOutput) ToCustomActionTypeTagArrayOutput() CustomActionTypeTagArrayOutput {
	return o
}

func (o CustomActionTypeTagArrayOutput) ToCustomActionTypeTagArrayOutputWithContext(ctx context.Context) CustomActionTypeTagArrayOutput {
	return o
}

func (o CustomActionTypeTagArrayOutput) Index(i pulumi.IntInput) CustomActionTypeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomActionTypeTag {
		return vs[0].([]CustomActionTypeTag)[vs[1].(int)]
	}).(CustomActionTypeTagOutput)
}

type PipelineActionDeclaration struct {
	ActionTypeId    PipelineActionTypeId     `pulumi:"actionTypeId"`
	Configuration   interface{}              `pulumi:"configuration"`
	InputArtifacts  []PipelineInputArtifact  `pulumi:"inputArtifacts"`
	Name            string                   `pulumi:"name"`
	Namespace       *string                  `pulumi:"namespace"`
	OutputArtifacts []PipelineOutputArtifact `pulumi:"outputArtifacts"`
	Region          *string                  `pulumi:"region"`
	RoleArn         *string                  `pulumi:"roleArn"`
	RunOrder        *int                     `pulumi:"runOrder"`
}

// PipelineActionDeclarationInput is an input type that accepts PipelineActionDeclarationArgs and PipelineActionDeclarationOutput values.
// You can construct a concrete instance of `PipelineActionDeclarationInput` via:
//
//	PipelineActionDeclarationArgs{...}
type PipelineActionDeclarationInput interface {
	pulumi.Input

	ToPipelineActionDeclarationOutput() PipelineActionDeclarationOutput
	ToPipelineActionDeclarationOutputWithContext(context.Context) PipelineActionDeclarationOutput
}

type PipelineActionDeclarationArgs struct {
	ActionTypeId    PipelineActionTypeIdInput        `pulumi:"actionTypeId"`
	Configuration   pulumi.Input                     `pulumi:"configuration"`
	InputArtifacts  PipelineInputArtifactArrayInput  `pulumi:"inputArtifacts"`
	Name            pulumi.StringInput               `pulumi:"name"`
	Namespace       pulumi.StringPtrInput            `pulumi:"namespace"`
	OutputArtifacts PipelineOutputArtifactArrayInput `pulumi:"outputArtifacts"`
	Region          pulumi.StringPtrInput            `pulumi:"region"`
	RoleArn         pulumi.StringPtrInput            `pulumi:"roleArn"`
	RunOrder        pulumi.IntPtrInput               `pulumi:"runOrder"`
}

func (PipelineActionDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActionDeclaration)(nil)).Elem()
}

func (i PipelineActionDeclarationArgs) ToPipelineActionDeclarationOutput() PipelineActionDeclarationOutput {
	return i.ToPipelineActionDeclarationOutputWithContext(context.Background())
}

func (i PipelineActionDeclarationArgs) ToPipelineActionDeclarationOutputWithContext(ctx context.Context) PipelineActionDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineActionDeclarationOutput)
}

// PipelineActionDeclarationArrayInput is an input type that accepts PipelineActionDeclarationArray and PipelineActionDeclarationArrayOutput values.
// You can construct a concrete instance of `PipelineActionDeclarationArrayInput` via:
//
//	PipelineActionDeclarationArray{ PipelineActionDeclarationArgs{...} }
type PipelineActionDeclarationArrayInput interface {
	pulumi.Input

	ToPipelineActionDeclarationArrayOutput() PipelineActionDeclarationArrayOutput
	ToPipelineActionDeclarationArrayOutputWithContext(context.Context) PipelineActionDeclarationArrayOutput
}

type PipelineActionDeclarationArray []PipelineActionDeclarationInput

func (PipelineActionDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineActionDeclaration)(nil)).Elem()
}

func (i PipelineActionDeclarationArray) ToPipelineActionDeclarationArrayOutput() PipelineActionDeclarationArrayOutput {
	return i.ToPipelineActionDeclarationArrayOutputWithContext(context.Background())
}

func (i PipelineActionDeclarationArray) ToPipelineActionDeclarationArrayOutputWithContext(ctx context.Context) PipelineActionDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineActionDeclarationArrayOutput)
}

type PipelineActionDeclarationOutput struct{ *pulumi.OutputState }

func (PipelineActionDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActionDeclaration)(nil)).Elem()
}

func (o PipelineActionDeclarationOutput) ToPipelineActionDeclarationOutput() PipelineActionDeclarationOutput {
	return o
}

func (o PipelineActionDeclarationOutput) ToPipelineActionDeclarationOutputWithContext(ctx context.Context) PipelineActionDeclarationOutput {
	return o
}

func (o PipelineActionDeclarationOutput) ActionTypeId() PipelineActionTypeIdOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) PipelineActionTypeId { return v.ActionTypeId }).(PipelineActionTypeIdOutput)
}

func (o PipelineActionDeclarationOutput) Configuration() pulumi.AnyOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) interface{} { return v.Configuration }).(pulumi.AnyOutput)
}

func (o PipelineActionDeclarationOutput) InputArtifacts() PipelineInputArtifactArrayOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) []PipelineInputArtifact { return v.InputArtifacts }).(PipelineInputArtifactArrayOutput)
}

func (o PipelineActionDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o PipelineActionDeclarationOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o PipelineActionDeclarationOutput) OutputArtifacts() PipelineOutputArtifactArrayOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) []PipelineOutputArtifact { return v.OutputArtifacts }).(PipelineOutputArtifactArrayOutput)
}

func (o PipelineActionDeclarationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o PipelineActionDeclarationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o PipelineActionDeclarationOutput) RunOrder() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PipelineActionDeclaration) *int { return v.RunOrder }).(pulumi.IntPtrOutput)
}

type PipelineActionDeclarationArrayOutput struct{ *pulumi.OutputState }

func (PipelineActionDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineActionDeclaration)(nil)).Elem()
}

func (o PipelineActionDeclarationArrayOutput) ToPipelineActionDeclarationArrayOutput() PipelineActionDeclarationArrayOutput {
	return o
}

func (o PipelineActionDeclarationArrayOutput) ToPipelineActionDeclarationArrayOutputWithContext(ctx context.Context) PipelineActionDeclarationArrayOutput {
	return o
}

func (o PipelineActionDeclarationArrayOutput) Index(i pulumi.IntInput) PipelineActionDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineActionDeclaration {
		return vs[0].([]PipelineActionDeclaration)[vs[1].(int)]
	}).(PipelineActionDeclarationOutput)
}

type PipelineActionTypeId struct {
	Category string `pulumi:"category"`
	Owner    string `pulumi:"owner"`
	Provider string `pulumi:"provider"`
	Version  string `pulumi:"version"`
}

// PipelineActionTypeIdInput is an input type that accepts PipelineActionTypeIdArgs and PipelineActionTypeIdOutput values.
// You can construct a concrete instance of `PipelineActionTypeIdInput` via:
//
//	PipelineActionTypeIdArgs{...}
type PipelineActionTypeIdInput interface {
	pulumi.Input

	ToPipelineActionTypeIdOutput() PipelineActionTypeIdOutput
	ToPipelineActionTypeIdOutputWithContext(context.Context) PipelineActionTypeIdOutput
}

type PipelineActionTypeIdArgs struct {
	Category pulumi.StringInput `pulumi:"category"`
	Owner    pulumi.StringInput `pulumi:"owner"`
	Provider pulumi.StringInput `pulumi:"provider"`
	Version  pulumi.StringInput `pulumi:"version"`
}

func (PipelineActionTypeIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActionTypeId)(nil)).Elem()
}

func (i PipelineActionTypeIdArgs) ToPipelineActionTypeIdOutput() PipelineActionTypeIdOutput {
	return i.ToPipelineActionTypeIdOutputWithContext(context.Background())
}

func (i PipelineActionTypeIdArgs) ToPipelineActionTypeIdOutputWithContext(ctx context.Context) PipelineActionTypeIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineActionTypeIdOutput)
}

type PipelineActionTypeIdOutput struct{ *pulumi.OutputState }

func (PipelineActionTypeIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineActionTypeId)(nil)).Elem()
}

func (o PipelineActionTypeIdOutput) ToPipelineActionTypeIdOutput() PipelineActionTypeIdOutput {
	return o
}

func (o PipelineActionTypeIdOutput) ToPipelineActionTypeIdOutputWithContext(ctx context.Context) PipelineActionTypeIdOutput {
	return o
}

func (o PipelineActionTypeIdOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineActionTypeId) string { return v.Category }).(pulumi.StringOutput)
}

func (o PipelineActionTypeIdOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineActionTypeId) string { return v.Owner }).(pulumi.StringOutput)
}

func (o PipelineActionTypeIdOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineActionTypeId) string { return v.Provider }).(pulumi.StringOutput)
}

func (o PipelineActionTypeIdOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineActionTypeId) string { return v.Version }).(pulumi.StringOutput)
}

type PipelineArtifactStore struct {
	EncryptionKey *PipelineEncryptionKey `pulumi:"encryptionKey"`
	Location      string                 `pulumi:"location"`
	Type          string                 `pulumi:"type"`
}

// PipelineArtifactStoreInput is an input type that accepts PipelineArtifactStoreArgs and PipelineArtifactStoreOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreInput` via:
//
//	PipelineArtifactStoreArgs{...}
type PipelineArtifactStoreInput interface {
	pulumi.Input

	ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput
	ToPipelineArtifactStoreOutputWithContext(context.Context) PipelineArtifactStoreOutput
}

type PipelineArtifactStoreArgs struct {
	EncryptionKey PipelineEncryptionKeyPtrInput `pulumi:"encryptionKey"`
	Location      pulumi.StringInput            `pulumi:"location"`
	Type          pulumi.StringInput            `pulumi:"type"`
}

func (PipelineArtifactStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStore)(nil)).Elem()
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput {
	return i.ToPipelineArtifactStoreOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStoreOutputWithContext(ctx context.Context) PipelineArtifactStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreOutput)
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput {
	return i.ToPipelineArtifactStorePtrOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreArgs) ToPipelineArtifactStorePtrOutputWithContext(ctx context.Context) PipelineArtifactStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreOutput).ToPipelineArtifactStorePtrOutputWithContext(ctx)
}

// PipelineArtifactStorePtrInput is an input type that accepts PipelineArtifactStoreArgs, PipelineArtifactStorePtr and PipelineArtifactStorePtrOutput values.
// You can construct a concrete instance of `PipelineArtifactStorePtrInput` via:
//
//	        PipelineArtifactStoreArgs{...}
//
//	or:
//
//	        nil
type PipelineArtifactStorePtrInput interface {
	pulumi.Input

	ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput
	ToPipelineArtifactStorePtrOutputWithContext(context.Context) PipelineArtifactStorePtrOutput
}

type pipelineArtifactStorePtrType PipelineArtifactStoreArgs

func PipelineArtifactStorePtr(v *PipelineArtifactStoreArgs) PipelineArtifactStorePtrInput {
	return (*pipelineArtifactStorePtrType)(v)
}

func (*pipelineArtifactStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineArtifactStore)(nil)).Elem()
}

func (i *pipelineArtifactStorePtrType) ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput {
	return i.ToPipelineArtifactStorePtrOutputWithContext(context.Background())
}

func (i *pipelineArtifactStorePtrType) ToPipelineArtifactStorePtrOutputWithContext(ctx context.Context) PipelineArtifactStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStorePtrOutput)
}

type PipelineArtifactStoreOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStore)(nil)).Elem()
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStoreOutput() PipelineArtifactStoreOutput {
	return o
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStoreOutputWithContext(ctx context.Context) PipelineArtifactStoreOutput {
	return o
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput {
	return o.ToPipelineArtifactStorePtrOutputWithContext(context.Background())
}

func (o PipelineArtifactStoreOutput) ToPipelineArtifactStorePtrOutputWithContext(ctx context.Context) PipelineArtifactStorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineArtifactStore) *PipelineArtifactStore {
		return &v
	}).(PipelineArtifactStorePtrOutput)
}

func (o PipelineArtifactStoreOutput) EncryptionKey() PipelineEncryptionKeyPtrOutput {
	return o.ApplyT(func(v PipelineArtifactStore) *PipelineEncryptionKey { return v.EncryptionKey }).(PipelineEncryptionKeyPtrOutput)
}

func (o PipelineArtifactStoreOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStore) string { return v.Location }).(pulumi.StringOutput)
}

func (o PipelineArtifactStoreOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStore) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineArtifactStorePtrOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineArtifactStore)(nil)).Elem()
}

func (o PipelineArtifactStorePtrOutput) ToPipelineArtifactStorePtrOutput() PipelineArtifactStorePtrOutput {
	return o
}

func (o PipelineArtifactStorePtrOutput) ToPipelineArtifactStorePtrOutputWithContext(ctx context.Context) PipelineArtifactStorePtrOutput {
	return o
}

func (o PipelineArtifactStorePtrOutput) Elem() PipelineArtifactStoreOutput {
	return o.ApplyT(func(v *PipelineArtifactStore) PipelineArtifactStore {
		if v != nil {
			return *v
		}
		var ret PipelineArtifactStore
		return ret
	}).(PipelineArtifactStoreOutput)
}

func (o PipelineArtifactStorePtrOutput) EncryptionKey() PipelineEncryptionKeyPtrOutput {
	return o.ApplyT(func(v *PipelineArtifactStore) *PipelineEncryptionKey {
		if v == nil {
			return nil
		}
		return v.EncryptionKey
	}).(PipelineEncryptionKeyPtrOutput)
}

func (o PipelineArtifactStorePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineArtifactStore) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

func (o PipelineArtifactStorePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineArtifactStore) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PipelineArtifactStoreMap struct {
	ArtifactStore PipelineArtifactStore `pulumi:"artifactStore"`
	Region        string                `pulumi:"region"`
}

// PipelineArtifactStoreMapInput is an input type that accepts PipelineArtifactStoreMap and PipelineArtifactStoreMapOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreMapInput` via:
//
//	PipelineArtifactStoreMap{ "key": PipelineArtifactStoreArgs{...} }
type PipelineArtifactStoreMapInput interface {
	pulumi.Input

	ToPipelineArtifactStoreMapOutput() PipelineArtifactStoreMapOutput
	ToPipelineArtifactStoreMapOutputWithContext(context.Context) PipelineArtifactStoreMapOutput
}

type PipelineArtifactStoreMapArgs struct {
	ArtifactStore PipelineArtifactStoreInput `pulumi:"artifactStore"`
	Region        pulumi.StringInput         `pulumi:"region"`
}

func (PipelineArtifactStoreMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStoreMap)(nil)).Elem()
}

func (i PipelineArtifactStoreMapArgs) ToPipelineArtifactStoreMapOutput() PipelineArtifactStoreMapOutput {
	return i.ToPipelineArtifactStoreMapOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreMapArgs) ToPipelineArtifactStoreMapOutputWithContext(ctx context.Context) PipelineArtifactStoreMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreMapOutput)
}

// PipelineArtifactStoreMapArrayInput is an input type that accepts PipelineArtifactStoreMapArray and PipelineArtifactStoreMapArrayOutput values.
// You can construct a concrete instance of `PipelineArtifactStoreMapArrayInput` via:
//
//	PipelineArtifactStoreMapArray{ PipelineArtifactStoreMapArgs{...} }
type PipelineArtifactStoreMapArrayInput interface {
	pulumi.Input

	ToPipelineArtifactStoreMapArrayOutput() PipelineArtifactStoreMapArrayOutput
	ToPipelineArtifactStoreMapArrayOutputWithContext(context.Context) PipelineArtifactStoreMapArrayOutput
}

type PipelineArtifactStoreMapArray []PipelineArtifactStoreMapInput

func (PipelineArtifactStoreMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineArtifactStoreMap)(nil)).Elem()
}

func (i PipelineArtifactStoreMapArray) ToPipelineArtifactStoreMapArrayOutput() PipelineArtifactStoreMapArrayOutput {
	return i.ToPipelineArtifactStoreMapArrayOutputWithContext(context.Background())
}

func (i PipelineArtifactStoreMapArray) ToPipelineArtifactStoreMapArrayOutputWithContext(ctx context.Context) PipelineArtifactStoreMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineArtifactStoreMapArrayOutput)
}

type PipelineArtifactStoreMapOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineArtifactStoreMap)(nil)).Elem()
}

func (o PipelineArtifactStoreMapOutput) ToPipelineArtifactStoreMapOutput() PipelineArtifactStoreMapOutput {
	return o
}

func (o PipelineArtifactStoreMapOutput) ToPipelineArtifactStoreMapOutputWithContext(ctx context.Context) PipelineArtifactStoreMapOutput {
	return o
}

func (o PipelineArtifactStoreMapOutput) ArtifactStore() PipelineArtifactStoreOutput {
	return o.ApplyT(func(v PipelineArtifactStoreMap) PipelineArtifactStore { return v.ArtifactStore }).(PipelineArtifactStoreOutput)
}

func (o PipelineArtifactStoreMapOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineArtifactStoreMap) string { return v.Region }).(pulumi.StringOutput)
}

type PipelineArtifactStoreMapArrayOutput struct{ *pulumi.OutputState }

func (PipelineArtifactStoreMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineArtifactStoreMap)(nil)).Elem()
}

func (o PipelineArtifactStoreMapArrayOutput) ToPipelineArtifactStoreMapArrayOutput() PipelineArtifactStoreMapArrayOutput {
	return o
}

func (o PipelineArtifactStoreMapArrayOutput) ToPipelineArtifactStoreMapArrayOutputWithContext(ctx context.Context) PipelineArtifactStoreMapArrayOutput {
	return o
}

func (o PipelineArtifactStoreMapArrayOutput) Index(i pulumi.IntInput) PipelineArtifactStoreMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineArtifactStoreMap {
		return vs[0].([]PipelineArtifactStoreMap)[vs[1].(int)]
	}).(PipelineArtifactStoreMapOutput)
}

type PipelineBlockerDeclaration struct {
	Name string `pulumi:"name"`
	Type string `pulumi:"type"`
}

// PipelineBlockerDeclarationInput is an input type that accepts PipelineBlockerDeclarationArgs and PipelineBlockerDeclarationOutput values.
// You can construct a concrete instance of `PipelineBlockerDeclarationInput` via:
//
//	PipelineBlockerDeclarationArgs{...}
type PipelineBlockerDeclarationInput interface {
	pulumi.Input

	ToPipelineBlockerDeclarationOutput() PipelineBlockerDeclarationOutput
	ToPipelineBlockerDeclarationOutputWithContext(context.Context) PipelineBlockerDeclarationOutput
}

type PipelineBlockerDeclarationArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (PipelineBlockerDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineBlockerDeclaration)(nil)).Elem()
}

func (i PipelineBlockerDeclarationArgs) ToPipelineBlockerDeclarationOutput() PipelineBlockerDeclarationOutput {
	return i.ToPipelineBlockerDeclarationOutputWithContext(context.Background())
}

func (i PipelineBlockerDeclarationArgs) ToPipelineBlockerDeclarationOutputWithContext(ctx context.Context) PipelineBlockerDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineBlockerDeclarationOutput)
}

// PipelineBlockerDeclarationArrayInput is an input type that accepts PipelineBlockerDeclarationArray and PipelineBlockerDeclarationArrayOutput values.
// You can construct a concrete instance of `PipelineBlockerDeclarationArrayInput` via:
//
//	PipelineBlockerDeclarationArray{ PipelineBlockerDeclarationArgs{...} }
type PipelineBlockerDeclarationArrayInput interface {
	pulumi.Input

	ToPipelineBlockerDeclarationArrayOutput() PipelineBlockerDeclarationArrayOutput
	ToPipelineBlockerDeclarationArrayOutputWithContext(context.Context) PipelineBlockerDeclarationArrayOutput
}

type PipelineBlockerDeclarationArray []PipelineBlockerDeclarationInput

func (PipelineBlockerDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineBlockerDeclaration)(nil)).Elem()
}

func (i PipelineBlockerDeclarationArray) ToPipelineBlockerDeclarationArrayOutput() PipelineBlockerDeclarationArrayOutput {
	return i.ToPipelineBlockerDeclarationArrayOutputWithContext(context.Background())
}

func (i PipelineBlockerDeclarationArray) ToPipelineBlockerDeclarationArrayOutputWithContext(ctx context.Context) PipelineBlockerDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineBlockerDeclarationArrayOutput)
}

type PipelineBlockerDeclarationOutput struct{ *pulumi.OutputState }

func (PipelineBlockerDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineBlockerDeclaration)(nil)).Elem()
}

func (o PipelineBlockerDeclarationOutput) ToPipelineBlockerDeclarationOutput() PipelineBlockerDeclarationOutput {
	return o
}

func (o PipelineBlockerDeclarationOutput) ToPipelineBlockerDeclarationOutputWithContext(ctx context.Context) PipelineBlockerDeclarationOutput {
	return o
}

func (o PipelineBlockerDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineBlockerDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

func (o PipelineBlockerDeclarationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineBlockerDeclaration) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineBlockerDeclarationArrayOutput struct{ *pulumi.OutputState }

func (PipelineBlockerDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineBlockerDeclaration)(nil)).Elem()
}

func (o PipelineBlockerDeclarationArrayOutput) ToPipelineBlockerDeclarationArrayOutput() PipelineBlockerDeclarationArrayOutput {
	return o
}

func (o PipelineBlockerDeclarationArrayOutput) ToPipelineBlockerDeclarationArrayOutputWithContext(ctx context.Context) PipelineBlockerDeclarationArrayOutput {
	return o
}

func (o PipelineBlockerDeclarationArrayOutput) Index(i pulumi.IntInput) PipelineBlockerDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineBlockerDeclaration {
		return vs[0].([]PipelineBlockerDeclaration)[vs[1].(int)]
	}).(PipelineBlockerDeclarationOutput)
}

type PipelineEncryptionKey struct {
	Id   string `pulumi:"id"`
	Type string `pulumi:"type"`
}

// PipelineEncryptionKeyInput is an input type that accepts PipelineEncryptionKeyArgs and PipelineEncryptionKeyOutput values.
// You can construct a concrete instance of `PipelineEncryptionKeyInput` via:
//
//	PipelineEncryptionKeyArgs{...}
type PipelineEncryptionKeyInput interface {
	pulumi.Input

	ToPipelineEncryptionKeyOutput() PipelineEncryptionKeyOutput
	ToPipelineEncryptionKeyOutputWithContext(context.Context) PipelineEncryptionKeyOutput
}

type PipelineEncryptionKeyArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (PipelineEncryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineEncryptionKey)(nil)).Elem()
}

func (i PipelineEncryptionKeyArgs) ToPipelineEncryptionKeyOutput() PipelineEncryptionKeyOutput {
	return i.ToPipelineEncryptionKeyOutputWithContext(context.Background())
}

func (i PipelineEncryptionKeyArgs) ToPipelineEncryptionKeyOutputWithContext(ctx context.Context) PipelineEncryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineEncryptionKeyOutput)
}

func (i PipelineEncryptionKeyArgs) ToPipelineEncryptionKeyPtrOutput() PipelineEncryptionKeyPtrOutput {
	return i.ToPipelineEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i PipelineEncryptionKeyArgs) ToPipelineEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineEncryptionKeyOutput).ToPipelineEncryptionKeyPtrOutputWithContext(ctx)
}

// PipelineEncryptionKeyPtrInput is an input type that accepts PipelineEncryptionKeyArgs, PipelineEncryptionKeyPtr and PipelineEncryptionKeyPtrOutput values.
// You can construct a concrete instance of `PipelineEncryptionKeyPtrInput` via:
//
//	        PipelineEncryptionKeyArgs{...}
//
//	or:
//
//	        nil
type PipelineEncryptionKeyPtrInput interface {
	pulumi.Input

	ToPipelineEncryptionKeyPtrOutput() PipelineEncryptionKeyPtrOutput
	ToPipelineEncryptionKeyPtrOutputWithContext(context.Context) PipelineEncryptionKeyPtrOutput
}

type pipelineEncryptionKeyPtrType PipelineEncryptionKeyArgs

func PipelineEncryptionKeyPtr(v *PipelineEncryptionKeyArgs) PipelineEncryptionKeyPtrInput {
	return (*pipelineEncryptionKeyPtrType)(v)
}

func (*pipelineEncryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineEncryptionKey)(nil)).Elem()
}

func (i *pipelineEncryptionKeyPtrType) ToPipelineEncryptionKeyPtrOutput() PipelineEncryptionKeyPtrOutput {
	return i.ToPipelineEncryptionKeyPtrOutputWithContext(context.Background())
}

func (i *pipelineEncryptionKeyPtrType) ToPipelineEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineEncryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineEncryptionKeyPtrOutput)
}

type PipelineEncryptionKeyOutput struct{ *pulumi.OutputState }

func (PipelineEncryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineEncryptionKey)(nil)).Elem()
}

func (o PipelineEncryptionKeyOutput) ToPipelineEncryptionKeyOutput() PipelineEncryptionKeyOutput {
	return o
}

func (o PipelineEncryptionKeyOutput) ToPipelineEncryptionKeyOutputWithContext(ctx context.Context) PipelineEncryptionKeyOutput {
	return o
}

func (o PipelineEncryptionKeyOutput) ToPipelineEncryptionKeyPtrOutput() PipelineEncryptionKeyPtrOutput {
	return o.ToPipelineEncryptionKeyPtrOutputWithContext(context.Background())
}

func (o PipelineEncryptionKeyOutput) ToPipelineEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineEncryptionKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineEncryptionKey) *PipelineEncryptionKey {
		return &v
	}).(PipelineEncryptionKeyPtrOutput)
}

func (o PipelineEncryptionKeyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineEncryptionKey) string { return v.Id }).(pulumi.StringOutput)
}

func (o PipelineEncryptionKeyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineEncryptionKey) string { return v.Type }).(pulumi.StringOutput)
}

type PipelineEncryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (PipelineEncryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineEncryptionKey)(nil)).Elem()
}

func (o PipelineEncryptionKeyPtrOutput) ToPipelineEncryptionKeyPtrOutput() PipelineEncryptionKeyPtrOutput {
	return o
}

func (o PipelineEncryptionKeyPtrOutput) ToPipelineEncryptionKeyPtrOutputWithContext(ctx context.Context) PipelineEncryptionKeyPtrOutput {
	return o
}

func (o PipelineEncryptionKeyPtrOutput) Elem() PipelineEncryptionKeyOutput {
	return o.ApplyT(func(v *PipelineEncryptionKey) PipelineEncryptionKey {
		if v != nil {
			return *v
		}
		var ret PipelineEncryptionKey
		return ret
	}).(PipelineEncryptionKeyOutput)
}

func (o PipelineEncryptionKeyPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o PipelineEncryptionKeyPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineEncryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type PipelineGitConfiguration struct {
	Push             []PipelineGitPushFilter `pulumi:"push"`
	SourceActionName string                  `pulumi:"sourceActionName"`
}

// PipelineGitConfigurationInput is an input type that accepts PipelineGitConfigurationArgs and PipelineGitConfigurationOutput values.
// You can construct a concrete instance of `PipelineGitConfigurationInput` via:
//
//	PipelineGitConfigurationArgs{...}
type PipelineGitConfigurationInput interface {
	pulumi.Input

	ToPipelineGitConfigurationOutput() PipelineGitConfigurationOutput
	ToPipelineGitConfigurationOutputWithContext(context.Context) PipelineGitConfigurationOutput
}

type PipelineGitConfigurationArgs struct {
	Push             PipelineGitPushFilterArrayInput `pulumi:"push"`
	SourceActionName pulumi.StringInput              `pulumi:"sourceActionName"`
}

func (PipelineGitConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineGitConfiguration)(nil)).Elem()
}

func (i PipelineGitConfigurationArgs) ToPipelineGitConfigurationOutput() PipelineGitConfigurationOutput {
	return i.ToPipelineGitConfigurationOutputWithContext(context.Background())
}

func (i PipelineGitConfigurationArgs) ToPipelineGitConfigurationOutputWithContext(ctx context.Context) PipelineGitConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitConfigurationOutput)
}

func (i PipelineGitConfigurationArgs) ToPipelineGitConfigurationPtrOutput() PipelineGitConfigurationPtrOutput {
	return i.ToPipelineGitConfigurationPtrOutputWithContext(context.Background())
}

func (i PipelineGitConfigurationArgs) ToPipelineGitConfigurationPtrOutputWithContext(ctx context.Context) PipelineGitConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitConfigurationOutput).ToPipelineGitConfigurationPtrOutputWithContext(ctx)
}

// PipelineGitConfigurationPtrInput is an input type that accepts PipelineGitConfigurationArgs, PipelineGitConfigurationPtr and PipelineGitConfigurationPtrOutput values.
// You can construct a concrete instance of `PipelineGitConfigurationPtrInput` via:
//
//	        PipelineGitConfigurationArgs{...}
//
//	or:
//
//	        nil
type PipelineGitConfigurationPtrInput interface {
	pulumi.Input

	ToPipelineGitConfigurationPtrOutput() PipelineGitConfigurationPtrOutput
	ToPipelineGitConfigurationPtrOutputWithContext(context.Context) PipelineGitConfigurationPtrOutput
}

type pipelineGitConfigurationPtrType PipelineGitConfigurationArgs

func PipelineGitConfigurationPtr(v *PipelineGitConfigurationArgs) PipelineGitConfigurationPtrInput {
	return (*pipelineGitConfigurationPtrType)(v)
}

func (*pipelineGitConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineGitConfiguration)(nil)).Elem()
}

func (i *pipelineGitConfigurationPtrType) ToPipelineGitConfigurationPtrOutput() PipelineGitConfigurationPtrOutput {
	return i.ToPipelineGitConfigurationPtrOutputWithContext(context.Background())
}

func (i *pipelineGitConfigurationPtrType) ToPipelineGitConfigurationPtrOutputWithContext(ctx context.Context) PipelineGitConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitConfigurationPtrOutput)
}

type PipelineGitConfigurationOutput struct{ *pulumi.OutputState }

func (PipelineGitConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineGitConfiguration)(nil)).Elem()
}

func (o PipelineGitConfigurationOutput) ToPipelineGitConfigurationOutput() PipelineGitConfigurationOutput {
	return o
}

func (o PipelineGitConfigurationOutput) ToPipelineGitConfigurationOutputWithContext(ctx context.Context) PipelineGitConfigurationOutput {
	return o
}

func (o PipelineGitConfigurationOutput) ToPipelineGitConfigurationPtrOutput() PipelineGitConfigurationPtrOutput {
	return o.ToPipelineGitConfigurationPtrOutputWithContext(context.Background())
}

func (o PipelineGitConfigurationOutput) ToPipelineGitConfigurationPtrOutputWithContext(ctx context.Context) PipelineGitConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineGitConfiguration) *PipelineGitConfiguration {
		return &v
	}).(PipelineGitConfigurationPtrOutput)
}

func (o PipelineGitConfigurationOutput) Push() PipelineGitPushFilterArrayOutput {
	return o.ApplyT(func(v PipelineGitConfiguration) []PipelineGitPushFilter { return v.Push }).(PipelineGitPushFilterArrayOutput)
}

func (o PipelineGitConfigurationOutput) SourceActionName() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineGitConfiguration) string { return v.SourceActionName }).(pulumi.StringOutput)
}

type PipelineGitConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PipelineGitConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineGitConfiguration)(nil)).Elem()
}

func (o PipelineGitConfigurationPtrOutput) ToPipelineGitConfigurationPtrOutput() PipelineGitConfigurationPtrOutput {
	return o
}

func (o PipelineGitConfigurationPtrOutput) ToPipelineGitConfigurationPtrOutputWithContext(ctx context.Context) PipelineGitConfigurationPtrOutput {
	return o
}

func (o PipelineGitConfigurationPtrOutput) Elem() PipelineGitConfigurationOutput {
	return o.ApplyT(func(v *PipelineGitConfiguration) PipelineGitConfiguration {
		if v != nil {
			return *v
		}
		var ret PipelineGitConfiguration
		return ret
	}).(PipelineGitConfigurationOutput)
}

func (o PipelineGitConfigurationPtrOutput) Push() PipelineGitPushFilterArrayOutput {
	return o.ApplyT(func(v *PipelineGitConfiguration) []PipelineGitPushFilter {
		if v == nil {
			return nil
		}
		return v.Push
	}).(PipelineGitPushFilterArrayOutput)
}

func (o PipelineGitConfigurationPtrOutput) SourceActionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PipelineGitConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SourceActionName
	}).(pulumi.StringPtrOutput)
}

type PipelineGitPushFilter struct {
	Tags *PipelineGitTagFilterCriteria `pulumi:"tags"`
}

// PipelineGitPushFilterInput is an input type that accepts PipelineGitPushFilterArgs and PipelineGitPushFilterOutput values.
// You can construct a concrete instance of `PipelineGitPushFilterInput` via:
//
//	PipelineGitPushFilterArgs{...}
type PipelineGitPushFilterInput interface {
	pulumi.Input

	ToPipelineGitPushFilterOutput() PipelineGitPushFilterOutput
	ToPipelineGitPushFilterOutputWithContext(context.Context) PipelineGitPushFilterOutput
}

type PipelineGitPushFilterArgs struct {
	Tags PipelineGitTagFilterCriteriaPtrInput `pulumi:"tags"`
}

func (PipelineGitPushFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineGitPushFilter)(nil)).Elem()
}

func (i PipelineGitPushFilterArgs) ToPipelineGitPushFilterOutput() PipelineGitPushFilterOutput {
	return i.ToPipelineGitPushFilterOutputWithContext(context.Background())
}

func (i PipelineGitPushFilterArgs) ToPipelineGitPushFilterOutputWithContext(ctx context.Context) PipelineGitPushFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitPushFilterOutput)
}

// PipelineGitPushFilterArrayInput is an input type that accepts PipelineGitPushFilterArray and PipelineGitPushFilterArrayOutput values.
// You can construct a concrete instance of `PipelineGitPushFilterArrayInput` via:
//
//	PipelineGitPushFilterArray{ PipelineGitPushFilterArgs{...} }
type PipelineGitPushFilterArrayInput interface {
	pulumi.Input

	ToPipelineGitPushFilterArrayOutput() PipelineGitPushFilterArrayOutput
	ToPipelineGitPushFilterArrayOutputWithContext(context.Context) PipelineGitPushFilterArrayOutput
}

type PipelineGitPushFilterArray []PipelineGitPushFilterInput

func (PipelineGitPushFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineGitPushFilter)(nil)).Elem()
}

func (i PipelineGitPushFilterArray) ToPipelineGitPushFilterArrayOutput() PipelineGitPushFilterArrayOutput {
	return i.ToPipelineGitPushFilterArrayOutputWithContext(context.Background())
}

func (i PipelineGitPushFilterArray) ToPipelineGitPushFilterArrayOutputWithContext(ctx context.Context) PipelineGitPushFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitPushFilterArrayOutput)
}

type PipelineGitPushFilterOutput struct{ *pulumi.OutputState }

func (PipelineGitPushFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineGitPushFilter)(nil)).Elem()
}

func (o PipelineGitPushFilterOutput) ToPipelineGitPushFilterOutput() PipelineGitPushFilterOutput {
	return o
}

func (o PipelineGitPushFilterOutput) ToPipelineGitPushFilterOutputWithContext(ctx context.Context) PipelineGitPushFilterOutput {
	return o
}

func (o PipelineGitPushFilterOutput) Tags() PipelineGitTagFilterCriteriaPtrOutput {
	return o.ApplyT(func(v PipelineGitPushFilter) *PipelineGitTagFilterCriteria { return v.Tags }).(PipelineGitTagFilterCriteriaPtrOutput)
}

type PipelineGitPushFilterArrayOutput struct{ *pulumi.OutputState }

func (PipelineGitPushFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineGitPushFilter)(nil)).Elem()
}

func (o PipelineGitPushFilterArrayOutput) ToPipelineGitPushFilterArrayOutput() PipelineGitPushFilterArrayOutput {
	return o
}

func (o PipelineGitPushFilterArrayOutput) ToPipelineGitPushFilterArrayOutputWithContext(ctx context.Context) PipelineGitPushFilterArrayOutput {
	return o
}

func (o PipelineGitPushFilterArrayOutput) Index(i pulumi.IntInput) PipelineGitPushFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineGitPushFilter {
		return vs[0].([]PipelineGitPushFilter)[vs[1].(int)]
	}).(PipelineGitPushFilterOutput)
}

type PipelineGitTagFilterCriteria struct {
	Excludes []string `pulumi:"excludes"`
	Includes []string `pulumi:"includes"`
}

// PipelineGitTagFilterCriteriaInput is an input type that accepts PipelineGitTagFilterCriteriaArgs and PipelineGitTagFilterCriteriaOutput values.
// You can construct a concrete instance of `PipelineGitTagFilterCriteriaInput` via:
//
//	PipelineGitTagFilterCriteriaArgs{...}
type PipelineGitTagFilterCriteriaInput interface {
	pulumi.Input

	ToPipelineGitTagFilterCriteriaOutput() PipelineGitTagFilterCriteriaOutput
	ToPipelineGitTagFilterCriteriaOutputWithContext(context.Context) PipelineGitTagFilterCriteriaOutput
}

type PipelineGitTagFilterCriteriaArgs struct {
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (PipelineGitTagFilterCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineGitTagFilterCriteria)(nil)).Elem()
}

func (i PipelineGitTagFilterCriteriaArgs) ToPipelineGitTagFilterCriteriaOutput() PipelineGitTagFilterCriteriaOutput {
	return i.ToPipelineGitTagFilterCriteriaOutputWithContext(context.Background())
}

func (i PipelineGitTagFilterCriteriaArgs) ToPipelineGitTagFilterCriteriaOutputWithContext(ctx context.Context) PipelineGitTagFilterCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitTagFilterCriteriaOutput)
}

func (i PipelineGitTagFilterCriteriaArgs) ToPipelineGitTagFilterCriteriaPtrOutput() PipelineGitTagFilterCriteriaPtrOutput {
	return i.ToPipelineGitTagFilterCriteriaPtrOutputWithContext(context.Background())
}

func (i PipelineGitTagFilterCriteriaArgs) ToPipelineGitTagFilterCriteriaPtrOutputWithContext(ctx context.Context) PipelineGitTagFilterCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitTagFilterCriteriaOutput).ToPipelineGitTagFilterCriteriaPtrOutputWithContext(ctx)
}

// PipelineGitTagFilterCriteriaPtrInput is an input type that accepts PipelineGitTagFilterCriteriaArgs, PipelineGitTagFilterCriteriaPtr and PipelineGitTagFilterCriteriaPtrOutput values.
// You can construct a concrete instance of `PipelineGitTagFilterCriteriaPtrInput` via:
//
//	        PipelineGitTagFilterCriteriaArgs{...}
//
//	or:
//
//	        nil
type PipelineGitTagFilterCriteriaPtrInput interface {
	pulumi.Input

	ToPipelineGitTagFilterCriteriaPtrOutput() PipelineGitTagFilterCriteriaPtrOutput
	ToPipelineGitTagFilterCriteriaPtrOutputWithContext(context.Context) PipelineGitTagFilterCriteriaPtrOutput
}

type pipelineGitTagFilterCriteriaPtrType PipelineGitTagFilterCriteriaArgs

func PipelineGitTagFilterCriteriaPtr(v *PipelineGitTagFilterCriteriaArgs) PipelineGitTagFilterCriteriaPtrInput {
	return (*pipelineGitTagFilterCriteriaPtrType)(v)
}

func (*pipelineGitTagFilterCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineGitTagFilterCriteria)(nil)).Elem()
}

func (i *pipelineGitTagFilterCriteriaPtrType) ToPipelineGitTagFilterCriteriaPtrOutput() PipelineGitTagFilterCriteriaPtrOutput {
	return i.ToPipelineGitTagFilterCriteriaPtrOutputWithContext(context.Background())
}

func (i *pipelineGitTagFilterCriteriaPtrType) ToPipelineGitTagFilterCriteriaPtrOutputWithContext(ctx context.Context) PipelineGitTagFilterCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineGitTagFilterCriteriaPtrOutput)
}

type PipelineGitTagFilterCriteriaOutput struct{ *pulumi.OutputState }

func (PipelineGitTagFilterCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineGitTagFilterCriteria)(nil)).Elem()
}

func (o PipelineGitTagFilterCriteriaOutput) ToPipelineGitTagFilterCriteriaOutput() PipelineGitTagFilterCriteriaOutput {
	return o
}

func (o PipelineGitTagFilterCriteriaOutput) ToPipelineGitTagFilterCriteriaOutputWithContext(ctx context.Context) PipelineGitTagFilterCriteriaOutput {
	return o
}

func (o PipelineGitTagFilterCriteriaOutput) ToPipelineGitTagFilterCriteriaPtrOutput() PipelineGitTagFilterCriteriaPtrOutput {
	return o.ToPipelineGitTagFilterCriteriaPtrOutputWithContext(context.Background())
}

func (o PipelineGitTagFilterCriteriaOutput) ToPipelineGitTagFilterCriteriaPtrOutputWithContext(ctx context.Context) PipelineGitTagFilterCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PipelineGitTagFilterCriteria) *PipelineGitTagFilterCriteria {
		return &v
	}).(PipelineGitTagFilterCriteriaPtrOutput)
}

func (o PipelineGitTagFilterCriteriaOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineGitTagFilterCriteria) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

func (o PipelineGitTagFilterCriteriaOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PipelineGitTagFilterCriteria) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type PipelineGitTagFilterCriteriaPtrOutput struct{ *pulumi.OutputState }

func (PipelineGitTagFilterCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PipelineGitTagFilterCriteria)(nil)).Elem()
}

func (o PipelineGitTagFilterCriteriaPtrOutput) ToPipelineGitTagFilterCriteriaPtrOutput() PipelineGitTagFilterCriteriaPtrOutput {
	return o
}

func (o PipelineGitTagFilterCriteriaPtrOutput) ToPipelineGitTagFilterCriteriaPtrOutputWithContext(ctx context.Context) PipelineGitTagFilterCriteriaPtrOutput {
	return o
}

func (o PipelineGitTagFilterCriteriaPtrOutput) Elem() PipelineGitTagFilterCriteriaOutput {
	return o.ApplyT(func(v *PipelineGitTagFilterCriteria) PipelineGitTagFilterCriteria {
		if v != nil {
			return *v
		}
		var ret PipelineGitTagFilterCriteria
		return ret
	}).(PipelineGitTagFilterCriteriaOutput)
}

func (o PipelineGitTagFilterCriteriaPtrOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineGitTagFilterCriteria) []string {
		if v == nil {
			return nil
		}
		return v.Excludes
	}).(pulumi.StringArrayOutput)
}

func (o PipelineGitTagFilterCriteriaPtrOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PipelineGitTagFilterCriteria) []string {
		if v == nil {
			return nil
		}
		return v.Includes
	}).(pulumi.StringArrayOutput)
}

type PipelineInputArtifact struct {
	Name string `pulumi:"name"`
}

// PipelineInputArtifactInput is an input type that accepts PipelineInputArtifactArgs and PipelineInputArtifactOutput values.
// You can construct a concrete instance of `PipelineInputArtifactInput` via:
//
//	PipelineInputArtifactArgs{...}
type PipelineInputArtifactInput interface {
	pulumi.Input

	ToPipelineInputArtifactOutput() PipelineInputArtifactOutput
	ToPipelineInputArtifactOutputWithContext(context.Context) PipelineInputArtifactOutput
}

type PipelineInputArtifactArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (PipelineInputArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineInputArtifact)(nil)).Elem()
}

func (i PipelineInputArtifactArgs) ToPipelineInputArtifactOutput() PipelineInputArtifactOutput {
	return i.ToPipelineInputArtifactOutputWithContext(context.Background())
}

func (i PipelineInputArtifactArgs) ToPipelineInputArtifactOutputWithContext(ctx context.Context) PipelineInputArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineInputArtifactOutput)
}

// PipelineInputArtifactArrayInput is an input type that accepts PipelineInputArtifactArray and PipelineInputArtifactArrayOutput values.
// You can construct a concrete instance of `PipelineInputArtifactArrayInput` via:
//
//	PipelineInputArtifactArray{ PipelineInputArtifactArgs{...} }
type PipelineInputArtifactArrayInput interface {
	pulumi.Input

	ToPipelineInputArtifactArrayOutput() PipelineInputArtifactArrayOutput
	ToPipelineInputArtifactArrayOutputWithContext(context.Context) PipelineInputArtifactArrayOutput
}

type PipelineInputArtifactArray []PipelineInputArtifactInput

func (PipelineInputArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineInputArtifact)(nil)).Elem()
}

func (i PipelineInputArtifactArray) ToPipelineInputArtifactArrayOutput() PipelineInputArtifactArrayOutput {
	return i.ToPipelineInputArtifactArrayOutputWithContext(context.Background())
}

func (i PipelineInputArtifactArray) ToPipelineInputArtifactArrayOutputWithContext(ctx context.Context) PipelineInputArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineInputArtifactArrayOutput)
}

type PipelineInputArtifactOutput struct{ *pulumi.OutputState }

func (PipelineInputArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineInputArtifact)(nil)).Elem()
}

func (o PipelineInputArtifactOutput) ToPipelineInputArtifactOutput() PipelineInputArtifactOutput {
	return o
}

func (o PipelineInputArtifactOutput) ToPipelineInputArtifactOutputWithContext(ctx context.Context) PipelineInputArtifactOutput {
	return o
}

func (o PipelineInputArtifactOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineInputArtifact) string { return v.Name }).(pulumi.StringOutput)
}

type PipelineInputArtifactArrayOutput struct{ *pulumi.OutputState }

func (PipelineInputArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineInputArtifact)(nil)).Elem()
}

func (o PipelineInputArtifactArrayOutput) ToPipelineInputArtifactArrayOutput() PipelineInputArtifactArrayOutput {
	return o
}

func (o PipelineInputArtifactArrayOutput) ToPipelineInputArtifactArrayOutputWithContext(ctx context.Context) PipelineInputArtifactArrayOutput {
	return o
}

func (o PipelineInputArtifactArrayOutput) Index(i pulumi.IntInput) PipelineInputArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineInputArtifact {
		return vs[0].([]PipelineInputArtifact)[vs[1].(int)]
	}).(PipelineInputArtifactOutput)
}

type PipelineOutputArtifact struct {
	Name string `pulumi:"name"`
}

// PipelineOutputArtifactInput is an input type that accepts PipelineOutputArtifactArgs and PipelineOutputArtifactOutput values.
// You can construct a concrete instance of `PipelineOutputArtifactInput` via:
//
//	PipelineOutputArtifactArgs{...}
type PipelineOutputArtifactInput interface {
	pulumi.Input

	ToPipelineOutputArtifactOutput() PipelineOutputArtifactOutput
	ToPipelineOutputArtifactOutputWithContext(context.Context) PipelineOutputArtifactOutput
}

type PipelineOutputArtifactArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (PipelineOutputArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineOutputArtifact)(nil)).Elem()
}

func (i PipelineOutputArtifactArgs) ToPipelineOutputArtifactOutput() PipelineOutputArtifactOutput {
	return i.ToPipelineOutputArtifactOutputWithContext(context.Background())
}

func (i PipelineOutputArtifactArgs) ToPipelineOutputArtifactOutputWithContext(ctx context.Context) PipelineOutputArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineOutputArtifactOutput)
}

// PipelineOutputArtifactArrayInput is an input type that accepts PipelineOutputArtifactArray and PipelineOutputArtifactArrayOutput values.
// You can construct a concrete instance of `PipelineOutputArtifactArrayInput` via:
//
//	PipelineOutputArtifactArray{ PipelineOutputArtifactArgs{...} }
type PipelineOutputArtifactArrayInput interface {
	pulumi.Input

	ToPipelineOutputArtifactArrayOutput() PipelineOutputArtifactArrayOutput
	ToPipelineOutputArtifactArrayOutputWithContext(context.Context) PipelineOutputArtifactArrayOutput
}

type PipelineOutputArtifactArray []PipelineOutputArtifactInput

func (PipelineOutputArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineOutputArtifact)(nil)).Elem()
}

func (i PipelineOutputArtifactArray) ToPipelineOutputArtifactArrayOutput() PipelineOutputArtifactArrayOutput {
	return i.ToPipelineOutputArtifactArrayOutputWithContext(context.Background())
}

func (i PipelineOutputArtifactArray) ToPipelineOutputArtifactArrayOutputWithContext(ctx context.Context) PipelineOutputArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineOutputArtifactArrayOutput)
}

type PipelineOutputArtifactOutput struct{ *pulumi.OutputState }

func (PipelineOutputArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineOutputArtifact)(nil)).Elem()
}

func (o PipelineOutputArtifactOutput) ToPipelineOutputArtifactOutput() PipelineOutputArtifactOutput {
	return o
}

func (o PipelineOutputArtifactOutput) ToPipelineOutputArtifactOutputWithContext(ctx context.Context) PipelineOutputArtifactOutput {
	return o
}

func (o PipelineOutputArtifactOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineOutputArtifact) string { return v.Name }).(pulumi.StringOutput)
}

type PipelineOutputArtifactArrayOutput struct{ *pulumi.OutputState }

func (PipelineOutputArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineOutputArtifact)(nil)).Elem()
}

func (o PipelineOutputArtifactArrayOutput) ToPipelineOutputArtifactArrayOutput() PipelineOutputArtifactArrayOutput {
	return o
}

func (o PipelineOutputArtifactArrayOutput) ToPipelineOutputArtifactArrayOutputWithContext(ctx context.Context) PipelineOutputArtifactArrayOutput {
	return o
}

func (o PipelineOutputArtifactArrayOutput) Index(i pulumi.IntInput) PipelineOutputArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineOutputArtifact {
		return vs[0].([]PipelineOutputArtifact)[vs[1].(int)]
	}).(PipelineOutputArtifactOutput)
}

type PipelineStageDeclaration struct {
	Actions  []PipelineActionDeclaration  `pulumi:"actions"`
	Blockers []PipelineBlockerDeclaration `pulumi:"blockers"`
	Name     string                       `pulumi:"name"`
}

// PipelineStageDeclarationInput is an input type that accepts PipelineStageDeclarationArgs and PipelineStageDeclarationOutput values.
// You can construct a concrete instance of `PipelineStageDeclarationInput` via:
//
//	PipelineStageDeclarationArgs{...}
type PipelineStageDeclarationInput interface {
	pulumi.Input

	ToPipelineStageDeclarationOutput() PipelineStageDeclarationOutput
	ToPipelineStageDeclarationOutputWithContext(context.Context) PipelineStageDeclarationOutput
}

type PipelineStageDeclarationArgs struct {
	Actions  PipelineActionDeclarationArrayInput  `pulumi:"actions"`
	Blockers PipelineBlockerDeclarationArrayInput `pulumi:"blockers"`
	Name     pulumi.StringInput                   `pulumi:"name"`
}

func (PipelineStageDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStageDeclaration)(nil)).Elem()
}

func (i PipelineStageDeclarationArgs) ToPipelineStageDeclarationOutput() PipelineStageDeclarationOutput {
	return i.ToPipelineStageDeclarationOutputWithContext(context.Background())
}

func (i PipelineStageDeclarationArgs) ToPipelineStageDeclarationOutputWithContext(ctx context.Context) PipelineStageDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageDeclarationOutput)
}

// PipelineStageDeclarationArrayInput is an input type that accepts PipelineStageDeclarationArray and PipelineStageDeclarationArrayOutput values.
// You can construct a concrete instance of `PipelineStageDeclarationArrayInput` via:
//
//	PipelineStageDeclarationArray{ PipelineStageDeclarationArgs{...} }
type PipelineStageDeclarationArrayInput interface {
	pulumi.Input

	ToPipelineStageDeclarationArrayOutput() PipelineStageDeclarationArrayOutput
	ToPipelineStageDeclarationArrayOutputWithContext(context.Context) PipelineStageDeclarationArrayOutput
}

type PipelineStageDeclarationArray []PipelineStageDeclarationInput

func (PipelineStageDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStageDeclaration)(nil)).Elem()
}

func (i PipelineStageDeclarationArray) ToPipelineStageDeclarationArrayOutput() PipelineStageDeclarationArrayOutput {
	return i.ToPipelineStageDeclarationArrayOutputWithContext(context.Background())
}

func (i PipelineStageDeclarationArray) ToPipelineStageDeclarationArrayOutputWithContext(ctx context.Context) PipelineStageDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageDeclarationArrayOutput)
}

type PipelineStageDeclarationOutput struct{ *pulumi.OutputState }

func (PipelineStageDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStageDeclaration)(nil)).Elem()
}

func (o PipelineStageDeclarationOutput) ToPipelineStageDeclarationOutput() PipelineStageDeclarationOutput {
	return o
}

func (o PipelineStageDeclarationOutput) ToPipelineStageDeclarationOutputWithContext(ctx context.Context) PipelineStageDeclarationOutput {
	return o
}

func (o PipelineStageDeclarationOutput) Actions() PipelineActionDeclarationArrayOutput {
	return o.ApplyT(func(v PipelineStageDeclaration) []PipelineActionDeclaration { return v.Actions }).(PipelineActionDeclarationArrayOutput)
}

func (o PipelineStageDeclarationOutput) Blockers() PipelineBlockerDeclarationArrayOutput {
	return o.ApplyT(func(v PipelineStageDeclaration) []PipelineBlockerDeclaration { return v.Blockers }).(PipelineBlockerDeclarationArrayOutput)
}

func (o PipelineStageDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

type PipelineStageDeclarationArrayOutput struct{ *pulumi.OutputState }

func (PipelineStageDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStageDeclaration)(nil)).Elem()
}

func (o PipelineStageDeclarationArrayOutput) ToPipelineStageDeclarationArrayOutput() PipelineStageDeclarationArrayOutput {
	return o
}

func (o PipelineStageDeclarationArrayOutput) ToPipelineStageDeclarationArrayOutputWithContext(ctx context.Context) PipelineStageDeclarationArrayOutput {
	return o
}

func (o PipelineStageDeclarationArrayOutput) Index(i pulumi.IntInput) PipelineStageDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineStageDeclaration {
		return vs[0].([]PipelineStageDeclaration)[vs[1].(int)]
	}).(PipelineStageDeclarationOutput)
}

type PipelineStageTransition struct {
	Reason    string `pulumi:"reason"`
	StageName string `pulumi:"stageName"`
}

// PipelineStageTransitionInput is an input type that accepts PipelineStageTransitionArgs and PipelineStageTransitionOutput values.
// You can construct a concrete instance of `PipelineStageTransitionInput` via:
//
//	PipelineStageTransitionArgs{...}
type PipelineStageTransitionInput interface {
	pulumi.Input

	ToPipelineStageTransitionOutput() PipelineStageTransitionOutput
	ToPipelineStageTransitionOutputWithContext(context.Context) PipelineStageTransitionOutput
}

type PipelineStageTransitionArgs struct {
	Reason    pulumi.StringInput `pulumi:"reason"`
	StageName pulumi.StringInput `pulumi:"stageName"`
}

func (PipelineStageTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStageTransition)(nil)).Elem()
}

func (i PipelineStageTransitionArgs) ToPipelineStageTransitionOutput() PipelineStageTransitionOutput {
	return i.ToPipelineStageTransitionOutputWithContext(context.Background())
}

func (i PipelineStageTransitionArgs) ToPipelineStageTransitionOutputWithContext(ctx context.Context) PipelineStageTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageTransitionOutput)
}

// PipelineStageTransitionArrayInput is an input type that accepts PipelineStageTransitionArray and PipelineStageTransitionArrayOutput values.
// You can construct a concrete instance of `PipelineStageTransitionArrayInput` via:
//
//	PipelineStageTransitionArray{ PipelineStageTransitionArgs{...} }
type PipelineStageTransitionArrayInput interface {
	pulumi.Input

	ToPipelineStageTransitionArrayOutput() PipelineStageTransitionArrayOutput
	ToPipelineStageTransitionArrayOutputWithContext(context.Context) PipelineStageTransitionArrayOutput
}

type PipelineStageTransitionArray []PipelineStageTransitionInput

func (PipelineStageTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStageTransition)(nil)).Elem()
}

func (i PipelineStageTransitionArray) ToPipelineStageTransitionArrayOutput() PipelineStageTransitionArrayOutput {
	return i.ToPipelineStageTransitionArrayOutputWithContext(context.Background())
}

func (i PipelineStageTransitionArray) ToPipelineStageTransitionArrayOutputWithContext(ctx context.Context) PipelineStageTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineStageTransitionArrayOutput)
}

type PipelineStageTransitionOutput struct{ *pulumi.OutputState }

func (PipelineStageTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineStageTransition)(nil)).Elem()
}

func (o PipelineStageTransitionOutput) ToPipelineStageTransitionOutput() PipelineStageTransitionOutput {
	return o
}

func (o PipelineStageTransitionOutput) ToPipelineStageTransitionOutputWithContext(ctx context.Context) PipelineStageTransitionOutput {
	return o
}

func (o PipelineStageTransitionOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageTransition) string { return v.Reason }).(pulumi.StringOutput)
}

func (o PipelineStageTransitionOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineStageTransition) string { return v.StageName }).(pulumi.StringOutput)
}

type PipelineStageTransitionArrayOutput struct{ *pulumi.OutputState }

func (PipelineStageTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineStageTransition)(nil)).Elem()
}

func (o PipelineStageTransitionArrayOutput) ToPipelineStageTransitionArrayOutput() PipelineStageTransitionArrayOutput {
	return o
}

func (o PipelineStageTransitionArrayOutput) ToPipelineStageTransitionArrayOutputWithContext(ctx context.Context) PipelineStageTransitionArrayOutput {
	return o
}

func (o PipelineStageTransitionArrayOutput) Index(i pulumi.IntInput) PipelineStageTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineStageTransition {
		return vs[0].([]PipelineStageTransition)[vs[1].(int)]
	}).(PipelineStageTransitionOutput)
}

type PipelineTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// PipelineTagInput is an input type that accepts PipelineTagArgs and PipelineTagOutput values.
// You can construct a concrete instance of `PipelineTagInput` via:
//
//	PipelineTagArgs{...}
type PipelineTagInput interface {
	pulumi.Input

	ToPipelineTagOutput() PipelineTagOutput
	ToPipelineTagOutputWithContext(context.Context) PipelineTagOutput
}

type PipelineTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (PipelineTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTag)(nil)).Elem()
}

func (i PipelineTagArgs) ToPipelineTagOutput() PipelineTagOutput {
	return i.ToPipelineTagOutputWithContext(context.Background())
}

func (i PipelineTagArgs) ToPipelineTagOutputWithContext(ctx context.Context) PipelineTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTagOutput)
}

// PipelineTagArrayInput is an input type that accepts PipelineTagArray and PipelineTagArrayOutput values.
// You can construct a concrete instance of `PipelineTagArrayInput` via:
//
//	PipelineTagArray{ PipelineTagArgs{...} }
type PipelineTagArrayInput interface {
	pulumi.Input

	ToPipelineTagArrayOutput() PipelineTagArrayOutput
	ToPipelineTagArrayOutputWithContext(context.Context) PipelineTagArrayOutput
}

type PipelineTagArray []PipelineTagInput

func (PipelineTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTag)(nil)).Elem()
}

func (i PipelineTagArray) ToPipelineTagArrayOutput() PipelineTagArrayOutput {
	return i.ToPipelineTagArrayOutputWithContext(context.Background())
}

func (i PipelineTagArray) ToPipelineTagArrayOutputWithContext(ctx context.Context) PipelineTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTagArrayOutput)
}

type PipelineTagOutput struct{ *pulumi.OutputState }

func (PipelineTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTag)(nil)).Elem()
}

func (o PipelineTagOutput) ToPipelineTagOutput() PipelineTagOutput {
	return o
}

func (o PipelineTagOutput) ToPipelineTagOutputWithContext(ctx context.Context) PipelineTagOutput {
	return o
}

func (o PipelineTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o PipelineTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTag) string { return v.Value }).(pulumi.StringOutput)
}

type PipelineTagArrayOutput struct{ *pulumi.OutputState }

func (PipelineTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTag)(nil)).Elem()
}

func (o PipelineTagArrayOutput) ToPipelineTagArrayOutput() PipelineTagArrayOutput {
	return o
}

func (o PipelineTagArrayOutput) ToPipelineTagArrayOutputWithContext(ctx context.Context) PipelineTagArrayOutput {
	return o
}

func (o PipelineTagArrayOutput) Index(i pulumi.IntInput) PipelineTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineTag {
		return vs[0].([]PipelineTag)[vs[1].(int)]
	}).(PipelineTagOutput)
}

type PipelineTriggerDeclaration struct {
	GitConfiguration *PipelineGitConfiguration `pulumi:"gitConfiguration"`
	ProviderType     string                    `pulumi:"providerType"`
}

// PipelineTriggerDeclarationInput is an input type that accepts PipelineTriggerDeclarationArgs and PipelineTriggerDeclarationOutput values.
// You can construct a concrete instance of `PipelineTriggerDeclarationInput` via:
//
//	PipelineTriggerDeclarationArgs{...}
type PipelineTriggerDeclarationInput interface {
	pulumi.Input

	ToPipelineTriggerDeclarationOutput() PipelineTriggerDeclarationOutput
	ToPipelineTriggerDeclarationOutputWithContext(context.Context) PipelineTriggerDeclarationOutput
}

type PipelineTriggerDeclarationArgs struct {
	GitConfiguration PipelineGitConfigurationPtrInput `pulumi:"gitConfiguration"`
	ProviderType     pulumi.StringInput               `pulumi:"providerType"`
}

func (PipelineTriggerDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerDeclaration)(nil)).Elem()
}

func (i PipelineTriggerDeclarationArgs) ToPipelineTriggerDeclarationOutput() PipelineTriggerDeclarationOutput {
	return i.ToPipelineTriggerDeclarationOutputWithContext(context.Background())
}

func (i PipelineTriggerDeclarationArgs) ToPipelineTriggerDeclarationOutputWithContext(ctx context.Context) PipelineTriggerDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerDeclarationOutput)
}

// PipelineTriggerDeclarationArrayInput is an input type that accepts PipelineTriggerDeclarationArray and PipelineTriggerDeclarationArrayOutput values.
// You can construct a concrete instance of `PipelineTriggerDeclarationArrayInput` via:
//
//	PipelineTriggerDeclarationArray{ PipelineTriggerDeclarationArgs{...} }
type PipelineTriggerDeclarationArrayInput interface {
	pulumi.Input

	ToPipelineTriggerDeclarationArrayOutput() PipelineTriggerDeclarationArrayOutput
	ToPipelineTriggerDeclarationArrayOutputWithContext(context.Context) PipelineTriggerDeclarationArrayOutput
}

type PipelineTriggerDeclarationArray []PipelineTriggerDeclarationInput

func (PipelineTriggerDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTriggerDeclaration)(nil)).Elem()
}

func (i PipelineTriggerDeclarationArray) ToPipelineTriggerDeclarationArrayOutput() PipelineTriggerDeclarationArrayOutput {
	return i.ToPipelineTriggerDeclarationArrayOutputWithContext(context.Background())
}

func (i PipelineTriggerDeclarationArray) ToPipelineTriggerDeclarationArrayOutputWithContext(ctx context.Context) PipelineTriggerDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineTriggerDeclarationArrayOutput)
}

type PipelineTriggerDeclarationOutput struct{ *pulumi.OutputState }

func (PipelineTriggerDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineTriggerDeclaration)(nil)).Elem()
}

func (o PipelineTriggerDeclarationOutput) ToPipelineTriggerDeclarationOutput() PipelineTriggerDeclarationOutput {
	return o
}

func (o PipelineTriggerDeclarationOutput) ToPipelineTriggerDeclarationOutputWithContext(ctx context.Context) PipelineTriggerDeclarationOutput {
	return o
}

func (o PipelineTriggerDeclarationOutput) GitConfiguration() PipelineGitConfigurationPtrOutput {
	return o.ApplyT(func(v PipelineTriggerDeclaration) *PipelineGitConfiguration { return v.GitConfiguration }).(PipelineGitConfigurationPtrOutput)
}

func (o PipelineTriggerDeclarationOutput) ProviderType() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineTriggerDeclaration) string { return v.ProviderType }).(pulumi.StringOutput)
}

type PipelineTriggerDeclarationArrayOutput struct{ *pulumi.OutputState }

func (PipelineTriggerDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineTriggerDeclaration)(nil)).Elem()
}

func (o PipelineTriggerDeclarationArrayOutput) ToPipelineTriggerDeclarationArrayOutput() PipelineTriggerDeclarationArrayOutput {
	return o
}

func (o PipelineTriggerDeclarationArrayOutput) ToPipelineTriggerDeclarationArrayOutputWithContext(ctx context.Context) PipelineTriggerDeclarationArrayOutput {
	return o
}

func (o PipelineTriggerDeclarationArrayOutput) Index(i pulumi.IntInput) PipelineTriggerDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineTriggerDeclaration {
		return vs[0].([]PipelineTriggerDeclaration)[vs[1].(int)]
	}).(PipelineTriggerDeclarationOutput)
}

type PipelineVariableDeclaration struct {
	DefaultValue *string `pulumi:"defaultValue"`
	Description  *string `pulumi:"description"`
	Name         string  `pulumi:"name"`
}

// PipelineVariableDeclarationInput is an input type that accepts PipelineVariableDeclarationArgs and PipelineVariableDeclarationOutput values.
// You can construct a concrete instance of `PipelineVariableDeclarationInput` via:
//
//	PipelineVariableDeclarationArgs{...}
type PipelineVariableDeclarationInput interface {
	pulumi.Input

	ToPipelineVariableDeclarationOutput() PipelineVariableDeclarationOutput
	ToPipelineVariableDeclarationOutputWithContext(context.Context) PipelineVariableDeclarationOutput
}

type PipelineVariableDeclarationArgs struct {
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	Description  pulumi.StringPtrInput `pulumi:"description"`
	Name         pulumi.StringInput    `pulumi:"name"`
}

func (PipelineVariableDeclarationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineVariableDeclaration)(nil)).Elem()
}

func (i PipelineVariableDeclarationArgs) ToPipelineVariableDeclarationOutput() PipelineVariableDeclarationOutput {
	return i.ToPipelineVariableDeclarationOutputWithContext(context.Background())
}

func (i PipelineVariableDeclarationArgs) ToPipelineVariableDeclarationOutputWithContext(ctx context.Context) PipelineVariableDeclarationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineVariableDeclarationOutput)
}

// PipelineVariableDeclarationArrayInput is an input type that accepts PipelineVariableDeclarationArray and PipelineVariableDeclarationArrayOutput values.
// You can construct a concrete instance of `PipelineVariableDeclarationArrayInput` via:
//
//	PipelineVariableDeclarationArray{ PipelineVariableDeclarationArgs{...} }
type PipelineVariableDeclarationArrayInput interface {
	pulumi.Input

	ToPipelineVariableDeclarationArrayOutput() PipelineVariableDeclarationArrayOutput
	ToPipelineVariableDeclarationArrayOutputWithContext(context.Context) PipelineVariableDeclarationArrayOutput
}

type PipelineVariableDeclarationArray []PipelineVariableDeclarationInput

func (PipelineVariableDeclarationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineVariableDeclaration)(nil)).Elem()
}

func (i PipelineVariableDeclarationArray) ToPipelineVariableDeclarationArrayOutput() PipelineVariableDeclarationArrayOutput {
	return i.ToPipelineVariableDeclarationArrayOutputWithContext(context.Background())
}

func (i PipelineVariableDeclarationArray) ToPipelineVariableDeclarationArrayOutputWithContext(ctx context.Context) PipelineVariableDeclarationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineVariableDeclarationArrayOutput)
}

type PipelineVariableDeclarationOutput struct{ *pulumi.OutputState }

func (PipelineVariableDeclarationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineVariableDeclaration)(nil)).Elem()
}

func (o PipelineVariableDeclarationOutput) ToPipelineVariableDeclarationOutput() PipelineVariableDeclarationOutput {
	return o
}

func (o PipelineVariableDeclarationOutput) ToPipelineVariableDeclarationOutputWithContext(ctx context.Context) PipelineVariableDeclarationOutput {
	return o
}

func (o PipelineVariableDeclarationOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineVariableDeclaration) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

func (o PipelineVariableDeclarationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineVariableDeclaration) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PipelineVariableDeclarationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineVariableDeclaration) string { return v.Name }).(pulumi.StringOutput)
}

type PipelineVariableDeclarationArrayOutput struct{ *pulumi.OutputState }

func (PipelineVariableDeclarationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineVariableDeclaration)(nil)).Elem()
}

func (o PipelineVariableDeclarationArrayOutput) ToPipelineVariableDeclarationArrayOutput() PipelineVariableDeclarationArrayOutput {
	return o
}

func (o PipelineVariableDeclarationArrayOutput) ToPipelineVariableDeclarationArrayOutputWithContext(ctx context.Context) PipelineVariableDeclarationArrayOutput {
	return o
}

func (o PipelineVariableDeclarationArrayOutput) Index(i pulumi.IntInput) PipelineVariableDeclarationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineVariableDeclaration {
		return vs[0].([]PipelineVariableDeclaration)[vs[1].(int)]
	}).(PipelineVariableDeclarationOutput)
}

type WebhookAuthConfiguration struct {
	AllowedIpRange *string `pulumi:"allowedIpRange"`
	SecretToken    *string `pulumi:"secretToken"`
}

// WebhookAuthConfigurationInput is an input type that accepts WebhookAuthConfigurationArgs and WebhookAuthConfigurationOutput values.
// You can construct a concrete instance of `WebhookAuthConfigurationInput` via:
//
//	WebhookAuthConfigurationArgs{...}
type WebhookAuthConfigurationInput interface {
	pulumi.Input

	ToWebhookAuthConfigurationOutput() WebhookAuthConfigurationOutput
	ToWebhookAuthConfigurationOutputWithContext(context.Context) WebhookAuthConfigurationOutput
}

type WebhookAuthConfigurationArgs struct {
	AllowedIpRange pulumi.StringPtrInput `pulumi:"allowedIpRange"`
	SecretToken    pulumi.StringPtrInput `pulumi:"secretToken"`
}

func (WebhookAuthConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookAuthConfiguration)(nil)).Elem()
}

func (i WebhookAuthConfigurationArgs) ToWebhookAuthConfigurationOutput() WebhookAuthConfigurationOutput {
	return i.ToWebhookAuthConfigurationOutputWithContext(context.Background())
}

func (i WebhookAuthConfigurationArgs) ToWebhookAuthConfigurationOutputWithContext(ctx context.Context) WebhookAuthConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAuthConfigurationOutput)
}

type WebhookAuthConfigurationOutput struct{ *pulumi.OutputState }

func (WebhookAuthConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookAuthConfiguration)(nil)).Elem()
}

func (o WebhookAuthConfigurationOutput) ToWebhookAuthConfigurationOutput() WebhookAuthConfigurationOutput {
	return o
}

func (o WebhookAuthConfigurationOutput) ToWebhookAuthConfigurationOutputWithContext(ctx context.Context) WebhookAuthConfigurationOutput {
	return o
}

func (o WebhookAuthConfigurationOutput) AllowedIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookAuthConfiguration) *string { return v.AllowedIpRange }).(pulumi.StringPtrOutput)
}

func (o WebhookAuthConfigurationOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookAuthConfiguration) *string { return v.SecretToken }).(pulumi.StringPtrOutput)
}

type WebhookAuthConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WebhookAuthConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookAuthConfiguration)(nil)).Elem()
}

func (o WebhookAuthConfigurationPtrOutput) ToWebhookAuthConfigurationPtrOutput() WebhookAuthConfigurationPtrOutput {
	return o
}

func (o WebhookAuthConfigurationPtrOutput) ToWebhookAuthConfigurationPtrOutputWithContext(ctx context.Context) WebhookAuthConfigurationPtrOutput {
	return o
}

func (o WebhookAuthConfigurationPtrOutput) Elem() WebhookAuthConfigurationOutput {
	return o.ApplyT(func(v *WebhookAuthConfiguration) WebhookAuthConfiguration {
		if v != nil {
			return *v
		}
		var ret WebhookAuthConfiguration
		return ret
	}).(WebhookAuthConfigurationOutput)
}

func (o WebhookAuthConfigurationPtrOutput) AllowedIpRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookAuthConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AllowedIpRange
	}).(pulumi.StringPtrOutput)
}

func (o WebhookAuthConfigurationPtrOutput) SecretToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookAuthConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SecretToken
	}).(pulumi.StringPtrOutput)
}

type WebhookFilterRule struct {
	JsonPath    string  `pulumi:"jsonPath"`
	MatchEquals *string `pulumi:"matchEquals"`
}

// WebhookFilterRuleInput is an input type that accepts WebhookFilterRuleArgs and WebhookFilterRuleOutput values.
// You can construct a concrete instance of `WebhookFilterRuleInput` via:
//
//	WebhookFilterRuleArgs{...}
type WebhookFilterRuleInput interface {
	pulumi.Input

	ToWebhookFilterRuleOutput() WebhookFilterRuleOutput
	ToWebhookFilterRuleOutputWithContext(context.Context) WebhookFilterRuleOutput
}

type WebhookFilterRuleArgs struct {
	JsonPath    pulumi.StringInput    `pulumi:"jsonPath"`
	MatchEquals pulumi.StringPtrInput `pulumi:"matchEquals"`
}

func (WebhookFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterRule)(nil)).Elem()
}

func (i WebhookFilterRuleArgs) ToWebhookFilterRuleOutput() WebhookFilterRuleOutput {
	return i.ToWebhookFilterRuleOutputWithContext(context.Background())
}

func (i WebhookFilterRuleArgs) ToWebhookFilterRuleOutputWithContext(ctx context.Context) WebhookFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterRuleOutput)
}

// WebhookFilterRuleArrayInput is an input type that accepts WebhookFilterRuleArray and WebhookFilterRuleArrayOutput values.
// You can construct a concrete instance of `WebhookFilterRuleArrayInput` via:
//
//	WebhookFilterRuleArray{ WebhookFilterRuleArgs{...} }
type WebhookFilterRuleArrayInput interface {
	pulumi.Input

	ToWebhookFilterRuleArrayOutput() WebhookFilterRuleArrayOutput
	ToWebhookFilterRuleArrayOutputWithContext(context.Context) WebhookFilterRuleArrayOutput
}

type WebhookFilterRuleArray []WebhookFilterRuleInput

func (WebhookFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilterRule)(nil)).Elem()
}

func (i WebhookFilterRuleArray) ToWebhookFilterRuleArrayOutput() WebhookFilterRuleArrayOutput {
	return i.ToWebhookFilterRuleArrayOutputWithContext(context.Background())
}

func (i WebhookFilterRuleArray) ToWebhookFilterRuleArrayOutputWithContext(ctx context.Context) WebhookFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterRuleArrayOutput)
}

type WebhookFilterRuleOutput struct{ *pulumi.OutputState }

func (WebhookFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterRule)(nil)).Elem()
}

func (o WebhookFilterRuleOutput) ToWebhookFilterRuleOutput() WebhookFilterRuleOutput {
	return o
}

func (o WebhookFilterRuleOutput) ToWebhookFilterRuleOutputWithContext(ctx context.Context) WebhookFilterRuleOutput {
	return o
}

func (o WebhookFilterRuleOutput) JsonPath() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookFilterRule) string { return v.JsonPath }).(pulumi.StringOutput)
}

func (o WebhookFilterRuleOutput) MatchEquals() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookFilterRule) *string { return v.MatchEquals }).(pulumi.StringPtrOutput)
}

type WebhookFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (WebhookFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilterRule)(nil)).Elem()
}

func (o WebhookFilterRuleArrayOutput) ToWebhookFilterRuleArrayOutput() WebhookFilterRuleArrayOutput {
	return o
}

func (o WebhookFilterRuleArrayOutput) ToWebhookFilterRuleArrayOutputWithContext(ctx context.Context) WebhookFilterRuleArrayOutput {
	return o
}

func (o WebhookFilterRuleArrayOutput) Index(i pulumi.IntInput) WebhookFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookFilterRule {
		return vs[0].([]WebhookFilterRule)[vs[1].(int)]
	}).(WebhookFilterRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeArtifactDetailsInput)(nil)).Elem(), CustomActionTypeArtifactDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeConfigurationPropertiesInput)(nil)).Elem(), CustomActionTypeConfigurationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeConfigurationPropertiesArrayInput)(nil)).Elem(), CustomActionTypeConfigurationPropertiesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeSettingsInput)(nil)).Elem(), CustomActionTypeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeSettingsPtrInput)(nil)).Elem(), CustomActionTypeSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeTagInput)(nil)).Elem(), CustomActionTypeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomActionTypeTagArrayInput)(nil)).Elem(), CustomActionTypeTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineActionDeclarationInput)(nil)).Elem(), PipelineActionDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineActionDeclarationArrayInput)(nil)).Elem(), PipelineActionDeclarationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineActionTypeIdInput)(nil)).Elem(), PipelineActionTypeIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreInput)(nil)).Elem(), PipelineArtifactStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStorePtrInput)(nil)).Elem(), PipelineArtifactStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreMapInput)(nil)).Elem(), PipelineArtifactStoreMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineArtifactStoreMapArrayInput)(nil)).Elem(), PipelineArtifactStoreMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineBlockerDeclarationInput)(nil)).Elem(), PipelineBlockerDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineBlockerDeclarationArrayInput)(nil)).Elem(), PipelineBlockerDeclarationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineEncryptionKeyInput)(nil)).Elem(), PipelineEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineEncryptionKeyPtrInput)(nil)).Elem(), PipelineEncryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineGitConfigurationInput)(nil)).Elem(), PipelineGitConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineGitConfigurationPtrInput)(nil)).Elem(), PipelineGitConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineGitPushFilterInput)(nil)).Elem(), PipelineGitPushFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineGitPushFilterArrayInput)(nil)).Elem(), PipelineGitPushFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineGitTagFilterCriteriaInput)(nil)).Elem(), PipelineGitTagFilterCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineGitTagFilterCriteriaPtrInput)(nil)).Elem(), PipelineGitTagFilterCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineInputArtifactInput)(nil)).Elem(), PipelineInputArtifactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineInputArtifactArrayInput)(nil)).Elem(), PipelineInputArtifactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineOutputArtifactInput)(nil)).Elem(), PipelineOutputArtifactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineOutputArtifactArrayInput)(nil)).Elem(), PipelineOutputArtifactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineStageDeclarationInput)(nil)).Elem(), PipelineStageDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineStageDeclarationArrayInput)(nil)).Elem(), PipelineStageDeclarationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineStageTransitionInput)(nil)).Elem(), PipelineStageTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineStageTransitionArrayInput)(nil)).Elem(), PipelineStageTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTagInput)(nil)).Elem(), PipelineTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTagArrayInput)(nil)).Elem(), PipelineTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerDeclarationInput)(nil)).Elem(), PipelineTriggerDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineTriggerDeclarationArrayInput)(nil)).Elem(), PipelineTriggerDeclarationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineVariableDeclarationInput)(nil)).Elem(), PipelineVariableDeclarationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineVariableDeclarationArrayInput)(nil)).Elem(), PipelineVariableDeclarationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookAuthConfigurationInput)(nil)).Elem(), WebhookAuthConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFilterRuleInput)(nil)).Elem(), WebhookFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFilterRuleArrayInput)(nil)).Elem(), WebhookFilterRuleArray{})
	pulumi.RegisterOutputType(CustomActionTypeArtifactDetailsOutput{})
	pulumi.RegisterOutputType(CustomActionTypeConfigurationPropertiesOutput{})
	pulumi.RegisterOutputType(CustomActionTypeConfigurationPropertiesArrayOutput{})
	pulumi.RegisterOutputType(CustomActionTypeSettingsOutput{})
	pulumi.RegisterOutputType(CustomActionTypeSettingsPtrOutput{})
	pulumi.RegisterOutputType(CustomActionTypeTagOutput{})
	pulumi.RegisterOutputType(CustomActionTypeTagArrayOutput{})
	pulumi.RegisterOutputType(PipelineActionDeclarationOutput{})
	pulumi.RegisterOutputType(PipelineActionDeclarationArrayOutput{})
	pulumi.RegisterOutputType(PipelineActionTypeIdOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStorePtrOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreMapOutput{})
	pulumi.RegisterOutputType(PipelineArtifactStoreMapArrayOutput{})
	pulumi.RegisterOutputType(PipelineBlockerDeclarationOutput{})
	pulumi.RegisterOutputType(PipelineBlockerDeclarationArrayOutput{})
	pulumi.RegisterOutputType(PipelineEncryptionKeyOutput{})
	pulumi.RegisterOutputType(PipelineEncryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(PipelineGitConfigurationOutput{})
	pulumi.RegisterOutputType(PipelineGitConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PipelineGitPushFilterOutput{})
	pulumi.RegisterOutputType(PipelineGitPushFilterArrayOutput{})
	pulumi.RegisterOutputType(PipelineGitTagFilterCriteriaOutput{})
	pulumi.RegisterOutputType(PipelineGitTagFilterCriteriaPtrOutput{})
	pulumi.RegisterOutputType(PipelineInputArtifactOutput{})
	pulumi.RegisterOutputType(PipelineInputArtifactArrayOutput{})
	pulumi.RegisterOutputType(PipelineOutputArtifactOutput{})
	pulumi.RegisterOutputType(PipelineOutputArtifactArrayOutput{})
	pulumi.RegisterOutputType(PipelineStageDeclarationOutput{})
	pulumi.RegisterOutputType(PipelineStageDeclarationArrayOutput{})
	pulumi.RegisterOutputType(PipelineStageTransitionOutput{})
	pulumi.RegisterOutputType(PipelineStageTransitionArrayOutput{})
	pulumi.RegisterOutputType(PipelineTagOutput{})
	pulumi.RegisterOutputType(PipelineTagArrayOutput{})
	pulumi.RegisterOutputType(PipelineTriggerDeclarationOutput{})
	pulumi.RegisterOutputType(PipelineTriggerDeclarationArrayOutput{})
	pulumi.RegisterOutputType(PipelineVariableDeclarationOutput{})
	pulumi.RegisterOutputType(PipelineVariableDeclarationArrayOutput{})
	pulumi.RegisterOutputType(WebhookAuthConfigurationOutput{})
	pulumi.RegisterOutputType(WebhookAuthConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WebhookFilterRuleOutput{})
	pulumi.RegisterOutputType(WebhookFilterRuleArrayOutput{})
}
