// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codepipeline

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::CodePipeline::Webhook
type Webhook struct {
	pulumi.CustomResourceState

	// Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.
	Authentication WebhookAuthenticationOutput `pulumi:"authentication"`
	// Properties that configure the authentication applied to incoming webhook trigger requests
	AuthenticationConfiguration WebhookAuthConfigurationOutput `pulumi:"authenticationConfiguration"`
	// logical id of the webhook
	AwsId pulumi.StringOutput `pulumi:"awsId"`
	// A list of rules applied to the body/payload sent in the POST request to a webhook URL
	Filters WebhookFilterRuleArrayOutput `pulumi:"filters"`
	// The name of the webhook
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// Configures a connection between the webhook that was created and the external tool with events to be detected.
	RegisterWithThirdParty pulumi.BoolPtrOutput `pulumi:"registerWithThirdParty"`
	// The name of the action in a pipeline you want to connect to the webhook.
	TargetAction pulumi.StringOutput `pulumi:"targetAction"`
	// The name of the pipeline you want to connect to the webhook.
	TargetPipeline pulumi.StringOutput `pulumi:"targetPipeline"`
	// The version number of the pipeline to be connected to the trigger request.
	TargetPipelineVersion pulumi.IntPtrOutput `pulumi:"targetPipelineVersion"`
	// The webhook URL generated by AWS CodePipeline
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewWebhook registers a new resource with the given unique name, arguments, and options.
func NewWebhook(ctx *pulumi.Context,
	name string, args *WebhookArgs, opts ...pulumi.ResourceOption) (*Webhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Authentication == nil {
		return nil, errors.New("invalid value for required argument 'Authentication'")
	}
	if args.AuthenticationConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationConfiguration'")
	}
	if args.Filters == nil {
		return nil, errors.New("invalid value for required argument 'Filters'")
	}
	if args.TargetAction == nil {
		return nil, errors.New("invalid value for required argument 'TargetAction'")
	}
	if args.TargetPipeline == nil {
		return nil, errors.New("invalid value for required argument 'TargetPipeline'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Webhook
	err := ctx.RegisterResource("aws-native:codepipeline:Webhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhook gets an existing Webhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhookState, opts ...pulumi.ResourceOption) (*Webhook, error) {
	var resource Webhook
	err := ctx.ReadResource("aws-native:codepipeline:Webhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Webhook resources.
type webhookState struct {
}

type WebhookState struct {
}

func (WebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookState)(nil)).Elem()
}

type webhookArgs struct {
	// Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.
	Authentication WebhookAuthentication `pulumi:"authentication"`
	// Properties that configure the authentication applied to incoming webhook trigger requests
	AuthenticationConfiguration WebhookAuthConfiguration `pulumi:"authenticationConfiguration"`
	// A list of rules applied to the body/payload sent in the POST request to a webhook URL
	Filters []WebhookFilterRule `pulumi:"filters"`
	// The name of the webhook
	Name *string `pulumi:"name"`
	// Configures a connection between the webhook that was created and the external tool with events to be detected.
	RegisterWithThirdParty *bool `pulumi:"registerWithThirdParty"`
	// The name of the action in a pipeline you want to connect to the webhook.
	TargetAction string `pulumi:"targetAction"`
	// The name of the pipeline you want to connect to the webhook.
	TargetPipeline string `pulumi:"targetPipeline"`
	// The version number of the pipeline to be connected to the trigger request.
	TargetPipelineVersion *int `pulumi:"targetPipelineVersion"`
}

// The set of arguments for constructing a Webhook resource.
type WebhookArgs struct {
	// Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.
	Authentication WebhookAuthenticationInput
	// Properties that configure the authentication applied to incoming webhook trigger requests
	AuthenticationConfiguration WebhookAuthConfigurationInput
	// A list of rules applied to the body/payload sent in the POST request to a webhook URL
	Filters WebhookFilterRuleArrayInput
	// The name of the webhook
	Name pulumi.StringPtrInput
	// Configures a connection between the webhook that was created and the external tool with events to be detected.
	RegisterWithThirdParty pulumi.BoolPtrInput
	// The name of the action in a pipeline you want to connect to the webhook.
	TargetAction pulumi.StringInput
	// The name of the pipeline you want to connect to the webhook.
	TargetPipeline pulumi.StringInput
	// The version number of the pipeline to be connected to the trigger request.
	TargetPipelineVersion pulumi.IntPtrInput
}

func (WebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookArgs)(nil)).Elem()
}

type WebhookInput interface {
	pulumi.Input

	ToWebhookOutput() WebhookOutput
	ToWebhookOutputWithContext(ctx context.Context) WebhookOutput
}

func (*Webhook) ElementType() reflect.Type {
	return reflect.TypeOf((**Webhook)(nil)).Elem()
}

func (i *Webhook) ToWebhookOutput() WebhookOutput {
	return i.ToWebhookOutputWithContext(context.Background())
}

func (i *Webhook) ToWebhookOutputWithContext(ctx context.Context) WebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookOutput)
}

type WebhookOutput struct{ *pulumi.OutputState }

func (WebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Webhook)(nil)).Elem()
}

func (o WebhookOutput) ToWebhookOutput() WebhookOutput {
	return o
}

func (o WebhookOutput) ToWebhookOutputWithContext(ctx context.Context) WebhookOutput {
	return o
}

// Supported options are GITHUB_HMAC, IP, and UNAUTHENTICATED.
func (o WebhookOutput) Authentication() WebhookAuthenticationOutput {
	return o.ApplyT(func(v *Webhook) WebhookAuthenticationOutput { return v.Authentication }).(WebhookAuthenticationOutput)
}

// Properties that configure the authentication applied to incoming webhook trigger requests
func (o WebhookOutput) AuthenticationConfiguration() WebhookAuthConfigurationOutput {
	return o.ApplyT(func(v *Webhook) WebhookAuthConfigurationOutput { return v.AuthenticationConfiguration }).(WebhookAuthConfigurationOutput)
}

// logical id of the webhook
func (o WebhookOutput) AwsId() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.AwsId }).(pulumi.StringOutput)
}

// A list of rules applied to the body/payload sent in the POST request to a webhook URL
func (o WebhookOutput) Filters() WebhookFilterRuleArrayOutput {
	return o.ApplyT(func(v *Webhook) WebhookFilterRuleArrayOutput { return v.Filters }).(WebhookFilterRuleArrayOutput)
}

// The name of the webhook
func (o WebhookOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringPtrOutput { return v.Name }).(pulumi.StringPtrOutput)
}

// Configures a connection between the webhook that was created and the external tool with events to be detected.
func (o WebhookOutput) RegisterWithThirdParty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Webhook) pulumi.BoolPtrOutput { return v.RegisterWithThirdParty }).(pulumi.BoolPtrOutput)
}

// The name of the action in a pipeline you want to connect to the webhook.
func (o WebhookOutput) TargetAction() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.TargetAction }).(pulumi.StringOutput)
}

// The name of the pipeline you want to connect to the webhook.
func (o WebhookOutput) TargetPipeline() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.TargetPipeline }).(pulumi.StringOutput)
}

// The version number of the pipeline to be connected to the trigger request.
func (o WebhookOutput) TargetPipelineVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Webhook) pulumi.IntPtrOutput { return v.TargetPipelineVersion }).(pulumi.IntPtrOutput)
}

// The webhook URL generated by AWS CodePipeline
func (o WebhookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *Webhook) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookInput)(nil)).Elem(), &Webhook{})
	pulumi.RegisterOutputType(WebhookOutput{})
}
