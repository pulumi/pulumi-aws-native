// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package codepipeline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::CodePipeline::Webhook
func LookupWebhook(ctx *pulumi.Context, args *LookupWebhookArgs, opts ...pulumi.InvokeOption) (*LookupWebhookResult, error) {
	var rv LookupWebhookResult
	err := ctx.Invoke("aws-native:codepipeline:getWebhook", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWebhookArgs struct {
	Id string `pulumi:"id"`
}

type LookupWebhookResult struct {
	Authentication              *string                   `pulumi:"authentication"`
	AuthenticationConfiguration *WebhookAuthConfiguration `pulumi:"authenticationConfiguration"`
	Filters                     []WebhookFilterRule       `pulumi:"filters"`
	Id                          *string                   `pulumi:"id"`
	RegisterWithThirdParty      *bool                     `pulumi:"registerWithThirdParty"`
	TargetAction                *string                   `pulumi:"targetAction"`
	TargetPipeline              *string                   `pulumi:"targetPipeline"`
	TargetPipelineVersion       *int                      `pulumi:"targetPipelineVersion"`
	Url                         *string                   `pulumi:"url"`
}

func LookupWebhookOutput(ctx *pulumi.Context, args LookupWebhookOutputArgs, opts ...pulumi.InvokeOption) LookupWebhookResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWebhookResult, error) {
			args := v.(LookupWebhookArgs)
			r, err := LookupWebhook(ctx, &args, opts...)
			var s LookupWebhookResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWebhookResultOutput)
}

type LookupWebhookOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupWebhookOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebhookArgs)(nil)).Elem()
}

type LookupWebhookResultOutput struct{ *pulumi.OutputState }

func (LookupWebhookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWebhookResult)(nil)).Elem()
}

func (o LookupWebhookResultOutput) ToLookupWebhookResultOutput() LookupWebhookResultOutput {
	return o
}

func (o LookupWebhookResultOutput) ToLookupWebhookResultOutputWithContext(ctx context.Context) LookupWebhookResultOutput {
	return o
}

func (o LookupWebhookResultOutput) Authentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebhookResult) *string { return v.Authentication }).(pulumi.StringPtrOutput)
}

func (o LookupWebhookResultOutput) AuthenticationConfiguration() WebhookAuthConfigurationPtrOutput {
	return o.ApplyT(func(v LookupWebhookResult) *WebhookAuthConfiguration { return v.AuthenticationConfiguration }).(WebhookAuthConfigurationPtrOutput)
}

func (o LookupWebhookResultOutput) Filters() WebhookFilterRuleArrayOutput {
	return o.ApplyT(func(v LookupWebhookResult) []WebhookFilterRule { return v.Filters }).(WebhookFilterRuleArrayOutput)
}

func (o LookupWebhookResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebhookResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupWebhookResultOutput) RegisterWithThirdParty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupWebhookResult) *bool { return v.RegisterWithThirdParty }).(pulumi.BoolPtrOutput)
}

func (o LookupWebhookResultOutput) TargetAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebhookResult) *string { return v.TargetAction }).(pulumi.StringPtrOutput)
}

func (o LookupWebhookResultOutput) TargetPipeline() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebhookResult) *string { return v.TargetPipeline }).(pulumi.StringPtrOutput)
}

func (o LookupWebhookResultOutput) TargetPipelineVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupWebhookResult) *int { return v.TargetPipelineVersion }).(pulumi.IntPtrOutput)
}

func (o LookupWebhookResultOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWebhookResult) *string { return v.Url }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWebhookResultOutput{})
}
