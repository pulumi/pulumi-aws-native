// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deadline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Deadline::Monitor Resource Type
func LookupMonitor(ctx *pulumi.Context, args *LookupMonitorArgs, opts ...pulumi.InvokeOption) (*LookupMonitorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMonitorResult
	err := ctx.Invoke("aws-native:deadline:getMonitor", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMonitorArgs struct {
	// The Amazon Resource Name (ARN) of the monitor.
	Arn string `pulumi:"arn"`
}

type LookupMonitorResult struct {
	// The Amazon Resource Name (ARN) of the monitor.
	Arn *string `pulumi:"arn"`
	// The name of the monitor that displays on the Deadline Cloud console.
	//
	// > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
	DisplayName *string `pulumi:"displayName"`
	// The Amazon Resource Name (ARN) that the IAM Identity Center assigned to the monitor when it was created.
	IdentityCenterApplicationArn *string `pulumi:"identityCenterApplicationArn"`
	// The unique identifier for the monitor.
	MonitorId *string `pulumi:"monitorId"`
	// The Amazon Resource Name (ARN) of the IAM role for the monitor. Users of the monitor use this role to access Deadline Cloud resources.
	RoleArn *string `pulumi:"roleArn"`
	// The subdomain used for the monitor URL. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.
	Subdomain *string `pulumi:"subdomain"`
	// The complete URL of the monitor. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.
	Url *string `pulumi:"url"`
}

func LookupMonitorOutput(ctx *pulumi.Context, args LookupMonitorOutputArgs, opts ...pulumi.InvokeOption) LookupMonitorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMonitorResultOutput, error) {
			args := v.(LookupMonitorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:deadline:getMonitor", args, LookupMonitorResultOutput{}, options).(LookupMonitorResultOutput), nil
		}).(LookupMonitorResultOutput)
}

type LookupMonitorOutputArgs struct {
	// The Amazon Resource Name (ARN) of the monitor.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupMonitorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitorArgs)(nil)).Elem()
}

type LookupMonitorResultOutput struct{ *pulumi.OutputState }

func (LookupMonitorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitorResult)(nil)).Elem()
}

func (o LookupMonitorResultOutput) ToLookupMonitorResultOutput() LookupMonitorResultOutput {
	return o
}

func (o LookupMonitorResultOutput) ToLookupMonitorResultOutputWithContext(ctx context.Context) LookupMonitorResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the monitor.
func (o LookupMonitorResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The name of the monitor that displays on the Deadline Cloud console.
//
// > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
func (o LookupMonitorResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) that the IAM Identity Center assigned to the monitor when it was created.
func (o LookupMonitorResultOutput) IdentityCenterApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.IdentityCenterApplicationArn }).(pulumi.StringPtrOutput)
}

// The unique identifier for the monitor.
func (o LookupMonitorResultOutput) MonitorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.MonitorId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the IAM role for the monitor. Users of the monitor use this role to access Deadline Cloud resources.
func (o LookupMonitorResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The subdomain used for the monitor URL. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.
func (o LookupMonitorResultOutput) Subdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.Subdomain }).(pulumi.StringPtrOutput)
}

// The complete URL of the monitor. The full URL of the monitor is subdomain.Region.deadlinecloud.amazonaws.com.
func (o LookupMonitorResultOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.Url }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMonitorResultOutput{})
}
