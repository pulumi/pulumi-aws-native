// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deadline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Deadline::Monitor Resource Type
func LookupMonitor(ctx *pulumi.Context, args *LookupMonitorArgs, opts ...pulumi.InvokeOption) (*LookupMonitorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMonitorResult
	err := ctx.Invoke("aws-native:deadline:getMonitor", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMonitorArgs struct {
	Arn string `pulumi:"arn"`
}

type LookupMonitorResult struct {
	Arn                          *string `pulumi:"arn"`
	DisplayName                  *string `pulumi:"displayName"`
	IdentityCenterApplicationArn *string `pulumi:"identityCenterApplicationArn"`
	MonitorId                    *string `pulumi:"monitorId"`
	RoleArn                      *string `pulumi:"roleArn"`
	Subdomain                    *string `pulumi:"subdomain"`
	Url                          *string `pulumi:"url"`
}

func LookupMonitorOutput(ctx *pulumi.Context, args LookupMonitorOutputArgs, opts ...pulumi.InvokeOption) LookupMonitorResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMonitorResult, error) {
			args := v.(LookupMonitorArgs)
			r, err := LookupMonitor(ctx, &args, opts...)
			var s LookupMonitorResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMonitorResultOutput)
}

type LookupMonitorOutputArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupMonitorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitorArgs)(nil)).Elem()
}

type LookupMonitorResultOutput struct{ *pulumi.OutputState }

func (LookupMonitorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMonitorResult)(nil)).Elem()
}

func (o LookupMonitorResultOutput) ToLookupMonitorResultOutput() LookupMonitorResultOutput {
	return o
}

func (o LookupMonitorResultOutput) ToLookupMonitorResultOutputWithContext(ctx context.Context) LookupMonitorResultOutput {
	return o
}

func (o LookupMonitorResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupMonitorResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupMonitorResultOutput) IdentityCenterApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.IdentityCenterApplicationArn }).(pulumi.StringPtrOutput)
}

func (o LookupMonitorResultOutput) MonitorId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.MonitorId }).(pulumi.StringPtrOutput)
}

func (o LookupMonitorResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o LookupMonitorResultOutput) Subdomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.Subdomain }).(pulumi.StringPtrOutput)
}

func (o LookupMonitorResultOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMonitorResult) *string { return v.Url }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMonitorResultOutput{})
}
