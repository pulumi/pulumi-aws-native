// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deadline

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Deadline::QueueLimitAssociation Resource Type
type QueueLimitAssociation struct {
	pulumi.CustomResourceState

	FarmId  pulumi.StringOutput `pulumi:"farmId"`
	LimitId pulumi.StringOutput `pulumi:"limitId"`
	QueueId pulumi.StringOutput `pulumi:"queueId"`
}

// NewQueueLimitAssociation registers a new resource with the given unique name, arguments, and options.
func NewQueueLimitAssociation(ctx *pulumi.Context,
	name string, args *QueueLimitAssociationArgs, opts ...pulumi.ResourceOption) (*QueueLimitAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FarmId == nil {
		return nil, errors.New("invalid value for required argument 'FarmId'")
	}
	if args.LimitId == nil {
		return nil, errors.New("invalid value for required argument 'LimitId'")
	}
	if args.QueueId == nil {
		return nil, errors.New("invalid value for required argument 'QueueId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"farmId",
		"limitId",
		"queueId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource QueueLimitAssociation
	err := ctx.RegisterResource("aws-native:deadline:QueueLimitAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetQueueLimitAssociation gets an existing QueueLimitAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetQueueLimitAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *QueueLimitAssociationState, opts ...pulumi.ResourceOption) (*QueueLimitAssociation, error) {
	var resource QueueLimitAssociation
	err := ctx.ReadResource("aws-native:deadline:QueueLimitAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering QueueLimitAssociation resources.
type queueLimitAssociationState struct {
}

type QueueLimitAssociationState struct {
}

func (QueueLimitAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*queueLimitAssociationState)(nil)).Elem()
}

type queueLimitAssociationArgs struct {
	FarmId  string `pulumi:"farmId"`
	LimitId string `pulumi:"limitId"`
	QueueId string `pulumi:"queueId"`
}

// The set of arguments for constructing a QueueLimitAssociation resource.
type QueueLimitAssociationArgs struct {
	FarmId  pulumi.StringInput
	LimitId pulumi.StringInput
	QueueId pulumi.StringInput
}

func (QueueLimitAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*queueLimitAssociationArgs)(nil)).Elem()
}

type QueueLimitAssociationInput interface {
	pulumi.Input

	ToQueueLimitAssociationOutput() QueueLimitAssociationOutput
	ToQueueLimitAssociationOutputWithContext(ctx context.Context) QueueLimitAssociationOutput
}

func (*QueueLimitAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueLimitAssociation)(nil)).Elem()
}

func (i *QueueLimitAssociation) ToQueueLimitAssociationOutput() QueueLimitAssociationOutput {
	return i.ToQueueLimitAssociationOutputWithContext(context.Background())
}

func (i *QueueLimitAssociation) ToQueueLimitAssociationOutputWithContext(ctx context.Context) QueueLimitAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueLimitAssociationOutput)
}

type QueueLimitAssociationOutput struct{ *pulumi.OutputState }

func (QueueLimitAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueLimitAssociation)(nil)).Elem()
}

func (o QueueLimitAssociationOutput) ToQueueLimitAssociationOutput() QueueLimitAssociationOutput {
	return o
}

func (o QueueLimitAssociationOutput) ToQueueLimitAssociationOutputWithContext(ctx context.Context) QueueLimitAssociationOutput {
	return o
}

func (o QueueLimitAssociationOutput) FarmId() pulumi.StringOutput {
	return o.ApplyT(func(v *QueueLimitAssociation) pulumi.StringOutput { return v.FarmId }).(pulumi.StringOutput)
}

func (o QueueLimitAssociationOutput) LimitId() pulumi.StringOutput {
	return o.ApplyT(func(v *QueueLimitAssociation) pulumi.StringOutput { return v.LimitId }).(pulumi.StringOutput)
}

func (o QueueLimitAssociationOutput) QueueId() pulumi.StringOutput {
	return o.ApplyT(func(v *QueueLimitAssociation) pulumi.StringOutput { return v.QueueId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*QueueLimitAssociationInput)(nil)).Elem(), &QueueLimitAssociation{})
	pulumi.RegisterOutputType(QueueLimitAssociationOutput{})
}
