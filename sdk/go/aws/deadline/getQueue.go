// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deadline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Deadline::Queue Resource Type
func LookupQueue(ctx *pulumi.Context, args *LookupQueueArgs, opts ...pulumi.InvokeOption) (*LookupQueueResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupQueueResult
	err := ctx.Invoke("aws-native:deadline:getQueue", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupQueueArgs struct {
	// The Amazon Resource Name (ARN) of the queue.
	Arn string `pulumi:"arn"`
}

type LookupQueueResult struct {
	// The identifiers of the storage profiles that this queue can use to share assets between workers using different operating systems.
	AllowedStorageProfileIds []string `pulumi:"allowedStorageProfileIds"`
	// The Amazon Resource Name (ARN) of the queue.
	Arn *string `pulumi:"arn"`
	// The default action taken on a queue summary if a budget wasn't configured.
	DefaultBudgetAction *QueueDefaultQueueBudgetAction `pulumi:"defaultBudgetAction"`
	// A description of the queue that helps identify what the queue is used for.
	Description *string `pulumi:"description"`
	// The display name of the queue summary to update.
	//
	// > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
	DisplayName *string `pulumi:"displayName"`
	// The job attachment settings. These are the Amazon S3 bucket name and the Amazon S3 prefix.
	JobAttachmentSettings *QueueJobAttachmentSettings `pulumi:"jobAttachmentSettings"`
	// Identifies the user for a job.
	JobRunAsUser *QueueJobRunAsUser `pulumi:"jobRunAsUser"`
	// The queue ID.
	QueueId *string `pulumi:"queueId"`
	// The file system location that the queue uses.
	RequiredFileSystemLocationNames []string `pulumi:"requiredFileSystemLocationNames"`
	// The Amazon Resource Name (ARN) of the IAM role that workers use when running jobs in this queue.
	RoleArn *string `pulumi:"roleArn"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupQueueOutput(ctx *pulumi.Context, args LookupQueueOutputArgs, opts ...pulumi.InvokeOption) LookupQueueResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupQueueResult, error) {
			args := v.(LookupQueueArgs)
			r, err := LookupQueue(ctx, &args, opts...)
			var s LookupQueueResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupQueueResultOutput)
}

type LookupQueueOutputArgs struct {
	// The Amazon Resource Name (ARN) of the queue.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupQueueOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueArgs)(nil)).Elem()
}

type LookupQueueResultOutput struct{ *pulumi.OutputState }

func (LookupQueueResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupQueueResult)(nil)).Elem()
}

func (o LookupQueueResultOutput) ToLookupQueueResultOutput() LookupQueueResultOutput {
	return o
}

func (o LookupQueueResultOutput) ToLookupQueueResultOutputWithContext(ctx context.Context) LookupQueueResultOutput {
	return o
}

// The identifiers of the storage profiles that this queue can use to share assets between workers using different operating systems.
func (o LookupQueueResultOutput) AllowedStorageProfileIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupQueueResult) []string { return v.AllowedStorageProfileIds }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) of the queue.
func (o LookupQueueResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The default action taken on a queue summary if a budget wasn't configured.
func (o LookupQueueResultOutput) DefaultBudgetAction() QueueDefaultQueueBudgetActionPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *QueueDefaultQueueBudgetAction { return v.DefaultBudgetAction }).(QueueDefaultQueueBudgetActionPtrOutput)
}

// A description of the queue that helps identify what the queue is used for.
func (o LookupQueueResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the queue summary to update.
//
// > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
func (o LookupQueueResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The job attachment settings. These are the Amazon S3 bucket name and the Amazon S3 prefix.
func (o LookupQueueResultOutput) JobAttachmentSettings() QueueJobAttachmentSettingsPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *QueueJobAttachmentSettings { return v.JobAttachmentSettings }).(QueueJobAttachmentSettingsPtrOutput)
}

// Identifies the user for a job.
func (o LookupQueueResultOutput) JobRunAsUser() QueueJobRunAsUserPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *QueueJobRunAsUser { return v.JobRunAsUser }).(QueueJobRunAsUserPtrOutput)
}

// The queue ID.
func (o LookupQueueResultOutput) QueueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *string { return v.QueueId }).(pulumi.StringPtrOutput)
}

// The file system location that the queue uses.
func (o LookupQueueResultOutput) RequiredFileSystemLocationNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupQueueResult) []string { return v.RequiredFileSystemLocationNames }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Name (ARN) of the IAM role that workers use when running jobs in this queue.
func (o LookupQueueResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupQueueResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupQueueResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupQueueResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupQueueResultOutput{})
}
