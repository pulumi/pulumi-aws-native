// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deadline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

// A key-value pair to associate with a resource.
type FarmTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type FleetAcceleratorCapabilities struct {
	Count      *FleetAcceleratorCountRange `pulumi:"count"`
	Selections []FleetAcceleratorSelection `pulumi:"selections"`
}

// FleetAcceleratorCapabilitiesInput is an input type that accepts FleetAcceleratorCapabilitiesArgs and FleetAcceleratorCapabilitiesOutput values.
// You can construct a concrete instance of `FleetAcceleratorCapabilitiesInput` via:
//
//	FleetAcceleratorCapabilitiesArgs{...}
type FleetAcceleratorCapabilitiesInput interface {
	pulumi.Input

	ToFleetAcceleratorCapabilitiesOutput() FleetAcceleratorCapabilitiesOutput
	ToFleetAcceleratorCapabilitiesOutputWithContext(context.Context) FleetAcceleratorCapabilitiesOutput
}

type FleetAcceleratorCapabilitiesArgs struct {
	Count      FleetAcceleratorCountRangePtrInput  `pulumi:"count"`
	Selections FleetAcceleratorSelectionArrayInput `pulumi:"selections"`
}

func (FleetAcceleratorCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetAcceleratorCapabilities)(nil)).Elem()
}

func (i FleetAcceleratorCapabilitiesArgs) ToFleetAcceleratorCapabilitiesOutput() FleetAcceleratorCapabilitiesOutput {
	return i.ToFleetAcceleratorCapabilitiesOutputWithContext(context.Background())
}

func (i FleetAcceleratorCapabilitiesArgs) ToFleetAcceleratorCapabilitiesOutputWithContext(ctx context.Context) FleetAcceleratorCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAcceleratorCapabilitiesOutput)
}

func (i FleetAcceleratorCapabilitiesArgs) ToFleetAcceleratorCapabilitiesPtrOutput() FleetAcceleratorCapabilitiesPtrOutput {
	return i.ToFleetAcceleratorCapabilitiesPtrOutputWithContext(context.Background())
}

func (i FleetAcceleratorCapabilitiesArgs) ToFleetAcceleratorCapabilitiesPtrOutputWithContext(ctx context.Context) FleetAcceleratorCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAcceleratorCapabilitiesOutput).ToFleetAcceleratorCapabilitiesPtrOutputWithContext(ctx)
}

// FleetAcceleratorCapabilitiesPtrInput is an input type that accepts FleetAcceleratorCapabilitiesArgs, FleetAcceleratorCapabilitiesPtr and FleetAcceleratorCapabilitiesPtrOutput values.
// You can construct a concrete instance of `FleetAcceleratorCapabilitiesPtrInput` via:
//
//	        FleetAcceleratorCapabilitiesArgs{...}
//
//	or:
//
//	        nil
type FleetAcceleratorCapabilitiesPtrInput interface {
	pulumi.Input

	ToFleetAcceleratorCapabilitiesPtrOutput() FleetAcceleratorCapabilitiesPtrOutput
	ToFleetAcceleratorCapabilitiesPtrOutputWithContext(context.Context) FleetAcceleratorCapabilitiesPtrOutput
}

type fleetAcceleratorCapabilitiesPtrType FleetAcceleratorCapabilitiesArgs

func FleetAcceleratorCapabilitiesPtr(v *FleetAcceleratorCapabilitiesArgs) FleetAcceleratorCapabilitiesPtrInput {
	return (*fleetAcceleratorCapabilitiesPtrType)(v)
}

func (*fleetAcceleratorCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetAcceleratorCapabilities)(nil)).Elem()
}

func (i *fleetAcceleratorCapabilitiesPtrType) ToFleetAcceleratorCapabilitiesPtrOutput() FleetAcceleratorCapabilitiesPtrOutput {
	return i.ToFleetAcceleratorCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *fleetAcceleratorCapabilitiesPtrType) ToFleetAcceleratorCapabilitiesPtrOutputWithContext(ctx context.Context) FleetAcceleratorCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAcceleratorCapabilitiesPtrOutput)
}

type FleetAcceleratorCapabilitiesOutput struct{ *pulumi.OutputState }

func (FleetAcceleratorCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetAcceleratorCapabilities)(nil)).Elem()
}

func (o FleetAcceleratorCapabilitiesOutput) ToFleetAcceleratorCapabilitiesOutput() FleetAcceleratorCapabilitiesOutput {
	return o
}

func (o FleetAcceleratorCapabilitiesOutput) ToFleetAcceleratorCapabilitiesOutputWithContext(ctx context.Context) FleetAcceleratorCapabilitiesOutput {
	return o
}

func (o FleetAcceleratorCapabilitiesOutput) ToFleetAcceleratorCapabilitiesPtrOutput() FleetAcceleratorCapabilitiesPtrOutput {
	return o.ToFleetAcceleratorCapabilitiesPtrOutputWithContext(context.Background())
}

func (o FleetAcceleratorCapabilitiesOutput) ToFleetAcceleratorCapabilitiesPtrOutputWithContext(ctx context.Context) FleetAcceleratorCapabilitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetAcceleratorCapabilities) *FleetAcceleratorCapabilities {
		return &v
	}).(FleetAcceleratorCapabilitiesPtrOutput)
}

func (o FleetAcceleratorCapabilitiesOutput) Count() FleetAcceleratorCountRangePtrOutput {
	return o.ApplyT(func(v FleetAcceleratorCapabilities) *FleetAcceleratorCountRange { return v.Count }).(FleetAcceleratorCountRangePtrOutput)
}

func (o FleetAcceleratorCapabilitiesOutput) Selections() FleetAcceleratorSelectionArrayOutput {
	return o.ApplyT(func(v FleetAcceleratorCapabilities) []FleetAcceleratorSelection { return v.Selections }).(FleetAcceleratorSelectionArrayOutput)
}

type FleetAcceleratorCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (FleetAcceleratorCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetAcceleratorCapabilities)(nil)).Elem()
}

func (o FleetAcceleratorCapabilitiesPtrOutput) ToFleetAcceleratorCapabilitiesPtrOutput() FleetAcceleratorCapabilitiesPtrOutput {
	return o
}

func (o FleetAcceleratorCapabilitiesPtrOutput) ToFleetAcceleratorCapabilitiesPtrOutputWithContext(ctx context.Context) FleetAcceleratorCapabilitiesPtrOutput {
	return o
}

func (o FleetAcceleratorCapabilitiesPtrOutput) Elem() FleetAcceleratorCapabilitiesOutput {
	return o.ApplyT(func(v *FleetAcceleratorCapabilities) FleetAcceleratorCapabilities {
		if v != nil {
			return *v
		}
		var ret FleetAcceleratorCapabilities
		return ret
	}).(FleetAcceleratorCapabilitiesOutput)
}

func (o FleetAcceleratorCapabilitiesPtrOutput) Count() FleetAcceleratorCountRangePtrOutput {
	return o.ApplyT(func(v *FleetAcceleratorCapabilities) *FleetAcceleratorCountRange {
		if v == nil {
			return nil
		}
		return v.Count
	}).(FleetAcceleratorCountRangePtrOutput)
}

func (o FleetAcceleratorCapabilitiesPtrOutput) Selections() FleetAcceleratorSelectionArrayOutput {
	return o.ApplyT(func(v *FleetAcceleratorCapabilities) []FleetAcceleratorSelection {
		if v == nil {
			return nil
		}
		return v.Selections
	}).(FleetAcceleratorSelectionArrayOutput)
}

type FleetAcceleratorCountRange struct {
	Max *int `pulumi:"max"`
	Min int  `pulumi:"min"`
}

// FleetAcceleratorCountRangeInput is an input type that accepts FleetAcceleratorCountRangeArgs and FleetAcceleratorCountRangeOutput values.
// You can construct a concrete instance of `FleetAcceleratorCountRangeInput` via:
//
//	FleetAcceleratorCountRangeArgs{...}
type FleetAcceleratorCountRangeInput interface {
	pulumi.Input

	ToFleetAcceleratorCountRangeOutput() FleetAcceleratorCountRangeOutput
	ToFleetAcceleratorCountRangeOutputWithContext(context.Context) FleetAcceleratorCountRangeOutput
}

type FleetAcceleratorCountRangeArgs struct {
	Max pulumi.IntPtrInput `pulumi:"max"`
	Min pulumi.IntInput    `pulumi:"min"`
}

func (FleetAcceleratorCountRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetAcceleratorCountRange)(nil)).Elem()
}

func (i FleetAcceleratorCountRangeArgs) ToFleetAcceleratorCountRangeOutput() FleetAcceleratorCountRangeOutput {
	return i.ToFleetAcceleratorCountRangeOutputWithContext(context.Background())
}

func (i FleetAcceleratorCountRangeArgs) ToFleetAcceleratorCountRangeOutputWithContext(ctx context.Context) FleetAcceleratorCountRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAcceleratorCountRangeOutput)
}

func (i FleetAcceleratorCountRangeArgs) ToFleetAcceleratorCountRangePtrOutput() FleetAcceleratorCountRangePtrOutput {
	return i.ToFleetAcceleratorCountRangePtrOutputWithContext(context.Background())
}

func (i FleetAcceleratorCountRangeArgs) ToFleetAcceleratorCountRangePtrOutputWithContext(ctx context.Context) FleetAcceleratorCountRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAcceleratorCountRangeOutput).ToFleetAcceleratorCountRangePtrOutputWithContext(ctx)
}

// FleetAcceleratorCountRangePtrInput is an input type that accepts FleetAcceleratorCountRangeArgs, FleetAcceleratorCountRangePtr and FleetAcceleratorCountRangePtrOutput values.
// You can construct a concrete instance of `FleetAcceleratorCountRangePtrInput` via:
//
//	        FleetAcceleratorCountRangeArgs{...}
//
//	or:
//
//	        nil
type FleetAcceleratorCountRangePtrInput interface {
	pulumi.Input

	ToFleetAcceleratorCountRangePtrOutput() FleetAcceleratorCountRangePtrOutput
	ToFleetAcceleratorCountRangePtrOutputWithContext(context.Context) FleetAcceleratorCountRangePtrOutput
}

type fleetAcceleratorCountRangePtrType FleetAcceleratorCountRangeArgs

func FleetAcceleratorCountRangePtr(v *FleetAcceleratorCountRangeArgs) FleetAcceleratorCountRangePtrInput {
	return (*fleetAcceleratorCountRangePtrType)(v)
}

func (*fleetAcceleratorCountRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetAcceleratorCountRange)(nil)).Elem()
}

func (i *fleetAcceleratorCountRangePtrType) ToFleetAcceleratorCountRangePtrOutput() FleetAcceleratorCountRangePtrOutput {
	return i.ToFleetAcceleratorCountRangePtrOutputWithContext(context.Background())
}

func (i *fleetAcceleratorCountRangePtrType) ToFleetAcceleratorCountRangePtrOutputWithContext(ctx context.Context) FleetAcceleratorCountRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAcceleratorCountRangePtrOutput)
}

type FleetAcceleratorCountRangeOutput struct{ *pulumi.OutputState }

func (FleetAcceleratorCountRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetAcceleratorCountRange)(nil)).Elem()
}

func (o FleetAcceleratorCountRangeOutput) ToFleetAcceleratorCountRangeOutput() FleetAcceleratorCountRangeOutput {
	return o
}

func (o FleetAcceleratorCountRangeOutput) ToFleetAcceleratorCountRangeOutputWithContext(ctx context.Context) FleetAcceleratorCountRangeOutput {
	return o
}

func (o FleetAcceleratorCountRangeOutput) ToFleetAcceleratorCountRangePtrOutput() FleetAcceleratorCountRangePtrOutput {
	return o.ToFleetAcceleratorCountRangePtrOutputWithContext(context.Background())
}

func (o FleetAcceleratorCountRangeOutput) ToFleetAcceleratorCountRangePtrOutputWithContext(ctx context.Context) FleetAcceleratorCountRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetAcceleratorCountRange) *FleetAcceleratorCountRange {
		return &v
	}).(FleetAcceleratorCountRangePtrOutput)
}

func (o FleetAcceleratorCountRangeOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetAcceleratorCountRange) *int { return v.Max }).(pulumi.IntPtrOutput)
}

func (o FleetAcceleratorCountRangeOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v FleetAcceleratorCountRange) int { return v.Min }).(pulumi.IntOutput)
}

type FleetAcceleratorCountRangePtrOutput struct{ *pulumi.OutputState }

func (FleetAcceleratorCountRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetAcceleratorCountRange)(nil)).Elem()
}

func (o FleetAcceleratorCountRangePtrOutput) ToFleetAcceleratorCountRangePtrOutput() FleetAcceleratorCountRangePtrOutput {
	return o
}

func (o FleetAcceleratorCountRangePtrOutput) ToFleetAcceleratorCountRangePtrOutputWithContext(ctx context.Context) FleetAcceleratorCountRangePtrOutput {
	return o
}

func (o FleetAcceleratorCountRangePtrOutput) Elem() FleetAcceleratorCountRangeOutput {
	return o.ApplyT(func(v *FleetAcceleratorCountRange) FleetAcceleratorCountRange {
		if v != nil {
			return *v
		}
		var ret FleetAcceleratorCountRange
		return ret
	}).(FleetAcceleratorCountRangeOutput)
}

func (o FleetAcceleratorCountRangePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetAcceleratorCountRange) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

func (o FleetAcceleratorCountRangePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetAcceleratorCountRange) *int {
		if v == nil {
			return nil
		}
		return &v.Min
	}).(pulumi.IntPtrOutput)
}

type FleetAcceleratorSelection struct {
	Name    FleetAcceleratorSelectionName `pulumi:"name"`
	Runtime *string                       `pulumi:"runtime"`
}

// FleetAcceleratorSelectionInput is an input type that accepts FleetAcceleratorSelectionArgs and FleetAcceleratorSelectionOutput values.
// You can construct a concrete instance of `FleetAcceleratorSelectionInput` via:
//
//	FleetAcceleratorSelectionArgs{...}
type FleetAcceleratorSelectionInput interface {
	pulumi.Input

	ToFleetAcceleratorSelectionOutput() FleetAcceleratorSelectionOutput
	ToFleetAcceleratorSelectionOutputWithContext(context.Context) FleetAcceleratorSelectionOutput
}

type FleetAcceleratorSelectionArgs struct {
	Name    FleetAcceleratorSelectionNameInput `pulumi:"name"`
	Runtime pulumi.StringPtrInput              `pulumi:"runtime"`
}

func (FleetAcceleratorSelectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetAcceleratorSelection)(nil)).Elem()
}

func (i FleetAcceleratorSelectionArgs) ToFleetAcceleratorSelectionOutput() FleetAcceleratorSelectionOutput {
	return i.ToFleetAcceleratorSelectionOutputWithContext(context.Background())
}

func (i FleetAcceleratorSelectionArgs) ToFleetAcceleratorSelectionOutputWithContext(ctx context.Context) FleetAcceleratorSelectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAcceleratorSelectionOutput)
}

// FleetAcceleratorSelectionArrayInput is an input type that accepts FleetAcceleratorSelectionArray and FleetAcceleratorSelectionArrayOutput values.
// You can construct a concrete instance of `FleetAcceleratorSelectionArrayInput` via:
//
//	FleetAcceleratorSelectionArray{ FleetAcceleratorSelectionArgs{...} }
type FleetAcceleratorSelectionArrayInput interface {
	pulumi.Input

	ToFleetAcceleratorSelectionArrayOutput() FleetAcceleratorSelectionArrayOutput
	ToFleetAcceleratorSelectionArrayOutputWithContext(context.Context) FleetAcceleratorSelectionArrayOutput
}

type FleetAcceleratorSelectionArray []FleetAcceleratorSelectionInput

func (FleetAcceleratorSelectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetAcceleratorSelection)(nil)).Elem()
}

func (i FleetAcceleratorSelectionArray) ToFleetAcceleratorSelectionArrayOutput() FleetAcceleratorSelectionArrayOutput {
	return i.ToFleetAcceleratorSelectionArrayOutputWithContext(context.Background())
}

func (i FleetAcceleratorSelectionArray) ToFleetAcceleratorSelectionArrayOutputWithContext(ctx context.Context) FleetAcceleratorSelectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAcceleratorSelectionArrayOutput)
}

type FleetAcceleratorSelectionOutput struct{ *pulumi.OutputState }

func (FleetAcceleratorSelectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetAcceleratorSelection)(nil)).Elem()
}

func (o FleetAcceleratorSelectionOutput) ToFleetAcceleratorSelectionOutput() FleetAcceleratorSelectionOutput {
	return o
}

func (o FleetAcceleratorSelectionOutput) ToFleetAcceleratorSelectionOutputWithContext(ctx context.Context) FleetAcceleratorSelectionOutput {
	return o
}

func (o FleetAcceleratorSelectionOutput) Name() FleetAcceleratorSelectionNameOutput {
	return o.ApplyT(func(v FleetAcceleratorSelection) FleetAcceleratorSelectionName { return v.Name }).(FleetAcceleratorSelectionNameOutput)
}

func (o FleetAcceleratorSelectionOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetAcceleratorSelection) *string { return v.Runtime }).(pulumi.StringPtrOutput)
}

type FleetAcceleratorSelectionArrayOutput struct{ *pulumi.OutputState }

func (FleetAcceleratorSelectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetAcceleratorSelection)(nil)).Elem()
}

func (o FleetAcceleratorSelectionArrayOutput) ToFleetAcceleratorSelectionArrayOutput() FleetAcceleratorSelectionArrayOutput {
	return o
}

func (o FleetAcceleratorSelectionArrayOutput) ToFleetAcceleratorSelectionArrayOutputWithContext(ctx context.Context) FleetAcceleratorSelectionArrayOutput {
	return o
}

func (o FleetAcceleratorSelectionArrayOutput) Index(i pulumi.IntInput) FleetAcceleratorSelectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FleetAcceleratorSelection {
		return vs[0].([]FleetAcceleratorSelection)[vs[1].(int)]
	}).(FleetAcceleratorSelectionOutput)
}

type FleetAcceleratorTotalMemoryMiBRange struct {
	Max *int `pulumi:"max"`
	Min int  `pulumi:"min"`
}

// FleetAcceleratorTotalMemoryMiBRangeInput is an input type that accepts FleetAcceleratorTotalMemoryMiBRangeArgs and FleetAcceleratorTotalMemoryMiBRangeOutput values.
// You can construct a concrete instance of `FleetAcceleratorTotalMemoryMiBRangeInput` via:
//
//	FleetAcceleratorTotalMemoryMiBRangeArgs{...}
type FleetAcceleratorTotalMemoryMiBRangeInput interface {
	pulumi.Input

	ToFleetAcceleratorTotalMemoryMiBRangeOutput() FleetAcceleratorTotalMemoryMiBRangeOutput
	ToFleetAcceleratorTotalMemoryMiBRangeOutputWithContext(context.Context) FleetAcceleratorTotalMemoryMiBRangeOutput
}

type FleetAcceleratorTotalMemoryMiBRangeArgs struct {
	Max pulumi.IntPtrInput `pulumi:"max"`
	Min pulumi.IntInput    `pulumi:"min"`
}

func (FleetAcceleratorTotalMemoryMiBRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetAcceleratorTotalMemoryMiBRange)(nil)).Elem()
}

func (i FleetAcceleratorTotalMemoryMiBRangeArgs) ToFleetAcceleratorTotalMemoryMiBRangeOutput() FleetAcceleratorTotalMemoryMiBRangeOutput {
	return i.ToFleetAcceleratorTotalMemoryMiBRangeOutputWithContext(context.Background())
}

func (i FleetAcceleratorTotalMemoryMiBRangeArgs) ToFleetAcceleratorTotalMemoryMiBRangeOutputWithContext(ctx context.Context) FleetAcceleratorTotalMemoryMiBRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAcceleratorTotalMemoryMiBRangeOutput)
}

func (i FleetAcceleratorTotalMemoryMiBRangeArgs) ToFleetAcceleratorTotalMemoryMiBRangePtrOutput() FleetAcceleratorTotalMemoryMiBRangePtrOutput {
	return i.ToFleetAcceleratorTotalMemoryMiBRangePtrOutputWithContext(context.Background())
}

func (i FleetAcceleratorTotalMemoryMiBRangeArgs) ToFleetAcceleratorTotalMemoryMiBRangePtrOutputWithContext(ctx context.Context) FleetAcceleratorTotalMemoryMiBRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAcceleratorTotalMemoryMiBRangeOutput).ToFleetAcceleratorTotalMemoryMiBRangePtrOutputWithContext(ctx)
}

// FleetAcceleratorTotalMemoryMiBRangePtrInput is an input type that accepts FleetAcceleratorTotalMemoryMiBRangeArgs, FleetAcceleratorTotalMemoryMiBRangePtr and FleetAcceleratorTotalMemoryMiBRangePtrOutput values.
// You can construct a concrete instance of `FleetAcceleratorTotalMemoryMiBRangePtrInput` via:
//
//	        FleetAcceleratorTotalMemoryMiBRangeArgs{...}
//
//	or:
//
//	        nil
type FleetAcceleratorTotalMemoryMiBRangePtrInput interface {
	pulumi.Input

	ToFleetAcceleratorTotalMemoryMiBRangePtrOutput() FleetAcceleratorTotalMemoryMiBRangePtrOutput
	ToFleetAcceleratorTotalMemoryMiBRangePtrOutputWithContext(context.Context) FleetAcceleratorTotalMemoryMiBRangePtrOutput
}

type fleetAcceleratorTotalMemoryMiBRangePtrType FleetAcceleratorTotalMemoryMiBRangeArgs

func FleetAcceleratorTotalMemoryMiBRangePtr(v *FleetAcceleratorTotalMemoryMiBRangeArgs) FleetAcceleratorTotalMemoryMiBRangePtrInput {
	return (*fleetAcceleratorTotalMemoryMiBRangePtrType)(v)
}

func (*fleetAcceleratorTotalMemoryMiBRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetAcceleratorTotalMemoryMiBRange)(nil)).Elem()
}

func (i *fleetAcceleratorTotalMemoryMiBRangePtrType) ToFleetAcceleratorTotalMemoryMiBRangePtrOutput() FleetAcceleratorTotalMemoryMiBRangePtrOutput {
	return i.ToFleetAcceleratorTotalMemoryMiBRangePtrOutputWithContext(context.Background())
}

func (i *fleetAcceleratorTotalMemoryMiBRangePtrType) ToFleetAcceleratorTotalMemoryMiBRangePtrOutputWithContext(ctx context.Context) FleetAcceleratorTotalMemoryMiBRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAcceleratorTotalMemoryMiBRangePtrOutput)
}

type FleetAcceleratorTotalMemoryMiBRangeOutput struct{ *pulumi.OutputState }

func (FleetAcceleratorTotalMemoryMiBRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetAcceleratorTotalMemoryMiBRange)(nil)).Elem()
}

func (o FleetAcceleratorTotalMemoryMiBRangeOutput) ToFleetAcceleratorTotalMemoryMiBRangeOutput() FleetAcceleratorTotalMemoryMiBRangeOutput {
	return o
}

func (o FleetAcceleratorTotalMemoryMiBRangeOutput) ToFleetAcceleratorTotalMemoryMiBRangeOutputWithContext(ctx context.Context) FleetAcceleratorTotalMemoryMiBRangeOutput {
	return o
}

func (o FleetAcceleratorTotalMemoryMiBRangeOutput) ToFleetAcceleratorTotalMemoryMiBRangePtrOutput() FleetAcceleratorTotalMemoryMiBRangePtrOutput {
	return o.ToFleetAcceleratorTotalMemoryMiBRangePtrOutputWithContext(context.Background())
}

func (o FleetAcceleratorTotalMemoryMiBRangeOutput) ToFleetAcceleratorTotalMemoryMiBRangePtrOutputWithContext(ctx context.Context) FleetAcceleratorTotalMemoryMiBRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetAcceleratorTotalMemoryMiBRange) *FleetAcceleratorTotalMemoryMiBRange {
		return &v
	}).(FleetAcceleratorTotalMemoryMiBRangePtrOutput)
}

func (o FleetAcceleratorTotalMemoryMiBRangeOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetAcceleratorTotalMemoryMiBRange) *int { return v.Max }).(pulumi.IntPtrOutput)
}

func (o FleetAcceleratorTotalMemoryMiBRangeOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v FleetAcceleratorTotalMemoryMiBRange) int { return v.Min }).(pulumi.IntOutput)
}

type FleetAcceleratorTotalMemoryMiBRangePtrOutput struct{ *pulumi.OutputState }

func (FleetAcceleratorTotalMemoryMiBRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetAcceleratorTotalMemoryMiBRange)(nil)).Elem()
}

func (o FleetAcceleratorTotalMemoryMiBRangePtrOutput) ToFleetAcceleratorTotalMemoryMiBRangePtrOutput() FleetAcceleratorTotalMemoryMiBRangePtrOutput {
	return o
}

func (o FleetAcceleratorTotalMemoryMiBRangePtrOutput) ToFleetAcceleratorTotalMemoryMiBRangePtrOutputWithContext(ctx context.Context) FleetAcceleratorTotalMemoryMiBRangePtrOutput {
	return o
}

func (o FleetAcceleratorTotalMemoryMiBRangePtrOutput) Elem() FleetAcceleratorTotalMemoryMiBRangeOutput {
	return o.ApplyT(func(v *FleetAcceleratorTotalMemoryMiBRange) FleetAcceleratorTotalMemoryMiBRange {
		if v != nil {
			return *v
		}
		var ret FleetAcceleratorTotalMemoryMiBRange
		return ret
	}).(FleetAcceleratorTotalMemoryMiBRangeOutput)
}

func (o FleetAcceleratorTotalMemoryMiBRangePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetAcceleratorTotalMemoryMiBRange) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

func (o FleetAcceleratorTotalMemoryMiBRangePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetAcceleratorTotalMemoryMiBRange) *int {
		if v == nil {
			return nil
		}
		return &v.Min
	}).(pulumi.IntPtrOutput)
}

type FleetAmountCapability struct {
	// The maximum amount of the fleet worker capability.
	Max *float64 `pulumi:"max"`
	// The minimum amount of fleet worker capability.
	Min float64 `pulumi:"min"`
	// The name of the fleet capability.
	Name string `pulumi:"name"`
}

// FleetAmountCapabilityInput is an input type that accepts FleetAmountCapabilityArgs and FleetAmountCapabilityOutput values.
// You can construct a concrete instance of `FleetAmountCapabilityInput` via:
//
//	FleetAmountCapabilityArgs{...}
type FleetAmountCapabilityInput interface {
	pulumi.Input

	ToFleetAmountCapabilityOutput() FleetAmountCapabilityOutput
	ToFleetAmountCapabilityOutputWithContext(context.Context) FleetAmountCapabilityOutput
}

type FleetAmountCapabilityArgs struct {
	// The maximum amount of the fleet worker capability.
	Max pulumi.Float64PtrInput `pulumi:"max"`
	// The minimum amount of fleet worker capability.
	Min pulumi.Float64Input `pulumi:"min"`
	// The name of the fleet capability.
	Name pulumi.StringInput `pulumi:"name"`
}

func (FleetAmountCapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetAmountCapability)(nil)).Elem()
}

func (i FleetAmountCapabilityArgs) ToFleetAmountCapabilityOutput() FleetAmountCapabilityOutput {
	return i.ToFleetAmountCapabilityOutputWithContext(context.Background())
}

func (i FleetAmountCapabilityArgs) ToFleetAmountCapabilityOutputWithContext(ctx context.Context) FleetAmountCapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAmountCapabilityOutput)
}

// FleetAmountCapabilityArrayInput is an input type that accepts FleetAmountCapabilityArray and FleetAmountCapabilityArrayOutput values.
// You can construct a concrete instance of `FleetAmountCapabilityArrayInput` via:
//
//	FleetAmountCapabilityArray{ FleetAmountCapabilityArgs{...} }
type FleetAmountCapabilityArrayInput interface {
	pulumi.Input

	ToFleetAmountCapabilityArrayOutput() FleetAmountCapabilityArrayOutput
	ToFleetAmountCapabilityArrayOutputWithContext(context.Context) FleetAmountCapabilityArrayOutput
}

type FleetAmountCapabilityArray []FleetAmountCapabilityInput

func (FleetAmountCapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetAmountCapability)(nil)).Elem()
}

func (i FleetAmountCapabilityArray) ToFleetAmountCapabilityArrayOutput() FleetAmountCapabilityArrayOutput {
	return i.ToFleetAmountCapabilityArrayOutputWithContext(context.Background())
}

func (i FleetAmountCapabilityArray) ToFleetAmountCapabilityArrayOutputWithContext(ctx context.Context) FleetAmountCapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAmountCapabilityArrayOutput)
}

type FleetAmountCapabilityOutput struct{ *pulumi.OutputState }

func (FleetAmountCapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetAmountCapability)(nil)).Elem()
}

func (o FleetAmountCapabilityOutput) ToFleetAmountCapabilityOutput() FleetAmountCapabilityOutput {
	return o
}

func (o FleetAmountCapabilityOutput) ToFleetAmountCapabilityOutputWithContext(ctx context.Context) FleetAmountCapabilityOutput {
	return o
}

// The maximum amount of the fleet worker capability.
func (o FleetAmountCapabilityOutput) Max() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v FleetAmountCapability) *float64 { return v.Max }).(pulumi.Float64PtrOutput)
}

// The minimum amount of fleet worker capability.
func (o FleetAmountCapabilityOutput) Min() pulumi.Float64Output {
	return o.ApplyT(func(v FleetAmountCapability) float64 { return v.Min }).(pulumi.Float64Output)
}

// The name of the fleet capability.
func (o FleetAmountCapabilityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FleetAmountCapability) string { return v.Name }).(pulumi.StringOutput)
}

type FleetAmountCapabilityArrayOutput struct{ *pulumi.OutputState }

func (FleetAmountCapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetAmountCapability)(nil)).Elem()
}

func (o FleetAmountCapabilityArrayOutput) ToFleetAmountCapabilityArrayOutput() FleetAmountCapabilityArrayOutput {
	return o
}

func (o FleetAmountCapabilityArrayOutput) ToFleetAmountCapabilityArrayOutputWithContext(ctx context.Context) FleetAmountCapabilityArrayOutput {
	return o
}

func (o FleetAmountCapabilityArrayOutput) Index(i pulumi.IntInput) FleetAmountCapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FleetAmountCapability {
		return vs[0].([]FleetAmountCapability)[vs[1].(int)]
	}).(FleetAmountCapabilityOutput)
}

type FleetAttributeCapability struct {
	// The name of the fleet attribute capability for the worker.
	Name string `pulumi:"name"`
	// The number of fleet attribute capabilities.
	Values []string `pulumi:"values"`
}

// FleetAttributeCapabilityInput is an input type that accepts FleetAttributeCapabilityArgs and FleetAttributeCapabilityOutput values.
// You can construct a concrete instance of `FleetAttributeCapabilityInput` via:
//
//	FleetAttributeCapabilityArgs{...}
type FleetAttributeCapabilityInput interface {
	pulumi.Input

	ToFleetAttributeCapabilityOutput() FleetAttributeCapabilityOutput
	ToFleetAttributeCapabilityOutputWithContext(context.Context) FleetAttributeCapabilityOutput
}

type FleetAttributeCapabilityArgs struct {
	// The name of the fleet attribute capability for the worker.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of fleet attribute capabilities.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (FleetAttributeCapabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetAttributeCapability)(nil)).Elem()
}

func (i FleetAttributeCapabilityArgs) ToFleetAttributeCapabilityOutput() FleetAttributeCapabilityOutput {
	return i.ToFleetAttributeCapabilityOutputWithContext(context.Background())
}

func (i FleetAttributeCapabilityArgs) ToFleetAttributeCapabilityOutputWithContext(ctx context.Context) FleetAttributeCapabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAttributeCapabilityOutput)
}

// FleetAttributeCapabilityArrayInput is an input type that accepts FleetAttributeCapabilityArray and FleetAttributeCapabilityArrayOutput values.
// You can construct a concrete instance of `FleetAttributeCapabilityArrayInput` via:
//
//	FleetAttributeCapabilityArray{ FleetAttributeCapabilityArgs{...} }
type FleetAttributeCapabilityArrayInput interface {
	pulumi.Input

	ToFleetAttributeCapabilityArrayOutput() FleetAttributeCapabilityArrayOutput
	ToFleetAttributeCapabilityArrayOutputWithContext(context.Context) FleetAttributeCapabilityArrayOutput
}

type FleetAttributeCapabilityArray []FleetAttributeCapabilityInput

func (FleetAttributeCapabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetAttributeCapability)(nil)).Elem()
}

func (i FleetAttributeCapabilityArray) ToFleetAttributeCapabilityArrayOutput() FleetAttributeCapabilityArrayOutput {
	return i.ToFleetAttributeCapabilityArrayOutputWithContext(context.Background())
}

func (i FleetAttributeCapabilityArray) ToFleetAttributeCapabilityArrayOutputWithContext(ctx context.Context) FleetAttributeCapabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetAttributeCapabilityArrayOutput)
}

type FleetAttributeCapabilityOutput struct{ *pulumi.OutputState }

func (FleetAttributeCapabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetAttributeCapability)(nil)).Elem()
}

func (o FleetAttributeCapabilityOutput) ToFleetAttributeCapabilityOutput() FleetAttributeCapabilityOutput {
	return o
}

func (o FleetAttributeCapabilityOutput) ToFleetAttributeCapabilityOutputWithContext(ctx context.Context) FleetAttributeCapabilityOutput {
	return o
}

// The name of the fleet attribute capability for the worker.
func (o FleetAttributeCapabilityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FleetAttributeCapability) string { return v.Name }).(pulumi.StringOutput)
}

// The number of fleet attribute capabilities.
func (o FleetAttributeCapabilityOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FleetAttributeCapability) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type FleetAttributeCapabilityArrayOutput struct{ *pulumi.OutputState }

func (FleetAttributeCapabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FleetAttributeCapability)(nil)).Elem()
}

func (o FleetAttributeCapabilityArrayOutput) ToFleetAttributeCapabilityArrayOutput() FleetAttributeCapabilityArrayOutput {
	return o
}

func (o FleetAttributeCapabilityArrayOutput) ToFleetAttributeCapabilityArrayOutputWithContext(ctx context.Context) FleetAttributeCapabilityArrayOutput {
	return o
}

func (o FleetAttributeCapabilityArrayOutput) Index(i pulumi.IntInput) FleetAttributeCapabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FleetAttributeCapability {
		return vs[0].([]FleetAttributeCapability)[vs[1].(int)]
	}).(FleetAttributeCapabilityOutput)
}

type FleetCapabilities struct {
	// Amount capabilities of the fleet.
	Amounts []FleetAmountCapability `pulumi:"amounts"`
	// Attribute capabilities of the fleet.
	Attributes []FleetAttributeCapability `pulumi:"attributes"`
}

type FleetCapabilitiesOutput struct{ *pulumi.OutputState }

func (FleetCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetCapabilities)(nil)).Elem()
}

func (o FleetCapabilitiesOutput) ToFleetCapabilitiesOutput() FleetCapabilitiesOutput {
	return o
}

func (o FleetCapabilitiesOutput) ToFleetCapabilitiesOutputWithContext(ctx context.Context) FleetCapabilitiesOutput {
	return o
}

// Amount capabilities of the fleet.
func (o FleetCapabilitiesOutput) Amounts() FleetAmountCapabilityArrayOutput {
	return o.ApplyT(func(v FleetCapabilities) []FleetAmountCapability { return v.Amounts }).(FleetAmountCapabilityArrayOutput)
}

// Attribute capabilities of the fleet.
func (o FleetCapabilitiesOutput) Attributes() FleetAttributeCapabilityArrayOutput {
	return o.ApplyT(func(v FleetCapabilities) []FleetAttributeCapability { return v.Attributes }).(FleetAttributeCapabilityArrayOutput)
}

type FleetCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (FleetCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetCapabilities)(nil)).Elem()
}

func (o FleetCapabilitiesPtrOutput) ToFleetCapabilitiesPtrOutput() FleetCapabilitiesPtrOutput {
	return o
}

func (o FleetCapabilitiesPtrOutput) ToFleetCapabilitiesPtrOutputWithContext(ctx context.Context) FleetCapabilitiesPtrOutput {
	return o
}

func (o FleetCapabilitiesPtrOutput) Elem() FleetCapabilitiesOutput {
	return o.ApplyT(func(v *FleetCapabilities) FleetCapabilities {
		if v != nil {
			return *v
		}
		var ret FleetCapabilities
		return ret
	}).(FleetCapabilitiesOutput)
}

// Amount capabilities of the fleet.
func (o FleetCapabilitiesPtrOutput) Amounts() FleetAmountCapabilityArrayOutput {
	return o.ApplyT(func(v *FleetCapabilities) []FleetAmountCapability {
		if v == nil {
			return nil
		}
		return v.Amounts
	}).(FleetAmountCapabilityArrayOutput)
}

// Attribute capabilities of the fleet.
func (o FleetCapabilitiesPtrOutput) Attributes() FleetAttributeCapabilityArrayOutput {
	return o.ApplyT(func(v *FleetCapabilities) []FleetAttributeCapability {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(FleetAttributeCapabilityArrayOutput)
}

type FleetConfiguration0Properties struct {
	CustomerManaged FleetCustomerManagedFleetConfiguration `pulumi:"customerManaged"`
}

// FleetConfiguration0PropertiesInput is an input type that accepts FleetConfiguration0PropertiesArgs and FleetConfiguration0PropertiesOutput values.
// You can construct a concrete instance of `FleetConfiguration0PropertiesInput` via:
//
//	FleetConfiguration0PropertiesArgs{...}
type FleetConfiguration0PropertiesInput interface {
	pulumi.Input

	ToFleetConfiguration0PropertiesOutput() FleetConfiguration0PropertiesOutput
	ToFleetConfiguration0PropertiesOutputWithContext(context.Context) FleetConfiguration0PropertiesOutput
}

type FleetConfiguration0PropertiesArgs struct {
	CustomerManaged FleetCustomerManagedFleetConfigurationInput `pulumi:"customerManaged"`
}

func (FleetConfiguration0PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetConfiguration0Properties)(nil)).Elem()
}

func (i FleetConfiguration0PropertiesArgs) ToFleetConfiguration0PropertiesOutput() FleetConfiguration0PropertiesOutput {
	return i.ToFleetConfiguration0PropertiesOutputWithContext(context.Background())
}

func (i FleetConfiguration0PropertiesArgs) ToFleetConfiguration0PropertiesOutputWithContext(ctx context.Context) FleetConfiguration0PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetConfiguration0PropertiesOutput)
}

type FleetConfiguration0PropertiesOutput struct{ *pulumi.OutputState }

func (FleetConfiguration0PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetConfiguration0Properties)(nil)).Elem()
}

func (o FleetConfiguration0PropertiesOutput) ToFleetConfiguration0PropertiesOutput() FleetConfiguration0PropertiesOutput {
	return o
}

func (o FleetConfiguration0PropertiesOutput) ToFleetConfiguration0PropertiesOutputWithContext(ctx context.Context) FleetConfiguration0PropertiesOutput {
	return o
}

func (o FleetConfiguration0PropertiesOutput) CustomerManaged() FleetCustomerManagedFleetConfigurationOutput {
	return o.ApplyT(func(v FleetConfiguration0Properties) FleetCustomerManagedFleetConfiguration { return v.CustomerManaged }).(FleetCustomerManagedFleetConfigurationOutput)
}

type FleetConfiguration0PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FleetConfiguration0PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetConfiguration0Properties)(nil)).Elem()
}

func (o FleetConfiguration0PropertiesPtrOutput) ToFleetConfiguration0PropertiesPtrOutput() FleetConfiguration0PropertiesPtrOutput {
	return o
}

func (o FleetConfiguration0PropertiesPtrOutput) ToFleetConfiguration0PropertiesPtrOutputWithContext(ctx context.Context) FleetConfiguration0PropertiesPtrOutput {
	return o
}

func (o FleetConfiguration0PropertiesPtrOutput) Elem() FleetConfiguration0PropertiesOutput {
	return o.ApplyT(func(v *FleetConfiguration0Properties) FleetConfiguration0Properties {
		if v != nil {
			return *v
		}
		var ret FleetConfiguration0Properties
		return ret
	}).(FleetConfiguration0PropertiesOutput)
}

func (o FleetConfiguration0PropertiesPtrOutput) CustomerManaged() FleetCustomerManagedFleetConfigurationPtrOutput {
	return o.ApplyT(func(v *FleetConfiguration0Properties) *FleetCustomerManagedFleetConfiguration {
		if v == nil {
			return nil
		}
		return &v.CustomerManaged
	}).(FleetCustomerManagedFleetConfigurationPtrOutput)
}

type FleetConfiguration1Properties struct {
	ServiceManagedEc2 FleetServiceManagedEc2FleetConfiguration `pulumi:"serviceManagedEc2"`
}

// FleetConfiguration1PropertiesInput is an input type that accepts FleetConfiguration1PropertiesArgs and FleetConfiguration1PropertiesOutput values.
// You can construct a concrete instance of `FleetConfiguration1PropertiesInput` via:
//
//	FleetConfiguration1PropertiesArgs{...}
type FleetConfiguration1PropertiesInput interface {
	pulumi.Input

	ToFleetConfiguration1PropertiesOutput() FleetConfiguration1PropertiesOutput
	ToFleetConfiguration1PropertiesOutputWithContext(context.Context) FleetConfiguration1PropertiesOutput
}

type FleetConfiguration1PropertiesArgs struct {
	ServiceManagedEc2 FleetServiceManagedEc2FleetConfigurationInput `pulumi:"serviceManagedEc2"`
}

func (FleetConfiguration1PropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetConfiguration1Properties)(nil)).Elem()
}

func (i FleetConfiguration1PropertiesArgs) ToFleetConfiguration1PropertiesOutput() FleetConfiguration1PropertiesOutput {
	return i.ToFleetConfiguration1PropertiesOutputWithContext(context.Background())
}

func (i FleetConfiguration1PropertiesArgs) ToFleetConfiguration1PropertiesOutputWithContext(ctx context.Context) FleetConfiguration1PropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetConfiguration1PropertiesOutput)
}

type FleetConfiguration1PropertiesOutput struct{ *pulumi.OutputState }

func (FleetConfiguration1PropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetConfiguration1Properties)(nil)).Elem()
}

func (o FleetConfiguration1PropertiesOutput) ToFleetConfiguration1PropertiesOutput() FleetConfiguration1PropertiesOutput {
	return o
}

func (o FleetConfiguration1PropertiesOutput) ToFleetConfiguration1PropertiesOutputWithContext(ctx context.Context) FleetConfiguration1PropertiesOutput {
	return o
}

func (o FleetConfiguration1PropertiesOutput) ServiceManagedEc2() FleetServiceManagedEc2FleetConfigurationOutput {
	return o.ApplyT(func(v FleetConfiguration1Properties) FleetServiceManagedEc2FleetConfiguration {
		return v.ServiceManagedEc2
	}).(FleetServiceManagedEc2FleetConfigurationOutput)
}

type FleetConfiguration1PropertiesPtrOutput struct{ *pulumi.OutputState }

func (FleetConfiguration1PropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetConfiguration1Properties)(nil)).Elem()
}

func (o FleetConfiguration1PropertiesPtrOutput) ToFleetConfiguration1PropertiesPtrOutput() FleetConfiguration1PropertiesPtrOutput {
	return o
}

func (o FleetConfiguration1PropertiesPtrOutput) ToFleetConfiguration1PropertiesPtrOutputWithContext(ctx context.Context) FleetConfiguration1PropertiesPtrOutput {
	return o
}

func (o FleetConfiguration1PropertiesPtrOutput) Elem() FleetConfiguration1PropertiesOutput {
	return o.ApplyT(func(v *FleetConfiguration1Properties) FleetConfiguration1Properties {
		if v != nil {
			return *v
		}
		var ret FleetConfiguration1Properties
		return ret
	}).(FleetConfiguration1PropertiesOutput)
}

func (o FleetConfiguration1PropertiesPtrOutput) ServiceManagedEc2() FleetServiceManagedEc2FleetConfigurationPtrOutput {
	return o.ApplyT(func(v *FleetConfiguration1Properties) *FleetServiceManagedEc2FleetConfiguration {
		if v == nil {
			return nil
		}
		return &v.ServiceManagedEc2
	}).(FleetServiceManagedEc2FleetConfigurationPtrOutput)
}

type FleetCustomerManagedFleetConfiguration struct {
	Mode               FleetAutoScalingMode                   `pulumi:"mode"`
	StorageProfileId   *string                                `pulumi:"storageProfileId"`
	TagPropagationMode *FleetTagPropagationMode               `pulumi:"tagPropagationMode"`
	WorkerCapabilities FleetCustomerManagedWorkerCapabilities `pulumi:"workerCapabilities"`
}

// FleetCustomerManagedFleetConfigurationInput is an input type that accepts FleetCustomerManagedFleetConfigurationArgs and FleetCustomerManagedFleetConfigurationOutput values.
// You can construct a concrete instance of `FleetCustomerManagedFleetConfigurationInput` via:
//
//	FleetCustomerManagedFleetConfigurationArgs{...}
type FleetCustomerManagedFleetConfigurationInput interface {
	pulumi.Input

	ToFleetCustomerManagedFleetConfigurationOutput() FleetCustomerManagedFleetConfigurationOutput
	ToFleetCustomerManagedFleetConfigurationOutputWithContext(context.Context) FleetCustomerManagedFleetConfigurationOutput
}

type FleetCustomerManagedFleetConfigurationArgs struct {
	Mode               FleetAutoScalingModeInput                   `pulumi:"mode"`
	StorageProfileId   pulumi.StringPtrInput                       `pulumi:"storageProfileId"`
	TagPropagationMode FleetTagPropagationModePtrInput             `pulumi:"tagPropagationMode"`
	WorkerCapabilities FleetCustomerManagedWorkerCapabilitiesInput `pulumi:"workerCapabilities"`
}

func (FleetCustomerManagedFleetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetCustomerManagedFleetConfiguration)(nil)).Elem()
}

func (i FleetCustomerManagedFleetConfigurationArgs) ToFleetCustomerManagedFleetConfigurationOutput() FleetCustomerManagedFleetConfigurationOutput {
	return i.ToFleetCustomerManagedFleetConfigurationOutputWithContext(context.Background())
}

func (i FleetCustomerManagedFleetConfigurationArgs) ToFleetCustomerManagedFleetConfigurationOutputWithContext(ctx context.Context) FleetCustomerManagedFleetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetCustomerManagedFleetConfigurationOutput)
}

type FleetCustomerManagedFleetConfigurationOutput struct{ *pulumi.OutputState }

func (FleetCustomerManagedFleetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetCustomerManagedFleetConfiguration)(nil)).Elem()
}

func (o FleetCustomerManagedFleetConfigurationOutput) ToFleetCustomerManagedFleetConfigurationOutput() FleetCustomerManagedFleetConfigurationOutput {
	return o
}

func (o FleetCustomerManagedFleetConfigurationOutput) ToFleetCustomerManagedFleetConfigurationOutputWithContext(ctx context.Context) FleetCustomerManagedFleetConfigurationOutput {
	return o
}

func (o FleetCustomerManagedFleetConfigurationOutput) Mode() FleetAutoScalingModeOutput {
	return o.ApplyT(func(v FleetCustomerManagedFleetConfiguration) FleetAutoScalingMode { return v.Mode }).(FleetAutoScalingModeOutput)
}

func (o FleetCustomerManagedFleetConfigurationOutput) StorageProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetCustomerManagedFleetConfiguration) *string { return v.StorageProfileId }).(pulumi.StringPtrOutput)
}

func (o FleetCustomerManagedFleetConfigurationOutput) TagPropagationMode() FleetTagPropagationModePtrOutput {
	return o.ApplyT(func(v FleetCustomerManagedFleetConfiguration) *FleetTagPropagationMode { return v.TagPropagationMode }).(FleetTagPropagationModePtrOutput)
}

func (o FleetCustomerManagedFleetConfigurationOutput) WorkerCapabilities() FleetCustomerManagedWorkerCapabilitiesOutput {
	return o.ApplyT(func(v FleetCustomerManagedFleetConfiguration) FleetCustomerManagedWorkerCapabilities {
		return v.WorkerCapabilities
	}).(FleetCustomerManagedWorkerCapabilitiesOutput)
}

type FleetCustomerManagedFleetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FleetCustomerManagedFleetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetCustomerManagedFleetConfiguration)(nil)).Elem()
}

func (o FleetCustomerManagedFleetConfigurationPtrOutput) ToFleetCustomerManagedFleetConfigurationPtrOutput() FleetCustomerManagedFleetConfigurationPtrOutput {
	return o
}

func (o FleetCustomerManagedFleetConfigurationPtrOutput) ToFleetCustomerManagedFleetConfigurationPtrOutputWithContext(ctx context.Context) FleetCustomerManagedFleetConfigurationPtrOutput {
	return o
}

func (o FleetCustomerManagedFleetConfigurationPtrOutput) Elem() FleetCustomerManagedFleetConfigurationOutput {
	return o.ApplyT(func(v *FleetCustomerManagedFleetConfiguration) FleetCustomerManagedFleetConfiguration {
		if v != nil {
			return *v
		}
		var ret FleetCustomerManagedFleetConfiguration
		return ret
	}).(FleetCustomerManagedFleetConfigurationOutput)
}

func (o FleetCustomerManagedFleetConfigurationPtrOutput) Mode() FleetAutoScalingModePtrOutput {
	return o.ApplyT(func(v *FleetCustomerManagedFleetConfiguration) *FleetAutoScalingMode {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(FleetAutoScalingModePtrOutput)
}

func (o FleetCustomerManagedFleetConfigurationPtrOutput) StorageProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetCustomerManagedFleetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.StorageProfileId
	}).(pulumi.StringPtrOutput)
}

func (o FleetCustomerManagedFleetConfigurationPtrOutput) TagPropagationMode() FleetTagPropagationModePtrOutput {
	return o.ApplyT(func(v *FleetCustomerManagedFleetConfiguration) *FleetTagPropagationMode {
		if v == nil {
			return nil
		}
		return v.TagPropagationMode
	}).(FleetTagPropagationModePtrOutput)
}

func (o FleetCustomerManagedFleetConfigurationPtrOutput) WorkerCapabilities() FleetCustomerManagedWorkerCapabilitiesPtrOutput {
	return o.ApplyT(func(v *FleetCustomerManagedFleetConfiguration) *FleetCustomerManagedWorkerCapabilities {
		if v == nil {
			return nil
		}
		return &v.WorkerCapabilities
	}).(FleetCustomerManagedWorkerCapabilitiesPtrOutput)
}

type FleetCustomerManagedWorkerCapabilities struct {
	AcceleratorCount          *FleetAcceleratorCountRange                    `pulumi:"acceleratorCount"`
	AcceleratorTotalMemoryMiB *FleetAcceleratorTotalMemoryMiBRange           `pulumi:"acceleratorTotalMemoryMiB"`
	AcceleratorTypes          []FleetAcceleratorType                         `pulumi:"acceleratorTypes"`
	CpuArchitectureType       FleetCpuArchitectureType                       `pulumi:"cpuArchitectureType"`
	CustomAmounts             []FleetAmountCapability                        `pulumi:"customAmounts"`
	CustomAttributes          []FleetAttributeCapability                     `pulumi:"customAttributes"`
	MemoryMiB                 FleetMemoryMiBRange                            `pulumi:"memoryMiB"`
	OsFamily                  FleetCustomerManagedFleetOperatingSystemFamily `pulumi:"osFamily"`
	VCpuCount                 FleetVCpuCountRange                            `pulumi:"vCpuCount"`
}

// FleetCustomerManagedWorkerCapabilitiesInput is an input type that accepts FleetCustomerManagedWorkerCapabilitiesArgs and FleetCustomerManagedWorkerCapabilitiesOutput values.
// You can construct a concrete instance of `FleetCustomerManagedWorkerCapabilitiesInput` via:
//
//	FleetCustomerManagedWorkerCapabilitiesArgs{...}
type FleetCustomerManagedWorkerCapabilitiesInput interface {
	pulumi.Input

	ToFleetCustomerManagedWorkerCapabilitiesOutput() FleetCustomerManagedWorkerCapabilitiesOutput
	ToFleetCustomerManagedWorkerCapabilitiesOutputWithContext(context.Context) FleetCustomerManagedWorkerCapabilitiesOutput
}

type FleetCustomerManagedWorkerCapabilitiesArgs struct {
	AcceleratorCount          FleetAcceleratorCountRangePtrInput                  `pulumi:"acceleratorCount"`
	AcceleratorTotalMemoryMiB FleetAcceleratorTotalMemoryMiBRangePtrInput         `pulumi:"acceleratorTotalMemoryMiB"`
	AcceleratorTypes          FleetAcceleratorTypeArrayInput                      `pulumi:"acceleratorTypes"`
	CpuArchitectureType       FleetCpuArchitectureTypeInput                       `pulumi:"cpuArchitectureType"`
	CustomAmounts             FleetAmountCapabilityArrayInput                     `pulumi:"customAmounts"`
	CustomAttributes          FleetAttributeCapabilityArrayInput                  `pulumi:"customAttributes"`
	MemoryMiB                 FleetMemoryMiBRangeInput                            `pulumi:"memoryMiB"`
	OsFamily                  FleetCustomerManagedFleetOperatingSystemFamilyInput `pulumi:"osFamily"`
	VCpuCount                 FleetVCpuCountRangeInput                            `pulumi:"vCpuCount"`
}

func (FleetCustomerManagedWorkerCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetCustomerManagedWorkerCapabilities)(nil)).Elem()
}

func (i FleetCustomerManagedWorkerCapabilitiesArgs) ToFleetCustomerManagedWorkerCapabilitiesOutput() FleetCustomerManagedWorkerCapabilitiesOutput {
	return i.ToFleetCustomerManagedWorkerCapabilitiesOutputWithContext(context.Background())
}

func (i FleetCustomerManagedWorkerCapabilitiesArgs) ToFleetCustomerManagedWorkerCapabilitiesOutputWithContext(ctx context.Context) FleetCustomerManagedWorkerCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetCustomerManagedWorkerCapabilitiesOutput)
}

type FleetCustomerManagedWorkerCapabilitiesOutput struct{ *pulumi.OutputState }

func (FleetCustomerManagedWorkerCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetCustomerManagedWorkerCapabilities)(nil)).Elem()
}

func (o FleetCustomerManagedWorkerCapabilitiesOutput) ToFleetCustomerManagedWorkerCapabilitiesOutput() FleetCustomerManagedWorkerCapabilitiesOutput {
	return o
}

func (o FleetCustomerManagedWorkerCapabilitiesOutput) ToFleetCustomerManagedWorkerCapabilitiesOutputWithContext(ctx context.Context) FleetCustomerManagedWorkerCapabilitiesOutput {
	return o
}

func (o FleetCustomerManagedWorkerCapabilitiesOutput) AcceleratorCount() FleetAcceleratorCountRangePtrOutput {
	return o.ApplyT(func(v FleetCustomerManagedWorkerCapabilities) *FleetAcceleratorCountRange { return v.AcceleratorCount }).(FleetAcceleratorCountRangePtrOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesOutput) AcceleratorTotalMemoryMiB() FleetAcceleratorTotalMemoryMiBRangePtrOutput {
	return o.ApplyT(func(v FleetCustomerManagedWorkerCapabilities) *FleetAcceleratorTotalMemoryMiBRange {
		return v.AcceleratorTotalMemoryMiB
	}).(FleetAcceleratorTotalMemoryMiBRangePtrOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesOutput) AcceleratorTypes() FleetAcceleratorTypeArrayOutput {
	return o.ApplyT(func(v FleetCustomerManagedWorkerCapabilities) []FleetAcceleratorType { return v.AcceleratorTypes }).(FleetAcceleratorTypeArrayOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesOutput) CpuArchitectureType() FleetCpuArchitectureTypeOutput {
	return o.ApplyT(func(v FleetCustomerManagedWorkerCapabilities) FleetCpuArchitectureType { return v.CpuArchitectureType }).(FleetCpuArchitectureTypeOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesOutput) CustomAmounts() FleetAmountCapabilityArrayOutput {
	return o.ApplyT(func(v FleetCustomerManagedWorkerCapabilities) []FleetAmountCapability { return v.CustomAmounts }).(FleetAmountCapabilityArrayOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesOutput) CustomAttributes() FleetAttributeCapabilityArrayOutput {
	return o.ApplyT(func(v FleetCustomerManagedWorkerCapabilities) []FleetAttributeCapability { return v.CustomAttributes }).(FleetAttributeCapabilityArrayOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesOutput) MemoryMiB() FleetMemoryMiBRangeOutput {
	return o.ApplyT(func(v FleetCustomerManagedWorkerCapabilities) FleetMemoryMiBRange { return v.MemoryMiB }).(FleetMemoryMiBRangeOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesOutput) OsFamily() FleetCustomerManagedFleetOperatingSystemFamilyOutput {
	return o.ApplyT(func(v FleetCustomerManagedWorkerCapabilities) FleetCustomerManagedFleetOperatingSystemFamily {
		return v.OsFamily
	}).(FleetCustomerManagedFleetOperatingSystemFamilyOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesOutput) VCpuCount() FleetVCpuCountRangeOutput {
	return o.ApplyT(func(v FleetCustomerManagedWorkerCapabilities) FleetVCpuCountRange { return v.VCpuCount }).(FleetVCpuCountRangeOutput)
}

type FleetCustomerManagedWorkerCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (FleetCustomerManagedWorkerCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetCustomerManagedWorkerCapabilities)(nil)).Elem()
}

func (o FleetCustomerManagedWorkerCapabilitiesPtrOutput) ToFleetCustomerManagedWorkerCapabilitiesPtrOutput() FleetCustomerManagedWorkerCapabilitiesPtrOutput {
	return o
}

func (o FleetCustomerManagedWorkerCapabilitiesPtrOutput) ToFleetCustomerManagedWorkerCapabilitiesPtrOutputWithContext(ctx context.Context) FleetCustomerManagedWorkerCapabilitiesPtrOutput {
	return o
}

func (o FleetCustomerManagedWorkerCapabilitiesPtrOutput) Elem() FleetCustomerManagedWorkerCapabilitiesOutput {
	return o.ApplyT(func(v *FleetCustomerManagedWorkerCapabilities) FleetCustomerManagedWorkerCapabilities {
		if v != nil {
			return *v
		}
		var ret FleetCustomerManagedWorkerCapabilities
		return ret
	}).(FleetCustomerManagedWorkerCapabilitiesOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesPtrOutput) AcceleratorCount() FleetAcceleratorCountRangePtrOutput {
	return o.ApplyT(func(v *FleetCustomerManagedWorkerCapabilities) *FleetAcceleratorCountRange {
		if v == nil {
			return nil
		}
		return v.AcceleratorCount
	}).(FleetAcceleratorCountRangePtrOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesPtrOutput) AcceleratorTotalMemoryMiB() FleetAcceleratorTotalMemoryMiBRangePtrOutput {
	return o.ApplyT(func(v *FleetCustomerManagedWorkerCapabilities) *FleetAcceleratorTotalMemoryMiBRange {
		if v == nil {
			return nil
		}
		return v.AcceleratorTotalMemoryMiB
	}).(FleetAcceleratorTotalMemoryMiBRangePtrOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesPtrOutput) AcceleratorTypes() FleetAcceleratorTypeArrayOutput {
	return o.ApplyT(func(v *FleetCustomerManagedWorkerCapabilities) []FleetAcceleratorType {
		if v == nil {
			return nil
		}
		return v.AcceleratorTypes
	}).(FleetAcceleratorTypeArrayOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesPtrOutput) CpuArchitectureType() FleetCpuArchitectureTypePtrOutput {
	return o.ApplyT(func(v *FleetCustomerManagedWorkerCapabilities) *FleetCpuArchitectureType {
		if v == nil {
			return nil
		}
		return &v.CpuArchitectureType
	}).(FleetCpuArchitectureTypePtrOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesPtrOutput) CustomAmounts() FleetAmountCapabilityArrayOutput {
	return o.ApplyT(func(v *FleetCustomerManagedWorkerCapabilities) []FleetAmountCapability {
		if v == nil {
			return nil
		}
		return v.CustomAmounts
	}).(FleetAmountCapabilityArrayOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesPtrOutput) CustomAttributes() FleetAttributeCapabilityArrayOutput {
	return o.ApplyT(func(v *FleetCustomerManagedWorkerCapabilities) []FleetAttributeCapability {
		if v == nil {
			return nil
		}
		return v.CustomAttributes
	}).(FleetAttributeCapabilityArrayOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesPtrOutput) MemoryMiB() FleetMemoryMiBRangePtrOutput {
	return o.ApplyT(func(v *FleetCustomerManagedWorkerCapabilities) *FleetMemoryMiBRange {
		if v == nil {
			return nil
		}
		return &v.MemoryMiB
	}).(FleetMemoryMiBRangePtrOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesPtrOutput) OsFamily() FleetCustomerManagedFleetOperatingSystemFamilyPtrOutput {
	return o.ApplyT(func(v *FleetCustomerManagedWorkerCapabilities) *FleetCustomerManagedFleetOperatingSystemFamily {
		if v == nil {
			return nil
		}
		return &v.OsFamily
	}).(FleetCustomerManagedFleetOperatingSystemFamilyPtrOutput)
}

func (o FleetCustomerManagedWorkerCapabilitiesPtrOutput) VCpuCount() FleetVCpuCountRangePtrOutput {
	return o.ApplyT(func(v *FleetCustomerManagedWorkerCapabilities) *FleetVCpuCountRange {
		if v == nil {
			return nil
		}
		return &v.VCpuCount
	}).(FleetVCpuCountRangePtrOutput)
}

type FleetEc2EbsVolume struct {
	Iops          *int `pulumi:"iops"`
	SizeGiB       *int `pulumi:"sizeGiB"`
	ThroughputMiB *int `pulumi:"throughputMiB"`
}

// FleetEc2EbsVolumeInput is an input type that accepts FleetEc2EbsVolumeArgs and FleetEc2EbsVolumeOutput values.
// You can construct a concrete instance of `FleetEc2EbsVolumeInput` via:
//
//	FleetEc2EbsVolumeArgs{...}
type FleetEc2EbsVolumeInput interface {
	pulumi.Input

	ToFleetEc2EbsVolumeOutput() FleetEc2EbsVolumeOutput
	ToFleetEc2EbsVolumeOutputWithContext(context.Context) FleetEc2EbsVolumeOutput
}

type FleetEc2EbsVolumeArgs struct {
	Iops          pulumi.IntPtrInput `pulumi:"iops"`
	SizeGiB       pulumi.IntPtrInput `pulumi:"sizeGiB"`
	ThroughputMiB pulumi.IntPtrInput `pulumi:"throughputMiB"`
}

func (FleetEc2EbsVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetEc2EbsVolume)(nil)).Elem()
}

func (i FleetEc2EbsVolumeArgs) ToFleetEc2EbsVolumeOutput() FleetEc2EbsVolumeOutput {
	return i.ToFleetEc2EbsVolumeOutputWithContext(context.Background())
}

func (i FleetEc2EbsVolumeArgs) ToFleetEc2EbsVolumeOutputWithContext(ctx context.Context) FleetEc2EbsVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetEc2EbsVolumeOutput)
}

func (i FleetEc2EbsVolumeArgs) ToFleetEc2EbsVolumePtrOutput() FleetEc2EbsVolumePtrOutput {
	return i.ToFleetEc2EbsVolumePtrOutputWithContext(context.Background())
}

func (i FleetEc2EbsVolumeArgs) ToFleetEc2EbsVolumePtrOutputWithContext(ctx context.Context) FleetEc2EbsVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetEc2EbsVolumeOutput).ToFleetEc2EbsVolumePtrOutputWithContext(ctx)
}

// FleetEc2EbsVolumePtrInput is an input type that accepts FleetEc2EbsVolumeArgs, FleetEc2EbsVolumePtr and FleetEc2EbsVolumePtrOutput values.
// You can construct a concrete instance of `FleetEc2EbsVolumePtrInput` via:
//
//	        FleetEc2EbsVolumeArgs{...}
//
//	or:
//
//	        nil
type FleetEc2EbsVolumePtrInput interface {
	pulumi.Input

	ToFleetEc2EbsVolumePtrOutput() FleetEc2EbsVolumePtrOutput
	ToFleetEc2EbsVolumePtrOutputWithContext(context.Context) FleetEc2EbsVolumePtrOutput
}

type fleetEc2EbsVolumePtrType FleetEc2EbsVolumeArgs

func FleetEc2EbsVolumePtr(v *FleetEc2EbsVolumeArgs) FleetEc2EbsVolumePtrInput {
	return (*fleetEc2EbsVolumePtrType)(v)
}

func (*fleetEc2EbsVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetEc2EbsVolume)(nil)).Elem()
}

func (i *fleetEc2EbsVolumePtrType) ToFleetEc2EbsVolumePtrOutput() FleetEc2EbsVolumePtrOutput {
	return i.ToFleetEc2EbsVolumePtrOutputWithContext(context.Background())
}

func (i *fleetEc2EbsVolumePtrType) ToFleetEc2EbsVolumePtrOutputWithContext(ctx context.Context) FleetEc2EbsVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetEc2EbsVolumePtrOutput)
}

type FleetEc2EbsVolumeOutput struct{ *pulumi.OutputState }

func (FleetEc2EbsVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetEc2EbsVolume)(nil)).Elem()
}

func (o FleetEc2EbsVolumeOutput) ToFleetEc2EbsVolumeOutput() FleetEc2EbsVolumeOutput {
	return o
}

func (o FleetEc2EbsVolumeOutput) ToFleetEc2EbsVolumeOutputWithContext(ctx context.Context) FleetEc2EbsVolumeOutput {
	return o
}

func (o FleetEc2EbsVolumeOutput) ToFleetEc2EbsVolumePtrOutput() FleetEc2EbsVolumePtrOutput {
	return o.ToFleetEc2EbsVolumePtrOutputWithContext(context.Background())
}

func (o FleetEc2EbsVolumeOutput) ToFleetEc2EbsVolumePtrOutputWithContext(ctx context.Context) FleetEc2EbsVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetEc2EbsVolume) *FleetEc2EbsVolume {
		return &v
	}).(FleetEc2EbsVolumePtrOutput)
}

func (o FleetEc2EbsVolumeOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetEc2EbsVolume) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

func (o FleetEc2EbsVolumeOutput) SizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetEc2EbsVolume) *int { return v.SizeGiB }).(pulumi.IntPtrOutput)
}

func (o FleetEc2EbsVolumeOutput) ThroughputMiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetEc2EbsVolume) *int { return v.ThroughputMiB }).(pulumi.IntPtrOutput)
}

type FleetEc2EbsVolumePtrOutput struct{ *pulumi.OutputState }

func (FleetEc2EbsVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetEc2EbsVolume)(nil)).Elem()
}

func (o FleetEc2EbsVolumePtrOutput) ToFleetEc2EbsVolumePtrOutput() FleetEc2EbsVolumePtrOutput {
	return o
}

func (o FleetEc2EbsVolumePtrOutput) ToFleetEc2EbsVolumePtrOutputWithContext(ctx context.Context) FleetEc2EbsVolumePtrOutput {
	return o
}

func (o FleetEc2EbsVolumePtrOutput) Elem() FleetEc2EbsVolumeOutput {
	return o.ApplyT(func(v *FleetEc2EbsVolume) FleetEc2EbsVolume {
		if v != nil {
			return *v
		}
		var ret FleetEc2EbsVolume
		return ret
	}).(FleetEc2EbsVolumeOutput)
}

func (o FleetEc2EbsVolumePtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetEc2EbsVolume) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

func (o FleetEc2EbsVolumePtrOutput) SizeGiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetEc2EbsVolume) *int {
		if v == nil {
			return nil
		}
		return v.SizeGiB
	}).(pulumi.IntPtrOutput)
}

func (o FleetEc2EbsVolumePtrOutput) ThroughputMiB() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetEc2EbsVolume) *int {
		if v == nil {
			return nil
		}
		return v.ThroughputMiB
	}).(pulumi.IntPtrOutput)
}

type FleetHostConfiguration struct {
	// The text of the script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet. The script runs after a worker enters the `STARTING` state and before the worker processes tasks.
	//
	// For more information about using the script, see [Run scripts as an administrator to configure workers](https://docs.aws.amazon.com/deadline-cloud/latest/developerguide/smf-admin.html) in the *Deadline Cloud Developer Guide* .
	//
	// > The script runs as an administrative user ( `sudo root` on Linux, as an Administrator on Windows).
	ScriptBody string `pulumi:"scriptBody"`
	// The maximum time that the host configuration can run. If the timeout expires, the worker enters the `NOT RESPONDING` state and shuts down. You are charged for the time that the worker is running the host configuration script.
	//
	// > You should configure your fleet for a maximum of one worker while testing your host configuration script to avoid starting additional workers.
	//
	// The default is 300 seconds (5 minutes).
	ScriptTimeoutSeconds *int `pulumi:"scriptTimeoutSeconds"`
}

// FleetHostConfigurationInput is an input type that accepts FleetHostConfigurationArgs and FleetHostConfigurationOutput values.
// You can construct a concrete instance of `FleetHostConfigurationInput` via:
//
//	FleetHostConfigurationArgs{...}
type FleetHostConfigurationInput interface {
	pulumi.Input

	ToFleetHostConfigurationOutput() FleetHostConfigurationOutput
	ToFleetHostConfigurationOutputWithContext(context.Context) FleetHostConfigurationOutput
}

type FleetHostConfigurationArgs struct {
	// The text of the script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet. The script runs after a worker enters the `STARTING` state and before the worker processes tasks.
	//
	// For more information about using the script, see [Run scripts as an administrator to configure workers](https://docs.aws.amazon.com/deadline-cloud/latest/developerguide/smf-admin.html) in the *Deadline Cloud Developer Guide* .
	//
	// > The script runs as an administrative user ( `sudo root` on Linux, as an Administrator on Windows).
	ScriptBody pulumi.StringInput `pulumi:"scriptBody"`
	// The maximum time that the host configuration can run. If the timeout expires, the worker enters the `NOT RESPONDING` state and shuts down. You are charged for the time that the worker is running the host configuration script.
	//
	// > You should configure your fleet for a maximum of one worker while testing your host configuration script to avoid starting additional workers.
	//
	// The default is 300 seconds (5 minutes).
	ScriptTimeoutSeconds pulumi.IntPtrInput `pulumi:"scriptTimeoutSeconds"`
}

func (FleetHostConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetHostConfiguration)(nil)).Elem()
}

func (i FleetHostConfigurationArgs) ToFleetHostConfigurationOutput() FleetHostConfigurationOutput {
	return i.ToFleetHostConfigurationOutputWithContext(context.Background())
}

func (i FleetHostConfigurationArgs) ToFleetHostConfigurationOutputWithContext(ctx context.Context) FleetHostConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetHostConfigurationOutput)
}

func (i FleetHostConfigurationArgs) ToFleetHostConfigurationPtrOutput() FleetHostConfigurationPtrOutput {
	return i.ToFleetHostConfigurationPtrOutputWithContext(context.Background())
}

func (i FleetHostConfigurationArgs) ToFleetHostConfigurationPtrOutputWithContext(ctx context.Context) FleetHostConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetHostConfigurationOutput).ToFleetHostConfigurationPtrOutputWithContext(ctx)
}

// FleetHostConfigurationPtrInput is an input type that accepts FleetHostConfigurationArgs, FleetHostConfigurationPtr and FleetHostConfigurationPtrOutput values.
// You can construct a concrete instance of `FleetHostConfigurationPtrInput` via:
//
//	        FleetHostConfigurationArgs{...}
//
//	or:
//
//	        nil
type FleetHostConfigurationPtrInput interface {
	pulumi.Input

	ToFleetHostConfigurationPtrOutput() FleetHostConfigurationPtrOutput
	ToFleetHostConfigurationPtrOutputWithContext(context.Context) FleetHostConfigurationPtrOutput
}

type fleetHostConfigurationPtrType FleetHostConfigurationArgs

func FleetHostConfigurationPtr(v *FleetHostConfigurationArgs) FleetHostConfigurationPtrInput {
	return (*fleetHostConfigurationPtrType)(v)
}

func (*fleetHostConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetHostConfiguration)(nil)).Elem()
}

func (i *fleetHostConfigurationPtrType) ToFleetHostConfigurationPtrOutput() FleetHostConfigurationPtrOutput {
	return i.ToFleetHostConfigurationPtrOutputWithContext(context.Background())
}

func (i *fleetHostConfigurationPtrType) ToFleetHostConfigurationPtrOutputWithContext(ctx context.Context) FleetHostConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetHostConfigurationPtrOutput)
}

type FleetHostConfigurationOutput struct{ *pulumi.OutputState }

func (FleetHostConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetHostConfiguration)(nil)).Elem()
}

func (o FleetHostConfigurationOutput) ToFleetHostConfigurationOutput() FleetHostConfigurationOutput {
	return o
}

func (o FleetHostConfigurationOutput) ToFleetHostConfigurationOutputWithContext(ctx context.Context) FleetHostConfigurationOutput {
	return o
}

func (o FleetHostConfigurationOutput) ToFleetHostConfigurationPtrOutput() FleetHostConfigurationPtrOutput {
	return o.ToFleetHostConfigurationPtrOutputWithContext(context.Background())
}

func (o FleetHostConfigurationOutput) ToFleetHostConfigurationPtrOutputWithContext(ctx context.Context) FleetHostConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetHostConfiguration) *FleetHostConfiguration {
		return &v
	}).(FleetHostConfigurationPtrOutput)
}

// The text of the script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet. The script runs after a worker enters the `STARTING` state and before the worker processes tasks.
//
// For more information about using the script, see [Run scripts as an administrator to configure workers](https://docs.aws.amazon.com/deadline-cloud/latest/developerguide/smf-admin.html) in the *Deadline Cloud Developer Guide* .
//
// > The script runs as an administrative user ( `sudo root` on Linux, as an Administrator on Windows).
func (o FleetHostConfigurationOutput) ScriptBody() pulumi.StringOutput {
	return o.ApplyT(func(v FleetHostConfiguration) string { return v.ScriptBody }).(pulumi.StringOutput)
}

// The maximum time that the host configuration can run. If the timeout expires, the worker enters the `NOT RESPONDING` state and shuts down. You are charged for the time that the worker is running the host configuration script.
//
// > You should configure your fleet for a maximum of one worker while testing your host configuration script to avoid starting additional workers.
//
// The default is 300 seconds (5 minutes).
func (o FleetHostConfigurationOutput) ScriptTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetHostConfiguration) *int { return v.ScriptTimeoutSeconds }).(pulumi.IntPtrOutput)
}

type FleetHostConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FleetHostConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetHostConfiguration)(nil)).Elem()
}

func (o FleetHostConfigurationPtrOutput) ToFleetHostConfigurationPtrOutput() FleetHostConfigurationPtrOutput {
	return o
}

func (o FleetHostConfigurationPtrOutput) ToFleetHostConfigurationPtrOutputWithContext(ctx context.Context) FleetHostConfigurationPtrOutput {
	return o
}

func (o FleetHostConfigurationPtrOutput) Elem() FleetHostConfigurationOutput {
	return o.ApplyT(func(v *FleetHostConfiguration) FleetHostConfiguration {
		if v != nil {
			return *v
		}
		var ret FleetHostConfiguration
		return ret
	}).(FleetHostConfigurationOutput)
}

// The text of the script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet. The script runs after a worker enters the `STARTING` state and before the worker processes tasks.
//
// For more information about using the script, see [Run scripts as an administrator to configure workers](https://docs.aws.amazon.com/deadline-cloud/latest/developerguide/smf-admin.html) in the *Deadline Cloud Developer Guide* .
//
// > The script runs as an administrative user ( `sudo root` on Linux, as an Administrator on Windows).
func (o FleetHostConfigurationPtrOutput) ScriptBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetHostConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ScriptBody
	}).(pulumi.StringPtrOutput)
}

// The maximum time that the host configuration can run. If the timeout expires, the worker enters the `NOT RESPONDING` state and shuts down. You are charged for the time that the worker is running the host configuration script.
//
// > You should configure your fleet for a maximum of one worker while testing your host configuration script to avoid starting additional workers.
//
// The default is 300 seconds (5 minutes).
func (o FleetHostConfigurationPtrOutput) ScriptTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetHostConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.ScriptTimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type FleetMemoryMiBRange struct {
	Max *int `pulumi:"max"`
	Min int  `pulumi:"min"`
}

// FleetMemoryMiBRangeInput is an input type that accepts FleetMemoryMiBRangeArgs and FleetMemoryMiBRangeOutput values.
// You can construct a concrete instance of `FleetMemoryMiBRangeInput` via:
//
//	FleetMemoryMiBRangeArgs{...}
type FleetMemoryMiBRangeInput interface {
	pulumi.Input

	ToFleetMemoryMiBRangeOutput() FleetMemoryMiBRangeOutput
	ToFleetMemoryMiBRangeOutputWithContext(context.Context) FleetMemoryMiBRangeOutput
}

type FleetMemoryMiBRangeArgs struct {
	Max pulumi.IntPtrInput `pulumi:"max"`
	Min pulumi.IntInput    `pulumi:"min"`
}

func (FleetMemoryMiBRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetMemoryMiBRange)(nil)).Elem()
}

func (i FleetMemoryMiBRangeArgs) ToFleetMemoryMiBRangeOutput() FleetMemoryMiBRangeOutput {
	return i.ToFleetMemoryMiBRangeOutputWithContext(context.Background())
}

func (i FleetMemoryMiBRangeArgs) ToFleetMemoryMiBRangeOutputWithContext(ctx context.Context) FleetMemoryMiBRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetMemoryMiBRangeOutput)
}

type FleetMemoryMiBRangeOutput struct{ *pulumi.OutputState }

func (FleetMemoryMiBRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetMemoryMiBRange)(nil)).Elem()
}

func (o FleetMemoryMiBRangeOutput) ToFleetMemoryMiBRangeOutput() FleetMemoryMiBRangeOutput {
	return o
}

func (o FleetMemoryMiBRangeOutput) ToFleetMemoryMiBRangeOutputWithContext(ctx context.Context) FleetMemoryMiBRangeOutput {
	return o
}

func (o FleetMemoryMiBRangeOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetMemoryMiBRange) *int { return v.Max }).(pulumi.IntPtrOutput)
}

func (o FleetMemoryMiBRangeOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v FleetMemoryMiBRange) int { return v.Min }).(pulumi.IntOutput)
}

type FleetMemoryMiBRangePtrOutput struct{ *pulumi.OutputState }

func (FleetMemoryMiBRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetMemoryMiBRange)(nil)).Elem()
}

func (o FleetMemoryMiBRangePtrOutput) ToFleetMemoryMiBRangePtrOutput() FleetMemoryMiBRangePtrOutput {
	return o
}

func (o FleetMemoryMiBRangePtrOutput) ToFleetMemoryMiBRangePtrOutputWithContext(ctx context.Context) FleetMemoryMiBRangePtrOutput {
	return o
}

func (o FleetMemoryMiBRangePtrOutput) Elem() FleetMemoryMiBRangeOutput {
	return o.ApplyT(func(v *FleetMemoryMiBRange) FleetMemoryMiBRange {
		if v != nil {
			return *v
		}
		var ret FleetMemoryMiBRange
		return ret
	}).(FleetMemoryMiBRangeOutput)
}

func (o FleetMemoryMiBRangePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetMemoryMiBRange) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

func (o FleetMemoryMiBRangePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetMemoryMiBRange) *int {
		if v == nil {
			return nil
		}
		return &v.Min
	}).(pulumi.IntPtrOutput)
}

type FleetServiceManagedEc2FleetConfiguration struct {
	InstanceCapabilities  FleetServiceManagedEc2InstanceCapabilities  `pulumi:"instanceCapabilities"`
	InstanceMarketOptions FleetServiceManagedEc2InstanceMarketOptions `pulumi:"instanceMarketOptions"`
	StorageProfileId      *string                                     `pulumi:"storageProfileId"`
	VpcConfiguration      *FleetVpcConfiguration                      `pulumi:"vpcConfiguration"`
}

// FleetServiceManagedEc2FleetConfigurationInput is an input type that accepts FleetServiceManagedEc2FleetConfigurationArgs and FleetServiceManagedEc2FleetConfigurationOutput values.
// You can construct a concrete instance of `FleetServiceManagedEc2FleetConfigurationInput` via:
//
//	FleetServiceManagedEc2FleetConfigurationArgs{...}
type FleetServiceManagedEc2FleetConfigurationInput interface {
	pulumi.Input

	ToFleetServiceManagedEc2FleetConfigurationOutput() FleetServiceManagedEc2FleetConfigurationOutput
	ToFleetServiceManagedEc2FleetConfigurationOutputWithContext(context.Context) FleetServiceManagedEc2FleetConfigurationOutput
}

type FleetServiceManagedEc2FleetConfigurationArgs struct {
	InstanceCapabilities  FleetServiceManagedEc2InstanceCapabilitiesInput  `pulumi:"instanceCapabilities"`
	InstanceMarketOptions FleetServiceManagedEc2InstanceMarketOptionsInput `pulumi:"instanceMarketOptions"`
	StorageProfileId      pulumi.StringPtrInput                            `pulumi:"storageProfileId"`
	VpcConfiguration      FleetVpcConfigurationPtrInput                    `pulumi:"vpcConfiguration"`
}

func (FleetServiceManagedEc2FleetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetServiceManagedEc2FleetConfiguration)(nil)).Elem()
}

func (i FleetServiceManagedEc2FleetConfigurationArgs) ToFleetServiceManagedEc2FleetConfigurationOutput() FleetServiceManagedEc2FleetConfigurationOutput {
	return i.ToFleetServiceManagedEc2FleetConfigurationOutputWithContext(context.Background())
}

func (i FleetServiceManagedEc2FleetConfigurationArgs) ToFleetServiceManagedEc2FleetConfigurationOutputWithContext(ctx context.Context) FleetServiceManagedEc2FleetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetServiceManagedEc2FleetConfigurationOutput)
}

type FleetServiceManagedEc2FleetConfigurationOutput struct{ *pulumi.OutputState }

func (FleetServiceManagedEc2FleetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetServiceManagedEc2FleetConfiguration)(nil)).Elem()
}

func (o FleetServiceManagedEc2FleetConfigurationOutput) ToFleetServiceManagedEc2FleetConfigurationOutput() FleetServiceManagedEc2FleetConfigurationOutput {
	return o
}

func (o FleetServiceManagedEc2FleetConfigurationOutput) ToFleetServiceManagedEc2FleetConfigurationOutputWithContext(ctx context.Context) FleetServiceManagedEc2FleetConfigurationOutput {
	return o
}

func (o FleetServiceManagedEc2FleetConfigurationOutput) InstanceCapabilities() FleetServiceManagedEc2InstanceCapabilitiesOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2FleetConfiguration) FleetServiceManagedEc2InstanceCapabilities {
		return v.InstanceCapabilities
	}).(FleetServiceManagedEc2InstanceCapabilitiesOutput)
}

func (o FleetServiceManagedEc2FleetConfigurationOutput) InstanceMarketOptions() FleetServiceManagedEc2InstanceMarketOptionsOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2FleetConfiguration) FleetServiceManagedEc2InstanceMarketOptions {
		return v.InstanceMarketOptions
	}).(FleetServiceManagedEc2InstanceMarketOptionsOutput)
}

func (o FleetServiceManagedEc2FleetConfigurationOutput) StorageProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2FleetConfiguration) *string { return v.StorageProfileId }).(pulumi.StringPtrOutput)
}

func (o FleetServiceManagedEc2FleetConfigurationOutput) VpcConfiguration() FleetVpcConfigurationPtrOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2FleetConfiguration) *FleetVpcConfiguration { return v.VpcConfiguration }).(FleetVpcConfigurationPtrOutput)
}

type FleetServiceManagedEc2FleetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FleetServiceManagedEc2FleetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetServiceManagedEc2FleetConfiguration)(nil)).Elem()
}

func (o FleetServiceManagedEc2FleetConfigurationPtrOutput) ToFleetServiceManagedEc2FleetConfigurationPtrOutput() FleetServiceManagedEc2FleetConfigurationPtrOutput {
	return o
}

func (o FleetServiceManagedEc2FleetConfigurationPtrOutput) ToFleetServiceManagedEc2FleetConfigurationPtrOutputWithContext(ctx context.Context) FleetServiceManagedEc2FleetConfigurationPtrOutput {
	return o
}

func (o FleetServiceManagedEc2FleetConfigurationPtrOutput) Elem() FleetServiceManagedEc2FleetConfigurationOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2FleetConfiguration) FleetServiceManagedEc2FleetConfiguration {
		if v != nil {
			return *v
		}
		var ret FleetServiceManagedEc2FleetConfiguration
		return ret
	}).(FleetServiceManagedEc2FleetConfigurationOutput)
}

func (o FleetServiceManagedEc2FleetConfigurationPtrOutput) InstanceCapabilities() FleetServiceManagedEc2InstanceCapabilitiesPtrOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2FleetConfiguration) *FleetServiceManagedEc2InstanceCapabilities {
		if v == nil {
			return nil
		}
		return &v.InstanceCapabilities
	}).(FleetServiceManagedEc2InstanceCapabilitiesPtrOutput)
}

func (o FleetServiceManagedEc2FleetConfigurationPtrOutput) InstanceMarketOptions() FleetServiceManagedEc2InstanceMarketOptionsPtrOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2FleetConfiguration) *FleetServiceManagedEc2InstanceMarketOptions {
		if v == nil {
			return nil
		}
		return &v.InstanceMarketOptions
	}).(FleetServiceManagedEc2InstanceMarketOptionsPtrOutput)
}

func (o FleetServiceManagedEc2FleetConfigurationPtrOutput) StorageProfileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2FleetConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.StorageProfileId
	}).(pulumi.StringPtrOutput)
}

func (o FleetServiceManagedEc2FleetConfigurationPtrOutput) VpcConfiguration() FleetVpcConfigurationPtrOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2FleetConfiguration) *FleetVpcConfiguration {
		if v == nil {
			return nil
		}
		return v.VpcConfiguration
	}).(FleetVpcConfigurationPtrOutput)
}

type FleetServiceManagedEc2InstanceCapabilities struct {
	AcceleratorCapabilities *FleetAcceleratorCapabilities                 `pulumi:"acceleratorCapabilities"`
	AllowedInstanceTypes    []string                                      `pulumi:"allowedInstanceTypes"`
	CpuArchitectureType     FleetCpuArchitectureType                      `pulumi:"cpuArchitectureType"`
	CustomAmounts           []FleetAmountCapability                       `pulumi:"customAmounts"`
	CustomAttributes        []FleetAttributeCapability                    `pulumi:"customAttributes"`
	ExcludedInstanceTypes   []string                                      `pulumi:"excludedInstanceTypes"`
	MemoryMiB               FleetMemoryMiBRange                           `pulumi:"memoryMiB"`
	OsFamily                FleetServiceManagedFleetOperatingSystemFamily `pulumi:"osFamily"`
	RootEbsVolume           *FleetEc2EbsVolume                            `pulumi:"rootEbsVolume"`
	VCpuCount               FleetVCpuCountRange                           `pulumi:"vCpuCount"`
}

// FleetServiceManagedEc2InstanceCapabilitiesInput is an input type that accepts FleetServiceManagedEc2InstanceCapabilitiesArgs and FleetServiceManagedEc2InstanceCapabilitiesOutput values.
// You can construct a concrete instance of `FleetServiceManagedEc2InstanceCapabilitiesInput` via:
//
//	FleetServiceManagedEc2InstanceCapabilitiesArgs{...}
type FleetServiceManagedEc2InstanceCapabilitiesInput interface {
	pulumi.Input

	ToFleetServiceManagedEc2InstanceCapabilitiesOutput() FleetServiceManagedEc2InstanceCapabilitiesOutput
	ToFleetServiceManagedEc2InstanceCapabilitiesOutputWithContext(context.Context) FleetServiceManagedEc2InstanceCapabilitiesOutput
}

type FleetServiceManagedEc2InstanceCapabilitiesArgs struct {
	AcceleratorCapabilities FleetAcceleratorCapabilitiesPtrInput               `pulumi:"acceleratorCapabilities"`
	AllowedInstanceTypes    pulumi.StringArrayInput                            `pulumi:"allowedInstanceTypes"`
	CpuArchitectureType     FleetCpuArchitectureTypeInput                      `pulumi:"cpuArchitectureType"`
	CustomAmounts           FleetAmountCapabilityArrayInput                    `pulumi:"customAmounts"`
	CustomAttributes        FleetAttributeCapabilityArrayInput                 `pulumi:"customAttributes"`
	ExcludedInstanceTypes   pulumi.StringArrayInput                            `pulumi:"excludedInstanceTypes"`
	MemoryMiB               FleetMemoryMiBRangeInput                           `pulumi:"memoryMiB"`
	OsFamily                FleetServiceManagedFleetOperatingSystemFamilyInput `pulumi:"osFamily"`
	RootEbsVolume           FleetEc2EbsVolumePtrInput                          `pulumi:"rootEbsVolume"`
	VCpuCount               FleetVCpuCountRangeInput                           `pulumi:"vCpuCount"`
}

func (FleetServiceManagedEc2InstanceCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetServiceManagedEc2InstanceCapabilities)(nil)).Elem()
}

func (i FleetServiceManagedEc2InstanceCapabilitiesArgs) ToFleetServiceManagedEc2InstanceCapabilitiesOutput() FleetServiceManagedEc2InstanceCapabilitiesOutput {
	return i.ToFleetServiceManagedEc2InstanceCapabilitiesOutputWithContext(context.Background())
}

func (i FleetServiceManagedEc2InstanceCapabilitiesArgs) ToFleetServiceManagedEc2InstanceCapabilitiesOutputWithContext(ctx context.Context) FleetServiceManagedEc2InstanceCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetServiceManagedEc2InstanceCapabilitiesOutput)
}

type FleetServiceManagedEc2InstanceCapabilitiesOutput struct{ *pulumi.OutputState }

func (FleetServiceManagedEc2InstanceCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetServiceManagedEc2InstanceCapabilities)(nil)).Elem()
}

func (o FleetServiceManagedEc2InstanceCapabilitiesOutput) ToFleetServiceManagedEc2InstanceCapabilitiesOutput() FleetServiceManagedEc2InstanceCapabilitiesOutput {
	return o
}

func (o FleetServiceManagedEc2InstanceCapabilitiesOutput) ToFleetServiceManagedEc2InstanceCapabilitiesOutputWithContext(ctx context.Context) FleetServiceManagedEc2InstanceCapabilitiesOutput {
	return o
}

func (o FleetServiceManagedEc2InstanceCapabilitiesOutput) AcceleratorCapabilities() FleetAcceleratorCapabilitiesPtrOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2InstanceCapabilities) *FleetAcceleratorCapabilities {
		return v.AcceleratorCapabilities
	}).(FleetAcceleratorCapabilitiesPtrOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesOutput) AllowedInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2InstanceCapabilities) []string { return v.AllowedInstanceTypes }).(pulumi.StringArrayOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesOutput) CpuArchitectureType() FleetCpuArchitectureTypeOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2InstanceCapabilities) FleetCpuArchitectureType {
		return v.CpuArchitectureType
	}).(FleetCpuArchitectureTypeOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesOutput) CustomAmounts() FleetAmountCapabilityArrayOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2InstanceCapabilities) []FleetAmountCapability { return v.CustomAmounts }).(FleetAmountCapabilityArrayOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesOutput) CustomAttributes() FleetAttributeCapabilityArrayOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2InstanceCapabilities) []FleetAttributeCapability {
		return v.CustomAttributes
	}).(FleetAttributeCapabilityArrayOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesOutput) ExcludedInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2InstanceCapabilities) []string { return v.ExcludedInstanceTypes }).(pulumi.StringArrayOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesOutput) MemoryMiB() FleetMemoryMiBRangeOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2InstanceCapabilities) FleetMemoryMiBRange { return v.MemoryMiB }).(FleetMemoryMiBRangeOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesOutput) OsFamily() FleetServiceManagedFleetOperatingSystemFamilyOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2InstanceCapabilities) FleetServiceManagedFleetOperatingSystemFamily {
		return v.OsFamily
	}).(FleetServiceManagedFleetOperatingSystemFamilyOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesOutput) RootEbsVolume() FleetEc2EbsVolumePtrOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2InstanceCapabilities) *FleetEc2EbsVolume { return v.RootEbsVolume }).(FleetEc2EbsVolumePtrOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesOutput) VCpuCount() FleetVCpuCountRangeOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2InstanceCapabilities) FleetVCpuCountRange { return v.VCpuCount }).(FleetVCpuCountRangeOutput)
}

type FleetServiceManagedEc2InstanceCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetServiceManagedEc2InstanceCapabilities)(nil)).Elem()
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) ToFleetServiceManagedEc2InstanceCapabilitiesPtrOutput() FleetServiceManagedEc2InstanceCapabilitiesPtrOutput {
	return o
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) ToFleetServiceManagedEc2InstanceCapabilitiesPtrOutputWithContext(ctx context.Context) FleetServiceManagedEc2InstanceCapabilitiesPtrOutput {
	return o
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) Elem() FleetServiceManagedEc2InstanceCapabilitiesOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceCapabilities) FleetServiceManagedEc2InstanceCapabilities {
		if v != nil {
			return *v
		}
		var ret FleetServiceManagedEc2InstanceCapabilities
		return ret
	}).(FleetServiceManagedEc2InstanceCapabilitiesOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) AcceleratorCapabilities() FleetAcceleratorCapabilitiesPtrOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceCapabilities) *FleetAcceleratorCapabilities {
		if v == nil {
			return nil
		}
		return v.AcceleratorCapabilities
	}).(FleetAcceleratorCapabilitiesPtrOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) AllowedInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.AllowedInstanceTypes
	}).(pulumi.StringArrayOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) CpuArchitectureType() FleetCpuArchitectureTypePtrOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceCapabilities) *FleetCpuArchitectureType {
		if v == nil {
			return nil
		}
		return &v.CpuArchitectureType
	}).(FleetCpuArchitectureTypePtrOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) CustomAmounts() FleetAmountCapabilityArrayOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceCapabilities) []FleetAmountCapability {
		if v == nil {
			return nil
		}
		return v.CustomAmounts
	}).(FleetAmountCapabilityArrayOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) CustomAttributes() FleetAttributeCapabilityArrayOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceCapabilities) []FleetAttributeCapability {
		if v == nil {
			return nil
		}
		return v.CustomAttributes
	}).(FleetAttributeCapabilityArrayOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) ExcludedInstanceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.ExcludedInstanceTypes
	}).(pulumi.StringArrayOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) MemoryMiB() FleetMemoryMiBRangePtrOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceCapabilities) *FleetMemoryMiBRange {
		if v == nil {
			return nil
		}
		return &v.MemoryMiB
	}).(FleetMemoryMiBRangePtrOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) OsFamily() FleetServiceManagedFleetOperatingSystemFamilyPtrOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceCapabilities) *FleetServiceManagedFleetOperatingSystemFamily {
		if v == nil {
			return nil
		}
		return &v.OsFamily
	}).(FleetServiceManagedFleetOperatingSystemFamilyPtrOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) RootEbsVolume() FleetEc2EbsVolumePtrOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceCapabilities) *FleetEc2EbsVolume {
		if v == nil {
			return nil
		}
		return v.RootEbsVolume
	}).(FleetEc2EbsVolumePtrOutput)
}

func (o FleetServiceManagedEc2InstanceCapabilitiesPtrOutput) VCpuCount() FleetVCpuCountRangePtrOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceCapabilities) *FleetVCpuCountRange {
		if v == nil {
			return nil
		}
		return &v.VCpuCount
	}).(FleetVCpuCountRangePtrOutput)
}

type FleetServiceManagedEc2InstanceMarketOptions struct {
	Type FleetEc2MarketType `pulumi:"type"`
}

// FleetServiceManagedEc2InstanceMarketOptionsInput is an input type that accepts FleetServiceManagedEc2InstanceMarketOptionsArgs and FleetServiceManagedEc2InstanceMarketOptionsOutput values.
// You can construct a concrete instance of `FleetServiceManagedEc2InstanceMarketOptionsInput` via:
//
//	FleetServiceManagedEc2InstanceMarketOptionsArgs{...}
type FleetServiceManagedEc2InstanceMarketOptionsInput interface {
	pulumi.Input

	ToFleetServiceManagedEc2InstanceMarketOptionsOutput() FleetServiceManagedEc2InstanceMarketOptionsOutput
	ToFleetServiceManagedEc2InstanceMarketOptionsOutputWithContext(context.Context) FleetServiceManagedEc2InstanceMarketOptionsOutput
}

type FleetServiceManagedEc2InstanceMarketOptionsArgs struct {
	Type FleetEc2MarketTypeInput `pulumi:"type"`
}

func (FleetServiceManagedEc2InstanceMarketOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetServiceManagedEc2InstanceMarketOptions)(nil)).Elem()
}

func (i FleetServiceManagedEc2InstanceMarketOptionsArgs) ToFleetServiceManagedEc2InstanceMarketOptionsOutput() FleetServiceManagedEc2InstanceMarketOptionsOutput {
	return i.ToFleetServiceManagedEc2InstanceMarketOptionsOutputWithContext(context.Background())
}

func (i FleetServiceManagedEc2InstanceMarketOptionsArgs) ToFleetServiceManagedEc2InstanceMarketOptionsOutputWithContext(ctx context.Context) FleetServiceManagedEc2InstanceMarketOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetServiceManagedEc2InstanceMarketOptionsOutput)
}

type FleetServiceManagedEc2InstanceMarketOptionsOutput struct{ *pulumi.OutputState }

func (FleetServiceManagedEc2InstanceMarketOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetServiceManagedEc2InstanceMarketOptions)(nil)).Elem()
}

func (o FleetServiceManagedEc2InstanceMarketOptionsOutput) ToFleetServiceManagedEc2InstanceMarketOptionsOutput() FleetServiceManagedEc2InstanceMarketOptionsOutput {
	return o
}

func (o FleetServiceManagedEc2InstanceMarketOptionsOutput) ToFleetServiceManagedEc2InstanceMarketOptionsOutputWithContext(ctx context.Context) FleetServiceManagedEc2InstanceMarketOptionsOutput {
	return o
}

func (o FleetServiceManagedEc2InstanceMarketOptionsOutput) Type() FleetEc2MarketTypeOutput {
	return o.ApplyT(func(v FleetServiceManagedEc2InstanceMarketOptions) FleetEc2MarketType { return v.Type }).(FleetEc2MarketTypeOutput)
}

type FleetServiceManagedEc2InstanceMarketOptionsPtrOutput struct{ *pulumi.OutputState }

func (FleetServiceManagedEc2InstanceMarketOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetServiceManagedEc2InstanceMarketOptions)(nil)).Elem()
}

func (o FleetServiceManagedEc2InstanceMarketOptionsPtrOutput) ToFleetServiceManagedEc2InstanceMarketOptionsPtrOutput() FleetServiceManagedEc2InstanceMarketOptionsPtrOutput {
	return o
}

func (o FleetServiceManagedEc2InstanceMarketOptionsPtrOutput) ToFleetServiceManagedEc2InstanceMarketOptionsPtrOutputWithContext(ctx context.Context) FleetServiceManagedEc2InstanceMarketOptionsPtrOutput {
	return o
}

func (o FleetServiceManagedEc2InstanceMarketOptionsPtrOutput) Elem() FleetServiceManagedEc2InstanceMarketOptionsOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceMarketOptions) FleetServiceManagedEc2InstanceMarketOptions {
		if v != nil {
			return *v
		}
		var ret FleetServiceManagedEc2InstanceMarketOptions
		return ret
	}).(FleetServiceManagedEc2InstanceMarketOptionsOutput)
}

func (o FleetServiceManagedEc2InstanceMarketOptionsPtrOutput) Type() FleetEc2MarketTypePtrOutput {
	return o.ApplyT(func(v *FleetServiceManagedEc2InstanceMarketOptions) *FleetEc2MarketType {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(FleetEc2MarketTypePtrOutput)
}

// A key-value pair to associate with a resource.
type FleetTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type FleetVCpuCountRange struct {
	Max *int `pulumi:"max"`
	Min int  `pulumi:"min"`
}

// FleetVCpuCountRangeInput is an input type that accepts FleetVCpuCountRangeArgs and FleetVCpuCountRangeOutput values.
// You can construct a concrete instance of `FleetVCpuCountRangeInput` via:
//
//	FleetVCpuCountRangeArgs{...}
type FleetVCpuCountRangeInput interface {
	pulumi.Input

	ToFleetVCpuCountRangeOutput() FleetVCpuCountRangeOutput
	ToFleetVCpuCountRangeOutputWithContext(context.Context) FleetVCpuCountRangeOutput
}

type FleetVCpuCountRangeArgs struct {
	Max pulumi.IntPtrInput `pulumi:"max"`
	Min pulumi.IntInput    `pulumi:"min"`
}

func (FleetVCpuCountRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetVCpuCountRange)(nil)).Elem()
}

func (i FleetVCpuCountRangeArgs) ToFleetVCpuCountRangeOutput() FleetVCpuCountRangeOutput {
	return i.ToFleetVCpuCountRangeOutputWithContext(context.Background())
}

func (i FleetVCpuCountRangeArgs) ToFleetVCpuCountRangeOutputWithContext(ctx context.Context) FleetVCpuCountRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetVCpuCountRangeOutput)
}

type FleetVCpuCountRangeOutput struct{ *pulumi.OutputState }

func (FleetVCpuCountRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetVCpuCountRange)(nil)).Elem()
}

func (o FleetVCpuCountRangeOutput) ToFleetVCpuCountRangeOutput() FleetVCpuCountRangeOutput {
	return o
}

func (o FleetVCpuCountRangeOutput) ToFleetVCpuCountRangeOutputWithContext(ctx context.Context) FleetVCpuCountRangeOutput {
	return o
}

func (o FleetVCpuCountRangeOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FleetVCpuCountRange) *int { return v.Max }).(pulumi.IntPtrOutput)
}

func (o FleetVCpuCountRangeOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v FleetVCpuCountRange) int { return v.Min }).(pulumi.IntOutput)
}

type FleetVCpuCountRangePtrOutput struct{ *pulumi.OutputState }

func (FleetVCpuCountRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetVCpuCountRange)(nil)).Elem()
}

func (o FleetVCpuCountRangePtrOutput) ToFleetVCpuCountRangePtrOutput() FleetVCpuCountRangePtrOutput {
	return o
}

func (o FleetVCpuCountRangePtrOutput) ToFleetVCpuCountRangePtrOutputWithContext(ctx context.Context) FleetVCpuCountRangePtrOutput {
	return o
}

func (o FleetVCpuCountRangePtrOutput) Elem() FleetVCpuCountRangeOutput {
	return o.ApplyT(func(v *FleetVCpuCountRange) FleetVCpuCountRange {
		if v != nil {
			return *v
		}
		var ret FleetVCpuCountRange
		return ret
	}).(FleetVCpuCountRangeOutput)
}

func (o FleetVCpuCountRangePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetVCpuCountRange) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

func (o FleetVCpuCountRangePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FleetVCpuCountRange) *int {
		if v == nil {
			return nil
		}
		return &v.Min
	}).(pulumi.IntPtrOutput)
}

type FleetVpcConfiguration struct {
	ResourceConfigurationArns []string `pulumi:"resourceConfigurationArns"`
}

// FleetVpcConfigurationInput is an input type that accepts FleetVpcConfigurationArgs and FleetVpcConfigurationOutput values.
// You can construct a concrete instance of `FleetVpcConfigurationInput` via:
//
//	FleetVpcConfigurationArgs{...}
type FleetVpcConfigurationInput interface {
	pulumi.Input

	ToFleetVpcConfigurationOutput() FleetVpcConfigurationOutput
	ToFleetVpcConfigurationOutputWithContext(context.Context) FleetVpcConfigurationOutput
}

type FleetVpcConfigurationArgs struct {
	ResourceConfigurationArns pulumi.StringArrayInput `pulumi:"resourceConfigurationArns"`
}

func (FleetVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetVpcConfiguration)(nil)).Elem()
}

func (i FleetVpcConfigurationArgs) ToFleetVpcConfigurationOutput() FleetVpcConfigurationOutput {
	return i.ToFleetVpcConfigurationOutputWithContext(context.Background())
}

func (i FleetVpcConfigurationArgs) ToFleetVpcConfigurationOutputWithContext(ctx context.Context) FleetVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetVpcConfigurationOutput)
}

func (i FleetVpcConfigurationArgs) ToFleetVpcConfigurationPtrOutput() FleetVpcConfigurationPtrOutput {
	return i.ToFleetVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i FleetVpcConfigurationArgs) ToFleetVpcConfigurationPtrOutputWithContext(ctx context.Context) FleetVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetVpcConfigurationOutput).ToFleetVpcConfigurationPtrOutputWithContext(ctx)
}

// FleetVpcConfigurationPtrInput is an input type that accepts FleetVpcConfigurationArgs, FleetVpcConfigurationPtr and FleetVpcConfigurationPtrOutput values.
// You can construct a concrete instance of `FleetVpcConfigurationPtrInput` via:
//
//	        FleetVpcConfigurationArgs{...}
//
//	or:
//
//	        nil
type FleetVpcConfigurationPtrInput interface {
	pulumi.Input

	ToFleetVpcConfigurationPtrOutput() FleetVpcConfigurationPtrOutput
	ToFleetVpcConfigurationPtrOutputWithContext(context.Context) FleetVpcConfigurationPtrOutput
}

type fleetVpcConfigurationPtrType FleetVpcConfigurationArgs

func FleetVpcConfigurationPtr(v *FleetVpcConfigurationArgs) FleetVpcConfigurationPtrInput {
	return (*fleetVpcConfigurationPtrType)(v)
}

func (*fleetVpcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetVpcConfiguration)(nil)).Elem()
}

func (i *fleetVpcConfigurationPtrType) ToFleetVpcConfigurationPtrOutput() FleetVpcConfigurationPtrOutput {
	return i.ToFleetVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i *fleetVpcConfigurationPtrType) ToFleetVpcConfigurationPtrOutputWithContext(ctx context.Context) FleetVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetVpcConfigurationPtrOutput)
}

type FleetVpcConfigurationOutput struct{ *pulumi.OutputState }

func (FleetVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FleetVpcConfiguration)(nil)).Elem()
}

func (o FleetVpcConfigurationOutput) ToFleetVpcConfigurationOutput() FleetVpcConfigurationOutput {
	return o
}

func (o FleetVpcConfigurationOutput) ToFleetVpcConfigurationOutputWithContext(ctx context.Context) FleetVpcConfigurationOutput {
	return o
}

func (o FleetVpcConfigurationOutput) ToFleetVpcConfigurationPtrOutput() FleetVpcConfigurationPtrOutput {
	return o.ToFleetVpcConfigurationPtrOutputWithContext(context.Background())
}

func (o FleetVpcConfigurationOutput) ToFleetVpcConfigurationPtrOutputWithContext(ctx context.Context) FleetVpcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FleetVpcConfiguration) *FleetVpcConfiguration {
		return &v
	}).(FleetVpcConfigurationPtrOutput)
}

func (o FleetVpcConfigurationOutput) ResourceConfigurationArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FleetVpcConfiguration) []string { return v.ResourceConfigurationArns }).(pulumi.StringArrayOutput)
}

type FleetVpcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (FleetVpcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FleetVpcConfiguration)(nil)).Elem()
}

func (o FleetVpcConfigurationPtrOutput) ToFleetVpcConfigurationPtrOutput() FleetVpcConfigurationPtrOutput {
	return o
}

func (o FleetVpcConfigurationPtrOutput) ToFleetVpcConfigurationPtrOutputWithContext(ctx context.Context) FleetVpcConfigurationPtrOutput {
	return o
}

func (o FleetVpcConfigurationPtrOutput) Elem() FleetVpcConfigurationOutput {
	return o.ApplyT(func(v *FleetVpcConfiguration) FleetVpcConfiguration {
		if v != nil {
			return *v
		}
		var ret FleetVpcConfiguration
		return ret
	}).(FleetVpcConfigurationOutput)
}

func (o FleetVpcConfigurationPtrOutput) ResourceConfigurationArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FleetVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ResourceConfigurationArns
	}).(pulumi.StringArrayOutput)
}

// A key-value pair to associate with a resource.
type LicenseEndpointTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

// A key-value pair to associate with a resource.
type MonitorTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type QueueJobAttachmentSettings struct {
	// The root prefix.
	RootPrefix string `pulumi:"rootPrefix"`
	// The Amazon S3 bucket name.
	S3BucketName string `pulumi:"s3BucketName"`
}

// QueueJobAttachmentSettingsInput is an input type that accepts QueueJobAttachmentSettingsArgs and QueueJobAttachmentSettingsOutput values.
// You can construct a concrete instance of `QueueJobAttachmentSettingsInput` via:
//
//	QueueJobAttachmentSettingsArgs{...}
type QueueJobAttachmentSettingsInput interface {
	pulumi.Input

	ToQueueJobAttachmentSettingsOutput() QueueJobAttachmentSettingsOutput
	ToQueueJobAttachmentSettingsOutputWithContext(context.Context) QueueJobAttachmentSettingsOutput
}

type QueueJobAttachmentSettingsArgs struct {
	// The root prefix.
	RootPrefix pulumi.StringInput `pulumi:"rootPrefix"`
	// The Amazon S3 bucket name.
	S3BucketName pulumi.StringInput `pulumi:"s3BucketName"`
}

func (QueueJobAttachmentSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueJobAttachmentSettings)(nil)).Elem()
}

func (i QueueJobAttachmentSettingsArgs) ToQueueJobAttachmentSettingsOutput() QueueJobAttachmentSettingsOutput {
	return i.ToQueueJobAttachmentSettingsOutputWithContext(context.Background())
}

func (i QueueJobAttachmentSettingsArgs) ToQueueJobAttachmentSettingsOutputWithContext(ctx context.Context) QueueJobAttachmentSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueJobAttachmentSettingsOutput)
}

func (i QueueJobAttachmentSettingsArgs) ToQueueJobAttachmentSettingsPtrOutput() QueueJobAttachmentSettingsPtrOutput {
	return i.ToQueueJobAttachmentSettingsPtrOutputWithContext(context.Background())
}

func (i QueueJobAttachmentSettingsArgs) ToQueueJobAttachmentSettingsPtrOutputWithContext(ctx context.Context) QueueJobAttachmentSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueJobAttachmentSettingsOutput).ToQueueJobAttachmentSettingsPtrOutputWithContext(ctx)
}

// QueueJobAttachmentSettingsPtrInput is an input type that accepts QueueJobAttachmentSettingsArgs, QueueJobAttachmentSettingsPtr and QueueJobAttachmentSettingsPtrOutput values.
// You can construct a concrete instance of `QueueJobAttachmentSettingsPtrInput` via:
//
//	        QueueJobAttachmentSettingsArgs{...}
//
//	or:
//
//	        nil
type QueueJobAttachmentSettingsPtrInput interface {
	pulumi.Input

	ToQueueJobAttachmentSettingsPtrOutput() QueueJobAttachmentSettingsPtrOutput
	ToQueueJobAttachmentSettingsPtrOutputWithContext(context.Context) QueueJobAttachmentSettingsPtrOutput
}

type queueJobAttachmentSettingsPtrType QueueJobAttachmentSettingsArgs

func QueueJobAttachmentSettingsPtr(v *QueueJobAttachmentSettingsArgs) QueueJobAttachmentSettingsPtrInput {
	return (*queueJobAttachmentSettingsPtrType)(v)
}

func (*queueJobAttachmentSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueJobAttachmentSettings)(nil)).Elem()
}

func (i *queueJobAttachmentSettingsPtrType) ToQueueJobAttachmentSettingsPtrOutput() QueueJobAttachmentSettingsPtrOutput {
	return i.ToQueueJobAttachmentSettingsPtrOutputWithContext(context.Background())
}

func (i *queueJobAttachmentSettingsPtrType) ToQueueJobAttachmentSettingsPtrOutputWithContext(ctx context.Context) QueueJobAttachmentSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueJobAttachmentSettingsPtrOutput)
}

type QueueJobAttachmentSettingsOutput struct{ *pulumi.OutputState }

func (QueueJobAttachmentSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueJobAttachmentSettings)(nil)).Elem()
}

func (o QueueJobAttachmentSettingsOutput) ToQueueJobAttachmentSettingsOutput() QueueJobAttachmentSettingsOutput {
	return o
}

func (o QueueJobAttachmentSettingsOutput) ToQueueJobAttachmentSettingsOutputWithContext(ctx context.Context) QueueJobAttachmentSettingsOutput {
	return o
}

func (o QueueJobAttachmentSettingsOutput) ToQueueJobAttachmentSettingsPtrOutput() QueueJobAttachmentSettingsPtrOutput {
	return o.ToQueueJobAttachmentSettingsPtrOutputWithContext(context.Background())
}

func (o QueueJobAttachmentSettingsOutput) ToQueueJobAttachmentSettingsPtrOutputWithContext(ctx context.Context) QueueJobAttachmentSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueJobAttachmentSettings) *QueueJobAttachmentSettings {
		return &v
	}).(QueueJobAttachmentSettingsPtrOutput)
}

// The root prefix.
func (o QueueJobAttachmentSettingsOutput) RootPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v QueueJobAttachmentSettings) string { return v.RootPrefix }).(pulumi.StringOutput)
}

// The Amazon S3 bucket name.
func (o QueueJobAttachmentSettingsOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v QueueJobAttachmentSettings) string { return v.S3BucketName }).(pulumi.StringOutput)
}

type QueueJobAttachmentSettingsPtrOutput struct{ *pulumi.OutputState }

func (QueueJobAttachmentSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueJobAttachmentSettings)(nil)).Elem()
}

func (o QueueJobAttachmentSettingsPtrOutput) ToQueueJobAttachmentSettingsPtrOutput() QueueJobAttachmentSettingsPtrOutput {
	return o
}

func (o QueueJobAttachmentSettingsPtrOutput) ToQueueJobAttachmentSettingsPtrOutputWithContext(ctx context.Context) QueueJobAttachmentSettingsPtrOutput {
	return o
}

func (o QueueJobAttachmentSettingsPtrOutput) Elem() QueueJobAttachmentSettingsOutput {
	return o.ApplyT(func(v *QueueJobAttachmentSettings) QueueJobAttachmentSettings {
		if v != nil {
			return *v
		}
		var ret QueueJobAttachmentSettings
		return ret
	}).(QueueJobAttachmentSettingsOutput)
}

// The root prefix.
func (o QueueJobAttachmentSettingsPtrOutput) RootPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueJobAttachmentSettings) *string {
		if v == nil {
			return nil
		}
		return &v.RootPrefix
	}).(pulumi.StringPtrOutput)
}

// The Amazon S3 bucket name.
func (o QueueJobAttachmentSettingsPtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueJobAttachmentSettings) *string {
		if v == nil {
			return nil
		}
		return &v.S3BucketName
	}).(pulumi.StringPtrOutput)
}

type QueueJobRunAsUser struct {
	// The user and group that the jobs in the queue run as.
	Posix *QueuePosixUser `pulumi:"posix"`
	// Specifies whether the job should run using the queue's system user or if the job should run using the worker agent system user.
	RunAs QueueRunAs `pulumi:"runAs"`
	// Identifies a Microsoft Windows user.
	Windows *QueueWindowsUser `pulumi:"windows"`
}

// QueueJobRunAsUserInput is an input type that accepts QueueJobRunAsUserArgs and QueueJobRunAsUserOutput values.
// You can construct a concrete instance of `QueueJobRunAsUserInput` via:
//
//	QueueJobRunAsUserArgs{...}
type QueueJobRunAsUserInput interface {
	pulumi.Input

	ToQueueJobRunAsUserOutput() QueueJobRunAsUserOutput
	ToQueueJobRunAsUserOutputWithContext(context.Context) QueueJobRunAsUserOutput
}

type QueueJobRunAsUserArgs struct {
	// The user and group that the jobs in the queue run as.
	Posix QueuePosixUserPtrInput `pulumi:"posix"`
	// Specifies whether the job should run using the queue's system user or if the job should run using the worker agent system user.
	RunAs QueueRunAsInput `pulumi:"runAs"`
	// Identifies a Microsoft Windows user.
	Windows QueueWindowsUserPtrInput `pulumi:"windows"`
}

func (QueueJobRunAsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueJobRunAsUser)(nil)).Elem()
}

func (i QueueJobRunAsUserArgs) ToQueueJobRunAsUserOutput() QueueJobRunAsUserOutput {
	return i.ToQueueJobRunAsUserOutputWithContext(context.Background())
}

func (i QueueJobRunAsUserArgs) ToQueueJobRunAsUserOutputWithContext(ctx context.Context) QueueJobRunAsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueJobRunAsUserOutput)
}

func (i QueueJobRunAsUserArgs) ToQueueJobRunAsUserPtrOutput() QueueJobRunAsUserPtrOutput {
	return i.ToQueueJobRunAsUserPtrOutputWithContext(context.Background())
}

func (i QueueJobRunAsUserArgs) ToQueueJobRunAsUserPtrOutputWithContext(ctx context.Context) QueueJobRunAsUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueJobRunAsUserOutput).ToQueueJobRunAsUserPtrOutputWithContext(ctx)
}

// QueueJobRunAsUserPtrInput is an input type that accepts QueueJobRunAsUserArgs, QueueJobRunAsUserPtr and QueueJobRunAsUserPtrOutput values.
// You can construct a concrete instance of `QueueJobRunAsUserPtrInput` via:
//
//	        QueueJobRunAsUserArgs{...}
//
//	or:
//
//	        nil
type QueueJobRunAsUserPtrInput interface {
	pulumi.Input

	ToQueueJobRunAsUserPtrOutput() QueueJobRunAsUserPtrOutput
	ToQueueJobRunAsUserPtrOutputWithContext(context.Context) QueueJobRunAsUserPtrOutput
}

type queueJobRunAsUserPtrType QueueJobRunAsUserArgs

func QueueJobRunAsUserPtr(v *QueueJobRunAsUserArgs) QueueJobRunAsUserPtrInput {
	return (*queueJobRunAsUserPtrType)(v)
}

func (*queueJobRunAsUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueJobRunAsUser)(nil)).Elem()
}

func (i *queueJobRunAsUserPtrType) ToQueueJobRunAsUserPtrOutput() QueueJobRunAsUserPtrOutput {
	return i.ToQueueJobRunAsUserPtrOutputWithContext(context.Background())
}

func (i *queueJobRunAsUserPtrType) ToQueueJobRunAsUserPtrOutputWithContext(ctx context.Context) QueueJobRunAsUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueJobRunAsUserPtrOutput)
}

type QueueJobRunAsUserOutput struct{ *pulumi.OutputState }

func (QueueJobRunAsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueJobRunAsUser)(nil)).Elem()
}

func (o QueueJobRunAsUserOutput) ToQueueJobRunAsUserOutput() QueueJobRunAsUserOutput {
	return o
}

func (o QueueJobRunAsUserOutput) ToQueueJobRunAsUserOutputWithContext(ctx context.Context) QueueJobRunAsUserOutput {
	return o
}

func (o QueueJobRunAsUserOutput) ToQueueJobRunAsUserPtrOutput() QueueJobRunAsUserPtrOutput {
	return o.ToQueueJobRunAsUserPtrOutputWithContext(context.Background())
}

func (o QueueJobRunAsUserOutput) ToQueueJobRunAsUserPtrOutputWithContext(ctx context.Context) QueueJobRunAsUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueJobRunAsUser) *QueueJobRunAsUser {
		return &v
	}).(QueueJobRunAsUserPtrOutput)
}

// The user and group that the jobs in the queue run as.
func (o QueueJobRunAsUserOutput) Posix() QueuePosixUserPtrOutput {
	return o.ApplyT(func(v QueueJobRunAsUser) *QueuePosixUser { return v.Posix }).(QueuePosixUserPtrOutput)
}

// Specifies whether the job should run using the queue's system user or if the job should run using the worker agent system user.
func (o QueueJobRunAsUserOutput) RunAs() QueueRunAsOutput {
	return o.ApplyT(func(v QueueJobRunAsUser) QueueRunAs { return v.RunAs }).(QueueRunAsOutput)
}

// Identifies a Microsoft Windows user.
func (o QueueJobRunAsUserOutput) Windows() QueueWindowsUserPtrOutput {
	return o.ApplyT(func(v QueueJobRunAsUser) *QueueWindowsUser { return v.Windows }).(QueueWindowsUserPtrOutput)
}

type QueueJobRunAsUserPtrOutput struct{ *pulumi.OutputState }

func (QueueJobRunAsUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueJobRunAsUser)(nil)).Elem()
}

func (o QueueJobRunAsUserPtrOutput) ToQueueJobRunAsUserPtrOutput() QueueJobRunAsUserPtrOutput {
	return o
}

func (o QueueJobRunAsUserPtrOutput) ToQueueJobRunAsUserPtrOutputWithContext(ctx context.Context) QueueJobRunAsUserPtrOutput {
	return o
}

func (o QueueJobRunAsUserPtrOutput) Elem() QueueJobRunAsUserOutput {
	return o.ApplyT(func(v *QueueJobRunAsUser) QueueJobRunAsUser {
		if v != nil {
			return *v
		}
		var ret QueueJobRunAsUser
		return ret
	}).(QueueJobRunAsUserOutput)
}

// The user and group that the jobs in the queue run as.
func (o QueueJobRunAsUserPtrOutput) Posix() QueuePosixUserPtrOutput {
	return o.ApplyT(func(v *QueueJobRunAsUser) *QueuePosixUser {
		if v == nil {
			return nil
		}
		return v.Posix
	}).(QueuePosixUserPtrOutput)
}

// Specifies whether the job should run using the queue's system user or if the job should run using the worker agent system user.
func (o QueueJobRunAsUserPtrOutput) RunAs() QueueRunAsPtrOutput {
	return o.ApplyT(func(v *QueueJobRunAsUser) *QueueRunAs {
		if v == nil {
			return nil
		}
		return &v.RunAs
	}).(QueueRunAsPtrOutput)
}

// Identifies a Microsoft Windows user.
func (o QueueJobRunAsUserPtrOutput) Windows() QueueWindowsUserPtrOutput {
	return o.ApplyT(func(v *QueueJobRunAsUser) *QueueWindowsUser {
		if v == nil {
			return nil
		}
		return v.Windows
	}).(QueueWindowsUserPtrOutput)
}

type QueuePosixUser struct {
	// The name of the POSIX user's group.
	Group string `pulumi:"group"`
	// The name of the POSIX user.
	User string `pulumi:"user"`
}

// QueuePosixUserInput is an input type that accepts QueuePosixUserArgs and QueuePosixUserOutput values.
// You can construct a concrete instance of `QueuePosixUserInput` via:
//
//	QueuePosixUserArgs{...}
type QueuePosixUserInput interface {
	pulumi.Input

	ToQueuePosixUserOutput() QueuePosixUserOutput
	ToQueuePosixUserOutputWithContext(context.Context) QueuePosixUserOutput
}

type QueuePosixUserArgs struct {
	// The name of the POSIX user's group.
	Group pulumi.StringInput `pulumi:"group"`
	// The name of the POSIX user.
	User pulumi.StringInput `pulumi:"user"`
}

func (QueuePosixUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueuePosixUser)(nil)).Elem()
}

func (i QueuePosixUserArgs) ToQueuePosixUserOutput() QueuePosixUserOutput {
	return i.ToQueuePosixUserOutputWithContext(context.Background())
}

func (i QueuePosixUserArgs) ToQueuePosixUserOutputWithContext(ctx context.Context) QueuePosixUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueuePosixUserOutput)
}

func (i QueuePosixUserArgs) ToQueuePosixUserPtrOutput() QueuePosixUserPtrOutput {
	return i.ToQueuePosixUserPtrOutputWithContext(context.Background())
}

func (i QueuePosixUserArgs) ToQueuePosixUserPtrOutputWithContext(ctx context.Context) QueuePosixUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueuePosixUserOutput).ToQueuePosixUserPtrOutputWithContext(ctx)
}

// QueuePosixUserPtrInput is an input type that accepts QueuePosixUserArgs, QueuePosixUserPtr and QueuePosixUserPtrOutput values.
// You can construct a concrete instance of `QueuePosixUserPtrInput` via:
//
//	        QueuePosixUserArgs{...}
//
//	or:
//
//	        nil
type QueuePosixUserPtrInput interface {
	pulumi.Input

	ToQueuePosixUserPtrOutput() QueuePosixUserPtrOutput
	ToQueuePosixUserPtrOutputWithContext(context.Context) QueuePosixUserPtrOutput
}

type queuePosixUserPtrType QueuePosixUserArgs

func QueuePosixUserPtr(v *QueuePosixUserArgs) QueuePosixUserPtrInput {
	return (*queuePosixUserPtrType)(v)
}

func (*queuePosixUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueuePosixUser)(nil)).Elem()
}

func (i *queuePosixUserPtrType) ToQueuePosixUserPtrOutput() QueuePosixUserPtrOutput {
	return i.ToQueuePosixUserPtrOutputWithContext(context.Background())
}

func (i *queuePosixUserPtrType) ToQueuePosixUserPtrOutputWithContext(ctx context.Context) QueuePosixUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueuePosixUserPtrOutput)
}

type QueuePosixUserOutput struct{ *pulumi.OutputState }

func (QueuePosixUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueuePosixUser)(nil)).Elem()
}

func (o QueuePosixUserOutput) ToQueuePosixUserOutput() QueuePosixUserOutput {
	return o
}

func (o QueuePosixUserOutput) ToQueuePosixUserOutputWithContext(ctx context.Context) QueuePosixUserOutput {
	return o
}

func (o QueuePosixUserOutput) ToQueuePosixUserPtrOutput() QueuePosixUserPtrOutput {
	return o.ToQueuePosixUserPtrOutputWithContext(context.Background())
}

func (o QueuePosixUserOutput) ToQueuePosixUserPtrOutputWithContext(ctx context.Context) QueuePosixUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueuePosixUser) *QueuePosixUser {
		return &v
	}).(QueuePosixUserPtrOutput)
}

// The name of the POSIX user's group.
func (o QueuePosixUserOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v QueuePosixUser) string { return v.Group }).(pulumi.StringOutput)
}

// The name of the POSIX user.
func (o QueuePosixUserOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v QueuePosixUser) string { return v.User }).(pulumi.StringOutput)
}

type QueuePosixUserPtrOutput struct{ *pulumi.OutputState }

func (QueuePosixUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueuePosixUser)(nil)).Elem()
}

func (o QueuePosixUserPtrOutput) ToQueuePosixUserPtrOutput() QueuePosixUserPtrOutput {
	return o
}

func (o QueuePosixUserPtrOutput) ToQueuePosixUserPtrOutputWithContext(ctx context.Context) QueuePosixUserPtrOutput {
	return o
}

func (o QueuePosixUserPtrOutput) Elem() QueuePosixUserOutput {
	return o.ApplyT(func(v *QueuePosixUser) QueuePosixUser {
		if v != nil {
			return *v
		}
		var ret QueuePosixUser
		return ret
	}).(QueuePosixUserOutput)
}

// The name of the POSIX user's group.
func (o QueuePosixUserPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueuePosixUser) *string {
		if v == nil {
			return nil
		}
		return &v.Group
	}).(pulumi.StringPtrOutput)
}

// The name of the POSIX user.
func (o QueuePosixUserPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueuePosixUser) *string {
		if v == nil {
			return nil
		}
		return &v.User
	}).(pulumi.StringPtrOutput)
}

// A key-value pair to associate with a resource.
type QueueTag struct {
	// The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Key string `pulumi:"key"`
	// The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
	Value string `pulumi:"value"`
}

type QueueWindowsUser struct {
	// The password ARN for the Windows user.
	PasswordArn string `pulumi:"passwordArn"`
	// The user.
	User string `pulumi:"user"`
}

// QueueWindowsUserInput is an input type that accepts QueueWindowsUserArgs and QueueWindowsUserOutput values.
// You can construct a concrete instance of `QueueWindowsUserInput` via:
//
//	QueueWindowsUserArgs{...}
type QueueWindowsUserInput interface {
	pulumi.Input

	ToQueueWindowsUserOutput() QueueWindowsUserOutput
	ToQueueWindowsUserOutputWithContext(context.Context) QueueWindowsUserOutput
}

type QueueWindowsUserArgs struct {
	// The password ARN for the Windows user.
	PasswordArn pulumi.StringInput `pulumi:"passwordArn"`
	// The user.
	User pulumi.StringInput `pulumi:"user"`
}

func (QueueWindowsUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueWindowsUser)(nil)).Elem()
}

func (i QueueWindowsUserArgs) ToQueueWindowsUserOutput() QueueWindowsUserOutput {
	return i.ToQueueWindowsUserOutputWithContext(context.Background())
}

func (i QueueWindowsUserArgs) ToQueueWindowsUserOutputWithContext(ctx context.Context) QueueWindowsUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueWindowsUserOutput)
}

func (i QueueWindowsUserArgs) ToQueueWindowsUserPtrOutput() QueueWindowsUserPtrOutput {
	return i.ToQueueWindowsUserPtrOutputWithContext(context.Background())
}

func (i QueueWindowsUserArgs) ToQueueWindowsUserPtrOutputWithContext(ctx context.Context) QueueWindowsUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueWindowsUserOutput).ToQueueWindowsUserPtrOutputWithContext(ctx)
}

// QueueWindowsUserPtrInput is an input type that accepts QueueWindowsUserArgs, QueueWindowsUserPtr and QueueWindowsUserPtrOutput values.
// You can construct a concrete instance of `QueueWindowsUserPtrInput` via:
//
//	        QueueWindowsUserArgs{...}
//
//	or:
//
//	        nil
type QueueWindowsUserPtrInput interface {
	pulumi.Input

	ToQueueWindowsUserPtrOutput() QueueWindowsUserPtrOutput
	ToQueueWindowsUserPtrOutputWithContext(context.Context) QueueWindowsUserPtrOutput
}

type queueWindowsUserPtrType QueueWindowsUserArgs

func QueueWindowsUserPtr(v *QueueWindowsUserArgs) QueueWindowsUserPtrInput {
	return (*queueWindowsUserPtrType)(v)
}

func (*queueWindowsUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueWindowsUser)(nil)).Elem()
}

func (i *queueWindowsUserPtrType) ToQueueWindowsUserPtrOutput() QueueWindowsUserPtrOutput {
	return i.ToQueueWindowsUserPtrOutputWithContext(context.Background())
}

func (i *queueWindowsUserPtrType) ToQueueWindowsUserPtrOutputWithContext(ctx context.Context) QueueWindowsUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QueueWindowsUserPtrOutput)
}

type QueueWindowsUserOutput struct{ *pulumi.OutputState }

func (QueueWindowsUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QueueWindowsUser)(nil)).Elem()
}

func (o QueueWindowsUserOutput) ToQueueWindowsUserOutput() QueueWindowsUserOutput {
	return o
}

func (o QueueWindowsUserOutput) ToQueueWindowsUserOutputWithContext(ctx context.Context) QueueWindowsUserOutput {
	return o
}

func (o QueueWindowsUserOutput) ToQueueWindowsUserPtrOutput() QueueWindowsUserPtrOutput {
	return o.ToQueueWindowsUserPtrOutputWithContext(context.Background())
}

func (o QueueWindowsUserOutput) ToQueueWindowsUserPtrOutputWithContext(ctx context.Context) QueueWindowsUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QueueWindowsUser) *QueueWindowsUser {
		return &v
	}).(QueueWindowsUserPtrOutput)
}

// The password ARN for the Windows user.
func (o QueueWindowsUserOutput) PasswordArn() pulumi.StringOutput {
	return o.ApplyT(func(v QueueWindowsUser) string { return v.PasswordArn }).(pulumi.StringOutput)
}

// The user.
func (o QueueWindowsUserOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v QueueWindowsUser) string { return v.User }).(pulumi.StringOutput)
}

type QueueWindowsUserPtrOutput struct{ *pulumi.OutputState }

func (QueueWindowsUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QueueWindowsUser)(nil)).Elem()
}

func (o QueueWindowsUserPtrOutput) ToQueueWindowsUserPtrOutput() QueueWindowsUserPtrOutput {
	return o
}

func (o QueueWindowsUserPtrOutput) ToQueueWindowsUserPtrOutputWithContext(ctx context.Context) QueueWindowsUserPtrOutput {
	return o
}

func (o QueueWindowsUserPtrOutput) Elem() QueueWindowsUserOutput {
	return o.ApplyT(func(v *QueueWindowsUser) QueueWindowsUser {
		if v != nil {
			return *v
		}
		var ret QueueWindowsUser
		return ret
	}).(QueueWindowsUserOutput)
}

// The password ARN for the Windows user.
func (o QueueWindowsUserPtrOutput) PasswordArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueWindowsUser) *string {
		if v == nil {
			return nil
		}
		return &v.PasswordArn
	}).(pulumi.StringPtrOutput)
}

// The user.
func (o QueueWindowsUserPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QueueWindowsUser) *string {
		if v == nil {
			return nil
		}
		return &v.User
	}).(pulumi.StringPtrOutput)
}

type StorageProfileFileSystemLocation struct {
	// The location name.
	Name string `pulumi:"name"`
	// The file path.
	Path string `pulumi:"path"`
	// The type of file.
	Type StorageProfileFileSystemLocationType `pulumi:"type"`
}

// StorageProfileFileSystemLocationInput is an input type that accepts StorageProfileFileSystemLocationArgs and StorageProfileFileSystemLocationOutput values.
// You can construct a concrete instance of `StorageProfileFileSystemLocationInput` via:
//
//	StorageProfileFileSystemLocationArgs{...}
type StorageProfileFileSystemLocationInput interface {
	pulumi.Input

	ToStorageProfileFileSystemLocationOutput() StorageProfileFileSystemLocationOutput
	ToStorageProfileFileSystemLocationOutputWithContext(context.Context) StorageProfileFileSystemLocationOutput
}

type StorageProfileFileSystemLocationArgs struct {
	// The location name.
	Name pulumi.StringInput `pulumi:"name"`
	// The file path.
	Path pulumi.StringInput `pulumi:"path"`
	// The type of file.
	Type StorageProfileFileSystemLocationTypeInput `pulumi:"type"`
}

func (StorageProfileFileSystemLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileFileSystemLocation)(nil)).Elem()
}

func (i StorageProfileFileSystemLocationArgs) ToStorageProfileFileSystemLocationOutput() StorageProfileFileSystemLocationOutput {
	return i.ToStorageProfileFileSystemLocationOutputWithContext(context.Background())
}

func (i StorageProfileFileSystemLocationArgs) ToStorageProfileFileSystemLocationOutputWithContext(ctx context.Context) StorageProfileFileSystemLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileFileSystemLocationOutput)
}

// StorageProfileFileSystemLocationArrayInput is an input type that accepts StorageProfileFileSystemLocationArray and StorageProfileFileSystemLocationArrayOutput values.
// You can construct a concrete instance of `StorageProfileFileSystemLocationArrayInput` via:
//
//	StorageProfileFileSystemLocationArray{ StorageProfileFileSystemLocationArgs{...} }
type StorageProfileFileSystemLocationArrayInput interface {
	pulumi.Input

	ToStorageProfileFileSystemLocationArrayOutput() StorageProfileFileSystemLocationArrayOutput
	ToStorageProfileFileSystemLocationArrayOutputWithContext(context.Context) StorageProfileFileSystemLocationArrayOutput
}

type StorageProfileFileSystemLocationArray []StorageProfileFileSystemLocationInput

func (StorageProfileFileSystemLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageProfileFileSystemLocation)(nil)).Elem()
}

func (i StorageProfileFileSystemLocationArray) ToStorageProfileFileSystemLocationArrayOutput() StorageProfileFileSystemLocationArrayOutput {
	return i.ToStorageProfileFileSystemLocationArrayOutputWithContext(context.Background())
}

func (i StorageProfileFileSystemLocationArray) ToStorageProfileFileSystemLocationArrayOutputWithContext(ctx context.Context) StorageProfileFileSystemLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileFileSystemLocationArrayOutput)
}

type StorageProfileFileSystemLocationOutput struct{ *pulumi.OutputState }

func (StorageProfileFileSystemLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StorageProfileFileSystemLocation)(nil)).Elem()
}

func (o StorageProfileFileSystemLocationOutput) ToStorageProfileFileSystemLocationOutput() StorageProfileFileSystemLocationOutput {
	return o
}

func (o StorageProfileFileSystemLocationOutput) ToStorageProfileFileSystemLocationOutputWithContext(ctx context.Context) StorageProfileFileSystemLocationOutput {
	return o
}

// The location name.
func (o StorageProfileFileSystemLocationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StorageProfileFileSystemLocation) string { return v.Name }).(pulumi.StringOutput)
}

// The file path.
func (o StorageProfileFileSystemLocationOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v StorageProfileFileSystemLocation) string { return v.Path }).(pulumi.StringOutput)
}

// The type of file.
func (o StorageProfileFileSystemLocationOutput) Type() StorageProfileFileSystemLocationTypeOutput {
	return o.ApplyT(func(v StorageProfileFileSystemLocation) StorageProfileFileSystemLocationType { return v.Type }).(StorageProfileFileSystemLocationTypeOutput)
}

type StorageProfileFileSystemLocationArrayOutput struct{ *pulumi.OutputState }

func (StorageProfileFileSystemLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StorageProfileFileSystemLocation)(nil)).Elem()
}

func (o StorageProfileFileSystemLocationArrayOutput) ToStorageProfileFileSystemLocationArrayOutput() StorageProfileFileSystemLocationArrayOutput {
	return o
}

func (o StorageProfileFileSystemLocationArrayOutput) ToStorageProfileFileSystemLocationArrayOutputWithContext(ctx context.Context) StorageProfileFileSystemLocationArrayOutput {
	return o
}

func (o StorageProfileFileSystemLocationArrayOutput) Index(i pulumi.IntInput) StorageProfileFileSystemLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StorageProfileFileSystemLocation {
		return vs[0].([]StorageProfileFileSystemLocation)[vs[1].(int)]
	}).(StorageProfileFileSystemLocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FleetAcceleratorCapabilitiesInput)(nil)).Elem(), FleetAcceleratorCapabilitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetAcceleratorCapabilitiesPtrInput)(nil)).Elem(), FleetAcceleratorCapabilitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetAcceleratorCountRangeInput)(nil)).Elem(), FleetAcceleratorCountRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetAcceleratorCountRangePtrInput)(nil)).Elem(), FleetAcceleratorCountRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetAcceleratorSelectionInput)(nil)).Elem(), FleetAcceleratorSelectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetAcceleratorSelectionArrayInput)(nil)).Elem(), FleetAcceleratorSelectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetAcceleratorTotalMemoryMiBRangeInput)(nil)).Elem(), FleetAcceleratorTotalMemoryMiBRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetAcceleratorTotalMemoryMiBRangePtrInput)(nil)).Elem(), FleetAcceleratorTotalMemoryMiBRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetAmountCapabilityInput)(nil)).Elem(), FleetAmountCapabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetAmountCapabilityArrayInput)(nil)).Elem(), FleetAmountCapabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetAttributeCapabilityInput)(nil)).Elem(), FleetAttributeCapabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetAttributeCapabilityArrayInput)(nil)).Elem(), FleetAttributeCapabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetConfiguration0PropertiesInput)(nil)).Elem(), FleetConfiguration0PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetConfiguration1PropertiesInput)(nil)).Elem(), FleetConfiguration1PropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetCustomerManagedFleetConfigurationInput)(nil)).Elem(), FleetCustomerManagedFleetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetCustomerManagedWorkerCapabilitiesInput)(nil)).Elem(), FleetCustomerManagedWorkerCapabilitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetEc2EbsVolumeInput)(nil)).Elem(), FleetEc2EbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetEc2EbsVolumePtrInput)(nil)).Elem(), FleetEc2EbsVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetHostConfigurationInput)(nil)).Elem(), FleetHostConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetHostConfigurationPtrInput)(nil)).Elem(), FleetHostConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetMemoryMiBRangeInput)(nil)).Elem(), FleetMemoryMiBRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetServiceManagedEc2FleetConfigurationInput)(nil)).Elem(), FleetServiceManagedEc2FleetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetServiceManagedEc2InstanceCapabilitiesInput)(nil)).Elem(), FleetServiceManagedEc2InstanceCapabilitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetServiceManagedEc2InstanceMarketOptionsInput)(nil)).Elem(), FleetServiceManagedEc2InstanceMarketOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetVCpuCountRangeInput)(nil)).Elem(), FleetVCpuCountRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetVpcConfigurationInput)(nil)).Elem(), FleetVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetVpcConfigurationPtrInput)(nil)).Elem(), FleetVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueJobAttachmentSettingsInput)(nil)).Elem(), QueueJobAttachmentSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueJobAttachmentSettingsPtrInput)(nil)).Elem(), QueueJobAttachmentSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueJobRunAsUserInput)(nil)).Elem(), QueueJobRunAsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueJobRunAsUserPtrInput)(nil)).Elem(), QueueJobRunAsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueuePosixUserInput)(nil)).Elem(), QueuePosixUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueuePosixUserPtrInput)(nil)).Elem(), QueuePosixUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueWindowsUserInput)(nil)).Elem(), QueueWindowsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QueueWindowsUserPtrInput)(nil)).Elem(), QueueWindowsUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageProfileFileSystemLocationInput)(nil)).Elem(), StorageProfileFileSystemLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageProfileFileSystemLocationArrayInput)(nil)).Elem(), StorageProfileFileSystemLocationArray{})
	pulumi.RegisterOutputType(FleetAcceleratorCapabilitiesOutput{})
	pulumi.RegisterOutputType(FleetAcceleratorCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(FleetAcceleratorCountRangeOutput{})
	pulumi.RegisterOutputType(FleetAcceleratorCountRangePtrOutput{})
	pulumi.RegisterOutputType(FleetAcceleratorSelectionOutput{})
	pulumi.RegisterOutputType(FleetAcceleratorSelectionArrayOutput{})
	pulumi.RegisterOutputType(FleetAcceleratorTotalMemoryMiBRangeOutput{})
	pulumi.RegisterOutputType(FleetAcceleratorTotalMemoryMiBRangePtrOutput{})
	pulumi.RegisterOutputType(FleetAmountCapabilityOutput{})
	pulumi.RegisterOutputType(FleetAmountCapabilityArrayOutput{})
	pulumi.RegisterOutputType(FleetAttributeCapabilityOutput{})
	pulumi.RegisterOutputType(FleetAttributeCapabilityArrayOutput{})
	pulumi.RegisterOutputType(FleetCapabilitiesOutput{})
	pulumi.RegisterOutputType(FleetCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(FleetConfiguration0PropertiesOutput{})
	pulumi.RegisterOutputType(FleetConfiguration0PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FleetConfiguration1PropertiesOutput{})
	pulumi.RegisterOutputType(FleetConfiguration1PropertiesPtrOutput{})
	pulumi.RegisterOutputType(FleetCustomerManagedFleetConfigurationOutput{})
	pulumi.RegisterOutputType(FleetCustomerManagedFleetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FleetCustomerManagedWorkerCapabilitiesOutput{})
	pulumi.RegisterOutputType(FleetCustomerManagedWorkerCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(FleetEc2EbsVolumeOutput{})
	pulumi.RegisterOutputType(FleetEc2EbsVolumePtrOutput{})
	pulumi.RegisterOutputType(FleetHostConfigurationOutput{})
	pulumi.RegisterOutputType(FleetHostConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FleetMemoryMiBRangeOutput{})
	pulumi.RegisterOutputType(FleetMemoryMiBRangePtrOutput{})
	pulumi.RegisterOutputType(FleetServiceManagedEc2FleetConfigurationOutput{})
	pulumi.RegisterOutputType(FleetServiceManagedEc2FleetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(FleetServiceManagedEc2InstanceCapabilitiesOutput{})
	pulumi.RegisterOutputType(FleetServiceManagedEc2InstanceCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(FleetServiceManagedEc2InstanceMarketOptionsOutput{})
	pulumi.RegisterOutputType(FleetServiceManagedEc2InstanceMarketOptionsPtrOutput{})
	pulumi.RegisterOutputType(FleetVCpuCountRangeOutput{})
	pulumi.RegisterOutputType(FleetVCpuCountRangePtrOutput{})
	pulumi.RegisterOutputType(FleetVpcConfigurationOutput{})
	pulumi.RegisterOutputType(FleetVpcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(QueueJobAttachmentSettingsOutput{})
	pulumi.RegisterOutputType(QueueJobAttachmentSettingsPtrOutput{})
	pulumi.RegisterOutputType(QueueJobRunAsUserOutput{})
	pulumi.RegisterOutputType(QueueJobRunAsUserPtrOutput{})
	pulumi.RegisterOutputType(QueuePosixUserOutput{})
	pulumi.RegisterOutputType(QueuePosixUserPtrOutput{})
	pulumi.RegisterOutputType(QueueWindowsUserOutput{})
	pulumi.RegisterOutputType(QueueWindowsUserPtrOutput{})
	pulumi.RegisterOutputType(StorageProfileFileSystemLocationOutput{})
	pulumi.RegisterOutputType(StorageProfileFileSystemLocationArrayOutput{})
}
