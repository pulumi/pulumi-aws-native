// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deadline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Deadline::Limit Resource Type
func LookupLimit(ctx *pulumi.Context, args *LookupLimitArgs, opts ...pulumi.InvokeOption) (*LookupLimitResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLimitResult
	err := ctx.Invoke("aws-native:deadline:getLimit", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLimitArgs struct {
	FarmId  string `pulumi:"farmId"`
	LimitId string `pulumi:"limitId"`
}

type LookupLimitResult struct {
	CurrentCount *int    `pulumi:"currentCount"`
	Description  *string `pulumi:"description"`
	DisplayName  *string `pulumi:"displayName"`
	LimitId      *string `pulumi:"limitId"`
	MaxCount     *int    `pulumi:"maxCount"`
}

func LookupLimitOutput(ctx *pulumi.Context, args LookupLimitOutputArgs, opts ...pulumi.InvokeOption) LookupLimitResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLimitResultOutput, error) {
			args := v.(LookupLimitArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:deadline:getLimit", args, LookupLimitResultOutput{}, options).(LookupLimitResultOutput), nil
		}).(LookupLimitResultOutput)
}

type LookupLimitOutputArgs struct {
	FarmId  pulumi.StringInput `pulumi:"farmId"`
	LimitId pulumi.StringInput `pulumi:"limitId"`
}

func (LookupLimitOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLimitArgs)(nil)).Elem()
}

type LookupLimitResultOutput struct{ *pulumi.OutputState }

func (LookupLimitResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLimitResult)(nil)).Elem()
}

func (o LookupLimitResultOutput) ToLookupLimitResultOutput() LookupLimitResultOutput {
	return o
}

func (o LookupLimitResultOutput) ToLookupLimitResultOutputWithContext(ctx context.Context) LookupLimitResultOutput {
	return o
}

func (o LookupLimitResultOutput) CurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupLimitResult) *int { return v.CurrentCount }).(pulumi.IntPtrOutput)
}

func (o LookupLimitResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLimitResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupLimitResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLimitResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupLimitResultOutput) LimitId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLimitResult) *string { return v.LimitId }).(pulumi.StringPtrOutput)
}

func (o LookupLimitResultOutput) MaxCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupLimitResult) *int { return v.MaxCount }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLimitResultOutput{})
}
