// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deadline

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Deadline::StorageProfile Resource Type
type StorageProfile struct {
	pulumi.CustomResourceState

	// The display name of the storage profile summary to update.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The unique identifier of the farm that contains the storage profile.
	FarmId pulumi.StringPtrOutput `pulumi:"farmId"`
	// Operating system specific file system path to the storage location.
	FileSystemLocations StorageProfileFileSystemLocationArrayOutput `pulumi:"fileSystemLocations"`
	// The operating system (OS) family.
	OsFamily StorageProfileOperatingSystemFamilyOutput `pulumi:"osFamily"`
	// The storage profile ID.
	StorageProfileId pulumi.StringOutput `pulumi:"storageProfileId"`
}

// NewStorageProfile registers a new resource with the given unique name, arguments, and options.
func NewStorageProfile(ctx *pulumi.Context,
	name string, args *StorageProfileArgs, opts ...pulumi.ResourceOption) (*StorageProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.OsFamily == nil {
		return nil, errors.New("invalid value for required argument 'OsFamily'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"farmId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StorageProfile
	err := ctx.RegisterResource("aws-native:deadline:StorageProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageProfile gets an existing StorageProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageProfileState, opts ...pulumi.ResourceOption) (*StorageProfile, error) {
	var resource StorageProfile
	err := ctx.ReadResource("aws-native:deadline:StorageProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageProfile resources.
type storageProfileState struct {
}

type StorageProfileState struct {
}

func (StorageProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageProfileState)(nil)).Elem()
}

type storageProfileArgs struct {
	// The display name of the storage profile summary to update.
	DisplayName string `pulumi:"displayName"`
	// The unique identifier of the farm that contains the storage profile.
	FarmId *string `pulumi:"farmId"`
	// Operating system specific file system path to the storage location.
	FileSystemLocations []StorageProfileFileSystemLocation `pulumi:"fileSystemLocations"`
	// The operating system (OS) family.
	OsFamily StorageProfileOperatingSystemFamily `pulumi:"osFamily"`
}

// The set of arguments for constructing a StorageProfile resource.
type StorageProfileArgs struct {
	// The display name of the storage profile summary to update.
	DisplayName pulumi.StringInput
	// The unique identifier of the farm that contains the storage profile.
	FarmId pulumi.StringPtrInput
	// Operating system specific file system path to the storage location.
	FileSystemLocations StorageProfileFileSystemLocationArrayInput
	// The operating system (OS) family.
	OsFamily StorageProfileOperatingSystemFamilyInput
}

func (StorageProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageProfileArgs)(nil)).Elem()
}

type StorageProfileInput interface {
	pulumi.Input

	ToStorageProfileOutput() StorageProfileOutput
	ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput
}

func (*StorageProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (i *StorageProfile) ToStorageProfileOutput() StorageProfileOutput {
	return i.ToStorageProfileOutputWithContext(context.Background())
}

func (i *StorageProfile) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageProfileOutput)
}

type StorageProfileOutput struct{ *pulumi.OutputState }

func (StorageProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageProfile)(nil)).Elem()
}

func (o StorageProfileOutput) ToStorageProfileOutput() StorageProfileOutput {
	return o
}

func (o StorageProfileOutput) ToStorageProfileOutputWithContext(ctx context.Context) StorageProfileOutput {
	return o
}

// The display name of the storage profile summary to update.
func (o StorageProfileOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfile) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The unique identifier of the farm that contains the storage profile.
func (o StorageProfileOutput) FarmId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StorageProfile) pulumi.StringPtrOutput { return v.FarmId }).(pulumi.StringPtrOutput)
}

// Operating system specific file system path to the storage location.
func (o StorageProfileOutput) FileSystemLocations() StorageProfileFileSystemLocationArrayOutput {
	return o.ApplyT(func(v *StorageProfile) StorageProfileFileSystemLocationArrayOutput { return v.FileSystemLocations }).(StorageProfileFileSystemLocationArrayOutput)
}

// The operating system (OS) family.
func (o StorageProfileOutput) OsFamily() StorageProfileOperatingSystemFamilyOutput {
	return o.ApplyT(func(v *StorageProfile) StorageProfileOperatingSystemFamilyOutput { return v.OsFamily }).(StorageProfileOperatingSystemFamilyOutput)
}

// The storage profile ID.
func (o StorageProfileOutput) StorageProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageProfile) pulumi.StringOutput { return v.StorageProfileId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StorageProfileInput)(nil)).Elem(), &StorageProfile{})
	pulumi.RegisterOutputType(StorageProfileOutput{})
}
