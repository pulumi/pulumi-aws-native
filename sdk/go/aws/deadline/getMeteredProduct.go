// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deadline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Deadline::MeteredProduct Resource Type
func LookupMeteredProduct(ctx *pulumi.Context, args *LookupMeteredProductArgs, opts ...pulumi.InvokeOption) (*LookupMeteredProductResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMeteredProductResult
	err := ctx.Invoke("aws-native:deadline:getMeteredProduct", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupMeteredProductArgs struct {
	// The Amazon Resource Name (ARN) of the metered product.
	Arn string `pulumi:"arn"`
}

type LookupMeteredProductResult struct {
	// The Amazon Resource Name (ARN) of the metered product.
	Arn *string `pulumi:"arn"`
	// The family to which the metered product belongs.
	Family *string `pulumi:"family"`
	// The port on which the metered product should run.
	Port *int `pulumi:"port"`
	// The vendor.
	Vendor *string `pulumi:"vendor"`
}

func LookupMeteredProductOutput(ctx *pulumi.Context, args LookupMeteredProductOutputArgs, opts ...pulumi.InvokeOption) LookupMeteredProductResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMeteredProductResultOutput, error) {
			args := v.(LookupMeteredProductArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:deadline:getMeteredProduct", args, LookupMeteredProductResultOutput{}, options).(LookupMeteredProductResultOutput), nil
		}).(LookupMeteredProductResultOutput)
}

type LookupMeteredProductOutputArgs struct {
	// The Amazon Resource Name (ARN) of the metered product.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupMeteredProductOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMeteredProductArgs)(nil)).Elem()
}

type LookupMeteredProductResultOutput struct{ *pulumi.OutputState }

func (LookupMeteredProductResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMeteredProductResult)(nil)).Elem()
}

func (o LookupMeteredProductResultOutput) ToLookupMeteredProductResultOutput() LookupMeteredProductResultOutput {
	return o
}

func (o LookupMeteredProductResultOutput) ToLookupMeteredProductResultOutputWithContext(ctx context.Context) LookupMeteredProductResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the metered product.
func (o LookupMeteredProductResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMeteredProductResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// The family to which the metered product belongs.
func (o LookupMeteredProductResultOutput) Family() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMeteredProductResult) *string { return v.Family }).(pulumi.StringPtrOutput)
}

// The port on which the metered product should run.
func (o LookupMeteredProductResultOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupMeteredProductResult) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// The vendor.
func (o LookupMeteredProductResultOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMeteredProductResult) *string { return v.Vendor }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMeteredProductResultOutput{})
}
