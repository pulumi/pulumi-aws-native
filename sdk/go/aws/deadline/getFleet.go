// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deadline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Deadline::Fleet Resource Type
func LookupFleet(ctx *pulumi.Context, args *LookupFleetArgs, opts ...pulumi.InvokeOption) (*LookupFleetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFleetResult
	err := ctx.Invoke("aws-native:deadline:getFleet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFleetArgs struct {
	Arn string `pulumi:"arn"`
}

type LookupFleetResult struct {
	Arn            *string            `pulumi:"arn"`
	Capabilities   *FleetCapabilities `pulumi:"capabilities"`
	Configuration  interface{}        `pulumi:"configuration"`
	Description    *string            `pulumi:"description"`
	DisplayName    *string            `pulumi:"displayName"`
	FleetId        *string            `pulumi:"fleetId"`
	MaxWorkerCount *int               `pulumi:"maxWorkerCount"`
	MinWorkerCount *int               `pulumi:"minWorkerCount"`
	RoleArn        *string            `pulumi:"roleArn"`
	Status         *FleetStatus       `pulumi:"status"`
	WorkerCount    *int               `pulumi:"workerCount"`
}

func LookupFleetOutput(ctx *pulumi.Context, args LookupFleetOutputArgs, opts ...pulumi.InvokeOption) LookupFleetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFleetResult, error) {
			args := v.(LookupFleetArgs)
			r, err := LookupFleet(ctx, &args, opts...)
			var s LookupFleetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFleetResultOutput)
}

type LookupFleetOutputArgs struct {
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupFleetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetArgs)(nil)).Elem()
}

type LookupFleetResultOutput struct{ *pulumi.OutputState }

func (LookupFleetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetResult)(nil)).Elem()
}

func (o LookupFleetResultOutput) ToLookupFleetResultOutput() LookupFleetResultOutput {
	return o
}

func (o LookupFleetResultOutput) ToLookupFleetResultOutputWithContext(ctx context.Context) LookupFleetResultOutput {
	return o
}

func (o LookupFleetResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupFleetResultOutput) Capabilities() FleetCapabilitiesPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *FleetCapabilities { return v.Capabilities }).(FleetCapabilitiesPtrOutput)
}

func (o LookupFleetResultOutput) Configuration() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupFleetResult) interface{} { return v.Configuration }).(pulumi.AnyOutput)
}

func (o LookupFleetResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupFleetResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o LookupFleetResultOutput) FleetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *string { return v.FleetId }).(pulumi.StringPtrOutput)
}

func (o LookupFleetResultOutput) MaxWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *int { return v.MaxWorkerCount }).(pulumi.IntPtrOutput)
}

func (o LookupFleetResultOutput) MinWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *int { return v.MinWorkerCount }).(pulumi.IntPtrOutput)
}

func (o LookupFleetResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o LookupFleetResultOutput) Status() FleetStatusPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *FleetStatus { return v.Status }).(FleetStatusPtrOutput)
}

func (o LookupFleetResultOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFleetResultOutput{})
}
