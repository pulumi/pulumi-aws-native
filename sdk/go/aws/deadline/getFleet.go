// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deadline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Definition of AWS::Deadline::Fleet Resource Type
func LookupFleet(ctx *pulumi.Context, args *LookupFleetArgs, opts ...pulumi.InvokeOption) (*LookupFleetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFleetResult
	err := ctx.Invoke("aws-native:deadline:getFleet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFleetArgs struct {
	// The Amazon Resource Name (ARN) assigned to the fleet.
	Arn string `pulumi:"arn"`
}

type LookupFleetResult struct {
	// The Amazon Resource Name (ARN) assigned to the fleet.
	Arn          *string            `pulumi:"arn"`
	Capabilities *FleetCapabilities `pulumi:"capabilities"`
	// The configuration details for the fleet.
	Configuration interface{} `pulumi:"configuration"`
	// A description that helps identify what the fleet is used for.
	//
	// > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
	Description *string `pulumi:"description"`
	// The display name of the fleet summary to update.
	//
	// > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
	DisplayName *string `pulumi:"displayName"`
	// The fleet ID.
	FleetId *string `pulumi:"fleetId"`
	// Provides a script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet.
	//
	// To remove a script from a fleet, use the [UpdateFleet](https://docs.aws.amazon.com/deadline-cloud/latest/APIReference/API_UpdateFleet.html) operation with the `hostConfiguration` `scriptBody` parameter set to an empty string ("").
	HostConfiguration *FleetHostConfiguration `pulumi:"hostConfiguration"`
	// The maximum number of workers specified in the fleet.
	MaxWorkerCount *int `pulumi:"maxWorkerCount"`
	// The minimum number of workers in the fleet.
	MinWorkerCount *int `pulumi:"minWorkerCount"`
	// The IAM role that workers in the fleet use when processing jobs.
	RoleArn *string `pulumi:"roleArn"`
	// The status of the fleet.
	Status *FleetStatus `pulumi:"status"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The number of workers in the fleet summary.
	WorkerCount *int `pulumi:"workerCount"`
}

func LookupFleetOutput(ctx *pulumi.Context, args LookupFleetOutputArgs, opts ...pulumi.InvokeOption) LookupFleetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFleetResultOutput, error) {
			args := v.(LookupFleetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:deadline:getFleet", args, LookupFleetResultOutput{}, options).(LookupFleetResultOutput), nil
		}).(LookupFleetResultOutput)
}

type LookupFleetOutputArgs struct {
	// The Amazon Resource Name (ARN) assigned to the fleet.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupFleetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetArgs)(nil)).Elem()
}

type LookupFleetResultOutput struct{ *pulumi.OutputState }

func (LookupFleetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFleetResult)(nil)).Elem()
}

func (o LookupFleetResultOutput) ToLookupFleetResultOutput() LookupFleetResultOutput {
	return o
}

func (o LookupFleetResultOutput) ToLookupFleetResultOutputWithContext(ctx context.Context) LookupFleetResultOutput {
	return o
}

// The Amazon Resource Name (ARN) assigned to the fleet.
func (o LookupFleetResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupFleetResultOutput) Capabilities() FleetCapabilitiesPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *FleetCapabilities { return v.Capabilities }).(FleetCapabilitiesPtrOutput)
}

// The configuration details for the fleet.
func (o LookupFleetResultOutput) Configuration() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupFleetResult) interface{} { return v.Configuration }).(pulumi.AnyOutput)
}

// A description that helps identify what the fleet is used for.
//
// > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
func (o LookupFleetResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The display name of the fleet summary to update.
//
// > This field can store any content. Escape or encode this content before displaying it on a webpage or any other system that might interpret the content of this field.
func (o LookupFleetResultOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The fleet ID.
func (o LookupFleetResultOutput) FleetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *string { return v.FleetId }).(pulumi.StringPtrOutput)
}

// Provides a script that runs as a worker is starting up that you can use to provide additional configuration for workers in your fleet.
//
// To remove a script from a fleet, use the [UpdateFleet](https://docs.aws.amazon.com/deadline-cloud/latest/APIReference/API_UpdateFleet.html) operation with the `hostConfiguration` `scriptBody` parameter set to an empty string ("").
func (o LookupFleetResultOutput) HostConfiguration() FleetHostConfigurationPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *FleetHostConfiguration { return v.HostConfiguration }).(FleetHostConfigurationPtrOutput)
}

// The maximum number of workers specified in the fleet.
func (o LookupFleetResultOutput) MaxWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *int { return v.MaxWorkerCount }).(pulumi.IntPtrOutput)
}

// The minimum number of workers in the fleet.
func (o LookupFleetResultOutput) MinWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *int { return v.MinWorkerCount }).(pulumi.IntPtrOutput)
}

// The IAM role that workers in the fleet use when processing jobs.
func (o LookupFleetResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// The status of the fleet.
func (o LookupFleetResultOutput) Status() FleetStatusPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *FleetStatus { return v.Status }).(FleetStatusPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupFleetResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupFleetResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The number of workers in the fleet summary.
func (o LookupFleetResultOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupFleetResult) *int { return v.WorkerCount }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFleetResultOutput{})
}
