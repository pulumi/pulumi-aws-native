// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package codestarconnections

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Schema for AWS::CodeStarConnections::Connection resource which can be used to connect external source providers with AWS CodePipeline
func LookupConnection(ctx *pulumi.Context, args *LookupConnectionArgs, opts ...pulumi.InvokeOption) (*LookupConnectionResult, error) {
	var rv LookupConnectionResult
	err := ctx.Invoke("aws-native:codestarconnections:getConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupConnectionArgs struct {
	// The Amazon Resource Name (ARN) of the  connection. The ARN is used as the connection reference when the connection is shared between AWS services.
	ConnectionArn string `pulumi:"connectionArn"`
}

type LookupConnectionResult struct {
	// The Amazon Resource Name (ARN) of the  connection. The ARN is used as the connection reference when the connection is shared between AWS services.
	ConnectionArn *string `pulumi:"connectionArn"`
	// The current status of the connection.
	ConnectionStatus *string `pulumi:"connectionStatus"`
	// The name of the external provider where your third-party code repository is configured. For Bitbucket, this is the account ID of the owner of the Bitbucket repository.
	OwnerAccountId *string `pulumi:"ownerAccountId"`
	// Specifies the tags applied to a connection.
	Tags []ConnectionTag `pulumi:"tags"`
}

func LookupConnectionOutput(ctx *pulumi.Context, args LookupConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupConnectionResult, error) {
			args := v.(LookupConnectionArgs)
			r, err := LookupConnection(ctx, &args, opts...)
			return *r, err
		}).(LookupConnectionResultOutput)
}

type LookupConnectionOutputArgs struct {
	// The Amazon Resource Name (ARN) of the  connection. The ARN is used as the connection reference when the connection is shared between AWS services.
	ConnectionArn pulumi.StringInput `pulumi:"connectionArn"`
}

func (LookupConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionArgs)(nil)).Elem()
}

type LookupConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupConnectionResult)(nil)).Elem()
}

func (o LookupConnectionResultOutput) ToLookupConnectionResultOutput() LookupConnectionResultOutput {
	return o
}

func (o LookupConnectionResultOutput) ToLookupConnectionResultOutputWithContext(ctx context.Context) LookupConnectionResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the  connection. The ARN is used as the connection reference when the connection is shared between AWS services.
func (o LookupConnectionResultOutput) ConnectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectionResult) *string { return v.ConnectionArn }).(pulumi.StringPtrOutput)
}

// The current status of the connection.
func (o LookupConnectionResultOutput) ConnectionStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectionResult) *string { return v.ConnectionStatus }).(pulumi.StringPtrOutput)
}

// The name of the external provider where your third-party code repository is configured. For Bitbucket, this is the account ID of the owner of the Bitbucket repository.
func (o LookupConnectionResultOutput) OwnerAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupConnectionResult) *string { return v.OwnerAccountId }).(pulumi.StringPtrOutput)
}

// Specifies the tags applied to a connection.
func (o LookupConnectionResultOutput) Tags() ConnectionTagArrayOutput {
	return o.ApplyT(func(v LookupConnectionResult) []ConnectionTag { return v.Tags }).(ConnectionTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupConnectionResultOutput{})
}
