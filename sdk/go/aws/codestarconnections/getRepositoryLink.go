// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codestarconnections

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Schema for AWS::CodeStarConnections::RepositoryLink resource which is used to aggregate repository metadata relevant to synchronizing source provider content to AWS Resources.
func LookupRepositoryLink(ctx *pulumi.Context, args *LookupRepositoryLinkArgs, opts ...pulumi.InvokeOption) (*LookupRepositoryLinkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRepositoryLinkResult
	err := ctx.Invoke("aws-native:codestarconnections:getRepositoryLink", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRepositoryLinkArgs struct {
	// A unique Amazon Resource Name (ARN) to designate the repository link.
	RepositoryLinkArn string `pulumi:"repositoryLinkArn"`
}

type LookupRepositoryLinkResult struct {
	// The Amazon Resource Name (ARN) of the CodeStarConnection. The ARN is used as the connection reference when the connection is shared between AWS services.
	ConnectionArn *string `pulumi:"connectionArn"`
	// The ARN of the KMS key that the customer can optionally specify to use to encrypt RepositoryLink properties. If not specified, a default key will be used.
	EncryptionKeyArn *string `pulumi:"encryptionKeyArn"`
	// The name of the external provider where your third-party code repository is configured.
	ProviderType *string `pulumi:"providerType"`
	// A unique Amazon Resource Name (ARN) to designate the repository link.
	RepositoryLinkArn *string `pulumi:"repositoryLinkArn"`
	// A UUID that uniquely identifies the RepositoryLink.
	RepositoryLinkId *string `pulumi:"repositoryLinkId"`
	// Specifies the tags applied to a RepositoryLink.
	Tags []RepositoryLinkTag `pulumi:"tags"`
}

func LookupRepositoryLinkOutput(ctx *pulumi.Context, args LookupRepositoryLinkOutputArgs, opts ...pulumi.InvokeOption) LookupRepositoryLinkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRepositoryLinkResult, error) {
			args := v.(LookupRepositoryLinkArgs)
			r, err := LookupRepositoryLink(ctx, &args, opts...)
			var s LookupRepositoryLinkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRepositoryLinkResultOutput)
}

type LookupRepositoryLinkOutputArgs struct {
	// A unique Amazon Resource Name (ARN) to designate the repository link.
	RepositoryLinkArn pulumi.StringInput `pulumi:"repositoryLinkArn"`
}

func (LookupRepositoryLinkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRepositoryLinkArgs)(nil)).Elem()
}

type LookupRepositoryLinkResultOutput struct{ *pulumi.OutputState }

func (LookupRepositoryLinkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRepositoryLinkResult)(nil)).Elem()
}

func (o LookupRepositoryLinkResultOutput) ToLookupRepositoryLinkResultOutput() LookupRepositoryLinkResultOutput {
	return o
}

func (o LookupRepositoryLinkResultOutput) ToLookupRepositoryLinkResultOutputWithContext(ctx context.Context) LookupRepositoryLinkResultOutput {
	return o
}

func (o LookupRepositoryLinkResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupRepositoryLinkResult] {
	return pulumix.Output[LookupRepositoryLinkResult]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the CodeStarConnection. The ARN is used as the connection reference when the connection is shared between AWS services.
func (o LookupRepositoryLinkResultOutput) ConnectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRepositoryLinkResult) *string { return v.ConnectionArn }).(pulumi.StringPtrOutput)
}

// The ARN of the KMS key that the customer can optionally specify to use to encrypt RepositoryLink properties. If not specified, a default key will be used.
func (o LookupRepositoryLinkResultOutput) EncryptionKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRepositoryLinkResult) *string { return v.EncryptionKeyArn }).(pulumi.StringPtrOutput)
}

// The name of the external provider where your third-party code repository is configured.
func (o LookupRepositoryLinkResultOutput) ProviderType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRepositoryLinkResult) *string { return v.ProviderType }).(pulumi.StringPtrOutput)
}

// A unique Amazon Resource Name (ARN) to designate the repository link.
func (o LookupRepositoryLinkResultOutput) RepositoryLinkArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRepositoryLinkResult) *string { return v.RepositoryLinkArn }).(pulumi.StringPtrOutput)
}

// A UUID that uniquely identifies the RepositoryLink.
func (o LookupRepositoryLinkResultOutput) RepositoryLinkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRepositoryLinkResult) *string { return v.RepositoryLinkId }).(pulumi.StringPtrOutput)
}

// Specifies the tags applied to a RepositoryLink.
func (o LookupRepositoryLinkResultOutput) Tags() RepositoryLinkTagArrayOutput {
	return o.ApplyT(func(v LookupRepositoryLinkResult) []RepositoryLinkTag { return v.Tags }).(RepositoryLinkTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRepositoryLinkResultOutput{})
}
