// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package healthlake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// HealthLake FHIR Datastore
func LookupFHIRDatastore(ctx *pulumi.Context, args *LookupFHIRDatastoreArgs, opts ...pulumi.InvokeOption) (*LookupFHIRDatastoreResult, error) {
	var rv LookupFHIRDatastoreResult
	err := ctx.Invoke("aws-native:healthlake:getFHIRDatastore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFHIRDatastoreArgs struct {
	DatastoreId string `pulumi:"datastoreId"`
}

type LookupFHIRDatastoreResult struct {
	CreatedAt         *FHIRDatastoreCreatedAt       `pulumi:"createdAt"`
	DatastoreArn      *string                       `pulumi:"datastoreArn"`
	DatastoreEndpoint *string                       `pulumi:"datastoreEndpoint"`
	DatastoreId       *string                       `pulumi:"datastoreId"`
	DatastoreStatus   *FHIRDatastoreDatastoreStatus `pulumi:"datastoreStatus"`
	Tags              []FHIRDatastoreTag            `pulumi:"tags"`
}

func LookupFHIRDatastoreOutput(ctx *pulumi.Context, args LookupFHIRDatastoreOutputArgs, opts ...pulumi.InvokeOption) LookupFHIRDatastoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFHIRDatastoreResult, error) {
			args := v.(LookupFHIRDatastoreArgs)
			r, err := LookupFHIRDatastore(ctx, &args, opts...)
			var s LookupFHIRDatastoreResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFHIRDatastoreResultOutput)
}

type LookupFHIRDatastoreOutputArgs struct {
	DatastoreId pulumi.StringInput `pulumi:"datastoreId"`
}

func (LookupFHIRDatastoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFHIRDatastoreArgs)(nil)).Elem()
}

type LookupFHIRDatastoreResultOutput struct{ *pulumi.OutputState }

func (LookupFHIRDatastoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFHIRDatastoreResult)(nil)).Elem()
}

func (o LookupFHIRDatastoreResultOutput) ToLookupFHIRDatastoreResultOutput() LookupFHIRDatastoreResultOutput {
	return o
}

func (o LookupFHIRDatastoreResultOutput) ToLookupFHIRDatastoreResultOutputWithContext(ctx context.Context) LookupFHIRDatastoreResultOutput {
	return o
}

func (o LookupFHIRDatastoreResultOutput) CreatedAt() FHIRDatastoreCreatedAtPtrOutput {
	return o.ApplyT(func(v LookupFHIRDatastoreResult) *FHIRDatastoreCreatedAt { return v.CreatedAt }).(FHIRDatastoreCreatedAtPtrOutput)
}

func (o LookupFHIRDatastoreResultOutput) DatastoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFHIRDatastoreResult) *string { return v.DatastoreArn }).(pulumi.StringPtrOutput)
}

func (o LookupFHIRDatastoreResultOutput) DatastoreEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFHIRDatastoreResult) *string { return v.DatastoreEndpoint }).(pulumi.StringPtrOutput)
}

func (o LookupFHIRDatastoreResultOutput) DatastoreId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFHIRDatastoreResult) *string { return v.DatastoreId }).(pulumi.StringPtrOutput)
}

func (o LookupFHIRDatastoreResultOutput) DatastoreStatus() FHIRDatastoreDatastoreStatusPtrOutput {
	return o.ApplyT(func(v LookupFHIRDatastoreResult) *FHIRDatastoreDatastoreStatus { return v.DatastoreStatus }).(FHIRDatastoreDatastoreStatusPtrOutput)
}

func (o LookupFHIRDatastoreResultOutput) Tags() FHIRDatastoreTagArrayOutput {
	return o.ApplyT(func(v LookupFHIRDatastoreResult) []FHIRDatastoreTag { return v.Tags }).(FHIRDatastoreTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFHIRDatastoreResultOutput{})
}
