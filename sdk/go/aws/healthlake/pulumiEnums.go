// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package healthlake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The status of the Data Store. Possible statuses are 'CREATING', 'ACTIVE', 'DELETING', or 'DELETED'.
type FHIRDatastoreDatastoreStatus string

const (
	FHIRDatastoreDatastoreStatusCreating = FHIRDatastoreDatastoreStatus("CREATING")
	FHIRDatastoreDatastoreStatusActive   = FHIRDatastoreDatastoreStatus("ACTIVE")
	FHIRDatastoreDatastoreStatusDeleting = FHIRDatastoreDatastoreStatus("DELETING")
	FHIRDatastoreDatastoreStatusDeleted  = FHIRDatastoreDatastoreStatus("DELETED")
)

func (FHIRDatastoreDatastoreStatus) ElementType() reflect.Type {
	return reflect.TypeOf((*FHIRDatastoreDatastoreStatus)(nil)).Elem()
}

func (e FHIRDatastoreDatastoreStatus) ToFHIRDatastoreDatastoreStatusOutput() FHIRDatastoreDatastoreStatusOutput {
	return pulumi.ToOutput(e).(FHIRDatastoreDatastoreStatusOutput)
}

func (e FHIRDatastoreDatastoreStatus) ToFHIRDatastoreDatastoreStatusOutputWithContext(ctx context.Context) FHIRDatastoreDatastoreStatusOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FHIRDatastoreDatastoreStatusOutput)
}

func (e FHIRDatastoreDatastoreStatus) ToFHIRDatastoreDatastoreStatusPtrOutput() FHIRDatastoreDatastoreStatusPtrOutput {
	return e.ToFHIRDatastoreDatastoreStatusPtrOutputWithContext(context.Background())
}

func (e FHIRDatastoreDatastoreStatus) ToFHIRDatastoreDatastoreStatusPtrOutputWithContext(ctx context.Context) FHIRDatastoreDatastoreStatusPtrOutput {
	return FHIRDatastoreDatastoreStatus(e).ToFHIRDatastoreDatastoreStatusOutputWithContext(ctx).ToFHIRDatastoreDatastoreStatusPtrOutputWithContext(ctx)
}

func (e FHIRDatastoreDatastoreStatus) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FHIRDatastoreDatastoreStatus) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FHIRDatastoreDatastoreStatus) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FHIRDatastoreDatastoreStatus) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FHIRDatastoreDatastoreStatusOutput struct{ *pulumi.OutputState }

func (FHIRDatastoreDatastoreStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FHIRDatastoreDatastoreStatus)(nil)).Elem()
}

func (o FHIRDatastoreDatastoreStatusOutput) ToFHIRDatastoreDatastoreStatusOutput() FHIRDatastoreDatastoreStatusOutput {
	return o
}

func (o FHIRDatastoreDatastoreStatusOutput) ToFHIRDatastoreDatastoreStatusOutputWithContext(ctx context.Context) FHIRDatastoreDatastoreStatusOutput {
	return o
}

func (o FHIRDatastoreDatastoreStatusOutput) ToFHIRDatastoreDatastoreStatusPtrOutput() FHIRDatastoreDatastoreStatusPtrOutput {
	return o.ToFHIRDatastoreDatastoreStatusPtrOutputWithContext(context.Background())
}

func (o FHIRDatastoreDatastoreStatusOutput) ToFHIRDatastoreDatastoreStatusPtrOutputWithContext(ctx context.Context) FHIRDatastoreDatastoreStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FHIRDatastoreDatastoreStatus) *FHIRDatastoreDatastoreStatus {
		return &v
	}).(FHIRDatastoreDatastoreStatusPtrOutput)
}

func (o FHIRDatastoreDatastoreStatusOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FHIRDatastoreDatastoreStatusOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FHIRDatastoreDatastoreStatus) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FHIRDatastoreDatastoreStatusOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FHIRDatastoreDatastoreStatusOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FHIRDatastoreDatastoreStatus) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FHIRDatastoreDatastoreStatusPtrOutput struct{ *pulumi.OutputState }

func (FHIRDatastoreDatastoreStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FHIRDatastoreDatastoreStatus)(nil)).Elem()
}

func (o FHIRDatastoreDatastoreStatusPtrOutput) ToFHIRDatastoreDatastoreStatusPtrOutput() FHIRDatastoreDatastoreStatusPtrOutput {
	return o
}

func (o FHIRDatastoreDatastoreStatusPtrOutput) ToFHIRDatastoreDatastoreStatusPtrOutputWithContext(ctx context.Context) FHIRDatastoreDatastoreStatusPtrOutput {
	return o
}

func (o FHIRDatastoreDatastoreStatusPtrOutput) Elem() FHIRDatastoreDatastoreStatusOutput {
	return o.ApplyT(func(v *FHIRDatastoreDatastoreStatus) FHIRDatastoreDatastoreStatus {
		if v != nil {
			return *v
		}
		var ret FHIRDatastoreDatastoreStatus
		return ret
	}).(FHIRDatastoreDatastoreStatusOutput)
}

func (o FHIRDatastoreDatastoreStatusPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FHIRDatastoreDatastoreStatusPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FHIRDatastoreDatastoreStatus) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FHIRDatastoreDatastoreStatusInput is an input type that accepts FHIRDatastoreDatastoreStatusArgs and FHIRDatastoreDatastoreStatusOutput values.
// You can construct a concrete instance of `FHIRDatastoreDatastoreStatusInput` via:
//
//          FHIRDatastoreDatastoreStatusArgs{...}
type FHIRDatastoreDatastoreStatusInput interface {
	pulumi.Input

	ToFHIRDatastoreDatastoreStatusOutput() FHIRDatastoreDatastoreStatusOutput
	ToFHIRDatastoreDatastoreStatusOutputWithContext(context.Context) FHIRDatastoreDatastoreStatusOutput
}

var fhirdatastoreDatastoreStatusPtrType = reflect.TypeOf((**FHIRDatastoreDatastoreStatus)(nil)).Elem()

type FHIRDatastoreDatastoreStatusPtrInput interface {
	pulumi.Input

	ToFHIRDatastoreDatastoreStatusPtrOutput() FHIRDatastoreDatastoreStatusPtrOutput
	ToFHIRDatastoreDatastoreStatusPtrOutputWithContext(context.Context) FHIRDatastoreDatastoreStatusPtrOutput
}

type fhirdatastoreDatastoreStatusPtr string

func FHIRDatastoreDatastoreStatusPtr(v string) FHIRDatastoreDatastoreStatusPtrInput {
	return (*fhirdatastoreDatastoreStatusPtr)(&v)
}

func (*fhirdatastoreDatastoreStatusPtr) ElementType() reflect.Type {
	return fhirdatastoreDatastoreStatusPtrType
}

func (in *fhirdatastoreDatastoreStatusPtr) ToFHIRDatastoreDatastoreStatusPtrOutput() FHIRDatastoreDatastoreStatusPtrOutput {
	return pulumi.ToOutput(in).(FHIRDatastoreDatastoreStatusPtrOutput)
}

func (in *fhirdatastoreDatastoreStatusPtr) ToFHIRDatastoreDatastoreStatusPtrOutputWithContext(ctx context.Context) FHIRDatastoreDatastoreStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FHIRDatastoreDatastoreStatusPtrOutput)
}

// The FHIR version. Only R4 version data is supported.
type FHIRDatastoreDatastoreTypeVersion string

const (
	FHIRDatastoreDatastoreTypeVersionR4 = FHIRDatastoreDatastoreTypeVersion("R4")
)

func (FHIRDatastoreDatastoreTypeVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*FHIRDatastoreDatastoreTypeVersion)(nil)).Elem()
}

func (e FHIRDatastoreDatastoreTypeVersion) ToFHIRDatastoreDatastoreTypeVersionOutput() FHIRDatastoreDatastoreTypeVersionOutput {
	return pulumi.ToOutput(e).(FHIRDatastoreDatastoreTypeVersionOutput)
}

func (e FHIRDatastoreDatastoreTypeVersion) ToFHIRDatastoreDatastoreTypeVersionOutputWithContext(ctx context.Context) FHIRDatastoreDatastoreTypeVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FHIRDatastoreDatastoreTypeVersionOutput)
}

func (e FHIRDatastoreDatastoreTypeVersion) ToFHIRDatastoreDatastoreTypeVersionPtrOutput() FHIRDatastoreDatastoreTypeVersionPtrOutput {
	return e.ToFHIRDatastoreDatastoreTypeVersionPtrOutputWithContext(context.Background())
}

func (e FHIRDatastoreDatastoreTypeVersion) ToFHIRDatastoreDatastoreTypeVersionPtrOutputWithContext(ctx context.Context) FHIRDatastoreDatastoreTypeVersionPtrOutput {
	return FHIRDatastoreDatastoreTypeVersion(e).ToFHIRDatastoreDatastoreTypeVersionOutputWithContext(ctx).ToFHIRDatastoreDatastoreTypeVersionPtrOutputWithContext(ctx)
}

func (e FHIRDatastoreDatastoreTypeVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FHIRDatastoreDatastoreTypeVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FHIRDatastoreDatastoreTypeVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FHIRDatastoreDatastoreTypeVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FHIRDatastoreDatastoreTypeVersionOutput struct{ *pulumi.OutputState }

func (FHIRDatastoreDatastoreTypeVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FHIRDatastoreDatastoreTypeVersion)(nil)).Elem()
}

func (o FHIRDatastoreDatastoreTypeVersionOutput) ToFHIRDatastoreDatastoreTypeVersionOutput() FHIRDatastoreDatastoreTypeVersionOutput {
	return o
}

func (o FHIRDatastoreDatastoreTypeVersionOutput) ToFHIRDatastoreDatastoreTypeVersionOutputWithContext(ctx context.Context) FHIRDatastoreDatastoreTypeVersionOutput {
	return o
}

func (o FHIRDatastoreDatastoreTypeVersionOutput) ToFHIRDatastoreDatastoreTypeVersionPtrOutput() FHIRDatastoreDatastoreTypeVersionPtrOutput {
	return o.ToFHIRDatastoreDatastoreTypeVersionPtrOutputWithContext(context.Background())
}

func (o FHIRDatastoreDatastoreTypeVersionOutput) ToFHIRDatastoreDatastoreTypeVersionPtrOutputWithContext(ctx context.Context) FHIRDatastoreDatastoreTypeVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FHIRDatastoreDatastoreTypeVersion) *FHIRDatastoreDatastoreTypeVersion {
		return &v
	}).(FHIRDatastoreDatastoreTypeVersionPtrOutput)
}

func (o FHIRDatastoreDatastoreTypeVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FHIRDatastoreDatastoreTypeVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FHIRDatastoreDatastoreTypeVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FHIRDatastoreDatastoreTypeVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FHIRDatastoreDatastoreTypeVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FHIRDatastoreDatastoreTypeVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FHIRDatastoreDatastoreTypeVersionPtrOutput struct{ *pulumi.OutputState }

func (FHIRDatastoreDatastoreTypeVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FHIRDatastoreDatastoreTypeVersion)(nil)).Elem()
}

func (o FHIRDatastoreDatastoreTypeVersionPtrOutput) ToFHIRDatastoreDatastoreTypeVersionPtrOutput() FHIRDatastoreDatastoreTypeVersionPtrOutput {
	return o
}

func (o FHIRDatastoreDatastoreTypeVersionPtrOutput) ToFHIRDatastoreDatastoreTypeVersionPtrOutputWithContext(ctx context.Context) FHIRDatastoreDatastoreTypeVersionPtrOutput {
	return o
}

func (o FHIRDatastoreDatastoreTypeVersionPtrOutput) Elem() FHIRDatastoreDatastoreTypeVersionOutput {
	return o.ApplyT(func(v *FHIRDatastoreDatastoreTypeVersion) FHIRDatastoreDatastoreTypeVersion {
		if v != nil {
			return *v
		}
		var ret FHIRDatastoreDatastoreTypeVersion
		return ret
	}).(FHIRDatastoreDatastoreTypeVersionOutput)
}

func (o FHIRDatastoreDatastoreTypeVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FHIRDatastoreDatastoreTypeVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FHIRDatastoreDatastoreTypeVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FHIRDatastoreDatastoreTypeVersionInput is an input type that accepts FHIRDatastoreDatastoreTypeVersionArgs and FHIRDatastoreDatastoreTypeVersionOutput values.
// You can construct a concrete instance of `FHIRDatastoreDatastoreTypeVersionInput` via:
//
//          FHIRDatastoreDatastoreTypeVersionArgs{...}
type FHIRDatastoreDatastoreTypeVersionInput interface {
	pulumi.Input

	ToFHIRDatastoreDatastoreTypeVersionOutput() FHIRDatastoreDatastoreTypeVersionOutput
	ToFHIRDatastoreDatastoreTypeVersionOutputWithContext(context.Context) FHIRDatastoreDatastoreTypeVersionOutput
}

var fhirdatastoreDatastoreTypeVersionPtrType = reflect.TypeOf((**FHIRDatastoreDatastoreTypeVersion)(nil)).Elem()

type FHIRDatastoreDatastoreTypeVersionPtrInput interface {
	pulumi.Input

	ToFHIRDatastoreDatastoreTypeVersionPtrOutput() FHIRDatastoreDatastoreTypeVersionPtrOutput
	ToFHIRDatastoreDatastoreTypeVersionPtrOutputWithContext(context.Context) FHIRDatastoreDatastoreTypeVersionPtrOutput
}

type fhirdatastoreDatastoreTypeVersionPtr string

func FHIRDatastoreDatastoreTypeVersionPtr(v string) FHIRDatastoreDatastoreTypeVersionPtrInput {
	return (*fhirdatastoreDatastoreTypeVersionPtr)(&v)
}

func (*fhirdatastoreDatastoreTypeVersionPtr) ElementType() reflect.Type {
	return fhirdatastoreDatastoreTypeVersionPtrType
}

func (in *fhirdatastoreDatastoreTypeVersionPtr) ToFHIRDatastoreDatastoreTypeVersionPtrOutput() FHIRDatastoreDatastoreTypeVersionPtrOutput {
	return pulumi.ToOutput(in).(FHIRDatastoreDatastoreTypeVersionPtrOutput)
}

func (in *fhirdatastoreDatastoreTypeVersionPtr) ToFHIRDatastoreDatastoreTypeVersionPtrOutputWithContext(ctx context.Context) FHIRDatastoreDatastoreTypeVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FHIRDatastoreDatastoreTypeVersionPtrOutput)
}

// The type of customer-managed-key (CMK) used for encryption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs.
type FHIRDatastoreKmsEncryptionConfigCmkType string

const (
	FHIRDatastoreKmsEncryptionConfigCmkTypeCustomerManagedKmsKey = FHIRDatastoreKmsEncryptionConfigCmkType("CUSTOMER_MANAGED_KMS_KEY")
	FHIRDatastoreKmsEncryptionConfigCmkTypeAwsOwnedKmsKey        = FHIRDatastoreKmsEncryptionConfigCmkType("AWS_OWNED_KMS_KEY")
)

func (FHIRDatastoreKmsEncryptionConfigCmkType) ElementType() reflect.Type {
	return reflect.TypeOf((*FHIRDatastoreKmsEncryptionConfigCmkType)(nil)).Elem()
}

func (e FHIRDatastoreKmsEncryptionConfigCmkType) ToFHIRDatastoreKmsEncryptionConfigCmkTypeOutput() FHIRDatastoreKmsEncryptionConfigCmkTypeOutput {
	return pulumi.ToOutput(e).(FHIRDatastoreKmsEncryptionConfigCmkTypeOutput)
}

func (e FHIRDatastoreKmsEncryptionConfigCmkType) ToFHIRDatastoreKmsEncryptionConfigCmkTypeOutputWithContext(ctx context.Context) FHIRDatastoreKmsEncryptionConfigCmkTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FHIRDatastoreKmsEncryptionConfigCmkTypeOutput)
}

func (e FHIRDatastoreKmsEncryptionConfigCmkType) ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput() FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput {
	return e.ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutputWithContext(context.Background())
}

func (e FHIRDatastoreKmsEncryptionConfigCmkType) ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutputWithContext(ctx context.Context) FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput {
	return FHIRDatastoreKmsEncryptionConfigCmkType(e).ToFHIRDatastoreKmsEncryptionConfigCmkTypeOutputWithContext(ctx).ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutputWithContext(ctx)
}

func (e FHIRDatastoreKmsEncryptionConfigCmkType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FHIRDatastoreKmsEncryptionConfigCmkType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FHIRDatastoreKmsEncryptionConfigCmkType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FHIRDatastoreKmsEncryptionConfigCmkType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FHIRDatastoreKmsEncryptionConfigCmkTypeOutput struct{ *pulumi.OutputState }

func (FHIRDatastoreKmsEncryptionConfigCmkTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FHIRDatastoreKmsEncryptionConfigCmkType)(nil)).Elem()
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypeOutput) ToFHIRDatastoreKmsEncryptionConfigCmkTypeOutput() FHIRDatastoreKmsEncryptionConfigCmkTypeOutput {
	return o
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypeOutput) ToFHIRDatastoreKmsEncryptionConfigCmkTypeOutputWithContext(ctx context.Context) FHIRDatastoreKmsEncryptionConfigCmkTypeOutput {
	return o
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypeOutput) ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput() FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput {
	return o.ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutputWithContext(context.Background())
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypeOutput) ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutputWithContext(ctx context.Context) FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FHIRDatastoreKmsEncryptionConfigCmkType) *FHIRDatastoreKmsEncryptionConfigCmkType {
		return &v
	}).(FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput)
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FHIRDatastoreKmsEncryptionConfigCmkType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FHIRDatastoreKmsEncryptionConfigCmkType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput struct{ *pulumi.OutputState }

func (FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FHIRDatastoreKmsEncryptionConfigCmkType)(nil)).Elem()
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput) ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput() FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput {
	return o
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput) ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutputWithContext(ctx context.Context) FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput {
	return o
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput) Elem() FHIRDatastoreKmsEncryptionConfigCmkTypeOutput {
	return o.ApplyT(func(v *FHIRDatastoreKmsEncryptionConfigCmkType) FHIRDatastoreKmsEncryptionConfigCmkType {
		if v != nil {
			return *v
		}
		var ret FHIRDatastoreKmsEncryptionConfigCmkType
		return ret
	}).(FHIRDatastoreKmsEncryptionConfigCmkTypeOutput)
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FHIRDatastoreKmsEncryptionConfigCmkType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FHIRDatastoreKmsEncryptionConfigCmkTypeInput is an input type that accepts FHIRDatastoreKmsEncryptionConfigCmkTypeArgs and FHIRDatastoreKmsEncryptionConfigCmkTypeOutput values.
// You can construct a concrete instance of `FHIRDatastoreKmsEncryptionConfigCmkTypeInput` via:
//
//          FHIRDatastoreKmsEncryptionConfigCmkTypeArgs{...}
type FHIRDatastoreKmsEncryptionConfigCmkTypeInput interface {
	pulumi.Input

	ToFHIRDatastoreKmsEncryptionConfigCmkTypeOutput() FHIRDatastoreKmsEncryptionConfigCmkTypeOutput
	ToFHIRDatastoreKmsEncryptionConfigCmkTypeOutputWithContext(context.Context) FHIRDatastoreKmsEncryptionConfigCmkTypeOutput
}

var fhirdatastoreKmsEncryptionConfigCmkTypePtrType = reflect.TypeOf((**FHIRDatastoreKmsEncryptionConfigCmkType)(nil)).Elem()

type FHIRDatastoreKmsEncryptionConfigCmkTypePtrInput interface {
	pulumi.Input

	ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput() FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput
	ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutputWithContext(context.Context) FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput
}

type fhirdatastoreKmsEncryptionConfigCmkTypePtr string

func FHIRDatastoreKmsEncryptionConfigCmkTypePtr(v string) FHIRDatastoreKmsEncryptionConfigCmkTypePtrInput {
	return (*fhirdatastoreKmsEncryptionConfigCmkTypePtr)(&v)
}

func (*fhirdatastoreKmsEncryptionConfigCmkTypePtr) ElementType() reflect.Type {
	return fhirdatastoreKmsEncryptionConfigCmkTypePtrType
}

func (in *fhirdatastoreKmsEncryptionConfigCmkTypePtr) ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput() FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput {
	return pulumi.ToOutput(in).(FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput)
}

func (in *fhirdatastoreKmsEncryptionConfigCmkTypePtr) ToFHIRDatastoreKmsEncryptionConfigCmkTypePtrOutputWithContext(ctx context.Context) FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput)
}

// The type of preloaded data. Only Synthea preloaded data is supported.
type FHIRDatastorePreloadDataConfigPreloadDataType string

const (
	FHIRDatastorePreloadDataConfigPreloadDataTypeSynthea = FHIRDatastorePreloadDataConfigPreloadDataType("SYNTHEA")
)

func (FHIRDatastorePreloadDataConfigPreloadDataType) ElementType() reflect.Type {
	return reflect.TypeOf((*FHIRDatastorePreloadDataConfigPreloadDataType)(nil)).Elem()
}

func (e FHIRDatastorePreloadDataConfigPreloadDataType) ToFHIRDatastorePreloadDataConfigPreloadDataTypeOutput() FHIRDatastorePreloadDataConfigPreloadDataTypeOutput {
	return pulumi.ToOutput(e).(FHIRDatastorePreloadDataConfigPreloadDataTypeOutput)
}

func (e FHIRDatastorePreloadDataConfigPreloadDataType) ToFHIRDatastorePreloadDataConfigPreloadDataTypeOutputWithContext(ctx context.Context) FHIRDatastorePreloadDataConfigPreloadDataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FHIRDatastorePreloadDataConfigPreloadDataTypeOutput)
}

func (e FHIRDatastorePreloadDataConfigPreloadDataType) ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput() FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput {
	return e.ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutputWithContext(context.Background())
}

func (e FHIRDatastorePreloadDataConfigPreloadDataType) ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutputWithContext(ctx context.Context) FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput {
	return FHIRDatastorePreloadDataConfigPreloadDataType(e).ToFHIRDatastorePreloadDataConfigPreloadDataTypeOutputWithContext(ctx).ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutputWithContext(ctx)
}

func (e FHIRDatastorePreloadDataConfigPreloadDataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FHIRDatastorePreloadDataConfigPreloadDataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FHIRDatastorePreloadDataConfigPreloadDataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FHIRDatastorePreloadDataConfigPreloadDataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FHIRDatastorePreloadDataConfigPreloadDataTypeOutput struct{ *pulumi.OutputState }

func (FHIRDatastorePreloadDataConfigPreloadDataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FHIRDatastorePreloadDataConfigPreloadDataType)(nil)).Elem()
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypeOutput) ToFHIRDatastorePreloadDataConfigPreloadDataTypeOutput() FHIRDatastorePreloadDataConfigPreloadDataTypeOutput {
	return o
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypeOutput) ToFHIRDatastorePreloadDataConfigPreloadDataTypeOutputWithContext(ctx context.Context) FHIRDatastorePreloadDataConfigPreloadDataTypeOutput {
	return o
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypeOutput) ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput() FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput {
	return o.ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutputWithContext(context.Background())
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypeOutput) ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutputWithContext(ctx context.Context) FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FHIRDatastorePreloadDataConfigPreloadDataType) *FHIRDatastorePreloadDataConfigPreloadDataType {
		return &v
	}).(FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput)
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FHIRDatastorePreloadDataConfigPreloadDataType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FHIRDatastorePreloadDataConfigPreloadDataType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput struct{ *pulumi.OutputState }

func (FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FHIRDatastorePreloadDataConfigPreloadDataType)(nil)).Elem()
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput) ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput() FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput {
	return o
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput) ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutputWithContext(ctx context.Context) FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput {
	return o
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput) Elem() FHIRDatastorePreloadDataConfigPreloadDataTypeOutput {
	return o.ApplyT(func(v *FHIRDatastorePreloadDataConfigPreloadDataType) FHIRDatastorePreloadDataConfigPreloadDataType {
		if v != nil {
			return *v
		}
		var ret FHIRDatastorePreloadDataConfigPreloadDataType
		return ret
	}).(FHIRDatastorePreloadDataConfigPreloadDataTypeOutput)
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FHIRDatastorePreloadDataConfigPreloadDataType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FHIRDatastorePreloadDataConfigPreloadDataTypeInput is an input type that accepts FHIRDatastorePreloadDataConfigPreloadDataTypeArgs and FHIRDatastorePreloadDataConfigPreloadDataTypeOutput values.
// You can construct a concrete instance of `FHIRDatastorePreloadDataConfigPreloadDataTypeInput` via:
//
//          FHIRDatastorePreloadDataConfigPreloadDataTypeArgs{...}
type FHIRDatastorePreloadDataConfigPreloadDataTypeInput interface {
	pulumi.Input

	ToFHIRDatastorePreloadDataConfigPreloadDataTypeOutput() FHIRDatastorePreloadDataConfigPreloadDataTypeOutput
	ToFHIRDatastorePreloadDataConfigPreloadDataTypeOutputWithContext(context.Context) FHIRDatastorePreloadDataConfigPreloadDataTypeOutput
}

var fhirdatastorePreloadDataConfigPreloadDataTypePtrType = reflect.TypeOf((**FHIRDatastorePreloadDataConfigPreloadDataType)(nil)).Elem()

type FHIRDatastorePreloadDataConfigPreloadDataTypePtrInput interface {
	pulumi.Input

	ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput() FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput
	ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutputWithContext(context.Context) FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput
}

type fhirdatastorePreloadDataConfigPreloadDataTypePtr string

func FHIRDatastorePreloadDataConfigPreloadDataTypePtr(v string) FHIRDatastorePreloadDataConfigPreloadDataTypePtrInput {
	return (*fhirdatastorePreloadDataConfigPreloadDataTypePtr)(&v)
}

func (*fhirdatastorePreloadDataConfigPreloadDataTypePtr) ElementType() reflect.Type {
	return fhirdatastorePreloadDataConfigPreloadDataTypePtrType
}

func (in *fhirdatastorePreloadDataConfigPreloadDataTypePtr) ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput() FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput {
	return pulumi.ToOutput(in).(FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput)
}

func (in *fhirdatastorePreloadDataConfigPreloadDataTypePtr) ToFHIRDatastorePreloadDataConfigPreloadDataTypePtrOutputWithContext(ctx context.Context) FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FHIRDatastoreDatastoreStatusInput)(nil)).Elem(), FHIRDatastoreDatastoreStatus("CREATING"))
	pulumi.RegisterInputType(reflect.TypeOf((*FHIRDatastoreDatastoreStatusPtrInput)(nil)).Elem(), FHIRDatastoreDatastoreStatus("CREATING"))
	pulumi.RegisterInputType(reflect.TypeOf((*FHIRDatastoreDatastoreTypeVersionInput)(nil)).Elem(), FHIRDatastoreDatastoreTypeVersion("R4"))
	pulumi.RegisterInputType(reflect.TypeOf((*FHIRDatastoreDatastoreTypeVersionPtrInput)(nil)).Elem(), FHIRDatastoreDatastoreTypeVersion("R4"))
	pulumi.RegisterInputType(reflect.TypeOf((*FHIRDatastoreKmsEncryptionConfigCmkTypeInput)(nil)).Elem(), FHIRDatastoreKmsEncryptionConfigCmkType("CUSTOMER_MANAGED_KMS_KEY"))
	pulumi.RegisterInputType(reflect.TypeOf((*FHIRDatastoreKmsEncryptionConfigCmkTypePtrInput)(nil)).Elem(), FHIRDatastoreKmsEncryptionConfigCmkType("CUSTOMER_MANAGED_KMS_KEY"))
	pulumi.RegisterInputType(reflect.TypeOf((*FHIRDatastorePreloadDataConfigPreloadDataTypeInput)(nil)).Elem(), FHIRDatastorePreloadDataConfigPreloadDataType("SYNTHEA"))
	pulumi.RegisterInputType(reflect.TypeOf((*FHIRDatastorePreloadDataConfigPreloadDataTypePtrInput)(nil)).Elem(), FHIRDatastorePreloadDataConfigPreloadDataType("SYNTHEA"))
	pulumi.RegisterOutputType(FHIRDatastoreDatastoreStatusOutput{})
	pulumi.RegisterOutputType(FHIRDatastoreDatastoreStatusPtrOutput{})
	pulumi.RegisterOutputType(FHIRDatastoreDatastoreTypeVersionOutput{})
	pulumi.RegisterOutputType(FHIRDatastoreDatastoreTypeVersionPtrOutput{})
	pulumi.RegisterOutputType(FHIRDatastoreKmsEncryptionConfigCmkTypeOutput{})
	pulumi.RegisterOutputType(FHIRDatastoreKmsEncryptionConfigCmkTypePtrOutput{})
	pulumi.RegisterOutputType(FHIRDatastorePreloadDataConfigPreloadDataTypeOutput{})
	pulumi.RegisterOutputType(FHIRDatastorePreloadDataConfigPreloadDataTypePtrOutput{})
}
