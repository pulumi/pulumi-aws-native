// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kafkaconnect

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An example resource schema demonstrating some basic constructs and validation rules.
type CustomPlugin struct {
	pulumi.CustomResourceState

	// The type of the plugin file.
	ContentType CustomPluginContentTypeOutput `pulumi:"contentType"`
	// The Amazon Resource Name (ARN) of the custom plugin to use.
	CustomPluginArn pulumi.StringOutput `pulumi:"customPluginArn"`
	// A summary description of the custom plugin.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Details about a custom plugin file.
	FileDescription CustomPluginFileDescriptionOutput `pulumi:"fileDescription"`
	// Information about the location of a custom plugin.
	Location CustomPluginLocationOutput `pulumi:"location"`
	// The name of the custom plugin.
	Name pulumi.StringOutput `pulumi:"name"`
	// The revision of the custom plugin.
	Revision pulumi.IntOutput `pulumi:"revision"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewCustomPlugin registers a new resource with the given unique name, arguments, and options.
func NewCustomPlugin(ctx *pulumi.Context,
	name string, args *CustomPluginArgs, opts ...pulumi.ResourceOption) (*CustomPlugin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContentType == nil {
		return nil, errors.New("invalid value for required argument 'ContentType'")
	}
	if args.Location == nil {
		return nil, errors.New("invalid value for required argument 'Location'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"contentType",
		"description",
		"location",
		"name",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CustomPlugin
	err := ctx.RegisterResource("aws-native:kafkaconnect:CustomPlugin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomPlugin gets an existing CustomPlugin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomPlugin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomPluginState, opts ...pulumi.ResourceOption) (*CustomPlugin, error) {
	var resource CustomPlugin
	err := ctx.ReadResource("aws-native:kafkaconnect:CustomPlugin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomPlugin resources.
type customPluginState struct {
}

type CustomPluginState struct {
}

func (CustomPluginState) ElementType() reflect.Type {
	return reflect.TypeOf((*customPluginState)(nil)).Elem()
}

type customPluginArgs struct {
	// The type of the plugin file.
	ContentType CustomPluginContentType `pulumi:"contentType"`
	// A summary description of the custom plugin.
	Description *string `pulumi:"description"`
	// Information about the location of a custom plugin.
	Location CustomPluginLocation `pulumi:"location"`
	// The name of the custom plugin.
	Name *string `pulumi:"name"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a CustomPlugin resource.
type CustomPluginArgs struct {
	// The type of the plugin file.
	ContentType CustomPluginContentTypeInput
	// A summary description of the custom plugin.
	Description pulumi.StringPtrInput
	// Information about the location of a custom plugin.
	Location CustomPluginLocationInput
	// The name of the custom plugin.
	Name pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
}

func (CustomPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customPluginArgs)(nil)).Elem()
}

type CustomPluginInput interface {
	pulumi.Input

	ToCustomPluginOutput() CustomPluginOutput
	ToCustomPluginOutputWithContext(ctx context.Context) CustomPluginOutput
}

func (*CustomPlugin) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPlugin)(nil)).Elem()
}

func (i *CustomPlugin) ToCustomPluginOutput() CustomPluginOutput {
	return i.ToCustomPluginOutputWithContext(context.Background())
}

func (i *CustomPlugin) ToCustomPluginOutputWithContext(ctx context.Context) CustomPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomPluginOutput)
}

type CustomPluginOutput struct{ *pulumi.OutputState }

func (CustomPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomPlugin)(nil)).Elem()
}

func (o CustomPluginOutput) ToCustomPluginOutput() CustomPluginOutput {
	return o
}

func (o CustomPluginOutput) ToCustomPluginOutputWithContext(ctx context.Context) CustomPluginOutput {
	return o
}

// The type of the plugin file.
func (o CustomPluginOutput) ContentType() CustomPluginContentTypeOutput {
	return o.ApplyT(func(v *CustomPlugin) CustomPluginContentTypeOutput { return v.ContentType }).(CustomPluginContentTypeOutput)
}

// The Amazon Resource Name (ARN) of the custom plugin to use.
func (o CustomPluginOutput) CustomPluginArn() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPlugin) pulumi.StringOutput { return v.CustomPluginArn }).(pulumi.StringOutput)
}

// A summary description of the custom plugin.
func (o CustomPluginOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomPlugin) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Details about a custom plugin file.
func (o CustomPluginOutput) FileDescription() CustomPluginFileDescriptionOutput {
	return o.ApplyT(func(v *CustomPlugin) CustomPluginFileDescriptionOutput { return v.FileDescription }).(CustomPluginFileDescriptionOutput)
}

// Information about the location of a custom plugin.
func (o CustomPluginOutput) Location() CustomPluginLocationOutput {
	return o.ApplyT(func(v *CustomPlugin) CustomPluginLocationOutput { return v.Location }).(CustomPluginLocationOutput)
}

// The name of the custom plugin.
func (o CustomPluginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomPlugin) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The revision of the custom plugin.
func (o CustomPluginOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v *CustomPlugin) pulumi.IntOutput { return v.Revision }).(pulumi.IntOutput)
}

// An array of key-value pairs to apply to this resource.
func (o CustomPluginOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *CustomPlugin) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomPluginInput)(nil)).Elem(), &CustomPlugin{})
	pulumi.RegisterOutputType(CustomPluginOutput{})
}
