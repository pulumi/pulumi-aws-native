// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kafkaconnect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Details of how to connect to an Apache Kafka cluster.
type ConnectorApacheKafkaCluster struct {
	// The bootstrap servers string of the Apache Kafka cluster.
	BootstrapServers string       `pulumi:"bootstrapServers"`
	Vpc              ConnectorVpc `pulumi:"vpc"`
}

// ConnectorApacheKafkaClusterInput is an input type that accepts ConnectorApacheKafkaClusterArgs and ConnectorApacheKafkaClusterOutput values.
// You can construct a concrete instance of `ConnectorApacheKafkaClusterInput` via:
//
//          ConnectorApacheKafkaClusterArgs{...}
type ConnectorApacheKafkaClusterInput interface {
	pulumi.Input

	ToConnectorApacheKafkaClusterOutput() ConnectorApacheKafkaClusterOutput
	ToConnectorApacheKafkaClusterOutputWithContext(context.Context) ConnectorApacheKafkaClusterOutput
}

// Details of how to connect to an Apache Kafka cluster.
type ConnectorApacheKafkaClusterArgs struct {
	// The bootstrap servers string of the Apache Kafka cluster.
	BootstrapServers pulumi.StringInput `pulumi:"bootstrapServers"`
	Vpc              ConnectorVpcInput  `pulumi:"vpc"`
}

func (ConnectorApacheKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorApacheKafkaCluster)(nil)).Elem()
}

func (i ConnectorApacheKafkaClusterArgs) ToConnectorApacheKafkaClusterOutput() ConnectorApacheKafkaClusterOutput {
	return i.ToConnectorApacheKafkaClusterOutputWithContext(context.Background())
}

func (i ConnectorApacheKafkaClusterArgs) ToConnectorApacheKafkaClusterOutputWithContext(ctx context.Context) ConnectorApacheKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorApacheKafkaClusterOutput)
}

func (i ConnectorApacheKafkaClusterArgs) ToConnectorApacheKafkaClusterPtrOutput() ConnectorApacheKafkaClusterPtrOutput {
	return i.ToConnectorApacheKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ConnectorApacheKafkaClusterArgs) ToConnectorApacheKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorApacheKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorApacheKafkaClusterOutput).ToConnectorApacheKafkaClusterPtrOutputWithContext(ctx)
}

// ConnectorApacheKafkaClusterPtrInput is an input type that accepts ConnectorApacheKafkaClusterArgs, ConnectorApacheKafkaClusterPtr and ConnectorApacheKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ConnectorApacheKafkaClusterPtrInput` via:
//
//          ConnectorApacheKafkaClusterArgs{...}
//
//  or:
//
//          nil
type ConnectorApacheKafkaClusterPtrInput interface {
	pulumi.Input

	ToConnectorApacheKafkaClusterPtrOutput() ConnectorApacheKafkaClusterPtrOutput
	ToConnectorApacheKafkaClusterPtrOutputWithContext(context.Context) ConnectorApacheKafkaClusterPtrOutput
}

type connectorApacheKafkaClusterPtrType ConnectorApacheKafkaClusterArgs

func ConnectorApacheKafkaClusterPtr(v *ConnectorApacheKafkaClusterArgs) ConnectorApacheKafkaClusterPtrInput {
	return (*connectorApacheKafkaClusterPtrType)(v)
}

func (*connectorApacheKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorApacheKafkaCluster)(nil)).Elem()
}

func (i *connectorApacheKafkaClusterPtrType) ToConnectorApacheKafkaClusterPtrOutput() ConnectorApacheKafkaClusterPtrOutput {
	return i.ToConnectorApacheKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *connectorApacheKafkaClusterPtrType) ToConnectorApacheKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorApacheKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorApacheKafkaClusterPtrOutput)
}

// Details of how to connect to an Apache Kafka cluster.
type ConnectorApacheKafkaClusterOutput struct{ *pulumi.OutputState }

func (ConnectorApacheKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorApacheKafkaCluster)(nil)).Elem()
}

func (o ConnectorApacheKafkaClusterOutput) ToConnectorApacheKafkaClusterOutput() ConnectorApacheKafkaClusterOutput {
	return o
}

func (o ConnectorApacheKafkaClusterOutput) ToConnectorApacheKafkaClusterOutputWithContext(ctx context.Context) ConnectorApacheKafkaClusterOutput {
	return o
}

func (o ConnectorApacheKafkaClusterOutput) ToConnectorApacheKafkaClusterPtrOutput() ConnectorApacheKafkaClusterPtrOutput {
	return o.ToConnectorApacheKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ConnectorApacheKafkaClusterOutput) ToConnectorApacheKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorApacheKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorApacheKafkaCluster) *ConnectorApacheKafkaCluster {
		return &v
	}).(ConnectorApacheKafkaClusterPtrOutput)
}

// The bootstrap servers string of the Apache Kafka cluster.
func (o ConnectorApacheKafkaClusterOutput) BootstrapServers() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorApacheKafkaCluster) string { return v.BootstrapServers }).(pulumi.StringOutput)
}

func (o ConnectorApacheKafkaClusterOutput) Vpc() ConnectorVpcOutput {
	return o.ApplyT(func(v ConnectorApacheKafkaCluster) ConnectorVpc { return v.Vpc }).(ConnectorVpcOutput)
}

type ConnectorApacheKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ConnectorApacheKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorApacheKafkaCluster)(nil)).Elem()
}

func (o ConnectorApacheKafkaClusterPtrOutput) ToConnectorApacheKafkaClusterPtrOutput() ConnectorApacheKafkaClusterPtrOutput {
	return o
}

func (o ConnectorApacheKafkaClusterPtrOutput) ToConnectorApacheKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorApacheKafkaClusterPtrOutput {
	return o
}

func (o ConnectorApacheKafkaClusterPtrOutput) Elem() ConnectorApacheKafkaClusterOutput {
	return o.ApplyT(func(v *ConnectorApacheKafkaCluster) ConnectorApacheKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ConnectorApacheKafkaCluster
		return ret
	}).(ConnectorApacheKafkaClusterOutput)
}

// The bootstrap servers string of the Apache Kafka cluster.
func (o ConnectorApacheKafkaClusterPtrOutput) BootstrapServers() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorApacheKafkaCluster) *string {
		if v == nil {
			return nil
		}
		return &v.BootstrapServers
	}).(pulumi.StringPtrOutput)
}

func (o ConnectorApacheKafkaClusterPtrOutput) Vpc() ConnectorVpcPtrOutput {
	return o.ApplyT(func(v *ConnectorApacheKafkaCluster) *ConnectorVpc {
		if v == nil {
			return nil
		}
		return &v.Vpc
	}).(ConnectorVpcPtrOutput)
}

// Details about auto scaling of a connector.
type ConnectorAutoScaling struct {
	// The maximum number of workers for a connector.
	MaxWorkerCount int `pulumi:"maxWorkerCount"`
	// Specifies how many MSK Connect Units (MCU) as the minimum scaling unit.
	McuCount int `pulumi:"mcuCount"`
	// The minimum number of workers for a connector.
	MinWorkerCount int                     `pulumi:"minWorkerCount"`
	ScaleInPolicy  ConnectorScaleInPolicy  `pulumi:"scaleInPolicy"`
	ScaleOutPolicy ConnectorScaleOutPolicy `pulumi:"scaleOutPolicy"`
}

// ConnectorAutoScalingInput is an input type that accepts ConnectorAutoScalingArgs and ConnectorAutoScalingOutput values.
// You can construct a concrete instance of `ConnectorAutoScalingInput` via:
//
//          ConnectorAutoScalingArgs{...}
type ConnectorAutoScalingInput interface {
	pulumi.Input

	ToConnectorAutoScalingOutput() ConnectorAutoScalingOutput
	ToConnectorAutoScalingOutputWithContext(context.Context) ConnectorAutoScalingOutput
}

// Details about auto scaling of a connector.
type ConnectorAutoScalingArgs struct {
	// The maximum number of workers for a connector.
	MaxWorkerCount pulumi.IntInput `pulumi:"maxWorkerCount"`
	// Specifies how many MSK Connect Units (MCU) as the minimum scaling unit.
	McuCount pulumi.IntInput `pulumi:"mcuCount"`
	// The minimum number of workers for a connector.
	MinWorkerCount pulumi.IntInput              `pulumi:"minWorkerCount"`
	ScaleInPolicy  ConnectorScaleInPolicyInput  `pulumi:"scaleInPolicy"`
	ScaleOutPolicy ConnectorScaleOutPolicyInput `pulumi:"scaleOutPolicy"`
}

func (ConnectorAutoScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAutoScaling)(nil)).Elem()
}

func (i ConnectorAutoScalingArgs) ToConnectorAutoScalingOutput() ConnectorAutoScalingOutput {
	return i.ToConnectorAutoScalingOutputWithContext(context.Background())
}

func (i ConnectorAutoScalingArgs) ToConnectorAutoScalingOutputWithContext(ctx context.Context) ConnectorAutoScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAutoScalingOutput)
}

func (i ConnectorAutoScalingArgs) ToConnectorAutoScalingPtrOutput() ConnectorAutoScalingPtrOutput {
	return i.ToConnectorAutoScalingPtrOutputWithContext(context.Background())
}

func (i ConnectorAutoScalingArgs) ToConnectorAutoScalingPtrOutputWithContext(ctx context.Context) ConnectorAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAutoScalingOutput).ToConnectorAutoScalingPtrOutputWithContext(ctx)
}

// ConnectorAutoScalingPtrInput is an input type that accepts ConnectorAutoScalingArgs, ConnectorAutoScalingPtr and ConnectorAutoScalingPtrOutput values.
// You can construct a concrete instance of `ConnectorAutoScalingPtrInput` via:
//
//          ConnectorAutoScalingArgs{...}
//
//  or:
//
//          nil
type ConnectorAutoScalingPtrInput interface {
	pulumi.Input

	ToConnectorAutoScalingPtrOutput() ConnectorAutoScalingPtrOutput
	ToConnectorAutoScalingPtrOutputWithContext(context.Context) ConnectorAutoScalingPtrOutput
}

type connectorAutoScalingPtrType ConnectorAutoScalingArgs

func ConnectorAutoScalingPtr(v *ConnectorAutoScalingArgs) ConnectorAutoScalingPtrInput {
	return (*connectorAutoScalingPtrType)(v)
}

func (*connectorAutoScalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAutoScaling)(nil)).Elem()
}

func (i *connectorAutoScalingPtrType) ToConnectorAutoScalingPtrOutput() ConnectorAutoScalingPtrOutput {
	return i.ToConnectorAutoScalingPtrOutputWithContext(context.Background())
}

func (i *connectorAutoScalingPtrType) ToConnectorAutoScalingPtrOutputWithContext(ctx context.Context) ConnectorAutoScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorAutoScalingPtrOutput)
}

// Details about auto scaling of a connector.
type ConnectorAutoScalingOutput struct{ *pulumi.OutputState }

func (ConnectorAutoScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorAutoScaling)(nil)).Elem()
}

func (o ConnectorAutoScalingOutput) ToConnectorAutoScalingOutput() ConnectorAutoScalingOutput {
	return o
}

func (o ConnectorAutoScalingOutput) ToConnectorAutoScalingOutputWithContext(ctx context.Context) ConnectorAutoScalingOutput {
	return o
}

func (o ConnectorAutoScalingOutput) ToConnectorAutoScalingPtrOutput() ConnectorAutoScalingPtrOutput {
	return o.ToConnectorAutoScalingPtrOutputWithContext(context.Background())
}

func (o ConnectorAutoScalingOutput) ToConnectorAutoScalingPtrOutputWithContext(ctx context.Context) ConnectorAutoScalingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorAutoScaling) *ConnectorAutoScaling {
		return &v
	}).(ConnectorAutoScalingPtrOutput)
}

// The maximum number of workers for a connector.
func (o ConnectorAutoScalingOutput) MaxWorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorAutoScaling) int { return v.MaxWorkerCount }).(pulumi.IntOutput)
}

// Specifies how many MSK Connect Units (MCU) as the minimum scaling unit.
func (o ConnectorAutoScalingOutput) McuCount() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorAutoScaling) int { return v.McuCount }).(pulumi.IntOutput)
}

// The minimum number of workers for a connector.
func (o ConnectorAutoScalingOutput) MinWorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorAutoScaling) int { return v.MinWorkerCount }).(pulumi.IntOutput)
}

func (o ConnectorAutoScalingOutput) ScaleInPolicy() ConnectorScaleInPolicyOutput {
	return o.ApplyT(func(v ConnectorAutoScaling) ConnectorScaleInPolicy { return v.ScaleInPolicy }).(ConnectorScaleInPolicyOutput)
}

func (o ConnectorAutoScalingOutput) ScaleOutPolicy() ConnectorScaleOutPolicyOutput {
	return o.ApplyT(func(v ConnectorAutoScaling) ConnectorScaleOutPolicy { return v.ScaleOutPolicy }).(ConnectorScaleOutPolicyOutput)
}

type ConnectorAutoScalingPtrOutput struct{ *pulumi.OutputState }

func (ConnectorAutoScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorAutoScaling)(nil)).Elem()
}

func (o ConnectorAutoScalingPtrOutput) ToConnectorAutoScalingPtrOutput() ConnectorAutoScalingPtrOutput {
	return o
}

func (o ConnectorAutoScalingPtrOutput) ToConnectorAutoScalingPtrOutputWithContext(ctx context.Context) ConnectorAutoScalingPtrOutput {
	return o
}

func (o ConnectorAutoScalingPtrOutput) Elem() ConnectorAutoScalingOutput {
	return o.ApplyT(func(v *ConnectorAutoScaling) ConnectorAutoScaling {
		if v != nil {
			return *v
		}
		var ret ConnectorAutoScaling
		return ret
	}).(ConnectorAutoScalingOutput)
}

// The maximum number of workers for a connector.
func (o ConnectorAutoScalingPtrOutput) MaxWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorAutoScaling) *int {
		if v == nil {
			return nil
		}
		return &v.MaxWorkerCount
	}).(pulumi.IntPtrOutput)
}

// Specifies how many MSK Connect Units (MCU) as the minimum scaling unit.
func (o ConnectorAutoScalingPtrOutput) McuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorAutoScaling) *int {
		if v == nil {
			return nil
		}
		return &v.McuCount
	}).(pulumi.IntPtrOutput)
}

// The minimum number of workers for a connector.
func (o ConnectorAutoScalingPtrOutput) MinWorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorAutoScaling) *int {
		if v == nil {
			return nil
		}
		return &v.MinWorkerCount
	}).(pulumi.IntPtrOutput)
}

func (o ConnectorAutoScalingPtrOutput) ScaleInPolicy() ConnectorScaleInPolicyPtrOutput {
	return o.ApplyT(func(v *ConnectorAutoScaling) *ConnectorScaleInPolicy {
		if v == nil {
			return nil
		}
		return &v.ScaleInPolicy
	}).(ConnectorScaleInPolicyPtrOutput)
}

func (o ConnectorAutoScalingPtrOutput) ScaleOutPolicy() ConnectorScaleOutPolicyPtrOutput {
	return o.ApplyT(func(v *ConnectorAutoScaling) *ConnectorScaleOutPolicy {
		if v == nil {
			return nil
		}
		return &v.ScaleOutPolicy
	}).(ConnectorScaleOutPolicyPtrOutput)
}

// Information about the capacity allocated to the connector.
type ConnectorCapacity struct {
	AutoScaling         *ConnectorAutoScaling         `pulumi:"autoScaling"`
	ProvisionedCapacity *ConnectorProvisionedCapacity `pulumi:"provisionedCapacity"`
}

// ConnectorCapacityInput is an input type that accepts ConnectorCapacityArgs and ConnectorCapacityOutput values.
// You can construct a concrete instance of `ConnectorCapacityInput` via:
//
//          ConnectorCapacityArgs{...}
type ConnectorCapacityInput interface {
	pulumi.Input

	ToConnectorCapacityOutput() ConnectorCapacityOutput
	ToConnectorCapacityOutputWithContext(context.Context) ConnectorCapacityOutput
}

// Information about the capacity allocated to the connector.
type ConnectorCapacityArgs struct {
	AutoScaling         ConnectorAutoScalingPtrInput         `pulumi:"autoScaling"`
	ProvisionedCapacity ConnectorProvisionedCapacityPtrInput `pulumi:"provisionedCapacity"`
}

func (ConnectorCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCapacity)(nil)).Elem()
}

func (i ConnectorCapacityArgs) ToConnectorCapacityOutput() ConnectorCapacityOutput {
	return i.ToConnectorCapacityOutputWithContext(context.Background())
}

func (i ConnectorCapacityArgs) ToConnectorCapacityOutputWithContext(ctx context.Context) ConnectorCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityOutput)
}

func (i ConnectorCapacityArgs) ToConnectorCapacityPtrOutput() ConnectorCapacityPtrOutput {
	return i.ToConnectorCapacityPtrOutputWithContext(context.Background())
}

func (i ConnectorCapacityArgs) ToConnectorCapacityPtrOutputWithContext(ctx context.Context) ConnectorCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityOutput).ToConnectorCapacityPtrOutputWithContext(ctx)
}

// ConnectorCapacityPtrInput is an input type that accepts ConnectorCapacityArgs, ConnectorCapacityPtr and ConnectorCapacityPtrOutput values.
// You can construct a concrete instance of `ConnectorCapacityPtrInput` via:
//
//          ConnectorCapacityArgs{...}
//
//  or:
//
//          nil
type ConnectorCapacityPtrInput interface {
	pulumi.Input

	ToConnectorCapacityPtrOutput() ConnectorCapacityPtrOutput
	ToConnectorCapacityPtrOutputWithContext(context.Context) ConnectorCapacityPtrOutput
}

type connectorCapacityPtrType ConnectorCapacityArgs

func ConnectorCapacityPtr(v *ConnectorCapacityArgs) ConnectorCapacityPtrInput {
	return (*connectorCapacityPtrType)(v)
}

func (*connectorCapacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCapacity)(nil)).Elem()
}

func (i *connectorCapacityPtrType) ToConnectorCapacityPtrOutput() ConnectorCapacityPtrOutput {
	return i.ToConnectorCapacityPtrOutputWithContext(context.Background())
}

func (i *connectorCapacityPtrType) ToConnectorCapacityPtrOutputWithContext(ctx context.Context) ConnectorCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCapacityPtrOutput)
}

// Information about the capacity allocated to the connector.
type ConnectorCapacityOutput struct{ *pulumi.OutputState }

func (ConnectorCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCapacity)(nil)).Elem()
}

func (o ConnectorCapacityOutput) ToConnectorCapacityOutput() ConnectorCapacityOutput {
	return o
}

func (o ConnectorCapacityOutput) ToConnectorCapacityOutputWithContext(ctx context.Context) ConnectorCapacityOutput {
	return o
}

func (o ConnectorCapacityOutput) ToConnectorCapacityPtrOutput() ConnectorCapacityPtrOutput {
	return o.ToConnectorCapacityPtrOutputWithContext(context.Background())
}

func (o ConnectorCapacityOutput) ToConnectorCapacityPtrOutputWithContext(ctx context.Context) ConnectorCapacityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorCapacity) *ConnectorCapacity {
		return &v
	}).(ConnectorCapacityPtrOutput)
}

func (o ConnectorCapacityOutput) AutoScaling() ConnectorAutoScalingPtrOutput {
	return o.ApplyT(func(v ConnectorCapacity) *ConnectorAutoScaling { return v.AutoScaling }).(ConnectorAutoScalingPtrOutput)
}

func (o ConnectorCapacityOutput) ProvisionedCapacity() ConnectorProvisionedCapacityPtrOutput {
	return o.ApplyT(func(v ConnectorCapacity) *ConnectorProvisionedCapacity { return v.ProvisionedCapacity }).(ConnectorProvisionedCapacityPtrOutput)
}

type ConnectorCapacityPtrOutput struct{ *pulumi.OutputState }

func (ConnectorCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCapacity)(nil)).Elem()
}

func (o ConnectorCapacityPtrOutput) ToConnectorCapacityPtrOutput() ConnectorCapacityPtrOutput {
	return o
}

func (o ConnectorCapacityPtrOutput) ToConnectorCapacityPtrOutputWithContext(ctx context.Context) ConnectorCapacityPtrOutput {
	return o
}

func (o ConnectorCapacityPtrOutput) Elem() ConnectorCapacityOutput {
	return o.ApplyT(func(v *ConnectorCapacity) ConnectorCapacity {
		if v != nil {
			return *v
		}
		var ret ConnectorCapacity
		return ret
	}).(ConnectorCapacityOutput)
}

func (o ConnectorCapacityPtrOutput) AutoScaling() ConnectorAutoScalingPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacity) *ConnectorAutoScaling {
		if v == nil {
			return nil
		}
		return v.AutoScaling
	}).(ConnectorAutoScalingPtrOutput)
}

func (o ConnectorCapacityPtrOutput) ProvisionedCapacity() ConnectorProvisionedCapacityPtrOutput {
	return o.ApplyT(func(v *ConnectorCapacity) *ConnectorProvisionedCapacity {
		if v == nil {
			return nil
		}
		return v.ProvisionedCapacity
	}).(ConnectorProvisionedCapacityPtrOutput)
}

// Details about delivering logs to Amazon CloudWatch Logs.
type ConnectorCloudWatchLogsLogDelivery struct {
	// Specifies whether the logs get sent to the specified CloudWatch Logs destination.
	Enabled bool `pulumi:"enabled"`
	// The CloudWatch log group that is the destination for log delivery.
	LogGroup *string `pulumi:"logGroup"`
}

// ConnectorCloudWatchLogsLogDeliveryInput is an input type that accepts ConnectorCloudWatchLogsLogDeliveryArgs and ConnectorCloudWatchLogsLogDeliveryOutput values.
// You can construct a concrete instance of `ConnectorCloudWatchLogsLogDeliveryInput` via:
//
//          ConnectorCloudWatchLogsLogDeliveryArgs{...}
type ConnectorCloudWatchLogsLogDeliveryInput interface {
	pulumi.Input

	ToConnectorCloudWatchLogsLogDeliveryOutput() ConnectorCloudWatchLogsLogDeliveryOutput
	ToConnectorCloudWatchLogsLogDeliveryOutputWithContext(context.Context) ConnectorCloudWatchLogsLogDeliveryOutput
}

// Details about delivering logs to Amazon CloudWatch Logs.
type ConnectorCloudWatchLogsLogDeliveryArgs struct {
	// Specifies whether the logs get sent to the specified CloudWatch Logs destination.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The CloudWatch log group that is the destination for log delivery.
	LogGroup pulumi.StringPtrInput `pulumi:"logGroup"`
}

func (ConnectorCloudWatchLogsLogDeliveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCloudWatchLogsLogDelivery)(nil)).Elem()
}

func (i ConnectorCloudWatchLogsLogDeliveryArgs) ToConnectorCloudWatchLogsLogDeliveryOutput() ConnectorCloudWatchLogsLogDeliveryOutput {
	return i.ToConnectorCloudWatchLogsLogDeliveryOutputWithContext(context.Background())
}

func (i ConnectorCloudWatchLogsLogDeliveryArgs) ToConnectorCloudWatchLogsLogDeliveryOutputWithContext(ctx context.Context) ConnectorCloudWatchLogsLogDeliveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCloudWatchLogsLogDeliveryOutput)
}

func (i ConnectorCloudWatchLogsLogDeliveryArgs) ToConnectorCloudWatchLogsLogDeliveryPtrOutput() ConnectorCloudWatchLogsLogDeliveryPtrOutput {
	return i.ToConnectorCloudWatchLogsLogDeliveryPtrOutputWithContext(context.Background())
}

func (i ConnectorCloudWatchLogsLogDeliveryArgs) ToConnectorCloudWatchLogsLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorCloudWatchLogsLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCloudWatchLogsLogDeliveryOutput).ToConnectorCloudWatchLogsLogDeliveryPtrOutputWithContext(ctx)
}

// ConnectorCloudWatchLogsLogDeliveryPtrInput is an input type that accepts ConnectorCloudWatchLogsLogDeliveryArgs, ConnectorCloudWatchLogsLogDeliveryPtr and ConnectorCloudWatchLogsLogDeliveryPtrOutput values.
// You can construct a concrete instance of `ConnectorCloudWatchLogsLogDeliveryPtrInput` via:
//
//          ConnectorCloudWatchLogsLogDeliveryArgs{...}
//
//  or:
//
//          nil
type ConnectorCloudWatchLogsLogDeliveryPtrInput interface {
	pulumi.Input

	ToConnectorCloudWatchLogsLogDeliveryPtrOutput() ConnectorCloudWatchLogsLogDeliveryPtrOutput
	ToConnectorCloudWatchLogsLogDeliveryPtrOutputWithContext(context.Context) ConnectorCloudWatchLogsLogDeliveryPtrOutput
}

type connectorCloudWatchLogsLogDeliveryPtrType ConnectorCloudWatchLogsLogDeliveryArgs

func ConnectorCloudWatchLogsLogDeliveryPtr(v *ConnectorCloudWatchLogsLogDeliveryArgs) ConnectorCloudWatchLogsLogDeliveryPtrInput {
	return (*connectorCloudWatchLogsLogDeliveryPtrType)(v)
}

func (*connectorCloudWatchLogsLogDeliveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCloudWatchLogsLogDelivery)(nil)).Elem()
}

func (i *connectorCloudWatchLogsLogDeliveryPtrType) ToConnectorCloudWatchLogsLogDeliveryPtrOutput() ConnectorCloudWatchLogsLogDeliveryPtrOutput {
	return i.ToConnectorCloudWatchLogsLogDeliveryPtrOutputWithContext(context.Background())
}

func (i *connectorCloudWatchLogsLogDeliveryPtrType) ToConnectorCloudWatchLogsLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorCloudWatchLogsLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCloudWatchLogsLogDeliveryPtrOutput)
}

// Details about delivering logs to Amazon CloudWatch Logs.
type ConnectorCloudWatchLogsLogDeliveryOutput struct{ *pulumi.OutputState }

func (ConnectorCloudWatchLogsLogDeliveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCloudWatchLogsLogDelivery)(nil)).Elem()
}

func (o ConnectorCloudWatchLogsLogDeliveryOutput) ToConnectorCloudWatchLogsLogDeliveryOutput() ConnectorCloudWatchLogsLogDeliveryOutput {
	return o
}

func (o ConnectorCloudWatchLogsLogDeliveryOutput) ToConnectorCloudWatchLogsLogDeliveryOutputWithContext(ctx context.Context) ConnectorCloudWatchLogsLogDeliveryOutput {
	return o
}

func (o ConnectorCloudWatchLogsLogDeliveryOutput) ToConnectorCloudWatchLogsLogDeliveryPtrOutput() ConnectorCloudWatchLogsLogDeliveryPtrOutput {
	return o.ToConnectorCloudWatchLogsLogDeliveryPtrOutputWithContext(context.Background())
}

func (o ConnectorCloudWatchLogsLogDeliveryOutput) ToConnectorCloudWatchLogsLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorCloudWatchLogsLogDeliveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorCloudWatchLogsLogDelivery) *ConnectorCloudWatchLogsLogDelivery {
		return &v
	}).(ConnectorCloudWatchLogsLogDeliveryPtrOutput)
}

// Specifies whether the logs get sent to the specified CloudWatch Logs destination.
func (o ConnectorCloudWatchLogsLogDeliveryOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectorCloudWatchLogsLogDelivery) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The CloudWatch log group that is the destination for log delivery.
func (o ConnectorCloudWatchLogsLogDeliveryOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorCloudWatchLogsLogDelivery) *string { return v.LogGroup }).(pulumi.StringPtrOutput)
}

type ConnectorCloudWatchLogsLogDeliveryPtrOutput struct{ *pulumi.OutputState }

func (ConnectorCloudWatchLogsLogDeliveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorCloudWatchLogsLogDelivery)(nil)).Elem()
}

func (o ConnectorCloudWatchLogsLogDeliveryPtrOutput) ToConnectorCloudWatchLogsLogDeliveryPtrOutput() ConnectorCloudWatchLogsLogDeliveryPtrOutput {
	return o
}

func (o ConnectorCloudWatchLogsLogDeliveryPtrOutput) ToConnectorCloudWatchLogsLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorCloudWatchLogsLogDeliveryPtrOutput {
	return o
}

func (o ConnectorCloudWatchLogsLogDeliveryPtrOutput) Elem() ConnectorCloudWatchLogsLogDeliveryOutput {
	return o.ApplyT(func(v *ConnectorCloudWatchLogsLogDelivery) ConnectorCloudWatchLogsLogDelivery {
		if v != nil {
			return *v
		}
		var ret ConnectorCloudWatchLogsLogDelivery
		return ret
	}).(ConnectorCloudWatchLogsLogDeliveryOutput)
}

// Specifies whether the logs get sent to the specified CloudWatch Logs destination.
func (o ConnectorCloudWatchLogsLogDeliveryPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorCloudWatchLogsLogDelivery) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The CloudWatch log group that is the destination for log delivery.
func (o ConnectorCloudWatchLogsLogDeliveryPtrOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorCloudWatchLogsLogDelivery) *string {
		if v == nil {
			return nil
		}
		return v.LogGroup
	}).(pulumi.StringPtrOutput)
}

// Details about a custom plugin.
type ConnectorCustomPlugin struct {
	// The Amazon Resource Name (ARN) of the custom plugin to use.
	CustomPluginArn string `pulumi:"customPluginArn"`
	// The revision of the custom plugin to use.
	Revision int `pulumi:"revision"`
}

// ConnectorCustomPluginInput is an input type that accepts ConnectorCustomPluginArgs and ConnectorCustomPluginOutput values.
// You can construct a concrete instance of `ConnectorCustomPluginInput` via:
//
//          ConnectorCustomPluginArgs{...}
type ConnectorCustomPluginInput interface {
	pulumi.Input

	ToConnectorCustomPluginOutput() ConnectorCustomPluginOutput
	ToConnectorCustomPluginOutputWithContext(context.Context) ConnectorCustomPluginOutput
}

// Details about a custom plugin.
type ConnectorCustomPluginArgs struct {
	// The Amazon Resource Name (ARN) of the custom plugin to use.
	CustomPluginArn pulumi.StringInput `pulumi:"customPluginArn"`
	// The revision of the custom plugin to use.
	Revision pulumi.IntInput `pulumi:"revision"`
}

func (ConnectorCustomPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCustomPlugin)(nil)).Elem()
}

func (i ConnectorCustomPluginArgs) ToConnectorCustomPluginOutput() ConnectorCustomPluginOutput {
	return i.ToConnectorCustomPluginOutputWithContext(context.Background())
}

func (i ConnectorCustomPluginArgs) ToConnectorCustomPluginOutputWithContext(ctx context.Context) ConnectorCustomPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorCustomPluginOutput)
}

// Details about a custom plugin.
type ConnectorCustomPluginOutput struct{ *pulumi.OutputState }

func (ConnectorCustomPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorCustomPlugin)(nil)).Elem()
}

func (o ConnectorCustomPluginOutput) ToConnectorCustomPluginOutput() ConnectorCustomPluginOutput {
	return o
}

func (o ConnectorCustomPluginOutput) ToConnectorCustomPluginOutputWithContext(ctx context.Context) ConnectorCustomPluginOutput {
	return o
}

// The Amazon Resource Name (ARN) of the custom plugin to use.
func (o ConnectorCustomPluginOutput) CustomPluginArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorCustomPlugin) string { return v.CustomPluginArn }).(pulumi.StringOutput)
}

// The revision of the custom plugin to use.
func (o ConnectorCustomPluginOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorCustomPlugin) int { return v.Revision }).(pulumi.IntOutput)
}

// Details about delivering logs to Amazon Kinesis Data Firehose.
type ConnectorFirehoseLogDelivery struct {
	// The Kinesis Data Firehose delivery stream that is the destination for log delivery.
	DeliveryStream *string `pulumi:"deliveryStream"`
	// Specifies whether the logs get sent to the specified Kinesis Data Firehose delivery stream.
	Enabled bool `pulumi:"enabled"`
}

// ConnectorFirehoseLogDeliveryInput is an input type that accepts ConnectorFirehoseLogDeliveryArgs and ConnectorFirehoseLogDeliveryOutput values.
// You can construct a concrete instance of `ConnectorFirehoseLogDeliveryInput` via:
//
//          ConnectorFirehoseLogDeliveryArgs{...}
type ConnectorFirehoseLogDeliveryInput interface {
	pulumi.Input

	ToConnectorFirehoseLogDeliveryOutput() ConnectorFirehoseLogDeliveryOutput
	ToConnectorFirehoseLogDeliveryOutputWithContext(context.Context) ConnectorFirehoseLogDeliveryOutput
}

// Details about delivering logs to Amazon Kinesis Data Firehose.
type ConnectorFirehoseLogDeliveryArgs struct {
	// The Kinesis Data Firehose delivery stream that is the destination for log delivery.
	DeliveryStream pulumi.StringPtrInput `pulumi:"deliveryStream"`
	// Specifies whether the logs get sent to the specified Kinesis Data Firehose delivery stream.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ConnectorFirehoseLogDeliveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorFirehoseLogDelivery)(nil)).Elem()
}

func (i ConnectorFirehoseLogDeliveryArgs) ToConnectorFirehoseLogDeliveryOutput() ConnectorFirehoseLogDeliveryOutput {
	return i.ToConnectorFirehoseLogDeliveryOutputWithContext(context.Background())
}

func (i ConnectorFirehoseLogDeliveryArgs) ToConnectorFirehoseLogDeliveryOutputWithContext(ctx context.Context) ConnectorFirehoseLogDeliveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorFirehoseLogDeliveryOutput)
}

func (i ConnectorFirehoseLogDeliveryArgs) ToConnectorFirehoseLogDeliveryPtrOutput() ConnectorFirehoseLogDeliveryPtrOutput {
	return i.ToConnectorFirehoseLogDeliveryPtrOutputWithContext(context.Background())
}

func (i ConnectorFirehoseLogDeliveryArgs) ToConnectorFirehoseLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorFirehoseLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorFirehoseLogDeliveryOutput).ToConnectorFirehoseLogDeliveryPtrOutputWithContext(ctx)
}

// ConnectorFirehoseLogDeliveryPtrInput is an input type that accepts ConnectorFirehoseLogDeliveryArgs, ConnectorFirehoseLogDeliveryPtr and ConnectorFirehoseLogDeliveryPtrOutput values.
// You can construct a concrete instance of `ConnectorFirehoseLogDeliveryPtrInput` via:
//
//          ConnectorFirehoseLogDeliveryArgs{...}
//
//  or:
//
//          nil
type ConnectorFirehoseLogDeliveryPtrInput interface {
	pulumi.Input

	ToConnectorFirehoseLogDeliveryPtrOutput() ConnectorFirehoseLogDeliveryPtrOutput
	ToConnectorFirehoseLogDeliveryPtrOutputWithContext(context.Context) ConnectorFirehoseLogDeliveryPtrOutput
}

type connectorFirehoseLogDeliveryPtrType ConnectorFirehoseLogDeliveryArgs

func ConnectorFirehoseLogDeliveryPtr(v *ConnectorFirehoseLogDeliveryArgs) ConnectorFirehoseLogDeliveryPtrInput {
	return (*connectorFirehoseLogDeliveryPtrType)(v)
}

func (*connectorFirehoseLogDeliveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorFirehoseLogDelivery)(nil)).Elem()
}

func (i *connectorFirehoseLogDeliveryPtrType) ToConnectorFirehoseLogDeliveryPtrOutput() ConnectorFirehoseLogDeliveryPtrOutput {
	return i.ToConnectorFirehoseLogDeliveryPtrOutputWithContext(context.Background())
}

func (i *connectorFirehoseLogDeliveryPtrType) ToConnectorFirehoseLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorFirehoseLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorFirehoseLogDeliveryPtrOutput)
}

// Details about delivering logs to Amazon Kinesis Data Firehose.
type ConnectorFirehoseLogDeliveryOutput struct{ *pulumi.OutputState }

func (ConnectorFirehoseLogDeliveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorFirehoseLogDelivery)(nil)).Elem()
}

func (o ConnectorFirehoseLogDeliveryOutput) ToConnectorFirehoseLogDeliveryOutput() ConnectorFirehoseLogDeliveryOutput {
	return o
}

func (o ConnectorFirehoseLogDeliveryOutput) ToConnectorFirehoseLogDeliveryOutputWithContext(ctx context.Context) ConnectorFirehoseLogDeliveryOutput {
	return o
}

func (o ConnectorFirehoseLogDeliveryOutput) ToConnectorFirehoseLogDeliveryPtrOutput() ConnectorFirehoseLogDeliveryPtrOutput {
	return o.ToConnectorFirehoseLogDeliveryPtrOutputWithContext(context.Background())
}

func (o ConnectorFirehoseLogDeliveryOutput) ToConnectorFirehoseLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorFirehoseLogDeliveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorFirehoseLogDelivery) *ConnectorFirehoseLogDelivery {
		return &v
	}).(ConnectorFirehoseLogDeliveryPtrOutput)
}

// The Kinesis Data Firehose delivery stream that is the destination for log delivery.
func (o ConnectorFirehoseLogDeliveryOutput) DeliveryStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorFirehoseLogDelivery) *string { return v.DeliveryStream }).(pulumi.StringPtrOutput)
}

// Specifies whether the logs get sent to the specified Kinesis Data Firehose delivery stream.
func (o ConnectorFirehoseLogDeliveryOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectorFirehoseLogDelivery) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ConnectorFirehoseLogDeliveryPtrOutput struct{ *pulumi.OutputState }

func (ConnectorFirehoseLogDeliveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorFirehoseLogDelivery)(nil)).Elem()
}

func (o ConnectorFirehoseLogDeliveryPtrOutput) ToConnectorFirehoseLogDeliveryPtrOutput() ConnectorFirehoseLogDeliveryPtrOutput {
	return o
}

func (o ConnectorFirehoseLogDeliveryPtrOutput) ToConnectorFirehoseLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorFirehoseLogDeliveryPtrOutput {
	return o
}

func (o ConnectorFirehoseLogDeliveryPtrOutput) Elem() ConnectorFirehoseLogDeliveryOutput {
	return o.ApplyT(func(v *ConnectorFirehoseLogDelivery) ConnectorFirehoseLogDelivery {
		if v != nil {
			return *v
		}
		var ret ConnectorFirehoseLogDelivery
		return ret
	}).(ConnectorFirehoseLogDeliveryOutput)
}

// The Kinesis Data Firehose delivery stream that is the destination for log delivery.
func (o ConnectorFirehoseLogDeliveryPtrOutput) DeliveryStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorFirehoseLogDelivery) *string {
		if v == nil {
			return nil
		}
		return v.DeliveryStream
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the logs get sent to the specified Kinesis Data Firehose delivery stream.
func (o ConnectorFirehoseLogDeliveryPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorFirehoseLogDelivery) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Details of how to connect to the Kafka cluster.
type ConnectorKafkaCluster struct {
	ApacheKafkaCluster ConnectorApacheKafkaCluster `pulumi:"apacheKafkaCluster"`
}

// ConnectorKafkaClusterInput is an input type that accepts ConnectorKafkaClusterArgs and ConnectorKafkaClusterOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterInput` via:
//
//          ConnectorKafkaClusterArgs{...}
type ConnectorKafkaClusterInput interface {
	pulumi.Input

	ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput
	ToConnectorKafkaClusterOutputWithContext(context.Context) ConnectorKafkaClusterOutput
}

// Details of how to connect to the Kafka cluster.
type ConnectorKafkaClusterArgs struct {
	ApacheKafkaCluster ConnectorApacheKafkaClusterInput `pulumi:"apacheKafkaCluster"`
}

func (ConnectorKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaCluster)(nil)).Elem()
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput {
	return i.ToConnectorKafkaClusterOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterOutputWithContext(ctx context.Context) ConnectorKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterOutput)
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return i.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterArgs) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterOutput).ToConnectorKafkaClusterPtrOutputWithContext(ctx)
}

// ConnectorKafkaClusterPtrInput is an input type that accepts ConnectorKafkaClusterArgs, ConnectorKafkaClusterPtr and ConnectorKafkaClusterPtrOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterPtrInput` via:
//
//          ConnectorKafkaClusterArgs{...}
//
//  or:
//
//          nil
type ConnectorKafkaClusterPtrInput interface {
	pulumi.Input

	ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput
	ToConnectorKafkaClusterPtrOutputWithContext(context.Context) ConnectorKafkaClusterPtrOutput
}

type connectorKafkaClusterPtrType ConnectorKafkaClusterArgs

func ConnectorKafkaClusterPtr(v *ConnectorKafkaClusterArgs) ConnectorKafkaClusterPtrInput {
	return (*connectorKafkaClusterPtrType)(v)
}

func (*connectorKafkaClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaCluster)(nil)).Elem()
}

func (i *connectorKafkaClusterPtrType) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return i.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (i *connectorKafkaClusterPtrType) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterPtrOutput)
}

// Details of how to connect to the Kafka cluster.
type ConnectorKafkaClusterOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaCluster)(nil)).Elem()
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterOutput() ConnectorKafkaClusterOutput {
	return o
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterOutputWithContext(ctx context.Context) ConnectorKafkaClusterOutput {
	return o
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return o.ToConnectorKafkaClusterPtrOutputWithContext(context.Background())
}

func (o ConnectorKafkaClusterOutput) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorKafkaCluster) *ConnectorKafkaCluster {
		return &v
	}).(ConnectorKafkaClusterPtrOutput)
}

func (o ConnectorKafkaClusterOutput) ApacheKafkaCluster() ConnectorApacheKafkaClusterOutput {
	return o.ApplyT(func(v ConnectorKafkaCluster) ConnectorApacheKafkaCluster { return v.ApacheKafkaCluster }).(ConnectorApacheKafkaClusterOutput)
}

type ConnectorKafkaClusterPtrOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaCluster)(nil)).Elem()
}

func (o ConnectorKafkaClusterPtrOutput) ToConnectorKafkaClusterPtrOutput() ConnectorKafkaClusterPtrOutput {
	return o
}

func (o ConnectorKafkaClusterPtrOutput) ToConnectorKafkaClusterPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterPtrOutput {
	return o
}

func (o ConnectorKafkaClusterPtrOutput) Elem() ConnectorKafkaClusterOutput {
	return o.ApplyT(func(v *ConnectorKafkaCluster) ConnectorKafkaCluster {
		if v != nil {
			return *v
		}
		var ret ConnectorKafkaCluster
		return ret
	}).(ConnectorKafkaClusterOutput)
}

func (o ConnectorKafkaClusterPtrOutput) ApacheKafkaCluster() ConnectorApacheKafkaClusterPtrOutput {
	return o.ApplyT(func(v *ConnectorKafkaCluster) *ConnectorApacheKafkaCluster {
		if v == nil {
			return nil
		}
		return &v.ApacheKafkaCluster
	}).(ConnectorApacheKafkaClusterPtrOutput)
}

// Details of the client authentication used by the Kafka cluster.
type ConnectorKafkaClusterClientAuthentication struct {
	AuthenticationType ConnectorKafkaClusterClientAuthenticationType `pulumi:"authenticationType"`
}

// ConnectorKafkaClusterClientAuthenticationInput is an input type that accepts ConnectorKafkaClusterClientAuthenticationArgs and ConnectorKafkaClusterClientAuthenticationOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterClientAuthenticationInput` via:
//
//          ConnectorKafkaClusterClientAuthenticationArgs{...}
type ConnectorKafkaClusterClientAuthenticationInput interface {
	pulumi.Input

	ToConnectorKafkaClusterClientAuthenticationOutput() ConnectorKafkaClusterClientAuthenticationOutput
	ToConnectorKafkaClusterClientAuthenticationOutputWithContext(context.Context) ConnectorKafkaClusterClientAuthenticationOutput
}

// Details of the client authentication used by the Kafka cluster.
type ConnectorKafkaClusterClientAuthenticationArgs struct {
	AuthenticationType ConnectorKafkaClusterClientAuthenticationTypeInput `pulumi:"authenticationType"`
}

func (ConnectorKafkaClusterClientAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaClusterClientAuthentication)(nil)).Elem()
}

func (i ConnectorKafkaClusterClientAuthenticationArgs) ToConnectorKafkaClusterClientAuthenticationOutput() ConnectorKafkaClusterClientAuthenticationOutput {
	return i.ToConnectorKafkaClusterClientAuthenticationOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterClientAuthenticationArgs) ToConnectorKafkaClusterClientAuthenticationOutputWithContext(ctx context.Context) ConnectorKafkaClusterClientAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterClientAuthenticationOutput)
}

func (i ConnectorKafkaClusterClientAuthenticationArgs) ToConnectorKafkaClusterClientAuthenticationPtrOutput() ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return i.ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterClientAuthenticationArgs) ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterClientAuthenticationOutput).ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(ctx)
}

// ConnectorKafkaClusterClientAuthenticationPtrInput is an input type that accepts ConnectorKafkaClusterClientAuthenticationArgs, ConnectorKafkaClusterClientAuthenticationPtr and ConnectorKafkaClusterClientAuthenticationPtrOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterClientAuthenticationPtrInput` via:
//
//          ConnectorKafkaClusterClientAuthenticationArgs{...}
//
//  or:
//
//          nil
type ConnectorKafkaClusterClientAuthenticationPtrInput interface {
	pulumi.Input

	ToConnectorKafkaClusterClientAuthenticationPtrOutput() ConnectorKafkaClusterClientAuthenticationPtrOutput
	ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(context.Context) ConnectorKafkaClusterClientAuthenticationPtrOutput
}

type connectorKafkaClusterClientAuthenticationPtrType ConnectorKafkaClusterClientAuthenticationArgs

func ConnectorKafkaClusterClientAuthenticationPtr(v *ConnectorKafkaClusterClientAuthenticationArgs) ConnectorKafkaClusterClientAuthenticationPtrInput {
	return (*connectorKafkaClusterClientAuthenticationPtrType)(v)
}

func (*connectorKafkaClusterClientAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaClusterClientAuthentication)(nil)).Elem()
}

func (i *connectorKafkaClusterClientAuthenticationPtrType) ToConnectorKafkaClusterClientAuthenticationPtrOutput() ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return i.ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (i *connectorKafkaClusterClientAuthenticationPtrType) ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterClientAuthenticationPtrOutput)
}

// Details of the client authentication used by the Kafka cluster.
type ConnectorKafkaClusterClientAuthenticationOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterClientAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaClusterClientAuthentication)(nil)).Elem()
}

func (o ConnectorKafkaClusterClientAuthenticationOutput) ToConnectorKafkaClusterClientAuthenticationOutput() ConnectorKafkaClusterClientAuthenticationOutput {
	return o
}

func (o ConnectorKafkaClusterClientAuthenticationOutput) ToConnectorKafkaClusterClientAuthenticationOutputWithContext(ctx context.Context) ConnectorKafkaClusterClientAuthenticationOutput {
	return o
}

func (o ConnectorKafkaClusterClientAuthenticationOutput) ToConnectorKafkaClusterClientAuthenticationPtrOutput() ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return o.ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (o ConnectorKafkaClusterClientAuthenticationOutput) ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorKafkaClusterClientAuthentication) *ConnectorKafkaClusterClientAuthentication {
		return &v
	}).(ConnectorKafkaClusterClientAuthenticationPtrOutput)
}

func (o ConnectorKafkaClusterClientAuthenticationOutput) AuthenticationType() ConnectorKafkaClusterClientAuthenticationTypeOutput {
	return o.ApplyT(func(v ConnectorKafkaClusterClientAuthentication) ConnectorKafkaClusterClientAuthenticationType {
		return v.AuthenticationType
	}).(ConnectorKafkaClusterClientAuthenticationTypeOutput)
}

type ConnectorKafkaClusterClientAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterClientAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaClusterClientAuthentication)(nil)).Elem()
}

func (o ConnectorKafkaClusterClientAuthenticationPtrOutput) ToConnectorKafkaClusterClientAuthenticationPtrOutput() ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return o
}

func (o ConnectorKafkaClusterClientAuthenticationPtrOutput) ToConnectorKafkaClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterClientAuthenticationPtrOutput {
	return o
}

func (o ConnectorKafkaClusterClientAuthenticationPtrOutput) Elem() ConnectorKafkaClusterClientAuthenticationOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterClientAuthentication) ConnectorKafkaClusterClientAuthentication {
		if v != nil {
			return *v
		}
		var ret ConnectorKafkaClusterClientAuthentication
		return ret
	}).(ConnectorKafkaClusterClientAuthenticationOutput)
}

func (o ConnectorKafkaClusterClientAuthenticationPtrOutput) AuthenticationType() ConnectorKafkaClusterClientAuthenticationTypePtrOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterClientAuthentication) *ConnectorKafkaClusterClientAuthenticationType {
		if v == nil {
			return nil
		}
		return &v.AuthenticationType
	}).(ConnectorKafkaClusterClientAuthenticationTypePtrOutput)
}

// Details of encryption in transit to the Kafka cluster.
type ConnectorKafkaClusterEncryptionInTransit struct {
	EncryptionType ConnectorKafkaClusterEncryptionInTransitType `pulumi:"encryptionType"`
}

// ConnectorKafkaClusterEncryptionInTransitInput is an input type that accepts ConnectorKafkaClusterEncryptionInTransitArgs and ConnectorKafkaClusterEncryptionInTransitOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterEncryptionInTransitInput` via:
//
//          ConnectorKafkaClusterEncryptionInTransitArgs{...}
type ConnectorKafkaClusterEncryptionInTransitInput interface {
	pulumi.Input

	ToConnectorKafkaClusterEncryptionInTransitOutput() ConnectorKafkaClusterEncryptionInTransitOutput
	ToConnectorKafkaClusterEncryptionInTransitOutputWithContext(context.Context) ConnectorKafkaClusterEncryptionInTransitOutput
}

// Details of encryption in transit to the Kafka cluster.
type ConnectorKafkaClusterEncryptionInTransitArgs struct {
	EncryptionType ConnectorKafkaClusterEncryptionInTransitTypeInput `pulumi:"encryptionType"`
}

func (ConnectorKafkaClusterEncryptionInTransitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaClusterEncryptionInTransit)(nil)).Elem()
}

func (i ConnectorKafkaClusterEncryptionInTransitArgs) ToConnectorKafkaClusterEncryptionInTransitOutput() ConnectorKafkaClusterEncryptionInTransitOutput {
	return i.ToConnectorKafkaClusterEncryptionInTransitOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterEncryptionInTransitArgs) ToConnectorKafkaClusterEncryptionInTransitOutputWithContext(ctx context.Context) ConnectorKafkaClusterEncryptionInTransitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterEncryptionInTransitOutput)
}

func (i ConnectorKafkaClusterEncryptionInTransitArgs) ToConnectorKafkaClusterEncryptionInTransitPtrOutput() ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return i.ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(context.Background())
}

func (i ConnectorKafkaClusterEncryptionInTransitArgs) ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterEncryptionInTransitOutput).ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(ctx)
}

// ConnectorKafkaClusterEncryptionInTransitPtrInput is an input type that accepts ConnectorKafkaClusterEncryptionInTransitArgs, ConnectorKafkaClusterEncryptionInTransitPtr and ConnectorKafkaClusterEncryptionInTransitPtrOutput values.
// You can construct a concrete instance of `ConnectorKafkaClusterEncryptionInTransitPtrInput` via:
//
//          ConnectorKafkaClusterEncryptionInTransitArgs{...}
//
//  or:
//
//          nil
type ConnectorKafkaClusterEncryptionInTransitPtrInput interface {
	pulumi.Input

	ToConnectorKafkaClusterEncryptionInTransitPtrOutput() ConnectorKafkaClusterEncryptionInTransitPtrOutput
	ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(context.Context) ConnectorKafkaClusterEncryptionInTransitPtrOutput
}

type connectorKafkaClusterEncryptionInTransitPtrType ConnectorKafkaClusterEncryptionInTransitArgs

func ConnectorKafkaClusterEncryptionInTransitPtr(v *ConnectorKafkaClusterEncryptionInTransitArgs) ConnectorKafkaClusterEncryptionInTransitPtrInput {
	return (*connectorKafkaClusterEncryptionInTransitPtrType)(v)
}

func (*connectorKafkaClusterEncryptionInTransitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaClusterEncryptionInTransit)(nil)).Elem()
}

func (i *connectorKafkaClusterEncryptionInTransitPtrType) ToConnectorKafkaClusterEncryptionInTransitPtrOutput() ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return i.ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(context.Background())
}

func (i *connectorKafkaClusterEncryptionInTransitPtrType) ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorKafkaClusterEncryptionInTransitPtrOutput)
}

// Details of encryption in transit to the Kafka cluster.
type ConnectorKafkaClusterEncryptionInTransitOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterEncryptionInTransitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorKafkaClusterEncryptionInTransit)(nil)).Elem()
}

func (o ConnectorKafkaClusterEncryptionInTransitOutput) ToConnectorKafkaClusterEncryptionInTransitOutput() ConnectorKafkaClusterEncryptionInTransitOutput {
	return o
}

func (o ConnectorKafkaClusterEncryptionInTransitOutput) ToConnectorKafkaClusterEncryptionInTransitOutputWithContext(ctx context.Context) ConnectorKafkaClusterEncryptionInTransitOutput {
	return o
}

func (o ConnectorKafkaClusterEncryptionInTransitOutput) ToConnectorKafkaClusterEncryptionInTransitPtrOutput() ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return o.ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(context.Background())
}

func (o ConnectorKafkaClusterEncryptionInTransitOutput) ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorKafkaClusterEncryptionInTransit) *ConnectorKafkaClusterEncryptionInTransit {
		return &v
	}).(ConnectorKafkaClusterEncryptionInTransitPtrOutput)
}

func (o ConnectorKafkaClusterEncryptionInTransitOutput) EncryptionType() ConnectorKafkaClusterEncryptionInTransitTypeOutput {
	return o.ApplyT(func(v ConnectorKafkaClusterEncryptionInTransit) ConnectorKafkaClusterEncryptionInTransitType {
		return v.EncryptionType
	}).(ConnectorKafkaClusterEncryptionInTransitTypeOutput)
}

type ConnectorKafkaClusterEncryptionInTransitPtrOutput struct{ *pulumi.OutputState }

func (ConnectorKafkaClusterEncryptionInTransitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorKafkaClusterEncryptionInTransit)(nil)).Elem()
}

func (o ConnectorKafkaClusterEncryptionInTransitPtrOutput) ToConnectorKafkaClusterEncryptionInTransitPtrOutput() ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return o
}

func (o ConnectorKafkaClusterEncryptionInTransitPtrOutput) ToConnectorKafkaClusterEncryptionInTransitPtrOutputWithContext(ctx context.Context) ConnectorKafkaClusterEncryptionInTransitPtrOutput {
	return o
}

func (o ConnectorKafkaClusterEncryptionInTransitPtrOutput) Elem() ConnectorKafkaClusterEncryptionInTransitOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterEncryptionInTransit) ConnectorKafkaClusterEncryptionInTransit {
		if v != nil {
			return *v
		}
		var ret ConnectorKafkaClusterEncryptionInTransit
		return ret
	}).(ConnectorKafkaClusterEncryptionInTransitOutput)
}

func (o ConnectorKafkaClusterEncryptionInTransitPtrOutput) EncryptionType() ConnectorKafkaClusterEncryptionInTransitTypePtrOutput {
	return o.ApplyT(func(v *ConnectorKafkaClusterEncryptionInTransit) *ConnectorKafkaClusterEncryptionInTransitType {
		if v == nil {
			return nil
		}
		return &v.EncryptionType
	}).(ConnectorKafkaClusterEncryptionInTransitTypePtrOutput)
}

// Details of what logs are delivered and where they are delivered.
type ConnectorLogDelivery struct {
	WorkerLogDelivery ConnectorWorkerLogDelivery `pulumi:"workerLogDelivery"`
}

// ConnectorLogDeliveryInput is an input type that accepts ConnectorLogDeliveryArgs and ConnectorLogDeliveryOutput values.
// You can construct a concrete instance of `ConnectorLogDeliveryInput` via:
//
//          ConnectorLogDeliveryArgs{...}
type ConnectorLogDeliveryInput interface {
	pulumi.Input

	ToConnectorLogDeliveryOutput() ConnectorLogDeliveryOutput
	ToConnectorLogDeliveryOutputWithContext(context.Context) ConnectorLogDeliveryOutput
}

// Details of what logs are delivered and where they are delivered.
type ConnectorLogDeliveryArgs struct {
	WorkerLogDelivery ConnectorWorkerLogDeliveryInput `pulumi:"workerLogDelivery"`
}

func (ConnectorLogDeliveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorLogDelivery)(nil)).Elem()
}

func (i ConnectorLogDeliveryArgs) ToConnectorLogDeliveryOutput() ConnectorLogDeliveryOutput {
	return i.ToConnectorLogDeliveryOutputWithContext(context.Background())
}

func (i ConnectorLogDeliveryArgs) ToConnectorLogDeliveryOutputWithContext(ctx context.Context) ConnectorLogDeliveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryOutput)
}

func (i ConnectorLogDeliveryArgs) ToConnectorLogDeliveryPtrOutput() ConnectorLogDeliveryPtrOutput {
	return i.ToConnectorLogDeliveryPtrOutputWithContext(context.Background())
}

func (i ConnectorLogDeliveryArgs) ToConnectorLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryOutput).ToConnectorLogDeliveryPtrOutputWithContext(ctx)
}

// ConnectorLogDeliveryPtrInput is an input type that accepts ConnectorLogDeliveryArgs, ConnectorLogDeliveryPtr and ConnectorLogDeliveryPtrOutput values.
// You can construct a concrete instance of `ConnectorLogDeliveryPtrInput` via:
//
//          ConnectorLogDeliveryArgs{...}
//
//  or:
//
//          nil
type ConnectorLogDeliveryPtrInput interface {
	pulumi.Input

	ToConnectorLogDeliveryPtrOutput() ConnectorLogDeliveryPtrOutput
	ToConnectorLogDeliveryPtrOutputWithContext(context.Context) ConnectorLogDeliveryPtrOutput
}

type connectorLogDeliveryPtrType ConnectorLogDeliveryArgs

func ConnectorLogDeliveryPtr(v *ConnectorLogDeliveryArgs) ConnectorLogDeliveryPtrInput {
	return (*connectorLogDeliveryPtrType)(v)
}

func (*connectorLogDeliveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorLogDelivery)(nil)).Elem()
}

func (i *connectorLogDeliveryPtrType) ToConnectorLogDeliveryPtrOutput() ConnectorLogDeliveryPtrOutput {
	return i.ToConnectorLogDeliveryPtrOutputWithContext(context.Background())
}

func (i *connectorLogDeliveryPtrType) ToConnectorLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorLogDeliveryPtrOutput)
}

// Details of what logs are delivered and where they are delivered.
type ConnectorLogDeliveryOutput struct{ *pulumi.OutputState }

func (ConnectorLogDeliveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorLogDelivery)(nil)).Elem()
}

func (o ConnectorLogDeliveryOutput) ToConnectorLogDeliveryOutput() ConnectorLogDeliveryOutput {
	return o
}

func (o ConnectorLogDeliveryOutput) ToConnectorLogDeliveryOutputWithContext(ctx context.Context) ConnectorLogDeliveryOutput {
	return o
}

func (o ConnectorLogDeliveryOutput) ToConnectorLogDeliveryPtrOutput() ConnectorLogDeliveryPtrOutput {
	return o.ToConnectorLogDeliveryPtrOutputWithContext(context.Background())
}

func (o ConnectorLogDeliveryOutput) ToConnectorLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorLogDelivery) *ConnectorLogDelivery {
		return &v
	}).(ConnectorLogDeliveryPtrOutput)
}

func (o ConnectorLogDeliveryOutput) WorkerLogDelivery() ConnectorWorkerLogDeliveryOutput {
	return o.ApplyT(func(v ConnectorLogDelivery) ConnectorWorkerLogDelivery { return v.WorkerLogDelivery }).(ConnectorWorkerLogDeliveryOutput)
}

type ConnectorLogDeliveryPtrOutput struct{ *pulumi.OutputState }

func (ConnectorLogDeliveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorLogDelivery)(nil)).Elem()
}

func (o ConnectorLogDeliveryPtrOutput) ToConnectorLogDeliveryPtrOutput() ConnectorLogDeliveryPtrOutput {
	return o
}

func (o ConnectorLogDeliveryPtrOutput) ToConnectorLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorLogDeliveryPtrOutput {
	return o
}

func (o ConnectorLogDeliveryPtrOutput) Elem() ConnectorLogDeliveryOutput {
	return o.ApplyT(func(v *ConnectorLogDelivery) ConnectorLogDelivery {
		if v != nil {
			return *v
		}
		var ret ConnectorLogDelivery
		return ret
	}).(ConnectorLogDeliveryOutput)
}

func (o ConnectorLogDeliveryPtrOutput) WorkerLogDelivery() ConnectorWorkerLogDeliveryPtrOutput {
	return o.ApplyT(func(v *ConnectorLogDelivery) *ConnectorWorkerLogDelivery {
		if v == nil {
			return nil
		}
		return &v.WorkerLogDelivery
	}).(ConnectorWorkerLogDeliveryPtrOutput)
}

// Details about a Kafka Connect plugin which will be used with the connector.
type ConnectorPlugin struct {
	CustomPlugin ConnectorCustomPlugin `pulumi:"customPlugin"`
}

// ConnectorPluginInput is an input type that accepts ConnectorPluginArgs and ConnectorPluginOutput values.
// You can construct a concrete instance of `ConnectorPluginInput` via:
//
//          ConnectorPluginArgs{...}
type ConnectorPluginInput interface {
	pulumi.Input

	ToConnectorPluginOutput() ConnectorPluginOutput
	ToConnectorPluginOutputWithContext(context.Context) ConnectorPluginOutput
}

// Details about a Kafka Connect plugin which will be used with the connector.
type ConnectorPluginArgs struct {
	CustomPlugin ConnectorCustomPluginInput `pulumi:"customPlugin"`
}

func (ConnectorPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorPlugin)(nil)).Elem()
}

func (i ConnectorPluginArgs) ToConnectorPluginOutput() ConnectorPluginOutput {
	return i.ToConnectorPluginOutputWithContext(context.Background())
}

func (i ConnectorPluginArgs) ToConnectorPluginOutputWithContext(ctx context.Context) ConnectorPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorPluginOutput)
}

// ConnectorPluginArrayInput is an input type that accepts ConnectorPluginArray and ConnectorPluginArrayOutput values.
// You can construct a concrete instance of `ConnectorPluginArrayInput` via:
//
//          ConnectorPluginArray{ ConnectorPluginArgs{...} }
type ConnectorPluginArrayInput interface {
	pulumi.Input

	ToConnectorPluginArrayOutput() ConnectorPluginArrayOutput
	ToConnectorPluginArrayOutputWithContext(context.Context) ConnectorPluginArrayOutput
}

type ConnectorPluginArray []ConnectorPluginInput

func (ConnectorPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorPlugin)(nil)).Elem()
}

func (i ConnectorPluginArray) ToConnectorPluginArrayOutput() ConnectorPluginArrayOutput {
	return i.ToConnectorPluginArrayOutputWithContext(context.Background())
}

func (i ConnectorPluginArray) ToConnectorPluginArrayOutputWithContext(ctx context.Context) ConnectorPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorPluginArrayOutput)
}

// Details about a Kafka Connect plugin which will be used with the connector.
type ConnectorPluginOutput struct{ *pulumi.OutputState }

func (ConnectorPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorPlugin)(nil)).Elem()
}

func (o ConnectorPluginOutput) ToConnectorPluginOutput() ConnectorPluginOutput {
	return o
}

func (o ConnectorPluginOutput) ToConnectorPluginOutputWithContext(ctx context.Context) ConnectorPluginOutput {
	return o
}

func (o ConnectorPluginOutput) CustomPlugin() ConnectorCustomPluginOutput {
	return o.ApplyT(func(v ConnectorPlugin) ConnectorCustomPlugin { return v.CustomPlugin }).(ConnectorCustomPluginOutput)
}

type ConnectorPluginArrayOutput struct{ *pulumi.OutputState }

func (ConnectorPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectorPlugin)(nil)).Elem()
}

func (o ConnectorPluginArrayOutput) ToConnectorPluginArrayOutput() ConnectorPluginArrayOutput {
	return o
}

func (o ConnectorPluginArrayOutput) ToConnectorPluginArrayOutputWithContext(ctx context.Context) ConnectorPluginArrayOutput {
	return o
}

func (o ConnectorPluginArrayOutput) Index(i pulumi.IntInput) ConnectorPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectorPlugin {
		return vs[0].([]ConnectorPlugin)[vs[1].(int)]
	}).(ConnectorPluginOutput)
}

// Details about a fixed capacity allocated to a connector.
type ConnectorProvisionedCapacity struct {
	// Specifies how many MSK Connect Units (MCU) are allocated to the connector.
	McuCount *int `pulumi:"mcuCount"`
	// Number of workers for a connector.
	WorkerCount int `pulumi:"workerCount"`
}

// ConnectorProvisionedCapacityInput is an input type that accepts ConnectorProvisionedCapacityArgs and ConnectorProvisionedCapacityOutput values.
// You can construct a concrete instance of `ConnectorProvisionedCapacityInput` via:
//
//          ConnectorProvisionedCapacityArgs{...}
type ConnectorProvisionedCapacityInput interface {
	pulumi.Input

	ToConnectorProvisionedCapacityOutput() ConnectorProvisionedCapacityOutput
	ToConnectorProvisionedCapacityOutputWithContext(context.Context) ConnectorProvisionedCapacityOutput
}

// Details about a fixed capacity allocated to a connector.
type ConnectorProvisionedCapacityArgs struct {
	// Specifies how many MSK Connect Units (MCU) are allocated to the connector.
	McuCount pulumi.IntPtrInput `pulumi:"mcuCount"`
	// Number of workers for a connector.
	WorkerCount pulumi.IntInput `pulumi:"workerCount"`
}

func (ConnectorProvisionedCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProvisionedCapacity)(nil)).Elem()
}

func (i ConnectorProvisionedCapacityArgs) ToConnectorProvisionedCapacityOutput() ConnectorProvisionedCapacityOutput {
	return i.ToConnectorProvisionedCapacityOutputWithContext(context.Background())
}

func (i ConnectorProvisionedCapacityArgs) ToConnectorProvisionedCapacityOutputWithContext(ctx context.Context) ConnectorProvisionedCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProvisionedCapacityOutput)
}

func (i ConnectorProvisionedCapacityArgs) ToConnectorProvisionedCapacityPtrOutput() ConnectorProvisionedCapacityPtrOutput {
	return i.ToConnectorProvisionedCapacityPtrOutputWithContext(context.Background())
}

func (i ConnectorProvisionedCapacityArgs) ToConnectorProvisionedCapacityPtrOutputWithContext(ctx context.Context) ConnectorProvisionedCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProvisionedCapacityOutput).ToConnectorProvisionedCapacityPtrOutputWithContext(ctx)
}

// ConnectorProvisionedCapacityPtrInput is an input type that accepts ConnectorProvisionedCapacityArgs, ConnectorProvisionedCapacityPtr and ConnectorProvisionedCapacityPtrOutput values.
// You can construct a concrete instance of `ConnectorProvisionedCapacityPtrInput` via:
//
//          ConnectorProvisionedCapacityArgs{...}
//
//  or:
//
//          nil
type ConnectorProvisionedCapacityPtrInput interface {
	pulumi.Input

	ToConnectorProvisionedCapacityPtrOutput() ConnectorProvisionedCapacityPtrOutput
	ToConnectorProvisionedCapacityPtrOutputWithContext(context.Context) ConnectorProvisionedCapacityPtrOutput
}

type connectorProvisionedCapacityPtrType ConnectorProvisionedCapacityArgs

func ConnectorProvisionedCapacityPtr(v *ConnectorProvisionedCapacityArgs) ConnectorProvisionedCapacityPtrInput {
	return (*connectorProvisionedCapacityPtrType)(v)
}

func (*connectorProvisionedCapacityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProvisionedCapacity)(nil)).Elem()
}

func (i *connectorProvisionedCapacityPtrType) ToConnectorProvisionedCapacityPtrOutput() ConnectorProvisionedCapacityPtrOutput {
	return i.ToConnectorProvisionedCapacityPtrOutputWithContext(context.Background())
}

func (i *connectorProvisionedCapacityPtrType) ToConnectorProvisionedCapacityPtrOutputWithContext(ctx context.Context) ConnectorProvisionedCapacityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorProvisionedCapacityPtrOutput)
}

// Details about a fixed capacity allocated to a connector.
type ConnectorProvisionedCapacityOutput struct{ *pulumi.OutputState }

func (ConnectorProvisionedCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorProvisionedCapacity)(nil)).Elem()
}

func (o ConnectorProvisionedCapacityOutput) ToConnectorProvisionedCapacityOutput() ConnectorProvisionedCapacityOutput {
	return o
}

func (o ConnectorProvisionedCapacityOutput) ToConnectorProvisionedCapacityOutputWithContext(ctx context.Context) ConnectorProvisionedCapacityOutput {
	return o
}

func (o ConnectorProvisionedCapacityOutput) ToConnectorProvisionedCapacityPtrOutput() ConnectorProvisionedCapacityPtrOutput {
	return o.ToConnectorProvisionedCapacityPtrOutputWithContext(context.Background())
}

func (o ConnectorProvisionedCapacityOutput) ToConnectorProvisionedCapacityPtrOutputWithContext(ctx context.Context) ConnectorProvisionedCapacityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorProvisionedCapacity) *ConnectorProvisionedCapacity {
		return &v
	}).(ConnectorProvisionedCapacityPtrOutput)
}

// Specifies how many MSK Connect Units (MCU) are allocated to the connector.
func (o ConnectorProvisionedCapacityOutput) McuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectorProvisionedCapacity) *int { return v.McuCount }).(pulumi.IntPtrOutput)
}

// Number of workers for a connector.
func (o ConnectorProvisionedCapacityOutput) WorkerCount() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorProvisionedCapacity) int { return v.WorkerCount }).(pulumi.IntOutput)
}

type ConnectorProvisionedCapacityPtrOutput struct{ *pulumi.OutputState }

func (ConnectorProvisionedCapacityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorProvisionedCapacity)(nil)).Elem()
}

func (o ConnectorProvisionedCapacityPtrOutput) ToConnectorProvisionedCapacityPtrOutput() ConnectorProvisionedCapacityPtrOutput {
	return o
}

func (o ConnectorProvisionedCapacityPtrOutput) ToConnectorProvisionedCapacityPtrOutputWithContext(ctx context.Context) ConnectorProvisionedCapacityPtrOutput {
	return o
}

func (o ConnectorProvisionedCapacityPtrOutput) Elem() ConnectorProvisionedCapacityOutput {
	return o.ApplyT(func(v *ConnectorProvisionedCapacity) ConnectorProvisionedCapacity {
		if v != nil {
			return *v
		}
		var ret ConnectorProvisionedCapacity
		return ret
	}).(ConnectorProvisionedCapacityOutput)
}

// Specifies how many MSK Connect Units (MCU) are allocated to the connector.
func (o ConnectorProvisionedCapacityPtrOutput) McuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorProvisionedCapacity) *int {
		if v == nil {
			return nil
		}
		return v.McuCount
	}).(pulumi.IntPtrOutput)
}

// Number of workers for a connector.
func (o ConnectorProvisionedCapacityPtrOutput) WorkerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorProvisionedCapacity) *int {
		if v == nil {
			return nil
		}
		return &v.WorkerCount
	}).(pulumi.IntPtrOutput)
}

// Details about delivering logs to Amazon S3.
type ConnectorS3LogDelivery struct {
	// The name of the S3 bucket that is the destination for log delivery.
	Bucket *string `pulumi:"bucket"`
	// Specifies whether the logs get sent to the specified Amazon S3 destination.
	Enabled bool `pulumi:"enabled"`
	// The S3 prefix that is the destination for log delivery.
	Prefix *string `pulumi:"prefix"`
}

// ConnectorS3LogDeliveryInput is an input type that accepts ConnectorS3LogDeliveryArgs and ConnectorS3LogDeliveryOutput values.
// You can construct a concrete instance of `ConnectorS3LogDeliveryInput` via:
//
//          ConnectorS3LogDeliveryArgs{...}
type ConnectorS3LogDeliveryInput interface {
	pulumi.Input

	ToConnectorS3LogDeliveryOutput() ConnectorS3LogDeliveryOutput
	ToConnectorS3LogDeliveryOutputWithContext(context.Context) ConnectorS3LogDeliveryOutput
}

// Details about delivering logs to Amazon S3.
type ConnectorS3LogDeliveryArgs struct {
	// The name of the S3 bucket that is the destination for log delivery.
	Bucket pulumi.StringPtrInput `pulumi:"bucket"`
	// Specifies whether the logs get sent to the specified Amazon S3 destination.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The S3 prefix that is the destination for log delivery.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (ConnectorS3LogDeliveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorS3LogDelivery)(nil)).Elem()
}

func (i ConnectorS3LogDeliveryArgs) ToConnectorS3LogDeliveryOutput() ConnectorS3LogDeliveryOutput {
	return i.ToConnectorS3LogDeliveryOutputWithContext(context.Background())
}

func (i ConnectorS3LogDeliveryArgs) ToConnectorS3LogDeliveryOutputWithContext(ctx context.Context) ConnectorS3LogDeliveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorS3LogDeliveryOutput)
}

func (i ConnectorS3LogDeliveryArgs) ToConnectorS3LogDeliveryPtrOutput() ConnectorS3LogDeliveryPtrOutput {
	return i.ToConnectorS3LogDeliveryPtrOutputWithContext(context.Background())
}

func (i ConnectorS3LogDeliveryArgs) ToConnectorS3LogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorS3LogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorS3LogDeliveryOutput).ToConnectorS3LogDeliveryPtrOutputWithContext(ctx)
}

// ConnectorS3LogDeliveryPtrInput is an input type that accepts ConnectorS3LogDeliveryArgs, ConnectorS3LogDeliveryPtr and ConnectorS3LogDeliveryPtrOutput values.
// You can construct a concrete instance of `ConnectorS3LogDeliveryPtrInput` via:
//
//          ConnectorS3LogDeliveryArgs{...}
//
//  or:
//
//          nil
type ConnectorS3LogDeliveryPtrInput interface {
	pulumi.Input

	ToConnectorS3LogDeliveryPtrOutput() ConnectorS3LogDeliveryPtrOutput
	ToConnectorS3LogDeliveryPtrOutputWithContext(context.Context) ConnectorS3LogDeliveryPtrOutput
}

type connectorS3LogDeliveryPtrType ConnectorS3LogDeliveryArgs

func ConnectorS3LogDeliveryPtr(v *ConnectorS3LogDeliveryArgs) ConnectorS3LogDeliveryPtrInput {
	return (*connectorS3LogDeliveryPtrType)(v)
}

func (*connectorS3LogDeliveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorS3LogDelivery)(nil)).Elem()
}

func (i *connectorS3LogDeliveryPtrType) ToConnectorS3LogDeliveryPtrOutput() ConnectorS3LogDeliveryPtrOutput {
	return i.ToConnectorS3LogDeliveryPtrOutputWithContext(context.Background())
}

func (i *connectorS3LogDeliveryPtrType) ToConnectorS3LogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorS3LogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorS3LogDeliveryPtrOutput)
}

// Details about delivering logs to Amazon S3.
type ConnectorS3LogDeliveryOutput struct{ *pulumi.OutputState }

func (ConnectorS3LogDeliveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorS3LogDelivery)(nil)).Elem()
}

func (o ConnectorS3LogDeliveryOutput) ToConnectorS3LogDeliveryOutput() ConnectorS3LogDeliveryOutput {
	return o
}

func (o ConnectorS3LogDeliveryOutput) ToConnectorS3LogDeliveryOutputWithContext(ctx context.Context) ConnectorS3LogDeliveryOutput {
	return o
}

func (o ConnectorS3LogDeliveryOutput) ToConnectorS3LogDeliveryPtrOutput() ConnectorS3LogDeliveryPtrOutput {
	return o.ToConnectorS3LogDeliveryPtrOutputWithContext(context.Background())
}

func (o ConnectorS3LogDeliveryOutput) ToConnectorS3LogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorS3LogDeliveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorS3LogDelivery) *ConnectorS3LogDelivery {
		return &v
	}).(ConnectorS3LogDeliveryPtrOutput)
}

// The name of the S3 bucket that is the destination for log delivery.
func (o ConnectorS3LogDeliveryOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorS3LogDelivery) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Specifies whether the logs get sent to the specified Amazon S3 destination.
func (o ConnectorS3LogDeliveryOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ConnectorS3LogDelivery) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The S3 prefix that is the destination for log delivery.
func (o ConnectorS3LogDeliveryOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectorS3LogDelivery) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type ConnectorS3LogDeliveryPtrOutput struct{ *pulumi.OutputState }

func (ConnectorS3LogDeliveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorS3LogDelivery)(nil)).Elem()
}

func (o ConnectorS3LogDeliveryPtrOutput) ToConnectorS3LogDeliveryPtrOutput() ConnectorS3LogDeliveryPtrOutput {
	return o
}

func (o ConnectorS3LogDeliveryPtrOutput) ToConnectorS3LogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorS3LogDeliveryPtrOutput {
	return o
}

func (o ConnectorS3LogDeliveryPtrOutput) Elem() ConnectorS3LogDeliveryOutput {
	return o.ApplyT(func(v *ConnectorS3LogDelivery) ConnectorS3LogDelivery {
		if v != nil {
			return *v
		}
		var ret ConnectorS3LogDelivery
		return ret
	}).(ConnectorS3LogDeliveryOutput)
}

// The name of the S3 bucket that is the destination for log delivery.
func (o ConnectorS3LogDeliveryPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorS3LogDelivery) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Specifies whether the logs get sent to the specified Amazon S3 destination.
func (o ConnectorS3LogDeliveryPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectorS3LogDelivery) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The S3 prefix that is the destination for log delivery.
func (o ConnectorS3LogDeliveryPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorS3LogDelivery) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Information about the scale in policy of the connector.
type ConnectorScaleInPolicy struct {
	// Specifies the CPU utilization percentage threshold at which connector scale in should trigger.
	CpuUtilizationPercentage int `pulumi:"cpuUtilizationPercentage"`
}

// ConnectorScaleInPolicyInput is an input type that accepts ConnectorScaleInPolicyArgs and ConnectorScaleInPolicyOutput values.
// You can construct a concrete instance of `ConnectorScaleInPolicyInput` via:
//
//          ConnectorScaleInPolicyArgs{...}
type ConnectorScaleInPolicyInput interface {
	pulumi.Input

	ToConnectorScaleInPolicyOutput() ConnectorScaleInPolicyOutput
	ToConnectorScaleInPolicyOutputWithContext(context.Context) ConnectorScaleInPolicyOutput
}

// Information about the scale in policy of the connector.
type ConnectorScaleInPolicyArgs struct {
	// Specifies the CPU utilization percentage threshold at which connector scale in should trigger.
	CpuUtilizationPercentage pulumi.IntInput `pulumi:"cpuUtilizationPercentage"`
}

func (ConnectorScaleInPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorScaleInPolicy)(nil)).Elem()
}

func (i ConnectorScaleInPolicyArgs) ToConnectorScaleInPolicyOutput() ConnectorScaleInPolicyOutput {
	return i.ToConnectorScaleInPolicyOutputWithContext(context.Background())
}

func (i ConnectorScaleInPolicyArgs) ToConnectorScaleInPolicyOutputWithContext(ctx context.Context) ConnectorScaleInPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorScaleInPolicyOutput)
}

func (i ConnectorScaleInPolicyArgs) ToConnectorScaleInPolicyPtrOutput() ConnectorScaleInPolicyPtrOutput {
	return i.ToConnectorScaleInPolicyPtrOutputWithContext(context.Background())
}

func (i ConnectorScaleInPolicyArgs) ToConnectorScaleInPolicyPtrOutputWithContext(ctx context.Context) ConnectorScaleInPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorScaleInPolicyOutput).ToConnectorScaleInPolicyPtrOutputWithContext(ctx)
}

// ConnectorScaleInPolicyPtrInput is an input type that accepts ConnectorScaleInPolicyArgs, ConnectorScaleInPolicyPtr and ConnectorScaleInPolicyPtrOutput values.
// You can construct a concrete instance of `ConnectorScaleInPolicyPtrInput` via:
//
//          ConnectorScaleInPolicyArgs{...}
//
//  or:
//
//          nil
type ConnectorScaleInPolicyPtrInput interface {
	pulumi.Input

	ToConnectorScaleInPolicyPtrOutput() ConnectorScaleInPolicyPtrOutput
	ToConnectorScaleInPolicyPtrOutputWithContext(context.Context) ConnectorScaleInPolicyPtrOutput
}

type connectorScaleInPolicyPtrType ConnectorScaleInPolicyArgs

func ConnectorScaleInPolicyPtr(v *ConnectorScaleInPolicyArgs) ConnectorScaleInPolicyPtrInput {
	return (*connectorScaleInPolicyPtrType)(v)
}

func (*connectorScaleInPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorScaleInPolicy)(nil)).Elem()
}

func (i *connectorScaleInPolicyPtrType) ToConnectorScaleInPolicyPtrOutput() ConnectorScaleInPolicyPtrOutput {
	return i.ToConnectorScaleInPolicyPtrOutputWithContext(context.Background())
}

func (i *connectorScaleInPolicyPtrType) ToConnectorScaleInPolicyPtrOutputWithContext(ctx context.Context) ConnectorScaleInPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorScaleInPolicyPtrOutput)
}

// Information about the scale in policy of the connector.
type ConnectorScaleInPolicyOutput struct{ *pulumi.OutputState }

func (ConnectorScaleInPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorScaleInPolicy)(nil)).Elem()
}

func (o ConnectorScaleInPolicyOutput) ToConnectorScaleInPolicyOutput() ConnectorScaleInPolicyOutput {
	return o
}

func (o ConnectorScaleInPolicyOutput) ToConnectorScaleInPolicyOutputWithContext(ctx context.Context) ConnectorScaleInPolicyOutput {
	return o
}

func (o ConnectorScaleInPolicyOutput) ToConnectorScaleInPolicyPtrOutput() ConnectorScaleInPolicyPtrOutput {
	return o.ToConnectorScaleInPolicyPtrOutputWithContext(context.Background())
}

func (o ConnectorScaleInPolicyOutput) ToConnectorScaleInPolicyPtrOutputWithContext(ctx context.Context) ConnectorScaleInPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorScaleInPolicy) *ConnectorScaleInPolicy {
		return &v
	}).(ConnectorScaleInPolicyPtrOutput)
}

// Specifies the CPU utilization percentage threshold at which connector scale in should trigger.
func (o ConnectorScaleInPolicyOutput) CpuUtilizationPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorScaleInPolicy) int { return v.CpuUtilizationPercentage }).(pulumi.IntOutput)
}

type ConnectorScaleInPolicyPtrOutput struct{ *pulumi.OutputState }

func (ConnectorScaleInPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorScaleInPolicy)(nil)).Elem()
}

func (o ConnectorScaleInPolicyPtrOutput) ToConnectorScaleInPolicyPtrOutput() ConnectorScaleInPolicyPtrOutput {
	return o
}

func (o ConnectorScaleInPolicyPtrOutput) ToConnectorScaleInPolicyPtrOutputWithContext(ctx context.Context) ConnectorScaleInPolicyPtrOutput {
	return o
}

func (o ConnectorScaleInPolicyPtrOutput) Elem() ConnectorScaleInPolicyOutput {
	return o.ApplyT(func(v *ConnectorScaleInPolicy) ConnectorScaleInPolicy {
		if v != nil {
			return *v
		}
		var ret ConnectorScaleInPolicy
		return ret
	}).(ConnectorScaleInPolicyOutput)
}

// Specifies the CPU utilization percentage threshold at which connector scale in should trigger.
func (o ConnectorScaleInPolicyPtrOutput) CpuUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorScaleInPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.CpuUtilizationPercentage
	}).(pulumi.IntPtrOutput)
}

// Information about the scale out policy of the connector.
type ConnectorScaleOutPolicy struct {
	// Specifies the CPU utilization percentage threshold at which connector scale out should trigger.
	CpuUtilizationPercentage int `pulumi:"cpuUtilizationPercentage"`
}

// ConnectorScaleOutPolicyInput is an input type that accepts ConnectorScaleOutPolicyArgs and ConnectorScaleOutPolicyOutput values.
// You can construct a concrete instance of `ConnectorScaleOutPolicyInput` via:
//
//          ConnectorScaleOutPolicyArgs{...}
type ConnectorScaleOutPolicyInput interface {
	pulumi.Input

	ToConnectorScaleOutPolicyOutput() ConnectorScaleOutPolicyOutput
	ToConnectorScaleOutPolicyOutputWithContext(context.Context) ConnectorScaleOutPolicyOutput
}

// Information about the scale out policy of the connector.
type ConnectorScaleOutPolicyArgs struct {
	// Specifies the CPU utilization percentage threshold at which connector scale out should trigger.
	CpuUtilizationPercentage pulumi.IntInput `pulumi:"cpuUtilizationPercentage"`
}

func (ConnectorScaleOutPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorScaleOutPolicy)(nil)).Elem()
}

func (i ConnectorScaleOutPolicyArgs) ToConnectorScaleOutPolicyOutput() ConnectorScaleOutPolicyOutput {
	return i.ToConnectorScaleOutPolicyOutputWithContext(context.Background())
}

func (i ConnectorScaleOutPolicyArgs) ToConnectorScaleOutPolicyOutputWithContext(ctx context.Context) ConnectorScaleOutPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorScaleOutPolicyOutput)
}

func (i ConnectorScaleOutPolicyArgs) ToConnectorScaleOutPolicyPtrOutput() ConnectorScaleOutPolicyPtrOutput {
	return i.ToConnectorScaleOutPolicyPtrOutputWithContext(context.Background())
}

func (i ConnectorScaleOutPolicyArgs) ToConnectorScaleOutPolicyPtrOutputWithContext(ctx context.Context) ConnectorScaleOutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorScaleOutPolicyOutput).ToConnectorScaleOutPolicyPtrOutputWithContext(ctx)
}

// ConnectorScaleOutPolicyPtrInput is an input type that accepts ConnectorScaleOutPolicyArgs, ConnectorScaleOutPolicyPtr and ConnectorScaleOutPolicyPtrOutput values.
// You can construct a concrete instance of `ConnectorScaleOutPolicyPtrInput` via:
//
//          ConnectorScaleOutPolicyArgs{...}
//
//  or:
//
//          nil
type ConnectorScaleOutPolicyPtrInput interface {
	pulumi.Input

	ToConnectorScaleOutPolicyPtrOutput() ConnectorScaleOutPolicyPtrOutput
	ToConnectorScaleOutPolicyPtrOutputWithContext(context.Context) ConnectorScaleOutPolicyPtrOutput
}

type connectorScaleOutPolicyPtrType ConnectorScaleOutPolicyArgs

func ConnectorScaleOutPolicyPtr(v *ConnectorScaleOutPolicyArgs) ConnectorScaleOutPolicyPtrInput {
	return (*connectorScaleOutPolicyPtrType)(v)
}

func (*connectorScaleOutPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorScaleOutPolicy)(nil)).Elem()
}

func (i *connectorScaleOutPolicyPtrType) ToConnectorScaleOutPolicyPtrOutput() ConnectorScaleOutPolicyPtrOutput {
	return i.ToConnectorScaleOutPolicyPtrOutputWithContext(context.Background())
}

func (i *connectorScaleOutPolicyPtrType) ToConnectorScaleOutPolicyPtrOutputWithContext(ctx context.Context) ConnectorScaleOutPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorScaleOutPolicyPtrOutput)
}

// Information about the scale out policy of the connector.
type ConnectorScaleOutPolicyOutput struct{ *pulumi.OutputState }

func (ConnectorScaleOutPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorScaleOutPolicy)(nil)).Elem()
}

func (o ConnectorScaleOutPolicyOutput) ToConnectorScaleOutPolicyOutput() ConnectorScaleOutPolicyOutput {
	return o
}

func (o ConnectorScaleOutPolicyOutput) ToConnectorScaleOutPolicyOutputWithContext(ctx context.Context) ConnectorScaleOutPolicyOutput {
	return o
}

func (o ConnectorScaleOutPolicyOutput) ToConnectorScaleOutPolicyPtrOutput() ConnectorScaleOutPolicyPtrOutput {
	return o.ToConnectorScaleOutPolicyPtrOutputWithContext(context.Background())
}

func (o ConnectorScaleOutPolicyOutput) ToConnectorScaleOutPolicyPtrOutputWithContext(ctx context.Context) ConnectorScaleOutPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorScaleOutPolicy) *ConnectorScaleOutPolicy {
		return &v
	}).(ConnectorScaleOutPolicyPtrOutput)
}

// Specifies the CPU utilization percentage threshold at which connector scale out should trigger.
func (o ConnectorScaleOutPolicyOutput) CpuUtilizationPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorScaleOutPolicy) int { return v.CpuUtilizationPercentage }).(pulumi.IntOutput)
}

type ConnectorScaleOutPolicyPtrOutput struct{ *pulumi.OutputState }

func (ConnectorScaleOutPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorScaleOutPolicy)(nil)).Elem()
}

func (o ConnectorScaleOutPolicyPtrOutput) ToConnectorScaleOutPolicyPtrOutput() ConnectorScaleOutPolicyPtrOutput {
	return o
}

func (o ConnectorScaleOutPolicyPtrOutput) ToConnectorScaleOutPolicyPtrOutputWithContext(ctx context.Context) ConnectorScaleOutPolicyPtrOutput {
	return o
}

func (o ConnectorScaleOutPolicyPtrOutput) Elem() ConnectorScaleOutPolicyOutput {
	return o.ApplyT(func(v *ConnectorScaleOutPolicy) ConnectorScaleOutPolicy {
		if v != nil {
			return *v
		}
		var ret ConnectorScaleOutPolicy
		return ret
	}).(ConnectorScaleOutPolicyOutput)
}

// Specifies the CPU utilization percentage threshold at which connector scale out should trigger.
func (o ConnectorScaleOutPolicyPtrOutput) CpuUtilizationPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorScaleOutPolicy) *int {
		if v == nil {
			return nil
		}
		return &v.CpuUtilizationPercentage
	}).(pulumi.IntPtrOutput)
}

// Information about a VPC used with the connector.
type ConnectorVpc struct {
	// The AWS security groups to associate with the elastic network interfaces in order to specify what the connector has access to.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets.
	Subnets []string `pulumi:"subnets"`
}

// ConnectorVpcInput is an input type that accepts ConnectorVpcArgs and ConnectorVpcOutput values.
// You can construct a concrete instance of `ConnectorVpcInput` via:
//
//          ConnectorVpcArgs{...}
type ConnectorVpcInput interface {
	pulumi.Input

	ToConnectorVpcOutput() ConnectorVpcOutput
	ToConnectorVpcOutputWithContext(context.Context) ConnectorVpcOutput
}

// Information about a VPC used with the connector.
type ConnectorVpcArgs struct {
	// The AWS security groups to associate with the elastic network interfaces in order to specify what the connector has access to.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets.
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
}

func (ConnectorVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorVpc)(nil)).Elem()
}

func (i ConnectorVpcArgs) ToConnectorVpcOutput() ConnectorVpcOutput {
	return i.ToConnectorVpcOutputWithContext(context.Background())
}

func (i ConnectorVpcArgs) ToConnectorVpcOutputWithContext(ctx context.Context) ConnectorVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorVpcOutput)
}

func (i ConnectorVpcArgs) ToConnectorVpcPtrOutput() ConnectorVpcPtrOutput {
	return i.ToConnectorVpcPtrOutputWithContext(context.Background())
}

func (i ConnectorVpcArgs) ToConnectorVpcPtrOutputWithContext(ctx context.Context) ConnectorVpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorVpcOutput).ToConnectorVpcPtrOutputWithContext(ctx)
}

// ConnectorVpcPtrInput is an input type that accepts ConnectorVpcArgs, ConnectorVpcPtr and ConnectorVpcPtrOutput values.
// You can construct a concrete instance of `ConnectorVpcPtrInput` via:
//
//          ConnectorVpcArgs{...}
//
//  or:
//
//          nil
type ConnectorVpcPtrInput interface {
	pulumi.Input

	ToConnectorVpcPtrOutput() ConnectorVpcPtrOutput
	ToConnectorVpcPtrOutputWithContext(context.Context) ConnectorVpcPtrOutput
}

type connectorVpcPtrType ConnectorVpcArgs

func ConnectorVpcPtr(v *ConnectorVpcArgs) ConnectorVpcPtrInput {
	return (*connectorVpcPtrType)(v)
}

func (*connectorVpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorVpc)(nil)).Elem()
}

func (i *connectorVpcPtrType) ToConnectorVpcPtrOutput() ConnectorVpcPtrOutput {
	return i.ToConnectorVpcPtrOutputWithContext(context.Background())
}

func (i *connectorVpcPtrType) ToConnectorVpcPtrOutputWithContext(ctx context.Context) ConnectorVpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorVpcPtrOutput)
}

// Information about a VPC used with the connector.
type ConnectorVpcOutput struct{ *pulumi.OutputState }

func (ConnectorVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorVpc)(nil)).Elem()
}

func (o ConnectorVpcOutput) ToConnectorVpcOutput() ConnectorVpcOutput {
	return o
}

func (o ConnectorVpcOutput) ToConnectorVpcOutputWithContext(ctx context.Context) ConnectorVpcOutput {
	return o
}

func (o ConnectorVpcOutput) ToConnectorVpcPtrOutput() ConnectorVpcPtrOutput {
	return o.ToConnectorVpcPtrOutputWithContext(context.Background())
}

func (o ConnectorVpcOutput) ToConnectorVpcPtrOutputWithContext(ctx context.Context) ConnectorVpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorVpc) *ConnectorVpc {
		return &v
	}).(ConnectorVpcPtrOutput)
}

// The AWS security groups to associate with the elastic network interfaces in order to specify what the connector has access to.
func (o ConnectorVpcOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectorVpc) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets.
func (o ConnectorVpcOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectorVpc) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type ConnectorVpcPtrOutput struct{ *pulumi.OutputState }

func (ConnectorVpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorVpc)(nil)).Elem()
}

func (o ConnectorVpcPtrOutput) ToConnectorVpcPtrOutput() ConnectorVpcPtrOutput {
	return o
}

func (o ConnectorVpcPtrOutput) ToConnectorVpcPtrOutputWithContext(ctx context.Context) ConnectorVpcPtrOutput {
	return o
}

func (o ConnectorVpcPtrOutput) Elem() ConnectorVpcOutput {
	return o.ApplyT(func(v *ConnectorVpc) ConnectorVpc {
		if v != nil {
			return *v
		}
		var ret ConnectorVpc
		return ret
	}).(ConnectorVpcOutput)
}

// The AWS security groups to associate with the elastic network interfaces in order to specify what the connector has access to.
func (o ConnectorVpcPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorVpc) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

// The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets.
func (o ConnectorVpcPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectorVpc) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

// Specifies the worker configuration to use with the connector.
type ConnectorWorkerConfiguration struct {
	// The revision of the worker configuration to use.
	Revision int `pulumi:"revision"`
	// The Amazon Resource Name (ARN) of the worker configuration to use.
	WorkerConfigurationArn string `pulumi:"workerConfigurationArn"`
}

// ConnectorWorkerConfigurationInput is an input type that accepts ConnectorWorkerConfigurationArgs and ConnectorWorkerConfigurationOutput values.
// You can construct a concrete instance of `ConnectorWorkerConfigurationInput` via:
//
//          ConnectorWorkerConfigurationArgs{...}
type ConnectorWorkerConfigurationInput interface {
	pulumi.Input

	ToConnectorWorkerConfigurationOutput() ConnectorWorkerConfigurationOutput
	ToConnectorWorkerConfigurationOutputWithContext(context.Context) ConnectorWorkerConfigurationOutput
}

// Specifies the worker configuration to use with the connector.
type ConnectorWorkerConfigurationArgs struct {
	// The revision of the worker configuration to use.
	Revision pulumi.IntInput `pulumi:"revision"`
	// The Amazon Resource Name (ARN) of the worker configuration to use.
	WorkerConfigurationArn pulumi.StringInput `pulumi:"workerConfigurationArn"`
}

func (ConnectorWorkerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorWorkerConfiguration)(nil)).Elem()
}

func (i ConnectorWorkerConfigurationArgs) ToConnectorWorkerConfigurationOutput() ConnectorWorkerConfigurationOutput {
	return i.ToConnectorWorkerConfigurationOutputWithContext(context.Background())
}

func (i ConnectorWorkerConfigurationArgs) ToConnectorWorkerConfigurationOutputWithContext(ctx context.Context) ConnectorWorkerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorWorkerConfigurationOutput)
}

func (i ConnectorWorkerConfigurationArgs) ToConnectorWorkerConfigurationPtrOutput() ConnectorWorkerConfigurationPtrOutput {
	return i.ToConnectorWorkerConfigurationPtrOutputWithContext(context.Background())
}

func (i ConnectorWorkerConfigurationArgs) ToConnectorWorkerConfigurationPtrOutputWithContext(ctx context.Context) ConnectorWorkerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorWorkerConfigurationOutput).ToConnectorWorkerConfigurationPtrOutputWithContext(ctx)
}

// ConnectorWorkerConfigurationPtrInput is an input type that accepts ConnectorWorkerConfigurationArgs, ConnectorWorkerConfigurationPtr and ConnectorWorkerConfigurationPtrOutput values.
// You can construct a concrete instance of `ConnectorWorkerConfigurationPtrInput` via:
//
//          ConnectorWorkerConfigurationArgs{...}
//
//  or:
//
//          nil
type ConnectorWorkerConfigurationPtrInput interface {
	pulumi.Input

	ToConnectorWorkerConfigurationPtrOutput() ConnectorWorkerConfigurationPtrOutput
	ToConnectorWorkerConfigurationPtrOutputWithContext(context.Context) ConnectorWorkerConfigurationPtrOutput
}

type connectorWorkerConfigurationPtrType ConnectorWorkerConfigurationArgs

func ConnectorWorkerConfigurationPtr(v *ConnectorWorkerConfigurationArgs) ConnectorWorkerConfigurationPtrInput {
	return (*connectorWorkerConfigurationPtrType)(v)
}

func (*connectorWorkerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorWorkerConfiguration)(nil)).Elem()
}

func (i *connectorWorkerConfigurationPtrType) ToConnectorWorkerConfigurationPtrOutput() ConnectorWorkerConfigurationPtrOutput {
	return i.ToConnectorWorkerConfigurationPtrOutputWithContext(context.Background())
}

func (i *connectorWorkerConfigurationPtrType) ToConnectorWorkerConfigurationPtrOutputWithContext(ctx context.Context) ConnectorWorkerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorWorkerConfigurationPtrOutput)
}

// Specifies the worker configuration to use with the connector.
type ConnectorWorkerConfigurationOutput struct{ *pulumi.OutputState }

func (ConnectorWorkerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorWorkerConfiguration)(nil)).Elem()
}

func (o ConnectorWorkerConfigurationOutput) ToConnectorWorkerConfigurationOutput() ConnectorWorkerConfigurationOutput {
	return o
}

func (o ConnectorWorkerConfigurationOutput) ToConnectorWorkerConfigurationOutputWithContext(ctx context.Context) ConnectorWorkerConfigurationOutput {
	return o
}

func (o ConnectorWorkerConfigurationOutput) ToConnectorWorkerConfigurationPtrOutput() ConnectorWorkerConfigurationPtrOutput {
	return o.ToConnectorWorkerConfigurationPtrOutputWithContext(context.Background())
}

func (o ConnectorWorkerConfigurationOutput) ToConnectorWorkerConfigurationPtrOutputWithContext(ctx context.Context) ConnectorWorkerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorWorkerConfiguration) *ConnectorWorkerConfiguration {
		return &v
	}).(ConnectorWorkerConfigurationPtrOutput)
}

// The revision of the worker configuration to use.
func (o ConnectorWorkerConfigurationOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v ConnectorWorkerConfiguration) int { return v.Revision }).(pulumi.IntOutput)
}

// The Amazon Resource Name (ARN) of the worker configuration to use.
func (o ConnectorWorkerConfigurationOutput) WorkerConfigurationArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectorWorkerConfiguration) string { return v.WorkerConfigurationArn }).(pulumi.StringOutput)
}

type ConnectorWorkerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ConnectorWorkerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorWorkerConfiguration)(nil)).Elem()
}

func (o ConnectorWorkerConfigurationPtrOutput) ToConnectorWorkerConfigurationPtrOutput() ConnectorWorkerConfigurationPtrOutput {
	return o
}

func (o ConnectorWorkerConfigurationPtrOutput) ToConnectorWorkerConfigurationPtrOutputWithContext(ctx context.Context) ConnectorWorkerConfigurationPtrOutput {
	return o
}

func (o ConnectorWorkerConfigurationPtrOutput) Elem() ConnectorWorkerConfigurationOutput {
	return o.ApplyT(func(v *ConnectorWorkerConfiguration) ConnectorWorkerConfiguration {
		if v != nil {
			return *v
		}
		var ret ConnectorWorkerConfiguration
		return ret
	}).(ConnectorWorkerConfigurationOutput)
}

// The revision of the worker configuration to use.
func (o ConnectorWorkerConfigurationPtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectorWorkerConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.Revision
	}).(pulumi.IntPtrOutput)
}

// The Amazon Resource Name (ARN) of the worker configuration to use.
func (o ConnectorWorkerConfigurationPtrOutput) WorkerConfigurationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectorWorkerConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.WorkerConfigurationArn
	}).(pulumi.StringPtrOutput)
}

// Specifies where worker logs are delivered.
type ConnectorWorkerLogDelivery struct {
	CloudWatchLogs *ConnectorCloudWatchLogsLogDelivery `pulumi:"cloudWatchLogs"`
	Firehose       *ConnectorFirehoseLogDelivery       `pulumi:"firehose"`
	S3             *ConnectorS3LogDelivery             `pulumi:"s3"`
}

// ConnectorWorkerLogDeliveryInput is an input type that accepts ConnectorWorkerLogDeliveryArgs and ConnectorWorkerLogDeliveryOutput values.
// You can construct a concrete instance of `ConnectorWorkerLogDeliveryInput` via:
//
//          ConnectorWorkerLogDeliveryArgs{...}
type ConnectorWorkerLogDeliveryInput interface {
	pulumi.Input

	ToConnectorWorkerLogDeliveryOutput() ConnectorWorkerLogDeliveryOutput
	ToConnectorWorkerLogDeliveryOutputWithContext(context.Context) ConnectorWorkerLogDeliveryOutput
}

// Specifies where worker logs are delivered.
type ConnectorWorkerLogDeliveryArgs struct {
	CloudWatchLogs ConnectorCloudWatchLogsLogDeliveryPtrInput `pulumi:"cloudWatchLogs"`
	Firehose       ConnectorFirehoseLogDeliveryPtrInput       `pulumi:"firehose"`
	S3             ConnectorS3LogDeliveryPtrInput             `pulumi:"s3"`
}

func (ConnectorWorkerLogDeliveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorWorkerLogDelivery)(nil)).Elem()
}

func (i ConnectorWorkerLogDeliveryArgs) ToConnectorWorkerLogDeliveryOutput() ConnectorWorkerLogDeliveryOutput {
	return i.ToConnectorWorkerLogDeliveryOutputWithContext(context.Background())
}

func (i ConnectorWorkerLogDeliveryArgs) ToConnectorWorkerLogDeliveryOutputWithContext(ctx context.Context) ConnectorWorkerLogDeliveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorWorkerLogDeliveryOutput)
}

func (i ConnectorWorkerLogDeliveryArgs) ToConnectorWorkerLogDeliveryPtrOutput() ConnectorWorkerLogDeliveryPtrOutput {
	return i.ToConnectorWorkerLogDeliveryPtrOutputWithContext(context.Background())
}

func (i ConnectorWorkerLogDeliveryArgs) ToConnectorWorkerLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorWorkerLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorWorkerLogDeliveryOutput).ToConnectorWorkerLogDeliveryPtrOutputWithContext(ctx)
}

// ConnectorWorkerLogDeliveryPtrInput is an input type that accepts ConnectorWorkerLogDeliveryArgs, ConnectorWorkerLogDeliveryPtr and ConnectorWorkerLogDeliveryPtrOutput values.
// You can construct a concrete instance of `ConnectorWorkerLogDeliveryPtrInput` via:
//
//          ConnectorWorkerLogDeliveryArgs{...}
//
//  or:
//
//          nil
type ConnectorWorkerLogDeliveryPtrInput interface {
	pulumi.Input

	ToConnectorWorkerLogDeliveryPtrOutput() ConnectorWorkerLogDeliveryPtrOutput
	ToConnectorWorkerLogDeliveryPtrOutputWithContext(context.Context) ConnectorWorkerLogDeliveryPtrOutput
}

type connectorWorkerLogDeliveryPtrType ConnectorWorkerLogDeliveryArgs

func ConnectorWorkerLogDeliveryPtr(v *ConnectorWorkerLogDeliveryArgs) ConnectorWorkerLogDeliveryPtrInput {
	return (*connectorWorkerLogDeliveryPtrType)(v)
}

func (*connectorWorkerLogDeliveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorWorkerLogDelivery)(nil)).Elem()
}

func (i *connectorWorkerLogDeliveryPtrType) ToConnectorWorkerLogDeliveryPtrOutput() ConnectorWorkerLogDeliveryPtrOutput {
	return i.ToConnectorWorkerLogDeliveryPtrOutputWithContext(context.Background())
}

func (i *connectorWorkerLogDeliveryPtrType) ToConnectorWorkerLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorWorkerLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectorWorkerLogDeliveryPtrOutput)
}

// Specifies where worker logs are delivered.
type ConnectorWorkerLogDeliveryOutput struct{ *pulumi.OutputState }

func (ConnectorWorkerLogDeliveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectorWorkerLogDelivery)(nil)).Elem()
}

func (o ConnectorWorkerLogDeliveryOutput) ToConnectorWorkerLogDeliveryOutput() ConnectorWorkerLogDeliveryOutput {
	return o
}

func (o ConnectorWorkerLogDeliveryOutput) ToConnectorWorkerLogDeliveryOutputWithContext(ctx context.Context) ConnectorWorkerLogDeliveryOutput {
	return o
}

func (o ConnectorWorkerLogDeliveryOutput) ToConnectorWorkerLogDeliveryPtrOutput() ConnectorWorkerLogDeliveryPtrOutput {
	return o.ToConnectorWorkerLogDeliveryPtrOutputWithContext(context.Background())
}

func (o ConnectorWorkerLogDeliveryOutput) ToConnectorWorkerLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorWorkerLogDeliveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectorWorkerLogDelivery) *ConnectorWorkerLogDelivery {
		return &v
	}).(ConnectorWorkerLogDeliveryPtrOutput)
}

func (o ConnectorWorkerLogDeliveryOutput) CloudWatchLogs() ConnectorCloudWatchLogsLogDeliveryPtrOutput {
	return o.ApplyT(func(v ConnectorWorkerLogDelivery) *ConnectorCloudWatchLogsLogDelivery { return v.CloudWatchLogs }).(ConnectorCloudWatchLogsLogDeliveryPtrOutput)
}

func (o ConnectorWorkerLogDeliveryOutput) Firehose() ConnectorFirehoseLogDeliveryPtrOutput {
	return o.ApplyT(func(v ConnectorWorkerLogDelivery) *ConnectorFirehoseLogDelivery { return v.Firehose }).(ConnectorFirehoseLogDeliveryPtrOutput)
}

func (o ConnectorWorkerLogDeliveryOutput) S3() ConnectorS3LogDeliveryPtrOutput {
	return o.ApplyT(func(v ConnectorWorkerLogDelivery) *ConnectorS3LogDelivery { return v.S3 }).(ConnectorS3LogDeliveryPtrOutput)
}

type ConnectorWorkerLogDeliveryPtrOutput struct{ *pulumi.OutputState }

func (ConnectorWorkerLogDeliveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectorWorkerLogDelivery)(nil)).Elem()
}

func (o ConnectorWorkerLogDeliveryPtrOutput) ToConnectorWorkerLogDeliveryPtrOutput() ConnectorWorkerLogDeliveryPtrOutput {
	return o
}

func (o ConnectorWorkerLogDeliveryPtrOutput) ToConnectorWorkerLogDeliveryPtrOutputWithContext(ctx context.Context) ConnectorWorkerLogDeliveryPtrOutput {
	return o
}

func (o ConnectorWorkerLogDeliveryPtrOutput) Elem() ConnectorWorkerLogDeliveryOutput {
	return o.ApplyT(func(v *ConnectorWorkerLogDelivery) ConnectorWorkerLogDelivery {
		if v != nil {
			return *v
		}
		var ret ConnectorWorkerLogDelivery
		return ret
	}).(ConnectorWorkerLogDeliveryOutput)
}

func (o ConnectorWorkerLogDeliveryPtrOutput) CloudWatchLogs() ConnectorCloudWatchLogsLogDeliveryPtrOutput {
	return o.ApplyT(func(v *ConnectorWorkerLogDelivery) *ConnectorCloudWatchLogsLogDelivery {
		if v == nil {
			return nil
		}
		return v.CloudWatchLogs
	}).(ConnectorCloudWatchLogsLogDeliveryPtrOutput)
}

func (o ConnectorWorkerLogDeliveryPtrOutput) Firehose() ConnectorFirehoseLogDeliveryPtrOutput {
	return o.ApplyT(func(v *ConnectorWorkerLogDelivery) *ConnectorFirehoseLogDelivery {
		if v == nil {
			return nil
		}
		return v.Firehose
	}).(ConnectorFirehoseLogDeliveryPtrOutput)
}

func (o ConnectorWorkerLogDeliveryPtrOutput) S3() ConnectorS3LogDeliveryPtrOutput {
	return o.ApplyT(func(v *ConnectorWorkerLogDelivery) *ConnectorS3LogDelivery {
		if v == nil {
			return nil
		}
		return v.S3
	}).(ConnectorS3LogDeliveryPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorApacheKafkaClusterInput)(nil)).Elem(), ConnectorApacheKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorApacheKafkaClusterPtrInput)(nil)).Elem(), ConnectorApacheKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAutoScalingInput)(nil)).Elem(), ConnectorAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorAutoScalingPtrInput)(nil)).Elem(), ConnectorAutoScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCapacityInput)(nil)).Elem(), ConnectorCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCapacityPtrInput)(nil)).Elem(), ConnectorCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCloudWatchLogsLogDeliveryInput)(nil)).Elem(), ConnectorCloudWatchLogsLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCloudWatchLogsLogDeliveryPtrInput)(nil)).Elem(), ConnectorCloudWatchLogsLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorCustomPluginInput)(nil)).Elem(), ConnectorCustomPluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorFirehoseLogDeliveryInput)(nil)).Elem(), ConnectorFirehoseLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorFirehoseLogDeliveryPtrInput)(nil)).Elem(), ConnectorFirehoseLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterInput)(nil)).Elem(), ConnectorKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterPtrInput)(nil)).Elem(), ConnectorKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterClientAuthenticationInput)(nil)).Elem(), ConnectorKafkaClusterClientAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterClientAuthenticationPtrInput)(nil)).Elem(), ConnectorKafkaClusterClientAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterEncryptionInTransitInput)(nil)).Elem(), ConnectorKafkaClusterEncryptionInTransitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorKafkaClusterEncryptionInTransitPtrInput)(nil)).Elem(), ConnectorKafkaClusterEncryptionInTransitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorLogDeliveryInput)(nil)).Elem(), ConnectorLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorLogDeliveryPtrInput)(nil)).Elem(), ConnectorLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorPluginInput)(nil)).Elem(), ConnectorPluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorPluginArrayInput)(nil)).Elem(), ConnectorPluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProvisionedCapacityInput)(nil)).Elem(), ConnectorProvisionedCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorProvisionedCapacityPtrInput)(nil)).Elem(), ConnectorProvisionedCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorS3LogDeliveryInput)(nil)).Elem(), ConnectorS3LogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorS3LogDeliveryPtrInput)(nil)).Elem(), ConnectorS3LogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorScaleInPolicyInput)(nil)).Elem(), ConnectorScaleInPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorScaleInPolicyPtrInput)(nil)).Elem(), ConnectorScaleInPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorScaleOutPolicyInput)(nil)).Elem(), ConnectorScaleOutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorScaleOutPolicyPtrInput)(nil)).Elem(), ConnectorScaleOutPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorVpcInput)(nil)).Elem(), ConnectorVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorVpcPtrInput)(nil)).Elem(), ConnectorVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorWorkerConfigurationInput)(nil)).Elem(), ConnectorWorkerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorWorkerConfigurationPtrInput)(nil)).Elem(), ConnectorWorkerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorWorkerLogDeliveryInput)(nil)).Elem(), ConnectorWorkerLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectorWorkerLogDeliveryPtrInput)(nil)).Elem(), ConnectorWorkerLogDeliveryArgs{})
	pulumi.RegisterOutputType(ConnectorApacheKafkaClusterOutput{})
	pulumi.RegisterOutputType(ConnectorApacheKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(ConnectorAutoScalingOutput{})
	pulumi.RegisterOutputType(ConnectorAutoScalingPtrOutput{})
	pulumi.RegisterOutputType(ConnectorCapacityOutput{})
	pulumi.RegisterOutputType(ConnectorCapacityPtrOutput{})
	pulumi.RegisterOutputType(ConnectorCloudWatchLogsLogDeliveryOutput{})
	pulumi.RegisterOutputType(ConnectorCloudWatchLogsLogDeliveryPtrOutput{})
	pulumi.RegisterOutputType(ConnectorCustomPluginOutput{})
	pulumi.RegisterOutputType(ConnectorFirehoseLogDeliveryOutput{})
	pulumi.RegisterOutputType(ConnectorFirehoseLogDeliveryPtrOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterPtrOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterClientAuthenticationOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterClientAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterEncryptionInTransitOutput{})
	pulumi.RegisterOutputType(ConnectorKafkaClusterEncryptionInTransitPtrOutput{})
	pulumi.RegisterOutputType(ConnectorLogDeliveryOutput{})
	pulumi.RegisterOutputType(ConnectorLogDeliveryPtrOutput{})
	pulumi.RegisterOutputType(ConnectorPluginOutput{})
	pulumi.RegisterOutputType(ConnectorPluginArrayOutput{})
	pulumi.RegisterOutputType(ConnectorProvisionedCapacityOutput{})
	pulumi.RegisterOutputType(ConnectorProvisionedCapacityPtrOutput{})
	pulumi.RegisterOutputType(ConnectorS3LogDeliveryOutput{})
	pulumi.RegisterOutputType(ConnectorS3LogDeliveryPtrOutput{})
	pulumi.RegisterOutputType(ConnectorScaleInPolicyOutput{})
	pulumi.RegisterOutputType(ConnectorScaleInPolicyPtrOutput{})
	pulumi.RegisterOutputType(ConnectorScaleOutPolicyOutput{})
	pulumi.RegisterOutputType(ConnectorScaleOutPolicyPtrOutput{})
	pulumi.RegisterOutputType(ConnectorVpcOutput{})
	pulumi.RegisterOutputType(ConnectorVpcPtrOutput{})
	pulumi.RegisterOutputType(ConnectorWorkerConfigurationOutput{})
	pulumi.RegisterOutputType(ConnectorWorkerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ConnectorWorkerLogDeliveryOutput{})
	pulumi.RegisterOutputType(ConnectorWorkerLogDeliveryPtrOutput{})
}
