// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kafkaconnect

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The configuration of the workers, which are the processes that run the connector logic.
func LookupWorkerConfiguration(ctx *pulumi.Context, args *LookupWorkerConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupWorkerConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupWorkerConfigurationResult
	err := ctx.Invoke("aws-native:kafkaconnect:getWorkerConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupWorkerConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the custom configuration.
	WorkerConfigurationArn string `pulumi:"workerConfigurationArn"`
}

type LookupWorkerConfigurationResult struct {
	// The description of a revision of the worker configuration.
	Revision *int `pulumi:"revision"`
	// A collection of tags associated with a resource
	Tags []aws.Tag `pulumi:"tags"`
	// The Amazon Resource Name (ARN) of the custom configuration.
	WorkerConfigurationArn *string `pulumi:"workerConfigurationArn"`
}

func LookupWorkerConfigurationOutput(ctx *pulumi.Context, args LookupWorkerConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupWorkerConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupWorkerConfigurationResult, error) {
			args := v.(LookupWorkerConfigurationArgs)
			r, err := LookupWorkerConfiguration(ctx, &args, opts...)
			var s LookupWorkerConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupWorkerConfigurationResultOutput)
}

type LookupWorkerConfigurationOutputArgs struct {
	// The Amazon Resource Name (ARN) of the custom configuration.
	WorkerConfigurationArn pulumi.StringInput `pulumi:"workerConfigurationArn"`
}

func (LookupWorkerConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkerConfigurationArgs)(nil)).Elem()
}

type LookupWorkerConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupWorkerConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupWorkerConfigurationResult)(nil)).Elem()
}

func (o LookupWorkerConfigurationResultOutput) ToLookupWorkerConfigurationResultOutput() LookupWorkerConfigurationResultOutput {
	return o
}

func (o LookupWorkerConfigurationResultOutput) ToLookupWorkerConfigurationResultOutputWithContext(ctx context.Context) LookupWorkerConfigurationResultOutput {
	return o
}

// The description of a revision of the worker configuration.
func (o LookupWorkerConfigurationResultOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupWorkerConfigurationResult) *int { return v.Revision }).(pulumi.IntPtrOutput)
}

// A collection of tags associated with a resource
func (o LookupWorkerConfigurationResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupWorkerConfigurationResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The Amazon Resource Name (ARN) of the custom configuration.
func (o LookupWorkerConfigurationResultOutput) WorkerConfigurationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupWorkerConfigurationResult) *string { return v.WorkerConfigurationArn }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupWorkerConfigurationResultOutput{})
}
