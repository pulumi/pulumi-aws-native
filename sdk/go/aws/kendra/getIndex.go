// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kendra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Kendra index
func LookupIndex(ctx *pulumi.Context, args *LookupIndexArgs, opts ...pulumi.InvokeOption) (*LookupIndexResult, error) {
	var rv LookupIndexResult
	err := ctx.Invoke("aws-native:kendra:getIndex", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIndexArgs struct {
	Id string `pulumi:"id"`
}

type LookupIndexResult struct {
	Arn *string `pulumi:"arn"`
	// Capacity units
	CapacityUnits *IndexCapacityUnitsConfiguration `pulumi:"capacityUnits"`
	// A description for the index
	Description *string `pulumi:"description"`
	// Document metadata configurations
	DocumentMetadataConfigurations []IndexDocumentMetadataConfiguration `pulumi:"documentMetadataConfigurations"`
	Id                             *string                              `pulumi:"id"`
	Name                           *string                              `pulumi:"name"`
	RoleArn                        *string                              `pulumi:"roleArn"`
	// Tags for labeling the index
	Tags                    []IndexTag                    `pulumi:"tags"`
	UserContextPolicy       *IndexUserContextPolicy       `pulumi:"userContextPolicy"`
	UserTokenConfigurations []IndexUserTokenConfiguration `pulumi:"userTokenConfigurations"`
}

func LookupIndexOutput(ctx *pulumi.Context, args LookupIndexOutputArgs, opts ...pulumi.InvokeOption) LookupIndexResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIndexResult, error) {
			args := v.(LookupIndexArgs)
			r, err := LookupIndex(ctx, &args, opts...)
			return *r, err
		}).(LookupIndexResultOutput)
}

type LookupIndexOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupIndexOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIndexArgs)(nil)).Elem()
}

type LookupIndexResultOutput struct{ *pulumi.OutputState }

func (LookupIndexResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIndexResult)(nil)).Elem()
}

func (o LookupIndexResultOutput) ToLookupIndexResultOutput() LookupIndexResultOutput {
	return o
}

func (o LookupIndexResultOutput) ToLookupIndexResultOutputWithContext(ctx context.Context) LookupIndexResultOutput {
	return o
}

func (o LookupIndexResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Capacity units
func (o LookupIndexResultOutput) CapacityUnits() IndexCapacityUnitsConfigurationPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *IndexCapacityUnitsConfiguration { return v.CapacityUnits }).(IndexCapacityUnitsConfigurationPtrOutput)
}

// A description for the index
func (o LookupIndexResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Document metadata configurations
func (o LookupIndexResultOutput) DocumentMetadataConfigurations() IndexDocumentMetadataConfigurationArrayOutput {
	return o.ApplyT(func(v LookupIndexResult) []IndexDocumentMetadataConfiguration {
		return v.DocumentMetadataConfigurations
	}).(IndexDocumentMetadataConfigurationArrayOutput)
}

func (o LookupIndexResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupIndexResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupIndexResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Tags for labeling the index
func (o LookupIndexResultOutput) Tags() IndexTagArrayOutput {
	return o.ApplyT(func(v LookupIndexResult) []IndexTag { return v.Tags }).(IndexTagArrayOutput)
}

func (o LookupIndexResultOutput) UserContextPolicy() IndexUserContextPolicyPtrOutput {
	return o.ApplyT(func(v LookupIndexResult) *IndexUserContextPolicy { return v.UserContextPolicy }).(IndexUserContextPolicyPtrOutput)
}

func (o LookupIndexResultOutput) UserTokenConfigurations() IndexUserTokenConfigurationArrayOutput {
	return o.ApplyT(func(v LookupIndexResult) []IndexUserTokenConfiguration { return v.UserTokenConfigurations }).(IndexUserTokenConfigurationArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIndexResultOutput{})
}
