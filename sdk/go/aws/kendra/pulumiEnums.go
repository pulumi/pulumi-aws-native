// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kendra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataSourceConfluenceAttachmentFieldName string

const (
	DataSourceConfluenceAttachmentFieldNameAuthor      = DataSourceConfluenceAttachmentFieldName("AUTHOR")
	DataSourceConfluenceAttachmentFieldNameContentType = DataSourceConfluenceAttachmentFieldName("CONTENT_TYPE")
	DataSourceConfluenceAttachmentFieldNameCreatedDate = DataSourceConfluenceAttachmentFieldName("CREATED_DATE")
	DataSourceConfluenceAttachmentFieldNameDisplayUrl  = DataSourceConfluenceAttachmentFieldName("DISPLAY_URL")
	DataSourceConfluenceAttachmentFieldNameFileSize    = DataSourceConfluenceAttachmentFieldName("FILE_SIZE")
	DataSourceConfluenceAttachmentFieldNameItemType    = DataSourceConfluenceAttachmentFieldName("ITEM_TYPE")
	DataSourceConfluenceAttachmentFieldNameParentId    = DataSourceConfluenceAttachmentFieldName("PARENT_ID")
	DataSourceConfluenceAttachmentFieldNameSpaceKey    = DataSourceConfluenceAttachmentFieldName("SPACE_KEY")
	DataSourceConfluenceAttachmentFieldNameSpaceName   = DataSourceConfluenceAttachmentFieldName("SPACE_NAME")
	DataSourceConfluenceAttachmentFieldNameUrl         = DataSourceConfluenceAttachmentFieldName("URL")
	DataSourceConfluenceAttachmentFieldNameVersion     = DataSourceConfluenceAttachmentFieldName("VERSION")
)

func (DataSourceConfluenceAttachmentFieldName) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceAttachmentFieldName)(nil)).Elem()
}

func (e DataSourceConfluenceAttachmentFieldName) ToDataSourceConfluenceAttachmentFieldNameOutput() DataSourceConfluenceAttachmentFieldNameOutput {
	return pulumi.ToOutput(e).(DataSourceConfluenceAttachmentFieldNameOutput)
}

func (e DataSourceConfluenceAttachmentFieldName) ToDataSourceConfluenceAttachmentFieldNameOutputWithContext(ctx context.Context) DataSourceConfluenceAttachmentFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceConfluenceAttachmentFieldNameOutput)
}

func (e DataSourceConfluenceAttachmentFieldName) ToDataSourceConfluenceAttachmentFieldNamePtrOutput() DataSourceConfluenceAttachmentFieldNamePtrOutput {
	return e.ToDataSourceConfluenceAttachmentFieldNamePtrOutputWithContext(context.Background())
}

func (e DataSourceConfluenceAttachmentFieldName) ToDataSourceConfluenceAttachmentFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluenceAttachmentFieldNamePtrOutput {
	return DataSourceConfluenceAttachmentFieldName(e).ToDataSourceConfluenceAttachmentFieldNameOutputWithContext(ctx).ToDataSourceConfluenceAttachmentFieldNamePtrOutputWithContext(ctx)
}

func (e DataSourceConfluenceAttachmentFieldName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceConfluenceAttachmentFieldName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceConfluenceAttachmentFieldName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceConfluenceAttachmentFieldName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceConfluenceAttachmentFieldNameOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceAttachmentFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceAttachmentFieldName)(nil)).Elem()
}

func (o DataSourceConfluenceAttachmentFieldNameOutput) ToDataSourceConfluenceAttachmentFieldNameOutput() DataSourceConfluenceAttachmentFieldNameOutput {
	return o
}

func (o DataSourceConfluenceAttachmentFieldNameOutput) ToDataSourceConfluenceAttachmentFieldNameOutputWithContext(ctx context.Context) DataSourceConfluenceAttachmentFieldNameOutput {
	return o
}

func (o DataSourceConfluenceAttachmentFieldNameOutput) ToDataSourceConfluenceAttachmentFieldNamePtrOutput() DataSourceConfluenceAttachmentFieldNamePtrOutput {
	return o.ToDataSourceConfluenceAttachmentFieldNamePtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceAttachmentFieldNameOutput) ToDataSourceConfluenceAttachmentFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluenceAttachmentFieldNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceConfluenceAttachmentFieldName) *DataSourceConfluenceAttachmentFieldName {
		return &v
	}).(DataSourceConfluenceAttachmentFieldNamePtrOutput)
}

func (o DataSourceConfluenceAttachmentFieldNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceConfluenceAttachmentFieldNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceConfluenceAttachmentFieldName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceConfluenceAttachmentFieldNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceAttachmentFieldNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceConfluenceAttachmentFieldName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceConfluenceAttachmentFieldNamePtrOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceAttachmentFieldNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfluenceAttachmentFieldName)(nil)).Elem()
}

func (o DataSourceConfluenceAttachmentFieldNamePtrOutput) ToDataSourceConfluenceAttachmentFieldNamePtrOutput() DataSourceConfluenceAttachmentFieldNamePtrOutput {
	return o
}

func (o DataSourceConfluenceAttachmentFieldNamePtrOutput) ToDataSourceConfluenceAttachmentFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluenceAttachmentFieldNamePtrOutput {
	return o
}

func (o DataSourceConfluenceAttachmentFieldNamePtrOutput) Elem() DataSourceConfluenceAttachmentFieldNameOutput {
	return o.ApplyT(func(v *DataSourceConfluenceAttachmentFieldName) DataSourceConfluenceAttachmentFieldName {
		if v != nil {
			return *v
		}
		var ret DataSourceConfluenceAttachmentFieldName
		return ret
	}).(DataSourceConfluenceAttachmentFieldNameOutput)
}

func (o DataSourceConfluenceAttachmentFieldNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceAttachmentFieldNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceConfluenceAttachmentFieldName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceConfluenceAttachmentFieldNameInput is an input type that accepts DataSourceConfluenceAttachmentFieldNameArgs and DataSourceConfluenceAttachmentFieldNameOutput values.
// You can construct a concrete instance of `DataSourceConfluenceAttachmentFieldNameInput` via:
//
//          DataSourceConfluenceAttachmentFieldNameArgs{...}
type DataSourceConfluenceAttachmentFieldNameInput interface {
	pulumi.Input

	ToDataSourceConfluenceAttachmentFieldNameOutput() DataSourceConfluenceAttachmentFieldNameOutput
	ToDataSourceConfluenceAttachmentFieldNameOutputWithContext(context.Context) DataSourceConfluenceAttachmentFieldNameOutput
}

var dataSourceConfluenceAttachmentFieldNamePtrType = reflect.TypeOf((**DataSourceConfluenceAttachmentFieldName)(nil)).Elem()

type DataSourceConfluenceAttachmentFieldNamePtrInput interface {
	pulumi.Input

	ToDataSourceConfluenceAttachmentFieldNamePtrOutput() DataSourceConfluenceAttachmentFieldNamePtrOutput
	ToDataSourceConfluenceAttachmentFieldNamePtrOutputWithContext(context.Context) DataSourceConfluenceAttachmentFieldNamePtrOutput
}

type dataSourceConfluenceAttachmentFieldNamePtr string

func DataSourceConfluenceAttachmentFieldNamePtr(v string) DataSourceConfluenceAttachmentFieldNamePtrInput {
	return (*dataSourceConfluenceAttachmentFieldNamePtr)(&v)
}

func (*dataSourceConfluenceAttachmentFieldNamePtr) ElementType() reflect.Type {
	return dataSourceConfluenceAttachmentFieldNamePtrType
}

func (in *dataSourceConfluenceAttachmentFieldNamePtr) ToDataSourceConfluenceAttachmentFieldNamePtrOutput() DataSourceConfluenceAttachmentFieldNamePtrOutput {
	return pulumi.ToOutput(in).(DataSourceConfluenceAttachmentFieldNamePtrOutput)
}

func (in *dataSourceConfluenceAttachmentFieldNamePtr) ToDataSourceConfluenceAttachmentFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluenceAttachmentFieldNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceConfluenceAttachmentFieldNamePtrOutput)
}

type DataSourceConfluenceBlogFieldName string

const (
	DataSourceConfluenceBlogFieldNameAuthor      = DataSourceConfluenceBlogFieldName("AUTHOR")
	DataSourceConfluenceBlogFieldNameDisplayUrl  = DataSourceConfluenceBlogFieldName("DISPLAY_URL")
	DataSourceConfluenceBlogFieldNameItemType    = DataSourceConfluenceBlogFieldName("ITEM_TYPE")
	DataSourceConfluenceBlogFieldNameLabels      = DataSourceConfluenceBlogFieldName("LABELS")
	DataSourceConfluenceBlogFieldNamePublishDate = DataSourceConfluenceBlogFieldName("PUBLISH_DATE")
	DataSourceConfluenceBlogFieldNameSpaceKey    = DataSourceConfluenceBlogFieldName("SPACE_KEY")
	DataSourceConfluenceBlogFieldNameSpaceName   = DataSourceConfluenceBlogFieldName("SPACE_NAME")
	DataSourceConfluenceBlogFieldNameUrl         = DataSourceConfluenceBlogFieldName("URL")
	DataSourceConfluenceBlogFieldNameVersion     = DataSourceConfluenceBlogFieldName("VERSION")
)

func (DataSourceConfluenceBlogFieldName) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceBlogFieldName)(nil)).Elem()
}

func (e DataSourceConfluenceBlogFieldName) ToDataSourceConfluenceBlogFieldNameOutput() DataSourceConfluenceBlogFieldNameOutput {
	return pulumi.ToOutput(e).(DataSourceConfluenceBlogFieldNameOutput)
}

func (e DataSourceConfluenceBlogFieldName) ToDataSourceConfluenceBlogFieldNameOutputWithContext(ctx context.Context) DataSourceConfluenceBlogFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceConfluenceBlogFieldNameOutput)
}

func (e DataSourceConfluenceBlogFieldName) ToDataSourceConfluenceBlogFieldNamePtrOutput() DataSourceConfluenceBlogFieldNamePtrOutput {
	return e.ToDataSourceConfluenceBlogFieldNamePtrOutputWithContext(context.Background())
}

func (e DataSourceConfluenceBlogFieldName) ToDataSourceConfluenceBlogFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluenceBlogFieldNamePtrOutput {
	return DataSourceConfluenceBlogFieldName(e).ToDataSourceConfluenceBlogFieldNameOutputWithContext(ctx).ToDataSourceConfluenceBlogFieldNamePtrOutputWithContext(ctx)
}

func (e DataSourceConfluenceBlogFieldName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceConfluenceBlogFieldName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceConfluenceBlogFieldName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceConfluenceBlogFieldName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceConfluenceBlogFieldNameOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceBlogFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceBlogFieldName)(nil)).Elem()
}

func (o DataSourceConfluenceBlogFieldNameOutput) ToDataSourceConfluenceBlogFieldNameOutput() DataSourceConfluenceBlogFieldNameOutput {
	return o
}

func (o DataSourceConfluenceBlogFieldNameOutput) ToDataSourceConfluenceBlogFieldNameOutputWithContext(ctx context.Context) DataSourceConfluenceBlogFieldNameOutput {
	return o
}

func (o DataSourceConfluenceBlogFieldNameOutput) ToDataSourceConfluenceBlogFieldNamePtrOutput() DataSourceConfluenceBlogFieldNamePtrOutput {
	return o.ToDataSourceConfluenceBlogFieldNamePtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceBlogFieldNameOutput) ToDataSourceConfluenceBlogFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluenceBlogFieldNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceConfluenceBlogFieldName) *DataSourceConfluenceBlogFieldName {
		return &v
	}).(DataSourceConfluenceBlogFieldNamePtrOutput)
}

func (o DataSourceConfluenceBlogFieldNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceConfluenceBlogFieldNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceConfluenceBlogFieldName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceConfluenceBlogFieldNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceBlogFieldNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceConfluenceBlogFieldName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceConfluenceBlogFieldNamePtrOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceBlogFieldNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfluenceBlogFieldName)(nil)).Elem()
}

func (o DataSourceConfluenceBlogFieldNamePtrOutput) ToDataSourceConfluenceBlogFieldNamePtrOutput() DataSourceConfluenceBlogFieldNamePtrOutput {
	return o
}

func (o DataSourceConfluenceBlogFieldNamePtrOutput) ToDataSourceConfluenceBlogFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluenceBlogFieldNamePtrOutput {
	return o
}

func (o DataSourceConfluenceBlogFieldNamePtrOutput) Elem() DataSourceConfluenceBlogFieldNameOutput {
	return o.ApplyT(func(v *DataSourceConfluenceBlogFieldName) DataSourceConfluenceBlogFieldName {
		if v != nil {
			return *v
		}
		var ret DataSourceConfluenceBlogFieldName
		return ret
	}).(DataSourceConfluenceBlogFieldNameOutput)
}

func (o DataSourceConfluenceBlogFieldNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceBlogFieldNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceConfluenceBlogFieldName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceConfluenceBlogFieldNameInput is an input type that accepts DataSourceConfluenceBlogFieldNameArgs and DataSourceConfluenceBlogFieldNameOutput values.
// You can construct a concrete instance of `DataSourceConfluenceBlogFieldNameInput` via:
//
//          DataSourceConfluenceBlogFieldNameArgs{...}
type DataSourceConfluenceBlogFieldNameInput interface {
	pulumi.Input

	ToDataSourceConfluenceBlogFieldNameOutput() DataSourceConfluenceBlogFieldNameOutput
	ToDataSourceConfluenceBlogFieldNameOutputWithContext(context.Context) DataSourceConfluenceBlogFieldNameOutput
}

var dataSourceConfluenceBlogFieldNamePtrType = reflect.TypeOf((**DataSourceConfluenceBlogFieldName)(nil)).Elem()

type DataSourceConfluenceBlogFieldNamePtrInput interface {
	pulumi.Input

	ToDataSourceConfluenceBlogFieldNamePtrOutput() DataSourceConfluenceBlogFieldNamePtrOutput
	ToDataSourceConfluenceBlogFieldNamePtrOutputWithContext(context.Context) DataSourceConfluenceBlogFieldNamePtrOutput
}

type dataSourceConfluenceBlogFieldNamePtr string

func DataSourceConfluenceBlogFieldNamePtr(v string) DataSourceConfluenceBlogFieldNamePtrInput {
	return (*dataSourceConfluenceBlogFieldNamePtr)(&v)
}

func (*dataSourceConfluenceBlogFieldNamePtr) ElementType() reflect.Type {
	return dataSourceConfluenceBlogFieldNamePtrType
}

func (in *dataSourceConfluenceBlogFieldNamePtr) ToDataSourceConfluenceBlogFieldNamePtrOutput() DataSourceConfluenceBlogFieldNamePtrOutput {
	return pulumi.ToOutput(in).(DataSourceConfluenceBlogFieldNamePtrOutput)
}

func (in *dataSourceConfluenceBlogFieldNamePtr) ToDataSourceConfluenceBlogFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluenceBlogFieldNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceConfluenceBlogFieldNamePtrOutput)
}

type DataSourceConfluencePageFieldName string

const (
	DataSourceConfluencePageFieldNameAuthor        = DataSourceConfluencePageFieldName("AUTHOR")
	DataSourceConfluencePageFieldNameContentStatus = DataSourceConfluencePageFieldName("CONTENT_STATUS")
	DataSourceConfluencePageFieldNameCreatedDate   = DataSourceConfluencePageFieldName("CREATED_DATE")
	DataSourceConfluencePageFieldNameDisplayUrl    = DataSourceConfluencePageFieldName("DISPLAY_URL")
	DataSourceConfluencePageFieldNameItemType      = DataSourceConfluencePageFieldName("ITEM_TYPE")
	DataSourceConfluencePageFieldNameLabels        = DataSourceConfluencePageFieldName("LABELS")
	DataSourceConfluencePageFieldNameModifiedDate  = DataSourceConfluencePageFieldName("MODIFIED_DATE")
	DataSourceConfluencePageFieldNameParentId      = DataSourceConfluencePageFieldName("PARENT_ID")
	DataSourceConfluencePageFieldNameSpaceKey      = DataSourceConfluencePageFieldName("SPACE_KEY")
	DataSourceConfluencePageFieldNameSpaceName     = DataSourceConfluencePageFieldName("SPACE_NAME")
	DataSourceConfluencePageFieldNameUrl           = DataSourceConfluencePageFieldName("URL")
	DataSourceConfluencePageFieldNameVersion       = DataSourceConfluencePageFieldName("VERSION")
)

func (DataSourceConfluencePageFieldName) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluencePageFieldName)(nil)).Elem()
}

func (e DataSourceConfluencePageFieldName) ToDataSourceConfluencePageFieldNameOutput() DataSourceConfluencePageFieldNameOutput {
	return pulumi.ToOutput(e).(DataSourceConfluencePageFieldNameOutput)
}

func (e DataSourceConfluencePageFieldName) ToDataSourceConfluencePageFieldNameOutputWithContext(ctx context.Context) DataSourceConfluencePageFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceConfluencePageFieldNameOutput)
}

func (e DataSourceConfluencePageFieldName) ToDataSourceConfluencePageFieldNamePtrOutput() DataSourceConfluencePageFieldNamePtrOutput {
	return e.ToDataSourceConfluencePageFieldNamePtrOutputWithContext(context.Background())
}

func (e DataSourceConfluencePageFieldName) ToDataSourceConfluencePageFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluencePageFieldNamePtrOutput {
	return DataSourceConfluencePageFieldName(e).ToDataSourceConfluencePageFieldNameOutputWithContext(ctx).ToDataSourceConfluencePageFieldNamePtrOutputWithContext(ctx)
}

func (e DataSourceConfluencePageFieldName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceConfluencePageFieldName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceConfluencePageFieldName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceConfluencePageFieldName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceConfluencePageFieldNameOutput struct{ *pulumi.OutputState }

func (DataSourceConfluencePageFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluencePageFieldName)(nil)).Elem()
}

func (o DataSourceConfluencePageFieldNameOutput) ToDataSourceConfluencePageFieldNameOutput() DataSourceConfluencePageFieldNameOutput {
	return o
}

func (o DataSourceConfluencePageFieldNameOutput) ToDataSourceConfluencePageFieldNameOutputWithContext(ctx context.Context) DataSourceConfluencePageFieldNameOutput {
	return o
}

func (o DataSourceConfluencePageFieldNameOutput) ToDataSourceConfluencePageFieldNamePtrOutput() DataSourceConfluencePageFieldNamePtrOutput {
	return o.ToDataSourceConfluencePageFieldNamePtrOutputWithContext(context.Background())
}

func (o DataSourceConfluencePageFieldNameOutput) ToDataSourceConfluencePageFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluencePageFieldNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceConfluencePageFieldName) *DataSourceConfluencePageFieldName {
		return &v
	}).(DataSourceConfluencePageFieldNamePtrOutput)
}

func (o DataSourceConfluencePageFieldNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceConfluencePageFieldNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceConfluencePageFieldName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceConfluencePageFieldNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluencePageFieldNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceConfluencePageFieldName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceConfluencePageFieldNamePtrOutput struct{ *pulumi.OutputState }

func (DataSourceConfluencePageFieldNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfluencePageFieldName)(nil)).Elem()
}

func (o DataSourceConfluencePageFieldNamePtrOutput) ToDataSourceConfluencePageFieldNamePtrOutput() DataSourceConfluencePageFieldNamePtrOutput {
	return o
}

func (o DataSourceConfluencePageFieldNamePtrOutput) ToDataSourceConfluencePageFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluencePageFieldNamePtrOutput {
	return o
}

func (o DataSourceConfluencePageFieldNamePtrOutput) Elem() DataSourceConfluencePageFieldNameOutput {
	return o.ApplyT(func(v *DataSourceConfluencePageFieldName) DataSourceConfluencePageFieldName {
		if v != nil {
			return *v
		}
		var ret DataSourceConfluencePageFieldName
		return ret
	}).(DataSourceConfluencePageFieldNameOutput)
}

func (o DataSourceConfluencePageFieldNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluencePageFieldNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceConfluencePageFieldName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceConfluencePageFieldNameInput is an input type that accepts DataSourceConfluencePageFieldNameArgs and DataSourceConfluencePageFieldNameOutput values.
// You can construct a concrete instance of `DataSourceConfluencePageFieldNameInput` via:
//
//          DataSourceConfluencePageFieldNameArgs{...}
type DataSourceConfluencePageFieldNameInput interface {
	pulumi.Input

	ToDataSourceConfluencePageFieldNameOutput() DataSourceConfluencePageFieldNameOutput
	ToDataSourceConfluencePageFieldNameOutputWithContext(context.Context) DataSourceConfluencePageFieldNameOutput
}

var dataSourceConfluencePageFieldNamePtrType = reflect.TypeOf((**DataSourceConfluencePageFieldName)(nil)).Elem()

type DataSourceConfluencePageFieldNamePtrInput interface {
	pulumi.Input

	ToDataSourceConfluencePageFieldNamePtrOutput() DataSourceConfluencePageFieldNamePtrOutput
	ToDataSourceConfluencePageFieldNamePtrOutputWithContext(context.Context) DataSourceConfluencePageFieldNamePtrOutput
}

type dataSourceConfluencePageFieldNamePtr string

func DataSourceConfluencePageFieldNamePtr(v string) DataSourceConfluencePageFieldNamePtrInput {
	return (*dataSourceConfluencePageFieldNamePtr)(&v)
}

func (*dataSourceConfluencePageFieldNamePtr) ElementType() reflect.Type {
	return dataSourceConfluencePageFieldNamePtrType
}

func (in *dataSourceConfluencePageFieldNamePtr) ToDataSourceConfluencePageFieldNamePtrOutput() DataSourceConfluencePageFieldNamePtrOutput {
	return pulumi.ToOutput(in).(DataSourceConfluencePageFieldNamePtrOutput)
}

func (in *dataSourceConfluencePageFieldNamePtr) ToDataSourceConfluencePageFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluencePageFieldNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceConfluencePageFieldNamePtrOutput)
}

type DataSourceConfluenceSpaceFieldName string

const (
	DataSourceConfluenceSpaceFieldNameDisplayUrl = DataSourceConfluenceSpaceFieldName("DISPLAY_URL")
	DataSourceConfluenceSpaceFieldNameItemType   = DataSourceConfluenceSpaceFieldName("ITEM_TYPE")
	DataSourceConfluenceSpaceFieldNameSpaceKey   = DataSourceConfluenceSpaceFieldName("SPACE_KEY")
	DataSourceConfluenceSpaceFieldNameUrl        = DataSourceConfluenceSpaceFieldName("URL")
)

func (DataSourceConfluenceSpaceFieldName) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceSpaceFieldName)(nil)).Elem()
}

func (e DataSourceConfluenceSpaceFieldName) ToDataSourceConfluenceSpaceFieldNameOutput() DataSourceConfluenceSpaceFieldNameOutput {
	return pulumi.ToOutput(e).(DataSourceConfluenceSpaceFieldNameOutput)
}

func (e DataSourceConfluenceSpaceFieldName) ToDataSourceConfluenceSpaceFieldNameOutputWithContext(ctx context.Context) DataSourceConfluenceSpaceFieldNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceConfluenceSpaceFieldNameOutput)
}

func (e DataSourceConfluenceSpaceFieldName) ToDataSourceConfluenceSpaceFieldNamePtrOutput() DataSourceConfluenceSpaceFieldNamePtrOutput {
	return e.ToDataSourceConfluenceSpaceFieldNamePtrOutputWithContext(context.Background())
}

func (e DataSourceConfluenceSpaceFieldName) ToDataSourceConfluenceSpaceFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluenceSpaceFieldNamePtrOutput {
	return DataSourceConfluenceSpaceFieldName(e).ToDataSourceConfluenceSpaceFieldNameOutputWithContext(ctx).ToDataSourceConfluenceSpaceFieldNamePtrOutputWithContext(ctx)
}

func (e DataSourceConfluenceSpaceFieldName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceConfluenceSpaceFieldName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceConfluenceSpaceFieldName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceConfluenceSpaceFieldName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceConfluenceSpaceFieldNameOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceSpaceFieldNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceSpaceFieldName)(nil)).Elem()
}

func (o DataSourceConfluenceSpaceFieldNameOutput) ToDataSourceConfluenceSpaceFieldNameOutput() DataSourceConfluenceSpaceFieldNameOutput {
	return o
}

func (o DataSourceConfluenceSpaceFieldNameOutput) ToDataSourceConfluenceSpaceFieldNameOutputWithContext(ctx context.Context) DataSourceConfluenceSpaceFieldNameOutput {
	return o
}

func (o DataSourceConfluenceSpaceFieldNameOutput) ToDataSourceConfluenceSpaceFieldNamePtrOutput() DataSourceConfluenceSpaceFieldNamePtrOutput {
	return o.ToDataSourceConfluenceSpaceFieldNamePtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceSpaceFieldNameOutput) ToDataSourceConfluenceSpaceFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluenceSpaceFieldNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceConfluenceSpaceFieldName) *DataSourceConfluenceSpaceFieldName {
		return &v
	}).(DataSourceConfluenceSpaceFieldNamePtrOutput)
}

func (o DataSourceConfluenceSpaceFieldNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceConfluenceSpaceFieldNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceConfluenceSpaceFieldName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceConfluenceSpaceFieldNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceSpaceFieldNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceConfluenceSpaceFieldName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceConfluenceSpaceFieldNamePtrOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceSpaceFieldNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfluenceSpaceFieldName)(nil)).Elem()
}

func (o DataSourceConfluenceSpaceFieldNamePtrOutput) ToDataSourceConfluenceSpaceFieldNamePtrOutput() DataSourceConfluenceSpaceFieldNamePtrOutput {
	return o
}

func (o DataSourceConfluenceSpaceFieldNamePtrOutput) ToDataSourceConfluenceSpaceFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluenceSpaceFieldNamePtrOutput {
	return o
}

func (o DataSourceConfluenceSpaceFieldNamePtrOutput) Elem() DataSourceConfluenceSpaceFieldNameOutput {
	return o.ApplyT(func(v *DataSourceConfluenceSpaceFieldName) DataSourceConfluenceSpaceFieldName {
		if v != nil {
			return *v
		}
		var ret DataSourceConfluenceSpaceFieldName
		return ret
	}).(DataSourceConfluenceSpaceFieldNameOutput)
}

func (o DataSourceConfluenceSpaceFieldNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceSpaceFieldNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceConfluenceSpaceFieldName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceConfluenceSpaceFieldNameInput is an input type that accepts DataSourceConfluenceSpaceFieldNameArgs and DataSourceConfluenceSpaceFieldNameOutput values.
// You can construct a concrete instance of `DataSourceConfluenceSpaceFieldNameInput` via:
//
//          DataSourceConfluenceSpaceFieldNameArgs{...}
type DataSourceConfluenceSpaceFieldNameInput interface {
	pulumi.Input

	ToDataSourceConfluenceSpaceFieldNameOutput() DataSourceConfluenceSpaceFieldNameOutput
	ToDataSourceConfluenceSpaceFieldNameOutputWithContext(context.Context) DataSourceConfluenceSpaceFieldNameOutput
}

var dataSourceConfluenceSpaceFieldNamePtrType = reflect.TypeOf((**DataSourceConfluenceSpaceFieldName)(nil)).Elem()

type DataSourceConfluenceSpaceFieldNamePtrInput interface {
	pulumi.Input

	ToDataSourceConfluenceSpaceFieldNamePtrOutput() DataSourceConfluenceSpaceFieldNamePtrOutput
	ToDataSourceConfluenceSpaceFieldNamePtrOutputWithContext(context.Context) DataSourceConfluenceSpaceFieldNamePtrOutput
}

type dataSourceConfluenceSpaceFieldNamePtr string

func DataSourceConfluenceSpaceFieldNamePtr(v string) DataSourceConfluenceSpaceFieldNamePtrInput {
	return (*dataSourceConfluenceSpaceFieldNamePtr)(&v)
}

func (*dataSourceConfluenceSpaceFieldNamePtr) ElementType() reflect.Type {
	return dataSourceConfluenceSpaceFieldNamePtrType
}

func (in *dataSourceConfluenceSpaceFieldNamePtr) ToDataSourceConfluenceSpaceFieldNamePtrOutput() DataSourceConfluenceSpaceFieldNamePtrOutput {
	return pulumi.ToOutput(in).(DataSourceConfluenceSpaceFieldNamePtrOutput)
}

func (in *dataSourceConfluenceSpaceFieldNamePtr) ToDataSourceConfluenceSpaceFieldNamePtrOutputWithContext(ctx context.Context) DataSourceConfluenceSpaceFieldNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceConfluenceSpaceFieldNamePtrOutput)
}

type DataSourceConfluenceVersion string

const (
	DataSourceConfluenceVersionCloud  = DataSourceConfluenceVersion("CLOUD")
	DataSourceConfluenceVersionServer = DataSourceConfluenceVersion("SERVER")
)

func (DataSourceConfluenceVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceVersion)(nil)).Elem()
}

func (e DataSourceConfluenceVersion) ToDataSourceConfluenceVersionOutput() DataSourceConfluenceVersionOutput {
	return pulumi.ToOutput(e).(DataSourceConfluenceVersionOutput)
}

func (e DataSourceConfluenceVersion) ToDataSourceConfluenceVersionOutputWithContext(ctx context.Context) DataSourceConfluenceVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceConfluenceVersionOutput)
}

func (e DataSourceConfluenceVersion) ToDataSourceConfluenceVersionPtrOutput() DataSourceConfluenceVersionPtrOutput {
	return e.ToDataSourceConfluenceVersionPtrOutputWithContext(context.Background())
}

func (e DataSourceConfluenceVersion) ToDataSourceConfluenceVersionPtrOutputWithContext(ctx context.Context) DataSourceConfluenceVersionPtrOutput {
	return DataSourceConfluenceVersion(e).ToDataSourceConfluenceVersionOutputWithContext(ctx).ToDataSourceConfluenceVersionPtrOutputWithContext(ctx)
}

func (e DataSourceConfluenceVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceConfluenceVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceConfluenceVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceConfluenceVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceConfluenceVersionOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceConfluenceVersion)(nil)).Elem()
}

func (o DataSourceConfluenceVersionOutput) ToDataSourceConfluenceVersionOutput() DataSourceConfluenceVersionOutput {
	return o
}

func (o DataSourceConfluenceVersionOutput) ToDataSourceConfluenceVersionOutputWithContext(ctx context.Context) DataSourceConfluenceVersionOutput {
	return o
}

func (o DataSourceConfluenceVersionOutput) ToDataSourceConfluenceVersionPtrOutput() DataSourceConfluenceVersionPtrOutput {
	return o.ToDataSourceConfluenceVersionPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceVersionOutput) ToDataSourceConfluenceVersionPtrOutputWithContext(ctx context.Context) DataSourceConfluenceVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceConfluenceVersion) *DataSourceConfluenceVersion {
		return &v
	}).(DataSourceConfluenceVersionPtrOutput)
}

func (o DataSourceConfluenceVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceConfluenceVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceConfluenceVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceConfluenceVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceConfluenceVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceConfluenceVersionPtrOutput struct{ *pulumi.OutputState }

func (DataSourceConfluenceVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceConfluenceVersion)(nil)).Elem()
}

func (o DataSourceConfluenceVersionPtrOutput) ToDataSourceConfluenceVersionPtrOutput() DataSourceConfluenceVersionPtrOutput {
	return o
}

func (o DataSourceConfluenceVersionPtrOutput) ToDataSourceConfluenceVersionPtrOutputWithContext(ctx context.Context) DataSourceConfluenceVersionPtrOutput {
	return o
}

func (o DataSourceConfluenceVersionPtrOutput) Elem() DataSourceConfluenceVersionOutput {
	return o.ApplyT(func(v *DataSourceConfluenceVersion) DataSourceConfluenceVersion {
		if v != nil {
			return *v
		}
		var ret DataSourceConfluenceVersion
		return ret
	}).(DataSourceConfluenceVersionOutput)
}

func (o DataSourceConfluenceVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceConfluenceVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceConfluenceVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceConfluenceVersionInput is an input type that accepts DataSourceConfluenceVersionArgs and DataSourceConfluenceVersionOutput values.
// You can construct a concrete instance of `DataSourceConfluenceVersionInput` via:
//
//          DataSourceConfluenceVersionArgs{...}
type DataSourceConfluenceVersionInput interface {
	pulumi.Input

	ToDataSourceConfluenceVersionOutput() DataSourceConfluenceVersionOutput
	ToDataSourceConfluenceVersionOutputWithContext(context.Context) DataSourceConfluenceVersionOutput
}

var dataSourceConfluenceVersionPtrType = reflect.TypeOf((**DataSourceConfluenceVersion)(nil)).Elem()

type DataSourceConfluenceVersionPtrInput interface {
	pulumi.Input

	ToDataSourceConfluenceVersionPtrOutput() DataSourceConfluenceVersionPtrOutput
	ToDataSourceConfluenceVersionPtrOutputWithContext(context.Context) DataSourceConfluenceVersionPtrOutput
}

type dataSourceConfluenceVersionPtr string

func DataSourceConfluenceVersionPtr(v string) DataSourceConfluenceVersionPtrInput {
	return (*dataSourceConfluenceVersionPtr)(&v)
}

func (*dataSourceConfluenceVersionPtr) ElementType() reflect.Type {
	return dataSourceConfluenceVersionPtrType
}

func (in *dataSourceConfluenceVersionPtr) ToDataSourceConfluenceVersionPtrOutput() DataSourceConfluenceVersionPtrOutput {
	return pulumi.ToOutput(in).(DataSourceConfluenceVersionPtrOutput)
}

func (in *dataSourceConfluenceVersionPtr) ToDataSourceConfluenceVersionPtrOutputWithContext(ctx context.Context) DataSourceConfluenceVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceConfluenceVersionPtrOutput)
}

type DataSourceDatabaseEngineType string

const (
	DataSourceDatabaseEngineTypeRdsAuroraMysql      = DataSourceDatabaseEngineType("RDS_AURORA_MYSQL")
	DataSourceDatabaseEngineTypeRdsAuroraPostgresql = DataSourceDatabaseEngineType("RDS_AURORA_POSTGRESQL")
	DataSourceDatabaseEngineTypeRdsMysql            = DataSourceDatabaseEngineType("RDS_MYSQL")
	DataSourceDatabaseEngineTypeRdsPostgresql       = DataSourceDatabaseEngineType("RDS_POSTGRESQL")
)

func (DataSourceDatabaseEngineType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDatabaseEngineType)(nil)).Elem()
}

func (e DataSourceDatabaseEngineType) ToDataSourceDatabaseEngineTypeOutput() DataSourceDatabaseEngineTypeOutput {
	return pulumi.ToOutput(e).(DataSourceDatabaseEngineTypeOutput)
}

func (e DataSourceDatabaseEngineType) ToDataSourceDatabaseEngineTypeOutputWithContext(ctx context.Context) DataSourceDatabaseEngineTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceDatabaseEngineTypeOutput)
}

func (e DataSourceDatabaseEngineType) ToDataSourceDatabaseEngineTypePtrOutput() DataSourceDatabaseEngineTypePtrOutput {
	return e.ToDataSourceDatabaseEngineTypePtrOutputWithContext(context.Background())
}

func (e DataSourceDatabaseEngineType) ToDataSourceDatabaseEngineTypePtrOutputWithContext(ctx context.Context) DataSourceDatabaseEngineTypePtrOutput {
	return DataSourceDatabaseEngineType(e).ToDataSourceDatabaseEngineTypeOutputWithContext(ctx).ToDataSourceDatabaseEngineTypePtrOutputWithContext(ctx)
}

func (e DataSourceDatabaseEngineType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceDatabaseEngineType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceDatabaseEngineType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceDatabaseEngineType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceDatabaseEngineTypeOutput struct{ *pulumi.OutputState }

func (DataSourceDatabaseEngineTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDatabaseEngineType)(nil)).Elem()
}

func (o DataSourceDatabaseEngineTypeOutput) ToDataSourceDatabaseEngineTypeOutput() DataSourceDatabaseEngineTypeOutput {
	return o
}

func (o DataSourceDatabaseEngineTypeOutput) ToDataSourceDatabaseEngineTypeOutputWithContext(ctx context.Context) DataSourceDatabaseEngineTypeOutput {
	return o
}

func (o DataSourceDatabaseEngineTypeOutput) ToDataSourceDatabaseEngineTypePtrOutput() DataSourceDatabaseEngineTypePtrOutput {
	return o.ToDataSourceDatabaseEngineTypePtrOutputWithContext(context.Background())
}

func (o DataSourceDatabaseEngineTypeOutput) ToDataSourceDatabaseEngineTypePtrOutputWithContext(ctx context.Context) DataSourceDatabaseEngineTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDatabaseEngineType) *DataSourceDatabaseEngineType {
		return &v
	}).(DataSourceDatabaseEngineTypePtrOutput)
}

func (o DataSourceDatabaseEngineTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceDatabaseEngineTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceDatabaseEngineType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceDatabaseEngineTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceDatabaseEngineTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceDatabaseEngineType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceDatabaseEngineTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceDatabaseEngineTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDatabaseEngineType)(nil)).Elem()
}

func (o DataSourceDatabaseEngineTypePtrOutput) ToDataSourceDatabaseEngineTypePtrOutput() DataSourceDatabaseEngineTypePtrOutput {
	return o
}

func (o DataSourceDatabaseEngineTypePtrOutput) ToDataSourceDatabaseEngineTypePtrOutputWithContext(ctx context.Context) DataSourceDatabaseEngineTypePtrOutput {
	return o
}

func (o DataSourceDatabaseEngineTypePtrOutput) Elem() DataSourceDatabaseEngineTypeOutput {
	return o.ApplyT(func(v *DataSourceDatabaseEngineType) DataSourceDatabaseEngineType {
		if v != nil {
			return *v
		}
		var ret DataSourceDatabaseEngineType
		return ret
	}).(DataSourceDatabaseEngineTypeOutput)
}

func (o DataSourceDatabaseEngineTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceDatabaseEngineTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceDatabaseEngineType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceDatabaseEngineTypeInput is an input type that accepts DataSourceDatabaseEngineTypeArgs and DataSourceDatabaseEngineTypeOutput values.
// You can construct a concrete instance of `DataSourceDatabaseEngineTypeInput` via:
//
//          DataSourceDatabaseEngineTypeArgs{...}
type DataSourceDatabaseEngineTypeInput interface {
	pulumi.Input

	ToDataSourceDatabaseEngineTypeOutput() DataSourceDatabaseEngineTypeOutput
	ToDataSourceDatabaseEngineTypeOutputWithContext(context.Context) DataSourceDatabaseEngineTypeOutput
}

var dataSourceDatabaseEngineTypePtrType = reflect.TypeOf((**DataSourceDatabaseEngineType)(nil)).Elem()

type DataSourceDatabaseEngineTypePtrInput interface {
	pulumi.Input

	ToDataSourceDatabaseEngineTypePtrOutput() DataSourceDatabaseEngineTypePtrOutput
	ToDataSourceDatabaseEngineTypePtrOutputWithContext(context.Context) DataSourceDatabaseEngineTypePtrOutput
}

type dataSourceDatabaseEngineTypePtr string

func DataSourceDatabaseEngineTypePtr(v string) DataSourceDatabaseEngineTypePtrInput {
	return (*dataSourceDatabaseEngineTypePtr)(&v)
}

func (*dataSourceDatabaseEngineTypePtr) ElementType() reflect.Type {
	return dataSourceDatabaseEngineTypePtrType
}

func (in *dataSourceDatabaseEngineTypePtr) ToDataSourceDatabaseEngineTypePtrOutput() DataSourceDatabaseEngineTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceDatabaseEngineTypePtrOutput)
}

func (in *dataSourceDatabaseEngineTypePtr) ToDataSourceDatabaseEngineTypePtrOutputWithContext(ctx context.Context) DataSourceDatabaseEngineTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceDatabaseEngineTypePtrOutput)
}

type DataSourceQueryIdentifiersEnclosingOption string

const (
	DataSourceQueryIdentifiersEnclosingOptionDoubleQuotes = DataSourceQueryIdentifiersEnclosingOption("DOUBLE_QUOTES")
	DataSourceQueryIdentifiersEnclosingOptionNone         = DataSourceQueryIdentifiersEnclosingOption("NONE")
)

func (DataSourceQueryIdentifiersEnclosingOption) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceQueryIdentifiersEnclosingOption)(nil)).Elem()
}

func (e DataSourceQueryIdentifiersEnclosingOption) ToDataSourceQueryIdentifiersEnclosingOptionOutput() DataSourceQueryIdentifiersEnclosingOptionOutput {
	return pulumi.ToOutput(e).(DataSourceQueryIdentifiersEnclosingOptionOutput)
}

func (e DataSourceQueryIdentifiersEnclosingOption) ToDataSourceQueryIdentifiersEnclosingOptionOutputWithContext(ctx context.Context) DataSourceQueryIdentifiersEnclosingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceQueryIdentifiersEnclosingOptionOutput)
}

func (e DataSourceQueryIdentifiersEnclosingOption) ToDataSourceQueryIdentifiersEnclosingOptionPtrOutput() DataSourceQueryIdentifiersEnclosingOptionPtrOutput {
	return e.ToDataSourceQueryIdentifiersEnclosingOptionPtrOutputWithContext(context.Background())
}

func (e DataSourceQueryIdentifiersEnclosingOption) ToDataSourceQueryIdentifiersEnclosingOptionPtrOutputWithContext(ctx context.Context) DataSourceQueryIdentifiersEnclosingOptionPtrOutput {
	return DataSourceQueryIdentifiersEnclosingOption(e).ToDataSourceQueryIdentifiersEnclosingOptionOutputWithContext(ctx).ToDataSourceQueryIdentifiersEnclosingOptionPtrOutputWithContext(ctx)
}

func (e DataSourceQueryIdentifiersEnclosingOption) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceQueryIdentifiersEnclosingOption) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceQueryIdentifiersEnclosingOption) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceQueryIdentifiersEnclosingOption) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceQueryIdentifiersEnclosingOptionOutput struct{ *pulumi.OutputState }

func (DataSourceQueryIdentifiersEnclosingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceQueryIdentifiersEnclosingOption)(nil)).Elem()
}

func (o DataSourceQueryIdentifiersEnclosingOptionOutput) ToDataSourceQueryIdentifiersEnclosingOptionOutput() DataSourceQueryIdentifiersEnclosingOptionOutput {
	return o
}

func (o DataSourceQueryIdentifiersEnclosingOptionOutput) ToDataSourceQueryIdentifiersEnclosingOptionOutputWithContext(ctx context.Context) DataSourceQueryIdentifiersEnclosingOptionOutput {
	return o
}

func (o DataSourceQueryIdentifiersEnclosingOptionOutput) ToDataSourceQueryIdentifiersEnclosingOptionPtrOutput() DataSourceQueryIdentifiersEnclosingOptionPtrOutput {
	return o.ToDataSourceQueryIdentifiersEnclosingOptionPtrOutputWithContext(context.Background())
}

func (o DataSourceQueryIdentifiersEnclosingOptionOutput) ToDataSourceQueryIdentifiersEnclosingOptionPtrOutputWithContext(ctx context.Context) DataSourceQueryIdentifiersEnclosingOptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceQueryIdentifiersEnclosingOption) *DataSourceQueryIdentifiersEnclosingOption {
		return &v
	}).(DataSourceQueryIdentifiersEnclosingOptionPtrOutput)
}

func (o DataSourceQueryIdentifiersEnclosingOptionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceQueryIdentifiersEnclosingOptionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceQueryIdentifiersEnclosingOption) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceQueryIdentifiersEnclosingOptionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceQueryIdentifiersEnclosingOptionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceQueryIdentifiersEnclosingOption) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceQueryIdentifiersEnclosingOptionPtrOutput struct{ *pulumi.OutputState }

func (DataSourceQueryIdentifiersEnclosingOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceQueryIdentifiersEnclosingOption)(nil)).Elem()
}

func (o DataSourceQueryIdentifiersEnclosingOptionPtrOutput) ToDataSourceQueryIdentifiersEnclosingOptionPtrOutput() DataSourceQueryIdentifiersEnclosingOptionPtrOutput {
	return o
}

func (o DataSourceQueryIdentifiersEnclosingOptionPtrOutput) ToDataSourceQueryIdentifiersEnclosingOptionPtrOutputWithContext(ctx context.Context) DataSourceQueryIdentifiersEnclosingOptionPtrOutput {
	return o
}

func (o DataSourceQueryIdentifiersEnclosingOptionPtrOutput) Elem() DataSourceQueryIdentifiersEnclosingOptionOutput {
	return o.ApplyT(func(v *DataSourceQueryIdentifiersEnclosingOption) DataSourceQueryIdentifiersEnclosingOption {
		if v != nil {
			return *v
		}
		var ret DataSourceQueryIdentifiersEnclosingOption
		return ret
	}).(DataSourceQueryIdentifiersEnclosingOptionOutput)
}

func (o DataSourceQueryIdentifiersEnclosingOptionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceQueryIdentifiersEnclosingOptionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceQueryIdentifiersEnclosingOption) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceQueryIdentifiersEnclosingOptionInput is an input type that accepts DataSourceQueryIdentifiersEnclosingOptionArgs and DataSourceQueryIdentifiersEnclosingOptionOutput values.
// You can construct a concrete instance of `DataSourceQueryIdentifiersEnclosingOptionInput` via:
//
//          DataSourceQueryIdentifiersEnclosingOptionArgs{...}
type DataSourceQueryIdentifiersEnclosingOptionInput interface {
	pulumi.Input

	ToDataSourceQueryIdentifiersEnclosingOptionOutput() DataSourceQueryIdentifiersEnclosingOptionOutput
	ToDataSourceQueryIdentifiersEnclosingOptionOutputWithContext(context.Context) DataSourceQueryIdentifiersEnclosingOptionOutput
}

var dataSourceQueryIdentifiersEnclosingOptionPtrType = reflect.TypeOf((**DataSourceQueryIdentifiersEnclosingOption)(nil)).Elem()

type DataSourceQueryIdentifiersEnclosingOptionPtrInput interface {
	pulumi.Input

	ToDataSourceQueryIdentifiersEnclosingOptionPtrOutput() DataSourceQueryIdentifiersEnclosingOptionPtrOutput
	ToDataSourceQueryIdentifiersEnclosingOptionPtrOutputWithContext(context.Context) DataSourceQueryIdentifiersEnclosingOptionPtrOutput
}

type dataSourceQueryIdentifiersEnclosingOptionPtr string

func DataSourceQueryIdentifiersEnclosingOptionPtr(v string) DataSourceQueryIdentifiersEnclosingOptionPtrInput {
	return (*dataSourceQueryIdentifiersEnclosingOptionPtr)(&v)
}

func (*dataSourceQueryIdentifiersEnclosingOptionPtr) ElementType() reflect.Type {
	return dataSourceQueryIdentifiersEnclosingOptionPtrType
}

func (in *dataSourceQueryIdentifiersEnclosingOptionPtr) ToDataSourceQueryIdentifiersEnclosingOptionPtrOutput() DataSourceQueryIdentifiersEnclosingOptionPtrOutput {
	return pulumi.ToOutput(in).(DataSourceQueryIdentifiersEnclosingOptionPtrOutput)
}

func (in *dataSourceQueryIdentifiersEnclosingOptionPtr) ToDataSourceQueryIdentifiersEnclosingOptionPtrOutputWithContext(ctx context.Context) DataSourceQueryIdentifiersEnclosingOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceQueryIdentifiersEnclosingOptionPtrOutput)
}

type DataSourceSalesforceChatterFeedIncludeFilterType string

const (
	DataSourceSalesforceChatterFeedIncludeFilterTypeActiveUser   = DataSourceSalesforceChatterFeedIncludeFilterType("ACTIVE_USER")
	DataSourceSalesforceChatterFeedIncludeFilterTypeStandardUser = DataSourceSalesforceChatterFeedIncludeFilterType("STANDARD_USER")
)

func (DataSourceSalesforceChatterFeedIncludeFilterType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSalesforceChatterFeedIncludeFilterType)(nil)).Elem()
}

func (e DataSourceSalesforceChatterFeedIncludeFilterType) ToDataSourceSalesforceChatterFeedIncludeFilterTypeOutput() DataSourceSalesforceChatterFeedIncludeFilterTypeOutput {
	return pulumi.ToOutput(e).(DataSourceSalesforceChatterFeedIncludeFilterTypeOutput)
}

func (e DataSourceSalesforceChatterFeedIncludeFilterType) ToDataSourceSalesforceChatterFeedIncludeFilterTypeOutputWithContext(ctx context.Context) DataSourceSalesforceChatterFeedIncludeFilterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceSalesforceChatterFeedIncludeFilterTypeOutput)
}

func (e DataSourceSalesforceChatterFeedIncludeFilterType) ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput() DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput {
	return e.ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutputWithContext(context.Background())
}

func (e DataSourceSalesforceChatterFeedIncludeFilterType) ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutputWithContext(ctx context.Context) DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput {
	return DataSourceSalesforceChatterFeedIncludeFilterType(e).ToDataSourceSalesforceChatterFeedIncludeFilterTypeOutputWithContext(ctx).ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutputWithContext(ctx)
}

func (e DataSourceSalesforceChatterFeedIncludeFilterType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceSalesforceChatterFeedIncludeFilterType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceSalesforceChatterFeedIncludeFilterType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceSalesforceChatterFeedIncludeFilterType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceSalesforceChatterFeedIncludeFilterTypeOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceChatterFeedIncludeFilterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSalesforceChatterFeedIncludeFilterType)(nil)).Elem()
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypeOutput) ToDataSourceSalesforceChatterFeedIncludeFilterTypeOutput() DataSourceSalesforceChatterFeedIncludeFilterTypeOutput {
	return o
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypeOutput) ToDataSourceSalesforceChatterFeedIncludeFilterTypeOutputWithContext(ctx context.Context) DataSourceSalesforceChatterFeedIncludeFilterTypeOutput {
	return o
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypeOutput) ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput() DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput {
	return o.ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutputWithContext(context.Background())
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypeOutput) ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutputWithContext(ctx context.Context) DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSalesforceChatterFeedIncludeFilterType) *DataSourceSalesforceChatterFeedIncludeFilterType {
		return &v
	}).(DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput)
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceSalesforceChatterFeedIncludeFilterType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceSalesforceChatterFeedIncludeFilterType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSalesforceChatterFeedIncludeFilterType)(nil)).Elem()
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput) ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput() DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput {
	return o
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput) ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutputWithContext(ctx context.Context) DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput {
	return o
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput) Elem() DataSourceSalesforceChatterFeedIncludeFilterTypeOutput {
	return o.ApplyT(func(v *DataSourceSalesforceChatterFeedIncludeFilterType) DataSourceSalesforceChatterFeedIncludeFilterType {
		if v != nil {
			return *v
		}
		var ret DataSourceSalesforceChatterFeedIncludeFilterType
		return ret
	}).(DataSourceSalesforceChatterFeedIncludeFilterTypeOutput)
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceSalesforceChatterFeedIncludeFilterType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceSalesforceChatterFeedIncludeFilterTypeInput is an input type that accepts DataSourceSalesforceChatterFeedIncludeFilterTypeArgs and DataSourceSalesforceChatterFeedIncludeFilterTypeOutput values.
// You can construct a concrete instance of `DataSourceSalesforceChatterFeedIncludeFilterTypeInput` via:
//
//          DataSourceSalesforceChatterFeedIncludeFilterTypeArgs{...}
type DataSourceSalesforceChatterFeedIncludeFilterTypeInput interface {
	pulumi.Input

	ToDataSourceSalesforceChatterFeedIncludeFilterTypeOutput() DataSourceSalesforceChatterFeedIncludeFilterTypeOutput
	ToDataSourceSalesforceChatterFeedIncludeFilterTypeOutputWithContext(context.Context) DataSourceSalesforceChatterFeedIncludeFilterTypeOutput
}

var dataSourceSalesforceChatterFeedIncludeFilterTypePtrType = reflect.TypeOf((**DataSourceSalesforceChatterFeedIncludeFilterType)(nil)).Elem()

type DataSourceSalesforceChatterFeedIncludeFilterTypePtrInput interface {
	pulumi.Input

	ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput() DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput
	ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutputWithContext(context.Context) DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput
}

type dataSourceSalesforceChatterFeedIncludeFilterTypePtr string

func DataSourceSalesforceChatterFeedIncludeFilterTypePtr(v string) DataSourceSalesforceChatterFeedIncludeFilterTypePtrInput {
	return (*dataSourceSalesforceChatterFeedIncludeFilterTypePtr)(&v)
}

func (*dataSourceSalesforceChatterFeedIncludeFilterTypePtr) ElementType() reflect.Type {
	return dataSourceSalesforceChatterFeedIncludeFilterTypePtrType
}

func (in *dataSourceSalesforceChatterFeedIncludeFilterTypePtr) ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput() DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput)
}

func (in *dataSourceSalesforceChatterFeedIncludeFilterTypePtr) ToDataSourceSalesforceChatterFeedIncludeFilterTypePtrOutputWithContext(ctx context.Context) DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput)
}

// DataSourceSalesforceChatterFeedIncludeFilterTypeArrayInput is an input type that accepts DataSourceSalesforceChatterFeedIncludeFilterTypeArray and DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput values.
// You can construct a concrete instance of `DataSourceSalesforceChatterFeedIncludeFilterTypeArrayInput` via:
//
//          DataSourceSalesforceChatterFeedIncludeFilterTypeArray{ DataSourceSalesforceChatterFeedIncludeFilterTypeArgs{...} }
type DataSourceSalesforceChatterFeedIncludeFilterTypeArrayInput interface {
	pulumi.Input

	ToDataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput() DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput
	ToDataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutputWithContext(context.Context) DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput
}

type DataSourceSalesforceChatterFeedIncludeFilterTypeArray []DataSourceSalesforceChatterFeedIncludeFilterType

func (DataSourceSalesforceChatterFeedIncludeFilterTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceSalesforceChatterFeedIncludeFilterType)(nil)).Elem()
}

func (i DataSourceSalesforceChatterFeedIncludeFilterTypeArray) ToDataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput() DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput {
	return i.ToDataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutputWithContext(context.Background())
}

func (i DataSourceSalesforceChatterFeedIncludeFilterTypeArray) ToDataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutputWithContext(ctx context.Context) DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput)
}

type DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceSalesforceChatterFeedIncludeFilterType)(nil)).Elem()
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput) ToDataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput() DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput {
	return o
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput) ToDataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutputWithContext(ctx context.Context) DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput {
	return o
}

func (o DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput) Index(i pulumi.IntInput) DataSourceSalesforceChatterFeedIncludeFilterTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceSalesforceChatterFeedIncludeFilterType {
		return vs[0].([]DataSourceSalesforceChatterFeedIncludeFilterType)[vs[1].(int)]
	}).(DataSourceSalesforceChatterFeedIncludeFilterTypeOutput)
}

type DataSourceSalesforceKnowledgeArticleState string

const (
	DataSourceSalesforceKnowledgeArticleStateDraft     = DataSourceSalesforceKnowledgeArticleState("DRAFT")
	DataSourceSalesforceKnowledgeArticleStatePublished = DataSourceSalesforceKnowledgeArticleState("PUBLISHED")
	DataSourceSalesforceKnowledgeArticleStateArchived  = DataSourceSalesforceKnowledgeArticleState("ARCHIVED")
)

func (DataSourceSalesforceKnowledgeArticleState) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSalesforceKnowledgeArticleState)(nil)).Elem()
}

func (e DataSourceSalesforceKnowledgeArticleState) ToDataSourceSalesforceKnowledgeArticleStateOutput() DataSourceSalesforceKnowledgeArticleStateOutput {
	return pulumi.ToOutput(e).(DataSourceSalesforceKnowledgeArticleStateOutput)
}

func (e DataSourceSalesforceKnowledgeArticleState) ToDataSourceSalesforceKnowledgeArticleStateOutputWithContext(ctx context.Context) DataSourceSalesforceKnowledgeArticleStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceSalesforceKnowledgeArticleStateOutput)
}

func (e DataSourceSalesforceKnowledgeArticleState) ToDataSourceSalesforceKnowledgeArticleStatePtrOutput() DataSourceSalesforceKnowledgeArticleStatePtrOutput {
	return e.ToDataSourceSalesforceKnowledgeArticleStatePtrOutputWithContext(context.Background())
}

func (e DataSourceSalesforceKnowledgeArticleState) ToDataSourceSalesforceKnowledgeArticleStatePtrOutputWithContext(ctx context.Context) DataSourceSalesforceKnowledgeArticleStatePtrOutput {
	return DataSourceSalesforceKnowledgeArticleState(e).ToDataSourceSalesforceKnowledgeArticleStateOutputWithContext(ctx).ToDataSourceSalesforceKnowledgeArticleStatePtrOutputWithContext(ctx)
}

func (e DataSourceSalesforceKnowledgeArticleState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceSalesforceKnowledgeArticleState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceSalesforceKnowledgeArticleState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceSalesforceKnowledgeArticleState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceSalesforceKnowledgeArticleStateOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceKnowledgeArticleStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSalesforceKnowledgeArticleState)(nil)).Elem()
}

func (o DataSourceSalesforceKnowledgeArticleStateOutput) ToDataSourceSalesforceKnowledgeArticleStateOutput() DataSourceSalesforceKnowledgeArticleStateOutput {
	return o
}

func (o DataSourceSalesforceKnowledgeArticleStateOutput) ToDataSourceSalesforceKnowledgeArticleStateOutputWithContext(ctx context.Context) DataSourceSalesforceKnowledgeArticleStateOutput {
	return o
}

func (o DataSourceSalesforceKnowledgeArticleStateOutput) ToDataSourceSalesforceKnowledgeArticleStatePtrOutput() DataSourceSalesforceKnowledgeArticleStatePtrOutput {
	return o.ToDataSourceSalesforceKnowledgeArticleStatePtrOutputWithContext(context.Background())
}

func (o DataSourceSalesforceKnowledgeArticleStateOutput) ToDataSourceSalesforceKnowledgeArticleStatePtrOutputWithContext(ctx context.Context) DataSourceSalesforceKnowledgeArticleStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSalesforceKnowledgeArticleState) *DataSourceSalesforceKnowledgeArticleState {
		return &v
	}).(DataSourceSalesforceKnowledgeArticleStatePtrOutput)
}

func (o DataSourceSalesforceKnowledgeArticleStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceSalesforceKnowledgeArticleStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceSalesforceKnowledgeArticleState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceSalesforceKnowledgeArticleStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceSalesforceKnowledgeArticleStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceSalesforceKnowledgeArticleState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceSalesforceKnowledgeArticleStatePtrOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceKnowledgeArticleStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSalesforceKnowledgeArticleState)(nil)).Elem()
}

func (o DataSourceSalesforceKnowledgeArticleStatePtrOutput) ToDataSourceSalesforceKnowledgeArticleStatePtrOutput() DataSourceSalesforceKnowledgeArticleStatePtrOutput {
	return o
}

func (o DataSourceSalesforceKnowledgeArticleStatePtrOutput) ToDataSourceSalesforceKnowledgeArticleStatePtrOutputWithContext(ctx context.Context) DataSourceSalesforceKnowledgeArticleStatePtrOutput {
	return o
}

func (o DataSourceSalesforceKnowledgeArticleStatePtrOutput) Elem() DataSourceSalesforceKnowledgeArticleStateOutput {
	return o.ApplyT(func(v *DataSourceSalesforceKnowledgeArticleState) DataSourceSalesforceKnowledgeArticleState {
		if v != nil {
			return *v
		}
		var ret DataSourceSalesforceKnowledgeArticleState
		return ret
	}).(DataSourceSalesforceKnowledgeArticleStateOutput)
}

func (o DataSourceSalesforceKnowledgeArticleStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceSalesforceKnowledgeArticleStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceSalesforceKnowledgeArticleState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceSalesforceKnowledgeArticleStateInput is an input type that accepts DataSourceSalesforceKnowledgeArticleStateArgs and DataSourceSalesforceKnowledgeArticleStateOutput values.
// You can construct a concrete instance of `DataSourceSalesforceKnowledgeArticleStateInput` via:
//
//          DataSourceSalesforceKnowledgeArticleStateArgs{...}
type DataSourceSalesforceKnowledgeArticleStateInput interface {
	pulumi.Input

	ToDataSourceSalesforceKnowledgeArticleStateOutput() DataSourceSalesforceKnowledgeArticleStateOutput
	ToDataSourceSalesforceKnowledgeArticleStateOutputWithContext(context.Context) DataSourceSalesforceKnowledgeArticleStateOutput
}

var dataSourceSalesforceKnowledgeArticleStatePtrType = reflect.TypeOf((**DataSourceSalesforceKnowledgeArticleState)(nil)).Elem()

type DataSourceSalesforceKnowledgeArticleStatePtrInput interface {
	pulumi.Input

	ToDataSourceSalesforceKnowledgeArticleStatePtrOutput() DataSourceSalesforceKnowledgeArticleStatePtrOutput
	ToDataSourceSalesforceKnowledgeArticleStatePtrOutputWithContext(context.Context) DataSourceSalesforceKnowledgeArticleStatePtrOutput
}

type dataSourceSalesforceKnowledgeArticleStatePtr string

func DataSourceSalesforceKnowledgeArticleStatePtr(v string) DataSourceSalesforceKnowledgeArticleStatePtrInput {
	return (*dataSourceSalesforceKnowledgeArticleStatePtr)(&v)
}

func (*dataSourceSalesforceKnowledgeArticleStatePtr) ElementType() reflect.Type {
	return dataSourceSalesforceKnowledgeArticleStatePtrType
}

func (in *dataSourceSalesforceKnowledgeArticleStatePtr) ToDataSourceSalesforceKnowledgeArticleStatePtrOutput() DataSourceSalesforceKnowledgeArticleStatePtrOutput {
	return pulumi.ToOutput(in).(DataSourceSalesforceKnowledgeArticleStatePtrOutput)
}

func (in *dataSourceSalesforceKnowledgeArticleStatePtr) ToDataSourceSalesforceKnowledgeArticleStatePtrOutputWithContext(ctx context.Context) DataSourceSalesforceKnowledgeArticleStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceSalesforceKnowledgeArticleStatePtrOutput)
}

// DataSourceSalesforceKnowledgeArticleStateArrayInput is an input type that accepts DataSourceSalesforceKnowledgeArticleStateArray and DataSourceSalesforceKnowledgeArticleStateArrayOutput values.
// You can construct a concrete instance of `DataSourceSalesforceKnowledgeArticleStateArrayInput` via:
//
//          DataSourceSalesforceKnowledgeArticleStateArray{ DataSourceSalesforceKnowledgeArticleStateArgs{...} }
type DataSourceSalesforceKnowledgeArticleStateArrayInput interface {
	pulumi.Input

	ToDataSourceSalesforceKnowledgeArticleStateArrayOutput() DataSourceSalesforceKnowledgeArticleStateArrayOutput
	ToDataSourceSalesforceKnowledgeArticleStateArrayOutputWithContext(context.Context) DataSourceSalesforceKnowledgeArticleStateArrayOutput
}

type DataSourceSalesforceKnowledgeArticleStateArray []DataSourceSalesforceKnowledgeArticleState

func (DataSourceSalesforceKnowledgeArticleStateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceSalesforceKnowledgeArticleState)(nil)).Elem()
}

func (i DataSourceSalesforceKnowledgeArticleStateArray) ToDataSourceSalesforceKnowledgeArticleStateArrayOutput() DataSourceSalesforceKnowledgeArticleStateArrayOutput {
	return i.ToDataSourceSalesforceKnowledgeArticleStateArrayOutputWithContext(context.Background())
}

func (i DataSourceSalesforceKnowledgeArticleStateArray) ToDataSourceSalesforceKnowledgeArticleStateArrayOutputWithContext(ctx context.Context) DataSourceSalesforceKnowledgeArticleStateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceSalesforceKnowledgeArticleStateArrayOutput)
}

type DataSourceSalesforceKnowledgeArticleStateArrayOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceKnowledgeArticleStateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataSourceSalesforceKnowledgeArticleState)(nil)).Elem()
}

func (o DataSourceSalesforceKnowledgeArticleStateArrayOutput) ToDataSourceSalesforceKnowledgeArticleStateArrayOutput() DataSourceSalesforceKnowledgeArticleStateArrayOutput {
	return o
}

func (o DataSourceSalesforceKnowledgeArticleStateArrayOutput) ToDataSourceSalesforceKnowledgeArticleStateArrayOutputWithContext(ctx context.Context) DataSourceSalesforceKnowledgeArticleStateArrayOutput {
	return o
}

func (o DataSourceSalesforceKnowledgeArticleStateArrayOutput) Index(i pulumi.IntInput) DataSourceSalesforceKnowledgeArticleStateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataSourceSalesforceKnowledgeArticleState {
		return vs[0].([]DataSourceSalesforceKnowledgeArticleState)[vs[1].(int)]
	}).(DataSourceSalesforceKnowledgeArticleStateOutput)
}

type DataSourceSalesforceStandardObjectName string

const (
	DataSourceSalesforceStandardObjectNameAccount     = DataSourceSalesforceStandardObjectName("ACCOUNT")
	DataSourceSalesforceStandardObjectNameCampaign    = DataSourceSalesforceStandardObjectName("CAMPAIGN")
	DataSourceSalesforceStandardObjectNameCase        = DataSourceSalesforceStandardObjectName("CASE")
	DataSourceSalesforceStandardObjectNameContact     = DataSourceSalesforceStandardObjectName("CONTACT")
	DataSourceSalesforceStandardObjectNameContract    = DataSourceSalesforceStandardObjectName("CONTRACT")
	DataSourceSalesforceStandardObjectNameDocument    = DataSourceSalesforceStandardObjectName("DOCUMENT")
	DataSourceSalesforceStandardObjectNameGroup       = DataSourceSalesforceStandardObjectName("GROUP")
	DataSourceSalesforceStandardObjectNameIdea        = DataSourceSalesforceStandardObjectName("IDEA")
	DataSourceSalesforceStandardObjectNameLead        = DataSourceSalesforceStandardObjectName("LEAD")
	DataSourceSalesforceStandardObjectNameOpportunity = DataSourceSalesforceStandardObjectName("OPPORTUNITY")
	DataSourceSalesforceStandardObjectNamePartner     = DataSourceSalesforceStandardObjectName("PARTNER")
	DataSourceSalesforceStandardObjectNamePricebook   = DataSourceSalesforceStandardObjectName("PRICEBOOK")
	DataSourceSalesforceStandardObjectNameProduct     = DataSourceSalesforceStandardObjectName("PRODUCT")
	DataSourceSalesforceStandardObjectNameProfile     = DataSourceSalesforceStandardObjectName("PROFILE")
	DataSourceSalesforceStandardObjectNameSolution    = DataSourceSalesforceStandardObjectName("SOLUTION")
	DataSourceSalesforceStandardObjectNameTask        = DataSourceSalesforceStandardObjectName("TASK")
	DataSourceSalesforceStandardObjectNameUser        = DataSourceSalesforceStandardObjectName("USER")
)

func (DataSourceSalesforceStandardObjectName) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSalesforceStandardObjectName)(nil)).Elem()
}

func (e DataSourceSalesforceStandardObjectName) ToDataSourceSalesforceStandardObjectNameOutput() DataSourceSalesforceStandardObjectNameOutput {
	return pulumi.ToOutput(e).(DataSourceSalesforceStandardObjectNameOutput)
}

func (e DataSourceSalesforceStandardObjectName) ToDataSourceSalesforceStandardObjectNameOutputWithContext(ctx context.Context) DataSourceSalesforceStandardObjectNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceSalesforceStandardObjectNameOutput)
}

func (e DataSourceSalesforceStandardObjectName) ToDataSourceSalesforceStandardObjectNamePtrOutput() DataSourceSalesforceStandardObjectNamePtrOutput {
	return e.ToDataSourceSalesforceStandardObjectNamePtrOutputWithContext(context.Background())
}

func (e DataSourceSalesforceStandardObjectName) ToDataSourceSalesforceStandardObjectNamePtrOutputWithContext(ctx context.Context) DataSourceSalesforceStandardObjectNamePtrOutput {
	return DataSourceSalesforceStandardObjectName(e).ToDataSourceSalesforceStandardObjectNameOutputWithContext(ctx).ToDataSourceSalesforceStandardObjectNamePtrOutputWithContext(ctx)
}

func (e DataSourceSalesforceStandardObjectName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceSalesforceStandardObjectName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceSalesforceStandardObjectName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceSalesforceStandardObjectName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceSalesforceStandardObjectNameOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceStandardObjectNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSalesforceStandardObjectName)(nil)).Elem()
}

func (o DataSourceSalesforceStandardObjectNameOutput) ToDataSourceSalesforceStandardObjectNameOutput() DataSourceSalesforceStandardObjectNameOutput {
	return o
}

func (o DataSourceSalesforceStandardObjectNameOutput) ToDataSourceSalesforceStandardObjectNameOutputWithContext(ctx context.Context) DataSourceSalesforceStandardObjectNameOutput {
	return o
}

func (o DataSourceSalesforceStandardObjectNameOutput) ToDataSourceSalesforceStandardObjectNamePtrOutput() DataSourceSalesforceStandardObjectNamePtrOutput {
	return o.ToDataSourceSalesforceStandardObjectNamePtrOutputWithContext(context.Background())
}

func (o DataSourceSalesforceStandardObjectNameOutput) ToDataSourceSalesforceStandardObjectNamePtrOutputWithContext(ctx context.Context) DataSourceSalesforceStandardObjectNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSalesforceStandardObjectName) *DataSourceSalesforceStandardObjectName {
		return &v
	}).(DataSourceSalesforceStandardObjectNamePtrOutput)
}

func (o DataSourceSalesforceStandardObjectNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceSalesforceStandardObjectNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceSalesforceStandardObjectName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceSalesforceStandardObjectNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceSalesforceStandardObjectNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceSalesforceStandardObjectName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceSalesforceStandardObjectNamePtrOutput struct{ *pulumi.OutputState }

func (DataSourceSalesforceStandardObjectNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSalesforceStandardObjectName)(nil)).Elem()
}

func (o DataSourceSalesforceStandardObjectNamePtrOutput) ToDataSourceSalesforceStandardObjectNamePtrOutput() DataSourceSalesforceStandardObjectNamePtrOutput {
	return o
}

func (o DataSourceSalesforceStandardObjectNamePtrOutput) ToDataSourceSalesforceStandardObjectNamePtrOutputWithContext(ctx context.Context) DataSourceSalesforceStandardObjectNamePtrOutput {
	return o
}

func (o DataSourceSalesforceStandardObjectNamePtrOutput) Elem() DataSourceSalesforceStandardObjectNameOutput {
	return o.ApplyT(func(v *DataSourceSalesforceStandardObjectName) DataSourceSalesforceStandardObjectName {
		if v != nil {
			return *v
		}
		var ret DataSourceSalesforceStandardObjectName
		return ret
	}).(DataSourceSalesforceStandardObjectNameOutput)
}

func (o DataSourceSalesforceStandardObjectNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceSalesforceStandardObjectNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceSalesforceStandardObjectName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceSalesforceStandardObjectNameInput is an input type that accepts DataSourceSalesforceStandardObjectNameArgs and DataSourceSalesforceStandardObjectNameOutput values.
// You can construct a concrete instance of `DataSourceSalesforceStandardObjectNameInput` via:
//
//          DataSourceSalesforceStandardObjectNameArgs{...}
type DataSourceSalesforceStandardObjectNameInput interface {
	pulumi.Input

	ToDataSourceSalesforceStandardObjectNameOutput() DataSourceSalesforceStandardObjectNameOutput
	ToDataSourceSalesforceStandardObjectNameOutputWithContext(context.Context) DataSourceSalesforceStandardObjectNameOutput
}

var dataSourceSalesforceStandardObjectNamePtrType = reflect.TypeOf((**DataSourceSalesforceStandardObjectName)(nil)).Elem()

type DataSourceSalesforceStandardObjectNamePtrInput interface {
	pulumi.Input

	ToDataSourceSalesforceStandardObjectNamePtrOutput() DataSourceSalesforceStandardObjectNamePtrOutput
	ToDataSourceSalesforceStandardObjectNamePtrOutputWithContext(context.Context) DataSourceSalesforceStandardObjectNamePtrOutput
}

type dataSourceSalesforceStandardObjectNamePtr string

func DataSourceSalesforceStandardObjectNamePtr(v string) DataSourceSalesforceStandardObjectNamePtrInput {
	return (*dataSourceSalesforceStandardObjectNamePtr)(&v)
}

func (*dataSourceSalesforceStandardObjectNamePtr) ElementType() reflect.Type {
	return dataSourceSalesforceStandardObjectNamePtrType
}

func (in *dataSourceSalesforceStandardObjectNamePtr) ToDataSourceSalesforceStandardObjectNamePtrOutput() DataSourceSalesforceStandardObjectNamePtrOutput {
	return pulumi.ToOutput(in).(DataSourceSalesforceStandardObjectNamePtrOutput)
}

func (in *dataSourceSalesforceStandardObjectNamePtr) ToDataSourceSalesforceStandardObjectNamePtrOutputWithContext(ctx context.Context) DataSourceSalesforceStandardObjectNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceSalesforceStandardObjectNamePtrOutput)
}

type DataSourceServiceNowAuthenticationType string

const (
	DataSourceServiceNowAuthenticationTypeHttpBasic = DataSourceServiceNowAuthenticationType("HTTP_BASIC")
	DataSourceServiceNowAuthenticationTypeOauth2    = DataSourceServiceNowAuthenticationType("OAUTH2")
)

func (DataSourceServiceNowAuthenticationType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceServiceNowAuthenticationType)(nil)).Elem()
}

func (e DataSourceServiceNowAuthenticationType) ToDataSourceServiceNowAuthenticationTypeOutput() DataSourceServiceNowAuthenticationTypeOutput {
	return pulumi.ToOutput(e).(DataSourceServiceNowAuthenticationTypeOutput)
}

func (e DataSourceServiceNowAuthenticationType) ToDataSourceServiceNowAuthenticationTypeOutputWithContext(ctx context.Context) DataSourceServiceNowAuthenticationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceServiceNowAuthenticationTypeOutput)
}

func (e DataSourceServiceNowAuthenticationType) ToDataSourceServiceNowAuthenticationTypePtrOutput() DataSourceServiceNowAuthenticationTypePtrOutput {
	return e.ToDataSourceServiceNowAuthenticationTypePtrOutputWithContext(context.Background())
}

func (e DataSourceServiceNowAuthenticationType) ToDataSourceServiceNowAuthenticationTypePtrOutputWithContext(ctx context.Context) DataSourceServiceNowAuthenticationTypePtrOutput {
	return DataSourceServiceNowAuthenticationType(e).ToDataSourceServiceNowAuthenticationTypeOutputWithContext(ctx).ToDataSourceServiceNowAuthenticationTypePtrOutputWithContext(ctx)
}

func (e DataSourceServiceNowAuthenticationType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceServiceNowAuthenticationType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceServiceNowAuthenticationType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceServiceNowAuthenticationType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceServiceNowAuthenticationTypeOutput struct{ *pulumi.OutputState }

func (DataSourceServiceNowAuthenticationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceServiceNowAuthenticationType)(nil)).Elem()
}

func (o DataSourceServiceNowAuthenticationTypeOutput) ToDataSourceServiceNowAuthenticationTypeOutput() DataSourceServiceNowAuthenticationTypeOutput {
	return o
}

func (o DataSourceServiceNowAuthenticationTypeOutput) ToDataSourceServiceNowAuthenticationTypeOutputWithContext(ctx context.Context) DataSourceServiceNowAuthenticationTypeOutput {
	return o
}

func (o DataSourceServiceNowAuthenticationTypeOutput) ToDataSourceServiceNowAuthenticationTypePtrOutput() DataSourceServiceNowAuthenticationTypePtrOutput {
	return o.ToDataSourceServiceNowAuthenticationTypePtrOutputWithContext(context.Background())
}

func (o DataSourceServiceNowAuthenticationTypeOutput) ToDataSourceServiceNowAuthenticationTypePtrOutputWithContext(ctx context.Context) DataSourceServiceNowAuthenticationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceServiceNowAuthenticationType) *DataSourceServiceNowAuthenticationType {
		return &v
	}).(DataSourceServiceNowAuthenticationTypePtrOutput)
}

func (o DataSourceServiceNowAuthenticationTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceServiceNowAuthenticationTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceServiceNowAuthenticationType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceServiceNowAuthenticationTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceServiceNowAuthenticationTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceServiceNowAuthenticationType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceServiceNowAuthenticationTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceServiceNowAuthenticationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceServiceNowAuthenticationType)(nil)).Elem()
}

func (o DataSourceServiceNowAuthenticationTypePtrOutput) ToDataSourceServiceNowAuthenticationTypePtrOutput() DataSourceServiceNowAuthenticationTypePtrOutput {
	return o
}

func (o DataSourceServiceNowAuthenticationTypePtrOutput) ToDataSourceServiceNowAuthenticationTypePtrOutputWithContext(ctx context.Context) DataSourceServiceNowAuthenticationTypePtrOutput {
	return o
}

func (o DataSourceServiceNowAuthenticationTypePtrOutput) Elem() DataSourceServiceNowAuthenticationTypeOutput {
	return o.ApplyT(func(v *DataSourceServiceNowAuthenticationType) DataSourceServiceNowAuthenticationType {
		if v != nil {
			return *v
		}
		var ret DataSourceServiceNowAuthenticationType
		return ret
	}).(DataSourceServiceNowAuthenticationTypeOutput)
}

func (o DataSourceServiceNowAuthenticationTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceServiceNowAuthenticationTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceServiceNowAuthenticationType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceServiceNowAuthenticationTypeInput is an input type that accepts DataSourceServiceNowAuthenticationTypeArgs and DataSourceServiceNowAuthenticationTypeOutput values.
// You can construct a concrete instance of `DataSourceServiceNowAuthenticationTypeInput` via:
//
//          DataSourceServiceNowAuthenticationTypeArgs{...}
type DataSourceServiceNowAuthenticationTypeInput interface {
	pulumi.Input

	ToDataSourceServiceNowAuthenticationTypeOutput() DataSourceServiceNowAuthenticationTypeOutput
	ToDataSourceServiceNowAuthenticationTypeOutputWithContext(context.Context) DataSourceServiceNowAuthenticationTypeOutput
}

var dataSourceServiceNowAuthenticationTypePtrType = reflect.TypeOf((**DataSourceServiceNowAuthenticationType)(nil)).Elem()

type DataSourceServiceNowAuthenticationTypePtrInput interface {
	pulumi.Input

	ToDataSourceServiceNowAuthenticationTypePtrOutput() DataSourceServiceNowAuthenticationTypePtrOutput
	ToDataSourceServiceNowAuthenticationTypePtrOutputWithContext(context.Context) DataSourceServiceNowAuthenticationTypePtrOutput
}

type dataSourceServiceNowAuthenticationTypePtr string

func DataSourceServiceNowAuthenticationTypePtr(v string) DataSourceServiceNowAuthenticationTypePtrInput {
	return (*dataSourceServiceNowAuthenticationTypePtr)(&v)
}

func (*dataSourceServiceNowAuthenticationTypePtr) ElementType() reflect.Type {
	return dataSourceServiceNowAuthenticationTypePtrType
}

func (in *dataSourceServiceNowAuthenticationTypePtr) ToDataSourceServiceNowAuthenticationTypePtrOutput() DataSourceServiceNowAuthenticationTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceServiceNowAuthenticationTypePtrOutput)
}

func (in *dataSourceServiceNowAuthenticationTypePtr) ToDataSourceServiceNowAuthenticationTypePtrOutputWithContext(ctx context.Context) DataSourceServiceNowAuthenticationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceServiceNowAuthenticationTypePtrOutput)
}

type DataSourceServiceNowBuildVersionType string

const (
	DataSourceServiceNowBuildVersionTypeLondon = DataSourceServiceNowBuildVersionType("LONDON")
	DataSourceServiceNowBuildVersionTypeOthers = DataSourceServiceNowBuildVersionType("OTHERS")
)

func (DataSourceServiceNowBuildVersionType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceServiceNowBuildVersionType)(nil)).Elem()
}

func (e DataSourceServiceNowBuildVersionType) ToDataSourceServiceNowBuildVersionTypeOutput() DataSourceServiceNowBuildVersionTypeOutput {
	return pulumi.ToOutput(e).(DataSourceServiceNowBuildVersionTypeOutput)
}

func (e DataSourceServiceNowBuildVersionType) ToDataSourceServiceNowBuildVersionTypeOutputWithContext(ctx context.Context) DataSourceServiceNowBuildVersionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceServiceNowBuildVersionTypeOutput)
}

func (e DataSourceServiceNowBuildVersionType) ToDataSourceServiceNowBuildVersionTypePtrOutput() DataSourceServiceNowBuildVersionTypePtrOutput {
	return e.ToDataSourceServiceNowBuildVersionTypePtrOutputWithContext(context.Background())
}

func (e DataSourceServiceNowBuildVersionType) ToDataSourceServiceNowBuildVersionTypePtrOutputWithContext(ctx context.Context) DataSourceServiceNowBuildVersionTypePtrOutput {
	return DataSourceServiceNowBuildVersionType(e).ToDataSourceServiceNowBuildVersionTypeOutputWithContext(ctx).ToDataSourceServiceNowBuildVersionTypePtrOutputWithContext(ctx)
}

func (e DataSourceServiceNowBuildVersionType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceServiceNowBuildVersionType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceServiceNowBuildVersionType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceServiceNowBuildVersionType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceServiceNowBuildVersionTypeOutput struct{ *pulumi.OutputState }

func (DataSourceServiceNowBuildVersionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceServiceNowBuildVersionType)(nil)).Elem()
}

func (o DataSourceServiceNowBuildVersionTypeOutput) ToDataSourceServiceNowBuildVersionTypeOutput() DataSourceServiceNowBuildVersionTypeOutput {
	return o
}

func (o DataSourceServiceNowBuildVersionTypeOutput) ToDataSourceServiceNowBuildVersionTypeOutputWithContext(ctx context.Context) DataSourceServiceNowBuildVersionTypeOutput {
	return o
}

func (o DataSourceServiceNowBuildVersionTypeOutput) ToDataSourceServiceNowBuildVersionTypePtrOutput() DataSourceServiceNowBuildVersionTypePtrOutput {
	return o.ToDataSourceServiceNowBuildVersionTypePtrOutputWithContext(context.Background())
}

func (o DataSourceServiceNowBuildVersionTypeOutput) ToDataSourceServiceNowBuildVersionTypePtrOutputWithContext(ctx context.Context) DataSourceServiceNowBuildVersionTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceServiceNowBuildVersionType) *DataSourceServiceNowBuildVersionType {
		return &v
	}).(DataSourceServiceNowBuildVersionTypePtrOutput)
}

func (o DataSourceServiceNowBuildVersionTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceServiceNowBuildVersionTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceServiceNowBuildVersionType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceServiceNowBuildVersionTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceServiceNowBuildVersionTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceServiceNowBuildVersionType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceServiceNowBuildVersionTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceServiceNowBuildVersionTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceServiceNowBuildVersionType)(nil)).Elem()
}

func (o DataSourceServiceNowBuildVersionTypePtrOutput) ToDataSourceServiceNowBuildVersionTypePtrOutput() DataSourceServiceNowBuildVersionTypePtrOutput {
	return o
}

func (o DataSourceServiceNowBuildVersionTypePtrOutput) ToDataSourceServiceNowBuildVersionTypePtrOutputWithContext(ctx context.Context) DataSourceServiceNowBuildVersionTypePtrOutput {
	return o
}

func (o DataSourceServiceNowBuildVersionTypePtrOutput) Elem() DataSourceServiceNowBuildVersionTypeOutput {
	return o.ApplyT(func(v *DataSourceServiceNowBuildVersionType) DataSourceServiceNowBuildVersionType {
		if v != nil {
			return *v
		}
		var ret DataSourceServiceNowBuildVersionType
		return ret
	}).(DataSourceServiceNowBuildVersionTypeOutput)
}

func (o DataSourceServiceNowBuildVersionTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceServiceNowBuildVersionTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceServiceNowBuildVersionType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceServiceNowBuildVersionTypeInput is an input type that accepts DataSourceServiceNowBuildVersionTypeArgs and DataSourceServiceNowBuildVersionTypeOutput values.
// You can construct a concrete instance of `DataSourceServiceNowBuildVersionTypeInput` via:
//
//          DataSourceServiceNowBuildVersionTypeArgs{...}
type DataSourceServiceNowBuildVersionTypeInput interface {
	pulumi.Input

	ToDataSourceServiceNowBuildVersionTypeOutput() DataSourceServiceNowBuildVersionTypeOutput
	ToDataSourceServiceNowBuildVersionTypeOutputWithContext(context.Context) DataSourceServiceNowBuildVersionTypeOutput
}

var dataSourceServiceNowBuildVersionTypePtrType = reflect.TypeOf((**DataSourceServiceNowBuildVersionType)(nil)).Elem()

type DataSourceServiceNowBuildVersionTypePtrInput interface {
	pulumi.Input

	ToDataSourceServiceNowBuildVersionTypePtrOutput() DataSourceServiceNowBuildVersionTypePtrOutput
	ToDataSourceServiceNowBuildVersionTypePtrOutputWithContext(context.Context) DataSourceServiceNowBuildVersionTypePtrOutput
}

type dataSourceServiceNowBuildVersionTypePtr string

func DataSourceServiceNowBuildVersionTypePtr(v string) DataSourceServiceNowBuildVersionTypePtrInput {
	return (*dataSourceServiceNowBuildVersionTypePtr)(&v)
}

func (*dataSourceServiceNowBuildVersionTypePtr) ElementType() reflect.Type {
	return dataSourceServiceNowBuildVersionTypePtrType
}

func (in *dataSourceServiceNowBuildVersionTypePtr) ToDataSourceServiceNowBuildVersionTypePtrOutput() DataSourceServiceNowBuildVersionTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceServiceNowBuildVersionTypePtrOutput)
}

func (in *dataSourceServiceNowBuildVersionTypePtr) ToDataSourceServiceNowBuildVersionTypePtrOutputWithContext(ctx context.Context) DataSourceServiceNowBuildVersionTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceServiceNowBuildVersionTypePtrOutput)
}

type DataSourceSharePointConfigurationSharePointVersion string

const (
	DataSourceSharePointConfigurationSharePointVersionSharepointOnline = DataSourceSharePointConfigurationSharePointVersion("SHAREPOINT_ONLINE")
	DataSourceSharePointConfigurationSharePointVersionSharepoint2013   = DataSourceSharePointConfigurationSharePointVersion("SHAREPOINT_2013")
	DataSourceSharePointConfigurationSharePointVersionSharepoint2016   = DataSourceSharePointConfigurationSharePointVersion("SHAREPOINT_2016")
)

func (DataSourceSharePointConfigurationSharePointVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSharePointConfigurationSharePointVersion)(nil)).Elem()
}

func (e DataSourceSharePointConfigurationSharePointVersion) ToDataSourceSharePointConfigurationSharePointVersionOutput() DataSourceSharePointConfigurationSharePointVersionOutput {
	return pulumi.ToOutput(e).(DataSourceSharePointConfigurationSharePointVersionOutput)
}

func (e DataSourceSharePointConfigurationSharePointVersion) ToDataSourceSharePointConfigurationSharePointVersionOutputWithContext(ctx context.Context) DataSourceSharePointConfigurationSharePointVersionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceSharePointConfigurationSharePointVersionOutput)
}

func (e DataSourceSharePointConfigurationSharePointVersion) ToDataSourceSharePointConfigurationSharePointVersionPtrOutput() DataSourceSharePointConfigurationSharePointVersionPtrOutput {
	return e.ToDataSourceSharePointConfigurationSharePointVersionPtrOutputWithContext(context.Background())
}

func (e DataSourceSharePointConfigurationSharePointVersion) ToDataSourceSharePointConfigurationSharePointVersionPtrOutputWithContext(ctx context.Context) DataSourceSharePointConfigurationSharePointVersionPtrOutput {
	return DataSourceSharePointConfigurationSharePointVersion(e).ToDataSourceSharePointConfigurationSharePointVersionOutputWithContext(ctx).ToDataSourceSharePointConfigurationSharePointVersionPtrOutputWithContext(ctx)
}

func (e DataSourceSharePointConfigurationSharePointVersion) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceSharePointConfigurationSharePointVersion) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceSharePointConfigurationSharePointVersion) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceSharePointConfigurationSharePointVersion) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceSharePointConfigurationSharePointVersionOutput struct{ *pulumi.OutputState }

func (DataSourceSharePointConfigurationSharePointVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceSharePointConfigurationSharePointVersion)(nil)).Elem()
}

func (o DataSourceSharePointConfigurationSharePointVersionOutput) ToDataSourceSharePointConfigurationSharePointVersionOutput() DataSourceSharePointConfigurationSharePointVersionOutput {
	return o
}

func (o DataSourceSharePointConfigurationSharePointVersionOutput) ToDataSourceSharePointConfigurationSharePointVersionOutputWithContext(ctx context.Context) DataSourceSharePointConfigurationSharePointVersionOutput {
	return o
}

func (o DataSourceSharePointConfigurationSharePointVersionOutput) ToDataSourceSharePointConfigurationSharePointVersionPtrOutput() DataSourceSharePointConfigurationSharePointVersionPtrOutput {
	return o.ToDataSourceSharePointConfigurationSharePointVersionPtrOutputWithContext(context.Background())
}

func (o DataSourceSharePointConfigurationSharePointVersionOutput) ToDataSourceSharePointConfigurationSharePointVersionPtrOutputWithContext(ctx context.Context) DataSourceSharePointConfigurationSharePointVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceSharePointConfigurationSharePointVersion) *DataSourceSharePointConfigurationSharePointVersion {
		return &v
	}).(DataSourceSharePointConfigurationSharePointVersionPtrOutput)
}

func (o DataSourceSharePointConfigurationSharePointVersionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceSharePointConfigurationSharePointVersionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceSharePointConfigurationSharePointVersion) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceSharePointConfigurationSharePointVersionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceSharePointConfigurationSharePointVersionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceSharePointConfigurationSharePointVersion) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceSharePointConfigurationSharePointVersionPtrOutput struct{ *pulumi.OutputState }

func (DataSourceSharePointConfigurationSharePointVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceSharePointConfigurationSharePointVersion)(nil)).Elem()
}

func (o DataSourceSharePointConfigurationSharePointVersionPtrOutput) ToDataSourceSharePointConfigurationSharePointVersionPtrOutput() DataSourceSharePointConfigurationSharePointVersionPtrOutput {
	return o
}

func (o DataSourceSharePointConfigurationSharePointVersionPtrOutput) ToDataSourceSharePointConfigurationSharePointVersionPtrOutputWithContext(ctx context.Context) DataSourceSharePointConfigurationSharePointVersionPtrOutput {
	return o
}

func (o DataSourceSharePointConfigurationSharePointVersionPtrOutput) Elem() DataSourceSharePointConfigurationSharePointVersionOutput {
	return o.ApplyT(func(v *DataSourceSharePointConfigurationSharePointVersion) DataSourceSharePointConfigurationSharePointVersion {
		if v != nil {
			return *v
		}
		var ret DataSourceSharePointConfigurationSharePointVersion
		return ret
	}).(DataSourceSharePointConfigurationSharePointVersionOutput)
}

func (o DataSourceSharePointConfigurationSharePointVersionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceSharePointConfigurationSharePointVersionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceSharePointConfigurationSharePointVersion) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceSharePointConfigurationSharePointVersionInput is an input type that accepts DataSourceSharePointConfigurationSharePointVersionArgs and DataSourceSharePointConfigurationSharePointVersionOutput values.
// You can construct a concrete instance of `DataSourceSharePointConfigurationSharePointVersionInput` via:
//
//          DataSourceSharePointConfigurationSharePointVersionArgs{...}
type DataSourceSharePointConfigurationSharePointVersionInput interface {
	pulumi.Input

	ToDataSourceSharePointConfigurationSharePointVersionOutput() DataSourceSharePointConfigurationSharePointVersionOutput
	ToDataSourceSharePointConfigurationSharePointVersionOutputWithContext(context.Context) DataSourceSharePointConfigurationSharePointVersionOutput
}

var dataSourceSharePointConfigurationSharePointVersionPtrType = reflect.TypeOf((**DataSourceSharePointConfigurationSharePointVersion)(nil)).Elem()

type DataSourceSharePointConfigurationSharePointVersionPtrInput interface {
	pulumi.Input

	ToDataSourceSharePointConfigurationSharePointVersionPtrOutput() DataSourceSharePointConfigurationSharePointVersionPtrOutput
	ToDataSourceSharePointConfigurationSharePointVersionPtrOutputWithContext(context.Context) DataSourceSharePointConfigurationSharePointVersionPtrOutput
}

type dataSourceSharePointConfigurationSharePointVersionPtr string

func DataSourceSharePointConfigurationSharePointVersionPtr(v string) DataSourceSharePointConfigurationSharePointVersionPtrInput {
	return (*dataSourceSharePointConfigurationSharePointVersionPtr)(&v)
}

func (*dataSourceSharePointConfigurationSharePointVersionPtr) ElementType() reflect.Type {
	return dataSourceSharePointConfigurationSharePointVersionPtrType
}

func (in *dataSourceSharePointConfigurationSharePointVersionPtr) ToDataSourceSharePointConfigurationSharePointVersionPtrOutput() DataSourceSharePointConfigurationSharePointVersionPtrOutput {
	return pulumi.ToOutput(in).(DataSourceSharePointConfigurationSharePointVersionPtrOutput)
}

func (in *dataSourceSharePointConfigurationSharePointVersionPtr) ToDataSourceSharePointConfigurationSharePointVersionPtrOutputWithContext(ctx context.Context) DataSourceSharePointConfigurationSharePointVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceSharePointConfigurationSharePointVersionPtrOutput)
}

// Data source type
type DataSourceType string

const (
	DataSourceTypeS3          = DataSourceType("S3")
	DataSourceTypeSharepoint  = DataSourceType("SHAREPOINT")
	DataSourceTypeSalesforce  = DataSourceType("SALESFORCE")
	DataSourceTypeOnedrive    = DataSourceType("ONEDRIVE")
	DataSourceTypeServicenow  = DataSourceType("SERVICENOW")
	DataSourceTypeDatabase    = DataSourceType("DATABASE")
	DataSourceTypeCustom      = DataSourceType("CUSTOM")
	DataSourceTypeConfluence  = DataSourceType("CONFLUENCE")
	DataSourceTypeGoogledrive = DataSourceType("GOOGLEDRIVE")
	DataSourceTypeWebcrawler  = DataSourceType("WEBCRAWLER")
	DataSourceTypeWorkdocs    = DataSourceType("WORKDOCS")
)

func (DataSourceType) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceType)(nil)).Elem()
}

func (e DataSourceType) ToDataSourceTypeOutput() DataSourceTypeOutput {
	return pulumi.ToOutput(e).(DataSourceTypeOutput)
}

func (e DataSourceType) ToDataSourceTypeOutputWithContext(ctx context.Context) DataSourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceTypeOutput)
}

func (e DataSourceType) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return e.ToDataSourceTypePtrOutputWithContext(context.Background())
}

func (e DataSourceType) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return DataSourceType(e).ToDataSourceTypeOutputWithContext(ctx).ToDataSourceTypePtrOutputWithContext(ctx)
}

func (e DataSourceType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceTypeOutput struct{ *pulumi.OutputState }

func (DataSourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceType)(nil)).Elem()
}

func (o DataSourceTypeOutput) ToDataSourceTypeOutput() DataSourceTypeOutput {
	return o
}

func (o DataSourceTypeOutput) ToDataSourceTypeOutputWithContext(ctx context.Context) DataSourceTypeOutput {
	return o
}

func (o DataSourceTypeOutput) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return o.ToDataSourceTypePtrOutputWithContext(context.Background())
}

func (o DataSourceTypeOutput) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceType) *DataSourceType {
		return &v
	}).(DataSourceTypePtrOutput)
}

func (o DataSourceTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceTypePtrOutput struct{ *pulumi.OutputState }

func (DataSourceTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceType)(nil)).Elem()
}

func (o DataSourceTypePtrOutput) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return o
}

func (o DataSourceTypePtrOutput) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return o
}

func (o DataSourceTypePtrOutput) Elem() DataSourceTypeOutput {
	return o.ApplyT(func(v *DataSourceType) DataSourceType {
		if v != nil {
			return *v
		}
		var ret DataSourceType
		return ret
	}).(DataSourceTypeOutput)
}

func (o DataSourceTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceTypeInput is an input type that accepts DataSourceTypeArgs and DataSourceTypeOutput values.
// You can construct a concrete instance of `DataSourceTypeInput` via:
//
//          DataSourceTypeArgs{...}
type DataSourceTypeInput interface {
	pulumi.Input

	ToDataSourceTypeOutput() DataSourceTypeOutput
	ToDataSourceTypeOutputWithContext(context.Context) DataSourceTypeOutput
}

var dataSourceTypePtrType = reflect.TypeOf((**DataSourceType)(nil)).Elem()

type DataSourceTypePtrInput interface {
	pulumi.Input

	ToDataSourceTypePtrOutput() DataSourceTypePtrOutput
	ToDataSourceTypePtrOutputWithContext(context.Context) DataSourceTypePtrOutput
}

type dataSourceTypePtr string

func DataSourceTypePtr(v string) DataSourceTypePtrInput {
	return (*dataSourceTypePtr)(&v)
}

func (*dataSourceTypePtr) ElementType() reflect.Type {
	return dataSourceTypePtrType
}

func (in *dataSourceTypePtr) ToDataSourceTypePtrOutput() DataSourceTypePtrOutput {
	return pulumi.ToOutput(in).(DataSourceTypePtrOutput)
}

func (in *dataSourceTypePtr) ToDataSourceTypePtrOutputWithContext(ctx context.Context) DataSourceTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceTypePtrOutput)
}

type DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode string

const (
	DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeHostOnly   = DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode("HOST_ONLY")
	DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeSubdomains = DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode("SUBDOMAINS")
	DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeEverything = DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode("EVERYTHING")
)

func (DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode)(nil)).Elem()
}

func (e DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput() DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput {
	return pulumi.ToOutput(e).(DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput)
}

func (e DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutputWithContext(ctx context.Context) DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput)
}

func (e DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput() DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput {
	return e.ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutputWithContext(context.Background())
}

func (e DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutputWithContext(ctx context.Context) DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput {
	return DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode(e).ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutputWithContext(ctx).ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutputWithContext(ctx)
}

func (e DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput struct{ *pulumi.OutputState }

func (DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode)(nil)).Elem()
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput) ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput() DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput {
	return o
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput) ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutputWithContext(ctx context.Context) DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput {
	return o
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput) ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput() DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput {
	return o.ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutputWithContext(context.Background())
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput) ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutputWithContext(ctx context.Context) DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) *DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode {
		return &v
	}).(DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput)
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput struct{ *pulumi.OutputState }

func (DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode)(nil)).Elem()
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput) ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput() DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput {
	return o
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput) ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutputWithContext(ctx context.Context) DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput {
	return o
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput) Elem() DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput {
	return o.ApplyT(func(v *DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode {
		if v != nil {
			return *v
		}
		var ret DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode
		return ret
	}).(DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput)
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeInput is an input type that accepts DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeArgs and DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput values.
// You can construct a concrete instance of `DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeInput` via:
//
//          DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeArgs{...}
type DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeInput interface {
	pulumi.Input

	ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput() DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput
	ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutputWithContext(context.Context) DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput
}

var dataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrType = reflect.TypeOf((**DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode)(nil)).Elem()

type DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrInput interface {
	pulumi.Input

	ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput() DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput
	ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutputWithContext(context.Context) DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput
}

type dataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtr string

func DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtr(v string) DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrInput {
	return (*dataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtr)(&v)
}

func (*dataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtr) ElementType() reflect.Type {
	return dataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrType
}

func (in *dataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtr) ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput() DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput {
	return pulumi.ToOutput(in).(DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput)
}

func (in *dataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtr) ToDataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutputWithContext(ctx context.Context) DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput)
}

// Format of the input file
type FaqFileFormat string

const (
	FaqFileFormatCsv           = FaqFileFormat("CSV")
	FaqFileFormatCsvWithHeader = FaqFileFormat("CSV_WITH_HEADER")
	FaqFileFormatJson          = FaqFileFormat("JSON")
)

func (FaqFileFormat) ElementType() reflect.Type {
	return reflect.TypeOf((*FaqFileFormat)(nil)).Elem()
}

func (e FaqFileFormat) ToFaqFileFormatOutput() FaqFileFormatOutput {
	return pulumi.ToOutput(e).(FaqFileFormatOutput)
}

func (e FaqFileFormat) ToFaqFileFormatOutputWithContext(ctx context.Context) FaqFileFormatOutput {
	return pulumi.ToOutputWithContext(ctx, e).(FaqFileFormatOutput)
}

func (e FaqFileFormat) ToFaqFileFormatPtrOutput() FaqFileFormatPtrOutput {
	return e.ToFaqFileFormatPtrOutputWithContext(context.Background())
}

func (e FaqFileFormat) ToFaqFileFormatPtrOutputWithContext(ctx context.Context) FaqFileFormatPtrOutput {
	return FaqFileFormat(e).ToFaqFileFormatOutputWithContext(ctx).ToFaqFileFormatPtrOutputWithContext(ctx)
}

func (e FaqFileFormat) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e FaqFileFormat) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e FaqFileFormat) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e FaqFileFormat) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type FaqFileFormatOutput struct{ *pulumi.OutputState }

func (FaqFileFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FaqFileFormat)(nil)).Elem()
}

func (o FaqFileFormatOutput) ToFaqFileFormatOutput() FaqFileFormatOutput {
	return o
}

func (o FaqFileFormatOutput) ToFaqFileFormatOutputWithContext(ctx context.Context) FaqFileFormatOutput {
	return o
}

func (o FaqFileFormatOutput) ToFaqFileFormatPtrOutput() FaqFileFormatPtrOutput {
	return o.ToFaqFileFormatPtrOutputWithContext(context.Background())
}

func (o FaqFileFormatOutput) ToFaqFileFormatPtrOutputWithContext(ctx context.Context) FaqFileFormatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FaqFileFormat) *FaqFileFormat {
		return &v
	}).(FaqFileFormatPtrOutput)
}

func (o FaqFileFormatOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o FaqFileFormatOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FaqFileFormat) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o FaqFileFormatOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FaqFileFormatOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e FaqFileFormat) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type FaqFileFormatPtrOutput struct{ *pulumi.OutputState }

func (FaqFileFormatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FaqFileFormat)(nil)).Elem()
}

func (o FaqFileFormatPtrOutput) ToFaqFileFormatPtrOutput() FaqFileFormatPtrOutput {
	return o
}

func (o FaqFileFormatPtrOutput) ToFaqFileFormatPtrOutputWithContext(ctx context.Context) FaqFileFormatPtrOutput {
	return o
}

func (o FaqFileFormatPtrOutput) Elem() FaqFileFormatOutput {
	return o.ApplyT(func(v *FaqFileFormat) FaqFileFormat {
		if v != nil {
			return *v
		}
		var ret FaqFileFormat
		return ret
	}).(FaqFileFormatOutput)
}

func (o FaqFileFormatPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o FaqFileFormatPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *FaqFileFormat) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// FaqFileFormatInput is an input type that accepts FaqFileFormatArgs and FaqFileFormatOutput values.
// You can construct a concrete instance of `FaqFileFormatInput` via:
//
//          FaqFileFormatArgs{...}
type FaqFileFormatInput interface {
	pulumi.Input

	ToFaqFileFormatOutput() FaqFileFormatOutput
	ToFaqFileFormatOutputWithContext(context.Context) FaqFileFormatOutput
}

var faqFileFormatPtrType = reflect.TypeOf((**FaqFileFormat)(nil)).Elem()

type FaqFileFormatPtrInput interface {
	pulumi.Input

	ToFaqFileFormatPtrOutput() FaqFileFormatPtrOutput
	ToFaqFileFormatPtrOutputWithContext(context.Context) FaqFileFormatPtrOutput
}

type faqFileFormatPtr string

func FaqFileFormatPtr(v string) FaqFileFormatPtrInput {
	return (*faqFileFormatPtr)(&v)
}

func (*faqFileFormatPtr) ElementType() reflect.Type {
	return faqFileFormatPtrType
}

func (in *faqFileFormatPtr) ToFaqFileFormatPtrOutput() FaqFileFormatPtrOutput {
	return pulumi.ToOutput(in).(FaqFileFormatPtrOutput)
}

func (in *faqFileFormatPtr) ToFaqFileFormatPtrOutputWithContext(ctx context.Context) FaqFileFormatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(FaqFileFormatPtrOutput)
}

type IndexDocumentAttributeValueType string

const (
	IndexDocumentAttributeValueTypeStringValue     = IndexDocumentAttributeValueType("STRING_VALUE")
	IndexDocumentAttributeValueTypeStringListValue = IndexDocumentAttributeValueType("STRING_LIST_VALUE")
	IndexDocumentAttributeValueTypeLongValue       = IndexDocumentAttributeValueType("LONG_VALUE")
	IndexDocumentAttributeValueTypeDateValue       = IndexDocumentAttributeValueType("DATE_VALUE")
)

func (IndexDocumentAttributeValueType) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexDocumentAttributeValueType)(nil)).Elem()
}

func (e IndexDocumentAttributeValueType) ToIndexDocumentAttributeValueTypeOutput() IndexDocumentAttributeValueTypeOutput {
	return pulumi.ToOutput(e).(IndexDocumentAttributeValueTypeOutput)
}

func (e IndexDocumentAttributeValueType) ToIndexDocumentAttributeValueTypeOutputWithContext(ctx context.Context) IndexDocumentAttributeValueTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IndexDocumentAttributeValueTypeOutput)
}

func (e IndexDocumentAttributeValueType) ToIndexDocumentAttributeValueTypePtrOutput() IndexDocumentAttributeValueTypePtrOutput {
	return e.ToIndexDocumentAttributeValueTypePtrOutputWithContext(context.Background())
}

func (e IndexDocumentAttributeValueType) ToIndexDocumentAttributeValueTypePtrOutputWithContext(ctx context.Context) IndexDocumentAttributeValueTypePtrOutput {
	return IndexDocumentAttributeValueType(e).ToIndexDocumentAttributeValueTypeOutputWithContext(ctx).ToIndexDocumentAttributeValueTypePtrOutputWithContext(ctx)
}

func (e IndexDocumentAttributeValueType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexDocumentAttributeValueType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexDocumentAttributeValueType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IndexDocumentAttributeValueType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IndexDocumentAttributeValueTypeOutput struct{ *pulumi.OutputState }

func (IndexDocumentAttributeValueTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexDocumentAttributeValueType)(nil)).Elem()
}

func (o IndexDocumentAttributeValueTypeOutput) ToIndexDocumentAttributeValueTypeOutput() IndexDocumentAttributeValueTypeOutput {
	return o
}

func (o IndexDocumentAttributeValueTypeOutput) ToIndexDocumentAttributeValueTypeOutputWithContext(ctx context.Context) IndexDocumentAttributeValueTypeOutput {
	return o
}

func (o IndexDocumentAttributeValueTypeOutput) ToIndexDocumentAttributeValueTypePtrOutput() IndexDocumentAttributeValueTypePtrOutput {
	return o.ToIndexDocumentAttributeValueTypePtrOutputWithContext(context.Background())
}

func (o IndexDocumentAttributeValueTypeOutput) ToIndexDocumentAttributeValueTypePtrOutputWithContext(ctx context.Context) IndexDocumentAttributeValueTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexDocumentAttributeValueType) *IndexDocumentAttributeValueType {
		return &v
	}).(IndexDocumentAttributeValueTypePtrOutput)
}

func (o IndexDocumentAttributeValueTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IndexDocumentAttributeValueTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexDocumentAttributeValueType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IndexDocumentAttributeValueTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexDocumentAttributeValueTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexDocumentAttributeValueType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IndexDocumentAttributeValueTypePtrOutput struct{ *pulumi.OutputState }

func (IndexDocumentAttributeValueTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexDocumentAttributeValueType)(nil)).Elem()
}

func (o IndexDocumentAttributeValueTypePtrOutput) ToIndexDocumentAttributeValueTypePtrOutput() IndexDocumentAttributeValueTypePtrOutput {
	return o
}

func (o IndexDocumentAttributeValueTypePtrOutput) ToIndexDocumentAttributeValueTypePtrOutputWithContext(ctx context.Context) IndexDocumentAttributeValueTypePtrOutput {
	return o
}

func (o IndexDocumentAttributeValueTypePtrOutput) Elem() IndexDocumentAttributeValueTypeOutput {
	return o.ApplyT(func(v *IndexDocumentAttributeValueType) IndexDocumentAttributeValueType {
		if v != nil {
			return *v
		}
		var ret IndexDocumentAttributeValueType
		return ret
	}).(IndexDocumentAttributeValueTypeOutput)
}

func (o IndexDocumentAttributeValueTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexDocumentAttributeValueTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IndexDocumentAttributeValueType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IndexDocumentAttributeValueTypeInput is an input type that accepts IndexDocumentAttributeValueTypeArgs and IndexDocumentAttributeValueTypeOutput values.
// You can construct a concrete instance of `IndexDocumentAttributeValueTypeInput` via:
//
//          IndexDocumentAttributeValueTypeArgs{...}
type IndexDocumentAttributeValueTypeInput interface {
	pulumi.Input

	ToIndexDocumentAttributeValueTypeOutput() IndexDocumentAttributeValueTypeOutput
	ToIndexDocumentAttributeValueTypeOutputWithContext(context.Context) IndexDocumentAttributeValueTypeOutput
}

var indexDocumentAttributeValueTypePtrType = reflect.TypeOf((**IndexDocumentAttributeValueType)(nil)).Elem()

type IndexDocumentAttributeValueTypePtrInput interface {
	pulumi.Input

	ToIndexDocumentAttributeValueTypePtrOutput() IndexDocumentAttributeValueTypePtrOutput
	ToIndexDocumentAttributeValueTypePtrOutputWithContext(context.Context) IndexDocumentAttributeValueTypePtrOutput
}

type indexDocumentAttributeValueTypePtr string

func IndexDocumentAttributeValueTypePtr(v string) IndexDocumentAttributeValueTypePtrInput {
	return (*indexDocumentAttributeValueTypePtr)(&v)
}

func (*indexDocumentAttributeValueTypePtr) ElementType() reflect.Type {
	return indexDocumentAttributeValueTypePtrType
}

func (in *indexDocumentAttributeValueTypePtr) ToIndexDocumentAttributeValueTypePtrOutput() IndexDocumentAttributeValueTypePtrOutput {
	return pulumi.ToOutput(in).(IndexDocumentAttributeValueTypePtrOutput)
}

func (in *indexDocumentAttributeValueTypePtr) ToIndexDocumentAttributeValueTypePtrOutputWithContext(ctx context.Context) IndexDocumentAttributeValueTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IndexDocumentAttributeValueTypePtrOutput)
}

// Edition of index
type IndexEdition string

const (
	IndexEditionDeveloperEdition  = IndexEdition("DEVELOPER_EDITION")
	IndexEditionEnterpriseEdition = IndexEdition("ENTERPRISE_EDITION")
)

func (IndexEdition) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexEdition)(nil)).Elem()
}

func (e IndexEdition) ToIndexEditionOutput() IndexEditionOutput {
	return pulumi.ToOutput(e).(IndexEditionOutput)
}

func (e IndexEdition) ToIndexEditionOutputWithContext(ctx context.Context) IndexEditionOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IndexEditionOutput)
}

func (e IndexEdition) ToIndexEditionPtrOutput() IndexEditionPtrOutput {
	return e.ToIndexEditionPtrOutputWithContext(context.Background())
}

func (e IndexEdition) ToIndexEditionPtrOutputWithContext(ctx context.Context) IndexEditionPtrOutput {
	return IndexEdition(e).ToIndexEditionOutputWithContext(ctx).ToIndexEditionPtrOutputWithContext(ctx)
}

func (e IndexEdition) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexEdition) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexEdition) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IndexEdition) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IndexEditionOutput struct{ *pulumi.OutputState }

func (IndexEditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexEdition)(nil)).Elem()
}

func (o IndexEditionOutput) ToIndexEditionOutput() IndexEditionOutput {
	return o
}

func (o IndexEditionOutput) ToIndexEditionOutputWithContext(ctx context.Context) IndexEditionOutput {
	return o
}

func (o IndexEditionOutput) ToIndexEditionPtrOutput() IndexEditionPtrOutput {
	return o.ToIndexEditionPtrOutputWithContext(context.Background())
}

func (o IndexEditionOutput) ToIndexEditionPtrOutputWithContext(ctx context.Context) IndexEditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexEdition) *IndexEdition {
		return &v
	}).(IndexEditionPtrOutput)
}

func (o IndexEditionOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IndexEditionOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexEdition) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IndexEditionOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexEditionOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexEdition) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IndexEditionPtrOutput struct{ *pulumi.OutputState }

func (IndexEditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexEdition)(nil)).Elem()
}

func (o IndexEditionPtrOutput) ToIndexEditionPtrOutput() IndexEditionPtrOutput {
	return o
}

func (o IndexEditionPtrOutput) ToIndexEditionPtrOutputWithContext(ctx context.Context) IndexEditionPtrOutput {
	return o
}

func (o IndexEditionPtrOutput) Elem() IndexEditionOutput {
	return o.ApplyT(func(v *IndexEdition) IndexEdition {
		if v != nil {
			return *v
		}
		var ret IndexEdition
		return ret
	}).(IndexEditionOutput)
}

func (o IndexEditionPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexEditionPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IndexEdition) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IndexEditionInput is an input type that accepts IndexEditionArgs and IndexEditionOutput values.
// You can construct a concrete instance of `IndexEditionInput` via:
//
//          IndexEditionArgs{...}
type IndexEditionInput interface {
	pulumi.Input

	ToIndexEditionOutput() IndexEditionOutput
	ToIndexEditionOutputWithContext(context.Context) IndexEditionOutput
}

var indexEditionPtrType = reflect.TypeOf((**IndexEdition)(nil)).Elem()

type IndexEditionPtrInput interface {
	pulumi.Input

	ToIndexEditionPtrOutput() IndexEditionPtrOutput
	ToIndexEditionPtrOutputWithContext(context.Context) IndexEditionPtrOutput
}

type indexEditionPtr string

func IndexEditionPtr(v string) IndexEditionPtrInput {
	return (*indexEditionPtr)(&v)
}

func (*indexEditionPtr) ElementType() reflect.Type {
	return indexEditionPtrType
}

func (in *indexEditionPtr) ToIndexEditionPtrOutput() IndexEditionPtrOutput {
	return pulumi.ToOutput(in).(IndexEditionPtrOutput)
}

func (in *indexEditionPtr) ToIndexEditionPtrOutputWithContext(ctx context.Context) IndexEditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IndexEditionPtrOutput)
}

type IndexKeyLocation string

const (
	IndexKeyLocationUrl           = IndexKeyLocation("URL")
	IndexKeyLocationSecretManager = IndexKeyLocation("SECRET_MANAGER")
)

func (IndexKeyLocation) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexKeyLocation)(nil)).Elem()
}

func (e IndexKeyLocation) ToIndexKeyLocationOutput() IndexKeyLocationOutput {
	return pulumi.ToOutput(e).(IndexKeyLocationOutput)
}

func (e IndexKeyLocation) ToIndexKeyLocationOutputWithContext(ctx context.Context) IndexKeyLocationOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IndexKeyLocationOutput)
}

func (e IndexKeyLocation) ToIndexKeyLocationPtrOutput() IndexKeyLocationPtrOutput {
	return e.ToIndexKeyLocationPtrOutputWithContext(context.Background())
}

func (e IndexKeyLocation) ToIndexKeyLocationPtrOutputWithContext(ctx context.Context) IndexKeyLocationPtrOutput {
	return IndexKeyLocation(e).ToIndexKeyLocationOutputWithContext(ctx).ToIndexKeyLocationPtrOutputWithContext(ctx)
}

func (e IndexKeyLocation) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexKeyLocation) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexKeyLocation) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IndexKeyLocation) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IndexKeyLocationOutput struct{ *pulumi.OutputState }

func (IndexKeyLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexKeyLocation)(nil)).Elem()
}

func (o IndexKeyLocationOutput) ToIndexKeyLocationOutput() IndexKeyLocationOutput {
	return o
}

func (o IndexKeyLocationOutput) ToIndexKeyLocationOutputWithContext(ctx context.Context) IndexKeyLocationOutput {
	return o
}

func (o IndexKeyLocationOutput) ToIndexKeyLocationPtrOutput() IndexKeyLocationPtrOutput {
	return o.ToIndexKeyLocationPtrOutputWithContext(context.Background())
}

func (o IndexKeyLocationOutput) ToIndexKeyLocationPtrOutputWithContext(ctx context.Context) IndexKeyLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexKeyLocation) *IndexKeyLocation {
		return &v
	}).(IndexKeyLocationPtrOutput)
}

func (o IndexKeyLocationOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IndexKeyLocationOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexKeyLocation) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IndexKeyLocationOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexKeyLocationOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexKeyLocation) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IndexKeyLocationPtrOutput struct{ *pulumi.OutputState }

func (IndexKeyLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexKeyLocation)(nil)).Elem()
}

func (o IndexKeyLocationPtrOutput) ToIndexKeyLocationPtrOutput() IndexKeyLocationPtrOutput {
	return o
}

func (o IndexKeyLocationPtrOutput) ToIndexKeyLocationPtrOutputWithContext(ctx context.Context) IndexKeyLocationPtrOutput {
	return o
}

func (o IndexKeyLocationPtrOutput) Elem() IndexKeyLocationOutput {
	return o.ApplyT(func(v *IndexKeyLocation) IndexKeyLocation {
		if v != nil {
			return *v
		}
		var ret IndexKeyLocation
		return ret
	}).(IndexKeyLocationOutput)
}

func (o IndexKeyLocationPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexKeyLocationPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IndexKeyLocation) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IndexKeyLocationInput is an input type that accepts IndexKeyLocationArgs and IndexKeyLocationOutput values.
// You can construct a concrete instance of `IndexKeyLocationInput` via:
//
//          IndexKeyLocationArgs{...}
type IndexKeyLocationInput interface {
	pulumi.Input

	ToIndexKeyLocationOutput() IndexKeyLocationOutput
	ToIndexKeyLocationOutputWithContext(context.Context) IndexKeyLocationOutput
}

var indexKeyLocationPtrType = reflect.TypeOf((**IndexKeyLocation)(nil)).Elem()

type IndexKeyLocationPtrInput interface {
	pulumi.Input

	ToIndexKeyLocationPtrOutput() IndexKeyLocationPtrOutput
	ToIndexKeyLocationPtrOutputWithContext(context.Context) IndexKeyLocationPtrOutput
}

type indexKeyLocationPtr string

func IndexKeyLocationPtr(v string) IndexKeyLocationPtrInput {
	return (*indexKeyLocationPtr)(&v)
}

func (*indexKeyLocationPtr) ElementType() reflect.Type {
	return indexKeyLocationPtrType
}

func (in *indexKeyLocationPtr) ToIndexKeyLocationPtrOutput() IndexKeyLocationPtrOutput {
	return pulumi.ToOutput(in).(IndexKeyLocationPtrOutput)
}

func (in *indexKeyLocationPtr) ToIndexKeyLocationPtrOutputWithContext(ctx context.Context) IndexKeyLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IndexKeyLocationPtrOutput)
}

type IndexOrder string

const (
	IndexOrderAscending  = IndexOrder("ASCENDING")
	IndexOrderDescending = IndexOrder("DESCENDING")
)

func (IndexOrder) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexOrder)(nil)).Elem()
}

func (e IndexOrder) ToIndexOrderOutput() IndexOrderOutput {
	return pulumi.ToOutput(e).(IndexOrderOutput)
}

func (e IndexOrder) ToIndexOrderOutputWithContext(ctx context.Context) IndexOrderOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IndexOrderOutput)
}

func (e IndexOrder) ToIndexOrderPtrOutput() IndexOrderPtrOutput {
	return e.ToIndexOrderPtrOutputWithContext(context.Background())
}

func (e IndexOrder) ToIndexOrderPtrOutputWithContext(ctx context.Context) IndexOrderPtrOutput {
	return IndexOrder(e).ToIndexOrderOutputWithContext(ctx).ToIndexOrderPtrOutputWithContext(ctx)
}

func (e IndexOrder) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexOrder) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexOrder) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IndexOrder) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IndexOrderOutput struct{ *pulumi.OutputState }

func (IndexOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexOrder)(nil)).Elem()
}

func (o IndexOrderOutput) ToIndexOrderOutput() IndexOrderOutput {
	return o
}

func (o IndexOrderOutput) ToIndexOrderOutputWithContext(ctx context.Context) IndexOrderOutput {
	return o
}

func (o IndexOrderOutput) ToIndexOrderPtrOutput() IndexOrderPtrOutput {
	return o.ToIndexOrderPtrOutputWithContext(context.Background())
}

func (o IndexOrderOutput) ToIndexOrderPtrOutputWithContext(ctx context.Context) IndexOrderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexOrder) *IndexOrder {
		return &v
	}).(IndexOrderPtrOutput)
}

func (o IndexOrderOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IndexOrderOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexOrder) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IndexOrderOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexOrderOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexOrder) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IndexOrderPtrOutput struct{ *pulumi.OutputState }

func (IndexOrderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexOrder)(nil)).Elem()
}

func (o IndexOrderPtrOutput) ToIndexOrderPtrOutput() IndexOrderPtrOutput {
	return o
}

func (o IndexOrderPtrOutput) ToIndexOrderPtrOutputWithContext(ctx context.Context) IndexOrderPtrOutput {
	return o
}

func (o IndexOrderPtrOutput) Elem() IndexOrderOutput {
	return o.ApplyT(func(v *IndexOrder) IndexOrder {
		if v != nil {
			return *v
		}
		var ret IndexOrder
		return ret
	}).(IndexOrderOutput)
}

func (o IndexOrderPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexOrderPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IndexOrder) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IndexOrderInput is an input type that accepts IndexOrderArgs and IndexOrderOutput values.
// You can construct a concrete instance of `IndexOrderInput` via:
//
//          IndexOrderArgs{...}
type IndexOrderInput interface {
	pulumi.Input

	ToIndexOrderOutput() IndexOrderOutput
	ToIndexOrderOutputWithContext(context.Context) IndexOrderOutput
}

var indexOrderPtrType = reflect.TypeOf((**IndexOrder)(nil)).Elem()

type IndexOrderPtrInput interface {
	pulumi.Input

	ToIndexOrderPtrOutput() IndexOrderPtrOutput
	ToIndexOrderPtrOutputWithContext(context.Context) IndexOrderPtrOutput
}

type indexOrderPtr string

func IndexOrderPtr(v string) IndexOrderPtrInput {
	return (*indexOrderPtr)(&v)
}

func (*indexOrderPtr) ElementType() reflect.Type {
	return indexOrderPtrType
}

func (in *indexOrderPtr) ToIndexOrderPtrOutput() IndexOrderPtrOutput {
	return pulumi.ToOutput(in).(IndexOrderPtrOutput)
}

func (in *indexOrderPtr) ToIndexOrderPtrOutputWithContext(ctx context.Context) IndexOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IndexOrderPtrOutput)
}

type IndexUserContextPolicy string

const (
	IndexUserContextPolicyAttributeFilter = IndexUserContextPolicy("ATTRIBUTE_FILTER")
	IndexUserContextPolicyUserToken       = IndexUserContextPolicy("USER_TOKEN")
)

func (IndexUserContextPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexUserContextPolicy)(nil)).Elem()
}

func (e IndexUserContextPolicy) ToIndexUserContextPolicyOutput() IndexUserContextPolicyOutput {
	return pulumi.ToOutput(e).(IndexUserContextPolicyOutput)
}

func (e IndexUserContextPolicy) ToIndexUserContextPolicyOutputWithContext(ctx context.Context) IndexUserContextPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, e).(IndexUserContextPolicyOutput)
}

func (e IndexUserContextPolicy) ToIndexUserContextPolicyPtrOutput() IndexUserContextPolicyPtrOutput {
	return e.ToIndexUserContextPolicyPtrOutputWithContext(context.Background())
}

func (e IndexUserContextPolicy) ToIndexUserContextPolicyPtrOutputWithContext(ctx context.Context) IndexUserContextPolicyPtrOutput {
	return IndexUserContextPolicy(e).ToIndexUserContextPolicyOutputWithContext(ctx).ToIndexUserContextPolicyPtrOutputWithContext(ctx)
}

func (e IndexUserContextPolicy) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexUserContextPolicy) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e IndexUserContextPolicy) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e IndexUserContextPolicy) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type IndexUserContextPolicyOutput struct{ *pulumi.OutputState }

func (IndexUserContextPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexUserContextPolicy)(nil)).Elem()
}

func (o IndexUserContextPolicyOutput) ToIndexUserContextPolicyOutput() IndexUserContextPolicyOutput {
	return o
}

func (o IndexUserContextPolicyOutput) ToIndexUserContextPolicyOutputWithContext(ctx context.Context) IndexUserContextPolicyOutput {
	return o
}

func (o IndexUserContextPolicyOutput) ToIndexUserContextPolicyPtrOutput() IndexUserContextPolicyPtrOutput {
	return o.ToIndexUserContextPolicyPtrOutputWithContext(context.Background())
}

func (o IndexUserContextPolicyOutput) ToIndexUserContextPolicyPtrOutputWithContext(ctx context.Context) IndexUserContextPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexUserContextPolicy) *IndexUserContextPolicy {
		return &v
	}).(IndexUserContextPolicyPtrOutput)
}

func (o IndexUserContextPolicyOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o IndexUserContextPolicyOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexUserContextPolicy) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o IndexUserContextPolicyOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexUserContextPolicyOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e IndexUserContextPolicy) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type IndexUserContextPolicyPtrOutput struct{ *pulumi.OutputState }

func (IndexUserContextPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexUserContextPolicy)(nil)).Elem()
}

func (o IndexUserContextPolicyPtrOutput) ToIndexUserContextPolicyPtrOutput() IndexUserContextPolicyPtrOutput {
	return o
}

func (o IndexUserContextPolicyPtrOutput) ToIndexUserContextPolicyPtrOutputWithContext(ctx context.Context) IndexUserContextPolicyPtrOutput {
	return o
}

func (o IndexUserContextPolicyPtrOutput) Elem() IndexUserContextPolicyOutput {
	return o.ApplyT(func(v *IndexUserContextPolicy) IndexUserContextPolicy {
		if v != nil {
			return *v
		}
		var ret IndexUserContextPolicy
		return ret
	}).(IndexUserContextPolicyOutput)
}

func (o IndexUserContextPolicyPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o IndexUserContextPolicyPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *IndexUserContextPolicy) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// IndexUserContextPolicyInput is an input type that accepts IndexUserContextPolicyArgs and IndexUserContextPolicyOutput values.
// You can construct a concrete instance of `IndexUserContextPolicyInput` via:
//
//          IndexUserContextPolicyArgs{...}
type IndexUserContextPolicyInput interface {
	pulumi.Input

	ToIndexUserContextPolicyOutput() IndexUserContextPolicyOutput
	ToIndexUserContextPolicyOutputWithContext(context.Context) IndexUserContextPolicyOutput
}

var indexUserContextPolicyPtrType = reflect.TypeOf((**IndexUserContextPolicy)(nil)).Elem()

type IndexUserContextPolicyPtrInput interface {
	pulumi.Input

	ToIndexUserContextPolicyPtrOutput() IndexUserContextPolicyPtrOutput
	ToIndexUserContextPolicyPtrOutputWithContext(context.Context) IndexUserContextPolicyPtrOutput
}

type indexUserContextPolicyPtr string

func IndexUserContextPolicyPtr(v string) IndexUserContextPolicyPtrInput {
	return (*indexUserContextPolicyPtr)(&v)
}

func (*indexUserContextPolicyPtr) ElementType() reflect.Type {
	return indexUserContextPolicyPtrType
}

func (in *indexUserContextPolicyPtr) ToIndexUserContextPolicyPtrOutput() IndexUserContextPolicyPtrOutput {
	return pulumi.ToOutput(in).(IndexUserContextPolicyPtrOutput)
}

func (in *indexUserContextPolicyPtr) ToIndexUserContextPolicyPtrOutputWithContext(ctx context.Context) IndexUserContextPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(IndexUserContextPolicyPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceAttachmentFieldNameInput)(nil)).Elem(), DataSourceConfluenceAttachmentFieldName("AUTHOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceAttachmentFieldNamePtrInput)(nil)).Elem(), DataSourceConfluenceAttachmentFieldName("AUTHOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceBlogFieldNameInput)(nil)).Elem(), DataSourceConfluenceBlogFieldName("AUTHOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceBlogFieldNamePtrInput)(nil)).Elem(), DataSourceConfluenceBlogFieldName("AUTHOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluencePageFieldNameInput)(nil)).Elem(), DataSourceConfluencePageFieldName("AUTHOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluencePageFieldNamePtrInput)(nil)).Elem(), DataSourceConfluencePageFieldName("AUTHOR"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceSpaceFieldNameInput)(nil)).Elem(), DataSourceConfluenceSpaceFieldName("DISPLAY_URL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceSpaceFieldNamePtrInput)(nil)).Elem(), DataSourceConfluenceSpaceFieldName("DISPLAY_URL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceVersionInput)(nil)).Elem(), DataSourceConfluenceVersion("CLOUD"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceConfluenceVersionPtrInput)(nil)).Elem(), DataSourceConfluenceVersion("CLOUD"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDatabaseEngineTypeInput)(nil)).Elem(), DataSourceDatabaseEngineType("RDS_AURORA_MYSQL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDatabaseEngineTypePtrInput)(nil)).Elem(), DataSourceDatabaseEngineType("RDS_AURORA_MYSQL"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceQueryIdentifiersEnclosingOptionInput)(nil)).Elem(), DataSourceQueryIdentifiersEnclosingOption("DOUBLE_QUOTES"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceQueryIdentifiersEnclosingOptionPtrInput)(nil)).Elem(), DataSourceQueryIdentifiersEnclosingOption("DOUBLE_QUOTES"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceChatterFeedIncludeFilterTypeInput)(nil)).Elem(), DataSourceSalesforceChatterFeedIncludeFilterType("ACTIVE_USER"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceChatterFeedIncludeFilterTypePtrInput)(nil)).Elem(), DataSourceSalesforceChatterFeedIncludeFilterType("ACTIVE_USER"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceChatterFeedIncludeFilterTypeArrayInput)(nil)).Elem(), DataSourceSalesforceChatterFeedIncludeFilterTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceKnowledgeArticleStateInput)(nil)).Elem(), DataSourceSalesforceKnowledgeArticleState("DRAFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceKnowledgeArticleStatePtrInput)(nil)).Elem(), DataSourceSalesforceKnowledgeArticleState("DRAFT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceKnowledgeArticleStateArrayInput)(nil)).Elem(), DataSourceSalesforceKnowledgeArticleStateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceStandardObjectNameInput)(nil)).Elem(), DataSourceSalesforceStandardObjectName("ACCOUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSalesforceStandardObjectNamePtrInput)(nil)).Elem(), DataSourceSalesforceStandardObjectName("ACCOUNT"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceServiceNowAuthenticationTypeInput)(nil)).Elem(), DataSourceServiceNowAuthenticationType("HTTP_BASIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceServiceNowAuthenticationTypePtrInput)(nil)).Elem(), DataSourceServiceNowAuthenticationType("HTTP_BASIC"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceServiceNowBuildVersionTypeInput)(nil)).Elem(), DataSourceServiceNowBuildVersionType("LONDON"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceServiceNowBuildVersionTypePtrInput)(nil)).Elem(), DataSourceServiceNowBuildVersionType("LONDON"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSharePointConfigurationSharePointVersionInput)(nil)).Elem(), DataSourceSharePointConfigurationSharePointVersion("SHAREPOINT_ONLINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceSharePointConfigurationSharePointVersionPtrInput)(nil)).Elem(), DataSourceSharePointConfigurationSharePointVersion("SHAREPOINT_ONLINE"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTypeInput)(nil)).Elem(), DataSourceType("S3"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceTypePtrInput)(nil)).Elem(), DataSourceType("S3"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeInput)(nil)).Elem(), DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode("HOST_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrInput)(nil)).Elem(), DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerMode("HOST_ONLY"))
	pulumi.RegisterInputType(reflect.TypeOf((*FaqFileFormatInput)(nil)).Elem(), FaqFileFormat("CSV"))
	pulumi.RegisterInputType(reflect.TypeOf((*FaqFileFormatPtrInput)(nil)).Elem(), FaqFileFormat("CSV"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexDocumentAttributeValueTypeInput)(nil)).Elem(), IndexDocumentAttributeValueType("STRING_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexDocumentAttributeValueTypePtrInput)(nil)).Elem(), IndexDocumentAttributeValueType("STRING_VALUE"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexEditionInput)(nil)).Elem(), IndexEdition("DEVELOPER_EDITION"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexEditionPtrInput)(nil)).Elem(), IndexEdition("DEVELOPER_EDITION"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexKeyLocationInput)(nil)).Elem(), IndexKeyLocation("URL"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexKeyLocationPtrInput)(nil)).Elem(), IndexKeyLocation("URL"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexOrderInput)(nil)).Elem(), IndexOrder("ASCENDING"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexOrderPtrInput)(nil)).Elem(), IndexOrder("ASCENDING"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexUserContextPolicyInput)(nil)).Elem(), IndexUserContextPolicy("ATTRIBUTE_FILTER"))
	pulumi.RegisterInputType(reflect.TypeOf((*IndexUserContextPolicyPtrInput)(nil)).Elem(), IndexUserContextPolicy("ATTRIBUTE_FILTER"))
	pulumi.RegisterOutputType(DataSourceConfluenceAttachmentFieldNameOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceAttachmentFieldNamePtrOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceBlogFieldNameOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceBlogFieldNamePtrOutput{})
	pulumi.RegisterOutputType(DataSourceConfluencePageFieldNameOutput{})
	pulumi.RegisterOutputType(DataSourceConfluencePageFieldNamePtrOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceSpaceFieldNameOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceSpaceFieldNamePtrOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceVersionOutput{})
	pulumi.RegisterOutputType(DataSourceConfluenceVersionPtrOutput{})
	pulumi.RegisterOutputType(DataSourceDatabaseEngineTypeOutput{})
	pulumi.RegisterOutputType(DataSourceDatabaseEngineTypePtrOutput{})
	pulumi.RegisterOutputType(DataSourceQueryIdentifiersEnclosingOptionOutput{})
	pulumi.RegisterOutputType(DataSourceQueryIdentifiersEnclosingOptionPtrOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceChatterFeedIncludeFilterTypeOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceChatterFeedIncludeFilterTypePtrOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceChatterFeedIncludeFilterTypeArrayOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceKnowledgeArticleStateOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceKnowledgeArticleStatePtrOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceKnowledgeArticleStateArrayOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceStandardObjectNameOutput{})
	pulumi.RegisterOutputType(DataSourceSalesforceStandardObjectNamePtrOutput{})
	pulumi.RegisterOutputType(DataSourceServiceNowAuthenticationTypeOutput{})
	pulumi.RegisterOutputType(DataSourceServiceNowAuthenticationTypePtrOutput{})
	pulumi.RegisterOutputType(DataSourceServiceNowBuildVersionTypeOutput{})
	pulumi.RegisterOutputType(DataSourceServiceNowBuildVersionTypePtrOutput{})
	pulumi.RegisterOutputType(DataSourceSharePointConfigurationSharePointVersionOutput{})
	pulumi.RegisterOutputType(DataSourceSharePointConfigurationSharePointVersionPtrOutput{})
	pulumi.RegisterOutputType(DataSourceTypeOutput{})
	pulumi.RegisterOutputType(DataSourceTypePtrOutput{})
	pulumi.RegisterOutputType(DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModeOutput{})
	pulumi.RegisterOutputType(DataSourceWebCrawlerSeedUrlConfigurationWebCrawlerModePtrOutput{})
	pulumi.RegisterOutputType(FaqFileFormatOutput{})
	pulumi.RegisterOutputType(FaqFileFormatPtrOutput{})
	pulumi.RegisterOutputType(IndexDocumentAttributeValueTypeOutput{})
	pulumi.RegisterOutputType(IndexDocumentAttributeValueTypePtrOutput{})
	pulumi.RegisterOutputType(IndexEditionOutput{})
	pulumi.RegisterOutputType(IndexEditionPtrOutput{})
	pulumi.RegisterOutputType(IndexKeyLocationOutput{})
	pulumi.RegisterOutputType(IndexKeyLocationPtrOutput{})
	pulumi.RegisterOutputType(IndexOrderOutput{})
	pulumi.RegisterOutputType(IndexOrderPtrOutput{})
	pulumi.RegisterOutputType(IndexUserContextPolicyOutput{})
	pulumi.RegisterOutputType(IndexUserContextPolicyPtrOutput{})
}
