// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kendra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Kendra DataSource
func LookupDataSource(ctx *pulumi.Context, args *LookupDataSourceArgs, opts ...pulumi.InvokeOption) (*LookupDataSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDataSourceResult
	err := ctx.Invoke("aws-native:kendra:getDataSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDataSourceArgs struct {
	// The identifier for the data source. For example:
	//
	// `b8cae438-6787-4091-8897-684a652bbb0a` .
	Id string `pulumi:"id"`
	// The identifier of the index you want to use with the data source connector.
	IndexId string `pulumi:"indexId"`
}

type LookupDataSourceResult struct {
	// The Amazon Resource Name (ARN) of the data source. For example:
	//
	// `arn:aws:kendra:us-west-2:111122223333:index/335c3741-41df-46a6-b5d3-61f85b787884/data-source/b8cae438-6787-4091-8897-684a652bbb0a`
	Arn *string `pulumi:"arn"`
	// Configuration information for altering document metadata and content during the document ingestion process.
	CustomDocumentEnrichmentConfiguration *DataSourceCustomDocumentEnrichmentConfiguration `pulumi:"customDocumentEnrichmentConfiguration"`
	// Configuration information for an Amazon Kendra data source. The contents of the configuration depend on the type of data source. You can only specify one type of data source in the configuration.
	//
	// You can't specify the `Configuration` parameter when the `Type` parameter is set to `CUSTOM` .
	//
	// The `Configuration` parameter is required for all other data sources.
	DataSourceConfiguration *DataSourceConfiguration `pulumi:"dataSourceConfiguration"`
	// A description for the data source connector.
	Description *string `pulumi:"description"`
	// The identifier for the data source. For example:
	//
	// `b8cae438-6787-4091-8897-684a652bbb0a` .
	Id *string `pulumi:"id"`
	// The identifier of the index you want to use with the data source connector.
	IndexId *string `pulumi:"indexId"`
	// The code for a language. This shows a supported language for all documents in the data source. English is supported by default. For more information on supported languages, including their codes, see [Adding documents in languages other than English](https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html) .
	LanguageCode *string `pulumi:"languageCode"`
	// The name of the data source.
	Name *string `pulumi:"name"`
	// The Amazon Resource Name (ARN) of a role with permission to access the data source.
	//
	// You can't specify the `RoleArn` parameter when the `Type` parameter is set to `CUSTOM` .
	//
	// The `RoleArn` parameter is required for all other data sources.
	RoleArn *string `pulumi:"roleArn"`
	// Sets the frequency that Amazon Kendra checks the documents in your data source and updates the index. If you don't set a schedule, Amazon Kendra doesn't periodically update the index.
	Schedule *string `pulumi:"schedule"`
	// Tags for labeling the data source
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDataSourceOutput(ctx *pulumi.Context, args LookupDataSourceOutputArgs, opts ...pulumi.InvokeOption) LookupDataSourceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDataSourceResultOutput, error) {
			args := v.(LookupDataSourceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:kendra:getDataSource", args, LookupDataSourceResultOutput{}, options).(LookupDataSourceResultOutput), nil
		}).(LookupDataSourceResultOutput)
}

type LookupDataSourceOutputArgs struct {
	// The identifier for the data source. For example:
	//
	// `b8cae438-6787-4091-8897-684a652bbb0a` .
	Id pulumi.StringInput `pulumi:"id"`
	// The identifier of the index you want to use with the data source connector.
	IndexId pulumi.StringInput `pulumi:"indexId"`
}

func (LookupDataSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataSourceArgs)(nil)).Elem()
}

type LookupDataSourceResultOutput struct{ *pulumi.OutputState }

func (LookupDataSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDataSourceResult)(nil)).Elem()
}

func (o LookupDataSourceResultOutput) ToLookupDataSourceResultOutput() LookupDataSourceResultOutput {
	return o
}

func (o LookupDataSourceResultOutput) ToLookupDataSourceResultOutputWithContext(ctx context.Context) LookupDataSourceResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the data source. For example:
//
// `arn:aws:kendra:us-west-2:111122223333:index/335c3741-41df-46a6-b5d3-61f85b787884/data-source/b8cae438-6787-4091-8897-684a652bbb0a`
func (o LookupDataSourceResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Configuration information for altering document metadata and content during the document ingestion process.
func (o LookupDataSourceResultOutput) CustomDocumentEnrichmentConfiguration() DataSourceCustomDocumentEnrichmentConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceCustomDocumentEnrichmentConfiguration {
		return v.CustomDocumentEnrichmentConfiguration
	}).(DataSourceCustomDocumentEnrichmentConfigurationPtrOutput)
}

// Configuration information for an Amazon Kendra data source. The contents of the configuration depend on the type of data source. You can only specify one type of data source in the configuration.
//
// You can't specify the `Configuration` parameter when the `Type` parameter is set to `CUSTOM` .
//
// The `Configuration` parameter is required for all other data sources.
func (o LookupDataSourceResultOutput) DataSourceConfiguration() DataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *DataSourceConfiguration { return v.DataSourceConfiguration }).(DataSourceConfigurationPtrOutput)
}

// A description for the data source connector.
func (o LookupDataSourceResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The identifier for the data source. For example:
//
// `b8cae438-6787-4091-8897-684a652bbb0a` .
func (o LookupDataSourceResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The identifier of the index you want to use with the data source connector.
func (o LookupDataSourceResultOutput) IndexId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.IndexId }).(pulumi.StringPtrOutput)
}

// The code for a language. This shows a supported language for all documents in the data source. English is supported by default. For more information on supported languages, including their codes, see [Adding documents in languages other than English](https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html) .
func (o LookupDataSourceResultOutput) LanguageCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.LanguageCode }).(pulumi.StringPtrOutput)
}

// The name of the data source.
func (o LookupDataSourceResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of a role with permission to access the data source.
//
// You can't specify the `RoleArn` parameter when the `Type` parameter is set to `CUSTOM` .
//
// The `RoleArn` parameter is required for all other data sources.
func (o LookupDataSourceResultOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// Sets the frequency that Amazon Kendra checks the documents in your data source and updates the index. If you don't set a schedule, Amazon Kendra doesn't periodically update the index.
func (o LookupDataSourceResultOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDataSourceResult) *string { return v.Schedule }).(pulumi.StringPtrOutput)
}

// Tags for labeling the data source
func (o LookupDataSourceResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDataSourceResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDataSourceResultOutput{})
}
