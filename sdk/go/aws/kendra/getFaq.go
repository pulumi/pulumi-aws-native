// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kendra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Kendra FAQ resource
func LookupFaq(ctx *pulumi.Context, args *LookupFaqArgs, opts ...pulumi.InvokeOption) (*LookupFaqResult, error) {
	var rv LookupFaqResult
	err := ctx.Invoke("aws-native:kendra:getFaq", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupFaqArgs struct {
	Id string `pulumi:"id"`
	// Index ID
	IndexId string `pulumi:"indexId"`
}

type LookupFaqResult struct {
	Arn *string `pulumi:"arn"`
	Id  *string `pulumi:"id"`
	// Tags for labeling the FAQ
	Tags []FaqTag `pulumi:"tags"`
}

func LookupFaqOutput(ctx *pulumi.Context, args LookupFaqOutputArgs, opts ...pulumi.InvokeOption) LookupFaqResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFaqResult, error) {
			args := v.(LookupFaqArgs)
			r, err := LookupFaq(ctx, &args, opts...)
			return *r, err
		}).(LookupFaqResultOutput)
}

type LookupFaqOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
	// Index ID
	IndexId pulumi.StringInput `pulumi:"indexId"`
}

func (LookupFaqOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFaqArgs)(nil)).Elem()
}

type LookupFaqResultOutput struct{ *pulumi.OutputState }

func (LookupFaqResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFaqResult)(nil)).Elem()
}

func (o LookupFaqResultOutput) ToLookupFaqResultOutput() LookupFaqResultOutput {
	return o
}

func (o LookupFaqResultOutput) ToLookupFaqResultOutputWithContext(ctx context.Context) LookupFaqResultOutput {
	return o
}

func (o LookupFaqResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFaqResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupFaqResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupFaqResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Tags for labeling the FAQ
func (o LookupFaqResultOutput) Tags() FaqTagArrayOutput {
	return o.ApplyT(func(v LookupFaqResult) []FaqTag { return v.Tags }).(FaqTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFaqResultOutput{})
}
