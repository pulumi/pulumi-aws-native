// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::VPCEndpointServicePermissions
func LookupVpcEndpointServicePermissions(ctx *pulumi.Context, args *LookupVpcEndpointServicePermissionsArgs, opts ...pulumi.InvokeOption) (*LookupVpcEndpointServicePermissionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpcEndpointServicePermissionsResult
	err := ctx.Invoke("aws-native:ec2:getVpcEndpointServicePermissions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVpcEndpointServicePermissionsArgs struct {
	// The ID of the service.
	ServiceId string `pulumi:"serviceId"`
}

type LookupVpcEndpointServicePermissionsResult struct {
	// The Amazon Resource Names (ARN) of one or more principals (for example, users, IAM roles, and AWS accounts ). Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*). Permissions are revoked for principals not in this list. If the list is empty, then all permissions are revoked.
	AllowedPrincipals []string `pulumi:"allowedPrincipals"`
}

func LookupVpcEndpointServicePermissionsOutput(ctx *pulumi.Context, args LookupVpcEndpointServicePermissionsOutputArgs, opts ...pulumi.InvokeOption) LookupVpcEndpointServicePermissionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVpcEndpointServicePermissionsResultOutput, error) {
			args := v.(LookupVpcEndpointServicePermissionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getVpcEndpointServicePermissions", args, LookupVpcEndpointServicePermissionsResultOutput{}, options).(LookupVpcEndpointServicePermissionsResultOutput), nil
		}).(LookupVpcEndpointServicePermissionsResultOutput)
}

type LookupVpcEndpointServicePermissionsOutputArgs struct {
	// The ID of the service.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (LookupVpcEndpointServicePermissionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcEndpointServicePermissionsArgs)(nil)).Elem()
}

type LookupVpcEndpointServicePermissionsResultOutput struct{ *pulumi.OutputState }

func (LookupVpcEndpointServicePermissionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcEndpointServicePermissionsResult)(nil)).Elem()
}

func (o LookupVpcEndpointServicePermissionsResultOutput) ToLookupVpcEndpointServicePermissionsResultOutput() LookupVpcEndpointServicePermissionsResultOutput {
	return o
}

func (o LookupVpcEndpointServicePermissionsResultOutput) ToLookupVpcEndpointServicePermissionsResultOutputWithContext(ctx context.Context) LookupVpcEndpointServicePermissionsResultOutput {
	return o
}

// The Amazon Resource Names (ARN) of one or more principals (for example, users, IAM roles, and AWS accounts ). Permissions are granted to the principals in this list. To grant permissions to all principals, specify an asterisk (*). Permissions are revoked for principals not in this list. If the list is empty, then all permissions are revoked.
func (o LookupVpcEndpointServicePermissionsResultOutput) AllowedPrincipals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcEndpointServicePermissionsResult) []string { return v.AllowedPrincipals }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcEndpointServicePermissionsResultOutput{})
}
