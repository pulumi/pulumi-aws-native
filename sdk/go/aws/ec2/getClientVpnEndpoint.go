// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::ClientVpnEndpoint
func LookupClientVpnEndpoint(ctx *pulumi.Context, args *LookupClientVpnEndpointArgs, opts ...pulumi.InvokeOption) (*LookupClientVpnEndpointResult, error) {
	var rv LookupClientVpnEndpointResult
	err := ctx.Invoke("aws-native:ec2:getClientVpnEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupClientVpnEndpointArgs struct {
	Id string `pulumi:"id"`
}

type LookupClientVpnEndpointResult struct {
	ClientConnectOptions     *ClientVpnEndpointClientConnectOptions     `pulumi:"clientConnectOptions"`
	ClientLoginBannerOptions *ClientVpnEndpointClientLoginBannerOptions `pulumi:"clientLoginBannerOptions"`
	ConnectionLogOptions     *ClientVpnEndpointConnectionLogOptions     `pulumi:"connectionLogOptions"`
	Description              *string                                    `pulumi:"description"`
	DnsServers               []string                                   `pulumi:"dnsServers"`
	Id                       *string                                    `pulumi:"id"`
	SecurityGroupIds         []string                                   `pulumi:"securityGroupIds"`
	SelfServicePortal        *string                                    `pulumi:"selfServicePortal"`
	ServerCertificateArn     *string                                    `pulumi:"serverCertificateArn"`
	SessionTimeoutHours      *int                                       `pulumi:"sessionTimeoutHours"`
	SplitTunnel              *bool                                      `pulumi:"splitTunnel"`
	VpcId                    *string                                    `pulumi:"vpcId"`
	VpnPort                  *int                                       `pulumi:"vpnPort"`
}

func LookupClientVpnEndpointOutput(ctx *pulumi.Context, args LookupClientVpnEndpointOutputArgs, opts ...pulumi.InvokeOption) LookupClientVpnEndpointResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupClientVpnEndpointResult, error) {
			args := v.(LookupClientVpnEndpointArgs)
			r, err := LookupClientVpnEndpoint(ctx, &args, opts...)
			var s LookupClientVpnEndpointResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupClientVpnEndpointResultOutput)
}

type LookupClientVpnEndpointOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupClientVpnEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClientVpnEndpointArgs)(nil)).Elem()
}

type LookupClientVpnEndpointResultOutput struct{ *pulumi.OutputState }

func (LookupClientVpnEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupClientVpnEndpointResult)(nil)).Elem()
}

func (o LookupClientVpnEndpointResultOutput) ToLookupClientVpnEndpointResultOutput() LookupClientVpnEndpointResultOutput {
	return o
}

func (o LookupClientVpnEndpointResultOutput) ToLookupClientVpnEndpointResultOutputWithContext(ctx context.Context) LookupClientVpnEndpointResultOutput {
	return o
}

func (o LookupClientVpnEndpointResultOutput) ClientConnectOptions() ClientVpnEndpointClientConnectOptionsPtrOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) *ClientVpnEndpointClientConnectOptions {
		return v.ClientConnectOptions
	}).(ClientVpnEndpointClientConnectOptionsPtrOutput)
}

func (o LookupClientVpnEndpointResultOutput) ClientLoginBannerOptions() ClientVpnEndpointClientLoginBannerOptionsPtrOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) *ClientVpnEndpointClientLoginBannerOptions {
		return v.ClientLoginBannerOptions
	}).(ClientVpnEndpointClientLoginBannerOptionsPtrOutput)
}

func (o LookupClientVpnEndpointResultOutput) ConnectionLogOptions() ClientVpnEndpointConnectionLogOptionsPtrOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) *ClientVpnEndpointConnectionLogOptions {
		return v.ConnectionLogOptions
	}).(ClientVpnEndpointConnectionLogOptionsPtrOutput)
}

func (o LookupClientVpnEndpointResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupClientVpnEndpointResultOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

func (o LookupClientVpnEndpointResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupClientVpnEndpointResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o LookupClientVpnEndpointResultOutput) SelfServicePortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) *string { return v.SelfServicePortal }).(pulumi.StringPtrOutput)
}

func (o LookupClientVpnEndpointResultOutput) ServerCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) *string { return v.ServerCertificateArn }).(pulumi.StringPtrOutput)
}

func (o LookupClientVpnEndpointResultOutput) SessionTimeoutHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) *int { return v.SessionTimeoutHours }).(pulumi.IntPtrOutput)
}

func (o LookupClientVpnEndpointResultOutput) SplitTunnel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) *bool { return v.SplitTunnel }).(pulumi.BoolPtrOutput)
}

func (o LookupClientVpnEndpointResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func (o LookupClientVpnEndpointResultOutput) VpnPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupClientVpnEndpointResult) *int { return v.VpnPort }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupClientVpnEndpointResultOutput{})
}
