// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::VPCEndpoint
func LookupVPCEndpoint(ctx *pulumi.Context, args *LookupVPCEndpointArgs, opts ...pulumi.InvokeOption) (*LookupVPCEndpointResult, error) {
	var rv LookupVPCEndpointResult
	err := ctx.Invoke("aws-native:ec2:getVPCEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVPCEndpointArgs struct {
	Id string `pulumi:"id"`
}

type LookupVPCEndpointResult struct {
	CreationTimestamp   *string     `pulumi:"creationTimestamp"`
	DnsEntries          []string    `pulumi:"dnsEntries"`
	Id                  *string     `pulumi:"id"`
	NetworkInterfaceIds []string    `pulumi:"networkInterfaceIds"`
	PolicyDocument      interface{} `pulumi:"policyDocument"`
	PrivateDnsEnabled   *bool       `pulumi:"privateDnsEnabled"`
	RouteTableIds       []string    `pulumi:"routeTableIds"`
	SecurityGroupIds    []string    `pulumi:"securityGroupIds"`
	SubnetIds           []string    `pulumi:"subnetIds"`
}

func LookupVPCEndpointOutput(ctx *pulumi.Context, args LookupVPCEndpointOutputArgs, opts ...pulumi.InvokeOption) LookupVPCEndpointResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVPCEndpointResult, error) {
			args := v.(LookupVPCEndpointArgs)
			r, err := LookupVPCEndpoint(ctx, &args, opts...)
			var s LookupVPCEndpointResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVPCEndpointResultOutput)
}

type LookupVPCEndpointOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupVPCEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVPCEndpointArgs)(nil)).Elem()
}

type LookupVPCEndpointResultOutput struct{ *pulumi.OutputState }

func (LookupVPCEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVPCEndpointResult)(nil)).Elem()
}

func (o LookupVPCEndpointResultOutput) ToLookupVPCEndpointResultOutput() LookupVPCEndpointResultOutput {
	return o
}

func (o LookupVPCEndpointResultOutput) ToLookupVPCEndpointResultOutputWithContext(ctx context.Context) LookupVPCEndpointResultOutput {
	return o
}

func (o LookupVPCEndpointResultOutput) CreationTimestamp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVPCEndpointResult) *string { return v.CreationTimestamp }).(pulumi.StringPtrOutput)
}

func (o LookupVPCEndpointResultOutput) DnsEntries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVPCEndpointResult) []string { return v.DnsEntries }).(pulumi.StringArrayOutput)
}

func (o LookupVPCEndpointResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVPCEndpointResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupVPCEndpointResultOutput) NetworkInterfaceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVPCEndpointResult) []string { return v.NetworkInterfaceIds }).(pulumi.StringArrayOutput)
}

func (o LookupVPCEndpointResultOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v LookupVPCEndpointResult) interface{} { return v.PolicyDocument }).(pulumi.AnyOutput)
}

func (o LookupVPCEndpointResultOutput) PrivateDnsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupVPCEndpointResult) *bool { return v.PrivateDnsEnabled }).(pulumi.BoolPtrOutput)
}

func (o LookupVPCEndpointResultOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVPCEndpointResult) []string { return v.RouteTableIds }).(pulumi.StringArrayOutput)
}

func (o LookupVPCEndpointResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVPCEndpointResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o LookupVPCEndpointResultOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVPCEndpointResult) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVPCEndpointResultOutput{})
}
