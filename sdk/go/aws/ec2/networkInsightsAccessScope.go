// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::EC2::NetworkInsightsAccessScope
type NetworkInsightsAccessScope struct {
	pulumi.CustomResourceState

	// The creation date.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// The paths to exclude.
	ExcludePaths NetworkInsightsAccessScopeAccessScopePathRequestArrayOutput `pulumi:"excludePaths"`
	// The paths to match.
	MatchPaths NetworkInsightsAccessScopeAccessScopePathRequestArrayOutput `pulumi:"matchPaths"`
	// The ARN of the Network Access Scope.
	NetworkInsightsAccessScopeArn pulumi.StringOutput `pulumi:"networkInsightsAccessScopeArn"`
	// The ID of the Network Access Scope.
	NetworkInsightsAccessScopeId pulumi.StringOutput `pulumi:"networkInsightsAccessScopeId"`
	// The tags.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The last updated date.
	UpdatedDate pulumi.StringOutput `pulumi:"updatedDate"`
}

// NewNetworkInsightsAccessScope registers a new resource with the given unique name, arguments, and options.
func NewNetworkInsightsAccessScope(ctx *pulumi.Context,
	name string, args *NetworkInsightsAccessScopeArgs, opts ...pulumi.ResourceOption) (*NetworkInsightsAccessScope, error) {
	if args == nil {
		args = &NetworkInsightsAccessScopeArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"excludePaths[*]",
		"matchPaths[*]",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkInsightsAccessScope
	err := ctx.RegisterResource("aws-native:ec2:NetworkInsightsAccessScope", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkInsightsAccessScope gets an existing NetworkInsightsAccessScope resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkInsightsAccessScope(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkInsightsAccessScopeState, opts ...pulumi.ResourceOption) (*NetworkInsightsAccessScope, error) {
	var resource NetworkInsightsAccessScope
	err := ctx.ReadResource("aws-native:ec2:NetworkInsightsAccessScope", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkInsightsAccessScope resources.
type networkInsightsAccessScopeState struct {
}

type NetworkInsightsAccessScopeState struct {
}

func (NetworkInsightsAccessScopeState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInsightsAccessScopeState)(nil)).Elem()
}

type networkInsightsAccessScopeArgs struct {
	// The paths to exclude.
	ExcludePaths []NetworkInsightsAccessScopeAccessScopePathRequest `pulumi:"excludePaths"`
	// The paths to match.
	MatchPaths []NetworkInsightsAccessScopeAccessScopePathRequest `pulumi:"matchPaths"`
	// The tags.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkInsightsAccessScope resource.
type NetworkInsightsAccessScopeArgs struct {
	// The paths to exclude.
	ExcludePaths NetworkInsightsAccessScopeAccessScopePathRequestArrayInput
	// The paths to match.
	MatchPaths NetworkInsightsAccessScopeAccessScopePathRequestArrayInput
	// The tags.
	Tags aws.TagArrayInput
}

func (NetworkInsightsAccessScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInsightsAccessScopeArgs)(nil)).Elem()
}

type NetworkInsightsAccessScopeInput interface {
	pulumi.Input

	ToNetworkInsightsAccessScopeOutput() NetworkInsightsAccessScopeOutput
	ToNetworkInsightsAccessScopeOutputWithContext(ctx context.Context) NetworkInsightsAccessScopeOutput
}

func (*NetworkInsightsAccessScope) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInsightsAccessScope)(nil)).Elem()
}

func (i *NetworkInsightsAccessScope) ToNetworkInsightsAccessScopeOutput() NetworkInsightsAccessScopeOutput {
	return i.ToNetworkInsightsAccessScopeOutputWithContext(context.Background())
}

func (i *NetworkInsightsAccessScope) ToNetworkInsightsAccessScopeOutputWithContext(ctx context.Context) NetworkInsightsAccessScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsAccessScopeOutput)
}

type NetworkInsightsAccessScopeOutput struct{ *pulumi.OutputState }

func (NetworkInsightsAccessScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInsightsAccessScope)(nil)).Elem()
}

func (o NetworkInsightsAccessScopeOutput) ToNetworkInsightsAccessScopeOutput() NetworkInsightsAccessScopeOutput {
	return o
}

func (o NetworkInsightsAccessScopeOutput) ToNetworkInsightsAccessScopeOutputWithContext(ctx context.Context) NetworkInsightsAccessScopeOutput {
	return o
}

// The creation date.
func (o NetworkInsightsAccessScopeOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsAccessScope) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// The paths to exclude.
func (o NetworkInsightsAccessScopeOutput) ExcludePaths() NetworkInsightsAccessScopeAccessScopePathRequestArrayOutput {
	return o.ApplyT(func(v *NetworkInsightsAccessScope) NetworkInsightsAccessScopeAccessScopePathRequestArrayOutput {
		return v.ExcludePaths
	}).(NetworkInsightsAccessScopeAccessScopePathRequestArrayOutput)
}

// The paths to match.
func (o NetworkInsightsAccessScopeOutput) MatchPaths() NetworkInsightsAccessScopeAccessScopePathRequestArrayOutput {
	return o.ApplyT(func(v *NetworkInsightsAccessScope) NetworkInsightsAccessScopeAccessScopePathRequestArrayOutput {
		return v.MatchPaths
	}).(NetworkInsightsAccessScopeAccessScopePathRequestArrayOutput)
}

// The ARN of the Network Access Scope.
func (o NetworkInsightsAccessScopeOutput) NetworkInsightsAccessScopeArn() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsAccessScope) pulumi.StringOutput { return v.NetworkInsightsAccessScopeArn }).(pulumi.StringOutput)
}

// The ID of the Network Access Scope.
func (o NetworkInsightsAccessScopeOutput) NetworkInsightsAccessScopeId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsAccessScope) pulumi.StringOutput { return v.NetworkInsightsAccessScopeId }).(pulumi.StringOutput)
}

// The tags.
func (o NetworkInsightsAccessScopeOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *NetworkInsightsAccessScope) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The last updated date.
func (o NetworkInsightsAccessScopeOutput) UpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsAccessScope) pulumi.StringOutput { return v.UpdatedDate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInsightsAccessScopeInput)(nil)).Elem(), &NetworkInsightsAccessScope{})
	pulumi.RegisterOutputType(NetworkInsightsAccessScopeOutput{})
}
