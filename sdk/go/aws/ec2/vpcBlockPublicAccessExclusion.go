// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::VPCBlockPublicAccessExclusion.
type VpcBlockPublicAccessExclusion struct {
	pulumi.CustomResourceState

	// The ID of the exclusion
	ExclusionId pulumi.StringOutput `pulumi:"exclusionId"`
	// The desired Block Public Access Exclusion Mode for a specific VPC/Subnet.
	InternetGatewayExclusionMode VpcBlockPublicAccessExclusionInternetGatewayExclusionModeOutput `pulumi:"internetGatewayExclusionMode"`
	// The ID of the subnet. Required only if you don't specify VpcId
	SubnetId pulumi.StringPtrOutput `pulumi:"subnetId"`
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The ID of the vpc. Required only if you don't specify SubnetId.
	VpcId pulumi.StringPtrOutput `pulumi:"vpcId"`
}

// NewVpcBlockPublicAccessExclusion registers a new resource with the given unique name, arguments, and options.
func NewVpcBlockPublicAccessExclusion(ctx *pulumi.Context,
	name string, args *VpcBlockPublicAccessExclusionArgs, opts ...pulumi.ResourceOption) (*VpcBlockPublicAccessExclusion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InternetGatewayExclusionMode == nil {
		return nil, errors.New("invalid value for required argument 'InternetGatewayExclusionMode'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"subnetId",
		"vpcId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcBlockPublicAccessExclusion
	err := ctx.RegisterResource("aws-native:ec2:VpcBlockPublicAccessExclusion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcBlockPublicAccessExclusion gets an existing VpcBlockPublicAccessExclusion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcBlockPublicAccessExclusion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcBlockPublicAccessExclusionState, opts ...pulumi.ResourceOption) (*VpcBlockPublicAccessExclusion, error) {
	var resource VpcBlockPublicAccessExclusion
	err := ctx.ReadResource("aws-native:ec2:VpcBlockPublicAccessExclusion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcBlockPublicAccessExclusion resources.
type vpcBlockPublicAccessExclusionState struct {
}

type VpcBlockPublicAccessExclusionState struct {
}

func (VpcBlockPublicAccessExclusionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcBlockPublicAccessExclusionState)(nil)).Elem()
}

type vpcBlockPublicAccessExclusionArgs struct {
	// The desired Block Public Access Exclusion Mode for a specific VPC/Subnet.
	InternetGatewayExclusionMode VpcBlockPublicAccessExclusionInternetGatewayExclusionMode `pulumi:"internetGatewayExclusionMode"`
	// The ID of the subnet. Required only if you don't specify VpcId
	SubnetId *string `pulumi:"subnetId"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// The ID of the vpc. Required only if you don't specify SubnetId.
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpcBlockPublicAccessExclusion resource.
type VpcBlockPublicAccessExclusionArgs struct {
	// The desired Block Public Access Exclusion Mode for a specific VPC/Subnet.
	InternetGatewayExclusionMode VpcBlockPublicAccessExclusionInternetGatewayExclusionModeInput
	// The ID of the subnet. Required only if you don't specify VpcId
	SubnetId pulumi.StringPtrInput
	// An array of key-value pairs to apply to this resource.
	Tags aws.TagArrayInput
	// The ID of the vpc. Required only if you don't specify SubnetId.
	VpcId pulumi.StringPtrInput
}

func (VpcBlockPublicAccessExclusionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcBlockPublicAccessExclusionArgs)(nil)).Elem()
}

type VpcBlockPublicAccessExclusionInput interface {
	pulumi.Input

	ToVpcBlockPublicAccessExclusionOutput() VpcBlockPublicAccessExclusionOutput
	ToVpcBlockPublicAccessExclusionOutputWithContext(ctx context.Context) VpcBlockPublicAccessExclusionOutput
}

func (*VpcBlockPublicAccessExclusion) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcBlockPublicAccessExclusion)(nil)).Elem()
}

func (i *VpcBlockPublicAccessExclusion) ToVpcBlockPublicAccessExclusionOutput() VpcBlockPublicAccessExclusionOutput {
	return i.ToVpcBlockPublicAccessExclusionOutputWithContext(context.Background())
}

func (i *VpcBlockPublicAccessExclusion) ToVpcBlockPublicAccessExclusionOutputWithContext(ctx context.Context) VpcBlockPublicAccessExclusionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcBlockPublicAccessExclusionOutput)
}

type VpcBlockPublicAccessExclusionOutput struct{ *pulumi.OutputState }

func (VpcBlockPublicAccessExclusionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcBlockPublicAccessExclusion)(nil)).Elem()
}

func (o VpcBlockPublicAccessExclusionOutput) ToVpcBlockPublicAccessExclusionOutput() VpcBlockPublicAccessExclusionOutput {
	return o
}

func (o VpcBlockPublicAccessExclusionOutput) ToVpcBlockPublicAccessExclusionOutputWithContext(ctx context.Context) VpcBlockPublicAccessExclusionOutput {
	return o
}

// The ID of the exclusion
func (o VpcBlockPublicAccessExclusionOutput) ExclusionId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcBlockPublicAccessExclusion) pulumi.StringOutput { return v.ExclusionId }).(pulumi.StringOutput)
}

// The desired Block Public Access Exclusion Mode for a specific VPC/Subnet.
func (o VpcBlockPublicAccessExclusionOutput) InternetGatewayExclusionMode() VpcBlockPublicAccessExclusionInternetGatewayExclusionModeOutput {
	return o.ApplyT(func(v *VpcBlockPublicAccessExclusion) VpcBlockPublicAccessExclusionInternetGatewayExclusionModeOutput {
		return v.InternetGatewayExclusionMode
	}).(VpcBlockPublicAccessExclusionInternetGatewayExclusionModeOutput)
}

// The ID of the subnet. Required only if you don't specify VpcId
func (o VpcBlockPublicAccessExclusionOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcBlockPublicAccessExclusion) pulumi.StringPtrOutput { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o VpcBlockPublicAccessExclusionOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *VpcBlockPublicAccessExclusion) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The ID of the vpc. Required only if you don't specify SubnetId.
func (o VpcBlockPublicAccessExclusionOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcBlockPublicAccessExclusion) pulumi.StringPtrOutput { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcBlockPublicAccessExclusionInput)(nil)).Elem(), &VpcBlockPublicAccessExclusion{})
	pulumi.RegisterOutputType(VpcBlockPublicAccessExclusionOutput{})
}
