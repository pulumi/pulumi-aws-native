// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::SubnetCidrBlock
func LookupSubnetCidrBlock(ctx *pulumi.Context, args *LookupSubnetCidrBlockArgs, opts ...pulumi.InvokeOption) (*LookupSubnetCidrBlockResult, error) {
	var rv LookupSubnetCidrBlockResult
	err := ctx.Invoke("aws-native:ec2:getSubnetCidrBlock", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSubnetCidrBlockArgs struct {
	Id string `pulumi:"id"`
}

type LookupSubnetCidrBlockResult struct {
	Id *string `pulumi:"id"`
}

func LookupSubnetCidrBlockOutput(ctx *pulumi.Context, args LookupSubnetCidrBlockOutputArgs, opts ...pulumi.InvokeOption) LookupSubnetCidrBlockResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSubnetCidrBlockResult, error) {
			args := v.(LookupSubnetCidrBlockArgs)
			r, err := LookupSubnetCidrBlock(ctx, &args, opts...)
			var s LookupSubnetCidrBlockResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSubnetCidrBlockResultOutput)
}

type LookupSubnetCidrBlockOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSubnetCidrBlockOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubnetCidrBlockArgs)(nil)).Elem()
}

type LookupSubnetCidrBlockResultOutput struct{ *pulumi.OutputState }

func (LookupSubnetCidrBlockResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubnetCidrBlockResult)(nil)).Elem()
}

func (o LookupSubnetCidrBlockResultOutput) ToLookupSubnetCidrBlockResultOutput() LookupSubnetCidrBlockResultOutput {
	return o
}

func (o LookupSubnetCidrBlockResultOutput) ToLookupSubnetCidrBlockResultOutputWithContext(ctx context.Context) LookupSubnetCidrBlockResultOutput {
	return o
}

func (o LookupSubnetCidrBlockResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSubnetCidrBlockResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubnetCidrBlockResultOutput{})
}
