// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::SecurityGroup
//
// Deprecated: SecurityGroup is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type SecurityGroup struct {
	pulumi.CustomResourceState

	GroupDescription     pulumi.StringOutput                 `pulumi:"groupDescription"`
	GroupId              pulumi.StringOutput                 `pulumi:"groupId"`
	GroupName            pulumi.StringPtrOutput              `pulumi:"groupName"`
	SecurityGroupEgress  SecurityGroupEgressTypeArrayOutput  `pulumi:"securityGroupEgress"`
	SecurityGroupIngress SecurityGroupIngressTypeArrayOutput `pulumi:"securityGroupIngress"`
	Tags                 SecurityGroupTagArrayOutput         `pulumi:"tags"`
	VpcId                pulumi.StringPtrOutput              `pulumi:"vpcId"`
}

// NewSecurityGroup registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroup(ctx *pulumi.Context,
	name string, args *SecurityGroupArgs, opts ...pulumi.ResourceOption) (*SecurityGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupDescription == nil {
		return nil, errors.New("invalid value for required argument 'GroupDescription'")
	}
	var resource SecurityGroup
	err := ctx.RegisterResource("aws-native:ec2:SecurityGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroup gets an existing SecurityGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupState, opts ...pulumi.ResourceOption) (*SecurityGroup, error) {
	var resource SecurityGroup
	err := ctx.ReadResource("aws-native:ec2:SecurityGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroup resources.
type securityGroupState struct {
}

type SecurityGroupState struct {
}

func (SecurityGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupState)(nil)).Elem()
}

type securityGroupArgs struct {
	GroupDescription     string                     `pulumi:"groupDescription"`
	GroupName            *string                    `pulumi:"groupName"`
	SecurityGroupEgress  []SecurityGroupEgressType  `pulumi:"securityGroupEgress"`
	SecurityGroupIngress []SecurityGroupIngressType `pulumi:"securityGroupIngress"`
	Tags                 []SecurityGroupTag         `pulumi:"tags"`
	VpcId                *string                    `pulumi:"vpcId"`
}

// The set of arguments for constructing a SecurityGroup resource.
type SecurityGroupArgs struct {
	GroupDescription     pulumi.StringInput
	GroupName            pulumi.StringPtrInput
	SecurityGroupEgress  SecurityGroupEgressTypeArrayInput
	SecurityGroupIngress SecurityGroupIngressTypeArrayInput
	Tags                 SecurityGroupTagArrayInput
	VpcId                pulumi.StringPtrInput
}

func (SecurityGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupArgs)(nil)).Elem()
}

type SecurityGroupInput interface {
	pulumi.Input

	ToSecurityGroupOutput() SecurityGroupOutput
	ToSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupOutput
}

func (*SecurityGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroup)(nil))
}

func (i *SecurityGroup) ToSecurityGroupOutput() SecurityGroupOutput {
	return i.ToSecurityGroupOutputWithContext(context.Background())
}

func (i *SecurityGroup) ToSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupOutput)
}

type SecurityGroupOutput struct{ *pulumi.OutputState }

func (SecurityGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecurityGroup)(nil))
}

func (o SecurityGroupOutput) ToSecurityGroupOutput() SecurityGroupOutput {
	return o
}

func (o SecurityGroupOutput) ToSecurityGroupOutputWithContext(ctx context.Context) SecurityGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SecurityGroupOutput{})
}
