// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::NetworkInterface
//
// Deprecated: NetworkInterface is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type NetworkInterface struct {
	pulumi.CustomResourceState

	Description                    pulumi.StringPtrOutput                                   `pulumi:"description"`
	GroupSet                       pulumi.StringArrayOutput                                 `pulumi:"groupSet"`
	InterfaceType                  pulumi.StringPtrOutput                                   `pulumi:"interfaceType"`
	Ipv6AddressCount               pulumi.IntPtrOutput                                      `pulumi:"ipv6AddressCount"`
	Ipv6Addresses                  NetworkInterfaceInstanceIpv6AddressArrayOutput           `pulumi:"ipv6Addresses"`
	PrimaryPrivateIpAddress        pulumi.StringOutput                                      `pulumi:"primaryPrivateIpAddress"`
	PrivateIpAddress               pulumi.StringPtrOutput                                   `pulumi:"privateIpAddress"`
	PrivateIpAddresses             NetworkInterfacePrivateIpAddressSpecificationArrayOutput `pulumi:"privateIpAddresses"`
	SecondaryPrivateIpAddressCount pulumi.IntPtrOutput                                      `pulumi:"secondaryPrivateIpAddressCount"`
	SecondaryPrivateIpAddresses    pulumi.StringArrayOutput                                 `pulumi:"secondaryPrivateIpAddresses"`
	SourceDestCheck                pulumi.BoolPtrOutput                                     `pulumi:"sourceDestCheck"`
	SubnetId                       pulumi.StringOutput                                      `pulumi:"subnetId"`
	Tags                           NetworkInterfaceTagArrayOutput                           `pulumi:"tags"`
}

// NewNetworkInterface registers a new resource with the given unique name, arguments, and options.
func NewNetworkInterface(ctx *pulumi.Context,
	name string, args *NetworkInterfaceArgs, opts ...pulumi.ResourceOption) (*NetworkInterface, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	var resource NetworkInterface
	err := ctx.RegisterResource("aws-native:ec2:NetworkInterface", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkInterface gets an existing NetworkInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkInterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkInterfaceState, opts ...pulumi.ResourceOption) (*NetworkInterface, error) {
	var resource NetworkInterface
	err := ctx.ReadResource("aws-native:ec2:NetworkInterface", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkInterface resources.
type networkInterfaceState struct {
}

type NetworkInterfaceState struct {
}

func (NetworkInterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInterfaceState)(nil)).Elem()
}

type networkInterfaceArgs struct {
	Description                    *string                                         `pulumi:"description"`
	GroupSet                       []string                                        `pulumi:"groupSet"`
	InterfaceType                  *string                                         `pulumi:"interfaceType"`
	Ipv6AddressCount               *int                                            `pulumi:"ipv6AddressCount"`
	Ipv6Addresses                  []NetworkInterfaceInstanceIpv6Address           `pulumi:"ipv6Addresses"`
	PrivateIpAddress               *string                                         `pulumi:"privateIpAddress"`
	PrivateIpAddresses             []NetworkInterfacePrivateIpAddressSpecification `pulumi:"privateIpAddresses"`
	SecondaryPrivateIpAddressCount *int                                            `pulumi:"secondaryPrivateIpAddressCount"`
	SourceDestCheck                *bool                                           `pulumi:"sourceDestCheck"`
	SubnetId                       string                                          `pulumi:"subnetId"`
	Tags                           []NetworkInterfaceTag                           `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkInterface resource.
type NetworkInterfaceArgs struct {
	Description                    pulumi.StringPtrInput
	GroupSet                       pulumi.StringArrayInput
	InterfaceType                  pulumi.StringPtrInput
	Ipv6AddressCount               pulumi.IntPtrInput
	Ipv6Addresses                  NetworkInterfaceInstanceIpv6AddressArrayInput
	PrivateIpAddress               pulumi.StringPtrInput
	PrivateIpAddresses             NetworkInterfacePrivateIpAddressSpecificationArrayInput
	SecondaryPrivateIpAddressCount pulumi.IntPtrInput
	SourceDestCheck                pulumi.BoolPtrInput
	SubnetId                       pulumi.StringInput
	Tags                           NetworkInterfaceTagArrayInput
}

func (NetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInterfaceArgs)(nil)).Elem()
}

type NetworkInterfaceInput interface {
	pulumi.Input

	ToNetworkInterfaceOutput() NetworkInterfaceOutput
	ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput
}

func (*NetworkInterface) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterface)(nil))
}

func (i *NetworkInterface) ToNetworkInterfaceOutput() NetworkInterfaceOutput {
	return i.ToNetworkInterfaceOutputWithContext(context.Background())
}

func (i *NetworkInterface) ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceOutput)
}

type NetworkInterfaceOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInterface)(nil))
}

func (o NetworkInterfaceOutput) ToNetworkInterfaceOutput() NetworkInterfaceOutput {
	return o
}

func (o NetworkInterfaceOutput) ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(NetworkInterfaceOutput{})
}
