// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::EC2::VPNGatewayRoutePropagation
func LookupVpnGatewayRoutePropagation(ctx *pulumi.Context, args *LookupVpnGatewayRoutePropagationArgs, opts ...pulumi.InvokeOption) (*LookupVpnGatewayRoutePropagationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpnGatewayRoutePropagationResult
	err := ctx.Invoke("aws-native:ec2:getVpnGatewayRoutePropagation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVpnGatewayRoutePropagationArgs struct {
	Id string `pulumi:"id"`
}

type LookupVpnGatewayRoutePropagationResult struct {
	Id            *string  `pulumi:"id"`
	RouteTableIds []string `pulumi:"routeTableIds"`
	VpnGatewayId  *string  `pulumi:"vpnGatewayId"`
}

func LookupVpnGatewayRoutePropagationOutput(ctx *pulumi.Context, args LookupVpnGatewayRoutePropagationOutputArgs, opts ...pulumi.InvokeOption) LookupVpnGatewayRoutePropagationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpnGatewayRoutePropagationResult, error) {
			args := v.(LookupVpnGatewayRoutePropagationArgs)
			r, err := LookupVpnGatewayRoutePropagation(ctx, &args, opts...)
			var s LookupVpnGatewayRoutePropagationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpnGatewayRoutePropagationResultOutput)
}

type LookupVpnGatewayRoutePropagationOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupVpnGatewayRoutePropagationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnGatewayRoutePropagationArgs)(nil)).Elem()
}

type LookupVpnGatewayRoutePropagationResultOutput struct{ *pulumi.OutputState }

func (LookupVpnGatewayRoutePropagationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnGatewayRoutePropagationResult)(nil)).Elem()
}

func (o LookupVpnGatewayRoutePropagationResultOutput) ToLookupVpnGatewayRoutePropagationResultOutput() LookupVpnGatewayRoutePropagationResultOutput {
	return o
}

func (o LookupVpnGatewayRoutePropagationResultOutput) ToLookupVpnGatewayRoutePropagationResultOutputWithContext(ctx context.Context) LookupVpnGatewayRoutePropagationResultOutput {
	return o
}

func (o LookupVpnGatewayRoutePropagationResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupVpnGatewayRoutePropagationResult] {
	return pulumix.Output[LookupVpnGatewayRoutePropagationResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupVpnGatewayRoutePropagationResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpnGatewayRoutePropagationResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupVpnGatewayRoutePropagationResultOutput) RouteTableIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpnGatewayRoutePropagationResult) []string { return v.RouteTableIds }).(pulumi.StringArrayOutput)
}

func (o LookupVpnGatewayRoutePropagationResultOutput) VpnGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpnGatewayRoutePropagationResult) *string { return v.VpnGatewayId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpnGatewayRoutePropagationResultOutput{})
}
