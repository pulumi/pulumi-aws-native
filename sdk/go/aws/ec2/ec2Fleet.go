// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::EC2Fleet
type Ec2Fleet struct {
	pulumi.CustomResourceState

	// Reserved.
	Context pulumi.StringPtrOutput `pulumi:"context"`
	// Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
	//
	// Supported only for fleets of type `maintain` .
	ExcessCapacityTerminationPolicy Ec2FleetExcessCapacityTerminationPolicyPtrOutput `pulumi:"excessCapacityTerminationPolicy"`
	// The ID of the EC2 Fleet.
	FleetId pulumi.StringOutput `pulumi:"fleetId"`
	// Specifies a launch template and overrides for an EC2 Fleet.
	//
	// `FleetLaunchTemplateConfigRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	LaunchTemplateConfigs Ec2FleetFleetLaunchTemplateConfigRequestArrayOutput `pulumi:"launchTemplateConfigs"`
	// Specifies the allocation strategy of On-Demand Instances in an EC2 Fleet.
	//
	// `OnDemandOptionsRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	OnDemandOptions Ec2FleetOnDemandOptionsRequestPtrOutput `pulumi:"onDemandOptions"`
	// Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type `maintain` . For more information, see [EC2 Fleet health checks](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks) in the *Amazon EC2 User Guide* .
	ReplaceUnhealthyInstances pulumi.BoolPtrOutput `pulumi:"replaceUnhealthyInstances"`
	// Specifies the configuration of Spot Instances for an EC2 Fleet.
	//
	// `SpotOptionsRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	SpotOptions Ec2FleetSpotOptionsRequestPtrOutput `pulumi:"spotOptions"`
	// Specifies the tags to apply to a resource when the resource is being created for an EC2 Fleet.
	//
	// `TagSpecification` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	TagSpecifications Ec2FleetTagSpecificationArrayOutput `pulumi:"tagSpecifications"`
	// Specifies the number of units to request for an EC2 Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is `maintain` , you can specify a target capacity of `0` and add capacity later.
	//
	// `TargetCapacitySpecificationRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	TargetCapacitySpecification Ec2FleetTargetCapacitySpecificationRequestOutput `pulumi:"targetCapacitySpecification"`
	// Indicates whether running instances should be terminated when the EC2 Fleet expires.
	TerminateInstancesWithExpiration pulumi.BoolPtrOutput `pulumi:"terminateInstancesWithExpiration"`
	// The fleet type. The default value is `maintain` .
	//
	// - `maintain` - The EC2 Fleet places an asynchronous request for your desired capacity, and continues to maintain your desired Spot capacity by replenishing interrupted Spot Instances.
	// - `request` - The EC2 Fleet places an asynchronous one-time request for your desired capacity, but does submit Spot requests in alternative capacity pools if Spot capacity is unavailable, and does not maintain Spot capacity if Spot Instances are interrupted.
	// - `instant` - The EC2 Fleet places a synchronous one-time request for your desired capacity, and returns errors for any instances that could not be launched.
	//
	// For more information, see [EC2 Fleet request types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-request-type.html) in the *Amazon EC2 User Guide* .
	Type Ec2FleetTypePtrOutput `pulumi:"type"`
	// The start date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). The default is to start fulfilling the request immediately.
	ValidFrom pulumi.StringPtrOutput `pulumi:"validFrom"`
	// The end date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
	ValidUntil pulumi.StringPtrOutput `pulumi:"validUntil"`
}

// NewEc2Fleet registers a new resource with the given unique name, arguments, and options.
func NewEc2Fleet(ctx *pulumi.Context,
	name string, args *Ec2FleetArgs, opts ...pulumi.ResourceOption) (*Ec2Fleet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LaunchTemplateConfigs == nil {
		return nil, errors.New("invalid value for required argument 'LaunchTemplateConfigs'")
	}
	if args.TargetCapacitySpecification == nil {
		return nil, errors.New("invalid value for required argument 'TargetCapacitySpecification'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"launchTemplateConfigs[*]",
		"onDemandOptions",
		"replaceUnhealthyInstances",
		"spotOptions",
		"tagSpecifications[*]",
		"terminateInstancesWithExpiration",
		"type",
		"validFrom",
		"validUntil",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ec2Fleet
	err := ctx.RegisterResource("aws-native:ec2:Ec2Fleet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEc2Fleet gets an existing Ec2Fleet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEc2Fleet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ec2FleetState, opts ...pulumi.ResourceOption) (*Ec2Fleet, error) {
	var resource Ec2Fleet
	err := ctx.ReadResource("aws-native:ec2:Ec2Fleet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ec2Fleet resources.
type ec2FleetState struct {
}

type Ec2FleetState struct {
}

func (Ec2FleetState) ElementType() reflect.Type {
	return reflect.TypeOf((*ec2FleetState)(nil)).Elem()
}

type ec2FleetArgs struct {
	// Reserved.
	Context *string `pulumi:"context"`
	// Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
	//
	// Supported only for fleets of type `maintain` .
	ExcessCapacityTerminationPolicy *Ec2FleetExcessCapacityTerminationPolicy `pulumi:"excessCapacityTerminationPolicy"`
	// Specifies a launch template and overrides for an EC2 Fleet.
	//
	// `FleetLaunchTemplateConfigRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	LaunchTemplateConfigs []Ec2FleetFleetLaunchTemplateConfigRequest `pulumi:"launchTemplateConfigs"`
	// Specifies the allocation strategy of On-Demand Instances in an EC2 Fleet.
	//
	// `OnDemandOptionsRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	OnDemandOptions *Ec2FleetOnDemandOptionsRequest `pulumi:"onDemandOptions"`
	// Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type `maintain` . For more information, see [EC2 Fleet health checks](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks) in the *Amazon EC2 User Guide* .
	ReplaceUnhealthyInstances *bool `pulumi:"replaceUnhealthyInstances"`
	// Specifies the configuration of Spot Instances for an EC2 Fleet.
	//
	// `SpotOptionsRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	SpotOptions *Ec2FleetSpotOptionsRequest `pulumi:"spotOptions"`
	// Specifies the tags to apply to a resource when the resource is being created for an EC2 Fleet.
	//
	// `TagSpecification` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	TagSpecifications []Ec2FleetTagSpecification `pulumi:"tagSpecifications"`
	// Specifies the number of units to request for an EC2 Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is `maintain` , you can specify a target capacity of `0` and add capacity later.
	//
	// `TargetCapacitySpecificationRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	TargetCapacitySpecification Ec2FleetTargetCapacitySpecificationRequest `pulumi:"targetCapacitySpecification"`
	// Indicates whether running instances should be terminated when the EC2 Fleet expires.
	TerminateInstancesWithExpiration *bool `pulumi:"terminateInstancesWithExpiration"`
	// The fleet type. The default value is `maintain` .
	//
	// - `maintain` - The EC2 Fleet places an asynchronous request for your desired capacity, and continues to maintain your desired Spot capacity by replenishing interrupted Spot Instances.
	// - `request` - The EC2 Fleet places an asynchronous one-time request for your desired capacity, but does submit Spot requests in alternative capacity pools if Spot capacity is unavailable, and does not maintain Spot capacity if Spot Instances are interrupted.
	// - `instant` - The EC2 Fleet places a synchronous one-time request for your desired capacity, and returns errors for any instances that could not be launched.
	//
	// For more information, see [EC2 Fleet request types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-request-type.html) in the *Amazon EC2 User Guide* .
	Type *Ec2FleetType `pulumi:"type"`
	// The start date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). The default is to start fulfilling the request immediately.
	ValidFrom *string `pulumi:"validFrom"`
	// The end date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
	ValidUntil *string `pulumi:"validUntil"`
}

// The set of arguments for constructing a Ec2Fleet resource.
type Ec2FleetArgs struct {
	// Reserved.
	Context pulumi.StringPtrInput
	// Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
	//
	// Supported only for fleets of type `maintain` .
	ExcessCapacityTerminationPolicy Ec2FleetExcessCapacityTerminationPolicyPtrInput
	// Specifies a launch template and overrides for an EC2 Fleet.
	//
	// `FleetLaunchTemplateConfigRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	LaunchTemplateConfigs Ec2FleetFleetLaunchTemplateConfigRequestArrayInput
	// Specifies the allocation strategy of On-Demand Instances in an EC2 Fleet.
	//
	// `OnDemandOptionsRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	OnDemandOptions Ec2FleetOnDemandOptionsRequestPtrInput
	// Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type `maintain` . For more information, see [EC2 Fleet health checks](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks) in the *Amazon EC2 User Guide* .
	ReplaceUnhealthyInstances pulumi.BoolPtrInput
	// Specifies the configuration of Spot Instances for an EC2 Fleet.
	//
	// `SpotOptionsRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	SpotOptions Ec2FleetSpotOptionsRequestPtrInput
	// Specifies the tags to apply to a resource when the resource is being created for an EC2 Fleet.
	//
	// `TagSpecification` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	TagSpecifications Ec2FleetTagSpecificationArrayInput
	// Specifies the number of units to request for an EC2 Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is `maintain` , you can specify a target capacity of `0` and add capacity later.
	//
	// `TargetCapacitySpecificationRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
	TargetCapacitySpecification Ec2FleetTargetCapacitySpecificationRequestInput
	// Indicates whether running instances should be terminated when the EC2 Fleet expires.
	TerminateInstancesWithExpiration pulumi.BoolPtrInput
	// The fleet type. The default value is `maintain` .
	//
	// - `maintain` - The EC2 Fleet places an asynchronous request for your desired capacity, and continues to maintain your desired Spot capacity by replenishing interrupted Spot Instances.
	// - `request` - The EC2 Fleet places an asynchronous one-time request for your desired capacity, but does submit Spot requests in alternative capacity pools if Spot capacity is unavailable, and does not maintain Spot capacity if Spot Instances are interrupted.
	// - `instant` - The EC2 Fleet places a synchronous one-time request for your desired capacity, and returns errors for any instances that could not be launched.
	//
	// For more information, see [EC2 Fleet request types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-request-type.html) in the *Amazon EC2 User Guide* .
	Type Ec2FleetTypePtrInput
	// The start date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). The default is to start fulfilling the request immediately.
	ValidFrom pulumi.StringPtrInput
	// The end date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
	ValidUntil pulumi.StringPtrInput
}

func (Ec2FleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ec2FleetArgs)(nil)).Elem()
}

type Ec2FleetInput interface {
	pulumi.Input

	ToEc2FleetOutput() Ec2FleetOutput
	ToEc2FleetOutputWithContext(ctx context.Context) Ec2FleetOutput
}

func (*Ec2Fleet) ElementType() reflect.Type {
	return reflect.TypeOf((**Ec2Fleet)(nil)).Elem()
}

func (i *Ec2Fleet) ToEc2FleetOutput() Ec2FleetOutput {
	return i.ToEc2FleetOutputWithContext(context.Background())
}

func (i *Ec2Fleet) ToEc2FleetOutputWithContext(ctx context.Context) Ec2FleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ec2FleetOutput)
}

type Ec2FleetOutput struct{ *pulumi.OutputState }

func (Ec2FleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ec2Fleet)(nil)).Elem()
}

func (o Ec2FleetOutput) ToEc2FleetOutput() Ec2FleetOutput {
	return o
}

func (o Ec2FleetOutput) ToEc2FleetOutputWithContext(ctx context.Context) Ec2FleetOutput {
	return o
}

// Reserved.
func (o Ec2FleetOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ec2Fleet) pulumi.StringPtrOutput { return v.Context }).(pulumi.StringPtrOutput)
}

// Indicates whether running instances should be terminated if the total target capacity of the EC2 Fleet is decreased below the current size of the EC2 Fleet.
//
// Supported only for fleets of type `maintain` .
func (o Ec2FleetOutput) ExcessCapacityTerminationPolicy() Ec2FleetExcessCapacityTerminationPolicyPtrOutput {
	return o.ApplyT(func(v *Ec2Fleet) Ec2FleetExcessCapacityTerminationPolicyPtrOutput {
		return v.ExcessCapacityTerminationPolicy
	}).(Ec2FleetExcessCapacityTerminationPolicyPtrOutput)
}

// The ID of the EC2 Fleet.
func (o Ec2FleetOutput) FleetId() pulumi.StringOutput {
	return o.ApplyT(func(v *Ec2Fleet) pulumi.StringOutput { return v.FleetId }).(pulumi.StringOutput)
}

// Specifies a launch template and overrides for an EC2 Fleet.
//
// `FleetLaunchTemplateConfigRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
func (o Ec2FleetOutput) LaunchTemplateConfigs() Ec2FleetFleetLaunchTemplateConfigRequestArrayOutput {
	return o.ApplyT(func(v *Ec2Fleet) Ec2FleetFleetLaunchTemplateConfigRequestArrayOutput { return v.LaunchTemplateConfigs }).(Ec2FleetFleetLaunchTemplateConfigRequestArrayOutput)
}

// Specifies the allocation strategy of On-Demand Instances in an EC2 Fleet.
//
// `OnDemandOptionsRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
func (o Ec2FleetOutput) OnDemandOptions() Ec2FleetOnDemandOptionsRequestPtrOutput {
	return o.ApplyT(func(v *Ec2Fleet) Ec2FleetOnDemandOptionsRequestPtrOutput { return v.OnDemandOptions }).(Ec2FleetOnDemandOptionsRequestPtrOutput)
}

// Indicates whether EC2 Fleet should replace unhealthy Spot Instances. Supported only for fleets of type `maintain` . For more information, see [EC2 Fleet health checks](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#ec2-fleet-health-checks) in the *Amazon EC2 User Guide* .
func (o Ec2FleetOutput) ReplaceUnhealthyInstances() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Ec2Fleet) pulumi.BoolPtrOutput { return v.ReplaceUnhealthyInstances }).(pulumi.BoolPtrOutput)
}

// Specifies the configuration of Spot Instances for an EC2 Fleet.
//
// `SpotOptionsRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
func (o Ec2FleetOutput) SpotOptions() Ec2FleetSpotOptionsRequestPtrOutput {
	return o.ApplyT(func(v *Ec2Fleet) Ec2FleetSpotOptionsRequestPtrOutput { return v.SpotOptions }).(Ec2FleetSpotOptionsRequestPtrOutput)
}

// Specifies the tags to apply to a resource when the resource is being created for an EC2 Fleet.
//
// `TagSpecification` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
func (o Ec2FleetOutput) TagSpecifications() Ec2FleetTagSpecificationArrayOutput {
	return o.ApplyT(func(v *Ec2Fleet) Ec2FleetTagSpecificationArrayOutput { return v.TagSpecifications }).(Ec2FleetTagSpecificationArrayOutput)
}

// Specifies the number of units to request for an EC2 Fleet. You can choose to set the target capacity in terms of instances or a performance characteristic that is important to your application workload, such as vCPUs, memory, or I/O. If the request type is `maintain` , you can specify a target capacity of `0` and add capacity later.
//
// `TargetCapacitySpecificationRequest` is a property of the [AWS::EC2::EC2Fleet](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html) resource.
func (o Ec2FleetOutput) TargetCapacitySpecification() Ec2FleetTargetCapacitySpecificationRequestOutput {
	return o.ApplyT(func(v *Ec2Fleet) Ec2FleetTargetCapacitySpecificationRequestOutput {
		return v.TargetCapacitySpecification
	}).(Ec2FleetTargetCapacitySpecificationRequestOutput)
}

// Indicates whether running instances should be terminated when the EC2 Fleet expires.
func (o Ec2FleetOutput) TerminateInstancesWithExpiration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Ec2Fleet) pulumi.BoolPtrOutput { return v.TerminateInstancesWithExpiration }).(pulumi.BoolPtrOutput)
}

// The fleet type. The default value is `maintain` .
//
// - `maintain` - The EC2 Fleet places an asynchronous request for your desired capacity, and continues to maintain your desired Spot capacity by replenishing interrupted Spot Instances.
// - `request` - The EC2 Fleet places an asynchronous one-time request for your desired capacity, but does submit Spot requests in alternative capacity pools if Spot capacity is unavailable, and does not maintain Spot capacity if Spot Instances are interrupted.
// - `instant` - The EC2 Fleet places a synchronous one-time request for your desired capacity, and returns errors for any instances that could not be launched.
//
// For more information, see [EC2 Fleet request types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-request-type.html) in the *Amazon EC2 User Guide* .
func (o Ec2FleetOutput) Type() Ec2FleetTypePtrOutput {
	return o.ApplyT(func(v *Ec2Fleet) Ec2FleetTypePtrOutput { return v.Type }).(Ec2FleetTypePtrOutput)
}

// The start date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). The default is to start fulfilling the request immediately.
func (o Ec2FleetOutput) ValidFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ec2Fleet) pulumi.StringPtrOutput { return v.ValidFrom }).(pulumi.StringPtrOutput)
}

// The end date and time of the request, in UTC format (for example, *YYYY* - *MM* - *DD* T *HH* : *MM* : *SS* Z). At this point, no new EC2 Fleet requests are placed or able to fulfill the request. If no value is specified, the request remains until you cancel it.
func (o Ec2FleetOutput) ValidUntil() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ec2Fleet) pulumi.StringPtrOutput { return v.ValidUntil }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ec2FleetInput)(nil)).Elem(), &Ec2Fleet{})
	pulumi.RegisterOutputType(Ec2FleetOutput{})
}
