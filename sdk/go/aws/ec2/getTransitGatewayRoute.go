// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::TransitGatewayRoute
func LookupTransitGatewayRoute(ctx *pulumi.Context, args *LookupTransitGatewayRouteArgs, opts ...pulumi.InvokeOption) (*LookupTransitGatewayRouteResult, error) {
	var rv LookupTransitGatewayRouteResult
	err := ctx.Invoke("aws-native:ec2:getTransitGatewayRoute", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTransitGatewayRouteArgs struct {
	Id string `pulumi:"id"`
}

type LookupTransitGatewayRouteResult struct {
	Id *string `pulumi:"id"`
}

func LookupTransitGatewayRouteOutput(ctx *pulumi.Context, args LookupTransitGatewayRouteOutputArgs, opts ...pulumi.InvokeOption) LookupTransitGatewayRouteResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTransitGatewayRouteResult, error) {
			args := v.(LookupTransitGatewayRouteArgs)
			r, err := LookupTransitGatewayRoute(ctx, &args, opts...)
			var s LookupTransitGatewayRouteResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTransitGatewayRouteResultOutput)
}

type LookupTransitGatewayRouteOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTransitGatewayRouteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayRouteArgs)(nil)).Elem()
}

type LookupTransitGatewayRouteResultOutput struct{ *pulumi.OutputState }

func (LookupTransitGatewayRouteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayRouteResult)(nil)).Elem()
}

func (o LookupTransitGatewayRouteResultOutput) ToLookupTransitGatewayRouteResultOutput() LookupTransitGatewayRouteResultOutput {
	return o
}

func (o LookupTransitGatewayRouteResultOutput) ToLookupTransitGatewayRouteResultOutputWithContext(ctx context.Context) LookupTransitGatewayRouteResultOutput {
	return o
}

func (o LookupTransitGatewayRouteResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayRouteResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTransitGatewayRouteResultOutput{})
}
