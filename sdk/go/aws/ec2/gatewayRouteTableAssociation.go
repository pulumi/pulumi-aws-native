// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Associates a gateway with a route table. The gateway and route table must be in the same VPC. This association causes the incoming traffic to the gateway to be routed according to the routes in the route table.
type GatewayRouteTableAssociation struct {
	pulumi.CustomResourceState

	// The route table association ID.
	AssociationId pulumi.StringOutput `pulumi:"associationId"`
	// The ID of the gateway.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
	// The ID of the route table.
	RouteTableId pulumi.StringOutput `pulumi:"routeTableId"`
}

// NewGatewayRouteTableAssociation registers a new resource with the given unique name, arguments, and options.
func NewGatewayRouteTableAssociation(ctx *pulumi.Context,
	name string, args *GatewayRouteTableAssociationArgs, opts ...pulumi.ResourceOption) (*GatewayRouteTableAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayId'")
	}
	if args.RouteTableId == nil {
		return nil, errors.New("invalid value for required argument 'RouteTableId'")
	}
	var resource GatewayRouteTableAssociation
	err := ctx.RegisterResource("aws-native:ec2:GatewayRouteTableAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGatewayRouteTableAssociation gets an existing GatewayRouteTableAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGatewayRouteTableAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GatewayRouteTableAssociationState, opts ...pulumi.ResourceOption) (*GatewayRouteTableAssociation, error) {
	var resource GatewayRouteTableAssociation
	err := ctx.ReadResource("aws-native:ec2:GatewayRouteTableAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GatewayRouteTableAssociation resources.
type gatewayRouteTableAssociationState struct {
}

type GatewayRouteTableAssociationState struct {
}

func (GatewayRouteTableAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayRouteTableAssociationState)(nil)).Elem()
}

type gatewayRouteTableAssociationArgs struct {
	// The ID of the gateway.
	GatewayId string `pulumi:"gatewayId"`
	// The ID of the route table.
	RouteTableId string `pulumi:"routeTableId"`
}

// The set of arguments for constructing a GatewayRouteTableAssociation resource.
type GatewayRouteTableAssociationArgs struct {
	// The ID of the gateway.
	GatewayId pulumi.StringInput
	// The ID of the route table.
	RouteTableId pulumi.StringInput
}

func (GatewayRouteTableAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gatewayRouteTableAssociationArgs)(nil)).Elem()
}

type GatewayRouteTableAssociationInput interface {
	pulumi.Input

	ToGatewayRouteTableAssociationOutput() GatewayRouteTableAssociationOutput
	ToGatewayRouteTableAssociationOutputWithContext(ctx context.Context) GatewayRouteTableAssociationOutput
}

func (*GatewayRouteTableAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteTableAssociation)(nil))
}

func (i *GatewayRouteTableAssociation) ToGatewayRouteTableAssociationOutput() GatewayRouteTableAssociationOutput {
	return i.ToGatewayRouteTableAssociationOutputWithContext(context.Background())
}

func (i *GatewayRouteTableAssociation) ToGatewayRouteTableAssociationOutputWithContext(ctx context.Context) GatewayRouteTableAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GatewayRouteTableAssociationOutput)
}

type GatewayRouteTableAssociationOutput struct{ *pulumi.OutputState }

func (GatewayRouteTableAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GatewayRouteTableAssociation)(nil))
}

func (o GatewayRouteTableAssociationOutput) ToGatewayRouteTableAssociationOutput() GatewayRouteTableAssociationOutput {
	return o
}

func (o GatewayRouteTableAssociationOutput) ToGatewayRouteTableAssociationOutputWithContext(ctx context.Context) GatewayRouteTableAssociationOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GatewayRouteTableAssociationInput)(nil)).Elem(), &GatewayRouteTableAssociation{})
	pulumi.RegisterOutputType(GatewayRouteTableAssociationOutput{})
}
