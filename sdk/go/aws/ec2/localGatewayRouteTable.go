// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Describes a route table for a local gateway.
type LocalGatewayRouteTable struct {
	pulumi.CustomResourceState

	// The ID of the local gateway.
	LocalGatewayId pulumi.StringOutput `pulumi:"localGatewayId"`
	// The ARN of the local gateway route table.
	LocalGatewayRouteTableArn pulumi.StringOutput `pulumi:"localGatewayRouteTableArn"`
	// The ID of the local gateway route table.
	LocalGatewayRouteTableId pulumi.StringOutput `pulumi:"localGatewayRouteTableId"`
	// The mode of the local gateway route table.
	Mode pulumi.StringPtrOutput `pulumi:"mode"`
	// The ARN of the outpost.
	OutpostArn pulumi.StringOutput `pulumi:"outpostArn"`
	// The owner of the local gateway route table.
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// The state of the local gateway route table.
	State pulumi.StringOutput `pulumi:"state"`
	// The tags for the local gateway route table.
	Tags LocalGatewayRouteTableTagArrayOutput `pulumi:"tags"`
}

// NewLocalGatewayRouteTable registers a new resource with the given unique name, arguments, and options.
func NewLocalGatewayRouteTable(ctx *pulumi.Context,
	name string, args *LocalGatewayRouteTableArgs, opts ...pulumi.ResourceOption) (*LocalGatewayRouteTable, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LocalGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'LocalGatewayId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"localGatewayId",
		"mode",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LocalGatewayRouteTable
	err := ctx.RegisterResource("aws-native:ec2:LocalGatewayRouteTable", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalGatewayRouteTable gets an existing LocalGatewayRouteTable resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalGatewayRouteTable(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalGatewayRouteTableState, opts ...pulumi.ResourceOption) (*LocalGatewayRouteTable, error) {
	var resource LocalGatewayRouteTable
	err := ctx.ReadResource("aws-native:ec2:LocalGatewayRouteTable", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocalGatewayRouteTable resources.
type localGatewayRouteTableState struct {
}

type LocalGatewayRouteTableState struct {
}

func (LocalGatewayRouteTableState) ElementType() reflect.Type {
	return reflect.TypeOf((*localGatewayRouteTableState)(nil)).Elem()
}

type localGatewayRouteTableArgs struct {
	// The ID of the local gateway.
	LocalGatewayId string `pulumi:"localGatewayId"`
	// The mode of the local gateway route table.
	Mode *string `pulumi:"mode"`
	// The tags for the local gateway route table.
	Tags []LocalGatewayRouteTableTag `pulumi:"tags"`
}

// The set of arguments for constructing a LocalGatewayRouteTable resource.
type LocalGatewayRouteTableArgs struct {
	// The ID of the local gateway.
	LocalGatewayId pulumi.StringInput
	// The mode of the local gateway route table.
	Mode pulumi.StringPtrInput
	// The tags for the local gateway route table.
	Tags LocalGatewayRouteTableTagArrayInput
}

func (LocalGatewayRouteTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localGatewayRouteTableArgs)(nil)).Elem()
}

type LocalGatewayRouteTableInput interface {
	pulumi.Input

	ToLocalGatewayRouteTableOutput() LocalGatewayRouteTableOutput
	ToLocalGatewayRouteTableOutputWithContext(ctx context.Context) LocalGatewayRouteTableOutput
}

func (*LocalGatewayRouteTable) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalGatewayRouteTable)(nil)).Elem()
}

func (i *LocalGatewayRouteTable) ToLocalGatewayRouteTableOutput() LocalGatewayRouteTableOutput {
	return i.ToLocalGatewayRouteTableOutputWithContext(context.Background())
}

func (i *LocalGatewayRouteTable) ToLocalGatewayRouteTableOutputWithContext(ctx context.Context) LocalGatewayRouteTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalGatewayRouteTableOutput)
}

func (i *LocalGatewayRouteTable) ToOutput(ctx context.Context) pulumix.Output[*LocalGatewayRouteTable] {
	return pulumix.Output[*LocalGatewayRouteTable]{
		OutputState: i.ToLocalGatewayRouteTableOutputWithContext(ctx).OutputState,
	}
}

type LocalGatewayRouteTableOutput struct{ *pulumi.OutputState }

func (LocalGatewayRouteTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalGatewayRouteTable)(nil)).Elem()
}

func (o LocalGatewayRouteTableOutput) ToLocalGatewayRouteTableOutput() LocalGatewayRouteTableOutput {
	return o
}

func (o LocalGatewayRouteTableOutput) ToLocalGatewayRouteTableOutputWithContext(ctx context.Context) LocalGatewayRouteTableOutput {
	return o
}

func (o LocalGatewayRouteTableOutput) ToOutput(ctx context.Context) pulumix.Output[*LocalGatewayRouteTable] {
	return pulumix.Output[*LocalGatewayRouteTable]{
		OutputState: o.OutputState,
	}
}

// The ID of the local gateway.
func (o LocalGatewayRouteTableOutput) LocalGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalGatewayRouteTable) pulumi.StringOutput { return v.LocalGatewayId }).(pulumi.StringOutput)
}

// The ARN of the local gateway route table.
func (o LocalGatewayRouteTableOutput) LocalGatewayRouteTableArn() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalGatewayRouteTable) pulumi.StringOutput { return v.LocalGatewayRouteTableArn }).(pulumi.StringOutput)
}

// The ID of the local gateway route table.
func (o LocalGatewayRouteTableOutput) LocalGatewayRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalGatewayRouteTable) pulumi.StringOutput { return v.LocalGatewayRouteTableId }).(pulumi.StringOutput)
}

// The mode of the local gateway route table.
func (o LocalGatewayRouteTableOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocalGatewayRouteTable) pulumi.StringPtrOutput { return v.Mode }).(pulumi.StringPtrOutput)
}

// The ARN of the outpost.
func (o LocalGatewayRouteTableOutput) OutpostArn() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalGatewayRouteTable) pulumi.StringOutput { return v.OutpostArn }).(pulumi.StringOutput)
}

// The owner of the local gateway route table.
func (o LocalGatewayRouteTableOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalGatewayRouteTable) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

// The state of the local gateway route table.
func (o LocalGatewayRouteTableOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *LocalGatewayRouteTable) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The tags for the local gateway route table.
func (o LocalGatewayRouteTableOutput) Tags() LocalGatewayRouteTableTagArrayOutput {
	return o.ApplyT(func(v *LocalGatewayRouteTable) LocalGatewayRouteTableTagArrayOutput { return v.Tags }).(LocalGatewayRouteTableTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalGatewayRouteTableInput)(nil)).Elem(), &LocalGatewayRouteTable{})
	pulumi.RegisterOutputType(LocalGatewayRouteTableOutput{})
}
