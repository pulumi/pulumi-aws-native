// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::TransitGatewayAttachment
func LookupTransitGatewayAttachment(ctx *pulumi.Context, args *LookupTransitGatewayAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupTransitGatewayAttachmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTransitGatewayAttachmentResult
	err := ctx.Invoke("aws-native:ec2:getTransitGatewayAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTransitGatewayAttachmentArgs struct {
	// The ID of the attachment.
	Id string `pulumi:"id"`
}

type LookupTransitGatewayAttachmentResult struct {
	// The ID of the attachment.
	Id *string `pulumi:"id"`
	// The options for the transit gateway vpc attachment.
	Options *OptionsProperties `pulumi:"options"`
	// The IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.
	SubnetIds []string `pulumi:"subnetIds"`
	// The tags for the attachment.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupTransitGatewayAttachmentOutput(ctx *pulumi.Context, args LookupTransitGatewayAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupTransitGatewayAttachmentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTransitGatewayAttachmentResultOutput, error) {
			args := v.(LookupTransitGatewayAttachmentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getTransitGatewayAttachment", args, LookupTransitGatewayAttachmentResultOutput{}, options).(LookupTransitGatewayAttachmentResultOutput), nil
		}).(LookupTransitGatewayAttachmentResultOutput)
}

type LookupTransitGatewayAttachmentOutputArgs struct {
	// The ID of the attachment.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTransitGatewayAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayAttachmentArgs)(nil)).Elem()
}

type LookupTransitGatewayAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupTransitGatewayAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayAttachmentResult)(nil)).Elem()
}

func (o LookupTransitGatewayAttachmentResultOutput) ToLookupTransitGatewayAttachmentResultOutput() LookupTransitGatewayAttachmentResultOutput {
	return o
}

func (o LookupTransitGatewayAttachmentResultOutput) ToLookupTransitGatewayAttachmentResultOutputWithContext(ctx context.Context) LookupTransitGatewayAttachmentResultOutput {
	return o
}

// The ID of the attachment.
func (o LookupTransitGatewayAttachmentResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayAttachmentResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The options for the transit gateway vpc attachment.
func (o LookupTransitGatewayAttachmentResultOutput) Options() OptionsPropertiesPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayAttachmentResult) *OptionsProperties { return v.Options }).(OptionsPropertiesPtrOutput)
}

// The IDs of one or more subnets. You can specify only one subnet per Availability Zone. You must specify at least one subnet, but we recommend that you specify two subnets for better availability. The transit gateway uses one IP address from each specified subnet.
func (o LookupTransitGatewayAttachmentResultOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTransitGatewayAttachmentResult) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The tags for the attachment.
func (o LookupTransitGatewayAttachmentResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupTransitGatewayAttachmentResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTransitGatewayAttachmentResultOutput{})
}
