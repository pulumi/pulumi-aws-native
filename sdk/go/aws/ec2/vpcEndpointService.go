// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::EC2::VPCEndpointService
type VpcEndpointService struct {
	pulumi.CustomResourceState

	AcceptanceRequired         pulumi.BoolPtrOutput     `pulumi:"acceptanceRequired"`
	ContributorInsightsEnabled pulumi.BoolPtrOutput     `pulumi:"contributorInsightsEnabled"`
	GatewayLoadBalancerArns    pulumi.StringArrayOutput `pulumi:"gatewayLoadBalancerArns"`
	NetworkLoadBalancerArns    pulumi.StringArrayOutput `pulumi:"networkLoadBalancerArns"`
	PayerResponsibility        pulumi.StringPtrOutput   `pulumi:"payerResponsibility"`
	ServiceId                  pulumi.StringOutput      `pulumi:"serviceId"`
}

// NewVpcEndpointService registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpointService(ctx *pulumi.Context,
	name string, args *VpcEndpointServiceArgs, opts ...pulumi.ResourceOption) (*VpcEndpointService, error) {
	if args == nil {
		args = &VpcEndpointServiceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcEndpointService
	err := ctx.RegisterResource("aws-native:ec2:VpcEndpointService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpointService gets an existing VpcEndpointService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpointService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEndpointServiceState, opts ...pulumi.ResourceOption) (*VpcEndpointService, error) {
	var resource VpcEndpointService
	err := ctx.ReadResource("aws-native:ec2:VpcEndpointService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEndpointService resources.
type vpcEndpointServiceState struct {
}

type VpcEndpointServiceState struct {
}

func (VpcEndpointServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointServiceState)(nil)).Elem()
}

type vpcEndpointServiceArgs struct {
	AcceptanceRequired         *bool    `pulumi:"acceptanceRequired"`
	ContributorInsightsEnabled *bool    `pulumi:"contributorInsightsEnabled"`
	GatewayLoadBalancerArns    []string `pulumi:"gatewayLoadBalancerArns"`
	NetworkLoadBalancerArns    []string `pulumi:"networkLoadBalancerArns"`
	PayerResponsibility        *string  `pulumi:"payerResponsibility"`
}

// The set of arguments for constructing a VpcEndpointService resource.
type VpcEndpointServiceArgs struct {
	AcceptanceRequired         pulumi.BoolPtrInput
	ContributorInsightsEnabled pulumi.BoolPtrInput
	GatewayLoadBalancerArns    pulumi.StringArrayInput
	NetworkLoadBalancerArns    pulumi.StringArrayInput
	PayerResponsibility        pulumi.StringPtrInput
}

func (VpcEndpointServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointServiceArgs)(nil)).Elem()
}

type VpcEndpointServiceInput interface {
	pulumi.Input

	ToVpcEndpointServiceOutput() VpcEndpointServiceOutput
	ToVpcEndpointServiceOutputWithContext(ctx context.Context) VpcEndpointServiceOutput
}

func (*VpcEndpointService) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointService)(nil)).Elem()
}

func (i *VpcEndpointService) ToVpcEndpointServiceOutput() VpcEndpointServiceOutput {
	return i.ToVpcEndpointServiceOutputWithContext(context.Background())
}

func (i *VpcEndpointService) ToVpcEndpointServiceOutputWithContext(ctx context.Context) VpcEndpointServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointServiceOutput)
}

func (i *VpcEndpointService) ToOutput(ctx context.Context) pulumix.Output[*VpcEndpointService] {
	return pulumix.Output[*VpcEndpointService]{
		OutputState: i.ToVpcEndpointServiceOutputWithContext(ctx).OutputState,
	}
}

type VpcEndpointServiceOutput struct{ *pulumi.OutputState }

func (VpcEndpointServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointService)(nil)).Elem()
}

func (o VpcEndpointServiceOutput) ToVpcEndpointServiceOutput() VpcEndpointServiceOutput {
	return o
}

func (o VpcEndpointServiceOutput) ToVpcEndpointServiceOutputWithContext(ctx context.Context) VpcEndpointServiceOutput {
	return o
}

func (o VpcEndpointServiceOutput) ToOutput(ctx context.Context) pulumix.Output[*VpcEndpointService] {
	return pulumix.Output[*VpcEndpointService]{
		OutputState: o.OutputState,
	}
}

func (o VpcEndpointServiceOutput) AcceptanceRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcEndpointService) pulumi.BoolPtrOutput { return v.AcceptanceRequired }).(pulumi.BoolPtrOutput)
}

func (o VpcEndpointServiceOutput) ContributorInsightsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VpcEndpointService) pulumi.BoolPtrOutput { return v.ContributorInsightsEnabled }).(pulumi.BoolPtrOutput)
}

func (o VpcEndpointServiceOutput) GatewayLoadBalancerArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcEndpointService) pulumi.StringArrayOutput { return v.GatewayLoadBalancerArns }).(pulumi.StringArrayOutput)
}

func (o VpcEndpointServiceOutput) NetworkLoadBalancerArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcEndpointService) pulumi.StringArrayOutput { return v.NetworkLoadBalancerArns }).(pulumi.StringArrayOutput)
}

func (o VpcEndpointServiceOutput) PayerResponsibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEndpointService) pulumi.StringPtrOutput { return v.PayerResponsibility }).(pulumi.StringPtrOutput)
}

func (o VpcEndpointServiceOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointService) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointServiceInput)(nil)).Elem(), &VpcEndpointService{})
	pulumi.RegisterOutputType(VpcEndpointServiceOutput{})
}
