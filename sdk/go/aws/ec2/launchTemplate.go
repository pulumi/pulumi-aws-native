// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies the properties for creating a launch template.
//
//	The minimum required properties for specifying a launch template are as follows:
//	 +  You must specify at least one property for the launch template data.
//	 +  You do not need to specify a name for the launch template. If you do not specify a name, CFN creates the name for you.
//
//	A launch template can contain some or all of the configuration information to launch an instance. When you launch an instance using a launch template, instance properties that are not specified in the launch template use default values, except the ``ImageId`` property, which has no default value. If you do not specify an AMI ID for the launch template ``ImageId`` property, you must specify an AMI ID for the instance ``ImageId`` property.
//	For more information, see [Launch an instance from a launch template](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html) in the *Amazon EC2 User Guide*.
type LaunchTemplate struct {
	pulumi.CustomResourceState

	DefaultVersionNumber pulumi.StringOutput `pulumi:"defaultVersionNumber"`
	LatestVersionNumber  pulumi.StringOutput `pulumi:"latestVersionNumber"`
	// The information for the launch template.
	LaunchTemplateData LaunchTemplateDataOutput `pulumi:"launchTemplateData"`
	LaunchTemplateId   pulumi.StringOutput      `pulumi:"launchTemplateId"`
	// A name for the launch template.
	LaunchTemplateName pulumi.StringPtrOutput `pulumi:"launchTemplateName"`
	// The tags to apply to the launch template on creation. To tag the launch template, the resource type must be ``launch-template``.
	//  To specify the tags for the resources that are created when an instance is launched, you must use [TagSpecifications](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-tagspecifications).
	TagSpecifications LaunchTemplateTagSpecificationArrayOutput `pulumi:"tagSpecifications"`
	// A description for the first version of the launch template.
	VersionDescription pulumi.StringPtrOutput `pulumi:"versionDescription"`
}

// NewLaunchTemplate registers a new resource with the given unique name, arguments, and options.
func NewLaunchTemplate(ctx *pulumi.Context,
	name string, args *LaunchTemplateArgs, opts ...pulumi.ResourceOption) (*LaunchTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LaunchTemplateData == nil {
		return nil, errors.New("invalid value for required argument 'LaunchTemplateData'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"launchTemplateName",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LaunchTemplate
	err := ctx.RegisterResource("aws-native:ec2:LaunchTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLaunchTemplate gets an existing LaunchTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLaunchTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LaunchTemplateState, opts ...pulumi.ResourceOption) (*LaunchTemplate, error) {
	var resource LaunchTemplate
	err := ctx.ReadResource("aws-native:ec2:LaunchTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LaunchTemplate resources.
type launchTemplateState struct {
}

type LaunchTemplateState struct {
}

func (LaunchTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*launchTemplateState)(nil)).Elem()
}

type launchTemplateArgs struct {
	// The information for the launch template.
	LaunchTemplateData LaunchTemplateData `pulumi:"launchTemplateData"`
	// A name for the launch template.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	// The tags to apply to the launch template on creation. To tag the launch template, the resource type must be ``launch-template``.
	//  To specify the tags for the resources that are created when an instance is launched, you must use [TagSpecifications](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-tagspecifications).
	TagSpecifications []LaunchTemplateTagSpecification `pulumi:"tagSpecifications"`
	// A description for the first version of the launch template.
	VersionDescription *string `pulumi:"versionDescription"`
}

// The set of arguments for constructing a LaunchTemplate resource.
type LaunchTemplateArgs struct {
	// The information for the launch template.
	LaunchTemplateData LaunchTemplateDataInput
	// A name for the launch template.
	LaunchTemplateName pulumi.StringPtrInput
	// The tags to apply to the launch template on creation. To tag the launch template, the resource type must be ``launch-template``.
	//  To specify the tags for the resources that are created when an instance is launched, you must use [TagSpecifications](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-tagspecifications).
	TagSpecifications LaunchTemplateTagSpecificationArrayInput
	// A description for the first version of the launch template.
	VersionDescription pulumi.StringPtrInput
}

func (LaunchTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*launchTemplateArgs)(nil)).Elem()
}

type LaunchTemplateInput interface {
	pulumi.Input

	ToLaunchTemplateOutput() LaunchTemplateOutput
	ToLaunchTemplateOutputWithContext(ctx context.Context) LaunchTemplateOutput
}

func (*LaunchTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplate)(nil)).Elem()
}

func (i *LaunchTemplate) ToLaunchTemplateOutput() LaunchTemplateOutput {
	return i.ToLaunchTemplateOutputWithContext(context.Background())
}

func (i *LaunchTemplate) ToLaunchTemplateOutputWithContext(ctx context.Context) LaunchTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LaunchTemplateOutput)
}

type LaunchTemplateOutput struct{ *pulumi.OutputState }

func (LaunchTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LaunchTemplate)(nil)).Elem()
}

func (o LaunchTemplateOutput) ToLaunchTemplateOutput() LaunchTemplateOutput {
	return o
}

func (o LaunchTemplateOutput) ToLaunchTemplateOutputWithContext(ctx context.Context) LaunchTemplateOutput {
	return o
}

func (o LaunchTemplateOutput) DefaultVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringOutput { return v.DefaultVersionNumber }).(pulumi.StringOutput)
}

func (o LaunchTemplateOutput) LatestVersionNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringOutput { return v.LatestVersionNumber }).(pulumi.StringOutput)
}

// The information for the launch template.
func (o LaunchTemplateOutput) LaunchTemplateData() LaunchTemplateDataOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateDataOutput { return v.LaunchTemplateData }).(LaunchTemplateDataOutput)
}

func (o LaunchTemplateOutput) LaunchTemplateId() pulumi.StringOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringOutput { return v.LaunchTemplateId }).(pulumi.StringOutput)
}

// A name for the launch template.
func (o LaunchTemplateOutput) LaunchTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringPtrOutput { return v.LaunchTemplateName }).(pulumi.StringPtrOutput)
}

// The tags to apply to the launch template on creation. To tag the launch template, the resource type must be “launch-template“.
//
//	To specify the tags for the resources that are created when an instance is launched, you must use [TagSpecifications](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-launchtemplate.html#cfn-ec2-launchtemplate-tagspecifications).
func (o LaunchTemplateOutput) TagSpecifications() LaunchTemplateTagSpecificationArrayOutput {
	return o.ApplyT(func(v *LaunchTemplate) LaunchTemplateTagSpecificationArrayOutput { return v.TagSpecifications }).(LaunchTemplateTagSpecificationArrayOutput)
}

// A description for the first version of the launch template.
func (o LaunchTemplateOutput) VersionDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LaunchTemplate) pulumi.StringPtrOutput { return v.VersionDescription }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LaunchTemplateInput)(nil)).Elem(), &LaunchTemplate{})
	pulumi.RegisterOutputType(LaunchTemplateOutput{})
}
