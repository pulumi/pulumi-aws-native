// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::EC2::TrafficMirrorFilter
func LookupTrafficMirrorFilter(ctx *pulumi.Context, args *LookupTrafficMirrorFilterArgs, opts ...pulumi.InvokeOption) (*LookupTrafficMirrorFilterResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTrafficMirrorFilterResult
	err := ctx.Invoke("aws-native:ec2:getTrafficMirrorFilter", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTrafficMirrorFilterArgs struct {
	// The ID of a traffic mirror filter.
	Id string `pulumi:"id"`
}

type LookupTrafficMirrorFilterResult struct {
	// The ID of a traffic mirror filter.
	Id *string `pulumi:"id"`
	// The network service that is associated with the traffic mirror filter.
	NetworkServices []TrafficMirrorFilterTrafficMirrorNetworkService `pulumi:"networkServices"`
	// The tags for a traffic mirror filter.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupTrafficMirrorFilterOutput(ctx *pulumi.Context, args LookupTrafficMirrorFilterOutputArgs, opts ...pulumi.InvokeOption) LookupTrafficMirrorFilterResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTrafficMirrorFilterResultOutput, error) {
			args := v.(LookupTrafficMirrorFilterArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getTrafficMirrorFilter", args, LookupTrafficMirrorFilterResultOutput{}, options).(LookupTrafficMirrorFilterResultOutput), nil
		}).(LookupTrafficMirrorFilterResultOutput)
}

type LookupTrafficMirrorFilterOutputArgs struct {
	// The ID of a traffic mirror filter.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTrafficMirrorFilterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrafficMirrorFilterArgs)(nil)).Elem()
}

type LookupTrafficMirrorFilterResultOutput struct{ *pulumi.OutputState }

func (LookupTrafficMirrorFilterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTrafficMirrorFilterResult)(nil)).Elem()
}

func (o LookupTrafficMirrorFilterResultOutput) ToLookupTrafficMirrorFilterResultOutput() LookupTrafficMirrorFilterResultOutput {
	return o
}

func (o LookupTrafficMirrorFilterResultOutput) ToLookupTrafficMirrorFilterResultOutputWithContext(ctx context.Context) LookupTrafficMirrorFilterResultOutput {
	return o
}

// The ID of a traffic mirror filter.
func (o LookupTrafficMirrorFilterResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTrafficMirrorFilterResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The network service that is associated with the traffic mirror filter.
func (o LookupTrafficMirrorFilterResultOutput) NetworkServices() TrafficMirrorFilterTrafficMirrorNetworkServiceArrayOutput {
	return o.ApplyT(func(v LookupTrafficMirrorFilterResult) []TrafficMirrorFilterTrafficMirrorNetworkService {
		return v.NetworkServices
	}).(TrafficMirrorFilterTrafficMirrorNetworkServiceArrayOutput)
}

// The tags for a traffic mirror filter.
func (o LookupTrafficMirrorFilterResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupTrafficMirrorFilterResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTrafficMirrorFilterResultOutput{})
}
