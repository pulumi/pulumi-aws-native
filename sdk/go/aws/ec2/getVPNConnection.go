// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::VPNConnection
func LookupVPNConnection(ctx *pulumi.Context, args *LookupVPNConnectionArgs, opts ...pulumi.InvokeOption) (*LookupVPNConnectionResult, error) {
	var rv LookupVPNConnectionResult
	err := ctx.Invoke("aws-native:ec2:getVPNConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVPNConnectionArgs struct {
	// The provider-assigned unique ID for this managed resource
	VpnConnectionId string `pulumi:"vpnConnectionId"`
}

type LookupVPNConnectionResult struct {
	// Any tags assigned to the VPN connection.
	Tags []VPNConnectionTag `pulumi:"tags"`
	// The provider-assigned unique ID for this managed resource
	VpnConnectionId *string `pulumi:"vpnConnectionId"`
}

func LookupVPNConnectionOutput(ctx *pulumi.Context, args LookupVPNConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupVPNConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVPNConnectionResult, error) {
			args := v.(LookupVPNConnectionArgs)
			r, err := LookupVPNConnection(ctx, &args, opts...)
			var s LookupVPNConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVPNConnectionResultOutput)
}

type LookupVPNConnectionOutputArgs struct {
	// The provider-assigned unique ID for this managed resource
	VpnConnectionId pulumi.StringInput `pulumi:"vpnConnectionId"`
}

func (LookupVPNConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVPNConnectionArgs)(nil)).Elem()
}

type LookupVPNConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupVPNConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVPNConnectionResult)(nil)).Elem()
}

func (o LookupVPNConnectionResultOutput) ToLookupVPNConnectionResultOutput() LookupVPNConnectionResultOutput {
	return o
}

func (o LookupVPNConnectionResultOutput) ToLookupVPNConnectionResultOutputWithContext(ctx context.Context) LookupVPNConnectionResultOutput {
	return o
}

// Any tags assigned to the VPN connection.
func (o LookupVPNConnectionResultOutput) Tags() VPNConnectionTagArrayOutput {
	return o.ApplyT(func(v LookupVPNConnectionResult) []VPNConnectionTag { return v.Tags }).(VPNConnectionTagArrayOutput)
}

// The provider-assigned unique ID for this managed resource
func (o LookupVPNConnectionResultOutput) VpnConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVPNConnectionResult) *string { return v.VpnConnectionId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVPNConnectionResultOutput{})
}
