// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::LaunchTemplate
func LookupLaunchTemplate(ctx *pulumi.Context, args *LookupLaunchTemplateArgs, opts ...pulumi.InvokeOption) (*LookupLaunchTemplateResult, error) {
	var rv LookupLaunchTemplateResult
	err := ctx.Invoke("aws-native:ec2:getLaunchTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupLaunchTemplateArgs struct {
	Id string `pulumi:"id"`
}

type LookupLaunchTemplateResult struct {
	DefaultVersionNumber *string                          `pulumi:"defaultVersionNumber"`
	Id                   *string                          `pulumi:"id"`
	LatestVersionNumber  *string                          `pulumi:"latestVersionNumber"`
	LaunchTemplateData   *LaunchTemplateData              `pulumi:"launchTemplateData"`
	TagSpecifications    []LaunchTemplateTagSpecification `pulumi:"tagSpecifications"`
}

func LookupLaunchTemplateOutput(ctx *pulumi.Context, args LookupLaunchTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupLaunchTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLaunchTemplateResult, error) {
			args := v.(LookupLaunchTemplateArgs)
			r, err := LookupLaunchTemplate(ctx, &args, opts...)
			var s LookupLaunchTemplateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLaunchTemplateResultOutput)
}

type LookupLaunchTemplateOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupLaunchTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLaunchTemplateArgs)(nil)).Elem()
}

type LookupLaunchTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupLaunchTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLaunchTemplateResult)(nil)).Elem()
}

func (o LookupLaunchTemplateResultOutput) ToLookupLaunchTemplateResultOutput() LookupLaunchTemplateResultOutput {
	return o
}

func (o LookupLaunchTemplateResultOutput) ToLookupLaunchTemplateResultOutputWithContext(ctx context.Context) LookupLaunchTemplateResultOutput {
	return o
}

func (o LookupLaunchTemplateResultOutput) DefaultVersionNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLaunchTemplateResult) *string { return v.DefaultVersionNumber }).(pulumi.StringPtrOutput)
}

func (o LookupLaunchTemplateResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLaunchTemplateResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupLaunchTemplateResultOutput) LatestVersionNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLaunchTemplateResult) *string { return v.LatestVersionNumber }).(pulumi.StringPtrOutput)
}

func (o LookupLaunchTemplateResultOutput) LaunchTemplateData() LaunchTemplateDataPtrOutput {
	return o.ApplyT(func(v LookupLaunchTemplateResult) *LaunchTemplateData { return v.LaunchTemplateData }).(LaunchTemplateDataPtrOutput)
}

func (o LookupLaunchTemplateResultOutput) TagSpecifications() LaunchTemplateTagSpecificationArrayOutput {
	return o.ApplyT(func(v LookupLaunchTemplateResult) []LaunchTemplateTagSpecification { return v.TagSpecifications }).(LaunchTemplateTagSpecificationArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLaunchTemplateResultOutput{})
}
