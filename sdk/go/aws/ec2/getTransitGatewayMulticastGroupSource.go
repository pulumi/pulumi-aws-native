// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::EC2::TransitGatewayMulticastGroupSource registers and deregisters members and sources (network interfaces) with the transit gateway multicast group
func LookupTransitGatewayMulticastGroupSource(ctx *pulumi.Context, args *LookupTransitGatewayMulticastGroupSourceArgs, opts ...pulumi.InvokeOption) (*LookupTransitGatewayMulticastGroupSourceResult, error) {
	var rv LookupTransitGatewayMulticastGroupSourceResult
	err := ctx.Invoke("aws-native:ec2:getTransitGatewayMulticastGroupSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTransitGatewayMulticastGroupSourceArgs struct {
	// The IP address assigned to the transit gateway multicast group.
	GroupIpAddress string `pulumi:"groupIpAddress"`
	// The ID of the transit gateway attachment.
	NetworkInterfaceId string `pulumi:"networkInterfaceId"`
	// The ID of the transit gateway multicast domain.
	TransitGatewayMulticastDomainId string `pulumi:"transitGatewayMulticastDomainId"`
}

type LookupTransitGatewayMulticastGroupSourceResult struct {
	// Indicates that the resource is a transit gateway multicast group member.
	GroupMember *bool `pulumi:"groupMember"`
	// Indicates that the resource is a transit gateway multicast group member.
	GroupSource *bool `pulumi:"groupSource"`
	// The member type (for example, static).
	MemberType *string `pulumi:"memberType"`
	// The ID of the resource.
	ResourceId *string `pulumi:"resourceId"`
	// The type of resource, for example a VPC attachment.
	ResourceType *string `pulumi:"resourceType"`
	// The source type.
	SourceType *string `pulumi:"sourceType"`
	// The ID of the subnet.
	SubnetId *string `pulumi:"subnetId"`
	// The ID of the transit gateway attachment.
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
}

func LookupTransitGatewayMulticastGroupSourceOutput(ctx *pulumi.Context, args LookupTransitGatewayMulticastGroupSourceOutputArgs, opts ...pulumi.InvokeOption) LookupTransitGatewayMulticastGroupSourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTransitGatewayMulticastGroupSourceResult, error) {
			args := v.(LookupTransitGatewayMulticastGroupSourceArgs)
			r, err := LookupTransitGatewayMulticastGroupSource(ctx, &args, opts...)
			return *r, err
		}).(LookupTransitGatewayMulticastGroupSourceResultOutput)
}

type LookupTransitGatewayMulticastGroupSourceOutputArgs struct {
	// The IP address assigned to the transit gateway multicast group.
	GroupIpAddress pulumi.StringInput `pulumi:"groupIpAddress"`
	// The ID of the transit gateway attachment.
	NetworkInterfaceId pulumi.StringInput `pulumi:"networkInterfaceId"`
	// The ID of the transit gateway multicast domain.
	TransitGatewayMulticastDomainId pulumi.StringInput `pulumi:"transitGatewayMulticastDomainId"`
}

func (LookupTransitGatewayMulticastGroupSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayMulticastGroupSourceArgs)(nil)).Elem()
}

type LookupTransitGatewayMulticastGroupSourceResultOutput struct{ *pulumi.OutputState }

func (LookupTransitGatewayMulticastGroupSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayMulticastGroupSourceResult)(nil)).Elem()
}

func (o LookupTransitGatewayMulticastGroupSourceResultOutput) ToLookupTransitGatewayMulticastGroupSourceResultOutput() LookupTransitGatewayMulticastGroupSourceResultOutput {
	return o
}

func (o LookupTransitGatewayMulticastGroupSourceResultOutput) ToLookupTransitGatewayMulticastGroupSourceResultOutputWithContext(ctx context.Context) LookupTransitGatewayMulticastGroupSourceResultOutput {
	return o
}

// Indicates that the resource is a transit gateway multicast group member.
func (o LookupTransitGatewayMulticastGroupSourceResultOutput) GroupMember() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayMulticastGroupSourceResult) *bool { return v.GroupMember }).(pulumi.BoolPtrOutput)
}

// Indicates that the resource is a transit gateway multicast group member.
func (o LookupTransitGatewayMulticastGroupSourceResultOutput) GroupSource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayMulticastGroupSourceResult) *bool { return v.GroupSource }).(pulumi.BoolPtrOutput)
}

// The member type (for example, static).
func (o LookupTransitGatewayMulticastGroupSourceResultOutput) MemberType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayMulticastGroupSourceResult) *string { return v.MemberType }).(pulumi.StringPtrOutput)
}

// The ID of the resource.
func (o LookupTransitGatewayMulticastGroupSourceResultOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayMulticastGroupSourceResult) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// The type of resource, for example a VPC attachment.
func (o LookupTransitGatewayMulticastGroupSourceResultOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayMulticastGroupSourceResult) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

// The source type.
func (o LookupTransitGatewayMulticastGroupSourceResultOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayMulticastGroupSourceResult) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

// The ID of the subnet.
func (o LookupTransitGatewayMulticastGroupSourceResultOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayMulticastGroupSourceResult) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// The ID of the transit gateway attachment.
func (o LookupTransitGatewayMulticastGroupSourceResultOutput) TransitGatewayAttachmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayMulticastGroupSourceResult) *string { return v.TransitGatewayAttachmentId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTransitGatewayMulticastGroupSourceResultOutput{})
}
