// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VPC Route Server Peer
func LookupRouteServerPeer(ctx *pulumi.Context, args *LookupRouteServerPeerArgs, opts ...pulumi.InvokeOption) (*LookupRouteServerPeerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRouteServerPeerResult
	err := ctx.Invoke("aws-native:ec2:getRouteServerPeer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRouteServerPeerArgs struct {
	// The ID of the Route Server Peer.
	Id string `pulumi:"id"`
}

type LookupRouteServerPeerResult struct {
	// The Amazon Resource Name (ARN) of the Route Server Peer.
	Arn *string `pulumi:"arn"`
	// Elastic Network Interface IP address owned by the Route Server Endpoint
	EndpointEniAddress *string `pulumi:"endpointEniAddress"`
	// Elastic Network Interface ID owned by the Route Server Endpoint
	EndpointEniId *string `pulumi:"endpointEniId"`
	// The ID of the Route Server Peer.
	Id *string `pulumi:"id"`
	// Route Server ID
	RouteServerId *string `pulumi:"routeServerId"`
	// Subnet ID
	SubnetId *string `pulumi:"subnetId"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// VPC ID
	VpcId *string `pulumi:"vpcId"`
}

func LookupRouteServerPeerOutput(ctx *pulumi.Context, args LookupRouteServerPeerOutputArgs, opts ...pulumi.InvokeOption) LookupRouteServerPeerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRouteServerPeerResultOutput, error) {
			args := v.(LookupRouteServerPeerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getRouteServerPeer", args, LookupRouteServerPeerResultOutput{}, options).(LookupRouteServerPeerResultOutput), nil
		}).(LookupRouteServerPeerResultOutput)
}

type LookupRouteServerPeerOutputArgs struct {
	// The ID of the Route Server Peer.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupRouteServerPeerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteServerPeerArgs)(nil)).Elem()
}

type LookupRouteServerPeerResultOutput struct{ *pulumi.OutputState }

func (LookupRouteServerPeerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteServerPeerResult)(nil)).Elem()
}

func (o LookupRouteServerPeerResultOutput) ToLookupRouteServerPeerResultOutput() LookupRouteServerPeerResultOutput {
	return o
}

func (o LookupRouteServerPeerResultOutput) ToLookupRouteServerPeerResultOutputWithContext(ctx context.Context) LookupRouteServerPeerResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the Route Server Peer.
func (o LookupRouteServerPeerResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteServerPeerResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Elastic Network Interface IP address owned by the Route Server Endpoint
func (o LookupRouteServerPeerResultOutput) EndpointEniAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteServerPeerResult) *string { return v.EndpointEniAddress }).(pulumi.StringPtrOutput)
}

// Elastic Network Interface ID owned by the Route Server Endpoint
func (o LookupRouteServerPeerResultOutput) EndpointEniId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteServerPeerResult) *string { return v.EndpointEniId }).(pulumi.StringPtrOutput)
}

// The ID of the Route Server Peer.
func (o LookupRouteServerPeerResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteServerPeerResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Route Server ID
func (o LookupRouteServerPeerResultOutput) RouteServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteServerPeerResult) *string { return v.RouteServerId }).(pulumi.StringPtrOutput)
}

// Subnet ID
func (o LookupRouteServerPeerResultOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteServerPeerResult) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupRouteServerPeerResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupRouteServerPeerResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// VPC ID
func (o LookupRouteServerPeerResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteServerPeerResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouteServerPeerResultOutput{})
}
