// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::SecurityGroup
func LookupSecurityGroup(ctx *pulumi.Context, args *LookupSecurityGroupArgs, opts ...pulumi.InvokeOption) (*LookupSecurityGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSecurityGroupResult
	err := ctx.Invoke("aws-native:ec2:getSecurityGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupSecurityGroupArgs struct {
	// The group name or group ID depending on whether the SG is created in default or specific VPC
	Id string `pulumi:"id"`
}

type LookupSecurityGroupResult struct {
	// The group ID of the specified security group.
	GroupId *string `pulumi:"groupId"`
	// The group name or group ID depending on whether the SG is created in default or specific VPC
	Id *string `pulumi:"id"`
	// [VPC only] The outbound rules associated with the security group. There is a short interruption during which you cannot connect to the security group.
	SecurityGroupEgress []SecurityGroupEgressType `pulumi:"securityGroupEgress"`
	// The inbound rules associated with the security group. There is a short interruption during which you cannot connect to the security group.
	SecurityGroupIngress []SecurityGroupIngressType `pulumi:"securityGroupIngress"`
	// Any tags assigned to the security group.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupSecurityGroupOutput(ctx *pulumi.Context, args LookupSecurityGroupOutputArgs, opts ...pulumi.InvokeOption) LookupSecurityGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSecurityGroupResultOutput, error) {
			args := v.(LookupSecurityGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getSecurityGroup", args, LookupSecurityGroupResultOutput{}, options).(LookupSecurityGroupResultOutput), nil
		}).(LookupSecurityGroupResultOutput)
}

type LookupSecurityGroupOutputArgs struct {
	// The group name or group ID depending on whether the SG is created in default or specific VPC
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupSecurityGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityGroupArgs)(nil)).Elem()
}

type LookupSecurityGroupResultOutput struct{ *pulumi.OutputState }

func (LookupSecurityGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecurityGroupResult)(nil)).Elem()
}

func (o LookupSecurityGroupResultOutput) ToLookupSecurityGroupResultOutput() LookupSecurityGroupResultOutput {
	return o
}

func (o LookupSecurityGroupResultOutput) ToLookupSecurityGroupResultOutputWithContext(ctx context.Context) LookupSecurityGroupResultOutput {
	return o
}

// The group ID of the specified security group.
func (o LookupSecurityGroupResultOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) *string { return v.GroupId }).(pulumi.StringPtrOutput)
}

// The group name or group ID depending on whether the SG is created in default or specific VPC
func (o LookupSecurityGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// [VPC only] The outbound rules associated with the security group. There is a short interruption during which you cannot connect to the security group.
func (o LookupSecurityGroupResultOutput) SecurityGroupEgress() SecurityGroupEgressTypeArrayOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) []SecurityGroupEgressType { return v.SecurityGroupEgress }).(SecurityGroupEgressTypeArrayOutput)
}

// The inbound rules associated with the security group. There is a short interruption during which you cannot connect to the security group.
func (o LookupSecurityGroupResultOutput) SecurityGroupIngress() SecurityGroupIngressTypeArrayOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) []SecurityGroupIngressType { return v.SecurityGroupIngress }).(SecurityGroupIngressTypeArrayOutput)
}

// Any tags assigned to the security group.
func (o LookupSecurityGroupResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupSecurityGroupResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecurityGroupResultOutput{})
}
