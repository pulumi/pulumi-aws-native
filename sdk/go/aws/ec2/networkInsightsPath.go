// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::EC2::NetworkInsightsPath
type NetworkInsightsPath struct {
	pulumi.CustomResourceState

	// The time stamp when the path was created.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// The ID or ARN of the destination. If the resource is in another account, you must specify an ARN.
	Destination pulumi.StringPtrOutput `pulumi:"destination"`
	// The Amazon Resource Name (ARN) of the destination.
	DestinationArn pulumi.StringOutput `pulumi:"destinationArn"`
	// The IP address of the destination.
	DestinationIp pulumi.StringPtrOutput `pulumi:"destinationIp"`
	// The destination port.
	DestinationPort pulumi.IntPtrOutput `pulumi:"destinationPort"`
	// Scopes the analysis to network paths that match specific filters at the destination. If you specify this parameter, you can't specify the parameter for the destination IP address.
	FilterAtDestination NetworkInsightsPathPathFilterPtrOutput `pulumi:"filterAtDestination"`
	// Scopes the analysis to network paths that match specific filters at the source. If you specify this parameter, you can't specify the parameters for the source IP address or the destination port.
	FilterAtSource NetworkInsightsPathPathFilterPtrOutput `pulumi:"filterAtSource"`
	// The Amazon Resource Name (ARN) of the path.
	NetworkInsightsPathArn pulumi.StringOutput `pulumi:"networkInsightsPathArn"`
	// The ID of the path.
	NetworkInsightsPathId pulumi.StringOutput `pulumi:"networkInsightsPathId"`
	// The protocol.
	Protocol NetworkInsightsPathProtocolOutput `pulumi:"protocol"`
	// The ID or ARN of the source. If the resource is in another account, you must specify an ARN.
	Source pulumi.StringOutput `pulumi:"source"`
	// The Amazon Resource Name (ARN) of the source.
	SourceArn pulumi.StringOutput `pulumi:"sourceArn"`
	// The IP address of the source.
	SourceIp pulumi.StringPtrOutput `pulumi:"sourceIp"`
	// The tags to add to the path.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewNetworkInsightsPath registers a new resource with the given unique name, arguments, and options.
func NewNetworkInsightsPath(ctx *pulumi.Context,
	name string, args *NetworkInsightsPathArgs, opts ...pulumi.ResourceOption) (*NetworkInsightsPath, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"destination",
		"destinationIp",
		"destinationPort",
		"filterAtDestination",
		"filterAtSource",
		"protocol",
		"source",
		"sourceIp",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkInsightsPath
	err := ctx.RegisterResource("aws-native:ec2:NetworkInsightsPath", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkInsightsPath gets an existing NetworkInsightsPath resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkInsightsPath(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkInsightsPathState, opts ...pulumi.ResourceOption) (*NetworkInsightsPath, error) {
	var resource NetworkInsightsPath
	err := ctx.ReadResource("aws-native:ec2:NetworkInsightsPath", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkInsightsPath resources.
type networkInsightsPathState struct {
}

type NetworkInsightsPathState struct {
}

func (NetworkInsightsPathState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInsightsPathState)(nil)).Elem()
}

type networkInsightsPathArgs struct {
	// The ID or ARN of the destination. If the resource is in another account, you must specify an ARN.
	Destination *string `pulumi:"destination"`
	// The IP address of the destination.
	DestinationIp *string `pulumi:"destinationIp"`
	// The destination port.
	DestinationPort *int `pulumi:"destinationPort"`
	// Scopes the analysis to network paths that match specific filters at the destination. If you specify this parameter, you can't specify the parameter for the destination IP address.
	FilterAtDestination *NetworkInsightsPathPathFilter `pulumi:"filterAtDestination"`
	// Scopes the analysis to network paths that match specific filters at the source. If you specify this parameter, you can't specify the parameters for the source IP address or the destination port.
	FilterAtSource *NetworkInsightsPathPathFilter `pulumi:"filterAtSource"`
	// The protocol.
	Protocol NetworkInsightsPathProtocol `pulumi:"protocol"`
	// The ID or ARN of the source. If the resource is in another account, you must specify an ARN.
	Source string `pulumi:"source"`
	// The IP address of the source.
	SourceIp *string `pulumi:"sourceIp"`
	// The tags to add to the path.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkInsightsPath resource.
type NetworkInsightsPathArgs struct {
	// The ID or ARN of the destination. If the resource is in another account, you must specify an ARN.
	Destination pulumi.StringPtrInput
	// The IP address of the destination.
	DestinationIp pulumi.StringPtrInput
	// The destination port.
	DestinationPort pulumi.IntPtrInput
	// Scopes the analysis to network paths that match specific filters at the destination. If you specify this parameter, you can't specify the parameter for the destination IP address.
	FilterAtDestination NetworkInsightsPathPathFilterPtrInput
	// Scopes the analysis to network paths that match specific filters at the source. If you specify this parameter, you can't specify the parameters for the source IP address or the destination port.
	FilterAtSource NetworkInsightsPathPathFilterPtrInput
	// The protocol.
	Protocol NetworkInsightsPathProtocolInput
	// The ID or ARN of the source. If the resource is in another account, you must specify an ARN.
	Source pulumi.StringInput
	// The IP address of the source.
	SourceIp pulumi.StringPtrInput
	// The tags to add to the path.
	Tags aws.TagArrayInput
}

func (NetworkInsightsPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInsightsPathArgs)(nil)).Elem()
}

type NetworkInsightsPathInput interface {
	pulumi.Input

	ToNetworkInsightsPathOutput() NetworkInsightsPathOutput
	ToNetworkInsightsPathOutputWithContext(ctx context.Context) NetworkInsightsPathOutput
}

func (*NetworkInsightsPath) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInsightsPath)(nil)).Elem()
}

func (i *NetworkInsightsPath) ToNetworkInsightsPathOutput() NetworkInsightsPathOutput {
	return i.ToNetworkInsightsPathOutputWithContext(context.Background())
}

func (i *NetworkInsightsPath) ToNetworkInsightsPathOutputWithContext(ctx context.Context) NetworkInsightsPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsPathOutput)
}

type NetworkInsightsPathOutput struct{ *pulumi.OutputState }

func (NetworkInsightsPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInsightsPath)(nil)).Elem()
}

func (o NetworkInsightsPathOutput) ToNetworkInsightsPathOutput() NetworkInsightsPathOutput {
	return o
}

func (o NetworkInsightsPathOutput) ToNetworkInsightsPathOutputWithContext(ctx context.Context) NetworkInsightsPathOutput {
	return o
}

// The time stamp when the path was created.
func (o NetworkInsightsPathOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// The ID or ARN of the destination. If the resource is in another account, you must specify an ARN.
func (o NetworkInsightsPathOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringPtrOutput { return v.Destination }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the destination.
func (o NetworkInsightsPathOutput) DestinationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringOutput { return v.DestinationArn }).(pulumi.StringOutput)
}

// The IP address of the destination.
func (o NetworkInsightsPathOutput) DestinationIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringPtrOutput { return v.DestinationIp }).(pulumi.StringPtrOutput)
}

// The destination port.
func (o NetworkInsightsPathOutput) DestinationPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.IntPtrOutput { return v.DestinationPort }).(pulumi.IntPtrOutput)
}

// Scopes the analysis to network paths that match specific filters at the destination. If you specify this parameter, you can't specify the parameter for the destination IP address.
func (o NetworkInsightsPathOutput) FilterAtDestination() NetworkInsightsPathPathFilterPtrOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) NetworkInsightsPathPathFilterPtrOutput { return v.FilterAtDestination }).(NetworkInsightsPathPathFilterPtrOutput)
}

// Scopes the analysis to network paths that match specific filters at the source. If you specify this parameter, you can't specify the parameters for the source IP address or the destination port.
func (o NetworkInsightsPathOutput) FilterAtSource() NetworkInsightsPathPathFilterPtrOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) NetworkInsightsPathPathFilterPtrOutput { return v.FilterAtSource }).(NetworkInsightsPathPathFilterPtrOutput)
}

// The Amazon Resource Name (ARN) of the path.
func (o NetworkInsightsPathOutput) NetworkInsightsPathArn() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringOutput { return v.NetworkInsightsPathArn }).(pulumi.StringOutput)
}

// The ID of the path.
func (o NetworkInsightsPathOutput) NetworkInsightsPathId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringOutput { return v.NetworkInsightsPathId }).(pulumi.StringOutput)
}

// The protocol.
func (o NetworkInsightsPathOutput) Protocol() NetworkInsightsPathProtocolOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) NetworkInsightsPathProtocolOutput { return v.Protocol }).(NetworkInsightsPathProtocolOutput)
}

// The ID or ARN of the source. If the resource is in another account, you must specify an ARN.
func (o NetworkInsightsPathOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringOutput { return v.Source }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the source.
func (o NetworkInsightsPathOutput) SourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringOutput { return v.SourceArn }).(pulumi.StringOutput)
}

// The IP address of the source.
func (o NetworkInsightsPathOutput) SourceIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) pulumi.StringPtrOutput { return v.SourceIp }).(pulumi.StringPtrOutput)
}

// The tags to add to the path.
func (o NetworkInsightsPathOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *NetworkInsightsPath) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInsightsPathInput)(nil)).Elem(), &NetworkInsightsPath{})
	pulumi.RegisterOutputType(NetworkInsightsPathOutput{})
}
