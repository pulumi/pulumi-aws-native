// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::EC2::NetworkInsightsPath
type NetworkInsightsPath struct {
	pulumi.CustomResourceState

	CreatedDate            pulumi.StringOutput               `pulumi:"createdDate"`
	Destination            pulumi.StringOutput               `pulumi:"destination"`
	DestinationIp          pulumi.StringPtrOutput            `pulumi:"destinationIp"`
	DestinationPort        pulumi.IntPtrOutput               `pulumi:"destinationPort"`
	NetworkInsightsPathArn pulumi.StringOutput               `pulumi:"networkInsightsPathArn"`
	NetworkInsightsPathId  pulumi.StringOutput               `pulumi:"networkInsightsPathId"`
	Protocol               pulumi.StringOutput               `pulumi:"protocol"`
	Source                 pulumi.StringOutput               `pulumi:"source"`
	SourceIp               pulumi.StringPtrOutput            `pulumi:"sourceIp"`
	Tags                   NetworkInsightsPathTagArrayOutput `pulumi:"tags"`
}

// NewNetworkInsightsPath registers a new resource with the given unique name, arguments, and options.
func NewNetworkInsightsPath(ctx *pulumi.Context,
	name string, args *NetworkInsightsPathArgs, opts ...pulumi.ResourceOption) (*NetworkInsightsPath, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	if args.Protocol == nil {
		return nil, errors.New("invalid value for required argument 'Protocol'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	var resource NetworkInsightsPath
	err := ctx.RegisterResource("aws-native:ec2:NetworkInsightsPath", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkInsightsPath gets an existing NetworkInsightsPath resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkInsightsPath(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkInsightsPathState, opts ...pulumi.ResourceOption) (*NetworkInsightsPath, error) {
	var resource NetworkInsightsPath
	err := ctx.ReadResource("aws-native:ec2:NetworkInsightsPath", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkInsightsPath resources.
type networkInsightsPathState struct {
}

type NetworkInsightsPathState struct {
}

func (NetworkInsightsPathState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInsightsPathState)(nil)).Elem()
}

type networkInsightsPathArgs struct {
	Destination     string                   `pulumi:"destination"`
	DestinationIp   *string                  `pulumi:"destinationIp"`
	DestinationPort *int                     `pulumi:"destinationPort"`
	Protocol        string                   `pulumi:"protocol"`
	Source          string                   `pulumi:"source"`
	SourceIp        *string                  `pulumi:"sourceIp"`
	Tags            []NetworkInsightsPathTag `pulumi:"tags"`
}

// The set of arguments for constructing a NetworkInsightsPath resource.
type NetworkInsightsPathArgs struct {
	Destination     pulumi.StringInput
	DestinationIp   pulumi.StringPtrInput
	DestinationPort pulumi.IntPtrInput
	Protocol        pulumi.StringInput
	Source          pulumi.StringInput
	SourceIp        pulumi.StringPtrInput
	Tags            NetworkInsightsPathTagArrayInput
}

func (NetworkInsightsPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInsightsPathArgs)(nil)).Elem()
}

type NetworkInsightsPathInput interface {
	pulumi.Input

	ToNetworkInsightsPathOutput() NetworkInsightsPathOutput
	ToNetworkInsightsPathOutputWithContext(ctx context.Context) NetworkInsightsPathOutput
}

func (*NetworkInsightsPath) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsPath)(nil))
}

func (i *NetworkInsightsPath) ToNetworkInsightsPathOutput() NetworkInsightsPathOutput {
	return i.ToNetworkInsightsPathOutputWithContext(context.Background())
}

func (i *NetworkInsightsPath) ToNetworkInsightsPathOutputWithContext(ctx context.Context) NetworkInsightsPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInsightsPathOutput)
}

type NetworkInsightsPathOutput struct{ *pulumi.OutputState }

func (NetworkInsightsPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkInsightsPath)(nil))
}

func (o NetworkInsightsPathOutput) ToNetworkInsightsPathOutput() NetworkInsightsPathOutput {
	return o
}

func (o NetworkInsightsPathOutput) ToNetworkInsightsPathOutputWithContext(ctx context.Context) NetworkInsightsPathOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(NetworkInsightsPathOutput{})
}
