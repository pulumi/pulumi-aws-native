// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::CapacityManagerDataExport
type CapacityManagerDataExport struct {
	pulumi.CustomResourceState

	// The unique identifier of the capacity manager data export.
	CapacityManagerDataExportId pulumi.StringOutput `pulumi:"capacityManagerDataExportId"`
	// The format of the exported capacity manager data. Choose 'csv' for comma-separated values or 'parquet' for optimized columnar storage format.
	OutputFormat CapacityManagerDataExportOutputFormatOutput `pulumi:"outputFormat"`
	// The name of the Amazon S3 bucket where the capacity manager data export will be stored. The bucket must exist and be accessible by EC2 Capacity Manager service.
	S3BucketName pulumi.StringOutput `pulumi:"s3BucketName"`
	// The prefix for the S3 bucket location where exported files will be placed. If not specified, files will be placed in the root of the bucket.
	S3BucketPrefix pulumi.StringPtrOutput `pulumi:"s3BucketPrefix"`
	// The schedule for the capacity manager data export. Currently supports hourly exports that provide periodic snapshots of capacity manager data.
	Schedule CapacityManagerDataExportScheduleOutput `pulumi:"schedule"`
	// An array of key-value pairs to apply to the capacity manager data export.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewCapacityManagerDataExport registers a new resource with the given unique name, arguments, and options.
func NewCapacityManagerDataExport(ctx *pulumi.Context,
	name string, args *CapacityManagerDataExportArgs, opts ...pulumi.ResourceOption) (*CapacityManagerDataExport, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.OutputFormat == nil {
		return nil, errors.New("invalid value for required argument 'OutputFormat'")
	}
	if args.S3BucketName == nil {
		return nil, errors.New("invalid value for required argument 'S3BucketName'")
	}
	if args.Schedule == nil {
		return nil, errors.New("invalid value for required argument 'Schedule'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"outputFormat",
		"s3BucketName",
		"s3BucketPrefix",
		"schedule",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CapacityManagerDataExport
	err := ctx.RegisterResource("aws-native:ec2:CapacityManagerDataExport", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCapacityManagerDataExport gets an existing CapacityManagerDataExport resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCapacityManagerDataExport(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CapacityManagerDataExportState, opts ...pulumi.ResourceOption) (*CapacityManagerDataExport, error) {
	var resource CapacityManagerDataExport
	err := ctx.ReadResource("aws-native:ec2:CapacityManagerDataExport", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CapacityManagerDataExport resources.
type capacityManagerDataExportState struct {
}

type CapacityManagerDataExportState struct {
}

func (CapacityManagerDataExportState) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityManagerDataExportState)(nil)).Elem()
}

type capacityManagerDataExportArgs struct {
	// The format of the exported capacity manager data. Choose 'csv' for comma-separated values or 'parquet' for optimized columnar storage format.
	OutputFormat CapacityManagerDataExportOutputFormat `pulumi:"outputFormat"`
	// The name of the Amazon S3 bucket where the capacity manager data export will be stored. The bucket must exist and be accessible by EC2 Capacity Manager service.
	S3BucketName string `pulumi:"s3BucketName"`
	// The prefix for the S3 bucket location where exported files will be placed. If not specified, files will be placed in the root of the bucket.
	S3BucketPrefix *string `pulumi:"s3BucketPrefix"`
	// The schedule for the capacity manager data export. Currently supports hourly exports that provide periodic snapshots of capacity manager data.
	Schedule CapacityManagerDataExportSchedule `pulumi:"schedule"`
	// An array of key-value pairs to apply to the capacity manager data export.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a CapacityManagerDataExport resource.
type CapacityManagerDataExportArgs struct {
	// The format of the exported capacity manager data. Choose 'csv' for comma-separated values or 'parquet' for optimized columnar storage format.
	OutputFormat CapacityManagerDataExportOutputFormatInput
	// The name of the Amazon S3 bucket where the capacity manager data export will be stored. The bucket must exist and be accessible by EC2 Capacity Manager service.
	S3BucketName pulumi.StringInput
	// The prefix for the S3 bucket location where exported files will be placed. If not specified, files will be placed in the root of the bucket.
	S3BucketPrefix pulumi.StringPtrInput
	// The schedule for the capacity manager data export. Currently supports hourly exports that provide periodic snapshots of capacity manager data.
	Schedule CapacityManagerDataExportScheduleInput
	// An array of key-value pairs to apply to the capacity manager data export.
	Tags aws.TagArrayInput
}

func (CapacityManagerDataExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*capacityManagerDataExportArgs)(nil)).Elem()
}

type CapacityManagerDataExportInput interface {
	pulumi.Input

	ToCapacityManagerDataExportOutput() CapacityManagerDataExportOutput
	ToCapacityManagerDataExportOutputWithContext(ctx context.Context) CapacityManagerDataExportOutput
}

func (*CapacityManagerDataExport) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityManagerDataExport)(nil)).Elem()
}

func (i *CapacityManagerDataExport) ToCapacityManagerDataExportOutput() CapacityManagerDataExportOutput {
	return i.ToCapacityManagerDataExportOutputWithContext(context.Background())
}

func (i *CapacityManagerDataExport) ToCapacityManagerDataExportOutputWithContext(ctx context.Context) CapacityManagerDataExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityManagerDataExportOutput)
}

type CapacityManagerDataExportOutput struct{ *pulumi.OutputState }

func (CapacityManagerDataExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityManagerDataExport)(nil)).Elem()
}

func (o CapacityManagerDataExportOutput) ToCapacityManagerDataExportOutput() CapacityManagerDataExportOutput {
	return o
}

func (o CapacityManagerDataExportOutput) ToCapacityManagerDataExportOutputWithContext(ctx context.Context) CapacityManagerDataExportOutput {
	return o
}

// The unique identifier of the capacity manager data export.
func (o CapacityManagerDataExportOutput) CapacityManagerDataExportId() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityManagerDataExport) pulumi.StringOutput { return v.CapacityManagerDataExportId }).(pulumi.StringOutput)
}

// The format of the exported capacity manager data. Choose 'csv' for comma-separated values or 'parquet' for optimized columnar storage format.
func (o CapacityManagerDataExportOutput) OutputFormat() CapacityManagerDataExportOutputFormatOutput {
	return o.ApplyT(func(v *CapacityManagerDataExport) CapacityManagerDataExportOutputFormatOutput { return v.OutputFormat }).(CapacityManagerDataExportOutputFormatOutput)
}

// The name of the Amazon S3 bucket where the capacity manager data export will be stored. The bucket must exist and be accessible by EC2 Capacity Manager service.
func (o CapacityManagerDataExportOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v *CapacityManagerDataExport) pulumi.StringOutput { return v.S3BucketName }).(pulumi.StringOutput)
}

// The prefix for the S3 bucket location where exported files will be placed. If not specified, files will be placed in the root of the bucket.
func (o CapacityManagerDataExportOutput) S3BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CapacityManagerDataExport) pulumi.StringPtrOutput { return v.S3BucketPrefix }).(pulumi.StringPtrOutput)
}

// The schedule for the capacity manager data export. Currently supports hourly exports that provide periodic snapshots of capacity manager data.
func (o CapacityManagerDataExportOutput) Schedule() CapacityManagerDataExportScheduleOutput {
	return o.ApplyT(func(v *CapacityManagerDataExport) CapacityManagerDataExportScheduleOutput { return v.Schedule }).(CapacityManagerDataExportScheduleOutput)
}

// An array of key-value pairs to apply to the capacity manager data export.
func (o CapacityManagerDataExportOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *CapacityManagerDataExport) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CapacityManagerDataExportInput)(nil)).Elem(), &CapacityManagerDataExport{})
	pulumi.RegisterOutputType(CapacityManagerDataExportOutput{})
}
