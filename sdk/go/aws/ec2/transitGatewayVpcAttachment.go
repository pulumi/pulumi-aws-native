// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::TransitGatewayVpcAttachment
type TransitGatewayVpcAttachment struct {
	pulumi.CustomResourceState

	AddSubnetIds pulumi.StringArrayOutput `pulumi:"addSubnetIds"`
	// The options for the transit gateway vpc attachment.
	Options          pulumi.AnyOutput                          `pulumi:"options"`
	RemoveSubnetIds  pulumi.StringArrayOutput                  `pulumi:"removeSubnetIds"`
	SubnetIds        pulumi.StringArrayOutput                  `pulumi:"subnetIds"`
	Tags             TransitGatewayVpcAttachmentTagArrayOutput `pulumi:"tags"`
	TransitGatewayId pulumi.StringPtrOutput                    `pulumi:"transitGatewayId"`
	VpcId            pulumi.StringPtrOutput                    `pulumi:"vpcId"`
}

// NewTransitGatewayVpcAttachment registers a new resource with the given unique name, arguments, and options.
func NewTransitGatewayVpcAttachment(ctx *pulumi.Context,
	name string, args *TransitGatewayVpcAttachmentArgs, opts ...pulumi.ResourceOption) (*TransitGatewayVpcAttachment, error) {
	if args == nil {
		args = &TransitGatewayVpcAttachmentArgs{}
	}

	var resource TransitGatewayVpcAttachment
	err := ctx.RegisterResource("aws-native:ec2:TransitGatewayVpcAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGatewayVpcAttachment gets an existing TransitGatewayVpcAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGatewayVpcAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayVpcAttachmentState, opts ...pulumi.ResourceOption) (*TransitGatewayVpcAttachment, error) {
	var resource TransitGatewayVpcAttachment
	err := ctx.ReadResource("aws-native:ec2:TransitGatewayVpcAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGatewayVpcAttachment resources.
type transitGatewayVpcAttachmentState struct {
}

type TransitGatewayVpcAttachmentState struct {
}

func (TransitGatewayVpcAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayVpcAttachmentState)(nil)).Elem()
}

type transitGatewayVpcAttachmentArgs struct {
	AddSubnetIds []string `pulumi:"addSubnetIds"`
	// The options for the transit gateway vpc attachment.
	Options          interface{}                      `pulumi:"options"`
	RemoveSubnetIds  []string                         `pulumi:"removeSubnetIds"`
	SubnetIds        []string                         `pulumi:"subnetIds"`
	Tags             []TransitGatewayVpcAttachmentTag `pulumi:"tags"`
	TransitGatewayId *string                          `pulumi:"transitGatewayId"`
	VpcId            *string                          `pulumi:"vpcId"`
}

// The set of arguments for constructing a TransitGatewayVpcAttachment resource.
type TransitGatewayVpcAttachmentArgs struct {
	AddSubnetIds pulumi.StringArrayInput
	// The options for the transit gateway vpc attachment.
	Options          pulumi.Input
	RemoveSubnetIds  pulumi.StringArrayInput
	SubnetIds        pulumi.StringArrayInput
	Tags             TransitGatewayVpcAttachmentTagArrayInput
	TransitGatewayId pulumi.StringPtrInput
	VpcId            pulumi.StringPtrInput
}

func (TransitGatewayVpcAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayVpcAttachmentArgs)(nil)).Elem()
}

type TransitGatewayVpcAttachmentInput interface {
	pulumi.Input

	ToTransitGatewayVpcAttachmentOutput() TransitGatewayVpcAttachmentOutput
	ToTransitGatewayVpcAttachmentOutputWithContext(ctx context.Context) TransitGatewayVpcAttachmentOutput
}

func (*TransitGatewayVpcAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayVpcAttachment)(nil))
}

func (i *TransitGatewayVpcAttachment) ToTransitGatewayVpcAttachmentOutput() TransitGatewayVpcAttachmentOutput {
	return i.ToTransitGatewayVpcAttachmentOutputWithContext(context.Background())
}

func (i *TransitGatewayVpcAttachment) ToTransitGatewayVpcAttachmentOutputWithContext(ctx context.Context) TransitGatewayVpcAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayVpcAttachmentOutput)
}

type TransitGatewayVpcAttachmentOutput struct{ *pulumi.OutputState }

func (TransitGatewayVpcAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayVpcAttachment)(nil))
}

func (o TransitGatewayVpcAttachmentOutput) ToTransitGatewayVpcAttachmentOutput() TransitGatewayVpcAttachmentOutput {
	return o
}

func (o TransitGatewayVpcAttachmentOutput) ToTransitGatewayVpcAttachmentOutputWithContext(ctx context.Context) TransitGatewayVpcAttachmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(TransitGatewayVpcAttachmentOutput{})
}
