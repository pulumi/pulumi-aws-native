// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An example resource schema demonstrating some basic constructs and validation rules.
type CarrierGateway struct {
	pulumi.CustomResourceState

	// The ID of the carrier gateway.
	CarrierGatewayId pulumi.StringOutput `pulumi:"carrierGatewayId"`
	// The ID of the owner.
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// The state of the carrier gateway.
	State pulumi.StringOutput `pulumi:"state"`
	// The tags for the carrier gateway.
	Tags CarrierGatewayTagArrayOutput `pulumi:"tags"`
	// The ID of the VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewCarrierGateway registers a new resource with the given unique name, arguments, and options.
func NewCarrierGateway(ctx *pulumi.Context,
	name string, args *CarrierGatewayArgs, opts ...pulumi.ResourceOption) (*CarrierGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	var resource CarrierGateway
	err := ctx.RegisterResource("aws-native:ec2:CarrierGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCarrierGateway gets an existing CarrierGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCarrierGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CarrierGatewayState, opts ...pulumi.ResourceOption) (*CarrierGateway, error) {
	var resource CarrierGateway
	err := ctx.ReadResource("aws-native:ec2:CarrierGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CarrierGateway resources.
type carrierGatewayState struct {
}

type CarrierGatewayState struct {
}

func (CarrierGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*carrierGatewayState)(nil)).Elem()
}

type carrierGatewayArgs struct {
	// The tags for the carrier gateway.
	Tags []CarrierGatewayTag `pulumi:"tags"`
	// The ID of the VPC.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a CarrierGateway resource.
type CarrierGatewayArgs struct {
	// The tags for the carrier gateway.
	Tags CarrierGatewayTagArrayInput
	// The ID of the VPC.
	VpcId pulumi.StringInput
}

func (CarrierGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*carrierGatewayArgs)(nil)).Elem()
}

type CarrierGatewayInput interface {
	pulumi.Input

	ToCarrierGatewayOutput() CarrierGatewayOutput
	ToCarrierGatewayOutputWithContext(ctx context.Context) CarrierGatewayOutput
}

func (*CarrierGateway) ElementType() reflect.Type {
	return reflect.TypeOf((*CarrierGateway)(nil))
}

func (i *CarrierGateway) ToCarrierGatewayOutput() CarrierGatewayOutput {
	return i.ToCarrierGatewayOutputWithContext(context.Background())
}

func (i *CarrierGateway) ToCarrierGatewayOutputWithContext(ctx context.Context) CarrierGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CarrierGatewayOutput)
}

type CarrierGatewayOutput struct{ *pulumi.OutputState }

func (CarrierGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CarrierGateway)(nil))
}

func (o CarrierGatewayOutput) ToCarrierGatewayOutput() CarrierGatewayOutput {
	return o
}

func (o CarrierGatewayOutput) ToCarrierGatewayOutputWithContext(ctx context.Context) CarrierGatewayOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CarrierGatewayInput)(nil)).Elem(), &CarrierGateway{})
	pulumi.RegisterOutputType(CarrierGatewayOutput{})
}
