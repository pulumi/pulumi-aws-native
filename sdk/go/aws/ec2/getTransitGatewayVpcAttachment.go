// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::TransitGatewayVpcAttachment
func LookupTransitGatewayVpcAttachment(ctx *pulumi.Context, args *LookupTransitGatewayVpcAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupTransitGatewayVpcAttachmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTransitGatewayVpcAttachmentResult
	err := ctx.Invoke("aws-native:ec2:getTransitGatewayVpcAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTransitGatewayVpcAttachmentArgs struct {
	// The ID of the attachment.
	Id string `pulumi:"id"`
}

type LookupTransitGatewayVpcAttachmentResult struct {
	// The ID of the attachment.
	Id *string `pulumi:"id"`
	// The options for the transit gateway vpc attachment.
	Options *OptionsProperties `pulumi:"options"`
	// The tags for the VPC attachment.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupTransitGatewayVpcAttachmentOutput(ctx *pulumi.Context, args LookupTransitGatewayVpcAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupTransitGatewayVpcAttachmentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTransitGatewayVpcAttachmentResultOutput, error) {
			args := v.(LookupTransitGatewayVpcAttachmentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getTransitGatewayVpcAttachment", args, LookupTransitGatewayVpcAttachmentResultOutput{}, options).(LookupTransitGatewayVpcAttachmentResultOutput), nil
		}).(LookupTransitGatewayVpcAttachmentResultOutput)
}

type LookupTransitGatewayVpcAttachmentOutputArgs struct {
	// The ID of the attachment.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTransitGatewayVpcAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayVpcAttachmentArgs)(nil)).Elem()
}

type LookupTransitGatewayVpcAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupTransitGatewayVpcAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayVpcAttachmentResult)(nil)).Elem()
}

func (o LookupTransitGatewayVpcAttachmentResultOutput) ToLookupTransitGatewayVpcAttachmentResultOutput() LookupTransitGatewayVpcAttachmentResultOutput {
	return o
}

func (o LookupTransitGatewayVpcAttachmentResultOutput) ToLookupTransitGatewayVpcAttachmentResultOutputWithContext(ctx context.Context) LookupTransitGatewayVpcAttachmentResultOutput {
	return o
}

// The ID of the attachment.
func (o LookupTransitGatewayVpcAttachmentResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayVpcAttachmentResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The options for the transit gateway vpc attachment.
func (o LookupTransitGatewayVpcAttachmentResultOutput) Options() OptionsPropertiesPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayVpcAttachmentResult) *OptionsProperties { return v.Options }).(OptionsPropertiesPtrOutput)
}

// The tags for the VPC attachment.
func (o LookupTransitGatewayVpcAttachmentResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupTransitGatewayVpcAttachmentResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTransitGatewayVpcAttachmentResultOutput{})
}
