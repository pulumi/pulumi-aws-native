// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::TransitGateway
func LookupTransitGateway(ctx *pulumi.Context, args *LookupTransitGatewayArgs, opts ...pulumi.InvokeOption) (*LookupTransitGatewayResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTransitGatewayResult
	err := ctx.Invoke("aws-native:ec2:getTransitGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTransitGatewayArgs struct {
	// The ID of the transit gateway.
	Id string `pulumi:"id"`
}

type LookupTransitGatewayResult struct {
	// The ID of the default association route table.
	AssociationDefaultRouteTableId *string `pulumi:"associationDefaultRouteTableId"`
	// Enable or disable automatic acceptance of attachment requests. Disabled by default.
	AutoAcceptSharedAttachments *string `pulumi:"autoAcceptSharedAttachments"`
	// Enable or disable automatic association with the default association route table. Enabled by default. If `DefaultRouteTableAssociation` is set to enable, AWS Transit Gateway will create the default transit gateway route table.
	DefaultRouteTableAssociation *string `pulumi:"defaultRouteTableAssociation"`
	// Enable or disable automatic propagation of routes to the default propagation route table. Enabled by default. If `DefaultRouteTablePropagation` is set to enable, AWS Transit Gateway will create the default transit gateway route table.
	DefaultRouteTablePropagation *string `pulumi:"defaultRouteTablePropagation"`
	// The description of the transit gateway.
	Description *string `pulumi:"description"`
	// Enable or disable DNS support. Enabled by default.
	DnsSupport *string `pulumi:"dnsSupport"`
	// The ID of the transit gateway.
	Id *string `pulumi:"id"`
	// The ID of the default propagation route table.
	PropagationDefaultRouteTableId *string `pulumi:"propagationDefaultRouteTableId"`
	// Enables you to reference a security group across VPCs attached to a transit gateway (TGW). Use this option to simplify security group management and control of instance-to-instance traffic across VPCs that are connected by transit gateway. You can also use this option to migrate from VPC peering (which was the only option that supported security group referencing) to transit gateways (which now also support security group referencing). This option is disabled by default and there are no additional costs to use this feature.
	//
	// For important information about this feature, see [Create a transit gateway](https://docs.aws.amazon.com/vpc/latest/tgw/tgw-transit-gateways.html#create-tgw) in the *AWS Transit Gateway Guide* .
	SecurityGroupReferencingSupport *string `pulumi:"securityGroupReferencingSupport"`
	// The tags for the transit gateway.
	Tags              []aws.Tag `pulumi:"tags"`
	TransitGatewayArn *string   `pulumi:"transitGatewayArn"`
	// The transit gateway CIDR blocks.
	TransitGatewayCidrBlocks []string `pulumi:"transitGatewayCidrBlocks"`
	// Enable or disable Equal Cost Multipath Protocol support. Enabled by default.
	VpnEcmpSupport *string `pulumi:"vpnEcmpSupport"`
}

func LookupTransitGatewayOutput(ctx *pulumi.Context, args LookupTransitGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupTransitGatewayResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTransitGatewayResultOutput, error) {
			args := v.(LookupTransitGatewayArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getTransitGateway", args, LookupTransitGatewayResultOutput{}, options).(LookupTransitGatewayResultOutput), nil
		}).(LookupTransitGatewayResultOutput)
}

type LookupTransitGatewayOutputArgs struct {
	// The ID of the transit gateway.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTransitGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayArgs)(nil)).Elem()
}

type LookupTransitGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupTransitGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayResult)(nil)).Elem()
}

func (o LookupTransitGatewayResultOutput) ToLookupTransitGatewayResultOutput() LookupTransitGatewayResultOutput {
	return o
}

func (o LookupTransitGatewayResultOutput) ToLookupTransitGatewayResultOutputWithContext(ctx context.Context) LookupTransitGatewayResultOutput {
	return o
}

// The ID of the default association route table.
func (o LookupTransitGatewayResultOutput) AssociationDefaultRouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) *string { return v.AssociationDefaultRouteTableId }).(pulumi.StringPtrOutput)
}

// Enable or disable automatic acceptance of attachment requests. Disabled by default.
func (o LookupTransitGatewayResultOutput) AutoAcceptSharedAttachments() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) *string { return v.AutoAcceptSharedAttachments }).(pulumi.StringPtrOutput)
}

// Enable or disable automatic association with the default association route table. Enabled by default. If `DefaultRouteTableAssociation` is set to enable, AWS Transit Gateway will create the default transit gateway route table.
func (o LookupTransitGatewayResultOutput) DefaultRouteTableAssociation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) *string { return v.DefaultRouteTableAssociation }).(pulumi.StringPtrOutput)
}

// Enable or disable automatic propagation of routes to the default propagation route table. Enabled by default. If `DefaultRouteTablePropagation` is set to enable, AWS Transit Gateway will create the default transit gateway route table.
func (o LookupTransitGatewayResultOutput) DefaultRouteTablePropagation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) *string { return v.DefaultRouteTablePropagation }).(pulumi.StringPtrOutput)
}

// The description of the transit gateway.
func (o LookupTransitGatewayResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Enable or disable DNS support. Enabled by default.
func (o LookupTransitGatewayResultOutput) DnsSupport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) *string { return v.DnsSupport }).(pulumi.StringPtrOutput)
}

// The ID of the transit gateway.
func (o LookupTransitGatewayResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ID of the default propagation route table.
func (o LookupTransitGatewayResultOutput) PropagationDefaultRouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) *string { return v.PropagationDefaultRouteTableId }).(pulumi.StringPtrOutput)
}

// Enables you to reference a security group across VPCs attached to a transit gateway (TGW). Use this option to simplify security group management and control of instance-to-instance traffic across VPCs that are connected by transit gateway. You can also use this option to migrate from VPC peering (which was the only option that supported security group referencing) to transit gateways (which now also support security group referencing). This option is disabled by default and there are no additional costs to use this feature.
//
// For important information about this feature, see [Create a transit gateway](https://docs.aws.amazon.com/vpc/latest/tgw/tgw-transit-gateways.html#create-tgw) in the *AWS Transit Gateway Guide* .
func (o LookupTransitGatewayResultOutput) SecurityGroupReferencingSupport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) *string { return v.SecurityGroupReferencingSupport }).(pulumi.StringPtrOutput)
}

// The tags for the transit gateway.
func (o LookupTransitGatewayResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func (o LookupTransitGatewayResultOutput) TransitGatewayArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) *string { return v.TransitGatewayArn }).(pulumi.StringPtrOutput)
}

// The transit gateway CIDR blocks.
func (o LookupTransitGatewayResultOutput) TransitGatewayCidrBlocks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) []string { return v.TransitGatewayCidrBlocks }).(pulumi.StringArrayOutput)
}

// Enable or disable Equal Cost Multipath Protocol support. Enabled by default.
func (o LookupTransitGatewayResultOutput) VpnEcmpSupport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayResult) *string { return v.VpnEcmpSupport }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTransitGatewayResultOutput{})
}
