// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::VPCEndpointService
func LookupVpcEndpointService(ctx *pulumi.Context, args *LookupVpcEndpointServiceArgs, opts ...pulumi.InvokeOption) (*LookupVpcEndpointServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpcEndpointServiceResult
	err := ctx.Invoke("aws-native:ec2:getVpcEndpointService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVpcEndpointServiceArgs struct {
	// The ID of the endpoint service.
	ServiceId string `pulumi:"serviceId"`
}

type LookupVpcEndpointServiceResult struct {
	// Indicates whether requests from service consumers to create an endpoint to your service must be accepted.
	AcceptanceRequired *bool `pulumi:"acceptanceRequired"`
	// The Amazon Resource Names (ARNs) of the Gateway Load Balancers.
	GatewayLoadBalancerArns []string `pulumi:"gatewayLoadBalancerArns"`
	// The Amazon Resource Names (ARNs) of the Network Load Balancers.
	NetworkLoadBalancerArns []string `pulumi:"networkLoadBalancerArns"`
	// The entity that is responsible for the endpoint costs. The default is the endpoint owner. If you set the payer responsibility to the service owner, you cannot set it back to the endpoint owner.
	PayerResponsibility *string `pulumi:"payerResponsibility"`
	// The ID of the endpoint service.
	ServiceId *string `pulumi:"serviceId"`
	// Specify which Ip Address types are supported for VPC endpoint service.
	SupportedIpAddressTypes []VpcEndpointServiceIpAddressType `pulumi:"supportedIpAddressTypes"`
	// The Regions from which service consumers can access the service.
	SupportedRegions []string `pulumi:"supportedRegions"`
	// The tags to add to the VPC endpoint service.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupVpcEndpointServiceOutput(ctx *pulumi.Context, args LookupVpcEndpointServiceOutputArgs, opts ...pulumi.InvokeOption) LookupVpcEndpointServiceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVpcEndpointServiceResultOutput, error) {
			args := v.(LookupVpcEndpointServiceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getVpcEndpointService", args, LookupVpcEndpointServiceResultOutput{}, options).(LookupVpcEndpointServiceResultOutput), nil
		}).(LookupVpcEndpointServiceResultOutput)
}

type LookupVpcEndpointServiceOutputArgs struct {
	// The ID of the endpoint service.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (LookupVpcEndpointServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcEndpointServiceArgs)(nil)).Elem()
}

type LookupVpcEndpointServiceResultOutput struct{ *pulumi.OutputState }

func (LookupVpcEndpointServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcEndpointServiceResult)(nil)).Elem()
}

func (o LookupVpcEndpointServiceResultOutput) ToLookupVpcEndpointServiceResultOutput() LookupVpcEndpointServiceResultOutput {
	return o
}

func (o LookupVpcEndpointServiceResultOutput) ToLookupVpcEndpointServiceResultOutputWithContext(ctx context.Context) LookupVpcEndpointServiceResultOutput {
	return o
}

// Indicates whether requests from service consumers to create an endpoint to your service must be accepted.
func (o LookupVpcEndpointServiceResultOutput) AcceptanceRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) *bool { return v.AcceptanceRequired }).(pulumi.BoolPtrOutput)
}

// The Amazon Resource Names (ARNs) of the Gateway Load Balancers.
func (o LookupVpcEndpointServiceResultOutput) GatewayLoadBalancerArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) []string { return v.GatewayLoadBalancerArns }).(pulumi.StringArrayOutput)
}

// The Amazon Resource Names (ARNs) of the Network Load Balancers.
func (o LookupVpcEndpointServiceResultOutput) NetworkLoadBalancerArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) []string { return v.NetworkLoadBalancerArns }).(pulumi.StringArrayOutput)
}

// The entity that is responsible for the endpoint costs. The default is the endpoint owner. If you set the payer responsibility to the service owner, you cannot set it back to the endpoint owner.
func (o LookupVpcEndpointServiceResultOutput) PayerResponsibility() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) *string { return v.PayerResponsibility }).(pulumi.StringPtrOutput)
}

// The ID of the endpoint service.
func (o LookupVpcEndpointServiceResultOutput) ServiceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) *string { return v.ServiceId }).(pulumi.StringPtrOutput)
}

// Specify which Ip Address types are supported for VPC endpoint service.
func (o LookupVpcEndpointServiceResultOutput) SupportedIpAddressTypes() VpcEndpointServiceIpAddressTypeArrayOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) []VpcEndpointServiceIpAddressType {
		return v.SupportedIpAddressTypes
	}).(VpcEndpointServiceIpAddressTypeArrayOutput)
}

// The Regions from which service consumers can access the service.
func (o LookupVpcEndpointServiceResultOutput) SupportedRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) []string { return v.SupportedRegions }).(pulumi.StringArrayOutput)
}

// The tags to add to the VPC endpoint service.
func (o LookupVpcEndpointServiceResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupVpcEndpointServiceResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcEndpointServiceResultOutput{})
}
