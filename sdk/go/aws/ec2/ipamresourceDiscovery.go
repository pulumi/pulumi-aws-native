// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Schema of AWS::EC2::IPAMResourceDiscovery Type
type IPAMResourceDiscovery struct {
	pulumi.CustomResourceState

	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Amazon Resource Name (Arn) for the Resource Discovery.
	IpamResourceDiscoveryArn pulumi.StringOutput `pulumi:"ipamResourceDiscoveryArn"`
	// Id of the IPAM Pool.
	IpamResourceDiscoveryId pulumi.StringOutput `pulumi:"ipamResourceDiscoveryId"`
	// The region the resource discovery is setup in.
	IpamResourceDiscoveryRegion pulumi.StringOutput `pulumi:"ipamResourceDiscoveryRegion"`
	// Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is IPv6.
	IsDefault pulumi.BoolOutput `pulumi:"isDefault"`
	// The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as enabling monitoring
	OperatingRegions IPAMResourceDiscoveryIpamOperatingRegionArrayOutput `pulumi:"operatingRegions"`
	// Owner Account ID of the Resource Discovery
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// The state of this Resource Discovery.
	State pulumi.StringOutput `pulumi:"state"`
	// An array of key-value pairs to apply to this resource.
	Tags IPAMResourceDiscoveryTagArrayOutput `pulumi:"tags"`
}

// NewIPAMResourceDiscovery registers a new resource with the given unique name, arguments, and options.
func NewIPAMResourceDiscovery(ctx *pulumi.Context,
	name string, args *IPAMResourceDiscoveryArgs, opts ...pulumi.ResourceOption) (*IPAMResourceDiscovery, error) {
	if args == nil {
		args = &IPAMResourceDiscoveryArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IPAMResourceDiscovery
	err := ctx.RegisterResource("aws-native:ec2:IPAMResourceDiscovery", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIPAMResourceDiscovery gets an existing IPAMResourceDiscovery resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIPAMResourceDiscovery(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IPAMResourceDiscoveryState, opts ...pulumi.ResourceOption) (*IPAMResourceDiscovery, error) {
	var resource IPAMResourceDiscovery
	err := ctx.ReadResource("aws-native:ec2:IPAMResourceDiscovery", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IPAMResourceDiscovery resources.
type ipamresourceDiscoveryState struct {
}

type IPAMResourceDiscoveryState struct {
}

func (IPAMResourceDiscoveryState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipamresourceDiscoveryState)(nil)).Elem()
}

type ipamresourceDiscoveryArgs struct {
	Description *string `pulumi:"description"`
	// The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as enabling monitoring
	OperatingRegions []IPAMResourceDiscoveryIpamOperatingRegion `pulumi:"operatingRegions"`
	// An array of key-value pairs to apply to this resource.
	Tags []IPAMResourceDiscoveryTag `pulumi:"tags"`
}

// The set of arguments for constructing a IPAMResourceDiscovery resource.
type IPAMResourceDiscoveryArgs struct {
	Description pulumi.StringPtrInput
	// The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as enabling monitoring
	OperatingRegions IPAMResourceDiscoveryIpamOperatingRegionArrayInput
	// An array of key-value pairs to apply to this resource.
	Tags IPAMResourceDiscoveryTagArrayInput
}

func (IPAMResourceDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipamresourceDiscoveryArgs)(nil)).Elem()
}

type IPAMResourceDiscoveryInput interface {
	pulumi.Input

	ToIPAMResourceDiscoveryOutput() IPAMResourceDiscoveryOutput
	ToIPAMResourceDiscoveryOutputWithContext(ctx context.Context) IPAMResourceDiscoveryOutput
}

func (*IPAMResourceDiscovery) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAMResourceDiscovery)(nil)).Elem()
}

func (i *IPAMResourceDiscovery) ToIPAMResourceDiscoveryOutput() IPAMResourceDiscoveryOutput {
	return i.ToIPAMResourceDiscoveryOutputWithContext(context.Background())
}

func (i *IPAMResourceDiscovery) ToIPAMResourceDiscoveryOutputWithContext(ctx context.Context) IPAMResourceDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAMResourceDiscoveryOutput)
}

type IPAMResourceDiscoveryOutput struct{ *pulumi.OutputState }

func (IPAMResourceDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAMResourceDiscovery)(nil)).Elem()
}

func (o IPAMResourceDiscoveryOutput) ToIPAMResourceDiscoveryOutput() IPAMResourceDiscoveryOutput {
	return o
}

func (o IPAMResourceDiscoveryOutput) ToIPAMResourceDiscoveryOutputWithContext(ctx context.Context) IPAMResourceDiscoveryOutput {
	return o
}

func (o IPAMResourceDiscoveryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IPAMResourceDiscovery) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (Arn) for the Resource Discovery.
func (o IPAMResourceDiscoveryOutput) IpamResourceDiscoveryArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IPAMResourceDiscovery) pulumi.StringOutput { return v.IpamResourceDiscoveryArn }).(pulumi.StringOutput)
}

// Id of the IPAM Pool.
func (o IPAMResourceDiscoveryOutput) IpamResourceDiscoveryId() pulumi.StringOutput {
	return o.ApplyT(func(v *IPAMResourceDiscovery) pulumi.StringOutput { return v.IpamResourceDiscoveryId }).(pulumi.StringOutput)
}

// The region the resource discovery is setup in.
func (o IPAMResourceDiscoveryOutput) IpamResourceDiscoveryRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *IPAMResourceDiscovery) pulumi.StringOutput { return v.IpamResourceDiscoveryRegion }).(pulumi.StringOutput)
}

// Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is IPv6.
func (o IPAMResourceDiscoveryOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *IPAMResourceDiscovery) pulumi.BoolOutput { return v.IsDefault }).(pulumi.BoolOutput)
}

// The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as enabling monitoring
func (o IPAMResourceDiscoveryOutput) OperatingRegions() IPAMResourceDiscoveryIpamOperatingRegionArrayOutput {
	return o.ApplyT(func(v *IPAMResourceDiscovery) IPAMResourceDiscoveryIpamOperatingRegionArrayOutput {
		return v.OperatingRegions
	}).(IPAMResourceDiscoveryIpamOperatingRegionArrayOutput)
}

// Owner Account ID of the Resource Discovery
func (o IPAMResourceDiscoveryOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *IPAMResourceDiscovery) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

// The state of this Resource Discovery.
func (o IPAMResourceDiscoveryOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *IPAMResourceDiscovery) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to this resource.
func (o IPAMResourceDiscoveryOutput) Tags() IPAMResourceDiscoveryTagArrayOutput {
	return o.ApplyT(func(v *IPAMResourceDiscovery) IPAMResourceDiscoveryTagArrayOutput { return v.Tags }).(IPAMResourceDiscoveryTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IPAMResourceDiscoveryInput)(nil)).Elem(), &IPAMResourceDiscovery{})
	pulumi.RegisterOutputType(IPAMResourceDiscoveryOutput{})
}
