// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::VPCGatewayAttachment
func LookupVpcGatewayAttachment(ctx *pulumi.Context, args *LookupVpcGatewayAttachmentArgs, opts ...pulumi.InvokeOption) (*LookupVpcGatewayAttachmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpcGatewayAttachmentResult
	err := ctx.Invoke("aws-native:ec2:getVpcGatewayAttachment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVpcGatewayAttachmentArgs struct {
	// Used to identify if this resource is an Internet Gateway or Vpn Gateway Attachment
	AttachmentType string `pulumi:"attachmentType"`
	// The ID of the VPC.
	VpcId string `pulumi:"vpcId"`
}

type LookupVpcGatewayAttachmentResult struct {
	// Used to identify if this resource is an Internet Gateway or Vpn Gateway Attachment
	AttachmentType *string `pulumi:"attachmentType"`
	// The ID of the internet gateway. You must specify either InternetGatewayId or VpnGatewayId, but not both.
	InternetGatewayId *string `pulumi:"internetGatewayId"`
	// The ID of the virtual private gateway. You must specify either InternetGatewayId or VpnGatewayId, but not both.
	VpnGatewayId *string `pulumi:"vpnGatewayId"`
}

func LookupVpcGatewayAttachmentOutput(ctx *pulumi.Context, args LookupVpcGatewayAttachmentOutputArgs, opts ...pulumi.InvokeOption) LookupVpcGatewayAttachmentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVpcGatewayAttachmentResultOutput, error) {
			args := v.(LookupVpcGatewayAttachmentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getVpcGatewayAttachment", args, LookupVpcGatewayAttachmentResultOutput{}, options).(LookupVpcGatewayAttachmentResultOutput), nil
		}).(LookupVpcGatewayAttachmentResultOutput)
}

type LookupVpcGatewayAttachmentOutputArgs struct {
	// Used to identify if this resource is an Internet Gateway or Vpn Gateway Attachment
	AttachmentType pulumi.StringInput `pulumi:"attachmentType"`
	// The ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (LookupVpcGatewayAttachmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcGatewayAttachmentArgs)(nil)).Elem()
}

type LookupVpcGatewayAttachmentResultOutput struct{ *pulumi.OutputState }

func (LookupVpcGatewayAttachmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcGatewayAttachmentResult)(nil)).Elem()
}

func (o LookupVpcGatewayAttachmentResultOutput) ToLookupVpcGatewayAttachmentResultOutput() LookupVpcGatewayAttachmentResultOutput {
	return o
}

func (o LookupVpcGatewayAttachmentResultOutput) ToLookupVpcGatewayAttachmentResultOutputWithContext(ctx context.Context) LookupVpcGatewayAttachmentResultOutput {
	return o
}

// Used to identify if this resource is an Internet Gateway or Vpn Gateway Attachment
func (o LookupVpcGatewayAttachmentResultOutput) AttachmentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcGatewayAttachmentResult) *string { return v.AttachmentType }).(pulumi.StringPtrOutput)
}

// The ID of the internet gateway. You must specify either InternetGatewayId or VpnGatewayId, but not both.
func (o LookupVpcGatewayAttachmentResultOutput) InternetGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcGatewayAttachmentResult) *string { return v.InternetGatewayId }).(pulumi.StringPtrOutput)
}

// The ID of the virtual private gateway. You must specify either InternetGatewayId or VpnGatewayId, but not both.
func (o LookupVpcGatewayAttachmentResultOutput) VpnGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcGatewayAttachmentResult) *string { return v.VpnGatewayId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcGatewayAttachmentResultOutput{})
}
