// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Schema of AWS::EC2::IPAMResourceDiscovery Type
type IpamResourceDiscovery struct {
	pulumi.CustomResourceState

	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Amazon Resource Name (Arn) for the Resource Discovery.
	IpamResourceDiscoveryArn pulumi.StringOutput `pulumi:"ipamResourceDiscoveryArn"`
	// Id of the IPAM Pool.
	IpamResourceDiscoveryId pulumi.StringOutput `pulumi:"ipamResourceDiscoveryId"`
	// The region the resource discovery is setup in.
	IpamResourceDiscoveryRegion pulumi.StringOutput `pulumi:"ipamResourceDiscoveryRegion"`
	// Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is IPv6.
	IsDefault pulumi.BoolOutput `pulumi:"isDefault"`
	// The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as enabling monitoring
	OperatingRegions IpamResourceDiscoveryIpamOperatingRegionArrayOutput `pulumi:"operatingRegions"`
	// Owner Account ID of the Resource Discovery
	OwnerId pulumi.StringOutput `pulumi:"ownerId"`
	// The state of this Resource Discovery.
	State pulumi.StringOutput `pulumi:"state"`
	// An array of key-value pairs to apply to this resource.
	Tags IpamResourceDiscoveryTagArrayOutput `pulumi:"tags"`
}

// NewIpamResourceDiscovery registers a new resource with the given unique name, arguments, and options.
func NewIpamResourceDiscovery(ctx *pulumi.Context,
	name string, args *IpamResourceDiscoveryArgs, opts ...pulumi.ResourceOption) (*IpamResourceDiscovery, error) {
	if args == nil {
		args = &IpamResourceDiscoveryArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IpamResourceDiscovery
	err := ctx.RegisterResource("aws-native:ec2:IpamResourceDiscovery", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIpamResourceDiscovery gets an existing IpamResourceDiscovery resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIpamResourceDiscovery(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IpamResourceDiscoveryState, opts ...pulumi.ResourceOption) (*IpamResourceDiscovery, error) {
	var resource IpamResourceDiscovery
	err := ctx.ReadResource("aws-native:ec2:IpamResourceDiscovery", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IpamResourceDiscovery resources.
type ipamResourceDiscoveryState struct {
}

type IpamResourceDiscoveryState struct {
}

func (IpamResourceDiscoveryState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipamResourceDiscoveryState)(nil)).Elem()
}

type ipamResourceDiscoveryArgs struct {
	Description *string `pulumi:"description"`
	// The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as enabling monitoring
	OperatingRegions []IpamResourceDiscoveryIpamOperatingRegion `pulumi:"operatingRegions"`
	// An array of key-value pairs to apply to this resource.
	Tags []IpamResourceDiscoveryTag `pulumi:"tags"`
}

// The set of arguments for constructing a IpamResourceDiscovery resource.
type IpamResourceDiscoveryArgs struct {
	Description pulumi.StringPtrInput
	// The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as enabling monitoring
	OperatingRegions IpamResourceDiscoveryIpamOperatingRegionArrayInput
	// An array of key-value pairs to apply to this resource.
	Tags IpamResourceDiscoveryTagArrayInput
}

func (IpamResourceDiscoveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipamResourceDiscoveryArgs)(nil)).Elem()
}

type IpamResourceDiscoveryInput interface {
	pulumi.Input

	ToIpamResourceDiscoveryOutput() IpamResourceDiscoveryOutput
	ToIpamResourceDiscoveryOutputWithContext(ctx context.Context) IpamResourceDiscoveryOutput
}

func (*IpamResourceDiscovery) ElementType() reflect.Type {
	return reflect.TypeOf((**IpamResourceDiscovery)(nil)).Elem()
}

func (i *IpamResourceDiscovery) ToIpamResourceDiscoveryOutput() IpamResourceDiscoveryOutput {
	return i.ToIpamResourceDiscoveryOutputWithContext(context.Background())
}

func (i *IpamResourceDiscovery) ToIpamResourceDiscoveryOutputWithContext(ctx context.Context) IpamResourceDiscoveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpamResourceDiscoveryOutput)
}

func (i *IpamResourceDiscovery) ToOutput(ctx context.Context) pulumix.Output[*IpamResourceDiscovery] {
	return pulumix.Output[*IpamResourceDiscovery]{
		OutputState: i.ToIpamResourceDiscoveryOutputWithContext(ctx).OutputState,
	}
}

type IpamResourceDiscoveryOutput struct{ *pulumi.OutputState }

func (IpamResourceDiscoveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpamResourceDiscovery)(nil)).Elem()
}

func (o IpamResourceDiscoveryOutput) ToIpamResourceDiscoveryOutput() IpamResourceDiscoveryOutput {
	return o
}

func (o IpamResourceDiscoveryOutput) ToIpamResourceDiscoveryOutputWithContext(ctx context.Context) IpamResourceDiscoveryOutput {
	return o
}

func (o IpamResourceDiscoveryOutput) ToOutput(ctx context.Context) pulumix.Output[*IpamResourceDiscovery] {
	return pulumix.Output[*IpamResourceDiscovery]{
		OutputState: o.OutputState,
	}
}

func (o IpamResourceDiscoveryOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpamResourceDiscovery) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (Arn) for the Resource Discovery.
func (o IpamResourceDiscoveryOutput) IpamResourceDiscoveryArn() pulumi.StringOutput {
	return o.ApplyT(func(v *IpamResourceDiscovery) pulumi.StringOutput { return v.IpamResourceDiscoveryArn }).(pulumi.StringOutput)
}

// Id of the IPAM Pool.
func (o IpamResourceDiscoveryOutput) IpamResourceDiscoveryId() pulumi.StringOutput {
	return o.ApplyT(func(v *IpamResourceDiscovery) pulumi.StringOutput { return v.IpamResourceDiscoveryId }).(pulumi.StringOutput)
}

// The region the resource discovery is setup in.
func (o IpamResourceDiscoveryOutput) IpamResourceDiscoveryRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *IpamResourceDiscovery) pulumi.StringOutput { return v.IpamResourceDiscoveryRegion }).(pulumi.StringOutput)
}

// Determines whether or not address space from this pool is publicly advertised. Must be set if and only if the pool is IPv6.
func (o IpamResourceDiscoveryOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *IpamResourceDiscovery) pulumi.BoolOutput { return v.IsDefault }).(pulumi.BoolOutput)
}

// The regions Resource Discovery is enabled for. Allows resource discoveries to be created in these regions, as well as enabling monitoring
func (o IpamResourceDiscoveryOutput) OperatingRegions() IpamResourceDiscoveryIpamOperatingRegionArrayOutput {
	return o.ApplyT(func(v *IpamResourceDiscovery) IpamResourceDiscoveryIpamOperatingRegionArrayOutput {
		return v.OperatingRegions
	}).(IpamResourceDiscoveryIpamOperatingRegionArrayOutput)
}

// Owner Account ID of the Resource Discovery
func (o IpamResourceDiscoveryOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *IpamResourceDiscovery) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

// The state of this Resource Discovery.
func (o IpamResourceDiscoveryOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *IpamResourceDiscovery) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// An array of key-value pairs to apply to this resource.
func (o IpamResourceDiscoveryOutput) Tags() IpamResourceDiscoveryTagArrayOutput {
	return o.ApplyT(func(v *IpamResourceDiscovery) IpamResourceDiscoveryTagArrayOutput { return v.Tags }).(IpamResourceDiscoveryTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpamResourceDiscoveryInput)(nil)).Elem(), &IpamResourceDiscovery{})
	pulumi.RegisterOutputType(IpamResourceDiscoveryOutput{})
}
