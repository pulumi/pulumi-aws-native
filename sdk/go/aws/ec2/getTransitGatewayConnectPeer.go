// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::TransitGatewayConnectPeer
func LookupTransitGatewayConnectPeer(ctx *pulumi.Context, args *LookupTransitGatewayConnectPeerArgs, opts ...pulumi.InvokeOption) (*LookupTransitGatewayConnectPeerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTransitGatewayConnectPeerResult
	err := ctx.Invoke("aws-native:ec2:getTransitGatewayConnectPeer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTransitGatewayConnectPeerArgs struct {
	// The ID of the Connect peer.
	TransitGatewayConnectPeerId string `pulumi:"transitGatewayConnectPeerId"`
}

type LookupTransitGatewayConnectPeerResult struct {
	// The creation time.
	CreationTime *string `pulumi:"creationTime"`
	// The state of the Connect peer.
	State *string `pulumi:"state"`
	// The tags for the Connect Peer.
	Tags []aws.Tag `pulumi:"tags"`
	// The ID of the Connect peer.
	TransitGatewayConnectPeerId *string `pulumi:"transitGatewayConnectPeerId"`
}

func LookupTransitGatewayConnectPeerOutput(ctx *pulumi.Context, args LookupTransitGatewayConnectPeerOutputArgs, opts ...pulumi.InvokeOption) LookupTransitGatewayConnectPeerResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTransitGatewayConnectPeerResultOutput, error) {
			args := v.(LookupTransitGatewayConnectPeerArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getTransitGatewayConnectPeer", args, LookupTransitGatewayConnectPeerResultOutput{}, options).(LookupTransitGatewayConnectPeerResultOutput), nil
		}).(LookupTransitGatewayConnectPeerResultOutput)
}

type LookupTransitGatewayConnectPeerOutputArgs struct {
	// The ID of the Connect peer.
	TransitGatewayConnectPeerId pulumi.StringInput `pulumi:"transitGatewayConnectPeerId"`
}

func (LookupTransitGatewayConnectPeerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayConnectPeerArgs)(nil)).Elem()
}

type LookupTransitGatewayConnectPeerResultOutput struct{ *pulumi.OutputState }

func (LookupTransitGatewayConnectPeerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayConnectPeerResult)(nil)).Elem()
}

func (o LookupTransitGatewayConnectPeerResultOutput) ToLookupTransitGatewayConnectPeerResultOutput() LookupTransitGatewayConnectPeerResultOutput {
	return o
}

func (o LookupTransitGatewayConnectPeerResultOutput) ToLookupTransitGatewayConnectPeerResultOutputWithContext(ctx context.Context) LookupTransitGatewayConnectPeerResultOutput {
	return o
}

// The creation time.
func (o LookupTransitGatewayConnectPeerResultOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayConnectPeerResult) *string { return v.CreationTime }).(pulumi.StringPtrOutput)
}

// The state of the Connect peer.
func (o LookupTransitGatewayConnectPeerResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayConnectPeerResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

// The tags for the Connect Peer.
func (o LookupTransitGatewayConnectPeerResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupTransitGatewayConnectPeerResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// The ID of the Connect peer.
func (o LookupTransitGatewayConnectPeerResultOutput) TransitGatewayConnectPeerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayConnectPeerResult) *string { return v.TransitGatewayConnectPeerId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTransitGatewayConnectPeerResultOutput{})
}
