// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::EIPAssociation
func LookupEIPAssociation(ctx *pulumi.Context, args *LookupEIPAssociationArgs, opts ...pulumi.InvokeOption) (*LookupEIPAssociationResult, error) {
	var rv LookupEIPAssociationResult
	err := ctx.Invoke("aws-native:ec2:getEIPAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEIPAssociationArgs struct {
	Id string `pulumi:"id"`
}

type LookupEIPAssociationResult struct {
	AllocationId       *string `pulumi:"allocationId"`
	EIP                *string `pulumi:"eIP"`
	Id                 *string `pulumi:"id"`
	InstanceId         *string `pulumi:"instanceId"`
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	PrivateIpAddress   *string `pulumi:"privateIpAddress"`
}

func LookupEIPAssociationOutput(ctx *pulumi.Context, args LookupEIPAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupEIPAssociationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEIPAssociationResult, error) {
			args := v.(LookupEIPAssociationArgs)
			r, err := LookupEIPAssociation(ctx, &args, opts...)
			var s LookupEIPAssociationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEIPAssociationResultOutput)
}

type LookupEIPAssociationOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupEIPAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEIPAssociationArgs)(nil)).Elem()
}

type LookupEIPAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupEIPAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEIPAssociationResult)(nil)).Elem()
}

func (o LookupEIPAssociationResultOutput) ToLookupEIPAssociationResultOutput() LookupEIPAssociationResultOutput {
	return o
}

func (o LookupEIPAssociationResultOutput) ToLookupEIPAssociationResultOutputWithContext(ctx context.Context) LookupEIPAssociationResultOutput {
	return o
}

func (o LookupEIPAssociationResultOutput) AllocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEIPAssociationResult) *string { return v.AllocationId }).(pulumi.StringPtrOutput)
}

func (o LookupEIPAssociationResultOutput) EIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEIPAssociationResult) *string { return v.EIP }).(pulumi.StringPtrOutput)
}

func (o LookupEIPAssociationResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEIPAssociationResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupEIPAssociationResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEIPAssociationResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o LookupEIPAssociationResultOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEIPAssociationResult) *string { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

func (o LookupEIPAssociationResultOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEIPAssociationResult) *string { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEIPAssociationResultOutput{})
}
