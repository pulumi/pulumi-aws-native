// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for EC2 EIP association.
type EIPAssociation struct {
	pulumi.CustomResourceState

	// The allocation ID. This is required for EC2-VPC.
	AllocationId pulumi.StringPtrOutput `pulumi:"allocationId"`
	// The Elastic IP address to associate with the instance.
	EIP pulumi.StringPtrOutput `pulumi:"eIP"`
	// The ID of the instance.
	InstanceId pulumi.StringPtrOutput `pulumi:"instanceId"`
	// The ID of the network interface.
	NetworkInterfaceId pulumi.StringPtrOutput `pulumi:"networkInterfaceId"`
	// The primary or secondary private IP address to associate with the Elastic IP address.
	PrivateIpAddress pulumi.StringPtrOutput `pulumi:"privateIpAddress"`
}

// NewEIPAssociation registers a new resource with the given unique name, arguments, and options.
func NewEIPAssociation(ctx *pulumi.Context,
	name string, args *EIPAssociationArgs, opts ...pulumi.ResourceOption) (*EIPAssociation, error) {
	if args == nil {
		args = &EIPAssociationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EIPAssociation
	err := ctx.RegisterResource("aws-native:ec2:EIPAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEIPAssociation gets an existing EIPAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEIPAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EIPAssociationState, opts ...pulumi.ResourceOption) (*EIPAssociation, error) {
	var resource EIPAssociation
	err := ctx.ReadResource("aws-native:ec2:EIPAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EIPAssociation resources.
type eipassociationState struct {
}

type EIPAssociationState struct {
}

func (EIPAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*eipassociationState)(nil)).Elem()
}

type eipassociationArgs struct {
	// The allocation ID. This is required for EC2-VPC.
	AllocationId *string `pulumi:"allocationId"`
	// The Elastic IP address to associate with the instance.
	EIP *string `pulumi:"eIP"`
	// The ID of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// The ID of the network interface.
	NetworkInterfaceId *string `pulumi:"networkInterfaceId"`
	// The primary or secondary private IP address to associate with the Elastic IP address.
	PrivateIpAddress *string `pulumi:"privateIpAddress"`
}

// The set of arguments for constructing a EIPAssociation resource.
type EIPAssociationArgs struct {
	// The allocation ID. This is required for EC2-VPC.
	AllocationId pulumi.StringPtrInput
	// The Elastic IP address to associate with the instance.
	EIP pulumi.StringPtrInput
	// The ID of the instance.
	InstanceId pulumi.StringPtrInput
	// The ID of the network interface.
	NetworkInterfaceId pulumi.StringPtrInput
	// The primary or secondary private IP address to associate with the Elastic IP address.
	PrivateIpAddress pulumi.StringPtrInput
}

func (EIPAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eipassociationArgs)(nil)).Elem()
}

type EIPAssociationInput interface {
	pulumi.Input

	ToEIPAssociationOutput() EIPAssociationOutput
	ToEIPAssociationOutputWithContext(ctx context.Context) EIPAssociationOutput
}

func (*EIPAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**EIPAssociation)(nil)).Elem()
}

func (i *EIPAssociation) ToEIPAssociationOutput() EIPAssociationOutput {
	return i.ToEIPAssociationOutputWithContext(context.Background())
}

func (i *EIPAssociation) ToEIPAssociationOutputWithContext(ctx context.Context) EIPAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EIPAssociationOutput)
}

type EIPAssociationOutput struct{ *pulumi.OutputState }

func (EIPAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EIPAssociation)(nil)).Elem()
}

func (o EIPAssociationOutput) ToEIPAssociationOutput() EIPAssociationOutput {
	return o
}

func (o EIPAssociationOutput) ToEIPAssociationOutputWithContext(ctx context.Context) EIPAssociationOutput {
	return o
}

// The allocation ID. This is required for EC2-VPC.
func (o EIPAssociationOutput) AllocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EIPAssociation) pulumi.StringPtrOutput { return v.AllocationId }).(pulumi.StringPtrOutput)
}

// The Elastic IP address to associate with the instance.
func (o EIPAssociationOutput) EIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EIPAssociation) pulumi.StringPtrOutput { return v.EIP }).(pulumi.StringPtrOutput)
}

// The ID of the instance.
func (o EIPAssociationOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EIPAssociation) pulumi.StringPtrOutput { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The ID of the network interface.
func (o EIPAssociationOutput) NetworkInterfaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EIPAssociation) pulumi.StringPtrOutput { return v.NetworkInterfaceId }).(pulumi.StringPtrOutput)
}

// The primary or secondary private IP address to associate with the Elastic IP address.
func (o EIPAssociationOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EIPAssociation) pulumi.StringPtrOutput { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EIPAssociationInput)(nil)).Elem(), &EIPAssociation{})
	pulumi.RegisterOutputType(EIPAssociationOutput{})
}
