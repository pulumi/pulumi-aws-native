// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Schema of AWS::EC2::IPAMPoolCidr Type
func LookupIPAMPoolCidr(ctx *pulumi.Context, args *LookupIPAMPoolCidrArgs, opts ...pulumi.InvokeOption) (*LookupIPAMPoolCidrResult, error) {
	var rv LookupIPAMPoolCidrResult
	err := ctx.Invoke("aws-native:ec2:getIPAMPoolCidr", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIPAMPoolCidrArgs struct {
	// Id of the IPAM Pool Cidr.
	IpamPoolCidrId string `pulumi:"ipamPoolCidrId"`
	// Id of the IPAM Pool.
	IpamPoolId string `pulumi:"ipamPoolId"`
}

type LookupIPAMPoolCidrResult struct {
	// Id of the IPAM Pool Cidr.
	IpamPoolCidrId *string `pulumi:"ipamPoolCidrId"`
	// Provisioned state of the cidr.
	State *string `pulumi:"state"`
}

func LookupIPAMPoolCidrOutput(ctx *pulumi.Context, args LookupIPAMPoolCidrOutputArgs, opts ...pulumi.InvokeOption) LookupIPAMPoolCidrResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIPAMPoolCidrResult, error) {
			args := v.(LookupIPAMPoolCidrArgs)
			r, err := LookupIPAMPoolCidr(ctx, &args, opts...)
			var s LookupIPAMPoolCidrResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIPAMPoolCidrResultOutput)
}

type LookupIPAMPoolCidrOutputArgs struct {
	// Id of the IPAM Pool Cidr.
	IpamPoolCidrId pulumi.StringInput `pulumi:"ipamPoolCidrId"`
	// Id of the IPAM Pool.
	IpamPoolId pulumi.StringInput `pulumi:"ipamPoolId"`
}

func (LookupIPAMPoolCidrOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIPAMPoolCidrArgs)(nil)).Elem()
}

type LookupIPAMPoolCidrResultOutput struct{ *pulumi.OutputState }

func (LookupIPAMPoolCidrResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIPAMPoolCidrResult)(nil)).Elem()
}

func (o LookupIPAMPoolCidrResultOutput) ToLookupIPAMPoolCidrResultOutput() LookupIPAMPoolCidrResultOutput {
	return o
}

func (o LookupIPAMPoolCidrResultOutput) ToLookupIPAMPoolCidrResultOutputWithContext(ctx context.Context) LookupIPAMPoolCidrResultOutput {
	return o
}

// Id of the IPAM Pool Cidr.
func (o LookupIPAMPoolCidrResultOutput) IpamPoolCidrId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIPAMPoolCidrResult) *string { return v.IpamPoolCidrId }).(pulumi.StringPtrOutput)
}

// Provisioned state of the cidr.
func (o LookupIPAMPoolCidrResultOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIPAMPoolCidrResult) *string { return v.State }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIPAMPoolCidrResultOutput{})
}
