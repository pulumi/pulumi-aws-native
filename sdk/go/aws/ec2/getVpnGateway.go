// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Schema for EC2 VPN Gateway
func LookupVpnGateway(ctx *pulumi.Context, args *LookupVpnGatewayArgs, opts ...pulumi.InvokeOption) (*LookupVpnGatewayResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpnGatewayResult
	err := ctx.Invoke("aws-native:ec2:getVpnGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVpnGatewayArgs struct {
	// VPN Gateway ID generated by service
	VpnGatewayId string `pulumi:"vpnGatewayId"`
}

type LookupVpnGatewayResult struct {
	// Any tags assigned to the virtual private gateway.
	Tags []VpnGatewayTag `pulumi:"tags"`
	// VPN Gateway ID generated by service
	VpnGatewayId *string `pulumi:"vpnGatewayId"`
}

func LookupVpnGatewayOutput(ctx *pulumi.Context, args LookupVpnGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupVpnGatewayResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpnGatewayResult, error) {
			args := v.(LookupVpnGatewayArgs)
			r, err := LookupVpnGateway(ctx, &args, opts...)
			var s LookupVpnGatewayResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpnGatewayResultOutput)
}

type LookupVpnGatewayOutputArgs struct {
	// VPN Gateway ID generated by service
	VpnGatewayId pulumi.StringInput `pulumi:"vpnGatewayId"`
}

func (LookupVpnGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnGatewayArgs)(nil)).Elem()
}

type LookupVpnGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupVpnGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpnGatewayResult)(nil)).Elem()
}

func (o LookupVpnGatewayResultOutput) ToLookupVpnGatewayResultOutput() LookupVpnGatewayResultOutput {
	return o
}

func (o LookupVpnGatewayResultOutput) ToLookupVpnGatewayResultOutputWithContext(ctx context.Context) LookupVpnGatewayResultOutput {
	return o
}

func (o LookupVpnGatewayResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupVpnGatewayResult] {
	return pulumix.Output[LookupVpnGatewayResult]{
		OutputState: o.OutputState,
	}
}

// Any tags assigned to the virtual private gateway.
func (o LookupVpnGatewayResultOutput) Tags() VpnGatewayTagArrayOutput {
	return o.ApplyT(func(v LookupVpnGatewayResult) []VpnGatewayTag { return v.Tags }).(VpnGatewayTagArrayOutput)
}

// VPN Gateway ID generated by service
func (o LookupVpnGatewayResultOutput) VpnGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpnGatewayResult) *string { return v.VpnGatewayId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpnGatewayResultOutput{})
}
