// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::EIP
type Eip struct {
	pulumi.CustomResourceState

	// The Allocation ID of the EIP generated by resource.
	AllocationId pulumi.StringOutput `pulumi:"allocationId"`
	// Indicates whether the Elastic IP address is for use with instances in a VPC or instance in EC2-Classic.
	Domain pulumi.StringPtrOutput `pulumi:"domain"`
	// The ID of the instance.
	InstanceId pulumi.StringPtrOutput `pulumi:"instanceId"`
	// A unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.
	NetworkBorderGroup pulumi.StringPtrOutput `pulumi:"networkBorderGroup"`
	// The PublicIP of the EIP generated by resource.
	PublicIp pulumi.StringOutput `pulumi:"publicIp"`
	// The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.
	PublicIpv4Pool pulumi.StringPtrOutput `pulumi:"publicIpv4Pool"`
	// Any tags assigned to the EIP.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The PublicIP of the EIP generated by resource through transfer from another account
	TransferAddress pulumi.StringPtrOutput `pulumi:"transferAddress"`
}

// NewEip registers a new resource with the given unique name, arguments, and options.
func NewEip(ctx *pulumi.Context,
	name string, args *EipArgs, opts ...pulumi.ResourceOption) (*Eip, error) {
	if args == nil {
		args = &EipArgs{}
	}

	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"domain",
		"networkBorderGroup",
		"transferAddress",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Eip
	err := ctx.RegisterResource("aws-native:ec2:Eip", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEip gets an existing Eip resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEip(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EipState, opts ...pulumi.ResourceOption) (*Eip, error) {
	var resource Eip
	err := ctx.ReadResource("aws-native:ec2:Eip", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Eip resources.
type eipState struct {
}

type EipState struct {
}

func (EipState) ElementType() reflect.Type {
	return reflect.TypeOf((*eipState)(nil)).Elem()
}

type eipArgs struct {
	// Indicates whether the Elastic IP address is for use with instances in a VPC or instance in EC2-Classic.
	Domain *string `pulumi:"domain"`
	// The ID of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// A unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.
	NetworkBorderGroup *string `pulumi:"networkBorderGroup"`
	// The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.
	PublicIpv4Pool *string `pulumi:"publicIpv4Pool"`
	// Any tags assigned to the EIP.
	Tags []aws.Tag `pulumi:"tags"`
	// The PublicIP of the EIP generated by resource through transfer from another account
	TransferAddress *string `pulumi:"transferAddress"`
}

// The set of arguments for constructing a Eip resource.
type EipArgs struct {
	// Indicates whether the Elastic IP address is for use with instances in a VPC or instance in EC2-Classic.
	Domain pulumi.StringPtrInput
	// The ID of the instance.
	InstanceId pulumi.StringPtrInput
	// A unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.
	NetworkBorderGroup pulumi.StringPtrInput
	// The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.
	PublicIpv4Pool pulumi.StringPtrInput
	// Any tags assigned to the EIP.
	Tags aws.TagArrayInput
	// The PublicIP of the EIP generated by resource through transfer from another account
	TransferAddress pulumi.StringPtrInput
}

func (EipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eipArgs)(nil)).Elem()
}

type EipInput interface {
	pulumi.Input

	ToEipOutput() EipOutput
	ToEipOutputWithContext(ctx context.Context) EipOutput
}

func (*Eip) ElementType() reflect.Type {
	return reflect.TypeOf((**Eip)(nil)).Elem()
}

func (i *Eip) ToEipOutput() EipOutput {
	return i.ToEipOutputWithContext(context.Background())
}

func (i *Eip) ToEipOutputWithContext(ctx context.Context) EipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EipOutput)
}

type EipOutput struct{ *pulumi.OutputState }

func (EipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Eip)(nil)).Elem()
}

func (o EipOutput) ToEipOutput() EipOutput {
	return o
}

func (o EipOutput) ToEipOutputWithContext(ctx context.Context) EipOutput {
	return o
}

// The Allocation ID of the EIP generated by resource.
func (o EipOutput) AllocationId() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.AllocationId }).(pulumi.StringOutput)
}

// Indicates whether the Elastic IP address is for use with instances in a VPC or instance in EC2-Classic.
func (o EipOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringPtrOutput { return v.Domain }).(pulumi.StringPtrOutput)
}

// The ID of the instance.
func (o EipOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringPtrOutput { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// A unique set of Availability Zones, Local Zones, or Wavelength Zones from which Amazon Web Services advertises IP addresses.
func (o EipOutput) NetworkBorderGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringPtrOutput { return v.NetworkBorderGroup }).(pulumi.StringPtrOutput)
}

// The PublicIP of the EIP generated by resource.
func (o EipOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

// The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.
func (o EipOutput) PublicIpv4Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringPtrOutput { return v.PublicIpv4Pool }).(pulumi.StringPtrOutput)
}

// Any tags assigned to the EIP.
func (o EipOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *Eip) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The PublicIP of the EIP generated by resource through transfer from another account
func (o EipOutput) TransferAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Eip) pulumi.StringPtrOutput { return v.TransferAddress }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EipInput)(nil)).Elem(), &Eip{})
	pulumi.RegisterOutputType(EipOutput{})
}
