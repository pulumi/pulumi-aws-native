// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::EIP
func LookupEip(ctx *pulumi.Context, args *LookupEipArgs, opts ...pulumi.InvokeOption) (*LookupEipResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEipResult
	err := ctx.Invoke("aws-native:ec2:getEip", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEipArgs struct {
	// The Allocation ID of the EIP generated by resource.
	AllocationId string `pulumi:"allocationId"`
	// The PublicIP of the EIP generated by resource.
	PublicIp string `pulumi:"publicIp"`
}

type LookupEipResult struct {
	// The Allocation ID of the EIP generated by resource.
	AllocationId *string `pulumi:"allocationId"`
	// The ID of the instance.
	InstanceId *string `pulumi:"instanceId"`
	// The PublicIP of the EIP generated by resource.
	PublicIp *string `pulumi:"publicIp"`
	// The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.
	PublicIpv4Pool *string `pulumi:"publicIpv4Pool"`
	// Any tags assigned to the EIP.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupEipOutput(ctx *pulumi.Context, args LookupEipOutputArgs, opts ...pulumi.InvokeOption) LookupEipResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEipResult, error) {
			args := v.(LookupEipArgs)
			r, err := LookupEip(ctx, &args, opts...)
			var s LookupEipResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEipResultOutput)
}

type LookupEipOutputArgs struct {
	// The Allocation ID of the EIP generated by resource.
	AllocationId pulumi.StringInput `pulumi:"allocationId"`
	// The PublicIP of the EIP generated by resource.
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
}

func (LookupEipOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEipArgs)(nil)).Elem()
}

type LookupEipResultOutput struct{ *pulumi.OutputState }

func (LookupEipResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEipResult)(nil)).Elem()
}

func (o LookupEipResultOutput) ToLookupEipResultOutput() LookupEipResultOutput {
	return o
}

func (o LookupEipResultOutput) ToLookupEipResultOutputWithContext(ctx context.Context) LookupEipResultOutput {
	return o
}

// The Allocation ID of the EIP generated by resource.
func (o LookupEipResultOutput) AllocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEipResult) *string { return v.AllocationId }).(pulumi.StringPtrOutput)
}

// The ID of the instance.
func (o LookupEipResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEipResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

// The PublicIP of the EIP generated by resource.
func (o LookupEipResultOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEipResult) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

// The ID of an address pool that you own. Use this parameter to let Amazon EC2 select an address from the address pool.
func (o LookupEipResultOutput) PublicIpv4Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEipResult) *string { return v.PublicIpv4Pool }).(pulumi.StringPtrOutput)
}

// Any tags assigned to the EIP.
func (o LookupEipResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupEipResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEipResultOutput{})
}
