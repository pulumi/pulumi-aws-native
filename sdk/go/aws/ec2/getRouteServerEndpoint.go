// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VPC Route Server Endpoint
func LookupRouteServerEndpoint(ctx *pulumi.Context, args *LookupRouteServerEndpointArgs, opts ...pulumi.InvokeOption) (*LookupRouteServerEndpointResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRouteServerEndpointResult
	err := ctx.Invoke("aws-native:ec2:getRouteServerEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupRouteServerEndpointArgs struct {
	// The ID of the Route Server Endpoint.
	Id string `pulumi:"id"`
}

type LookupRouteServerEndpointResult struct {
	// The Amazon Resource Name (ARN) of the Route Server Endpoint.
	Arn *string `pulumi:"arn"`
	// Elastic Network Interface IP address owned by the Route Server Endpoint
	EniAddress *string `pulumi:"eniAddress"`
	// Elastic Network Interface ID owned by the Route Server Endpoint
	EniId *string `pulumi:"eniId"`
	// The ID of the Route Server Endpoint.
	Id *string `pulumi:"id"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
	// VPC ID
	VpcId *string `pulumi:"vpcId"`
}

func LookupRouteServerEndpointOutput(ctx *pulumi.Context, args LookupRouteServerEndpointOutputArgs, opts ...pulumi.InvokeOption) LookupRouteServerEndpointResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRouteServerEndpointResultOutput, error) {
			args := v.(LookupRouteServerEndpointArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getRouteServerEndpoint", args, LookupRouteServerEndpointResultOutput{}, options).(LookupRouteServerEndpointResultOutput), nil
		}).(LookupRouteServerEndpointResultOutput)
}

type LookupRouteServerEndpointOutputArgs struct {
	// The ID of the Route Server Endpoint.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupRouteServerEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteServerEndpointArgs)(nil)).Elem()
}

type LookupRouteServerEndpointResultOutput struct{ *pulumi.OutputState }

func (LookupRouteServerEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteServerEndpointResult)(nil)).Elem()
}

func (o LookupRouteServerEndpointResultOutput) ToLookupRouteServerEndpointResultOutput() LookupRouteServerEndpointResultOutput {
	return o
}

func (o LookupRouteServerEndpointResultOutput) ToLookupRouteServerEndpointResultOutputWithContext(ctx context.Context) LookupRouteServerEndpointResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the Route Server Endpoint.
func (o LookupRouteServerEndpointResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteServerEndpointResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Elastic Network Interface IP address owned by the Route Server Endpoint
func (o LookupRouteServerEndpointResultOutput) EniAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteServerEndpointResult) *string { return v.EniAddress }).(pulumi.StringPtrOutput)
}

// Elastic Network Interface ID owned by the Route Server Endpoint
func (o LookupRouteServerEndpointResultOutput) EniId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteServerEndpointResult) *string { return v.EniId }).(pulumi.StringPtrOutput)
}

// The ID of the Route Server Endpoint.
func (o LookupRouteServerEndpointResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteServerEndpointResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupRouteServerEndpointResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupRouteServerEndpointResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

// VPC ID
func (o LookupRouteServerEndpointResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteServerEndpointResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouteServerEndpointResultOutput{})
}
