// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Resource Type definition for AWS::EC2::TransitGatewayRouteTable
func LookupTransitGatewayRouteTable(ctx *pulumi.Context, args *LookupTransitGatewayRouteTableArgs, opts ...pulumi.InvokeOption) (*LookupTransitGatewayRouteTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTransitGatewayRouteTableResult
	err := ctx.Invoke("aws-native:ec2:getTransitGatewayRouteTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupTransitGatewayRouteTableArgs struct {
	// Transit Gateway Route Table primary identifier
	TransitGatewayRouteTableId string `pulumi:"transitGatewayRouteTableId"`
}

type LookupTransitGatewayRouteTableResult struct {
	// Transit Gateway Route Table primary identifier
	TransitGatewayRouteTableId *string `pulumi:"transitGatewayRouteTableId"`
}

func LookupTransitGatewayRouteTableOutput(ctx *pulumi.Context, args LookupTransitGatewayRouteTableOutputArgs, opts ...pulumi.InvokeOption) LookupTransitGatewayRouteTableResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupTransitGatewayRouteTableResult, error) {
			args := v.(LookupTransitGatewayRouteTableArgs)
			r, err := LookupTransitGatewayRouteTable(ctx, &args, opts...)
			var s LookupTransitGatewayRouteTableResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupTransitGatewayRouteTableResultOutput)
}

type LookupTransitGatewayRouteTableOutputArgs struct {
	// Transit Gateway Route Table primary identifier
	TransitGatewayRouteTableId pulumi.StringInput `pulumi:"transitGatewayRouteTableId"`
}

func (LookupTransitGatewayRouteTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayRouteTableArgs)(nil)).Elem()
}

type LookupTransitGatewayRouteTableResultOutput struct{ *pulumi.OutputState }

func (LookupTransitGatewayRouteTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTransitGatewayRouteTableResult)(nil)).Elem()
}

func (o LookupTransitGatewayRouteTableResultOutput) ToLookupTransitGatewayRouteTableResultOutput() LookupTransitGatewayRouteTableResultOutput {
	return o
}

func (o LookupTransitGatewayRouteTableResultOutput) ToLookupTransitGatewayRouteTableResultOutputWithContext(ctx context.Context) LookupTransitGatewayRouteTableResultOutput {
	return o
}

func (o LookupTransitGatewayRouteTableResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupTransitGatewayRouteTableResult] {
	return pulumix.Output[LookupTransitGatewayRouteTableResult]{
		OutputState: o.OutputState,
	}
}

// Transit Gateway Route Table primary identifier
func (o LookupTransitGatewayRouteTableResultOutput) TransitGatewayRouteTableId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupTransitGatewayRouteTableResult) *string { return v.TransitGatewayRouteTableId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTransitGatewayRouteTableResultOutput{})
}
