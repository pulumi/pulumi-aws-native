// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::SecurityGroupEgress
//
// Deprecated: SecurityGroupEgress is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type SecurityGroupEgress struct {
	pulumi.CustomResourceState

	CidrIp                     pulumi.StringPtrOutput `pulumi:"cidrIp"`
	CidrIpv6                   pulumi.StringPtrOutput `pulumi:"cidrIpv6"`
	Description                pulumi.StringPtrOutput `pulumi:"description"`
	DestinationPrefixListId    pulumi.StringPtrOutput `pulumi:"destinationPrefixListId"`
	DestinationSecurityGroupId pulumi.StringPtrOutput `pulumi:"destinationSecurityGroupId"`
	FromPort                   pulumi.IntPtrOutput    `pulumi:"fromPort"`
	GroupId                    pulumi.StringOutput    `pulumi:"groupId"`
	IpProtocol                 pulumi.StringOutput    `pulumi:"ipProtocol"`
	ToPort                     pulumi.IntPtrOutput    `pulumi:"toPort"`
}

// NewSecurityGroupEgress registers a new resource with the given unique name, arguments, and options.
func NewSecurityGroupEgress(ctx *pulumi.Context,
	name string, args *SecurityGroupEgressArgs, opts ...pulumi.ResourceOption) (*SecurityGroupEgress, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.IpProtocol == nil {
		return nil, errors.New("invalid value for required argument 'IpProtocol'")
	}
	var resource SecurityGroupEgress
	err := ctx.RegisterResource("aws-native:ec2:SecurityGroupEgress", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSecurityGroupEgress gets an existing SecurityGroupEgress resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSecurityGroupEgress(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SecurityGroupEgressState, opts ...pulumi.ResourceOption) (*SecurityGroupEgress, error) {
	var resource SecurityGroupEgress
	err := ctx.ReadResource("aws-native:ec2:SecurityGroupEgress", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SecurityGroupEgress resources.
type securityGroupEgressState struct {
}

type SecurityGroupEgressState struct {
}

func (SecurityGroupEgressState) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupEgressState)(nil)).Elem()
}

type securityGroupEgressArgs struct {
	CidrIp                     *string `pulumi:"cidrIp"`
	CidrIpv6                   *string `pulumi:"cidrIpv6"`
	Description                *string `pulumi:"description"`
	DestinationPrefixListId    *string `pulumi:"destinationPrefixListId"`
	DestinationSecurityGroupId *string `pulumi:"destinationSecurityGroupId"`
	FromPort                   *int    `pulumi:"fromPort"`
	GroupId                    string  `pulumi:"groupId"`
	IpProtocol                 string  `pulumi:"ipProtocol"`
	ToPort                     *int    `pulumi:"toPort"`
}

// The set of arguments for constructing a SecurityGroupEgress resource.
type SecurityGroupEgressArgs struct {
	CidrIp                     pulumi.StringPtrInput
	CidrIpv6                   pulumi.StringPtrInput
	Description                pulumi.StringPtrInput
	DestinationPrefixListId    pulumi.StringPtrInput
	DestinationSecurityGroupId pulumi.StringPtrInput
	FromPort                   pulumi.IntPtrInput
	GroupId                    pulumi.StringInput
	IpProtocol                 pulumi.StringInput
	ToPort                     pulumi.IntPtrInput
}

func (SecurityGroupEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*securityGroupEgressArgs)(nil)).Elem()
}

type SecurityGroupEgressInput interface {
	pulumi.Input

	ToSecurityGroupEgressOutput() SecurityGroupEgressOutput
	ToSecurityGroupEgressOutputWithContext(ctx context.Context) SecurityGroupEgressOutput
}

func (*SecurityGroupEgress) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroupEgress)(nil)).Elem()
}

func (i *SecurityGroupEgress) ToSecurityGroupEgressOutput() SecurityGroupEgressOutput {
	return i.ToSecurityGroupEgressOutputWithContext(context.Background())
}

func (i *SecurityGroupEgress) ToSecurityGroupEgressOutputWithContext(ctx context.Context) SecurityGroupEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecurityGroupEgressOutput)
}

type SecurityGroupEgressOutput struct{ *pulumi.OutputState }

func (SecurityGroupEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecurityGroupEgress)(nil)).Elem()
}

func (o SecurityGroupEgressOutput) ToSecurityGroupEgressOutput() SecurityGroupEgressOutput {
	return o
}

func (o SecurityGroupEgressOutput) ToSecurityGroupEgressOutputWithContext(ctx context.Context) SecurityGroupEgressOutput {
	return o
}

func (o SecurityGroupEgressOutput) CidrIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroupEgress) pulumi.StringPtrOutput { return v.CidrIp }).(pulumi.StringPtrOutput)
}

func (o SecurityGroupEgressOutput) CidrIpv6() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroupEgress) pulumi.StringPtrOutput { return v.CidrIpv6 }).(pulumi.StringPtrOutput)
}

func (o SecurityGroupEgressOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroupEgress) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SecurityGroupEgressOutput) DestinationPrefixListId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroupEgress) pulumi.StringPtrOutput { return v.DestinationPrefixListId }).(pulumi.StringPtrOutput)
}

func (o SecurityGroupEgressOutput) DestinationSecurityGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecurityGroupEgress) pulumi.StringPtrOutput { return v.DestinationSecurityGroupId }).(pulumi.StringPtrOutput)
}

func (o SecurityGroupEgressOutput) FromPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityGroupEgress) pulumi.IntPtrOutput { return v.FromPort }).(pulumi.IntPtrOutput)
}

func (o SecurityGroupEgressOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroupEgress) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

func (o SecurityGroupEgressOutput) IpProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v *SecurityGroupEgress) pulumi.StringOutput { return v.IpProtocol }).(pulumi.StringOutput)
}

func (o SecurityGroupEgressOutput) ToPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SecurityGroupEgress) pulumi.IntPtrOutput { return v.ToPort }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SecurityGroupEgressInput)(nil)).Elem(), &SecurityGroupEgress{})
	pulumi.RegisterOutputType(SecurityGroupEgressOutput{})
}
