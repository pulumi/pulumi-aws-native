// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Associates an Elastic IP address with an instance or a network interface. Before you can use an Elastic IP address, you must allocate it to your account. For more information about working with Elastic IP addresses, see [Elastic IP address concepts and rules](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-eips.html#vpc-eip-overview).
//
//	You must specify ``AllocationId`` and either ``InstanceId``, ``NetworkInterfaceId``, or ``PrivateIpAddress``.
func LookupEipAssociation(ctx *pulumi.Context, args *LookupEipAssociationArgs, opts ...pulumi.InvokeOption) (*LookupEipAssociationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEipAssociationResult
	err := ctx.Invoke("aws-native:ec2:getEipAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupEipAssociationArgs struct {
	// The ID of the association.
	Id string `pulumi:"id"`
}

type LookupEipAssociationResult struct {
	// The ID of the association.
	Id *string `pulumi:"id"`
}

func LookupEipAssociationOutput(ctx *pulumi.Context, args LookupEipAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupEipAssociationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEipAssociationResultOutput, error) {
			args := v.(LookupEipAssociationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getEipAssociation", args, LookupEipAssociationResultOutput{}, options).(LookupEipAssociationResultOutput), nil
		}).(LookupEipAssociationResultOutput)
}

type LookupEipAssociationOutputArgs struct {
	// The ID of the association.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupEipAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEipAssociationArgs)(nil)).Elem()
}

type LookupEipAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupEipAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEipAssociationResult)(nil)).Elem()
}

func (o LookupEipAssociationResultOutput) ToLookupEipAssociationResultOutput() LookupEipAssociationResultOutput {
	return o
}

func (o LookupEipAssociationResultOutput) ToLookupEipAssociationResultOutputWithContext(ctx context.Context) LookupEipAssociationResultOutput {
	return o
}

// The ID of the association.
func (o LookupEipAssociationResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEipAssociationResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEipAssociationResultOutput{})
}
