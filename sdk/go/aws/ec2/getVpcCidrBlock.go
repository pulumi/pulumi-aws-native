// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::VPCCidrBlock
func LookupVpcCidrBlock(ctx *pulumi.Context, args *LookupVpcCidrBlockArgs, opts ...pulumi.InvokeOption) (*LookupVpcCidrBlockResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpcCidrBlockResult
	err := ctx.Invoke("aws-native:ec2:getVpcCidrBlock", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupVpcCidrBlockArgs struct {
	// The Id of the VPC associated CIDR Block.
	Id string `pulumi:"id"`
	// The ID of the VPC.
	VpcId string `pulumi:"vpcId"`
}

type LookupVpcCidrBlockResult struct {
	// The Id of the VPC associated CIDR Block.
	Id *string `pulumi:"id"`
	// The IP Source of an IPv6 VPC CIDR Block.
	IpSource *string `pulumi:"ipSource"`
	// The value denoting whether an IPv6 VPC CIDR Block is public or private.
	Ipv6AddressAttribute *string `pulumi:"ipv6AddressAttribute"`
}

func LookupVpcCidrBlockOutput(ctx *pulumi.Context, args LookupVpcCidrBlockOutputArgs, opts ...pulumi.InvokeOption) LookupVpcCidrBlockResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVpcCidrBlockResultOutput, error) {
			args := v.(LookupVpcCidrBlockArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getVpcCidrBlock", args, LookupVpcCidrBlockResultOutput{}, options).(LookupVpcCidrBlockResultOutput), nil
		}).(LookupVpcCidrBlockResultOutput)
}

type LookupVpcCidrBlockOutputArgs struct {
	// The Id of the VPC associated CIDR Block.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the VPC.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (LookupVpcCidrBlockOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcCidrBlockArgs)(nil)).Elem()
}

type LookupVpcCidrBlockResultOutput struct{ *pulumi.OutputState }

func (LookupVpcCidrBlockResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcCidrBlockResult)(nil)).Elem()
}

func (o LookupVpcCidrBlockResultOutput) ToLookupVpcCidrBlockResultOutput() LookupVpcCidrBlockResultOutput {
	return o
}

func (o LookupVpcCidrBlockResultOutput) ToLookupVpcCidrBlockResultOutputWithContext(ctx context.Context) LookupVpcCidrBlockResultOutput {
	return o
}

// The Id of the VPC associated CIDR Block.
func (o LookupVpcCidrBlockResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcCidrBlockResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The IP Source of an IPv6 VPC CIDR Block.
func (o LookupVpcCidrBlockResultOutput) IpSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcCidrBlockResult) *string { return v.IpSource }).(pulumi.StringPtrOutput)
}

// The value denoting whether an IPv6 VPC CIDR Block is public or private.
func (o LookupVpcCidrBlockResultOutput) Ipv6AddressAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupVpcCidrBlockResult) *string { return v.Ipv6AddressAttribute }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcCidrBlockResultOutput{})
}
