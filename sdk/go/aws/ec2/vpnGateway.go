// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Schema for EC2 VPN Gateway
type VpnGateway struct {
	pulumi.CustomResourceState

	// The private Autonomous System Number (ASN) for the Amazon side of a BGP session.
	AmazonSideAsn pulumi.IntPtrOutput `pulumi:"amazonSideAsn"`
	// Any tags assigned to the virtual private gateway.
	Tags VpnGatewayTagArrayOutput `pulumi:"tags"`
	// The type of VPN connection the virtual private gateway supports.
	Type pulumi.StringOutput `pulumi:"type"`
	// VPN Gateway ID generated by service
	VpnGatewayId pulumi.StringOutput `pulumi:"vpnGatewayId"`
}

// NewVpnGateway registers a new resource with the given unique name, arguments, and options.
func NewVpnGateway(ctx *pulumi.Context,
	name string, args *VpnGatewayArgs, opts ...pulumi.ResourceOption) (*VpnGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpnGateway
	err := ctx.RegisterResource("aws-native:ec2:VpnGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpnGateway gets an existing VpnGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpnGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpnGatewayState, opts ...pulumi.ResourceOption) (*VpnGateway, error) {
	var resource VpnGateway
	err := ctx.ReadResource("aws-native:ec2:VpnGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpnGateway resources.
type vpnGatewayState struct {
}

type VpnGatewayState struct {
}

func (VpnGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnGatewayState)(nil)).Elem()
}

type vpnGatewayArgs struct {
	// The private Autonomous System Number (ASN) for the Amazon side of a BGP session.
	AmazonSideAsn *int `pulumi:"amazonSideAsn"`
	// Any tags assigned to the virtual private gateway.
	Tags []VpnGatewayTag `pulumi:"tags"`
	// The type of VPN connection the virtual private gateway supports.
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a VpnGateway resource.
type VpnGatewayArgs struct {
	// The private Autonomous System Number (ASN) for the Amazon side of a BGP session.
	AmazonSideAsn pulumi.IntPtrInput
	// Any tags assigned to the virtual private gateway.
	Tags VpnGatewayTagArrayInput
	// The type of VPN connection the virtual private gateway supports.
	Type pulumi.StringInput
}

func (VpnGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnGatewayArgs)(nil)).Elem()
}

type VpnGatewayInput interface {
	pulumi.Input

	ToVpnGatewayOutput() VpnGatewayOutput
	ToVpnGatewayOutputWithContext(ctx context.Context) VpnGatewayOutput
}

func (*VpnGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGateway)(nil)).Elem()
}

func (i *VpnGateway) ToVpnGatewayOutput() VpnGatewayOutput {
	return i.ToVpnGatewayOutputWithContext(context.Background())
}

func (i *VpnGateway) ToVpnGatewayOutputWithContext(ctx context.Context) VpnGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpnGatewayOutput)
}

type VpnGatewayOutput struct{ *pulumi.OutputState }

func (VpnGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpnGateway)(nil)).Elem()
}

func (o VpnGatewayOutput) ToVpnGatewayOutput() VpnGatewayOutput {
	return o
}

func (o VpnGatewayOutput) ToVpnGatewayOutputWithContext(ctx context.Context) VpnGatewayOutput {
	return o
}

// The private Autonomous System Number (ASN) for the Amazon side of a BGP session.
func (o VpnGatewayOutput) AmazonSideAsn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VpnGateway) pulumi.IntPtrOutput { return v.AmazonSideAsn }).(pulumi.IntPtrOutput)
}

// Any tags assigned to the virtual private gateway.
func (o VpnGatewayOutput) Tags() VpnGatewayTagArrayOutput {
	return o.ApplyT(func(v *VpnGateway) VpnGatewayTagArrayOutput { return v.Tags }).(VpnGatewayTagArrayOutput)
}

// The type of VPN connection the virtual private gateway supports.
func (o VpnGatewayOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnGateway) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// VPN Gateway ID generated by service
func (o VpnGatewayOutput) VpnGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpnGateway) pulumi.StringOutput { return v.VpnGatewayId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpnGatewayInput)(nil)).Elem(), &VpnGateway{})
	pulumi.RegisterOutputType(VpnGatewayOutput{})
}
