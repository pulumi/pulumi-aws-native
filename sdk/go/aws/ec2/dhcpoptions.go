// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html
type DHCPOptions struct {
	pulumi.CustomResourceState

	DhcpOptionsId pulumi.StringOutput `pulumi:"dhcpOptionsId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainname
	DomainName pulumi.StringPtrOutput `pulumi:"domainName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainnameservers
	DomainNameServers pulumi.StringArrayOutput `pulumi:"domainNameServers"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnameservers
	NetbiosNameServers pulumi.StringArrayOutput `pulumi:"netbiosNameServers"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnodetype
	NetbiosNodeType pulumi.IntPtrOutput `pulumi:"netbiosNodeType"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-ntpservers
	NtpServers pulumi.StringArrayOutput `pulumi:"ntpServers"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewDHCPOptions registers a new resource with the given unique name, arguments, and options.
func NewDHCPOptions(ctx *pulumi.Context,
	name string, args *DHCPOptionsArgs, opts ...pulumi.ResourceOption) (*DHCPOptions, error) {
	if args == nil {
		args = &DHCPOptionsArgs{}
	}

	var resource DHCPOptions
	err := ctx.RegisterResource("aws-native:ec2:DHCPOptions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDHCPOptions gets an existing DHCPOptions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDHCPOptions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DHCPOptionsState, opts ...pulumi.ResourceOption) (*DHCPOptions, error) {
	var resource DHCPOptions
	err := ctx.ReadResource("aws-native:ec2:DHCPOptions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DHCPOptions resources.
type dhcpoptionsState struct {
}

type DHCPOptionsState struct {
}

func (DHCPOptionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*dhcpoptionsState)(nil)).Elem()
}

type dhcpoptionsArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainname
	DomainName *string `pulumi:"domainName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainnameservers
	DomainNameServers []string `pulumi:"domainNameServers"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnameservers
	NetbiosNameServers []string `pulumi:"netbiosNameServers"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnodetype
	NetbiosNodeType *int `pulumi:"netbiosNodeType"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-ntpservers
	NtpServers []string `pulumi:"ntpServers"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-tags
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a DHCPOptions resource.
type DHCPOptionsArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainname
	DomainName pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-domainnameservers
	DomainNameServers pulumi.StringArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnameservers
	NetbiosNameServers pulumi.StringArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-netbiosnodetype
	NetbiosNodeType pulumi.IntPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-ntpservers
	NtpServers pulumi.StringArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-dhcpoptions.html#cfn-ec2-dhcpoptions-tags
	Tags aws.TagArrayInput
}

func (DHCPOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dhcpoptionsArgs)(nil)).Elem()
}

type DHCPOptionsInput interface {
	pulumi.Input

	ToDHCPOptionsOutput() DHCPOptionsOutput
	ToDHCPOptionsOutputWithContext(ctx context.Context) DHCPOptionsOutput
}

func (*DHCPOptions) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPOptions)(nil))
}

func (i *DHCPOptions) ToDHCPOptionsOutput() DHCPOptionsOutput {
	return i.ToDHCPOptionsOutputWithContext(context.Background())
}

func (i *DHCPOptions) ToDHCPOptionsOutputWithContext(ctx context.Context) DHCPOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DHCPOptionsOutput)
}

type DHCPOptionsOutput struct{ *pulumi.OutputState }

func (DHCPOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DHCPOptions)(nil))
}

func (o DHCPOptionsOutput) ToDHCPOptionsOutput() DHCPOptionsOutput {
	return o
}

func (o DHCPOptionsOutput) ToDHCPOptionsOutputWithContext(ctx context.Context) DHCPOptionsOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DHCPOptionsOutput{})
}
