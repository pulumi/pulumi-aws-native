// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::VPNConnection
//
// Deprecated: VPNConnection is not yet supported by AWS Native, so its creation will currently fail. Please use the classic AWS provider, if possible.
type VPNConnection struct {
	pulumi.CustomResourceState

	CustomerGatewayId              pulumi.StringOutput                                   `pulumi:"customerGatewayId"`
	StaticRoutesOnly               pulumi.BoolPtrOutput                                  `pulumi:"staticRoutesOnly"`
	Tags                           VPNConnectionTagArrayOutput                           `pulumi:"tags"`
	TransitGatewayId               pulumi.StringPtrOutput                                `pulumi:"transitGatewayId"`
	Type                           pulumi.StringOutput                                   `pulumi:"type"`
	VpnGatewayId                   pulumi.StringPtrOutput                                `pulumi:"vpnGatewayId"`
	VpnTunnelOptionsSpecifications VPNConnectionVpnTunnelOptionsSpecificationArrayOutput `pulumi:"vpnTunnelOptionsSpecifications"`
}

// NewVPNConnection registers a new resource with the given unique name, arguments, and options.
func NewVPNConnection(ctx *pulumi.Context,
	name string, args *VPNConnectionArgs, opts ...pulumi.ResourceOption) (*VPNConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomerGatewayId == nil {
		return nil, errors.New("invalid value for required argument 'CustomerGatewayId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource VPNConnection
	err := ctx.RegisterResource("aws-native:ec2:VPNConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVPNConnection gets an existing VPNConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVPNConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VPNConnectionState, opts ...pulumi.ResourceOption) (*VPNConnection, error) {
	var resource VPNConnection
	err := ctx.ReadResource("aws-native:ec2:VPNConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VPNConnection resources.
type vpnconnectionState struct {
}

type VPNConnectionState struct {
}

func (VPNConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnconnectionState)(nil)).Elem()
}

type vpnconnectionArgs struct {
	CustomerGatewayId              string                                       `pulumi:"customerGatewayId"`
	StaticRoutesOnly               *bool                                        `pulumi:"staticRoutesOnly"`
	Tags                           []VPNConnectionTag                           `pulumi:"tags"`
	TransitGatewayId               *string                                      `pulumi:"transitGatewayId"`
	Type                           string                                       `pulumi:"type"`
	VpnGatewayId                   *string                                      `pulumi:"vpnGatewayId"`
	VpnTunnelOptionsSpecifications []VPNConnectionVpnTunnelOptionsSpecification `pulumi:"vpnTunnelOptionsSpecifications"`
}

// The set of arguments for constructing a VPNConnection resource.
type VPNConnectionArgs struct {
	CustomerGatewayId              pulumi.StringInput
	StaticRoutesOnly               pulumi.BoolPtrInput
	Tags                           VPNConnectionTagArrayInput
	TransitGatewayId               pulumi.StringPtrInput
	Type                           pulumi.StringInput
	VpnGatewayId                   pulumi.StringPtrInput
	VpnTunnelOptionsSpecifications VPNConnectionVpnTunnelOptionsSpecificationArrayInput
}

func (VPNConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpnconnectionArgs)(nil)).Elem()
}

type VPNConnectionInput interface {
	pulumi.Input

	ToVPNConnectionOutput() VPNConnectionOutput
	ToVPNConnectionOutputWithContext(ctx context.Context) VPNConnectionOutput
}

func (*VPNConnection) ElementType() reflect.Type {
	return reflect.TypeOf((*VPNConnection)(nil))
}

func (i *VPNConnection) ToVPNConnectionOutput() VPNConnectionOutput {
	return i.ToVPNConnectionOutputWithContext(context.Background())
}

func (i *VPNConnection) ToVPNConnectionOutputWithContext(ctx context.Context) VPNConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNConnectionOutput)
}

type VPNConnectionOutput struct{ *pulumi.OutputState }

func (VPNConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPNConnection)(nil))
}

func (o VPNConnectionOutput) ToVPNConnectionOutput() VPNConnectionOutput {
	return o
}

func (o VPNConnectionOutput) ToVPNConnectionOutputWithContext(ctx context.Context) VPNConnectionOutput {
	return o
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VPNConnectionInput)(nil)).Elem(), &VPNConnection{})
	pulumi.RegisterOutputType(VPNConnectionOutput{})
}
