// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The AWS::EC2::TransitGatewayMulticastDomainAssociation type
type TransitGatewayMulticastDomainAssociation struct {
	pulumi.CustomResourceState

	// The ID of the resource.
	ResourceId pulumi.StringOutput `pulumi:"resourceId"`
	// The type of resource, for example a VPC attachment.
	ResourceType pulumi.StringOutput `pulumi:"resourceType"`
	// The state of the subnet association.
	State pulumi.StringOutput `pulumi:"state"`
	// The IDs of the subnets to associate with the transit gateway multicast domain.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// The ID of the transit gateway attachment.
	TransitGatewayAttachmentId pulumi.StringOutput `pulumi:"transitGatewayAttachmentId"`
	// The ID of the transit gateway multicast domain.
	TransitGatewayMulticastDomainId pulumi.StringOutput `pulumi:"transitGatewayMulticastDomainId"`
}

// NewTransitGatewayMulticastDomainAssociation registers a new resource with the given unique name, arguments, and options.
func NewTransitGatewayMulticastDomainAssociation(ctx *pulumi.Context,
	name string, args *TransitGatewayMulticastDomainAssociationArgs, opts ...pulumi.ResourceOption) (*TransitGatewayMulticastDomainAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.TransitGatewayAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayAttachmentId'")
	}
	if args.TransitGatewayMulticastDomainId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayMulticastDomainId'")
	}
	var resource TransitGatewayMulticastDomainAssociation
	err := ctx.RegisterResource("aws-native:ec2:TransitGatewayMulticastDomainAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGatewayMulticastDomainAssociation gets an existing TransitGatewayMulticastDomainAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGatewayMulticastDomainAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayMulticastDomainAssociationState, opts ...pulumi.ResourceOption) (*TransitGatewayMulticastDomainAssociation, error) {
	var resource TransitGatewayMulticastDomainAssociation
	err := ctx.ReadResource("aws-native:ec2:TransitGatewayMulticastDomainAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGatewayMulticastDomainAssociation resources.
type transitGatewayMulticastDomainAssociationState struct {
}

type TransitGatewayMulticastDomainAssociationState struct {
}

func (TransitGatewayMulticastDomainAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayMulticastDomainAssociationState)(nil)).Elem()
}

type transitGatewayMulticastDomainAssociationArgs struct {
	// The IDs of the subnets to associate with the transit gateway multicast domain.
	SubnetId string `pulumi:"subnetId"`
	// The ID of the transit gateway attachment.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
	// The ID of the transit gateway multicast domain.
	TransitGatewayMulticastDomainId string `pulumi:"transitGatewayMulticastDomainId"`
}

// The set of arguments for constructing a TransitGatewayMulticastDomainAssociation resource.
type TransitGatewayMulticastDomainAssociationArgs struct {
	// The IDs of the subnets to associate with the transit gateway multicast domain.
	SubnetId pulumi.StringInput
	// The ID of the transit gateway attachment.
	TransitGatewayAttachmentId pulumi.StringInput
	// The ID of the transit gateway multicast domain.
	TransitGatewayMulticastDomainId pulumi.StringInput
}

func (TransitGatewayMulticastDomainAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayMulticastDomainAssociationArgs)(nil)).Elem()
}

type TransitGatewayMulticastDomainAssociationInput interface {
	pulumi.Input

	ToTransitGatewayMulticastDomainAssociationOutput() TransitGatewayMulticastDomainAssociationOutput
	ToTransitGatewayMulticastDomainAssociationOutputWithContext(ctx context.Context) TransitGatewayMulticastDomainAssociationOutput
}

func (*TransitGatewayMulticastDomainAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayMulticastDomainAssociation)(nil))
}

func (i *TransitGatewayMulticastDomainAssociation) ToTransitGatewayMulticastDomainAssociationOutput() TransitGatewayMulticastDomainAssociationOutput {
	return i.ToTransitGatewayMulticastDomainAssociationOutputWithContext(context.Background())
}

func (i *TransitGatewayMulticastDomainAssociation) ToTransitGatewayMulticastDomainAssociationOutputWithContext(ctx context.Context) TransitGatewayMulticastDomainAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayMulticastDomainAssociationOutput)
}

type TransitGatewayMulticastDomainAssociationOutput struct{ *pulumi.OutputState }

func (TransitGatewayMulticastDomainAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayMulticastDomainAssociation)(nil))
}

func (o TransitGatewayMulticastDomainAssociationOutput) ToTransitGatewayMulticastDomainAssociationOutput() TransitGatewayMulticastDomainAssociationOutput {
	return o
}

func (o TransitGatewayMulticastDomainAssociationOutput) ToTransitGatewayMulticastDomainAssociationOutputWithContext(ctx context.Context) TransitGatewayMulticastDomainAssociationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(TransitGatewayMulticastDomainAssociationOutput{})
}
