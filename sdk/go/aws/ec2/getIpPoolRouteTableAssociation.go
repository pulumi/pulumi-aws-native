// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::IpPoolRouteTableAssociation
func LookupIpPoolRouteTableAssociation(ctx *pulumi.Context, args *LookupIpPoolRouteTableAssociationArgs, opts ...pulumi.InvokeOption) (*LookupIpPoolRouteTableAssociationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIpPoolRouteTableAssociationResult
	err := ctx.Invoke("aws-native:ec2:getIpPoolRouteTableAssociation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupIpPoolRouteTableAssociationArgs struct {
	// The route table association ID.
	AssociationId string `pulumi:"associationId"`
}

type LookupIpPoolRouteTableAssociationResult struct {
	// The route table association ID.
	AssociationId *string `pulumi:"associationId"`
}

func LookupIpPoolRouteTableAssociationOutput(ctx *pulumi.Context, args LookupIpPoolRouteTableAssociationOutputArgs, opts ...pulumi.InvokeOption) LookupIpPoolRouteTableAssociationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIpPoolRouteTableAssociationResultOutput, error) {
			args := v.(LookupIpPoolRouteTableAssociationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ec2:getIpPoolRouteTableAssociation", args, LookupIpPoolRouteTableAssociationResultOutput{}, options).(LookupIpPoolRouteTableAssociationResultOutput), nil
		}).(LookupIpPoolRouteTableAssociationResultOutput)
}

type LookupIpPoolRouteTableAssociationOutputArgs struct {
	// The route table association ID.
	AssociationId pulumi.StringInput `pulumi:"associationId"`
}

func (LookupIpPoolRouteTableAssociationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpPoolRouteTableAssociationArgs)(nil)).Elem()
}

type LookupIpPoolRouteTableAssociationResultOutput struct{ *pulumi.OutputState }

func (LookupIpPoolRouteTableAssociationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpPoolRouteTableAssociationResult)(nil)).Elem()
}

func (o LookupIpPoolRouteTableAssociationResultOutput) ToLookupIpPoolRouteTableAssociationResultOutput() LookupIpPoolRouteTableAssociationResultOutput {
	return o
}

func (o LookupIpPoolRouteTableAssociationResultOutput) ToLookupIpPoolRouteTableAssociationResultOutputWithContext(ctx context.Context) LookupIpPoolRouteTableAssociationResultOutput {
	return o
}

// The route table association ID.
func (o LookupIpPoolRouteTableAssociationResultOutput) AssociationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupIpPoolRouteTableAssociationResult) *string { return v.AssociationId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpPoolRouteTableAssociationResultOutput{})
}
