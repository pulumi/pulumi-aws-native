// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Associates a set of DHCP options with a VPC, or associates no DHCP options with the VPC.
type VpcdhcpOptionsAssociation struct {
	pulumi.CustomResourceState

	// The ID of the DHCP options set, or default to associate no DHCP options with the VPC.
	DhcpOptionsId pulumi.StringOutput `pulumi:"dhcpOptionsId"`
	// The ID of the VPC.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewVpcdhcpOptionsAssociation registers a new resource with the given unique name, arguments, and options.
func NewVpcdhcpOptionsAssociation(ctx *pulumi.Context,
	name string, args *VpcdhcpOptionsAssociationArgs, opts ...pulumi.ResourceOption) (*VpcdhcpOptionsAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DhcpOptionsId == nil {
		return nil, errors.New("invalid value for required argument 'DhcpOptionsId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcdhcpOptionsAssociation
	err := ctx.RegisterResource("aws-native:ec2:VpcdhcpOptionsAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcdhcpOptionsAssociation gets an existing VpcdhcpOptionsAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcdhcpOptionsAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcdhcpOptionsAssociationState, opts ...pulumi.ResourceOption) (*VpcdhcpOptionsAssociation, error) {
	var resource VpcdhcpOptionsAssociation
	err := ctx.ReadResource("aws-native:ec2:VpcdhcpOptionsAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcdhcpOptionsAssociation resources.
type vpcdhcpOptionsAssociationState struct {
}

type VpcdhcpOptionsAssociationState struct {
}

func (VpcdhcpOptionsAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcdhcpOptionsAssociationState)(nil)).Elem()
}

type vpcdhcpOptionsAssociationArgs struct {
	// The ID of the DHCP options set, or default to associate no DHCP options with the VPC.
	DhcpOptionsId string `pulumi:"dhcpOptionsId"`
	// The ID of the VPC.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpcdhcpOptionsAssociation resource.
type VpcdhcpOptionsAssociationArgs struct {
	// The ID of the DHCP options set, or default to associate no DHCP options with the VPC.
	DhcpOptionsId pulumi.StringInput
	// The ID of the VPC.
	VpcId pulumi.StringInput
}

func (VpcdhcpOptionsAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcdhcpOptionsAssociationArgs)(nil)).Elem()
}

type VpcdhcpOptionsAssociationInput interface {
	pulumi.Input

	ToVpcdhcpOptionsAssociationOutput() VpcdhcpOptionsAssociationOutput
	ToVpcdhcpOptionsAssociationOutputWithContext(ctx context.Context) VpcdhcpOptionsAssociationOutput
}

func (*VpcdhcpOptionsAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcdhcpOptionsAssociation)(nil)).Elem()
}

func (i *VpcdhcpOptionsAssociation) ToVpcdhcpOptionsAssociationOutput() VpcdhcpOptionsAssociationOutput {
	return i.ToVpcdhcpOptionsAssociationOutputWithContext(context.Background())
}

func (i *VpcdhcpOptionsAssociation) ToVpcdhcpOptionsAssociationOutputWithContext(ctx context.Context) VpcdhcpOptionsAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcdhcpOptionsAssociationOutput)
}

type VpcdhcpOptionsAssociationOutput struct{ *pulumi.OutputState }

func (VpcdhcpOptionsAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcdhcpOptionsAssociation)(nil)).Elem()
}

func (o VpcdhcpOptionsAssociationOutput) ToVpcdhcpOptionsAssociationOutput() VpcdhcpOptionsAssociationOutput {
	return o
}

func (o VpcdhcpOptionsAssociationOutput) ToVpcdhcpOptionsAssociationOutputWithContext(ctx context.Context) VpcdhcpOptionsAssociationOutput {
	return o
}

// The ID of the DHCP options set, or default to associate no DHCP options with the VPC.
func (o VpcdhcpOptionsAssociationOutput) DhcpOptionsId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcdhcpOptionsAssociation) pulumi.StringOutput { return v.DhcpOptionsId }).(pulumi.StringOutput)
}

// The ID of the VPC.
func (o VpcdhcpOptionsAssociationOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcdhcpOptionsAssociation) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcdhcpOptionsAssociationInput)(nil)).Elem(), &VpcdhcpOptionsAssociation{})
	pulumi.RegisterOutputType(VpcdhcpOptionsAssociationOutput{})
}
