// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Specifies a customer gateway.
func LookupCustomerGateway(ctx *pulumi.Context, args *LookupCustomerGatewayArgs, opts ...pulumi.InvokeOption) (*LookupCustomerGatewayResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCustomerGatewayResult
	err := ctx.Invoke("aws-native:ec2:getCustomerGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupCustomerGatewayArgs struct {
	// The ID of the customer gateway.
	CustomerGatewayId string `pulumi:"customerGatewayId"`
}

type LookupCustomerGatewayResult struct {
	// The ID of the customer gateway.
	CustomerGatewayId *string `pulumi:"customerGatewayId"`
	// One or more tags for the customer gateway.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupCustomerGatewayOutput(ctx *pulumi.Context, args LookupCustomerGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupCustomerGatewayResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCustomerGatewayResult, error) {
			args := v.(LookupCustomerGatewayArgs)
			r, err := LookupCustomerGateway(ctx, &args, opts...)
			var s LookupCustomerGatewayResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCustomerGatewayResultOutput)
}

type LookupCustomerGatewayOutputArgs struct {
	// The ID of the customer gateway.
	CustomerGatewayId pulumi.StringInput `pulumi:"customerGatewayId"`
}

func (LookupCustomerGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomerGatewayArgs)(nil)).Elem()
}

type LookupCustomerGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupCustomerGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomerGatewayResult)(nil)).Elem()
}

func (o LookupCustomerGatewayResultOutput) ToLookupCustomerGatewayResultOutput() LookupCustomerGatewayResultOutput {
	return o
}

func (o LookupCustomerGatewayResultOutput) ToLookupCustomerGatewayResultOutputWithContext(ctx context.Context) LookupCustomerGatewayResultOutput {
	return o
}

// The ID of the customer gateway.
func (o LookupCustomerGatewayResultOutput) CustomerGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupCustomerGatewayResult) *string { return v.CustomerGatewayId }).(pulumi.StringPtrOutput)
}

// One or more tags for the customer gateway.
func (o LookupCustomerGatewayResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupCustomerGatewayResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCustomerGatewayResultOutput{})
}
