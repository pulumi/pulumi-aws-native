// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::NatGateway
type NatGateway struct {
	pulumi.CustomResourceState

	AllocationId                   pulumi.StringPtrOutput   `pulumi:"allocationId"`
	ConnectivityType               pulumi.StringPtrOutput   `pulumi:"connectivityType"`
	MaxDrainDurationSeconds        pulumi.IntPtrOutput      `pulumi:"maxDrainDurationSeconds"`
	NatGatewayId                   pulumi.StringOutput      `pulumi:"natGatewayId"`
	PrivateIpAddress               pulumi.StringPtrOutput   `pulumi:"privateIpAddress"`
	SecondaryAllocationIds         pulumi.StringArrayOutput `pulumi:"secondaryAllocationIds"`
	SecondaryPrivateIpAddressCount pulumi.IntPtrOutput      `pulumi:"secondaryPrivateIpAddressCount"`
	SecondaryPrivateIpAddresses    pulumi.StringArrayOutput `pulumi:"secondaryPrivateIpAddresses"`
	SubnetId                       pulumi.StringOutput      `pulumi:"subnetId"`
	Tags                           NatGatewayTagArrayOutput `pulumi:"tags"`
}

// NewNatGateway registers a new resource with the given unique name, arguments, and options.
func NewNatGateway(ctx *pulumi.Context,
	name string, args *NatGatewayArgs, opts ...pulumi.ResourceOption) (*NatGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NatGateway
	err := ctx.RegisterResource("aws-native:ec2:NatGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNatGateway gets an existing NatGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNatGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NatGatewayState, opts ...pulumi.ResourceOption) (*NatGateway, error) {
	var resource NatGateway
	err := ctx.ReadResource("aws-native:ec2:NatGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NatGateway resources.
type natGatewayState struct {
}

type NatGatewayState struct {
}

func (NatGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*natGatewayState)(nil)).Elem()
}

type natGatewayArgs struct {
	AllocationId                   *string         `pulumi:"allocationId"`
	ConnectivityType               *string         `pulumi:"connectivityType"`
	MaxDrainDurationSeconds        *int            `pulumi:"maxDrainDurationSeconds"`
	PrivateIpAddress               *string         `pulumi:"privateIpAddress"`
	SecondaryAllocationIds         []string        `pulumi:"secondaryAllocationIds"`
	SecondaryPrivateIpAddressCount *int            `pulumi:"secondaryPrivateIpAddressCount"`
	SecondaryPrivateIpAddresses    []string        `pulumi:"secondaryPrivateIpAddresses"`
	SubnetId                       string          `pulumi:"subnetId"`
	Tags                           []NatGatewayTag `pulumi:"tags"`
}

// The set of arguments for constructing a NatGateway resource.
type NatGatewayArgs struct {
	AllocationId                   pulumi.StringPtrInput
	ConnectivityType               pulumi.StringPtrInput
	MaxDrainDurationSeconds        pulumi.IntPtrInput
	PrivateIpAddress               pulumi.StringPtrInput
	SecondaryAllocationIds         pulumi.StringArrayInput
	SecondaryPrivateIpAddressCount pulumi.IntPtrInput
	SecondaryPrivateIpAddresses    pulumi.StringArrayInput
	SubnetId                       pulumi.StringInput
	Tags                           NatGatewayTagArrayInput
}

func (NatGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*natGatewayArgs)(nil)).Elem()
}

type NatGatewayInput interface {
	pulumi.Input

	ToNatGatewayOutput() NatGatewayOutput
	ToNatGatewayOutputWithContext(ctx context.Context) NatGatewayOutput
}

func (*NatGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGateway)(nil)).Elem()
}

func (i *NatGateway) ToNatGatewayOutput() NatGatewayOutput {
	return i.ToNatGatewayOutputWithContext(context.Background())
}

func (i *NatGateway) ToNatGatewayOutputWithContext(ctx context.Context) NatGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NatGatewayOutput)
}

type NatGatewayOutput struct{ *pulumi.OutputState }

func (NatGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NatGateway)(nil)).Elem()
}

func (o NatGatewayOutput) ToNatGatewayOutput() NatGatewayOutput {
	return o
}

func (o NatGatewayOutput) ToNatGatewayOutputWithContext(ctx context.Context) NatGatewayOutput {
	return o
}

func (o NatGatewayOutput) AllocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGateway) pulumi.StringPtrOutput { return v.AllocationId }).(pulumi.StringPtrOutput)
}

func (o NatGatewayOutput) ConnectivityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGateway) pulumi.StringPtrOutput { return v.ConnectivityType }).(pulumi.StringPtrOutput)
}

func (o NatGatewayOutput) MaxDrainDurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatGateway) pulumi.IntPtrOutput { return v.MaxDrainDurationSeconds }).(pulumi.IntPtrOutput)
}

func (o NatGatewayOutput) NatGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *NatGateway) pulumi.StringOutput { return v.NatGatewayId }).(pulumi.StringOutput)
}

func (o NatGatewayOutput) PrivateIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NatGateway) pulumi.StringPtrOutput { return v.PrivateIpAddress }).(pulumi.StringPtrOutput)
}

func (o NatGatewayOutput) SecondaryAllocationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatGateway) pulumi.StringArrayOutput { return v.SecondaryAllocationIds }).(pulumi.StringArrayOutput)
}

func (o NatGatewayOutput) SecondaryPrivateIpAddressCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NatGateway) pulumi.IntPtrOutput { return v.SecondaryPrivateIpAddressCount }).(pulumi.IntPtrOutput)
}

func (o NatGatewayOutput) SecondaryPrivateIpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NatGateway) pulumi.StringArrayOutput { return v.SecondaryPrivateIpAddresses }).(pulumi.StringArrayOutput)
}

func (o NatGatewayOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *NatGateway) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

func (o NatGatewayOutput) Tags() NatGatewayTagArrayOutput {
	return o.ApplyT(func(v *NatGateway) NatGatewayTagArrayOutput { return v.Tags }).(NatGatewayTagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NatGatewayInput)(nil)).Elem(), &NatGateway{})
	pulumi.RegisterOutputType(NatGatewayOutput{})
}
