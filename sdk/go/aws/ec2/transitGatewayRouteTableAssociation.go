// Code generated by the Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::TransitGatewayRouteTableAssociation
type TransitGatewayRouteTableAssociation struct {
	pulumi.CustomResourceState

	// The ID of transit gateway attachment.
	TransitGatewayAttachmentId pulumi.StringOutput `pulumi:"transitGatewayAttachmentId"`
	// The ID of transit gateway route table.
	TransitGatewayRouteTableId pulumi.StringOutput `pulumi:"transitGatewayRouteTableId"`
}

// NewTransitGatewayRouteTableAssociation registers a new resource with the given unique name, arguments, and options.
func NewTransitGatewayRouteTableAssociation(ctx *pulumi.Context,
	name string, args *TransitGatewayRouteTableAssociationArgs, opts ...pulumi.ResourceOption) (*TransitGatewayRouteTableAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TransitGatewayAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayAttachmentId'")
	}
	if args.TransitGatewayRouteTableId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayRouteTableId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"transitGatewayAttachmentId",
		"transitGatewayRouteTableId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransitGatewayRouteTableAssociation
	err := ctx.RegisterResource("aws-native:ec2:TransitGatewayRouteTableAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGatewayRouteTableAssociation gets an existing TransitGatewayRouteTableAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGatewayRouteTableAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayRouteTableAssociationState, opts ...pulumi.ResourceOption) (*TransitGatewayRouteTableAssociation, error) {
	var resource TransitGatewayRouteTableAssociation
	err := ctx.ReadResource("aws-native:ec2:TransitGatewayRouteTableAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGatewayRouteTableAssociation resources.
type transitGatewayRouteTableAssociationState struct {
}

type TransitGatewayRouteTableAssociationState struct {
}

func (TransitGatewayRouteTableAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayRouteTableAssociationState)(nil)).Elem()
}

type transitGatewayRouteTableAssociationArgs struct {
	// The ID of transit gateway attachment.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
	// The ID of transit gateway route table.
	TransitGatewayRouteTableId string `pulumi:"transitGatewayRouteTableId"`
}

// The set of arguments for constructing a TransitGatewayRouteTableAssociation resource.
type TransitGatewayRouteTableAssociationArgs struct {
	// The ID of transit gateway attachment.
	TransitGatewayAttachmentId pulumi.StringInput
	// The ID of transit gateway route table.
	TransitGatewayRouteTableId pulumi.StringInput
}

func (TransitGatewayRouteTableAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayRouteTableAssociationArgs)(nil)).Elem()
}

type TransitGatewayRouteTableAssociationInput interface {
	pulumi.Input

	ToTransitGatewayRouteTableAssociationOutput() TransitGatewayRouteTableAssociationOutput
	ToTransitGatewayRouteTableAssociationOutputWithContext(ctx context.Context) TransitGatewayRouteTableAssociationOutput
}

func (*TransitGatewayRouteTableAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayRouteTableAssociation)(nil)).Elem()
}

func (i *TransitGatewayRouteTableAssociation) ToTransitGatewayRouteTableAssociationOutput() TransitGatewayRouteTableAssociationOutput {
	return i.ToTransitGatewayRouteTableAssociationOutputWithContext(context.Background())
}

func (i *TransitGatewayRouteTableAssociation) ToTransitGatewayRouteTableAssociationOutputWithContext(ctx context.Context) TransitGatewayRouteTableAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayRouteTableAssociationOutput)
}

type TransitGatewayRouteTableAssociationOutput struct{ *pulumi.OutputState }

func (TransitGatewayRouteTableAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayRouteTableAssociation)(nil)).Elem()
}

func (o TransitGatewayRouteTableAssociationOutput) ToTransitGatewayRouteTableAssociationOutput() TransitGatewayRouteTableAssociationOutput {
	return o
}

func (o TransitGatewayRouteTableAssociationOutput) ToTransitGatewayRouteTableAssociationOutputWithContext(ctx context.Context) TransitGatewayRouteTableAssociationOutput {
	return o
}

// The ID of transit gateway attachment.
func (o TransitGatewayRouteTableAssociationOutput) TransitGatewayAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitGatewayRouteTableAssociation) pulumi.StringOutput { return v.TransitGatewayAttachmentId }).(pulumi.StringOutput)
}

// The ID of transit gateway route table.
func (o TransitGatewayRouteTableAssociationOutput) TransitGatewayRouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitGatewayRouteTableAssociation) pulumi.StringOutput { return v.TransitGatewayRouteTableId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayRouteTableAssociationInput)(nil)).Elem(), &TransitGatewayRouteTableAssociation{})
	pulumi.RegisterOutputType(TransitGatewayRouteTableAssociationOutput{})
}
