// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource Type definition for AWS::EC2::TransitGatewayConnectPeer
type TransitGatewayConnectPeer struct {
	pulumi.CustomResourceState

	// The Connect peer details.
	ConnectPeerConfiguration TransitGatewayConnectPeerConfigurationOutput `pulumi:"connectPeerConfiguration"`
	// The creation time.
	CreationTime pulumi.StringOutput `pulumi:"creationTime"`
	// The state of the Connect peer.
	State pulumi.StringOutput `pulumi:"state"`
	// The tags for the Connect Peer.
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// The ID of the Connect attachment.
	TransitGatewayAttachmentId pulumi.StringOutput `pulumi:"transitGatewayAttachmentId"`
	// The ID of the Connect peer.
	TransitGatewayConnectPeerId pulumi.StringOutput `pulumi:"transitGatewayConnectPeerId"`
}

// NewTransitGatewayConnectPeer registers a new resource with the given unique name, arguments, and options.
func NewTransitGatewayConnectPeer(ctx *pulumi.Context,
	name string, args *TransitGatewayConnectPeerArgs, opts ...pulumi.ResourceOption) (*TransitGatewayConnectPeer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectPeerConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'ConnectPeerConfiguration'")
	}
	if args.TransitGatewayAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayAttachmentId'")
	}
	replaceOnChanges := pulumi.ReplaceOnChanges([]string{
		"connectPeerConfiguration",
		"transitGatewayAttachmentId",
	})
	opts = append(opts, replaceOnChanges)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TransitGatewayConnectPeer
	err := ctx.RegisterResource("aws-native:ec2:TransitGatewayConnectPeer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGatewayConnectPeer gets an existing TransitGatewayConnectPeer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGatewayConnectPeer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayConnectPeerState, opts ...pulumi.ResourceOption) (*TransitGatewayConnectPeer, error) {
	var resource TransitGatewayConnectPeer
	err := ctx.ReadResource("aws-native:ec2:TransitGatewayConnectPeer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGatewayConnectPeer resources.
type transitGatewayConnectPeerState struct {
}

type TransitGatewayConnectPeerState struct {
}

func (TransitGatewayConnectPeerState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayConnectPeerState)(nil)).Elem()
}

type transitGatewayConnectPeerArgs struct {
	// The Connect peer details.
	ConnectPeerConfiguration TransitGatewayConnectPeerConfiguration `pulumi:"connectPeerConfiguration"`
	// The tags for the Connect Peer.
	Tags []aws.Tag `pulumi:"tags"`
	// The ID of the Connect attachment.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
}

// The set of arguments for constructing a TransitGatewayConnectPeer resource.
type TransitGatewayConnectPeerArgs struct {
	// The Connect peer details.
	ConnectPeerConfiguration TransitGatewayConnectPeerConfigurationInput
	// The tags for the Connect Peer.
	Tags aws.TagArrayInput
	// The ID of the Connect attachment.
	TransitGatewayAttachmentId pulumi.StringInput
}

func (TransitGatewayConnectPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayConnectPeerArgs)(nil)).Elem()
}

type TransitGatewayConnectPeerInput interface {
	pulumi.Input

	ToTransitGatewayConnectPeerOutput() TransitGatewayConnectPeerOutput
	ToTransitGatewayConnectPeerOutputWithContext(ctx context.Context) TransitGatewayConnectPeerOutput
}

func (*TransitGatewayConnectPeer) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayConnectPeer)(nil)).Elem()
}

func (i *TransitGatewayConnectPeer) ToTransitGatewayConnectPeerOutput() TransitGatewayConnectPeerOutput {
	return i.ToTransitGatewayConnectPeerOutputWithContext(context.Background())
}

func (i *TransitGatewayConnectPeer) ToTransitGatewayConnectPeerOutputWithContext(ctx context.Context) TransitGatewayConnectPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayConnectPeerOutput)
}

type TransitGatewayConnectPeerOutput struct{ *pulumi.OutputState }

func (TransitGatewayConnectPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransitGatewayConnectPeer)(nil)).Elem()
}

func (o TransitGatewayConnectPeerOutput) ToTransitGatewayConnectPeerOutput() TransitGatewayConnectPeerOutput {
	return o
}

func (o TransitGatewayConnectPeerOutput) ToTransitGatewayConnectPeerOutputWithContext(ctx context.Context) TransitGatewayConnectPeerOutput {
	return o
}

// The Connect peer details.
func (o TransitGatewayConnectPeerOutput) ConnectPeerConfiguration() TransitGatewayConnectPeerConfigurationOutput {
	return o.ApplyT(func(v *TransitGatewayConnectPeer) TransitGatewayConnectPeerConfigurationOutput {
		return v.ConnectPeerConfiguration
	}).(TransitGatewayConnectPeerConfigurationOutput)
}

// The creation time.
func (o TransitGatewayConnectPeerOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitGatewayConnectPeer) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

// The state of the Connect peer.
func (o TransitGatewayConnectPeerOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitGatewayConnectPeer) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The tags for the Connect Peer.
func (o TransitGatewayConnectPeerOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *TransitGatewayConnectPeer) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

// The ID of the Connect attachment.
func (o TransitGatewayConnectPeerOutput) TransitGatewayAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitGatewayConnectPeer) pulumi.StringOutput { return v.TransitGatewayAttachmentId }).(pulumi.StringOutput)
}

// The ID of the Connect peer.
func (o TransitGatewayConnectPeerOutput) TransitGatewayConnectPeerId() pulumi.StringOutput {
	return o.ApplyT(func(v *TransitGatewayConnectPeer) pulumi.StringOutput { return v.TransitGatewayConnectPeerId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TransitGatewayConnectPeerInput)(nil)).Elem(), &TransitGatewayConnectPeer{})
	pulumi.RegisterOutputType(TransitGatewayConnectPeerOutput{})
}
