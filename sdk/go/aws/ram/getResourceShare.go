// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource type definition for AWS::RAM::ResourceShare
func LookupResourceShare(ctx *pulumi.Context, args *LookupResourceShareArgs, opts ...pulumi.InvokeOption) (*LookupResourceShareResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResourceShareResult
	err := ctx.Invoke("aws-native:ram:getResourceShare", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupResourceShareArgs struct {
	// The Amazon Resource Name (ARN) of the resource share.
	Arn string `pulumi:"arn"`
}

type LookupResourceShareResult struct {
	// Specifies whether principals outside your organization in AWS Organizations can be associated with a resource share. A value of `true` lets you share with individual AWS accounts that are not in your organization. A value of `false` only has meaning if your account is a member of an AWS Organization. The default value is `true`.
	AllowExternalPrincipals *bool `pulumi:"allowExternalPrincipals"`
	// The Amazon Resource Name (ARN) of the resource share.
	Arn *string `pulumi:"arn"`
	// Specifies the name of the resource share.
	Name *string `pulumi:"name"`
	// Specifies one or more tags to attach to the resource share itself. It doesn't attach the tags to the resources associated with the resource share.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupResourceShareOutput(ctx *pulumi.Context, args LookupResourceShareOutputArgs, opts ...pulumi.InvokeOption) LookupResourceShareResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupResourceShareResultOutput, error) {
			args := v.(LookupResourceShareArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:ram:getResourceShare", args, LookupResourceShareResultOutput{}, options).(LookupResourceShareResultOutput), nil
		}).(LookupResourceShareResultOutput)
}

type LookupResourceShareOutputArgs struct {
	// The Amazon Resource Name (ARN) of the resource share.
	Arn pulumi.StringInput `pulumi:"arn"`
}

func (LookupResourceShareOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceShareArgs)(nil)).Elem()
}

type LookupResourceShareResultOutput struct{ *pulumi.OutputState }

func (LookupResourceShareResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceShareResult)(nil)).Elem()
}

func (o LookupResourceShareResultOutput) ToLookupResourceShareResultOutput() LookupResourceShareResultOutput {
	return o
}

func (o LookupResourceShareResultOutput) ToLookupResourceShareResultOutputWithContext(ctx context.Context) LookupResourceShareResultOutput {
	return o
}

// Specifies whether principals outside your organization in AWS Organizations can be associated with a resource share. A value of `true` lets you share with individual AWS accounts that are not in your organization. A value of `false` only has meaning if your account is a member of an AWS Organization. The default value is `true`.
func (o LookupResourceShareResultOutput) AllowExternalPrincipals() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupResourceShareResult) *bool { return v.AllowExternalPrincipals }).(pulumi.BoolPtrOutput)
}

// The Amazon Resource Name (ARN) of the resource share.
func (o LookupResourceShareResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResourceShareResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Specifies the name of the resource share.
func (o LookupResourceShareResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupResourceShareResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Specifies one or more tags to attach to the resource share itself. It doesn't attach the tags to the resources associated with the resource share.
func (o LookupResourceShareResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupResourceShareResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourceShareResultOutput{})
}
