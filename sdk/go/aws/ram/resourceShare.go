// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ram

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource type definition for AWS::RAM::ResourceShare
//
// ## Example Usage
// ### Example
//
// ```go
// package main
//
// import (
//
//	awsnative "github.com/pulumi/pulumi-aws-native/sdk/go/aws"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ram"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ram.NewResourceShare(ctx, "myresourceshare", &ram.ResourceShareArgs{
//				Name: pulumi.String("My Resource Share"),
//				ResourceArns: pulumi.StringArray{
//					pulumi.String("arn:aws:ec2:us-east-1:123456789012:resource-type/12345678-1234-1234-1234-12345678"),
//				},
//				Principals: pulumi.StringArray{
//					pulumi.String("210987654321"),
//				},
//				Tags: aws.TagArray{
//					&aws.TagArgs{
//						Key:   pulumi.String("Key1"),
//						Value: pulumi.String("Value1"),
//					},
//					&aws.TagArgs{
//						Key:   pulumi.String("Key2"),
//						Value: pulumi.String("Value2"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Example
//
// ```go
// package main
//
// import (
//
//	awsnative "github.com/pulumi/pulumi-aws-native/sdk/go/aws"
//	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/ram"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ram.NewResourceShare(ctx, "myresourceshare", &ram.ResourceShareArgs{
//				Name: pulumi.String("My Resource Share"),
//				ResourceArns: pulumi.StringArray{
//					pulumi.String("arn:aws:ec2:us-east-1:123456789012:resource-type/12345678-1234-1234-1234-12345678"),
//				},
//				Principals: pulumi.StringArray{
//					pulumi.String("210987654321"),
//				},
//				Tags: aws.TagArray{
//					&aws.TagArgs{
//						Key:   pulumi.String("Key1"),
//						Value: pulumi.String("Value1"),
//					},
//					&aws.TagArgs{
//						Key:   pulumi.String("Key2"),
//						Value: pulumi.String("Value2"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ResourceShare struct {
	pulumi.CustomResourceState

	// Specifies whether principals outside your organization in AWS Organizations can be associated with a resource share. A value of `true` lets you share with individual AWS accounts that are not in your organization. A value of `false` only has meaning if your account is a member of an AWS Organization. The default value is `true`.
	AllowExternalPrincipals pulumi.BoolPtrOutput `pulumi:"allowExternalPrincipals"`
	// The Amazon Resource Name (ARN) of the resource share.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Specifies the name of the resource share.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the AWS RAM permission to associate with the resource share. If you do not specify an ARN for the permission, AWS RAM automatically attaches the default version of the permission for each resource type. You can associate only one permission with each resource type included in the resource share.
	PermissionArns pulumi.StringArrayOutput `pulumi:"permissionArns"`
	// Specifies the principals to associate with the resource share. The possible values are:
	//
	// - An AWS account ID
	//
	// - An Amazon Resource Name (ARN) of an organization in AWS Organizations
	//
	// - An ARN of an organizational unit (OU) in AWS Organizations
	//
	// - An ARN of an IAM role
	//
	// - An ARN of an IAM user
	Principals pulumi.StringArrayOutput `pulumi:"principals"`
	// Specifies a list of one or more ARNs of the resources to associate with the resource share.
	ResourceArns pulumi.StringArrayOutput `pulumi:"resourceArns"`
	// Specifies from which source accounts the service principal has access to the resources in this resource share.
	Sources pulumi.StringArrayOutput `pulumi:"sources"`
	// Specifies one or more tags to attach to the resource share itself. It doesn't attach the tags to the resources associated with the resource share.
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewResourceShare registers a new resource with the given unique name, arguments, and options.
func NewResourceShare(ctx *pulumi.Context,
	name string, args *ResourceShareArgs, opts ...pulumi.ResourceOption) (*ResourceShare, error) {
	if args == nil {
		args = &ResourceShareArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResourceShare
	err := ctx.RegisterResource("aws-native:ram:ResourceShare", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceShare gets an existing ResourceShare resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceShare(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceShareState, opts ...pulumi.ResourceOption) (*ResourceShare, error) {
	var resource ResourceShare
	err := ctx.ReadResource("aws-native:ram:ResourceShare", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceShare resources.
type resourceShareState struct {
}

type ResourceShareState struct {
}

func (ResourceShareState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceShareState)(nil)).Elem()
}

type resourceShareArgs struct {
	// Specifies whether principals outside your organization in AWS Organizations can be associated with a resource share. A value of `true` lets you share with individual AWS accounts that are not in your organization. A value of `false` only has meaning if your account is a member of an AWS Organization. The default value is `true`.
	AllowExternalPrincipals *bool `pulumi:"allowExternalPrincipals"`
	// Specifies the name of the resource share.
	Name *string `pulumi:"name"`
	// Specifies the [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the AWS RAM permission to associate with the resource share. If you do not specify an ARN for the permission, AWS RAM automatically attaches the default version of the permission for each resource type. You can associate only one permission with each resource type included in the resource share.
	PermissionArns []string `pulumi:"permissionArns"`
	// Specifies the principals to associate with the resource share. The possible values are:
	//
	// - An AWS account ID
	//
	// - An Amazon Resource Name (ARN) of an organization in AWS Organizations
	//
	// - An ARN of an organizational unit (OU) in AWS Organizations
	//
	// - An ARN of an IAM role
	//
	// - An ARN of an IAM user
	Principals []string `pulumi:"principals"`
	// Specifies a list of one or more ARNs of the resources to associate with the resource share.
	ResourceArns []string `pulumi:"resourceArns"`
	// Specifies from which source accounts the service principal has access to the resources in this resource share.
	Sources []string `pulumi:"sources"`
	// Specifies one or more tags to attach to the resource share itself. It doesn't attach the tags to the resources associated with the resource share.
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a ResourceShare resource.
type ResourceShareArgs struct {
	// Specifies whether principals outside your organization in AWS Organizations can be associated with a resource share. A value of `true` lets you share with individual AWS accounts that are not in your organization. A value of `false` only has meaning if your account is a member of an AWS Organization. The default value is `true`.
	AllowExternalPrincipals pulumi.BoolPtrInput
	// Specifies the name of the resource share.
	Name pulumi.StringPtrInput
	// Specifies the [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the AWS RAM permission to associate with the resource share. If you do not specify an ARN for the permission, AWS RAM automatically attaches the default version of the permission for each resource type. You can associate only one permission with each resource type included in the resource share.
	PermissionArns pulumi.StringArrayInput
	// Specifies the principals to associate with the resource share. The possible values are:
	//
	// - An AWS account ID
	//
	// - An Amazon Resource Name (ARN) of an organization in AWS Organizations
	//
	// - An ARN of an organizational unit (OU) in AWS Organizations
	//
	// - An ARN of an IAM role
	//
	// - An ARN of an IAM user
	Principals pulumi.StringArrayInput
	// Specifies a list of one or more ARNs of the resources to associate with the resource share.
	ResourceArns pulumi.StringArrayInput
	// Specifies from which source accounts the service principal has access to the resources in this resource share.
	Sources pulumi.StringArrayInput
	// Specifies one or more tags to attach to the resource share itself. It doesn't attach the tags to the resources associated with the resource share.
	Tags aws.TagArrayInput
}

func (ResourceShareArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceShareArgs)(nil)).Elem()
}

type ResourceShareInput interface {
	pulumi.Input

	ToResourceShareOutput() ResourceShareOutput
	ToResourceShareOutputWithContext(ctx context.Context) ResourceShareOutput
}

func (*ResourceShare) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceShare)(nil)).Elem()
}

func (i *ResourceShare) ToResourceShareOutput() ResourceShareOutput {
	return i.ToResourceShareOutputWithContext(context.Background())
}

func (i *ResourceShare) ToResourceShareOutputWithContext(ctx context.Context) ResourceShareOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceShareOutput)
}

type ResourceShareOutput struct{ *pulumi.OutputState }

func (ResourceShareOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceShare)(nil)).Elem()
}

func (o ResourceShareOutput) ToResourceShareOutput() ResourceShareOutput {
	return o
}

func (o ResourceShareOutput) ToResourceShareOutputWithContext(ctx context.Context) ResourceShareOutput {
	return o
}

// Specifies whether principals outside your organization in AWS Organizations can be associated with a resource share. A value of `true` lets you share with individual AWS accounts that are not in your organization. A value of `false` only has meaning if your account is a member of an AWS Organization. The default value is `true`.
func (o ResourceShareOutput) AllowExternalPrincipals() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ResourceShare) pulumi.BoolPtrOutput { return v.AllowExternalPrincipals }).(pulumi.BoolPtrOutput)
}

// The Amazon Resource Name (ARN) of the resource share.
func (o ResourceShareOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceShare) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Specifies the name of the resource share.
func (o ResourceShareOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceShare) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the AWS RAM permission to associate with the resource share. If you do not specify an ARN for the permission, AWS RAM automatically attaches the default version of the permission for each resource type. You can associate only one permission with each resource type included in the resource share.
func (o ResourceShareOutput) PermissionArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceShare) pulumi.StringArrayOutput { return v.PermissionArns }).(pulumi.StringArrayOutput)
}

// Specifies the principals to associate with the resource share. The possible values are:
//
// - An AWS account ID
//
// - An Amazon Resource Name (ARN) of an organization in AWS Organizations
//
// - An ARN of an organizational unit (OU) in AWS Organizations
//
// - An ARN of an IAM role
//
// - An ARN of an IAM user
func (o ResourceShareOutput) Principals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceShare) pulumi.StringArrayOutput { return v.Principals }).(pulumi.StringArrayOutput)
}

// Specifies a list of one or more ARNs of the resources to associate with the resource share.
func (o ResourceShareOutput) ResourceArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceShare) pulumi.StringArrayOutput { return v.ResourceArns }).(pulumi.StringArrayOutput)
}

// Specifies from which source accounts the service principal has access to the resources in this resource share.
func (o ResourceShareOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceShare) pulumi.StringArrayOutput { return v.Sources }).(pulumi.StringArrayOutput)
}

// Specifies one or more tags to attach to the resource share itself. It doesn't attach the tags to the resources associated with the resource share.
func (o ResourceShareOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v *ResourceShare) aws.TagArrayOutput { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceShareInput)(nil)).Elem(), &ResourceShare{})
	pulumi.RegisterOutputType(ResourceShareOutput{})
}
