// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53recoverycontrol

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html
type SafetyRule struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-assertionrule
	AssertionRule SafetyRuleAssertionRulePtrOutput `pulumi:"assertionRule"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-controlpanelarn
	ControlPanelArn pulumi.StringOutput `pulumi:"controlPanelArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-gatingrule
	GatingRule SafetyRuleGatingRulePtrOutput `pulumi:"gatingRule"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-name
	Name pulumi.StringOutput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-ruleconfig
	RuleConfig    SafetyRuleRuleConfigOutput `pulumi:"ruleConfig"`
	SafetyRuleArn pulumi.StringOutput        `pulumi:"safetyRuleArn"`
	Status        pulumi.StringOutput        `pulumi:"status"`
}

// NewSafetyRule registers a new resource with the given unique name, arguments, and options.
func NewSafetyRule(ctx *pulumi.Context,
	name string, args *SafetyRuleArgs, opts ...pulumi.ResourceOption) (*SafetyRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ControlPanelArn == nil {
		return nil, errors.New("invalid value for required argument 'ControlPanelArn'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.RuleConfig == nil {
		return nil, errors.New("invalid value for required argument 'RuleConfig'")
	}
	var resource SafetyRule
	err := ctx.RegisterResource("aws-native:route53recoverycontrol:SafetyRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSafetyRule gets an existing SafetyRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSafetyRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SafetyRuleState, opts ...pulumi.ResourceOption) (*SafetyRule, error) {
	var resource SafetyRule
	err := ctx.ReadResource("aws-native:route53recoverycontrol:SafetyRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SafetyRule resources.
type safetyRuleState struct {
}

type SafetyRuleState struct {
}

func (SafetyRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*safetyRuleState)(nil)).Elem()
}

type safetyRuleArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-assertionrule
	AssertionRule *SafetyRuleAssertionRule `pulumi:"assertionRule"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-controlpanelarn
	ControlPanelArn string `pulumi:"controlPanelArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-gatingrule
	GatingRule *SafetyRuleGatingRule `pulumi:"gatingRule"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-name
	Name string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-ruleconfig
	RuleConfig SafetyRuleRuleConfig `pulumi:"ruleConfig"`
}

// The set of arguments for constructing a SafetyRule resource.
type SafetyRuleArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-assertionrule
	AssertionRule SafetyRuleAssertionRulePtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-controlpanelarn
	ControlPanelArn pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-gatingrule
	GatingRule SafetyRuleGatingRulePtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-name
	Name pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53recoverycontrol-safetyrule.html#cfn-route53recoverycontrol-safetyrule-ruleconfig
	RuleConfig SafetyRuleRuleConfigInput
}

func (SafetyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*safetyRuleArgs)(nil)).Elem()
}

type SafetyRuleInput interface {
	pulumi.Input

	ToSafetyRuleOutput() SafetyRuleOutput
	ToSafetyRuleOutputWithContext(ctx context.Context) SafetyRuleOutput
}

func (*SafetyRule) ElementType() reflect.Type {
	return reflect.TypeOf((*SafetyRule)(nil))
}

func (i *SafetyRule) ToSafetyRuleOutput() SafetyRuleOutput {
	return i.ToSafetyRuleOutputWithContext(context.Background())
}

func (i *SafetyRule) ToSafetyRuleOutputWithContext(ctx context.Context) SafetyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SafetyRuleOutput)
}

type SafetyRuleOutput struct{ *pulumi.OutputState }

func (SafetyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SafetyRule)(nil))
}

func (o SafetyRuleOutput) ToSafetyRuleOutput() SafetyRuleOutput {
	return o
}

func (o SafetyRuleOutput) ToSafetyRuleOutputWithContext(ctx context.Context) SafetyRuleOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SafetyRuleOutput{})
}
