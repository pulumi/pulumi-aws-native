// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotsitewise

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::IoTSiteWise::Gateway
func LookupGateway(ctx *pulumi.Context, args *LookupGatewayArgs, opts ...pulumi.InvokeOption) (*LookupGatewayResult, error) {
	var rv LookupGatewayResult
	err := ctx.Invoke("aws-native:iotsitewise:getGateway", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupGatewayArgs struct {
	// The ID of the gateway device.
	GatewayId string `pulumi:"gatewayId"`
}

type LookupGatewayResult struct {
	// A list of gateway capability summaries that each contain a namespace and status.
	GatewayCapabilitySummaries []GatewayCapabilitySummary `pulumi:"gatewayCapabilitySummaries"`
	// The ID of the gateway device.
	GatewayId *string `pulumi:"gatewayId"`
	// A unique, friendly name for the gateway.
	GatewayName *string `pulumi:"gatewayName"`
	// A list of key-value pairs that contain metadata for the gateway.
	Tags []GatewayTag `pulumi:"tags"`
}

func LookupGatewayOutput(ctx *pulumi.Context, args LookupGatewayOutputArgs, opts ...pulumi.InvokeOption) LookupGatewayResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGatewayResult, error) {
			args := v.(LookupGatewayArgs)
			r, err := LookupGateway(ctx, &args, opts...)
			return *r, err
		}).(LookupGatewayResultOutput)
}

type LookupGatewayOutputArgs struct {
	// The ID of the gateway device.
	GatewayId pulumi.StringInput `pulumi:"gatewayId"`
}

func (LookupGatewayOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayArgs)(nil)).Elem()
}

type LookupGatewayResultOutput struct{ *pulumi.OutputState }

func (LookupGatewayResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGatewayResult)(nil)).Elem()
}

func (o LookupGatewayResultOutput) ToLookupGatewayResultOutput() LookupGatewayResultOutput {
	return o
}

func (o LookupGatewayResultOutput) ToLookupGatewayResultOutputWithContext(ctx context.Context) LookupGatewayResultOutput {
	return o
}

// A list of gateway capability summaries that each contain a namespace and status.
func (o LookupGatewayResultOutput) GatewayCapabilitySummaries() GatewayCapabilitySummaryArrayOutput {
	return o.ApplyT(func(v LookupGatewayResult) []GatewayCapabilitySummary { return v.GatewayCapabilitySummaries }).(GatewayCapabilitySummaryArrayOutput)
}

// The ID of the gateway device.
func (o LookupGatewayResultOutput) GatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *string { return v.GatewayId }).(pulumi.StringPtrOutput)
}

// A unique, friendly name for the gateway.
func (o LookupGatewayResultOutput) GatewayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGatewayResult) *string { return v.GatewayName }).(pulumi.StringPtrOutput)
}

// A list of key-value pairs that contain metadata for the gateway.
func (o LookupGatewayResultOutput) Tags() GatewayTagArrayOutput {
	return o.ApplyT(func(v LookupGatewayResult) []GatewayTag { return v.Tags }).(GatewayTagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGatewayResultOutput{})
}
