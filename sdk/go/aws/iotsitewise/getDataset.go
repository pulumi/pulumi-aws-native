// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iotsitewise

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::IoTSiteWise::Dataset.
func LookupDataset(ctx *pulumi.Context, args *LookupDatasetArgs, opts ...pulumi.InvokeOption) (*LookupDatasetResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDatasetResult
	err := ctx.Invoke("aws-native:iotsitewise:getDataset", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupDatasetArgs struct {
	// The ID of the dataset.
	DatasetId string `pulumi:"datasetId"`
}

type LookupDatasetResult struct {
	// The ARN of the dataset.
	DatasetArn *string `pulumi:"datasetArn"`
	// A description about the dataset, and its functionality.
	DatasetDescription *string `pulumi:"datasetDescription"`
	// The ID of the dataset.
	DatasetId *string `pulumi:"datasetId"`
	// The name of the dataset.
	DatasetName *string `pulumi:"datasetName"`
	// The data source for the dataset.
	DatasetSource *DatasetSource `pulumi:"datasetSource"`
	// An array of key-value pairs to apply to this resource.
	Tags []aws.Tag `pulumi:"tags"`
}

func LookupDatasetOutput(ctx *pulumi.Context, args LookupDatasetOutputArgs, opts ...pulumi.InvokeOption) LookupDatasetResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupDatasetResultOutput, error) {
			args := v.(LookupDatasetArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws-native:iotsitewise:getDataset", args, LookupDatasetResultOutput{}, options).(LookupDatasetResultOutput), nil
		}).(LookupDatasetResultOutput)
}

type LookupDatasetOutputArgs struct {
	// The ID of the dataset.
	DatasetId pulumi.StringInput `pulumi:"datasetId"`
}

func (LookupDatasetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetArgs)(nil)).Elem()
}

type LookupDatasetResultOutput struct{ *pulumi.OutputState }

func (LookupDatasetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDatasetResult)(nil)).Elem()
}

func (o LookupDatasetResultOutput) ToLookupDatasetResultOutput() LookupDatasetResultOutput {
	return o
}

func (o LookupDatasetResultOutput) ToLookupDatasetResultOutputWithContext(ctx context.Context) LookupDatasetResultOutput {
	return o
}

// The ARN of the dataset.
func (o LookupDatasetResultOutput) DatasetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.DatasetArn }).(pulumi.StringPtrOutput)
}

// A description about the dataset, and its functionality.
func (o LookupDatasetResultOutput) DatasetDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.DatasetDescription }).(pulumi.StringPtrOutput)
}

// The ID of the dataset.
func (o LookupDatasetResultOutput) DatasetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.DatasetId }).(pulumi.StringPtrOutput)
}

// The name of the dataset.
func (o LookupDatasetResultOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *string { return v.DatasetName }).(pulumi.StringPtrOutput)
}

// The data source for the dataset.
func (o LookupDatasetResultOutput) DatasetSource() DatasetSourcePtrOutput {
	return o.ApplyT(func(v LookupDatasetResult) *DatasetSource { return v.DatasetSource }).(DatasetSourcePtrOutput)
}

// An array of key-value pairs to apply to this resource.
func (o LookupDatasetResultOutput) Tags() aws.TagArrayOutput {
	return o.ApplyT(func(v LookupDatasetResult) []aws.Tag { return v.Tags }).(aws.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDatasetResultOutput{})
}
