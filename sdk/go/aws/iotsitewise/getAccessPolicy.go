// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotsitewise

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource schema for AWS::IoTSiteWise::AccessPolicy
func LookupAccessPolicy(ctx *pulumi.Context, args *LookupAccessPolicyArgs, opts ...pulumi.InvokeOption) (*LookupAccessPolicyResult, error) {
	var rv LookupAccessPolicyResult
	err := ctx.Invoke("aws-native:iotsitewise:getAccessPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

type LookupAccessPolicyArgs struct {
	// The ID of the access policy.
	AccessPolicyId string `pulumi:"accessPolicyId"`
}

type LookupAccessPolicyResult struct {
	// The ARN of the access policy.
	AccessPolicyArn *string `pulumi:"accessPolicyArn"`
	// The ID of the access policy.
	AccessPolicyId *string `pulumi:"accessPolicyId"`
	// The identity for this access policy. Choose either a user or a group but not both.
	AccessPolicyIdentity *AccessPolicyIdentity `pulumi:"accessPolicyIdentity"`
	// The permission level for this access policy. Valid values are ADMINISTRATOR or VIEWER.
	AccessPolicyPermission *string `pulumi:"accessPolicyPermission"`
	// The AWS IoT SiteWise Monitor resource for this access policy. Choose either portal or project but not both.
	AccessPolicyResource *AccessPolicyResource `pulumi:"accessPolicyResource"`
}

func LookupAccessPolicyOutput(ctx *pulumi.Context, args LookupAccessPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupAccessPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccessPolicyResult, error) {
			args := v.(LookupAccessPolicyArgs)
			r, err := LookupAccessPolicy(ctx, &args, opts...)
			return *r, err
		}).(LookupAccessPolicyResultOutput)
}

type LookupAccessPolicyOutputArgs struct {
	// The ID of the access policy.
	AccessPolicyId pulumi.StringInput `pulumi:"accessPolicyId"`
}

func (LookupAccessPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessPolicyArgs)(nil)).Elem()
}

type LookupAccessPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupAccessPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessPolicyResult)(nil)).Elem()
}

func (o LookupAccessPolicyResultOutput) ToLookupAccessPolicyResultOutput() LookupAccessPolicyResultOutput {
	return o
}

func (o LookupAccessPolicyResultOutput) ToLookupAccessPolicyResultOutputWithContext(ctx context.Context) LookupAccessPolicyResultOutput {
	return o
}

// The ARN of the access policy.
func (o LookupAccessPolicyResultOutput) AccessPolicyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccessPolicyResult) *string { return v.AccessPolicyArn }).(pulumi.StringPtrOutput)
}

// The ID of the access policy.
func (o LookupAccessPolicyResultOutput) AccessPolicyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccessPolicyResult) *string { return v.AccessPolicyId }).(pulumi.StringPtrOutput)
}

// The identity for this access policy. Choose either a user or a group but not both.
func (o LookupAccessPolicyResultOutput) AccessPolicyIdentity() AccessPolicyIdentityPtrOutput {
	return o.ApplyT(func(v LookupAccessPolicyResult) *AccessPolicyIdentity { return v.AccessPolicyIdentity }).(AccessPolicyIdentityPtrOutput)
}

// The permission level for this access policy. Valid values are ADMINISTRATOR or VIEWER.
func (o LookupAccessPolicyResultOutput) AccessPolicyPermission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccessPolicyResult) *string { return v.AccessPolicyPermission }).(pulumi.StringPtrOutput)
}

// The AWS IoT SiteWise Monitor resource for this access policy. Choose either portal or project but not both.
func (o LookupAccessPolicyResultOutput) AccessPolicyResource() AccessPolicyResourcePtrOutput {
	return o.ApplyT(func(v LookupAccessPolicyResult) *AccessPolicyResource { return v.AccessPolicyResource }).(AccessPolicyResourcePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccessPolicyResultOutput{})
}
