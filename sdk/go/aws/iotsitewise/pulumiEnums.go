// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iotsitewise

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The MQTT notification state (ENABLED or DISABLED) for this asset property.
type AssetAssetPropertyNotificationState string

const (
	AssetAssetPropertyNotificationStateEnabled  = AssetAssetPropertyNotificationState("ENABLED")
	AssetAssetPropertyNotificationStateDisabled = AssetAssetPropertyNotificationState("DISABLED")
)

func (AssetAssetPropertyNotificationState) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetAssetPropertyNotificationState)(nil)).Elem()
}

func (e AssetAssetPropertyNotificationState) ToAssetAssetPropertyNotificationStateOutput() AssetAssetPropertyNotificationStateOutput {
	return pulumi.ToOutput(e).(AssetAssetPropertyNotificationStateOutput)
}

func (e AssetAssetPropertyNotificationState) ToAssetAssetPropertyNotificationStateOutputWithContext(ctx context.Context) AssetAssetPropertyNotificationStateOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssetAssetPropertyNotificationStateOutput)
}

func (e AssetAssetPropertyNotificationState) ToAssetAssetPropertyNotificationStatePtrOutput() AssetAssetPropertyNotificationStatePtrOutput {
	return e.ToAssetAssetPropertyNotificationStatePtrOutputWithContext(context.Background())
}

func (e AssetAssetPropertyNotificationState) ToAssetAssetPropertyNotificationStatePtrOutputWithContext(ctx context.Context) AssetAssetPropertyNotificationStatePtrOutput {
	return AssetAssetPropertyNotificationState(e).ToAssetAssetPropertyNotificationStateOutputWithContext(ctx).ToAssetAssetPropertyNotificationStatePtrOutputWithContext(ctx)
}

func (e AssetAssetPropertyNotificationState) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssetAssetPropertyNotificationState) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssetAssetPropertyNotificationState) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssetAssetPropertyNotificationState) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssetAssetPropertyNotificationStateOutput struct{ *pulumi.OutputState }

func (AssetAssetPropertyNotificationStateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetAssetPropertyNotificationState)(nil)).Elem()
}

func (o AssetAssetPropertyNotificationStateOutput) ToAssetAssetPropertyNotificationStateOutput() AssetAssetPropertyNotificationStateOutput {
	return o
}

func (o AssetAssetPropertyNotificationStateOutput) ToAssetAssetPropertyNotificationStateOutputWithContext(ctx context.Context) AssetAssetPropertyNotificationStateOutput {
	return o
}

func (o AssetAssetPropertyNotificationStateOutput) ToAssetAssetPropertyNotificationStatePtrOutput() AssetAssetPropertyNotificationStatePtrOutput {
	return o.ToAssetAssetPropertyNotificationStatePtrOutputWithContext(context.Background())
}

func (o AssetAssetPropertyNotificationStateOutput) ToAssetAssetPropertyNotificationStatePtrOutputWithContext(ctx context.Context) AssetAssetPropertyNotificationStatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssetAssetPropertyNotificationState) *AssetAssetPropertyNotificationState {
		return &v
	}).(AssetAssetPropertyNotificationStatePtrOutput)
}

func (o AssetAssetPropertyNotificationStateOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssetAssetPropertyNotificationStateOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssetAssetPropertyNotificationState) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssetAssetPropertyNotificationStateOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssetAssetPropertyNotificationStateOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssetAssetPropertyNotificationState) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssetAssetPropertyNotificationStatePtrOutput struct{ *pulumi.OutputState }

func (AssetAssetPropertyNotificationStatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssetAssetPropertyNotificationState)(nil)).Elem()
}

func (o AssetAssetPropertyNotificationStatePtrOutput) ToAssetAssetPropertyNotificationStatePtrOutput() AssetAssetPropertyNotificationStatePtrOutput {
	return o
}

func (o AssetAssetPropertyNotificationStatePtrOutput) ToAssetAssetPropertyNotificationStatePtrOutputWithContext(ctx context.Context) AssetAssetPropertyNotificationStatePtrOutput {
	return o
}

func (o AssetAssetPropertyNotificationStatePtrOutput) Elem() AssetAssetPropertyNotificationStateOutput {
	return o.ApplyT(func(v *AssetAssetPropertyNotificationState) AssetAssetPropertyNotificationState {
		if v != nil {
			return *v
		}
		var ret AssetAssetPropertyNotificationState
		return ret
	}).(AssetAssetPropertyNotificationStateOutput)
}

func (o AssetAssetPropertyNotificationStatePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssetAssetPropertyNotificationStatePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssetAssetPropertyNotificationState) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssetAssetPropertyNotificationStateInput is an input type that accepts AssetAssetPropertyNotificationStateArgs and AssetAssetPropertyNotificationStateOutput values.
// You can construct a concrete instance of `AssetAssetPropertyNotificationStateInput` via:
//
//          AssetAssetPropertyNotificationStateArgs{...}
type AssetAssetPropertyNotificationStateInput interface {
	pulumi.Input

	ToAssetAssetPropertyNotificationStateOutput() AssetAssetPropertyNotificationStateOutput
	ToAssetAssetPropertyNotificationStateOutputWithContext(context.Context) AssetAssetPropertyNotificationStateOutput
}

var assetAssetPropertyNotificationStatePtrType = reflect.TypeOf((**AssetAssetPropertyNotificationState)(nil)).Elem()

type AssetAssetPropertyNotificationStatePtrInput interface {
	pulumi.Input

	ToAssetAssetPropertyNotificationStatePtrOutput() AssetAssetPropertyNotificationStatePtrOutput
	ToAssetAssetPropertyNotificationStatePtrOutputWithContext(context.Context) AssetAssetPropertyNotificationStatePtrOutput
}

type assetAssetPropertyNotificationStatePtr string

func AssetAssetPropertyNotificationStatePtr(v string) AssetAssetPropertyNotificationStatePtrInput {
	return (*assetAssetPropertyNotificationStatePtr)(&v)
}

func (*assetAssetPropertyNotificationStatePtr) ElementType() reflect.Type {
	return assetAssetPropertyNotificationStatePtrType
}

func (in *assetAssetPropertyNotificationStatePtr) ToAssetAssetPropertyNotificationStatePtrOutput() AssetAssetPropertyNotificationStatePtrOutput {
	return pulumi.ToOutput(in).(AssetAssetPropertyNotificationStatePtrOutput)
}

func (in *assetAssetPropertyNotificationStatePtr) ToAssetAssetPropertyNotificationStatePtrOutputWithContext(ctx context.Context) AssetAssetPropertyNotificationStatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssetAssetPropertyNotificationStatePtrOutput)
}

type AssetModelDataType string

const (
	AssetModelDataTypeString  = AssetModelDataType("STRING")
	AssetModelDataTypeInteger = AssetModelDataType("INTEGER")
	AssetModelDataTypeDouble  = AssetModelDataType("DOUBLE")
	AssetModelDataTypeBoolean = AssetModelDataType("BOOLEAN")
	AssetModelDataTypeStruct  = AssetModelDataType("STRUCT")
)

func (AssetModelDataType) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetModelDataType)(nil)).Elem()
}

func (e AssetModelDataType) ToAssetModelDataTypeOutput() AssetModelDataTypeOutput {
	return pulumi.ToOutput(e).(AssetModelDataTypeOutput)
}

func (e AssetModelDataType) ToAssetModelDataTypeOutputWithContext(ctx context.Context) AssetModelDataTypeOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssetModelDataTypeOutput)
}

func (e AssetModelDataType) ToAssetModelDataTypePtrOutput() AssetModelDataTypePtrOutput {
	return e.ToAssetModelDataTypePtrOutputWithContext(context.Background())
}

func (e AssetModelDataType) ToAssetModelDataTypePtrOutputWithContext(ctx context.Context) AssetModelDataTypePtrOutput {
	return AssetModelDataType(e).ToAssetModelDataTypeOutputWithContext(ctx).ToAssetModelDataTypePtrOutputWithContext(ctx)
}

func (e AssetModelDataType) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssetModelDataType) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssetModelDataType) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssetModelDataType) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssetModelDataTypeOutput struct{ *pulumi.OutputState }

func (AssetModelDataTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetModelDataType)(nil)).Elem()
}

func (o AssetModelDataTypeOutput) ToAssetModelDataTypeOutput() AssetModelDataTypeOutput {
	return o
}

func (o AssetModelDataTypeOutput) ToAssetModelDataTypeOutputWithContext(ctx context.Context) AssetModelDataTypeOutput {
	return o
}

func (o AssetModelDataTypeOutput) ToAssetModelDataTypePtrOutput() AssetModelDataTypePtrOutput {
	return o.ToAssetModelDataTypePtrOutputWithContext(context.Background())
}

func (o AssetModelDataTypeOutput) ToAssetModelDataTypePtrOutputWithContext(ctx context.Context) AssetModelDataTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssetModelDataType) *AssetModelDataType {
		return &v
	}).(AssetModelDataTypePtrOutput)
}

func (o AssetModelDataTypeOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssetModelDataTypeOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssetModelDataType) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssetModelDataTypeOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssetModelDataTypeOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssetModelDataType) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssetModelDataTypePtrOutput struct{ *pulumi.OutputState }

func (AssetModelDataTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssetModelDataType)(nil)).Elem()
}

func (o AssetModelDataTypePtrOutput) ToAssetModelDataTypePtrOutput() AssetModelDataTypePtrOutput {
	return o
}

func (o AssetModelDataTypePtrOutput) ToAssetModelDataTypePtrOutputWithContext(ctx context.Context) AssetModelDataTypePtrOutput {
	return o
}

func (o AssetModelDataTypePtrOutput) Elem() AssetModelDataTypeOutput {
	return o.ApplyT(func(v *AssetModelDataType) AssetModelDataType {
		if v != nil {
			return *v
		}
		var ret AssetModelDataType
		return ret
	}).(AssetModelDataTypeOutput)
}

func (o AssetModelDataTypePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssetModelDataTypePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssetModelDataType) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssetModelDataTypeInput is an input type that accepts AssetModelDataTypeArgs and AssetModelDataTypeOutput values.
// You can construct a concrete instance of `AssetModelDataTypeInput` via:
//
//          AssetModelDataTypeArgs{...}
type AssetModelDataTypeInput interface {
	pulumi.Input

	ToAssetModelDataTypeOutput() AssetModelDataTypeOutput
	ToAssetModelDataTypeOutputWithContext(context.Context) AssetModelDataTypeOutput
}

var assetModelDataTypePtrType = reflect.TypeOf((**AssetModelDataType)(nil)).Elem()

type AssetModelDataTypePtrInput interface {
	pulumi.Input

	ToAssetModelDataTypePtrOutput() AssetModelDataTypePtrOutput
	ToAssetModelDataTypePtrOutputWithContext(context.Context) AssetModelDataTypePtrOutput
}

type assetModelDataTypePtr string

func AssetModelDataTypePtr(v string) AssetModelDataTypePtrInput {
	return (*assetModelDataTypePtr)(&v)
}

func (*assetModelDataTypePtr) ElementType() reflect.Type {
	return assetModelDataTypePtrType
}

func (in *assetModelDataTypePtr) ToAssetModelDataTypePtrOutput() AssetModelDataTypePtrOutput {
	return pulumi.ToOutput(in).(AssetModelDataTypePtrOutput)
}

func (in *assetModelDataTypePtr) ToAssetModelDataTypePtrOutputWithContext(ctx context.Context) AssetModelDataTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssetModelDataTypePtrOutput)
}

type AssetModelDataTypeSpec string

const (
	AssetModelDataTypeSpecAwsalarmState = AssetModelDataTypeSpec("AWS/ALARM_STATE")
)

func (AssetModelDataTypeSpec) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetModelDataTypeSpec)(nil)).Elem()
}

func (e AssetModelDataTypeSpec) ToAssetModelDataTypeSpecOutput() AssetModelDataTypeSpecOutput {
	return pulumi.ToOutput(e).(AssetModelDataTypeSpecOutput)
}

func (e AssetModelDataTypeSpec) ToAssetModelDataTypeSpecOutputWithContext(ctx context.Context) AssetModelDataTypeSpecOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssetModelDataTypeSpecOutput)
}

func (e AssetModelDataTypeSpec) ToAssetModelDataTypeSpecPtrOutput() AssetModelDataTypeSpecPtrOutput {
	return e.ToAssetModelDataTypeSpecPtrOutputWithContext(context.Background())
}

func (e AssetModelDataTypeSpec) ToAssetModelDataTypeSpecPtrOutputWithContext(ctx context.Context) AssetModelDataTypeSpecPtrOutput {
	return AssetModelDataTypeSpec(e).ToAssetModelDataTypeSpecOutputWithContext(ctx).ToAssetModelDataTypeSpecPtrOutputWithContext(ctx)
}

func (e AssetModelDataTypeSpec) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssetModelDataTypeSpec) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssetModelDataTypeSpec) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssetModelDataTypeSpec) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssetModelDataTypeSpecOutput struct{ *pulumi.OutputState }

func (AssetModelDataTypeSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetModelDataTypeSpec)(nil)).Elem()
}

func (o AssetModelDataTypeSpecOutput) ToAssetModelDataTypeSpecOutput() AssetModelDataTypeSpecOutput {
	return o
}

func (o AssetModelDataTypeSpecOutput) ToAssetModelDataTypeSpecOutputWithContext(ctx context.Context) AssetModelDataTypeSpecOutput {
	return o
}

func (o AssetModelDataTypeSpecOutput) ToAssetModelDataTypeSpecPtrOutput() AssetModelDataTypeSpecPtrOutput {
	return o.ToAssetModelDataTypeSpecPtrOutputWithContext(context.Background())
}

func (o AssetModelDataTypeSpecOutput) ToAssetModelDataTypeSpecPtrOutputWithContext(ctx context.Context) AssetModelDataTypeSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssetModelDataTypeSpec) *AssetModelDataTypeSpec {
		return &v
	}).(AssetModelDataTypeSpecPtrOutput)
}

func (o AssetModelDataTypeSpecOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssetModelDataTypeSpecOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssetModelDataTypeSpec) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssetModelDataTypeSpecOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssetModelDataTypeSpecOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssetModelDataTypeSpec) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssetModelDataTypeSpecPtrOutput struct{ *pulumi.OutputState }

func (AssetModelDataTypeSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssetModelDataTypeSpec)(nil)).Elem()
}

func (o AssetModelDataTypeSpecPtrOutput) ToAssetModelDataTypeSpecPtrOutput() AssetModelDataTypeSpecPtrOutput {
	return o
}

func (o AssetModelDataTypeSpecPtrOutput) ToAssetModelDataTypeSpecPtrOutputWithContext(ctx context.Context) AssetModelDataTypeSpecPtrOutput {
	return o
}

func (o AssetModelDataTypeSpecPtrOutput) Elem() AssetModelDataTypeSpecOutput {
	return o.ApplyT(func(v *AssetModelDataTypeSpec) AssetModelDataTypeSpec {
		if v != nil {
			return *v
		}
		var ret AssetModelDataTypeSpec
		return ret
	}).(AssetModelDataTypeSpecOutput)
}

func (o AssetModelDataTypeSpecPtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssetModelDataTypeSpecPtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssetModelDataTypeSpec) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssetModelDataTypeSpecInput is an input type that accepts AssetModelDataTypeSpecArgs and AssetModelDataTypeSpecOutput values.
// You can construct a concrete instance of `AssetModelDataTypeSpecInput` via:
//
//          AssetModelDataTypeSpecArgs{...}
type AssetModelDataTypeSpecInput interface {
	pulumi.Input

	ToAssetModelDataTypeSpecOutput() AssetModelDataTypeSpecOutput
	ToAssetModelDataTypeSpecOutputWithContext(context.Context) AssetModelDataTypeSpecOutput
}

var assetModelDataTypeSpecPtrType = reflect.TypeOf((**AssetModelDataTypeSpec)(nil)).Elem()

type AssetModelDataTypeSpecPtrInput interface {
	pulumi.Input

	ToAssetModelDataTypeSpecPtrOutput() AssetModelDataTypeSpecPtrOutput
	ToAssetModelDataTypeSpecPtrOutputWithContext(context.Context) AssetModelDataTypeSpecPtrOutput
}

type assetModelDataTypeSpecPtr string

func AssetModelDataTypeSpecPtr(v string) AssetModelDataTypeSpecPtrInput {
	return (*assetModelDataTypeSpecPtr)(&v)
}

func (*assetModelDataTypeSpecPtr) ElementType() reflect.Type {
	return assetModelDataTypeSpecPtrType
}

func (in *assetModelDataTypeSpecPtr) ToAssetModelDataTypeSpecPtrOutput() AssetModelDataTypeSpecPtrOutput {
	return pulumi.ToOutput(in).(AssetModelDataTypeSpecPtrOutput)
}

func (in *assetModelDataTypeSpecPtr) ToAssetModelDataTypeSpecPtrOutputWithContext(ctx context.Context) AssetModelDataTypeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssetModelDataTypeSpecPtrOutput)
}

type AssetModelTypeName string

const (
	AssetModelTypeNameMeasurement = AssetModelTypeName("Measurement")
	AssetModelTypeNameAttribute   = AssetModelTypeName("Attribute")
	AssetModelTypeNameTransform   = AssetModelTypeName("Transform")
	AssetModelTypeNameMetric      = AssetModelTypeName("Metric")
)

func (AssetModelTypeName) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetModelTypeName)(nil)).Elem()
}

func (e AssetModelTypeName) ToAssetModelTypeNameOutput() AssetModelTypeNameOutput {
	return pulumi.ToOutput(e).(AssetModelTypeNameOutput)
}

func (e AssetModelTypeName) ToAssetModelTypeNameOutputWithContext(ctx context.Context) AssetModelTypeNameOutput {
	return pulumi.ToOutputWithContext(ctx, e).(AssetModelTypeNameOutput)
}

func (e AssetModelTypeName) ToAssetModelTypeNamePtrOutput() AssetModelTypeNamePtrOutput {
	return e.ToAssetModelTypeNamePtrOutputWithContext(context.Background())
}

func (e AssetModelTypeName) ToAssetModelTypeNamePtrOutputWithContext(ctx context.Context) AssetModelTypeNamePtrOutput {
	return AssetModelTypeName(e).ToAssetModelTypeNameOutputWithContext(ctx).ToAssetModelTypeNamePtrOutputWithContext(ctx)
}

func (e AssetModelTypeName) ToStringOutput() pulumi.StringOutput {
	return pulumi.ToOutput(pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssetModelTypeName) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return pulumi.ToOutputWithContext(ctx, pulumi.String(e)).(pulumi.StringOutput)
}

func (e AssetModelTypeName) ToStringPtrOutput() pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringPtrOutputWithContext(context.Background())
}

func (e AssetModelTypeName) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return pulumi.String(e).ToStringOutputWithContext(ctx).ToStringPtrOutputWithContext(ctx)
}

type AssetModelTypeNameOutput struct{ *pulumi.OutputState }

func (AssetModelTypeNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssetModelTypeName)(nil)).Elem()
}

func (o AssetModelTypeNameOutput) ToAssetModelTypeNameOutput() AssetModelTypeNameOutput {
	return o
}

func (o AssetModelTypeNameOutput) ToAssetModelTypeNameOutputWithContext(ctx context.Context) AssetModelTypeNameOutput {
	return o
}

func (o AssetModelTypeNameOutput) ToAssetModelTypeNamePtrOutput() AssetModelTypeNamePtrOutput {
	return o.ToAssetModelTypeNamePtrOutputWithContext(context.Background())
}

func (o AssetModelTypeNameOutput) ToAssetModelTypeNamePtrOutputWithContext(ctx context.Context) AssetModelTypeNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AssetModelTypeName) *AssetModelTypeName {
		return &v
	}).(AssetModelTypeNamePtrOutput)
}

func (o AssetModelTypeNameOutput) ToStringOutput() pulumi.StringOutput {
	return o.ToStringOutputWithContext(context.Background())
}

func (o AssetModelTypeNameOutput) ToStringOutputWithContext(ctx context.Context) pulumi.StringOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssetModelTypeName) string {
		return string(e)
	}).(pulumi.StringOutput)
}

func (o AssetModelTypeNameOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssetModelTypeNameOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e AssetModelTypeName) *string {
		v := string(e)
		return &v
	}).(pulumi.StringPtrOutput)
}

type AssetModelTypeNamePtrOutput struct{ *pulumi.OutputState }

func (AssetModelTypeNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssetModelTypeName)(nil)).Elem()
}

func (o AssetModelTypeNamePtrOutput) ToAssetModelTypeNamePtrOutput() AssetModelTypeNamePtrOutput {
	return o
}

func (o AssetModelTypeNamePtrOutput) ToAssetModelTypeNamePtrOutputWithContext(ctx context.Context) AssetModelTypeNamePtrOutput {
	return o
}

func (o AssetModelTypeNamePtrOutput) Elem() AssetModelTypeNameOutput {
	return o.ApplyT(func(v *AssetModelTypeName) AssetModelTypeName {
		if v != nil {
			return *v
		}
		var ret AssetModelTypeName
		return ret
	}).(AssetModelTypeNameOutput)
}

func (o AssetModelTypeNamePtrOutput) ToStringPtrOutput() pulumi.StringPtrOutput {
	return o.ToStringPtrOutputWithContext(context.Background())
}

func (o AssetModelTypeNamePtrOutput) ToStringPtrOutputWithContext(ctx context.Context) pulumi.StringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, e *AssetModelTypeName) *string {
		if e == nil {
			return nil
		}
		v := string(*e)
		return &v
	}).(pulumi.StringPtrOutput)
}

// AssetModelTypeNameInput is an input type that accepts AssetModelTypeNameArgs and AssetModelTypeNameOutput values.
// You can construct a concrete instance of `AssetModelTypeNameInput` via:
//
//          AssetModelTypeNameArgs{...}
type AssetModelTypeNameInput interface {
	pulumi.Input

	ToAssetModelTypeNameOutput() AssetModelTypeNameOutput
	ToAssetModelTypeNameOutputWithContext(context.Context) AssetModelTypeNameOutput
}

var assetModelTypeNamePtrType = reflect.TypeOf((**AssetModelTypeName)(nil)).Elem()

type AssetModelTypeNamePtrInput interface {
	pulumi.Input

	ToAssetModelTypeNamePtrOutput() AssetModelTypeNamePtrOutput
	ToAssetModelTypeNamePtrOutputWithContext(context.Context) AssetModelTypeNamePtrOutput
}

type assetModelTypeNamePtr string

func AssetModelTypeNamePtr(v string) AssetModelTypeNamePtrInput {
	return (*assetModelTypeNamePtr)(&v)
}

func (*assetModelTypeNamePtr) ElementType() reflect.Type {
	return assetModelTypeNamePtrType
}

func (in *assetModelTypeNamePtr) ToAssetModelTypeNamePtrOutput() AssetModelTypeNamePtrOutput {
	return pulumi.ToOutput(in).(AssetModelTypeNamePtrOutput)
}

func (in *assetModelTypeNamePtr) ToAssetModelTypeNamePtrOutputWithContext(ctx context.Context) AssetModelTypeNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, in).(AssetModelTypeNamePtrOutput)
}

func init() {
	pulumi.RegisterOutputType(AssetAssetPropertyNotificationStateOutput{})
	pulumi.RegisterOutputType(AssetAssetPropertyNotificationStatePtrOutput{})
	pulumi.RegisterOutputType(AssetModelDataTypeOutput{})
	pulumi.RegisterOutputType(AssetModelDataTypePtrOutput{})
	pulumi.RegisterOutputType(AssetModelDataTypeSpecOutput{})
	pulumi.RegisterOutputType(AssetModelDataTypeSpecPtrOutput{})
	pulumi.RegisterOutputType(AssetModelTypeNameOutput{})
	pulumi.RegisterOutputType(AssetModelTypeNamePtrOutput{})
}
