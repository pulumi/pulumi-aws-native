// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3objectlambda

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html
type AccessPointPolicy struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html#cfn-s3objectlambda-accesspointpolicy-objectlambdaaccesspoint
	ObjectLambdaAccessPoint pulumi.StringOutput `pulumi:"objectLambdaAccessPoint"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html#cfn-s3objectlambda-accesspointpolicy-policydocument
	PolicyDocument pulumi.AnyOutput `pulumi:"policyDocument"`
}

// NewAccessPointPolicy registers a new resource with the given unique name, arguments, and options.
func NewAccessPointPolicy(ctx *pulumi.Context,
	name string, args *AccessPointPolicyArgs, opts ...pulumi.ResourceOption) (*AccessPointPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ObjectLambdaAccessPoint == nil {
		return nil, errors.New("invalid value for required argument 'ObjectLambdaAccessPoint'")
	}
	if args.PolicyDocument == nil {
		return nil, errors.New("invalid value for required argument 'PolicyDocument'")
	}
	var resource AccessPointPolicy
	err := ctx.RegisterResource("aws-native:s3objectlambda:AccessPointPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccessPointPolicy gets an existing AccessPointPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccessPointPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccessPointPolicyState, opts ...pulumi.ResourceOption) (*AccessPointPolicy, error) {
	var resource AccessPointPolicy
	err := ctx.ReadResource("aws-native:s3objectlambda:AccessPointPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccessPointPolicy resources.
type accessPointPolicyState struct {
}

type AccessPointPolicyState struct {
}

func (AccessPointPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*accessPointPolicyState)(nil)).Elem()
}

type accessPointPolicyArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html#cfn-s3objectlambda-accesspointpolicy-objectlambdaaccesspoint
	ObjectLambdaAccessPoint string `pulumi:"objectLambdaAccessPoint"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html#cfn-s3objectlambda-accesspointpolicy-policydocument
	PolicyDocument interface{} `pulumi:"policyDocument"`
}

// The set of arguments for constructing a AccessPointPolicy resource.
type AccessPointPolicyArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html#cfn-s3objectlambda-accesspointpolicy-objectlambdaaccesspoint
	ObjectLambdaAccessPoint pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3objectlambda-accesspointpolicy.html#cfn-s3objectlambda-accesspointpolicy-policydocument
	PolicyDocument pulumi.Input
}

func (AccessPointPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accessPointPolicyArgs)(nil)).Elem()
}

type AccessPointPolicyInput interface {
	pulumi.Input

	ToAccessPointPolicyOutput() AccessPointPolicyOutput
	ToAccessPointPolicyOutputWithContext(ctx context.Context) AccessPointPolicyOutput
}

func (*AccessPointPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointPolicy)(nil))
}

func (i *AccessPointPolicy) ToAccessPointPolicyOutput() AccessPointPolicyOutput {
	return i.ToAccessPointPolicyOutputWithContext(context.Background())
}

func (i *AccessPointPolicy) ToAccessPointPolicyOutputWithContext(ctx context.Context) AccessPointPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointPolicyOutput)
}

type AccessPointPolicyOutput struct{ *pulumi.OutputState }

func (AccessPointPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointPolicy)(nil))
}

func (o AccessPointPolicyOutput) ToAccessPointPolicyOutput() AccessPointPolicyOutput {
	return o
}

func (o AccessPointPolicyOutput) ToAccessPointPolicyOutputWithContext(ctx context.Context) AccessPointPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AccessPointPolicyOutput{})
}
